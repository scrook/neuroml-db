// Cell: cIR216_L5_NBC_ded84149de_0_0
/*
{
  "id" : "cIR216_L5_NBC_ded84149de_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -9.96816, -8.14, 3.62", "-1.55142, -9.96816, -8.14, 3.62", "-1.37498, -12.6754, -8.14, 3.62", "-1.22355, -14.9991, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 4.18709, -3.81, 1.24", "6.41346, 4.31965, -3.52111, 1.24", "9.57119, 4.59865, -2.67032, 1.24", "12.5516, 4.86197, -1.86733, 1.24", "15.5243, 5.12461, -1.06639, 1.24", "21.6334, 5.66436, 0.579603, 1.24", "26.34, 6.08019, 1.84771, 1.24", "28.3129, 6.1875, 2.44764, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 4.92509, -1.31, 0.68", "-8.56831, 4.85759, -1.4057, 0.68", "-10.4896, 4.83437, -1.53186, 0.68", "-13.5714, 5.10941, -1.81564, 0.68", "-15.7625, 5.52624, -2.03875, 0.68", "-17.1094, 5.91953, -2.1744, 0.68", "-19.3991, 6.68826, -2.37213, 0.68", "-21.7491, 7.64246, -2.6085, 0.68", "-24.7622, 9.13338, -2.92656, 0.68", "-26.8477, 10.3884, -3.18905, 0.68", "-29.8312, 12.3835, -3.7221, 0.68", "-32.5092, 14.3239, -4.40093, 0.68", "-34.2803, 15.7285, -5.00302, 0.68", "-35.9317, 17.1854, -5.69018, 0.68", "-37.0966, 18.2735, -6.21964, 0.68", "-39.3048, 20.2857, -7.21955, 0.68", "-40.9283, 21.7708, -8.03151, 0.68", "-41.6772, 22.4696, -8.39755, 0.68", "-44.3464, 24.8912, -9.72424, 0.68", "-46.4646, 26.7843, -10.8258, 0.68", "-49.4738, 29.3676, -12.2869, 0.68", "-51.5214, 31.0847, -13.1341, 0.57", "-53.2722, 32.4741, -13.7883, 0.57", "-55.374, 34.0613, -14.6144, 0.57", "-55.8491, 34.3718, -14.8584, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -4.99691, -2.56, 1.47", "6.3424, -5.84299, -2.38739, 1.47", "9.65794, -8.04519, -1.9381, 1.47", "13.677, -10.7147, -1.39349, 1.47", "16.2182, -12.4026, -1.04913, 2.6", "16.6073, -12.661, -0.996405, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31666", "-4.96601, 24.2182, 0.0, 2.31666", "-7.63332, 38.9791, 0.0, 2.31666" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.22355, -14.9991, -8.14, 0.12", "-0.39236, -15.1678, -8.05007, 0.12", "0.742125, -15.4676, -7.92598, 0.12", "1.33381, -15.6263, -7.86112, 0.45", "1.8689, -15.7624, -7.73398, 0.45", "3.90861, -16.2471, -7.2634, 0.45", "4.19716, -16.3185, -7.19815, 1.36", "5.20638, -16.5812, -6.96743, 1.02", "6.58655, -16.9421, -6.63061, 0.45", "8.67148, -17.4867, -5.84864, 0.45", "10.467, -17.9235, -4.83239, 0.45", "10.9868, -18.0259, -4.50317, 1.7", "11.91, -18.1865, -3.50438, 0.68", "13.1108, -18.3966, -1.82389, 0.57", "14.9194, -18.7215, 1.0283, 0.57", "16.1956, -18.9472, 3.28749, 0.57", "17.1574, -19.1057, 5.27889, 0.57", "20.5443, -19.5806, 13.1413, 0.45", "20.7999, -19.6154, 13.8633, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.22355, -14.9991, -8.14, 2.26", "-1.67857, -17.1997, -8.11887, 2.26", "-2.12666, -19.3668, -8.09807, 2.26", "-2.77992, -22.5262, -8.06774, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "28.3129, 6.1875, 2.44764, 0.45", "33.3207, 5.51088, 1.68816, 0.45", "35.6704, 5.49934, 2.06233, 0.45", "36.8856, 5.688, 2.47622, 0.45", "38.4554, 6.18076, 3.15677, 0.45", "41.5165, 7.68769, 4.76948, 0.79", "45.0329, 9.84622, 6.74117, 0.79", "48.3566, 12.3581, 8.792, 0.79", "50.7796, 14.5083, 10.3345, 0.79", "52.6647, 16.4919, 11.5382, 0.79", "55.3441, 20.1107, 13.3358, 0.79", "57.7357, 24.1055, 14.8524, 0.79", "58.8212, 26.0748, 15.3732, 0.68", "59.7705, 27.8106, 15.6718, 0.68", "61.8044, 31.3578, 16.1146, 0.68", "66.0745, 38.7525, 17.0667, 0.68", "67.4479, 41.1757, 17.3457, 0.68", "69.7551, 45.1384, 17.7932, 0.68", "71.0719, 47.1683, 18.046, 0.68", "72.3251, 48.8074, 18.3283, 0.57", "75.6653, 52.2755, 19.1183, 0.57", "77.3846, 53.5822, 19.8078, 0.57", "80.0088, 55.3065, 22.9485, 0.57", "80.7315, 55.7771, 25.3952, 0.57", "81.5166, 56.2904, 29.6645, 0.57", "81.7299, 56.4191, 31.2384, 0.57", "82.3599, 56.6406, 38.4544, 0.57", "82.8146, 56.7465, 47.5122, 0.57", "82.861, 56.7578, 54.8724, 0.57", "82.7679, 56.833, 58.9654, 0.57", "82.7291, 56.9114, 60.0995, 0.57", "82.6604, 57.0859, 62.1025, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "28.3129, 6.1875, 2.44764, 0.79", "29.1763, 8.46694, 1.53979, 0.79", "29.7023, 10.1601, 0.955915, 0.79", "29.9734, 11.0737, 0.679366, 0.79", "30.8264, 13.1999, 0.0960557, 0.79", "31.7863, 15.0959, -0.377201, 0.79", "32.6427, 16.6291, -0.718894, 0.79", "33.9851, 18.7865, -1.09016, 0.79", "34.9977, 20.3274, -1.35784, 0.79", "37.0211, 23.2634, -2.02125, 0.79", "38.3553, 25.023, -2.68756, 0.79", "39.8243, 26.5511, -3.84292, 1.02", "40.7746, 27.415, -4.6898, 1.02", "41.6781, 28.1295, -5.66455, 1.02", "42.863, 29.0185, -7.37515, 1.02", "44.5182, 30.2692, -10.9278, 1.02", "46.2563, 31.2404, -15.5244, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "16.6073, -12.661, -0.996405, 0.68", "17.9617, -14.998, -1.35068, 0.68", "18.4502, -15.722, -1.37706, 0.68", "21.1645, -19.5266, -1.32331, 0.68", "25.4283, -25.4063, -1.10594, 0.68", "28.1774, -29.2375, -1.12302, 0.68", "29.8779, -31.6102, -1.20808, 0.68", "35.1118, -38.4664, -0.866502, 0.68", "37.535, -41.4813, -0.493338, 0.68", "38.2913, -42.3624, -0.321016, 0.68", "42.4073, -46.904, 0.856809, 0.68", "45.3434, -49.7912, 1.6869, 0.68", "52.9448, -56.9708, 3.7539, 0.68", "56.5444, -60.2924, 4.66, 0.68", "58.694, -62.1775, 5.19124, 0.68", "61.6679, -64.702, 5.9085, 0.68", "68.5553, -70.6012, 7.44962, 0.68", "71.2589, -73.1114, 7.78418, 0.68", "72.4741, -74.3647, 7.796, 0.68", "75.6407, -77.8037, 7.73724, 0.68", "77.5659, -80.0353, 7.66135, 0.68", "81.4023, -84.9632, 7.33788, 0.68", "83.8204, -88.754, 7.10057, 0.68", "85.4745, -91.5075, 6.89241, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "16.6073, -12.661, -0.996405, 1.24", "21.589, -13.9809, -1.44772, 1.24", "24.1372, -14.6561, -1.67857, 1.24", "28.2198, -15.7378, -2.04844, 1.24", "32.3517, -16.8325, -2.42276, 1.24", "43.3066, -19.7351, -3.41522, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "20.7999, -19.6154, 13.8633, 0.45", "21.5323, -21.4561, 18.6654, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "20.7999, -19.6154, 13.8633, 0.45", "25.9964, -17.9975, 14.4871, 0.45", "28.3985, -17.369, 15.0503, 0.45", "31.6602, -16.6146, 16.0043, 0.45", "35.1905, -16.1416, 17.1639, 0.45", "37.0176, -16.2261, 17.8271, 0.45", "41.9303, -17.0681, 19.67, 0.45", "42.3224, -17.2019, 19.863, 0.45", "42.4903, -17.2889, 19.9526, 2.6", "45.682, -19.4881, 21.6946, 0.57", "49.5508, -22.7379, 23.8062, 0.57", "50.6862, -23.7154, 24.369, 0.57", "50.7877, -23.7966, 24.4115, 2.38", "54.2308, -26.1654, 25.8085, 0.34", "55.5656, -26.8665, 26.3253, 0.34", "58.6167, -27.8488, 27.422, 0.45", "61.5015, -28.1514, 28.638, 0.45", "64.4765, -28.1113, 30.2766, 0.45", "67.1236, -27.8385, 32.1564, 0.45", "69.8863, -27.3183, 34.6382, 0.45", "72.2925, -26.7626, 37.0891, 0.45", "77.474, -25.41, 42.8138, 0.45", "81.3296, -24.4741, 47.5235, 0.45", "85.0183, -23.7549, 52.3259, 0.45", "88.5278, -23.3258, 56.9398, 0.45", "89.5733, -23.2904, 58.2919, 2.38", "91.4622, -23.3517, 60.5302, 0.45", "95.4431, -23.5827, 64.4288, 0.45", "97.2035, -23.6841, 65.9121, 0.45", "99.896, -23.7628, 67.9317, 0.45", "105.482, -23.7505, 72.1255, 0.45", "109.469, -23.6403, 75.128, 0.45", "113.606, -23.6099, 78.2216, 0.45", "116.179, -23.7337, 80.0871, 0.45", "118.679, -23.9845, 81.8474, 0.45", "123.511, -24.7575, 85.0911, 0.45", "127.495, -25.6352, 87.5002, 0.45", "132.58, -27.0087, 90.4913, 0.45", "137.689, -28.692, 93.4298, 0.45", "140.719, -29.8092, 95.1257, 0.45", "142.251, -30.4852, 95.9552, 0.45", "143.09, -30.9048, 96.3303, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.77992, -22.5262, -8.06774, 0.12", "-3.6903, -21.6842, -7.9605, 0.12", "-3.87993, -21.5587, -7.89065, 0.12", "-4.44348, -21.2541, -7.64242, 0.45", "-5.49374, -21.1055, -6.79185, 0.79", "-6.94743, -21.1373, -5.30893, 0.45", "-7.82946, -21.2616, -4.32251, 0.45", "-9.54876, -21.726, -2.17966, 0.45", "-9.8137, -21.8505, -1.8275, 0.45", "-12.4091, -23.4861, 2.05609, 0.45", "-13.5839, -24.3914, 3.94972, 0.45", "-14.4559, -25.1356, 5.39525, 0.45", "-14.6732, -25.3169, 5.76354, 0.45", "-15.8948, -26.2826, 7.76651, 0.45", "-18.3976, -28.1182, 11.6217, 0.45", "-19.1418, -28.6056, 12.591, 0.45", "-19.7037, -28.9496, 13.2448, 0.45", "-20.8472, -29.5989, 14.5042, 0.45", "-21.2487, -29.827, 14.971, 0.45", "-23.6951, -31.2134, 17.8406, 0.45", "-24.7305, -31.9882, 19.1221, 0.45", "-25.8649, -32.9666, 20.6691, 0.45", "-26.2177, -33.3065, 21.2385, 0.45", "-27.7745, -34.9872, 23.8993, 0.45", "-27.9625, -35.2101, 24.2487, 0.45", "-29.0173, -36.5195, 26.474, 0.45", "-29.2531, -36.8324, 27.0026, 0.45", "-30.368, -38.3609, 29.3943, 2.38", "-31.3234, -39.6115, 31.349, 0.68", "-31.7061, -40.1275, 32.1335, 0.68", "-33.433, -42.2783, 35.7965, 0.68", "-34.1877, -43.1504, 37.4273, 0.45", "-34.5555, -43.5574, 38.1757, 0.45", "-35.5775, -44.4816, 40.0942, 0.45", "-36.1502, -44.9188, 41.1446, 0.45", "-38.2745, -46.3134, 44.616, 0.45", "-39.5647, -47.0203, 46.5829, 0.45", "-40.8738, -47.6188, 48.5114, 0.45", "-44.6826, -49.2518, 53.8813, 0.91", "-44.7727, -49.2928, 54.0056, 3.05", "-45.866, -49.8265, 55.5018, 0.45", "-48.3788, -51.3461, 59.1319, 0.45", "-49.1592, -51.8803, 60.3572, 0.45", "-50.2169, -52.6816, 62.1523, 2.15", "-53.5705, -55.7981, 67.8615, 0.57", "-53.9827, -56.1892, 68.5939, 0.57", "-56.106, -58.2603, 72.5107, 0.57", "-57.4726, -59.6481, 74.942, 0.57", "-57.646, -59.8143, 75.2445, 1.7", "-58.3919, -60.4887, 76.4981, 0.45", "-61.9434, -63.7043, 82.0828, 0.45", "-63.4968, -65.0531, 84.432, 0.45", "-64.6046, -66.0006, 86.004, 0.45", "-66.7467, -67.8569, 88.9667, 0.45", "-68.0019, -68.9547, 90.7157, 0.45", "-68.9381, -69.7601, 92.0035, 0.45", "-71.0096, -71.7712, 94.5111, 0.45", "-71.3272, -72.0781, 94.9061, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.77992, -22.5262, -8.06774, 1.7", "-2.78565, -26.1238, -5.8372, 1.7", "-2.79168, -27.3175, -5.23243, 1.58", "-2.77667, -30.9883, -3.7427, 1.36", "-2.76428, -34.0168, -2.51362, 1.24", "-2.74643, -38.3794, -0.743174, 1.24", "-2.73582, -40.9731, 0.309452, 2.83", "-2.66665, -44.6379, 1.47132, 3.62", "-2.59162, -47.4299, 2.21899, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "46.2563, 31.2404, -15.5244, 0.57", "46.4159, 29.7156, -15.8231, 0.57", "46.6257, 27.71, -16.2161, 0.57", "46.7453, 26.5674, -16.4399, 0.57", "46.9099, 24.9938, -16.7482, 0.57", "47.1245, 22.9428, -17.15, 0.57", "47.4916, 19.4347, -17.8373, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "46.2563, 31.2404, -15.5244, 1.02", "46.8016, 32.7109, -16.6398, 1.02", "48.0244, 36.0084, -19.1411, 1.02", "48.7155, 37.8722, -20.5548, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "85.4745, -91.5075, 6.89241, 0.45", "88.4125, -95.976, 6.13606, 0.45", "89.0171, -96.9015, 6.00452, 0.45", "89.9195, -98.3184, 5.87562, 0.45", "92.1175, -101.735, 5.65756, 0.45", "92.9943, -103.058, 5.50845, 0.45", "93.8117, -104.221, 5.34967, 0.45", "95.3583, -106.224, 5.0811, 0.45", "98.1851, -109.628, 4.56041, 0.45", "99.7846, -111.265, 4.30149, 0.45", "102.887, -113.876, 3.71037, 0.45", "105.199, -115.421, 3.35965, 0.45", "106.243, -116.012, 3.36576, 0.45", "108.144, -117.01, 3.56544, 0.45", "112.087, -119.102, 4.23469, 0.45", "114.705, -120.624, 4.6337, 0.45", "118.657, -123.092, 5.2203, 0.45", "127.019, -128.821, 6.22855, 0.45", "130.732, -131.629, 6.58598, 0.45", "133.423, -133.953, 6.75253, 0.45", "138.483, -139.158, 6.77936, 0.45", "139.445, -140.327, 6.72468, 0.45", "141.28, -143.156, 6.27516, 0.45", "142.203, -145.092, 5.80069, 0.45", "143.597, -148.825, 4.9961, 0.45", "144.498, -151.811, 4.50737, 0.45", "145.583, -155.841, 4.01856, 0.45", "146.575, -159.896, 3.52473, 0.45", "147.509, -164.173, 2.98471, 0.45", "147.897, -166.013, 2.75451, 0.45", "148.523, -168.968, 2.42494, 0.45", "149.813, -174.468, 1.91628, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "85.4745, -91.5075, 6.89241, 0.57", "85.3087, -92.194, 7.08614, 0.57", "84.2616, -95.7174, 9.12393, 0.57", "82.8254, -100.076, 11.8969, 0.57", "81.8279, -102.54, 13.7732, 0.57", "81.6316, -102.974, 14.1106, 0.57", "80.4925, -105.17, 15.9003, 0.57", "78.7337, -107.99, 18.4218, 0.57", "77.8234, -109.18, 19.5995, 0.57", "75.9627, -111.354, 22.2377, 0.45", "75.0145, -112.42, 23.4948, 0.45", "73.7148, -113.881, 25.1468, 0.45", "72.4595, -115.366, 26.7488, 0.45", "71.018, -117.048, 28.5388, 0.45", "68.1542, -120.692, 32.5092, 0.45", "67.5636, -121.56, 33.4247, 0.45", "66.761, -122.879, 34.8147, 0.45", "64.9309, -126.272, 38.2201, 0.45", "64.307, -127.536, 39.3848, 0.45", "62.0918, -132.246, 43.0663, 0.45", "61.4184, -133.799, 44.1367, 0.45", "61.2823, -134.152, 44.3654, 0.45", "60.9884, -135.078, 44.9806, 0.45", "60.2487, -137.618, 46.6887, 0.45", "59.6949, -139.712, 48.1444, 0.45", "58.645, -143.935, 51.3, 0.45", "57.9287, -146.861, 53.8602, 0.45", "56.603, -152.197, 58.8681, 0.45", "55.8193, -155.156, 61.7703, 0.45", "55.455, -156.397, 63.0841, 0.45", "54.1343, -160.531, 67.4445, 0.45", "52.7191, -164.234, 71.1065, 0.45", "51.8567, -166.183, 72.996, 0.45", "50.9747, -168.012, 74.6227, 0.45", "49.4137, -171.429, 77.3126, 0.45", "48.1068, -174.362, 79.4017, 0.45", "46.9413, -176.839, 81.0189, 0.45", "45.9111, -178.823, 82.5419, 0.45", "43.2924, -183.059, 86.5397, 0.45", "41.3624, -185.473, 89.2003, 0.45", "39.4585, -187.209, 91.3815, 0.45", "37.1253, -188.651, 93.487, 0.45", "31.1083, -191.215, 97.8328, 0.45", "28.2021, -192.067, 99.6204, 0.45", "24.4568, -192.84, 101.438, 0.45", "21.9396, -193.299, 102.547, 0.45", "17.1254, -194.289, 104.503, 0.45", "13.3802, -195.246, 105.891, 0.45", "7.5278, -197.067, 108.521, 0.45", "3.33852, -198.586, 110.928, 0.45", "0.591226, -199.701, 112.627, 0.45", "-5.68694, -202.471, 116.645, 0.45", "-7.87569, -203.501, 118.099, 0.45", "-17.2577, -208.073, 124.209, 0.45", "-19.8138, -209.361, 125.856, 0.45", "-26.5745, -212.865, 130.576, 0.45", "-28.4925, -213.881, 131.904, 0.45", "-31.7905, -215.76, 134.149, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "43.3066, -19.7351, -3.41522, 0.45", "45.5289, -22.4725, -2.01319, 0.45", "45.8747, -22.9128, -1.81206, 1.02", "49.4444, -27.44, 0.0552858, 0.79", "51.607, -30.2793, 1.06759, 0.79", "52.8275, -31.8968, 1.5585, 0.68", "53.0867, -32.236, 1.64646, 0.68", "54.6153, -34.2493, 1.99867, 0.68", "55.637, -35.6179, 2.16154, 0.68", "57.7248, -38.3998, 2.30929, 0.68", "59.819, -41.2722, 2.43583, 0.68", "61.8149, -44.0659, 2.53498, 0.68", "63.7018, -46.6894, 2.6058, 0.68", "66.0583, -49.9879, 2.67489, 0.68", "68.9464, -54.1248, 2.56781, 0.68", "70.7056, -56.7401, 2.32537, 0.68", "71.7171, -58.2941, 2.09362, 0.68", "72.9836, -60.2322, 1.73507, 0.68", "75.0982, -63.3504, 1.05446, 0.68", "77.8535, -67.2832, 0.0867928, 0.68", "81.0498, -71.6099, -1.05013, 0.68", "82.7777, -73.7742, -1.61386, 0.68", "84.5121, -75.8353, -2.10768, 0.68", "85.6498, -77.1226, -2.37317, 0.68", "86.7062, -78.2117, -2.552, 0.68", "88.2294, -79.7473, -2.58345, 0.68", "89.4499, -81.0505, -2.56987, 0.68", "91.0337, -83.1374, -2.56199, 0.68", "91.4538, -83.8686, -2.58777, 0.68", "92.4327, -85.9772, -2.6705, 0.68", "93.4964, -88.7739, -2.86733, 0.68", "94.2516, -91.2068, -3.07919, 0.68", "94.9166, -93.6731, -3.30964, 0.68", "95.8765, -97.6575, -3.66907, 0.68", "96.3243, -99.5429, -3.80986, 0.68", "96.9716, -102.078, -3.93363, 0.68", "97.5574, -104.001, -3.99624, 0.68", "98.4078, -106.294, -3.95548, 0.68", "99.0906, -107.965, -3.90657, 0.68", "99.4306, -108.719, -3.86484, 0.68", "100.489, -110.893, -3.72361, 0.45", "102.014, -113.986, -3.46486, 0.45", "103.772, -117.574, -3.18285, 0.45", "105.118, -120.481, -3.05692, 0.45", "106.036, -122.562, -3.01689, 0.45", "107.089, -125.018, -3.00947, 0.45", "108.841, -129.163, -3.11469, 0.45", "109.75, -131.376, -3.19716, 0.45", "111.267, -135.215, -3.38439, 0.45", "112.661, -138.699, -3.59168, 0.45", "113.5, -140.839, -3.76258, 0.45", "114.183, -142.57, -3.95468, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "43.3066, -19.7351, -3.41522, 0.68", "45.3462, -18.2205, -2.31321, 0.68", "47.7628, -16.2915, -1.24066, 0.68", "49.4675, -14.9407, -0.798548, 0.68", "50.599, -14.0649, -0.67904, 0.68", "51.321, -13.5104, -0.745067, 0.68", "52.9804, -12.2912, -1.29161, 0.68", "54.0302, -11.5548, -1.94247, 0.68", "55.818, -10.3886, -3.38443, 0.57", "57.2141, -9.53285, -4.65273, 0.57", "59.2249, -8.24389, -6.58822, 0.57", "61.5307, -6.72051, -8.85855, 0.57", "62.8112, -5.83643, -10.1428, 0.57", "63.4031, -5.38068, -10.7776, 0.57", "65.2365, -3.7811, -12.7414, 0.57", "67.6561, -1.52291, -15.2807, 0.57", "69.5532, 0.348893, -17.1561, 0.57", "70.248, 1.10328, -17.8586, 0.57", "71.7878, 2.91074, -19.543, 0.57", "73.2064, 4.63054, -21.147, 0.57", "73.8178, 5.41929, -21.853, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "21.5323, -21.4561, 18.6654, 0.45", "18.7126, -28.32, 20.4418, 0.45", "17.8261, -30.522, 20.915, 0.45", "16.6476, -33.3554, 21.7677, 0.45", "15.4115, -36.2083, 22.8696, 0.45", "14.4575, -38.3224, 23.7961, 0.45", "12.6593, -42.3519, 25.664, 0.45", "12.0213, -43.8881, 26.4134, 0.45", "10.1508, -48.5132, 28.9128, 0.45", "9.17947, -50.8438, 30.4658, 0.45", "8.36147, -52.641, 31.9309, 0.45", "7.87829, -53.5302, 32.7381, 0.45", "7.21314, -54.5595, 33.7275, 0.45", "6.2998, -55.7988, 34.734, 0.45", "3.84705, -59.3174, 36.801, 0.45", "3.33666, -60.1073, 37.1587, 0.45", "1.90256, -62.6433, 38.0468, 0.45", "1.14147, -64.1749, 38.1324, 0.45", "0.315637, -66.3164, 37.7355, 0.45", "-0.666435, -70.3128, 36.3007, 0.45", "-0.984185, -73.0321, 35.009, 0.45", "-1.12008, -75.4533, 33.7364, 0.45", "-0.914509, -82.5959, 29.4924, 0.45", "-0.801209, -83.9617, 28.5796, 1.02", "-0.636274, -85.3504, 27.4726, 0.57", "-0.533435, -86.9806, 25.7661, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "21.5323, -21.4561, 18.6654, 0.45", "23.089, -22.2271, 18.8138, 0.45", "24.6919, -23.0209, 18.9666, 0.45", "26.9198, -24.1242, 19.179, 0.45", "28.8049, -25.0579, 19.3587, 0.45", "29.7829, -25.5422, 19.4519, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-2.59162, -47.4299, 2.21899, 0.45", "-3.03783, -48.5132, 3.25926, 0.45", "-3.22253, -49.0163, 3.69967, 0.79", "-5.02008, -53.9128, 7.9858, 1.24", "-5.79592, -56.0262, 9.83573, 1.24", "-6.45129, -57.8115, 11.3984, 1.24", "-7.20499, -59.8646, 13.1956, 1.24", "-7.4792, -60.6096, 13.8597, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-2.59162, -47.4299, 2.21899, 0.91", "-0.702593, -49.6395, 3.47184, 0.91", "0.338002, -50.8567, 4.16198, 0.91", "2.13819, -52.9624, 5.3559, 0.91", "3.38187, -54.4171, 6.18074, 0.91", "5.32569, -56.6908, 7.46993, 0.79", "5.72229, -57.1547, 7.73296, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "47.4916, 19.4347, -17.8373, 0.57", "48.4171, 16.8051, -17.073, 0.57", "50.2111, 11.6151, -14.6657, 0.57", "52.1387, 5.93208, -12.242, 0.45", "54.9281, -2.29801, -8.96663, 0.45", "57.9407, -11.3551, -5.26772, 0.45", "58.7648, -13.8327, -4.25585, 0.45", "62.6456, -25.6869, 0.729564, 0.45", "65.5742, -35.1025, 4.84506, 0.45", "66.9474, -39.4998, 6.84869, 0.45", "68.5396, -44.3998, 9.0579, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "47.4916, 19.4347, -17.8373, 0.57", "45.1463, 18.4524, -20.1128, 0.57", "43.5269, 17.3894, -20.7567, 0.68", "42.1631, 16.2614, -21.2666, 0.68", "40.7985, 15.1327, -21.7768, 0.68", "38.6362, 13.3442, -22.5853, 0.68", "36.5672, 11.6328, -23.3589, 0.68", "34.0931, 9.8399, -24.3708, 0.68", "31.5293, 8.22786, -25.3464, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "48.7155, 37.8722, -20.5548, 0.68", "49.2115, 38.9775, -19.4102, 0.68", "49.6341, 39.9191, -18.4352, 0.68", "50.3406, 41.4933, -16.8051, 0.68", "51.7676, 44.673, -13.5125, 0.68", "52.5662, 46.4525, -11.6698, 0.68", "53.6381, 48.8408, -9.19676, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "48.7155, 37.8722, -20.5548, 0.79", "50.8068, 38.9682, -20.4731, 0.79", "54.1342, 40.7121, -20.3432, 0.79", "56.2894, 41.8416, -20.2591, 0.79", "58.6932, 43.1014, -20.1652, 0.79", "60.058, 43.8167, -20.112, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "114.183, -142.57, -3.95468, 0.57", "115.936, -145.775, -3.10332, 0.57", "118.658, -150.514, -1.73868, 0.57", "120.011, -152.793, -1.08938, 0.57", "123.557, -158.629, 0.528286, 0.57", "127.031, -164.221, 2.10151, 0.57", "129.832, -168.729, 3.36993, 0.57", "131.518, -171.259, 4.17527, 0.57", "133.068, -173.497, 4.94042, 0.57", "134.547, -175.579, 5.63592, 0.57", "136.331, -177.988, 6.29121, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "114.183, -142.57, -3.95468, 0.34", "116.201, -144.022, -3.4299, 0.34", "117.691, -145.1, -2.86754, 0.34", "118.334, -145.581, -2.60781, 0.34", "121.164, -147.952, -1.62701, 0.34", "123.392, -149.981, -0.947076, 0.57", "126.369, -152.792, -0.0755436, 0.57", "128.337, -154.774, 0.522387, 0.57", "130.05, -156.608, 0.941849, 0.57", "133.388, -160.379, 1.5746, 0.57", "135.256, -162.575, 1.80476, 0.57", "137.067, -164.776, 1.84054, 0.57", "139.425, -167.657, 1.63256, 0.57", "142.805, -171.769, 1.15734, 0.57", "145.642, -175.173, 0.731177, 0.57", "147.519, -177.304, 0.522509, 0.57", "150.81, -180.884, 0.182183, 0.57", "151.771, -181.882, 0.087393, 0.57", "153.93, -183.961, -0.0487249, 0.57", "155.594, -185.391, -0.0107087, 0.57", "158.858, -187.835, 0.21013, 0.57", "159.908, -188.525, 0.348687, 0.57", "161.747, -189.496, 0.907202, 0.57", "163.063, -190.101, 1.37023, 0.57", "164.422, -190.629, 1.92179, 0.57", "165.36, -190.971, 2.31787, 0.57", "167.624, -191.775, 3.31011, 0.57", "172.447, -193.462, 5.65462, 0.57", "173.764, -193.909, 6.36432, 0.57", "176.314, -194.763, 7.8365, 0.57", "178.914, -195.71, 9.43203, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "73.8178, 5.41929, -21.853, 0.45", "75.4324, 6.51845, -27.1058, 0.45", "76.2523, 7.08879, -29.7661, 0.45", "77.31, 8.11271, -33.7495, 0.45", "77.6015, 8.42287, -34.739, 0.45", "77.7539, 8.58482, -35.1919, 0.45", "79.2812, 10.2458, -39.136, 0.45", "79.5005, 10.4561, -39.5395, 0.45", "80.8348, 11.7665, -42.0278, 0.45", "81.8718, 12.9728, -43.786, 0.45", "82.4409, 13.6814, -44.7352, 0.45", "83.8488, 15.402, -46.8108, 0.45", "85.238, 16.8985, -48.1806, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "73.8178, 5.41929, -21.853, 0.45", "75.2216, 5.70846, -22.1278, 0.45", "76.1248, 5.8945, -22.3045, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "29.7829, -25.5422, 19.4519, 0.45", "28.0425, -28.354, 21.1921, 0.45", "26.0662, -31.6361, 23.1739, 0.45", "24.955, -33.4529, 24.2993, 0.45", "23.7324, -35.4219, 25.4773, 0.45", "22.305, -37.7421, 26.7875, 0.45", "21.7755, -38.6414, 27.2502, 0.45", "21.13, -39.7942, 27.7363, 0.45", "19.6974, -42.7032, 28.8631, 0.45", "18.7738, -44.9905, 29.5565, 0.45", "18.0866, -47.0358, 30.0208, 0.45", "17.5847, -48.7352, 30.3547, 0.45", "17.1868, -50.2954, 30.7384, 0.45", "16.6974, -52.77, 31.4836, 0.45", "16.4843, -54.3316, 32.242, 0.45", "16.3536, -55.7195, 33.1668, 0.45", "16.2241, -57.6967, 34.6024, 0.45", "16.1567, -59.7064, 36.165, 0.45", "16.1725, -60.8074, 37.0355, 0.45", "16.3771, -64.7114, 39.6395, 0.45", "16.6258, -67.3538, 41.1361, 0.45", "16.9467, -69.7742, 42.2093, 0.45", "17.2604, -72.0912, 42.8471, 0.45", "17.5755, -74.2993, 43.3235, 0.45", "18.1062, -78.5987, 44.1081, 0.45", "18.2877, -80.5348, 44.3938, 0.45", "18.35, -81.9818, 44.8785, 0.45", "18.3847, -85.2332, 46.1758, 0.45", "18.3054, -87.9173, 47.3423, 0.45", "18.1063, -90.828, 48.8963, 0.45", "17.9514, -92.2677, 49.928, 0.45", "17.1695, -97.663, 53.9695, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "29.7829, -25.5422, 19.4519, 0.45", "31.5964, -27.4147, 20.2349, 0.45", "32.5608, -28.7536, 20.7511, 0.45", "34.0386, -31.1565, 21.6223, 0.45", "35.2985, -33.4305, 22.424, 0.45", "37.0795, -36.9429, 23.6244, 0.45", "39.2439, -41.5895, 25.1853, 0.45", "41.5265, -47.4981, 27.2061, 0.45", "43.0535, -52.3717, 28.5633, 0.45", "43.8139, -55.1009, 29.2959, 0.45", "45.1063, -60.2879, 30.6317, 0.45", "45.8997, -63.7794, 31.4312, 0.45", "46.6349, -67.5408, 32.1912, 0.45", "47.7266, -75.7422, 33.4794, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.4792, -60.6096, 13.8597, 0.12", "-7.94989, -61.3127, 13.348, 0.12", "-8.6614, -63.0845, 12.3036, 0.57", "-9.15159, -64.6636, 11.583, 0.57", "-9.56285, -66.0688, 11.1557, 0.57", "-10.9102, -70.5329, 9.62551, 0.57", "-11.7867, -73.1987, 8.44265, 0.57", "-12.2789, -74.7048, 7.6816, 0.91", "-12.7271, -76.0922, 6.63846, 0.91", "-13.3357, -77.8175, 4.92773, 0.91", "-14.4234, -80.0038, 1.5382, 0.68", "-15.3143, -80.9993, -1.53435, 0.68", "-15.7583, -81.3564, -3.11017, 0.68", "-17.1561, -82.3291, -8.60799, 0.68", "-17.4698, -82.5064, -9.96937, 0.68", "-18.1403, -82.8004, -13.2838, 0.68", "-19.1895, -83.1339, -19.0576, 0.68", "-19.5489, -83.2466, -21.3644, 0.68", "-20.1719, -83.5916, -25.9533, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-7.4792, -60.6096, 13.8597, 0.79", "-7.12097, -64.6842, 14.1845, 0.79", "-6.63823, -70.1748, 14.6221, 0.79", "-6.41532, -72.7101, 14.8241, 0.79", "-6.24338, -74.6658, 14.98, 0.79", "-6.16291, -75.581, 15.0529, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-7.4792, -60.6096, 13.8597, 0.57", "-6.93433, -61.0208, 16.2023, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "5.72229, -57.1547, 7.73296, 1.13", "5.96611, -58.3047, 8.50798, 1.13", "6.38142, -60.0961, 9.5771, 0.91", "6.63322, -61.188, 10.1312, 0.91", "7.04883, -63.0291, 10.9646, 0.91", "7.46733, -65.0526, 11.7932, 0.91", "7.79913, -66.8647, 12.5267, 0.91", "7.9812, -68.1125, 12.9796, 0.91", "8.19926, -70.1545, 13.711, 0.91", "8.26116, -71.0049, 14.0202, 1.92", "8.31822, -72.143, 14.4169, 1.36", "8.37693, -73.8153, 15.0353, 1.02", "8.41458, -75.78, 15.8581, 1.02", "8.45417, -77.4558, 16.6107, 1.02", "8.47969, -78.1428, 16.9283, 1.02", "8.52469, -78.9165, 17.2861, 0.68", "8.64473, -80.1659, 17.7902, 0.68", "8.74361, -80.8449, 17.9948, 1.02", "8.86954, -81.4342, 18.1099, 2.15", "9.15391, -82.4351, 18.2061, 1.47", "9.68597, -84.0256, 18.2991, 1.13", "10.0569, -85.116, 18.3501, 0.79", "10.3138, -85.8355, 18.3703, 0.57", "10.845, -87.1645, 18.4086, 0.57", "11.3381, -88.2823, 18.4408, 0.57", "11.7724, -89.2046, 18.4617, 0.57", "12.1645, -90.0765, 18.4769, 0.57", "12.3994, -90.7142, 18.4749, 0.57", "12.751, -91.8819, 18.4238, 0.57", "12.9384, -92.5613, 18.4503, 0.57", "13.1952, -93.5961, 18.5403, 2.83", "13.5329, -94.9403, 18.7399, 1.92", "14.039, -96.8403, 19.055, 1.02", "14.3078, -97.908, 19.2637, 0.68", "14.9831, -100.552, 19.8175, 0.68", "15.2476, -101.473, 20.0092, 0.68", "15.7553, -103.012, 20.3751, 0.68", "16.0722, -103.864, 20.5889, 0.68", "16.5109, -104.899, 20.8236, 0.68", "17.1425, -106.284, 21.0584, 0.68", "17.9134, -107.806, 21.2163, 0.68", "19.0457, -109.824, 21.4333, 0.68", "19.7708, -111.064, 21.5671, 0.68", "20.657, -112.555, 21.6971, 0.57", "21.2842, -113.624, 21.7561, 0.57", "21.8444, -114.688, 21.7275, 0.57", "22.379, -115.824, 21.5621, 0.57", "22.8919, -117.033, 21.2031, 0.57", "23.5326, -118.623, 20.6368, 0.57", "23.7999, -119.333, 20.338, 1.47", "24.4895, -121.17, 19.4825, 0.68", "24.9121, -122.269, 18.9526, 0.68", "25.5219, -123.707, 18.2533, 0.68", "26.4495, -125.674, 17.3285, 0.68", "27.3747, -127.455, 16.5908, 0.68", "27.8199, -128.24, 16.2893, 0.68", "28.1132, -128.739, 16.2231, 0.68", "28.5715, -129.67, 16.4068, 0.57", "28.7603, -130.142, 16.6084, 0.57", "29.003, -130.844, 16.9976, 0.57", "29.3925, -132.106, 17.6858, 0.57", "30.6002, -136.524, 19.8847, 0.68", "31.2601, -139.175, 21.0132, 0.68", "31.542, -140.441, 21.4417, 0.68", "31.7132, -141.321, 21.6326, 0.68", "32.1326, -143.75, 21.6167, 0.68", "32.2611, -144.494, 21.4254, 0.68", "32.5159, -145.843, 20.7244, 2.04", "32.7673, -147.024, 19.9667, 0.79", "33.0598, -148.25, 19.1677, 0.79", "33.6471, -150.542, 17.8295, 0.79", "34.0026, -151.8, 17.2622, 0.79", "34.3501, -152.967, 16.8831, 0.79", "34.749, -154.302, 16.6653, 0.79", "35.1491, -155.523, 16.6283, 0.68", "35.7186, -157.145, 16.7916, 0.68", "36.2529, -158.601, 17.1119, 0.68", "36.7624, -159.895, 17.6571, 0.68", "37.1497, -160.828, 18.1626, 0.68", "37.5658, -161.775, 18.8052, 0.68", "37.8184, -162.312, 19.1975, 1.58", "38.2134, -163.085, 19.7334, 1.58", "39.8923, -166.282, 21.8269, 0.68", "40.5116, -167.406, 22.535, 0.68", "41.6745, -169.423, 23.7402, 0.68", "42.7332, -171.244, 24.8307, 0.68", "43.6683, -172.815, 25.7347, 0.68", "44.4151, -174.045, 26.4337, 0.68", "45.2771, -175.41, 27.119, 0.68", "45.8916, -176.302, 27.6794, 0.68", "47.0743, -177.875, 28.7522, 0.68", "47.4986, -178.385, 29.0893, 0.68", "48.681, -179.689, 29.8442, 2.38", "49.2901, -180.343, 30.1166, 1.92", "51.1042, -182.23, 30.6748, 0.57", "51.8047, -182.961, 30.7698, 0.57", "54.238, -185.509, 30.7621, 0.57", "55.9293, -187.294, 30.6892, 0.57", "56.9999, -188.424, 30.5849, 0.57", "58.3522, -189.847, 30.4609, 0.57", "59.6412, -191.178, 30.3448, 0.57", "60.513, -192.079, 30.373, 0.57", "61.2059, -192.788, 30.5232, 2.15", "61.7842, -193.36, 30.6767, 1.13", "62.6713, -194.236, 30.9533, 0.57", "63.4927, -195.115, 31.084, 0.57", "63.8442, -195.506, 31.1017, 0.57", "64.2658, -196.042, 31.1047, 0.57", "64.7942, -196.775, 31.0867, 0.57", "64.9201, -196.978, 31.0854, 2.38", "66.1061, -199.11, 31.096, 0.45", "66.8545, -200.557, 31.1262, 0.45", "67.6748, -202.185, 31.1863, 0.45", "68.2392, -203.332, 31.2839, 0.45", "69.2304, -205.417, 31.627, 0.45", "69.488, -205.986, 31.7577, 0.45", "70.5439, -208.537, 32.5844, 0.45", "71.2427, -210.477, 33.2685, 0.45", "71.7737, -212.28, 33.8762, 0.45", "72.1372, -213.952, 34.4766, 0.45", "72.2507, -214.736, 34.7721, 0.45", "72.3541, -216.0, 35.2059, 0.45", "72.3858, -217.661, 35.675, 0.45", "72.4157, -219.398, 35.883, 0.45", "72.4445, -219.848, 35.8662, 1.24", "72.6131, -220.982, 35.7219, 0.57", "72.9646, -222.385, 35.5066, 0.57", "73.6192, -224.219, 35.2028, 0.57", "74.3571, -225.91, 34.9593, 1.36", "75.033, -227.258, 34.9016, 0.57", "75.857, -228.734, 34.932, 0.57", "76.9981, -230.62, 35.0861, 0.57", "77.9041, -232.016, 35.364, 0.57", "78.59, -233.011, 35.6617, 0.57", "80.0565, -235.165, 36.3876, 0.57", "81.3849, -237.253, 37.0498, 0.57", "81.9097, -238.197, 37.3448, 0.57", "82.7552, -240.005, 37.8136, 2.38", "82.9819, -240.582, 37.9248, 1.58", "83.8712, -243.232, 38.3926, 0.68", "84.3148, -244.861, 38.6271, 0.68", "84.7675, -246.864, 39.0455, 0.79", "85.1633, -248.738, 39.4691, 0.57", "85.507, -250.537, 39.8807, 0.57", "85.9823, -253.214, 40.5808, 0.57", "86.3163, -255.224, 41.1814, 0.57", "86.623, -257.147, 41.7244, 0.57", "86.7745, -258.079, 41.96, 0.57", "87.0131, -259.589, 42.3275, 0.57", "87.3477, -261.846, 42.7591, 0.57", "87.5725, -263.281, 42.8856, 0.57", "87.8549, -264.985, 42.8674, 0.57", "88.0621, -266.18, 42.7321, 0.57", "88.2031, -266.921, 42.6109, 0.57", "88.5037, -268.3, 42.3752, 0.57", "89.0818, -270.609, 41.9856, 0.57", "89.6074, -272.418, 41.7739, 1.13", "89.9512, -273.462, 41.7153, 2.38", "90.08, -273.825, 41.7107, 2.38", "90.9972, -276.202, 41.8108, 0.79", "91.5146, -277.544, 41.8339, 0.79", "92.0888, -279.154, 41.8713, 0.57", "92.5233, -280.473, 41.8629, 0.57", "92.8745, -281.703, 41.8146, 0.57", "93.1499, -282.789, 41.7232, 0.57", "93.8095, -285.525, 41.3371, 0.57", "93.9091, -285.981, 41.2828, 2.94", "94.361, -288.065, 41.032, 0.68", "94.8143, -290.058, 40.8594, 0.68", "95.2208, -291.623, 40.7871, 0.68", "95.591, -292.892, 40.7727, 0.68", "96.2414, -294.889, 40.8311, 0.68", "96.8617, -296.773, 40.8575, 0.68", "97.3206, -298.146, 40.8563, 0.68", "97.7564, -299.448, 40.8268, 0.68", "98.5779, -301.921, 40.7955, 0.68", "98.9737, -303.087, 40.7945, 0.68", "99.4001, -304.281, 40.8123, 0.68", "100.488, -307.441, 41.0885, 0.68", "100.727, -308.159, 41.181, 0.68", "101.474, -310.683, 41.6521, 0.57", "101.647, -311.349, 41.8082, 0.57", "101.75, -311.825, 41.9332, 2.49", "102.358, -314.965, 42.8788, 0.68", "102.502, -315.853, 43.1894, 0.68", "103.026, -318.973, 44.3213, 0.68", "103.207, -319.959, 44.6707, 0.68", "103.644, -321.951, 45.3346, 0.68", "104.176, -323.974, 45.9578, 0.68", "104.778, -325.815, 46.447, 0.68", "105.393, -327.382, 46.8959, 0.68", "106.47, -329.646, 47.5622, 0.68", "106.918, -330.501, 47.849, 0.68", "107.255, -331.126, 48.0977, 2.72", "107.748, -332.086, 48.5047, 1.92", "108.587, -333.979, 49.3842, 0.91", "109.001, -335.194, 50.046, 0.91", "109.3, -336.422, 50.8221, 0.68", "109.558, -337.765, 51.776, 0.68", "109.786, -339.132, 52.8665, 0.68", "110.053, -340.875, 54.36, 0.68", "110.232, -342.082, 55.5436, 0.68", "110.497, -343.721, 57.3647, 0.68", "110.753, -344.932, 58.962, 0.68", "111.171, -346.497, 61.239, 0.68", "111.395, -347.17, 62.3694, 0.68", "111.979, -348.643, 64.8578, 0.68", "112.381, -349.539, 66.3005, 0.68", "113.455, -351.808, 69.7157, 0.68", "113.875, -352.706, 70.9595, 0.68", "114.9, -354.9, 73.7101, 0.68", "115.625, -356.479, 75.4886, 0.68", "115.873, -357.022, 75.995, 0.68", "116.088, -357.505, 76.3992, 0.68", "116.678, -359.018, 77.4798, 0.68", "116.908, -359.635, 77.9575, 0.68", "117.481, -361.308, 79.1914, 0.45", "117.772, -362.172, 80.0371, 0.45", "117.89, -362.551, 80.4326, 0.45", "118.068, -363.133, 81.058, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.72229, -57.1547, 7.73296, 0.79", "7.00533, -56.179, 7.66408, 0.79", "8.1257, -55.3271, 7.60394, 0.57", "8.63818, -54.9374, 7.57643, 0.34", "9.22119, -54.494, 7.54513, 0.34", "9.46865, -54.3058, 7.53184, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "68.5396, -44.3998, 9.0579, 0.45", "69.2914, -46.5679, 8.95632, 0.45", "70.2932, -49.2999, 8.66282, 0.45", "72.4213, -54.9956, 7.87442, 0.45", "74.0018, -58.8718, 6.84899, 0.45", "75.4894, -62.7259, 5.58612, 0.45", "75.8725, -63.8403, 5.19615, 0.45", "77.086, -67.7487, 3.74014, 0.45", "78.539, -72.8297, 1.78223, 0.45", "80.3681, -80.095, -0.981394, 0.45", "81.3117, -84.3178, -2.59917, 0.45", "82.3781, -90.3034, -4.87227, 0.45", "83.0827, -95.9967, -6.92626, 0.45", "83.288, -99.9447, -8.25244, 0.45", "83.0683, -105.4, -10.0134, 0.45", "82.5626, -108.604, -10.9512, 0.45", "81.9777, -111.489, -11.8846, 0.45", "80.9089, -114.874, -13.1761, 0.45", "79.737, -117.259, -14.2625, 0.45", "77.7729, -120.153, -15.7673, 0.45", "74.9657, -123.321, -17.5732, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "68.5396, -44.3998, 9.0579, 0.45", "72.602, -52.3095, 11.8279, 0.45", "74.4306, -55.87, 13.0748, 0.45", "76.9433, -60.7623, 14.7881, 0.45", "78.2575, -63.3212, 15.6842, 0.45", "81.0858, -68.8281, 17.6127, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "17.1695, -97.663, 53.9695, 0.57", "14.2363, -100.127, 54.413, 0.57", "11.9512, -102.164, 54.8472, 0.57", "10.1121, -103.877, 55.1975, 0.57", "9.02375, -105.027, 55.4129, 0.57", "7.33301, -107.059, 55.8067, 0.57", "5.10027, -110.075, 56.6311, 0.57", "3.83818, -112.026, 57.3045, 0.57", "3.04097, -113.487, 57.7625, 0.57", "1.57074, -116.006, 58.9493, 0.57", "-0.521487, -119.475, 60.7472, 0.57", "-3.26749, -123.432, 63.1615, 0.57", "-4.29593, -124.657, 63.9874, 0.57", "-7.30115, -127.232, 66.2249, 0.57", "-15.5203, -131.709, 71.6351, 0.57", "-18.1304, -132.429, 72.9654, 0.57", "-21.7926, -132.702, 74.2152, 0.57", "-25.3151, -132.592, 74.9601, 0.57", "-29.7818, -132.357, 75.8942, 0.57", "-33.4229, -132.156, 76.4358, 0.57", "-37.6006, -132.113, 76.8471, 0.57", "-41.261, -132.337, 77.4064, 0.57", "-45.8663, -133.053, 78.2429, 0.57", "-52.9315, -135.017, 79.8561, 0.57", "-56.4769, -136.544, 81.1283, 0.57", "-60.1274, -138.5, 82.9344, 0.57", "-62.2634, -139.757, 84.3124, 0.57", "-63.4908, -140.463, 85.2467, 0.57", "-65.2221, -141.454, 86.5932, 0.57", "-71.5872, -144.703, 91.3475, 0.57", "-72.9271, -145.346, 92.3245, 0.57", "-74.7817, -146.191, 93.6075, 0.57", "-80.6943, -148.744, 97.5994, 0.57", "-83.1487, -149.848, 99.1332, 0.57", "-90.1797, -153.122, 103.102, 0.57", "-91.6513, -153.85, 103.855, 0.57", "-97.2993, -156.753, 106.602, 0.57", "-98.8658, -157.587, 107.318, 0.57", "-102.312, -159.47, 108.692, 0.57", "-104.038, -160.448, 109.305, 0.57", "-111.328, -164.91, 111.479, 0.57", "-114.668, -167.049, 112.35, 0.57", "-118.711, -169.843, 112.988, 0.57", "-123.896, -173.664, 113.435, 0.57", "-129.8, -178.241, 113.561, 0.57", "-131.367, -179.591, 113.39, 0.57", "-133.886, -182.061, 112.648, 0.57", "-137.843, -186.697, 109.816, 0.57", "-139.681, -189.304, 107.473, 0.57", "-141.485, -192.282, 104.363, 0.57", "-143.297, -195.541, 100.675, 0.57", "-144.672, -198.154, 97.5547, 0.57", "-149.507, -208.381, 84.6574, 0.57", "-149.581, -208.559, 84.4235, 2.26", "-150.511, -211.602, 79.6642, 0.68", "-150.662, -212.769, 77.466, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "17.1695, -97.663, 53.9695, 0.57", "19.5635, -99.8707, 60.4378, 0.57", "21.2203, -101.504, 64.8654, 0.57", "21.5637, -101.893, 65.7253, 0.57", "22.4678, -103.044, 67.9427, 0.57", "24.2293, -105.267, 72.2337, 0.57", "28.4899, -110.565, 82.1262, 0.57", "29.3435, -111.676, 83.9117, 0.57", "31.0723, -114.059, 87.2928, 0.57", "31.7368, -115.012, 88.4811, 0.57", "34.4307, -118.857, 93.0091, 0.57", "35.2783, -120.318, 94.3452, 0.57", "36.3617, -122.774, 95.8013, 0.57", "37.5271, -125.069, 97.2542, 0.57", "39.1949, -128.217, 99.382, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "47.7266, -75.7422, 33.4794, 0.34", "46.1283, -77.4315, 34.0337, 0.34", "44.9706, -78.871, 34.3916, 0.34", "43.748, -80.4347, 34.8006, 0.45", "41.6976, -83.0892, 35.5586, 0.45", "39.7655, -85.5981, 36.2253, 0.45", "38.0318, -87.8737, 36.8446, 0.45", "35.7721, -90.9817, 37.4239, 0.45", "34.8861, -92.2991, 37.6398, 0.45", "34.2715, -93.2545, 37.7918, 0.45", "32.6976, -95.7758, 38.2478, 0.45", "31.6788, -97.4571, 38.6384, 0.45", "28.9756, -101.962, 39.8229, 0.45", "27.8401, -103.827, 40.312, 0.45", "27.1456, -105.019, 40.6262, 0.45", "25.7634, -107.408, 41.3619, 0.45", "24.2829, -109.992, 42.0964, 0.45", "23.3117, -111.584, 42.4266, 0.45", "21.4936, -114.368, 42.8625, 0.45", "20.5652, -115.726, 42.9985, 0.45", "19.1836, -117.659, 43.0126, 0.45", "15.7321, -122.268, 42.769, 0.45", "14.0858, -124.43, 42.4523, 0.45", "12.8239, -126.114, 42.1686, 0.45", "11.317, -128.184, 41.8311, 0.45", "8.34422, -132.326, 41.1707, 0.23", "7.62864, -133.345, 41.0083, 0.23", "5.20318, -136.884, 40.7171, 0.23", "4.31563, -138.278, 40.6305, 0.23", "2.28185, -141.564, 40.3445, 0.45", "1.62221, -142.656, 40.2227, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "47.7266, -75.7422, 33.4794, 0.45", "48.4152, -77.688, 34.1741, 0.45", "49.066, -79.6146, 34.8405, 0.45", "49.5617, -81.1946, 35.3787, 0.45", "50.1855, -83.2222, 36.1688, 0.45", "51.221, -86.5298, 37.5286, 0.45", "51.9154, -88.7478, 38.4404, 0.45", "52.2844, -90.0667, 38.9641, 0.45", "52.8413, -92.2952, 39.8658, 0.45", "53.3734, -94.6258, 40.8158, 0.45", "53.8761, -96.6464, 41.7654, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-20.1719, -83.5916, -25.9533, 0.57", "-20.53, -83.9336, -29.1169, 0.57", "-20.5812, -83.9825, -29.5689, 0.57", "-20.6922, -84.0885, -30.5497, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-20.1719, -83.5916, -25.9533, 0.68", "-20.5781, -84.7499, -26.5297, 0.68", "-21.2923, -86.3692, -27.7048, 0.68", "-21.6938, -87.1461, -28.3113, 0.68", "-22.0571, -87.7306, -28.7838, 0.68", "-22.9497, -88.9702, -29.9889, 0.68", "-23.3751, -89.5205, -30.5493, 0.68", "-24.7679, -91.1756, -32.3633, 0.68", "-25.253, -91.7662, -32.9556, 0.68", "-25.8856, -92.5104, -33.6335, 0.68", "-27.2107, -94.0472, -34.9296, 0.68", "-28.2668, -95.2141, -35.7971, 0.68", "-30.0133, -97.1433, -37.1005, 0.68", "-31.5229, -98.8069, -38.1084, 0.68", "-33.1663, -100.611, -39.1399, 0.68", "-34.4794, -102.066, -39.9194, 0.68", "-36.042, -103.752, -40.7211, 0.68", "-37.4675, -105.176, -41.4275, 0.57", "-38.7493, -106.317, -42.0116, 0.57", "-40.3251, -107.678, -42.7771, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-6.16291, -75.581, 15.0529, 0.45", "-8.71398, -75.9892, 16.6713, 0.45", "-9.87736, -76.0413, 17.4588, 0.45", "-12.5316, -75.9872, 19.0567, 0.45", "-13.2448, -75.9344, 19.5064, 0.45", "-14.23, -75.7917, 20.1227, 0.45", "-14.8705, -75.6852, 20.7821, 0.45", "-15.5182, -75.5416, 21.7343, 0.45", "-16.0906, -75.3422, 22.7708, 0.45", "-16.7062, -75.0236, 23.8058, 0.45", "-17.1379, -74.75, 24.5149, 0.45", "-19.8022, -72.9987, 28.9208, 0.45", "-20.3881, -72.6574, 29.8293, 0.45", "-21.5865, -72.0549, 31.5138, 0.45", "-23.4744, -71.1959, 33.9387, 0.45", "-24.2154, -70.954, 34.7386, 0.45", "-26.4308, -70.6843, 36.7346, 0.45", "-27.4712, -70.7728, 37.3753, 0.45", "-28.0895, -70.9529, 37.7408, 0.34", "-28.783, -71.3002, 38.1189, 0.34", "-30.6941, -72.4626, 38.9152, 0.34", "-32.4144, -73.5413, 39.3901, 0.34", "-33.6695, -74.3066, 39.5747, 0.34", "-35.1585, -75.1424, 39.8053, 0.34", "-37.6637, -76.465, 40.2324, 0.34", "-40.9146, -78.0321, 40.8194, 0.34", "-42.0327, -78.4715, 41.0033, 0.34", "-42.8199, -78.7044, 41.2025, 0.34", "-45.0353, -79.2381, 41.9734, 0.34", "-46.5146, -79.5778, 42.705, 0.34", "-47.6396, -79.8347, 43.4863, 0.34", "-48.8653, -80.1392, 44.5568, 0.34", "-50.4123, -80.5884, 45.8463, 0.34", "-52.3259, -81.2297, 47.4057, 0.34", "-54.4595, -82.0378, 49.032, 0.34", "-56.586, -82.9126, 50.573, 0.34", "-57.9344, -83.5403, 51.4744, 0.34", "-59.9435, -84.6282, 52.7145, 0.34", "-61.079, -85.2813, 53.3038, 0.34", "-61.8656, -85.7381, 53.6464, 0.34", "-64.2084, -87.0732, 54.365, 0.34", "-65.5944, -87.9091, 54.7308, 0.34", "-67.427, -89.0157, 55.2337, 0.34", "-68.1288, -89.4202, 55.4576, 0.34", "-69.8404, -90.3331, 55.9231, 0.34", "-70.7549, -90.8043, 56.1457, 0.34", "-72.5203, -91.6913, 56.5052, 0.34", "-73.5555, -92.2003, 56.671, 0.34", "-74.6981, -92.7376, 56.7984, 0.34", "-76.7428, -93.6751, 56.9856, 0.34", "-78.432, -94.3969, 57.1076, 0.34", "-80.1831, -95.0488, 57.1941, 0.34", "-81.8286, -95.5483, 57.2586, 0.34", "-83.0848, -95.8779, 57.3569, 0.34", "-84.3121, -96.1599, 57.4655, 0.34", "-85.4906, -96.368, 57.5916, 0.34", "-86.462, -96.4552, 57.7214, 0.34", "-88.2406, -96.4211, 58.0335, 0.34", "-89.4843, -96.2744, 58.3326, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.16291, -75.581, 15.0529, 2.72", "-5.18537, -78.6741, 19.0593, 2.72", "-4.70647, -80.0264, 20.7454, 1.47", "-4.30426, -81.2336, 22.0648, 1.13", "-3.03414, -85.2073, 26.0942, 1.13", "-2.82712, -86.0142, 26.7983, 3.39", "-2.52984, -87.6539, 28.0132, 1.81", "-2.26993, -91.1118, 29.6188, 0.68", "-2.27971, -93.0332, 30.2637, 0.68", "-2.41707, -94.0604, 30.4431, 0.68", "-3.12969, -97.0857, 30.549, 0.68", "-3.72799, -99.1292, 30.608, 0.68", "-4.3626, -100.901, 30.6082, 0.68", "-5.13107, -102.883, 30.5078, 0.68", "-6.01653, -105.172, 30.4774, 0.68", "-6.55762, -106.597, 30.4498, 0.68", "-7.21554, -108.446, 30.4516, 0.68", "-7.77647, -110.094, 30.4277, 0.68", "-8.93961, -113.661, 30.4207, 0.68", "-9.17454, -114.489, 30.4777, 3.51", "-9.64012, -116.435, 30.7215, 1.7", "-9.98762, -117.929, 31.0665, 0.79", "-10.3983, -119.657, 31.6382, 0.79", "-11.1388, -122.842, 32.9402, 0.68", "-11.8027, -125.829, 34.3083, 0.79", "-11.9908, -126.728, 34.7076, 0.45", "-12.3421, -129.289, 36.3894, 0.45", "-12.3996, -130.232, 37.1374, 0.45", "-12.3846, -130.929, 37.7611, 0.68", "-12.2241, -132.572, 39.4113, 0.68", "-12.0995, -133.427, 40.2819, 0.68", "-11.168, -138.914, 45.9362, 2.38", "-10.986, -139.829, 46.924, 1.47", "-10.8922, -140.328, 47.4643, 0.79", "-10.5325, -142.243, 49.5001, 0.79", "-10.2795, -143.671, 50.9277, 0.79", "-10.1332, -144.725, 51.8155, 2.15", "-9.85033, -148.023, 53.6795, 0.79", "-9.65776, -150.012, 54.6855, 0.68", "-9.52239, -151.452, 55.2418, 0.68", "-9.3952, -152.783, 55.5806, 0.68", "-9.35753, -153.315, 55.6707, 0.68", "-9.32102, -154.935, 55.7285, 0.68", "-9.38532, -156.672, 55.5769, 0.68", "-9.7494, -159.717, 55.2706, 0.68", "-9.87877, -160.293, 55.2113, 2.6", "-10.1759, -161.266, 55.1216, 2.26", "-11.4356, -164.425, 54.903, 0.45", "-11.9262, -165.402, 54.8669, 0.45", "-12.7617, -166.842, 54.8182, 0.45", "-14.0566, -168.904, 54.7679, 0.45", "-15.3165, -170.844, 54.7814, 0.45", "-16.744, -172.996, 54.8798, 0.45", "-18.2832, -175.27, 55.0704, 0.45", "-19.7802, -177.488, 55.2266, 2.38", "-20.1334, -178.025, 55.2576, 3.51", "-21.8533, -180.632, 55.4159, 0.57", "-22.6172, -181.789, 55.4805, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-6.93433, -61.0208, 16.2023, 0.45", "-5.80632, -60.5734, 14.7991, 0.45", "-5.06171, -60.3345, 14.0525, 0.45", "-3.93989, -60.0959, 13.0364, 0.45", "-0.855245, -59.7326, 10.5959, 0.45", "1.95235, -59.4916, 8.49249, 0.45", "4.66413, -59.2581, 6.49544, 0.45", "7.47812, -58.9776, 4.01015, 0.45", "9.96186, -58.7053, 1.77937, 0.45", "11.8991, -58.5048, 0.0709362, 0.45", "15.554, -58.1717, -3.05598, 0.45", "18.076, -57.9178, -5.21511, 0.45", "22.897, -57.2003, -9.66964, 0.45", "24.5377, -56.8825, -11.6175, 0.45", "24.7077, -56.8334, -11.8448, 0.45", "24.9735, -56.7375, -12.2809, 0.45", "26.0565, -56.415, -14.1102, 0.45", "28.4089, -56.1424, -18.3049, 0.45", "29.7063, -56.1797, -20.4131, 0.45", "30.3834, -56.2482, -21.5096, 0.45", "31.9834, -56.5369, -24.1099, 0.45", "32.99, -56.812, -25.7133, 0.45", "35.4319, -57.5806, -29.5017, 0.45", "37.0745, -58.0148, -31.6245, 0.45", "37.7317, -58.1833, -32.4041, 0.45", "38.487, -58.3314, -33.2213, 0.45", "39.362, -58.3872, -34.0129, 0.45", "40.6551, -58.236, -35.0063, 0.45", "42.9936, -57.5831, -36.1779, 0.45", "44.0558, -57.2666, -36.7836, 0.45", "47.1404, -56.3275, -38.6482, 0.45", "48.5749, -55.8867, -39.5925, 0.45", "49.8162, -55.5461, -40.4363, 0.45", "52.1621, -55.0267, -42.0299, 0.45", "57.6946, -54.1777, -45.6414, 0.45", "58.3622, -54.0968, -46.0826, 0.45", "60.4137, -53.9793, -47.5098, 0.45", "61.8203, -53.9737, -48.5499, 0.45", "62.4614, -54.0036, -49.0421, 0.45", "64.7552, -54.1779, -50.7805, 0.45", "66.6408, -54.2862, -51.3022, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-150.662, -212.769, 77.466, 0.57", "-152.046, -214.294, 77.1569, 0.57", "-155.98, -218.181, 76.107, 0.57", "-159.281, -221.175, 75.1306, 0.45", "-162.42, -223.617, 74.5161, 0.45", "-164.907, -225.406, 74.1201, 0.45", "-167.165, -226.936, 73.8648, 0.45", "-169.769, -228.564, 73.5948, 0.45", "-172.607, -230.037, 73.3725, 0.45", "-180.366, -233.568, 73.0459, 0.45", "-181.843, -234.211, 73.0594, 0.45", "-184.575, -235.465, 73.2478, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-150.662, -212.769, 77.466, 0.57", "-151.653, -216.811, 78.3734, 0.57", "-152.008, -218.189, 78.6971, 0.57", "-152.436, -219.923, 79.0884, 0.57", "-153.002, -222.262, 79.5897, 0.57", "-153.394, -223.868, 79.9834, 0.57", "-153.576, -224.679, 80.1871, 0.57", "-153.611, -224.827, 80.2341, 2.04", "-154.103, -226.876, 80.5944, 0.57", "-154.307, -227.581, 80.6311, 0.57", "-154.683, -228.597, 80.5424, 1.92", "-155.918, -231.148, 80.4741, 0.68", "-156.532, -232.263, 80.4819, 0.68", "-158.262, -235.178, 80.4625, 0.57", "-159.544, -237.152, 80.7377, 0.57", "-161.413, -239.993, 81.4669, 0.57", "-164.033, -244.316, 82.9682, 0.57", "-164.396, -244.978, 83.2683, 0.57", "-165.035, -246.41, 83.9784, 0.45", "-167.071, -252.04, 87.3067, 0.45", "-167.355, -252.964, 87.8625, 0.45", "-168.159, -255.785, 89.4774, 0.45", "-168.713, -257.934, 90.4512, 0.45", "-169.277, -259.692, 91.3309, 0.45", "-170.667, -263.166, 93.0121, 0.45", "-171.379, -264.553, 93.5993, 0.45", "-172.113, -265.724, 94.1823, 0.45", "-172.419, -266.133, 94.4218, 0.45", "-174.936, -269.169, 96.4459, 0.11", "-176.424, -270.843, 97.6698, 0.23", "-178.574, -273.335, 99.3623, 0.23", "-179.495, -274.402, 100.181, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "53.8761, -96.6464, 41.7654, 0.34", "54.8166, -99.4704, 42.5886, 0.34", "55.9488, -102.87, 43.5794, 0.34", "57.0601, -106.207, 44.552, 0.34", "57.8588, -108.605, 45.2511, 0.34", "58.2898, -109.899, 45.6283, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "53.8761, -96.6464, 41.7654, 0.45", "56.9534, -96.0916, 40.7601, 0.45", "59.2528, -95.6872, 39.893, 0.45", "62.7305, -95.1165, 38.567, 0.45", "65.1461, -94.6757, 37.6815, 0.45", "69.9761, -93.7659, 35.9575, 0.45", "73.2227, -93.2125, 34.8726, 0.45", "75.7121, -92.8525, 34.1557, 0.45", "79.089, -92.4501, 33.1825, 0.45", "82.9843, -92.0215, 31.9661, 0.45", "83.462, -91.9681, 31.7894, 1.58", "87.0535, -91.5226, 30.4129, 0.34", "89.9273, -91.2598, 29.1537, 0.34", "94.6827, -90.9346, 26.6741, 0.34", "97.3203, -90.8428, 25.0641, 0.34", "99.997, -91.1521, 23.3565, 0.34", "101.653, -91.5247, 22.2076, 0.34", "103.471, -92.184, 20.9841, 0.34", "106.183, -93.7005, 19.3147, 0.34", "108.238, -95.1271, 18.3416, 0.34", "113.839, -99.4388, 16.2012, 0.34", "116.786, -101.866, 15.0864, 0.34", "119.837, -104.48, 13.929, 0.34", "124.494, -108.639, 12.2815, 0.34", "127.261, -111.296, 11.3638, 0.34", "130.203, -114.245, 10.368, 0.34", "133.124, -117.139, 9.55988, 0.34", "136.076, -119.914, 8.95265, 0.34", "137.48, -121.066, 8.75364, 0.34", "139.213, -122.332, 8.73577, 0.34", "141.233, -123.761, 8.86678, 0.34", "142.827, -124.807, 9.07022, 0.34", "144.708, -125.935, 9.38404, 0.34", "151.307, -129.738, 10.4311, 0.34", "154.448, -131.44, 10.8861, 0.34", "157.619, -133.122, 11.3231, 0.34", "160.546, -134.698, 11.7137, 0.34", "165.38, -137.375, 12.2429, 0.34", "169.178, -139.475, 12.6191, 0.34", "171.571, -140.751, 12.7953, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-89.4843, -96.2744, 58.3326, 0.34", "-90.9715, -96.7641, 59.2313, 0.34", "-94.1488, -98.0818, 60.6169, 0.34", "-95.4421, -98.686, 61.021, 2.04", "-96.7317, -99.3248, 61.3586, 1.13", "-98.8089, -100.506, 61.8785, 0.79", "-100.26, -101.37, 62.0069, 0.57", "-102.868, -102.922, 61.9019, 0.57", "-108.408, -106.174, 61.2136, 0.57", "-110.925, -107.552, 61.0444, 0.57", "-114.923, -109.61, 60.9715, 0.57", "-122.102, -113.074, 61.1647, 0.57", "-126.129, -114.793, 61.3427, 0.57", "-128.027, -115.507, 61.4612, 0.57", "-135.784, -118.136, 62.1625, 0.57", "-138.048, -118.86, 62.4414, 0.57", "-140.137, -119.563, 62.8474, 0.57", "-143.397, -120.833, 63.7045, 0.57", "-146.702, -122.324, 64.6731, 0.57", "-148.898, -123.429, 65.3785, 0.57", "-151.583, -125.025, 66.2568, 0.57", "-158.215, -129.261, 68.7132, 0.57", "-161.663, -131.521, 70.086, 0.57", "-166.223, -134.586, 71.9766, 0.57", "-169.777, -136.983, 73.4503, 0.57", "-173.429, -139.354, 74.907, 0.57", "-175.908, -140.987, 75.9043, 0.57", "-178.366, -142.593, 76.7894, 0.57", "-181.419, -144.589, 77.9041, 0.57", "-183.173, -145.705, 78.4376, 0.57", "-185.16, -146.911, 79.0274, 0.57", "-189.146, -149.253, 80.2571, 0.57", "-192.931, -151.528, 81.2347, 0.57", "-195.64, -153.171, 81.7858, 0.57", "-199.043, -155.215, 82.2931, 0.57", "-201.854, -156.934, 82.5575, 0.57", "-203.77, -158.111, 82.6295, 0.57", "-207.459, -160.283, 82.1987, 0.57", "-210.259, -161.909, 81.6186, 0.57", "-213.495, -163.684, 80.4278, 0.57", "-216.301, -165.163, 78.8974, 0.57", "-219.298, -166.652, 76.9052, 0.57", "-224.069, -168.767, 73.2093, 0.57", "-225.874, -169.49, 71.8182, 0.57", "-232.165, -171.767, 67.0282, 0.57", "-236.715, -173.291, 63.5639, 0.57", "-238.222, -173.82, 62.4765, 0.57", "-242.389, -175.518, 59.9095, 0.57", "-247.038, -178.122, 58.4015, 0.57", "-249.923, -180.206, 58.1674, 0.57", "-250.932, -181.09, 58.3815, 0.57", "-253.193, -183.215, 59.1239, 0.57", "-254.498, -184.459, 59.546, 0.57", "-258.607, -188.697, 60.6499, 0.57", "-261.321, -191.599, 60.7824, 0.57", "-262.663, -193.042, 60.521, 0.45", "-263.888, -194.397, 60.0683, 0.45", "-265.725, -196.636, 58.8288, 0.45", "-267.825, -199.72, 56.3513, 0.45", "-269.212, -202.215, 53.8226, 0.45", "-271.11, -206.173, 49.54, 0.45", "-272.03, -208.268, 47.2611, 0.45", "-273.259, -211.44, 44.1321, 0.45", "-274.521, -215.052, 41.0075, 0.45", "-275.575, -217.771, 39.0805, 0.45", "-276.023, -218.863, 38.5018, 0.45", "-276.927, -220.794, 37.835, 0.45", "-279.055, -224.658, 36.8672, 0.45", "-280.694, -227.266, 36.561, 0.45", "-283.137, -230.709, 36.4785, 0.45", "-285.513, -233.745, 36.8396, 0.45", "-287.968, -236.629, 37.4811, 0.45", "-289.631, -238.374, 38.1555, 0.45", "-290.807, -239.495, 38.8833, 0.45", "-292.038, -240.661, 39.9984, 0.45", "-296.056, -244.86, 44.298, 0.45", "-296.861, -245.739, 45.1903, 0.45", "-298.151, -247.38, 47.1077, 0.45", "-300.359, -250.632, 50.8289, 0.45", "-302.149, -253.738, 54.1706, 0.45", "-304.176, -257.929, 58.169, 0.45", "-305.16, -260.232, 59.9361, 0.45", "-310.233, -271.537, 67.4803, 0.45", "-311.611, -274.527, 69.1141, 0.45", "-313.499, -278.437, 70.3059, 0.45", "-316.244, -283.925, 70.9491, 0.45", "-320.402, -292.268, 70.8787, 0.45", "-323.769, -299.145, 70.0439, 0.45", "-326.766, -305.267, 68.4746, 0.45", "-333.397, -319.301, 64.3284, 0.45", "-334.348, -321.386, 63.6025, 0.45", "-336.489, -326.588, 61.6139, 0.45", "-337.658, -329.99, 59.9548, 0.45", "-339.023, -334.803, 57.4734, 0.45", "-339.984, -338.509, 55.591, 0.45", "-340.552, -340.5, 54.8464, 0.45", "-341.494, -343.276, 53.8127, 0.45", "-345.571, -353.451, 50.5834, 0.45", "-347.952, -358.851, 49.8167, 0.45", "-348.967, -360.996, 49.9076, 0.45", "-352.797, -368.589, 51.0338, 0.45", "-354.727, -372.251, 51.916, 0.45", "-358.021, -377.874, 53.6433, 0.45", "-362.001, -384.273, 56.5754, 0.45", "-363.775, -387.103, 57.6386, 0.45", "-365.946, -391.141, 58.6152, 0.45", "-366.582, -392.998, 58.7023, 0.45", "-367.797, -399.687, 57.9387, 0.45", "-368.468, -407.587, 55.8795, 0.45", "-368.386, -419.931, 51.1973, 0.45", "-367.363, -428.251, 47.7373, 0.45", "-366.104, -433.154, 45.6311, 0.45", "-365.766, -434.064, 45.2063, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-89.4843, -96.2744, 58.3326, 0.34", "-88.0093, -95.8645, 59.3266, 0.34", "-86.9521, -95.5708, 60.0391, 0.34", "-82.8558, -94.4326, 62.7996, 0.34", "-81.7261, -94.1187, 63.561, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.6172, -181.789, 55.4805, 0.57", "-23.8083, -182.424, 56.2471, 0.57", "-25.8356, -183.653, 57.0499, 0.57", "-26.9559, -184.43, 57.3678, 0.57", "-28.4979, -185.604, 57.4851, 0.57", "-29.9565, -186.812, 57.4997, 0.57", "-32.5733, -189.039, 57.4626, 0.57", "-34.0234, -190.337, 57.344, 0.57", "-35.6719, -191.853, 57.1288, 0.57", "-38.6443, -194.602, 56.7602, 0.57", "-41.9748, -197.614, 56.3663, 0.57", "-44.2017, -199.61, 56.2197, 0.57", "-44.9719, -200.288, 56.2262, 2.15", "-45.6631, -200.872, 56.2742, 1.36", "-47.1007, -202.028, 56.5728, 0.68", "-47.8666, -202.617, 56.9001, 0.68", "-48.7388, -203.249, 57.42, 0.57", "-49.218, -203.593, 57.7877, 0.57", "-50.4624, -204.498, 58.8323, 0.57", "-51.8379, -205.477, 60.0281, 0.57", "-52.7484, -206.134, 60.8149, 0.57", "-53.8915, -207.012, 61.6785, 0.57", "-55.0302, -207.892, 62.3098, 0.57", "-55.4871, -208.257, 62.5002, 0.57", "-56.182, -208.838, 62.6902, 0.57", "-57.1359, -209.648, 62.8675, 0.57", "-59.9698, -212.028, 63.2973, 0.57", "-61.7734, -213.537, 63.4488, 0.57", "-63.3022, -214.818, 63.5335, 0.57", "-65.2226, -216.361, 63.6269, 0.57", "-67.7002, -218.294, 63.821, 0.57", "-70.9106, -220.612, 64.1694, 0.57", "-72.2358, -221.495, 64.2988, 1.7", "-73.4326, -222.258, 64.4147, 1.7", "-74.6158, -222.965, 64.4548, 0.68", "-76.7908, -224.169, 64.4502, 0.68", "-78.1502, -224.929, 64.4024, 0.68", "-80.2875, -226.183, 64.3237, 0.68", "-80.8753, -226.556, 64.2904, 1.7", "-81.8139, -227.244, 64.1888, 1.7", "-82.4408, -227.768, 64.0975, 1.7", "-83.1722, -228.47, 63.972, 0.68", "-84.8797, -230.322, 63.7172, 0.68", "-86.5156, -232.232, 63.5502, 0.68", "-87.8053, -233.849, 63.5023, 0.68", "-88.3992, -234.652, 63.5136, 0.68", "-89.7385, -236.594, 63.6213, 0.68", "-90.9471, -238.444, 63.813, 0.68", "-91.5165, -239.39, 63.9779, 0.68", "-92.827, -241.687, 64.5595, 0.68", "-93.1963, -242.363, 64.7508, 0.68", "-93.6334, -243.188, 64.997, 1.02", "-94.0742, -244.044, 65.2444, 0.45", "-94.6981, -245.398, 65.5667, 0.45", "-94.8778, -245.815, 65.6285, 0.45", "-95.4162, -247.071, 65.7521, 0.45", "-96.0532, -248.552, 65.9077, 0.45", "-96.7635, -250.246, 66.085, 0.45", "-97.5654, -252.204, 66.2828, 0.45", "-98.2674, -253.968, 66.4805, 0.45", "-99.3707, -256.715, 66.7916, 0.45", "-99.6902, -257.555, 66.886, 0.45", "-100.059, -258.601, 67.0005, 1.47", "-100.184, -258.961, 67.0404, 1.47", "-100.806, -260.705, 67.1647, 0.68", "-101.551, -262.795, 67.2665, 0.57", "-102.198, -264.681, 67.3835, 0.57", "-102.809, -266.45, 67.5885, 0.57", "-102.985, -266.952, 67.6662, 0.57", "-103.524, -268.501, 68.0301, 0.57", "-104.094, -270.215, 68.6924, 0.57", "-104.512, -271.709, 69.4299, 1.7", "-105.1, -274.099, 70.6974, 0.68", "-105.346, -275.3, 71.3502, 0.68", "-105.747, -277.537, 72.5355, 0.68", "-106.334, -280.821, 74.1608, 0.68", "-106.802, -283.097, 75.1273, 0.68", "-107.015, -283.956, 75.4258, 2.15", "-107.165, -284.482, 75.5728, 2.15", "-107.741, -286.236, 75.8943, 0.68", "-108.522, -288.24, 76.1448, 0.68", "-109.063, -289.517, 76.31, 0.68", "-109.847, -291.247, 76.6394, 0.68", "-110.679, -293.095, 76.9836, 0.68", "-111.455, -294.915, 77.3056, 0.68", "-112.548, -297.772, 77.7762, 0.68", "-113.17, -299.661, 78.0573, 0.68", "-113.614, -301.11, 78.2163, 0.68", "-114.247, -303.307, 78.3512, 0.68", "-114.484, -304.187, 78.3635, 0.68", "-115.046, -306.435, 78.284, 0.68", "-115.386, -307.882, 78.1404, 0.68", "-115.818, -309.696, 77.9486, 0.68", "-116.265, -311.431, 77.8354, 0.68", "-116.671, -312.823, 77.831, 0.68", "-116.963, -313.709, 77.834, 0.68", "-117.313, -314.676, 77.8998, 0.68", "-117.444, -315.027, 77.9467, 0.68", "-118.062, -316.657, 78.2467, 0.68", "-118.748, -318.538, 78.6669, 0.68", "-119.203, -319.907, 78.9923, 0.68", "-119.796, -321.828, 79.4415, 0.68", "-120.308, -323.671, 79.9084, 0.68", "-120.427, -324.166, 80.064, 0.68", "-120.69, -325.405, 80.4913, 0.57", "-120.918, -326.52, 80.877, 0.57", "-121.334, -328.598, 81.5954, 0.57", "-121.678, -330.551, 82.3317, 0.57", "-122.059, -332.686, 83.2485, 0.57", "-122.452, -334.823, 84.1791, 0.57", "-122.859, -336.78, 84.9485, 0.57", "-123.164, -338.152, 85.3837, 1.47", "-123.817, -340.938, 86.0941, 0.45", "-124.169, -342.29, 86.3278, 0.45", "-124.904, -345.151, 86.6165, 0.45", "-125.429, -347.509, 86.8477, 0.45", "-125.955, -350.251, 87.0628, 0.45", "-126.126, -352.501, 87.2161, 0.45", "-126.806, -351.781, 86.2124, 0.45", "-127.86, -349.631, 84.6161, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-22.6172, -181.789, 55.4805, 0.57", "-23.6203, -183.448, 55.8502, 0.57", "-24.2891, -184.552, 56.0944, 0.57", "-25.2057, -186.108, 56.4241, 0.57", "-26.5906, -188.46, 56.9221, 0.57", "-28.2455, -191.27, 57.5172, 0.57", "-29.2713, -193.012, 57.8861, 2.15", "-30.1993, -194.538, 58.2038, 2.72", "-30.8934, -195.738, 58.463, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "58.2898, -109.899, 45.6283, 0.45", "62.4711, -111.271, 45.7827, 0.45", "63.4667, -111.573, 45.8991, 0.45", "65.3249, -111.999, 46.1732, 0.45", "67.7883, -112.508, 46.5687, 0.45", "70.0374, -112.978, 46.9442, 0.45", "72.9928, -113.536, 47.4188, 0.45", "74.0298, -113.68, 47.6358, 0.45", "77.0045, -113.958, 48.1285, 0.45", "79.3543, -114.05, 48.408, 0.45", "81.2385, -114.003, 48.5177, 0.45", "83.9357, -113.738, 48.3647, 0.45", "85.741, -113.445, 48.0784, 0.45", "87.7273, -113.043, 47.6632, 0.45", "89.7749, -112.611, 47.0501, 0.45", "92.0726, -112.087, 46.142, 0.45", "95.3259, -111.273, 44.7054, 0.45", "96.6506, -110.951, 44.0514, 0.45", "98.054, -110.633, 43.3036, 0.45", "101.455, -109.996, 41.4048, 0.45", "102.891, -109.835, 40.4916, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "58.2898, -109.899, 45.6283, 0.34", "57.4222, -113.417, 45.4419, 0.34", "57.0022, -114.765, 45.3165, 0.34", "56.2179, -117.009, 45.0743, 0.34", "54.7311, -121.098, 44.6056, 0.34", "53.2416, -124.806, 44.0002, 0.34", "51.5537, -128.612, 43.3238, 0.34", "49.389, -132.359, 42.5725, 0.34", "49.0583, -132.825, 42.4688, 0.34", "48.8381, -133.073, 42.3968, 1.58", "45.9942, -135.702, 41.6379, 0.45", "44.6747, -136.87, 41.227, 0.45", "41.3538, -139.86, 40.0182, 0.45", "40.2495, -140.927, 39.5907, 0.45", "37.4882, -143.876, 38.4574, 0.45", "36.5562, -144.959, 38.0922, 0.45", "34.1558, -148.118, 37.2205, 0.45", "33.1073, -149.694, 36.7613, 0.45", "31.2838, -152.862, 35.9809, 0.45", "30.1738, -154.885, 35.5517, 0.45", "28.7482, -157.589, 35.1357, 0.45", "26.6421, -161.728, 34.4653, 0.45", "25.149, -164.666, 34.0668, 0.45", "23.2661, -168.464, 33.5732, 0.45", "21.6959, -171.529, 33.2538, 0.45", "20.3354, -174.192, 32.955, 0.45", "18.7456, -177.246, 32.5895, 0.45", "17.2335, -179.992, 32.3186, 0.45", "16.2191, -181.624, 32.2065, 0.45", "14.486, -184.218, 31.8196, 0.45", "13.8469, -185.152, 31.6675, 0.45", "11.9941, -187.756, 31.2008, 0.45", "10.8794, -189.281, 30.9555, 0.45", "9.29421, -191.457, 30.5577, 0.45", "6.38733, -195.619, 29.432, 0.45", "4.73941, -198.147, 28.6303, 0.45", "3.83222, -199.626, 28.154, 0.45", "3.13434, -200.918, 27.78, 0.45", "2.60376, -202.001, 27.448, 0.45", "0.443318, -206.617, 26.1305, 0.45", "-0.56518, -208.753, 25.6031, 0.45", "-1.14912, -210.034, 25.254, 0.45", "-2.16208, -212.297, 24.6754, 0.45", "-3.75807, -216.004, 23.3424, 0.45", "-4.49874, -217.756, 22.6725, 0.45", "-5.03191, -219.029, 22.2372, 0.45", "-5.64362, -220.473, 21.7516, 0.45", "-6.88553, -223.395, 20.7455, 0.45", "-9.74735, -230.234, 19.1972, 0.45", "-10.882, -232.965, 19.1592, 0.45", "-12.1023, -235.857, 19.6306, 0.45", "-13.5645, -238.892, 20.894, 0.45", "-14.2637, -240.116, 21.7221, 0.45", "-18.8737, -246.828, 28.2053, 0.45", "-20.3278, -248.64, 30.409, 0.45", "-20.6069, -248.944, 30.81, 0.45", "-22.3934, -250.691, 33.0836, 0.45", "-23.8383, -252.087, 34.6615, 0.45", "-25.5159, -253.781, 35.9683, 0.45", "-25.8666, -254.165, 36.0908, 0.45", "-26.9788, -255.502, 36.2739, 0.45", "-28.6757, -257.753, 36.354, 0.45", "-29.9084, -259.558, 36.2837, 0.45", "-31.6913, -262.339, 36.0975, 0.45", "-33.5096, -265.345, 35.8669, 0.45", "-36.4225, -270.616, 35.6375, 0.45", "-37.2483, -272.211, 35.6062, 0.45", "-38.0538, -273.817, 35.5926, 0.45", "-38.9732, -275.683, 35.6223, 0.45", "-39.9364, -277.752, 35.8013, 0.45", "-41.7007, -282.055, 36.4035, 0.45", "-42.0696, -283.122, 36.7282, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-30.8934, -195.738, 58.463, 0.45", "-32.0199, -197.028, 58.5784, 0.45", "-32.9007, -198.065, 58.68, 0.45", "-33.7075, -199.026, 58.7786, 0.45", "-34.9061, -200.532, 58.9413, 0.45", "-35.6141, -201.407, 59.0495, 0.45", "-36.6862, -202.733, 59.2664, 0.45", "-37.7684, -204.163, 59.5537, 0.45", "-38.0526, -204.537, 59.6371, 1.47", "-39.0999, -205.867, 59.9963, 0.45", "-39.7605, -206.715, 60.2573, 0.45", "-40.4019, -207.582, 60.5939, 0.45", "-40.8396, -208.236, 60.8773, 0.45", "-41.7076, -209.686, 61.5566, 0.45", "-42.2977, -210.731, 62.0534, 0.79", "-42.8272, -211.735, 62.5248, 0.79", "-43.7496, -213.667, 63.4358, 0.45", "-44.4355, -215.138, 64.1192, 0.45", "-45.2373, -217.005, 64.9925, 0.45", "-45.4763, -217.637, 65.3221, 0.45", "-45.6918, -218.248, 65.6497, 1.92", "-46.0396, -219.381, 66.3662, 1.47", "-46.2973, -220.359, 67.0186, 0.57", "-46.505, -221.297, 67.6768, 0.57", "-46.7863, -222.893, 68.9129, 0.57", "-46.972, -224.144, 69.8671, 0.57", "-47.3949, -226.889, 71.879, 0.57", "-47.4905, -227.49, 72.2739, 0.57", "-47.7233, -228.728, 72.9802, 0.57", "-48.252, -230.917, 73.9407, 0.57", "-48.606, -232.158, 74.2992, 0.57", "-48.9962, -233.361, 74.4293, 0.57", "-49.5381, -234.903, 74.4786, 0.57", "-50.3094, -237.061, 74.6452, 0.57", "-51.1333, -239.292, 74.89, 0.57", "-51.8784, -241.298, 75.1074, 0.57", "-53.1229, -244.625, 75.5431, 0.57", "-54.1462, -247.087, 75.8114, 0.57", "-55.2081, -249.326, 76.0209, 0.23", "-55.8598, -250.603, 76.1614, 0.23", "-56.6095, -251.956, 76.3355, 0.23", "-57.5848, -253.639, 76.5529, 0.23", "-58.9231, -255.844, 76.851, 0.23", "-59.5117, -256.683, 76.7915, 0.23", "-60.3539, -257.742, 76.6417, 1.7", "-61.3666, -258.869, 76.566, 0.68", "-62.3484, -259.807, 76.5947, 0.45", "-62.9117, -260.284, 76.7151, 0.45", "-65.2571, -261.859, 77.7064, 0.45", "-67.1107, -262.74, 78.5987, 0.45", "-68.4006, -263.187, 79.2381, 0.45", "-69.2395, -263.432, 79.7253, 0.45", "-70.0714, -263.706, 80.1789, 0.45", "-71.4789, -264.432, 80.8836, 0.45", "-71.6748, -264.572, 80.9737, 0.45", "-72.1434, -264.962, 81.0885, 1.92", "-73.2948, -266.089, 81.2692, 0.57", "-74.5965, -267.548, 81.4391, 0.57", "-75.7466, -268.967, 81.4703, 0.45", "-76.3512, -269.776, 81.4562, 0.45", "-77.5485, -271.399, 81.4389, 0.45", "-78.4071, -272.609, 81.4449, 0.57", "-78.9106, -273.343, 81.4489, 0.57", "-80.1272, -275.17, 81.4776, 0.57", "-81.785, -277.597, 81.4773, 0.57", "-82.5316, -278.7, 81.4697, 0.57", "-84.1769, -281.148, 81.4442, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-30.8934, -195.738, 58.463, 0.45", "-30.6993, -197.841, 58.5517, 0.45", "-30.6043, -198.76, 58.5763, 0.45", "-30.182, -201.955, 58.8747, 0.45", "-29.7879, -204.954, 59.2678, 0.45", "-29.5144, -207.401, 59.565, 0.45", "-29.5046, -207.491, 59.5727, 1.81", "-29.3785, -208.654, 59.6482, 1.7", "-29.0857, -211.622, 59.8359, 0.68", "-28.9039, -213.322, 59.9023, 0.68", "-28.6054, -215.493, 60.0301, 0.68", "-28.204, -218.089, 60.1794, 0.68", "-27.9339, -219.639, 60.2151, 0.68", "-27.5118, -221.731, 60.1824, 0.68", "-27.0226, -223.81, 60.0544, 0.68", "-26.3586, -226.238, 59.9028, 0.68", "-25.5687, -228.834, 59.7462, 0.68", "-24.5855, -231.946, 59.4988, 0.68", "-24.0086, -233.953, 59.1807, 0.68", "-23.4692, -236.025, 58.7138, 0.68", "-23.14, -237.48, 58.306, 0.68", "-22.8237, -239.294, 57.7295, 0.68", "-22.3137, -242.887, 56.5552, 0.68", "-21.852, -246.564, 55.3802, 0.57", "-21.6727, -248.101, 54.9065, 0.57", "-21.4379, -250.162, 54.3028, 0.57", "-21.1508, -252.598, 53.5458, 0.57", "-20.8044, -255.329, 52.6844, 0.57", "-20.3449, -258.503, 51.7199, 0.57", "-19.9979, -260.25, 51.2532, 0.57", "-19.7212, -261.562, 50.8955, 0.57", "-19.0007, -264.471, 50.2246, 0.57", "-18.7932, -265.163, 50.0791, 0.57", "-18.3263, -266.578, 49.8438, 0.57", "-17.5371, -268.72, 49.7374, 0.57", "-17.2866, -269.35, 49.7381, 2.6", "-16.3894, -271.558, 49.8198, 2.04", "-15.2888, -274.477, 49.7814, 0.57", "-14.8721, -275.693, 49.6385, 0.57", "-13.8973, -278.343, 49.6476, 0.57", "-13.1964, -280.259, 49.7804, 0.57", "-12.3301, -282.539, 50.0949, 0.57", "-10.9757, -286.155, 50.7188, 0.57", "-9.93486, -289.039, 51.3836, 0.57", "-7.30196, -297.088, 52.8536, 0.57", "-5.98202, -301.748, 53.4781, 0.57", "-5.30999, -304.406, 53.8114, 0.57", "-4.81047, -306.687, 54.0062, 0.57", "-4.56999, -308.057, 54.0664, 0.57", "-4.05203, -313.916, 53.3493, 0.57", "-3.99615, -316.441, 52.5183, 0.57", "-4.00354, -317.539, 52.1024, 0.57", "-4.0251, -319.487, 51.3221, 0.45", "-4.0043, -320.405, 50.9894, 0.45", "-3.80901, -322.263, 50.5253, 0.45", "-3.44778, -324.228, 50.3952, 0.45", "-3.2538, -325.148, 50.3563, 0.45", "-3.03064, -326.19, 50.3363, 0.45", "-2.83367, -327.152, 50.3215, 0.45", "-2.36826, -329.462, 50.2582, 0.45", "-2.05571, -331.074, 50.24, 0.45", "-1.7076, -333.026, 50.2245, 0.45", "-1.25815, -335.453, 50.1797, 0.45", "-0.899983, -337.529, 50.1161, 0.45", "-0.781427, -338.322, 50.0936, 0.45", "-0.505169, -340.379, 50.0038, 0.45", "-0.0404796, -343.896, 49.8701, 0.45", "0.327655, -346.726, 49.78, 0.45", "0.69744, -349.675, 49.7226, 0.45", "1.02925, -352.333, 49.7168, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "102.891, -109.835, 40.4916, 0.45", "103.433, -111.283, 38.5819, 0.45", "103.901, -112.587, 37.1624, 0.45", "104.491, -114.133, 35.6966, 0.45", "104.971, -115.541, 34.3721, 0.45", "106.792, -122.077, 28.1406, 0.45", "107.779, -126.133, 24.2939, 0.45", "108.242, -128.606, 21.7178, 0.45", "108.371, -129.649, 20.6169, 0.45", "108.652, -133.214, 17.0753, 0.45", "108.817, -135.692, 14.8381, 0.45", "108.836, -136.079, 14.5744, 0.45", "109.043, -139.328, 12.5997, 0.45", "109.241, -141.628, 11.1957, 0.45", "109.498, -143.834, 10.1799, 0.45", "109.933, -145.98, 9.47839, 0.34", "110.514, -148.211, 8.90337, 0.34", "110.91, -149.59, 8.60869, 0.34", "111.242, -150.63, 8.45403, 0.34", "112.437, -153.961, 8.00434, 0.34", "113.869, -158.227, 7.39558, 0.34", "114.26, -159.502, 7.29546, 0.34", "114.533, -160.473, 7.1138, 0.34", "115.043, -162.419, 6.62339, 0.34", "115.314, -163.502, 6.30759, 0.34", "115.844, -165.687, 5.56999, 0.34", "116.27, -167.641, 5.03439, 0.34", "117.415, -172.87, 3.27496, 0.34", "117.931, -175.131, 2.38058, 0.34", "118.063, -175.708, 2.11632, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "102.891, -109.835, 40.4916, 0.45", "104.999, -110.973, 40.8442, 0.45", "106.648, -112.135, 40.9673, 0.45", "108.593, -113.69, 41.0767, 0.45", "111.11, -116.152, 40.7907, 0.45", "112.781, -118.094, 40.4714, 0.45", "115.143, -121.126, 39.9669, 0.45", "117.359, -124.58, 39.3722, 0.34", "118.244, -126.169, 39.1284, 0.34", "121.252, -132.093, 38.0974, 0.34", "123.046, -135.727, 37.4065, 0.34", "124.322, -138.309, 36.9825, 0.34", "125.496, -140.737, 36.6905, 0.34", "127.078, -143.92, 36.5595, 0.34", "128.794, -147.417, 36.6111, 0.34", "130.11, -150.063, 36.9265, 0.34", "131.364, -152.576, 37.2613, 0.34", "132.451, -154.897, 37.6881, 0.34", "133.271, -156.703, 38.2042, 0.34", "134.041, -158.534, 38.9861, 0.34", "134.848, -160.499, 39.8973, 0.34", "135.884, -162.91, 40.9809, 0.34", "137.899, -167.282, 42.8325, 0.45", "139.668, -170.748, 44.307, 0.45", "141.386, -173.845, 45.7424, 0.45", "143.507, -177.486, 47.4737, 0.45", "144.599, -179.189, 48.2276, 0.45", "145.917, -181.132, 48.9969, 0.45", "146.679, -182.218, 49.3233, 0.45", "150.012, -186.956, 50.4321, 0.45", "152.264, -190.201, 51.1227, 0.45", "154.379, -193.417, 51.911, 0.45", "155.271, -194.804, 52.2265, 0.45", "158.262, -199.389, 53.3182, 0.45", "159.631, -201.545, 53.8863, 0.45", "161.436, -204.479, 54.8071, 0.45", "162.509, -206.237, 55.5449, 0.45", "163.243, -207.473, 56.1237, 0.45", "165.105, -210.611, 57.6247, 0.45", "166.968, -213.85, 59.2449, 0.45", "168.595, -216.802, 60.437, 0.45", "170.334, -220.091, 61.4431, 0.45", "171.65, -222.61, 61.8774, 0.45", "173.026, -225.356, 62.0513, 0.45", "174.064, -227.489, 61.9781, 0.45", "176.128, -231.772, 61.6033, 0.45", "177.25, -234.176, 61.3686, 0.45", "179.141, -238.332, 61.0592, 0.45", "180.909, -242.14, 60.9267, 0.45", "182.041, -244.481, 60.8973, 0.45", "183.09, -246.59, 60.7941, 0.45", "184.511, -249.456, 60.6789, 0.45", "185.364, -251.079, 60.542, 0.45", "185.813, -251.937, 60.4432, 0.45", "186.931, -254.02, 60.1141, 0.45", "189.916, -259.314, 59.0659, 0.45", "191.113, -261.367, 58.5787, 0.45", "192.8, -264.213, 57.8025, 0.45", "194.187, -266.539, 57.1653, 0.45", "194.705, -267.445, 56.9257, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "194.705, -267.445, 56.9257, 0.45", "193.471, -270.047, 56.4549, 0.45", "192.785, -271.727, 56.244, 0.45", "192.3, -273.207, 55.9525, 0.45", "192.133, -273.983, 55.6657, 0.45", "192.004, -275.276, 55.1356, 0.45", "191.974, -276.399, 54.7029, 0.45", "192.154, -278.087, 54.0993, 0.45", "192.623, -280.927, 53.1112, 0.45", "193.3, -284.636, 51.8364, 0.45", "193.603, -286.663, 51.2437, 0.45", "193.932, -289.441, 50.5869, 0.45", "194.019, -291.098, 50.2892, 0.45", "193.988, -293.297, 50.194, 0.45", "193.653, -296.212, 50.8057, 0.45", "193.042, -299.365, 51.8934, 0.45", "192.538, -301.183, 52.7192, 0.45", "191.892, -302.927, 53.9338, 0.45", "190.544, -306.135, 56.7171, 0.45", "188.664, -310.303, 60.9022, 0.45", "188.083, -311.573, 62.2394, 0.45", "187.264, -313.477, 64.227, 0.45", "185.35, -317.752, 68.9438, 0.45", "184.796, -318.979, 70.3306, 0.45", "184.126, -320.443, 71.8239, 0.45", "183.079, -322.827, 73.9251, 0.45", "182.599, -323.98, 74.9706, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "194.705, -267.445, 56.9257, 0.45", "195.577, -268.548, 57.4174, 0.45", "197.233, -270.502, 58.2111, 0.45", "199.071, -272.401, 58.9149, 0.45", "200.712, -274.027, 59.5313, 0.45", "202.496, -275.796, 60.2023, 0.45", "203.437, -276.79, 60.4823, 0.45", "205.489, -279.092, 60.8035, 0.45", "207.548, -281.526, 60.8396, 0.45", "209.759, -284.342, 60.6023, 0.45", "210.483, -285.304, 60.4817, 0.45", "213.388, -289.235, 59.9279, 0.45", "215.566, -292.275, 59.5471, 0.45", "216.816, -293.984, 59.3825, 0.45", "219.585, -297.504, 59.1638, 0.45", "220.865, -298.973, 59.2211, 0.45", "223.34, -301.582, 59.6882, 0.45", "226.633, -304.721, 60.7649, 0.45", "230.388, -308.187, 62.4975, 0.45", "233.154, -310.661, 64.152, 0.45", "236.611, -313.481, 66.5454, 0.45", "238.409, -314.848, 67.8747, 0.45", "239.641, -315.668, 68.7914, 0.45", "242.997, -317.415, 70.9293, 0.45", "246.181, -318.798, 72.6217, 0.45", "250.394, -320.384, 74.3657, 0.45", "253.303, -321.332, 75.183, 0.45", "258.039, -322.65, 76.1077, 0.45", "264.854, -324.13, 77.0111, 0.45", "266.709, -324.385, 77.1221, 0.45", "268.463, -324.508, 77.1285, 0.45", "271.405, -324.313, 77.0608, 0.45", "273.189, -323.797, 76.953, 0.45", "275.48, -322.155, 76.6267, 0.45", "276.599, -320.824, 76.3761, 0.45", "277.612, -319.486, 76.1062, 0.45", "279.722, -316.608, 75.4873, 0.45", "280.985, -314.954, 75.1097, 0.45", "283.336, -312.34, 74.4455, 0.45", "285.407, -310.491, 74.1233, 0.45", "287.693, -308.835, 74.0714, 0.45", "289.437, -307.763, 74.1407, 0.45", "291.144, -306.966, 74.3786, 0.45", "293.284, -306.287, 74.8854, 0.45", "299.168, -305.564, 77.7038, 0.45", "299.937, -305.583, 78.3119, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "182.599, -323.98, 74.9706, 0.45", "182.209, -326.29, 75.1281, 0.45", "181.989, -328.302, 75.3093, 0.45", "181.834, -330.432, 75.5702, 0.45", "181.714, -332.369, 75.807, 0.45", "181.502, -335.617, 76.441, 0.45", "181.37, -337.131, 76.8934, 0.45", "181.145, -339.213, 77.7665, 0.45", "180.923, -341.185, 78.6994, 0.45", "180.64, -344.01, 80.1784, 0.45", "180.294, -348.096, 82.4032, 0.45", "180.08, -352.18, 84.6186, 0.45", "179.929, -355.774, 86.453, 0.45", "179.91, -357.949, 87.4694, 0.45", "180.022, -361.401, 88.8389, 0.45", "180.188, -363.667, 89.5793, 0.45", "180.473, -366.567, 90.1742, 0.45", "180.829, -369.354, 90.5633, 0.45", "181.234, -372.259, 90.8961, 0.45", "181.533, -374.954, 91.234, 0.45", "181.764, -377.807, 91.4574, 0.45", "181.987, -381.488, 91.7249, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "182.599, -323.98, 74.9706, 0.45", "184.715, -322.731, 75.3033, 0.45", "185.758, -322.116, 75.4671, 0.45", "186.935, -321.422, 75.652, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "181.987, -381.488, 91.7249, 0.45", "179.357, -385.074, 92.3058, 0.45", "176.373, -389.439, 92.7262, 0.45", "174.718, -392.024, 92.8645, 0.45", "173.755, -393.645, 92.9061, 0.45", "173.551, -394.013, 92.9043, 0.45", "171.446, -397.953, 92.8507, 0.45", "171.057, -398.951, 92.7249, 0.45", "170.764, -399.913, 92.5482, 0.45", "170.416, -400.902, 92.3653, 0.45", "169.937, -402.244, 92.0356, 0.45", "169.197, -404.563, 91.3478, 0.45", "168.588, -406.638, 90.6919, 0.45", "167.752, -409.168, 90.0219, 0.45", "167.186, -410.593, 89.7289, 0.45", "166.462, -412.275, 89.4071, 0.45", "165.385, -414.658, 88.9648, 0.45", "164.058, -416.917, 89.0168, 0.45", "162.621, -418.957, 89.3918, 0.45", "161.349, -420.639, 89.8594, 0.45", "160.092, -422.178, 90.43, 0.45", "158.672, -423.807, 91.0857, 0.45", "152.897, -430.437, 93.5253, 0.45", "151.538, -432.124, 94.0185, 0.45", "150.717, -433.284, 94.253, 0.45", "148.413, -437.012, 94.6738, 0.45", "147.367, -438.977, 94.7677, 0.45", "146.426, -441.449, 94.5303, 0.45", "146.044, -443.274, 93.9651, 0.45", "145.734, -445.391, 93.2676, 0.45", "145.609, -447.366, 92.5068, 0.45", "145.739, -448.867, 91.7634, 0.45", "145.841, -449.629, 91.4199, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "181.987, -381.488, 91.7249, 0.45", "181.861, -383.369, 92.5089, 0.45", "181.595, -387.216, 93.9767, 0.45", "181.088, -391.558, 95.5413, 0.45", "180.723, -393.17, 96.1973, 0.45", "179.967, -395.539, 97.3212, 0.45", "179.061, -397.918, 98.6029, 0.45", "178.311, -399.439, 99.6087, 0.45", "177.159, -401.454, 101.183, 0.45", "174.116, -406.125, 105.565, 0.45", "172.087, -409.136, 108.579, 0.45", "170.94, -410.92, 110.411, 0.45", "169.24, -413.715, 113.411, 0.45", "168.874, -414.422, 114.166, 0.45", "168.288, -416.061, 116.018, 0.45", "168.013, -417.834, 117.841, 0.45", "167.866, -420.392, 120.275, 0.45", "167.884, -421.415, 121.149, 0.45", "168.052, -424.564, 123.49, 0.45", "168.521, -429.68, 127.193, 0.45", "168.846, -432.514, 129.294, 0.45", "169.376, -436.495, 132.288, 0.45", "169.688, -439.162, 134.288, 0.45", "170.33, -444.507, 138.334, 0.45", "170.543, -446.147, 139.572, 0.45", "171.009, -449.87, 142.272, 0.45", "171.117, -451.261, 143.395, 0.45", "171.342, -454.806, 146.365, 0.45", "171.41, -458.181, 149.327, 0.45", "171.324, -459.698, 150.942, 0.45", "171.096, -461.461, 153.117, 0.45", "170.531, -464.922, 157.268, 0.45", "170.192, -466.609, 159.241, 0.45", "169.821, -468.412, 161.29, 0.45", "168.32, -475.922, 169.402, 0.45", "167.41, -481.25, 174.798, 0.45", "166.767, -485.737, 179.081, 0.45", "166.62, -487.121, 180.25, 0.45", "166.44, -488.59, 181.527, 0.45", "166.216, -490.411, 183.171, 0.45", "165.997, -492.305, 185.038, 0.45", "165.726, -494.051, 187.144, 0.45", "165.604, -494.691, 188.055, 0.45", "164.374, -500.422, 196.785, 0.45", "163.753, -503.107, 200.918, 0.45", "162.952, -507.478, 207.456, 0.45", "162.815, -508.195, 208.54, 0.45", "162.719, -508.917, 209.58, 0.45", "162.621, -510.222, 211.293, 0.45", "162.609, -513.428, 214.867, 0.45", "162.59, -516.635, 218.268, 0.45", "162.45, -524.948, 226.788, 0.45", "162.326, -528.491, 230.47, 0.45", "162.273, -530.177, 232.254, 0.45", "162.089, -531.881, 234.644, 0.45", "161.733, -533.851, 238.424, 0.45", "161.121, -535.889, 243.581, 0.45", "160.838, -536.605, 245.735, 0.45", "160.478, -537.192, 247.704, 0.45", "156.919, -542.316, 264.738, 0.45", "155.905, -543.785, 269.325, 0.45", "154.784, -545.563, 274.241, 0.45", "154.063, -546.595, 277.162, 0.45", "152.305, -549.083, 283.956, 0.45", "151.404, -550.407, 287.156, 0.45", "150.532, -551.97, 290.091, 0.45", "148.892, -554.808, 295.489, 0.45", "143.408, -564.483, 315.472, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "axon_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "axon_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_NBC_ded84149de_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, axon_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, axon_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -9.96816, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -9.96816, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.37498, -12.6754, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.22355, -14.9991, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 4.18709, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 6.41346, 4.31965, -3.52111, 1.24 ) }
    dend_12 { pt3dadd( 9.57119, 4.59865, -2.67032, 1.24 ) }
    dend_12 { pt3dadd( 12.5516, 4.86197, -1.86733, 1.24 ) }
    dend_12 { pt3dadd( 15.5243, 5.12461, -1.06639, 1.24 ) }
    dend_12 { pt3dadd( 21.6334, 5.66436, 0.579603, 1.24 ) }
    dend_12 { pt3dadd( 26.34, 6.08019, 1.84771, 1.24 ) }
    dend_12 { pt3dadd( 28.3129, 6.1875, 2.44764, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 4.92509, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.56831, 4.85759, -1.4057, 0.68 ) }
    dend_11 { pt3dadd( -10.4896, 4.83437, -1.53186, 0.68 ) }
    dend_11 { pt3dadd( -13.5714, 5.10941, -1.81564, 0.68 ) }
    dend_11 { pt3dadd( -15.7625, 5.52624, -2.03875, 0.68 ) }
    dend_11 { pt3dadd( -17.1094, 5.91953, -2.1744, 0.68 ) }
    dend_11 { pt3dadd( -19.3991, 6.68826, -2.37213, 0.68 ) }
    dend_11 { pt3dadd( -21.7491, 7.64246, -2.6085, 0.68 ) }
    dend_11 { pt3dadd( -24.7622, 9.13338, -2.92656, 0.68 ) }
    dend_11 { pt3dadd( -26.8477, 10.3884, -3.18905, 0.68 ) }
    dend_11 { pt3dadd( -29.8312, 12.3835, -3.7221, 0.68 ) }
    dend_11 { pt3dadd( -32.5092, 14.3239, -4.40093, 0.68 ) }
    dend_11 { pt3dadd( -34.2803, 15.7285, -5.00302, 0.68 ) }
    dend_11 { pt3dadd( -35.9317, 17.1854, -5.69018, 0.68 ) }
    dend_11 { pt3dadd( -37.0966, 18.2735, -6.21964, 0.68 ) }
    dend_11 { pt3dadd( -39.3048, 20.2857, -7.21955, 0.68 ) }
    dend_11 { pt3dadd( -40.9283, 21.7708, -8.03151, 0.68 ) }
    dend_11 { pt3dadd( -41.6772, 22.4696, -8.39755, 0.68 ) }
    dend_11 { pt3dadd( -44.3464, 24.8912, -9.72424, 0.68 ) }
    dend_11 { pt3dadd( -46.4646, 26.7843, -10.8258, 0.68 ) }
    dend_11 { pt3dadd( -49.4738, 29.3676, -12.2869, 0.68 ) }
    dend_11 { pt3dadd( -51.5214, 31.0847, -13.1341, 0.57 ) }
    dend_11 { pt3dadd( -53.2722, 32.4741, -13.7883, 0.57 ) }
    dend_11 { pt3dadd( -55.374, 34.0613, -14.6144, 0.57 ) }
    dend_11 { pt3dadd( -55.8491, 34.3718, -14.8584, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -4.99691, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 6.3424, -5.84299, -2.38739, 1.47 ) }
    dend_0 { pt3dadd( 9.65794, -8.04519, -1.9381, 1.47 ) }
    dend_0 { pt3dadd( 13.677, -10.7147, -1.39349, 1.47 ) }
    dend_0 { pt3dadd( 16.2182, -12.4026, -1.04913, 2.6 ) }
    dend_0 { pt3dadd( 16.6073, -12.661, -0.996405, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31666 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.22355, -14.9991, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.39236, -15.1678, -8.05007, 0.12 ) }
    dend_45 { pt3dadd( 0.742125, -15.4676, -7.92598, 0.12 ) }
    dend_45 { pt3dadd( 1.33381, -15.6263, -7.86112, 0.45 ) }
    dend_45 { pt3dadd( 1.8689, -15.7624, -7.73398, 0.45 ) }
    dend_45 { pt3dadd( 3.90861, -16.2471, -7.2634, 0.45 ) }
    dend_45 { pt3dadd( 4.19716, -16.3185, -7.19815, 1.36 ) }
    dend_45 { pt3dadd( 5.20638, -16.5812, -6.96743, 1.02 ) }
    dend_45 { pt3dadd( 6.58655, -16.9421, -6.63061, 0.45 ) }
    dend_45 { pt3dadd( 8.67148, -17.4867, -5.84864, 0.45 ) }
    dend_45 { pt3dadd( 10.467, -17.9235, -4.83239, 0.45 ) }
    dend_45 { pt3dadd( 10.9868, -18.0259, -4.50317, 1.7 ) }
    dend_45 { pt3dadd( 11.91, -18.1865, -3.50438, 0.68 ) }
    dend_45 { pt3dadd( 13.1108, -18.3966, -1.82389, 0.57 ) }
    dend_45 { pt3dadd( 14.9194, -18.7215, 1.0283, 0.57 ) }
    dend_45 { pt3dadd( 16.1956, -18.9472, 3.28749, 0.57 ) }
    dend_45 { pt3dadd( 17.1574, -19.1057, 5.27889, 0.57 ) }
    dend_45 { pt3dadd( 20.5443, -19.5806, 13.1413, 0.45 ) }
    dend_45 { pt3dadd( 20.7999, -19.6154, 13.8633, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.22355, -14.9991, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -1.67857, -17.1997, -8.11887, 2.26 ) }
    dend_24 { pt3dadd( -2.12666, -19.3668, -8.09807, 2.26 ) }
    dend_24 { pt3dadd( -2.77992, -22.5262, -8.06774, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 28.3129, 6.1875, 2.44764, 0.45 ) }
    dend_22 { pt3dadd( 33.3207, 5.51088, 1.68816, 0.45 ) }
    dend_22 { pt3dadd( 35.6704, 5.49934, 2.06233, 0.45 ) }
    dend_22 { pt3dadd( 36.8856, 5.688, 2.47622, 0.45 ) }
    dend_22 { pt3dadd( 38.4554, 6.18076, 3.15677, 0.45 ) }
    dend_22 { pt3dadd( 41.5165, 7.68769, 4.76948, 0.79 ) }
    dend_22 { pt3dadd( 45.0329, 9.84622, 6.74117, 0.79 ) }
    dend_22 { pt3dadd( 48.3566, 12.3581, 8.792, 0.79 ) }
    dend_22 { pt3dadd( 50.7796, 14.5083, 10.3345, 0.79 ) }
    dend_22 { pt3dadd( 52.6647, 16.4919, 11.5382, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 55.3441, 20.1107, 13.3358, 0.79 ) }
    dend_22 { pt3dadd( 57.7357, 24.1055, 14.8524, 0.79 ) }
    dend_22 { pt3dadd( 58.8212, 26.0748, 15.3732, 0.68 ) }
    dend_22 { pt3dadd( 59.7705, 27.8106, 15.6718, 0.68 ) }
    dend_22 { pt3dadd( 61.8044, 31.3578, 16.1146, 0.68 ) }
    dend_22 { pt3dadd( 66.0745, 38.7525, 17.0667, 0.68 ) }
    dend_22 { pt3dadd( 67.4479, 41.1757, 17.3457, 0.68 ) }
    dend_22 { pt3dadd( 69.7551, 45.1384, 17.7932, 0.68 ) }
    dend_22 { pt3dadd( 71.0719, 47.1683, 18.046, 0.68 ) }
    dend_22 { pt3dadd( 72.3251, 48.8074, 18.3283, 0.57 ) }
    dend_22 { pt3dadd( 75.6653, 52.2755, 19.1183, 0.57 ) }
    dend_22 { pt3dadd( 77.3846, 53.5822, 19.8078, 0.57 ) }
    dend_22 { pt3dadd( 80.0088, 55.3065, 22.9485, 0.57 ) }
    dend_22 { pt3dadd( 80.7315, 55.7771, 25.3952, 0.57 ) }
    dend_22 { pt3dadd( 81.5166, 56.2904, 29.6645, 0.57 ) }
    dend_22 { pt3dadd( 81.7299, 56.4191, 31.2384, 0.57 ) }
    dend_22 { pt3dadd( 82.3599, 56.6406, 38.4544, 0.57 ) }
    dend_22 { pt3dadd( 82.8146, 56.7465, 47.5122, 0.57 ) }
    dend_22 { pt3dadd( 82.861, 56.7578, 54.8724, 0.57 ) }
    dend_22 { pt3dadd( 82.7679, 56.833, 58.9654, 0.57 ) }
    dend_22 { pt3dadd( 82.7291, 56.9114, 60.0995, 0.57 ) }
    dend_22 { pt3dadd( 82.6604, 57.0859, 62.1025, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 28.3129, 6.1875, 2.44764, 0.79 ) }
    dend_13 { pt3dadd( 29.1763, 8.46694, 1.53979, 0.79 ) }
    dend_13 { pt3dadd( 29.7023, 10.1601, 0.955915, 0.79 ) }
    dend_13 { pt3dadd( 29.9734, 11.0737, 0.679366, 0.79 ) }
    dend_13 { pt3dadd( 30.8264, 13.1999, 0.0960557, 0.79 ) }
    dend_13 { pt3dadd( 31.7863, 15.0959, -0.377201, 0.79 ) }
    dend_13 { pt3dadd( 32.6427, 16.6291, -0.718894, 0.79 ) }
    dend_13 { pt3dadd( 33.9851, 18.7865, -1.09016, 0.79 ) }
    dend_13 { pt3dadd( 34.9977, 20.3274, -1.35784, 0.79 ) }
    dend_13 { pt3dadd( 37.0211, 23.2634, -2.02125, 0.79 ) }
    dend_13 { pt3dadd( 38.3553, 25.023, -2.68756, 0.79 ) }
    dend_13 { pt3dadd( 39.8243, 26.5511, -3.84292, 1.02 ) }
    dend_13 { pt3dadd( 40.7746, 27.415, -4.6898, 1.02 ) }
    dend_13 { pt3dadd( 41.6781, 28.1295, -5.66455, 1.02 ) }
    dend_13 { pt3dadd( 42.863, 29.0185, -7.37515, 1.02 ) }
    dend_13 { pt3dadd( 44.5182, 30.2692, -10.9278, 1.02 ) }
    dend_13 { pt3dadd( 46.2563, 31.2404, -15.5244, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 16.6073, -12.661, -0.996405, 0.68 ) }
    dend_8 { pt3dadd( 17.9617, -14.998, -1.35068, 0.68 ) }
    dend_8 { pt3dadd( 18.4502, -15.722, -1.37706, 0.68 ) }
    dend_8 { pt3dadd( 21.1645, -19.5266, -1.32331, 0.68 ) }
    dend_8 { pt3dadd( 25.4283, -25.4063, -1.10594, 0.68 ) }
    dend_8 { pt3dadd( 28.1774, -29.2375, -1.12302, 0.68 ) }
    dend_8 { pt3dadd( 29.8779, -31.6102, -1.20808, 0.68 ) }
    dend_8 { pt3dadd( 35.1118, -38.4664, -0.866502, 0.68 ) }
    dend_8 { pt3dadd( 37.535, -41.4813, -0.493338, 0.68 ) }
    dend_8 { pt3dadd( 38.2913, -42.3624, -0.321016, 0.68 ) }
    dend_8 { pt3dadd( 42.4073, -46.904, 0.856809, 0.68 ) }
    dend_8 { pt3dadd( 45.3434, -49.7912, 1.6869, 0.68 ) }
    dend_8 { pt3dadd( 52.9448, -56.9708, 3.7539, 0.68 ) }
    dend_8 { pt3dadd( 56.5444, -60.2924, 4.66, 0.68 ) }
    dend_8 { pt3dadd( 58.694, -62.1775, 5.19124, 0.68 ) }
    dend_8 { pt3dadd( 61.6679, -64.702, 5.9085, 0.68 ) }
    dend_8 { pt3dadd( 68.5553, -70.6012, 7.44962, 0.68 ) }
    dend_8 { pt3dadd( 71.2589, -73.1114, 7.78418, 0.68 ) }
    dend_8 { pt3dadd( 72.4741, -74.3647, 7.796, 0.68 ) }
    dend_8 { pt3dadd( 75.6407, -77.8037, 7.73724, 0.68 ) }
    dend_8 { pt3dadd( 77.5659, -80.0353, 7.66135, 0.68 ) }
    dend_8 { pt3dadd( 81.4023, -84.9632, 7.33788, 0.68 ) }
    dend_8 { pt3dadd( 83.8204, -88.754, 7.10057, 0.68 ) }
    dend_8 { pt3dadd( 85.4745, -91.5075, 6.89241, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 16.6073, -12.661, -0.996405, 1.24 ) }
    dend_1 { pt3dadd( 21.589, -13.9809, -1.44772, 1.24 ) }
    dend_1 { pt3dadd( 24.1372, -14.6561, -1.67857, 1.24 ) }
    dend_1 { pt3dadd( 28.2198, -15.7378, -2.04844, 1.24 ) }
    dend_1 { pt3dadd( 32.3517, -16.8325, -2.42276, 1.24 ) }
    dend_1 { pt3dadd( 43.3066, -19.7351, -3.41522, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 20.7999, -19.6154, 13.8633, 0.45 ) }
    dend_47 { pt3dadd( 21.5323, -21.4561, 18.6654, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 20.7999, -19.6154, 13.8633, 0.45 ) }
    dend_46 { pt3dadd( 25.9964, -17.9975, 14.4871, 0.45 ) }
    dend_46 { pt3dadd( 28.3985, -17.369, 15.0503, 0.45 ) }
    dend_46 { pt3dadd( 31.6602, -16.6146, 16.0043, 0.45 ) }
    dend_46 { pt3dadd( 35.1905, -16.1416, 17.1639, 0.45 ) }
    dend_46 { pt3dadd( 37.0176, -16.2261, 17.8271, 0.45 ) }
    dend_46 { pt3dadd( 41.9303, -17.0681, 19.67, 0.45 ) }
    dend_46 { pt3dadd( 42.3224, -17.2019, 19.863, 0.45 ) }
    dend_46 { pt3dadd( 42.4903, -17.2889, 19.9526, 2.6 ) }
    dend_46 { pt3dadd( 45.682, -19.4881, 21.6946, 0.57 ) }
    dend_46 { pt3dadd( 49.5508, -22.7379, 23.8062, 0.57 ) }
    dend_46 { pt3dadd( 50.6862, -23.7154, 24.369, 0.57 ) }
    dend_46 { pt3dadd( 50.7877, -23.7966, 24.4115, 2.38 ) }
    dend_46 { pt3dadd( 54.2308, -26.1654, 25.8085, 0.34 ) }
    dend_46 { pt3dadd( 55.5656, -26.8665, 26.3253, 0.34 ) }
    dend_46 { pt3dadd( 58.6167, -27.8488, 27.422, 0.45 ) }
    dend_46 { pt3dadd( 61.5015, -28.1514, 28.638, 0.45 ) }
    dend_46 { pt3dadd( 64.4765, -28.1113, 30.2766, 0.45 ) }
    dend_46 { pt3dadd( 67.1236, -27.8385, 32.1564, 0.45 ) }
    dend_46 { pt3dadd( 69.8863, -27.3183, 34.6382, 0.45 ) }
    dend_46 { pt3dadd( 72.2925, -26.7626, 37.0891, 0.45 ) }
    dend_46 { pt3dadd( 77.474, -25.41, 42.8138, 0.45 ) }
    dend_46 { pt3dadd( 81.3296, -24.4741, 47.5235, 0.45 ) }
    dend_46 { pt3dadd( 85.0183, -23.7549, 52.3259, 0.45 ) }
    dend_46 { pt3dadd( 88.5278, -23.3258, 56.9398, 0.45 ) }
    dend_46 { pt3dadd( 89.5733, -23.2904, 58.2919, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 91.4622, -23.3517, 60.5302, 0.45 ) }
    dend_46 { pt3dadd( 95.4431, -23.5827, 64.4288, 0.45 ) }
    dend_46 { pt3dadd( 97.2035, -23.6841, 65.9121, 0.45 ) }
    dend_46 { pt3dadd( 99.896, -23.7628, 67.9317, 0.45 ) }
    dend_46 { pt3dadd( 105.482, -23.7505, 72.1255, 0.45 ) }
    dend_46 { pt3dadd( 109.469, -23.6403, 75.128, 0.45 ) }
    dend_46 { pt3dadd( 113.606, -23.6099, 78.2216, 0.45 ) }
    dend_46 { pt3dadd( 116.179, -23.7337, 80.0871, 0.45 ) }
    dend_46 { pt3dadd( 118.679, -23.9845, 81.8474, 0.45 ) }
    dend_46 { pt3dadd( 123.511, -24.7575, 85.0911, 0.45 ) }
    dend_46 { pt3dadd( 127.495, -25.6352, 87.5002, 0.45 ) }
    dend_46 { pt3dadd( 132.58, -27.0087, 90.4913, 0.45 ) }
    dend_46 { pt3dadd( 137.689, -28.692, 93.4298, 0.45 ) }
    dend_46 { pt3dadd( 140.719, -29.8092, 95.1257, 0.45 ) }
    dend_46 { pt3dadd( 142.251, -30.4852, 95.9552, 0.45 ) }
    dend_46 { pt3dadd( 143.09, -30.9048, 96.3303, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.77992, -22.5262, -8.06774, 0.12 ) }
    dend_44 { pt3dadd( -3.6903, -21.6842, -7.9605, 0.12 ) }
    dend_44 { pt3dadd( -3.87993, -21.5587, -7.89065, 0.12 ) }
    dend_44 { pt3dadd( -4.44348, -21.2541, -7.64242, 0.45 ) }
    dend_44 { pt3dadd( -5.49374, -21.1055, -6.79185, 0.79 ) }
    dend_44 { pt3dadd( -6.94743, -21.1373, -5.30893, 0.45 ) }
    dend_44 { pt3dadd( -7.82946, -21.2616, -4.32251, 0.45 ) }
    dend_44 { pt3dadd( -9.54876, -21.726, -2.17966, 0.45 ) }
    dend_44 { pt3dadd( -9.8137, -21.8505, -1.8275, 0.45 ) }
    dend_44 { pt3dadd( -12.4091, -23.4861, 2.05609, 0.45 ) }
    dend_44 { pt3dadd( -13.5839, -24.3914, 3.94972, 0.45 ) }
    dend_44 { pt3dadd( -14.4559, -25.1356, 5.39525, 0.45 ) }
    dend_44 { pt3dadd( -14.6732, -25.3169, 5.76354, 0.45 ) }
    dend_44 { pt3dadd( -15.8948, -26.2826, 7.76651, 0.45 ) }
    dend_44 { pt3dadd( -18.3976, -28.1182, 11.6217, 0.45 ) }
    dend_44 { pt3dadd( -19.1418, -28.6056, 12.591, 0.45 ) }
    dend_44 { pt3dadd( -19.7037, -28.9496, 13.2448, 0.45 ) }
    dend_44 { pt3dadd( -20.8472, -29.5989, 14.5042, 0.45 ) }
    dend_44 { pt3dadd( -21.2487, -29.827, 14.971, 0.45 ) }
    dend_44 { pt3dadd( -23.6951, -31.2134, 17.8406, 0.45 ) }
    dend_44 { pt3dadd( -24.7305, -31.9882, 19.1221, 0.45 ) }
    dend_44 { pt3dadd( -25.8649, -32.9666, 20.6691, 0.45 ) }
    dend_44 { pt3dadd( -26.2177, -33.3065, 21.2385, 0.45 ) }
    dend_44 { pt3dadd( -27.7745, -34.9872, 23.8993, 0.45 ) }
    dend_44 { pt3dadd( -27.9625, -35.2101, 24.2487, 0.45 ) }
    dend_44 { pt3dadd( -29.0173, -36.5195, 26.474, 0.45 ) }
    dend_44 { pt3dadd( -29.2531, -36.8324, 27.0026, 0.45 ) }
    dend_44 { pt3dadd( -30.368, -38.3609, 29.3943, 2.38 ) }
    dend_44 { pt3dadd( -31.3234, -39.6115, 31.349, 0.68 ) }
    dend_44 { pt3dadd( -31.7061, -40.1275, 32.1335, 0.68 ) }
    dend_44 { pt3dadd( -33.433, -42.2783, 35.7965, 0.68 ) }
    dend_44 { pt3dadd( -34.1877, -43.1504, 37.4273, 0.45 ) }
    dend_44 { pt3dadd( -34.5555, -43.5574, 38.1757, 0.45 ) }
    dend_44 { pt3dadd( -35.5775, -44.4816, 40.0942, 0.45 ) }
    dend_44 { pt3dadd( -36.1502, -44.9188, 41.1446, 0.45 ) }
    dend_44 { pt3dadd( -38.2745, -46.3134, 44.616, 0.45 ) }
    dend_44 { pt3dadd( -39.5647, -47.0203, 46.5829, 0.45 ) }
    dend_44 { pt3dadd( -40.8738, -47.6188, 48.5114, 0.45 ) }
    dend_44 { pt3dadd( -44.6826, -49.2518, 53.8813, 0.91 ) }
    dend_44 { pt3dadd( -44.7727, -49.2928, 54.0056, 3.05 ) }
    dend_44 { pt3dadd( -45.866, -49.8265, 55.5018, 0.45 ) }
    dend_44 { pt3dadd( -48.3788, -51.3461, 59.1319, 0.45 ) }
    dend_44 { pt3dadd( -49.1592, -51.8803, 60.3572, 0.45 ) }
    dend_44 { pt3dadd( -50.2169, -52.6816, 62.1523, 2.15 ) }
    dend_44 { pt3dadd( -53.5705, -55.7981, 67.8615, 0.57 ) }
    dend_44 { pt3dadd( -53.9827, -56.1892, 68.5939, 0.57 ) }
    dend_44 { pt3dadd( -56.106, -58.2603, 72.5107, 0.57 ) }
    dend_44 { pt3dadd( -57.4726, -59.6481, 74.942, 0.57 ) }
    dend_44 { pt3dadd( -57.646, -59.8143, 75.2445, 1.7 ) }
    dend_44 { pt3dadd( -58.3919, -60.4887, 76.4981, 0.45 ) }
    dend_44 { pt3dadd( -61.9434, -63.7043, 82.0828, 0.45 ) }
    dend_44 { pt3dadd( -63.4968, -65.0531, 84.432, 0.45 ) }
    dend_44 { pt3dadd( -64.6046, -66.0006, 86.004, 0.45 ) }
    dend_44 { pt3dadd( -66.7467, -67.8569, 88.9667, 0.45 ) }
    dend_44 { pt3dadd( -68.0019, -68.9547, 90.7157, 0.45 ) }
    dend_44 { pt3dadd( -68.9381, -69.7601, 92.0035, 0.45 ) }
    dend_44 { pt3dadd( -71.0096, -71.7712, 94.5111, 0.45 ) }
    dend_44 { pt3dadd( -71.3272, -72.0781, 94.9061, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.77992, -22.5262, -8.06774, 1.7 ) }
    dend_25 { pt3dadd( -2.78565, -26.1238, -5.8372, 1.7 ) }
    dend_25 { pt3dadd( -2.79168, -27.3175, -5.23243, 1.58 ) }
    dend_25 { pt3dadd( -2.77667, -30.9883, -3.7427, 1.36 ) }
    dend_25 { pt3dadd( -2.76428, -34.0168, -2.51362, 1.24 ) }
    dend_25 { pt3dadd( -2.74643, -38.3794, -0.743174, 1.24 ) }
    dend_25 { pt3dadd( -2.73582, -40.9731, 0.309452, 2.83 ) }
    dend_25 { pt3dadd( -2.66665, -44.6379, 1.47132, 3.62 ) }
    dend_25 { pt3dadd( -2.59162, -47.4299, 2.21899, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 46.2563, 31.2404, -15.5244, 0.57 ) }
    dend_17 { pt3dadd( 46.4159, 29.7156, -15.8231, 0.57 ) }
    dend_17 { pt3dadd( 46.6257, 27.71, -16.2161, 0.57 ) }
    dend_17 { pt3dadd( 46.7453, 26.5674, -16.4399, 0.57 ) }
    dend_17 { pt3dadd( 46.9099, 24.9938, -16.7482, 0.57 ) }
    dend_17 { pt3dadd( 47.1245, 22.9428, -17.15, 0.57 ) }
    dend_17 { pt3dadd( 47.4916, 19.4347, -17.8373, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 46.2563, 31.2404, -15.5244, 1.02 ) }
    dend_14 { pt3dadd( 46.8016, 32.7109, -16.6398, 1.02 ) }
    dend_14 { pt3dadd( 48.0244, 36.0084, -19.1411, 1.02 ) }
    dend_14 { pt3dadd( 48.7155, 37.8722, -20.5548, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 85.4745, -91.5075, 6.89241, 0.45 ) }
    dend_10 { pt3dadd( 88.4125, -95.976, 6.13606, 0.45 ) }
    dend_10 { pt3dadd( 89.0171, -96.9015, 6.00452, 0.45 ) }
    dend_10 { pt3dadd( 89.9195, -98.3184, 5.87562, 0.45 ) }
    dend_10 { pt3dadd( 92.1175, -101.735, 5.65756, 0.45 ) }
    dend_10 { pt3dadd( 92.9943, -103.058, 5.50845, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 93.8117, -104.221, 5.34967, 0.45 ) }
    dend_10 { pt3dadd( 95.3583, -106.224, 5.0811, 0.45 ) }
    dend_10 { pt3dadd( 98.1851, -109.628, 4.56041, 0.45 ) }
    dend_10 { pt3dadd( 99.7846, -111.265, 4.30149, 0.45 ) }
    dend_10 { pt3dadd( 102.887, -113.876, 3.71037, 0.45 ) }
    dend_10 { pt3dadd( 105.199, -115.421, 3.35965, 0.45 ) }
    dend_10 { pt3dadd( 106.243, -116.012, 3.36576, 0.45 ) }
    dend_10 { pt3dadd( 108.144, -117.01, 3.56544, 0.45 ) }
    dend_10 { pt3dadd( 112.087, -119.102, 4.23469, 0.45 ) }
    dend_10 { pt3dadd( 114.705, -120.624, 4.6337, 0.45 ) }
    dend_10 { pt3dadd( 118.657, -123.092, 5.2203, 0.45 ) }
    dend_10 { pt3dadd( 127.019, -128.821, 6.22855, 0.45 ) }
    dend_10 { pt3dadd( 130.732, -131.629, 6.58598, 0.45 ) }
    dend_10 { pt3dadd( 133.423, -133.953, 6.75253, 0.45 ) }
    dend_10 { pt3dadd( 138.483, -139.158, 6.77936, 0.45 ) }
    dend_10 { pt3dadd( 139.445, -140.327, 6.72468, 0.45 ) }
    dend_10 { pt3dadd( 141.28, -143.156, 6.27516, 0.45 ) }
    dend_10 { pt3dadd( 142.203, -145.092, 5.80069, 0.45 ) }
    dend_10 { pt3dadd( 143.597, -148.825, 4.9961, 0.45 ) }
    dend_10 { pt3dadd( 144.498, -151.811, 4.50737, 0.45 ) }
    dend_10 { pt3dadd( 145.583, -155.841, 4.01856, 0.45 ) }
    dend_10 { pt3dadd( 146.575, -159.896, 3.52473, 0.45 ) }
    dend_10 { pt3dadd( 147.509, -164.173, 2.98471, 0.45 ) }
    dend_10 { pt3dadd( 147.897, -166.013, 2.75451, 0.45 ) }
    dend_10 { pt3dadd( 148.523, -168.968, 2.42494, 0.45 ) }
    dend_10 { pt3dadd( 149.813, -174.468, 1.91628, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 85.4745, -91.5075, 6.89241, 0.57 ) }
    dend_9 { pt3dadd( 85.3087, -92.194, 7.08614, 0.57 ) }
    dend_9 { pt3dadd( 84.2616, -95.7174, 9.12393, 0.57 ) }
    dend_9 { pt3dadd( 82.8254, -100.076, 11.8969, 0.57 ) }
    dend_9 { pt3dadd( 81.8279, -102.54, 13.7732, 0.57 ) }
    dend_9 { pt3dadd( 81.6316, -102.974, 14.1106, 0.57 ) }
    dend_9 { pt3dadd( 80.4925, -105.17, 15.9003, 0.57 ) }
    dend_9 { pt3dadd( 78.7337, -107.99, 18.4218, 0.57 ) }
    dend_9 { pt3dadd( 77.8234, -109.18, 19.5995, 0.57 ) }
    dend_9 { pt3dadd( 75.9627, -111.354, 22.2377, 0.45 ) }
    dend_9 { pt3dadd( 75.0145, -112.42, 23.4948, 0.45 ) }
    dend_9 { pt3dadd( 73.7148, -113.881, 25.1468, 0.45 ) }
    dend_9 { pt3dadd( 72.4595, -115.366, 26.7488, 0.45 ) }
    dend_9 { pt3dadd( 71.018, -117.048, 28.5388, 0.45 ) }
    dend_9 { pt3dadd( 68.1542, -120.692, 32.5092, 0.45 ) }
    dend_9 { pt3dadd( 67.5636, -121.56, 33.4247, 0.45 ) }
    dend_9 { pt3dadd( 66.761, -122.879, 34.8147, 0.45 ) }
    dend_9 { pt3dadd( 64.9309, -126.272, 38.2201, 0.45 ) }
    dend_9 { pt3dadd( 64.307, -127.536, 39.3848, 0.45 ) }
    dend_9 { pt3dadd( 62.0918, -132.246, 43.0663, 0.45 ) }
    dend_9 { pt3dadd( 61.4184, -133.799, 44.1367, 0.45 ) }
    dend_9 { pt3dadd( 61.2823, -134.152, 44.3654, 0.45 ) }
    dend_9 { pt3dadd( 60.9884, -135.078, 44.9806, 0.45 ) }
    dend_9 { pt3dadd( 60.2487, -137.618, 46.6887, 0.45 ) }
    dend_9 { pt3dadd( 59.6949, -139.712, 48.1444, 0.45 ) }
    dend_9 { pt3dadd( 58.645, -143.935, 51.3, 0.45 ) }
    dend_9 { pt3dadd( 57.9287, -146.861, 53.8602, 0.45 ) }
    dend_9 { pt3dadd( 56.603, -152.197, 58.8681, 0.45 ) }
    dend_9 { pt3dadd( 55.8193, -155.156, 61.7703, 0.45 ) }
    dend_9 { pt3dadd( 55.455, -156.397, 63.0841, 0.45 ) }
    dend_9 { pt3dadd( 54.1343, -160.531, 67.4445, 0.45 ) }
    dend_9 { pt3dadd( 52.7191, -164.234, 71.1065, 0.45 ) }
    dend_9 { pt3dadd( 51.8567, -166.183, 72.996, 0.45 ) }
    dend_9 { pt3dadd( 50.9747, -168.012, 74.6227, 0.45 ) }
    dend_9 { pt3dadd( 49.4137, -171.429, 77.3126, 0.45 ) }
    dend_9 { pt3dadd( 48.1068, -174.362, 79.4017, 0.45 ) }
    dend_9 { pt3dadd( 46.9413, -176.839, 81.0189, 0.45 ) }
    dend_9 { pt3dadd( 45.9111, -178.823, 82.5419, 0.45 ) }
    dend_9 { pt3dadd( 43.2924, -183.059, 86.5397, 0.45 ) }
    dend_9 { pt3dadd( 41.3624, -185.473, 89.2003, 0.45 ) }
    dend_9 { pt3dadd( 39.4585, -187.209, 91.3815, 0.45 ) }
    dend_9 { pt3dadd( 37.1253, -188.651, 93.487, 0.45 ) }
    dend_9 { pt3dadd( 31.1083, -191.215, 97.8328, 0.45 ) }
    dend_9 { pt3dadd( 28.2021, -192.067, 99.6204, 0.45 ) }
    dend_9 { pt3dadd( 24.4568, -192.84, 101.438, 0.45 ) }
    dend_9 { pt3dadd( 21.9396, -193.299, 102.547, 0.45 ) }
    dend_9 { pt3dadd( 17.1254, -194.289, 104.503, 0.45 ) }
    dend_9 { pt3dadd( 13.3802, -195.246, 105.891, 0.45 ) }
    dend_9 { pt3dadd( 7.5278, -197.067, 108.521, 0.45 ) }
    dend_9 { pt3dadd( 3.33852, -198.586, 110.928, 0.45 ) }
    dend_9 { pt3dadd( 0.591226, -199.701, 112.627, 0.45 ) }
    dend_9 { pt3dadd( -5.68694, -202.471, 116.645, 0.45 ) }
    dend_9 { pt3dadd( -7.87569, -203.501, 118.099, 0.45 ) }
    dend_9 { pt3dadd( -17.2577, -208.073, 124.209, 0.45 ) }
    dend_9 { pt3dadd( -19.8138, -209.361, 125.856, 0.45 ) }
    dend_9 { pt3dadd( -26.5745, -212.865, 130.576, 0.45 ) }
    dend_9 { pt3dadd( -28.4925, -213.881, 131.904, 0.45 ) }
    dend_9 { pt3dadd( -31.7905, -215.76, 134.149, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 43.3066, -19.7351, -3.41522, 0.45 ) }
    dend_5 { pt3dadd( 45.5289, -22.4725, -2.01319, 0.45 ) }
    dend_5 { pt3dadd( 45.8747, -22.9128, -1.81206, 1.02 ) }
    dend_5 { pt3dadd( 49.4444, -27.44, 0.0552858, 0.79 ) }
    dend_5 { pt3dadd( 51.607, -30.2793, 1.06759, 0.79 ) }
    dend_5 { pt3dadd( 52.8275, -31.8968, 1.5585, 0.68 ) }
    dend_5 { pt3dadd( 53.0867, -32.236, 1.64646, 0.68 ) }
    dend_5 { pt3dadd( 54.6153, -34.2493, 1.99867, 0.68 ) }
    dend_5 { pt3dadd( 55.637, -35.6179, 2.16154, 0.68 ) }
    dend_5 { pt3dadd( 57.7248, -38.3998, 2.30929, 0.68 ) }
    dend_5 { pt3dadd( 59.819, -41.2722, 2.43583, 0.68 ) }
    dend_5 { pt3dadd( 61.8149, -44.0659, 2.53498, 0.68 ) }
    dend_5 { pt3dadd( 63.7018, -46.6894, 2.6058, 0.68 ) }
    dend_5 { pt3dadd( 66.0583, -49.9879, 2.67489, 0.68 ) }
    dend_5 { pt3dadd( 68.9464, -54.1248, 2.56781, 0.68 ) }
    dend_5 { pt3dadd( 70.7056, -56.7401, 2.32537, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 71.7171, -58.2941, 2.09362, 0.68 ) }
    dend_5 { pt3dadd( 72.9836, -60.2322, 1.73507, 0.68 ) }
    dend_5 { pt3dadd( 75.0982, -63.3504, 1.05446, 0.68 ) }
    dend_5 { pt3dadd( 77.8535, -67.2832, 0.0867928, 0.68 ) }
    dend_5 { pt3dadd( 81.0498, -71.6099, -1.05013, 0.68 ) }
    dend_5 { pt3dadd( 82.7777, -73.7742, -1.61386, 0.68 ) }
    dend_5 { pt3dadd( 84.5121, -75.8353, -2.10768, 0.68 ) }
    dend_5 { pt3dadd( 85.6498, -77.1226, -2.37317, 0.68 ) }
    dend_5 { pt3dadd( 86.7062, -78.2117, -2.552, 0.68 ) }
    dend_5 { pt3dadd( 88.2294, -79.7473, -2.58345, 0.68 ) }
    dend_5 { pt3dadd( 89.4499, -81.0505, -2.56987, 0.68 ) }
    dend_5 { pt3dadd( 91.0337, -83.1374, -2.56199, 0.68 ) }
    dend_5 { pt3dadd( 91.4538, -83.8686, -2.58777, 0.68 ) }
    dend_5 { pt3dadd( 92.4327, -85.9772, -2.6705, 0.68 ) }
    dend_5 { pt3dadd( 93.4964, -88.7739, -2.86733, 0.68 ) }
    dend_5 { pt3dadd( 94.2516, -91.2068, -3.07919, 0.68 ) }
    dend_5 { pt3dadd( 94.9166, -93.6731, -3.30964, 0.68 ) }
    dend_5 { pt3dadd( 95.8765, -97.6575, -3.66907, 0.68 ) }
    dend_5 { pt3dadd( 96.3243, -99.5429, -3.80986, 0.68 ) }
    dend_5 { pt3dadd( 96.9716, -102.078, -3.93363, 0.68 ) }
    dend_5 { pt3dadd( 97.5574, -104.001, -3.99624, 0.68 ) }
    dend_5 { pt3dadd( 98.4078, -106.294, -3.95548, 0.68 ) }
    dend_5 { pt3dadd( 99.0906, -107.965, -3.90657, 0.68 ) }
    dend_5 { pt3dadd( 99.4306, -108.719, -3.86484, 0.68 ) }
    dend_5 { pt3dadd( 100.489, -110.893, -3.72361, 0.45 ) }
    dend_5 { pt3dadd( 102.014, -113.986, -3.46486, 0.45 ) }
    dend_5 { pt3dadd( 103.772, -117.574, -3.18285, 0.45 ) }
    dend_5 { pt3dadd( 105.118, -120.481, -3.05692, 0.45 ) }
    dend_5 { pt3dadd( 106.036, -122.562, -3.01689, 0.45 ) }
    dend_5 { pt3dadd( 107.089, -125.018, -3.00947, 0.45 ) }
    dend_5 { pt3dadd( 108.841, -129.163, -3.11469, 0.45 ) }
    dend_5 { pt3dadd( 109.75, -131.376, -3.19716, 0.45 ) }
    dend_5 { pt3dadd( 111.267, -135.215, -3.38439, 0.45 ) }
    dend_5 { pt3dadd( 112.661, -138.699, -3.59168, 0.45 ) }
    dend_5 { pt3dadd( 113.5, -140.839, -3.76258, 0.45 ) }
    dend_5 { pt3dadd( 114.183, -142.57, -3.95468, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 43.3066, -19.7351, -3.41522, 0.68 ) }
    dend_2 { pt3dadd( 45.3462, -18.2205, -2.31321, 0.68 ) }
    dend_2 { pt3dadd( 47.7628, -16.2915, -1.24066, 0.68 ) }
    dend_2 { pt3dadd( 49.4675, -14.9407, -0.798548, 0.68 ) }
    dend_2 { pt3dadd( 50.599, -14.0649, -0.67904, 0.68 ) }
    dend_2 { pt3dadd( 51.321, -13.5104, -0.745067, 0.68 ) }
    dend_2 { pt3dadd( 52.9804, -12.2912, -1.29161, 0.68 ) }
    dend_2 { pt3dadd( 54.0302, -11.5548, -1.94247, 0.68 ) }
    dend_2 { pt3dadd( 55.818, -10.3886, -3.38443, 0.57 ) }
    dend_2 { pt3dadd( 57.2141, -9.53285, -4.65273, 0.57 ) }
    dend_2 { pt3dadd( 59.2249, -8.24389, -6.58822, 0.57 ) }
    dend_2 { pt3dadd( 61.5307, -6.72051, -8.85855, 0.57 ) }
    dend_2 { pt3dadd( 62.8112, -5.83643, -10.1428, 0.57 ) }
    dend_2 { pt3dadd( 63.4031, -5.38068, -10.7776, 0.57 ) }
    dend_2 { pt3dadd( 65.2365, -3.7811, -12.7414, 0.57 ) }
    dend_2 { pt3dadd( 67.6561, -1.52291, -15.2807, 0.57 ) }
    dend_2 { pt3dadd( 69.5532, 0.348893, -17.1561, 0.57 ) }
    dend_2 { pt3dadd( 70.248, 1.10328, -17.8586, 0.57 ) }
    dend_2 { pt3dadd( 71.7878, 2.91074, -19.543, 0.57 ) }
    dend_2 { pt3dadd( 73.2064, 4.63054, -21.147, 0.57 ) }
    dend_2 { pt3dadd( 73.8178, 5.41929, -21.853, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 21.5323, -21.4561, 18.6654, 0.45 ) }
    dend_69 { pt3dadd( 18.7126, -28.32, 20.4418, 0.45 ) }
    dend_69 { pt3dadd( 17.8261, -30.522, 20.915, 0.45 ) }
    dend_69 { pt3dadd( 16.6476, -33.3554, 21.7677, 0.45 ) }
    dend_69 { pt3dadd( 15.4115, -36.2083, 22.8696, 0.45 ) }
    dend_69 { pt3dadd( 14.4575, -38.3224, 23.7961, 0.45 ) }
    dend_69 { pt3dadd( 12.6593, -42.3519, 25.664, 0.45 ) }
    dend_69 { pt3dadd( 12.0213, -43.8881, 26.4134, 0.45 ) }
    dend_69 { pt3dadd( 10.1508, -48.5132, 28.9128, 0.45 ) }
    dend_69 { pt3dadd( 9.17947, -50.8438, 30.4658, 0.45 ) }
    dend_69 { pt3dadd( 8.36147, -52.641, 31.9309, 0.45 ) }
    dend_69 { pt3dadd( 7.87829, -53.5302, 32.7381, 0.45 ) }
    dend_69 { pt3dadd( 7.21314, -54.5595, 33.7275, 0.45 ) }
    dend_69 { pt3dadd( 6.2998, -55.7988, 34.734, 0.45 ) }
    dend_69 { pt3dadd( 3.84705, -59.3174, 36.801, 0.45 ) }
    dend_69 { pt3dadd( 3.33666, -60.1073, 37.1587, 0.45 ) }
    dend_69 { pt3dadd( 1.90256, -62.6433, 38.0468, 0.45 ) }
    dend_69 { pt3dadd( 1.14147, -64.1749, 38.1324, 0.45 ) }
    dend_69 { pt3dadd( 0.315637, -66.3164, 37.7355, 0.45 ) }
    dend_69 { pt3dadd( -0.666435, -70.3128, 36.3007, 0.45 ) }
    dend_69 { pt3dadd( -0.984185, -73.0321, 35.009, 0.45 ) }
    dend_69 { pt3dadd( -1.12008, -75.4533, 33.7364, 0.45 ) }
    dend_69 { pt3dadd( -0.914509, -82.5959, 29.4924, 0.45 ) }
    dend_69 { pt3dadd( -0.801209, -83.9617, 28.5796, 1.02 ) }
    dend_69 { pt3dadd( -0.636274, -85.3504, 27.4726, 0.57 ) }
    dend_69 { pt3dadd( -0.533435, -86.9806, 25.7661, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 21.5323, -21.4561, 18.6654, 0.45 ) }
    dend_48 { pt3dadd( 23.089, -22.2271, 18.8138, 0.45 ) }
    dend_48 { pt3dadd( 24.6919, -23.0209, 18.9666, 0.45 ) }
    dend_48 { pt3dadd( 26.9198, -24.1242, 19.179, 0.45 ) }
    dend_48 { pt3dadd( 28.8049, -25.0579, 19.3587, 0.45 ) }
    dend_48 { pt3dadd( 29.7829, -25.5422, 19.4519, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -2.59162, -47.4299, 2.21899, 0.45 ) }
    dend_29 { pt3dadd( -3.03783, -48.5132, 3.25926, 0.45 ) }
    dend_29 { pt3dadd( -3.22253, -49.0163, 3.69967, 0.79 ) }
    dend_29 { pt3dadd( -5.02008, -53.9128, 7.9858, 1.24 ) }
    dend_29 { pt3dadd( -5.79592, -56.0262, 9.83573, 1.24 ) }
    dend_29 { pt3dadd( -6.45129, -57.8115, 11.3984, 1.24 ) }
    dend_29 { pt3dadd( -7.20499, -59.8646, 13.1956, 1.24 ) }
    dend_29 { pt3dadd( -7.4792, -60.6096, 13.8597, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -2.59162, -47.4299, 2.21899, 0.91 ) }
    dend_26 { pt3dadd( -0.702593, -49.6395, 3.47184, 0.91 ) }
    dend_26 { pt3dadd( 0.338002, -50.8567, 4.16198, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 2.13819, -52.9624, 5.3559, 0.91 ) }
    dend_26 { pt3dadd( 3.38187, -54.4171, 6.18074, 0.91 ) }
    dend_26 { pt3dadd( 5.32569, -56.6908, 7.46993, 0.79 ) }
    dend_26 { pt3dadd( 5.72229, -57.1547, 7.73296, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 47.4916, 19.4347, -17.8373, 0.57 ) }
    dend_19 { pt3dadd( 48.4171, 16.8051, -17.073, 0.57 ) }
    dend_19 { pt3dadd( 50.2111, 11.6151, -14.6657, 0.57 ) }
    dend_19 { pt3dadd( 52.1387, 5.93208, -12.242, 0.45 ) }
    dend_19 { pt3dadd( 54.9281, -2.29801, -8.96663, 0.45 ) }
    dend_19 { pt3dadd( 57.9407, -11.3551, -5.26772, 0.45 ) }
    dend_19 { pt3dadd( 58.7648, -13.8327, -4.25585, 0.45 ) }
    dend_19 { pt3dadd( 62.6456, -25.6869, 0.729564, 0.45 ) }
    dend_19 { pt3dadd( 65.5742, -35.1025, 4.84506, 0.45 ) }
    dend_19 { pt3dadd( 66.9474, -39.4998, 6.84869, 0.45 ) }
    dend_19 { pt3dadd( 68.5396, -44.3998, 9.0579, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 47.4916, 19.4347, -17.8373, 0.57 ) }
    dend_18 { pt3dadd( 45.1463, 18.4524, -20.1128, 0.57 ) }
    dend_18 { pt3dadd( 43.5269, 17.3894, -20.7567, 0.68 ) }
    dend_18 { pt3dadd( 42.1631, 16.2614, -21.2666, 0.68 ) }
    dend_18 { pt3dadd( 40.7985, 15.1327, -21.7768, 0.68 ) }
    dend_18 { pt3dadd( 38.6362, 13.3442, -22.5853, 0.68 ) }
    dend_18 { pt3dadd( 36.5672, 11.6328, -23.3589, 0.68 ) }
    dend_18 { pt3dadd( 34.0931, 9.8399, -24.3708, 0.68 ) }
    dend_18 { pt3dadd( 31.5293, 8.22786, -25.3464, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 48.7155, 37.8722, -20.5548, 0.68 ) }
    dend_16 { pt3dadd( 49.2115, 38.9775, -19.4102, 0.68 ) }
    dend_16 { pt3dadd( 49.6341, 39.9191, -18.4352, 0.68 ) }
    dend_16 { pt3dadd( 50.3406, 41.4933, -16.8051, 0.68 ) }
    dend_16 { pt3dadd( 51.7676, 44.673, -13.5125, 0.68 ) }
    dend_16 { pt3dadd( 52.5662, 46.4525, -11.6698, 0.68 ) }
    dend_16 { pt3dadd( 53.6381, 48.8408, -9.19676, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 48.7155, 37.8722, -20.5548, 0.79 ) }
    dend_15 { pt3dadd( 50.8068, 38.9682, -20.4731, 0.79 ) }
    dend_15 { pt3dadd( 54.1342, 40.7121, -20.3432, 0.79 ) }
    dend_15 { pt3dadd( 56.2894, 41.8416, -20.2591, 0.79 ) }
    dend_15 { pt3dadd( 58.6932, 43.1014, -20.1652, 0.79 ) }
    dend_15 { pt3dadd( 60.058, 43.8167, -20.112, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 114.183, -142.57, -3.95468, 0.57 ) }
    dend_7 { pt3dadd( 115.936, -145.775, -3.10332, 0.57 ) }
    dend_7 { pt3dadd( 118.658, -150.514, -1.73868, 0.57 ) }
    dend_7 { pt3dadd( 120.011, -152.793, -1.08938, 0.57 ) }
    dend_7 { pt3dadd( 123.557, -158.629, 0.528286, 0.57 ) }
    dend_7 { pt3dadd( 127.031, -164.221, 2.10151, 0.57 ) }
    dend_7 { pt3dadd( 129.832, -168.729, 3.36993, 0.57 ) }
    dend_7 { pt3dadd( 131.518, -171.259, 4.17527, 0.57 ) }
    dend_7 { pt3dadd( 133.068, -173.497, 4.94042, 0.57 ) }
    dend_7 { pt3dadd( 134.547, -175.579, 5.63592, 0.57 ) }
    dend_7 { pt3dadd( 136.331, -177.988, 6.29121, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 114.183, -142.57, -3.95468, 0.34 ) }
    dend_6 { pt3dadd( 116.201, -144.022, -3.4299, 0.34 ) }
    dend_6 { pt3dadd( 117.691, -145.1, -2.86754, 0.34 ) }
    dend_6 { pt3dadd( 118.334, -145.581, -2.60781, 0.34 ) }
    dend_6 { pt3dadd( 121.164, -147.952, -1.62701, 0.34 ) }
    dend_6 { pt3dadd( 123.392, -149.981, -0.947076, 0.57 ) }
    dend_6 { pt3dadd( 126.369, -152.792, -0.0755436, 0.57 ) }
    dend_6 { pt3dadd( 128.337, -154.774, 0.522387, 0.57 ) }
    dend_6 { pt3dadd( 130.05, -156.608, 0.941849, 0.57 ) }
    dend_6 { pt3dadd( 133.388, -160.379, 1.5746, 0.57 ) }
    dend_6 { pt3dadd( 135.256, -162.575, 1.80476, 0.57 ) }
    dend_6 { pt3dadd( 137.067, -164.776, 1.84054, 0.57 ) }
    dend_6 { pt3dadd( 139.425, -167.657, 1.63256, 0.57 ) }
    dend_6 { pt3dadd( 142.805, -171.769, 1.15734, 0.57 ) }
    dend_6 { pt3dadd( 145.642, -175.173, 0.731177, 0.57 ) }
    dend_6 { pt3dadd( 147.519, -177.304, 0.522509, 0.57 ) }
    dend_6 { pt3dadd( 150.81, -180.884, 0.182183, 0.57 ) }
    dend_6 { pt3dadd( 151.771, -181.882, 0.087393, 0.57 ) }
    dend_6 { pt3dadd( 153.93, -183.961, -0.0487249, 0.57 ) }
    dend_6 { pt3dadd( 155.594, -185.391, -0.0107087, 0.57 ) }
    dend_6 { pt3dadd( 158.858, -187.835, 0.21013, 0.57 ) }
    dend_6 { pt3dadd( 159.908, -188.525, 0.348687, 0.57 ) }
    dend_6 { pt3dadd( 161.747, -189.496, 0.907202, 0.57 ) }
    dend_6 { pt3dadd( 163.063, -190.101, 1.37023, 0.57 ) }
    dend_6 { pt3dadd( 164.422, -190.629, 1.92179, 0.57 ) }
    dend_6 { pt3dadd( 165.36, -190.971, 2.31787, 0.57 ) }
    dend_6 { pt3dadd( 167.624, -191.775, 3.31011, 0.57 ) }
    dend_6 { pt3dadd( 172.447, -193.462, 5.65462, 0.57 ) }
    dend_6 { pt3dadd( 173.764, -193.909, 6.36432, 0.57 ) }
    dend_6 { pt3dadd( 176.314, -194.763, 7.8365, 0.57 ) }
    dend_6 { pt3dadd( 178.914, -195.71, 9.43203, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 73.8178, 5.41929, -21.853, 0.45 ) }
    dend_4 { pt3dadd( 75.4324, 6.51845, -27.1058, 0.45 ) }
    dend_4 { pt3dadd( 76.2523, 7.08879, -29.7661, 0.45 ) }
    dend_4 { pt3dadd( 77.31, 8.11271, -33.7495, 0.45 ) }
    dend_4 { pt3dadd( 77.6015, 8.42287, -34.739, 0.45 ) }
    dend_4 { pt3dadd( 77.7539, 8.58482, -35.1919, 0.45 ) }
    dend_4 { pt3dadd( 79.2812, 10.2458, -39.136, 0.45 ) }
    dend_4 { pt3dadd( 79.5005, 10.4561, -39.5395, 0.45 ) }
    dend_4 { pt3dadd( 80.8348, 11.7665, -42.0278, 0.45 ) }
    dend_4 { pt3dadd( 81.8718, 12.9728, -43.786, 0.45 ) }
    dend_4 { pt3dadd( 82.4409, 13.6814, -44.7352, 0.45 ) }
    dend_4 { pt3dadd( 83.8488, 15.402, -46.8108, 0.45 ) }
    dend_4 { pt3dadd( 85.238, 16.8985, -48.1806, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 73.8178, 5.41929, -21.853, 0.45 ) }
    dend_3 { pt3dadd( 75.2216, 5.70846, -22.1278, 0.45 ) }
    dend_3 { pt3dadd( 76.1248, 5.8945, -22.3045, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 29.7829, -25.5422, 19.4519, 0.45 ) }
    dend_64 { pt3dadd( 28.0425, -28.354, 21.1921, 0.45 ) }
    dend_64 { pt3dadd( 26.0662, -31.6361, 23.1739, 0.45 ) }
    dend_64 { pt3dadd( 24.955, -33.4529, 24.2993, 0.45 ) }
    dend_64 { pt3dadd( 23.7324, -35.4219, 25.4773, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 22.305, -37.7421, 26.7875, 0.45 ) }
    dend_64 { pt3dadd( 21.7755, -38.6414, 27.2502, 0.45 ) }
    dend_64 { pt3dadd( 21.13, -39.7942, 27.7363, 0.45 ) }
    dend_64 { pt3dadd( 19.6974, -42.7032, 28.8631, 0.45 ) }
    dend_64 { pt3dadd( 18.7738, -44.9905, 29.5565, 0.45 ) }
    dend_64 { pt3dadd( 18.0866, -47.0358, 30.0208, 0.45 ) }
    dend_64 { pt3dadd( 17.5847, -48.7352, 30.3547, 0.45 ) }
    dend_64 { pt3dadd( 17.1868, -50.2954, 30.7384, 0.45 ) }
    dend_64 { pt3dadd( 16.6974, -52.77, 31.4836, 0.45 ) }
    dend_64 { pt3dadd( 16.4843, -54.3316, 32.242, 0.45 ) }
    dend_64 { pt3dadd( 16.3536, -55.7195, 33.1668, 0.45 ) }
    dend_64 { pt3dadd( 16.2241, -57.6967, 34.6024, 0.45 ) }
    dend_64 { pt3dadd( 16.1567, -59.7064, 36.165, 0.45 ) }
    dend_64 { pt3dadd( 16.1725, -60.8074, 37.0355, 0.45 ) }
    dend_64 { pt3dadd( 16.3771, -64.7114, 39.6395, 0.45 ) }
    dend_64 { pt3dadd( 16.6258, -67.3538, 41.1361, 0.45 ) }
    dend_64 { pt3dadd( 16.9467, -69.7742, 42.2093, 0.45 ) }
    dend_64 { pt3dadd( 17.2604, -72.0912, 42.8471, 0.45 ) }
    dend_64 { pt3dadd( 17.5755, -74.2993, 43.3235, 0.45 ) }
    dend_64 { pt3dadd( 18.1062, -78.5987, 44.1081, 0.45 ) }
    dend_64 { pt3dadd( 18.2877, -80.5348, 44.3938, 0.45 ) }
    dend_64 { pt3dadd( 18.35, -81.9818, 44.8785, 0.45 ) }
    dend_64 { pt3dadd( 18.3847, -85.2332, 46.1758, 0.45 ) }
    dend_64 { pt3dadd( 18.3054, -87.9173, 47.3423, 0.45 ) }
    dend_64 { pt3dadd( 18.1063, -90.828, 48.8963, 0.45 ) }
    dend_64 { pt3dadd( 17.9514, -92.2677, 49.928, 0.45 ) }
    dend_64 { pt3dadd( 17.1695, -97.663, 53.9695, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 29.7829, -25.5422, 19.4519, 0.45 ) }
    dend_49 { pt3dadd( 31.5964, -27.4147, 20.2349, 0.45 ) }
    dend_49 { pt3dadd( 32.5608, -28.7536, 20.7511, 0.45 ) }
    dend_49 { pt3dadd( 34.0386, -31.1565, 21.6223, 0.45 ) }
    dend_49 { pt3dadd( 35.2985, -33.4305, 22.424, 0.45 ) }
    dend_49 { pt3dadd( 37.0795, -36.9429, 23.6244, 0.45 ) }
    dend_49 { pt3dadd( 39.2439, -41.5895, 25.1853, 0.45 ) }
    dend_49 { pt3dadd( 41.5265, -47.4981, 27.2061, 0.45 ) }
    dend_49 { pt3dadd( 43.0535, -52.3717, 28.5633, 0.45 ) }
    dend_49 { pt3dadd( 43.8139, -55.1009, 29.2959, 0.45 ) }
    dend_49 { pt3dadd( 45.1063, -60.2879, 30.6317, 0.45 ) }
    dend_49 { pt3dadd( 45.8997, -63.7794, 31.4312, 0.45 ) }
    dend_49 { pt3dadd( 46.6349, -67.5408, 32.1912, 0.45 ) }
    dend_49 { pt3dadd( 47.7266, -75.7422, 33.4794, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.4792, -60.6096, 13.8597, 0.12 ) }
    dend_41 { pt3dadd( -7.94989, -61.3127, 13.348, 0.12 ) }
    dend_41 { pt3dadd( -8.6614, -63.0845, 12.3036, 0.57 ) }
    dend_41 { pt3dadd( -9.15159, -64.6636, 11.583, 0.57 ) }
    dend_41 { pt3dadd( -9.56285, -66.0688, 11.1557, 0.57 ) }
    dend_41 { pt3dadd( -10.9102, -70.5329, 9.62551, 0.57 ) }
    dend_41 { pt3dadd( -11.7867, -73.1987, 8.44265, 0.57 ) }
    dend_41 { pt3dadd( -12.2789, -74.7048, 7.6816, 0.91 ) }
    dend_41 { pt3dadd( -12.7271, -76.0922, 6.63846, 0.91 ) }
    dend_41 { pt3dadd( -13.3357, -77.8175, 4.92773, 0.91 ) }
    dend_41 { pt3dadd( -14.4234, -80.0038, 1.5382, 0.68 ) }
    dend_41 { pt3dadd( -15.3143, -80.9993, -1.53435, 0.68 ) }
    dend_41 { pt3dadd( -15.7583, -81.3564, -3.11017, 0.68 ) }
    dend_41 { pt3dadd( -17.1561, -82.3291, -8.60799, 0.68 ) }
    dend_41 { pt3dadd( -17.4698, -82.5064, -9.96937, 0.68 ) }
    dend_41 { pt3dadd( -18.1403, -82.8004, -13.2838, 0.68 ) }
    dend_41 { pt3dadd( -19.1895, -83.1339, -19.0576, 0.68 ) }
    dend_41 { pt3dadd( -19.5489, -83.2466, -21.3644, 0.68 ) }
    dend_41 { pt3dadd( -20.1719, -83.5916, -25.9533, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -7.4792, -60.6096, 13.8597, 0.79 ) }
    dend_32 { pt3dadd( -7.12097, -64.6842, 14.1845, 0.79 ) }
    dend_32 { pt3dadd( -6.63823, -70.1748, 14.6221, 0.79 ) }
    dend_32 { pt3dadd( -6.41532, -72.7101, 14.8241, 0.79 ) }
    dend_32 { pt3dadd( -6.24338, -74.6658, 14.98, 0.79 ) }
    dend_32 { pt3dadd( -6.16291, -75.581, 15.0529, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -7.4792, -60.6096, 13.8597, 0.57 ) }
    dend_30 { pt3dadd( -6.93433, -61.0208, 16.2023, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 5.72229, -57.1547, 7.73296, 1.13 ) }
    dend_28 { pt3dadd( 5.96611, -58.3047, 8.50798, 1.13 ) }
    dend_28 { pt3dadd( 6.38142, -60.0961, 9.5771, 0.91 ) }
    dend_28 { pt3dadd( 6.63322, -61.188, 10.1312, 0.91 ) }
    dend_28 { pt3dadd( 7.04883, -63.0291, 10.9646, 0.91 ) }
    dend_28 { pt3dadd( 7.46733, -65.0526, 11.7932, 0.91 ) }
    dend_28 { pt3dadd( 7.79913, -66.8647, 12.5267, 0.91 ) }
    dend_28 { pt3dadd( 7.9812, -68.1125, 12.9796, 0.91 ) }
    dend_28 { pt3dadd( 8.19926, -70.1545, 13.711, 0.91 ) }
    dend_28 { pt3dadd( 8.26116, -71.0049, 14.0202, 1.92 ) }
    dend_28 { pt3dadd( 8.31822, -72.143, 14.4169, 1.36 ) }
    dend_28 { pt3dadd( 8.37693, -73.8153, 15.0353, 1.02 ) }
    dend_28 { pt3dadd( 8.41458, -75.78, 15.8581, 1.02 ) }
    dend_28 { pt3dadd( 8.45417, -77.4558, 16.6107, 1.02 ) }
    dend_28 { pt3dadd( 8.47969, -78.1428, 16.9283, 1.02 ) }
    dend_28 { pt3dadd( 8.52469, -78.9165, 17.2861, 0.68 ) }
    dend_28 { pt3dadd( 8.64473, -80.1659, 17.7902, 0.68 ) }
    dend_28 { pt3dadd( 8.74361, -80.8449, 17.9948, 1.02 ) }
    dend_28 { pt3dadd( 8.86954, -81.4342, 18.1099, 2.15 ) }
    dend_28 { pt3dadd( 9.15391, -82.4351, 18.2061, 1.47 ) }
    dend_28 { pt3dadd( 9.68597, -84.0256, 18.2991, 1.13 ) }
    dend_28 { pt3dadd( 10.0569, -85.116, 18.3501, 0.79 ) }
    dend_28 { pt3dadd( 10.3138, -85.8355, 18.3703, 0.57 ) }
    dend_28 { pt3dadd( 10.845, -87.1645, 18.4086, 0.57 ) }
    dend_28 { pt3dadd( 11.3381, -88.2823, 18.4408, 0.57 ) }
    dend_28 { pt3dadd( 11.7724, -89.2046, 18.4617, 0.57 ) }
    dend_28 { pt3dadd( 12.1645, -90.0765, 18.4769, 0.57 ) }
    dend_28 { pt3dadd( 12.3994, -90.7142, 18.4749, 0.57 ) }
    dend_28 { pt3dadd( 12.751, -91.8819, 18.4238, 0.57 ) }
    dend_28 { pt3dadd( 12.9384, -92.5613, 18.4503, 0.57 ) }
    dend_28 { pt3dadd( 13.1952, -93.5961, 18.5403, 2.83 ) }
    dend_28 { pt3dadd( 13.5329, -94.9403, 18.7399, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 14.039, -96.8403, 19.055, 1.02 ) }
    dend_28 { pt3dadd( 14.3078, -97.908, 19.2637, 0.68 ) }
    dend_28 { pt3dadd( 14.9831, -100.552, 19.8175, 0.68 ) }
    dend_28 { pt3dadd( 15.2476, -101.473, 20.0092, 0.68 ) }
    dend_28 { pt3dadd( 15.7553, -103.012, 20.3751, 0.68 ) }
    dend_28 { pt3dadd( 16.0722, -103.864, 20.5889, 0.68 ) }
    dend_28 { pt3dadd( 16.5109, -104.899, 20.8236, 0.68 ) }
    dend_28 { pt3dadd( 17.1425, -106.284, 21.0584, 0.68 ) }
    dend_28 { pt3dadd( 17.9134, -107.806, 21.2163, 0.68 ) }
    dend_28 { pt3dadd( 19.0457, -109.824, 21.4333, 0.68 ) }
    dend_28 { pt3dadd( 19.7708, -111.064, 21.5671, 0.68 ) }
    dend_28 { pt3dadd( 20.657, -112.555, 21.6971, 0.57 ) }
    dend_28 { pt3dadd( 21.2842, -113.624, 21.7561, 0.57 ) }
    dend_28 { pt3dadd( 21.8444, -114.688, 21.7275, 0.57 ) }
    dend_28 { pt3dadd( 22.379, -115.824, 21.5621, 0.57 ) }
    dend_28 { pt3dadd( 22.8919, -117.033, 21.2031, 0.57 ) }
    dend_28 { pt3dadd( 23.5326, -118.623, 20.6368, 0.57 ) }
    dend_28 { pt3dadd( 23.7999, -119.333, 20.338, 1.47 ) }
    dend_28 { pt3dadd( 24.4895, -121.17, 19.4825, 0.68 ) }
    dend_28 { pt3dadd( 24.9121, -122.269, 18.9526, 0.68 ) }
    dend_28 { pt3dadd( 25.5219, -123.707, 18.2533, 0.68 ) }
    dend_28 { pt3dadd( 26.4495, -125.674, 17.3285, 0.68 ) }
    dend_28 { pt3dadd( 27.3747, -127.455, 16.5908, 0.68 ) }
    dend_28 { pt3dadd( 27.8199, -128.24, 16.2893, 0.68 ) }
    dend_28 { pt3dadd( 28.1132, -128.739, 16.2231, 0.68 ) }
    dend_28 { pt3dadd( 28.5715, -129.67, 16.4068, 0.57 ) }
    dend_28 { pt3dadd( 28.7603, -130.142, 16.6084, 0.57 ) }
    dend_28 { pt3dadd( 29.003, -130.844, 16.9976, 0.57 ) }
    dend_28 { pt3dadd( 29.3925, -132.106, 17.6858, 0.57 ) }
    dend_28 { pt3dadd( 30.6002, -136.524, 19.8847, 0.68 ) }
    dend_28 { pt3dadd( 31.2601, -139.175, 21.0132, 0.68 ) }
    dend_28 { pt3dadd( 31.542, -140.441, 21.4417, 0.68 ) }
    dend_28 { pt3dadd( 31.7132, -141.321, 21.6326, 0.68 ) }
    dend_28 { pt3dadd( 32.1326, -143.75, 21.6167, 0.68 ) }
    dend_28 { pt3dadd( 32.2611, -144.494, 21.4254, 0.68 ) }
    dend_28 { pt3dadd( 32.5159, -145.843, 20.7244, 2.04 ) }
    dend_28 { pt3dadd( 32.7673, -147.024, 19.9667, 0.79 ) }
    dend_28 { pt3dadd( 33.0598, -148.25, 19.1677, 0.79 ) }
    dend_28 { pt3dadd( 33.6471, -150.542, 17.8295, 0.79 ) }
    dend_28 { pt3dadd( 34.0026, -151.8, 17.2622, 0.79 ) }
    dend_28 { pt3dadd( 34.3501, -152.967, 16.8831, 0.79 ) }
    dend_28 { pt3dadd( 34.749, -154.302, 16.6653, 0.79 ) }
    dend_28 { pt3dadd( 35.1491, -155.523, 16.6283, 0.68 ) }
    dend_28 { pt3dadd( 35.7186, -157.145, 16.7916, 0.68 ) }
    dend_28 { pt3dadd( 36.2529, -158.601, 17.1119, 0.68 ) }
    dend_28 { pt3dadd( 36.7624, -159.895, 17.6571, 0.68 ) }
    dend_28 { pt3dadd( 37.1497, -160.828, 18.1626, 0.68 ) }
    dend_28 { pt3dadd( 37.5658, -161.775, 18.8052, 0.68 ) }
    dend_28 { pt3dadd( 37.8184, -162.312, 19.1975, 1.58 ) }
    dend_28 { pt3dadd( 38.2134, -163.085, 19.7334, 1.58 ) }
    dend_28 { pt3dadd( 39.8923, -166.282, 21.8269, 0.68 ) }
    dend_28 { pt3dadd( 40.5116, -167.406, 22.535, 0.68 ) }
    dend_28 { pt3dadd( 41.6745, -169.423, 23.7402, 0.68 ) }
    dend_28 { pt3dadd( 42.7332, -171.244, 24.8307, 0.68 ) }
    dend_28 { pt3dadd( 43.6683, -172.815, 25.7347, 0.68 ) }
    dend_28 { pt3dadd( 44.4151, -174.045, 26.4337, 0.68 ) }
    dend_28 { pt3dadd( 45.2771, -175.41, 27.119, 0.68 ) }
    dend_28 { pt3dadd( 45.8916, -176.302, 27.6794, 0.68 ) }
    dend_28 { pt3dadd( 47.0743, -177.875, 28.7522, 0.68 ) }
    dend_28 { pt3dadd( 47.4986, -178.385, 29.0893, 0.68 ) }
    dend_28 { pt3dadd( 48.681, -179.689, 29.8442, 2.38 ) }
    dend_28 { pt3dadd( 49.2901, -180.343, 30.1166, 1.92 ) }
    dend_28 { pt3dadd( 51.1042, -182.23, 30.6748, 0.57 ) }
    dend_28 { pt3dadd( 51.8047, -182.961, 30.7698, 0.57 ) }
    dend_28 { pt3dadd( 54.238, -185.509, 30.7621, 0.57 ) }
    dend_28 { pt3dadd( 55.9293, -187.294, 30.6892, 0.57 ) }
    dend_28 { pt3dadd( 56.9999, -188.424, 30.5849, 0.57 ) }
    dend_28 { pt3dadd( 58.3522, -189.847, 30.4609, 0.57 ) }
    dend_28 { pt3dadd( 59.6412, -191.178, 30.3448, 0.57 ) }
    dend_28 { pt3dadd( 60.513, -192.079, 30.373, 0.57 ) }
    dend_28 { pt3dadd( 61.2059, -192.788, 30.5232, 2.15 ) }
    dend_28 { pt3dadd( 61.7842, -193.36, 30.6767, 1.13 ) }
    dend_28 { pt3dadd( 62.6713, -194.236, 30.9533, 0.57 ) }
    dend_28 { pt3dadd( 63.4927, -195.115, 31.084, 0.57 ) }
    dend_28 { pt3dadd( 63.8442, -195.506, 31.1017, 0.57 ) }
    dend_28 { pt3dadd( 64.2658, -196.042, 31.1047, 0.57 ) }
    dend_28 { pt3dadd( 64.7942, -196.775, 31.0867, 0.57 ) }
    dend_28 { pt3dadd( 64.9201, -196.978, 31.0854, 2.38 ) }
    dend_28 { pt3dadd( 66.1061, -199.11, 31.096, 0.45 ) }
    dend_28 { pt3dadd( 66.8545, -200.557, 31.1262, 0.45 ) }
    dend_28 { pt3dadd( 67.6748, -202.185, 31.1863, 0.45 ) }
    dend_28 { pt3dadd( 68.2392, -203.332, 31.2839, 0.45 ) }
    dend_28 { pt3dadd( 69.2304, -205.417, 31.627, 0.45 ) }
    dend_28 { pt3dadd( 69.488, -205.986, 31.7577, 0.45 ) }
    dend_28 { pt3dadd( 70.5439, -208.537, 32.5844, 0.45 ) }
    dend_28 { pt3dadd( 71.2427, -210.477, 33.2685, 0.45 ) }
    dend_28 { pt3dadd( 71.7737, -212.28, 33.8762, 0.45 ) }
    dend_28 { pt3dadd( 72.1372, -213.952, 34.4766, 0.45 ) }
    dend_28 { pt3dadd( 72.2507, -214.736, 34.7721, 0.45 ) }
    dend_28 { pt3dadd( 72.3541, -216.0, 35.2059, 0.45 ) }
    dend_28 { pt3dadd( 72.3858, -217.661, 35.675, 0.45 ) }
    dend_28 { pt3dadd( 72.4157, -219.398, 35.883, 0.45 ) }
    dend_28 { pt3dadd( 72.4445, -219.848, 35.8662, 1.24 ) }
    dend_28 { pt3dadd( 72.6131, -220.982, 35.7219, 0.57 ) }
    dend_28 { pt3dadd( 72.9646, -222.385, 35.5066, 0.57 ) }
    dend_28 { pt3dadd( 73.6192, -224.219, 35.2028, 0.57 ) }
    dend_28 { pt3dadd( 74.3571, -225.91, 34.9593, 1.36 ) }
    dend_28 { pt3dadd( 75.033, -227.258, 34.9016, 0.57 ) }
    dend_28 { pt3dadd( 75.857, -228.734, 34.932, 0.57 ) }
    dend_28 { pt3dadd( 76.9981, -230.62, 35.0861, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( 77.9041, -232.016, 35.364, 0.57 ) }
    dend_28 { pt3dadd( 78.59, -233.011, 35.6617, 0.57 ) }
    dend_28 { pt3dadd( 80.0565, -235.165, 36.3876, 0.57 ) }
    dend_28 { pt3dadd( 81.3849, -237.253, 37.0498, 0.57 ) }
    dend_28 { pt3dadd( 81.9097, -238.197, 37.3448, 0.57 ) }
    dend_28 { pt3dadd( 82.7552, -240.005, 37.8136, 2.38 ) }
    dend_28 { pt3dadd( 82.9819, -240.582, 37.9248, 1.58 ) }
    dend_28 { pt3dadd( 83.8712, -243.232, 38.3926, 0.68 ) }
    dend_28 { pt3dadd( 84.3148, -244.861, 38.6271, 0.68 ) }
    dend_28 { pt3dadd( 84.7675, -246.864, 39.0455, 0.79 ) }
    dend_28 { pt3dadd( 85.1633, -248.738, 39.4691, 0.57 ) }
    dend_28 { pt3dadd( 85.507, -250.537, 39.8807, 0.57 ) }
    dend_28 { pt3dadd( 85.9823, -253.214, 40.5808, 0.57 ) }
    dend_28 { pt3dadd( 86.3163, -255.224, 41.1814, 0.57 ) }
    dend_28 { pt3dadd( 86.623, -257.147, 41.7244, 0.57 ) }
    dend_28 { pt3dadd( 86.7745, -258.079, 41.96, 0.57 ) }
    dend_28 { pt3dadd( 87.0131, -259.589, 42.3275, 0.57 ) }
    dend_28 { pt3dadd( 87.3477, -261.846, 42.7591, 0.57 ) }
    dend_28 { pt3dadd( 87.5725, -263.281, 42.8856, 0.57 ) }
    dend_28 { pt3dadd( 87.8549, -264.985, 42.8674, 0.57 ) }
    dend_28 { pt3dadd( 88.0621, -266.18, 42.7321, 0.57 ) }
    dend_28 { pt3dadd( 88.2031, -266.921, 42.6109, 0.57 ) }
    dend_28 { pt3dadd( 88.5037, -268.3, 42.3752, 0.57 ) }
    dend_28 { pt3dadd( 89.0818, -270.609, 41.9856, 0.57 ) }
    dend_28 { pt3dadd( 89.6074, -272.418, 41.7739, 1.13 ) }
    dend_28 { pt3dadd( 89.9512, -273.462, 41.7153, 2.38 ) }
    dend_28 { pt3dadd( 90.08, -273.825, 41.7107, 2.38 ) }
    dend_28 { pt3dadd( 90.9972, -276.202, 41.8108, 0.79 ) }
    dend_28 { pt3dadd( 91.5146, -277.544, 41.8339, 0.79 ) }
    dend_28 { pt3dadd( 92.0888, -279.154, 41.8713, 0.57 ) }
    dend_28 { pt3dadd( 92.5233, -280.473, 41.8629, 0.57 ) }
    dend_28 { pt3dadd( 92.8745, -281.703, 41.8146, 0.57 ) }
    dend_28 { pt3dadd( 93.1499, -282.789, 41.7232, 0.57 ) }
    dend_28 { pt3dadd( 93.8095, -285.525, 41.3371, 0.57 ) }
    dend_28 { pt3dadd( 93.9091, -285.981, 41.2828, 2.94 ) }
    dend_28 { pt3dadd( 94.361, -288.065, 41.032, 0.68 ) }
    dend_28 { pt3dadd( 94.8143, -290.058, 40.8594, 0.68 ) }
    dend_28 { pt3dadd( 95.2208, -291.623, 40.7871, 0.68 ) }
    dend_28 { pt3dadd( 95.591, -292.892, 40.7727, 0.68 ) }
    dend_28 { pt3dadd( 96.2414, -294.889, 40.8311, 0.68 ) }
    dend_28 { pt3dadd( 96.8617, -296.773, 40.8575, 0.68 ) }
    dend_28 { pt3dadd( 97.3206, -298.146, 40.8563, 0.68 ) }
    dend_28 { pt3dadd( 97.7564, -299.448, 40.8268, 0.68 ) }
    dend_28 { pt3dadd( 98.5779, -301.921, 40.7955, 0.68 ) }
    dend_28 { pt3dadd( 98.9737, -303.087, 40.7945, 0.68 ) }
    dend_28 { pt3dadd( 99.4001, -304.281, 40.8123, 0.68 ) }
    dend_28 { pt3dadd( 100.488, -307.441, 41.0885, 0.68 ) }
    dend_28 { pt3dadd( 100.727, -308.159, 41.181, 0.68 ) }
    dend_28 { pt3dadd( 101.474, -310.683, 41.6521, 0.57 ) }
    dend_28 { pt3dadd( 101.647, -311.349, 41.8082, 0.57 ) }
    dend_28 { pt3dadd( 101.75, -311.825, 41.9332, 2.49 ) }
    dend_28 { pt3dadd( 102.358, -314.965, 42.8788, 0.68 ) }
    dend_28 { pt3dadd( 102.502, -315.853, 43.1894, 0.68 ) }
    dend_28 { pt3dadd( 103.026, -318.973, 44.3213, 0.68 ) }
    dend_28 { pt3dadd( 103.207, -319.959, 44.6707, 0.68 ) }
    dend_28 { pt3dadd( 103.644, -321.951, 45.3346, 0.68 ) }
    dend_28 { pt3dadd( 104.176, -323.974, 45.9578, 0.68 ) }
    dend_28 { pt3dadd( 104.778, -325.815, 46.447, 0.68 ) }
    dend_28 { pt3dadd( 105.393, -327.382, 46.8959, 0.68 ) }
    dend_28 { pt3dadd( 106.47, -329.646, 47.5622, 0.68 ) }
    dend_28 { pt3dadd( 106.918, -330.501, 47.849, 0.68 ) }
    dend_28 { pt3dadd( 107.255, -331.126, 48.0977, 2.72 ) }
    dend_28 { pt3dadd( 107.748, -332.086, 48.5047, 1.92 ) }
    dend_28 { pt3dadd( 108.587, -333.979, 49.3842, 0.91 ) }
    dend_28 { pt3dadd( 109.001, -335.194, 50.046, 0.91 ) }
    dend_28 { pt3dadd( 109.3, -336.422, 50.8221, 0.68 ) }
    dend_28 { pt3dadd( 109.558, -337.765, 51.776, 0.68 ) }
    dend_28 { pt3dadd( 109.786, -339.132, 52.8665, 0.68 ) }
    dend_28 { pt3dadd( 110.053, -340.875, 54.36, 0.68 ) }
    dend_28 { pt3dadd( 110.232, -342.082, 55.5436, 0.68 ) }
    dend_28 { pt3dadd( 110.497, -343.721, 57.3647, 0.68 ) }
    dend_28 { pt3dadd( 110.753, -344.932, 58.962, 0.68 ) }
    dend_28 { pt3dadd( 111.171, -346.497, 61.239, 0.68 ) }
    dend_28 { pt3dadd( 111.395, -347.17, 62.3694, 0.68 ) }
    dend_28 { pt3dadd( 111.979, -348.643, 64.8578, 0.68 ) }
    dend_28 { pt3dadd( 112.381, -349.539, 66.3005, 0.68 ) }
    dend_28 { pt3dadd( 113.455, -351.808, 69.7157, 0.68 ) }
    dend_28 { pt3dadd( 113.875, -352.706, 70.9595, 0.68 ) }
    dend_28 { pt3dadd( 114.9, -354.9, 73.7101, 0.68 ) }
    dend_28 { pt3dadd( 115.625, -356.479, 75.4886, 0.68 ) }
    dend_28 { pt3dadd( 115.873, -357.022, 75.995, 0.68 ) }
    dend_28 { pt3dadd( 116.088, -357.505, 76.3992, 0.68 ) }
    dend_28 { pt3dadd( 116.678, -359.018, 77.4798, 0.68 ) }
    dend_28 { pt3dadd( 116.908, -359.635, 77.9575, 0.68 ) }
    dend_28 { pt3dadd( 117.481, -361.308, 79.1914, 0.45 ) }
    dend_28 { pt3dadd( 117.772, -362.172, 80.0371, 0.45 ) }
    dend_28 { pt3dadd( 117.89, -362.551, 80.4326, 0.45 ) }
    dend_28 { pt3dadd( 118.068, -363.133, 81.058, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.72229, -57.1547, 7.73296, 0.79 ) }
    dend_27 { pt3dadd( 7.00533, -56.179, 7.66408, 0.79 ) }
    dend_27 { pt3dadd( 8.1257, -55.3271, 7.60394, 0.57 ) }
    dend_27 { pt3dadd( 8.63818, -54.9374, 7.57643, 0.34 ) }
    dend_27 { pt3dadd( 9.22119, -54.494, 7.54513, 0.34 ) }
    dend_27 { pt3dadd( 9.46865, -54.3058, 7.53184, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 68.5396, -44.3998, 9.0579, 0.45 ) }
    dend_21 { pt3dadd( 69.2914, -46.5679, 8.95632, 0.45 ) }
    dend_21 { pt3dadd( 70.2932, -49.2999, 8.66282, 0.45 ) }
    dend_21 { pt3dadd( 72.4213, -54.9956, 7.87442, 0.45 ) }
    dend_21 { pt3dadd( 74.0018, -58.8718, 6.84899, 0.45 ) }
    dend_21 { pt3dadd( 75.4894, -62.7259, 5.58612, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 75.8725, -63.8403, 5.19615, 0.45 ) }
    dend_21 { pt3dadd( 77.086, -67.7487, 3.74014, 0.45 ) }
    dend_21 { pt3dadd( 78.539, -72.8297, 1.78223, 0.45 ) }
    dend_21 { pt3dadd( 80.3681, -80.095, -0.981394, 0.45 ) }
    dend_21 { pt3dadd( 81.3117, -84.3178, -2.59917, 0.45 ) }
    dend_21 { pt3dadd( 82.3781, -90.3034, -4.87227, 0.45 ) }
    dend_21 { pt3dadd( 83.0827, -95.9967, -6.92626, 0.45 ) }
    dend_21 { pt3dadd( 83.288, -99.9447, -8.25244, 0.45 ) }
    dend_21 { pt3dadd( 83.0683, -105.4, -10.0134, 0.45 ) }
    dend_21 { pt3dadd( 82.5626, -108.604, -10.9512, 0.45 ) }
    dend_21 { pt3dadd( 81.9777, -111.489, -11.8846, 0.45 ) }
    dend_21 { pt3dadd( 80.9089, -114.874, -13.1761, 0.45 ) }
    dend_21 { pt3dadd( 79.737, -117.259, -14.2625, 0.45 ) }
    dend_21 { pt3dadd( 77.7729, -120.153, -15.7673, 0.45 ) }
    dend_21 { pt3dadd( 74.9657, -123.321, -17.5732, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 68.5396, -44.3998, 9.0579, 0.45 ) }
    dend_20 { pt3dadd( 72.602, -52.3095, 11.8279, 0.45 ) }
    dend_20 { pt3dadd( 74.4306, -55.87, 13.0748, 0.45 ) }
    dend_20 { pt3dadd( 76.9433, -60.7623, 14.7881, 0.45 ) }
    dend_20 { pt3dadd( 78.2575, -63.3212, 15.6842, 0.45 ) }
    dend_20 { pt3dadd( 81.0858, -68.8281, 17.6127, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 17.1695, -97.663, 53.9695, 0.57 ) }
    dend_66 { pt3dadd( 14.2363, -100.127, 54.413, 0.57 ) }
    dend_66 { pt3dadd( 11.9512, -102.164, 54.8472, 0.57 ) }
    dend_66 { pt3dadd( 10.1121, -103.877, 55.1975, 0.57 ) }
    dend_66 { pt3dadd( 9.02375, -105.027, 55.4129, 0.57 ) }
    dend_66 { pt3dadd( 7.33301, -107.059, 55.8067, 0.57 ) }
    dend_66 { pt3dadd( 5.10027, -110.075, 56.6311, 0.57 ) }
    dend_66 { pt3dadd( 3.83818, -112.026, 57.3045, 0.57 ) }
    dend_66 { pt3dadd( 3.04097, -113.487, 57.7625, 0.57 ) }
    dend_66 { pt3dadd( 1.57074, -116.006, 58.9493, 0.57 ) }
    dend_66 { pt3dadd( -0.521487, -119.475, 60.7472, 0.57 ) }
    dend_66 { pt3dadd( -3.26749, -123.432, 63.1615, 0.57 ) }
    dend_66 { pt3dadd( -4.29593, -124.657, 63.9874, 0.57 ) }
    dend_66 { pt3dadd( -7.30115, -127.232, 66.2249, 0.57 ) }
    dend_66 { pt3dadd( -15.5203, -131.709, 71.6351, 0.57 ) }
    dend_66 { pt3dadd( -18.1304, -132.429, 72.9654, 0.57 ) }
    dend_66 { pt3dadd( -21.7926, -132.702, 74.2152, 0.57 ) }
    dend_66 { pt3dadd( -25.3151, -132.592, 74.9601, 0.57 ) }
    dend_66 { pt3dadd( -29.7818, -132.357, 75.8942, 0.57 ) }
    dend_66 { pt3dadd( -33.4229, -132.156, 76.4358, 0.57 ) }
    dend_66 { pt3dadd( -37.6006, -132.113, 76.8471, 0.57 ) }
    dend_66 { pt3dadd( -41.261, -132.337, 77.4064, 0.57 ) }
    dend_66 { pt3dadd( -45.8663, -133.053, 78.2429, 0.57 ) }
    dend_66 { pt3dadd( -52.9315, -135.017, 79.8561, 0.57 ) }
    dend_66 { pt3dadd( -56.4769, -136.544, 81.1283, 0.57 ) }
    dend_66 { pt3dadd( -60.1274, -138.5, 82.9344, 0.57 ) }
    dend_66 { pt3dadd( -62.2634, -139.757, 84.3124, 0.57 ) }
    dend_66 { pt3dadd( -63.4908, -140.463, 85.2467, 0.57 ) }
    dend_66 { pt3dadd( -65.2221, -141.454, 86.5932, 0.57 ) }
    dend_66 { pt3dadd( -71.5872, -144.703, 91.3475, 0.57 ) }
    dend_66 { pt3dadd( -72.9271, -145.346, 92.3245, 0.57 ) }
    dend_66 { pt3dadd( -74.7817, -146.191, 93.6075, 0.57 ) }
    dend_66 { pt3dadd( -80.6943, -148.744, 97.5994, 0.57 ) }
    dend_66 { pt3dadd( -83.1487, -149.848, 99.1332, 0.57 ) }
    dend_66 { pt3dadd( -90.1797, -153.122, 103.102, 0.57 ) }
    dend_66 { pt3dadd( -91.6513, -153.85, 103.855, 0.57 ) }
    dend_66 { pt3dadd( -97.2993, -156.753, 106.602, 0.57 ) }
    dend_66 { pt3dadd( -98.8658, -157.587, 107.318, 0.57 ) }
    dend_66 { pt3dadd( -102.312, -159.47, 108.692, 0.57 ) }
    dend_66 { pt3dadd( -104.038, -160.448, 109.305, 0.57 ) }
    dend_66 { pt3dadd( -111.328, -164.91, 111.479, 0.57 ) }
    dend_66 { pt3dadd( -114.668, -167.049, 112.35, 0.57 ) }
    dend_66 { pt3dadd( -118.711, -169.843, 112.988, 0.57 ) }
    dend_66 { pt3dadd( -123.896, -173.664, 113.435, 0.57 ) }
    dend_66 { pt3dadd( -129.8, -178.241, 113.561, 0.57 ) }
    dend_66 { pt3dadd( -131.367, -179.591, 113.39, 0.57 ) }
    dend_66 { pt3dadd( -133.886, -182.061, 112.648, 0.57 ) }
    dend_66 { pt3dadd( -137.843, -186.697, 109.816, 0.57 ) }
    dend_66 { pt3dadd( -139.681, -189.304, 107.473, 0.57 ) }
    dend_66 { pt3dadd( -141.485, -192.282, 104.363, 0.57 ) }
    dend_66 { pt3dadd( -143.297, -195.541, 100.675, 0.57 ) }
    dend_66 { pt3dadd( -144.672, -198.154, 97.5547, 0.57 ) }
    dend_66 { pt3dadd( -149.507, -208.381, 84.6574, 0.57 ) }
    dend_66 { pt3dadd( -149.581, -208.559, 84.4235, 2.26 ) }
    dend_66 { pt3dadd( -150.511, -211.602, 79.6642, 0.68 ) }
    dend_66 { pt3dadd( -150.662, -212.769, 77.466, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 17.1695, -97.663, 53.9695, 0.57 ) }
    dend_65 { pt3dadd( 19.5635, -99.8707, 60.4378, 0.57 ) }
    dend_65 { pt3dadd( 21.2203, -101.504, 64.8654, 0.57 ) }
    dend_65 { pt3dadd( 21.5637, -101.893, 65.7253, 0.57 ) }
    dend_65 { pt3dadd( 22.4678, -103.044, 67.9427, 0.57 ) }
    dend_65 { pt3dadd( 24.2293, -105.267, 72.2337, 0.57 ) }
    dend_65 { pt3dadd( 28.4899, -110.565, 82.1262, 0.57 ) }
    dend_65 { pt3dadd( 29.3435, -111.676, 83.9117, 0.57 ) }
    dend_65 { pt3dadd( 31.0723, -114.059, 87.2928, 0.57 ) }
    dend_65 { pt3dadd( 31.7368, -115.012, 88.4811, 0.57 ) }
    dend_65 { pt3dadd( 34.4307, -118.857, 93.0091, 0.57 ) }
    dend_65 { pt3dadd( 35.2783, -120.318, 94.3452, 0.57 ) }
    dend_65 { pt3dadd( 36.3617, -122.774, 95.8013, 0.57 ) }
    dend_65 { pt3dadd( 37.5271, -125.069, 97.2542, 0.57 ) }
    dend_65 { pt3dadd( 39.1949, -128.217, 99.382, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 47.7266, -75.7422, 33.4794, 0.34 ) }
    dend_63 { pt3dadd( 46.1283, -77.4315, 34.0337, 0.34 ) }
    dend_63 { pt3dadd( 44.9706, -78.871, 34.3916, 0.34 ) }
    dend_63 { pt3dadd( 43.748, -80.4347, 34.8006, 0.45 ) }
    dend_63 { pt3dadd( 41.6976, -83.0892, 35.5586, 0.45 ) }
    dend_63 { pt3dadd( 39.7655, -85.5981, 36.2253, 0.45 ) }
    dend_63 { pt3dadd( 38.0318, -87.8737, 36.8446, 0.45 ) }
    dend_63 { pt3dadd( 35.7721, -90.9817, 37.4239, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 34.8861, -92.2991, 37.6398, 0.45 ) }
    dend_63 { pt3dadd( 34.2715, -93.2545, 37.7918, 0.45 ) }
    dend_63 { pt3dadd( 32.6976, -95.7758, 38.2478, 0.45 ) }
    dend_63 { pt3dadd( 31.6788, -97.4571, 38.6384, 0.45 ) }
    dend_63 { pt3dadd( 28.9756, -101.962, 39.8229, 0.45 ) }
    dend_63 { pt3dadd( 27.8401, -103.827, 40.312, 0.45 ) }
    dend_63 { pt3dadd( 27.1456, -105.019, 40.6262, 0.45 ) }
    dend_63 { pt3dadd( 25.7634, -107.408, 41.3619, 0.45 ) }
    dend_63 { pt3dadd( 24.2829, -109.992, 42.0964, 0.45 ) }
    dend_63 { pt3dadd( 23.3117, -111.584, 42.4266, 0.45 ) }
    dend_63 { pt3dadd( 21.4936, -114.368, 42.8625, 0.45 ) }
    dend_63 { pt3dadd( 20.5652, -115.726, 42.9985, 0.45 ) }
    dend_63 { pt3dadd( 19.1836, -117.659, 43.0126, 0.45 ) }
    dend_63 { pt3dadd( 15.7321, -122.268, 42.769, 0.45 ) }
    dend_63 { pt3dadd( 14.0858, -124.43, 42.4523, 0.45 ) }
    dend_63 { pt3dadd( 12.8239, -126.114, 42.1686, 0.45 ) }
    dend_63 { pt3dadd( 11.317, -128.184, 41.8311, 0.45 ) }
    dend_63 { pt3dadd( 8.34422, -132.326, 41.1707, 0.23 ) }
    dend_63 { pt3dadd( 7.62864, -133.345, 41.0083, 0.23 ) }
    dend_63 { pt3dadd( 5.20318, -136.884, 40.7171, 0.23 ) }
    dend_63 { pt3dadd( 4.31563, -138.278, 40.6305, 0.23 ) }
    dend_63 { pt3dadd( 2.28185, -141.564, 40.3445, 0.45 ) }
    dend_63 { pt3dadd( 1.62221, -142.656, 40.2227, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 47.7266, -75.7422, 33.4794, 0.45 ) }
    dend_50 { pt3dadd( 48.4152, -77.688, 34.1741, 0.45 ) }
    dend_50 { pt3dadd( 49.066, -79.6146, 34.8405, 0.45 ) }
    dend_50 { pt3dadd( 49.5617, -81.1946, 35.3787, 0.45 ) }
    dend_50 { pt3dadd( 50.1855, -83.2222, 36.1688, 0.45 ) }
    dend_50 { pt3dadd( 51.221, -86.5298, 37.5286, 0.45 ) }
    dend_50 { pt3dadd( 51.9154, -88.7478, 38.4404, 0.45 ) }
    dend_50 { pt3dadd( 52.2844, -90.0667, 38.9641, 0.45 ) }
    dend_50 { pt3dadd( 52.8413, -92.2952, 39.8658, 0.45 ) }
    dend_50 { pt3dadd( 53.3734, -94.6258, 40.8158, 0.45 ) }
    dend_50 { pt3dadd( 53.8761, -96.6464, 41.7654, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -20.1719, -83.5916, -25.9533, 0.57 ) }
    dend_43 { pt3dadd( -20.53, -83.9336, -29.1169, 0.57 ) }
    dend_43 { pt3dadd( -20.5812, -83.9825, -29.5689, 0.57 ) }
    dend_43 { pt3dadd( -20.6922, -84.0885, -30.5497, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -20.1719, -83.5916, -25.9533, 0.68 ) }
    dend_42 { pt3dadd( -20.5781, -84.7499, -26.5297, 0.68 ) }
    dend_42 { pt3dadd( -21.2923, -86.3692, -27.7048, 0.68 ) }
    dend_42 { pt3dadd( -21.6938, -87.1461, -28.3113, 0.68 ) }
    dend_42 { pt3dadd( -22.0571, -87.7306, -28.7838, 0.68 ) }
    dend_42 { pt3dadd( -22.9497, -88.9702, -29.9889, 0.68 ) }
    dend_42 { pt3dadd( -23.3751, -89.5205, -30.5493, 0.68 ) }
    dend_42 { pt3dadd( -24.7679, -91.1756, -32.3633, 0.68 ) }
    dend_42 { pt3dadd( -25.253, -91.7662, -32.9556, 0.68 ) }
    dend_42 { pt3dadd( -25.8856, -92.5104, -33.6335, 0.68 ) }
    dend_42 { pt3dadd( -27.2107, -94.0472, -34.9296, 0.68 ) }
    dend_42 { pt3dadd( -28.2668, -95.2141, -35.7971, 0.68 ) }
    dend_42 { pt3dadd( -30.0133, -97.1433, -37.1005, 0.68 ) }
    dend_42 { pt3dadd( -31.5229, -98.8069, -38.1084, 0.68 ) }
    dend_42 { pt3dadd( -33.1663, -100.611, -39.1399, 0.68 ) }
    dend_42 { pt3dadd( -34.4794, -102.066, -39.9194, 0.68 ) }
    dend_42 { pt3dadd( -36.042, -103.752, -40.7211, 0.68 ) }
    dend_42 { pt3dadd( -37.4675, -105.176, -41.4275, 0.57 ) }
    dend_42 { pt3dadd( -38.7493, -106.317, -42.0116, 0.57 ) }
    dend_42 { pt3dadd( -40.3251, -107.678, -42.7771, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -6.16291, -75.581, 15.0529, 0.45 ) }
    dend_38 { pt3dadd( -8.71398, -75.9892, 16.6713, 0.45 ) }
    dend_38 { pt3dadd( -9.87736, -76.0413, 17.4588, 0.45 ) }
    dend_38 { pt3dadd( -12.5316, -75.9872, 19.0567, 0.45 ) }
    dend_38 { pt3dadd( -13.2448, -75.9344, 19.5064, 0.45 ) }
    dend_38 { pt3dadd( -14.23, -75.7917, 20.1227, 0.45 ) }
    dend_38 { pt3dadd( -14.8705, -75.6852, 20.7821, 0.45 ) }
    dend_38 { pt3dadd( -15.5182, -75.5416, 21.7343, 0.45 ) }
    dend_38 { pt3dadd( -16.0906, -75.3422, 22.7708, 0.45 ) }
    dend_38 { pt3dadd( -16.7062, -75.0236, 23.8058, 0.45 ) }
    dend_38 { pt3dadd( -17.1379, -74.75, 24.5149, 0.45 ) }
    dend_38 { pt3dadd( -19.8022, -72.9987, 28.9208, 0.45 ) }
    dend_38 { pt3dadd( -20.3881, -72.6574, 29.8293, 0.45 ) }
    dend_38 { pt3dadd( -21.5865, -72.0549, 31.5138, 0.45 ) }
    dend_38 { pt3dadd( -23.4744, -71.1959, 33.9387, 0.45 ) }
    dend_38 { pt3dadd( -24.2154, -70.954, 34.7386, 0.45 ) }
    dend_38 { pt3dadd( -26.4308, -70.6843, 36.7346, 0.45 ) }
    dend_38 { pt3dadd( -27.4712, -70.7728, 37.3753, 0.45 ) }
    dend_38 { pt3dadd( -28.0895, -70.9529, 37.7408, 0.34 ) }
    dend_38 { pt3dadd( -28.783, -71.3002, 38.1189, 0.34 ) }
    dend_38 { pt3dadd( -30.6941, -72.4626, 38.9152, 0.34 ) }
    dend_38 { pt3dadd( -32.4144, -73.5413, 39.3901, 0.34 ) }
    dend_38 { pt3dadd( -33.6695, -74.3066, 39.5747, 0.34 ) }
    dend_38 { pt3dadd( -35.1585, -75.1424, 39.8053, 0.34 ) }
    dend_38 { pt3dadd( -37.6637, -76.465, 40.2324, 0.34 ) }
    dend_38 { pt3dadd( -40.9146, -78.0321, 40.8194, 0.34 ) }
    dend_38 { pt3dadd( -42.0327, -78.4715, 41.0033, 0.34 ) }
    dend_38 { pt3dadd( -42.8199, -78.7044, 41.2025, 0.34 ) }
    dend_38 { pt3dadd( -45.0353, -79.2381, 41.9734, 0.34 ) }
    dend_38 { pt3dadd( -46.5146, -79.5778, 42.705, 0.34 ) }
    dend_38 { pt3dadd( -47.6396, -79.8347, 43.4863, 0.34 ) }
    dend_38 { pt3dadd( -48.8653, -80.1392, 44.5568, 0.34 ) }
    dend_38 { pt3dadd( -50.4123, -80.5884, 45.8463, 0.34 ) }
    dend_38 { pt3dadd( -52.3259, -81.2297, 47.4057, 0.34 ) }
    dend_38 { pt3dadd( -54.4595, -82.0378, 49.032, 0.34 ) }
    dend_38 { pt3dadd( -56.586, -82.9126, 50.573, 0.34 ) }
    dend_38 { pt3dadd( -57.9344, -83.5403, 51.4744, 0.34 ) }
    dend_38 { pt3dadd( -59.9435, -84.6282, 52.7145, 0.34 ) }
    dend_38 { pt3dadd( -61.079, -85.2813, 53.3038, 0.34 ) }
    dend_38 { pt3dadd( -61.8656, -85.7381, 53.6464, 0.34 ) }
    dend_38 { pt3dadd( -64.2084, -87.0732, 54.365, 0.34 ) }
    dend_38 { pt3dadd( -65.5944, -87.9091, 54.7308, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -67.427, -89.0157, 55.2337, 0.34 ) }
    dend_38 { pt3dadd( -68.1288, -89.4202, 55.4576, 0.34 ) }
    dend_38 { pt3dadd( -69.8404, -90.3331, 55.9231, 0.34 ) }
    dend_38 { pt3dadd( -70.7549, -90.8043, 56.1457, 0.34 ) }
    dend_38 { pt3dadd( -72.5203, -91.6913, 56.5052, 0.34 ) }
    dend_38 { pt3dadd( -73.5555, -92.2003, 56.671, 0.34 ) }
    dend_38 { pt3dadd( -74.6981, -92.7376, 56.7984, 0.34 ) }
    dend_38 { pt3dadd( -76.7428, -93.6751, 56.9856, 0.34 ) }
    dend_38 { pt3dadd( -78.432, -94.3969, 57.1076, 0.34 ) }
    dend_38 { pt3dadd( -80.1831, -95.0488, 57.1941, 0.34 ) }
    dend_38 { pt3dadd( -81.8286, -95.5483, 57.2586, 0.34 ) }
    dend_38 { pt3dadd( -83.0848, -95.8779, 57.3569, 0.34 ) }
    dend_38 { pt3dadd( -84.3121, -96.1599, 57.4655, 0.34 ) }
    dend_38 { pt3dadd( -85.4906, -96.368, 57.5916, 0.34 ) }
    dend_38 { pt3dadd( -86.462, -96.4552, 57.7214, 0.34 ) }
    dend_38 { pt3dadd( -88.2406, -96.4211, 58.0335, 0.34 ) }
    dend_38 { pt3dadd( -89.4843, -96.2744, 58.3326, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.16291, -75.581, 15.0529, 2.72 ) }
    dend_33 { pt3dadd( -5.18537, -78.6741, 19.0593, 2.72 ) }
    dend_33 { pt3dadd( -4.70647, -80.0264, 20.7454, 1.47 ) }
    dend_33 { pt3dadd( -4.30426, -81.2336, 22.0648, 1.13 ) }
    dend_33 { pt3dadd( -3.03414, -85.2073, 26.0942, 1.13 ) }
    dend_33 { pt3dadd( -2.82712, -86.0142, 26.7983, 3.39 ) }
    dend_33 { pt3dadd( -2.52984, -87.6539, 28.0132, 1.81 ) }
    dend_33 { pt3dadd( -2.26993, -91.1118, 29.6188, 0.68 ) }
    dend_33 { pt3dadd( -2.27971, -93.0332, 30.2637, 0.68 ) }
    dend_33 { pt3dadd( -2.41707, -94.0604, 30.4431, 0.68 ) }
    dend_33 { pt3dadd( -3.12969, -97.0857, 30.549, 0.68 ) }
    dend_33 { pt3dadd( -3.72799, -99.1292, 30.608, 0.68 ) }
    dend_33 { pt3dadd( -4.3626, -100.901, 30.6082, 0.68 ) }
    dend_33 { pt3dadd( -5.13107, -102.883, 30.5078, 0.68 ) }
    dend_33 { pt3dadd( -6.01653, -105.172, 30.4774, 0.68 ) }
    dend_33 { pt3dadd( -6.55762, -106.597, 30.4498, 0.68 ) }
    dend_33 { pt3dadd( -7.21554, -108.446, 30.4516, 0.68 ) }
    dend_33 { pt3dadd( -7.77647, -110.094, 30.4277, 0.68 ) }
    dend_33 { pt3dadd( -8.93961, -113.661, 30.4207, 0.68 ) }
    dend_33 { pt3dadd( -9.17454, -114.489, 30.4777, 3.51 ) }
    dend_33 { pt3dadd( -9.64012, -116.435, 30.7215, 1.7 ) }
    dend_33 { pt3dadd( -9.98762, -117.929, 31.0665, 0.79 ) }
    dend_33 { pt3dadd( -10.3983, -119.657, 31.6382, 0.79 ) }
    dend_33 { pt3dadd( -11.1388, -122.842, 32.9402, 0.68 ) }
    dend_33 { pt3dadd( -11.8027, -125.829, 34.3083, 0.79 ) }
    dend_33 { pt3dadd( -11.9908, -126.728, 34.7076, 0.45 ) }
    dend_33 { pt3dadd( -12.3421, -129.289, 36.3894, 0.45 ) }
    dend_33 { pt3dadd( -12.3996, -130.232, 37.1374, 0.45 ) }
    dend_33 { pt3dadd( -12.3846, -130.929, 37.7611, 0.68 ) }
    dend_33 { pt3dadd( -12.2241, -132.572, 39.4113, 0.68 ) }
    dend_33 { pt3dadd( -12.0995, -133.427, 40.2819, 0.68 ) }
    dend_33 { pt3dadd( -11.168, -138.914, 45.9362, 2.38 ) }
    dend_33 { pt3dadd( -10.986, -139.829, 46.924, 1.47 ) }
    dend_33 { pt3dadd( -10.8922, -140.328, 47.4643, 0.79 ) }
    dend_33 { pt3dadd( -10.5325, -142.243, 49.5001, 0.79 ) }
    dend_33 { pt3dadd( -10.2795, -143.671, 50.9277, 0.79 ) }
    dend_33 { pt3dadd( -10.1332, -144.725, 51.8155, 2.15 ) }
    dend_33 { pt3dadd( -9.85033, -148.023, 53.6795, 0.79 ) }
    dend_33 { pt3dadd( -9.65776, -150.012, 54.6855, 0.68 ) }
    dend_33 { pt3dadd( -9.52239, -151.452, 55.2418, 0.68 ) }
    dend_33 { pt3dadd( -9.3952, -152.783, 55.5806, 0.68 ) }
    dend_33 { pt3dadd( -9.35753, -153.315, 55.6707, 0.68 ) }
    dend_33 { pt3dadd( -9.32102, -154.935, 55.7285, 0.68 ) }
    dend_33 { pt3dadd( -9.38532, -156.672, 55.5769, 0.68 ) }
    dend_33 { pt3dadd( -9.7494, -159.717, 55.2706, 0.68 ) }
    dend_33 { pt3dadd( -9.87877, -160.293, 55.2113, 2.6 ) }
    dend_33 { pt3dadd( -10.1759, -161.266, 55.1216, 2.26 ) }
    dend_33 { pt3dadd( -11.4356, -164.425, 54.903, 0.45 ) }
    dend_33 { pt3dadd( -11.9262, -165.402, 54.8669, 0.45 ) }
    dend_33 { pt3dadd( -12.7617, -166.842, 54.8182, 0.45 ) }
    dend_33 { pt3dadd( -14.0566, -168.904, 54.7679, 0.45 ) }
    dend_33 { pt3dadd( -15.3165, -170.844, 54.7814, 0.45 ) }
    dend_33 { pt3dadd( -16.744, -172.996, 54.8798, 0.45 ) }
    dend_33 { pt3dadd( -18.2832, -175.27, 55.0704, 0.45 ) }
    dend_33 { pt3dadd( -19.7802, -177.488, 55.2266, 2.38 ) }
    dend_33 { pt3dadd( -20.1334, -178.025, 55.2576, 3.51 ) }
    dend_33 { pt3dadd( -21.8533, -180.632, 55.4159, 0.57 ) }
    dend_33 { pt3dadd( -22.6172, -181.789, 55.4805, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -6.93433, -61.0208, 16.2023, 0.45 ) }
    dend_31 { pt3dadd( -5.80632, -60.5734, 14.7991, 0.45 ) }
    dend_31 { pt3dadd( -5.06171, -60.3345, 14.0525, 0.45 ) }
    dend_31 { pt3dadd( -3.93989, -60.0959, 13.0364, 0.45 ) }
    dend_31 { pt3dadd( -0.855245, -59.7326, 10.5959, 0.45 ) }
    dend_31 { pt3dadd( 1.95235, -59.4916, 8.49249, 0.45 ) }
    dend_31 { pt3dadd( 4.66413, -59.2581, 6.49544, 0.45 ) }
    dend_31 { pt3dadd( 7.47812, -58.9776, 4.01015, 0.45 ) }
    dend_31 { pt3dadd( 9.96186, -58.7053, 1.77937, 0.45 ) }
    dend_31 { pt3dadd( 11.8991, -58.5048, 0.0709362, 0.45 ) }
    dend_31 { pt3dadd( 15.554, -58.1717, -3.05598, 0.45 ) }
    dend_31 { pt3dadd( 18.076, -57.9178, -5.21511, 0.45 ) }
    dend_31 { pt3dadd( 22.897, -57.2003, -9.66964, 0.45 ) }
    dend_31 { pt3dadd( 24.5377, -56.8825, -11.6175, 0.45 ) }
    dend_31 { pt3dadd( 24.7077, -56.8334, -11.8448, 0.45 ) }
    dend_31 { pt3dadd( 24.9735, -56.7375, -12.2809, 0.45 ) }
    dend_31 { pt3dadd( 26.0565, -56.415, -14.1102, 0.45 ) }
    dend_31 { pt3dadd( 28.4089, -56.1424, -18.3049, 0.45 ) }
    dend_31 { pt3dadd( 29.7063, -56.1797, -20.4131, 0.45 ) }
    dend_31 { pt3dadd( 30.3834, -56.2482, -21.5096, 0.45 ) }
    dend_31 { pt3dadd( 31.9834, -56.5369, -24.1099, 0.45 ) }
    dend_31 { pt3dadd( 32.99, -56.812, -25.7133, 0.45 ) }
    dend_31 { pt3dadd( 35.4319, -57.5806, -29.5017, 0.45 ) }
    dend_31 { pt3dadd( 37.0745, -58.0148, -31.6245, 0.45 ) }
    dend_31 { pt3dadd( 37.7317, -58.1833, -32.4041, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 38.487, -58.3314, -33.2213, 0.45 ) }
    dend_31 { pt3dadd( 39.362, -58.3872, -34.0129, 0.45 ) }
    dend_31 { pt3dadd( 40.6551, -58.236, -35.0063, 0.45 ) }
    dend_31 { pt3dadd( 42.9936, -57.5831, -36.1779, 0.45 ) }
    dend_31 { pt3dadd( 44.0558, -57.2666, -36.7836, 0.45 ) }
    dend_31 { pt3dadd( 47.1404, -56.3275, -38.6482, 0.45 ) }
    dend_31 { pt3dadd( 48.5749, -55.8867, -39.5925, 0.45 ) }
    dend_31 { pt3dadd( 49.8162, -55.5461, -40.4363, 0.45 ) }
    dend_31 { pt3dadd( 52.1621, -55.0267, -42.0299, 0.45 ) }
    dend_31 { pt3dadd( 57.6946, -54.1777, -45.6414, 0.45 ) }
    dend_31 { pt3dadd( 58.3622, -54.0968, -46.0826, 0.45 ) }
    dend_31 { pt3dadd( 60.4137, -53.9793, -47.5098, 0.45 ) }
    dend_31 { pt3dadd( 61.8203, -53.9737, -48.5499, 0.45 ) }
    dend_31 { pt3dadd( 62.4614, -54.0036, -49.0421, 0.45 ) }
    dend_31 { pt3dadd( 64.7552, -54.1779, -50.7805, 0.45 ) }
    dend_31 { pt3dadd( 66.6408, -54.2862, -51.3022, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -150.662, -212.769, 77.466, 0.57 ) }
    dend_68 { pt3dadd( -152.046, -214.294, 77.1569, 0.57 ) }
    dend_68 { pt3dadd( -155.98, -218.181, 76.107, 0.57 ) }
    dend_68 { pt3dadd( -159.281, -221.175, 75.1306, 0.45 ) }
    dend_68 { pt3dadd( -162.42, -223.617, 74.5161, 0.45 ) }
    dend_68 { pt3dadd( -164.907, -225.406, 74.1201, 0.45 ) }
    dend_68 { pt3dadd( -167.165, -226.936, 73.8648, 0.45 ) }
    dend_68 { pt3dadd( -169.769, -228.564, 73.5948, 0.45 ) }
    dend_68 { pt3dadd( -172.607, -230.037, 73.3725, 0.45 ) }
    dend_68 { pt3dadd( -180.366, -233.568, 73.0459, 0.45 ) }
    dend_68 { pt3dadd( -181.843, -234.211, 73.0594, 0.45 ) }
    dend_68 { pt3dadd( -184.575, -235.465, 73.2478, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -150.662, -212.769, 77.466, 0.57 ) }
    dend_67 { pt3dadd( -151.653, -216.811, 78.3734, 0.57 ) }
    dend_67 { pt3dadd( -152.008, -218.189, 78.6971, 0.57 ) }
    dend_67 { pt3dadd( -152.436, -219.923, 79.0884, 0.57 ) }
    dend_67 { pt3dadd( -153.002, -222.262, 79.5897, 0.57 ) }
    dend_67 { pt3dadd( -153.394, -223.868, 79.9834, 0.57 ) }
    dend_67 { pt3dadd( -153.576, -224.679, 80.1871, 0.57 ) }
    dend_67 { pt3dadd( -153.611, -224.827, 80.2341, 2.04 ) }
    dend_67 { pt3dadd( -154.103, -226.876, 80.5944, 0.57 ) }
    dend_67 { pt3dadd( -154.307, -227.581, 80.6311, 0.57 ) }
    dend_67 { pt3dadd( -154.683, -228.597, 80.5424, 1.92 ) }
    dend_67 { pt3dadd( -155.918, -231.148, 80.4741, 0.68 ) }
    dend_67 { pt3dadd( -156.532, -232.263, 80.4819, 0.68 ) }
    dend_67 { pt3dadd( -158.262, -235.178, 80.4625, 0.57 ) }
    dend_67 { pt3dadd( -159.544, -237.152, 80.7377, 0.57 ) }
    dend_67 { pt3dadd( -161.413, -239.993, 81.4669, 0.57 ) }
    dend_67 { pt3dadd( -164.033, -244.316, 82.9682, 0.57 ) }
    dend_67 { pt3dadd( -164.396, -244.978, 83.2683, 0.57 ) }
    dend_67 { pt3dadd( -165.035, -246.41, 83.9784, 0.45 ) }
    dend_67 { pt3dadd( -167.071, -252.04, 87.3067, 0.45 ) }
    dend_67 { pt3dadd( -167.355, -252.964, 87.8625, 0.45 ) }
    dend_67 { pt3dadd( -168.159, -255.785, 89.4774, 0.45 ) }
    dend_67 { pt3dadd( -168.713, -257.934, 90.4512, 0.45 ) }
    dend_67 { pt3dadd( -169.277, -259.692, 91.3309, 0.45 ) }
    dend_67 { pt3dadd( -170.667, -263.166, 93.0121, 0.45 ) }
    dend_67 { pt3dadd( -171.379, -264.553, 93.5993, 0.45 ) }
    dend_67 { pt3dadd( -172.113, -265.724, 94.1823, 0.45 ) }
    dend_67 { pt3dadd( -172.419, -266.133, 94.4218, 0.45 ) }
    dend_67 { pt3dadd( -174.936, -269.169, 96.4459, 0.11 ) }
    dend_67 { pt3dadd( -176.424, -270.843, 97.6698, 0.23 ) }
    dend_67 { pt3dadd( -178.574, -273.335, 99.3623, 0.23 ) }
    dend_67 { pt3dadd( -179.495, -274.402, 100.181, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 53.8761, -96.6464, 41.7654, 0.34 ) }
    dend_52 { pt3dadd( 54.8166, -99.4704, 42.5886, 0.34 ) }
    dend_52 { pt3dadd( 55.9488, -102.87, 43.5794, 0.34 ) }
    dend_52 { pt3dadd( 57.0601, -106.207, 44.552, 0.34 ) }
    dend_52 { pt3dadd( 57.8588, -108.605, 45.2511, 0.34 ) }
    dend_52 { pt3dadd( 58.2898, -109.899, 45.6283, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 53.8761, -96.6464, 41.7654, 0.45 ) }
    dend_51 { pt3dadd( 56.9534, -96.0916, 40.7601, 0.45 ) }
    dend_51 { pt3dadd( 59.2528, -95.6872, 39.893, 0.45 ) }
    dend_51 { pt3dadd( 62.7305, -95.1165, 38.567, 0.45 ) }
    dend_51 { pt3dadd( 65.1461, -94.6757, 37.6815, 0.45 ) }
    dend_51 { pt3dadd( 69.9761, -93.7659, 35.9575, 0.45 ) }
    dend_51 { pt3dadd( 73.2227, -93.2125, 34.8726, 0.45 ) }
    dend_51 { pt3dadd( 75.7121, -92.8525, 34.1557, 0.45 ) }
    dend_51 { pt3dadd( 79.089, -92.4501, 33.1825, 0.45 ) }
    dend_51 { pt3dadd( 82.9843, -92.0215, 31.9661, 0.45 ) }
    dend_51 { pt3dadd( 83.462, -91.9681, 31.7894, 1.58 ) }
    dend_51 { pt3dadd( 87.0535, -91.5226, 30.4129, 0.34 ) }
    dend_51 { pt3dadd( 89.9273, -91.2598, 29.1537, 0.34 ) }
    dend_51 { pt3dadd( 94.6827, -90.9346, 26.6741, 0.34 ) }
    dend_51 { pt3dadd( 97.3203, -90.8428, 25.0641, 0.34 ) }
    dend_51 { pt3dadd( 99.997, -91.1521, 23.3565, 0.34 ) }
    dend_51 { pt3dadd( 101.653, -91.5247, 22.2076, 0.34 ) }
    dend_51 { pt3dadd( 103.471, -92.184, 20.9841, 0.34 ) }
    dend_51 { pt3dadd( 106.183, -93.7005, 19.3147, 0.34 ) }
    dend_51 { pt3dadd( 108.238, -95.1271, 18.3416, 0.34 ) }
    dend_51 { pt3dadd( 113.839, -99.4388, 16.2012, 0.34 ) }
    dend_51 { pt3dadd( 116.786, -101.866, 15.0864, 0.34 ) }
    dend_51 { pt3dadd( 119.837, -104.48, 13.929, 0.34 ) }
    dend_51 { pt3dadd( 124.494, -108.639, 12.2815, 0.34 ) }
    dend_51 { pt3dadd( 127.261, -111.296, 11.3638, 0.34 ) }
    dend_51 { pt3dadd( 130.203, -114.245, 10.368, 0.34 ) }
    dend_51 { pt3dadd( 133.124, -117.139, 9.55988, 0.34 ) }
    dend_51 { pt3dadd( 136.076, -119.914, 8.95265, 0.34 ) }
    dend_51 { pt3dadd( 137.48, -121.066, 8.75364, 0.34 ) }
    dend_51 { pt3dadd( 139.213, -122.332, 8.73577, 0.34 ) }
    dend_51 { pt3dadd( 141.233, -123.761, 8.86678, 0.34 ) }
    dend_51 { pt3dadd( 142.827, -124.807, 9.07022, 0.34 ) }
    dend_51 { pt3dadd( 144.708, -125.935, 9.38404, 0.34 ) }
    dend_51 { pt3dadd( 151.307, -129.738, 10.4311, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 154.448, -131.44, 10.8861, 0.34 ) }
    dend_51 { pt3dadd( 157.619, -133.122, 11.3231, 0.34 ) }
    dend_51 { pt3dadd( 160.546, -134.698, 11.7137, 0.34 ) }
    dend_51 { pt3dadd( 165.38, -137.375, 12.2429, 0.34 ) }
    dend_51 { pt3dadd( 169.178, -139.475, 12.6191, 0.34 ) }
    dend_51 { pt3dadd( 171.571, -140.751, 12.7953, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -89.4843, -96.2744, 58.3326, 0.34 ) }
    dend_40 { pt3dadd( -90.9715, -96.7641, 59.2313, 0.34 ) }
    dend_40 { pt3dadd( -94.1488, -98.0818, 60.6169, 0.34 ) }
    dend_40 { pt3dadd( -95.4421, -98.686, 61.021, 2.04 ) }
    dend_40 { pt3dadd( -96.7317, -99.3248, 61.3586, 1.13 ) }
    dend_40 { pt3dadd( -98.8089, -100.506, 61.8785, 0.79 ) }
    dend_40 { pt3dadd( -100.26, -101.37, 62.0069, 0.57 ) }
    dend_40 { pt3dadd( -102.868, -102.922, 61.9019, 0.57 ) }
    dend_40 { pt3dadd( -108.408, -106.174, 61.2136, 0.57 ) }
    dend_40 { pt3dadd( -110.925, -107.552, 61.0444, 0.57 ) }
    dend_40 { pt3dadd( -114.923, -109.61, 60.9715, 0.57 ) }
    dend_40 { pt3dadd( -122.102, -113.074, 61.1647, 0.57 ) }
    dend_40 { pt3dadd( -126.129, -114.793, 61.3427, 0.57 ) }
    dend_40 { pt3dadd( -128.027, -115.507, 61.4612, 0.57 ) }
    dend_40 { pt3dadd( -135.784, -118.136, 62.1625, 0.57 ) }
    dend_40 { pt3dadd( -138.048, -118.86, 62.4414, 0.57 ) }
    dend_40 { pt3dadd( -140.137, -119.563, 62.8474, 0.57 ) }
    dend_40 { pt3dadd( -143.397, -120.833, 63.7045, 0.57 ) }
    dend_40 { pt3dadd( -146.702, -122.324, 64.6731, 0.57 ) }
    dend_40 { pt3dadd( -148.898, -123.429, 65.3785, 0.57 ) }
    dend_40 { pt3dadd( -151.583, -125.025, 66.2568, 0.57 ) }
    dend_40 { pt3dadd( -158.215, -129.261, 68.7132, 0.57 ) }
    dend_40 { pt3dadd( -161.663, -131.521, 70.086, 0.57 ) }
    dend_40 { pt3dadd( -166.223, -134.586, 71.9766, 0.57 ) }
    dend_40 { pt3dadd( -169.777, -136.983, 73.4503, 0.57 ) }
    dend_40 { pt3dadd( -173.429, -139.354, 74.907, 0.57 ) }
    dend_40 { pt3dadd( -175.908, -140.987, 75.9043, 0.57 ) }
    dend_40 { pt3dadd( -178.366, -142.593, 76.7894, 0.57 ) }
    dend_40 { pt3dadd( -181.419, -144.589, 77.9041, 0.57 ) }
    dend_40 { pt3dadd( -183.173, -145.705, 78.4376, 0.57 ) }
    dend_40 { pt3dadd( -185.16, -146.911, 79.0274, 0.57 ) }
    dend_40 { pt3dadd( -189.146, -149.253, 80.2571, 0.57 ) }
    dend_40 { pt3dadd( -192.931, -151.528, 81.2347, 0.57 ) }
    dend_40 { pt3dadd( -195.64, -153.171, 81.7858, 0.57 ) }
    dend_40 { pt3dadd( -199.043, -155.215, 82.2931, 0.57 ) }
    dend_40 { pt3dadd( -201.854, -156.934, 82.5575, 0.57 ) }
    dend_40 { pt3dadd( -203.77, -158.111, 82.6295, 0.57 ) }
    dend_40 { pt3dadd( -207.459, -160.283, 82.1987, 0.57 ) }
    dend_40 { pt3dadd( -210.259, -161.909, 81.6186, 0.57 ) }
    dend_40 { pt3dadd( -213.495, -163.684, 80.4278, 0.57 ) }
    dend_40 { pt3dadd( -216.301, -165.163, 78.8974, 0.57 ) }
    dend_40 { pt3dadd( -219.298, -166.652, 76.9052, 0.57 ) }
    dend_40 { pt3dadd( -224.069, -168.767, 73.2093, 0.57 ) }
    dend_40 { pt3dadd( -225.874, -169.49, 71.8182, 0.57 ) }
    dend_40 { pt3dadd( -232.165, -171.767, 67.0282, 0.57 ) }
    dend_40 { pt3dadd( -236.715, -173.291, 63.5639, 0.57 ) }
    dend_40 { pt3dadd( -238.222, -173.82, 62.4765, 0.57 ) }
    dend_40 { pt3dadd( -242.389, -175.518, 59.9095, 0.57 ) }
    dend_40 { pt3dadd( -247.038, -178.122, 58.4015, 0.57 ) }
    dend_40 { pt3dadd( -249.923, -180.206, 58.1674, 0.57 ) }
    dend_40 { pt3dadd( -250.932, -181.09, 58.3815, 0.57 ) }
    dend_40 { pt3dadd( -253.193, -183.215, 59.1239, 0.57 ) }
    dend_40 { pt3dadd( -254.498, -184.459, 59.546, 0.57 ) }
    dend_40 { pt3dadd( -258.607, -188.697, 60.6499, 0.57 ) }
    dend_40 { pt3dadd( -261.321, -191.599, 60.7824, 0.57 ) }
    dend_40 { pt3dadd( -262.663, -193.042, 60.521, 0.45 ) }
    dend_40 { pt3dadd( -263.888, -194.397, 60.0683, 0.45 ) }
    dend_40 { pt3dadd( -265.725, -196.636, 58.8288, 0.45 ) }
    dend_40 { pt3dadd( -267.825, -199.72, 56.3513, 0.45 ) }
    dend_40 { pt3dadd( -269.212, -202.215, 53.8226, 0.45 ) }
    dend_40 { pt3dadd( -271.11, -206.173, 49.54, 0.45 ) }
    dend_40 { pt3dadd( -272.03, -208.268, 47.2611, 0.45 ) }
    dend_40 { pt3dadd( -273.259, -211.44, 44.1321, 0.45 ) }
    dend_40 { pt3dadd( -274.521, -215.052, 41.0075, 0.45 ) }
    dend_40 { pt3dadd( -275.575, -217.771, 39.0805, 0.45 ) }
    dend_40 { pt3dadd( -276.023, -218.863, 38.5018, 0.45 ) }
    dend_40 { pt3dadd( -276.927, -220.794, 37.835, 0.45 ) }
    dend_40 { pt3dadd( -279.055, -224.658, 36.8672, 0.45 ) }
    dend_40 { pt3dadd( -280.694, -227.266, 36.561, 0.45 ) }
    dend_40 { pt3dadd( -283.137, -230.709, 36.4785, 0.45 ) }
    dend_40 { pt3dadd( -285.513, -233.745, 36.8396, 0.45 ) }
    dend_40 { pt3dadd( -287.968, -236.629, 37.4811, 0.45 ) }
    dend_40 { pt3dadd( -289.631, -238.374, 38.1555, 0.45 ) }
    dend_40 { pt3dadd( -290.807, -239.495, 38.8833, 0.45 ) }
    dend_40 { pt3dadd( -292.038, -240.661, 39.9984, 0.45 ) }
    dend_40 { pt3dadd( -296.056, -244.86, 44.298, 0.45 ) }
    dend_40 { pt3dadd( -296.861, -245.739, 45.1903, 0.45 ) }
    dend_40 { pt3dadd( -298.151, -247.38, 47.1077, 0.45 ) }
    dend_40 { pt3dadd( -300.359, -250.632, 50.8289, 0.45 ) }
    dend_40 { pt3dadd( -302.149, -253.738, 54.1706, 0.45 ) }
    dend_40 { pt3dadd( -304.176, -257.929, 58.169, 0.45 ) }
    dend_40 { pt3dadd( -305.16, -260.232, 59.9361, 0.45 ) }
    dend_40 { pt3dadd( -310.233, -271.537, 67.4803, 0.45 ) }
    dend_40 { pt3dadd( -311.611, -274.527, 69.1141, 0.45 ) }
    dend_40 { pt3dadd( -313.499, -278.437, 70.3059, 0.45 ) }
    dend_40 { pt3dadd( -316.244, -283.925, 70.9491, 0.45 ) }
    dend_40 { pt3dadd( -320.402, -292.268, 70.8787, 0.45 ) }
    dend_40 { pt3dadd( -323.769, -299.145, 70.0439, 0.45 ) }
    dend_40 { pt3dadd( -326.766, -305.267, 68.4746, 0.45 ) }
    dend_40 { pt3dadd( -333.397, -319.301, 64.3284, 0.45 ) }
    dend_40 { pt3dadd( -334.348, -321.386, 63.6025, 0.45 ) }
    dend_40 { pt3dadd( -336.489, -326.588, 61.6139, 0.45 ) }
    dend_40 { pt3dadd( -337.658, -329.99, 59.9548, 0.45 ) }
    dend_40 { pt3dadd( -339.023, -334.803, 57.4734, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -339.984, -338.509, 55.591, 0.45 ) }
    dend_40 { pt3dadd( -340.552, -340.5, 54.8464, 0.45 ) }
    dend_40 { pt3dadd( -341.494, -343.276, 53.8127, 0.45 ) }
    dend_40 { pt3dadd( -345.571, -353.451, 50.5834, 0.45 ) }
    dend_40 { pt3dadd( -347.952, -358.851, 49.8167, 0.45 ) }
    dend_40 { pt3dadd( -348.967, -360.996, 49.9076, 0.45 ) }
    dend_40 { pt3dadd( -352.797, -368.589, 51.0338, 0.45 ) }
    dend_40 { pt3dadd( -354.727, -372.251, 51.916, 0.45 ) }
    dend_40 { pt3dadd( -358.021, -377.874, 53.6433, 0.45 ) }
    dend_40 { pt3dadd( -362.001, -384.273, 56.5754, 0.45 ) }
    dend_40 { pt3dadd( -363.775, -387.103, 57.6386, 0.45 ) }
    dend_40 { pt3dadd( -365.946, -391.141, 58.6152, 0.45 ) }
    dend_40 { pt3dadd( -366.582, -392.998, 58.7023, 0.45 ) }
    dend_40 { pt3dadd( -367.797, -399.687, 57.9387, 0.45 ) }
    dend_40 { pt3dadd( -368.468, -407.587, 55.8795, 0.45 ) }
    dend_40 { pt3dadd( -368.386, -419.931, 51.1973, 0.45 ) }
    dend_40 { pt3dadd( -367.363, -428.251, 47.7373, 0.45 ) }
    dend_40 { pt3dadd( -366.104, -433.154, 45.6311, 0.45 ) }
    dend_40 { pt3dadd( -365.766, -434.064, 45.2063, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -89.4843, -96.2744, 58.3326, 0.34 ) }
    dend_39 { pt3dadd( -88.0093, -95.8645, 59.3266, 0.34 ) }
    dend_39 { pt3dadd( -86.9521, -95.5708, 60.0391, 0.34 ) }
    dend_39 { pt3dadd( -82.8558, -94.4326, 62.7996, 0.34 ) }
    dend_39 { pt3dadd( -81.7261, -94.1187, 63.561, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.6172, -181.789, 55.4805, 0.57 ) }
    dend_37 { pt3dadd( -23.8083, -182.424, 56.2471, 0.57 ) }
    dend_37 { pt3dadd( -25.8356, -183.653, 57.0499, 0.57 ) }
    dend_37 { pt3dadd( -26.9559, -184.43, 57.3678, 0.57 ) }
    dend_37 { pt3dadd( -28.4979, -185.604, 57.4851, 0.57 ) }
    dend_37 { pt3dadd( -29.9565, -186.812, 57.4997, 0.57 ) }
    dend_37 { pt3dadd( -32.5733, -189.039, 57.4626, 0.57 ) }
    dend_37 { pt3dadd( -34.0234, -190.337, 57.344, 0.57 ) }
    dend_37 { pt3dadd( -35.6719, -191.853, 57.1288, 0.57 ) }
    dend_37 { pt3dadd( -38.6443, -194.602, 56.7602, 0.57 ) }
    dend_37 { pt3dadd( -41.9748, -197.614, 56.3663, 0.57 ) }
    dend_37 { pt3dadd( -44.2017, -199.61, 56.2197, 0.57 ) }
    dend_37 { pt3dadd( -44.9719, -200.288, 56.2262, 2.15 ) }
    dend_37 { pt3dadd( -45.6631, -200.872, 56.2742, 1.36 ) }
    dend_37 { pt3dadd( -47.1007, -202.028, 56.5728, 0.68 ) }
    dend_37 { pt3dadd( -47.8666, -202.617, 56.9001, 0.68 ) }
    dend_37 { pt3dadd( -48.7388, -203.249, 57.42, 0.57 ) }
    dend_37 { pt3dadd( -49.218, -203.593, 57.7877, 0.57 ) }
    dend_37 { pt3dadd( -50.4624, -204.498, 58.8323, 0.57 ) }
    dend_37 { pt3dadd( -51.8379, -205.477, 60.0281, 0.57 ) }
    dend_37 { pt3dadd( -52.7484, -206.134, 60.8149, 0.57 ) }
    dend_37 { pt3dadd( -53.8915, -207.012, 61.6785, 0.57 ) }
    dend_37 { pt3dadd( -55.0302, -207.892, 62.3098, 0.57 ) }
    dend_37 { pt3dadd( -55.4871, -208.257, 62.5002, 0.57 ) }
    dend_37 { pt3dadd( -56.182, -208.838, 62.6902, 0.57 ) }
    dend_37 { pt3dadd( -57.1359, -209.648, 62.8675, 0.57 ) }
    dend_37 { pt3dadd( -59.9698, -212.028, 63.2973, 0.57 ) }
    dend_37 { pt3dadd( -61.7734, -213.537, 63.4488, 0.57 ) }
    dend_37 { pt3dadd( -63.3022, -214.818, 63.5335, 0.57 ) }
    dend_37 { pt3dadd( -65.2226, -216.361, 63.6269, 0.57 ) }
    dend_37 { pt3dadd( -67.7002, -218.294, 63.821, 0.57 ) }
    dend_37 { pt3dadd( -70.9106, -220.612, 64.1694, 0.57 ) }
    dend_37 { pt3dadd( -72.2358, -221.495, 64.2988, 1.7 ) }
    dend_37 { pt3dadd( -73.4326, -222.258, 64.4147, 1.7 ) }
    dend_37 { pt3dadd( -74.6158, -222.965, 64.4548, 0.68 ) }
    dend_37 { pt3dadd( -76.7908, -224.169, 64.4502, 0.68 ) }
    dend_37 { pt3dadd( -78.1502, -224.929, 64.4024, 0.68 ) }
    dend_37 { pt3dadd( -80.2875, -226.183, 64.3237, 0.68 ) }
    dend_37 { pt3dadd( -80.8753, -226.556, 64.2904, 1.7 ) }
    dend_37 { pt3dadd( -81.8139, -227.244, 64.1888, 1.7 ) }
    dend_37 { pt3dadd( -82.4408, -227.768, 64.0975, 1.7 ) }
    dend_37 { pt3dadd( -83.1722, -228.47, 63.972, 0.68 ) }
    dend_37 { pt3dadd( -84.8797, -230.322, 63.7172, 0.68 ) }
    dend_37 { pt3dadd( -86.5156, -232.232, 63.5502, 0.68 ) }
    dend_37 { pt3dadd( -87.8053, -233.849, 63.5023, 0.68 ) }
    dend_37 { pt3dadd( -88.3992, -234.652, 63.5136, 0.68 ) }
    dend_37 { pt3dadd( -89.7385, -236.594, 63.6213, 0.68 ) }
    dend_37 { pt3dadd( -90.9471, -238.444, 63.813, 0.68 ) }
    dend_37 { pt3dadd( -91.5165, -239.39, 63.9779, 0.68 ) }
    dend_37 { pt3dadd( -92.827, -241.687, 64.5595, 0.68 ) }
    dend_37 { pt3dadd( -93.1963, -242.363, 64.7508, 0.68 ) }
    dend_37 { pt3dadd( -93.6334, -243.188, 64.997, 1.02 ) }
    dend_37 { pt3dadd( -94.0742, -244.044, 65.2444, 0.45 ) }
    dend_37 { pt3dadd( -94.6981, -245.398, 65.5667, 0.45 ) }
    dend_37 { pt3dadd( -94.8778, -245.815, 65.6285, 0.45 ) }
    dend_37 { pt3dadd( -95.4162, -247.071, 65.7521, 0.45 ) }
    dend_37 { pt3dadd( -96.0532, -248.552, 65.9077, 0.45 ) }
    dend_37 { pt3dadd( -96.7635, -250.246, 66.085, 0.45 ) }
    dend_37 { pt3dadd( -97.5654, -252.204, 66.2828, 0.45 ) }
    dend_37 { pt3dadd( -98.2674, -253.968, 66.4805, 0.45 ) }
    dend_37 { pt3dadd( -99.3707, -256.715, 66.7916, 0.45 ) }
    dend_37 { pt3dadd( -99.6902, -257.555, 66.886, 0.45 ) }
    dend_37 { pt3dadd( -100.059, -258.601, 67.0005, 1.47 ) }
    dend_37 { pt3dadd( -100.184, -258.961, 67.0404, 1.47 ) }
    dend_37 { pt3dadd( -100.806, -260.705, 67.1647, 0.68 ) }
    dend_37 { pt3dadd( -101.551, -262.795, 67.2665, 0.57 ) }
    dend_37 { pt3dadd( -102.198, -264.681, 67.3835, 0.57 ) }
    dend_37 { pt3dadd( -102.809, -266.45, 67.5885, 0.57 ) }
    dend_37 { pt3dadd( -102.985, -266.952, 67.6662, 0.57 ) }
    dend_37 { pt3dadd( -103.524, -268.501, 68.0301, 0.57 ) }
    dend_37 { pt3dadd( -104.094, -270.215, 68.6924, 0.57 ) }
    dend_37 { pt3dadd( -104.512, -271.709, 69.4299, 1.7 ) }
    dend_37 { pt3dadd( -105.1, -274.099, 70.6974, 0.68 ) }
    dend_37 { pt3dadd( -105.346, -275.3, 71.3502, 0.68 ) }
    dend_37 { pt3dadd( -105.747, -277.537, 72.5355, 0.68 ) }
    dend_37 { pt3dadd( -106.334, -280.821, 74.1608, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -106.802, -283.097, 75.1273, 0.68 ) }
    dend_37 { pt3dadd( -107.015, -283.956, 75.4258, 2.15 ) }
    dend_37 { pt3dadd( -107.165, -284.482, 75.5728, 2.15 ) }
    dend_37 { pt3dadd( -107.741, -286.236, 75.8943, 0.68 ) }
    dend_37 { pt3dadd( -108.522, -288.24, 76.1448, 0.68 ) }
    dend_37 { pt3dadd( -109.063, -289.517, 76.31, 0.68 ) }
    dend_37 { pt3dadd( -109.847, -291.247, 76.6394, 0.68 ) }
    dend_37 { pt3dadd( -110.679, -293.095, 76.9836, 0.68 ) }
    dend_37 { pt3dadd( -111.455, -294.915, 77.3056, 0.68 ) }
    dend_37 { pt3dadd( -112.548, -297.772, 77.7762, 0.68 ) }
    dend_37 { pt3dadd( -113.17, -299.661, 78.0573, 0.68 ) }
    dend_37 { pt3dadd( -113.614, -301.11, 78.2163, 0.68 ) }
    dend_37 { pt3dadd( -114.247, -303.307, 78.3512, 0.68 ) }
    dend_37 { pt3dadd( -114.484, -304.187, 78.3635, 0.68 ) }
    dend_37 { pt3dadd( -115.046, -306.435, 78.284, 0.68 ) }
    dend_37 { pt3dadd( -115.386, -307.882, 78.1404, 0.68 ) }
    dend_37 { pt3dadd( -115.818, -309.696, 77.9486, 0.68 ) }
    dend_37 { pt3dadd( -116.265, -311.431, 77.8354, 0.68 ) }
    dend_37 { pt3dadd( -116.671, -312.823, 77.831, 0.68 ) }
    dend_37 { pt3dadd( -116.963, -313.709, 77.834, 0.68 ) }
    dend_37 { pt3dadd( -117.313, -314.676, 77.8998, 0.68 ) }
    dend_37 { pt3dadd( -117.444, -315.027, 77.9467, 0.68 ) }
    dend_37 { pt3dadd( -118.062, -316.657, 78.2467, 0.68 ) }
    dend_37 { pt3dadd( -118.748, -318.538, 78.6669, 0.68 ) }
    dend_37 { pt3dadd( -119.203, -319.907, 78.9923, 0.68 ) }
    dend_37 { pt3dadd( -119.796, -321.828, 79.4415, 0.68 ) }
    dend_37 { pt3dadd( -120.308, -323.671, 79.9084, 0.68 ) }
    dend_37 { pt3dadd( -120.427, -324.166, 80.064, 0.68 ) }
    dend_37 { pt3dadd( -120.69, -325.405, 80.4913, 0.57 ) }
    dend_37 { pt3dadd( -120.918, -326.52, 80.877, 0.57 ) }
    dend_37 { pt3dadd( -121.334, -328.598, 81.5954, 0.57 ) }
    dend_37 { pt3dadd( -121.678, -330.551, 82.3317, 0.57 ) }
    dend_37 { pt3dadd( -122.059, -332.686, 83.2485, 0.57 ) }
    dend_37 { pt3dadd( -122.452, -334.823, 84.1791, 0.57 ) }
    dend_37 { pt3dadd( -122.859, -336.78, 84.9485, 0.57 ) }
    dend_37 { pt3dadd( -123.164, -338.152, 85.3837, 1.47 ) }
    dend_37 { pt3dadd( -123.817, -340.938, 86.0941, 0.45 ) }
    dend_37 { pt3dadd( -124.169, -342.29, 86.3278, 0.45 ) }
    dend_37 { pt3dadd( -124.904, -345.151, 86.6165, 0.45 ) }
    dend_37 { pt3dadd( -125.429, -347.509, 86.8477, 0.45 ) }
    dend_37 { pt3dadd( -125.955, -350.251, 87.0628, 0.45 ) }
    dend_37 { pt3dadd( -126.126, -352.501, 87.2161, 0.45 ) }
    dend_37 { pt3dadd( -126.806, -351.781, 86.2124, 0.45 ) }
    dend_37 { pt3dadd( -127.86, -349.631, 84.6161, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -22.6172, -181.789, 55.4805, 0.57 ) }
    dend_34 { pt3dadd( -23.6203, -183.448, 55.8502, 0.57 ) }
    dend_34 { pt3dadd( -24.2891, -184.552, 56.0944, 0.57 ) }
    dend_34 { pt3dadd( -25.2057, -186.108, 56.4241, 0.57 ) }
    dend_34 { pt3dadd( -26.5906, -188.46, 56.9221, 0.57 ) }
    dend_34 { pt3dadd( -28.2455, -191.27, 57.5172, 0.57 ) }
    dend_34 { pt3dadd( -29.2713, -193.012, 57.8861, 2.15 ) }
    dend_34 { pt3dadd( -30.1993, -194.538, 58.2038, 2.72 ) }
    dend_34 { pt3dadd( -30.8934, -195.738, 58.463, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 58.2898, -109.899, 45.6283, 0.45 ) }
    dend_54 { pt3dadd( 62.4711, -111.271, 45.7827, 0.45 ) }
    dend_54 { pt3dadd( 63.4667, -111.573, 45.8991, 0.45 ) }
    dend_54 { pt3dadd( 65.3249, -111.999, 46.1732, 0.45 ) }
    dend_54 { pt3dadd( 67.7883, -112.508, 46.5687, 0.45 ) }
    dend_54 { pt3dadd( 70.0374, -112.978, 46.9442, 0.45 ) }
    dend_54 { pt3dadd( 72.9928, -113.536, 47.4188, 0.45 ) }
    dend_54 { pt3dadd( 74.0298, -113.68, 47.6358, 0.45 ) }
    dend_54 { pt3dadd( 77.0045, -113.958, 48.1285, 0.45 ) }
    dend_54 { pt3dadd( 79.3543, -114.05, 48.408, 0.45 ) }
    dend_54 { pt3dadd( 81.2385, -114.003, 48.5177, 0.45 ) }
    dend_54 { pt3dadd( 83.9357, -113.738, 48.3647, 0.45 ) }
    dend_54 { pt3dadd( 85.741, -113.445, 48.0784, 0.45 ) }
    dend_54 { pt3dadd( 87.7273, -113.043, 47.6632, 0.45 ) }
    dend_54 { pt3dadd( 89.7749, -112.611, 47.0501, 0.45 ) }
    dend_54 { pt3dadd( 92.0726, -112.087, 46.142, 0.45 ) }
    dend_54 { pt3dadd( 95.3259, -111.273, 44.7054, 0.45 ) }
    dend_54 { pt3dadd( 96.6506, -110.951, 44.0514, 0.45 ) }
    dend_54 { pt3dadd( 98.054, -110.633, 43.3036, 0.45 ) }
    dend_54 { pt3dadd( 101.455, -109.996, 41.4048, 0.45 ) }
    dend_54 { pt3dadd( 102.891, -109.835, 40.4916, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 58.2898, -109.899, 45.6283, 0.34 ) }
    dend_53 { pt3dadd( 57.4222, -113.417, 45.4419, 0.34 ) }
    dend_53 { pt3dadd( 57.0022, -114.765, 45.3165, 0.34 ) }
    dend_53 { pt3dadd( 56.2179, -117.009, 45.0743, 0.34 ) }
    dend_53 { pt3dadd( 54.7311, -121.098, 44.6056, 0.34 ) }
    dend_53 { pt3dadd( 53.2416, -124.806, 44.0002, 0.34 ) }
    dend_53 { pt3dadd( 51.5537, -128.612, 43.3238, 0.34 ) }
    dend_53 { pt3dadd( 49.389, -132.359, 42.5725, 0.34 ) }
    dend_53 { pt3dadd( 49.0583, -132.825, 42.4688, 0.34 ) }
    dend_53 { pt3dadd( 48.8381, -133.073, 42.3968, 1.58 ) }
    dend_53 { pt3dadd( 45.9942, -135.702, 41.6379, 0.45 ) }
    dend_53 { pt3dadd( 44.6747, -136.87, 41.227, 0.45 ) }
    dend_53 { pt3dadd( 41.3538, -139.86, 40.0182, 0.45 ) }
    dend_53 { pt3dadd( 40.2495, -140.927, 39.5907, 0.45 ) }
    dend_53 { pt3dadd( 37.4882, -143.876, 38.4574, 0.45 ) }
    dend_53 { pt3dadd( 36.5562, -144.959, 38.0922, 0.45 ) }
    dend_53 { pt3dadd( 34.1558, -148.118, 37.2205, 0.45 ) }
    dend_53 { pt3dadd( 33.1073, -149.694, 36.7613, 0.45 ) }
    dend_53 { pt3dadd( 31.2838, -152.862, 35.9809, 0.45 ) }
    dend_53 { pt3dadd( 30.1738, -154.885, 35.5517, 0.45 ) }
    dend_53 { pt3dadd( 28.7482, -157.589, 35.1357, 0.45 ) }
    dend_53 { pt3dadd( 26.6421, -161.728, 34.4653, 0.45 ) }
    dend_53 { pt3dadd( 25.149, -164.666, 34.0668, 0.45 ) }
    dend_53 { pt3dadd( 23.2661, -168.464, 33.5732, 0.45 ) }
    dend_53 { pt3dadd( 21.6959, -171.529, 33.2538, 0.45 ) }
    dend_53 { pt3dadd( 20.3354, -174.192, 32.955, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 18.7456, -177.246, 32.5895, 0.45 ) }
    dend_53 { pt3dadd( 17.2335, -179.992, 32.3186, 0.45 ) }
    dend_53 { pt3dadd( 16.2191, -181.624, 32.2065, 0.45 ) }
    dend_53 { pt3dadd( 14.486, -184.218, 31.8196, 0.45 ) }
    dend_53 { pt3dadd( 13.8469, -185.152, 31.6675, 0.45 ) }
    dend_53 { pt3dadd( 11.9941, -187.756, 31.2008, 0.45 ) }
    dend_53 { pt3dadd( 10.8794, -189.281, 30.9555, 0.45 ) }
    dend_53 { pt3dadd( 9.29421, -191.457, 30.5577, 0.45 ) }
    dend_53 { pt3dadd( 6.38733, -195.619, 29.432, 0.45 ) }
    dend_53 { pt3dadd( 4.73941, -198.147, 28.6303, 0.45 ) }
    dend_53 { pt3dadd( 3.83222, -199.626, 28.154, 0.45 ) }
    dend_53 { pt3dadd( 3.13434, -200.918, 27.78, 0.45 ) }
    dend_53 { pt3dadd( 2.60376, -202.001, 27.448, 0.45 ) }
    dend_53 { pt3dadd( 0.443318, -206.617, 26.1305, 0.45 ) }
    dend_53 { pt3dadd( -0.56518, -208.753, 25.6031, 0.45 ) }
    dend_53 { pt3dadd( -1.14912, -210.034, 25.254, 0.45 ) }
    dend_53 { pt3dadd( -2.16208, -212.297, 24.6754, 0.45 ) }
    dend_53 { pt3dadd( -3.75807, -216.004, 23.3424, 0.45 ) }
    dend_53 { pt3dadd( -4.49874, -217.756, 22.6725, 0.45 ) }
    dend_53 { pt3dadd( -5.03191, -219.029, 22.2372, 0.45 ) }
    dend_53 { pt3dadd( -5.64362, -220.473, 21.7516, 0.45 ) }
    dend_53 { pt3dadd( -6.88553, -223.395, 20.7455, 0.45 ) }
    dend_53 { pt3dadd( -9.74735, -230.234, 19.1972, 0.45 ) }
    dend_53 { pt3dadd( -10.882, -232.965, 19.1592, 0.45 ) }
    dend_53 { pt3dadd( -12.1023, -235.857, 19.6306, 0.45 ) }
    dend_53 { pt3dadd( -13.5645, -238.892, 20.894, 0.45 ) }
    dend_53 { pt3dadd( -14.2637, -240.116, 21.7221, 0.45 ) }
    dend_53 { pt3dadd( -18.8737, -246.828, 28.2053, 0.45 ) }
    dend_53 { pt3dadd( -20.3278, -248.64, 30.409, 0.45 ) }
    dend_53 { pt3dadd( -20.6069, -248.944, 30.81, 0.45 ) }
    dend_53 { pt3dadd( -22.3934, -250.691, 33.0836, 0.45 ) }
    dend_53 { pt3dadd( -23.8383, -252.087, 34.6615, 0.45 ) }
    dend_53 { pt3dadd( -25.5159, -253.781, 35.9683, 0.45 ) }
    dend_53 { pt3dadd( -25.8666, -254.165, 36.0908, 0.45 ) }
    dend_53 { pt3dadd( -26.9788, -255.502, 36.2739, 0.45 ) }
    dend_53 { pt3dadd( -28.6757, -257.753, 36.354, 0.45 ) }
    dend_53 { pt3dadd( -29.9084, -259.558, 36.2837, 0.45 ) }
    dend_53 { pt3dadd( -31.6913, -262.339, 36.0975, 0.45 ) }
    dend_53 { pt3dadd( -33.5096, -265.345, 35.8669, 0.45 ) }
    dend_53 { pt3dadd( -36.4225, -270.616, 35.6375, 0.45 ) }
    dend_53 { pt3dadd( -37.2483, -272.211, 35.6062, 0.45 ) }
    dend_53 { pt3dadd( -38.0538, -273.817, 35.5926, 0.45 ) }
    dend_53 { pt3dadd( -38.9732, -275.683, 35.6223, 0.45 ) }
    dend_53 { pt3dadd( -39.9364, -277.752, 35.8013, 0.45 ) }
    dend_53 { pt3dadd( -41.7007, -282.055, 36.4035, 0.45 ) }
    dend_53 { pt3dadd( -42.0696, -283.122, 36.7282, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -30.8934, -195.738, 58.463, 0.45 ) }
    dend_36 { pt3dadd( -32.0199, -197.028, 58.5784, 0.45 ) }
    dend_36 { pt3dadd( -32.9007, -198.065, 58.68, 0.45 ) }
    dend_36 { pt3dadd( -33.7075, -199.026, 58.7786, 0.45 ) }
    dend_36 { pt3dadd( -34.9061, -200.532, 58.9413, 0.45 ) }
    dend_36 { pt3dadd( -35.6141, -201.407, 59.0495, 0.45 ) }
    dend_36 { pt3dadd( -36.6862, -202.733, 59.2664, 0.45 ) }
    dend_36 { pt3dadd( -37.7684, -204.163, 59.5537, 0.45 ) }
    dend_36 { pt3dadd( -38.0526, -204.537, 59.6371, 1.47 ) }
    dend_36 { pt3dadd( -39.0999, -205.867, 59.9963, 0.45 ) }
    dend_36 { pt3dadd( -39.7605, -206.715, 60.2573, 0.45 ) }
    dend_36 { pt3dadd( -40.4019, -207.582, 60.5939, 0.45 ) }
    dend_36 { pt3dadd( -40.8396, -208.236, 60.8773, 0.45 ) }
    dend_36 { pt3dadd( -41.7076, -209.686, 61.5566, 0.45 ) }
    dend_36 { pt3dadd( -42.2977, -210.731, 62.0534, 0.79 ) }
    dend_36 { pt3dadd( -42.8272, -211.735, 62.5248, 0.79 ) }
    dend_36 { pt3dadd( -43.7496, -213.667, 63.4358, 0.45 ) }
    dend_36 { pt3dadd( -44.4355, -215.138, 64.1192, 0.45 ) }
    dend_36 { pt3dadd( -45.2373, -217.005, 64.9925, 0.45 ) }
    dend_36 { pt3dadd( -45.4763, -217.637, 65.3221, 0.45 ) }
    dend_36 { pt3dadd( -45.6918, -218.248, 65.6497, 1.92 ) }
    dend_36 { pt3dadd( -46.0396, -219.381, 66.3662, 1.47 ) }
    dend_36 { pt3dadd( -46.2973, -220.359, 67.0186, 0.57 ) }
    dend_36 { pt3dadd( -46.505, -221.297, 67.6768, 0.57 ) }
    dend_36 { pt3dadd( -46.7863, -222.893, 68.9129, 0.57 ) }
    dend_36 { pt3dadd( -46.972, -224.144, 69.8671, 0.57 ) }
    dend_36 { pt3dadd( -47.3949, -226.889, 71.879, 0.57 ) }
    dend_36 { pt3dadd( -47.4905, -227.49, 72.2739, 0.57 ) }
    dend_36 { pt3dadd( -47.7233, -228.728, 72.9802, 0.57 ) }
    dend_36 { pt3dadd( -48.252, -230.917, 73.9407, 0.57 ) }
    dend_36 { pt3dadd( -48.606, -232.158, 74.2992, 0.57 ) }
    dend_36 { pt3dadd( -48.9962, -233.361, 74.4293, 0.57 ) }
    dend_36 { pt3dadd( -49.5381, -234.903, 74.4786, 0.57 ) }
    dend_36 { pt3dadd( -50.3094, -237.061, 74.6452, 0.57 ) }
    dend_36 { pt3dadd( -51.1333, -239.292, 74.89, 0.57 ) }
    dend_36 { pt3dadd( -51.8784, -241.298, 75.1074, 0.57 ) }
    dend_36 { pt3dadd( -53.1229, -244.625, 75.5431, 0.57 ) }
    dend_36 { pt3dadd( -54.1462, -247.087, 75.8114, 0.57 ) }
    dend_36 { pt3dadd( -55.2081, -249.326, 76.0209, 0.23 ) }
    dend_36 { pt3dadd( -55.8598, -250.603, 76.1614, 0.23 ) }
    dend_36 { pt3dadd( -56.6095, -251.956, 76.3355, 0.23 ) }
    dend_36 { pt3dadd( -57.5848, -253.639, 76.5529, 0.23 ) }
    dend_36 { pt3dadd( -58.9231, -255.844, 76.851, 0.23 ) }
    dend_36 { pt3dadd( -59.5117, -256.683, 76.7915, 0.23 ) }
    dend_36 { pt3dadd( -60.3539, -257.742, 76.6417, 1.7 ) }
    dend_36 { pt3dadd( -61.3666, -258.869, 76.566, 0.68 ) }
    dend_36 { pt3dadd( -62.3484, -259.807, 76.5947, 0.45 ) }
    dend_36 { pt3dadd( -62.9117, -260.284, 76.7151, 0.45 ) }
    dend_36 { pt3dadd( -65.2571, -261.859, 77.7064, 0.45 ) }
    dend_36 { pt3dadd( -67.1107, -262.74, 78.5987, 0.45 ) }
    dend_36 { pt3dadd( -68.4006, -263.187, 79.2381, 0.45 ) }
    dend_36 { pt3dadd( -69.2395, -263.432, 79.7253, 0.45 ) }
    dend_36 { pt3dadd( -70.0714, -263.706, 80.1789, 0.45 ) }
    dend_36 { pt3dadd( -71.4789, -264.432, 80.8836, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -71.6748, -264.572, 80.9737, 0.45 ) }
    dend_36 { pt3dadd( -72.1434, -264.962, 81.0885, 1.92 ) }
    dend_36 { pt3dadd( -73.2948, -266.089, 81.2692, 0.57 ) }
    dend_36 { pt3dadd( -74.5965, -267.548, 81.4391, 0.57 ) }
    dend_36 { pt3dadd( -75.7466, -268.967, 81.4703, 0.45 ) }
    dend_36 { pt3dadd( -76.3512, -269.776, 81.4562, 0.45 ) }
    dend_36 { pt3dadd( -77.5485, -271.399, 81.4389, 0.45 ) }
    dend_36 { pt3dadd( -78.4071, -272.609, 81.4449, 0.57 ) }
    dend_36 { pt3dadd( -78.9106, -273.343, 81.4489, 0.57 ) }
    dend_36 { pt3dadd( -80.1272, -275.17, 81.4776, 0.57 ) }
    dend_36 { pt3dadd( -81.785, -277.597, 81.4773, 0.57 ) }
    dend_36 { pt3dadd( -82.5316, -278.7, 81.4697, 0.57 ) }
    dend_36 { pt3dadd( -84.1769, -281.148, 81.4442, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -30.8934, -195.738, 58.463, 0.45 ) }
    dend_35 { pt3dadd( -30.6993, -197.841, 58.5517, 0.45 ) }
    dend_35 { pt3dadd( -30.6043, -198.76, 58.5763, 0.45 ) }
    dend_35 { pt3dadd( -30.182, -201.955, 58.8747, 0.45 ) }
    dend_35 { pt3dadd( -29.7879, -204.954, 59.2678, 0.45 ) }
    dend_35 { pt3dadd( -29.5144, -207.401, 59.565, 0.45 ) }
    dend_35 { pt3dadd( -29.5046, -207.491, 59.5727, 1.81 ) }
    dend_35 { pt3dadd( -29.3785, -208.654, 59.6482, 1.7 ) }
    dend_35 { pt3dadd( -29.0857, -211.622, 59.8359, 0.68 ) }
    dend_35 { pt3dadd( -28.9039, -213.322, 59.9023, 0.68 ) }
    dend_35 { pt3dadd( -28.6054, -215.493, 60.0301, 0.68 ) }
    dend_35 { pt3dadd( -28.204, -218.089, 60.1794, 0.68 ) }
    dend_35 { pt3dadd( -27.9339, -219.639, 60.2151, 0.68 ) }
    dend_35 { pt3dadd( -27.5118, -221.731, 60.1824, 0.68 ) }
    dend_35 { pt3dadd( -27.0226, -223.81, 60.0544, 0.68 ) }
    dend_35 { pt3dadd( -26.3586, -226.238, 59.9028, 0.68 ) }
    dend_35 { pt3dadd( -25.5687, -228.834, 59.7462, 0.68 ) }
    dend_35 { pt3dadd( -24.5855, -231.946, 59.4988, 0.68 ) }
    dend_35 { pt3dadd( -24.0086, -233.953, 59.1807, 0.68 ) }
    dend_35 { pt3dadd( -23.4692, -236.025, 58.7138, 0.68 ) }
    dend_35 { pt3dadd( -23.14, -237.48, 58.306, 0.68 ) }
    dend_35 { pt3dadd( -22.8237, -239.294, 57.7295, 0.68 ) }
    dend_35 { pt3dadd( -22.3137, -242.887, 56.5552, 0.68 ) }
    dend_35 { pt3dadd( -21.852, -246.564, 55.3802, 0.57 ) }
    dend_35 { pt3dadd( -21.6727, -248.101, 54.9065, 0.57 ) }
    dend_35 { pt3dadd( -21.4379, -250.162, 54.3028, 0.57 ) }
    dend_35 { pt3dadd( -21.1508, -252.598, 53.5458, 0.57 ) }
    dend_35 { pt3dadd( -20.8044, -255.329, 52.6844, 0.57 ) }
    dend_35 { pt3dadd( -20.3449, -258.503, 51.7199, 0.57 ) }
    dend_35 { pt3dadd( -19.9979, -260.25, 51.2532, 0.57 ) }
    dend_35 { pt3dadd( -19.7212, -261.562, 50.8955, 0.57 ) }
    dend_35 { pt3dadd( -19.0007, -264.471, 50.2246, 0.57 ) }
    dend_35 { pt3dadd( -18.7932, -265.163, 50.0791, 0.57 ) }
    dend_35 { pt3dadd( -18.3263, -266.578, 49.8438, 0.57 ) }
    dend_35 { pt3dadd( -17.5371, -268.72, 49.7374, 0.57 ) }
    dend_35 { pt3dadd( -17.2866, -269.35, 49.7381, 2.6 ) }
    dend_35 { pt3dadd( -16.3894, -271.558, 49.8198, 2.04 ) }
    dend_35 { pt3dadd( -15.2888, -274.477, 49.7814, 0.57 ) }
    dend_35 { pt3dadd( -14.8721, -275.693, 49.6385, 0.57 ) }
    dend_35 { pt3dadd( -13.8973, -278.343, 49.6476, 0.57 ) }
    dend_35 { pt3dadd( -13.1964, -280.259, 49.7804, 0.57 ) }
    dend_35 { pt3dadd( -12.3301, -282.539, 50.0949, 0.57 ) }
    dend_35 { pt3dadd( -10.9757, -286.155, 50.7188, 0.57 ) }
    dend_35 { pt3dadd( -9.93486, -289.039, 51.3836, 0.57 ) }
    dend_35 { pt3dadd( -7.30196, -297.088, 52.8536, 0.57 ) }
    dend_35 { pt3dadd( -5.98202, -301.748, 53.4781, 0.57 ) }
    dend_35 { pt3dadd( -5.30999, -304.406, 53.8114, 0.57 ) }
    dend_35 { pt3dadd( -4.81047, -306.687, 54.0062, 0.57 ) }
    dend_35 { pt3dadd( -4.56999, -308.057, 54.0664, 0.57 ) }
    dend_35 { pt3dadd( -4.05203, -313.916, 53.3493, 0.57 ) }
    dend_35 { pt3dadd( -3.99615, -316.441, 52.5183, 0.57 ) }
    dend_35 { pt3dadd( -4.00354, -317.539, 52.1024, 0.57 ) }
    dend_35 { pt3dadd( -4.0251, -319.487, 51.3221, 0.45 ) }
    dend_35 { pt3dadd( -4.0043, -320.405, 50.9894, 0.45 ) }
    dend_35 { pt3dadd( -3.80901, -322.263, 50.5253, 0.45 ) }
    dend_35 { pt3dadd( -3.44778, -324.228, 50.3952, 0.45 ) }
    dend_35 { pt3dadd( -3.2538, -325.148, 50.3563, 0.45 ) }
    dend_35 { pt3dadd( -3.03064, -326.19, 50.3363, 0.45 ) }
    dend_35 { pt3dadd( -2.83367, -327.152, 50.3215, 0.45 ) }
    dend_35 { pt3dadd( -2.36826, -329.462, 50.2582, 0.45 ) }
    dend_35 { pt3dadd( -2.05571, -331.074, 50.24, 0.45 ) }
    dend_35 { pt3dadd( -1.7076, -333.026, 50.2245, 0.45 ) }
    dend_35 { pt3dadd( -1.25815, -335.453, 50.1797, 0.45 ) }
    dend_35 { pt3dadd( -0.899983, -337.529, 50.1161, 0.45 ) }
    dend_35 { pt3dadd( -0.781427, -338.322, 50.0936, 0.45 ) }
    dend_35 { pt3dadd( -0.505169, -340.379, 50.0038, 0.45 ) }
    dend_35 { pt3dadd( -0.0404796, -343.896, 49.8701, 0.45 ) }
    dend_35 { pt3dadd( 0.327655, -346.726, 49.78, 0.45 ) }
    dend_35 { pt3dadd( 0.69744, -349.675, 49.7226, 0.45 ) }
    dend_35 { pt3dadd( 1.02925, -352.333, 49.7168, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 102.891, -109.835, 40.4916, 0.45 ) }
    dend_62 { pt3dadd( 103.433, -111.283, 38.5819, 0.45 ) }
    dend_62 { pt3dadd( 103.901, -112.587, 37.1624, 0.45 ) }
    dend_62 { pt3dadd( 104.491, -114.133, 35.6966, 0.45 ) }
    dend_62 { pt3dadd( 104.971, -115.541, 34.3721, 0.45 ) }
    dend_62 { pt3dadd( 106.792, -122.077, 28.1406, 0.45 ) }
    dend_62 { pt3dadd( 107.779, -126.133, 24.2939, 0.45 ) }
    dend_62 { pt3dadd( 108.242, -128.606, 21.7178, 0.45 ) }
    dend_62 { pt3dadd( 108.371, -129.649, 20.6169, 0.45 ) }
    dend_62 { pt3dadd( 108.652, -133.214, 17.0753, 0.45 ) }
    dend_62 { pt3dadd( 108.817, -135.692, 14.8381, 0.45 ) }
    dend_62 { pt3dadd( 108.836, -136.079, 14.5744, 0.45 ) }
    dend_62 { pt3dadd( 109.043, -139.328, 12.5997, 0.45 ) }
    dend_62 { pt3dadd( 109.241, -141.628, 11.1957, 0.45 ) }
    dend_62 { pt3dadd( 109.498, -143.834, 10.1799, 0.45 ) }
    dend_62 { pt3dadd( 109.933, -145.98, 9.47839, 0.34 ) }
    dend_62 { pt3dadd( 110.514, -148.211, 8.90337, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 110.91, -149.59, 8.60869, 0.34 ) }
    dend_62 { pt3dadd( 111.242, -150.63, 8.45403, 0.34 ) }
    dend_62 { pt3dadd( 112.437, -153.961, 8.00434, 0.34 ) }
    dend_62 { pt3dadd( 113.869, -158.227, 7.39558, 0.34 ) }
    dend_62 { pt3dadd( 114.26, -159.502, 7.29546, 0.34 ) }
    dend_62 { pt3dadd( 114.533, -160.473, 7.1138, 0.34 ) }
    dend_62 { pt3dadd( 115.043, -162.419, 6.62339, 0.34 ) }
    dend_62 { pt3dadd( 115.314, -163.502, 6.30759, 0.34 ) }
    dend_62 { pt3dadd( 115.844, -165.687, 5.56999, 0.34 ) }
    dend_62 { pt3dadd( 116.27, -167.641, 5.03439, 0.34 ) }
    dend_62 { pt3dadd( 117.415, -172.87, 3.27496, 0.34 ) }
    dend_62 { pt3dadd( 117.931, -175.131, 2.38058, 0.34 ) }
    dend_62 { pt3dadd( 118.063, -175.708, 2.11632, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 102.891, -109.835, 40.4916, 0.45 ) }
    dend_55 { pt3dadd( 104.999, -110.973, 40.8442, 0.45 ) }
    dend_55 { pt3dadd( 106.648, -112.135, 40.9673, 0.45 ) }
    dend_55 { pt3dadd( 108.593, -113.69, 41.0767, 0.45 ) }
    dend_55 { pt3dadd( 111.11, -116.152, 40.7907, 0.45 ) }
    dend_55 { pt3dadd( 112.781, -118.094, 40.4714, 0.45 ) }
    dend_55 { pt3dadd( 115.143, -121.126, 39.9669, 0.45 ) }
    dend_55 { pt3dadd( 117.359, -124.58, 39.3722, 0.34 ) }
    dend_55 { pt3dadd( 118.244, -126.169, 39.1284, 0.34 ) }
    dend_55 { pt3dadd( 121.252, -132.093, 38.0974, 0.34 ) }
    dend_55 { pt3dadd( 123.046, -135.727, 37.4065, 0.34 ) }
    dend_55 { pt3dadd( 124.322, -138.309, 36.9825, 0.34 ) }
    dend_55 { pt3dadd( 125.496, -140.737, 36.6905, 0.34 ) }
    dend_55 { pt3dadd( 127.078, -143.92, 36.5595, 0.34 ) }
    dend_55 { pt3dadd( 128.794, -147.417, 36.6111, 0.34 ) }
    dend_55 { pt3dadd( 130.11, -150.063, 36.9265, 0.34 ) }
    dend_55 { pt3dadd( 131.364, -152.576, 37.2613, 0.34 ) }
    dend_55 { pt3dadd( 132.451, -154.897, 37.6881, 0.34 ) }
    dend_55 { pt3dadd( 133.271, -156.703, 38.2042, 0.34 ) }
    dend_55 { pt3dadd( 134.041, -158.534, 38.9861, 0.34 ) }
    dend_55 { pt3dadd( 134.848, -160.499, 39.8973, 0.34 ) }
    dend_55 { pt3dadd( 135.884, -162.91, 40.9809, 0.34 ) }
    dend_55 { pt3dadd( 137.899, -167.282, 42.8325, 0.45 ) }
    dend_55 { pt3dadd( 139.668, -170.748, 44.307, 0.45 ) }
    dend_55 { pt3dadd( 141.386, -173.845, 45.7424, 0.45 ) }
    dend_55 { pt3dadd( 143.507, -177.486, 47.4737, 0.45 ) }
    dend_55 { pt3dadd( 144.599, -179.189, 48.2276, 0.45 ) }
    dend_55 { pt3dadd( 145.917, -181.132, 48.9969, 0.45 ) }
    dend_55 { pt3dadd( 146.679, -182.218, 49.3233, 0.45 ) }
    dend_55 { pt3dadd( 150.012, -186.956, 50.4321, 0.45 ) }
    dend_55 { pt3dadd( 152.264, -190.201, 51.1227, 0.45 ) }
    dend_55 { pt3dadd( 154.379, -193.417, 51.911, 0.45 ) }
    dend_55 { pt3dadd( 155.271, -194.804, 52.2265, 0.45 ) }
    dend_55 { pt3dadd( 158.262, -199.389, 53.3182, 0.45 ) }
    dend_55 { pt3dadd( 159.631, -201.545, 53.8863, 0.45 ) }
    dend_55 { pt3dadd( 161.436, -204.479, 54.8071, 0.45 ) }
    dend_55 { pt3dadd( 162.509, -206.237, 55.5449, 0.45 ) }
    dend_55 { pt3dadd( 163.243, -207.473, 56.1237, 0.45 ) }
    dend_55 { pt3dadd( 165.105, -210.611, 57.6247, 0.45 ) }
    dend_55 { pt3dadd( 166.968, -213.85, 59.2449, 0.45 ) }
    dend_55 { pt3dadd( 168.595, -216.802, 60.437, 0.45 ) }
    dend_55 { pt3dadd( 170.334, -220.091, 61.4431, 0.45 ) }
    dend_55 { pt3dadd( 171.65, -222.61, 61.8774, 0.45 ) }
    dend_55 { pt3dadd( 173.026, -225.356, 62.0513, 0.45 ) }
    dend_55 { pt3dadd( 174.064, -227.489, 61.9781, 0.45 ) }
    dend_55 { pt3dadd( 176.128, -231.772, 61.6033, 0.45 ) }
    dend_55 { pt3dadd( 177.25, -234.176, 61.3686, 0.45 ) }
    dend_55 { pt3dadd( 179.141, -238.332, 61.0592, 0.45 ) }
    dend_55 { pt3dadd( 180.909, -242.14, 60.9267, 0.45 ) }
    dend_55 { pt3dadd( 182.041, -244.481, 60.8973, 0.45 ) }
    dend_55 { pt3dadd( 183.09, -246.59, 60.7941, 0.45 ) }
    dend_55 { pt3dadd( 184.511, -249.456, 60.6789, 0.45 ) }
    dend_55 { pt3dadd( 185.364, -251.079, 60.542, 0.45 ) }
    dend_55 { pt3dadd( 185.813, -251.937, 60.4432, 0.45 ) }
    dend_55 { pt3dadd( 186.931, -254.02, 60.1141, 0.45 ) }
    dend_55 { pt3dadd( 189.916, -259.314, 59.0659, 0.45 ) }
    dend_55 { pt3dadd( 191.113, -261.367, 58.5787, 0.45 ) }
    dend_55 { pt3dadd( 192.8, -264.213, 57.8025, 0.45 ) }
    dend_55 { pt3dadd( 194.187, -266.539, 57.1653, 0.45 ) }
    dend_55 { pt3dadd( 194.705, -267.445, 56.9257, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 194.705, -267.445, 56.9257, 0.45 ) }
    dend_57 { pt3dadd( 193.471, -270.047, 56.4549, 0.45 ) }
    dend_57 { pt3dadd( 192.785, -271.727, 56.244, 0.45 ) }
    dend_57 { pt3dadd( 192.3, -273.207, 55.9525, 0.45 ) }
    dend_57 { pt3dadd( 192.133, -273.983, 55.6657, 0.45 ) }
    dend_57 { pt3dadd( 192.004, -275.276, 55.1356, 0.45 ) }
    dend_57 { pt3dadd( 191.974, -276.399, 54.7029, 0.45 ) }
    dend_57 { pt3dadd( 192.154, -278.087, 54.0993, 0.45 ) }
    dend_57 { pt3dadd( 192.623, -280.927, 53.1112, 0.45 ) }
    dend_57 { pt3dadd( 193.3, -284.636, 51.8364, 0.45 ) }
    dend_57 { pt3dadd( 193.603, -286.663, 51.2437, 0.45 ) }
    dend_57 { pt3dadd( 193.932, -289.441, 50.5869, 0.45 ) }
    dend_57 { pt3dadd( 194.019, -291.098, 50.2892, 0.45 ) }
    dend_57 { pt3dadd( 193.988, -293.297, 50.194, 0.45 ) }
    dend_57 { pt3dadd( 193.653, -296.212, 50.8057, 0.45 ) }
    dend_57 { pt3dadd( 193.042, -299.365, 51.8934, 0.45 ) }
    dend_57 { pt3dadd( 192.538, -301.183, 52.7192, 0.45 ) }
    dend_57 { pt3dadd( 191.892, -302.927, 53.9338, 0.45 ) }
    dend_57 { pt3dadd( 190.544, -306.135, 56.7171, 0.45 ) }
    dend_57 { pt3dadd( 188.664, -310.303, 60.9022, 0.45 ) }
    dend_57 { pt3dadd( 188.083, -311.573, 62.2394, 0.45 ) }
    dend_57 { pt3dadd( 187.264, -313.477, 64.227, 0.45 ) }
    dend_57 { pt3dadd( 185.35, -317.752, 68.9438, 0.45 ) }
    dend_57 { pt3dadd( 184.796, -318.979, 70.3306, 0.45 ) }
    dend_57 { pt3dadd( 184.126, -320.443, 71.8239, 0.45 ) }
    dend_57 { pt3dadd( 183.079, -322.827, 73.9251, 0.45 ) }
    dend_57 { pt3dadd( 182.599, -323.98, 74.9706, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 194.705, -267.445, 56.9257, 0.45 ) }
    dend_56 { pt3dadd( 195.577, -268.548, 57.4174, 0.45 ) }
    dend_56 { pt3dadd( 197.233, -270.502, 58.2111, 0.45 ) }
    dend_56 { pt3dadd( 199.071, -272.401, 58.9149, 0.45 ) }
    dend_56 { pt3dadd( 200.712, -274.027, 59.5313, 0.45 ) }
    dend_56 { pt3dadd( 202.496, -275.796, 60.2023, 0.45 ) }
    dend_56 { pt3dadd( 203.437, -276.79, 60.4823, 0.45 ) }
    dend_56 { pt3dadd( 205.489, -279.092, 60.8035, 0.45 ) }
    dend_56 { pt3dadd( 207.548, -281.526, 60.8396, 0.45 ) }
    dend_56 { pt3dadd( 209.759, -284.342, 60.6023, 0.45 ) }
    dend_56 { pt3dadd( 210.483, -285.304, 60.4817, 0.45 ) }
    dend_56 { pt3dadd( 213.388, -289.235, 59.9279, 0.45 ) }
    dend_56 { pt3dadd( 215.566, -292.275, 59.5471, 0.45 ) }
    dend_56 { pt3dadd( 216.816, -293.984, 59.3825, 0.45 ) }
    dend_56 { pt3dadd( 219.585, -297.504, 59.1638, 0.45 ) }
    dend_56 { pt3dadd( 220.865, -298.973, 59.2211, 0.45 ) }
    dend_56 { pt3dadd( 223.34, -301.582, 59.6882, 0.45 ) }
    dend_56 { pt3dadd( 226.633, -304.721, 60.7649, 0.45 ) }
    dend_56 { pt3dadd( 230.388, -308.187, 62.4975, 0.45 ) }
    dend_56 { pt3dadd( 233.154, -310.661, 64.152, 0.45 ) }
    dend_56 { pt3dadd( 236.611, -313.481, 66.5454, 0.45 ) }
    dend_56 { pt3dadd( 238.409, -314.848, 67.8747, 0.45 ) }
    dend_56 { pt3dadd( 239.641, -315.668, 68.7914, 0.45 ) }
    dend_56 { pt3dadd( 242.997, -317.415, 70.9293, 0.45 ) }
    dend_56 { pt3dadd( 246.181, -318.798, 72.6217, 0.45 ) }
    dend_56 { pt3dadd( 250.394, -320.384, 74.3657, 0.45 ) }
    dend_56 { pt3dadd( 253.303, -321.332, 75.183, 0.45 ) }
    dend_56 { pt3dadd( 258.039, -322.65, 76.1077, 0.45 ) }
    dend_56 { pt3dadd( 264.854, -324.13, 77.0111, 0.45 ) }
    dend_56 { pt3dadd( 266.709, -324.385, 77.1221, 0.45 ) }
    dend_56 { pt3dadd( 268.463, -324.508, 77.1285, 0.45 ) }
    dend_56 { pt3dadd( 271.405, -324.313, 77.0608, 0.45 ) }
    dend_56 { pt3dadd( 273.189, -323.797, 76.953, 0.45 ) }
    dend_56 { pt3dadd( 275.48, -322.155, 76.6267, 0.45 ) }
    dend_56 { pt3dadd( 276.599, -320.824, 76.3761, 0.45 ) }
    dend_56 { pt3dadd( 277.612, -319.486, 76.1062, 0.45 ) }
    dend_56 { pt3dadd( 279.722, -316.608, 75.4873, 0.45 ) }
    dend_56 { pt3dadd( 280.985, -314.954, 75.1097, 0.45 ) }
    dend_56 { pt3dadd( 283.336, -312.34, 74.4455, 0.45 ) }
    dend_56 { pt3dadd( 285.407, -310.491, 74.1233, 0.45 ) }
    dend_56 { pt3dadd( 287.693, -308.835, 74.0714, 0.45 ) }
    dend_56 { pt3dadd( 289.437, -307.763, 74.1407, 0.45 ) }
    dend_56 { pt3dadd( 291.144, -306.966, 74.3786, 0.45 ) }
    dend_56 { pt3dadd( 293.284, -306.287, 74.8854, 0.45 ) }
    dend_56 { pt3dadd( 299.168, -305.564, 77.7038, 0.45 ) }
    dend_56 { pt3dadd( 299.937, -305.583, 78.3119, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 182.599, -323.98, 74.9706, 0.45 ) }
    dend_59 { pt3dadd( 182.209, -326.29, 75.1281, 0.45 ) }
    dend_59 { pt3dadd( 181.989, -328.302, 75.3093, 0.45 ) }
    dend_59 { pt3dadd( 181.834, -330.432, 75.5702, 0.45 ) }
    dend_59 { pt3dadd( 181.714, -332.369, 75.807, 0.45 ) }
    dend_59 { pt3dadd( 181.502, -335.617, 76.441, 0.45 ) }
    dend_59 { pt3dadd( 181.37, -337.131, 76.8934, 0.45 ) }
    dend_59 { pt3dadd( 181.145, -339.213, 77.7665, 0.45 ) }
    dend_59 { pt3dadd( 180.923, -341.185, 78.6994, 0.45 ) }
    dend_59 { pt3dadd( 180.64, -344.01, 80.1784, 0.45 ) }
    dend_59 { pt3dadd( 180.294, -348.096, 82.4032, 0.45 ) }
    dend_59 { pt3dadd( 180.08, -352.18, 84.6186, 0.45 ) }
    dend_59 { pt3dadd( 179.929, -355.774, 86.453, 0.45 ) }
    dend_59 { pt3dadd( 179.91, -357.949, 87.4694, 0.45 ) }
    dend_59 { pt3dadd( 180.022, -361.401, 88.8389, 0.45 ) }
    dend_59 { pt3dadd( 180.188, -363.667, 89.5793, 0.45 ) }
    dend_59 { pt3dadd( 180.473, -366.567, 90.1742, 0.45 ) }
    dend_59 { pt3dadd( 180.829, -369.354, 90.5633, 0.45 ) }
    dend_59 { pt3dadd( 181.234, -372.259, 90.8961, 0.45 ) }
    dend_59 { pt3dadd( 181.533, -374.954, 91.234, 0.45 ) }
    dend_59 { pt3dadd( 181.764, -377.807, 91.4574, 0.45 ) }
    dend_59 { pt3dadd( 181.987, -381.488, 91.7249, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 182.599, -323.98, 74.9706, 0.45 ) }
    dend_58 { pt3dadd( 184.715, -322.731, 75.3033, 0.45 ) }
    dend_58 { pt3dadd( 185.758, -322.116, 75.4671, 0.45 ) }
    dend_58 { pt3dadd( 186.935, -321.422, 75.652, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 181.987, -381.488, 91.7249, 0.45 ) }
    dend_61 { pt3dadd( 179.357, -385.074, 92.3058, 0.45 ) }
    dend_61 { pt3dadd( 176.373, -389.439, 92.7262, 0.45 ) }
    dend_61 { pt3dadd( 174.718, -392.024, 92.8645, 0.45 ) }
    dend_61 { pt3dadd( 173.755, -393.645, 92.9061, 0.45 ) }
    dend_61 { pt3dadd( 173.551, -394.013, 92.9043, 0.45 ) }
    dend_61 { pt3dadd( 171.446, -397.953, 92.8507, 0.45 ) }
    dend_61 { pt3dadd( 171.057, -398.951, 92.7249, 0.45 ) }
    dend_61 { pt3dadd( 170.764, -399.913, 92.5482, 0.45 ) }
    dend_61 { pt3dadd( 170.416, -400.902, 92.3653, 0.45 ) }
    dend_61 { pt3dadd( 169.937, -402.244, 92.0356, 0.45 ) }
    dend_61 { pt3dadd( 169.197, -404.563, 91.3478, 0.45 ) }
    dend_61 { pt3dadd( 168.588, -406.638, 90.6919, 0.45 ) }
    dend_61 { pt3dadd( 167.752, -409.168, 90.0219, 0.45 ) }
    dend_61 { pt3dadd( 167.186, -410.593, 89.7289, 0.45 ) }
    dend_61 { pt3dadd( 166.462, -412.275, 89.4071, 0.45 ) }
    dend_61 { pt3dadd( 165.385, -414.658, 88.9648, 0.45 ) }
    dend_61 { pt3dadd( 164.058, -416.917, 89.0168, 0.45 ) }
    dend_61 { pt3dadd( 162.621, -418.957, 89.3918, 0.45 ) }
    dend_61 { pt3dadd( 161.349, -420.639, 89.8594, 0.45 ) }
    dend_61 { pt3dadd( 160.092, -422.178, 90.43, 0.45 ) }
    dend_61 { pt3dadd( 158.672, -423.807, 91.0857, 0.45 ) }
    dend_61 { pt3dadd( 152.897, -430.437, 93.5253, 0.45 ) }
    dend_61 { pt3dadd( 151.538, -432.124, 94.0185, 0.45 ) }
    dend_61 { pt3dadd( 150.717, -433.284, 94.253, 0.45 ) }
    dend_61 { pt3dadd( 148.413, -437.012, 94.6738, 0.45 ) }
    dend_61 { pt3dadd( 147.367, -438.977, 94.7677, 0.45 ) }
    dend_61 { pt3dadd( 146.426, -441.449, 94.5303, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 146.044, -443.274, 93.9651, 0.45 ) }
    dend_61 { pt3dadd( 145.734, -445.391, 93.2676, 0.45 ) }
    dend_61 { pt3dadd( 145.609, -447.366, 92.5068, 0.45 ) }
    dend_61 { pt3dadd( 145.739, -448.867, 91.7634, 0.45 ) }
    dend_61 { pt3dadd( 145.841, -449.629, 91.4199, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 181.987, -381.488, 91.7249, 0.45 ) }
    dend_60 { pt3dadd( 181.861, -383.369, 92.5089, 0.45 ) }
    dend_60 { pt3dadd( 181.595, -387.216, 93.9767, 0.45 ) }
    dend_60 { pt3dadd( 181.088, -391.558, 95.5413, 0.45 ) }
    dend_60 { pt3dadd( 180.723, -393.17, 96.1973, 0.45 ) }
    dend_60 { pt3dadd( 179.967, -395.539, 97.3212, 0.45 ) }
    dend_60 { pt3dadd( 179.061, -397.918, 98.6029, 0.45 ) }
    dend_60 { pt3dadd( 178.311, -399.439, 99.6087, 0.45 ) }
    dend_60 { pt3dadd( 177.159, -401.454, 101.183, 0.45 ) }
    dend_60 { pt3dadd( 174.116, -406.125, 105.565, 0.45 ) }
    dend_60 { pt3dadd( 172.087, -409.136, 108.579, 0.45 ) }
    dend_60 { pt3dadd( 170.94, -410.92, 110.411, 0.45 ) }
    dend_60 { pt3dadd( 169.24, -413.715, 113.411, 0.45 ) }
    dend_60 { pt3dadd( 168.874, -414.422, 114.166, 0.45 ) }
    dend_60 { pt3dadd( 168.288, -416.061, 116.018, 0.45 ) }
    dend_60 { pt3dadd( 168.013, -417.834, 117.841, 0.45 ) }
    dend_60 { pt3dadd( 167.866, -420.392, 120.275, 0.45 ) }
    dend_60 { pt3dadd( 167.884, -421.415, 121.149, 0.45 ) }
    dend_60 { pt3dadd( 168.052, -424.564, 123.49, 0.45 ) }
    dend_60 { pt3dadd( 168.521, -429.68, 127.193, 0.45 ) }
    dend_60 { pt3dadd( 168.846, -432.514, 129.294, 0.45 ) }
    dend_60 { pt3dadd( 169.376, -436.495, 132.288, 0.45 ) }
    dend_60 { pt3dadd( 169.688, -439.162, 134.288, 0.45 ) }
    dend_60 { pt3dadd( 170.33, -444.507, 138.334, 0.45 ) }
    dend_60 { pt3dadd( 170.543, -446.147, 139.572, 0.45 ) }
    dend_60 { pt3dadd( 171.009, -449.87, 142.272, 0.45 ) }
    dend_60 { pt3dadd( 171.117, -451.261, 143.395, 0.45 ) }
    dend_60 { pt3dadd( 171.342, -454.806, 146.365, 0.45 ) }
    dend_60 { pt3dadd( 171.41, -458.181, 149.327, 0.45 ) }
    dend_60 { pt3dadd( 171.324, -459.698, 150.942, 0.45 ) }
    dend_60 { pt3dadd( 171.096, -461.461, 153.117, 0.45 ) }
    dend_60 { pt3dadd( 170.531, -464.922, 157.268, 0.45 ) }
    dend_60 { pt3dadd( 170.192, -466.609, 159.241, 0.45 ) }
    dend_60 { pt3dadd( 169.821, -468.412, 161.29, 0.45 ) }
    dend_60 { pt3dadd( 168.32, -475.922, 169.402, 0.45 ) }
    dend_60 { pt3dadd( 167.41, -481.25, 174.798, 0.45 ) }
    dend_60 { pt3dadd( 166.767, -485.737, 179.081, 0.45 ) }
    dend_60 { pt3dadd( 166.62, -487.121, 180.25, 0.45 ) }
    dend_60 { pt3dadd( 166.44, -488.59, 181.527, 0.45 ) }
    dend_60 { pt3dadd( 166.216, -490.411, 183.171, 0.45 ) }
    dend_60 { pt3dadd( 165.997, -492.305, 185.038, 0.45 ) }
    dend_60 { pt3dadd( 165.726, -494.051, 187.144, 0.45 ) }
    dend_60 { pt3dadd( 165.604, -494.691, 188.055, 0.45 ) }
    dend_60 { pt3dadd( 164.374, -500.422, 196.785, 0.45 ) }
    dend_60 { pt3dadd( 163.753, -503.107, 200.918, 0.45 ) }
    dend_60 { pt3dadd( 162.952, -507.478, 207.456, 0.45 ) }
    dend_60 { pt3dadd( 162.815, -508.195, 208.54, 0.45 ) }
    dend_60 { pt3dadd( 162.719, -508.917, 209.58, 0.45 ) }
    dend_60 { pt3dadd( 162.621, -510.222, 211.293, 0.45 ) }
    dend_60 { pt3dadd( 162.609, -513.428, 214.867, 0.45 ) }
    dend_60 { pt3dadd( 162.59, -516.635, 218.268, 0.45 ) }
    dend_60 { pt3dadd( 162.45, -524.948, 226.788, 0.45 ) }
    dend_60 { pt3dadd( 162.326, -528.491, 230.47, 0.45 ) }
    dend_60 { pt3dadd( 162.273, -530.177, 232.254, 0.45 ) }
    dend_60 { pt3dadd( 162.089, -531.881, 234.644, 0.45 ) }
    dend_60 { pt3dadd( 161.733, -533.851, 238.424, 0.45 ) }
    dend_60 { pt3dadd( 161.121, -535.889, 243.581, 0.45 ) }
    dend_60 { pt3dadd( 160.838, -536.605, 245.735, 0.45 ) }
    dend_60 { pt3dadd( 160.478, -537.192, 247.704, 0.45 ) }
    dend_60 { pt3dadd( 156.919, -542.316, 264.738, 0.45 ) }
    dend_60 { pt3dadd( 155.905, -543.785, 269.325, 0.45 ) }
    dend_60 { pt3dadd( 154.784, -545.563, 274.241, 0.45 ) }
    dend_60 { pt3dadd( 154.063, -546.595, 277.162, 0.45 ) }
    dend_60 { pt3dadd( 152.305, -549.083, 283.956, 0.45 ) }
    dend_60 { pt3dadd( 151.404, -550.407, 287.156, 0.45 ) }
    dend_60 { pt3dadd( 150.532, -551.97, 290.091, 0.45 ) }
    dend_60 { pt3dadd( 148.892, -554.808, 295.489, 0.45 ) }
    dend_60 { pt3dadd( 143.408, -564.483, 315.472, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, axon_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, axon_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_5 = new SectionList()
    dend_23 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_22 nseg = 5
    dend_8 nseg = 5
    dend_46 nseg = 7
    dend_44 nseg = 7
    dend_10 nseg = 5
    dend_9 nseg = 11
    dend_5 nseg = 7
    dend_2 nseg = 3
    dend_69 nseg = 3
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 5
    dend_64 nseg = 5
    dend_49 nseg = 3
    dend_41 nseg = 3
    dend_28 nseg = 17
    dend_21 nseg = 5
    dend_66 nseg = 13
    dend_65 nseg = 3
    dend_63 nseg = 5
    dend_38 nseg = 5
    dend_33 nseg = 7
    dend_31 nseg = 5
    dend_68 nseg = 3
    dend_67 nseg = 3
    dend_51 nseg = 7
    dend_40 nseg = 25
    dend_37 nseg = 11
    dend_54 nseg = 3
    dend_53 nseg = 11
    dend_36 nseg = 5
    dend_35 nseg = 9
    dend_62 nseg = 5
    dend_55 nseg = 9
    dend_57 nseg = 3
    dend_56 nseg = 7
    dend_59 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 15
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_NBC_ded84149de_0_0


