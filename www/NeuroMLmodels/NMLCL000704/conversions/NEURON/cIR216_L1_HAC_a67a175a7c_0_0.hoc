// Cell: cIR216_L1_HAC_a67a175a7c_0_0
/*
{
  "id" : "cIR216_L1_HAC_a67a175a7c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.8932, -2.9747, 0.0, 2.90664", "-7.11415, -2.67306, 0.0, 5.00018", "-6.33509, -2.37141, 0.0, 6.59522", "-5.55603, -2.06976, 0.0, 7.83334", "-4.77698, -1.76812, 0.0, 8.76202", "-3.99792, -1.46647, 0.0, 9.66096", "-3.21886, -1.16483, 0.0, 10.4611", "-2.43981, -0.863181, 0.0, 11.24", "-1.66075, -0.561535, 0.0, 11.7445", "-0.881692, -0.259889, 0.0, 12.0929", "-0.102635, 0.0417564, 0.0, 12.2749", "0.676421, 0.343402, 0.0, 12.2586", "1.45548, 0.645048, 0.0, 12.0808", "2.23453, 0.946694, 0.0, 11.5585", "3.01359, 1.24834, 0.0, 10.9163", "3.79265, 1.54999, 0.0, 10.1046", "4.5717, 1.85163, 0.0, 8.97569", "5.35076, 2.15328, 0.0, 7.68454", "6.12982, 2.45492, 0.0, 6.04203", "6.90888, 2.75657, 0.0, 4.16798", "7.68793, 3.05821, 0.0, 2.43925" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-0.0188559, -0.978059, 3.42, 1.04", "0.928145, 0.223046, 4.57886, 1.04", "1.61219, 1.09063, 5.41592, 1.18", "2.14651, 1.76832, 6.06978, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000450990285
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "5.43115, 4.26194, 0.0, 1.26", "5.8416, 5.22205, 0.85054, 1.26", "6.34245, 6.3936, 1.88839, 1.1", "6.81142, 7.49058, 2.86018, 1.1", "7.19575, 8.38956, 3.65657, 1.1", "7.85222, 9.92513, 5.01689, 0.96", "8.10445, 10.5151, 5.53956, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000450990285
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-0.508856, -6.40806, -0.27, 2.28", "-0.508856, -6.40806, -0.27, 2.28", "-0.668496, -7.69245, 0.883452, 2.0", "-0.852532, -8.88874, 1.91346, 1.76", "-1.0423, -9.91924, 2.83924, 1.48", "-1.14554, -10.4269, 3.29246, 1.26", "-1.28752, -11.1251, 3.91575, 1.26", "-1.42183, -11.7684, 4.46602, 1.26", "-1.56342, -12.4068, 4.95399, 1.26", "-1.8197, -13.4309, 5.71791, 1.26", "-1.96458, -13.8406, 6.05221, 1.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000450990285
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.41885, -0.798055, 1.92, 3.54", "-7.41885, -0.798055, 1.92, 3.54", "-8.38885, -0.728055, 2.28, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000450990285
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.51115, 4.74194, -6.67, 0.96", "2.52058, 5.0706, -6.98048, 0.96", "2.5307, 5.36799, -7.24723, 0.96", "2.53729, 5.56148, -7.42078, 0.96", "2.57143, 6.56424, -8.32022, 0.66", "2.60178, 7.45552, -9.11967, 0.66", "2.6387, 8.53974, -10.0922, 1.04", "2.67413, 9.02143, -10.5583, 1.1" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000450990285
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.27115, 2.46194, -1.08, 1.18", "8.61375, 2.59574, -0.986611, 1.18", "9.42173, 2.91128, -0.766368, 1.18", "10.4901, 3.32852, -0.475136, 1.32", "11.1806, 3.59819, -0.286905, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000000450990285
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.68793, 3.05821, 0.0, 0.442977", "21.676, 8.4743, 0.0, 0.442977", "35.6641, 13.8904, 0.0, 0.442977" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "2.14651, 1.76832, 6.06978, 1.18", "1.29851, 2.40279, 7.42936, 1.18", "0.53144, 3.06469, 8.93265, 1.18", "0.072266, 3.53316, 9.95613, 0.96", "-0.477774, 4.19961, 11.2292, 0.96", "-1.14016, 5.09172, 12.792, 0.82", "-1.69248, 5.8356, 14.0952, 0.82", "-2.39016, 6.80932, 15.7346, 1.04", "-2.69143, 7.33085, 16.5579, 1.04", "-3.11018, 8.41252, 18.2678, 0.82", "-3.12468, 8.48374, 18.3679, 0.82" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "2.14651, 1.76832, 6.06978, 0.36", "3.67697, 3.22732, 8.18221, 0.36", "4.61273, 4.07049, 9.05862, 0.36", "5.6703, 4.95823, 9.72411, 0.3", "6.14928, 5.34336, 9.93823, 0.3", "7.00017, 6.01014, 10.2148, 0.3", "8.53627, 7.22325, 10.6083, 0.3", "9.19355, 7.72278, 10.5359, 0.3", "9.88402, 8.28608, 10.3796, 0.44", "10.4415, 8.78936, 10.2503, 0.44", "11.1541, 9.51967, 10.1581, 0.22", "11.5495, 10.022, 10.1748, 0.22", "12.3246, 11.4151, 10.5229, 0.22", "12.8572, 12.728, 10.8887, 0.36", "13.3591, 14.3687, 11.3586, 0.36", "13.5512, 15.162, 11.6049, 0.22", "13.735, 16.0946, 11.9359, 0.22", "13.9102, 17.0517, 12.3077, 0.22", "14.0689, 18.0064, 12.7306, 0.22", "14.2161, 18.8014, 13.0472, 0.22", "14.4637, 19.9775, 13.5387, 0.14", "14.6456, 20.8096, 13.9553, 0.44", "14.7911, 21.5143, 14.4, 0.44", "14.9231, 22.2882, 14.9815, 0.44", "15.0022, 22.8266, 15.4354, 0.58", "15.0733, 23.3655, 15.9585, 0.58", "15.1243, 23.9302, 16.5813, 0.22", "15.155, 24.9242, 17.7981, 0.22", "15.1166, 25.5794, 18.7009, 0.22", "15.0712, 25.8783, 19.1499, 0.66", "14.9412, 26.588, 20.2467, 0.66", "14.8227, 27.283, 21.2864, 0.44", "14.7427, 27.9411, 22.2434, 0.44", "14.7163, 28.6353, 23.201, 0.44", "14.7516, 29.3925, 24.2346, 0.74", "14.8108, 30.1869, 25.3619, 0.58", "14.853, 30.7217, 26.14, 0.52", "14.892, 31.4335, 27.2118, 0.44", "14.9169, 32.1693, 28.378, 0.44", "14.9558, 33.0527, 29.7779, 0.66", "14.9853, 33.8577, 31.0478, 0.66", "14.9895, 34.6094, 32.2179, 0.66", "14.9815, 35.547, 33.5554, 0.52", "14.968, 36.1057, 34.1962, 0.52", "14.9377, 37.0099, 34.9979, 0.3", "14.9018, 37.9564, 35.6329, 0.66", "14.8596, 38.6515, 36.0214, 0.66", "14.74, 39.5811, 36.5174, 0.66", "14.5151, 40.6563, 37.1041, 0.3", "14.1327, 42.055, 38.0093, 0.3", "13.9962, 42.4725, 38.3427, 0.66", "13.7316, 43.2928, 39.1088, 0.66", "13.5458, 44.0833, 39.9372, 0.52", "13.5083, 44.5178, 40.4456, 0.52", "13.6153, 45.4161, 41.596, 0.74", "13.7, 45.7113, 41.9404, 0.74", "13.7991, 45.9264, 42.1957, 0.74", "14.1775, 46.516, 42.8365, 0.44", "14.6061, 47.0527, 43.3854, 0.52", "15.4741, 47.9368, 44.2795, 0.52", "15.9997, 48.3694, 44.6558, 0.22", "17.2903, 49.1572, 45.2276, 0.22", "18.5652, 49.6575, 45.4709, 0.22", "19.1454, 49.7359, 45.4316, 0.22", "19.9553, 49.7205, 45.2479, 0.22", "20.4541, 49.6498, 45.1057, 0.22", "21.2822, 49.4539, 44.9034, 0.22", "21.5497, 49.3804, 44.8406, 0.22", "21.9638, 49.2816, 44.7963, 0.52", "22.28, 49.2265, 44.7697, 0.52", "23.2892, 49.0965, 44.7072, 0.22", "23.8303, 49.0289, 44.7334, 0.22", "24.5684, 48.9424, 44.8366, 0.44", "25.0827, 48.9112, 44.9749, 0.44", "25.5413, 48.9159, 45.1025, 0.22", "26.3017, 48.9665, 45.3186, 0.52", "27.5567, 49.0946, 45.6873, 0.36", "28.3576, 49.167, 45.9117, 0.52", "29.625, 49.2897, 46.2241, 0.14", "30.9519, 49.4306, 46.5006, 0.14", "31.3888, 49.4786, 46.5737, 0.52", "31.8855, 49.5336, 46.6298, 0.82", "32.9119, 49.6187, 46.6844, 0.3", "33.9833, 49.6521, 46.7548, 0.22", "34.3183, 49.6427, 46.779, 0.22", "34.6327, 49.6274, 46.8409, 0.22", "35.2001, 49.6057, 46.9671, 0.14", "36.0135, 49.5909, 47.1568, 0.22", "36.3797, 49.589, 47.2409, 0.36", "36.6702, 49.5771, 47.302, 0.36", "37.4021, 49.5396, 47.3998, 0.22", "38.0604, 49.5102, 47.4167, 0.22", "38.7292, 49.4933, 47.3753, 0.22", "39.2529, 49.4793, 47.3119, 0.52", "39.8288, 49.4541, 47.2486, 0.3", "40.5359, 49.4219, 47.1651, 0.3", "41.1907, 49.3953, 47.0787, 0.58", "41.555, 49.4022, 47.0384, 0.58", "42.1805, 49.4808, 46.9759, 0.36", "43.2901, 49.7263, 46.8515, 0.22", "44.0627, 49.9481, 46.7633, 0.22", "44.3498, 50.0347, 46.7346, 0.22", "45.3232, 50.2919, 46.7063, 0.52", "46.2212, 50.5382, 46.6672, 0.14", "46.9851, 50.7599, 46.6145, 0.44", "47.4757, 50.8963, 46.5583, 0.66", "48.2126, 51.0567, 46.5027, 0.22", "49.8424, 51.2862, 46.4479, 0.36" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "8.10445, 10.5151, 5.53956, 0.82", "7.6125, 11.0428, 6.832, 0.82", "7.08963, 11.6037, 8.20569, 0.82", "6.47068, 12.2677, 9.8318, 1.04", "6.22622, 12.5299, 10.474, 1.04" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "8.10445, 10.5151, 5.53956, 0.66", "7.92411, 10.5989, 7.45877, 0.66", "7.63021, 10.7356, 10.5866, 0.66", "7.40445, 10.8405, 12.9893, 0.66", "7.12206, 10.9718, 15.9947, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-1.96458, -13.8406, 6.05221, 0.58", "-0.984742, -14.0414, 7.48164, 0.58", "-0.149217, -14.2127, 8.70056, 0.58", "0.718061, -14.3905, 9.9658, 0.58", "1.54627, -14.5602, 11.174, 0.74", "1.93461, -14.6398, 11.7406, 0.74", "2.52092, -14.76, 12.5959, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.96458, -13.8406, 6.05221, 0.82", "-0.0419438, -15.0241, 3.22608, 0.82", "0.993081, -15.6291, 1.94889, 0.58", "1.78421, -16.0814, 1.07682, 0.58", "2.39744, -16.431, 0.392056, 0.58", "3.01848, -16.7962, -0.302193, 0.44", "3.40978, -17.0262, -0.739628, 0.58", "3.78713, -17.2299, -1.20943, 0.58", "4.52966, -17.6053, -2.01806, 0.44", "5.25463, -17.9921, -2.75859, 0.88", "5.52702, -18.1434, -3.04267, 0.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-8.38885, -0.728055, 2.28, 1.1", "-9.92975, -0.29221, 2.6373, 1.1", "-11.307, 0.134736, 2.80867, 0.96", "-12.9042, 0.669771, 2.80568, 1.04", "-14.2541, 1.15438, 2.63341, 0.96", "-15.2851, 1.54006, 2.38926, 0.96", "-16.4579, 1.97875, 2.11155, 0.96", "-17.4588, 2.41697, 1.74731, 0.82", "-18.5606, 2.93757, 1.14204, 0.96", "-19.5508, 3.42516, 0.38213, 1.1", "-20.3791, 3.81829, -0.415772, 1.32" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.38885, -0.728055, 2.28, 1.4", "-9.43784, 0.409027, 1.01759, 1.4", "-10.1202, 1.26929, -0.102658, 1.04", "-10.6363, 1.99904, -1.0722, 0.88", "-11.1098, 2.66839, -1.96149, 0.52", "-11.6278, 3.40077, -2.93452, 0.52", "-12.0007, 3.928, -3.63499, 0.74", "-12.5012, 4.83651, -5.00153, 0.88", "-12.5805, 5.08247, -5.38272, 0.88" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.67413, 9.02143, -10.5583, 0.58", "3.35069, 9.71355, -10.1411, 0.58", "4.13283, 10.5137, -9.65877, 0.44", "5.06052, 11.4627, -9.08673, 0.52", "5.77519, 12.1938, -8.64604, 0.52", "6.77435, 13.216, -8.02993, 0.52", "7.14826, 13.5985, -7.79936, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.67413, 9.02143, -10.5583, 0.44", "2.02291, 9.43207, -11.9446, 0.44", "1.29829, 9.81844, -13.2259, 0.58", "0.772907, 10.0007, -14.0587, 0.58", "0.288441, 10.1108, -14.8122, 0.44", "-0.433891, 10.2337, -15.9559, 0.44", "-0.955272, 10.3186, -16.8329, 0.44", "-1.35832, 10.403, -17.5717, 0.44", "-1.90499, 10.5695, -18.5628, 0.3", "-2.12035, 10.6572, -19.0032, 0.3", "-2.21822, 10.7509, -19.3527, 0.3", "-2.38047, 11.0225, -20.1352, 0.3", "-2.45735, 11.2062, -20.6024, 0.3", "-2.59953, 11.5983, -21.5556, 0.22", "-2.79765, 12.1102, -22.7735, 0.22", "-3.22192, 12.9075, -24.7402, 0.36", "-3.51734, 13.3364, -25.8587, 0.88", "-4.02968, 13.9146, -27.5683, 0.44", "-4.4894, 14.3347, -29.0521, 0.44", "-5.09528, 14.7738, -30.9808, 0.44", "-5.53574, 15.0203, -32.3626, 0.44", "-5.74811, 15.0938, -33.087, 0.44", "-5.99498, 15.0955, -34.1868, 0.44", "-6.17451, 14.9639, -35.454, 0.44", "-6.19742, 14.843, -36.1576, 0.44", "-6.08449, 14.6111, -37.2404, 0.44", "-5.73109, 14.3334, -38.7037, 0.44", "-5.27083, 14.1523, -40.0471, 0.66", "-4.77058, 14.0933, -41.195, 0.66", "-4.47889, 14.1246, -41.7768, 0.36", "-4.15666, 14.251, -42.3403, 0.3", "-3.57859, 14.7899, -43.1593, 0.14", "-3.28328, 15.2444, -43.4205, 0.14", "-3.13436, 15.4762, -43.4913, 0.44", "-2.59988, 16.1566, -43.609, 0.44", "-2.02283, 16.7371, -43.6671, 0.44", "-1.25574, 17.2655, -43.6595, 0.44", "-0.465128, 17.675, -43.5448, 0.44", "0.702161, 18.1572, -43.3401, 0.44", "1.62707, 18.4925, -43.1648, 0.22", "2.11252, 18.6626, -43.0644, 0.22", "3.00751, 18.9934, -42.831, 0.66", "4.15507, 19.5504, -42.448, 0.22", "4.86194, 20.0699, -42.0941, 0.22", "5.12313, 20.3457, -41.8981, 0.22", "5.73804, 21.1542, -41.2771, 0.22", "6.05921, 21.6673, -40.8081, 0.22", "6.39025, 22.3319, -40.0555, 0.14", "6.78267, 23.2891, -38.8306, 0.14", "7.03558, 23.9434, -37.9228, 0.14", "7.28739, 24.5583, -36.9903, 0.74", "7.66842, 25.4116, -35.5779, 0.36", "8.11247, 26.2968, -34.023, 0.22", "8.49765, 26.9986, -32.7108, 0.08", "8.78572, 27.5176, -31.7204, 0.22", "9.13871, 28.1295, -30.5395, 0.22", "9.43492, 28.6193, -29.598, 0.36", "9.95715, 29.3455, -28.2961, 0.36" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "11.1806, 3.59819, -0.286905, 0.96", "11.7727, 4.9664, 0.184261, 0.96", "12.3495, 6.35447, 0.615442, 0.82", "12.5428, 6.88164, 0.737186, 0.82", "12.9669, 8.16592, 0.965545, 0.96", "13.4851, 9.86816, 1.2074, 0.58", "13.787, 10.9239, 1.32838, 0.82", "14.0671, 12.0229, 1.39892, 0.88", "14.3387, 13.344, 1.39032, 0.74", "14.4874, 14.1638, 1.32237, 0.66", "14.5964, 14.8437, 1.20349, 0.66", "14.7138, 15.763, 0.960817, 0.82", "14.7702, 16.2267, 0.809021, 0.82", "14.8811, 17.0774, 0.489682, 0.96", "15.005, 18.0908, 0.088825, 0.52", "15.0285, 18.6769, -0.209448, 0.52", "15.0055, 19.2745, -0.56671, 0.52", "14.9622, 19.8134, -0.893454, 0.52", "14.944, 20.1429, -1.07119, 0.82", "14.9577, 20.6442, -1.2928, 0.96", "15.1416, 21.5794, -1.63609, 0.36", "15.3597, 22.0358, -1.80438, 0.36", "15.9355, 22.8274, -2.07415, 0.52", "16.417, 23.414, -2.25871, 0.74", "17.0287, 24.0683, -2.46865, 0.74", "17.9327, 24.9128, -2.74122, 0.58", "18.7701, 25.5774, -2.95463, 0.74", "19.3683, 25.9965, -3.14293, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "11.1806, 3.59819, -0.286905, 0.66", "11.7966, 2.91603, 0.136463, 0.66", "12.0634, 2.60224, 0.356402, 0.66", "12.4532, 2.12978, 0.732267, 0.82", "12.9883, 1.4858, 1.27584, 0.96", "13.7705, 0.611626, 2.08347, 0.96", "14.6528, -0.28881, 2.97592, 0.82", "15.135, -0.735181, 3.50765, 0.66", "15.7517, -1.21851, 4.22111, 0.66", "16.1876, -1.44322, 4.72994, 0.66", "16.8013, -1.53423, 5.4594, 0.74", "17.1854, -1.44418, 5.90551, 0.96", "17.9172, -1.10857, 6.71199, 1.32", "18.3348, -0.874433, 7.13114, 1.32", "19.1653, -0.368457, 7.88233, 0.88", "20.1531, 0.223295, 8.69055, 0.82", "21.2293, 0.878007, 9.55305, 0.82", "21.6169, 1.10858, 9.85396, 0.82", "22.4847, 1.58841, 10.4582, 0.82", "23.1204, 1.90619, 10.8489, 1.04", "24.2614, 2.36397, 11.4439, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.6641, 13.8904, 0.0, 0.324625", "49.6521, 19.3065, 0.0, 0.324625", "63.6402, 24.7226, 0.0, 0.324625" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-3.12468, 8.48374, 18.3679, 0.58", "-3.11493, 8.44533, 18.7296, 0.58", "-3.05576, 8.22747, 20.7193, 0.58", "-2.95499, 7.87708, 23.7504, 0.58", "-2.85098, 7.50485, 26.874, 0.58", "-2.78398, 7.22278, 29.1067, 0.58", "-2.73072, 6.90466, 31.3413, 0.58", "-2.69871, 6.57836, 33.4017, 0.58", "-2.69023, 6.50259, 33.8035, 0.58", "-2.5962, 6.06137, 35.6613, 0.58", "-2.54249, 5.91218, 36.1759, 0.58", "-2.3942, 5.61908, 37.0401, 0.82", "-2.08084, 5.06783, 38.4056, 0.82", "-1.87836, 4.75381, 39.074, 0.36", "-1.60245, 4.39957, 39.7944, 0.36", "-1.33581, 4.16502, 40.2, 0.36", "-0.917382, 3.92401, 40.6819, 0.52" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-3.12468, 8.48374, 18.3679, 0.58", "-3.62287, 9.34474, 18.4935, 0.58", "-4.05196, 10.0495, 18.7593, 0.44", "-4.48056, 10.7591, 19.11, 0.44", "-4.97538, 11.5598, 19.5525, 0.74", "-5.33421, 12.0954, 19.8948, 0.82", "-6.1772, 13.2969, 20.7637, 0.58", "-7.05467, 14.4735, 21.7699, 0.36", "-7.624, 15.2605, 22.4709, 0.3", "-8.01429, 15.8139, 22.9552, 0.58", "-8.54582, 16.6069, 23.6481, 0.58", "-9.18027, 17.6891, 24.5899, 0.58", "-9.65893, 18.6847, 25.3999, 0.74", "-9.91975, 19.4253, 25.954, 0.58", "-10.1201, 20.2638, 26.5618, 0.36", "-10.2791, 21.5395, 27.4868, 0.36", "-10.3293, 22.5448, 28.2278, 0.36", "-10.3393, 22.7346, 28.3801, 0.36", "-10.402, 23.4274, 29.0454, 0.96", "-10.5606, 24.3909, 30.0821, 0.74", "-10.7907, 25.3486, 31.1992, 0.52", "-11.0255, 26.1039, 32.1441, 0.74", "-11.2627, 26.7733, 33.0993, 0.36", "-11.53, 27.5296, 34.362, 0.36", "-11.7112, 28.0521, 35.3372, 0.88", "-11.9989, 28.8855, 36.9528, 0.52", "-12.3013, 29.7321, 38.6189, 0.52", "-12.6171, 30.6058, 40.2395, 0.52", "-12.9409, 31.4909, 41.795, 0.52", "-13.0854, 31.8497, 42.3745, 0.52", "-13.2746, 32.274, 42.9984, 0.3", "-13.7295, 33.2049, 44.1553, 0.66", "-14.2867, 34.2739, 45.2437, 0.74", "-15.0271, 35.6264, 46.3106, 0.44", "-15.6977, 36.7558, 47.0105, 0.66", "-16.2022, 37.539, 47.4138, 0.22", "-16.6776, 38.2385, 47.675, 0.58", "-17.0824, 38.7698, 47.7407, 0.74", "-18.2131, 40.0278, 47.5646, 0.52", "-18.885, 40.6404, 47.3189, 0.52", "-19.3508, 40.9806, 47.1024, 0.66", "-19.9155, 41.3017, 46.8123, 0.66", "-20.7829, 41.6815, 46.3396, 0.52", "-21.3281, 41.8769, 46.0243, 0.3", "-22.0254, 42.0814, 45.5906, 0.22", "-22.4943, 42.199, 45.2417, 0.22", "-23.0928, 42.3334, 44.7394, 0.22", "-23.4893, 42.4352, 44.3887, 0.44", "-24.2934, 42.695, 43.6544, 0.44", "-24.7847, 42.8916, 43.2114, 0.44", "-25.3274, 43.1504, 42.7395, 1.04", "-26.3428, 43.6443, 41.958, 0.22", "-26.9404, 43.8928, 41.5248, 0.22", "-27.4109, 44.027, 41.1482, 0.22", "-27.6625, 44.0694, 40.9403, 0.22", "-27.8399, 44.0876, 40.7927, 0.66", "-28.3224, 44.1103, 40.3728, 0.74", "-29.4569, 44.1341, 39.4064, 0.3", "-30.5657, 44.2088, 38.5764, 0.44", "-31.0862, 44.3061, 38.2567, 0.74", "-32.0471, 44.6745, 37.794, 0.22", "-32.645, 45.1174, 37.6566, 0.58", "-33.0592, 45.6739, 37.7092, 1.04", "-33.6633, 46.9602, 38.0465, 0.36", "-33.9545, 48.0137, 38.411, 0.66", "-34.0712, 49.0427, 38.7826, 0.52", "-34.0838, 50.4129, 39.2634, 0.44", "-34.0798, 51.1664, 39.5076, 0.44", "-34.0905, 51.6673, 39.6607, 0.44", "-34.1633, 52.5996, 39.8959, 0.58", "-34.3704, 53.4031, 40.0805, 0.88", "-34.9567, 54.2616, 40.2886, 0.44", "-35.9752, 54.9859, 40.4623, 0.3", "-37.2769, 55.521, 40.5714, 0.3", "-37.6435, 55.6043, 40.5492, 0.3", "-38.0998, 55.6427, 40.4548, 0.3", "-38.6641, 55.6342, 40.2749, 0.44", "-39.2812, 55.6028, 40.011, 0.44", "-40.1954, 55.5968, 39.4151, 0.52", "-41.3954, 55.6978, 38.3924, 0.52", "-42.0677, 55.7575, 37.7769, 0.3", "-42.7614, 55.8179, 37.0904, 0.3", "-43.1646, 55.8668, 36.6526, 0.52", "-44.1544, 56.0917, 35.4844, 0.52", "-44.5343, 56.2491, 35.0333, 0.52" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "49.8424, 51.2862, 46.4479, 0.22", "50.9766, 51.5945, 46.1787, 0.22", "52.0102, 51.7945, 45.9264, 0.14", "52.4384, 51.8503, 45.7669, 0.44", "52.9039, 51.8854, 45.5714, 0.74", "53.5147, 51.8982, 45.2988, 0.3", "54.327, 51.8879, 44.9344, 0.22", "54.9403, 51.8358, 44.6291, 0.22", "56.0664, 51.7141, 44.0673, 0.22", "56.8071, 51.6345, 43.6832, 0.3", "57.426, 51.568, 43.3659, 0.3", "58.1003, 51.5083, 43.0344, 0.22", "58.82, 51.4744, 42.7202, 0.22", "59.522, 51.4684, 42.4464, 0.22", "60.0378, 51.4677, 42.2672, 0.44", "60.6749, 51.4753, 42.0253, 0.66", "61.1581, 51.4881, 41.8233, 0.66", "61.9894, 51.5165, 41.4547, 0.66", "63.0247, 51.5614, 40.9957, 0.22", "63.8106, 51.642, 40.6355, 0.22", "64.2452, 51.7102, 40.4443, 0.22", "64.6688, 51.7826, 40.2724, 0.22", "65.2376, 51.8686, 40.0716, 0.66", "65.7542, 51.9107, 39.9408, 0.82", "66.5743, 51.9108, 39.8305, 0.3", "67.4657, 51.8872, 39.7082, 0.14", "68.0745, 51.8537, 39.6262, 0.3", "68.5126, 51.8272, 39.5672, 0.3", "69.5527, 51.7853, 39.4071, 0.14", "70.2421, 51.7895, 39.2938, 0.14", "71.287, 51.8707, 39.1176, 0.14", "71.8815, 51.9854, 39.0204, 0.44", "72.3907, 52.1384, 38.9442, 0.44", "73.2392, 52.4483, 38.8149, 0.14", "73.8283, 52.6827, 38.7279, 0.44", "74.3829, 52.8737, 38.6608, 0.52", "74.9647, 53.0087, 38.6233, 0.22", "75.2309, 53.0443, 38.6068, 0.22", "75.8151, 53.0762, 38.5738, 0.22", "76.3878, 53.0527, 38.5466, 0.22", "77.019, 52.9795, 38.5259, 0.08", "77.5261, 52.9188, 38.5603, 0.08", "78.0985, 52.8507, 38.6831, 0.44", "78.602, 52.7982, 38.8505, 0.58", "79.0955, 52.7548, 39.0474, 0.58", "79.801, 52.7038, 39.34, 0.14", "81.003, 52.6045, 39.82, 0.14", "82.0764, 52.5241, 40.2227, 0.22", "82.852, 52.47, 40.5083, 0.96", "83.8142, 52.4037, 40.8456, 1.1", "84.5056, 52.3641, 41.0798, 0.74", "85.8696, 52.2951, 41.4964, 0.44", "86.4811, 52.2589, 41.6332, 0.44", "87.7574, 52.2209, 41.8508, 0.44", "88.3417, 52.2107, 41.9485, 0.44" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "49.8424, 51.2862, 46.4479, 0.44", "50.2505, 51.1071, 47.2255, 0.44", "50.9272, 50.7994, 48.5709, 0.44", "51.3703, 50.6052, 49.4493, 0.44", "51.9696, 50.3713, 50.641, 0.22", "52.6245, 50.1396, 52.011, 0.22", "53.4006, 49.8663, 53.7064, 0.22", "53.7616, 49.7406, 54.6053, 0.22", "53.9794, 49.6353, 55.2561, 0.22", "54.1667, 49.5135, 55.922, 0.22", "54.2962, 49.3274, 56.6068, 0.22", "54.2017, 49.0178, 56.7885, 0.22", "53.8896, 48.3097, 56.779, 0.3", "53.4804, 47.4607, 56.4868, 0.14", "52.8549, 46.2999, 55.8879, 0.08", "52.5529, 45.7821, 55.5725, 0.3", "51.8154, 44.6437, 54.7811, 0.14", "50.9993, 43.6855, 54.0217, 0.14", "49.6052, 42.4643, 52.7444, 0.14", "48.9829, 42.0689, 52.2441, 0.58", "48.4216, 41.8136, 51.875, 0.74", "47.571, 41.5351, 51.3678, 0.74", "46.1185, 41.2682, 50.6536, 0.14", "44.5007, 41.1479, 50.183, 0.22", "43.4015, 41.1693, 50.0361, 0.14", "42.7413, 41.2372, 50.0044, 0.66", "42.4218, 41.2956, 50.0297, 0.66", "41.1537, 41.6201, 50.2992, 0.22", "40.3742, 41.8685, 50.5247, 0.36", "39.5016, 42.1748, 50.8129, 0.66", "38.4045, 42.5876, 51.1708, 0.14", "37.1475, 43.0747, 51.5918, 0.14", "36.3899, 43.3764, 51.8561, 0.14", "34.9655, 43.9726, 52.3785, 0.14", "34.3513, 44.2344, 52.584, 0.22" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "6.22622, 12.5299, 10.474, 0.66", "6.11403, 13.9701, 10.9743, 0.66", "6.02301, 15.3298, 11.384, 0.66", "5.90251, 17.0703, 11.855, 0.58", "5.83443, 17.9704, 12.0701, 0.58", "5.74443, 19.1539, 12.3433, 0.58", "5.61705, 20.6701, 12.6107, 0.52", "5.53335, 21.9871, 12.7737, 0.52", "5.44832, 23.1631, 12.8889, 0.52", "5.31642, 24.4202, 12.9189, 0.58", "5.19078, 25.3878, 12.9297, 0.82", "4.99506, 27.0414, 12.982, 0.58", "4.8752, 28.2416, 13.0884, 0.58", "4.80694, 29.2697, 13.2032, 0.58", "4.74745, 30.3908, 13.3776, 0.58", "4.71669, 31.4737, 13.6871, 0.58", "4.69937, 33.0434, 14.2947, 0.44", "4.72281, 34.2833, 14.9169, 0.44", "4.84814, 35.5472, 15.6301, 0.44", "5.04619, 36.6893, 16.3378, 0.58", "5.47435, 38.7121, 17.6645, 0.3", "5.66456, 39.6824, 18.3419, 0.22", "5.77849, 40.387, 18.8494, 0.3", "5.95635, 41.735, 19.8093, 0.22", "5.989, 42.1036, 20.1025, 0.22", "6.04224, 42.7014, 20.5703, 0.36", "6.13797, 43.7239, 21.3021, 0.36", "6.22053, 44.2568, 21.6831, 0.36", "6.33831, 44.9074, 22.0934, 0.22", "6.58832, 46.0809, 22.727, 0.22", "6.91784, 46.9839, 23.2115, 0.22", "7.35014, 47.8119, 23.6315, 0.82", "7.95471, 48.7557, 24.0589, 0.22", "8.45145, 49.4125, 24.3352, 0.22", "8.96638, 50.047, 24.5848, 0.44", "9.78036, 51.1004, 24.9233, 0.82", "10.3688, 51.941, 25.1709, 0.3", "10.7359, 52.4911, 25.3341, 0.74", "11.4924, 53.586, 25.6533, 0.22", "11.9058, 54.1455, 25.7958, 0.22", "12.4703, 54.9025, 25.9847, 0.3", "12.6801, 55.1936, 26.0436, 0.3", "13.0548, 55.7496, 26.1639, 0.3", "13.3275, 56.1627, 26.2485, 0.82", "13.8289, 56.9556, 26.4098, 0.88", "14.6327, 58.1934, 26.5573, 0.36", "15.186, 59.0253, 26.5623, 0.36", "15.691, 59.784, 26.4763, 0.36", "16.4647, 60.9224, 26.1438, 0.58", "16.9527, 61.6258, 25.698, 0.3", "17.5471, 62.4597, 24.6761, 0.22", "17.9739, 63.0589, 23.5005, 0.58", "18.1344, 63.2896, 22.8404, 0.74", "18.3473, 63.5827, 21.6153, 0.44", "18.5944, 63.9009, 19.4352, 0.44", "18.7812, 64.0561, 17.443, 0.44", "18.8887, 64.0707, 16.1518, 0.44", "18.9681, 64.0452, 15.2756, 0.44", "19.028, 64.0121, 14.7477, 0.44", "19.2928, 63.8329, 13.1667, 0.44", "19.5533, 63.6911, 12.2746, 0.44", "20.0389, 63.5173, 11.1844, 0.3", "20.6046, 63.4195, 10.1769, 0.3", "20.9799, 63.4211, 9.54121, 0.3", "21.314, 63.4788, 8.99901, 0.22", "21.7858, 63.6, 8.27074, 0.3", "22.4666, 63.8425, 7.20554, 0.22", "23.1471, 64.1614, 6.12861, 0.22", "23.9478, 64.593, 4.79173, 0.22", "24.4543, 64.9356, 3.88444, 1.04" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "6.22622, 12.5299, 10.474, 0.58", "6.20878, 13.6737, 9.86263, 0.58", "6.23994, 15.001, 9.14333, 0.52", "6.27312, 15.9068, 8.6791, 0.36", "6.28366, 16.544, 8.35366, 0.36", "6.26632, 17.4625, 7.90099, 0.66", "6.20971, 18.4183, 7.46796, 0.44", "6.12278, 19.6957, 6.97965, 0.44", "6.08548, 20.4542, 6.69525, 0.66", "6.07502, 21.3773, 6.33366, 0.66", "6.1037, 22.1425, 6.05129, 0.66", "6.23255, 23.4092, 5.61128, 0.66", "6.40418, 24.5522, 5.22055, 0.52", "6.66, 25.7845, 4.8471, 0.66", "6.87396, 26.66, 4.55237, 0.52", "7.13613, 27.5819, 4.18922, 0.58", "7.42128, 28.5896, 3.70214, 0.58", "7.73245, 29.9045, 3.00677, 0.58", "7.84233, 30.5132, 2.6784, 0.66", "7.95152, 31.6954, 2.01966, 0.52", "7.97729, 32.7663, 1.34846, 0.58", "7.96123, 33.6725, 0.688568, 0.58", "7.93381, 34.3842, 0.123441, 0.44" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "7.12206, 10.9718, 15.9947, 0.52", "6.51865, 12.7366, 16.3411, 0.52", "6.07399, 14.3908, 16.7283, 0.52", "5.91511, 15.0863, 16.8608, 0.52", "5.71362, 16.0139, 17.0755, 0.74", "5.58025, 16.6391, 17.2812, 0.82", "5.36294, 17.5939, 17.7073, 0.52", "5.13425, 18.4924, 18.2382, 0.52", "4.87511, 19.2101, 18.8484, 0.74", "4.35815, 20.1364, 19.9489, 0.52", "3.74788, 20.8831, 21.2998, 0.66", "3.13158, 21.3944, 22.7145, 1.04", "2.51006, 21.718, 24.2336, 0.74", "2.0528, 21.8686, 25.4011, 0.58", "1.45743, 21.9824, 27.0488, 0.58", "0.749705, 22.0476, 29.0829, 0.58", "0.311751, 22.0911, 30.4811, 0.58", "-0.191142, 22.2108, 32.4107, 0.58", "-0.447707, 22.3424, 33.6889, 0.58", "-0.683574, 22.5857, 35.227, 0.58", "-0.946152, 23.0606, 37.3624, 0.44", "-1.24549, 23.7517, 39.9954, 0.44", "-1.42759, 24.3286, 41.9386, 0.44", "-1.58786, 25.0883, 44.2519, 0.44", "-1.63175, 25.4972, 45.4445, 0.82", "-1.63186, 25.7156, 46.027, 0.82" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "7.12206, 10.9718, 15.9947, 0.66", "7.63257, 11.4052, 16.8763, 0.66", "8.39591, 11.9707, 18.155, 0.44", "9.22471, 12.5407, 19.4816, 0.44", "10.0587, 13.1525, 20.737, 0.44", "10.7257, 13.6903, 21.7381, 0.44", "11.4759, 14.3544, 22.8651, 0.44", "11.8875, 14.7461, 23.4642, 0.66", "12.2894, 15.121, 24.0213, 0.66", "12.9713, 15.6262, 24.9425, 0.3", "13.4986, 15.922, 25.7651, 0.3", "14.0053, 16.1345, 26.5826, 0.58", "14.5258, 16.2414, 27.5138, 0.44", "15.0242, 16.1876, 28.5282, 0.44", "15.8093, 15.8654, 30.1451, 0.3", "16.3475, 15.5399, 31.2686, 0.3", "16.5342, 15.4291, 31.6514, 0.52", "16.9992, 15.1861, 32.6833, 0.66", "17.4147, 15.0751, 33.6714, 0.66", "17.7091, 15.083, 34.3618, 0.88", "18.4128, 15.2765, 35.8439, 0.66", "19.127, 15.5321, 37.181, 0.36", "19.9396, 15.8472, 38.6284, 0.36", "20.6708, 16.1216, 39.8446, 0.82", "21.1789, 16.2618, 40.6388, 0.82", "21.9448, 16.3561, 41.7404, 0.36", "22.7153, 16.2812, 42.6398, 0.3", "23.3152, 16.0992, 43.2368, 0.3", "23.9401, 15.8102, 43.7508, 0.58", "24.71, 15.3385, 44.3285, 0.58", "25.2035, 14.9983, 44.6809, 0.58", "26.175, 14.276, 45.4058, 0.22", "26.6513, 13.9183, 45.7699, 0.22", "27.2687, 13.4662, 46.256, 0.66", "28.1361, 12.8699, 47.0248, 0.14", "28.8254, 12.4523, 47.716, 0.14", "29.5248, 12.075, 48.4968, 0.14", "29.755, 11.9706, 48.7638, 0.52", "30.315, 11.7702, 49.4253, 0.96", "31.2274, 11.51, 50.5498, 0.22", "31.9719, 11.3475, 51.5246, 0.22", "32.3323, 11.2775, 51.9816, 0.22", "32.7108, 11.2044, 52.4357, 0.44", "33.1069, 11.1331, 52.8958, 0.44", "33.7052, 11.0573, 53.5264, 0.3", "34.7183, 10.9414, 54.4453, 0.3", "35.4114, 10.8404, 55.023, 0.58", "36.5322, 10.6657, 55.948, 0.96", "37.145, 10.5601, 56.4441, 0.96", "38.1383, 10.386, 57.2037, 0.58", "38.9547, 10.2297, 57.781, 0.22", "39.8075, 10.0342, 58.3327, 0.14", "40.6988, 9.81326, 58.823, 0.52", "41.2525, 9.66078, 59.075, 0.52", "41.6846, 9.52811, 59.2809, 0.52", "42.0802, 9.39661, 59.4416, 0.52", "42.9235, 9.17207, 59.7635, 0.3", "44.9603, 8.7668, 60.4133, 0.22", "46.6041, 8.53795, 60.8754, 0.22", "47.759, 8.4555, 61.2506, 0.22", "48.9375, 8.44095, 61.7111, 0.82", "49.8838, 8.48862, 62.2172, 0.82" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "2.52092, -14.76, 12.5959, 0.44", "3.04551, -15.2538, 12.327, 0.44", "3.77001, -16.0263, 11.8596, 0.22", "4.43165, -16.7659, 11.4217, 0.36", "5.13925, -17.5638, 10.9907, 0.58", "5.60637, -18.0499, 10.7506, 0.58", "6.37864, -18.7958, 10.411, 0.22", "7.37019, -19.7087, 10.036, 0.22", "8.0673, -20.2987, 9.83846, 0.44", "9.09886, -21.0973, 9.61719, 0.3", "10.1699, -21.8782, 9.42654, 0.3", "10.9501, -22.4145, 9.27705, 0.58", "11.4942, -22.764, 9.17564, 0.58", "12.5077, -23.3979, 9.01194, 0.14", "12.9708, -23.6925, 8.92342, 0.14", "13.6532, -24.167, 8.78035, 0.44", "14.3712, -24.7649, 8.61792, 0.08", "14.767, -25.1387, 8.53688, 0.44", "15.0357, -25.4189, 8.49475, 0.74", "15.5509, -26.0288, 8.43929, 0.14", "16.0184, -26.6097, 8.42346, 0.14", "16.3347, -27.0072, 8.4311, 0.36", "16.6328, -27.3937, 8.4422, 1.04", "16.8655, -27.6784, 8.44115, 1.04", "17.8459, -28.6286, 8.33921, 0.22", "18.3968, -29.0439, 8.25247, 0.22", "18.8166, -29.3011, 8.18207, 0.22", "19.2683, -29.5501, 8.08956, 1.04", "20.0709, -29.9705, 7.97992, 1.4", "21.9016, -30.9032, 7.84143, 0.22", "22.7571, -31.3329, 7.87645, 0.44", "23.4837, -31.7208, 7.99744, 0.14", "24.3493, -32.2327, 8.24175, 0.14", "25.9736, -33.3017, 8.80023, 0.14", "26.7838, -33.877, 9.12774, 0.52", "27.9648, -34.7749, 9.62701, 0.08", "28.7085, -35.3487, 9.95039, 0.3", "29.5055, -35.959, 10.2961, 1.4", "32.2878, -38.0415, 11.4491, 0.08", "33.5986, -39.0113, 11.8555, 0.08", "35.2375, -40.2159, 12.2894, 0.08" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.52092, -14.76, 12.5959, 0.3", "2.50218, -14.8545, 13.0144, 0.3", "2.42333, -15.2207, 14.3625, 0.3", "2.25707, -15.9229, 16.6834, 0.3", "2.13782, -16.4265, 18.348, 0.3", "2.00131, -17.0031, 20.2536, 0.3", "1.91804, -17.3548, 21.4159, 0.52", "1.80213, -17.7262, 22.7001, 1.04", "1.73999, -17.9242, 23.2854, 1.48" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "5.52702, -18.1434, -3.04267, 0.3", "5.93216, -19.1002, -3.4083, 0.3", "6.27834, -19.7906, -3.63708, 0.36", "6.75918, -20.6957, -3.93051, 0.44", "7.0634, -21.2683, -4.11616, 0.44", "7.40718, -21.9154, -4.32595, 0.36", "7.58123, -22.243, -4.43216, 0.36", "7.89152, -22.7099, -4.60932, 0.58", "8.2977, -23.2626, -4.73942, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "5.52702, -18.1434, -3.04267, 0.74", "5.95804, -17.7915, -3.02883, 0.74", "6.58232, -17.3198, -3.04452, 0.22", "7.56107, -16.6889, -3.11067, 0.22", "8.49665, -16.1853, -3.18647, 0.22", "9.04439, -15.9387, -3.28159, 0.44", "9.45015, -15.7856, -3.38983, 0.58", "10.1954, -15.5813, -3.68419, 0.22", "10.9133, -15.4644, -4.09573, 0.14", "11.5073, -15.4137, -4.53645, 0.22", "12.3941, -15.3683, -5.25836, 0.14", "12.9955, -15.3424, -5.81013, 0.66", "13.3554, -15.3222, -6.17764, 0.66", "14.1358, -15.2615, -7.04954, 0.22", "14.6954, -15.1872, -7.71279, 0.22", "15.1143, -15.1035, -8.21318, 0.22", "15.6075, -14.9723, -8.7595, 0.08", "16.2303, -14.7871, -9.37975, 0.08", "16.4786, -14.7156, -9.60188, 0.08", "16.8577, -14.6177, -9.90381, 0.08", "17.1575, -14.5517, -10.1255, 0.08", "17.4063, -14.5034, -10.2975, 0.08", "17.9394, -14.4034, -10.628, 0.44", "18.9375, -14.2071, -11.1571, 0.14", "19.4991, -14.0844, -11.4608, 0.14", "19.8257, -14.0109, -11.626, 0.14", "20.4223, -13.8382, -11.9019, 0.22", "20.8013, -13.6947, -12.087, 0.58", "21.3098, -13.4626, -12.3517, 0.82", "22.414, -12.9383, -12.9185, 0.22", "23.0828, -12.6174, -13.2689, 0.22", "24.0169, -12.1665, -13.7623, 0.22", "24.9829, -11.7329, -14.2743, 0.22", "25.3748, -11.5793, -14.4872, 0.22", "26.053, -11.3613, -14.8587, 0.22", "26.3382, -11.2962, -15.007, 0.36", "26.9436, -11.2038, -15.328, 0.36", "28.0743, -11.1006, -15.9308, 0.14", "28.7946, -11.0235, -16.2944, 0.14", "29.2171, -10.9592, -16.5187, 0.14", "29.5941, -10.8913, -16.7352, 0.14", "30.1283, -10.7964, -17.0486, 0.36", "31.0204, -10.6331, -17.605, 0.14", "31.5697, -10.517, -17.9057, 0.14", "32.1833, -10.3862, -18.1589, 0.14", "32.6942, -10.29, -18.3412, 0.14", "32.9422, -10.2447, -18.4195, 0.14", "33.716, -10.095, -18.6298, 0.14", "34.6457, -9.89826, -18.8573, 0.22", "35.3606, -9.74201, -19.08, 0.36", "36.3167, -9.53115, -19.4692, 0.52", "36.8666, -9.4035, -19.7311, 0.22", "37.591, -9.23147, -20.111, 0.22", "38.1904, -9.06179, -20.4468, 0.22", "38.8269, -8.84838, -20.8733, 0.22", "39.4827, -8.59876, -21.3353, 0.22", "39.7323, -8.49365, -21.5014, 0.22", "40.3962, -8.20094, -21.937, 0.22", "40.9763, -7.95318, -22.2695, 0.22", "41.7379, -7.64502, -22.6306, 0.36", "42.1772, -7.48193, -22.8066, 0.36", "43.0023, -7.22798, -23.0503, 0.14", "43.5957, -7.09736, -23.1961, 0.14", "44.6305, -6.96487, -23.3868, 0.22", "45.3498, -6.92761, -23.4719, 0.22", "45.961, -6.91188, -23.4973, 0.14", "47.0094, -6.86064, -23.537, 0.14", "47.451, -6.81881, -23.5577, 0.14", "47.9549, -6.71219, -23.6114, 0.14", "48.4273, -6.53525, -23.7208, 0.58", "48.8232, -6.35461, -23.8918, 0.58", "49.5552, -6.01652, -24.3438, 0.22", "49.8799, -5.88523, -24.6036, 0.22", "50.3288, -5.73968, -24.9892, 0.36", "50.5387, -5.69013, -25.1736, 0.36", "51.3209, -5.56287, -25.8825, 0.14", "51.7085, -5.53006, -26.2092, 0.14", "52.2239, -5.52608, -26.5993, 0.44", "52.5337, -5.53781, -26.827, 0.44", "53.1311, -5.58971, -27.2582, 0.14", "53.8542, -5.671, -27.738, 0.14", "54.4358, -5.73495, -28.0959, 0.14", "54.8881, -5.77445, -28.3809, 0.14", "55.3038, -5.80303, -28.6823, 0.14", "55.6138, -5.82482, -28.9047, 0.14", "55.9512, -5.8524, -29.1376, 0.14", "56.3575, -5.89316, -29.3939, 0.14", "56.8202, -5.9322, -29.7097, 0.14", "57.6268, -5.95328, -30.2566, 0.14", "58.5182, -5.89351, -30.8355, 0.58", "58.9585, -5.82772, -31.1291, 0.88", "60.0979, -5.59384, -31.8676, 0.14", "60.5865, -5.47556, -32.181, 0.14", "60.8918, -5.3887, -32.3747, 0.14", "61.4629, -5.19139, -32.7354, 0.22", "61.8922, -5.02982, -33.0319, 0.22", "62.481, -4.79715, -33.3881, 0.22", "63.0417, -4.58211, -33.6501, 0.08", "63.2477, -4.52053, -33.7321, 0.08", "63.7306, -4.44058, -33.9011, 0.22", "64.1919, -4.41908, -34.0293, 0.14", "64.8523, -4.38838, -34.145, 0.22", "65.2535, -4.35986, -34.2194, 0.08", "65.5007, -4.33626, -34.2656, 0.08", "66.0742, -4.2736, -34.3814, 0.08", "66.8566, -4.19916, -34.5462, 0.22", "68.2234, -4.08896, -34.8047, 0.14", "69.4617, -4.00599, -35.0253, 0.14", "69.9724, -3.97405, -35.1058, 0.36", "70.233, -3.95402, -35.1424, 0.44", "70.9573, -3.89271, -35.2112, 0.14", "71.5292, -3.84065, -35.21, 0.14", "71.9195, -3.80592, -35.1644, 0.14", "72.3681, -3.75277, -35.0681, 0.14", "72.9395, -3.67102, -34.9436, 0.58", "73.8045, -3.52455, -34.7626, 0.14", "74.763, -3.3435, -34.6442, 0.14", "75.062, -3.29762, -34.6349, 0.14", "75.5388, -3.23642, -34.6447, 0.58", "76.1548, -3.17921, -34.7256, 0.58", "76.5835, -3.16253, -34.8244, 0.58", "77.6772, -3.14864, -35.2119, 0.14", "78.5851, -3.15541, -35.5896, 0.14", "79.0942, -3.15038, -35.8096, 0.14", "80.2803, -3.106, -36.3362, 0.14", "80.9139, -3.07537, -36.6156, 0.14", "81.6319, -3.02909, -36.8995, 0.14", "82.3413, -2.95279, -37.1244, 0.14", "82.7214, -2.89491, -37.2335, 0.58", "82.9728, -2.84621, -37.2872, 0.74", "83.3848, -2.74218, -37.3318, 0.74", "84.3212, -2.50983, -37.3683, 0.14", "84.9429, -2.37487, -37.3597, 0.14", "85.2909, -2.31246, -37.3534, 0.14", "85.9788, -2.22625, -37.3573, 0.22", "86.3743, -2.18798, -37.3819, 0.22", "87.4604, -2.09497, -37.4978, 0.08", "87.6691, -2.08402, -37.5341, 0.08", "88.188, -2.06682, -37.6432, 0.82", "89.2098, -2.01865, -37.8756, 0.14", "89.9659, -1.94936, -38.0645, 0.14", "90.5277, -1.85327, -38.2243, 0.74", "91.5183, -1.59371, -38.5606, 0.22", "92.246, -1.34214, -38.8191, 0.3", "92.952, -0.999219, -39.0724, 0.3", "93.4465, -0.672082, -39.2838, 0.22", "93.9174, -0.291522, -39.5505, 0.14", "94.3344, 0.11028, -39.9009, 0.14", "94.6909, 0.517606, -40.3356, 0.14", "95.1115, 1.00529, -40.9691, 0.36", "95.5942, 1.57989, -41.8243, 0.36", "96.004, 2.05998, -42.6082, 0.58", "96.369, 2.48431, -43.3504, 0.58", "96.8004, 2.97987, -44.2329, 0.22", "97.1694, 3.37461, -44.9722, 0.36", "97.7141, 3.92457, -45.9876, 0.22", "98.0347, 4.25987, -46.5061, 0.22", "98.284, 4.52801, -46.8779, 0.22", "98.6359, 4.91313, -47.3544, 0.36", "99.1902, 5.51945, -48.0462, 0.22", "99.4242, 5.77657, -48.3234, 0.22", "99.7945, 6.09683, -48.6564, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-20.3791, 3.81829, -0.415772, 0.58", "-21.2778, 4.74652, -0.190822, 0.58", "-22.0909, 5.49663, 0.0983807, 0.36", "-22.7465, 6.03091, 0.408801, 0.58", "-23.3316, 6.48937, 0.768334, 0.82", "-23.83, 6.89276, 1.17107, 0.88", "-24.1077, 7.14421, 1.45277, 0.88", "-24.5788, 7.64691, 2.1561, 0.66", "-24.9359, 8.12941, 2.81961, 1.1", "-25.285, 8.71987, 3.56024, 1.1", "-25.7271, 9.62429, 4.57788, 0.66", "-26.1063, 10.507, 5.47072, 0.58", "-26.6035, 11.7277, 6.60548, 0.58", "-26.9193, 12.5087, 7.33686, 0.66", "-27.1622, 13.0564, 7.84484, 0.88", "-27.5156, 13.8156, 8.52179, 0.88", "-27.8598, 14.4843, 9.09891, 1.1", "-28.5676, 15.6406, 10.1257, 0.66", "-29.4514, 16.8111, 11.2772, 0.66", "-29.7133, 17.0905, 11.6279, 1.4" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-20.3791, 3.81829, -0.415772, 0.52", "-21.208, 3.62018, -0.660898, 0.52", "-22.3778, 3.55542, -0.847619, 0.58", "-22.9606, 3.61721, -0.901974, 0.88", "-23.7731, 3.80062, -0.949857, 0.74", "-24.6583, 4.06252, -0.981495, 0.52", "-25.7303, 4.40437, -1.0039, 0.66", "-26.9183, 4.85275, -0.951997, 0.52", "-27.8962, 5.24812, -0.852925, 0.36", "-28.5633, 5.51066, -0.775619, 0.52", "-29.385, 5.80507, -0.637397, 0.74", "-30.614, 6.16271, -0.388589, 0.82", "-31.7658, 6.4318, -0.140207, 0.74", "-32.3247, 6.50846, -0.0184689, 0.74", "-32.9576, 6.53553, 0.136735, 0.74", "-34.0605, 6.50702, 0.443096, 0.82", "-34.867, 6.44494, 0.716106, 0.82" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.5805, 5.08247, -5.38272, 1.48", "-12.7523, 5.68177, -6.43797, 1.48", "-12.9913, 6.51574, -7.90642, 1.48", "-13.0962, 6.88158, -8.5506, 0.96", "-13.2475, 7.40953, -9.48021, 0.96", "-13.3043, 7.60773, -9.82919, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.5805, 5.08247, -5.38272, 0.82", "-13.0054, 6.06443, -4.33758, 0.82", "-13.1851, 6.4364, -3.98624, 0.82", "-13.7355, 7.57542, -2.91035, 0.58", "-14.1477, 8.4286, -2.10447, 0.58", "-14.7627, 9.70127, -0.902354, 0.36", "-15.01, 10.2131, -0.418881, 0.36", "-15.3664, 10.7778, 0.0900408, 0.52" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "7.14826, 13.5985, -7.79936, 0.74", "6.93769, 14.5462, -7.47883, 0.74", "6.69175, 15.8666, -7.02651, 0.96", "6.53522, 17.165, -6.58398, 0.82", "6.48964, 18.0897, -6.26165, 0.58", "6.51471, 19.586, -5.7725, 0.58", "6.55531, 20.3031, -5.53609, 0.58", "6.64399, 20.9914, -5.29846, 0.44", "6.79833, 21.8018, -5.00665, 0.44", "6.9298, 22.4572, -4.769, 0.44", "7.10685, 23.2463, -4.49499, 0.22", "7.29314, 24.1339, -4.24128, 0.66", "7.46326, 25.0934, -3.93136, 0.88", "7.53043, 26.1634, -3.54774, 0.66", "7.45943, 27.0806, -3.19744, 0.44" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.14826, 13.5985, -7.79936, 0.22", "7.51113, 14.3804, -7.08671, 0.22", "7.79183, 15.7487, -6.23088, 0.22", "7.84827, 16.8827, -5.67303, 0.22", "7.8397, 17.7834, -5.21646, 0.22", "7.71544, 18.7683, -4.75059, 0.22", "7.48981, 19.7821, -4.24642, 0.3", "7.21172, 20.5257, -3.91794, 0.14", "6.79288, 21.2373, -3.61082, 0.22", "6.27799, 21.9213, -3.30115, 0.22", "5.36412, 22.873, -2.76029, 0.22", "4.7002, 23.4115, -2.3473, 0.22", "4.2396, 23.6984, -2.03442, 0.22", "3.56014, 24.0147, -1.55678, 0.22" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "19.3683, 25.9965, -3.14293, 0.74", "19.5888, 26.419, -4.39543, 0.74", "19.8265, 26.9632, -5.92177, 0.74", "20.048, 27.5037, -7.45231, 0.74", "20.2019, 27.8595, -8.48585, 0.74", "20.3087, 28.0611, -9.18827, 0.74", "20.3928, 28.1703, -9.6452, 0.74", "20.5581, 28.2579, -10.376, 0.74", "20.8157, 28.2719, -11.1697, 0.74", "20.9259, 28.2658, -11.4204, 0.74", "21.5655, 28.2657, -12.6885, 0.74", "21.9819, 28.2989, -13.4445, 0.52", "22.5495, 28.455, -14.5025, 0.52", "22.9127, 28.6853, -15.2028, 0.52", "23.3157, 29.2209, -16.1413, 0.52", "23.757, 29.976, -17.2563, 0.52", "23.8866, 30.2861, -17.6239, 0.74", "24.1414, 31.1913, -18.5783, 0.96", "24.3091, 32.1475, -19.439, 0.82", "24.4226, 33.3713, -20.466, 0.82" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "19.3683, 25.9965, -3.14293, 0.3", "20.0157, 27.2271, -2.51146, 0.3", "20.5396, 28.4339, -1.8198, 0.3", "20.9296, 29.5903, -1.10377, 0.22", "21.0944, 30.3426, -0.610027, 0.22", "21.2235, 31.3211, 0.0304261, 0.3", "21.2792, 32.153, 0.56022, 0.52", "21.2079, 33.0534, 1.1576, 0.52", "21.0574, 33.8323, 1.64319, 0.66", "20.7665, 34.9434, 2.34374, 0.36", "20.5624, 35.6863, 2.81642, 0.66", "20.3064, 36.5921, 3.37258, 0.52", "20.1253, 37.2963, 3.75556, 0.22", "20.0669, 37.5445, 3.86506, 0.22", "19.9811, 37.9637, 4.02394, 0.22", "19.8521, 38.6012, 4.29235, 0.22", "19.7601, 38.9308, 4.46983, 0.22", "19.5913, 39.3545, 4.74361, 0.66", "19.2136, 40.1678, 5.33563, 0.66", "18.8449, 40.9598, 5.92915, 0.3", "18.4704, 41.8114, 6.54818, 0.3", "18.1062, 42.7005, 7.15739, 0.22", "17.8766, 43.3428, 7.58662, 0.52", "17.6669, 44.0764, 8.09895, 0.52", "17.5224, 44.8243, 8.63488, 0.66", "17.4364, 45.5767, 9.17832, 0.36", "17.4015, 46.5074, 9.83654, 0.3", "17.4224, 47.5005, 10.5801, 0.22", "17.4513, 48.444, 11.4349, 0.22", "17.4385, 48.7407, 11.7846, 0.22", "17.3918, 49.054, 12.3017, 0.22", "17.337, 49.3025, 12.7922, 0.22", "17.2822, 49.5051, 13.2478, 0.36", "17.0484, 50.1188, 14.5297, 0.36", "16.8108, 50.5989, 15.4593, 0.52", "16.314, 51.5498, 17.1274, 0.52", "16.1098, 51.9036, 17.7338, 0.82", "15.8072, 52.3976, 18.6054, 0.82", "15.4278, 52.9885, 19.6426, 0.14", "14.9154, 53.7018, 20.8609, 0.14", "14.6794, 53.9678, 21.3601, 0.58", "14.1427, 54.4395, 22.3769, 0.36", "13.695, 54.7655, 23.3032, 0.36", "13.5135, 54.8819, 23.7624, 0.36", "13.3957, 54.9496, 24.2359, 0.36", "13.2696, 55.0578, 25.0945, 0.36", "13.2299, 55.1199, 25.596, 0.36", "13.2163, 55.1945, 26.1438, 0.36", "13.207, 55.3454, 27.2389, 0.36", "13.2055, 55.5027, 28.4681, 0.36", "13.1956, 55.6353, 29.7843, 0.36", "13.1653, 55.779, 31.361, 0.36", "13.123, 55.9247, 32.7346, 0.36", "13.0976, 56.0062, 33.3482, 0.36", "13.0285, 56.182, 34.7075, 0.36", "12.8338, 56.643, 38.2695, 0.36", "12.8037, 56.7094, 38.7845, 0.36", "12.7281, 56.902, 40.0785, 0.36", "12.6944, 57.0036, 40.6706, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "24.2614, 2.36397, 11.4439, 1.04", "26.1215, 1.49124, 9.65505, 1.04", "27.0056, 1.05291, 8.78429, 0.88", "27.8287, 0.631107, 7.9924, 0.82", "28.661, 0.223541, 7.22565, 0.74", "29.535, -0.152706, 6.43088, 0.52", "30.4891, -0.510566, 5.58115, 0.52", "31.4035, -0.822539, 4.88638, 0.66", "31.8615, -0.946299, 4.54207, 0.96", "32.7246, -1.09975, 3.89204, 0.58", "33.7413, -1.20198, 3.03989, 0.44", "34.4441, -1.20734, 2.36163, 0.44", "34.9505, -1.1566, 1.8188, 0.44", "35.7499, -1.00003, 0.894803, 0.52", "36.3095, -0.830003, 0.117336, 0.58", "37.0611, -0.508816, -1.14475, 0.58", "37.6348, -0.198746, -2.2976, 0.58", "38.0841, 0.0957737, -3.41216, 0.44", "38.2463, 0.206279, -3.88033, 0.44", "38.7143, 0.500461, -5.52287, 0.44", "38.9717, 0.588151, -6.52817, 0.44", "39.2707, 0.560261, -7.69939, 0.44", "39.6759, 0.339241, -9.27607, 0.44", "39.8625, 0.153638, -10.0748, 0.44", "40.061, -0.124575, -11.0179, 0.44", "40.2068, -0.392731, -11.7237, 0.3", "40.4215, -0.83491, -12.7248, 0.3", "40.7138, -1.41817, -13.9461, 0.22", "40.9099, -1.71933, -14.6231, 0.22", "41.0816, -1.91452, -15.1743, 0.3", "41.273, -2.06936, -15.7174, 0.3", "41.4735, -2.18927, -16.2777, 0.3", "41.7545, -2.31752, -16.9903, 0.3", "42.4329, -2.56442, -18.5926, 0.3", "43.0678, -2.70489, -20.0342, 0.3", "43.5505, -2.76055, -21.0481, 0.36", "44.1974, -2.76401, -22.2302, 0.36", "44.622, -2.72893, -22.8896, 0.36", "45.2076, -2.65702, -23.7292, 0.22", "46.5455, -2.44079, -25.4095, 0.08", "47.2557, -2.30222, -26.179, 0.08", "48.311, -2.07258, -27.2095, 0.08", "49.0357, -1.90531, -27.8191, 0.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.2614, 2.36397, 11.4439, 0.66", "25.0233, 2.26606, 12.893, 0.66", "26.6452, 2.05765, 15.9777, 0.44", "27.0775, 2.0021, 16.7999, 0.66", "27.1038, 1.99872, 16.8499, 0.66" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-0.917382, 3.92401, 40.6819, 0.3", "-0.479889, 4.28104, 41.7755, 0.3", "0.375627, 4.80488, 43.6916, 0.3", "1.38333, 5.28314, 45.6477, 0.22", "2.09106, 5.56649, 46.8792, 0.14", "2.84348, 5.85541, 48.0547, 0.14", "3.47763, 6.09411, 48.9546, 0.52", "4.33465, 6.33092, 50.007, 0.52", "4.99268, 6.46896, 50.6242, 0.52", "5.34572, 6.51471, 50.8921, 0.82", "6.11737, 6.58291, 51.4153, 0.36", "7.08829, 6.65254, 51.9632, 0.22", "8.07355, 6.71773, 52.455, 0.22", "8.66854, 6.75656, 52.6825, 0.58", "9.67801, 6.8201, 53.0942, 0.82", "10.1207, 6.85486, 53.2677, 0.82", "11.3105, 6.99719, 53.6776, 0.22", "12.3085, 7.17759, 53.9542, 0.3", "13.3084, 7.41185, 54.1431, 0.14", "14.8998, 7.89387, 54.3157, 0.14", "15.9941, 8.2738, 54.3444, 0.82", "17.3411, 8.78656, 54.2397, 0.14", "18.2406, 9.16001, 54.0735, 0.14", "19.4125, 9.69025, 53.7023, 0.96", "20.4736, 10.1776, 53.1988, 0.22", "21.1618, 10.5165, 52.7472, 0.22", "22.1789, 11.0705, 51.9477, 0.22", "22.465, 11.2479, 51.6757, 0.22", "23.105, 11.7037, 51.0046, 0.36", "23.5853, 12.092, 50.4815, 0.36", "24.1297, 12.5649, 49.8456, 0.66", "24.8431, 13.209, 48.9154, 0.22", "25.4788, 13.7544, 48.0602, 0.22", "25.9099, 14.1065, 47.4546, 0.66", "26.2611, 14.3837, 46.9676, 0.66", "27.1428, 15.0538, 45.8497, 0.22", "27.9754, 15.6478, 44.8704, 0.36", "28.7708, 16.2067, 44.0193, 0.14", "29.1697, 16.4786, 43.631, 0.14", "29.83, 16.9163, 43.0475, 0.96", "30.699, 17.4699, 42.3974, 0.14", "31.3872, 17.8769, 42.0076, 0.14", "32.0497, 18.2446, 41.6833, 0.52", "33.1192, 18.7756, 41.1702, 0.14", "33.8871, 19.0918, 40.7669, 0.3", "34.5851, 19.31, 40.369, 0.14", "35.4604, 19.4801, 39.8332, 0.44", "36.6529, 19.6222, 39.1145, 0.22", "37.5066, 19.6912, 38.5978, 0.52", "38.4107, 19.7625, 38.0786, 0.52", "38.6931, 19.7815, 37.9159, 0.52", "39.7642, 19.8552, 37.3326, 0.14", "40.3657, 19.9277, 37.0365, 0.14", "41.2642, 20.0852, 36.7062, 0.14", "41.8512, 20.2344, 36.5351, 0.3", "42.4758, 20.4379, 36.3942, 0.22", "43.1075, 20.6885, 36.2712, 0.22", "43.9064, 21.0608, 36.1564, 0.14", "44.701, 21.4376, 36.0287, 0.14", "45.3466, 21.7582, 35.9168, 0.14", "45.9815, 22.1078, 35.7949, 0.14", "46.6978, 22.5273, 35.6555, 0.36", "47.8192, 23.2086, 35.4453, 0.14", "48.6997, 23.744, 35.2884, 0.14", "49.2801, 24.1198, 35.1664, 0.66", "50.0602, 24.6401, 34.9714, 0.66" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-0.917382, 3.92401, 40.6819, 0.3", "-0.0267379, 3.17868, 41.3941, 0.3", "1.24855, 2.24325, 42.3844, 0.3", "1.70712, 1.94891, 42.7019, 0.66", "2.41258, 1.55348, 43.1243, 1.1", "3.4764, 1.00711, 43.7276, 0.22", "4.8815, 0.287977, 44.5776, 0.36", "5.6948, -0.108305, 45.08, 0.96", "6.65916, -0.559583, 45.6351, 1.04", "7.64128, -1.01813, 46.2233, 0.36", "8.89144, -1.61748, 47.0598, 0.22", "10.0099, -2.1987, 47.8761, 0.22", "10.5271, -2.50728, 48.2732, 0.58", "11.0861, -2.88237, 48.8044, 0.88", "11.8685, -3.45514, 49.7105, 0.14", "12.633, -4.00188, 50.758, 0.14", "12.8879, -4.15246, 51.1538, 0.14", "13.2053, -4.2859, 51.6598, 0.82", "13.9176, -4.47414, 52.8339, 0.82", "14.3087, -4.53569, 53.4921, 0.82", "15.2179, -4.57941, 54.9403, 0.36", "16.1492, -4.53251, 56.307, 0.82", "16.7892, -4.43354, 57.2236, 1.1", "18.0668, -4.10785, 59.0468, 0.22", "18.8657, -3.82481, 60.1247, 0.22", "19.3765, -3.5891, 60.808, 0.52", "19.794, -3.33154, 61.3527, 0.88", "20.7837, -2.57939, 62.59, 0.3", "21.5392, -1.92236, 63.475, 0.3", "22.0574, -1.4387, 64.0139, 0.88", "22.9358, -0.623424, 64.8498, 1.26", "24.1632, 0.509115, 65.9588, 0.22", "25.127, 1.38997, 66.73, 0.22", "25.8442, 2.06305, 67.2421, 0.36", "26.3325, 2.5175, 67.5942, 0.52", "26.8966, 3.01798, 68.0789, 0.52", "27.2259, 3.29225, 68.4278, 0.74", "27.8504, 3.74326, 69.2078, 0.14", "28.6775, 4.24191, 70.4055, 0.58", "29.4577, 4.62832, 71.6983, 1.04", "30.2879, 4.93628, 73.1384, 1.04", "31.3943, 5.19431, 75.0348, 0.36", "31.9222, 5.27697, 75.8968, 0.36", "32.5816, 5.32998, 76.9046, 0.22", "33.2823, 5.34797, 77.8576, 0.22", "33.6975, 5.35845, 78.3756, 0.74", "34.2623, 5.38806, 79.0331, 0.74", "35.246, 5.49215, 80.2465, 0.22", "35.6144, 5.57955, 80.7544, 0.22", "36.2773, 5.86806, 81.7025, 0.22", "36.5643, 6.07042, 82.2009, 0.22", "36.8722, 6.38067, 82.9839, 0.22", "37.2039, 6.79995, 84.1063, 0.22", "37.3162, 6.95364, 84.5399, 0.58", "37.5298, 7.23296, 85.3682, 0.88", "38.0845, 7.84522, 87.3315, 0.14", "38.757, 8.434, 89.6354, 0.14", "38.9332, 8.54728, 90.2417, 0.14", "39.2747, 8.69692, 91.5131, 0.3", "39.6439, 8.80239, 93.0667, 0.3", "39.7716, 8.83104, 93.7976, 0.3", "39.8559, 8.88852, 94.8307, 0.3", "39.8485, 9.03105, 96.1594, 0.3", "39.7371, 9.26662, 97.7047, 0.3", "39.6562, 9.38763, 98.2357, 0.3", "39.1791, 10.1027, 100.499, 0.3", "38.7436, 10.8069, 102.395, 0.22", "38.2871, 11.6772, 104.406, 0.22", "37.7729, 12.7388, 106.524, 0.22", "37.3281, 13.7328, 108.321, 0.36", "37.0495, 14.4034, 109.447, 0.36", "36.6565, 15.5057, 111.075, 0.36", "36.4729, 16.193, 111.986, 0.36", "36.3666, 16.8903, 112.847, 0.36", "36.3544, 17.8556, 114.055, 0.36", "36.4573, 18.2999, 114.505, 0.36", "36.7635, 18.8362, 114.873, 0.36", "37.4292, 19.4198, 115.082, 0.22", "38.3929, 19.9068, 115.162, 0.44", "39.0905, 20.1483, 115.167, 0.66", "40.4538, 20.5027, 115.105, 0.36", "41.169, 20.6432, 115.076, 0.66", "42.1147, 20.7632, 115.061, 0.36", "42.9352, 20.8084, 115.091, 0.36", "43.424, 20.8063, 115.144, 0.36", "43.8788, 20.7878, 115.219, 0.36", "44.6821, 20.746, 115.38, 0.82", "45.8187, 20.6599, 115.623, 0.14", "46.8502, 20.5679, 115.85, 0.14", "48.1826, 20.4042, 116.133, 0.14", "49.4283, 20.234, 116.375, 0.44", "50.8579, 20.0109, 116.624, 0.22", "51.5196, 19.8895, 116.724, 0.22", "52.2066, 19.7398, 116.805, 0.22", "53.0798, 19.5032, 116.809, 0.44", "54.073, 19.1881, 116.745, 0.22", "55.0043, 18.8282, 116.662, 0.22", "55.6609, 18.521, 116.581, 0.08", "56.2211, 18.2489, 116.49, 0.22", "57.604, 17.4982, 116.185, 0.14" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-44.5343, 56.2491, 35.0333, 0.22", "-44.1823, 57.435, 33.8225, 0.22", "-43.9772, 58.1258, 33.1173, 0.14", "-43.6795, 59.1291, 32.0928, 0.14", "-43.4584, 59.8742, 31.3322, 0.08", "-43.2395, 60.6117, 30.5791, 0.44" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-44.5343, 56.2491, 35.0333, 0.22", "-45.0205, 56.4454, 34.4276, 0.22", "-45.8557, 56.9776, 33.1439, 0.44", "-46.3983, 57.4938, 32.0178, 0.3", "-46.66, 57.814, 31.3936, 0.3", "-46.9559, 58.2124, 30.6632, 0.3", "-47.6049, 59.1237, 29.078, 0.22", "-47.9299, 59.6849, 28.1603, 0.22", "-48.3381, 60.547, 26.9036, 0.22", "-48.5147, 60.9369, 26.3746, 0.14", "-48.8058, 61.6158, 25.4969, 0.14", "-49.0074, 62.0544, 24.9425, 0.14", "-49.236, 62.4025, 24.5127, 0.14", "-49.6297, 62.8294, 23.9566, 0.58", "-50.3026, 63.4223, 23.2267, 0.58" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "88.3417, 52.2107, 41.9485, 0.22", "88.5869, 52.4548, 41.0169, 0.22", "88.7701, 52.6462, 40.3107, 0.36", "89.284, 53.1948, 38.2653, 0.58", "89.7124, 53.6481, 36.5813, 0.14", "90.0783, 54.0183, 35.1729, 0.22", "90.5105, 54.413, 33.5393, 0.44", "90.7763, 54.6539, 32.4618, 0.52", "91.1478, 54.9714, 30.9642, 0.66", "91.3125, 55.1174, 30.3263, 0.66", "91.5891, 55.3346, 29.3085, 0.66", "91.9242, 55.554, 28.1113, 0.66" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "88.3417, 52.2107, 41.9485, 0.3", "88.7691, 52.1729, 42.2817, 0.3", "89.9598, 52.1027, 43.1048, 0.22", "90.8168, 52.0474, 43.6258, 0.36", "91.4473, 51.9966, 43.99, 0.36", "92.0826, 51.9323, 44.3375, 0.22", "93.1181, 51.8007, 44.8864, 0.22", "93.7615, 51.681, 45.2013, 0.22", "94.4349, 51.4914, 45.4882, 0.3", "95.0481, 51.2751, 45.7575, 0.14", "95.4527, 51.0985, 45.9555, 0.52", "95.6858, 50.9595, 46.0867, 0.52", "96.1361, 50.6001, 46.4446, 0.14", "96.6318, 50.0938, 46.9922, 0.14", "97.028, 49.581, 47.6969, 0.14", "97.1282, 49.4171, 47.9717, 0.14", "97.2514, 49.1422, 48.5013, 0.52", "97.4082, 48.6244, 49.7959, 0.52", "97.4503, 48.2576, 51.0756, 0.44", "97.4195, 47.7831, 52.9099, 0.44", "97.347, 47.5149, 54.0566, 0.44", "97.2877, 47.3845, 54.7235, 0.58", "97.0658, 47.1289, 56.5606, 0.58", "96.8064, 47.0193, 58.1072, 0.58" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "34.3513, 44.2344, 52.584, 0.22", "34.9627, 44.8164, 52.6191, 0.22", "35.4935, 45.2811, 52.6825, 0.44", "35.9963, 45.6353, 52.7462, 0.22", "36.8111, 46.1016, 52.8827, 0.52", "37.5117, 46.4662, 53.0193, 0.22", "38.4641, 46.9484, 53.2401, 0.22", "39.2565, 47.3243, 53.4625, 0.44", "40.3819, 47.832, 53.8149, 0.44", "41.308, 48.2312, 54.1315, 0.3", "41.9464, 48.4824, 54.3698, 0.52", "42.6072, 48.7119, 54.6168, 0.52", "43.8304, 49.1113, 55.033, 0.22" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "34.3513, 44.2344, 52.584, 0.22", "34.0219, 44.203, 52.7645, 0.22", "32.6973, 44.1311, 53.4151, 0.44", "32.2019, 44.1293, 53.6333, 0.66", "31.2843, 44.1668, 54.0099, 0.3", "30.8207, 44.2004, 54.1944, 0.3", "29.3497, 44.3269, 54.7871, 0.74", "28.4642, 44.4279, 55.1161, 0.22", "27.7591, 44.5281, 55.3418, 0.22", "27.1537, 44.6174, 55.5572, 0.36", "26.6895, 44.6745, 55.6674, 0.36", "26.2829, 44.7093, 55.7027, 0.36", "25.5424, 44.7518, 55.6773, 0.66", "25.2268, 44.7692, 55.6627, 0.66", "23.7472, 44.8122, 55.5441, 0.3", "21.4549, 44.8478, 55.2561, 0.3", "20.4303, 44.8654, 55.0783, 0.44", "19.7414, 44.889, 54.924, 0.74", "19.1777, 44.921, 54.7703, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "7.93381, 34.3842, 0.123441, 0.22", "8.80367, 34.5842, -0.392149, 0.22", "9.60838, 34.8171, -0.985103, 0.14", "9.94918, 34.9235, -1.27808, 0.14", "10.6419, 35.1584, -1.98261, 0.3", "11.2292, 35.3665, -2.60441, 0.3", "11.6421, 35.5195, -3.0555, 0.3", "12.2984, 35.7987, -3.91212, 0.44", "12.7052, 36.0157, -4.53093, 0.44", "13.1287, 36.2521, -5.29048, 0.44", "13.3022, 36.3322, -5.60156, 0.44", "13.6455, 36.4548, -6.17209, 0.58", "14.0942, 36.5687, -6.84575, 0.58", "14.5942, 36.6527, -7.57005, 0.58", "15.2866, 36.6992, -8.5264, 0.58", "16.0158, 36.6883, -9.49352, 0.14", "16.3309, 36.6642, -9.92671, 0.14", "16.7388, 36.6121, -10.5019, 0.3", "17.4147, 36.5236, -11.435, 0.3", "17.793, 36.4805, -11.9444, 0.36", "18.2608, 36.4423, -12.5917, 0.36", "18.9415, 36.423, -13.6428, 0.22", "19.3804, 36.4413, -14.3189, 0.22", "19.6331, 36.4705, -14.7192, 0.22", "20.0047, 36.544, -15.2666, 0.36", "20.6897, 36.6906, -16.2588, 0.36", "21.1783, 36.806, -16.9874, 0.22", "21.7372, 36.9543, -17.8687, 0.3", "22.2435, 37.079, -18.737, 0.3", "22.483, 37.1273, -19.2044, 0.3", "23.0226, 37.215, -20.3834, 0.22", "23.4875, 37.2393, -21.5587, 0.3", "23.8505, 37.1579, -22.5232, 0.3", "24.1425, 36.9899, -23.2609, 0.3", "24.4187, 36.7616, -23.8394, 0.3", "24.5616, 36.6331, -24.0726, 0.3", "25.1962, 36.0358, -24.8119, 0.3", "26.0041, 35.2728, -25.4601, 0.14", "26.8152, 34.5663, -25.8676, 0.14", "27.5434, 34.0133, -26.0944, 0.14", "28.226, 33.5736, -26.2117, 0.14", "28.6311, 33.3574, -26.2205, 0.14", "29.306, 33.0698, -26.1408, 0.14", "30.3276, 32.7575, -25.8717, 0.36", "30.7497, 32.6769, -25.7196, 0.36", "31.5845, 32.5865, -25.3148, 0.22", "32.6551, 32.5811, -24.6994, 0.08", "33.2235, 32.655, -24.3512, 0.14", "34.2439, 32.961, -23.6251, 0.14", "34.834, 33.2298, -23.1874, 0.82", "35.9314, 33.8614, -22.3077, 0.22", "36.6516, 34.3683, -21.6973, 0.22", "37.2889, 34.8802, -21.1285, 0.88", "38.3428, 35.7624, -20.1968, 0.22", "38.8773, 36.2155, -19.7487, 0.14", "39.6112, 36.8362, -19.1182, 0.14", "40.3424, 37.455, -18.48, 0.36", "41.3398, 38.2392, -17.6219, 0.36", "42.0034, 38.7151, -17.0492, 0.14", "42.4506, 39.0039, -16.6868, 0.3", "43.1874, 39.478, -16.0417, 0.08", "43.8987, 39.96, -15.424, 0.08" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "7.93381, 34.3842, 0.123441, 0.3", "7.74936, 35.0332, 0.565467, 0.3", "7.52865, 36.4666, 1.73442, 0.36", "7.44213, 37.2057, 2.33413, 0.74", "7.35703, 38.0371, 2.97689, 0.74", "7.28666, 38.8252, 3.54233, 0.44", "7.20021, 40.0288, 4.34275, 0.44", "7.1992, 41.703, 5.36621, 0.44", "7.24682, 42.5034, 5.77076, 0.36", "7.29653, 43.187, 6.04936, 0.36", "7.36031, 44.0549, 6.27892, 0.36", "7.41807, 44.7598, 6.36993, 0.36", "7.455, 45.2375, 6.337, 0.36", "7.50528, 46.2011, 6.10746, 0.36", "7.54219, 47.4522, 5.7157, 0.36", "7.5139, 48.2867, 5.39463, 0.52", "7.43961, 48.9101, 5.1095, 0.44", "7.18927, 49.8978, 4.60034, 0.44", "6.82978, 50.7877, 4.11702, 0.44", "6.61149, 51.2011, 3.88414, 0.44", "6.30174, 51.7363, 3.63198, 0.66", "6.18693, 51.9227, 3.55265, 0.66", "5.77573, 52.5704, 3.34024, 0.3", "5.35792, 53.2506, 3.23455, 0.3", "5.01455, 53.8527, 3.21037, 0.3", "4.44831, 54.9111, 3.22004, 0.3", "4.07698, 55.7101, 3.30175, 0.3", "3.76964, 56.525, 3.43397, 0.3", "3.47776, 57.6163, 3.66298, 0.22", "3.33329, 58.2709, 3.78787, 0.44", "3.18726, 58.9139, 3.89774, 0.74", "2.90154, 60.2728, 4.03817, 0.3", "2.69266, 61.4144, 4.07098, 0.66", "2.4603, 62.5754, 3.95653, 0.36", "2.16112, 63.7191, 3.5966, 0.36", "1.85335, 64.6167, 3.27275, 0.3", "1.36996, 65.6391, 2.83829, 0.44", "1.11259, 66.0156, 2.67011, 0.66", "0.550049, 66.6492, 2.72441, 0.14", "0.0551644, 67.2635, 3.41757, 0.14", "-0.658033, 68.401, 5.28691, 0.14", "-0.814632, 68.7049, 5.77593, 0.52", "-1.0902, 69.3231, 6.79674, 1.04", "-1.44291, 70.4039, 8.6118, 0.36", "-1.55273, 70.8258, 9.30119, 0.82", "-1.84076, 71.92, 11.0072, 0.22", "-2.19338, 73.1501, 12.6408, 0.22", "-2.63784, 74.3487, 14.0839, 0.22", "-3.0909, 75.2411, 14.9211, 0.22", "-3.56019, 75.8175, 15.3053, 0.22", "-3.92573, 76.1791, 15.5217, 0.22", "-4.38639, 76.5402, 15.7006, 0.3", "-5.55337, 77.3226, 16.1626, 0.22", "-6.25931, 77.6834, 16.2355, 0.44", "-7.37104, 78.1305, 16.2556, 0.58" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-1.63186, 25.7156, 46.027, 0.3", "-1.13742, 26.8128, 46.6419, 0.3", "-0.708767, 27.7586, 47.2021, 0.3", "-0.491547, 28.2159, 47.4641, 0.3", "-0.232995, 28.6896, 47.7281, 0.52", "0.0248814, 29.1441, 47.9954, 0.88", "0.818812, 30.5478, 48.8364, 0.22", "1.06586, 31.0345, 49.1334, 0.58", "1.32379, 31.5717, 49.4499, 0.74", "1.854, 32.6988, 50.2246, 0.3", "2.17067, 33.3633, 50.7433, 0.3", "2.25533, 33.5301, 50.8775, 0.3", "2.5476, 34.094, 51.3103, 0.66", "2.89929, 34.6996, 51.7717, 0.3", "3.65281, 35.8186, 52.6071, 0.44", "4.05926, 36.3101, 52.9928, 0.44", "4.79296, 37.0851, 53.6551, 0.58", "5.20977, 37.4781, 54.0473, 0.58", "5.75408, 37.917, 54.5621, 0.74", "6.19611, 38.2316, 54.9418, 0.74", "7.32901, 38.9664, 55.8263, 0.44", "8.49443, 39.6557, 56.7107, 0.44", "9.38982, 40.0979, 57.3599, 0.44", "10.1752, 40.4003, 57.8382, 0.44", "11.2946, 40.7448, 58.3413, 0.74", "11.7959, 40.863, 58.4663, 1.04", "12.5323, 40.9765, 58.5165, 1.48", "13.7442, 41.1126, 58.5466, 0.82", "14.7185, 41.2319, 58.5689, 0.36", "15.7208, 41.3955, 58.6235, 0.22", "16.9436, 41.6392, 58.7621, 0.14", "18.1353, 41.9196, 58.9101, 0.14", "19.0684, 42.1834, 59.0316, 0.14", "19.9373, 42.499, 59.1737, 0.66", "21.0639, 42.9872, 59.269, 0.14", "21.5606, 43.2395, 59.2523, 0.14", "22.4144, 43.7284, 59.1855, 0.3", "23.3, 44.2951, 59.0549, 0.14", "24.3874, 45.0182, 58.7837, 0.3", "26.4185, 46.4137, 58.1015, 0.22", "27.2676, 47.02, 57.6978, 0.3" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-1.63186, 25.7156, 46.027, 0.74", "-1.90548, 25.9345, 46.6022, 0.74", "-2.3618, 26.2449, 47.6665, 0.74", "-2.66673, 26.4175, 48.487, 0.3", "-3.04004, 26.5993, 49.6706, 0.3", "-3.41768, 26.7596, 51.13, 0.3", "-3.76157, 26.8747, 52.6908, 0.3", "-3.99986, 26.9063, 54.0928, 0.3", "-4.23657, 26.8565, 55.5558, 0.3", "-4.53094, 26.7393, 57.1257, 0.3", "-4.81684, 26.5868, 58.6441, 0.3", "-5.08521, 26.405, 60.133, 0.3", "-5.24587, 26.2648, 61.0671, 0.3", "-5.46623, 26.0891, 62.1872, 0.52", "-5.89187, 25.8399, 63.7263, 1.04" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "49.8838, 8.48862, 62.2172, 0.22", "50.3803, 8.77179, 62.961, 0.22", "51.3686, 9.42208, 64.5302, 0.14", "52.0009, 9.90924, 65.5639, 0.52", "52.2978, 10.1374, 66.0799, 0.52", "52.7936, 10.517, 67.0081, 0.14", "53.3703, 10.9447, 68.1486, 0.14", "53.6857, 11.1842, 68.7921, 0.14", "54.2996, 11.5842, 69.9792, 0.96", "55.2455, 12.0199, 71.7152, 0.44", "56.0191, 12.2301, 73.087, 0.44", "56.6532, 12.3268, 74.1901, 0.44", "57.1476, 12.3657, 75.0498, 0.88", "57.8844, 12.3703, 76.3979, 1.1", "58.9459, 12.2623, 78.4151, 0.44", "59.6894, 12.1137, 79.9443, 0.88", "60.6145, 11.8158, 82.0586, 0.3", "61.1747, 11.5454, 83.5024, 0.3", "61.6735, 11.1872, 85.0358, 0.3", "62.0258, 10.8102, 86.3017, 0.14", "62.4669, 10.0712, 88.1473, 0.14", "62.6471, 9.62872, 89.0105, 0.14", "62.7705, 9.12784, 89.7383, 0.82", "62.9043, 8.39599, 90.6995, 0.82", "62.9671, 8.07077, 91.1412, 0.82", "63.1287, 7.52545, 92.1384, 0.3", "63.2435, 7.27781, 92.7408, 0.3", "63.5519, 6.90628, 94.0262, 0.96", "63.9524, 6.65239, 95.4911, 0.96", "64.5252, 6.51965, 97.2504, 0.58", "65.5392, 6.58133, 99.9154, 0.58", "65.7394, 6.65288, 100.341, 0.58", "66.2974, 6.97518, 101.285, 0.3", "66.7989, 7.35931, 101.878, 0.3", "67.351, 7.85318, 102.286, 0.66", "67.799, 8.31431, 102.508, 0.66", "68.7604, 9.37523, 102.848, 0.22", "69.255, 9.95422, 103.03, 0.52", "69.784, 10.6187, 103.23, 1.1", "70.3783, 11.3826, 103.438, 0.44", "71.5585, 12.9666, 103.867, 0.22", "71.8988, 13.4422, 103.983, 0.22", "72.3273, 14.0808, 104.094, 0.22", "72.7542, 14.8122, 104.161, 0.66", "73.0853, 15.5281, 104.152, 0.22", "73.382, 16.3631, 104.03, 0.58", "73.6646, 17.3712, 103.756, 0.14", "73.9285, 18.4139, 103.471, 0.14", "74.1208, 19.1481, 103.269, 0.3", "74.3531, 19.9514, 103.041, 0.08", "74.6395, 20.7185, 102.816, 0.08", "74.9681, 21.4767, 102.607, 0.44", "75.4224, 22.264, 102.446, 0.14", "75.8932, 22.8781, 102.382, 0.22", "76.2306, 23.1895, 102.347, 0.08", "77.0339, 23.6723, 102.297, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "49.8838, 8.48862, 62.2172, 0.14", "50.5612, 9.01873, 62.2172, 0.14", "51.0429, 9.39136, 62.2172, 0.14", "51.7828, 9.96366, 62.2172, 0.36", "52.4914, 10.5118, 62.2172, 0.14", "52.9391, 10.8581, 62.2172, 0.36", "53.437, 11.2432, 62.2172, 0.14", "54.1168, 11.6946, 62.2172, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "1.73999, -17.9242, 23.2854, 0.52", "2.11042, -18.5726, 24.1059, 0.52", "2.2672, -18.9659, 24.525, 0.36", "2.52821, -19.9897, 25.5206, 0.36", "2.56506, -20.3363, 25.8216, 0.36", "2.56153, -20.7575, 26.1871, 0.36", "2.54237, -21.0313, 26.437, 0.36", "2.44799, -21.4502, 26.8632, 0.36", "2.36075, -21.8021, 27.2189, 0.36", "2.279, -22.2559, 27.6472, 0.22", "2.27932, -22.888, 28.2908, 0.22", "2.3544, -23.2729, 28.7224, 0.22", "2.53333, -23.7063, 29.269, 0.22", "2.71625, -24.0063, 29.6667, 0.52", "2.97281, -24.3252, 30.0823, 0.74", "3.60393, -24.9546, 30.8403, 0.44", "3.99714, -25.3217, 31.1611, 0.44", "4.72305, -26.0185, 31.6785, 0.14", "4.94899, -26.2483, 31.83, 0.22", "5.24851, -26.5704, 32.0241, 0.96", "5.83565, -27.277, 32.4223, 1.4", "6.73904, -28.5566, 33.1663, 0.14", "7.22109, -29.466, 33.7089, 0.14", "7.36028, -29.9258, 34.0041, 0.14", "7.42536, -30.459, 34.4156, 0.44", "7.39889, -31.5674, 35.3666, 0.14", "7.26569, -32.4274, 36.2132, 0.36", "7.0999, -33.1007, 36.9373, 1.4", "6.79634, -34.2292, 38.1803, 0.22", "6.53627, -35.1457, 39.2407, 0.22", "6.46356, -35.3939, 39.5215, 0.44", "6.28228, -36.0242, 40.1851, 0.44", "6.19576, -36.4072, 40.569, 0.14", "6.12428, -36.8931, 41.0665, 0.14", "6.12981, -37.4109, 41.5406, 0.14", "6.16196, -38.3642, 42.1689, 0.14", "6.15545, -39.2898, 42.7301, 0.88" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "1.73999, -17.9242, 23.2854, 0.88", "1.04839, -18.1262, 23.7998, 0.88", "-0.17716, -18.4916, 24.6871, 0.44", "-1.18277, -18.8219, 25.5088, 0.44", "-1.58721, -18.9647, 25.8518, 0.74", "-2.42632, -19.2858, 26.6182, 1.04", "-3.54128, -19.7463, 27.7437, 0.22", "-4.3958, -20.1457, 28.8019, 0.44", "-5.24416, -20.5831, 29.9514, 0.44", "-5.48312, -20.7082, 30.2792, 0.66", "-6.09331, -20.998, 31.1338, 1.04", "-6.73921, -21.2721, 32.0375, 1.04", "-7.83783, -21.6804, 33.5167, 1.04", "-8.55503, -21.8772, 34.3292, 0.3", "-9.47474, -22.0255, 35.1992, 0.22", "-10.6178, -22.1197, 36.2144, 0.22", "-11.0913, -22.129, 36.6056, 0.44", "-11.4387, -22.1171, 36.8872, 0.96", "-11.9113, -22.0667, 37.3104, 0.96", "-12.8051, -21.8804, 38.3605, 0.22", "-13.54, -21.649, 39.3091, 0.44", "-14.1853, -21.411, 40.1204, 0.88", "-14.7764, -21.1682, 40.8226, 1.1", "-15.737, -20.7429, 41.8683, 0.44", "-17.0312, -20.1358, 43.0942, 0.22", "-18.2064, -19.5655, 43.9734, 0.22", "-19.0663, -19.1465, 44.4784, 0.36", "-19.9398, -18.7291, 44.8753, 0.36", "-21.0716, -18.2131, 45.2707, 0.36", "-22.008, -17.7971, 45.4379, 0.36", "-23.2719, -17.2694, 45.5117, 0.82", "-24.7393, -16.6836, 45.5449, 1.32", "-25.4035, -16.4172, 45.5396, 1.1", "-26.4438, -15.9842, 45.4948, 0.52", "-28.1926, -15.2693, 45.8372, 0.22", "-29.3795, -14.766, 46.4201, 0.22", "-29.8381, -14.5585, 46.7432, 0.44", "-30.2923, -14.3432, 47.1309, 1.18", "-30.9165, -14.0481, 47.772, 1.26", "-33.7779, -12.7629, 51.153, 0.22", "-34.4345, -12.4965, 52.0316, 0.22", "-34.8617, -12.3345, 52.6353, 0.22", "-35.3643, -12.1718, 53.3637, 0.22", "-35.7836, -12.0552, 53.973, 0.22", "-36.0283, -11.9934, 54.306, 0.52", "-36.7598, -11.8042, 55.098, 1.04", "-37.0979, -11.7259, 55.4678, 1.04", "-38.2204, -11.4635, 56.7045, 0.3", "-39.1441, -11.1877, 57.7559, 0.3", "-39.6948, -10.9717, 58.4229, 0.3", "-40.2253, -10.7022, 59.1091, 0.36", "-40.8587, -10.3013, 60.0303, 0.82", "-41.3022, -9.96856, 60.7887, 1.26", "-41.9075, -9.46482, 61.9527, 0.22", "-42.3477, -9.11949, 62.8374, 0.22", "-42.6745, -8.88991, 63.5078, 0.82", "-43.2313, -8.54294, 64.597, 0.82", "-44.0215, -8.11236, 66.0558, 0.82", "-44.9035, -7.73068, 67.5129, 0.3", "-45.5298, -7.53373, 68.3441, 0.14", "-46.1744, -7.3865, 69.0004, 0.14", "-46.7344, -7.28765, 69.4677, 0.14", "-47.588, -7.1527, 70.0275, 0.14", "-48.3609, -7.03819, 70.4335, 0.58", "-49.2775, -6.86463, 70.8808, 0.58", "-50.3046, -6.61012, 71.4258, 0.22", "-51.5094, -6.27843, 72.1308, 0.22", "-52.0074, -6.13263, 72.4669, 0.58", "-52.5121, -5.98177, 72.8174, 0.96", "-53.8382, -5.57262, 73.8191, 0.22", "-55.088, -5.16351, 74.7912, 0.22", "-56.174, -4.79999, 75.6306, 0.22", "-57.3207, -4.43552, 76.4739, 0.22", "-58.463, -4.09589, 77.3011, 0.22", "-60.0024, -3.69886, 78.3582, 0.22", "-60.6157, -3.57901, 78.7248, 0.22", "-61.3325, -3.47637, 79.1157, 0.22", "-61.7985, -3.43929, 79.3656, 0.44", "-62.1698, -3.44512, 79.5966, 0.44", "-62.6398, -3.50471, 79.9942, 0.44", "-63.4085, -3.65347, 80.7659, 0.14", "-64.1335, -3.77699, 81.6779, 0.52", "-64.6644, -3.84279, 82.4563, 0.52", "-65.2517, -3.88378, 83.4078, 0.52", "-65.7618, -3.92161, 84.2905, 0.52", "-66.019, -3.94525, 84.7864, 0.36", "-66.6989, -4.05136, 86.1656, 0.36", "-67.0593, -4.1199, 86.8565, 0.36", "-67.6046, -4.23359, 87.8755, 0.22", "-68.1021, -4.34905, 88.7706, 0.22", "-68.8494, -4.54263, 90.1314, 0.22", "-69.2533, -4.63899, 90.8197, 0.22", "-69.7231, -4.73443, 91.5419, 0.36", "-70.4875, -4.84624, 92.6761, 0.74", "-70.914, -4.89569, 93.2678, 0.74", "-71.4266, -4.938, 93.9505, 0.74", "-72.1411, -4.98305, 94.8725, 0.14", "-72.7743, -5.01074, 95.8132, 0.14", "-73.0894, -5.02688, 96.2958, 0.14", "-73.3806, -5.03693, 96.7295, 0.44", "-73.9781, -5.02929, 97.5979, 0.44", "-74.8303, -4.97727, 98.8694, 0.22", "-75.6152, -4.87149, 100.07, 0.22", "-76.1341, -4.73826, 100.809, 0.66", "-76.6247, -4.57108, 101.403, 0.88", "-77.5021, -4.23171, 102.316, 0.22", "-78.5828, -3.81063, 103.217, 0.22", "-79.0427, -3.63545, 103.513, 0.88", "-79.4821, -3.46651, 103.758, 0.88", "-80.6058, -3.04034, 104.417, 0.22", "-81.3969, -2.76606, 104.862, 0.52", "-81.828, -2.63893, 105.099, 0.52", "-82.5798, -2.46034, 105.552, 0.14", "-83.59, -2.25667, 106.26, 0.52", "-84.3793, -2.11661, 106.858, 0.52", "-84.8722, -2.03359, 107.252, 0.52", "-85.9354, -1.84312, 108.066, 0.22", "-86.9401, -1.64063, 108.888, 0.22", "-87.4119, -1.53238, 109.283, 0.22", "-87.9784, -1.37659, 109.721, 0.52", "-88.3948, -1.2356, 110.01, 0.74", "-88.9027, -1.04652, 110.308, 0.22", "-90.0562, -0.585317, 110.95, 0.22", "-90.5426, -0.40366, 111.259, 0.22", "-90.927, -0.262979, 111.585, 0.44", "-91.48, -0.0687814, 112.146, 0.44", "-92.178, 0.161778, 112.911, 0.22", "-93.241, 0.473191, 114.0, 0.22", "-94.2076, 0.703652, 114.902, 0.58", "-95.2329, 0.913824, 115.849, 0.82", "-95.543, 0.984801, 116.152, 0.82", "-96.2977, 1.21822, 116.927, 0.22", "-97.2922, 1.65356, 117.996, 0.22", "-97.8512, 1.97715, 118.592, 0.22", "-98.0673, 2.13269, 118.841, 0.66", "-98.7009, 2.62166, 119.73, 0.66", "-99.1032, 2.95156, 120.379, 0.22", "-99.5998, 3.35965, 121.261, 0.44", "-100.071, 3.73023, 122.08, 0.44", "-100.554, 4.08902, 122.776, 0.22", "-101.304, 4.53535, 123.611, 0.22", "-101.679, 4.69906, 123.901, 0.22", "-102.047, 4.82098, 124.109, 0.74", "-102.761, 5.02718, 124.379, 0.74", "-103.601, 5.24847, 124.655, 0.22", "-104.556, 5.47955, 125.044, 0.22", "-104.99, 5.58065, 125.262, 0.22", "-105.299, 5.66001, 125.484, 0.52", "-105.668, 5.77291, 125.835, 0.96", "-106.679, 6.12164, 126.964, 0.3", "-107.431, 6.40609, 127.892, 0.44", "-107.898, 6.6017, 128.481, 0.96", "-108.849, 7.06101, 129.765, 0.22", "-109.368, 7.33555, 130.47, 0.22", "-109.737, 7.53881, 130.946, 0.58", "-110.015, 7.69727, 131.266, 0.96", "-111.028, 8.19741, 132.321, 0.22", "-111.983, 8.55519, 133.336, 0.22", "-112.394, 8.64934, 133.809, 0.22", "-112.875, 8.69837, 134.453, 0.66", "-113.242, 8.68497, 135.024, 0.66", "-114.052, 8.51663, 136.525, 0.3", "-114.728, 8.17942, 138.137, 0.3", "-115.177, 7.78437, 139.566, 0.3", "-115.434, 7.39459, 140.891, 0.3", "-115.481, 7.20299, 141.527, 0.3", "-115.436, 6.9294, 142.419, 0.3", "-115.251, 6.64448, 143.325, 0.3", "-115.11, 6.48841, 143.863, 0.3", "-115.038, 6.3837, 144.343, 0.3", "-115.049, 6.31102, 144.828, 0.3", "-115.106, 6.22154, 145.55, 0.3", "-115.277, 6.08427, 146.666, 0.3", "-115.556, 5.89555, 148.026, 0.3", "-115.869, 5.65558, 149.395, 0.3", "-116.249, 5.29245, 151.075, 0.3" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "8.2977, -23.2626, -4.73942, 0.52", "8.64134, -24.2797, -4.04633, 0.52", "9.02173, -25.2832, -3.43478, 0.52", "9.29201, -25.8863, -3.09708, 0.74", "9.44387, -26.1889, -2.9474, 0.74", "9.80582, -26.8664, -2.65412, 0.44", "9.98866, -27.2232, -2.51703, 0.44", "10.2665, -27.7621, -2.40756, 0.44", "10.4701, -28.2062, -2.33859, 0.44", "10.7265, -28.778, -2.2285, 0.22", "10.9461, -29.2526, -2.12903, 0.44", "11.1765, -29.7259, -2.02803, 0.44", "11.405, -30.1797, -1.94118, 0.44", "11.9312, -31.1798, -1.7514, 0.44", "12.1699, -31.5976, -1.65656, 0.22", "12.4451, -32.0387, -1.50627, 0.22", "12.7589, -32.5223, -1.30582, 0.44", "13.1434, -33.092, -1.03757, 0.14", "13.5048, -33.6592, -0.757201, 0.52", "13.8984, -34.356, -0.393962, 0.14", "14.3144, -35.2383, 0.0832561, 0.14", "14.4869, -35.6707, 0.320228, 0.14", "14.5637, -35.8838, 0.439044, 0.14", "14.8211, -36.5673, 0.814661, 0.74", "15.2173, -37.4994, 1.27378, 0.14", "15.4698, -38.0075, 1.49582, 0.58", "15.8144, -38.5829, 1.71848, 0.14", "15.8956, -38.6953, 1.765, 0.14", "16.3177, -39.1833, 1.95846, 0.36", "16.7715, -39.6532, 2.12282, 0.14", "17.2466, -40.1316, 2.25052, 0.44", "17.6061, -40.5012, 2.37645, 1.04", "17.8685, -40.7913, 2.49939, 1.04", "18.5134, -41.5313, 2.84711, 0.14", "19.283, -42.4135, 3.28638, 0.14", "19.8453, -43.0506, 3.64278, 1.18", "20.7482, -44.0834, 4.3194, 0.08", "21.3709, -44.8103, 4.89662, 0.08", "21.635, -45.1218, 5.1734, 0.66", "22.0445, -45.6044, 5.64261, 0.82", "22.7477, -46.4229, 6.41635, 0.08", "23.5392, -47.3131, 7.24186, 0.14", "24.0502, -47.8606, 7.74564, 0.14", "24.4522, -48.2711, 8.1235, 1.26", "24.8244, -48.6527, 8.46183, 1.18", "25.7641, -49.6106, 9.29598, 0.36", "26.8791, -50.6811, 10.1582, 0.08", "27.6335, -51.3631, 10.6657, 0.52", "27.9842, -51.6712, 10.8994, 0.52", "28.5735, -52.1678, 11.3396, 0.3" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "8.2977, -23.2626, -4.73942, 0.36", "8.15493, -23.4854, -5.18938, 0.36", "7.78359, -24.0516, -6.25225, 0.22", "7.32305, -24.7846, -7.47129, 0.22", "6.91757, -25.4243, -8.53757, 0.22", "6.62953, -25.8879, -9.34576, 0.22", "6.47925, -26.1321, -9.78481, 0.44", "6.22268, -26.5375, -10.5212, 0.96", "5.74754, -27.2117, -11.7336, 0.36", "5.11988, -28.026, -13.1464, 0.74", "4.66648, -28.556, -14.0207, 0.74", "4.43284, -28.8098, -14.4184, 0.74", "3.8325, -29.4161, -15.2485, 0.14", "3.2399, -29.9615, -15.8034, 0.14", "2.78662, -30.3253, -16.0268, 0.14", "1.84288, -31.0358, -16.1693, 0.14", "1.28374, -31.4379, -16.1558, 0.58", "0.417049, -32.0514, -16.041, 0.58", "-0.391099, -32.5963, -15.8648, 0.66", "-1.1983, -33.1101, -15.6516, 0.22", "-1.93438, -33.5203, -15.4629, 0.22", "-2.51433, -33.7741, -15.2964, 0.58", "-2.93859, -33.9254, -15.148, 0.58", "-3.97486, -34.2543, -14.6966, 0.22", "-4.44595, -34.397, -14.4231, 0.22", "-4.96321, -34.5586, -14.0442, 0.58", "-5.89331, -34.8321, -13.219, 0.22", "-6.70846, -35.0356, -12.3905, 0.22", "-7.2689, -35.1477, -11.7866, 0.36", "-7.8705, -35.2567, -11.111, 0.82", "-8.94394, -35.4464, -9.93618, 0.36", "-9.93165, -35.5869, -8.90677, 0.58", "-10.713, -35.6549, -8.1737, 0.96", "-11.2492, -35.6559, -7.72802, 0.3", "-11.6143, -35.6358, -7.43345, 0.3", "-11.9555, -35.603, -7.15324, 0.3", "-13.1602, -35.4719, -6.17401, 0.14", "-13.6936, -35.435, -5.72643, 0.52", "-14.0032, -35.43, -5.43969, 0.96", "-15.1527, -35.4791, -4.31058, 0.58", "-15.8052, -35.5357, -3.66532, 0.44", "-16.1432, -35.5955, -3.34407, 0.44", "-16.6919, -35.7903, -2.86548, 0.44", "-17.0014, -35.9303, -2.61269, 0.44", "-17.4274, -36.1452, -2.28703, 0.88", "-17.8286, -36.3499, -2.01664, 1.32", "-18.4125, -36.6605, -1.6236, 1.04", "-19.2817, -37.1339, -1.02735, 0.22", "-19.9734, -37.5063, -0.563519, 0.22", "-20.489, -37.7749, -0.20103, 0.52", "-20.9556, -38.0128, 0.158284, 1.1", "-21.1737, -38.1226, 0.339854, 1.1" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "99.7945, 6.09683, -48.6564, 0.22", "100.386, 6.28963, -49.395, 0.22", "101.011, 6.49308, -50.0939, 0.22", "101.827, 6.76617, -50.9289, 0.14", "102.435, 6.94556, -51.5539, 0.14", "102.736, 7.01437, -51.8698, 0.44", "103.002, 7.06498, -52.1425, 0.74", "103.337, 7.1156, -52.4815, 0.82", "104.348, 7.29327, -53.3894, 0.22", "105.087, 7.49881, -53.9709, 0.22", "105.676, 7.74082, -54.3938, 0.22", "105.997, 7.92989, -54.6202, 0.44", "106.494, 8.34001, -54.9395, 0.3", "106.891, 8.78567, -55.128, 0.66", "107.44, 9.60546, -55.2828, 0.14", "107.727, 10.1089, -55.3343, 0.14", "107.979, 10.5855, -55.3625, 0.36", "108.256, 11.0826, -55.3846, 0.36", "108.733, 11.8783, -55.3931, 0.22", "109.239, 12.6461, -55.3878, 0.3", "109.733, 13.3029, -55.3636, 0.44", "110.165, 13.7959, -55.3313, 0.22", "110.753, 14.3743, -55.2732, 0.14", "111.16, 14.7269, -55.2112, 0.14", "111.374, 14.8824, -55.1633, 0.14", "111.979, 15.2188, -55.0004, 0.14", "112.451, 15.4288, -54.8733, 0.14", "112.988, 15.6364, -54.7346, 0.14", "113.69, 15.8717, -54.5546, 0.14", "114.331, 16.0437, -54.4042, 0.14", "115.098, 16.2417, -54.1916, 0.3", "115.441, 16.3269, -54.0669, 0.3", "115.822, 16.4337, -53.8994, 0.08", "116.116, 16.5439, -53.7232, 0.08", "116.504, 16.7409, -53.4203, 0.36", "117.233, 17.221, -52.7446, 0.14", "117.81, 17.6972, -52.1542, 0.14", "118.057, 17.9388, -51.8657, 0.44", "118.641, 18.5509, -51.0775, 0.3", "119.014, 18.9368, -50.5566, 0.22", "119.31, 19.2358, -50.1419, 0.3", "119.738, 19.6311, -49.59, 0.22", "120.492, 20.2851, -48.6996, 0.14", "121.212, 20.8379, -47.9173, 0.14", "121.729, 21.1885, -47.4226, 0.14", "121.921, 21.3061, -47.2512, 0.14", "122.201, 21.4594, -47.0276, 0.66", "122.499, 21.6054, -46.8375, 1.04", "123.765, 22.1886, -46.3166, 0.14", "124.162, 22.367, -46.2006, 0.14", "124.705, 22.5844, -46.0647, 0.14", "125.264, 22.7579, -45.9479, 0.22", "125.886, 22.8894, -45.8499, 0.22", "126.635, 22.9711, -45.8054, 0.14", "126.993, 22.9761, -45.8248, 0.44", "127.423, 22.9849, -45.838, 0.44", "128.077, 23.0171, -45.845, 0.14", "128.622, 23.0739, -45.8408, 0.14", "129.293, 23.1979, -45.8041, 0.44", "129.713, 23.3219, -45.7658, 0.44", "130.68, 23.6873, -45.6796, 0.22", "131.197, 23.9179, -45.642, 0.52", "131.763, 24.2139, -45.6043, 0.88", "132.69, 24.7601, -45.5382, 0.14", "133.272, 25.1286, -45.485, 0.14", "133.73, 25.418, -45.4528, 0.14", "134.459, 25.8522, -45.3849, 0.14", "135.082, 26.2123, -45.2466, 0.36", "135.483, 26.4631, -45.1023, 0.36", "136.116, 26.9662, -44.7905, 0.14", "136.642, 27.4829, -44.468, 0.14", "137.243, 28.1953, -43.9884, 0.3", "137.891, 29.0796, -43.3594, 0.52", "138.365, 29.7564, -42.8376, 0.96", "138.962, 30.6177, -42.1256, 0.22", "139.362, 31.2228, -41.5908, 0.22", "139.817, 31.9298, -40.9529, 0.22", "140.107, 32.3752, -40.5742, 0.22", "140.516, 32.9447, -40.0951, 0.3", "140.905, 33.4237, -39.6139, 0.3", "141.286, 33.8534, -39.1364, 0.3", "141.869, 34.4957, -38.4229, 0.22", "142.284, 34.9435, -37.9581, 0.36", "142.896, 35.6223, -37.3063, 0.22", "143.631, 36.4592, -36.5804, 0.22", "143.995, 36.8735, -36.2393, 0.3", "144.357, 37.2654, -35.9148, 0.3", "144.667, 37.5726, -35.6247, 0.3", "145.003, 37.8714, -35.3053, 0.22", "145.716, 38.4477, -34.6376, 0.66", "146.365, 38.922, -34.0741, 0.14", "147.076, 39.3807, -33.475, 0.22", "147.778, 39.788, -32.9226, 0.22", "148.154, 39.9825, -32.659, 0.22", "148.763, 40.2268, -32.3156, 0.3", "149.299, 40.3939, -32.1086, 0.52", "150.055, 40.6164, -31.9761, 0.82", "150.643, 40.8078, -31.9698, 0.3", "151.308, 41.0571, -32.0186, 0.22", "152.139, 41.3924, -32.0993, 0.22", "152.833, 41.6782, -32.1742, 0.22", "153.908, 42.1065, -32.2708, 0.22", "154.718, 42.3974, -32.3103, 0.22", "155.522, 42.6182, -32.3061, 0.22", "156.002, 42.7047, -32.2437, 0.22", "156.442, 42.7445, -32.1406, 0.22", "156.989, 42.7588, -31.966, 0.22", "157.579, 42.7478, -31.7369, 0.22", "158.392, 42.7276, -31.4356, 0.14", "159.394, 42.7794, -31.1023, 0.44", "159.97, 42.881, -30.9347, 0.82", "160.564, 43.0442, -30.7896, 0.22", "160.97, 43.1964, -30.7145, 0.22", "161.648, 43.5058, -30.6321, 0.44", "162.465, 43.9014, -30.6215, 0.14", "163.078, 44.1933, -30.677, 0.14", "163.694, 44.4741, -30.7547, 0.3", "164.522, 44.8488, -30.8824, 0.14", "164.883, 45.0229, -30.945, 0.22", "165.843, 45.5064, -31.1272, 0.08", "166.308, 45.7433, -31.2057, 0.52", "166.512, 45.8606, -31.2351, 0.66", "167.12, 46.2818, -31.2968, 0.22", "167.588, 46.6445, -31.3132, 0.52", "167.917, 46.9121, -31.2983, 0.22", "168.422, 47.3174, -31.2269, 0.44", "168.616, 47.4491, -31.2009, 0.44", "169.084, 47.7057, -31.1436, 0.14", "169.505, 47.8656, -31.1038, 0.14", "169.869, 47.9836, -31.0825, 0.3", "170.523, 48.1898, -31.0638, 0.14", "170.99, 48.3462, -31.0638, 0.14", "171.2, 48.4254, -31.0638, 0.14", "171.959, 48.7567, -31.0397, 0.3", "172.967, 49.2435, -30.987, 0.14", "173.378, 49.4635, -30.9602, 0.22", "174.637, 50.187, -30.8675, 0.14", "175.127, 50.4701, -30.8292, 0.14", "176.008, 50.9493, -30.8209, 0.14", "176.675, 51.2717, -30.8581, 0.14", "177.489, 51.6249, -30.9822, 0.14", "178.018, 51.8428, -31.1042, 0.88", "178.482, 52.021, -31.2434, 0.88", "179.97, 52.4869, -31.7677, 0.22", "181.107, 52.7755, -32.2459, 0.14", "181.93, 52.9445, -32.6059, 0.14", "182.59, 53.0598, -32.8937, 0.3", "183.395, 53.2143, -33.2165, 0.14", "184.324, 53.4134, -33.5349, 0.14", "184.91, 53.544, -33.674, 0.14", "185.92, 53.7694, -33.8473, 0.3", "186.436, 53.8827, -33.8949, 0.3", "187.463, 54.1451, -33.9478, 0.08", "187.909, 54.2908, -33.949, 0.08", "188.802, 54.6417, -33.9072, 0.14", "189.452, 54.9062, -33.8426, 0.36", "189.796, 55.0454, -33.7956, 1.04", "190.362, 55.2402, -33.7072, 1.26", "190.818, 55.3624, -33.6205, 0.88" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "99.7945, 6.09683, -48.6564, 0.22", "99.0957, 6.37026, -49.8509, 0.22", "98.4529, 6.56641, -50.7898, 0.22", "97.7295, 6.80248, -51.8303, 0.22", "97.4046, 6.93472, -52.3547, 0.22", "97.1662, 7.04052, -52.8054, 0.22", "96.819, 7.19816, -53.644, 0.22", "96.623, 7.27972, -54.207, 0.22", "96.415, 7.34674, -54.8646, 0.22", "96.201, 7.43687, -55.7045, 0.22", "96.0849, 7.52892, -56.4017, 0.22", "96.0068, 7.73308, -57.7716, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-29.7133, 17.0905, 11.6279, 1.04", "-30.3428, 17.0377, 12.0233, 1.04", "-31.4351, 17.044, 12.7671, 0.74", "-32.4729, 17.1579, 13.5641, 0.74", "-33.2048, 17.3082, 14.1672, 0.74", "-34.0318, 17.5254, 14.9072, 0.58", "-34.8967, 17.7705, 15.7392, 0.52", "-35.3881, 17.952, 16.2665, 0.52", "-36.1007, 18.2589, 17.1154, 0.52", "-36.5054, 18.4309, 17.6661, 0.58", "-36.9928, 18.5849, 18.4176, 0.96", "-37.4581, 18.6608, 19.2423, 1.32", "-37.6726, 18.6604, 19.6328, 1.32", "-38.5978, 18.5379, 21.2122, 0.36", "-39.1203, 18.4153, 22.0303, 0.36", "-39.6967, 18.2577, 22.8551, 0.36", "-40.2221, 18.121, 23.4836, 0.36", "-40.8757, 17.9827, 24.108, 0.44", "-41.4211, 17.902, 24.5427, 0.66", "-42.2728, 17.8469, 25.0672, 0.66", "-43.0472, 17.8906, 25.5012, 0.88", "-44.0677, 18.0921, 26.1095, 1.18", "-44.7762, 18.319, 26.6349, 0.52", "-45.7025, 18.7452, 27.5329, 0.82", "-46.2586, 19.0726, 28.1855, 1.18", "-47.063, 19.6211, 29.305, 1.18", "-47.9715, 20.2666, 30.7227, 1.04", "-48.8435, 20.8847, 32.2145, 1.04", "-49.5569, 21.389, 33.4725, 0.82", "-50.2402, 21.8663, 34.6863, 0.66", "-50.9188, 22.3344, 35.9131, 0.66", "-51.3427, 22.6477, 36.682, 0.66", "-51.6688, 22.9189, 37.2639, 0.66", "-52.0285, 23.2733, 37.8911, 0.82", "-52.5727, 23.9348, 38.8868, 0.96", "-53.026, 24.6429, 39.7354, 0.96", "-53.3984, 25.3919, 40.4834, 0.74", "-53.8431, 26.4097, 41.3951, 0.66", "-54.1973, 27.2121, 42.1461, 0.58", "-54.471, 27.825, 42.8248, 0.58", "-54.8502, 28.6047, 43.8689, 0.58", "-55.2929, 29.3476, 45.3127, 0.58", "-55.5287, 29.5926, 46.1903, 0.58", "-55.9263, 29.7963, 47.7788, 0.58", "-56.2645, 29.8637, 49.252, 0.58", "-56.3931, 29.8817, 49.8586, 0.58", "-56.5616, 29.9292, 50.8351, 0.58", "-56.7038, 30.0303, 51.9672, 0.58", "-56.8126, 30.239, 53.344, 0.58", "-56.9585, 30.8451, 55.7326, 0.58", "-57.0004, 31.1117, 56.4786, 0.58", "-57.052, 31.5459, 57.4933, 0.58", "-57.1155, 32.0709, 58.5386, 0.58", "-57.1957, 32.7345, 59.7232, 0.58", "-57.2729, 33.5875, 61.0985, 0.58", "-57.3895, 34.6223, 62.6187, 0.58", "-57.5252, 35.3672, 63.7883, 0.58", "-57.6515, 35.7716, 64.4781, 0.44", "-57.9061, 36.3487, 65.5248, 0.74", "-58.0614, 36.6362, 66.1081, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-29.7133, 17.0905, 11.6279, 0.58", "-30.1884, 18.0613, 12.9607, 0.58", "-30.7129, 18.9593, 14.0656, 0.58", "-31.0312, 19.5061, 14.6467, 0.58", "-31.2231, 19.8482, 14.9526, 0.58", "-31.5716, 20.5571, 15.4896, 0.52", "-31.7683, 21.0275, 15.8262, 0.52", "-31.9831, 21.6359, 16.1369, 0.36", "-32.1763, 22.2671, 16.3663, 0.58", "-32.3212, 22.9566, 16.6152, 0.58", "-32.389, 23.7003, 16.9433, 0.66", "-32.3773, 24.6205, 17.413, 0.44", "-32.3372, 25.1781, 17.7494, 0.44", "-32.3041, 25.6238, 18.0345, 0.74", "-32.3041, 26.5896, 18.7794, 0.52", "-32.3128, 27.5438, 19.5572, 0.52", "-32.3363, 28.1619, 20.0771, 0.74", "-32.3909, 29.2177, 20.9612, 0.74", "-32.4253, 29.9479, 21.6118, 0.82", "-32.5789, 31.6638, 23.2146, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-34.867, 6.44494, 0.716106, 0.3", "-35.4362, 6.15745, 0.272214, 0.3", "-36.472, 5.56897, -0.748971, 0.3", "-36.8688, 5.30913, -1.21562, 0.44", "-37.3442, 4.96249, -1.82936, 0.66", "-37.8559, 4.57456, -2.52828, 0.36", "-38.463, 4.09836, -3.35562, 0.36", "-39.001, 3.6416, -4.08715, 0.36", "-39.3189, 3.34279, -4.48164, 0.36", "-39.6181, 3.07689, -4.85142, 0.52", "-40.0887, 2.72595, -5.41303, 0.52", "-40.5135, 2.47007, -5.83514, 0.52", "-41.4478, 2.06677, -6.48881, 0.22", "-42.1538, 1.88272, -6.83786, 0.14", "-43.3991, 1.73129, -7.34323, 0.14", "-44.2336, 1.69958, -7.67361, 0.14", "-45.3893, 1.70408, -8.11606, 0.36", "-46.0064, 1.7157, -8.35263, 0.74", "-46.8628, 1.70746, -8.71438, 0.36", "-47.7256, 1.60696, -9.06005, 0.36", "-48.6403, 1.39374, -9.43582, 0.66", "-49.2829, 1.22178, -9.72775, 0.66", "-49.8779, 1.05312, -10.0429, 0.66", "-50.7232, 0.778832, -10.476, 0.52", "-51.3939, 0.529513, -10.7877, 0.52", "-52.2383, 0.221259, -11.0671, 0.14", "-53.0086, -0.0376605, -11.2367, 0.14", "-53.2734, -0.126646, -11.2801, 0.14", "-53.7831, -0.329562, -11.3287, 0.3", "-54.2174, -0.534679, -11.324, 0.66", "-54.999, -0.954309, -11.2723, 0.14", "-55.3081, -1.13558, -11.2313, 0.14", "-55.6689, -1.35805, -11.1852, 0.3", "-56.3325, -1.7451, -11.1114, 0.52", "-56.8702, -2.05731, -11.0664, 0.14", "-57.2705, -2.31613, -11.0579, 0.14", "-57.8111, -2.71907, -11.0894, 0.14", "-58.0666, -2.93802, -11.1257, 0.52", "-58.4075, -3.26495, -11.217, 0.74", "-58.9851, -3.90647, -11.4476, 0.14", "-59.4986, -4.56896, -11.7014, 0.14", "-59.6115, -4.71895, -11.7661, 0.14", "-59.8986, -5.08901, -11.9411, 0.36", "-60.2444, -5.46701, -12.1429, 0.52", "-60.5339, -5.72399, -12.2957, 0.52", "-60.9468, -6.00099, -12.4813, 0.14", "-61.6245, -6.33292, -12.707, 0.14", "-61.9788, -6.48621, -12.8067, 0.14", "-62.4439, -6.68014, -12.9206, 0.88", "-62.7181, -6.80183, -12.9736, 1.32", "-63.4639, -7.16444, -13.0902, 0.3", "-64.2467, -7.62603, -13.1828, 0.22", "-64.9267, -8.1267, -13.2922, 0.22", "-65.3281, -8.49151, -13.3853, 0.22", "-66.0283, -9.23931, -13.5949, 0.22", "-66.3209, -9.58678, -13.6971, 0.36", "-66.7647, -10.1565, -13.8685, 0.14", "-67.5836, -11.1388, -14.1636, 0.14", "-68.0658, -11.5897, -14.3574, 0.14", "-68.4055, -11.8573, -14.521, 0.14", "-68.7362, -12.0908, -14.6939, 0.36", "-69.1896, -12.3822, -14.9503, 0.52", "-70.0371, -12.9122, -15.4503, 0.22", "-71.0532, -13.6082, -16.0571, 0.3", "-71.6888, -14.1072, -16.5031, 0.3", "-71.9855, -14.3839, -16.7405, 0.52", "-72.551, -15.0542, -17.2852, 0.66", "-72.7433, -15.359, -17.5195, 0.66", "-72.9018, -15.717, -17.7739, 0.66", "-73.0427, -16.1455, -18.0538, 0.66", "-73.1211, -16.4414, -18.244, 0.66", "-73.3366, -17.6003, -18.996, 0.22", "-73.4432, -18.4004, -19.506, 0.22", "-73.5425, -19.2989, -20.1005, 0.14", "-73.6274, -20.2109, -20.7144, 0.14", "-73.685, -20.9537, -21.2023, 0.14", "-73.7199, -21.488, -21.5367, 0.14", "-73.7403, -21.9387, -21.7757, 0.52", "-73.7571, -22.3933, -21.9656, 0.52", "-73.7893, -23.1681, -22.1836, 0.22", "-73.8342, -23.8848, -22.348, 0.52", "-73.8567, -24.2149, -22.4273, 0.52", "-73.9246, -24.9979, -22.6178, 0.22", "-74.0264, -25.8988, -22.6584, 0.44", "-74.159, -26.9715, -22.5289, 0.14", "-74.2825, -28.1193, -22.2643, 0.14", "-74.3333, -28.7217, -22.0631, 0.52", "-74.3552, -29.2182, -21.8702, 0.66", "-74.3405, -32.251, -20.5996, 0.14", "-74.2747, -33.1174, -20.2016, 0.14", "-74.0045, -34.3061, -19.6657, 0.14", "-73.6563, -35.2063, -19.3047, 0.14", "-73.232, -36.0394, -19.0108, 0.3", "-72.8975, -36.563, -18.8519, 0.22", "-72.5178, -37.046, -18.7332, 0.36", "-71.3599, -38.3818, -18.3629, 0.14", "-70.5772, -39.2004, -18.1111, 0.14", "-69.7685, -40.0222, -17.851, 0.52", "-69.0259, -40.7855, -17.4949, 1.1", "-68.4218, -41.4535, -17.0381, 1.1" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-34.867, 6.44494, 0.716106, 0.22", "-35.1011, 7.09369, 0.441047, 0.22", "-35.5872, 8.07703, 0.0809426, 0.22", "-35.875, 8.58187, -0.151384, 0.22", "-36.0928, 8.91472, -0.361927, 0.36", "-36.4151, 9.34546, -0.702331, 0.96", "-36.8134, 9.80918, -1.14427, 0.74", "-37.3725, 10.3271, -1.79321, 0.22", "-37.8958, 10.685, -2.39471, 0.22", "-38.5096, 11.0193, -3.16764, 0.22", "-38.8464, 11.1887, -3.6422, 0.66", "-39.1361, 11.3406, -4.11243, 0.82", "-39.4085, 11.4993, -4.60759, 0.52", "-39.6912, 11.7179, -5.11946, 0.36", "-39.8806, 11.9265, -5.41115, 0.36", "-40.1439, 12.2776, -5.73801, 0.36", "-40.4192, 12.6442, -6.00881, 0.58", "-40.7395, 13.036, -6.27567, 0.58", "-41.2283, 13.5576, -6.60184, 0.66", "-42.021, 14.2971, -7.03355, 0.82", "-42.4833, 14.6687, -7.23997, 0.82", "-42.9742, 15.0081, -7.44098, 0.82", "-43.5312, 15.3393, -7.69337, 0.82", "-44.2008, 15.6714, -8.04084, 0.66", "-44.6586, 15.8661, -8.29262, 0.66", "-45.4518, 16.1831, -8.70879, 0.22", "-46.1481, 16.462, -9.07539, 0.3", "-47.2666, 16.9272, -9.59447, 0.44", "-48.3894, 17.4309, -10.0022, 0.58", "-49.1378, 17.7826, -10.1808, 0.14", "-49.6393, 18.0397, -10.2272, 0.44", "-50.0718, 18.2857, -10.1902, 0.96", "-50.9565, 18.8317, -9.96336, 0.96", "-51.7406, 19.3283, -9.70292, 0.3", "-52.5544, 19.8366, -9.48595, 0.22", "-52.9434, 20.0464, -9.47576, 0.22", "-53.577, 20.3207, -9.61231, 0.58", "-53.9368, 20.4553, -9.75006, 0.74", "-54.8256, 20.7481, -10.1992, 0.58", "-55.8951, 21.0492, -10.8555, 0.36", "-56.9846, 21.3281, -11.6672, 0.3", "-57.6045, 21.4746, -12.1703, 0.52", "-58.1199, 21.5922, -12.6088, 0.66", "-58.9454, 21.7883, -13.3184, 0.3", "-59.9396, 22.0461, -14.1791, 0.22", "-60.6558, 22.2835, -14.9139, 0.22", "-60.8702, 22.3935, -15.2394, 0.22", "-61.0639, 22.5695, -15.7124, 0.58", "-61.1719, 22.7413, -16.1616, 1.18", "-61.2426, 22.9665, -16.7068, 1.18", "-61.3615, 23.7348, -18.4083, 0.52", "-61.4445, 24.3404, -19.7161, 0.52", "-61.4911, 24.6384, -20.3898, 0.44", "-61.5345, 24.8605, -20.9248, 0.44", "-61.6566, 25.1436, -21.6821, 0.22", "-61.8661, 25.3292, -22.2577, 0.22", "-62.1011, 25.4284, -22.6011, 0.44", "-62.3909, 25.5477, -22.9663, 0.44", "-62.4727, 25.5841, -23.0786, 0.44", "-62.8689, 25.8483, -23.7484, 0.22", "-63.3567, 26.297, -24.8244, 0.52", "-63.7577, 26.7288, -25.8568, 0.52", "-63.9827, 27.0009, -26.5217, 0.96", "-64.1573, 27.2074, -27.0523, 0.96", "-64.5124, 27.6032, -28.1367, 0.36", "-64.836, 27.9122, -29.1038, 0.36", "-65.2317, 28.1683, -30.2331, 0.36", "-65.6226, 28.2677, -31.2895, 0.36", "-65.8878, 28.2619, -31.9944, 0.74", "-66.0948, 28.2129, -32.5232, 1.1", "-66.3532, 28.0975, -33.1628, 0.52", "-66.9892, 27.7459, -34.6953, 0.52", "-67.4133, 27.4789, -35.7334, 0.22", "-67.8875, 27.2086, -36.8958, 0.22", "-68.0967, 27.1355, -37.3863, 0.66", "-68.1722, 27.1352, -37.5277, 0.66", "-68.5295, 27.3017, -37.955, 0.22", "-68.9697, 27.6707, -38.1505, 0.22", "-69.6255, 28.3083, -38.3401, 0.22", "-70.0461, 28.753, -38.4112, 0.58", "-70.5613, 29.3361, -38.4913, 0.58", "-71.1889, 30.0438, -38.5674, 0.22", "-72.1736, 31.1149, -38.625, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-13.3043, 7.60773, -9.82919, 0.44", "-13.987, 8.09373, -10.1303, 0.44", "-14.5332, 8.43878, -10.5351, 0.66", "-15.1368, 8.77964, -11.1396, 0.66", "-15.6393, 9.05158, -11.6925, 0.36", "-16.5512, 9.59664, -12.7813, 0.36", "-17.2457, 10.0731, -13.6565, 0.36", "-17.9361, 10.6051, -14.6467, 0.52", "-18.5695, 11.15, -15.6265, 0.74", "-18.793, 11.3479, -15.9633, 1.48", "-19.2658, 11.7983, -16.6401, 0.82", "-19.8818, 12.4155, -17.409, 0.36", "-20.2934, 12.8179, -17.8188, 0.82", "-20.666, 13.1687, -18.1104, 0.82", "-21.6467, 14.0655, -18.8043, 0.36", "-22.2174, 14.5985, -19.1984, 0.74", "-22.9264, 15.3436, -19.7487, 1.04", "-23.4375, 16.0341, -20.2385, 1.04", "-24.0273, 17.2227, -21.0721, 0.74", "-24.2958, 18.237, -21.7705, 0.74", "-24.3668, 19.1184, -22.318, 0.74", "-24.3403, 20.7491, -23.2131, 0.66", "-24.2229, 21.8939, -23.7599, 0.66", "-24.0303, 23.084, -24.3988, 0.88", "-23.7559, 24.2166, -25.0139, 0.52", "-23.5758, 24.882, -25.3695, 0.52", "-23.3846, 25.6889, -25.8278, 0.88", "-23.3258, 26.3528, -26.1781, 0.88", "-23.5157, 28.957, -27.6894, 0.74" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-13.3043, 7.60773, -9.82919, 0.36", "-13.9519, 7.11483, -10.5937, 0.36", "-14.8751, 6.26032, -11.9109, 0.36", "-15.1937, 5.91013, -12.4913, 0.36", "-15.4511, 5.57271, -13.1259, 0.36", "-15.653, 5.24721, -13.8128, 0.36", "-15.7617, 5.04937, -14.3532, 0.36", "-15.7541, 4.97303, -14.7905, 0.36", "-15.6576, 4.93057, -15.4983, 0.36", "-15.5732, 4.9271, -16.1654, 0.36", "-15.5506, 4.9315, -16.4916, 0.36", "-15.5144, 4.92915, -17.6288, 0.36", "-15.5259, 4.88158, -18.5456, 0.36", "-15.5462, 4.82703, -19.1905, 0.36", "-15.6128, 4.71589, -20.4455, 0.36", "-15.7554, 4.50789, -22.4965, 0.36", "-15.8818, 4.31857, -24.1534, 0.36", "-16.0671, 4.01413, -26.7008, 0.36", "-16.2348, 3.6944, -29.4911, 0.36", "-16.3549, 3.34267, -32.713, 0.52", "-16.3857, 3.07979, -35.3265, 0.52", "-16.3738, 3.04879, -35.6703, 0.52", "-16.1618, 2.89321, -37.784, 0.52", "-15.9989, 2.84868, -38.5439, 0.52", "-15.6024, 2.76231, -39.7218, 0.36", "-14.7825, 2.58561, -41.6133, 0.36", "-14.0477, 2.4321, -43.2268, 0.58", "-13.5223, 2.29298, -44.5865, 0.58", "-13.0718, 2.10849, -46.1556, 0.22", "-12.9073, 1.96593, -47.2192, 0.3", "-12.8084, 1.78134, -48.5062, 0.3", "-12.8194, 1.64189, -49.3204, 0.3", "-13.0697, 1.28962, -51.1476, 0.3", "-13.4947, 0.982021, -52.7484, 0.3", "-13.8153, 0.851856, -53.5578, 0.3" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.3664, 10.7778, 0.0900408, 0.44", "-14.9687, 11.3961, -0.745421, 0.44", "-14.6358, 11.9136, -1.44468, 0.44", "-14.3459, 12.3644, -2.05369, 0.36", "-13.9097, 13.0424, -2.96985, 0.22", "-13.0055, 14.448, -4.86913, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.3664, 10.7778, 0.0900408, 0.58", "-15.6701, 11.5914, 0.169414, 0.58", "-16.1043, 12.6348, 0.284241, 0.66", "-16.4378, 13.3601, 0.375753, 0.66", "-16.8073, 14.1533, 0.538654, 0.66", "-17.1615, 14.9706, 0.741412, 0.44", "-17.3969, 15.5691, 0.91476, 0.44", "-17.5669, 16.1729, 1.11827, 0.44", "-17.7201, 16.9576, 1.40529, 0.44", "-17.9179, 17.9758, 1.87587, 0.44", "-18.0886, 18.6724, 2.24512, 0.44", "-18.2378, 19.168, 2.51392, 0.44", "-18.5586, 20.0063, 3.03511, 0.58", "-18.7466, 20.4375, 3.31272, 0.82", "-19.359, 21.6148, 4.08499, 0.96", "-19.7877, 22.3579, 4.59306, 0.82", "-20.1781, 23.0497, 5.08122, 0.44", "-20.829, 24.375, 5.97813, 0.44", "-20.9961, 24.786, 6.25003, 0.44", "-21.1005, 25.2337, 6.50456, 0.66", "-21.1802, 26.4137, 7.0406, 0.44", "-21.1408, 27.3559, 7.40425, 0.66", "-21.0391, 28.189, 7.71416, 0.66", "-20.9504, 28.6266, 7.85621, 0.66", "-20.7306, 29.5188, 8.17271, 0.52", "-20.589, 30.1683, 8.45292, 0.52", "-20.4509, 31.0883, 8.96579, 0.3", "-20.3711, 32.1688, 9.69142, 0.3", "-20.3796, 32.7717, 10.1765, 0.52", "-20.4244, 33.2989, 10.6731, 0.52", "-20.6139, 34.5273, 11.991, 0.52", "-20.7948, 35.4457, 13.0417, 0.52", "-20.9719, 36.1734, 13.9499, 0.82", "-21.3161, 37.56, 15.6455, 0.44", "-21.5232, 38.4429, 16.6964, 0.44", "-21.6159, 39.0197, 17.3693, 0.44", "-21.6338, 39.5713, 17.9925, 0.58", "-21.5815, 40.6263, 19.1734, 0.58", "-21.4836, 41.4398, 20.08, 0.36", "-21.3543, 42.0872, 20.7153, 0.36", "-21.1071, 43.0708, 21.5918, 0.36", "-20.9375, 43.6387, 22.0614, 0.96", "-20.7704, 44.1282, 22.44, 0.96", "-20.5659, 44.5983, 22.7803, 0.96", "-20.1455, 45.3355, 23.4006, 0.22", "-19.7597, 45.8436, 23.9005, 0.22", "-19.4109, 46.2178, 24.3419, 0.58", "-19.2127, 46.3946, 24.6275, 0.58", "-18.7707, 46.7449, 25.364, 0.3", "-18.3865, 47.0506, 26.119, 0.3", "-18.0838, 47.3199, 26.8889, 0.3", "-17.7658, 47.6808, 27.9738, 0.3", "-17.5428, 48.0385, 29.0543, 0.3", "-17.4326, 48.2752, 29.7293, 0.3", "-17.3403, 48.5511, 30.4081, 0.66", "-17.2236, 49.0005, 31.3312, 0.66", "-17.1408, 49.4237, 32.0947, 0.66", "-17.0455, 50.1181, 33.1662, 0.52", "-17.0123, 50.5611, 33.7794, 0.52", "-17.0256, 51.1602, 34.6075, 0.36", "-17.1043, 51.7982, 35.4626, 0.36", "-17.1984, 52.2454, 36.0119, 0.36", "-17.3311, 52.7015, 36.5493, 0.66", "-17.6285, 53.4751, 37.4712, 0.3", "-18.0597, 54.3392, 38.6175, 0.3", "-18.2698, 54.6658, 39.128, 0.44", "-18.4154, 54.8491, 39.4827, 0.44", "-18.8091, 55.2768, 40.4937, 0.22", "-19.1191, 55.5801, 41.3881, 0.44", "-19.5727, 55.9854, 42.8301, 0.44", "-19.9916, 56.351, 44.341, 0.88", "-20.5117, 56.7711, 46.2608, 0.22", "-21.0349, 57.1656, 48.2395, 0.22", "-21.615, 57.5803, 50.551, 0.22", "-22.0121, 57.8772, 52.3226, 0.22", "-22.3249, 58.1365, 53.9505, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "7.45943, 27.0806, -3.19744, 0.22", "7.62806, 27.3853, -3.95028, 0.22", "7.773, 27.7038, -4.80658, 0.44", "7.96082, 28.1166, -5.91625, 0.44", "8.2127, 28.6701, -7.40442, 0.22", "8.42052, 29.1268, -8.63227, 0.22", "8.6225, 29.5707, -9.82559, 0.22", "8.86396, 30.0874, -11.4223, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "7.45943, 27.0806, -3.19744, 0.22", "7.39551, 27.7804, -2.70897, 0.22", "7.4837, 28.887, -1.98446, 0.22", "7.55043, 29.3693, -1.64143, 0.36", "7.63944, 29.8464, -1.2701, 0.82", "7.74616, 30.3037, -0.905305, 0.82", "7.85887, 30.7016, -0.570269, 0.52", "8.20788, 31.4717, 0.148763, 0.3", "8.5461, 32.0604, 0.75601, 0.3", "8.96647, 32.7682, 1.54878, 0.44", "9.1152, 33.0403, 1.85496, 0.44", "9.26121, 33.366, 2.20881, 0.44", "9.50035, 34.1278, 2.93718, 0.36", "9.69306, 35.1518, 3.71961, 0.74", "9.77607, 36.056, 4.25644, 0.82", "9.76882, 36.8664, 4.62333, 0.52", "9.67409, 37.8351, 4.94188, 0.44", "9.48564, 38.8734, 5.11739, 0.22", "9.26012, 39.7, 5.1173, 0.3", "9.13866, 40.0698, 5.08439, 0.74", "8.99399, 40.485, 5.06337, 0.96", "8.67456, 41.4623, 5.08116, 0.36", "8.42872, 42.3932, 5.13161, 0.44", "8.28151, 43.1524, 5.2659, 0.74", "8.11, 44.2222, 5.62697, 0.3", "7.89967, 45.4575, 6.2132, 0.36", "7.81148, 45.9496, 6.50791, 0.82", "7.72468, 46.5234, 6.94078, 0.82", "7.66784, 47.2468, 7.55203, 0.82", "7.67704, 48.3679, 8.54697, 0.22", "7.74453, 48.9812, 9.11034, 0.22", "7.81067, 49.3054, 9.42436, 0.58", "7.92956, 49.7534, 9.8736, 0.58", "8.12296, 50.3637, 10.5135, 0.36", "8.35262, 50.9554, 11.1213, 0.3", "8.71984, 51.7596, 11.9306, 0.3", "8.89104, 52.1818, 12.3597, 0.3", "9.01656, 52.5415, 12.7348, 0.82", "9.14254, 52.9793, 13.1847, 0.82", "9.40624, 53.9548, 14.1957, 0.44", "9.49687, 54.259, 14.4921, 0.44", "9.8889, 55.379, 15.4239, 0.3", "10.1979, 56.0634, 15.9068, 0.36", "10.3451, 56.3156, 16.0459, 0.36", "10.6905, 56.7759, 16.2039, 0.36", "11.0635, 57.1888, 16.3075, 0.66", "11.7602, 57.9027, 16.4675, 0.44", "12.2359, 58.3884, 16.5785, 0.66", "12.613, 58.8026, 16.7349, 0.88", "13.2338, 59.5627, 17.1108, 0.14", "13.8486, 60.3694, 17.5741, 0.74", "14.091, 60.7102, 17.7875, 1.18", "14.8662, 61.8676, 18.6054, 0.14", "15.4231, 62.7389, 19.226, 0.14", "15.7074, 63.2191, 19.5616, 0.66", "16.0113, 63.8467, 19.9819, 1.1", "16.2298, 64.3814, 20.3252, 0.58", "16.5757, 65.3931, 20.966, 0.22", "16.7289, 65.9172, 21.2805, 0.52", "16.9692, 66.797, 21.7633, 0.66", "17.3281, 68.2707, 22.5656, 0.3", "17.4116, 68.6864, 22.8129, 0.3", "17.4914, 69.0661, 23.0531, 0.66", "17.588, 69.4896, 23.3452, 0.66", "17.7637, 70.1035, 23.8369, 0.36", "18.121, 70.94, 24.6299, 0.3", "18.7452, 71.9265, 25.7197, 0.3", "18.9553, 72.1931, 26.0418, 0.3", "19.4579, 72.7051, 26.7064, 0.3", "19.8093, 72.9768, 27.0775, 0.3", "20.5008, 73.3618, 27.5976, 0.14", "20.9548, 73.5625, 27.8633, 0.36", "21.555, 73.8012, 28.1208, 0.14", "22.2195, 74.0791, 28.3642, 0.36", "23.2455, 74.5368, 28.6338, 0.14", "24.2637, 75.0335, 28.8536, 0.36" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.4226, 33.3713, -20.466, 0.82", "24.7729, 35.1263, -20.6604, 0.82", "25.089, 36.1158, -20.7189, 0.52", "25.4246, 36.9069, -20.7417, 0.88", "25.6321, 37.3466, -20.7042, 0.88", "26.1545, 38.281, -20.5987, 0.58", "26.6359, 39.0401, -20.4921, 0.58", "27.2913, 39.903, -20.2875, 0.58", "28.1055, 40.9015, -20.0486, 0.36", "29.2313, 42.2696, -19.7283, 0.36", "29.9368, 43.1749, -19.4975, 0.36", "30.4452, 43.8216, -19.3178, 0.36", "31.0009, 44.5597, -19.103, 0.36", "31.7144, 45.5684, -18.8086, 0.3", "31.9612, 45.9546, -18.7042, 0.3", "32.2262, 46.4762, -18.6319, 0.3" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "24.4226, 33.3713, -20.466, 0.74", "23.8408, 33.7147, -22.2045, 0.74", "23.4206, 34.0212, -23.4639, 0.74", "23.0512, 34.367, -24.6169, 0.44", "22.6612, 34.8467, -25.9797, 0.44", "22.3898, 35.3227, -27.1414, 0.44", "22.2385, 35.679, -27.8969, 0.44", "21.8988, 37.0786, -30.0565, 0.3", "21.8654, 37.7177, -30.7559, 0.3", "21.9563, 38.4501, -31.3156, 0.3", "22.2891, 39.4951, -31.7601, 0.22", "22.5969, 40.0829, -31.8022, 0.22", "23.1429, 40.8106, -31.5485, 0.22", "23.6136, 41.344, -31.2256, 0.22", "24.0661, 41.8135, -30.8727, 0.66", "24.9776, 42.6639, -30.0051, 0.3", "25.919, 43.3734, -28.986, 0.3", "26.6174, 43.77, -28.2383, 0.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "27.1038, 1.99872, 16.8499, 0.66", "28.2965, 2.12338, 17.4289, 0.66", "29.1773, 2.31049, 17.922, 0.36", "29.8987, 2.57543, 18.3803, 0.36", "30.1677, 2.74955, 18.5767, 0.36", "30.5567, 3.16428, 18.9827, 0.3", "30.8015, 3.4827, 19.2641, 0.3", "31.2319, 4.27729, 19.7779, 0.44", "31.5939, 4.9862, 20.1889, 0.44", "31.9482, 5.55146, 20.4881, 0.36", "32.7579, 6.49618, 21.0323, 0.44", "33.3047, 6.91696, 21.3413, 0.58", "34.0707, 7.27733, 21.7378, 0.74", "34.7453, 7.46563, 22.077, 0.58", "35.8959, 7.67885, 22.6881, 0.36", "36.821, 7.77684, 23.1897, 0.36", "37.8115, 7.8464, 23.7691, 0.58", "38.7836, 7.90191, 24.4088, 0.74", "39.7192, 7.98416, 25.1243, 0.58", "40.522, 8.09046, 25.8368, 0.58", "41.3987, 8.25898, 26.6977, 0.52", "42.2805, 8.48651, 27.6073, 0.88", "42.7208, 8.62242, 28.0944, 1.18", "43.7521, 8.99157, 29.3505, 0.44", "44.3291, 9.24477, 30.1733, 0.44", "44.47, 9.32242, 30.4197, 0.44", "44.7523, 9.54742, 31.0735, 0.44", "45.0611, 9.89029, 32.0104, 0.58", "45.3834, 10.4035, 33.3504, 0.36", "45.5961, 10.9249, 34.6279, 0.36", "45.7636, 11.4039, 35.7714, 0.66", "45.9296, 11.8631, 36.8861, 0.66", "46.0689, 12.2623, 37.879, 0.66", "46.1803, 12.5806, 38.7177, 0.66", "46.4267, 13.2409, 40.5818, 0.44", "46.6129, 13.6212, 41.7718, 0.44", "46.748, 13.8226, 42.4641, 0.44", "46.8394, 13.9485, 42.922, 0.44", "46.9058, 14.0729, 43.3422, 0.44", "47.0118, 14.41, 44.298, 0.44", "47.12, 14.9069, 45.6633, 0.44", "47.1709, 15.1606, 46.3905, 0.44", "47.262, 15.47, 47.3639, 0.44", "47.4799, 15.9675, 49.2109, 0.44", "47.7676, 16.3858, 51.2531, 0.44", "48.0629, 16.6441, 53.2394, 0.44", "48.2877, 16.7503, 54.8226, 0.44", "48.4539, 16.7735, 56.0946, 0.44", "48.6669, 16.7331, 57.9343, 0.44", "48.74, 16.6885, 58.8471, 0.3", "48.8018, 16.6381, 61.0172, 0.3", "48.7822, 16.7143, 62.8309, 0.3", "48.7597, 16.7783, 63.4473, 0.3", "48.6716, 17.057, 65.1961, 0.3", "48.5888, 17.4528, 67.1746, 0.3", "48.5466, 17.9277, 69.2797, 0.3", "48.5715, 18.7334, 72.4317, 0.3", "48.6314, 19.2454, 74.2998, 0.3", "48.7188, 19.7857, 76.1661, 0.44", "48.8798, 20.6625, 79.0376, 0.36", "49.0579, 21.497, 81.6428, 0.36", "49.2685, 22.2678, 84.034, 0.52", "49.5509, 23.1285, 86.6697, 0.52", "49.6361, 23.33, 87.2962, 0.52", "49.9417, 23.9362, 89.176, 0.52", "50.1193, 24.237, 90.0776, 0.52", "50.6044, 24.8721, 92.066, 0.52", "51.1627, 25.3638, 93.777, 0.52", "51.4073, 25.5291, 94.3535, 0.66", "51.8851, 25.8146, 95.2323, 0.66", "52.2108, 26.0161, 95.6815, 0.52", "52.9273, 26.5218, 96.4456, 0.52", "53.3868, 26.8885, 96.8654, 0.44", "53.9964, 27.4194, 97.4155, 0.44", "54.8727, 28.1926, 98.2622, 0.22", "55.5956, 28.8277, 98.9464, 0.66", "56.4246, 29.5822, 99.7605, 0.22", "57.4436, 30.5644, 100.772, 0.22", "57.8868, 30.995, 101.242, 0.82", "58.4926, 31.5556, 101.903, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "27.1038, 1.99872, 16.8499, 0.36", "27.0379, 1.67571, 17.7218, 0.36", "27.0002, 1.07543, 19.1469, 0.36", "27.0232, 0.419227, 20.4885, 0.22", "27.0769, -0.153581, 21.553, 0.22", "27.1101, -0.437203, 22.0632, 0.22", "27.1644, -0.75033, 22.6174, 0.36", "27.273, -1.13678, 23.2765, 0.74", "27.4357, -1.48954, 23.8711, 1.18", "27.9337, -2.13827, 25.0467, 0.96", "28.4613, -2.62869, 26.0455, 0.88", "29.0409, -3.04117, 27.0537, 0.36", "29.4889, -3.28774, 27.7799, 0.22", "29.9669, -3.49548, 28.4727, 0.22", "30.7078, -3.76691, 29.4287, 0.3", "31.544, -4.03734, 30.3344, 0.52", "32.266, -4.29508, 31.0315, 0.74", "32.4973, -4.39801, 31.2507, 0.74", "33.1852, -4.83344, 31.9264, 1.1", "33.4647, -5.07701, 32.2076, 1.1", "33.9632, -5.66787, 32.7242, 0.36", "34.3664, -6.1941, 33.0554, 0.3", "34.6171, -6.53827, 33.2067, 0.3", "34.9745, -7.0532, 33.4156, 0.3", "35.1256, -7.27067, 33.4961, 0.3", "35.427, -7.6968, 33.7011, 0.58", "35.8272, -8.25979, 33.9962, 0.74", "36.3263, -8.85988, 34.4359, 0.22", "36.8729, -9.45609, 34.9459, 0.22", "37.1213, -9.70278, 35.1816, 0.88", "37.8954, -10.4027, 35.9727, 1.54", "38.3306, -10.7423, 36.4497, 1.54", "39.5776, -11.578, 37.8797, 0.22", "40.0496, -11.8366, 38.4329, 0.58", "40.5154, -12.0523, 38.9607, 0.82", "41.4441, -12.4576, 39.9989, 0.22", "42.1949, -12.7875, 40.8404, 0.22", "42.6492, -12.9931, 41.4107, 0.22", "43.0186, -13.1658, 41.9033, 0.22", "43.2253, -13.2675, 42.1991, 0.74", "43.709, -13.5165, 42.9286, 0.96", "44.7618, -14.0939, 44.3735, 0.14", "45.4155, -14.4798, 45.2634, 0.14", "45.7265, -14.6571, 45.7137, 0.14", "46.0349, -14.8039, 46.1672, 0.14", "46.6263, -15.0159, 46.9946, 0.14", "47.2673, -15.2002, 47.8829, 1.1", "48.2071, -15.4549, 49.1471, 0.22", "49.0866, -15.7353, 50.362, 0.44", "49.6907, -15.966, 51.259, 1.04", "50.7837, -16.4429, 52.9363, 0.14", "51.4899, -16.7975, 54.0251, 0.14", "51.9881, -17.1075, 54.8328, 0.14", "52.328, -17.3732, 55.3688, 0.14", "52.6491, -17.7039, 55.8838, 0.14", "52.8735, -18.003, 56.2654, 0.58", "53.2241, -18.5537, 56.8955, 1.18", "53.8638, -19.4904, 57.9574, 0.22", "54.2768, -20.0547, 58.6206, 0.44", "54.6385, -20.5112, 59.1608, 0.88", "54.8879, -20.8094, 59.5046, 0.88", "55.6628, -21.7172, 60.5066, 0.14", "56.1441, -22.2548, 61.0704, 0.14", "56.6055, -22.7529, 61.5311, 0.14", "57.0589, -23.2666, 61.959, 0.82", "57.814, -24.1577, 62.6595, 0.14", "58.2929, -24.7482, 63.0864, 0.82", "59.0829, -25.7902, 63.7347, 0.14", "59.5448, -26.4661, 64.1477, 0.74", "59.8844, -27.0404, 64.5373, 0.22", "60.1424, -27.6263, 65.0448, 0.22", "60.2143, -27.8923, 65.3411, 0.66", "60.2623, -28.1861, 65.7008, 0.66", "60.3107, -28.8654, 66.6409, 0.14", "60.361, -29.494, 67.5629, 0.36", "60.5411, -30.4231, 68.8831, 0.22", "60.8041, -31.1504, 69.9337, 0.52", "61.1222, -31.6524, 70.6775, 0.88", "61.5299, -32.1285, 71.3517, 0.88", "61.9932, -32.599, 71.9931, 0.3", "62.6871, -33.2825, 72.9152, 0.08", "63.2514, -33.8193, 73.614, 0.22", "64.0387, -34.5808, 74.621, 0.08", "64.5106, -35.055, 75.2844, 0.82", "65.4533, -36.0492, 76.6805, 0.14", "65.9269, -36.5792, 77.519, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-5.89187, 25.8399, 63.7263, 0.22", "-6.36108, 26.342, 64.3768, 0.22", "-7.17224, 27.2601, 65.4478, 0.22", "-7.789, 28.0193, 66.1066, 0.22", "-8.40397, 28.8473, 66.6219, 0.22", "-8.87638, 29.4833, 67.0177, 0.52", "-9.46683, 30.2783, 67.5125, 0.22", "-10.1188, 31.2538, 68.01, 0.44", "-11.2511, 33.1796, 68.4127, 0.82", "-11.6502, 33.9109, 68.3787, 0.82" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-5.89187, 25.8399, 63.7263, 0.52", "-6.57542, 25.7456, 64.5257, 0.52", "-7.09505, 25.6596, 65.2488, 0.52", "-7.91382, 25.4803, 66.4822, 0.58", "-8.7482, 25.2388, 67.764, 0.44", "-9.64807, 24.9775, 68.9861, 0.36", "-10.6204, 24.7101, 70.1578, 0.3", "-11.6774, 24.4636, 71.4681, 0.3", "-12.0015, 24.3798, 71.8674, 0.3", "-12.7369, 24.1463, 72.8021, 0.22", "-14.4295, 23.2797, 75.4606, 0.22", "-14.3135, 23.1741, 76.0394, 0.66" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-116.249, 5.29245, 151.075, 0.3", "-117.489, 5.40015, 152.147, 0.3", "-118.752, 5.53747, 153.13, 0.3", "-119.694, 5.69516, 153.882, 0.74", "-120.78, 5.93212, 154.814, 0.88", "-122.108, 6.27871, 156.084, 0.22", "-123.013, 6.53929, 156.996, 0.22", "-124.415, 6.98226, 158.45, 0.08", "-125.5, 7.33038, 159.522, 0.08", "-126.847, 7.75344, 160.817, 0.08", "-128.235, 8.16342, 162.108, 0.08", "-128.902, 8.3421, 162.723, 0.08", "-130.103, 8.5518, 163.689, 0.3", "-130.891, 8.59486, 164.255, 0.3", "-131.981, 8.52958, 164.915, 0.14", "-133.628, 8.34546, 165.782, 0.08", "-134.435, 8.21986, 166.16, 0.08", "-136.354, 7.84726, 167.058, 0.08", "-137.465, 7.58372, 167.605, 0.08", "-138.318, 7.36102, 168.004, 0.82" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-116.249, 5.29245, 151.075, 0.22", "-115.642, 5.02482, 151.863, 0.22", "-115.116, 4.69535, 152.546, 0.22", "-114.553, 4.26293, 153.279, 0.22", "-114.019, 3.72906, 154.024, 0.22", "-113.608, 3.22459, 154.685, 0.44", "-113.167, 2.63487, 155.417, 0.66", "-112.774, 2.0189, 156.126, 0.22", "-112.422, 1.3538, 156.786, 0.58", "-112.068, 0.497341, 157.545, 0.22", "-111.724, -0.648343, 158.492, 0.22", "-111.619, -1.13958, 158.895, 0.22", "-111.574, -1.53827, 159.246, 0.3", "-111.567, -1.85676, 159.542, 0.3", "-111.597, -2.55593, 160.226, 0.08", "-111.672, -3.01653, 160.763, 0.08", "-111.83, -3.42013, 161.253, 0.08", "-112.052, -3.75724, 161.713, 0.08", "-112.453, -4.13089, 162.344, 0.3", "-113.134, -4.43341, 163.158, 0.52", "-114.414, -4.36303, 164.169, 0.14", "-115.621, -3.93669, 164.955, 0.14", "-116.193, -3.62255, 165.296, 0.44", "-116.965, -3.02472, 165.789, 0.44", "-117.562, -2.50583, 166.139, 0.44", "-118.324, -1.74303, 166.548, 0.14", "-119.063, -0.821811, 167.005, 0.14", "-119.329, -0.417599, 167.279, 0.14", "-119.808, 0.438252, 167.946, 0.52" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-58.0614, 36.6362, 66.1081, 0.44", "-57.555, 37.1253, 66.4992, 0.44", "-56.6528, 37.8798, 66.9608, 0.22", "-55.5843, 38.653, 67.2391, 0.22", "-55.0784, 38.9873, 67.3029, 0.52", "-54.5849, 39.3054, 67.329, 0.96", "-54.0993, 39.619, 67.3253, 0.96", "-52.845, 40.3911, 67.1911, 0.36", "-51.7661, 41.0692, 66.9755, 0.36", "-51.192, 41.4545, 66.8238, 0.66", "-50.7277, 41.7793, 66.6977, 0.66", "-49.5122, 42.6645, 66.3603, 0.22", "-48.8581, 43.1522, 66.1811, 0.22", "-48.4133, 43.5272, 66.0693, 0.3", "-47.784, 44.1267, 65.9681, 0.3" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-58.0614, 36.6362, 66.1081, 0.44", "-57.6189, 35.854, 67.4994, 0.44", "-57.366, 35.2899, 68.2282, 0.44", "-57.2136, 34.9412, 68.6572, 0.44", "-57.0036, 34.4111, 69.3233, 0.22", "-56.617, 33.4365, 70.532, 0.22", "-56.3407, 32.7179, 71.3979, 0.22", "-56.0942, 31.9489, 72.3679, 0.3", "-55.9029, 31.2127, 73.2471, 0.22", "-55.7006, 30.3242, 74.2199, 0.36", "-55.5751, 29.775, 74.7611, 0.74", "-55.4795, 29.4119, 75.0465, 1.26", "-55.2793, 28.7167, 75.4906, 0.82", "-54.9681, 27.5939, 76.0336, 0.3", "-54.8377, 26.9654, 76.2738, 0.3", "-54.6604, 25.7284, 76.7762, 0.3", "-54.5984, 24.157, 77.7327, 0.58", "-54.6314, 23.8214, 78.0589, 1.18", "-54.7685, 23.4677, 78.5943, 0.88", "-55.1952, 22.9382, 79.8136, 0.44", "-55.7484, 22.5092, 81.2182, 0.44", "-56.279, 22.2438, 82.5612, 0.44", "-56.7145, 22.1003, 83.7699, 0.44", "-57.1674, 22.0074, 85.0572, 0.44", "-57.6323, 21.9845, 86.416, 0.44", "-57.845, 22.0148, 87.0706, 0.44", "-58.0845, 22.0826, 87.7421, 0.44", "-58.2897, 22.1939, 88.2985, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-32.5789, 31.6638, 23.2146, 0.44", "-33.415, 32.3232, 23.5093, 0.44", "-34.5559, 33.2573, 23.8526, 0.44", "-35.097, 33.7373, 23.989, 0.44", "-35.4221, 34.0494, 24.0619, 0.44", "-36.0443, 34.7068, 24.1877, 0.44", "-36.5306, 35.2388, 24.2898, 0.36", "-36.8226, 35.6148, 24.3419, 0.36", "-37.3558, 36.422, 24.3966, 0.44", "-37.5876, 36.788, 24.4251, 0.44", "-37.9813, 37.4175, 24.4821, 0.3", "-38.3591, 38.0428, 24.551, 0.3", "-38.6381, 38.5639, 24.6176, 0.3", "-38.9294, 39.1617, 24.7061, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-32.5789, 31.6638, 23.2146, 0.74", "-32.8157, 31.8437, 24.0396, 0.74", "-33.4114, 32.3531, 25.8907, 0.74", "-33.9669, 32.9102, 27.4783, 0.58", "-34.5103, 33.5452, 28.8636, 0.36", "-34.8046, 33.9459, 29.5596, 0.36", "-35.0261, 34.3115, 30.1076, 0.52", "-35.305, 34.8871, 30.8221, 0.66", "-35.4972, 35.476, 31.3457, 0.74", "-35.685, 36.4282, 32.1129, 0.44", "-35.7529, 37.0483, 32.6455, 0.44", "-35.8091, 38.0332, 33.5726, 0.3", "-35.8111, 38.7629, 34.3689, 0.66", "-35.8002, 38.9679, 34.6162, 1.04", "-35.6596, 40.3431, 36.4192, 0.44", "-35.5704, 41.121, 37.5078, 0.44", "-35.5452, 41.6309, 38.2292, 0.66", "-35.5667, 42.2499, 39.0714, 0.66", "-35.6026, 42.5908, 39.5404, 0.66", "-35.6666, 43.1927, 40.4469, 0.58", "-35.7144, 43.675, 41.2489, 0.58", "-35.7682, 44.0425, 41.9182, 0.74", "-35.8344, 44.4086, 42.6736, 0.74", "-35.9168, 44.992, 43.8997, 0.52", "-35.9827, 45.7308, 45.5593, 0.44", "-35.9973, 46.1835, 46.6453, 0.44", "-35.9873, 46.5138, 47.484, 0.44", "-35.963, 46.9791, 48.6829, 0.44", "-35.9509, 47.3081, 49.4765, 0.58", "-35.9515, 47.9996, 51.0033, 0.58", "-36.0108, 48.5461, 52.083, 0.58", "-36.117, 49.1261, 53.0734, 0.74", "-36.2266, 49.5777, 53.7431, 0.58", "-36.3713, 49.9675, 54.2053, 0.58", "-36.6706, 50.5524, 54.7395, 0.58", "-36.9921, 51.0875, 54.9752, 0.58", "-37.6133, 51.9184, 54.9106, 0.44", "-38.0604, 52.4115, 54.6625, 0.44", "-38.564, 52.9044, 54.1662, 0.44", "-39.6063, 53.8612, 52.9649, 0.44", "-40.2639, 54.4006, 52.1619, 0.52", "-40.8254, 54.8191, 51.4839, 0.74", "-41.2864, 55.1431, 50.9486, 0.74", "-42.4632, 55.9812, 49.6762, 0.52", "-43.1665, 56.5118, 49.0243, 0.36", "-43.93, 57.1154, 48.5102, 0.36", "-44.6353, 57.6447, 48.1208, 0.44", "-45.4907, 58.2187, 47.7184, 0.52", "-46.0798, 58.5667, 47.4814, 0.52", "-46.9693, 59.0354, 47.2006, 0.74", "-47.6924, 59.3947, 46.9919, 0.74", "-49.293, 60.1837, 46.6224, 0.22", "-50.0299, 60.5212, 46.4982, 0.22", "-50.7359, 60.8186, 46.4457, 0.36", "-51.1651, 60.9973, 46.4285, 0.36", "-52.0191, 61.371, 46.4338, 0.22", "-52.5317, 61.6167, 46.458, 0.44", "-53.0797, 61.9203, 46.5184, 0.44", "-54.0462, 62.5051, 46.6009, 0.22", "-55.0781, 63.1219, 46.6567, 0.44", "-56.0735, 63.6663, 46.6733, 0.82", "-57.2176, 64.2155, 46.6422, 0.22", "-58.0055, 64.5486, 46.6062, 0.22", "-58.6969, 64.83, 46.5789, 0.22", "-59.147, 65.0129, 46.5693, 0.44", "-59.9557, 65.363, 46.577, 0.44", "-60.6547, 65.6811, 46.5843, 0.44", "-61.7467, 66.2036, 46.6112, 0.44", "-62.8685, 66.769, 46.6083, 0.44", "-64.3542, 67.5647, 46.607, 0.44", "-65.0787, 67.9869, 46.6083, 0.44", "-66.4512, 68.8551, 46.6174, 0.36", "-67.2736, 69.3986, 46.6302, 0.58", "-68.0489, 69.9164, 46.6573, 0.82" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-72.1736, 31.1149, -38.625, 0.52", "-72.6735, 31.565, -38.007, 0.52", "-73.0362, 31.9886, -37.2356, 0.3", "-73.382, 32.4145, -36.4552, 0.3", "-73.6094, 32.6946, -35.942, 0.3", "-73.9315, 33.0914, -35.2148, 0.3", "-74.2076, 33.4315, -34.5916, 0.3", "-74.6198, 34.1423, -33.2036, 0.3", "-74.7612, 34.4798, -32.491, 0.14" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-72.1736, 31.1149, -38.625, 0.14", "-71.6572, 31.6952, -38.46, 0.14", "-71.2624, 32.1298, -38.2617, 0.3", "-70.7364, 32.7144, -37.9604, 0.14", "-70.3991, 33.0842, -37.7641, 0.14", "-69.8524, 33.6182, -37.4393, 0.3", "-69.1256, 34.2469, -37.0488, 0.14", "-68.5015, 34.713, -36.7305, 0.14", "-68.209, 34.8766, -36.6052, 0.66", "-67.7508, 35.0319, -36.4933, 0.74", "-66.6773, 35.0823, -36.6192, 0.22", "-66.0215, 34.878, -36.9689, 0.22", "-65.743, 34.7164, -37.2196, 0.22", "-65.3092, 34.3222, -37.7697, 0.44", "-64.684, 33.4303, -38.957, 0.14", "-64.319, 32.5426, -40.0991, 0.14", "-64.2346, 32.0462, -40.7388, 0.3", "-64.275, 31.442, -41.4953, 0.3", "-64.4916, 30.9141, -42.221, 0.14", "-64.8789, 30.4518, -42.8978, 0.14", "-65.1002, 30.2652, -43.1597, 0.14", "-65.4325, 30.0148, -43.494, 0.36", "-65.9837, 29.6207, -44.0143, 0.36", "-67.5022, 28.5743, -45.3862, 0.14", "-68.2735, 28.0535, -46.0862, 0.14", "-68.8447, 27.6676, -46.5769, 0.3", "-69.1859, 27.4349, -46.8671, 0.3", "-69.5886, 27.1449, -47.1902, 0.3" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-23.5157, 28.957, -27.6894, 0.14", "-25.1121, 28.7971, -28.1408, 0.14", "-26.409, 28.655, -28.4311, 0.14", "-27.6481, 28.5435, -28.7087, 0.14", "-28.4245, 28.4737, -28.8826, 0.14", "-28.8489, 28.4355, -28.9777, 0.36", "-29.442, 28.3821, -29.1106, 0.58", "-31.0931, 28.13, -29.3992, 0.22", "-32.3153, 27.9747, -29.6198, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-23.5157, 28.957, -27.6894, 0.58", "-24.623, 30.5078, -26.8952, 0.58", "-24.9437, 31.0682, -26.6893, 0.58", "-25.2362, 31.669, -26.5255, 0.44", "-25.5755, 32.5035, -26.3613, 0.36", "-26.2617, 34.1407, -26.0561, 0.36", "-26.6747, 35.0734, -25.8831, 0.52", "-27.1452, 36.0997, -25.6264, 0.82", "-27.4689, 36.8564, -25.4677, 0.66", "-27.9221, 37.9999, -25.278, 0.52", "-28.3558, 39.2325, -25.1122, 0.52", "-28.6395, 40.0656, -25.0278, 0.58", "-28.9383, 40.9078, -24.8695, 0.74", "-29.1372, 41.5169, -24.6851, 0.52", "-29.3908, 42.3816, -24.4491, 0.52", "-29.7093, 43.658, -24.145, 0.52", "-29.8881, 44.59, -23.9676, 0.82", "-30.217, 46.092, -23.759, 0.36", "-30.5201, 47.0667, -23.6464, 0.36", "-31.5385, 49.0571, -23.4902, 0.36", "-31.9282, 49.52, -23.474, 0.88", "-32.189, 49.689, -23.4747, 0.88", "-33.9, 50.1942, -23.4674, 0.36", "-35.0178, 50.3936, -23.4761, 0.36", "-36.6406, 50.5417, -23.4192, 0.22", "-37.8091, 50.5605, -23.2682, 0.22", "-38.8185, 50.4855, -23.142, 0.22", "-39.9091, 50.2827, -23.0056, 0.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "58.4926, 31.5556, 101.903, 0.22", "58.9318, 31.7583, 102.432, 0.22", "59.8782, 32.1762, 103.518, 0.66", "60.8587, 32.5741, 104.59, 0.22", "62.0098, 32.9755, 105.86, 0.14", "62.8067, 33.2035, 106.727, 0.14", "63.2126, 33.2928, 107.183, 0.14", "63.5406, 33.3278, 107.567, 0.14", "63.8928, 33.3304, 107.98, 0.36", "64.5689, 33.2581, 108.777, 0.36", "64.9085, 33.174, 109.176, 0.14", "65.9276, 32.8207, 110.36, 0.14", "66.5636, 32.5603, 111.208, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "58.4926, 31.5556, 101.903, 0.3", "58.8, 31.9046, 102.375, 0.3", "59.225, 32.3123, 102.936, 0.22", "59.6919, 32.6607, 103.497, 0.22", "60.0562, 32.9059, 103.908, 0.44", "61.1579, 33.6548, 105.101, 0.44", "61.638, 33.9593, 105.6, 0.66", "62.0561, 34.1878, 106.018, 0.44", "63.0676, 34.7081, 106.934, 0.22", "63.5968, 35.0081, 107.409, 0.22", "63.9231, 35.2154, 107.706, 0.44", "64.8015, 35.7971, 108.477, 0.22", "65.6787, 36.3636, 109.261, 0.3", "66.4689, 36.8458, 109.965, 0.3", "67.6935, 37.6121, 111.048, 0.14", "68.3121, 37.9891, 111.603, 0.52", "68.6924, 38.2125, 111.949, 0.52", "69.342, 38.6068, 112.546, 0.22", "70.1199, 39.0123, 113.269, 0.74" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-47.784, 44.1267, 65.9681, 0.14", "-47.3488, 45.1756, 65.9257, 0.14", "-47.0527, 45.8894, 65.8968, 0.14", "-46.8736, 46.321, 65.8794, 0.3", "-46.6688, 46.8144, 65.8594, 0.3" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-47.784, 44.1267, 65.9681, 0.14", "-46.9579, 44.085, 66.1751, 0.14", "-45.9648, 44.101, 66.4849, 0.14", "-45.472, 44.1089, 66.6386, 0.22", "-44.5672, 44.1235, 66.9209, 0.22", "-43.9961, 44.1327, 67.0991, 0.22", "-43.4007, 44.1423, 67.2848, 0.3", "-42.7994, 44.1096, 67.5207, 0.3" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_60", "dend_45", "dend_20", "dend_13", "dend_0", "dend_83", "dend_76", "dend_70", "dend_61", "dend_53", "dend_46", "dend_30", "dend_21", "dend_15", "dend_14", "dend_8", "dend_1", "dend_87", "dend_84", "dend_80", "dend_77", "dend_74", "dend_71", "dend_65", "dend_62", "dend_59", "dend_54", "dend_50", "dend_47", "dend_36", "dend_31", "dend_25", "dend_22", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_2", "dend_89", "dend_88", "dend_86", "dend_85", "dend_82", "dend_81", "dend_79", "dend_78", "dend_73", "dend_72", "dend_69", "dend_66", "dend_64", "dend_63", "dend_58", "dend_55", "dend_52", "dend_51", "dend_49", "dend_48", "dend_40", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_24", "dend_23", "dend_19", "dend_18", "dend_12", "dend_11", "dend_4", "dend_3", "dend_68", "dend_67", "dend_57", "dend_56", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_29", "dend_28", "dend_6", "dend_5", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_60", "dend_45", "dend_20", "dend_13", "dend_0", "dend_83", "dend_76", "dend_70", "dend_61", "dend_53", "dend_46", "dend_30", "dend_21", "dend_15", "dend_14", "dend_8", "dend_1", "dend_87", "dend_84", "dend_80", "dend_77", "dend_74", "dend_71", "dend_65", "dend_62", "dend_59", "dend_54", "dend_50", "dend_47", "dend_36", "dend_31", "dend_25", "dend_22", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_2", "dend_89", "dend_88", "dend_86", "dend_85", "dend_82", "dend_81", "dend_79", "dend_78", "dend_73", "dend_72", "dend_69", "dend_66", "dend_64", "dend_63", "dend_58", "dend_55", "dend_52", "dend_51", "dend_49", "dend_48", "dend_40", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_24", "dend_23", "dend_19", "dend_18", "dend_12", "dend_11", "dend_4", "dend_3", "dend_68", "dend_67", "dend_57", "dend_56", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_29", "dend_28", "dend_6", "dend_5", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_60", "dend_45", "dend_20", "dend_13", "dend_0", "axon_0", "dend_83", "dend_76", "dend_70", "dend_61", "dend_53", "dend_46", "dend_30", "dend_21", "dend_15", "dend_14", "dend_8", "dend_1", "axon_1", "dend_87", "dend_84", "dend_80", "dend_77", "dend_74", "dend_71", "dend_65", "dend_62", "dend_59", "dend_54", "dend_50", "dend_47", "dend_36", "dend_31", "dend_25", "dend_22", "dend_17", "dend_16", "dend_10", "dend_9", "dend_7", "dend_2", "dend_89", "dend_88", "dend_86", "dend_85", "dend_82", "dend_81", "dend_79", "dend_78", "dend_73", "dend_72", "dend_69", "dend_66", "dend_64", "dend_63", "dend_58", "dend_55", "dend_52", "dend_51", "dend_49", "dend_48", "dend_40", "dend_37", "dend_35", "dend_32", "dend_27", "dend_26", "dend_24", "dend_23", "dend_19", "dend_18", "dend_12", "dend_11", "dend_4", "dend_3", "dend_68", "dend_67", "dend_57", "dend_56", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_29", "dend_28", "dend_6", "dend_5", "dend_44", "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_70", "dend_70", "dend_70", "dend_70", "dend_61", "dend_61", "dend_61", "dend_61", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L1_HAC_a67a175a7c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_83, id: dend_83, parent: dend_75
create dend_83
public dend_83
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_70, id: dend_70, parent: dend_60
create dend_70
public dend_70
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_20
create dend_30
public dend_30
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_87, id: dend_87, parent: dend_83
create dend_87
public dend_87
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_80, id: dend_80, parent: dend_76
create dend_80
public dend_80
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_53
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_86, id: dend_86, parent: dend_84
create dend_86
public dend_86
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_65
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_60, dend_45, dend_20, dend_13, dend_0, dend_83, dend_76, dend_70, dend_61, dend_53, dend_46, dend_30, dend_21, dend_15, dend_14, dend_8, dend_1, dend_87, dend_84, dend_80, dend_77, dend_74, dend_71, dend_65, dend_62, dend_59, dend_54, dend_50, dend_47, dend_36, dend_31, dend_25, dend_22, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_89, dend_88, dend_86, dend_85, dend_82, dend_81, dend_79, dend_78, dend_73, dend_72, dend_69, dend_66, dend_64, dend_63, dend_58, dend_55, dend_52, dend_51, dend_49, dend_48, dend_40, dend_37, dend_35, dend_32, dend_27, dend_26, dend_24, dend_23, dend_19, dend_18, dend_12, dend_11, dend_4, dend_3, dend_68, dend_67, dend_57, dend_56, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_29, dend_28, dend_6, dend_5, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_60, dend_45, dend_20, dend_13, dend_0, dend_83, dend_76, dend_70, dend_61, dend_53, dend_46, dend_30, dend_21, dend_15, dend_14, dend_8, dend_1, dend_87, dend_84, dend_80, dend_77, dend_74, dend_71, dend_65, dend_62, dend_59, dend_54, dend_50, dend_47, dend_36, dend_31, dend_25, dend_22, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_89, dend_88, dend_86, dend_85, dend_82, dend_81, dend_79, dend_78, dend_73, dend_72, dend_69, dend_66, dend_64, dend_63, dend_58, dend_55, dend_52, dend_51, dend_49, dend_48, dend_40, dend_37, dend_35, dend_32, dend_27, dend_26, dend_24, dend_23, dend_19, dend_18, dend_12, dend_11, dend_4, dend_3, dend_68, dend_67, dend_57, dend_56, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_29, dend_28, dend_6, dend_5, dend_44, dend_43]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_75, dend_60, dend_45, dend_20, dend_13, dend_0, axon_0, dend_83, dend_76, dend_70, dend_61, dend_53, dend_46, dend_30, dend_21, dend_15, dend_14, dend_8, dend_1, axon_1, dend_87, dend_84, dend_80, dend_77, dend_74, dend_71, dend_65, dend_62, dend_59, dend_54, dend_50, dend_47, dend_36, dend_31, dend_25, dend_22, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_89, dend_88, dend_86, dend_85, dend_82, dend_81, dend_79, dend_78, dend_73, dend_72, dend_69, dend_66, dend_64, dend_63, dend_58, dend_55, dend_52, dend_51, dend_49, dend_48, dend_40, dend_37, dend_35, dend_32, dend_27, dend_26, dend_24, dend_23, dend_19, dend_18, dend_12, dend_11, dend_4, dend_3, dend_68, dend_67, dend_57, dend_56, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_29, dend_28, dend_6, dend_5, dend_44, dend_43]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_86, dend_86, dend_86, dend_86, dend_86, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.45000000450990285)
    connect dend_60(0), soma_0(0.45000000450990285)
    connect dend_45(0), soma_0(0.45000000450990285)
    connect dend_20(0), soma_0(0.45000000450990285)
    connect dend_13(0), soma_0(0.45000000450990285)
    connect dend_0(0), soma_0(0.45000000450990285)
    connect axon_0(0), soma_0(1.0)
    connect dend_83(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_70(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_87(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_80(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_59(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_86(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.8932, -2.9747, 0.0, 2.90664 ) }
    soma_0 { pt3dadd( -7.11415, -2.67306, 0.0, 5.00018 ) }
    soma_0 { pt3dadd( -6.33509, -2.37141, 0.0, 6.59522 ) }
    soma_0 { pt3dadd( -5.55603, -2.06976, 0.0, 7.83334 ) }
    soma_0 { pt3dadd( -4.77698, -1.76812, 0.0, 8.76202 ) }
    soma_0 { pt3dadd( -3.99792, -1.46647, 0.0, 9.66096 ) }
    soma_0 { pt3dadd( -3.21886, -1.16483, 0.0, 10.4611 ) }
    soma_0 { pt3dadd( -2.43981, -0.863181, 0.0, 11.24 ) }
    soma_0 { pt3dadd( -1.66075, -0.561535, 0.0, 11.7445 ) }
    soma_0 { pt3dadd( -0.881692, -0.259889, 0.0, 12.0929 ) }
    soma_0 { pt3dadd( -0.102635, 0.0417564, 0.0, 12.2749 ) }
    soma_0 { pt3dadd( 0.676421, 0.343402, 0.0, 12.2586 ) }
    soma_0 { pt3dadd( 1.45548, 0.645048, 0.0, 12.0808 ) }
    soma_0 { pt3dadd( 2.23453, 0.946694, 0.0, 11.5585 ) }
    soma_0 { pt3dadd( 3.01359, 1.24834, 0.0, 10.9163 ) }
    soma_0 { pt3dadd( 3.79265, 1.54999, 0.0, 10.1046 ) }
    soma_0 { pt3dadd( 4.5717, 1.85163, 0.0, 8.97569 ) }
    soma_0 { pt3dadd( 5.35076, 2.15328, 0.0, 7.68454 ) }
    soma_0 { pt3dadd( 6.12982, 2.45492, 0.0, 6.04203 ) }
    soma_0 { pt3dadd( 6.90888, 2.75657, 0.0, 4.16798 ) }
    soma_0 { pt3dadd( 7.68793, 3.05821, 0.0, 2.43925 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -0.0188559, -0.978059, 3.42, 1.04 ) }
    dend_75 { pt3dadd( 0.928145, 0.223046, 4.57886, 1.04 ) }
    dend_75 { pt3dadd( 1.61219, 1.09063, 5.41592, 1.18 ) }
    dend_75 { pt3dadd( 2.14651, 1.76832, 6.06978, 1.18 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 25/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 5.43115, 4.26194, 0.0, 1.26 ) }
    dend_60 { pt3dadd( 5.8416, 5.22205, 0.85054, 1.26 ) }
    dend_60 { pt3dadd( 6.34245, 6.3936, 1.88839, 1.1 ) }
    dend_60 { pt3dadd( 6.81142, 7.49058, 2.86018, 1.1 ) }
    dend_60 { pt3dadd( 7.19575, 8.38956, 3.65657, 1.1 ) }
    dend_60 { pt3dadd( 7.85222, 9.92513, 5.01689, 0.96 ) }
    dend_60 { pt3dadd( 8.10445, 10.5151, 5.53956, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 32/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -0.508856, -6.40806, -0.27, 2.28 ) }
    dend_45 { pt3dadd( -0.508856, -6.40806, -0.27, 2.28 ) }
    dend_45 { pt3dadd( -0.668496, -7.69245, 0.883452, 2.0 ) }
    dend_45 { pt3dadd( -0.852532, -8.88874, 1.91346, 1.76 ) }
    dend_45 { pt3dadd( -1.0423, -9.91924, 2.83924, 1.48 ) }
    dend_45 { pt3dadd( -1.14554, -10.4269, 3.29246, 1.26 ) }
    dend_45 { pt3dadd( -1.28752, -11.1251, 3.91575, 1.26 ) }
    dend_45 { pt3dadd( -1.42183, -11.7684, 4.46602, 1.26 ) }
    dend_45 { pt3dadd( -1.56342, -12.4068, 4.95399, 1.26 ) }
    dend_45 { pt3dadd( -1.8197, -13.4309, 5.71791, 1.26 ) }
    dend_45 { pt3dadd( -1.96458, -13.8406, 6.05221, 1.26 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.41885, -0.798055, 1.92, 3.54 ) }
    dend_20 { pt3dadd( -7.41885, -0.798055, 1.92, 3.54 ) }
    dend_20 { pt3dadd( -8.38885, -0.728055, 2.28, 3.54 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.51115, 4.74194, -6.67, 0.96 ) }
    dend_13 { pt3dadd( 2.52058, 5.0706, -6.98048, 0.96 ) }
    dend_13 { pt3dadd( 2.5307, 5.36799, -7.24723, 0.96 ) }
    dend_13 { pt3dadd( 2.53729, 5.56148, -7.42078, 0.96 ) }
    dend_13 { pt3dadd( 2.57143, 6.56424, -8.32022, 0.66 ) }
    dend_13 { pt3dadd( 2.60178, 7.45552, -9.11967, 0.66 ) }
    dend_13 { pt3dadd( 2.6387, 8.53974, -10.0922, 1.04 ) }
    dend_13 { pt3dadd( 2.67413, 9.02143, -10.5583, 1.1 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 54/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.27115, 2.46194, -1.08, 1.18 ) }
    dend_0 { pt3dadd( 8.61375, 2.59574, -0.986611, 1.18 ) }
    dend_0 { pt3dadd( 9.42173, 2.91128, -0.766368, 1.18 ) }
    dend_0 { pt3dadd( 10.4901, 3.32852, -0.475136, 1.32 ) }
    dend_0 { pt3dadd( 11.1806, 3.59819, -0.286905, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 59/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.68793, 3.05821, 0.0, 0.442977 ) }
    axon_0 { pt3dadd( 21.676, 8.4743, 0.0, 0.442977 ) }
    axon_0 { pt3dadd( 35.6641, 13.8904, 0.0, 0.442977 ) }
    // Section: dend_83, id: dend_83, parent: dend_75 (entry count 62/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 2.14651, 1.76832, 6.06978, 1.18 ) }
    dend_83 { pt3dadd( 1.29851, 2.40279, 7.42936, 1.18 ) }
    dend_83 { pt3dadd( 0.53144, 3.06469, 8.93265, 1.18 ) }
    dend_83 { pt3dadd( 0.072266, 3.53316, 9.95613, 0.96 ) }
    dend_83 { pt3dadd( -0.477774, 4.19961, 11.2292, 0.96 ) }
    dend_83 { pt3dadd( -1.14016, 5.09172, 12.792, 0.82 ) }
    dend_83 { pt3dadd( -1.69248, 5.8356, 14.0952, 0.82 ) }
    dend_83 { pt3dadd( -2.39016, 6.80932, 15.7346, 1.04 ) }
    dend_83 { pt3dadd( -2.69143, 7.33085, 16.5579, 1.04 ) }
    dend_83 { pt3dadd( -3.11018, 8.41252, 18.2678, 0.82 ) }
    dend_83 { pt3dadd( -3.12468, 8.48374, 18.3679, 0.82 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 73/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 2.14651, 1.76832, 6.06978, 0.36 ) }
    dend_76 { pt3dadd( 3.67697, 3.22732, 8.18221, 0.36 ) }
    dend_76 { pt3dadd( 4.61273, 4.07049, 9.05862, 0.36 ) }
    dend_76 { pt3dadd( 5.6703, 4.95823, 9.72411, 0.3 ) }
    dend_76 { pt3dadd( 6.14928, 5.34336, 9.93823, 0.3 ) }
    dend_76 { pt3dadd( 7.00017, 6.01014, 10.2148, 0.3 ) }
    dend_76 { pt3dadd( 8.53627, 7.22325, 10.6083, 0.3 ) }
    dend_76 { pt3dadd( 9.19355, 7.72278, 10.5359, 0.3 ) }
    dend_76 { pt3dadd( 9.88402, 8.28608, 10.3796, 0.44 ) }
    dend_76 { pt3dadd( 10.4415, 8.78936, 10.2503, 0.44 ) }
    dend_76 { pt3dadd( 11.1541, 9.51967, 10.1581, 0.22 ) }
    dend_76 { pt3dadd( 11.5495, 10.022, 10.1748, 0.22 ) }
    dend_76 { pt3dadd( 12.3246, 11.4151, 10.5229, 0.22 ) }
    dend_76 { pt3dadd( 12.8572, 12.728, 10.8887, 0.36 ) }
    dend_76 { pt3dadd( 13.3591, 14.3687, 11.3586, 0.36 ) }
    dend_76 { pt3dadd( 13.5512, 15.162, 11.6049, 0.22 ) }
    dend_76 { pt3dadd( 13.735, 16.0946, 11.9359, 0.22 ) }
    dend_76 { pt3dadd( 13.9102, 17.0517, 12.3077, 0.22 ) }
    dend_76 { pt3dadd( 14.0689, 18.0064, 12.7306, 0.22 ) }
    dend_76 { pt3dadd( 14.2161, 18.8014, 13.0472, 0.22 ) }
    dend_76 { pt3dadd( 14.4637, 19.9775, 13.5387, 0.14 ) }
    dend_76 { pt3dadd( 14.6456, 20.8096, 13.9553, 0.44 ) }
    dend_76 { pt3dadd( 14.7911, 21.5143, 14.4, 0.44 ) }
    dend_76 { pt3dadd( 14.9231, 22.2882, 14.9815, 0.44 ) }
    dend_76 { pt3dadd( 15.0022, 22.8266, 15.4354, 0.58 ) }
    dend_76 { pt3dadd( 15.0733, 23.3655, 15.9585, 0.58 ) }
    dend_76 { pt3dadd( 15.1243, 23.9302, 16.5813, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_76 { pt3dadd( 15.155, 24.9242, 17.7981, 0.22 ) }
    dend_76 { pt3dadd( 15.1166, 25.5794, 18.7009, 0.22 ) }
    dend_76 { pt3dadd( 15.0712, 25.8783, 19.1499, 0.66 ) }
    dend_76 { pt3dadd( 14.9412, 26.588, 20.2467, 0.66 ) }
    dend_76 { pt3dadd( 14.8227, 27.283, 21.2864, 0.44 ) }
    dend_76 { pt3dadd( 14.7427, 27.9411, 22.2434, 0.44 ) }
    dend_76 { pt3dadd( 14.7163, 28.6353, 23.201, 0.44 ) }
    dend_76 { pt3dadd( 14.7516, 29.3925, 24.2346, 0.74 ) }
    dend_76 { pt3dadd( 14.8108, 30.1869, 25.3619, 0.58 ) }
    dend_76 { pt3dadd( 14.853, 30.7217, 26.14, 0.52 ) }
    dend_76 { pt3dadd( 14.892, 31.4335, 27.2118, 0.44 ) }
    dend_76 { pt3dadd( 14.9169, 32.1693, 28.378, 0.44 ) }
    dend_76 { pt3dadd( 14.9558, 33.0527, 29.7779, 0.66 ) }
    dend_76 { pt3dadd( 14.9853, 33.8577, 31.0478, 0.66 ) }
    dend_76 { pt3dadd( 14.9895, 34.6094, 32.2179, 0.66 ) }
    dend_76 { pt3dadd( 14.9815, 35.547, 33.5554, 0.52 ) }
    dend_76 { pt3dadd( 14.968, 36.1057, 34.1962, 0.52 ) }
    dend_76 { pt3dadd( 14.9377, 37.0099, 34.9979, 0.3 ) }
    dend_76 { pt3dadd( 14.9018, 37.9564, 35.6329, 0.66 ) }
    dend_76 { pt3dadd( 14.8596, 38.6515, 36.0214, 0.66 ) }
    dend_76 { pt3dadd( 14.74, 39.5811, 36.5174, 0.66 ) }
    dend_76 { pt3dadd( 14.5151, 40.6563, 37.1041, 0.3 ) }
    dend_76 { pt3dadd( 14.1327, 42.055, 38.0093, 0.3 ) }
    dend_76 { pt3dadd( 13.9962, 42.4725, 38.3427, 0.66 ) }
    dend_76 { pt3dadd( 13.7316, 43.2928, 39.1088, 0.66 ) }
    dend_76 { pt3dadd( 13.5458, 44.0833, 39.9372, 0.52 ) }
    dend_76 { pt3dadd( 13.5083, 44.5178, 40.4456, 0.52 ) }
    dend_76 { pt3dadd( 13.6153, 45.4161, 41.596, 0.74 ) }
    dend_76 { pt3dadd( 13.7, 45.7113, 41.9404, 0.74 ) }
    dend_76 { pt3dadd( 13.7991, 45.9264, 42.1957, 0.74 ) }
    dend_76 { pt3dadd( 14.1775, 46.516, 42.8365, 0.44 ) }
    dend_76 { pt3dadd( 14.6061, 47.0527, 43.3854, 0.52 ) }
    dend_76 { pt3dadd( 15.4741, 47.9368, 44.2795, 0.52 ) }
    dend_76 { pt3dadd( 15.9997, 48.3694, 44.6558, 0.22 ) }
    dend_76 { pt3dadd( 17.2903, 49.1572, 45.2276, 0.22 ) }
    dend_76 { pt3dadd( 18.5652, 49.6575, 45.4709, 0.22 ) }
    dend_76 { pt3dadd( 19.1454, 49.7359, 45.4316, 0.22 ) }
    dend_76 { pt3dadd( 19.9553, 49.7205, 45.2479, 0.22 ) }
    dend_76 { pt3dadd( 20.4541, 49.6498, 45.1057, 0.22 ) }
    dend_76 { pt3dadd( 21.2822, 49.4539, 44.9034, 0.22 ) }
    dend_76 { pt3dadd( 21.5497, 49.3804, 44.8406, 0.22 ) }
    dend_76 { pt3dadd( 21.9638, 49.2816, 44.7963, 0.52 ) }
    dend_76 { pt3dadd( 22.28, 49.2265, 44.7697, 0.52 ) }
    dend_76 { pt3dadd( 23.2892, 49.0965, 44.7072, 0.22 ) }
    dend_76 { pt3dadd( 23.8303, 49.0289, 44.7334, 0.22 ) }
    dend_76 { pt3dadd( 24.5684, 48.9424, 44.8366, 0.44 ) }
    dend_76 { pt3dadd( 25.0827, 48.9112, 44.9749, 0.44 ) }
    dend_76 { pt3dadd( 25.5413, 48.9159, 45.1025, 0.22 ) }
    dend_76 { pt3dadd( 26.3017, 48.9665, 45.3186, 0.52 ) }
    dend_76 { pt3dadd( 27.5567, 49.0946, 45.6873, 0.36 ) }
    dend_76 { pt3dadd( 28.3576, 49.167, 45.9117, 0.52 ) }
    dend_76 { pt3dadd( 29.625, 49.2897, 46.2241, 0.14 ) }
    dend_76 { pt3dadd( 30.9519, 49.4306, 46.5006, 0.14 ) }
    dend_76 { pt3dadd( 31.3888, 49.4786, 46.5737, 0.52 ) }
    dend_76 { pt3dadd( 31.8855, 49.5336, 46.6298, 0.82 ) }
    dend_76 { pt3dadd( 32.9119, 49.6187, 46.6844, 0.3 ) }
    dend_76 { pt3dadd( 33.9833, 49.6521, 46.7548, 0.22 ) }
    dend_76 { pt3dadd( 34.3183, 49.6427, 46.779, 0.22 ) }
    dend_76 { pt3dadd( 34.6327, 49.6274, 46.8409, 0.22 ) }
    dend_76 { pt3dadd( 35.2001, 49.6057, 46.9671, 0.14 ) }
    dend_76 { pt3dadd( 36.0135, 49.5909, 47.1568, 0.22 ) }
    dend_76 { pt3dadd( 36.3797, 49.589, 47.2409, 0.36 ) }
    dend_76 { pt3dadd( 36.6702, 49.5771, 47.302, 0.36 ) }
    dend_76 { pt3dadd( 37.4021, 49.5396, 47.3998, 0.22 ) }
    dend_76 { pt3dadd( 38.0604, 49.5102, 47.4167, 0.22 ) }
    dend_76 { pt3dadd( 38.7292, 49.4933, 47.3753, 0.22 ) }
    dend_76 { pt3dadd( 39.2529, 49.4793, 47.3119, 0.52 ) }
    dend_76 { pt3dadd( 39.8288, 49.4541, 47.2486, 0.3 ) }
    dend_76 { pt3dadd( 40.5359, 49.4219, 47.1651, 0.3 ) }
    dend_76 { pt3dadd( 41.1907, 49.3953, 47.0787, 0.58 ) }
    dend_76 { pt3dadd( 41.555, 49.4022, 47.0384, 0.58 ) }
    dend_76 { pt3dadd( 42.1805, 49.4808, 46.9759, 0.36 ) }
    dend_76 { pt3dadd( 43.2901, 49.7263, 46.8515, 0.22 ) }
    dend_76 { pt3dadd( 44.0627, 49.9481, 46.7633, 0.22 ) }
    dend_76 { pt3dadd( 44.3498, 50.0347, 46.7346, 0.22 ) }
    dend_76 { pt3dadd( 45.3232, 50.2919, 46.7063, 0.52 ) }
    dend_76 { pt3dadd( 46.2212, 50.5382, 46.6672, 0.14 ) }
    dend_76 { pt3dadd( 46.9851, 50.7599, 46.6145, 0.44 ) }
    dend_76 { pt3dadd( 47.4757, 50.8963, 46.5583, 0.66 ) }
    dend_76 { pt3dadd( 48.2126, 51.0567, 46.5027, 0.22 ) }
    dend_76 { pt3dadd( 49.8424, 51.2862, 46.4479, 0.36 ) }
    // Section: dend_70, id: dend_70, parent: dend_60 (entry count 81/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 8.10445, 10.5151, 5.53956, 0.82 ) }
    dend_70 { pt3dadd( 7.6125, 11.0428, 6.832, 0.82 ) }
    dend_70 { pt3dadd( 7.08963, 11.6037, 8.20569, 0.82 ) }
    dend_70 { pt3dadd( 6.47068, 12.2677, 9.8318, 1.04 ) }
    dend_70 { pt3dadd( 6.22622, 12.5299, 10.474, 1.04 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 86/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 8.10445, 10.5151, 5.53956, 0.66 ) }
    dend_61 { pt3dadd( 7.92411, 10.5989, 7.45877, 0.66 ) }
    dend_61 { pt3dadd( 7.63021, 10.7356, 10.5866, 0.66 ) }
    dend_61 { pt3dadd( 7.40445, 10.8405, 12.9893, 0.66 ) }
    dend_61 { pt3dadd( 7.12206, 10.9718, 15.9947, 0.66 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -1.96458, -13.8406, 6.05221, 0.58 ) }
    dend_53 { pt3dadd( -0.984742, -14.0414, 7.48164, 0.58 ) }
    dend_53 { pt3dadd( -0.149217, -14.2127, 8.70056, 0.58 ) }
    dend_53 { pt3dadd( 0.718061, -14.3905, 9.9658, 0.58 ) }
    dend_53 { pt3dadd( 1.54627, -14.5602, 11.174, 0.74 ) }
    dend_53 { pt3dadd( 1.93461, -14.6398, 11.7406, 0.74 ) }
    dend_53 { pt3dadd( 2.52092, -14.76, 12.5959, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 98/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.96458, -13.8406, 6.05221, 0.82 ) }
    dend_46 { pt3dadd( -0.0419438, -15.0241, 3.22608, 0.82 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 0.993081, -15.6291, 1.94889, 0.58 ) }
    dend_46 { pt3dadd( 1.78421, -16.0814, 1.07682, 0.58 ) }
    dend_46 { pt3dadd( 2.39744, -16.431, 0.392056, 0.58 ) }
    dend_46 { pt3dadd( 3.01848, -16.7962, -0.302193, 0.44 ) }
    dend_46 { pt3dadd( 3.40978, -17.0262, -0.739628, 0.58 ) }
    dend_46 { pt3dadd( 3.78713, -17.2299, -1.20943, 0.58 ) }
    dend_46 { pt3dadd( 4.52966, -17.6053, -2.01806, 0.44 ) }
    dend_46 { pt3dadd( 5.25463, -17.9921, -2.75859, 0.88 ) }
    dend_46 { pt3dadd( 5.52702, -18.1434, -3.04267, 0.88 ) }
    // Section: dend_30, id: dend_30, parent: dend_20 (entry count 9/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -8.38885, -0.728055, 2.28, 1.1 ) }
    dend_30 { pt3dadd( -9.92975, -0.29221, 2.6373, 1.1 ) }
    dend_30 { pt3dadd( -11.307, 0.134736, 2.80867, 0.96 ) }
    dend_30 { pt3dadd( -12.9042, 0.669771, 2.80568, 1.04 ) }
    dend_30 { pt3dadd( -14.2541, 1.15438, 2.63341, 0.96 ) }
    dend_30 { pt3dadd( -15.2851, 1.54006, 2.38926, 0.96 ) }
    dend_30 { pt3dadd( -16.4579, 1.97875, 2.11155, 0.96 ) }
    dend_30 { pt3dadd( -17.4588, 2.41697, 1.74731, 0.82 ) }
    dend_30 { pt3dadd( -18.5606, 2.93757, 1.14204, 0.96 ) }
    dend_30 { pt3dadd( -19.5508, 3.42516, 0.38213, 1.1 ) }
    dend_30 { pt3dadd( -20.3791, 3.81829, -0.415772, 1.32 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 20/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.38885, -0.728055, 2.28, 1.4 ) }
    dend_21 { pt3dadd( -9.43784, 0.409027, 1.01759, 1.4 ) }
    dend_21 { pt3dadd( -10.1202, 1.26929, -0.102658, 1.04 ) }
    dend_21 { pt3dadd( -10.6363, 1.99904, -1.0722, 0.88 ) }
    dend_21 { pt3dadd( -11.1098, 2.66839, -1.96149, 0.52 ) }
    dend_21 { pt3dadd( -11.6278, 3.40077, -2.93452, 0.52 ) }
    dend_21 { pt3dadd( -12.0007, 3.928, -3.63499, 0.74 ) }
    dend_21 { pt3dadd( -12.5012, 4.83651, -5.00153, 0.88 ) }
    dend_21 { pt3dadd( -12.5805, 5.08247, -5.38272, 0.88 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 29/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.67413, 9.02143, -10.5583, 0.58 ) }
    dend_15 { pt3dadd( 3.35069, 9.71355, -10.1411, 0.58 ) }
    dend_15 { pt3dadd( 4.13283, 10.5137, -9.65877, 0.44 ) }
    dend_15 { pt3dadd( 5.06052, 11.4627, -9.08673, 0.52 ) }
    dend_15 { pt3dadd( 5.77519, 12.1938, -8.64604, 0.52 ) }
    dend_15 { pt3dadd( 6.77435, 13.216, -8.02993, 0.52 ) }
    dend_15 { pt3dadd( 7.14826, 13.5985, -7.79936, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.67413, 9.02143, -10.5583, 0.44 ) }
    dend_14 { pt3dadd( 2.02291, 9.43207, -11.9446, 0.44 ) }
    dend_14 { pt3dadd( 1.29829, 9.81844, -13.2259, 0.58 ) }
    dend_14 { pt3dadd( 0.772907, 10.0007, -14.0587, 0.58 ) }
    dend_14 { pt3dadd( 0.288441, 10.1108, -14.8122, 0.44 ) }
    dend_14 { pt3dadd( -0.433891, 10.2337, -15.9559, 0.44 ) }
    dend_14 { pt3dadd( -0.955272, 10.3186, -16.8329, 0.44 ) }
    dend_14 { pt3dadd( -1.35832, 10.403, -17.5717, 0.44 ) }
    dend_14 { pt3dadd( -1.90499, 10.5695, -18.5628, 0.3 ) }
    dend_14 { pt3dadd( -2.12035, 10.6572, -19.0032, 0.3 ) }
    dend_14 { pt3dadd( -2.21822, 10.7509, -19.3527, 0.3 ) }
    dend_14 { pt3dadd( -2.38047, 11.0225, -20.1352, 0.3 ) }
    dend_14 { pt3dadd( -2.45735, 11.2062, -20.6024, 0.3 ) }
    dend_14 { pt3dadd( -2.59953, 11.5983, -21.5556, 0.22 ) }
    dend_14 { pt3dadd( -2.79765, 12.1102, -22.7735, 0.22 ) }
    dend_14 { pt3dadd( -3.22192, 12.9075, -24.7402, 0.36 ) }
    dend_14 { pt3dadd( -3.51734, 13.3364, -25.8587, 0.88 ) }
    dend_14 { pt3dadd( -4.02968, 13.9146, -27.5683, 0.44 ) }
    dend_14 { pt3dadd( -4.4894, 14.3347, -29.0521, 0.44 ) }
    dend_14 { pt3dadd( -5.09528, 14.7738, -30.9808, 0.44 ) }
    dend_14 { pt3dadd( -5.53574, 15.0203, -32.3626, 0.44 ) }
    dend_14 { pt3dadd( -5.74811, 15.0938, -33.087, 0.44 ) }
    dend_14 { pt3dadd( -5.99498, 15.0955, -34.1868, 0.44 ) }
    dend_14 { pt3dadd( -6.17451, 14.9639, -35.454, 0.44 ) }
    dend_14 { pt3dadd( -6.19742, 14.843, -36.1576, 0.44 ) }
    dend_14 { pt3dadd( -6.08449, 14.6111, -37.2404, 0.44 ) }
    dend_14 { pt3dadd( -5.73109, 14.3334, -38.7037, 0.44 ) }
    dend_14 { pt3dadd( -5.27083, 14.1523, -40.0471, 0.66 ) }
    dend_14 { pt3dadd( -4.77058, 14.0933, -41.195, 0.66 ) }
    dend_14 { pt3dadd( -4.47889, 14.1246, -41.7768, 0.36 ) }
    dend_14 { pt3dadd( -4.15666, 14.251, -42.3403, 0.3 ) }
    dend_14 { pt3dadd( -3.57859, 14.7899, -43.1593, 0.14 ) }
    dend_14 { pt3dadd( -3.28328, 15.2444, -43.4205, 0.14 ) }
    dend_14 { pt3dadd( -3.13436, 15.4762, -43.4913, 0.44 ) }
    dend_14 { pt3dadd( -2.59988, 16.1566, -43.609, 0.44 ) }
    dend_14 { pt3dadd( -2.02283, 16.7371, -43.6671, 0.44 ) }
    dend_14 { pt3dadd( -1.25574, 17.2655, -43.6595, 0.44 ) }
    dend_14 { pt3dadd( -0.465128, 17.675, -43.5448, 0.44 ) }
    dend_14 { pt3dadd( 0.702161, 18.1572, -43.3401, 0.44 ) }
    dend_14 { pt3dadd( 1.62707, 18.4925, -43.1648, 0.22 ) }
    dend_14 { pt3dadd( 2.11252, 18.6626, -43.0644, 0.22 ) }
    dend_14 { pt3dadd( 3.00751, 18.9934, -42.831, 0.66 ) }
    dend_14 { pt3dadd( 4.15507, 19.5504, -42.448, 0.22 ) }
    dend_14 { pt3dadd( 4.86194, 20.0699, -42.0941, 0.22 ) }
    dend_14 { pt3dadd( 5.12313, 20.3457, -41.8981, 0.22 ) }
    dend_14 { pt3dadd( 5.73804, 21.1542, -41.2771, 0.22 ) }
    dend_14 { pt3dadd( 6.05921, 21.6673, -40.8081, 0.22 ) }
    dend_14 { pt3dadd( 6.39025, 22.3319, -40.0555, 0.14 ) }
    dend_14 { pt3dadd( 6.78267, 23.2891, -38.8306, 0.14 ) }
    dend_14 { pt3dadd( 7.03558, 23.9434, -37.9228, 0.14 ) }
    dend_14 { pt3dadd( 7.28739, 24.5583, -36.9903, 0.74 ) }
    dend_14 { pt3dadd( 7.66842, 25.4116, -35.5779, 0.36 ) }
    dend_14 { pt3dadd( 8.11247, 26.2968, -34.023, 0.22 ) }
    dend_14 { pt3dadd( 8.49765, 26.9986, -32.7108, 0.08 ) }
    dend_14 { pt3dadd( 8.78572, 27.5176, -31.7204, 0.22 ) }
    dend_14 { pt3dadd( 9.13871, 28.1295, -30.5395, 0.22 ) }
    dend_14 { pt3dadd( 9.43492, 28.6193, -29.598, 0.36 ) }
    dend_14 { pt3dadd( 9.95715, 29.3455, -28.2961, 0.36 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 94/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 11.1806, 3.59819, -0.286905, 0.96 ) }
    dend_8 { pt3dadd( 11.7727, 4.9664, 0.184261, 0.96 ) }
    dend_8 { pt3dadd( 12.3495, 6.35447, 0.615442, 0.82 ) }
    dend_8 { pt3dadd( 12.5428, 6.88164, 0.737186, 0.82 ) }
    dend_8 { pt3dadd( 12.9669, 8.16592, 0.965545, 0.96 ) }
    dend_8 { pt3dadd( 13.4851, 9.86816, 1.2074, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_8 { pt3dadd( 13.787, 10.9239, 1.32838, 0.82 ) }
    dend_8 { pt3dadd( 14.0671, 12.0229, 1.39892, 0.88 ) }
    dend_8 { pt3dadd( 14.3387, 13.344, 1.39032, 0.74 ) }
    dend_8 { pt3dadd( 14.4874, 14.1638, 1.32237, 0.66 ) }
    dend_8 { pt3dadd( 14.5964, 14.8437, 1.20349, 0.66 ) }
    dend_8 { pt3dadd( 14.7138, 15.763, 0.960817, 0.82 ) }
    dend_8 { pt3dadd( 14.7702, 16.2267, 0.809021, 0.82 ) }
    dend_8 { pt3dadd( 14.8811, 17.0774, 0.489682, 0.96 ) }
    dend_8 { pt3dadd( 15.005, 18.0908, 0.088825, 0.52 ) }
    dend_8 { pt3dadd( 15.0285, 18.6769, -0.209448, 0.52 ) }
    dend_8 { pt3dadd( 15.0055, 19.2745, -0.56671, 0.52 ) }
    dend_8 { pt3dadd( 14.9622, 19.8134, -0.893454, 0.52 ) }
    dend_8 { pt3dadd( 14.944, 20.1429, -1.07119, 0.82 ) }
    dend_8 { pt3dadd( 14.9577, 20.6442, -1.2928, 0.96 ) }
    dend_8 { pt3dadd( 15.1416, 21.5794, -1.63609, 0.36 ) }
    dend_8 { pt3dadd( 15.3597, 22.0358, -1.80438, 0.36 ) }
    dend_8 { pt3dadd( 15.9355, 22.8274, -2.07415, 0.52 ) }
    dend_8 { pt3dadd( 16.417, 23.414, -2.25871, 0.74 ) }
    dend_8 { pt3dadd( 17.0287, 24.0683, -2.46865, 0.74 ) }
    dend_8 { pt3dadd( 17.9327, 24.9128, -2.74122, 0.58 ) }
    dend_8 { pt3dadd( 18.7701, 25.5774, -2.95463, 0.74 ) }
    dend_8 { pt3dadd( 19.3683, 25.9965, -3.14293, 0.96 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 11.1806, 3.59819, -0.286905, 0.66 ) }
    dend_1 { pt3dadd( 11.7966, 2.91603, 0.136463, 0.66 ) }
    dend_1 { pt3dadd( 12.0634, 2.60224, 0.356402, 0.66 ) }
    dend_1 { pt3dadd( 12.4532, 2.12978, 0.732267, 0.82 ) }
    dend_1 { pt3dadd( 12.9883, 1.4858, 1.27584, 0.96 ) }
    dend_1 { pt3dadd( 13.7705, 0.611626, 2.08347, 0.96 ) }
    dend_1 { pt3dadd( 14.6528, -0.28881, 2.97592, 0.82 ) }
    dend_1 { pt3dadd( 15.135, -0.735181, 3.50765, 0.66 ) }
    dend_1 { pt3dadd( 15.7517, -1.21851, 4.22111, 0.66 ) }
    dend_1 { pt3dadd( 16.1876, -1.44322, 4.72994, 0.66 ) }
    dend_1 { pt3dadd( 16.8013, -1.53423, 5.4594, 0.74 ) }
    dend_1 { pt3dadd( 17.1854, -1.44418, 5.90551, 0.96 ) }
    dend_1 { pt3dadd( 17.9172, -1.10857, 6.71199, 1.32 ) }
    dend_1 { pt3dadd( 18.3348, -0.874433, 7.13114, 1.32 ) }
    dend_1 { pt3dadd( 19.1653, -0.368457, 7.88233, 0.88 ) }
    dend_1 { pt3dadd( 20.1531, 0.223295, 8.69055, 0.82 ) }
    dend_1 { pt3dadd( 21.2293, 0.878007, 9.55305, 0.82 ) }
    dend_1 { pt3dadd( 21.6169, 1.10858, 9.85396, 0.82 ) }
    dend_1 { pt3dadd( 22.4847, 1.58841, 10.4582, 0.82 ) }
    dend_1 { pt3dadd( 23.1204, 1.90619, 10.8489, 1.04 ) }
    dend_1 { pt3dadd( 24.2614, 2.36397, 11.4439, 1.18 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.6641, 13.8904, 0.0, 0.324625 ) }
    axon_1 { pt3dadd( 49.6521, 19.3065, 0.0, 0.324625 ) }
    axon_1 { pt3dadd( 63.6402, 24.7226, 0.0, 0.324625 ) }
    // Section: dend_87, id: dend_87, parent: dend_83 (entry count 46/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -3.12468, 8.48374, 18.3679, 0.58 ) }
    dend_87 { pt3dadd( -3.11493, 8.44533, 18.7296, 0.58 ) }
    dend_87 { pt3dadd( -3.05576, 8.22747, 20.7193, 0.58 ) }
    dend_87 { pt3dadd( -2.95499, 7.87708, 23.7504, 0.58 ) }
    dend_87 { pt3dadd( -2.85098, 7.50485, 26.874, 0.58 ) }
    dend_87 { pt3dadd( -2.78398, 7.22278, 29.1067, 0.58 ) }
    dend_87 { pt3dadd( -2.73072, 6.90466, 31.3413, 0.58 ) }
    dend_87 { pt3dadd( -2.69871, 6.57836, 33.4017, 0.58 ) }
    dend_87 { pt3dadd( -2.69023, 6.50259, 33.8035, 0.58 ) }
    dend_87 { pt3dadd( -2.5962, 6.06137, 35.6613, 0.58 ) }
    dend_87 { pt3dadd( -2.54249, 5.91218, 36.1759, 0.58 ) }
    dend_87 { pt3dadd( -2.3942, 5.61908, 37.0401, 0.82 ) }
    dend_87 { pt3dadd( -2.08084, 5.06783, 38.4056, 0.82 ) }
    dend_87 { pt3dadd( -1.87836, 4.75381, 39.074, 0.36 ) }
    dend_87 { pt3dadd( -1.60245, 4.39957, 39.7944, 0.36 ) }
    dend_87 { pt3dadd( -1.33581, 4.16502, 40.2, 0.36 ) }
    dend_87 { pt3dadd( -0.917382, 3.92401, 40.6819, 0.52 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 63/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -3.12468, 8.48374, 18.3679, 0.58 ) }
    dend_84 { pt3dadd( -3.62287, 9.34474, 18.4935, 0.58 ) }
    dend_84 { pt3dadd( -4.05196, 10.0495, 18.7593, 0.44 ) }
    dend_84 { pt3dadd( -4.48056, 10.7591, 19.11, 0.44 ) }
    dend_84 { pt3dadd( -4.97538, 11.5598, 19.5525, 0.74 ) }
    dend_84 { pt3dadd( -5.33421, 12.0954, 19.8948, 0.82 ) }
    dend_84 { pt3dadd( -6.1772, 13.2969, 20.7637, 0.58 ) }
    dend_84 { pt3dadd( -7.05467, 14.4735, 21.7699, 0.36 ) }
    dend_84 { pt3dadd( -7.624, 15.2605, 22.4709, 0.3 ) }
    dend_84 { pt3dadd( -8.01429, 15.8139, 22.9552, 0.58 ) }
    dend_84 { pt3dadd( -8.54582, 16.6069, 23.6481, 0.58 ) }
    dend_84 { pt3dadd( -9.18027, 17.6891, 24.5899, 0.58 ) }
    dend_84 { pt3dadd( -9.65893, 18.6847, 25.3999, 0.74 ) }
    dend_84 { pt3dadd( -9.91975, 19.4253, 25.954, 0.58 ) }
    dend_84 { pt3dadd( -10.1201, 20.2638, 26.5618, 0.36 ) }
    dend_84 { pt3dadd( -10.2791, 21.5395, 27.4868, 0.36 ) }
    dend_84 { pt3dadd( -10.3293, 22.5448, 28.2278, 0.36 ) }
    dend_84 { pt3dadd( -10.3393, 22.7346, 28.3801, 0.36 ) }
    dend_84 { pt3dadd( -10.402, 23.4274, 29.0454, 0.96 ) }
    dend_84 { pt3dadd( -10.5606, 24.3909, 30.0821, 0.74 ) }
    dend_84 { pt3dadd( -10.7907, 25.3486, 31.1992, 0.52 ) }
    dend_84 { pt3dadd( -11.0255, 26.1039, 32.1441, 0.74 ) }
    dend_84 { pt3dadd( -11.2627, 26.7733, 33.0993, 0.36 ) }
    dend_84 { pt3dadd( -11.53, 27.5296, 34.362, 0.36 ) }
    dend_84 { pt3dadd( -11.7112, 28.0521, 35.3372, 0.88 ) }
    dend_84 { pt3dadd( -11.9989, 28.8855, 36.9528, 0.52 ) }
    dend_84 { pt3dadd( -12.3013, 29.7321, 38.6189, 0.52 ) }
    dend_84 { pt3dadd( -12.6171, 30.6058, 40.2395, 0.52 ) }
    dend_84 { pt3dadd( -12.9409, 31.4909, 41.795, 0.52 ) }
    dend_84 { pt3dadd( -13.0854, 31.8497, 42.3745, 0.52 ) }
    dend_84 { pt3dadd( -13.2746, 32.274, 42.9984, 0.3 ) }
    dend_84 { pt3dadd( -13.7295, 33.2049, 44.1553, 0.66 ) }
    dend_84 { pt3dadd( -14.2867, 34.2739, 45.2437, 0.74 ) }
    dend_84 { pt3dadd( -15.0271, 35.6264, 46.3106, 0.44 ) }
    dend_84 { pt3dadd( -15.6977, 36.7558, 47.0105, 0.66 ) }
    dend_84 { pt3dadd( -16.2022, 37.539, 47.4138, 0.22 ) }
    dend_84 { pt3dadd( -16.6776, 38.2385, 47.675, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_84 { pt3dadd( -17.0824, 38.7698, 47.7407, 0.74 ) }
    dend_84 { pt3dadd( -18.2131, 40.0278, 47.5646, 0.52 ) }
    dend_84 { pt3dadd( -18.885, 40.6404, 47.3189, 0.52 ) }
    dend_84 { pt3dadd( -19.3508, 40.9806, 47.1024, 0.66 ) }
    dend_84 { pt3dadd( -19.9155, 41.3017, 46.8123, 0.66 ) }
    dend_84 { pt3dadd( -20.7829, 41.6815, 46.3396, 0.52 ) }
    dend_84 { pt3dadd( -21.3281, 41.8769, 46.0243, 0.3 ) }
    dend_84 { pt3dadd( -22.0254, 42.0814, 45.5906, 0.22 ) }
    dend_84 { pt3dadd( -22.4943, 42.199, 45.2417, 0.22 ) }
    dend_84 { pt3dadd( -23.0928, 42.3334, 44.7394, 0.22 ) }
    dend_84 { pt3dadd( -23.4893, 42.4352, 44.3887, 0.44 ) }
    dend_84 { pt3dadd( -24.2934, 42.695, 43.6544, 0.44 ) }
    dend_84 { pt3dadd( -24.7847, 42.8916, 43.2114, 0.44 ) }
    dend_84 { pt3dadd( -25.3274, 43.1504, 42.7395, 1.04 ) }
    dend_84 { pt3dadd( -26.3428, 43.6443, 41.958, 0.22 ) }
    dend_84 { pt3dadd( -26.9404, 43.8928, 41.5248, 0.22 ) }
    dend_84 { pt3dadd( -27.4109, 44.027, 41.1482, 0.22 ) }
    dend_84 { pt3dadd( -27.6625, 44.0694, 40.9403, 0.22 ) }
    dend_84 { pt3dadd( -27.8399, 44.0876, 40.7927, 0.66 ) }
    dend_84 { pt3dadd( -28.3224, 44.1103, 40.3728, 0.74 ) }
    dend_84 { pt3dadd( -29.4569, 44.1341, 39.4064, 0.3 ) }
    dend_84 { pt3dadd( -30.5657, 44.2088, 38.5764, 0.44 ) }
    dend_84 { pt3dadd( -31.0862, 44.3061, 38.2567, 0.74 ) }
    dend_84 { pt3dadd( -32.0471, 44.6745, 37.794, 0.22 ) }
    dend_84 { pt3dadd( -32.645, 45.1174, 37.6566, 0.58 ) }
    dend_84 { pt3dadd( -33.0592, 45.6739, 37.7092, 1.04 ) }
    dend_84 { pt3dadd( -33.6633, 46.9602, 38.0465, 0.36 ) }
    dend_84 { pt3dadd( -33.9545, 48.0137, 38.411, 0.66 ) }
    dend_84 { pt3dadd( -34.0712, 49.0427, 38.7826, 0.52 ) }
    dend_84 { pt3dadd( -34.0838, 50.4129, 39.2634, 0.44 ) }
    dend_84 { pt3dadd( -34.0798, 51.1664, 39.5076, 0.44 ) }
    dend_84 { pt3dadd( -34.0905, 51.6673, 39.6607, 0.44 ) }
    dend_84 { pt3dadd( -34.1633, 52.5996, 39.8959, 0.58 ) }
    dend_84 { pt3dadd( -34.3704, 53.4031, 40.0805, 0.88 ) }
    dend_84 { pt3dadd( -34.9567, 54.2616, 40.2886, 0.44 ) }
    dend_84 { pt3dadd( -35.9752, 54.9859, 40.4623, 0.3 ) }
    dend_84 { pt3dadd( -37.2769, 55.521, 40.5714, 0.3 ) }
    dend_84 { pt3dadd( -37.6435, 55.6043, 40.5492, 0.3 ) }
    dend_84 { pt3dadd( -38.0998, 55.6427, 40.4548, 0.3 ) }
    dend_84 { pt3dadd( -38.6641, 55.6342, 40.2749, 0.44 ) }
    dend_84 { pt3dadd( -39.2812, 55.6028, 40.011, 0.44 ) }
    dend_84 { pt3dadd( -40.1954, 55.5968, 39.4151, 0.52 ) }
    dend_84 { pt3dadd( -41.3954, 55.6978, 38.3924, 0.52 ) }
    dend_84 { pt3dadd( -42.0677, 55.7575, 37.7769, 0.3 ) }
    dend_84 { pt3dadd( -42.7614, 55.8179, 37.0904, 0.3 ) }
    dend_84 { pt3dadd( -43.1646, 55.8668, 36.6526, 0.52 ) }
    dend_84 { pt3dadd( -44.1544, 56.0917, 35.4844, 0.52 ) }
    dend_84 { pt3dadd( -44.5343, 56.2491, 35.0333, 0.52 ) }
    // Section: dend_80, id: dend_80, parent: dend_76 (entry count 48/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 49.8424, 51.2862, 46.4479, 0.22 ) }
    dend_80 { pt3dadd( 50.9766, 51.5945, 46.1787, 0.22 ) }
    dend_80 { pt3dadd( 52.0102, 51.7945, 45.9264, 0.14 ) }
    dend_80 { pt3dadd( 52.4384, 51.8503, 45.7669, 0.44 ) }
    dend_80 { pt3dadd( 52.9039, 51.8854, 45.5714, 0.74 ) }
    dend_80 { pt3dadd( 53.5147, 51.8982, 45.2988, 0.3 ) }
    dend_80 { pt3dadd( 54.327, 51.8879, 44.9344, 0.22 ) }
    dend_80 { pt3dadd( 54.9403, 51.8358, 44.6291, 0.22 ) }
    dend_80 { pt3dadd( 56.0664, 51.7141, 44.0673, 0.22 ) }
    dend_80 { pt3dadd( 56.8071, 51.6345, 43.6832, 0.3 ) }
    dend_80 { pt3dadd( 57.426, 51.568, 43.3659, 0.3 ) }
    dend_80 { pt3dadd( 58.1003, 51.5083, 43.0344, 0.22 ) }
    dend_80 { pt3dadd( 58.82, 51.4744, 42.7202, 0.22 ) }
    dend_80 { pt3dadd( 59.522, 51.4684, 42.4464, 0.22 ) }
    dend_80 { pt3dadd( 60.0378, 51.4677, 42.2672, 0.44 ) }
    dend_80 { pt3dadd( 60.6749, 51.4753, 42.0253, 0.66 ) }
    dend_80 { pt3dadd( 61.1581, 51.4881, 41.8233, 0.66 ) }
    dend_80 { pt3dadd( 61.9894, 51.5165, 41.4547, 0.66 ) }
    dend_80 { pt3dadd( 63.0247, 51.5614, 40.9957, 0.22 ) }
    dend_80 { pt3dadd( 63.8106, 51.642, 40.6355, 0.22 ) }
    dend_80 { pt3dadd( 64.2452, 51.7102, 40.4443, 0.22 ) }
    dend_80 { pt3dadd( 64.6688, 51.7826, 40.2724, 0.22 ) }
    dend_80 { pt3dadd( 65.2376, 51.8686, 40.0716, 0.66 ) }
    dend_80 { pt3dadd( 65.7542, 51.9107, 39.9408, 0.82 ) }
    dend_80 { pt3dadd( 66.5743, 51.9108, 39.8305, 0.3 ) }
    dend_80 { pt3dadd( 67.4657, 51.8872, 39.7082, 0.14 ) }
    dend_80 { pt3dadd( 68.0745, 51.8537, 39.6262, 0.3 ) }
    dend_80 { pt3dadd( 68.5126, 51.8272, 39.5672, 0.3 ) }
    dend_80 { pt3dadd( 69.5527, 51.7853, 39.4071, 0.14 ) }
    dend_80 { pt3dadd( 70.2421, 51.7895, 39.2938, 0.14 ) }
    dend_80 { pt3dadd( 71.287, 51.8707, 39.1176, 0.14 ) }
    dend_80 { pt3dadd( 71.8815, 51.9854, 39.0204, 0.44 ) }
    dend_80 { pt3dadd( 72.3907, 52.1384, 38.9442, 0.44 ) }
    dend_80 { pt3dadd( 73.2392, 52.4483, 38.8149, 0.14 ) }
    dend_80 { pt3dadd( 73.8283, 52.6827, 38.7279, 0.44 ) }
    dend_80 { pt3dadd( 74.3829, 52.8737, 38.6608, 0.52 ) }
    dend_80 { pt3dadd( 74.9647, 53.0087, 38.6233, 0.22 ) }
    dend_80 { pt3dadd( 75.2309, 53.0443, 38.6068, 0.22 ) }
    dend_80 { pt3dadd( 75.8151, 53.0762, 38.5738, 0.22 ) }
    dend_80 { pt3dadd( 76.3878, 53.0527, 38.5466, 0.22 ) }
    dend_80 { pt3dadd( 77.019, 52.9795, 38.5259, 0.08 ) }
    dend_80 { pt3dadd( 77.5261, 52.9188, 38.5603, 0.08 ) }
    dend_80 { pt3dadd( 78.0985, 52.8507, 38.6831, 0.44 ) }
    dend_80 { pt3dadd( 78.602, 52.7982, 38.8505, 0.58 ) }
    dend_80 { pt3dadd( 79.0955, 52.7548, 39.0474, 0.58 ) }
    dend_80 { pt3dadd( 79.801, 52.7038, 39.34, 0.14 ) }
    dend_80 { pt3dadd( 81.003, 52.6045, 39.82, 0.14 ) }
    dend_80 { pt3dadd( 82.0764, 52.5241, 40.2227, 0.22 ) }
    dend_80 { pt3dadd( 82.852, 52.47, 40.5083, 0.96 ) }
    dend_80 { pt3dadd( 83.8142, 52.4037, 40.8456, 1.1 ) }
    dend_80 { pt3dadd( 84.5056, 52.3641, 41.0798, 0.74 ) }
    dend_80 { pt3dadd( 85.8696, 52.2951, 41.4964, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_80 { pt3dadd( 86.4811, 52.2589, 41.6332, 0.44 ) }
    dend_80 { pt3dadd( 87.7574, 52.2209, 41.8508, 0.44 ) }
    dend_80 { pt3dadd( 88.3417, 52.2107, 41.9485, 0.44 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 3/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 49.8424, 51.2862, 46.4479, 0.44 ) }
    dend_77 { pt3dadd( 50.2505, 51.1071, 47.2255, 0.44 ) }
    dend_77 { pt3dadd( 50.9272, 50.7994, 48.5709, 0.44 ) }
    dend_77 { pt3dadd( 51.3703, 50.6052, 49.4493, 0.44 ) }
    dend_77 { pt3dadd( 51.9696, 50.3713, 50.641, 0.22 ) }
    dend_77 { pt3dadd( 52.6245, 50.1396, 52.011, 0.22 ) }
    dend_77 { pt3dadd( 53.4006, 49.8663, 53.7064, 0.22 ) }
    dend_77 { pt3dadd( 53.7616, 49.7406, 54.6053, 0.22 ) }
    dend_77 { pt3dadd( 53.9794, 49.6353, 55.2561, 0.22 ) }
    dend_77 { pt3dadd( 54.1667, 49.5135, 55.922, 0.22 ) }
    dend_77 { pt3dadd( 54.2962, 49.3274, 56.6068, 0.22 ) }
    dend_77 { pt3dadd( 54.2017, 49.0178, 56.7885, 0.22 ) }
    dend_77 { pt3dadd( 53.8896, 48.3097, 56.779, 0.3 ) }
    dend_77 { pt3dadd( 53.4804, 47.4607, 56.4868, 0.14 ) }
    dend_77 { pt3dadd( 52.8549, 46.2999, 55.8879, 0.08 ) }
    dend_77 { pt3dadd( 52.5529, 45.7821, 55.5725, 0.3 ) }
    dend_77 { pt3dadd( 51.8154, 44.6437, 54.7811, 0.14 ) }
    dend_77 { pt3dadd( 50.9993, 43.6855, 54.0217, 0.14 ) }
    dend_77 { pt3dadd( 49.6052, 42.4643, 52.7444, 0.14 ) }
    dend_77 { pt3dadd( 48.9829, 42.0689, 52.2441, 0.58 ) }
    dend_77 { pt3dadd( 48.4216, 41.8136, 51.875, 0.74 ) }
    dend_77 { pt3dadd( 47.571, 41.5351, 51.3678, 0.74 ) }
    dend_77 { pt3dadd( 46.1185, 41.2682, 50.6536, 0.14 ) }
    dend_77 { pt3dadd( 44.5007, 41.1479, 50.183, 0.22 ) }
    dend_77 { pt3dadd( 43.4015, 41.1693, 50.0361, 0.14 ) }
    dend_77 { pt3dadd( 42.7413, 41.2372, 50.0044, 0.66 ) }
    dend_77 { pt3dadd( 42.4218, 41.2956, 50.0297, 0.66 ) }
    dend_77 { pt3dadd( 41.1537, 41.6201, 50.2992, 0.22 ) }
    dend_77 { pt3dadd( 40.3742, 41.8685, 50.5247, 0.36 ) }
    dend_77 { pt3dadd( 39.5016, 42.1748, 50.8129, 0.66 ) }
    dend_77 { pt3dadd( 38.4045, 42.5876, 51.1708, 0.14 ) }
    dend_77 { pt3dadd( 37.1475, 43.0747, 51.5918, 0.14 ) }
    dend_77 { pt3dadd( 36.3899, 43.3764, 51.8561, 0.14 ) }
    dend_77 { pt3dadd( 34.9655, 43.9726, 52.3785, 0.14 ) }
    dend_77 { pt3dadd( 34.3513, 44.2344, 52.584, 0.22 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 38/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 6.22622, 12.5299, 10.474, 0.66 ) }
    dend_74 { pt3dadd( 6.11403, 13.9701, 10.9743, 0.66 ) }
    dend_74 { pt3dadd( 6.02301, 15.3298, 11.384, 0.66 ) }
    dend_74 { pt3dadd( 5.90251, 17.0703, 11.855, 0.58 ) }
    dend_74 { pt3dadd( 5.83443, 17.9704, 12.0701, 0.58 ) }
    dend_74 { pt3dadd( 5.74443, 19.1539, 12.3433, 0.58 ) }
    dend_74 { pt3dadd( 5.61705, 20.6701, 12.6107, 0.52 ) }
    dend_74 { pt3dadd( 5.53335, 21.9871, 12.7737, 0.52 ) }
    dend_74 { pt3dadd( 5.44832, 23.1631, 12.8889, 0.52 ) }
    dend_74 { pt3dadd( 5.31642, 24.4202, 12.9189, 0.58 ) }
    dend_74 { pt3dadd( 5.19078, 25.3878, 12.9297, 0.82 ) }
    dend_74 { pt3dadd( 4.99506, 27.0414, 12.982, 0.58 ) }
    dend_74 { pt3dadd( 4.8752, 28.2416, 13.0884, 0.58 ) }
    dend_74 { pt3dadd( 4.80694, 29.2697, 13.2032, 0.58 ) }
    dend_74 { pt3dadd( 4.74745, 30.3908, 13.3776, 0.58 ) }
    dend_74 { pt3dadd( 4.71669, 31.4737, 13.6871, 0.58 ) }
    dend_74 { pt3dadd( 4.69937, 33.0434, 14.2947, 0.44 ) }
    dend_74 { pt3dadd( 4.72281, 34.2833, 14.9169, 0.44 ) }
    dend_74 { pt3dadd( 4.84814, 35.5472, 15.6301, 0.44 ) }
    dend_74 { pt3dadd( 5.04619, 36.6893, 16.3378, 0.58 ) }
    dend_74 { pt3dadd( 5.47435, 38.7121, 17.6645, 0.3 ) }
    dend_74 { pt3dadd( 5.66456, 39.6824, 18.3419, 0.22 ) }
    dend_74 { pt3dadd( 5.77849, 40.387, 18.8494, 0.3 ) }
    dend_74 { pt3dadd( 5.95635, 41.735, 19.8093, 0.22 ) }
    dend_74 { pt3dadd( 5.989, 42.1036, 20.1025, 0.22 ) }
    dend_74 { pt3dadd( 6.04224, 42.7014, 20.5703, 0.36 ) }
    dend_74 { pt3dadd( 6.13797, 43.7239, 21.3021, 0.36 ) }
    dend_74 { pt3dadd( 6.22053, 44.2568, 21.6831, 0.36 ) }
    dend_74 { pt3dadd( 6.33831, 44.9074, 22.0934, 0.22 ) }
    dend_74 { pt3dadd( 6.58832, 46.0809, 22.727, 0.22 ) }
    dend_74 { pt3dadd( 6.91784, 46.9839, 23.2115, 0.22 ) }
    dend_74 { pt3dadd( 7.35014, 47.8119, 23.6315, 0.82 ) }
    dend_74 { pt3dadd( 7.95471, 48.7557, 24.0589, 0.22 ) }
    dend_74 { pt3dadd( 8.45145, 49.4125, 24.3352, 0.22 ) }
    dend_74 { pt3dadd( 8.96638, 50.047, 24.5848, 0.44 ) }
    dend_74 { pt3dadd( 9.78036, 51.1004, 24.9233, 0.82 ) }
    dend_74 { pt3dadd( 10.3688, 51.941, 25.1709, 0.3 ) }
    dend_74 { pt3dadd( 10.7359, 52.4911, 25.3341, 0.74 ) }
    dend_74 { pt3dadd( 11.4924, 53.586, 25.6533, 0.22 ) }
    dend_74 { pt3dadd( 11.9058, 54.1455, 25.7958, 0.22 ) }
    dend_74 { pt3dadd( 12.4703, 54.9025, 25.9847, 0.3 ) }
    dend_74 { pt3dadd( 12.6801, 55.1936, 26.0436, 0.3 ) }
    dend_74 { pt3dadd( 13.0548, 55.7496, 26.1639, 0.3 ) }
    dend_74 { pt3dadd( 13.3275, 56.1627, 26.2485, 0.82 ) }
    dend_74 { pt3dadd( 13.8289, 56.9556, 26.4098, 0.88 ) }
    dend_74 { pt3dadd( 14.6327, 58.1934, 26.5573, 0.36 ) }
    dend_74 { pt3dadd( 15.186, 59.0253, 26.5623, 0.36 ) }
    dend_74 { pt3dadd( 15.691, 59.784, 26.4763, 0.36 ) }
    dend_74 { pt3dadd( 16.4647, 60.9224, 26.1438, 0.58 ) }
    dend_74 { pt3dadd( 16.9527, 61.6258, 25.698, 0.3 ) }
    dend_74 { pt3dadd( 17.5471, 62.4597, 24.6761, 0.22 ) }
    dend_74 { pt3dadd( 17.9739, 63.0589, 23.5005, 0.58 ) }
    dend_74 { pt3dadd( 18.1344, 63.2896, 22.8404, 0.74 ) }
    dend_74 { pt3dadd( 18.3473, 63.5827, 21.6153, 0.44 ) }
    dend_74 { pt3dadd( 18.5944, 63.9009, 19.4352, 0.44 ) }
    dend_74 { pt3dadd( 18.7812, 64.0561, 17.443, 0.44 ) }
    dend_74 { pt3dadd( 18.8887, 64.0707, 16.1518, 0.44 ) }
    dend_74 { pt3dadd( 18.9681, 64.0452, 15.2756, 0.44 ) }
    dend_74 { pt3dadd( 19.028, 64.0121, 14.7477, 0.44 ) }
    dend_74 { pt3dadd( 19.2928, 63.8329, 13.1667, 0.44 ) }
    dend_74 { pt3dadd( 19.5533, 63.6911, 12.2746, 0.44 ) }
    dend_74 { pt3dadd( 20.0389, 63.5173, 11.1844, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_74 { pt3dadd( 20.6046, 63.4195, 10.1769, 0.3 ) }
    dend_74 { pt3dadd( 20.9799, 63.4211, 9.54121, 0.3 ) }
    dend_74 { pt3dadd( 21.314, 63.4788, 8.99901, 0.22 ) }
    dend_74 { pt3dadd( 21.7858, 63.6, 8.27074, 0.3 ) }
    dend_74 { pt3dadd( 22.4666, 63.8425, 7.20554, 0.22 ) }
    dend_74 { pt3dadd( 23.1471, 64.1614, 6.12861, 0.22 ) }
    dend_74 { pt3dadd( 23.9478, 64.593, 4.79173, 0.22 ) }
    dend_74 { pt3dadd( 24.4543, 64.9356, 3.88444, 1.04 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 8/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 6.22622, 12.5299, 10.474, 0.58 ) }
    dend_71 { pt3dadd( 6.20878, 13.6737, 9.86263, 0.58 ) }
    dend_71 { pt3dadd( 6.23994, 15.001, 9.14333, 0.52 ) }
    dend_71 { pt3dadd( 6.27312, 15.9068, 8.6791, 0.36 ) }
    dend_71 { pt3dadd( 6.28366, 16.544, 8.35366, 0.36 ) }
    dend_71 { pt3dadd( 6.26632, 17.4625, 7.90099, 0.66 ) }
    dend_71 { pt3dadd( 6.20971, 18.4183, 7.46796, 0.44 ) }
    dend_71 { pt3dadd( 6.12278, 19.6957, 6.97965, 0.44 ) }
    dend_71 { pt3dadd( 6.08548, 20.4542, 6.69525, 0.66 ) }
    dend_71 { pt3dadd( 6.07502, 21.3773, 6.33366, 0.66 ) }
    dend_71 { pt3dadd( 6.1037, 22.1425, 6.05129, 0.66 ) }
    dend_71 { pt3dadd( 6.23255, 23.4092, 5.61128, 0.66 ) }
    dend_71 { pt3dadd( 6.40418, 24.5522, 5.22055, 0.52 ) }
    dend_71 { pt3dadd( 6.66, 25.7845, 4.8471, 0.66 ) }
    dend_71 { pt3dadd( 6.87396, 26.66, 4.55237, 0.52 ) }
    dend_71 { pt3dadd( 7.13613, 27.5819, 4.18922, 0.58 ) }
    dend_71 { pt3dadd( 7.42128, 28.5896, 3.70214, 0.58 ) }
    dend_71 { pt3dadd( 7.73245, 29.9045, 3.00677, 0.58 ) }
    dend_71 { pt3dadd( 7.84233, 30.5132, 2.6784, 0.66 ) }
    dend_71 { pt3dadd( 7.95152, 31.6954, 2.01966, 0.52 ) }
    dend_71 { pt3dadd( 7.97729, 32.7663, 1.34846, 0.58 ) }
    dend_71 { pt3dadd( 7.96123, 33.6725, 0.688568, 0.58 ) }
    dend_71 { pt3dadd( 7.93381, 34.3842, 0.123441, 0.44 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 7.12206, 10.9718, 15.9947, 0.52 ) }
    dend_65 { pt3dadd( 6.51865, 12.7366, 16.3411, 0.52 ) }
    dend_65 { pt3dadd( 6.07399, 14.3908, 16.7283, 0.52 ) }
    dend_65 { pt3dadd( 5.91511, 15.0863, 16.8608, 0.52 ) }
    dend_65 { pt3dadd( 5.71362, 16.0139, 17.0755, 0.74 ) }
    dend_65 { pt3dadd( 5.58025, 16.6391, 17.2812, 0.82 ) }
    dend_65 { pt3dadd( 5.36294, 17.5939, 17.7073, 0.52 ) }
    dend_65 { pt3dadd( 5.13425, 18.4924, 18.2382, 0.52 ) }
    dend_65 { pt3dadd( 4.87511, 19.2101, 18.8484, 0.74 ) }
    dend_65 { pt3dadd( 4.35815, 20.1364, 19.9489, 0.52 ) }
    dend_65 { pt3dadd( 3.74788, 20.8831, 21.2998, 0.66 ) }
    dend_65 { pt3dadd( 3.13158, 21.3944, 22.7145, 1.04 ) }
    dend_65 { pt3dadd( 2.51006, 21.718, 24.2336, 0.74 ) }
    dend_65 { pt3dadd( 2.0528, 21.8686, 25.4011, 0.58 ) }
    dend_65 { pt3dadd( 1.45743, 21.9824, 27.0488, 0.58 ) }
    dend_65 { pt3dadd( 0.749705, 22.0476, 29.0829, 0.58 ) }
    dend_65 { pt3dadd( 0.311751, 22.0911, 30.4811, 0.58 ) }
    dend_65 { pt3dadd( -0.191142, 22.2108, 32.4107, 0.58 ) }
    dend_65 { pt3dadd( -0.447707, 22.3424, 33.6889, 0.58 ) }
    dend_65 { pt3dadd( -0.683574, 22.5857, 35.227, 0.58 ) }
    dend_65 { pt3dadd( -0.946152, 23.0606, 37.3624, 0.44 ) }
    dend_65 { pt3dadd( -1.24549, 23.7517, 39.9954, 0.44 ) }
    dend_65 { pt3dadd( -1.42759, 24.3286, 41.9386, 0.44 ) }
    dend_65 { pt3dadd( -1.58786, 25.0883, 44.2519, 0.44 ) }
    dend_65 { pt3dadd( -1.63175, 25.4972, 45.4445, 0.82 ) }
    dend_65 { pt3dadd( -1.63186, 25.7156, 46.027, 0.82 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 7.12206, 10.9718, 15.9947, 0.66 ) }
    dend_62 { pt3dadd( 7.63257, 11.4052, 16.8763, 0.66 ) }
    dend_62 { pt3dadd( 8.39591, 11.9707, 18.155, 0.44 ) }
    dend_62 { pt3dadd( 9.22471, 12.5407, 19.4816, 0.44 ) }
    dend_62 { pt3dadd( 10.0587, 13.1525, 20.737, 0.44 ) }
    dend_62 { pt3dadd( 10.7257, 13.6903, 21.7381, 0.44 ) }
    dend_62 { pt3dadd( 11.4759, 14.3544, 22.8651, 0.44 ) }
    dend_62 { pt3dadd( 11.8875, 14.7461, 23.4642, 0.66 ) }
    dend_62 { pt3dadd( 12.2894, 15.121, 24.0213, 0.66 ) }
    dend_62 { pt3dadd( 12.9713, 15.6262, 24.9425, 0.3 ) }
    dend_62 { pt3dadd( 13.4986, 15.922, 25.7651, 0.3 ) }
    dend_62 { pt3dadd( 14.0053, 16.1345, 26.5826, 0.58 ) }
    dend_62 { pt3dadd( 14.5258, 16.2414, 27.5138, 0.44 ) }
    dend_62 { pt3dadd( 15.0242, 16.1876, 28.5282, 0.44 ) }
    dend_62 { pt3dadd( 15.8093, 15.8654, 30.1451, 0.3 ) }
    dend_62 { pt3dadd( 16.3475, 15.5399, 31.2686, 0.3 ) }
    dend_62 { pt3dadd( 16.5342, 15.4291, 31.6514, 0.52 ) }
    dend_62 { pt3dadd( 16.9992, 15.1861, 32.6833, 0.66 ) }
    dend_62 { pt3dadd( 17.4147, 15.0751, 33.6714, 0.66 ) }
    dend_62 { pt3dadd( 17.7091, 15.083, 34.3618, 0.88 ) }
    dend_62 { pt3dadd( 18.4128, 15.2765, 35.8439, 0.66 ) }
    dend_62 { pt3dadd( 19.127, 15.5321, 37.181, 0.36 ) }
    dend_62 { pt3dadd( 19.9396, 15.8472, 38.6284, 0.36 ) }
    dend_62 { pt3dadd( 20.6708, 16.1216, 39.8446, 0.82 ) }
    dend_62 { pt3dadd( 21.1789, 16.2618, 40.6388, 0.82 ) }
    dend_62 { pt3dadd( 21.9448, 16.3561, 41.7404, 0.36 ) }
    dend_62 { pt3dadd( 22.7153, 16.2812, 42.6398, 0.3 ) }
    dend_62 { pt3dadd( 23.3152, 16.0992, 43.2368, 0.3 ) }
    dend_62 { pt3dadd( 23.9401, 15.8102, 43.7508, 0.58 ) }
    dend_62 { pt3dadd( 24.71, 15.3385, 44.3285, 0.58 ) }
    dend_62 { pt3dadd( 25.2035, 14.9983, 44.6809, 0.58 ) }
    dend_62 { pt3dadd( 26.175, 14.276, 45.4058, 0.22 ) }
    dend_62 { pt3dadd( 26.6513, 13.9183, 45.7699, 0.22 ) }
    dend_62 { pt3dadd( 27.2687, 13.4662, 46.256, 0.66 ) }
    dend_62 { pt3dadd( 28.1361, 12.8699, 47.0248, 0.14 ) }
    dend_62 { pt3dadd( 28.8254, 12.4523, 47.716, 0.14 ) }
    dend_62 { pt3dadd( 29.5248, 12.075, 48.4968, 0.14 ) }
    dend_62 { pt3dadd( 29.755, 11.9706, 48.7638, 0.52 ) }
    dend_62 { pt3dadd( 30.315, 11.7702, 49.4253, 0.96 ) }
    dend_62 { pt3dadd( 31.2274, 11.51, 50.5498, 0.22 ) }
    dend_62 { pt3dadd( 31.9719, 11.3475, 51.5246, 0.22 ) }
    dend_62 { pt3dadd( 32.3323, 11.2775, 51.9816, 0.22 ) }
    dend_62 { pt3dadd( 32.7108, 11.2044, 52.4357, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_62 { pt3dadd( 33.1069, 11.1331, 52.8958, 0.44 ) }
    dend_62 { pt3dadd( 33.7052, 11.0573, 53.5264, 0.3 ) }
    dend_62 { pt3dadd( 34.7183, 10.9414, 54.4453, 0.3 ) }
    dend_62 { pt3dadd( 35.4114, 10.8404, 55.023, 0.58 ) }
    dend_62 { pt3dadd( 36.5322, 10.6657, 55.948, 0.96 ) }
    dend_62 { pt3dadd( 37.145, 10.5601, 56.4441, 0.96 ) }
    dend_62 { pt3dadd( 38.1383, 10.386, 57.2037, 0.58 ) }
    dend_62 { pt3dadd( 38.9547, 10.2297, 57.781, 0.22 ) }
    dend_62 { pt3dadd( 39.8075, 10.0342, 58.3327, 0.14 ) }
    dend_62 { pt3dadd( 40.6988, 9.81326, 58.823, 0.52 ) }
    dend_62 { pt3dadd( 41.2525, 9.66078, 59.075, 0.52 ) }
    dend_62 { pt3dadd( 41.6846, 9.52811, 59.2809, 0.52 ) }
    dend_62 { pt3dadd( 42.0802, 9.39661, 59.4416, 0.52 ) }
    dend_62 { pt3dadd( 42.9235, 9.17207, 59.7635, 0.3 ) }
    dend_62 { pt3dadd( 44.9603, 8.7668, 60.4133, 0.22 ) }
    dend_62 { pt3dadd( 46.6041, 8.53795, 60.8754, 0.22 ) }
    dend_62 { pt3dadd( 47.759, 8.4555, 61.2506, 0.22 ) }
    dend_62 { pt3dadd( 48.9375, 8.44095, 61.7111, 0.82 ) }
    dend_62 { pt3dadd( 49.8838, 8.48862, 62.2172, 0.82 ) }
    // Section: dend_59, id: dend_59, parent: dend_53 (entry count 19/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 2.52092, -14.76, 12.5959, 0.44 ) }
    dend_59 { pt3dadd( 3.04551, -15.2538, 12.327, 0.44 ) }
    dend_59 { pt3dadd( 3.77001, -16.0263, 11.8596, 0.22 ) }
    dend_59 { pt3dadd( 4.43165, -16.7659, 11.4217, 0.36 ) }
    dend_59 { pt3dadd( 5.13925, -17.5638, 10.9907, 0.58 ) }
    dend_59 { pt3dadd( 5.60637, -18.0499, 10.7506, 0.58 ) }
    dend_59 { pt3dadd( 6.37864, -18.7958, 10.411, 0.22 ) }
    dend_59 { pt3dadd( 7.37019, -19.7087, 10.036, 0.22 ) }
    dend_59 { pt3dadd( 8.0673, -20.2987, 9.83846, 0.44 ) }
    dend_59 { pt3dadd( 9.09886, -21.0973, 9.61719, 0.3 ) }
    dend_59 { pt3dadd( 10.1699, -21.8782, 9.42654, 0.3 ) }
    dend_59 { pt3dadd( 10.9501, -22.4145, 9.27705, 0.58 ) }
    dend_59 { pt3dadd( 11.4942, -22.764, 9.17564, 0.58 ) }
    dend_59 { pt3dadd( 12.5077, -23.3979, 9.01194, 0.14 ) }
    dend_59 { pt3dadd( 12.9708, -23.6925, 8.92342, 0.14 ) }
    dend_59 { pt3dadd( 13.6532, -24.167, 8.78035, 0.44 ) }
    dend_59 { pt3dadd( 14.3712, -24.7649, 8.61792, 0.08 ) }
    dend_59 { pt3dadd( 14.767, -25.1387, 8.53688, 0.44 ) }
    dend_59 { pt3dadd( 15.0357, -25.4189, 8.49475, 0.74 ) }
    dend_59 { pt3dadd( 15.5509, -26.0288, 8.43929, 0.14 ) }
    dend_59 { pt3dadd( 16.0184, -26.6097, 8.42346, 0.14 ) }
    dend_59 { pt3dadd( 16.3347, -27.0072, 8.4311, 0.36 ) }
    dend_59 { pt3dadd( 16.6328, -27.3937, 8.4422, 1.04 ) }
    dend_59 { pt3dadd( 16.8655, -27.6784, 8.44115, 1.04 ) }
    dend_59 { pt3dadd( 17.8459, -28.6286, 8.33921, 0.22 ) }
    dend_59 { pt3dadd( 18.3968, -29.0439, 8.25247, 0.22 ) }
    dend_59 { pt3dadd( 18.8166, -29.3011, 8.18207, 0.22 ) }
    dend_59 { pt3dadd( 19.2683, -29.5501, 8.08956, 1.04 ) }
    dend_59 { pt3dadd( 20.0709, -29.9705, 7.97992, 1.4 ) }
    dend_59 { pt3dadd( 21.9016, -30.9032, 7.84143, 0.22 ) }
    dend_59 { pt3dadd( 22.7571, -31.3329, 7.87645, 0.44 ) }
    dend_59 { pt3dadd( 23.4837, -31.7208, 7.99744, 0.14 ) }
    dend_59 { pt3dadd( 24.3493, -32.2327, 8.24175, 0.14 ) }
    dend_59 { pt3dadd( 25.9736, -33.3017, 8.80023, 0.14 ) }
    dend_59 { pt3dadd( 26.7838, -33.877, 9.12774, 0.52 ) }
    dend_59 { pt3dadd( 27.9648, -34.7749, 9.62701, 0.08 ) }
    dend_59 { pt3dadd( 28.7085, -35.3487, 9.95039, 0.3 ) }
    dend_59 { pt3dadd( 29.5055, -35.959, 10.2961, 1.4 ) }
    dend_59 { pt3dadd( 32.2878, -38.0415, 11.4491, 0.08 ) }
    dend_59 { pt3dadd( 33.5986, -39.0113, 11.8555, 0.08 ) }
    dend_59 { pt3dadd( 35.2375, -40.2159, 12.2894, 0.08 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 60/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.52092, -14.76, 12.5959, 0.3 ) }
    dend_54 { pt3dadd( 2.50218, -14.8545, 13.0144, 0.3 ) }
    dend_54 { pt3dadd( 2.42333, -15.2207, 14.3625, 0.3 ) }
    dend_54 { pt3dadd( 2.25707, -15.9229, 16.6834, 0.3 ) }
    dend_54 { pt3dadd( 2.13782, -16.4265, 18.348, 0.3 ) }
    dend_54 { pt3dadd( 2.00131, -17.0031, 20.2536, 0.3 ) }
    dend_54 { pt3dadd( 1.91804, -17.3548, 21.4159, 0.52 ) }
    dend_54 { pt3dadd( 1.80213, -17.7262, 22.7001, 1.04 ) }
    dend_54 { pt3dadd( 1.73999, -17.9242, 23.2854, 1.48 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 69/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 5.52702, -18.1434, -3.04267, 0.3 ) }
    dend_50 { pt3dadd( 5.93216, -19.1002, -3.4083, 0.3 ) }
    dend_50 { pt3dadd( 6.27834, -19.7906, -3.63708, 0.36 ) }
    dend_50 { pt3dadd( 6.75918, -20.6957, -3.93051, 0.44 ) }
    dend_50 { pt3dadd( 7.0634, -21.2683, -4.11616, 0.44 ) }
    dend_50 { pt3dadd( 7.40718, -21.9154, -4.32595, 0.36 ) }
    dend_50 { pt3dadd( 7.58123, -22.243, -4.43216, 0.36 ) }
    dend_50 { pt3dadd( 7.89152, -22.7099, -4.60932, 0.58 ) }
    dend_50 { pt3dadd( 8.2977, -23.2626, -4.73942, 0.96 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 5.52702, -18.1434, -3.04267, 0.74 ) }
    dend_47 { pt3dadd( 5.95804, -17.7915, -3.02883, 0.74 ) }
    dend_47 { pt3dadd( 6.58232, -17.3198, -3.04452, 0.22 ) }
    dend_47 { pt3dadd( 7.56107, -16.6889, -3.11067, 0.22 ) }
    dend_47 { pt3dadd( 8.49665, -16.1853, -3.18647, 0.22 ) }
    dend_47 { pt3dadd( 9.04439, -15.9387, -3.28159, 0.44 ) }
    dend_47 { pt3dadd( 9.45015, -15.7856, -3.38983, 0.58 ) }
    dend_47 { pt3dadd( 10.1954, -15.5813, -3.68419, 0.22 ) }
    dend_47 { pt3dadd( 10.9133, -15.4644, -4.09573, 0.14 ) }
    dend_47 { pt3dadd( 11.5073, -15.4137, -4.53645, 0.22 ) }
    dend_47 { pt3dadd( 12.3941, -15.3683, -5.25836, 0.14 ) }
    dend_47 { pt3dadd( 12.9955, -15.3424, -5.81013, 0.66 ) }
    dend_47 { pt3dadd( 13.3554, -15.3222, -6.17764, 0.66 ) }
    dend_47 { pt3dadd( 14.1358, -15.2615, -7.04954, 0.22 ) }
    dend_47 { pt3dadd( 14.6954, -15.1872, -7.71279, 0.22 ) }
    dend_47 { pt3dadd( 15.1143, -15.1035, -8.21318, 0.22 ) }
    dend_47 { pt3dadd( 15.6075, -14.9723, -8.7595, 0.08 ) }
    dend_47 { pt3dadd( 16.2303, -14.7871, -9.37975, 0.08 ) }
    dend_47 { pt3dadd( 16.4786, -14.7156, -9.60188, 0.08 ) }
    dend_47 { pt3dadd( 16.8577, -14.6177, -9.90381, 0.08 ) }
    dend_47 { pt3dadd( 17.1575, -14.5517, -10.1255, 0.08 ) }
    dend_47 { pt3dadd( 17.4063, -14.5034, -10.2975, 0.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_47 { pt3dadd( 17.9394, -14.4034, -10.628, 0.44 ) }
    dend_47 { pt3dadd( 18.9375, -14.2071, -11.1571, 0.14 ) }
    dend_47 { pt3dadd( 19.4991, -14.0844, -11.4608, 0.14 ) }
    dend_47 { pt3dadd( 19.8257, -14.0109, -11.626, 0.14 ) }
    dend_47 { pt3dadd( 20.4223, -13.8382, -11.9019, 0.22 ) }
    dend_47 { pt3dadd( 20.8013, -13.6947, -12.087, 0.58 ) }
    dend_47 { pt3dadd( 21.3098, -13.4626, -12.3517, 0.82 ) }
    dend_47 { pt3dadd( 22.414, -12.9383, -12.9185, 0.22 ) }
    dend_47 { pt3dadd( 23.0828, -12.6174, -13.2689, 0.22 ) }
    dend_47 { pt3dadd( 24.0169, -12.1665, -13.7623, 0.22 ) }
    dend_47 { pt3dadd( 24.9829, -11.7329, -14.2743, 0.22 ) }
    dend_47 { pt3dadd( 25.3748, -11.5793, -14.4872, 0.22 ) }
    dend_47 { pt3dadd( 26.053, -11.3613, -14.8587, 0.22 ) }
    dend_47 { pt3dadd( 26.3382, -11.2962, -15.007, 0.36 ) }
    dend_47 { pt3dadd( 26.9436, -11.2038, -15.328, 0.36 ) }
    dend_47 { pt3dadd( 28.0743, -11.1006, -15.9308, 0.14 ) }
    dend_47 { pt3dadd( 28.7946, -11.0235, -16.2944, 0.14 ) }
    dend_47 { pt3dadd( 29.2171, -10.9592, -16.5187, 0.14 ) }
    dend_47 { pt3dadd( 29.5941, -10.8913, -16.7352, 0.14 ) }
    dend_47 { pt3dadd( 30.1283, -10.7964, -17.0486, 0.36 ) }
    dend_47 { pt3dadd( 31.0204, -10.6331, -17.605, 0.14 ) }
    dend_47 { pt3dadd( 31.5697, -10.517, -17.9057, 0.14 ) }
    dend_47 { pt3dadd( 32.1833, -10.3862, -18.1589, 0.14 ) }
    dend_47 { pt3dadd( 32.6942, -10.29, -18.3412, 0.14 ) }
    dend_47 { pt3dadd( 32.9422, -10.2447, -18.4195, 0.14 ) }
    dend_47 { pt3dadd( 33.716, -10.095, -18.6298, 0.14 ) }
    dend_47 { pt3dadd( 34.6457, -9.89826, -18.8573, 0.22 ) }
    dend_47 { pt3dadd( 35.3606, -9.74201, -19.08, 0.36 ) }
    dend_47 { pt3dadd( 36.3167, -9.53115, -19.4692, 0.52 ) }
    dend_47 { pt3dadd( 36.8666, -9.4035, -19.7311, 0.22 ) }
    dend_47 { pt3dadd( 37.591, -9.23147, -20.111, 0.22 ) }
    dend_47 { pt3dadd( 38.1904, -9.06179, -20.4468, 0.22 ) }
    dend_47 { pt3dadd( 38.8269, -8.84838, -20.8733, 0.22 ) }
    dend_47 { pt3dadd( 39.4827, -8.59876, -21.3353, 0.22 ) }
    dend_47 { pt3dadd( 39.7323, -8.49365, -21.5014, 0.22 ) }
    dend_47 { pt3dadd( 40.3962, -8.20094, -21.937, 0.22 ) }
    dend_47 { pt3dadd( 40.9763, -7.95318, -22.2695, 0.22 ) }
    dend_47 { pt3dadd( 41.7379, -7.64502, -22.6306, 0.36 ) }
    dend_47 { pt3dadd( 42.1772, -7.48193, -22.8066, 0.36 ) }
    dend_47 { pt3dadd( 43.0023, -7.22798, -23.0503, 0.14 ) }
    dend_47 { pt3dadd( 43.5957, -7.09736, -23.1961, 0.14 ) }
    dend_47 { pt3dadd( 44.6305, -6.96487, -23.3868, 0.22 ) }
    dend_47 { pt3dadd( 45.3498, -6.92761, -23.4719, 0.22 ) }
    dend_47 { pt3dadd( 45.961, -6.91188, -23.4973, 0.14 ) }
    dend_47 { pt3dadd( 47.0094, -6.86064, -23.537, 0.14 ) }
    dend_47 { pt3dadd( 47.451, -6.81881, -23.5577, 0.14 ) }
    dend_47 { pt3dadd( 47.9549, -6.71219, -23.6114, 0.14 ) }
    dend_47 { pt3dadd( 48.4273, -6.53525, -23.7208, 0.58 ) }
    dend_47 { pt3dadd( 48.8232, -6.35461, -23.8918, 0.58 ) }
    dend_47 { pt3dadd( 49.5552, -6.01652, -24.3438, 0.22 ) }
    dend_47 { pt3dadd( 49.8799, -5.88523, -24.6036, 0.22 ) }
    dend_47 { pt3dadd( 50.3288, -5.73968, -24.9892, 0.36 ) }
    dend_47 { pt3dadd( 50.5387, -5.69013, -25.1736, 0.36 ) }
    dend_47 { pt3dadd( 51.3209, -5.56287, -25.8825, 0.14 ) }
    dend_47 { pt3dadd( 51.7085, -5.53006, -26.2092, 0.14 ) }
    dend_47 { pt3dadd( 52.2239, -5.52608, -26.5993, 0.44 ) }
    dend_47 { pt3dadd( 52.5337, -5.53781, -26.827, 0.44 ) }
    dend_47 { pt3dadd( 53.1311, -5.58971, -27.2582, 0.14 ) }
    dend_47 { pt3dadd( 53.8542, -5.671, -27.738, 0.14 ) }
    dend_47 { pt3dadd( 54.4358, -5.73495, -28.0959, 0.14 ) }
    dend_47 { pt3dadd( 54.8881, -5.77445, -28.3809, 0.14 ) }
    dend_47 { pt3dadd( 55.3038, -5.80303, -28.6823, 0.14 ) }
    dend_47 { pt3dadd( 55.6138, -5.82482, -28.9047, 0.14 ) }
    dend_47 { pt3dadd( 55.9512, -5.8524, -29.1376, 0.14 ) }
    dend_47 { pt3dadd( 56.3575, -5.89316, -29.3939, 0.14 ) }
    dend_47 { pt3dadd( 56.8202, -5.9322, -29.7097, 0.14 ) }
    dend_47 { pt3dadd( 57.6268, -5.95328, -30.2566, 0.14 ) }
    dend_47 { pt3dadd( 58.5182, -5.89351, -30.8355, 0.58 ) }
    dend_47 { pt3dadd( 58.9585, -5.82772, -31.1291, 0.88 ) }
    dend_47 { pt3dadd( 60.0979, -5.59384, -31.8676, 0.14 ) }
    dend_47 { pt3dadd( 60.5865, -5.47556, -32.181, 0.14 ) }
    dend_47 { pt3dadd( 60.8918, -5.3887, -32.3747, 0.14 ) }
    dend_47 { pt3dadd( 61.4629, -5.19139, -32.7354, 0.22 ) }
    dend_47 { pt3dadd( 61.8922, -5.02982, -33.0319, 0.22 ) }
    dend_47 { pt3dadd( 62.481, -4.79715, -33.3881, 0.22 ) }
    dend_47 { pt3dadd( 63.0417, -4.58211, -33.6501, 0.08 ) }
    dend_47 { pt3dadd( 63.2477, -4.52053, -33.7321, 0.08 ) }
    dend_47 { pt3dadd( 63.7306, -4.44058, -33.9011, 0.22 ) }
    dend_47 { pt3dadd( 64.1919, -4.41908, -34.0293, 0.14 ) }
    dend_47 { pt3dadd( 64.8523, -4.38838, -34.145, 0.22 ) }
    dend_47 { pt3dadd( 65.2535, -4.35986, -34.2194, 0.08 ) }
    dend_47 { pt3dadd( 65.5007, -4.33626, -34.2656, 0.08 ) }
    dend_47 { pt3dadd( 66.0742, -4.2736, -34.3814, 0.08 ) }
    dend_47 { pt3dadd( 66.8566, -4.19916, -34.5462, 0.22 ) }
    dend_47 { pt3dadd( 68.2234, -4.08896, -34.8047, 0.14 ) }
    dend_47 { pt3dadd( 69.4617, -4.00599, -35.0253, 0.14 ) }
    dend_47 { pt3dadd( 69.9724, -3.97405, -35.1058, 0.36 ) }
    dend_47 { pt3dadd( 70.233, -3.95402, -35.1424, 0.44 ) }
    dend_47 { pt3dadd( 70.9573, -3.89271, -35.2112, 0.14 ) }
    dend_47 { pt3dadd( 71.5292, -3.84065, -35.21, 0.14 ) }
    dend_47 { pt3dadd( 71.9195, -3.80592, -35.1644, 0.14 ) }
    dend_47 { pt3dadd( 72.3681, -3.75277, -35.0681, 0.14 ) }
    dend_47 { pt3dadd( 72.9395, -3.67102, -34.9436, 0.58 ) }
    dend_47 { pt3dadd( 73.8045, -3.52455, -34.7626, 0.14 ) }
    dend_47 { pt3dadd( 74.763, -3.3435, -34.6442, 0.14 ) }
    dend_47 { pt3dadd( 75.062, -3.29762, -34.6349, 0.14 ) }
    dend_47 { pt3dadd( 75.5388, -3.23642, -34.6447, 0.58 ) }
    dend_47 { pt3dadd( 76.1548, -3.17921, -34.7256, 0.58 ) }
    dend_47 { pt3dadd( 76.5835, -3.16253, -34.8244, 0.58 ) }
    dend_47 { pt3dadd( 77.6772, -3.14864, -35.2119, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_47 { pt3dadd( 78.5851, -3.15541, -35.5896, 0.14 ) }
    dend_47 { pt3dadd( 79.0942, -3.15038, -35.8096, 0.14 ) }
    dend_47 { pt3dadd( 80.2803, -3.106, -36.3362, 0.14 ) }
    dend_47 { pt3dadd( 80.9139, -3.07537, -36.6156, 0.14 ) }
    dend_47 { pt3dadd( 81.6319, -3.02909, -36.8995, 0.14 ) }
    dend_47 { pt3dadd( 82.3413, -2.95279, -37.1244, 0.14 ) }
    dend_47 { pt3dadd( 82.7214, -2.89491, -37.2335, 0.58 ) }
    dend_47 { pt3dadd( 82.9728, -2.84621, -37.2872, 0.74 ) }
    dend_47 { pt3dadd( 83.3848, -2.74218, -37.3318, 0.74 ) }
    dend_47 { pt3dadd( 84.3212, -2.50983, -37.3683, 0.14 ) }
    dend_47 { pt3dadd( 84.9429, -2.37487, -37.3597, 0.14 ) }
    dend_47 { pt3dadd( 85.2909, -2.31246, -37.3534, 0.14 ) }
    dend_47 { pt3dadd( 85.9788, -2.22625, -37.3573, 0.22 ) }
    dend_47 { pt3dadd( 86.3743, -2.18798, -37.3819, 0.22 ) }
    dend_47 { pt3dadd( 87.4604, -2.09497, -37.4978, 0.08 ) }
    dend_47 { pt3dadd( 87.6691, -2.08402, -37.5341, 0.08 ) }
    dend_47 { pt3dadd( 88.188, -2.06682, -37.6432, 0.82 ) }
    dend_47 { pt3dadd( 89.2098, -2.01865, -37.8756, 0.14 ) }
    dend_47 { pt3dadd( 89.9659, -1.94936, -38.0645, 0.14 ) }
    dend_47 { pt3dadd( 90.5277, -1.85327, -38.2243, 0.74 ) }
    dend_47 { pt3dadd( 91.5183, -1.59371, -38.5606, 0.22 ) }
    dend_47 { pt3dadd( 92.246, -1.34214, -38.8191, 0.3 ) }
    dend_47 { pt3dadd( 92.952, -0.999219, -39.0724, 0.3 ) }
    dend_47 { pt3dadd( 93.4465, -0.672082, -39.2838, 0.22 ) }
    dend_47 { pt3dadd( 93.9174, -0.291522, -39.5505, 0.14 ) }
    dend_47 { pt3dadd( 94.3344, 0.11028, -39.9009, 0.14 ) }
    dend_47 { pt3dadd( 94.6909, 0.517606, -40.3356, 0.14 ) }
    dend_47 { pt3dadd( 95.1115, 1.00529, -40.9691, 0.36 ) }
    dend_47 { pt3dadd( 95.5942, 1.57989, -41.8243, 0.36 ) }
    dend_47 { pt3dadd( 96.004, 2.05998, -42.6082, 0.58 ) }
    dend_47 { pt3dadd( 96.369, 2.48431, -43.3504, 0.58 ) }
    dend_47 { pt3dadd( 96.8004, 2.97987, -44.2329, 0.22 ) }
    dend_47 { pt3dadd( 97.1694, 3.37461, -44.9722, 0.36 ) }
    dend_47 { pt3dadd( 97.7141, 3.92457, -45.9876, 0.22 ) }
    dend_47 { pt3dadd( 98.0347, 4.25987, -46.5061, 0.22 ) }
    dend_47 { pt3dadd( 98.284, 4.52801, -46.8779, 0.22 ) }
    dend_47 { pt3dadd( 98.6359, 4.91313, -47.3544, 0.36 ) }
    dend_47 { pt3dadd( 99.1902, 5.51945, -48.0462, 0.22 ) }
    dend_47 { pt3dadd( 99.4242, 5.77657, -48.3234, 0.22 ) }
    dend_47 { pt3dadd( 99.7945, 6.09683, -48.6564, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 40/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -20.3791, 3.81829, -0.415772, 0.58 ) }
    dend_36 { pt3dadd( -21.2778, 4.74652, -0.190822, 0.58 ) }
    dend_36 { pt3dadd( -22.0909, 5.49663, 0.0983807, 0.36 ) }
    dend_36 { pt3dadd( -22.7465, 6.03091, 0.408801, 0.58 ) }
    dend_36 { pt3dadd( -23.3316, 6.48937, 0.768334, 0.82 ) }
    dend_36 { pt3dadd( -23.83, 6.89276, 1.17107, 0.88 ) }
    dend_36 { pt3dadd( -24.1077, 7.14421, 1.45277, 0.88 ) }
    dend_36 { pt3dadd( -24.5788, 7.64691, 2.1561, 0.66 ) }
    dend_36 { pt3dadd( -24.9359, 8.12941, 2.81961, 1.1 ) }
    dend_36 { pt3dadd( -25.285, 8.71987, 3.56024, 1.1 ) }
    dend_36 { pt3dadd( -25.7271, 9.62429, 4.57788, 0.66 ) }
    dend_36 { pt3dadd( -26.1063, 10.507, 5.47072, 0.58 ) }
    dend_36 { pt3dadd( -26.6035, 11.7277, 6.60548, 0.58 ) }
    dend_36 { pt3dadd( -26.9193, 12.5087, 7.33686, 0.66 ) }
    dend_36 { pt3dadd( -27.1622, 13.0564, 7.84484, 0.88 ) }
    dend_36 { pt3dadd( -27.5156, 13.8156, 8.52179, 0.88 ) }
    dend_36 { pt3dadd( -27.8598, 14.4843, 9.09891, 1.1 ) }
    dend_36 { pt3dadd( -28.5676, 15.6406, 10.1257, 0.66 ) }
    dend_36 { pt3dadd( -29.4514, 16.8111, 11.2772, 0.66 ) }
    dend_36 { pt3dadd( -29.7133, 17.0905, 11.6279, 1.4 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 60/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -20.3791, 3.81829, -0.415772, 0.52 ) }
    dend_31 { pt3dadd( -21.208, 3.62018, -0.660898, 0.52 ) }
    dend_31 { pt3dadd( -22.3778, 3.55542, -0.847619, 0.58 ) }
    dend_31 { pt3dadd( -22.9606, 3.61721, -0.901974, 0.88 ) }
    dend_31 { pt3dadd( -23.7731, 3.80062, -0.949857, 0.74 ) }
    dend_31 { pt3dadd( -24.6583, 4.06252, -0.981495, 0.52 ) }
    dend_31 { pt3dadd( -25.7303, 4.40437, -1.0039, 0.66 ) }
    dend_31 { pt3dadd( -26.9183, 4.85275, -0.951997, 0.52 ) }
    dend_31 { pt3dadd( -27.8962, 5.24812, -0.852925, 0.36 ) }
    dend_31 { pt3dadd( -28.5633, 5.51066, -0.775619, 0.52 ) }
    dend_31 { pt3dadd( -29.385, 5.80507, -0.637397, 0.74 ) }
    dend_31 { pt3dadd( -30.614, 6.16271, -0.388589, 0.82 ) }
    dend_31 { pt3dadd( -31.7658, 6.4318, -0.140207, 0.74 ) }
    dend_31 { pt3dadd( -32.3247, 6.50846, -0.0184689, 0.74 ) }
    dend_31 { pt3dadd( -32.9576, 6.53553, 0.136735, 0.74 ) }
    dend_31 { pt3dadd( -34.0605, 6.50702, 0.443096, 0.82 ) }
    dend_31 { pt3dadd( -34.867, 6.44494, 0.716106, 0.82 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.5805, 5.08247, -5.38272, 1.48 ) }
    dend_25 { pt3dadd( -12.7523, 5.68177, -6.43797, 1.48 ) }
    dend_25 { pt3dadd( -12.9913, 6.51574, -7.90642, 1.48 ) }
    dend_25 { pt3dadd( -13.0962, 6.88158, -8.5506, 0.96 ) }
    dend_25 { pt3dadd( -13.2475, 7.40953, -9.48021, 0.96 ) }
    dend_25 { pt3dadd( -13.3043, 7.60773, -9.82919, 0.96 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 83/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.5805, 5.08247, -5.38272, 0.82 ) }
    dend_22 { pt3dadd( -13.0054, 6.06443, -4.33758, 0.82 ) }
    dend_22 { pt3dadd( -13.1851, 6.4364, -3.98624, 0.82 ) }
    dend_22 { pt3dadd( -13.7355, 7.57542, -2.91035, 0.58 ) }
    dend_22 { pt3dadd( -14.1477, 8.4286, -2.10447, 0.58 ) }
    dend_22 { pt3dadd( -14.7627, 9.70127, -0.902354, 0.36 ) }
    dend_22 { pt3dadd( -15.01, 10.2131, -0.418881, 0.36 ) }
    dend_22 { pt3dadd( -15.3664, 10.7778, 0.0900408, 0.52 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 7.14826, 13.5985, -7.79936, 0.74 ) }
    dend_17 { pt3dadd( 6.93769, 14.5462, -7.47883, 0.74 ) }
    dend_17 { pt3dadd( 6.69175, 15.8666, -7.02651, 0.96 ) }
    dend_17 { pt3dadd( 6.53522, 17.165, -6.58398, 0.82 ) }
    dend_17 { pt3dadd( 6.48964, 18.0897, -6.26165, 0.58 ) }
    dend_17 { pt3dadd( 6.51471, 19.586, -5.7725, 0.58 ) }
    dend_17 { pt3dadd( 6.55531, 20.3031, -5.53609, 0.58 ) }
    dend_17 { pt3dadd( 6.64399, 20.9914, -5.29846, 0.44 ) }
    dend_17 { pt3dadd( 6.79833, 21.8018, -5.00665, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( 6.9298, 22.4572, -4.769, 0.44 ) }
    dend_17 { pt3dadd( 7.10685, 23.2463, -4.49499, 0.22 ) }
    dend_17 { pt3dadd( 7.29314, 24.1339, -4.24128, 0.66 ) }
    dend_17 { pt3dadd( 7.46326, 25.0934, -3.93136, 0.88 ) }
    dend_17 { pt3dadd( 7.53043, 26.1634, -3.54774, 0.66 ) }
    dend_17 { pt3dadd( 7.45943, 27.0806, -3.19744, 0.44 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 6/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.14826, 13.5985, -7.79936, 0.22 ) }
    dend_16 { pt3dadd( 7.51113, 14.3804, -7.08671, 0.22 ) }
    dend_16 { pt3dadd( 7.79183, 15.7487, -6.23088, 0.22 ) }
    dend_16 { pt3dadd( 7.84827, 16.8827, -5.67303, 0.22 ) }
    dend_16 { pt3dadd( 7.8397, 17.7834, -5.21646, 0.22 ) }
    dend_16 { pt3dadd( 7.71544, 18.7683, -4.75059, 0.22 ) }
    dend_16 { pt3dadd( 7.48981, 19.7821, -4.24642, 0.3 ) }
    dend_16 { pt3dadd( 7.21172, 20.5257, -3.91794, 0.14 ) }
    dend_16 { pt3dadd( 6.79288, 21.2373, -3.61082, 0.22 ) }
    dend_16 { pt3dadd( 6.27799, 21.9213, -3.30115, 0.22 ) }
    dend_16 { pt3dadd( 5.36412, 22.873, -2.76029, 0.22 ) }
    dend_16 { pt3dadd( 4.7002, 23.4115, -2.3473, 0.22 ) }
    dend_16 { pt3dadd( 4.2396, 23.6984, -2.03442, 0.22 ) }
    dend_16 { pt3dadd( 3.56014, 24.0147, -1.55678, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 20/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 19.3683, 25.9965, -3.14293, 0.74 ) }
    dend_10 { pt3dadd( 19.5888, 26.419, -4.39543, 0.74 ) }
    dend_10 { pt3dadd( 19.8265, 26.9632, -5.92177, 0.74 ) }
    dend_10 { pt3dadd( 20.048, 27.5037, -7.45231, 0.74 ) }
    dend_10 { pt3dadd( 20.2019, 27.8595, -8.48585, 0.74 ) }
    dend_10 { pt3dadd( 20.3087, 28.0611, -9.18827, 0.74 ) }
    dend_10 { pt3dadd( 20.3928, 28.1703, -9.6452, 0.74 ) }
    dend_10 { pt3dadd( 20.5581, 28.2579, -10.376, 0.74 ) }
    dend_10 { pt3dadd( 20.8157, 28.2719, -11.1697, 0.74 ) }
    dend_10 { pt3dadd( 20.9259, 28.2658, -11.4204, 0.74 ) }
    dend_10 { pt3dadd( 21.5655, 28.2657, -12.6885, 0.74 ) }
    dend_10 { pt3dadd( 21.9819, 28.2989, -13.4445, 0.52 ) }
    dend_10 { pt3dadd( 22.5495, 28.455, -14.5025, 0.52 ) }
    dend_10 { pt3dadd( 22.9127, 28.6853, -15.2028, 0.52 ) }
    dend_10 { pt3dadd( 23.3157, 29.2209, -16.1413, 0.52 ) }
    dend_10 { pt3dadd( 23.757, 29.976, -17.2563, 0.52 ) }
    dend_10 { pt3dadd( 23.8866, 30.2861, -17.6239, 0.74 ) }
    dend_10 { pt3dadd( 24.1414, 31.1913, -18.5783, 0.96 ) }
    dend_10 { pt3dadd( 24.3091, 32.1475, -19.439, 0.82 ) }
    dend_10 { pt3dadd( 24.4226, 33.3713, -20.466, 0.82 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 40/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 19.3683, 25.9965, -3.14293, 0.3 ) }
    dend_9 { pt3dadd( 20.0157, 27.2271, -2.51146, 0.3 ) }
    dend_9 { pt3dadd( 20.5396, 28.4339, -1.8198, 0.3 ) }
    dend_9 { pt3dadd( 20.9296, 29.5903, -1.10377, 0.22 ) }
    dend_9 { pt3dadd( 21.0944, 30.3426, -0.610027, 0.22 ) }
    dend_9 { pt3dadd( 21.2235, 31.3211, 0.0304261, 0.3 ) }
    dend_9 { pt3dadd( 21.2792, 32.153, 0.56022, 0.52 ) }
    dend_9 { pt3dadd( 21.2079, 33.0534, 1.1576, 0.52 ) }
    dend_9 { pt3dadd( 21.0574, 33.8323, 1.64319, 0.66 ) }
    dend_9 { pt3dadd( 20.7665, 34.9434, 2.34374, 0.36 ) }
    dend_9 { pt3dadd( 20.5624, 35.6863, 2.81642, 0.66 ) }
    dend_9 { pt3dadd( 20.3064, 36.5921, 3.37258, 0.52 ) }
    dend_9 { pt3dadd( 20.1253, 37.2963, 3.75556, 0.22 ) }
    dend_9 { pt3dadd( 20.0669, 37.5445, 3.86506, 0.22 ) }
    dend_9 { pt3dadd( 19.9811, 37.9637, 4.02394, 0.22 ) }
    dend_9 { pt3dadd( 19.8521, 38.6012, 4.29235, 0.22 ) }
    dend_9 { pt3dadd( 19.7601, 38.9308, 4.46983, 0.22 ) }
    dend_9 { pt3dadd( 19.5913, 39.3545, 4.74361, 0.66 ) }
    dend_9 { pt3dadd( 19.2136, 40.1678, 5.33563, 0.66 ) }
    dend_9 { pt3dadd( 18.8449, 40.9598, 5.92915, 0.3 ) }
    dend_9 { pt3dadd( 18.4704, 41.8114, 6.54818, 0.3 ) }
    dend_9 { pt3dadd( 18.1062, 42.7005, 7.15739, 0.22 ) }
    dend_9 { pt3dadd( 17.8766, 43.3428, 7.58662, 0.52 ) }
    dend_9 { pt3dadd( 17.6669, 44.0764, 8.09895, 0.52 ) }
    dend_9 { pt3dadd( 17.5224, 44.8243, 8.63488, 0.66 ) }
    dend_9 { pt3dadd( 17.4364, 45.5767, 9.17832, 0.36 ) }
    dend_9 { pt3dadd( 17.4015, 46.5074, 9.83654, 0.3 ) }
    dend_9 { pt3dadd( 17.4224, 47.5005, 10.5801, 0.22 ) }
    dend_9 { pt3dadd( 17.4513, 48.444, 11.4349, 0.22 ) }
    dend_9 { pt3dadd( 17.4385, 48.7407, 11.7846, 0.22 ) }
    dend_9 { pt3dadd( 17.3918, 49.054, 12.3017, 0.22 ) }
    dend_9 { pt3dadd( 17.337, 49.3025, 12.7922, 0.22 ) }
    dend_9 { pt3dadd( 17.2822, 49.5051, 13.2478, 0.36 ) }
    dend_9 { pt3dadd( 17.0484, 50.1188, 14.5297, 0.36 ) }
    dend_9 { pt3dadd( 16.8108, 50.5989, 15.4593, 0.52 ) }
    dend_9 { pt3dadd( 16.314, 51.5498, 17.1274, 0.52 ) }
    dend_9 { pt3dadd( 16.1098, 51.9036, 17.7338, 0.82 ) }
    dend_9 { pt3dadd( 15.8072, 52.3976, 18.6054, 0.82 ) }
    dend_9 { pt3dadd( 15.4278, 52.9885, 19.6426, 0.14 ) }
    dend_9 { pt3dadd( 14.9154, 53.7018, 20.8609, 0.14 ) }
    dend_9 { pt3dadd( 14.6794, 53.9678, 21.3601, 0.58 ) }
    dend_9 { pt3dadd( 14.1427, 54.4395, 22.3769, 0.36 ) }
    dend_9 { pt3dadd( 13.695, 54.7655, 23.3032, 0.36 ) }
    dend_9 { pt3dadd( 13.5135, 54.8819, 23.7624, 0.36 ) }
    dend_9 { pt3dadd( 13.3957, 54.9496, 24.2359, 0.36 ) }
    dend_9 { pt3dadd( 13.2696, 55.0578, 25.0945, 0.36 ) }
    dend_9 { pt3dadd( 13.2299, 55.1199, 25.596, 0.36 ) }
    dend_9 { pt3dadd( 13.2163, 55.1945, 26.1438, 0.36 ) }
    dend_9 { pt3dadd( 13.207, 55.3454, 27.2389, 0.36 ) }
    dend_9 { pt3dadd( 13.2055, 55.5027, 28.4681, 0.36 ) }
    dend_9 { pt3dadd( 13.1956, 55.6353, 29.7843, 0.36 ) }
    dend_9 { pt3dadd( 13.1653, 55.779, 31.361, 0.36 ) }
    dend_9 { pt3dadd( 13.123, 55.9247, 32.7346, 0.36 ) }
    dend_9 { pt3dadd( 13.0976, 56.0062, 33.3482, 0.36 ) }
    dend_9 { pt3dadd( 13.0285, 56.182, 34.7075, 0.36 ) }
    dend_9 { pt3dadd( 12.8338, 56.643, 38.2695, 0.36 ) }
    dend_9 { pt3dadd( 12.8037, 56.7094, 38.7845, 0.36 ) }
    dend_9 { pt3dadd( 12.7281, 56.902, 40.0785, 0.36 ) }
    dend_9 { pt3dadd( 12.6944, 57.0036, 40.6706, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 24.2614, 2.36397, 11.4439, 1.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_7 { pt3dadd( 26.1215, 1.49124, 9.65505, 1.04 ) }
    dend_7 { pt3dadd( 27.0056, 1.05291, 8.78429, 0.88 ) }
    dend_7 { pt3dadd( 27.8287, 0.631107, 7.9924, 0.82 ) }
    dend_7 { pt3dadd( 28.661, 0.223541, 7.22565, 0.74 ) }
    dend_7 { pt3dadd( 29.535, -0.152706, 6.43088, 0.52 ) }
    dend_7 { pt3dadd( 30.4891, -0.510566, 5.58115, 0.52 ) }
    dend_7 { pt3dadd( 31.4035, -0.822539, 4.88638, 0.66 ) }
    dend_7 { pt3dadd( 31.8615, -0.946299, 4.54207, 0.96 ) }
    dend_7 { pt3dadd( 32.7246, -1.09975, 3.89204, 0.58 ) }
    dend_7 { pt3dadd( 33.7413, -1.20198, 3.03989, 0.44 ) }
    dend_7 { pt3dadd( 34.4441, -1.20734, 2.36163, 0.44 ) }
    dend_7 { pt3dadd( 34.9505, -1.1566, 1.8188, 0.44 ) }
    dend_7 { pt3dadd( 35.7499, -1.00003, 0.894803, 0.52 ) }
    dend_7 { pt3dadd( 36.3095, -0.830003, 0.117336, 0.58 ) }
    dend_7 { pt3dadd( 37.0611, -0.508816, -1.14475, 0.58 ) }
    dend_7 { pt3dadd( 37.6348, -0.198746, -2.2976, 0.58 ) }
    dend_7 { pt3dadd( 38.0841, 0.0957737, -3.41216, 0.44 ) }
    dend_7 { pt3dadd( 38.2463, 0.206279, -3.88033, 0.44 ) }
    dend_7 { pt3dadd( 38.7143, 0.500461, -5.52287, 0.44 ) }
    dend_7 { pt3dadd( 38.9717, 0.588151, -6.52817, 0.44 ) }
    dend_7 { pt3dadd( 39.2707, 0.560261, -7.69939, 0.44 ) }
    dend_7 { pt3dadd( 39.6759, 0.339241, -9.27607, 0.44 ) }
    dend_7 { pt3dadd( 39.8625, 0.153638, -10.0748, 0.44 ) }
    dend_7 { pt3dadd( 40.061, -0.124575, -11.0179, 0.44 ) }
    dend_7 { pt3dadd( 40.2068, -0.392731, -11.7237, 0.3 ) }
    dend_7 { pt3dadd( 40.4215, -0.83491, -12.7248, 0.3 ) }
    dend_7 { pt3dadd( 40.7138, -1.41817, -13.9461, 0.22 ) }
    dend_7 { pt3dadd( 40.9099, -1.71933, -14.6231, 0.22 ) }
    dend_7 { pt3dadd( 41.0816, -1.91452, -15.1743, 0.3 ) }
    dend_7 { pt3dadd( 41.273, -2.06936, -15.7174, 0.3 ) }
    dend_7 { pt3dadd( 41.4735, -2.18927, -16.2777, 0.3 ) }
    dend_7 { pt3dadd( 41.7545, -2.31752, -16.9903, 0.3 ) }
    dend_7 { pt3dadd( 42.4329, -2.56442, -18.5926, 0.3 ) }
    dend_7 { pt3dadd( 43.0678, -2.70489, -20.0342, 0.3 ) }
    dend_7 { pt3dadd( 43.5505, -2.76055, -21.0481, 0.36 ) }
    dend_7 { pt3dadd( 44.1974, -2.76401, -22.2302, 0.36 ) }
    dend_7 { pt3dadd( 44.622, -2.72893, -22.8896, 0.36 ) }
    dend_7 { pt3dadd( 45.2076, -2.65702, -23.7292, 0.22 ) }
    dend_7 { pt3dadd( 46.5455, -2.44079, -25.4095, 0.08 ) }
    dend_7 { pt3dadd( 47.2557, -2.30222, -26.179, 0.08 ) }
    dend_7 { pt3dadd( 48.311, -2.07258, -27.2095, 0.08 ) }
    dend_7 { pt3dadd( 49.0357, -1.90531, -27.8191, 0.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 42/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.2614, 2.36397, 11.4439, 0.66 ) }
    dend_2 { pt3dadd( 25.0233, 2.26606, 12.893, 0.66 ) }
    dend_2 { pt3dadd( 26.6452, 2.05765, 15.9777, 0.44 ) }
    dend_2 { pt3dadd( 27.0775, 2.0021, 16.7999, 0.66 ) }
    dend_2 { pt3dadd( 27.1038, 1.99872, 16.8499, 0.66 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 47/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -0.917382, 3.92401, 40.6819, 0.3 ) }
    dend_89 { pt3dadd( -0.479889, 4.28104, 41.7755, 0.3 ) }
    dend_89 { pt3dadd( 0.375627, 4.80488, 43.6916, 0.3 ) }
    dend_89 { pt3dadd( 1.38333, 5.28314, 45.6477, 0.22 ) }
    dend_89 { pt3dadd( 2.09106, 5.56649, 46.8792, 0.14 ) }
    dend_89 { pt3dadd( 2.84348, 5.85541, 48.0547, 0.14 ) }
    dend_89 { pt3dadd( 3.47763, 6.09411, 48.9546, 0.52 ) }
    dend_89 { pt3dadd( 4.33465, 6.33092, 50.007, 0.52 ) }
    dend_89 { pt3dadd( 4.99268, 6.46896, 50.6242, 0.52 ) }
    dend_89 { pt3dadd( 5.34572, 6.51471, 50.8921, 0.82 ) }
    dend_89 { pt3dadd( 6.11737, 6.58291, 51.4153, 0.36 ) }
    dend_89 { pt3dadd( 7.08829, 6.65254, 51.9632, 0.22 ) }
    dend_89 { pt3dadd( 8.07355, 6.71773, 52.455, 0.22 ) }
    dend_89 { pt3dadd( 8.66854, 6.75656, 52.6825, 0.58 ) }
    dend_89 { pt3dadd( 9.67801, 6.8201, 53.0942, 0.82 ) }
    dend_89 { pt3dadd( 10.1207, 6.85486, 53.2677, 0.82 ) }
    dend_89 { pt3dadd( 11.3105, 6.99719, 53.6776, 0.22 ) }
    dend_89 { pt3dadd( 12.3085, 7.17759, 53.9542, 0.3 ) }
    dend_89 { pt3dadd( 13.3084, 7.41185, 54.1431, 0.14 ) }
    dend_89 { pt3dadd( 14.8998, 7.89387, 54.3157, 0.14 ) }
    dend_89 { pt3dadd( 15.9941, 8.2738, 54.3444, 0.82 ) }
    dend_89 { pt3dadd( 17.3411, 8.78656, 54.2397, 0.14 ) }
    dend_89 { pt3dadd( 18.2406, 9.16001, 54.0735, 0.14 ) }
    dend_89 { pt3dadd( 19.4125, 9.69025, 53.7023, 0.96 ) }
    dend_89 { pt3dadd( 20.4736, 10.1776, 53.1988, 0.22 ) }
    dend_89 { pt3dadd( 21.1618, 10.5165, 52.7472, 0.22 ) }
    dend_89 { pt3dadd( 22.1789, 11.0705, 51.9477, 0.22 ) }
    dend_89 { pt3dadd( 22.465, 11.2479, 51.6757, 0.22 ) }
    dend_89 { pt3dadd( 23.105, 11.7037, 51.0046, 0.36 ) }
    dend_89 { pt3dadd( 23.5853, 12.092, 50.4815, 0.36 ) }
    dend_89 { pt3dadd( 24.1297, 12.5649, 49.8456, 0.66 ) }
    dend_89 { pt3dadd( 24.8431, 13.209, 48.9154, 0.22 ) }
    dend_89 { pt3dadd( 25.4788, 13.7544, 48.0602, 0.22 ) }
    dend_89 { pt3dadd( 25.9099, 14.1065, 47.4546, 0.66 ) }
    dend_89 { pt3dadd( 26.2611, 14.3837, 46.9676, 0.66 ) }
    dend_89 { pt3dadd( 27.1428, 15.0538, 45.8497, 0.22 ) }
    dend_89 { pt3dadd( 27.9754, 15.6478, 44.8704, 0.36 ) }
    dend_89 { pt3dadd( 28.7708, 16.2067, 44.0193, 0.14 ) }
    dend_89 { pt3dadd( 29.1697, 16.4786, 43.631, 0.14 ) }
    dend_89 { pt3dadd( 29.83, 16.9163, 43.0475, 0.96 ) }
    dend_89 { pt3dadd( 30.699, 17.4699, 42.3974, 0.14 ) }
    dend_89 { pt3dadd( 31.3872, 17.8769, 42.0076, 0.14 ) }
    dend_89 { pt3dadd( 32.0497, 18.2446, 41.6833, 0.52 ) }
    dend_89 { pt3dadd( 33.1192, 18.7756, 41.1702, 0.14 ) }
    dend_89 { pt3dadd( 33.8871, 19.0918, 40.7669, 0.3 ) }
    dend_89 { pt3dadd( 34.5851, 19.31, 40.369, 0.14 ) }
    dend_89 { pt3dadd( 35.4604, 19.4801, 39.8332, 0.44 ) }
    dend_89 { pt3dadd( 36.6529, 19.6222, 39.1145, 0.22 ) }
    dend_89 { pt3dadd( 37.5066, 19.6912, 38.5978, 0.52 ) }
    dend_89 { pt3dadd( 38.4107, 19.7625, 38.0786, 0.52 ) }
    dend_89 { pt3dadd( 38.6931, 19.7815, 37.9159, 0.52 ) }
    dend_89 { pt3dadd( 39.7642, 19.8552, 37.3326, 0.14 ) }
    dend_89 { pt3dadd( 40.3657, 19.9277, 37.0365, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_89 { pt3dadd( 41.2642, 20.0852, 36.7062, 0.14 ) }
    dend_89 { pt3dadd( 41.8512, 20.2344, 36.5351, 0.3 ) }
    dend_89 { pt3dadd( 42.4758, 20.4379, 36.3942, 0.22 ) }
    dend_89 { pt3dadd( 43.1075, 20.6885, 36.2712, 0.22 ) }
    dend_89 { pt3dadd( 43.9064, 21.0608, 36.1564, 0.14 ) }
    dend_89 { pt3dadd( 44.701, 21.4376, 36.0287, 0.14 ) }
    dend_89 { pt3dadd( 45.3466, 21.7582, 35.9168, 0.14 ) }
    dend_89 { pt3dadd( 45.9815, 22.1078, 35.7949, 0.14 ) }
    dend_89 { pt3dadd( 46.6978, 22.5273, 35.6555, 0.36 ) }
    dend_89 { pt3dadd( 47.8192, 23.2086, 35.4453, 0.14 ) }
    dend_89 { pt3dadd( 48.6997, 23.744, 35.2884, 0.14 ) }
    dend_89 { pt3dadd( 49.2801, 24.1198, 35.1664, 0.66 ) }
    dend_89 { pt3dadd( 50.0602, 24.6401, 34.9714, 0.66 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 13/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -0.917382, 3.92401, 40.6819, 0.3 ) }
    dend_88 { pt3dadd( -0.0267379, 3.17868, 41.3941, 0.3 ) }
    dend_88 { pt3dadd( 1.24855, 2.24325, 42.3844, 0.3 ) }
    dend_88 { pt3dadd( 1.70712, 1.94891, 42.7019, 0.66 ) }
    dend_88 { pt3dadd( 2.41258, 1.55348, 43.1243, 1.1 ) }
    dend_88 { pt3dadd( 3.4764, 1.00711, 43.7276, 0.22 ) }
    dend_88 { pt3dadd( 4.8815, 0.287977, 44.5776, 0.36 ) }
    dend_88 { pt3dadd( 5.6948, -0.108305, 45.08, 0.96 ) }
    dend_88 { pt3dadd( 6.65916, -0.559583, 45.6351, 1.04 ) }
    dend_88 { pt3dadd( 7.64128, -1.01813, 46.2233, 0.36 ) }
    dend_88 { pt3dadd( 8.89144, -1.61748, 47.0598, 0.22 ) }
    dend_88 { pt3dadd( 10.0099, -2.1987, 47.8761, 0.22 ) }
    dend_88 { pt3dadd( 10.5271, -2.50728, 48.2732, 0.58 ) }
    dend_88 { pt3dadd( 11.0861, -2.88237, 48.8044, 0.88 ) }
    dend_88 { pt3dadd( 11.8685, -3.45514, 49.7105, 0.14 ) }
    dend_88 { pt3dadd( 12.633, -4.00188, 50.758, 0.14 ) }
    dend_88 { pt3dadd( 12.8879, -4.15246, 51.1538, 0.14 ) }
    dend_88 { pt3dadd( 13.2053, -4.2859, 51.6598, 0.82 ) }
    dend_88 { pt3dadd( 13.9176, -4.47414, 52.8339, 0.82 ) }
    dend_88 { pt3dadd( 14.3087, -4.53569, 53.4921, 0.82 ) }
    dend_88 { pt3dadd( 15.2179, -4.57941, 54.9403, 0.36 ) }
    dend_88 { pt3dadd( 16.1492, -4.53251, 56.307, 0.82 ) }
    dend_88 { pt3dadd( 16.7892, -4.43354, 57.2236, 1.1 ) }
    dend_88 { pt3dadd( 18.0668, -4.10785, 59.0468, 0.22 ) }
    dend_88 { pt3dadd( 18.8657, -3.82481, 60.1247, 0.22 ) }
    dend_88 { pt3dadd( 19.3765, -3.5891, 60.808, 0.52 ) }
    dend_88 { pt3dadd( 19.794, -3.33154, 61.3527, 0.88 ) }
    dend_88 { pt3dadd( 20.7837, -2.57939, 62.59, 0.3 ) }
    dend_88 { pt3dadd( 21.5392, -1.92236, 63.475, 0.3 ) }
    dend_88 { pt3dadd( 22.0574, -1.4387, 64.0139, 0.88 ) }
    dend_88 { pt3dadd( 22.9358, -0.623424, 64.8498, 1.26 ) }
    dend_88 { pt3dadd( 24.1632, 0.509115, 65.9588, 0.22 ) }
    dend_88 { pt3dadd( 25.127, 1.38997, 66.73, 0.22 ) }
    dend_88 { pt3dadd( 25.8442, 2.06305, 67.2421, 0.36 ) }
    dend_88 { pt3dadd( 26.3325, 2.5175, 67.5942, 0.52 ) }
    dend_88 { pt3dadd( 26.8966, 3.01798, 68.0789, 0.52 ) }
    dend_88 { pt3dadd( 27.2259, 3.29225, 68.4278, 0.74 ) }
    dend_88 { pt3dadd( 27.8504, 3.74326, 69.2078, 0.14 ) }
    dend_88 { pt3dadd( 28.6775, 4.24191, 70.4055, 0.58 ) }
    dend_88 { pt3dadd( 29.4577, 4.62832, 71.6983, 1.04 ) }
    dend_88 { pt3dadd( 30.2879, 4.93628, 73.1384, 1.04 ) }
    dend_88 { pt3dadd( 31.3943, 5.19431, 75.0348, 0.36 ) }
    dend_88 { pt3dadd( 31.9222, 5.27697, 75.8968, 0.36 ) }
    dend_88 { pt3dadd( 32.5816, 5.32998, 76.9046, 0.22 ) }
    dend_88 { pt3dadd( 33.2823, 5.34797, 77.8576, 0.22 ) }
    dend_88 { pt3dadd( 33.6975, 5.35845, 78.3756, 0.74 ) }
    dend_88 { pt3dadd( 34.2623, 5.38806, 79.0331, 0.74 ) }
    dend_88 { pt3dadd( 35.246, 5.49215, 80.2465, 0.22 ) }
    dend_88 { pt3dadd( 35.6144, 5.57955, 80.7544, 0.22 ) }
    dend_88 { pt3dadd( 36.2773, 5.86806, 81.7025, 0.22 ) }
    dend_88 { pt3dadd( 36.5643, 6.07042, 82.2009, 0.22 ) }
    dend_88 { pt3dadd( 36.8722, 6.38067, 82.9839, 0.22 ) }
    dend_88 { pt3dadd( 37.2039, 6.79995, 84.1063, 0.22 ) }
    dend_88 { pt3dadd( 37.3162, 6.95364, 84.5399, 0.58 ) }
    dend_88 { pt3dadd( 37.5298, 7.23296, 85.3682, 0.88 ) }
    dend_88 { pt3dadd( 38.0845, 7.84522, 87.3315, 0.14 ) }
    dend_88 { pt3dadd( 38.757, 8.434, 89.6354, 0.14 ) }
    dend_88 { pt3dadd( 38.9332, 8.54728, 90.2417, 0.14 ) }
    dend_88 { pt3dadd( 39.2747, 8.69692, 91.5131, 0.3 ) }
    dend_88 { pt3dadd( 39.6439, 8.80239, 93.0667, 0.3 ) }
    dend_88 { pt3dadd( 39.7716, 8.83104, 93.7976, 0.3 ) }
    dend_88 { pt3dadd( 39.8559, 8.88852, 94.8307, 0.3 ) }
    dend_88 { pt3dadd( 39.8485, 9.03105, 96.1594, 0.3 ) }
    dend_88 { pt3dadd( 39.7371, 9.26662, 97.7047, 0.3 ) }
    dend_88 { pt3dadd( 39.6562, 9.38763, 98.2357, 0.3 ) }
    dend_88 { pt3dadd( 39.1791, 10.1027, 100.499, 0.3 ) }
    dend_88 { pt3dadd( 38.7436, 10.8069, 102.395, 0.22 ) }
    dend_88 { pt3dadd( 38.2871, 11.6772, 104.406, 0.22 ) }
    dend_88 { pt3dadd( 37.7729, 12.7388, 106.524, 0.22 ) }
    dend_88 { pt3dadd( 37.3281, 13.7328, 108.321, 0.36 ) }
    dend_88 { pt3dadd( 37.0495, 14.4034, 109.447, 0.36 ) }
    dend_88 { pt3dadd( 36.6565, 15.5057, 111.075, 0.36 ) }
    dend_88 { pt3dadd( 36.4729, 16.193, 111.986, 0.36 ) }
    dend_88 { pt3dadd( 36.3666, 16.8903, 112.847, 0.36 ) }
    dend_88 { pt3dadd( 36.3544, 17.8556, 114.055, 0.36 ) }
    dend_88 { pt3dadd( 36.4573, 18.2999, 114.505, 0.36 ) }
    dend_88 { pt3dadd( 36.7635, 18.8362, 114.873, 0.36 ) }
    dend_88 { pt3dadd( 37.4292, 19.4198, 115.082, 0.22 ) }
    dend_88 { pt3dadd( 38.3929, 19.9068, 115.162, 0.44 ) }
    dend_88 { pt3dadd( 39.0905, 20.1483, 115.167, 0.66 ) }
    dend_88 { pt3dadd( 40.4538, 20.5027, 115.105, 0.36 ) }
    dend_88 { pt3dadd( 41.169, 20.6432, 115.076, 0.66 ) }
    dend_88 { pt3dadd( 42.1147, 20.7632, 115.061, 0.36 ) }
    dend_88 { pt3dadd( 42.9352, 20.8084, 115.091, 0.36 ) }
    dend_88 { pt3dadd( 43.424, 20.8063, 115.144, 0.36 ) }
    dend_88 { pt3dadd( 43.8788, 20.7878, 115.219, 0.36 ) }
    dend_88 { pt3dadd( 44.6821, 20.746, 115.38, 0.82 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_88 { pt3dadd( 45.8187, 20.6599, 115.623, 0.14 ) }
    dend_88 { pt3dadd( 46.8502, 20.5679, 115.85, 0.14 ) }
    dend_88 { pt3dadd( 48.1826, 20.4042, 116.133, 0.14 ) }
    dend_88 { pt3dadd( 49.4283, 20.234, 116.375, 0.44 ) }
    dend_88 { pt3dadd( 50.8579, 20.0109, 116.624, 0.22 ) }
    dend_88 { pt3dadd( 51.5196, 19.8895, 116.724, 0.22 ) }
    dend_88 { pt3dadd( 52.2066, 19.7398, 116.805, 0.22 ) }
    dend_88 { pt3dadd( 53.0798, 19.5032, 116.809, 0.44 ) }
    dend_88 { pt3dadd( 54.073, 19.1881, 116.745, 0.22 ) }
    dend_88 { pt3dadd( 55.0043, 18.8282, 116.662, 0.22 ) }
    dend_88 { pt3dadd( 55.6609, 18.521, 116.581, 0.08 ) }
    dend_88 { pt3dadd( 56.2211, 18.2489, 116.49, 0.22 ) }
    dend_88 { pt3dadd( 57.604, 17.4982, 116.185, 0.14 ) }
    // Section: dend_86, id: dend_86, parent: dend_84 (entry count 13/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -44.5343, 56.2491, 35.0333, 0.22 ) }
    dend_86 { pt3dadd( -44.1823, 57.435, 33.8225, 0.22 ) }
    dend_86 { pt3dadd( -43.9772, 58.1258, 33.1173, 0.14 ) }
    dend_86 { pt3dadd( -43.6795, 59.1291, 32.0928, 0.14 ) }
    dend_86 { pt3dadd( -43.4584, 59.8742, 31.3322, 0.08 ) }
    dend_86 { pt3dadd( -43.2395, 60.6117, 30.5791, 0.44 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 19/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -44.5343, 56.2491, 35.0333, 0.22 ) }
    dend_85 { pt3dadd( -45.0205, 56.4454, 34.4276, 0.22 ) }
    dend_85 { pt3dadd( -45.8557, 56.9776, 33.1439, 0.44 ) }
    dend_85 { pt3dadd( -46.3983, 57.4938, 32.0178, 0.3 ) }
    dend_85 { pt3dadd( -46.66, 57.814, 31.3936, 0.3 ) }
    dend_85 { pt3dadd( -46.9559, 58.2124, 30.6632, 0.3 ) }
    dend_85 { pt3dadd( -47.6049, 59.1237, 29.078, 0.22 ) }
    dend_85 { pt3dadd( -47.9299, 59.6849, 28.1603, 0.22 ) }
    dend_85 { pt3dadd( -48.3381, 60.547, 26.9036, 0.22 ) }
    dend_85 { pt3dadd( -48.5147, 60.9369, 26.3746, 0.14 ) }
    dend_85 { pt3dadd( -48.8058, 61.6158, 25.4969, 0.14 ) }
    dend_85 { pt3dadd( -49.0074, 62.0544, 24.9425, 0.14 ) }
    dend_85 { pt3dadd( -49.236, 62.4025, 24.5127, 0.14 ) }
    dend_85 { pt3dadd( -49.6297, 62.8294, 23.9566, 0.58 ) }
    dend_85 { pt3dadd( -50.3026, 63.4223, 23.2267, 0.58 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 34/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 88.3417, 52.2107, 41.9485, 0.22 ) }
    dend_82 { pt3dadd( 88.5869, 52.4548, 41.0169, 0.22 ) }
    dend_82 { pt3dadd( 88.7701, 52.6462, 40.3107, 0.36 ) }
    dend_82 { pt3dadd( 89.284, 53.1948, 38.2653, 0.58 ) }
    dend_82 { pt3dadd( 89.7124, 53.6481, 36.5813, 0.14 ) }
    dend_82 { pt3dadd( 90.0783, 54.0183, 35.1729, 0.22 ) }
    dend_82 { pt3dadd( 90.5105, 54.413, 33.5393, 0.44 ) }
    dend_82 { pt3dadd( 90.7763, 54.6539, 32.4618, 0.52 ) }
    dend_82 { pt3dadd( 91.1478, 54.9714, 30.9642, 0.66 ) }
    dend_82 { pt3dadd( 91.3125, 55.1174, 30.3263, 0.66 ) }
    dend_82 { pt3dadd( 91.5891, 55.3346, 29.3085, 0.66 ) }
    dend_82 { pt3dadd( 91.9242, 55.554, 28.1113, 0.66 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 46/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 88.3417, 52.2107, 41.9485, 0.3 ) }
    dend_81 { pt3dadd( 88.7691, 52.1729, 42.2817, 0.3 ) }
    dend_81 { pt3dadd( 89.9598, 52.1027, 43.1048, 0.22 ) }
    dend_81 { pt3dadd( 90.8168, 52.0474, 43.6258, 0.36 ) }
    dend_81 { pt3dadd( 91.4473, 51.9966, 43.99, 0.36 ) }
    dend_81 { pt3dadd( 92.0826, 51.9323, 44.3375, 0.22 ) }
    dend_81 { pt3dadd( 93.1181, 51.8007, 44.8864, 0.22 ) }
    dend_81 { pt3dadd( 93.7615, 51.681, 45.2013, 0.22 ) }
    dend_81 { pt3dadd( 94.4349, 51.4914, 45.4882, 0.3 ) }
    dend_81 { pt3dadd( 95.0481, 51.2751, 45.7575, 0.14 ) }
    dend_81 { pt3dadd( 95.4527, 51.0985, 45.9555, 0.52 ) }
    dend_81 { pt3dadd( 95.6858, 50.9595, 46.0867, 0.52 ) }
    dend_81 { pt3dadd( 96.1361, 50.6001, 46.4446, 0.14 ) }
    dend_81 { pt3dadd( 96.6318, 50.0938, 46.9922, 0.14 ) }
    dend_81 { pt3dadd( 97.028, 49.581, 47.6969, 0.14 ) }
    dend_81 { pt3dadd( 97.1282, 49.4171, 47.9717, 0.14 ) }
    dend_81 { pt3dadd( 97.2514, 49.1422, 48.5013, 0.52 ) }
    dend_81 { pt3dadd( 97.4082, 48.6244, 49.7959, 0.52 ) }
    dend_81 { pt3dadd( 97.4503, 48.2576, 51.0756, 0.44 ) }
    dend_81 { pt3dadd( 97.4195, 47.7831, 52.9099, 0.44 ) }
    dend_81 { pt3dadd( 97.347, 47.5149, 54.0566, 0.44 ) }
    dend_81 { pt3dadd( 97.2877, 47.3845, 54.7235, 0.58 ) }
    dend_81 { pt3dadd( 97.0658, 47.1289, 56.5606, 0.58 ) }
    dend_81 { pt3dadd( 96.8064, 47.0193, 58.1072, 0.58 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 70/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 34.3513, 44.2344, 52.584, 0.22 ) }
    dend_79 { pt3dadd( 34.9627, 44.8164, 52.6191, 0.22 ) }
    dend_79 { pt3dadd( 35.4935, 45.2811, 52.6825, 0.44 ) }
    dend_79 { pt3dadd( 35.9963, 45.6353, 52.7462, 0.22 ) }
    dend_79 { pt3dadd( 36.8111, 46.1016, 52.8827, 0.52 ) }
    dend_79 { pt3dadd( 37.5117, 46.4662, 53.0193, 0.22 ) }
    dend_79 { pt3dadd( 38.4641, 46.9484, 53.2401, 0.22 ) }
    dend_79 { pt3dadd( 39.2565, 47.3243, 53.4625, 0.44 ) }
    dend_79 { pt3dadd( 40.3819, 47.832, 53.8149, 0.44 ) }
    dend_79 { pt3dadd( 41.308, 48.2312, 54.1315, 0.3 ) }
    dend_79 { pt3dadd( 41.9464, 48.4824, 54.3698, 0.52 ) }
    dend_79 { pt3dadd( 42.6072, 48.7119, 54.6168, 0.52 ) }
    dend_79 { pt3dadd( 43.8304, 49.1113, 55.033, 0.22 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 83/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 34.3513, 44.2344, 52.584, 0.22 ) }
    dend_78 { pt3dadd( 34.0219, 44.203, 52.7645, 0.22 ) }
    dend_78 { pt3dadd( 32.6973, 44.1311, 53.4151, 0.44 ) }
    dend_78 { pt3dadd( 32.2019, 44.1293, 53.6333, 0.66 ) }
    dend_78 { pt3dadd( 31.2843, 44.1668, 54.0099, 0.3 ) }
    dend_78 { pt3dadd( 30.8207, 44.2004, 54.1944, 0.3 ) }
    dend_78 { pt3dadd( 29.3497, 44.3269, 54.7871, 0.74 ) }
    dend_78 { pt3dadd( 28.4642, 44.4279, 55.1161, 0.22 ) }
    dend_78 { pt3dadd( 27.7591, 44.5281, 55.3418, 0.22 ) }
    dend_78 { pt3dadd( 27.1537, 44.6174, 55.5572, 0.36 ) }
    dend_78 { pt3dadd( 26.6895, 44.6745, 55.6674, 0.36 ) }
    dend_78 { pt3dadd( 26.2829, 44.7093, 55.7027, 0.36 ) }
    dend_78 { pt3dadd( 25.5424, 44.7518, 55.6773, 0.66 ) }
    dend_78 { pt3dadd( 25.2268, 44.7692, 55.6627, 0.66 ) }
    dend_78 { pt3dadd( 23.7472, 44.8122, 55.5441, 0.3 ) }
    dend_78 { pt3dadd( 21.4549, 44.8478, 55.2561, 0.3 ) }
    dend_78 { pt3dadd( 20.4303, 44.8654, 55.0783, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_78 { pt3dadd( 19.7414, 44.889, 54.924, 0.74 ) }
    dend_78 { pt3dadd( 19.1777, 44.921, 54.7703, 0.74 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 2/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 7.93381, 34.3842, 0.123441, 0.22 ) }
    dend_73 { pt3dadd( 8.80367, 34.5842, -0.392149, 0.22 ) }
    dend_73 { pt3dadd( 9.60838, 34.8171, -0.985103, 0.14 ) }
    dend_73 { pt3dadd( 9.94918, 34.9235, -1.27808, 0.14 ) }
    dend_73 { pt3dadd( 10.6419, 35.1584, -1.98261, 0.3 ) }
    dend_73 { pt3dadd( 11.2292, 35.3665, -2.60441, 0.3 ) }
    dend_73 { pt3dadd( 11.6421, 35.5195, -3.0555, 0.3 ) }
    dend_73 { pt3dadd( 12.2984, 35.7987, -3.91212, 0.44 ) }
    dend_73 { pt3dadd( 12.7052, 36.0157, -4.53093, 0.44 ) }
    dend_73 { pt3dadd( 13.1287, 36.2521, -5.29048, 0.44 ) }
    dend_73 { pt3dadd( 13.3022, 36.3322, -5.60156, 0.44 ) }
    dend_73 { pt3dadd( 13.6455, 36.4548, -6.17209, 0.58 ) }
    dend_73 { pt3dadd( 14.0942, 36.5687, -6.84575, 0.58 ) }
    dend_73 { pt3dadd( 14.5942, 36.6527, -7.57005, 0.58 ) }
    dend_73 { pt3dadd( 15.2866, 36.6992, -8.5264, 0.58 ) }
    dend_73 { pt3dadd( 16.0158, 36.6883, -9.49352, 0.14 ) }
    dend_73 { pt3dadd( 16.3309, 36.6642, -9.92671, 0.14 ) }
    dend_73 { pt3dadd( 16.7388, 36.6121, -10.5019, 0.3 ) }
    dend_73 { pt3dadd( 17.4147, 36.5236, -11.435, 0.3 ) }
    dend_73 { pt3dadd( 17.793, 36.4805, -11.9444, 0.36 ) }
    dend_73 { pt3dadd( 18.2608, 36.4423, -12.5917, 0.36 ) }
    dend_73 { pt3dadd( 18.9415, 36.423, -13.6428, 0.22 ) }
    dend_73 { pt3dadd( 19.3804, 36.4413, -14.3189, 0.22 ) }
    dend_73 { pt3dadd( 19.6331, 36.4705, -14.7192, 0.22 ) }
    dend_73 { pt3dadd( 20.0047, 36.544, -15.2666, 0.36 ) }
    dend_73 { pt3dadd( 20.6897, 36.6906, -16.2588, 0.36 ) }
    dend_73 { pt3dadd( 21.1783, 36.806, -16.9874, 0.22 ) }
    dend_73 { pt3dadd( 21.7372, 36.9543, -17.8687, 0.3 ) }
    dend_73 { pt3dadd( 22.2435, 37.079, -18.737, 0.3 ) }
    dend_73 { pt3dadd( 22.483, 37.1273, -19.2044, 0.3 ) }
    dend_73 { pt3dadd( 23.0226, 37.215, -20.3834, 0.22 ) }
    dend_73 { pt3dadd( 23.4875, 37.2393, -21.5587, 0.3 ) }
    dend_73 { pt3dadd( 23.8505, 37.1579, -22.5232, 0.3 ) }
    dend_73 { pt3dadd( 24.1425, 36.9899, -23.2609, 0.3 ) }
    dend_73 { pt3dadd( 24.4187, 36.7616, -23.8394, 0.3 ) }
    dend_73 { pt3dadd( 24.5616, 36.6331, -24.0726, 0.3 ) }
    dend_73 { pt3dadd( 25.1962, 36.0358, -24.8119, 0.3 ) }
    dend_73 { pt3dadd( 26.0041, 35.2728, -25.4601, 0.14 ) }
    dend_73 { pt3dadd( 26.8152, 34.5663, -25.8676, 0.14 ) }
    dend_73 { pt3dadd( 27.5434, 34.0133, -26.0944, 0.14 ) }
    dend_73 { pt3dadd( 28.226, 33.5736, -26.2117, 0.14 ) }
    dend_73 { pt3dadd( 28.6311, 33.3574, -26.2205, 0.14 ) }
    dend_73 { pt3dadd( 29.306, 33.0698, -26.1408, 0.14 ) }
    dend_73 { pt3dadd( 30.3276, 32.7575, -25.8717, 0.36 ) }
    dend_73 { pt3dadd( 30.7497, 32.6769, -25.7196, 0.36 ) }
    dend_73 { pt3dadd( 31.5845, 32.5865, -25.3148, 0.22 ) }
    dend_73 { pt3dadd( 32.6551, 32.5811, -24.6994, 0.08 ) }
    dend_73 { pt3dadd( 33.2235, 32.655, -24.3512, 0.14 ) }
    dend_73 { pt3dadd( 34.2439, 32.961, -23.6251, 0.14 ) }
    dend_73 { pt3dadd( 34.834, 33.2298, -23.1874, 0.82 ) }
    dend_73 { pt3dadd( 35.9314, 33.8614, -22.3077, 0.22 ) }
    dend_73 { pt3dadd( 36.6516, 34.3683, -21.6973, 0.22 ) }
    dend_73 { pt3dadd( 37.2889, 34.8802, -21.1285, 0.88 ) }
    dend_73 { pt3dadd( 38.3428, 35.7624, -20.1968, 0.22 ) }
    dend_73 { pt3dadd( 38.8773, 36.2155, -19.7487, 0.14 ) }
    dend_73 { pt3dadd( 39.6112, 36.8362, -19.1182, 0.14 ) }
    dend_73 { pt3dadd( 40.3424, 37.455, -18.48, 0.36 ) }
    dend_73 { pt3dadd( 41.3398, 38.2392, -17.6219, 0.36 ) }
    dend_73 { pt3dadd( 42.0034, 38.7151, -17.0492, 0.14 ) }
    dend_73 { pt3dadd( 42.4506, 39.0039, -16.6868, 0.3 ) }
    dend_73 { pt3dadd( 43.1874, 39.478, -16.0417, 0.08 ) }
    dend_73 { pt3dadd( 43.8987, 39.96, -15.424, 0.08 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 64/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 7.93381, 34.3842, 0.123441, 0.3 ) }
    dend_72 { pt3dadd( 7.74936, 35.0332, 0.565467, 0.3 ) }
    dend_72 { pt3dadd( 7.52865, 36.4666, 1.73442, 0.36 ) }
    dend_72 { pt3dadd( 7.44213, 37.2057, 2.33413, 0.74 ) }
    dend_72 { pt3dadd( 7.35703, 38.0371, 2.97689, 0.74 ) }
    dend_72 { pt3dadd( 7.28666, 38.8252, 3.54233, 0.44 ) }
    dend_72 { pt3dadd( 7.20021, 40.0288, 4.34275, 0.44 ) }
    dend_72 { pt3dadd( 7.1992, 41.703, 5.36621, 0.44 ) }
    dend_72 { pt3dadd( 7.24682, 42.5034, 5.77076, 0.36 ) }
    dend_72 { pt3dadd( 7.29653, 43.187, 6.04936, 0.36 ) }
    dend_72 { pt3dadd( 7.36031, 44.0549, 6.27892, 0.36 ) }
    dend_72 { pt3dadd( 7.41807, 44.7598, 6.36993, 0.36 ) }
    dend_72 { pt3dadd( 7.455, 45.2375, 6.337, 0.36 ) }
    dend_72 { pt3dadd( 7.50528, 46.2011, 6.10746, 0.36 ) }
    dend_72 { pt3dadd( 7.54219, 47.4522, 5.7157, 0.36 ) }
    dend_72 { pt3dadd( 7.5139, 48.2867, 5.39463, 0.52 ) }
    dend_72 { pt3dadd( 7.43961, 48.9101, 5.1095, 0.44 ) }
    dend_72 { pt3dadd( 7.18927, 49.8978, 4.60034, 0.44 ) }
    dend_72 { pt3dadd( 6.82978, 50.7877, 4.11702, 0.44 ) }
    dend_72 { pt3dadd( 6.61149, 51.2011, 3.88414, 0.44 ) }
    dend_72 { pt3dadd( 6.30174, 51.7363, 3.63198, 0.66 ) }
    dend_72 { pt3dadd( 6.18693, 51.9227, 3.55265, 0.66 ) }
    dend_72 { pt3dadd( 5.77573, 52.5704, 3.34024, 0.3 ) }
    dend_72 { pt3dadd( 5.35792, 53.2506, 3.23455, 0.3 ) }
    dend_72 { pt3dadd( 5.01455, 53.8527, 3.21037, 0.3 ) }
    dend_72 { pt3dadd( 4.44831, 54.9111, 3.22004, 0.3 ) }
    dend_72 { pt3dadd( 4.07698, 55.7101, 3.30175, 0.3 ) }
    dend_72 { pt3dadd( 3.76964, 56.525, 3.43397, 0.3 ) }
    dend_72 { pt3dadd( 3.47776, 57.6163, 3.66298, 0.22 ) }
    dend_72 { pt3dadd( 3.33329, 58.2709, 3.78787, 0.44 ) }
    dend_72 { pt3dadd( 3.18726, 58.9139, 3.89774, 0.74 ) }
    dend_72 { pt3dadd( 2.90154, 60.2728, 4.03817, 0.3 ) }
    dend_72 { pt3dadd( 2.69266, 61.4144, 4.07098, 0.66 ) }
    dend_72 { pt3dadd( 2.4603, 62.5754, 3.95653, 0.36 ) }
    dend_72 { pt3dadd( 2.16112, 63.7191, 3.5966, 0.36 ) }
    dend_72 { pt3dadd( 1.85335, 64.6167, 3.27275, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_72 { pt3dadd( 1.36996, 65.6391, 2.83829, 0.44 ) }
    dend_72 { pt3dadd( 1.11259, 66.0156, 2.67011, 0.66 ) }
    dend_72 { pt3dadd( 0.550049, 66.6492, 2.72441, 0.14 ) }
    dend_72 { pt3dadd( 0.0551644, 67.2635, 3.41757, 0.14 ) }
    dend_72 { pt3dadd( -0.658033, 68.401, 5.28691, 0.14 ) }
    dend_72 { pt3dadd( -0.814632, 68.7049, 5.77593, 0.52 ) }
    dend_72 { pt3dadd( -1.0902, 69.3231, 6.79674, 1.04 ) }
    dend_72 { pt3dadd( -1.44291, 70.4039, 8.6118, 0.36 ) }
    dend_72 { pt3dadd( -1.55273, 70.8258, 9.30119, 0.82 ) }
    dend_72 { pt3dadd( -1.84076, 71.92, 11.0072, 0.22 ) }
    dend_72 { pt3dadd( -2.19338, 73.1501, 12.6408, 0.22 ) }
    dend_72 { pt3dadd( -2.63784, 74.3487, 14.0839, 0.22 ) }
    dend_72 { pt3dadd( -3.0909, 75.2411, 14.9211, 0.22 ) }
    dend_72 { pt3dadd( -3.56019, 75.8175, 15.3053, 0.22 ) }
    dend_72 { pt3dadd( -3.92573, 76.1791, 15.5217, 0.22 ) }
    dend_72 { pt3dadd( -4.38639, 76.5402, 15.7006, 0.3 ) }
    dend_72 { pt3dadd( -5.55337, 77.3226, 16.1626, 0.22 ) }
    dend_72 { pt3dadd( -6.25931, 77.6834, 16.2355, 0.44 ) }
    dend_72 { pt3dadd( -7.37104, 78.1305, 16.2556, 0.58 ) }
    // Section: dend_69, id: dend_69, parent: dend_65 (entry count 19/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -1.63186, 25.7156, 46.027, 0.3 ) }
    dend_69 { pt3dadd( -1.13742, 26.8128, 46.6419, 0.3 ) }
    dend_69 { pt3dadd( -0.708767, 27.7586, 47.2021, 0.3 ) }
    dend_69 { pt3dadd( -0.491547, 28.2159, 47.4641, 0.3 ) }
    dend_69 { pt3dadd( -0.232995, 28.6896, 47.7281, 0.52 ) }
    dend_69 { pt3dadd( 0.0248814, 29.1441, 47.9954, 0.88 ) }
    dend_69 { pt3dadd( 0.818812, 30.5478, 48.8364, 0.22 ) }
    dend_69 { pt3dadd( 1.06586, 31.0345, 49.1334, 0.58 ) }
    dend_69 { pt3dadd( 1.32379, 31.5717, 49.4499, 0.74 ) }
    dend_69 { pt3dadd( 1.854, 32.6988, 50.2246, 0.3 ) }
    dend_69 { pt3dadd( 2.17067, 33.3633, 50.7433, 0.3 ) }
    dend_69 { pt3dadd( 2.25533, 33.5301, 50.8775, 0.3 ) }
    dend_69 { pt3dadd( 2.5476, 34.094, 51.3103, 0.66 ) }
    dend_69 { pt3dadd( 2.89929, 34.6996, 51.7717, 0.3 ) }
    dend_69 { pt3dadd( 3.65281, 35.8186, 52.6071, 0.44 ) }
    dend_69 { pt3dadd( 4.05926, 36.3101, 52.9928, 0.44 ) }
    dend_69 { pt3dadd( 4.79296, 37.0851, 53.6551, 0.58 ) }
    dend_69 { pt3dadd( 5.20977, 37.4781, 54.0473, 0.58 ) }
    dend_69 { pt3dadd( 5.75408, 37.917, 54.5621, 0.74 ) }
    dend_69 { pt3dadd( 6.19611, 38.2316, 54.9418, 0.74 ) }
    dend_69 { pt3dadd( 7.32901, 38.9664, 55.8263, 0.44 ) }
    dend_69 { pt3dadd( 8.49443, 39.6557, 56.7107, 0.44 ) }
    dend_69 { pt3dadd( 9.38982, 40.0979, 57.3599, 0.44 ) }
    dend_69 { pt3dadd( 10.1752, 40.4003, 57.8382, 0.44 ) }
    dend_69 { pt3dadd( 11.2946, 40.7448, 58.3413, 0.74 ) }
    dend_69 { pt3dadd( 11.7959, 40.863, 58.4663, 1.04 ) }
    dend_69 { pt3dadd( 12.5323, 40.9765, 58.5165, 1.48 ) }
    dend_69 { pt3dadd( 13.7442, 41.1126, 58.5466, 0.82 ) }
    dend_69 { pt3dadd( 14.7185, 41.2319, 58.5689, 0.36 ) }
    dend_69 { pt3dadd( 15.7208, 41.3955, 58.6235, 0.22 ) }
    dend_69 { pt3dadd( 16.9436, 41.6392, 58.7621, 0.14 ) }
    dend_69 { pt3dadd( 18.1353, 41.9196, 58.9101, 0.14 ) }
    dend_69 { pt3dadd( 19.0684, 42.1834, 59.0316, 0.14 ) }
    dend_69 { pt3dadd( 19.9373, 42.499, 59.1737, 0.66 ) }
    dend_69 { pt3dadd( 21.0639, 42.9872, 59.269, 0.14 ) }
    dend_69 { pt3dadd( 21.5606, 43.2395, 59.2523, 0.14 ) }
    dend_69 { pt3dadd( 22.4144, 43.7284, 59.1855, 0.3 ) }
    dend_69 { pt3dadd( 23.3, 44.2951, 59.0549, 0.14 ) }
    dend_69 { pt3dadd( 24.3874, 45.0182, 58.7837, 0.3 ) }
    dend_69 { pt3dadd( 26.4185, 46.4137, 58.1015, 0.22 ) }
    dend_69 { pt3dadd( 27.2676, 47.02, 57.6978, 0.3 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 60/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -1.63186, 25.7156, 46.027, 0.74 ) }
    dend_66 { pt3dadd( -1.90548, 25.9345, 46.6022, 0.74 ) }
    dend_66 { pt3dadd( -2.3618, 26.2449, 47.6665, 0.74 ) }
    dend_66 { pt3dadd( -2.66673, 26.4175, 48.487, 0.3 ) }
    dend_66 { pt3dadd( -3.04004, 26.5993, 49.6706, 0.3 ) }
    dend_66 { pt3dadd( -3.41768, 26.7596, 51.13, 0.3 ) }
    dend_66 { pt3dadd( -3.76157, 26.8747, 52.6908, 0.3 ) }
    dend_66 { pt3dadd( -3.99986, 26.9063, 54.0928, 0.3 ) }
    dend_66 { pt3dadd( -4.23657, 26.8565, 55.5558, 0.3 ) }
    dend_66 { pt3dadd( -4.53094, 26.7393, 57.1257, 0.3 ) }
    dend_66 { pt3dadd( -4.81684, 26.5868, 58.6441, 0.3 ) }
    dend_66 { pt3dadd( -5.08521, 26.405, 60.133, 0.3 ) }
    dend_66 { pt3dadd( -5.24587, 26.2648, 61.0671, 0.3 ) }
    dend_66 { pt3dadd( -5.46623, 26.0891, 62.1872, 0.52 ) }
    dend_66 { pt3dadd( -5.89187, 25.8399, 63.7263, 1.04 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 49.8838, 8.48862, 62.2172, 0.22 ) }
    dend_64 { pt3dadd( 50.3803, 8.77179, 62.961, 0.22 ) }
    dend_64 { pt3dadd( 51.3686, 9.42208, 64.5302, 0.14 ) }
    dend_64 { pt3dadd( 52.0009, 9.90924, 65.5639, 0.52 ) }
    dend_64 { pt3dadd( 52.2978, 10.1374, 66.0799, 0.52 ) }
    dend_64 { pt3dadd( 52.7936, 10.517, 67.0081, 0.14 ) }
    dend_64 { pt3dadd( 53.3703, 10.9447, 68.1486, 0.14 ) }
    dend_64 { pt3dadd( 53.6857, 11.1842, 68.7921, 0.14 ) }
    dend_64 { pt3dadd( 54.2996, 11.5842, 69.9792, 0.96 ) }
    dend_64 { pt3dadd( 55.2455, 12.0199, 71.7152, 0.44 ) }
    dend_64 { pt3dadd( 56.0191, 12.2301, 73.087, 0.44 ) }
    dend_64 { pt3dadd( 56.6532, 12.3268, 74.1901, 0.44 ) }
    dend_64 { pt3dadd( 57.1476, 12.3657, 75.0498, 0.88 ) }
    dend_64 { pt3dadd( 57.8844, 12.3703, 76.3979, 1.1 ) }
    dend_64 { pt3dadd( 58.9459, 12.2623, 78.4151, 0.44 ) }
    dend_64 { pt3dadd( 59.6894, 12.1137, 79.9443, 0.88 ) }
    dend_64 { pt3dadd( 60.6145, 11.8158, 82.0586, 0.3 ) }
    dend_64 { pt3dadd( 61.1747, 11.5454, 83.5024, 0.3 ) }
    dend_64 { pt3dadd( 61.6735, 11.1872, 85.0358, 0.3 ) }
    dend_64 { pt3dadd( 62.0258, 10.8102, 86.3017, 0.14 ) }
    dend_64 { pt3dadd( 62.4669, 10.0712, 88.1473, 0.14 ) }
    dend_64 { pt3dadd( 62.6471, 9.62872, 89.0105, 0.14 ) }
    dend_64 { pt3dadd( 62.7705, 9.12784, 89.7383, 0.82 ) }
    dend_64 { pt3dadd( 62.9043, 8.39599, 90.6995, 0.82 ) }
    dend_64 { pt3dadd( 62.9671, 8.07077, 91.1412, 0.82 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_64 { pt3dadd( 63.1287, 7.52545, 92.1384, 0.3 ) }
    dend_64 { pt3dadd( 63.2435, 7.27781, 92.7408, 0.3 ) }
    dend_64 { pt3dadd( 63.5519, 6.90628, 94.0262, 0.96 ) }
    dend_64 { pt3dadd( 63.9524, 6.65239, 95.4911, 0.96 ) }
    dend_64 { pt3dadd( 64.5252, 6.51965, 97.2504, 0.58 ) }
    dend_64 { pt3dadd( 65.5392, 6.58133, 99.9154, 0.58 ) }
    dend_64 { pt3dadd( 65.7394, 6.65288, 100.341, 0.58 ) }
    dend_64 { pt3dadd( 66.2974, 6.97518, 101.285, 0.3 ) }
    dend_64 { pt3dadd( 66.7989, 7.35931, 101.878, 0.3 ) }
    dend_64 { pt3dadd( 67.351, 7.85318, 102.286, 0.66 ) }
    dend_64 { pt3dadd( 67.799, 8.31431, 102.508, 0.66 ) }
    dend_64 { pt3dadd( 68.7604, 9.37523, 102.848, 0.22 ) }
    dend_64 { pt3dadd( 69.255, 9.95422, 103.03, 0.52 ) }
    dend_64 { pt3dadd( 69.784, 10.6187, 103.23, 1.1 ) }
    dend_64 { pt3dadd( 70.3783, 11.3826, 103.438, 0.44 ) }
    dend_64 { pt3dadd( 71.5585, 12.9666, 103.867, 0.22 ) }
    dend_64 { pt3dadd( 71.8988, 13.4422, 103.983, 0.22 ) }
    dend_64 { pt3dadd( 72.3273, 14.0808, 104.094, 0.22 ) }
    dend_64 { pt3dadd( 72.7542, 14.8122, 104.161, 0.66 ) }
    dend_64 { pt3dadd( 73.0853, 15.5281, 104.152, 0.22 ) }
    dend_64 { pt3dadd( 73.382, 16.3631, 104.03, 0.58 ) }
    dend_64 { pt3dadd( 73.6646, 17.3712, 103.756, 0.14 ) }
    dend_64 { pt3dadd( 73.9285, 18.4139, 103.471, 0.14 ) }
    dend_64 { pt3dadd( 74.1208, 19.1481, 103.269, 0.3 ) }
    dend_64 { pt3dadd( 74.3531, 19.9514, 103.041, 0.08 ) }
    dend_64 { pt3dadd( 74.6395, 20.7185, 102.816, 0.08 ) }
    dend_64 { pt3dadd( 74.9681, 21.4767, 102.607, 0.44 ) }
    dend_64 { pt3dadd( 75.4224, 22.264, 102.446, 0.14 ) }
    dend_64 { pt3dadd( 75.8932, 22.8781, 102.382, 0.22 ) }
    dend_64 { pt3dadd( 76.2306, 23.1895, 102.347, 0.08 ) }
    dend_64 { pt3dadd( 77.0339, 23.6723, 102.297, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 31/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 49.8838, 8.48862, 62.2172, 0.14 ) }
    dend_63 { pt3dadd( 50.5612, 9.01873, 62.2172, 0.14 ) }
    dend_63 { pt3dadd( 51.0429, 9.39136, 62.2172, 0.14 ) }
    dend_63 { pt3dadd( 51.7828, 9.96366, 62.2172, 0.36 ) }
    dend_63 { pt3dadd( 52.4914, 10.5118, 62.2172, 0.14 ) }
    dend_63 { pt3dadd( 52.9391, 10.8581, 62.2172, 0.36 ) }
    dend_63 { pt3dadd( 53.437, 11.2432, 62.2172, 0.14 ) }
    dend_63 { pt3dadd( 54.1168, 11.6946, 62.2172, 0.52 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 1.73999, -17.9242, 23.2854, 0.52 ) }
    dend_58 { pt3dadd( 2.11042, -18.5726, 24.1059, 0.52 ) }
    dend_58 { pt3dadd( 2.2672, -18.9659, 24.525, 0.36 ) }
    dend_58 { pt3dadd( 2.52821, -19.9897, 25.5206, 0.36 ) }
    dend_58 { pt3dadd( 2.56506, -20.3363, 25.8216, 0.36 ) }
    dend_58 { pt3dadd( 2.56153, -20.7575, 26.1871, 0.36 ) }
    dend_58 { pt3dadd( 2.54237, -21.0313, 26.437, 0.36 ) }
    dend_58 { pt3dadd( 2.44799, -21.4502, 26.8632, 0.36 ) }
    dend_58 { pt3dadd( 2.36075, -21.8021, 27.2189, 0.36 ) }
    dend_58 { pt3dadd( 2.279, -22.2559, 27.6472, 0.22 ) }
    dend_58 { pt3dadd( 2.27932, -22.888, 28.2908, 0.22 ) }
    dend_58 { pt3dadd( 2.3544, -23.2729, 28.7224, 0.22 ) }
    dend_58 { pt3dadd( 2.53333, -23.7063, 29.269, 0.22 ) }
    dend_58 { pt3dadd( 2.71625, -24.0063, 29.6667, 0.52 ) }
    dend_58 { pt3dadd( 2.97281, -24.3252, 30.0823, 0.74 ) }
    dend_58 { pt3dadd( 3.60393, -24.9546, 30.8403, 0.44 ) }
    dend_58 { pt3dadd( 3.99714, -25.3217, 31.1611, 0.44 ) }
    dend_58 { pt3dadd( 4.72305, -26.0185, 31.6785, 0.14 ) }
    dend_58 { pt3dadd( 4.94899, -26.2483, 31.83, 0.22 ) }
    dend_58 { pt3dadd( 5.24851, -26.5704, 32.0241, 0.96 ) }
    dend_58 { pt3dadd( 5.83565, -27.277, 32.4223, 1.4 ) }
    dend_58 { pt3dadd( 6.73904, -28.5566, 33.1663, 0.14 ) }
    dend_58 { pt3dadd( 7.22109, -29.466, 33.7089, 0.14 ) }
    dend_58 { pt3dadd( 7.36028, -29.9258, 34.0041, 0.14 ) }
    dend_58 { pt3dadd( 7.42536, -30.459, 34.4156, 0.44 ) }
    dend_58 { pt3dadd( 7.39889, -31.5674, 35.3666, 0.14 ) }
    dend_58 { pt3dadd( 7.26569, -32.4274, 36.2132, 0.36 ) }
    dend_58 { pt3dadd( 7.0999, -33.1007, 36.9373, 1.4 ) }
    dend_58 { pt3dadd( 6.79634, -34.2292, 38.1803, 0.22 ) }
    dend_58 { pt3dadd( 6.53627, -35.1457, 39.2407, 0.22 ) }
    dend_58 { pt3dadd( 6.46356, -35.3939, 39.5215, 0.44 ) }
    dend_58 { pt3dadd( 6.28228, -36.0242, 40.1851, 0.44 ) }
    dend_58 { pt3dadd( 6.19576, -36.4072, 40.569, 0.14 ) }
    dend_58 { pt3dadd( 6.12428, -36.8931, 41.0665, 0.14 ) }
    dend_58 { pt3dadd( 6.12981, -37.4109, 41.5406, 0.14 ) }
    dend_58 { pt3dadd( 6.16196, -38.3642, 42.1689, 0.14 ) }
    dend_58 { pt3dadd( 6.15545, -39.2898, 42.7301, 0.88 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 76/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 1.73999, -17.9242, 23.2854, 0.88 ) }
    dend_55 { pt3dadd( 1.04839, -18.1262, 23.7998, 0.88 ) }
    dend_55 { pt3dadd( -0.17716, -18.4916, 24.6871, 0.44 ) }
    dend_55 { pt3dadd( -1.18277, -18.8219, 25.5088, 0.44 ) }
    dend_55 { pt3dadd( -1.58721, -18.9647, 25.8518, 0.74 ) }
    dend_55 { pt3dadd( -2.42632, -19.2858, 26.6182, 1.04 ) }
    dend_55 { pt3dadd( -3.54128, -19.7463, 27.7437, 0.22 ) }
    dend_55 { pt3dadd( -4.3958, -20.1457, 28.8019, 0.44 ) }
    dend_55 { pt3dadd( -5.24416, -20.5831, 29.9514, 0.44 ) }
    dend_55 { pt3dadd( -5.48312, -20.7082, 30.2792, 0.66 ) }
    dend_55 { pt3dadd( -6.09331, -20.998, 31.1338, 1.04 ) }
    dend_55 { pt3dadd( -6.73921, -21.2721, 32.0375, 1.04 ) }
    dend_55 { pt3dadd( -7.83783, -21.6804, 33.5167, 1.04 ) }
    dend_55 { pt3dadd( -8.55503, -21.8772, 34.3292, 0.3 ) }
    dend_55 { pt3dadd( -9.47474, -22.0255, 35.1992, 0.22 ) }
    dend_55 { pt3dadd( -10.6178, -22.1197, 36.2144, 0.22 ) }
    dend_55 { pt3dadd( -11.0913, -22.129, 36.6056, 0.44 ) }
    dend_55 { pt3dadd( -11.4387, -22.1171, 36.8872, 0.96 ) }
    dend_55 { pt3dadd( -11.9113, -22.0667, 37.3104, 0.96 ) }
    dend_55 { pt3dadd( -12.8051, -21.8804, 38.3605, 0.22 ) }
    dend_55 { pt3dadd( -13.54, -21.649, 39.3091, 0.44 ) }
    dend_55 { pt3dadd( -14.1853, -21.411, 40.1204, 0.88 ) }
    dend_55 { pt3dadd( -14.7764, -21.1682, 40.8226, 1.1 ) }
    dend_55 { pt3dadd( -15.737, -20.7429, 41.8683, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_55 { pt3dadd( -17.0312, -20.1358, 43.0942, 0.22 ) }
    dend_55 { pt3dadd( -18.2064, -19.5655, 43.9734, 0.22 ) }
    dend_55 { pt3dadd( -19.0663, -19.1465, 44.4784, 0.36 ) }
    dend_55 { pt3dadd( -19.9398, -18.7291, 44.8753, 0.36 ) }
    dend_55 { pt3dadd( -21.0716, -18.2131, 45.2707, 0.36 ) }
    dend_55 { pt3dadd( -22.008, -17.7971, 45.4379, 0.36 ) }
    dend_55 { pt3dadd( -23.2719, -17.2694, 45.5117, 0.82 ) }
    dend_55 { pt3dadd( -24.7393, -16.6836, 45.5449, 1.32 ) }
    dend_55 { pt3dadd( -25.4035, -16.4172, 45.5396, 1.1 ) }
    dend_55 { pt3dadd( -26.4438, -15.9842, 45.4948, 0.52 ) }
    dend_55 { pt3dadd( -28.1926, -15.2693, 45.8372, 0.22 ) }
    dend_55 { pt3dadd( -29.3795, -14.766, 46.4201, 0.22 ) }
    dend_55 { pt3dadd( -29.8381, -14.5585, 46.7432, 0.44 ) }
    dend_55 { pt3dadd( -30.2923, -14.3432, 47.1309, 1.18 ) }
    dend_55 { pt3dadd( -30.9165, -14.0481, 47.772, 1.26 ) }
    dend_55 { pt3dadd( -33.7779, -12.7629, 51.153, 0.22 ) }
    dend_55 { pt3dadd( -34.4345, -12.4965, 52.0316, 0.22 ) }
    dend_55 { pt3dadd( -34.8617, -12.3345, 52.6353, 0.22 ) }
    dend_55 { pt3dadd( -35.3643, -12.1718, 53.3637, 0.22 ) }
    dend_55 { pt3dadd( -35.7836, -12.0552, 53.973, 0.22 ) }
    dend_55 { pt3dadd( -36.0283, -11.9934, 54.306, 0.52 ) }
    dend_55 { pt3dadd( -36.7598, -11.8042, 55.098, 1.04 ) }
    dend_55 { pt3dadd( -37.0979, -11.7259, 55.4678, 1.04 ) }
    dend_55 { pt3dadd( -38.2204, -11.4635, 56.7045, 0.3 ) }
    dend_55 { pt3dadd( -39.1441, -11.1877, 57.7559, 0.3 ) }
    dend_55 { pt3dadd( -39.6948, -10.9717, 58.4229, 0.3 ) }
    dend_55 { pt3dadd( -40.2253, -10.7022, 59.1091, 0.36 ) }
    dend_55 { pt3dadd( -40.8587, -10.3013, 60.0303, 0.82 ) }
    dend_55 { pt3dadd( -41.3022, -9.96856, 60.7887, 1.26 ) }
    dend_55 { pt3dadd( -41.9075, -9.46482, 61.9527, 0.22 ) }
    dend_55 { pt3dadd( -42.3477, -9.11949, 62.8374, 0.22 ) }
    dend_55 { pt3dadd( -42.6745, -8.88991, 63.5078, 0.82 ) }
    dend_55 { pt3dadd( -43.2313, -8.54294, 64.597, 0.82 ) }
    dend_55 { pt3dadd( -44.0215, -8.11236, 66.0558, 0.82 ) }
    dend_55 { pt3dadd( -44.9035, -7.73068, 67.5129, 0.3 ) }
    dend_55 { pt3dadd( -45.5298, -7.53373, 68.3441, 0.14 ) }
    dend_55 { pt3dadd( -46.1744, -7.3865, 69.0004, 0.14 ) }
    dend_55 { pt3dadd( -46.7344, -7.28765, 69.4677, 0.14 ) }
    dend_55 { pt3dadd( -47.588, -7.1527, 70.0275, 0.14 ) }
    dend_55 { pt3dadd( -48.3609, -7.03819, 70.4335, 0.58 ) }
    dend_55 { pt3dadd( -49.2775, -6.86463, 70.8808, 0.58 ) }
    dend_55 { pt3dadd( -50.3046, -6.61012, 71.4258, 0.22 ) }
    dend_55 { pt3dadd( -51.5094, -6.27843, 72.1308, 0.22 ) }
    dend_55 { pt3dadd( -52.0074, -6.13263, 72.4669, 0.58 ) }
    dend_55 { pt3dadd( -52.5121, -5.98177, 72.8174, 0.96 ) }
    dend_55 { pt3dadd( -53.8382, -5.57262, 73.8191, 0.22 ) }
    dend_55 { pt3dadd( -55.088, -5.16351, 74.7912, 0.22 ) }
    dend_55 { pt3dadd( -56.174, -4.79999, 75.6306, 0.22 ) }
    dend_55 { pt3dadd( -57.3207, -4.43552, 76.4739, 0.22 ) }
    dend_55 { pt3dadd( -58.463, -4.09589, 77.3011, 0.22 ) }
    dend_55 { pt3dadd( -60.0024, -3.69886, 78.3582, 0.22 ) }
    dend_55 { pt3dadd( -60.6157, -3.57901, 78.7248, 0.22 ) }
    dend_55 { pt3dadd( -61.3325, -3.47637, 79.1157, 0.22 ) }
    dend_55 { pt3dadd( -61.7985, -3.43929, 79.3656, 0.44 ) }
    dend_55 { pt3dadd( -62.1698, -3.44512, 79.5966, 0.44 ) }
    dend_55 { pt3dadd( -62.6398, -3.50471, 79.9942, 0.44 ) }
    dend_55 { pt3dadd( -63.4085, -3.65347, 80.7659, 0.14 ) }
    dend_55 { pt3dadd( -64.1335, -3.77699, 81.6779, 0.52 ) }
    dend_55 { pt3dadd( -64.6644, -3.84279, 82.4563, 0.52 ) }
    dend_55 { pt3dadd( -65.2517, -3.88378, 83.4078, 0.52 ) }
    dend_55 { pt3dadd( -65.7618, -3.92161, 84.2905, 0.52 ) }
    dend_55 { pt3dadd( -66.019, -3.94525, 84.7864, 0.36 ) }
    dend_55 { pt3dadd( -66.6989, -4.05136, 86.1656, 0.36 ) }
    dend_55 { pt3dadd( -67.0593, -4.1199, 86.8565, 0.36 ) }
    dend_55 { pt3dadd( -67.6046, -4.23359, 87.8755, 0.22 ) }
    dend_55 { pt3dadd( -68.1021, -4.34905, 88.7706, 0.22 ) }
    dend_55 { pt3dadd( -68.8494, -4.54263, 90.1314, 0.22 ) }
    dend_55 { pt3dadd( -69.2533, -4.63899, 90.8197, 0.22 ) }
    dend_55 { pt3dadd( -69.7231, -4.73443, 91.5419, 0.36 ) }
    dend_55 { pt3dadd( -70.4875, -4.84624, 92.6761, 0.74 ) }
    dend_55 { pt3dadd( -70.914, -4.89569, 93.2678, 0.74 ) }
    dend_55 { pt3dadd( -71.4266, -4.938, 93.9505, 0.74 ) }
    dend_55 { pt3dadd( -72.1411, -4.98305, 94.8725, 0.14 ) }
    dend_55 { pt3dadd( -72.7743, -5.01074, 95.8132, 0.14 ) }
    dend_55 { pt3dadd( -73.0894, -5.02688, 96.2958, 0.14 ) }
    dend_55 { pt3dadd( -73.3806, -5.03693, 96.7295, 0.44 ) }
    dend_55 { pt3dadd( -73.9781, -5.02929, 97.5979, 0.44 ) }
    dend_55 { pt3dadd( -74.8303, -4.97727, 98.8694, 0.22 ) }
    dend_55 { pt3dadd( -75.6152, -4.87149, 100.07, 0.22 ) }
    dend_55 { pt3dadd( -76.1341, -4.73826, 100.809, 0.66 ) }
    dend_55 { pt3dadd( -76.6247, -4.57108, 101.403, 0.88 ) }
    dend_55 { pt3dadd( -77.5021, -4.23171, 102.316, 0.22 ) }
    dend_55 { pt3dadd( -78.5828, -3.81063, 103.217, 0.22 ) }
    dend_55 { pt3dadd( -79.0427, -3.63545, 103.513, 0.88 ) }
    dend_55 { pt3dadd( -79.4821, -3.46651, 103.758, 0.88 ) }
    dend_55 { pt3dadd( -80.6058, -3.04034, 104.417, 0.22 ) }
    dend_55 { pt3dadd( -81.3969, -2.76606, 104.862, 0.52 ) }
    dend_55 { pt3dadd( -81.828, -2.63893, 105.099, 0.52 ) }
    dend_55 { pt3dadd( -82.5798, -2.46034, 105.552, 0.14 ) }
    dend_55 { pt3dadd( -83.59, -2.25667, 106.26, 0.52 ) }
    dend_55 { pt3dadd( -84.3793, -2.11661, 106.858, 0.52 ) }
    dend_55 { pt3dadd( -84.8722, -2.03359, 107.252, 0.52 ) }
    dend_55 { pt3dadd( -85.9354, -1.84312, 108.066, 0.22 ) }
    dend_55 { pt3dadd( -86.9401, -1.64063, 108.888, 0.22 ) }
    dend_55 { pt3dadd( -87.4119, -1.53238, 109.283, 0.22 ) }
    dend_55 { pt3dadd( -87.9784, -1.37659, 109.721, 0.52 ) }
    dend_55 { pt3dadd( -88.3948, -1.2356, 110.01, 0.74 ) }
    dend_55 { pt3dadd( -88.9027, -1.04652, 110.308, 0.22 ) }
    dend_55 { pt3dadd( -90.0562, -0.585317, 110.95, 0.22 ) }
    dend_55 { pt3dadd( -90.5426, -0.40366, 111.259, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_55 { pt3dadd( -90.927, -0.262979, 111.585, 0.44 ) }
    dend_55 { pt3dadd( -91.48, -0.0687814, 112.146, 0.44 ) }
    dend_55 { pt3dadd( -92.178, 0.161778, 112.911, 0.22 ) }
    dend_55 { pt3dadd( -93.241, 0.473191, 114.0, 0.22 ) }
    dend_55 { pt3dadd( -94.2076, 0.703652, 114.902, 0.58 ) }
    dend_55 { pt3dadd( -95.2329, 0.913824, 115.849, 0.82 ) }
    dend_55 { pt3dadd( -95.543, 0.984801, 116.152, 0.82 ) }
    dend_55 { pt3dadd( -96.2977, 1.21822, 116.927, 0.22 ) }
    dend_55 { pt3dadd( -97.2922, 1.65356, 117.996, 0.22 ) }
    dend_55 { pt3dadd( -97.8512, 1.97715, 118.592, 0.22 ) }
    dend_55 { pt3dadd( -98.0673, 2.13269, 118.841, 0.66 ) }
    dend_55 { pt3dadd( -98.7009, 2.62166, 119.73, 0.66 ) }
    dend_55 { pt3dadd( -99.1032, 2.95156, 120.379, 0.22 ) }
    dend_55 { pt3dadd( -99.5998, 3.35965, 121.261, 0.44 ) }
    dend_55 { pt3dadd( -100.071, 3.73023, 122.08, 0.44 ) }
    dend_55 { pt3dadd( -100.554, 4.08902, 122.776, 0.22 ) }
    dend_55 { pt3dadd( -101.304, 4.53535, 123.611, 0.22 ) }
    dend_55 { pt3dadd( -101.679, 4.69906, 123.901, 0.22 ) }
    dend_55 { pt3dadd( -102.047, 4.82098, 124.109, 0.74 ) }
    dend_55 { pt3dadd( -102.761, 5.02718, 124.379, 0.74 ) }
    dend_55 { pt3dadd( -103.601, 5.24847, 124.655, 0.22 ) }
    dend_55 { pt3dadd( -104.556, 5.47955, 125.044, 0.22 ) }
    dend_55 { pt3dadd( -104.99, 5.58065, 125.262, 0.22 ) }
    dend_55 { pt3dadd( -105.299, 5.66001, 125.484, 0.52 ) }
    dend_55 { pt3dadd( -105.668, 5.77291, 125.835, 0.96 ) }
    dend_55 { pt3dadd( -106.679, 6.12164, 126.964, 0.3 ) }
    dend_55 { pt3dadd( -107.431, 6.40609, 127.892, 0.44 ) }
    dend_55 { pt3dadd( -107.898, 6.6017, 128.481, 0.96 ) }
    dend_55 { pt3dadd( -108.849, 7.06101, 129.765, 0.22 ) }
    dend_55 { pt3dadd( -109.368, 7.33555, 130.47, 0.22 ) }
    dend_55 { pt3dadd( -109.737, 7.53881, 130.946, 0.58 ) }
    dend_55 { pt3dadd( -110.015, 7.69727, 131.266, 0.96 ) }
    dend_55 { pt3dadd( -111.028, 8.19741, 132.321, 0.22 ) }
    dend_55 { pt3dadd( -111.983, 8.55519, 133.336, 0.22 ) }
    dend_55 { pt3dadd( -112.394, 8.64934, 133.809, 0.22 ) }
    dend_55 { pt3dadd( -112.875, 8.69837, 134.453, 0.66 ) }
    dend_55 { pt3dadd( -113.242, 8.68497, 135.024, 0.66 ) }
    dend_55 { pt3dadd( -114.052, 8.51663, 136.525, 0.3 ) }
    dend_55 { pt3dadd( -114.728, 8.17942, 138.137, 0.3 ) }
    dend_55 { pt3dadd( -115.177, 7.78437, 139.566, 0.3 ) }
    dend_55 { pt3dadd( -115.434, 7.39459, 140.891, 0.3 ) }
    dend_55 { pt3dadd( -115.481, 7.20299, 141.527, 0.3 ) }
    dend_55 { pt3dadd( -115.436, 6.9294, 142.419, 0.3 ) }
    dend_55 { pt3dadd( -115.251, 6.64448, 143.325, 0.3 ) }
    dend_55 { pt3dadd( -115.11, 6.48841, 143.863, 0.3 ) }
    dend_55 { pt3dadd( -115.038, 6.3837, 144.343, 0.3 ) }
    dend_55 { pt3dadd( -115.049, 6.31102, 144.828, 0.3 ) }
    dend_55 { pt3dadd( -115.106, 6.22154, 145.55, 0.3 ) }
    dend_55 { pt3dadd( -115.277, 6.08427, 146.666, 0.3 ) }
    dend_55 { pt3dadd( -115.556, 5.89555, 148.026, 0.3 ) }
    dend_55 { pt3dadd( -115.869, 5.65558, 149.395, 0.3 ) }
    dend_55 { pt3dadd( -116.249, 5.29245, 151.075, 0.3 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 52/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 8.2977, -23.2626, -4.73942, 0.52 ) }
    dend_52 { pt3dadd( 8.64134, -24.2797, -4.04633, 0.52 ) }
    dend_52 { pt3dadd( 9.02173, -25.2832, -3.43478, 0.52 ) }
    dend_52 { pt3dadd( 9.29201, -25.8863, -3.09708, 0.74 ) }
    dend_52 { pt3dadd( 9.44387, -26.1889, -2.9474, 0.74 ) }
    dend_52 { pt3dadd( 9.80582, -26.8664, -2.65412, 0.44 ) }
    dend_52 { pt3dadd( 9.98866, -27.2232, -2.51703, 0.44 ) }
    dend_52 { pt3dadd( 10.2665, -27.7621, -2.40756, 0.44 ) }
    dend_52 { pt3dadd( 10.4701, -28.2062, -2.33859, 0.44 ) }
    dend_52 { pt3dadd( 10.7265, -28.778, -2.2285, 0.22 ) }
    dend_52 { pt3dadd( 10.9461, -29.2526, -2.12903, 0.44 ) }
    dend_52 { pt3dadd( 11.1765, -29.7259, -2.02803, 0.44 ) }
    dend_52 { pt3dadd( 11.405, -30.1797, -1.94118, 0.44 ) }
    dend_52 { pt3dadd( 11.9312, -31.1798, -1.7514, 0.44 ) }
    dend_52 { pt3dadd( 12.1699, -31.5976, -1.65656, 0.22 ) }
    dend_52 { pt3dadd( 12.4451, -32.0387, -1.50627, 0.22 ) }
    dend_52 { pt3dadd( 12.7589, -32.5223, -1.30582, 0.44 ) }
    dend_52 { pt3dadd( 13.1434, -33.092, -1.03757, 0.14 ) }
    dend_52 { pt3dadd( 13.5048, -33.6592, -0.757201, 0.52 ) }
    dend_52 { pt3dadd( 13.8984, -34.356, -0.393962, 0.14 ) }
    dend_52 { pt3dadd( 14.3144, -35.2383, 0.0832561, 0.14 ) }
    dend_52 { pt3dadd( 14.4869, -35.6707, 0.320228, 0.14 ) }
    dend_52 { pt3dadd( 14.5637, -35.8838, 0.439044, 0.14 ) }
    dend_52 { pt3dadd( 14.8211, -36.5673, 0.814661, 0.74 ) }
    dend_52 { pt3dadd( 15.2173, -37.4994, 1.27378, 0.14 ) }
    dend_52 { pt3dadd( 15.4698, -38.0075, 1.49582, 0.58 ) }
    dend_52 { pt3dadd( 15.8144, -38.5829, 1.71848, 0.14 ) }
    dend_52 { pt3dadd( 15.8956, -38.6953, 1.765, 0.14 ) }
    dend_52 { pt3dadd( 16.3177, -39.1833, 1.95846, 0.36 ) }
    dend_52 { pt3dadd( 16.7715, -39.6532, 2.12282, 0.14 ) }
    dend_52 { pt3dadd( 17.2466, -40.1316, 2.25052, 0.44 ) }
    dend_52 { pt3dadd( 17.6061, -40.5012, 2.37645, 1.04 ) }
    dend_52 { pt3dadd( 17.8685, -40.7913, 2.49939, 1.04 ) }
    dend_52 { pt3dadd( 18.5134, -41.5313, 2.84711, 0.14 ) }
    dend_52 { pt3dadd( 19.283, -42.4135, 3.28638, 0.14 ) }
    dend_52 { pt3dadd( 19.8453, -43.0506, 3.64278, 1.18 ) }
    dend_52 { pt3dadd( 20.7482, -44.0834, 4.3194, 0.08 ) }
    dend_52 { pt3dadd( 21.3709, -44.8103, 4.89662, 0.08 ) }
    dend_52 { pt3dadd( 21.635, -45.1218, 5.1734, 0.66 ) }
    dend_52 { pt3dadd( 22.0445, -45.6044, 5.64261, 0.82 ) }
    dend_52 { pt3dadd( 22.7477, -46.4229, 6.41635, 0.08 ) }
    dend_52 { pt3dadd( 23.5392, -47.3131, 7.24186, 0.14 ) }
    dend_52 { pt3dadd( 24.0502, -47.8606, 7.74564, 0.14 ) }
    dend_52 { pt3dadd( 24.4522, -48.2711, 8.1235, 1.26 ) }
    dend_52 { pt3dadd( 24.8244, -48.6527, 8.46183, 1.18 ) }
    dend_52 { pt3dadd( 25.7641, -49.6106, 9.29598, 0.36 ) }
    dend_52 { pt3dadd( 26.8791, -50.6811, 10.1582, 0.08 ) }
    dend_52 { pt3dadd( 27.6335, -51.3631, 10.6657, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_52 { pt3dadd( 27.9842, -51.6712, 10.8994, 0.52 ) }
    dend_52 { pt3dadd( 28.5735, -52.1678, 11.3396, 0.3 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 8.2977, -23.2626, -4.73942, 0.36 ) }
    dend_51 { pt3dadd( 8.15493, -23.4854, -5.18938, 0.36 ) }
    dend_51 { pt3dadd( 7.78359, -24.0516, -6.25225, 0.22 ) }
    dend_51 { pt3dadd( 7.32305, -24.7846, -7.47129, 0.22 ) }
    dend_51 { pt3dadd( 6.91757, -25.4243, -8.53757, 0.22 ) }
    dend_51 { pt3dadd( 6.62953, -25.8879, -9.34576, 0.22 ) }
    dend_51 { pt3dadd( 6.47925, -26.1321, -9.78481, 0.44 ) }
    dend_51 { pt3dadd( 6.22268, -26.5375, -10.5212, 0.96 ) }
    dend_51 { pt3dadd( 5.74754, -27.2117, -11.7336, 0.36 ) }
    dend_51 { pt3dadd( 5.11988, -28.026, -13.1464, 0.74 ) }
    dend_51 { pt3dadd( 4.66648, -28.556, -14.0207, 0.74 ) }
    dend_51 { pt3dadd( 4.43284, -28.8098, -14.4184, 0.74 ) }
    dend_51 { pt3dadd( 3.8325, -29.4161, -15.2485, 0.14 ) }
    dend_51 { pt3dadd( 3.2399, -29.9615, -15.8034, 0.14 ) }
    dend_51 { pt3dadd( 2.78662, -30.3253, -16.0268, 0.14 ) }
    dend_51 { pt3dadd( 1.84288, -31.0358, -16.1693, 0.14 ) }
    dend_51 { pt3dadd( 1.28374, -31.4379, -16.1558, 0.58 ) }
    dend_51 { pt3dadd( 0.417049, -32.0514, -16.041, 0.58 ) }
    dend_51 { pt3dadd( -0.391099, -32.5963, -15.8648, 0.66 ) }
    dend_51 { pt3dadd( -1.1983, -33.1101, -15.6516, 0.22 ) }
    dend_51 { pt3dadd( -1.93438, -33.5203, -15.4629, 0.22 ) }
    dend_51 { pt3dadd( -2.51433, -33.7741, -15.2964, 0.58 ) }
    dend_51 { pt3dadd( -2.93859, -33.9254, -15.148, 0.58 ) }
    dend_51 { pt3dadd( -3.97486, -34.2543, -14.6966, 0.22 ) }
    dend_51 { pt3dadd( -4.44595, -34.397, -14.4231, 0.22 ) }
    dend_51 { pt3dadd( -4.96321, -34.5586, -14.0442, 0.58 ) }
    dend_51 { pt3dadd( -5.89331, -34.8321, -13.219, 0.22 ) }
    dend_51 { pt3dadd( -6.70846, -35.0356, -12.3905, 0.22 ) }
    dend_51 { pt3dadd( -7.2689, -35.1477, -11.7866, 0.36 ) }
    dend_51 { pt3dadd( -7.8705, -35.2567, -11.111, 0.82 ) }
    dend_51 { pt3dadd( -8.94394, -35.4464, -9.93618, 0.36 ) }
    dend_51 { pt3dadd( -9.93165, -35.5869, -8.90677, 0.58 ) }
    dend_51 { pt3dadd( -10.713, -35.6549, -8.1737, 0.96 ) }
    dend_51 { pt3dadd( -11.2492, -35.6559, -7.72802, 0.3 ) }
    dend_51 { pt3dadd( -11.6143, -35.6358, -7.43345, 0.3 ) }
    dend_51 { pt3dadd( -11.9555, -35.603, -7.15324, 0.3 ) }
    dend_51 { pt3dadd( -13.1602, -35.4719, -6.17401, 0.14 ) }
    dend_51 { pt3dadd( -13.6936, -35.435, -5.72643, 0.52 ) }
    dend_51 { pt3dadd( -14.0032, -35.43, -5.43969, 0.96 ) }
    dend_51 { pt3dadd( -15.1527, -35.4791, -4.31058, 0.58 ) }
    dend_51 { pt3dadd( -15.8052, -35.5357, -3.66532, 0.44 ) }
    dend_51 { pt3dadd( -16.1432, -35.5955, -3.34407, 0.44 ) }
    dend_51 { pt3dadd( -16.6919, -35.7903, -2.86548, 0.44 ) }
    dend_51 { pt3dadd( -17.0014, -35.9303, -2.61269, 0.44 ) }
    dend_51 { pt3dadd( -17.4274, -36.1452, -2.28703, 0.88 ) }
    dend_51 { pt3dadd( -17.8286, -36.3499, -2.01664, 1.32 ) }
    dend_51 { pt3dadd( -18.4125, -36.6605, -1.6236, 1.04 ) }
    dend_51 { pt3dadd( -19.2817, -37.1339, -1.02735, 0.22 ) }
    dend_51 { pt3dadd( -19.9734, -37.5063, -0.563519, 0.22 ) }
    dend_51 { pt3dadd( -20.489, -37.7749, -0.20103, 0.52 ) }
    dend_51 { pt3dadd( -20.9556, -38.0128, 0.158284, 1.1 ) }
    dend_51 { pt3dadd( -21.1737, -38.1226, 0.339854, 1.1 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 99.7945, 6.09683, -48.6564, 0.22 ) }
    dend_49 { pt3dadd( 100.386, 6.28963, -49.395, 0.22 ) }
    dend_49 { pt3dadd( 101.011, 6.49308, -50.0939, 0.22 ) }
    dend_49 { pt3dadd( 101.827, 6.76617, -50.9289, 0.14 ) }
    dend_49 { pt3dadd( 102.435, 6.94556, -51.5539, 0.14 ) }
    dend_49 { pt3dadd( 102.736, 7.01437, -51.8698, 0.44 ) }
    dend_49 { pt3dadd( 103.002, 7.06498, -52.1425, 0.74 ) }
    dend_49 { pt3dadd( 103.337, 7.1156, -52.4815, 0.82 ) }
    dend_49 { pt3dadd( 104.348, 7.29327, -53.3894, 0.22 ) }
    dend_49 { pt3dadd( 105.087, 7.49881, -53.9709, 0.22 ) }
    dend_49 { pt3dadd( 105.676, 7.74082, -54.3938, 0.22 ) }
    dend_49 { pt3dadd( 105.997, 7.92989, -54.6202, 0.44 ) }
    dend_49 { pt3dadd( 106.494, 8.34001, -54.9395, 0.3 ) }
    dend_49 { pt3dadd( 106.891, 8.78567, -55.128, 0.66 ) }
    dend_49 { pt3dadd( 107.44, 9.60546, -55.2828, 0.14 ) }
    dend_49 { pt3dadd( 107.727, 10.1089, -55.3343, 0.14 ) }
    dend_49 { pt3dadd( 107.979, 10.5855, -55.3625, 0.36 ) }
    dend_49 { pt3dadd( 108.256, 11.0826, -55.3846, 0.36 ) }
    dend_49 { pt3dadd( 108.733, 11.8783, -55.3931, 0.22 ) }
    dend_49 { pt3dadd( 109.239, 12.6461, -55.3878, 0.3 ) }
    dend_49 { pt3dadd( 109.733, 13.3029, -55.3636, 0.44 ) }
    dend_49 { pt3dadd( 110.165, 13.7959, -55.3313, 0.22 ) }
    dend_49 { pt3dadd( 110.753, 14.3743, -55.2732, 0.14 ) }
    dend_49 { pt3dadd( 111.16, 14.7269, -55.2112, 0.14 ) }
    dend_49 { pt3dadd( 111.374, 14.8824, -55.1633, 0.14 ) }
    dend_49 { pt3dadd( 111.979, 15.2188, -55.0004, 0.14 ) }
    dend_49 { pt3dadd( 112.451, 15.4288, -54.8733, 0.14 ) }
    dend_49 { pt3dadd( 112.988, 15.6364, -54.7346, 0.14 ) }
    dend_49 { pt3dadd( 113.69, 15.8717, -54.5546, 0.14 ) }
    dend_49 { pt3dadd( 114.331, 16.0437, -54.4042, 0.14 ) }
    dend_49 { pt3dadd( 115.098, 16.2417, -54.1916, 0.3 ) }
    dend_49 { pt3dadd( 115.441, 16.3269, -54.0669, 0.3 ) }
    dend_49 { pt3dadd( 115.822, 16.4337, -53.8994, 0.08 ) }
    dend_49 { pt3dadd( 116.116, 16.5439, -53.7232, 0.08 ) }
    dend_49 { pt3dadd( 116.504, 16.7409, -53.4203, 0.36 ) }
    dend_49 { pt3dadd( 117.233, 17.221, -52.7446, 0.14 ) }
    dend_49 { pt3dadd( 117.81, 17.6972, -52.1542, 0.14 ) }
    dend_49 { pt3dadd( 118.057, 17.9388, -51.8657, 0.44 ) }
    dend_49 { pt3dadd( 118.641, 18.5509, -51.0775, 0.3 ) }
    dend_49 { pt3dadd( 119.014, 18.9368, -50.5566, 0.22 ) }
    dend_49 { pt3dadd( 119.31, 19.2358, -50.1419, 0.3 ) }
    dend_49 { pt3dadd( 119.738, 19.6311, -49.59, 0.22 ) }
    dend_49 { pt3dadd( 120.492, 20.2851, -48.6996, 0.14 ) }
    dend_49 { pt3dadd( 121.212, 20.8379, -47.9173, 0.14 ) }
    dend_49 { pt3dadd( 121.729, 21.1885, -47.4226, 0.14 ) }
    dend_49 { pt3dadd( 121.921, 21.3061, -47.2512, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_49 { pt3dadd( 122.201, 21.4594, -47.0276, 0.66 ) }
    dend_49 { pt3dadd( 122.499, 21.6054, -46.8375, 1.04 ) }
    dend_49 { pt3dadd( 123.765, 22.1886, -46.3166, 0.14 ) }
    dend_49 { pt3dadd( 124.162, 22.367, -46.2006, 0.14 ) }
    dend_49 { pt3dadd( 124.705, 22.5844, -46.0647, 0.14 ) }
    dend_49 { pt3dadd( 125.264, 22.7579, -45.9479, 0.22 ) }
    dend_49 { pt3dadd( 125.886, 22.8894, -45.8499, 0.22 ) }
    dend_49 { pt3dadd( 126.635, 22.9711, -45.8054, 0.14 ) }
    dend_49 { pt3dadd( 126.993, 22.9761, -45.8248, 0.44 ) }
    dend_49 { pt3dadd( 127.423, 22.9849, -45.838, 0.44 ) }
    dend_49 { pt3dadd( 128.077, 23.0171, -45.845, 0.14 ) }
    dend_49 { pt3dadd( 128.622, 23.0739, -45.8408, 0.14 ) }
    dend_49 { pt3dadd( 129.293, 23.1979, -45.8041, 0.44 ) }
    dend_49 { pt3dadd( 129.713, 23.3219, -45.7658, 0.44 ) }
    dend_49 { pt3dadd( 130.68, 23.6873, -45.6796, 0.22 ) }
    dend_49 { pt3dadd( 131.197, 23.9179, -45.642, 0.52 ) }
    dend_49 { pt3dadd( 131.763, 24.2139, -45.6043, 0.88 ) }
    dend_49 { pt3dadd( 132.69, 24.7601, -45.5382, 0.14 ) }
    dend_49 { pt3dadd( 133.272, 25.1286, -45.485, 0.14 ) }
    dend_49 { pt3dadd( 133.73, 25.418, -45.4528, 0.14 ) }
    dend_49 { pt3dadd( 134.459, 25.8522, -45.3849, 0.14 ) }
    dend_49 { pt3dadd( 135.082, 26.2123, -45.2466, 0.36 ) }
    dend_49 { pt3dadd( 135.483, 26.4631, -45.1023, 0.36 ) }
    dend_49 { pt3dadd( 136.116, 26.9662, -44.7905, 0.14 ) }
    dend_49 { pt3dadd( 136.642, 27.4829, -44.468, 0.14 ) }
    dend_49 { pt3dadd( 137.243, 28.1953, -43.9884, 0.3 ) }
    dend_49 { pt3dadd( 137.891, 29.0796, -43.3594, 0.52 ) }
    dend_49 { pt3dadd( 138.365, 29.7564, -42.8376, 0.96 ) }
    dend_49 { pt3dadd( 138.962, 30.6177, -42.1256, 0.22 ) }
    dend_49 { pt3dadd( 139.362, 31.2228, -41.5908, 0.22 ) }
    dend_49 { pt3dadd( 139.817, 31.9298, -40.9529, 0.22 ) }
    dend_49 { pt3dadd( 140.107, 32.3752, -40.5742, 0.22 ) }
    dend_49 { pt3dadd( 140.516, 32.9447, -40.0951, 0.3 ) }
    dend_49 { pt3dadd( 140.905, 33.4237, -39.6139, 0.3 ) }
    dend_49 { pt3dadd( 141.286, 33.8534, -39.1364, 0.3 ) }
    dend_49 { pt3dadd( 141.869, 34.4957, -38.4229, 0.22 ) }
    dend_49 { pt3dadd( 142.284, 34.9435, -37.9581, 0.36 ) }
    dend_49 { pt3dadd( 142.896, 35.6223, -37.3063, 0.22 ) }
    dend_49 { pt3dadd( 143.631, 36.4592, -36.5804, 0.22 ) }
    dend_49 { pt3dadd( 143.995, 36.8735, -36.2393, 0.3 ) }
    dend_49 { pt3dadd( 144.357, 37.2654, -35.9148, 0.3 ) }
    dend_49 { pt3dadd( 144.667, 37.5726, -35.6247, 0.3 ) }
    dend_49 { pt3dadd( 145.003, 37.8714, -35.3053, 0.22 ) }
    dend_49 { pt3dadd( 145.716, 38.4477, -34.6376, 0.66 ) }
    dend_49 { pt3dadd( 146.365, 38.922, -34.0741, 0.14 ) }
    dend_49 { pt3dadd( 147.076, 39.3807, -33.475, 0.22 ) }
    dend_49 { pt3dadd( 147.778, 39.788, -32.9226, 0.22 ) }
    dend_49 { pt3dadd( 148.154, 39.9825, -32.659, 0.22 ) }
    dend_49 { pt3dadd( 148.763, 40.2268, -32.3156, 0.3 ) }
    dend_49 { pt3dadd( 149.299, 40.3939, -32.1086, 0.52 ) }
    dend_49 { pt3dadd( 150.055, 40.6164, -31.9761, 0.82 ) }
    dend_49 { pt3dadd( 150.643, 40.8078, -31.9698, 0.3 ) }
    dend_49 { pt3dadd( 151.308, 41.0571, -32.0186, 0.22 ) }
    dend_49 { pt3dadd( 152.139, 41.3924, -32.0993, 0.22 ) }
    dend_49 { pt3dadd( 152.833, 41.6782, -32.1742, 0.22 ) }
    dend_49 { pt3dadd( 153.908, 42.1065, -32.2708, 0.22 ) }
    dend_49 { pt3dadd( 154.718, 42.3974, -32.3103, 0.22 ) }
    dend_49 { pt3dadd( 155.522, 42.6182, -32.3061, 0.22 ) }
    dend_49 { pt3dadd( 156.002, 42.7047, -32.2437, 0.22 ) }
    dend_49 { pt3dadd( 156.442, 42.7445, -32.1406, 0.22 ) }
    dend_49 { pt3dadd( 156.989, 42.7588, -31.966, 0.22 ) }
    dend_49 { pt3dadd( 157.579, 42.7478, -31.7369, 0.22 ) }
    dend_49 { pt3dadd( 158.392, 42.7276, -31.4356, 0.14 ) }
    dend_49 { pt3dadd( 159.394, 42.7794, -31.1023, 0.44 ) }
    dend_49 { pt3dadd( 159.97, 42.881, -30.9347, 0.82 ) }
    dend_49 { pt3dadd( 160.564, 43.0442, -30.7896, 0.22 ) }
    dend_49 { pt3dadd( 160.97, 43.1964, -30.7145, 0.22 ) }
    dend_49 { pt3dadd( 161.648, 43.5058, -30.6321, 0.44 ) }
    dend_49 { pt3dadd( 162.465, 43.9014, -30.6215, 0.14 ) }
    dend_49 { pt3dadd( 163.078, 44.1933, -30.677, 0.14 ) }
    dend_49 { pt3dadd( 163.694, 44.4741, -30.7547, 0.3 ) }
    dend_49 { pt3dadd( 164.522, 44.8488, -30.8824, 0.14 ) }
    dend_49 { pt3dadd( 164.883, 45.0229, -30.945, 0.22 ) }
    dend_49 { pt3dadd( 165.843, 45.5064, -31.1272, 0.08 ) }
    dend_49 { pt3dadd( 166.308, 45.7433, -31.2057, 0.52 ) }
    dend_49 { pt3dadd( 166.512, 45.8606, -31.2351, 0.66 ) }
    dend_49 { pt3dadd( 167.12, 46.2818, -31.2968, 0.22 ) }
    dend_49 { pt3dadd( 167.588, 46.6445, -31.3132, 0.52 ) }
    dend_49 { pt3dadd( 167.917, 46.9121, -31.2983, 0.22 ) }
    dend_49 { pt3dadd( 168.422, 47.3174, -31.2269, 0.44 ) }
    dend_49 { pt3dadd( 168.616, 47.4491, -31.2009, 0.44 ) }
    dend_49 { pt3dadd( 169.084, 47.7057, -31.1436, 0.14 ) }
    dend_49 { pt3dadd( 169.505, 47.8656, -31.1038, 0.14 ) }
    dend_49 { pt3dadd( 169.869, 47.9836, -31.0825, 0.3 ) }
    dend_49 { pt3dadd( 170.523, 48.1898, -31.0638, 0.14 ) }
    dend_49 { pt3dadd( 170.99, 48.3462, -31.0638, 0.14 ) }
    dend_49 { pt3dadd( 171.2, 48.4254, -31.0638, 0.14 ) }
    dend_49 { pt3dadd( 171.959, 48.7567, -31.0397, 0.3 ) }
    dend_49 { pt3dadd( 172.967, 49.2435, -30.987, 0.14 ) }
    dend_49 { pt3dadd( 173.378, 49.4635, -30.9602, 0.22 ) }
    dend_49 { pt3dadd( 174.637, 50.187, -30.8675, 0.14 ) }
    dend_49 { pt3dadd( 175.127, 50.4701, -30.8292, 0.14 ) }
    dend_49 { pt3dadd( 176.008, 50.9493, -30.8209, 0.14 ) }
    dend_49 { pt3dadd( 176.675, 51.2717, -30.8581, 0.14 ) }
    dend_49 { pt3dadd( 177.489, 51.6249, -30.9822, 0.14 ) }
    dend_49 { pt3dadd( 178.018, 51.8428, -31.1042, 0.88 ) }
    dend_49 { pt3dadd( 178.482, 52.021, -31.2434, 0.88 ) }
    dend_49 { pt3dadd( 179.97, 52.4869, -31.7677, 0.22 ) }
    dend_49 { pt3dadd( 181.107, 52.7755, -32.2459, 0.14 ) }
    dend_49 { pt3dadd( 181.93, 52.9445, -32.6059, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_49 { pt3dadd( 182.59, 53.0598, -32.8937, 0.3 ) }
    dend_49 { pt3dadd( 183.395, 53.2143, -33.2165, 0.14 ) }
    dend_49 { pt3dadd( 184.324, 53.4134, -33.5349, 0.14 ) }
    dend_49 { pt3dadd( 184.91, 53.544, -33.674, 0.14 ) }
    dend_49 { pt3dadd( 185.92, 53.7694, -33.8473, 0.3 ) }
    dend_49 { pt3dadd( 186.436, 53.8827, -33.8949, 0.3 ) }
    dend_49 { pt3dadd( 187.463, 54.1451, -33.9478, 0.08 ) }
    dend_49 { pt3dadd( 187.909, 54.2908, -33.949, 0.08 ) }
    dend_49 { pt3dadd( 188.802, 54.6417, -33.9072, 0.14 ) }
    dend_49 { pt3dadd( 189.452, 54.9062, -33.8426, 0.36 ) }
    dend_49 { pt3dadd( 189.796, 55.0454, -33.7956, 1.04 ) }
    dend_49 { pt3dadd( 190.362, 55.2402, -33.7072, 1.26 ) }
    dend_49 { pt3dadd( 190.818, 55.3624, -33.6205, 0.88 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 99.7945, 6.09683, -48.6564, 0.22 ) }
    dend_48 { pt3dadd( 99.0957, 6.37026, -49.8509, 0.22 ) }
    dend_48 { pt3dadd( 98.4529, 6.56641, -50.7898, 0.22 ) }
    dend_48 { pt3dadd( 97.7295, 6.80248, -51.8303, 0.22 ) }
    dend_48 { pt3dadd( 97.4046, 6.93472, -52.3547, 0.22 ) }
    dend_48 { pt3dadd( 97.1662, 7.04052, -52.8054, 0.22 ) }
    dend_48 { pt3dadd( 96.819, 7.19816, -53.644, 0.22 ) }
    dend_48 { pt3dadd( 96.623, 7.27972, -54.207, 0.22 ) }
    dend_48 { pt3dadd( 96.415, 7.34674, -54.8646, 0.22 ) }
    dend_48 { pt3dadd( 96.201, 7.43687, -55.7045, 0.22 ) }
    dend_48 { pt3dadd( 96.0849, 7.52892, -56.4017, 0.22 ) }
    dend_48 { pt3dadd( 96.0068, 7.73308, -57.7716, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -29.7133, 17.0905, 11.6279, 1.04 ) }
    dend_40 { pt3dadd( -30.3428, 17.0377, 12.0233, 1.04 ) }
    dend_40 { pt3dadd( -31.4351, 17.044, 12.7671, 0.74 ) }
    dend_40 { pt3dadd( -32.4729, 17.1579, 13.5641, 0.74 ) }
    dend_40 { pt3dadd( -33.2048, 17.3082, 14.1672, 0.74 ) }
    dend_40 { pt3dadd( -34.0318, 17.5254, 14.9072, 0.58 ) }
    dend_40 { pt3dadd( -34.8967, 17.7705, 15.7392, 0.52 ) }
    dend_40 { pt3dadd( -35.3881, 17.952, 16.2665, 0.52 ) }
    dend_40 { pt3dadd( -36.1007, 18.2589, 17.1154, 0.52 ) }
    dend_40 { pt3dadd( -36.5054, 18.4309, 17.6661, 0.58 ) }
    dend_40 { pt3dadd( -36.9928, 18.5849, 18.4176, 0.96 ) }
    dend_40 { pt3dadd( -37.4581, 18.6608, 19.2423, 1.32 ) }
    dend_40 { pt3dadd( -37.6726, 18.6604, 19.6328, 1.32 ) }
    dend_40 { pt3dadd( -38.5978, 18.5379, 21.2122, 0.36 ) }
    dend_40 { pt3dadd( -39.1203, 18.4153, 22.0303, 0.36 ) }
    dend_40 { pt3dadd( -39.6967, 18.2577, 22.8551, 0.36 ) }
    dend_40 { pt3dadd( -40.2221, 18.121, 23.4836, 0.36 ) }
    dend_40 { pt3dadd( -40.8757, 17.9827, 24.108, 0.44 ) }
    dend_40 { pt3dadd( -41.4211, 17.902, 24.5427, 0.66 ) }
    dend_40 { pt3dadd( -42.2728, 17.8469, 25.0672, 0.66 ) }
    dend_40 { pt3dadd( -43.0472, 17.8906, 25.5012, 0.88 ) }
    dend_40 { pt3dadd( -44.0677, 18.0921, 26.1095, 1.18 ) }
    dend_40 { pt3dadd( -44.7762, 18.319, 26.6349, 0.52 ) }
    dend_40 { pt3dadd( -45.7025, 18.7452, 27.5329, 0.82 ) }
    dend_40 { pt3dadd( -46.2586, 19.0726, 28.1855, 1.18 ) }
    dend_40 { pt3dadd( -47.063, 19.6211, 29.305, 1.18 ) }
    dend_40 { pt3dadd( -47.9715, 20.2666, 30.7227, 1.04 ) }
    dend_40 { pt3dadd( -48.8435, 20.8847, 32.2145, 1.04 ) }
    dend_40 { pt3dadd( -49.5569, 21.389, 33.4725, 0.82 ) }
    dend_40 { pt3dadd( -50.2402, 21.8663, 34.6863, 0.66 ) }
    dend_40 { pt3dadd( -50.9188, 22.3344, 35.9131, 0.66 ) }
    dend_40 { pt3dadd( -51.3427, 22.6477, 36.682, 0.66 ) }
    dend_40 { pt3dadd( -51.6688, 22.9189, 37.2639, 0.66 ) }
    dend_40 { pt3dadd( -52.0285, 23.2733, 37.8911, 0.82 ) }
    dend_40 { pt3dadd( -52.5727, 23.9348, 38.8868, 0.96 ) }
    dend_40 { pt3dadd( -53.026, 24.6429, 39.7354, 0.96 ) }
    dend_40 { pt3dadd( -53.3984, 25.3919, 40.4834, 0.74 ) }
    dend_40 { pt3dadd( -53.8431, 26.4097, 41.3951, 0.66 ) }
    dend_40 { pt3dadd( -54.1973, 27.2121, 42.1461, 0.58 ) }
    dend_40 { pt3dadd( -54.471, 27.825, 42.8248, 0.58 ) }
    dend_40 { pt3dadd( -54.8502, 28.6047, 43.8689, 0.58 ) }
    dend_40 { pt3dadd( -55.2929, 29.3476, 45.3127, 0.58 ) }
    dend_40 { pt3dadd( -55.5287, 29.5926, 46.1903, 0.58 ) }
    dend_40 { pt3dadd( -55.9263, 29.7963, 47.7788, 0.58 ) }
    dend_40 { pt3dadd( -56.2645, 29.8637, 49.252, 0.58 ) }
    dend_40 { pt3dadd( -56.3931, 29.8817, 49.8586, 0.58 ) }
    dend_40 { pt3dadd( -56.5616, 29.9292, 50.8351, 0.58 ) }
    dend_40 { pt3dadd( -56.7038, 30.0303, 51.9672, 0.58 ) }
    dend_40 { pt3dadd( -56.8126, 30.239, 53.344, 0.58 ) }
    dend_40 { pt3dadd( -56.9585, 30.8451, 55.7326, 0.58 ) }
    dend_40 { pt3dadd( -57.0004, 31.1117, 56.4786, 0.58 ) }
    dend_40 { pt3dadd( -57.052, 31.5459, 57.4933, 0.58 ) }
    dend_40 { pt3dadd( -57.1155, 32.0709, 58.5386, 0.58 ) }
    dend_40 { pt3dadd( -57.1957, 32.7345, 59.7232, 0.58 ) }
    dend_40 { pt3dadd( -57.2729, 33.5875, 61.0985, 0.58 ) }
    dend_40 { pt3dadd( -57.3895, 34.6223, 62.6187, 0.58 ) }
    dend_40 { pt3dadd( -57.5252, 35.3672, 63.7883, 0.58 ) }
    dend_40 { pt3dadd( -57.6515, 35.7716, 64.4781, 0.44 ) }
    dend_40 { pt3dadd( -57.9061, 36.3487, 65.5248, 0.74 ) }
    dend_40 { pt3dadd( -58.0614, 36.6362, 66.1081, 0.96 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 85/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -29.7133, 17.0905, 11.6279, 0.58 ) }
    dend_37 { pt3dadd( -30.1884, 18.0613, 12.9607, 0.58 ) }
    dend_37 { pt3dadd( -30.7129, 18.9593, 14.0656, 0.58 ) }
    dend_37 { pt3dadd( -31.0312, 19.5061, 14.6467, 0.58 ) }
    dend_37 { pt3dadd( -31.2231, 19.8482, 14.9526, 0.58 ) }
    dend_37 { pt3dadd( -31.5716, 20.5571, 15.4896, 0.52 ) }
    dend_37 { pt3dadd( -31.7683, 21.0275, 15.8262, 0.52 ) }
    dend_37 { pt3dadd( -31.9831, 21.6359, 16.1369, 0.36 ) }
    dend_37 { pt3dadd( -32.1763, 22.2671, 16.3663, 0.58 ) }
    dend_37 { pt3dadd( -32.3212, 22.9566, 16.6152, 0.58 ) }
    dend_37 { pt3dadd( -32.389, 23.7003, 16.9433, 0.66 ) }
    dend_37 { pt3dadd( -32.3773, 24.6205, 17.413, 0.44 ) }
    dend_37 { pt3dadd( -32.3372, 25.1781, 17.7494, 0.44 ) }
    dend_37 { pt3dadd( -32.3041, 25.6238, 18.0345, 0.74 ) }
    dend_37 { pt3dadd( -32.3041, 26.5896, 18.7794, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_37 { pt3dadd( -32.3128, 27.5438, 19.5572, 0.52 ) }
    dend_37 { pt3dadd( -32.3363, 28.1619, 20.0771, 0.74 ) }
    dend_37 { pt3dadd( -32.3909, 29.2177, 20.9612, 0.74 ) }
    dend_37 { pt3dadd( -32.4253, 29.9479, 21.6118, 0.82 ) }
    dend_37 { pt3dadd( -32.5789, 31.6638, 23.2146, 0.96 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 5/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -34.867, 6.44494, 0.716106, 0.3 ) }
    dend_35 { pt3dadd( -35.4362, 6.15745, 0.272214, 0.3 ) }
    dend_35 { pt3dadd( -36.472, 5.56897, -0.748971, 0.3 ) }
    dend_35 { pt3dadd( -36.8688, 5.30913, -1.21562, 0.44 ) }
    dend_35 { pt3dadd( -37.3442, 4.96249, -1.82936, 0.66 ) }
    dend_35 { pt3dadd( -37.8559, 4.57456, -2.52828, 0.36 ) }
    dend_35 { pt3dadd( -38.463, 4.09836, -3.35562, 0.36 ) }
    dend_35 { pt3dadd( -39.001, 3.6416, -4.08715, 0.36 ) }
    dend_35 { pt3dadd( -39.3189, 3.34279, -4.48164, 0.36 ) }
    dend_35 { pt3dadd( -39.6181, 3.07689, -4.85142, 0.52 ) }
    dend_35 { pt3dadd( -40.0887, 2.72595, -5.41303, 0.52 ) }
    dend_35 { pt3dadd( -40.5135, 2.47007, -5.83514, 0.52 ) }
    dend_35 { pt3dadd( -41.4478, 2.06677, -6.48881, 0.22 ) }
    dend_35 { pt3dadd( -42.1538, 1.88272, -6.83786, 0.14 ) }
    dend_35 { pt3dadd( -43.3991, 1.73129, -7.34323, 0.14 ) }
    dend_35 { pt3dadd( -44.2336, 1.69958, -7.67361, 0.14 ) }
    dend_35 { pt3dadd( -45.3893, 1.70408, -8.11606, 0.36 ) }
    dend_35 { pt3dadd( -46.0064, 1.7157, -8.35263, 0.74 ) }
    dend_35 { pt3dadd( -46.8628, 1.70746, -8.71438, 0.36 ) }
    dend_35 { pt3dadd( -47.7256, 1.60696, -9.06005, 0.36 ) }
    dend_35 { pt3dadd( -48.6403, 1.39374, -9.43582, 0.66 ) }
    dend_35 { pt3dadd( -49.2829, 1.22178, -9.72775, 0.66 ) }
    dend_35 { pt3dadd( -49.8779, 1.05312, -10.0429, 0.66 ) }
    dend_35 { pt3dadd( -50.7232, 0.778832, -10.476, 0.52 ) }
    dend_35 { pt3dadd( -51.3939, 0.529513, -10.7877, 0.52 ) }
    dend_35 { pt3dadd( -52.2383, 0.221259, -11.0671, 0.14 ) }
    dend_35 { pt3dadd( -53.0086, -0.0376605, -11.2367, 0.14 ) }
    dend_35 { pt3dadd( -53.2734, -0.126646, -11.2801, 0.14 ) }
    dend_35 { pt3dadd( -53.7831, -0.329562, -11.3287, 0.3 ) }
    dend_35 { pt3dadd( -54.2174, -0.534679, -11.324, 0.66 ) }
    dend_35 { pt3dadd( -54.999, -0.954309, -11.2723, 0.14 ) }
    dend_35 { pt3dadd( -55.3081, -1.13558, -11.2313, 0.14 ) }
    dend_35 { pt3dadd( -55.6689, -1.35805, -11.1852, 0.3 ) }
    dend_35 { pt3dadd( -56.3325, -1.7451, -11.1114, 0.52 ) }
    dend_35 { pt3dadd( -56.8702, -2.05731, -11.0664, 0.14 ) }
    dend_35 { pt3dadd( -57.2705, -2.31613, -11.0579, 0.14 ) }
    dend_35 { pt3dadd( -57.8111, -2.71907, -11.0894, 0.14 ) }
    dend_35 { pt3dadd( -58.0666, -2.93802, -11.1257, 0.52 ) }
    dend_35 { pt3dadd( -58.4075, -3.26495, -11.217, 0.74 ) }
    dend_35 { pt3dadd( -58.9851, -3.90647, -11.4476, 0.14 ) }
    dend_35 { pt3dadd( -59.4986, -4.56896, -11.7014, 0.14 ) }
    dend_35 { pt3dadd( -59.6115, -4.71895, -11.7661, 0.14 ) }
    dend_35 { pt3dadd( -59.8986, -5.08901, -11.9411, 0.36 ) }
    dend_35 { pt3dadd( -60.2444, -5.46701, -12.1429, 0.52 ) }
    dend_35 { pt3dadd( -60.5339, -5.72399, -12.2957, 0.52 ) }
    dend_35 { pt3dadd( -60.9468, -6.00099, -12.4813, 0.14 ) }
    dend_35 { pt3dadd( -61.6245, -6.33292, -12.707, 0.14 ) }
    dend_35 { pt3dadd( -61.9788, -6.48621, -12.8067, 0.14 ) }
    dend_35 { pt3dadd( -62.4439, -6.68014, -12.9206, 0.88 ) }
    dend_35 { pt3dadd( -62.7181, -6.80183, -12.9736, 1.32 ) }
    dend_35 { pt3dadd( -63.4639, -7.16444, -13.0902, 0.3 ) }
    dend_35 { pt3dadd( -64.2467, -7.62603, -13.1828, 0.22 ) }
    dend_35 { pt3dadd( -64.9267, -8.1267, -13.2922, 0.22 ) }
    dend_35 { pt3dadd( -65.3281, -8.49151, -13.3853, 0.22 ) }
    dend_35 { pt3dadd( -66.0283, -9.23931, -13.5949, 0.22 ) }
    dend_35 { pt3dadd( -66.3209, -9.58678, -13.6971, 0.36 ) }
    dend_35 { pt3dadd( -66.7647, -10.1565, -13.8685, 0.14 ) }
    dend_35 { pt3dadd( -67.5836, -11.1388, -14.1636, 0.14 ) }
    dend_35 { pt3dadd( -68.0658, -11.5897, -14.3574, 0.14 ) }
    dend_35 { pt3dadd( -68.4055, -11.8573, -14.521, 0.14 ) }
    dend_35 { pt3dadd( -68.7362, -12.0908, -14.6939, 0.36 ) }
    dend_35 { pt3dadd( -69.1896, -12.3822, -14.9503, 0.52 ) }
    dend_35 { pt3dadd( -70.0371, -12.9122, -15.4503, 0.22 ) }
    dend_35 { pt3dadd( -71.0532, -13.6082, -16.0571, 0.3 ) }
    dend_35 { pt3dadd( -71.6888, -14.1072, -16.5031, 0.3 ) }
    dend_35 { pt3dadd( -71.9855, -14.3839, -16.7405, 0.52 ) }
    dend_35 { pt3dadd( -72.551, -15.0542, -17.2852, 0.66 ) }
    dend_35 { pt3dadd( -72.7433, -15.359, -17.5195, 0.66 ) }
    dend_35 { pt3dadd( -72.9018, -15.717, -17.7739, 0.66 ) }
    dend_35 { pt3dadd( -73.0427, -16.1455, -18.0538, 0.66 ) }
    dend_35 { pt3dadd( -73.1211, -16.4414, -18.244, 0.66 ) }
    dend_35 { pt3dadd( -73.3366, -17.6003, -18.996, 0.22 ) }
    dend_35 { pt3dadd( -73.4432, -18.4004, -19.506, 0.22 ) }
    dend_35 { pt3dadd( -73.5425, -19.2989, -20.1005, 0.14 ) }
    dend_35 { pt3dadd( -73.6274, -20.2109, -20.7144, 0.14 ) }
    dend_35 { pt3dadd( -73.685, -20.9537, -21.2023, 0.14 ) }
    dend_35 { pt3dadd( -73.7199, -21.488, -21.5367, 0.14 ) }
    dend_35 { pt3dadd( -73.7403, -21.9387, -21.7757, 0.52 ) }
    dend_35 { pt3dadd( -73.7571, -22.3933, -21.9656, 0.52 ) }
    dend_35 { pt3dadd( -73.7893, -23.1681, -22.1836, 0.22 ) }
    dend_35 { pt3dadd( -73.8342, -23.8848, -22.348, 0.52 ) }
    dend_35 { pt3dadd( -73.8567, -24.2149, -22.4273, 0.52 ) }
    dend_35 { pt3dadd( -73.9246, -24.9979, -22.6178, 0.22 ) }
    dend_35 { pt3dadd( -74.0264, -25.8988, -22.6584, 0.44 ) }
    dend_35 { pt3dadd( -74.159, -26.9715, -22.5289, 0.14 ) }
    dend_35 { pt3dadd( -74.2825, -28.1193, -22.2643, 0.14 ) }
    dend_35 { pt3dadd( -74.3333, -28.7217, -22.0631, 0.52 ) }
    dend_35 { pt3dadd( -74.3552, -29.2182, -21.8702, 0.66 ) }
    dend_35 { pt3dadd( -74.3405, -32.251, -20.5996, 0.14 ) }
    dend_35 { pt3dadd( -74.2747, -33.1174, -20.2016, 0.14 ) }
    dend_35 { pt3dadd( -74.0045, -34.3061, -19.6657, 0.14 ) }
    dend_35 { pt3dadd( -73.6563, -35.2063, -19.3047, 0.14 ) }
    dend_35 { pt3dadd( -73.232, -36.0394, -19.0108, 0.3 ) }
    dend_35 { pt3dadd( -72.8975, -36.563, -18.8519, 0.22 ) }
    dend_35 { pt3dadd( -72.5178, -37.046, -18.7332, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_35 { pt3dadd( -71.3599, -38.3818, -18.3629, 0.14 ) }
    dend_35 { pt3dadd( -70.5772, -39.2004, -18.1111, 0.14 ) }
    dend_35 { pt3dadd( -69.7685, -40.0222, -17.851, 0.52 ) }
    dend_35 { pt3dadd( -69.0259, -40.7855, -17.4949, 1.1 ) }
    dend_35 { pt3dadd( -68.4218, -41.4535, -17.0381, 1.1 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -34.867, 6.44494, 0.716106, 0.22 ) }
    dend_32 { pt3dadd( -35.1011, 7.09369, 0.441047, 0.22 ) }
    dend_32 { pt3dadd( -35.5872, 8.07703, 0.0809426, 0.22 ) }
    dend_32 { pt3dadd( -35.875, 8.58187, -0.151384, 0.22 ) }
    dend_32 { pt3dadd( -36.0928, 8.91472, -0.361927, 0.36 ) }
    dend_32 { pt3dadd( -36.4151, 9.34546, -0.702331, 0.96 ) }
    dend_32 { pt3dadd( -36.8134, 9.80918, -1.14427, 0.74 ) }
    dend_32 { pt3dadd( -37.3725, 10.3271, -1.79321, 0.22 ) }
    dend_32 { pt3dadd( -37.8958, 10.685, -2.39471, 0.22 ) }
    dend_32 { pt3dadd( -38.5096, 11.0193, -3.16764, 0.22 ) }
    dend_32 { pt3dadd( -38.8464, 11.1887, -3.6422, 0.66 ) }
    dend_32 { pt3dadd( -39.1361, 11.3406, -4.11243, 0.82 ) }
    dend_32 { pt3dadd( -39.4085, 11.4993, -4.60759, 0.52 ) }
    dend_32 { pt3dadd( -39.6912, 11.7179, -5.11946, 0.36 ) }
    dend_32 { pt3dadd( -39.8806, 11.9265, -5.41115, 0.36 ) }
    dend_32 { pt3dadd( -40.1439, 12.2776, -5.73801, 0.36 ) }
    dend_32 { pt3dadd( -40.4192, 12.6442, -6.00881, 0.58 ) }
    dend_32 { pt3dadd( -40.7395, 13.036, -6.27567, 0.58 ) }
    dend_32 { pt3dadd( -41.2283, 13.5576, -6.60184, 0.66 ) }
    dend_32 { pt3dadd( -42.021, 14.2971, -7.03355, 0.82 ) }
    dend_32 { pt3dadd( -42.4833, 14.6687, -7.23997, 0.82 ) }
    dend_32 { pt3dadd( -42.9742, 15.0081, -7.44098, 0.82 ) }
    dend_32 { pt3dadd( -43.5312, 15.3393, -7.69337, 0.82 ) }
    dend_32 { pt3dadd( -44.2008, 15.6714, -8.04084, 0.66 ) }
    dend_32 { pt3dadd( -44.6586, 15.8661, -8.29262, 0.66 ) }
    dend_32 { pt3dadd( -45.4518, 16.1831, -8.70879, 0.22 ) }
    dend_32 { pt3dadd( -46.1481, 16.462, -9.07539, 0.3 ) }
    dend_32 { pt3dadd( -47.2666, 16.9272, -9.59447, 0.44 ) }
    dend_32 { pt3dadd( -48.3894, 17.4309, -10.0022, 0.58 ) }
    dend_32 { pt3dadd( -49.1378, 17.7826, -10.1808, 0.14 ) }
    dend_32 { pt3dadd( -49.6393, 18.0397, -10.2272, 0.44 ) }
    dend_32 { pt3dadd( -50.0718, 18.2857, -10.1902, 0.96 ) }
    dend_32 { pt3dadd( -50.9565, 18.8317, -9.96336, 0.96 ) }
    dend_32 { pt3dadd( -51.7406, 19.3283, -9.70292, 0.3 ) }
    dend_32 { pt3dadd( -52.5544, 19.8366, -9.48595, 0.22 ) }
    dend_32 { pt3dadd( -52.9434, 20.0464, -9.47576, 0.22 ) }
    dend_32 { pt3dadd( -53.577, 20.3207, -9.61231, 0.58 ) }
    dend_32 { pt3dadd( -53.9368, 20.4553, -9.75006, 0.74 ) }
    dend_32 { pt3dadd( -54.8256, 20.7481, -10.1992, 0.58 ) }
    dend_32 { pt3dadd( -55.8951, 21.0492, -10.8555, 0.36 ) }
    dend_32 { pt3dadd( -56.9846, 21.3281, -11.6672, 0.3 ) }
    dend_32 { pt3dadd( -57.6045, 21.4746, -12.1703, 0.52 ) }
    dend_32 { pt3dadd( -58.1199, 21.5922, -12.6088, 0.66 ) }
    dend_32 { pt3dadd( -58.9454, 21.7883, -13.3184, 0.3 ) }
    dend_32 { pt3dadd( -59.9396, 22.0461, -14.1791, 0.22 ) }
    dend_32 { pt3dadd( -60.6558, 22.2835, -14.9139, 0.22 ) }
    dend_32 { pt3dadd( -60.8702, 22.3935, -15.2394, 0.22 ) }
    dend_32 { pt3dadd( -61.0639, 22.5695, -15.7124, 0.58 ) }
    dend_32 { pt3dadd( -61.1719, 22.7413, -16.1616, 1.18 ) }
    dend_32 { pt3dadd( -61.2426, 22.9665, -16.7068, 1.18 ) }
    dend_32 { pt3dadd( -61.3615, 23.7348, -18.4083, 0.52 ) }
    dend_32 { pt3dadd( -61.4445, 24.3404, -19.7161, 0.52 ) }
    dend_32 { pt3dadd( -61.4911, 24.6384, -20.3898, 0.44 ) }
    dend_32 { pt3dadd( -61.5345, 24.8605, -20.9248, 0.44 ) }
    dend_32 { pt3dadd( -61.6566, 25.1436, -21.6821, 0.22 ) }
    dend_32 { pt3dadd( -61.8661, 25.3292, -22.2577, 0.22 ) }
    dend_32 { pt3dadd( -62.1011, 25.4284, -22.6011, 0.44 ) }
    dend_32 { pt3dadd( -62.3909, 25.5477, -22.9663, 0.44 ) }
    dend_32 { pt3dadd( -62.4727, 25.5841, -23.0786, 0.44 ) }
    dend_32 { pt3dadd( -62.8689, 25.8483, -23.7484, 0.22 ) }
    dend_32 { pt3dadd( -63.3567, 26.297, -24.8244, 0.52 ) }
    dend_32 { pt3dadd( -63.7577, 26.7288, -25.8568, 0.52 ) }
    dend_32 { pt3dadd( -63.9827, 27.0009, -26.5217, 0.96 ) }
    dend_32 { pt3dadd( -64.1573, 27.2074, -27.0523, 0.96 ) }
    dend_32 { pt3dadd( -64.5124, 27.6032, -28.1367, 0.36 ) }
    dend_32 { pt3dadd( -64.836, 27.9122, -29.1038, 0.36 ) }
    dend_32 { pt3dadd( -65.2317, 28.1683, -30.2331, 0.36 ) }
    dend_32 { pt3dadd( -65.6226, 28.2677, -31.2895, 0.36 ) }
    dend_32 { pt3dadd( -65.8878, 28.2619, -31.9944, 0.74 ) }
    dend_32 { pt3dadd( -66.0948, 28.2129, -32.5232, 1.1 ) }
    dend_32 { pt3dadd( -66.3532, 28.0975, -33.1628, 0.52 ) }
    dend_32 { pt3dadd( -66.9892, 27.7459, -34.6953, 0.52 ) }
    dend_32 { pt3dadd( -67.4133, 27.4789, -35.7334, 0.22 ) }
    dend_32 { pt3dadd( -67.8875, 27.2086, -36.8958, 0.22 ) }
    dend_32 { pt3dadd( -68.0967, 27.1355, -37.3863, 0.66 ) }
    dend_32 { pt3dadd( -68.1722, 27.1352, -37.5277, 0.66 ) }
    dend_32 { pt3dadd( -68.5295, 27.3017, -37.955, 0.22 ) }
    dend_32 { pt3dadd( -68.9697, 27.6707, -38.1505, 0.22 ) }
    dend_32 { pt3dadd( -69.6255, 28.3083, -38.3401, 0.22 ) }
    dend_32 { pt3dadd( -70.0461, 28.753, -38.4112, 0.58 ) }
    dend_32 { pt3dadd( -70.5613, 29.3361, -38.4913, 0.58 ) }
    dend_32 { pt3dadd( -71.1889, 30.0438, -38.5674, 0.22 ) }
    dend_32 { pt3dadd( -72.1736, 31.1149, -38.625, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -13.3043, 7.60773, -9.82919, 0.44 ) }
    dend_27 { pt3dadd( -13.987, 8.09373, -10.1303, 0.44 ) }
    dend_27 { pt3dadd( -14.5332, 8.43878, -10.5351, 0.66 ) }
    dend_27 { pt3dadd( -15.1368, 8.77964, -11.1396, 0.66 ) }
    dend_27 { pt3dadd( -15.6393, 9.05158, -11.6925, 0.36 ) }
    dend_27 { pt3dadd( -16.5512, 9.59664, -12.7813, 0.36 ) }
    dend_27 { pt3dadd( -17.2457, 10.0731, -13.6565, 0.36 ) }
    dend_27 { pt3dadd( -17.9361, 10.6051, -14.6467, 0.52 ) }
    dend_27 { pt3dadd( -18.5695, 11.15, -15.6265, 0.74 ) }
    dend_27 { pt3dadd( -18.793, 11.3479, -15.9633, 1.48 ) }
    dend_27 { pt3dadd( -19.2658, 11.7983, -16.6401, 0.82 ) }
    dend_27 { pt3dadd( -19.8818, 12.4155, -17.409, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_27 { pt3dadd( -20.2934, 12.8179, -17.8188, 0.82 ) }
    dend_27 { pt3dadd( -20.666, 13.1687, -18.1104, 0.82 ) }
    dend_27 { pt3dadd( -21.6467, 14.0655, -18.8043, 0.36 ) }
    dend_27 { pt3dadd( -22.2174, 14.5985, -19.1984, 0.74 ) }
    dend_27 { pt3dadd( -22.9264, 15.3436, -19.7487, 1.04 ) }
    dend_27 { pt3dadd( -23.4375, 16.0341, -20.2385, 1.04 ) }
    dend_27 { pt3dadd( -24.0273, 17.2227, -21.0721, 0.74 ) }
    dend_27 { pt3dadd( -24.2958, 18.237, -21.7705, 0.74 ) }
    dend_27 { pt3dadd( -24.3668, 19.1184, -22.318, 0.74 ) }
    dend_27 { pt3dadd( -24.3403, 20.7491, -23.2131, 0.66 ) }
    dend_27 { pt3dadd( -24.2229, 21.8939, -23.7599, 0.66 ) }
    dend_27 { pt3dadd( -24.0303, 23.084, -24.3988, 0.88 ) }
    dend_27 { pt3dadd( -23.7559, 24.2166, -25.0139, 0.52 ) }
    dend_27 { pt3dadd( -23.5758, 24.882, -25.3695, 0.52 ) }
    dend_27 { pt3dadd( -23.3846, 25.6889, -25.8278, 0.88 ) }
    dend_27 { pt3dadd( -23.3258, 26.3528, -26.1781, 0.88 ) }
    dend_27 { pt3dadd( -23.5157, 28.957, -27.6894, 0.74 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -13.3043, 7.60773, -9.82919, 0.36 ) }
    dend_26 { pt3dadd( -13.9519, 7.11483, -10.5937, 0.36 ) }
    dend_26 { pt3dadd( -14.8751, 6.26032, -11.9109, 0.36 ) }
    dend_26 { pt3dadd( -15.1937, 5.91013, -12.4913, 0.36 ) }
    dend_26 { pt3dadd( -15.4511, 5.57271, -13.1259, 0.36 ) }
    dend_26 { pt3dadd( -15.653, 5.24721, -13.8128, 0.36 ) }
    dend_26 { pt3dadd( -15.7617, 5.04937, -14.3532, 0.36 ) }
    dend_26 { pt3dadd( -15.7541, 4.97303, -14.7905, 0.36 ) }
    dend_26 { pt3dadd( -15.6576, 4.93057, -15.4983, 0.36 ) }
    dend_26 { pt3dadd( -15.5732, 4.9271, -16.1654, 0.36 ) }
    dend_26 { pt3dadd( -15.5506, 4.9315, -16.4916, 0.36 ) }
    dend_26 { pt3dadd( -15.5144, 4.92915, -17.6288, 0.36 ) }
    dend_26 { pt3dadd( -15.5259, 4.88158, -18.5456, 0.36 ) }
    dend_26 { pt3dadd( -15.5462, 4.82703, -19.1905, 0.36 ) }
    dend_26 { pt3dadd( -15.6128, 4.71589, -20.4455, 0.36 ) }
    dend_26 { pt3dadd( -15.7554, 4.50789, -22.4965, 0.36 ) }
    dend_26 { pt3dadd( -15.8818, 4.31857, -24.1534, 0.36 ) }
    dend_26 { pt3dadd( -16.0671, 4.01413, -26.7008, 0.36 ) }
    dend_26 { pt3dadd( -16.2348, 3.6944, -29.4911, 0.36 ) }
    dend_26 { pt3dadd( -16.3549, 3.34267, -32.713, 0.52 ) }
    dend_26 { pt3dadd( -16.3857, 3.07979, -35.3265, 0.52 ) }
    dend_26 { pt3dadd( -16.3738, 3.04879, -35.6703, 0.52 ) }
    dend_26 { pt3dadd( -16.1618, 2.89321, -37.784, 0.52 ) }
    dend_26 { pt3dadd( -15.9989, 2.84868, -38.5439, 0.52 ) }
    dend_26 { pt3dadd( -15.6024, 2.76231, -39.7218, 0.36 ) }
    dend_26 { pt3dadd( -14.7825, 2.58561, -41.6133, 0.36 ) }
    dend_26 { pt3dadd( -14.0477, 2.4321, -43.2268, 0.58 ) }
    dend_26 { pt3dadd( -13.5223, 2.29298, -44.5865, 0.58 ) }
    dend_26 { pt3dadd( -13.0718, 2.10849, -46.1556, 0.22 ) }
    dend_26 { pt3dadd( -12.9073, 1.96593, -47.2192, 0.3 ) }
    dend_26 { pt3dadd( -12.8084, 1.78134, -48.5062, 0.3 ) }
    dend_26 { pt3dadd( -12.8194, 1.64189, -49.3204, 0.3 ) }
    dend_26 { pt3dadd( -13.0697, 1.28962, -51.1476, 0.3 ) }
    dend_26 { pt3dadd( -13.4947, 0.982021, -52.7484, 0.3 ) }
    dend_26 { pt3dadd( -13.8153, 0.851856, -53.5578, 0.3 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 52/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.3664, 10.7778, 0.0900408, 0.44 ) }
    dend_24 { pt3dadd( -14.9687, 11.3961, -0.745421, 0.44 ) }
    dend_24 { pt3dadd( -14.6358, 11.9136, -1.44468, 0.44 ) }
    dend_24 { pt3dadd( -14.3459, 12.3644, -2.05369, 0.36 ) }
    dend_24 { pt3dadd( -13.9097, 13.0424, -2.96985, 0.22 ) }
    dend_24 { pt3dadd( -13.0055, 14.448, -4.86913, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 58/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.3664, 10.7778, 0.0900408, 0.58 ) }
    dend_23 { pt3dadd( -15.6701, 11.5914, 0.169414, 0.58 ) }
    dend_23 { pt3dadd( -16.1043, 12.6348, 0.284241, 0.66 ) }
    dend_23 { pt3dadd( -16.4378, 13.3601, 0.375753, 0.66 ) }
    dend_23 { pt3dadd( -16.8073, 14.1533, 0.538654, 0.66 ) }
    dend_23 { pt3dadd( -17.1615, 14.9706, 0.741412, 0.44 ) }
    dend_23 { pt3dadd( -17.3969, 15.5691, 0.91476, 0.44 ) }
    dend_23 { pt3dadd( -17.5669, 16.1729, 1.11827, 0.44 ) }
    dend_23 { pt3dadd( -17.7201, 16.9576, 1.40529, 0.44 ) }
    dend_23 { pt3dadd( -17.9179, 17.9758, 1.87587, 0.44 ) }
    dend_23 { pt3dadd( -18.0886, 18.6724, 2.24512, 0.44 ) }
    dend_23 { pt3dadd( -18.2378, 19.168, 2.51392, 0.44 ) }
    dend_23 { pt3dadd( -18.5586, 20.0063, 3.03511, 0.58 ) }
    dend_23 { pt3dadd( -18.7466, 20.4375, 3.31272, 0.82 ) }
    dend_23 { pt3dadd( -19.359, 21.6148, 4.08499, 0.96 ) }
    dend_23 { pt3dadd( -19.7877, 22.3579, 4.59306, 0.82 ) }
    dend_23 { pt3dadd( -20.1781, 23.0497, 5.08122, 0.44 ) }
    dend_23 { pt3dadd( -20.829, 24.375, 5.97813, 0.44 ) }
    dend_23 { pt3dadd( -20.9961, 24.786, 6.25003, 0.44 ) }
    dend_23 { pt3dadd( -21.1005, 25.2337, 6.50456, 0.66 ) }
    dend_23 { pt3dadd( -21.1802, 26.4137, 7.0406, 0.44 ) }
    dend_23 { pt3dadd( -21.1408, 27.3559, 7.40425, 0.66 ) }
    dend_23 { pt3dadd( -21.0391, 28.189, 7.71416, 0.66 ) }
    dend_23 { pt3dadd( -20.9504, 28.6266, 7.85621, 0.66 ) }
    dend_23 { pt3dadd( -20.7306, 29.5188, 8.17271, 0.52 ) }
    dend_23 { pt3dadd( -20.589, 30.1683, 8.45292, 0.52 ) }
    dend_23 { pt3dadd( -20.4509, 31.0883, 8.96579, 0.3 ) }
    dend_23 { pt3dadd( -20.3711, 32.1688, 9.69142, 0.3 ) }
    dend_23 { pt3dadd( -20.3796, 32.7717, 10.1765, 0.52 ) }
    dend_23 { pt3dadd( -20.4244, 33.2989, 10.6731, 0.52 ) }
    dend_23 { pt3dadd( -20.6139, 34.5273, 11.991, 0.52 ) }
    dend_23 { pt3dadd( -20.7948, 35.4457, 13.0417, 0.52 ) }
    dend_23 { pt3dadd( -20.9719, 36.1734, 13.9499, 0.82 ) }
    dend_23 { pt3dadd( -21.3161, 37.56, 15.6455, 0.44 ) }
    dend_23 { pt3dadd( -21.5232, 38.4429, 16.6964, 0.44 ) }
    dend_23 { pt3dadd( -21.6159, 39.0197, 17.3693, 0.44 ) }
    dend_23 { pt3dadd( -21.6338, 39.5713, 17.9925, 0.58 ) }
    dend_23 { pt3dadd( -21.5815, 40.6263, 19.1734, 0.58 ) }
    dend_23 { pt3dadd( -21.4836, 41.4398, 20.08, 0.36 ) }
    dend_23 { pt3dadd( -21.3543, 42.0872, 20.7153, 0.36 ) }
    dend_23 { pt3dadd( -21.1071, 43.0708, 21.5918, 0.36 ) }
    dend_23 { pt3dadd( -20.9375, 43.6387, 22.0614, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_23 { pt3dadd( -20.7704, 44.1282, 22.44, 0.96 ) }
    dend_23 { pt3dadd( -20.5659, 44.5983, 22.7803, 0.96 ) }
    dend_23 { pt3dadd( -20.1455, 45.3355, 23.4006, 0.22 ) }
    dend_23 { pt3dadd( -19.7597, 45.8436, 23.9005, 0.22 ) }
    dend_23 { pt3dadd( -19.4109, 46.2178, 24.3419, 0.58 ) }
    dend_23 { pt3dadd( -19.2127, 46.3946, 24.6275, 0.58 ) }
    dend_23 { pt3dadd( -18.7707, 46.7449, 25.364, 0.3 ) }
    dend_23 { pt3dadd( -18.3865, 47.0506, 26.119, 0.3 ) }
    dend_23 { pt3dadd( -18.0838, 47.3199, 26.8889, 0.3 ) }
    dend_23 { pt3dadd( -17.7658, 47.6808, 27.9738, 0.3 ) }
    dend_23 { pt3dadd( -17.5428, 48.0385, 29.0543, 0.3 ) }
    dend_23 { pt3dadd( -17.4326, 48.2752, 29.7293, 0.3 ) }
    dend_23 { pt3dadd( -17.3403, 48.5511, 30.4081, 0.66 ) }
    dend_23 { pt3dadd( -17.2236, 49.0005, 31.3312, 0.66 ) }
    dend_23 { pt3dadd( -17.1408, 49.4237, 32.0947, 0.66 ) }
    dend_23 { pt3dadd( -17.0455, 50.1181, 33.1662, 0.52 ) }
    dend_23 { pt3dadd( -17.0123, 50.5611, 33.7794, 0.52 ) }
    dend_23 { pt3dadd( -17.0256, 51.1602, 34.6075, 0.36 ) }
    dend_23 { pt3dadd( -17.1043, 51.7982, 35.4626, 0.36 ) }
    dend_23 { pt3dadd( -17.1984, 52.2454, 36.0119, 0.36 ) }
    dend_23 { pt3dadd( -17.3311, 52.7015, 36.5493, 0.66 ) }
    dend_23 { pt3dadd( -17.6285, 53.4751, 37.4712, 0.3 ) }
    dend_23 { pt3dadd( -18.0597, 54.3392, 38.6175, 0.3 ) }
    dend_23 { pt3dadd( -18.2698, 54.6658, 39.128, 0.44 ) }
    dend_23 { pt3dadd( -18.4154, 54.8491, 39.4827, 0.44 ) }
    dend_23 { pt3dadd( -18.8091, 55.2768, 40.4937, 0.22 ) }
    dend_23 { pt3dadd( -19.1191, 55.5801, 41.3881, 0.44 ) }
    dend_23 { pt3dadd( -19.5727, 55.9854, 42.8301, 0.44 ) }
    dend_23 { pt3dadd( -19.9916, 56.351, 44.341, 0.88 ) }
    dend_23 { pt3dadd( -20.5117, 56.7711, 46.2608, 0.22 ) }
    dend_23 { pt3dadd( -21.0349, 57.1656, 48.2395, 0.22 ) }
    dend_23 { pt3dadd( -21.615, 57.5803, 50.551, 0.22 ) }
    dend_23 { pt3dadd( -22.0121, 57.8772, 52.3226, 0.22 ) }
    dend_23 { pt3dadd( -22.3249, 58.1365, 53.9505, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 34/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 7.45943, 27.0806, -3.19744, 0.22 ) }
    dend_19 { pt3dadd( 7.62806, 27.3853, -3.95028, 0.22 ) }
    dend_19 { pt3dadd( 7.773, 27.7038, -4.80658, 0.44 ) }
    dend_19 { pt3dadd( 7.96082, 28.1166, -5.91625, 0.44 ) }
    dend_19 { pt3dadd( 8.2127, 28.6701, -7.40442, 0.22 ) }
    dend_19 { pt3dadd( 8.42052, 29.1268, -8.63227, 0.22 ) }
    dend_19 { pt3dadd( 8.6225, 29.5707, -9.82559, 0.22 ) }
    dend_19 { pt3dadd( 8.86396, 30.0874, -11.4223, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 42/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 7.45943, 27.0806, -3.19744, 0.22 ) }
    dend_18 { pt3dadd( 7.39551, 27.7804, -2.70897, 0.22 ) }
    dend_18 { pt3dadd( 7.4837, 28.887, -1.98446, 0.22 ) }
    dend_18 { pt3dadd( 7.55043, 29.3693, -1.64143, 0.36 ) }
    dend_18 { pt3dadd( 7.63944, 29.8464, -1.2701, 0.82 ) }
    dend_18 { pt3dadd( 7.74616, 30.3037, -0.905305, 0.82 ) }
    dend_18 { pt3dadd( 7.85887, 30.7016, -0.570269, 0.52 ) }
    dend_18 { pt3dadd( 8.20788, 31.4717, 0.148763, 0.3 ) }
    dend_18 { pt3dadd( 8.5461, 32.0604, 0.75601, 0.3 ) }
    dend_18 { pt3dadd( 8.96647, 32.7682, 1.54878, 0.44 ) }
    dend_18 { pt3dadd( 9.1152, 33.0403, 1.85496, 0.44 ) }
    dend_18 { pt3dadd( 9.26121, 33.366, 2.20881, 0.44 ) }
    dend_18 { pt3dadd( 9.50035, 34.1278, 2.93718, 0.36 ) }
    dend_18 { pt3dadd( 9.69306, 35.1518, 3.71961, 0.74 ) }
    dend_18 { pt3dadd( 9.77607, 36.056, 4.25644, 0.82 ) }
    dend_18 { pt3dadd( 9.76882, 36.8664, 4.62333, 0.52 ) }
    dend_18 { pt3dadd( 9.67409, 37.8351, 4.94188, 0.44 ) }
    dend_18 { pt3dadd( 9.48564, 38.8734, 5.11739, 0.22 ) }
    dend_18 { pt3dadd( 9.26012, 39.7, 5.1173, 0.3 ) }
    dend_18 { pt3dadd( 9.13866, 40.0698, 5.08439, 0.74 ) }
    dend_18 { pt3dadd( 8.99399, 40.485, 5.06337, 0.96 ) }
    dend_18 { pt3dadd( 8.67456, 41.4623, 5.08116, 0.36 ) }
    dend_18 { pt3dadd( 8.42872, 42.3932, 5.13161, 0.44 ) }
    dend_18 { pt3dadd( 8.28151, 43.1524, 5.2659, 0.74 ) }
    dend_18 { pt3dadd( 8.11, 44.2222, 5.62697, 0.3 ) }
    dend_18 { pt3dadd( 7.89967, 45.4575, 6.2132, 0.36 ) }
    dend_18 { pt3dadd( 7.81148, 45.9496, 6.50791, 0.82 ) }
    dend_18 { pt3dadd( 7.72468, 46.5234, 6.94078, 0.82 ) }
    dend_18 { pt3dadd( 7.66784, 47.2468, 7.55203, 0.82 ) }
    dend_18 { pt3dadd( 7.67704, 48.3679, 8.54697, 0.22 ) }
    dend_18 { pt3dadd( 7.74453, 48.9812, 9.11034, 0.22 ) }
    dend_18 { pt3dadd( 7.81067, 49.3054, 9.42436, 0.58 ) }
    dend_18 { pt3dadd( 7.92956, 49.7534, 9.8736, 0.58 ) }
    dend_18 { pt3dadd( 8.12296, 50.3637, 10.5135, 0.36 ) }
    dend_18 { pt3dadd( 8.35262, 50.9554, 11.1213, 0.3 ) }
    dend_18 { pt3dadd( 8.71984, 51.7596, 11.9306, 0.3 ) }
    dend_18 { pt3dadd( 8.89104, 52.1818, 12.3597, 0.3 ) }
    dend_18 { pt3dadd( 9.01656, 52.5415, 12.7348, 0.82 ) }
    dend_18 { pt3dadd( 9.14254, 52.9793, 13.1847, 0.82 ) }
    dend_18 { pt3dadd( 9.40624, 53.9548, 14.1957, 0.44 ) }
    dend_18 { pt3dadd( 9.49687, 54.259, 14.4921, 0.44 ) }
    dend_18 { pt3dadd( 9.8889, 55.379, 15.4239, 0.3 ) }
    dend_18 { pt3dadd( 10.1979, 56.0634, 15.9068, 0.36 ) }
    dend_18 { pt3dadd( 10.3451, 56.3156, 16.0459, 0.36 ) }
    dend_18 { pt3dadd( 10.6905, 56.7759, 16.2039, 0.36 ) }
    dend_18 { pt3dadd( 11.0635, 57.1888, 16.3075, 0.66 ) }
    dend_18 { pt3dadd( 11.7602, 57.9027, 16.4675, 0.44 ) }
    dend_18 { pt3dadd( 12.2359, 58.3884, 16.5785, 0.66 ) }
    dend_18 { pt3dadd( 12.613, 58.8026, 16.7349, 0.88 ) }
    dend_18 { pt3dadd( 13.2338, 59.5627, 17.1108, 0.14 ) }
    dend_18 { pt3dadd( 13.8486, 60.3694, 17.5741, 0.74 ) }
    dend_18 { pt3dadd( 14.091, 60.7102, 17.7875, 1.18 ) }
    dend_18 { pt3dadd( 14.8662, 61.8676, 18.6054, 0.14 ) }
    dend_18 { pt3dadd( 15.4231, 62.7389, 19.226, 0.14 ) }
    dend_18 { pt3dadd( 15.7074, 63.2191, 19.5616, 0.66 ) }
    dend_18 { pt3dadd( 16.0113, 63.8467, 19.9819, 1.1 ) }
    dend_18 { pt3dadd( 16.2298, 64.3814, 20.3252, 0.58 ) }
    dend_18 { pt3dadd( 16.5757, 65.3931, 20.966, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_18 { pt3dadd( 16.7289, 65.9172, 21.2805, 0.52 ) }
    dend_18 { pt3dadd( 16.9692, 66.797, 21.7633, 0.66 ) }
    dend_18 { pt3dadd( 17.3281, 68.2707, 22.5656, 0.3 ) }
    dend_18 { pt3dadd( 17.4116, 68.6864, 22.8129, 0.3 ) }
    dend_18 { pt3dadd( 17.4914, 69.0661, 23.0531, 0.66 ) }
    dend_18 { pt3dadd( 17.588, 69.4896, 23.3452, 0.66 ) }
    dend_18 { pt3dadd( 17.7637, 70.1035, 23.8369, 0.36 ) }
    dend_18 { pt3dadd( 18.121, 70.94, 24.6299, 0.3 ) }
    dend_18 { pt3dadd( 18.7452, 71.9265, 25.7197, 0.3 ) }
    dend_18 { pt3dadd( 18.9553, 72.1931, 26.0418, 0.3 ) }
    dend_18 { pt3dadd( 19.4579, 72.7051, 26.7064, 0.3 ) }
    dend_18 { pt3dadd( 19.8093, 72.9768, 27.0775, 0.3 ) }
    dend_18 { pt3dadd( 20.5008, 73.3618, 27.5976, 0.14 ) }
    dend_18 { pt3dadd( 20.9548, 73.5625, 27.8633, 0.36 ) }
    dend_18 { pt3dadd( 21.555, 73.8012, 28.1208, 0.14 ) }
    dend_18 { pt3dadd( 22.2195, 74.0791, 28.3642, 0.36 ) }
    dend_18 { pt3dadd( 23.2455, 74.5368, 28.6338, 0.14 ) }
    dend_18 { pt3dadd( 24.2637, 75.0335, 28.8536, 0.36 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 18/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.4226, 33.3713, -20.466, 0.82 ) }
    dend_12 { pt3dadd( 24.7729, 35.1263, -20.6604, 0.82 ) }
    dend_12 { pt3dadd( 25.089, 36.1158, -20.7189, 0.52 ) }
    dend_12 { pt3dadd( 25.4246, 36.9069, -20.7417, 0.88 ) }
    dend_12 { pt3dadd( 25.6321, 37.3466, -20.7042, 0.88 ) }
    dend_12 { pt3dadd( 26.1545, 38.281, -20.5987, 0.58 ) }
    dend_12 { pt3dadd( 26.6359, 39.0401, -20.4921, 0.58 ) }
    dend_12 { pt3dadd( 27.2913, 39.903, -20.2875, 0.58 ) }
    dend_12 { pt3dadd( 28.1055, 40.9015, -20.0486, 0.36 ) }
    dend_12 { pt3dadd( 29.2313, 42.2696, -19.7283, 0.36 ) }
    dend_12 { pt3dadd( 29.9368, 43.1749, -19.4975, 0.36 ) }
    dend_12 { pt3dadd( 30.4452, 43.8216, -19.3178, 0.36 ) }
    dend_12 { pt3dadd( 31.0009, 44.5597, -19.103, 0.36 ) }
    dend_12 { pt3dadd( 31.7144, 45.5684, -18.8086, 0.3 ) }
    dend_12 { pt3dadd( 31.9612, 45.9546, -18.7042, 0.3 ) }
    dend_12 { pt3dadd( 32.2262, 46.4762, -18.6319, 0.3 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 24.4226, 33.3713, -20.466, 0.74 ) }
    dend_11 { pt3dadd( 23.8408, 33.7147, -22.2045, 0.74 ) }
    dend_11 { pt3dadd( 23.4206, 34.0212, -23.4639, 0.74 ) }
    dend_11 { pt3dadd( 23.0512, 34.367, -24.6169, 0.44 ) }
    dend_11 { pt3dadd( 22.6612, 34.8467, -25.9797, 0.44 ) }
    dend_11 { pt3dadd( 22.3898, 35.3227, -27.1414, 0.44 ) }
    dend_11 { pt3dadd( 22.2385, 35.679, -27.8969, 0.44 ) }
    dend_11 { pt3dadd( 21.8988, 37.0786, -30.0565, 0.3 ) }
    dend_11 { pt3dadd( 21.8654, 37.7177, -30.7559, 0.3 ) }
    dend_11 { pt3dadd( 21.9563, 38.4501, -31.3156, 0.3 ) }
    dend_11 { pt3dadd( 22.2891, 39.4951, -31.7601, 0.22 ) }
    dend_11 { pt3dadd( 22.5969, 40.0829, -31.8022, 0.22 ) }
    dend_11 { pt3dadd( 23.1429, 40.8106, -31.5485, 0.22 ) }
    dend_11 { pt3dadd( 23.6136, 41.344, -31.2256, 0.22 ) }
    dend_11 { pt3dadd( 24.0661, 41.8135, -30.8727, 0.66 ) }
    dend_11 { pt3dadd( 24.9776, 42.6639, -30.0051, 0.3 ) }
    dend_11 { pt3dadd( 25.919, 43.3734, -28.986, 0.3 ) }
    dend_11 { pt3dadd( 26.6174, 43.77, -28.2383, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 52/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 27.1038, 1.99872, 16.8499, 0.66 ) }
    dend_4 { pt3dadd( 28.2965, 2.12338, 17.4289, 0.66 ) }
    dend_4 { pt3dadd( 29.1773, 2.31049, 17.922, 0.36 ) }
    dend_4 { pt3dadd( 29.8987, 2.57543, 18.3803, 0.36 ) }
    dend_4 { pt3dadd( 30.1677, 2.74955, 18.5767, 0.36 ) }
    dend_4 { pt3dadd( 30.5567, 3.16428, 18.9827, 0.3 ) }
    dend_4 { pt3dadd( 30.8015, 3.4827, 19.2641, 0.3 ) }
    dend_4 { pt3dadd( 31.2319, 4.27729, 19.7779, 0.44 ) }
    dend_4 { pt3dadd( 31.5939, 4.9862, 20.1889, 0.44 ) }
    dend_4 { pt3dadd( 31.9482, 5.55146, 20.4881, 0.36 ) }
    dend_4 { pt3dadd( 32.7579, 6.49618, 21.0323, 0.44 ) }
    dend_4 { pt3dadd( 33.3047, 6.91696, 21.3413, 0.58 ) }
    dend_4 { pt3dadd( 34.0707, 7.27733, 21.7378, 0.74 ) }
    dend_4 { pt3dadd( 34.7453, 7.46563, 22.077, 0.58 ) }
    dend_4 { pt3dadd( 35.8959, 7.67885, 22.6881, 0.36 ) }
    dend_4 { pt3dadd( 36.821, 7.77684, 23.1897, 0.36 ) }
    dend_4 { pt3dadd( 37.8115, 7.8464, 23.7691, 0.58 ) }
    dend_4 { pt3dadd( 38.7836, 7.90191, 24.4088, 0.74 ) }
    dend_4 { pt3dadd( 39.7192, 7.98416, 25.1243, 0.58 ) }
    dend_4 { pt3dadd( 40.522, 8.09046, 25.8368, 0.58 ) }
    dend_4 { pt3dadd( 41.3987, 8.25898, 26.6977, 0.52 ) }
    dend_4 { pt3dadd( 42.2805, 8.48651, 27.6073, 0.88 ) }
    dend_4 { pt3dadd( 42.7208, 8.62242, 28.0944, 1.18 ) }
    dend_4 { pt3dadd( 43.7521, 8.99157, 29.3505, 0.44 ) }
    dend_4 { pt3dadd( 44.3291, 9.24477, 30.1733, 0.44 ) }
    dend_4 { pt3dadd( 44.47, 9.32242, 30.4197, 0.44 ) }
    dend_4 { pt3dadd( 44.7523, 9.54742, 31.0735, 0.44 ) }
    dend_4 { pt3dadd( 45.0611, 9.89029, 32.0104, 0.58 ) }
    dend_4 { pt3dadd( 45.3834, 10.4035, 33.3504, 0.36 ) }
    dend_4 { pt3dadd( 45.5961, 10.9249, 34.6279, 0.36 ) }
    dend_4 { pt3dadd( 45.7636, 11.4039, 35.7714, 0.66 ) }
    dend_4 { pt3dadd( 45.9296, 11.8631, 36.8861, 0.66 ) }
    dend_4 { pt3dadd( 46.0689, 12.2623, 37.879, 0.66 ) }
    dend_4 { pt3dadd( 46.1803, 12.5806, 38.7177, 0.66 ) }
    dend_4 { pt3dadd( 46.4267, 13.2409, 40.5818, 0.44 ) }
    dend_4 { pt3dadd( 46.6129, 13.6212, 41.7718, 0.44 ) }
    dend_4 { pt3dadd( 46.748, 13.8226, 42.4641, 0.44 ) }
    dend_4 { pt3dadd( 46.8394, 13.9485, 42.922, 0.44 ) }
    dend_4 { pt3dadd( 46.9058, 14.0729, 43.3422, 0.44 ) }
    dend_4 { pt3dadd( 47.0118, 14.41, 44.298, 0.44 ) }
    dend_4 { pt3dadd( 47.12, 14.9069, 45.6633, 0.44 ) }
    dend_4 { pt3dadd( 47.1709, 15.1606, 46.3905, 0.44 ) }
    dend_4 { pt3dadd( 47.262, 15.47, 47.3639, 0.44 ) }
    dend_4 { pt3dadd( 47.4799, 15.9675, 49.2109, 0.44 ) }
    dend_4 { pt3dadd( 47.7676, 16.3858, 51.2531, 0.44 ) }
    dend_4 { pt3dadd( 48.0629, 16.6441, 53.2394, 0.44 ) }
    dend_4 { pt3dadd( 48.2877, 16.7503, 54.8226, 0.44 ) }
    dend_4 { pt3dadd( 48.4539, 16.7735, 56.0946, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( 48.6669, 16.7331, 57.9343, 0.44 ) }
    dend_4 { pt3dadd( 48.74, 16.6885, 58.8471, 0.3 ) }
    dend_4 { pt3dadd( 48.8018, 16.6381, 61.0172, 0.3 ) }
    dend_4 { pt3dadd( 48.7822, 16.7143, 62.8309, 0.3 ) }
    dend_4 { pt3dadd( 48.7597, 16.7783, 63.4473, 0.3 ) }
    dend_4 { pt3dadd( 48.6716, 17.057, 65.1961, 0.3 ) }
    dend_4 { pt3dadd( 48.5888, 17.4528, 67.1746, 0.3 ) }
    dend_4 { pt3dadd( 48.5466, 17.9277, 69.2797, 0.3 ) }
    dend_4 { pt3dadd( 48.5715, 18.7334, 72.4317, 0.3 ) }
    dend_4 { pt3dadd( 48.6314, 19.2454, 74.2998, 0.3 ) }
    dend_4 { pt3dadd( 48.7188, 19.7857, 76.1661, 0.44 ) }
    dend_4 { pt3dadd( 48.8798, 20.6625, 79.0376, 0.36 ) }
    dend_4 { pt3dadd( 49.0579, 21.497, 81.6428, 0.36 ) }
    dend_4 { pt3dadd( 49.2685, 22.2678, 84.034, 0.52 ) }
    dend_4 { pt3dadd( 49.5509, 23.1285, 86.6697, 0.52 ) }
    dend_4 { pt3dadd( 49.6361, 23.33, 87.2962, 0.52 ) }
    dend_4 { pt3dadd( 49.9417, 23.9362, 89.176, 0.52 ) }
    dend_4 { pt3dadd( 50.1193, 24.237, 90.0776, 0.52 ) }
    dend_4 { pt3dadd( 50.6044, 24.8721, 92.066, 0.52 ) }
    dend_4 { pt3dadd( 51.1627, 25.3638, 93.777, 0.52 ) }
    dend_4 { pt3dadd( 51.4073, 25.5291, 94.3535, 0.66 ) }
    dend_4 { pt3dadd( 51.8851, 25.8146, 95.2323, 0.66 ) }
    dend_4 { pt3dadd( 52.2108, 26.0161, 95.6815, 0.52 ) }
    dend_4 { pt3dadd( 52.9273, 26.5218, 96.4456, 0.52 ) }
    dend_4 { pt3dadd( 53.3868, 26.8885, 96.8654, 0.44 ) }
    dend_4 { pt3dadd( 53.9964, 27.4194, 97.4155, 0.44 ) }
    dend_4 { pt3dadd( 54.8727, 28.1926, 98.2622, 0.22 ) }
    dend_4 { pt3dadd( 55.5956, 28.8277, 98.9464, 0.66 ) }
    dend_4 { pt3dadd( 56.4246, 29.5822, 99.7605, 0.22 ) }
    dend_4 { pt3dadd( 57.4436, 30.5644, 100.772, 0.22 ) }
    dend_4 { pt3dadd( 57.8868, 30.995, 101.242, 0.82 ) }
    dend_4 { pt3dadd( 58.4926, 31.5556, 101.903, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 27.1038, 1.99872, 16.8499, 0.36 ) }
    dend_3 { pt3dadd( 27.0379, 1.67571, 17.7218, 0.36 ) }
    dend_3 { pt3dadd( 27.0002, 1.07543, 19.1469, 0.36 ) }
    dend_3 { pt3dadd( 27.0232, 0.419227, 20.4885, 0.22 ) }
    dend_3 { pt3dadd( 27.0769, -0.153581, 21.553, 0.22 ) }
    dend_3 { pt3dadd( 27.1101, -0.437203, 22.0632, 0.22 ) }
    dend_3 { pt3dadd( 27.1644, -0.75033, 22.6174, 0.36 ) }
    dend_3 { pt3dadd( 27.273, -1.13678, 23.2765, 0.74 ) }
    dend_3 { pt3dadd( 27.4357, -1.48954, 23.8711, 1.18 ) }
    dend_3 { pt3dadd( 27.9337, -2.13827, 25.0467, 0.96 ) }
    dend_3 { pt3dadd( 28.4613, -2.62869, 26.0455, 0.88 ) }
    dend_3 { pt3dadd( 29.0409, -3.04117, 27.0537, 0.36 ) }
    dend_3 { pt3dadd( 29.4889, -3.28774, 27.7799, 0.22 ) }
    dend_3 { pt3dadd( 29.9669, -3.49548, 28.4727, 0.22 ) }
    dend_3 { pt3dadd( 30.7078, -3.76691, 29.4287, 0.3 ) }
    dend_3 { pt3dadd( 31.544, -4.03734, 30.3344, 0.52 ) }
    dend_3 { pt3dadd( 32.266, -4.29508, 31.0315, 0.74 ) }
    dend_3 { pt3dadd( 32.4973, -4.39801, 31.2507, 0.74 ) }
    dend_3 { pt3dadd( 33.1852, -4.83344, 31.9264, 1.1 ) }
    dend_3 { pt3dadd( 33.4647, -5.07701, 32.2076, 1.1 ) }
    dend_3 { pt3dadd( 33.9632, -5.66787, 32.7242, 0.36 ) }
    dend_3 { pt3dadd( 34.3664, -6.1941, 33.0554, 0.3 ) }
    dend_3 { pt3dadd( 34.6171, -6.53827, 33.2067, 0.3 ) }
    dend_3 { pt3dadd( 34.9745, -7.0532, 33.4156, 0.3 ) }
    dend_3 { pt3dadd( 35.1256, -7.27067, 33.4961, 0.3 ) }
    dend_3 { pt3dadd( 35.427, -7.6968, 33.7011, 0.58 ) }
    dend_3 { pt3dadd( 35.8272, -8.25979, 33.9962, 0.74 ) }
    dend_3 { pt3dadd( 36.3263, -8.85988, 34.4359, 0.22 ) }
    dend_3 { pt3dadd( 36.8729, -9.45609, 34.9459, 0.22 ) }
    dend_3 { pt3dadd( 37.1213, -9.70278, 35.1816, 0.88 ) }
    dend_3 { pt3dadd( 37.8954, -10.4027, 35.9727, 1.54 ) }
    dend_3 { pt3dadd( 38.3306, -10.7423, 36.4497, 1.54 ) }
    dend_3 { pt3dadd( 39.5776, -11.578, 37.8797, 0.22 ) }
    dend_3 { pt3dadd( 40.0496, -11.8366, 38.4329, 0.58 ) }
    dend_3 { pt3dadd( 40.5154, -12.0523, 38.9607, 0.82 ) }
    dend_3 { pt3dadd( 41.4441, -12.4576, 39.9989, 0.22 ) }
    dend_3 { pt3dadd( 42.1949, -12.7875, 40.8404, 0.22 ) }
    dend_3 { pt3dadd( 42.6492, -12.9931, 41.4107, 0.22 ) }
    dend_3 { pt3dadd( 43.0186, -13.1658, 41.9033, 0.22 ) }
    dend_3 { pt3dadd( 43.2253, -13.2675, 42.1991, 0.74 ) }
    dend_3 { pt3dadd( 43.709, -13.5165, 42.9286, 0.96 ) }
    dend_3 { pt3dadd( 44.7618, -14.0939, 44.3735, 0.14 ) }
    dend_3 { pt3dadd( 45.4155, -14.4798, 45.2634, 0.14 ) }
    dend_3 { pt3dadd( 45.7265, -14.6571, 45.7137, 0.14 ) }
    dend_3 { pt3dadd( 46.0349, -14.8039, 46.1672, 0.14 ) }
    dend_3 { pt3dadd( 46.6263, -15.0159, 46.9946, 0.14 ) }
    dend_3 { pt3dadd( 47.2673, -15.2002, 47.8829, 1.1 ) }
    dend_3 { pt3dadd( 48.2071, -15.4549, 49.1471, 0.22 ) }
    dend_3 { pt3dadd( 49.0866, -15.7353, 50.362, 0.44 ) }
    dend_3 { pt3dadd( 49.6907, -15.966, 51.259, 1.04 ) }
    dend_3 { pt3dadd( 50.7837, -16.4429, 52.9363, 0.14 ) }
    dend_3 { pt3dadd( 51.4899, -16.7975, 54.0251, 0.14 ) }
    dend_3 { pt3dadd( 51.9881, -17.1075, 54.8328, 0.14 ) }
    dend_3 { pt3dadd( 52.328, -17.3732, 55.3688, 0.14 ) }
    dend_3 { pt3dadd( 52.6491, -17.7039, 55.8838, 0.14 ) }
    dend_3 { pt3dadd( 52.8735, -18.003, 56.2654, 0.58 ) }
    dend_3 { pt3dadd( 53.2241, -18.5537, 56.8955, 1.18 ) }
    dend_3 { pt3dadd( 53.8638, -19.4904, 57.9574, 0.22 ) }
    dend_3 { pt3dadd( 54.2768, -20.0547, 58.6206, 0.44 ) }
    dend_3 { pt3dadd( 54.6385, -20.5112, 59.1608, 0.88 ) }
    dend_3 { pt3dadd( 54.8879, -20.8094, 59.5046, 0.88 ) }
    dend_3 { pt3dadd( 55.6628, -21.7172, 60.5066, 0.14 ) }
    dend_3 { pt3dadd( 56.1441, -22.2548, 61.0704, 0.14 ) }
    dend_3 { pt3dadd( 56.6055, -22.7529, 61.5311, 0.14 ) }
    dend_3 { pt3dadd( 57.0589, -23.2666, 61.959, 0.82 ) }
    dend_3 { pt3dadd( 57.814, -24.1577, 62.6595, 0.14 ) }
    dend_3 { pt3dadd( 58.2929, -24.7482, 63.0864, 0.82 ) }
    dend_3 { pt3dadd( 59.0829, -25.7902, 63.7347, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_3 { pt3dadd( 59.5448, -26.4661, 64.1477, 0.74 ) }
    dend_3 { pt3dadd( 59.8844, -27.0404, 64.5373, 0.22 ) }
    dend_3 { pt3dadd( 60.1424, -27.6263, 65.0448, 0.22 ) }
    dend_3 { pt3dadd( 60.2143, -27.8923, 65.3411, 0.66 ) }
    dend_3 { pt3dadd( 60.2623, -28.1861, 65.7008, 0.66 ) }
    dend_3 { pt3dadd( 60.3107, -28.8654, 66.6409, 0.14 ) }
    dend_3 { pt3dadd( 60.361, -29.494, 67.5629, 0.36 ) }
    dend_3 { pt3dadd( 60.5411, -30.4231, 68.8831, 0.22 ) }
    dend_3 { pt3dadd( 60.8041, -31.1504, 69.9337, 0.52 ) }
    dend_3 { pt3dadd( 61.1222, -31.6524, 70.6775, 0.88 ) }
    dend_3 { pt3dadd( 61.5299, -32.1285, 71.3517, 0.88 ) }
    dend_3 { pt3dadd( 61.9932, -32.599, 71.9931, 0.3 ) }
    dend_3 { pt3dadd( 62.6871, -33.2825, 72.9152, 0.08 ) }
    dend_3 { pt3dadd( 63.2514, -33.8193, 73.614, 0.22 ) }
    dend_3 { pt3dadd( 64.0387, -34.5808, 74.621, 0.08 ) }
    dend_3 { pt3dadd( 64.5106, -35.055, 75.2844, 0.82 ) }
    dend_3 { pt3dadd( 65.4533, -36.0492, 76.6805, 0.14 ) }
    dend_3 { pt3dadd( 65.9269, -36.5792, 77.519, 0.44 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 18/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -5.89187, 25.8399, 63.7263, 0.22 ) }
    dend_68 { pt3dadd( -6.36108, 26.342, 64.3768, 0.22 ) }
    dend_68 { pt3dadd( -7.17224, 27.2601, 65.4478, 0.22 ) }
    dend_68 { pt3dadd( -7.789, 28.0193, 66.1066, 0.22 ) }
    dend_68 { pt3dadd( -8.40397, 28.8473, 66.6219, 0.22 ) }
    dend_68 { pt3dadd( -8.87638, 29.4833, 67.0177, 0.52 ) }
    dend_68 { pt3dadd( -9.46683, 30.2783, 67.5125, 0.22 ) }
    dend_68 { pt3dadd( -10.1188, 31.2538, 68.01, 0.44 ) }
    dend_68 { pt3dadd( -11.2511, 33.1796, 68.4127, 0.82 ) }
    dend_68 { pt3dadd( -11.6502, 33.9109, 68.3787, 0.82 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -5.89187, 25.8399, 63.7263, 0.52 ) }
    dend_67 { pt3dadd( -6.57542, 25.7456, 64.5257, 0.52 ) }
    dend_67 { pt3dadd( -7.09505, 25.6596, 65.2488, 0.52 ) }
    dend_67 { pt3dadd( -7.91382, 25.4803, 66.4822, 0.58 ) }
    dend_67 { pt3dadd( -8.7482, 25.2388, 67.764, 0.44 ) }
    dend_67 { pt3dadd( -9.64807, 24.9775, 68.9861, 0.36 ) }
    dend_67 { pt3dadd( -10.6204, 24.7101, 70.1578, 0.3 ) }
    dend_67 { pt3dadd( -11.6774, 24.4636, 71.4681, 0.3 ) }
    dend_67 { pt3dadd( -12.0015, 24.3798, 71.8674, 0.3 ) }
    dend_67 { pt3dadd( -12.7369, 24.1463, 72.8021, 0.22 ) }
    dend_67 { pt3dadd( -14.4295, 23.2797, 75.4606, 0.22 ) }
    dend_67 { pt3dadd( -14.3135, 23.1741, 76.0394, 0.66 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 40/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -116.249, 5.29245, 151.075, 0.3 ) }
    dend_57 { pt3dadd( -117.489, 5.40015, 152.147, 0.3 ) }
    dend_57 { pt3dadd( -118.752, 5.53747, 153.13, 0.3 ) }
    dend_57 { pt3dadd( -119.694, 5.69516, 153.882, 0.74 ) }
    dend_57 { pt3dadd( -120.78, 5.93212, 154.814, 0.88 ) }
    dend_57 { pt3dadd( -122.108, 6.27871, 156.084, 0.22 ) }
    dend_57 { pt3dadd( -123.013, 6.53929, 156.996, 0.22 ) }
    dend_57 { pt3dadd( -124.415, 6.98226, 158.45, 0.08 ) }
    dend_57 { pt3dadd( -125.5, 7.33038, 159.522, 0.08 ) }
    dend_57 { pt3dadd( -126.847, 7.75344, 160.817, 0.08 ) }
    dend_57 { pt3dadd( -128.235, 8.16342, 162.108, 0.08 ) }
    dend_57 { pt3dadd( -128.902, 8.3421, 162.723, 0.08 ) }
    dend_57 { pt3dadd( -130.103, 8.5518, 163.689, 0.3 ) }
    dend_57 { pt3dadd( -130.891, 8.59486, 164.255, 0.3 ) }
    dend_57 { pt3dadd( -131.981, 8.52958, 164.915, 0.14 ) }
    dend_57 { pt3dadd( -133.628, 8.34546, 165.782, 0.08 ) }
    dend_57 { pt3dadd( -134.435, 8.21986, 166.16, 0.08 ) }
    dend_57 { pt3dadd( -136.354, 7.84726, 167.058, 0.08 ) }
    dend_57 { pt3dadd( -137.465, 7.58372, 167.605, 0.08 ) }
    dend_57 { pt3dadd( -138.318, 7.36102, 168.004, 0.82 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -116.249, 5.29245, 151.075, 0.22 ) }
    dend_56 { pt3dadd( -115.642, 5.02482, 151.863, 0.22 ) }
    dend_56 { pt3dadd( -115.116, 4.69535, 152.546, 0.22 ) }
    dend_56 { pt3dadd( -114.553, 4.26293, 153.279, 0.22 ) }
    dend_56 { pt3dadd( -114.019, 3.72906, 154.024, 0.22 ) }
    dend_56 { pt3dadd( -113.608, 3.22459, 154.685, 0.44 ) }
    dend_56 { pt3dadd( -113.167, 2.63487, 155.417, 0.66 ) }
    dend_56 { pt3dadd( -112.774, 2.0189, 156.126, 0.22 ) }
    dend_56 { pt3dadd( -112.422, 1.3538, 156.786, 0.58 ) }
    dend_56 { pt3dadd( -112.068, 0.497341, 157.545, 0.22 ) }
    dend_56 { pt3dadd( -111.724, -0.648343, 158.492, 0.22 ) }
    dend_56 { pt3dadd( -111.619, -1.13958, 158.895, 0.22 ) }
    dend_56 { pt3dadd( -111.574, -1.53827, 159.246, 0.3 ) }
    dend_56 { pt3dadd( -111.567, -1.85676, 159.542, 0.3 ) }
    dend_56 { pt3dadd( -111.597, -2.55593, 160.226, 0.08 ) }
    dend_56 { pt3dadd( -111.672, -3.01653, 160.763, 0.08 ) }
    dend_56 { pt3dadd( -111.83, -3.42013, 161.253, 0.08 ) }
    dend_56 { pt3dadd( -112.052, -3.75724, 161.713, 0.08 ) }
    dend_56 { pt3dadd( -112.453, -4.13089, 162.344, 0.3 ) }
    dend_56 { pt3dadd( -113.134, -4.43341, 163.158, 0.52 ) }
    dend_56 { pt3dadd( -114.414, -4.36303, 164.169, 0.14 ) }
    dend_56 { pt3dadd( -115.621, -3.93669, 164.955, 0.14 ) }
    dend_56 { pt3dadd( -116.193, -3.62255, 165.296, 0.44 ) }
    dend_56 { pt3dadd( -116.965, -3.02472, 165.789, 0.44 ) }
    dend_56 { pt3dadd( -117.562, -2.50583, 166.139, 0.44 ) }
    dend_56 { pt3dadd( -118.324, -1.74303, 166.548, 0.14 ) }
    dend_56 { pt3dadd( -119.063, -0.821811, 167.005, 0.14 ) }
    dend_56 { pt3dadd( -119.329, -0.417599, 167.279, 0.14 ) }
    dend_56 { pt3dadd( -119.808, 0.438252, 167.946, 0.52 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 89/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -58.0614, 36.6362, 66.1081, 0.44 ) }
    dend_42 { pt3dadd( -57.555, 37.1253, 66.4992, 0.44 ) }
    dend_42 { pt3dadd( -56.6528, 37.8798, 66.9608, 0.22 ) }
    dend_42 { pt3dadd( -55.5843, 38.653, 67.2391, 0.22 ) }
    dend_42 { pt3dadd( -55.0784, 38.9873, 67.3029, 0.52 ) }
    dend_42 { pt3dadd( -54.5849, 39.3054, 67.329, 0.96 ) }
    dend_42 { pt3dadd( -54.0993, 39.619, 67.3253, 0.96 ) }
    dend_42 { pt3dadd( -52.845, 40.3911, 67.1911, 0.36 ) }
    dend_42 { pt3dadd( -51.7661, 41.0692, 66.9755, 0.36 ) }
    dend_42 { pt3dadd( -51.192, 41.4545, 66.8238, 0.66 ) }
    dend_42 { pt3dadd( -50.7277, 41.7793, 66.6977, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( -49.5122, 42.6645, 66.3603, 0.22 ) }
    dend_42 { pt3dadd( -48.8581, 43.1522, 66.1811, 0.22 ) }
    dend_42 { pt3dadd( -48.4133, 43.5272, 66.0693, 0.3 ) }
    dend_42 { pt3dadd( -47.784, 44.1267, 65.9681, 0.3 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -58.0614, 36.6362, 66.1081, 0.44 ) }
    dend_41 { pt3dadd( -57.6189, 35.854, 67.4994, 0.44 ) }
    dend_41 { pt3dadd( -57.366, 35.2899, 68.2282, 0.44 ) }
    dend_41 { pt3dadd( -57.2136, 34.9412, 68.6572, 0.44 ) }
    dend_41 { pt3dadd( -57.0036, 34.4111, 69.3233, 0.22 ) }
    dend_41 { pt3dadd( -56.617, 33.4365, 70.532, 0.22 ) }
    dend_41 { pt3dadd( -56.3407, 32.7179, 71.3979, 0.22 ) }
    dend_41 { pt3dadd( -56.0942, 31.9489, 72.3679, 0.3 ) }
    dend_41 { pt3dadd( -55.9029, 31.2127, 73.2471, 0.22 ) }
    dend_41 { pt3dadd( -55.7006, 30.3242, 74.2199, 0.36 ) }
    dend_41 { pt3dadd( -55.5751, 29.775, 74.7611, 0.74 ) }
    dend_41 { pt3dadd( -55.4795, 29.4119, 75.0465, 1.26 ) }
    dend_41 { pt3dadd( -55.2793, 28.7167, 75.4906, 0.82 ) }
    dend_41 { pt3dadd( -54.9681, 27.5939, 76.0336, 0.3 ) }
    dend_41 { pt3dadd( -54.8377, 26.9654, 76.2738, 0.3 ) }
    dend_41 { pt3dadd( -54.6604, 25.7284, 76.7762, 0.3 ) }
    dend_41 { pt3dadd( -54.5984, 24.157, 77.7327, 0.58 ) }
    dend_41 { pt3dadd( -54.6314, 23.8214, 78.0589, 1.18 ) }
    dend_41 { pt3dadd( -54.7685, 23.4677, 78.5943, 0.88 ) }
    dend_41 { pt3dadd( -55.1952, 22.9382, 79.8136, 0.44 ) }
    dend_41 { pt3dadd( -55.7484, 22.5092, 81.2182, 0.44 ) }
    dend_41 { pt3dadd( -56.279, 22.2438, 82.5612, 0.44 ) }
    dend_41 { pt3dadd( -56.7145, 22.1003, 83.7699, 0.44 ) }
    dend_41 { pt3dadd( -57.1674, 22.0074, 85.0572, 0.44 ) }
    dend_41 { pt3dadd( -57.6323, 21.9845, 86.416, 0.44 ) }
    dend_41 { pt3dadd( -57.845, 22.0148, 87.0706, 0.44 ) }
    dend_41 { pt3dadd( -58.0845, 22.0826, 87.7421, 0.44 ) }
    dend_41 { pt3dadd( -58.2897, 22.1939, 88.2985, 0.44 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 32/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -32.5789, 31.6638, 23.2146, 0.44 ) }
    dend_39 { pt3dadd( -33.415, 32.3232, 23.5093, 0.44 ) }
    dend_39 { pt3dadd( -34.5559, 33.2573, 23.8526, 0.44 ) }
    dend_39 { pt3dadd( -35.097, 33.7373, 23.989, 0.44 ) }
    dend_39 { pt3dadd( -35.4221, 34.0494, 24.0619, 0.44 ) }
    dend_39 { pt3dadd( -36.0443, 34.7068, 24.1877, 0.44 ) }
    dend_39 { pt3dadd( -36.5306, 35.2388, 24.2898, 0.36 ) }
    dend_39 { pt3dadd( -36.8226, 35.6148, 24.3419, 0.36 ) }
    dend_39 { pt3dadd( -37.3558, 36.422, 24.3966, 0.44 ) }
    dend_39 { pt3dadd( -37.5876, 36.788, 24.4251, 0.44 ) }
    dend_39 { pt3dadd( -37.9813, 37.4175, 24.4821, 0.3 ) }
    dend_39 { pt3dadd( -38.3591, 38.0428, 24.551, 0.3 ) }
    dend_39 { pt3dadd( -38.6381, 38.5639, 24.6176, 0.3 ) }
    dend_39 { pt3dadd( -38.9294, 39.1617, 24.7061, 0.52 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 46/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -32.5789, 31.6638, 23.2146, 0.74 ) }
    dend_38 { pt3dadd( -32.8157, 31.8437, 24.0396, 0.74 ) }
    dend_38 { pt3dadd( -33.4114, 32.3531, 25.8907, 0.74 ) }
    dend_38 { pt3dadd( -33.9669, 32.9102, 27.4783, 0.58 ) }
    dend_38 { pt3dadd( -34.5103, 33.5452, 28.8636, 0.36 ) }
    dend_38 { pt3dadd( -34.8046, 33.9459, 29.5596, 0.36 ) }
    dend_38 { pt3dadd( -35.0261, 34.3115, 30.1076, 0.52 ) }
    dend_38 { pt3dadd( -35.305, 34.8871, 30.8221, 0.66 ) }
    dend_38 { pt3dadd( -35.4972, 35.476, 31.3457, 0.74 ) }
    dend_38 { pt3dadd( -35.685, 36.4282, 32.1129, 0.44 ) }
    dend_38 { pt3dadd( -35.7529, 37.0483, 32.6455, 0.44 ) }
    dend_38 { pt3dadd( -35.8091, 38.0332, 33.5726, 0.3 ) }
    dend_38 { pt3dadd( -35.8111, 38.7629, 34.3689, 0.66 ) }
    dend_38 { pt3dadd( -35.8002, 38.9679, 34.6162, 1.04 ) }
    dend_38 { pt3dadd( -35.6596, 40.3431, 36.4192, 0.44 ) }
    dend_38 { pt3dadd( -35.5704, 41.121, 37.5078, 0.44 ) }
    dend_38 { pt3dadd( -35.5452, 41.6309, 38.2292, 0.66 ) }
    dend_38 { pt3dadd( -35.5667, 42.2499, 39.0714, 0.66 ) }
    dend_38 { pt3dadd( -35.6026, 42.5908, 39.5404, 0.66 ) }
    dend_38 { pt3dadd( -35.6666, 43.1927, 40.4469, 0.58 ) }
    dend_38 { pt3dadd( -35.7144, 43.675, 41.2489, 0.58 ) }
    dend_38 { pt3dadd( -35.7682, 44.0425, 41.9182, 0.74 ) }
    dend_38 { pt3dadd( -35.8344, 44.4086, 42.6736, 0.74 ) }
    dend_38 { pt3dadd( -35.9168, 44.992, 43.8997, 0.52 ) }
    dend_38 { pt3dadd( -35.9827, 45.7308, 45.5593, 0.44 ) }
    dend_38 { pt3dadd( -35.9973, 46.1835, 46.6453, 0.44 ) }
    dend_38 { pt3dadd( -35.9873, 46.5138, 47.484, 0.44 ) }
    dend_38 { pt3dadd( -35.963, 46.9791, 48.6829, 0.44 ) }
    dend_38 { pt3dadd( -35.9509, 47.3081, 49.4765, 0.58 ) }
    dend_38 { pt3dadd( -35.9515, 47.9996, 51.0033, 0.58 ) }
    dend_38 { pt3dadd( -36.0108, 48.5461, 52.083, 0.58 ) }
    dend_38 { pt3dadd( -36.117, 49.1261, 53.0734, 0.74 ) }
    dend_38 { pt3dadd( -36.2266, 49.5777, 53.7431, 0.58 ) }
    dend_38 { pt3dadd( -36.3713, 49.9675, 54.2053, 0.58 ) }
    dend_38 { pt3dadd( -36.6706, 50.5524, 54.7395, 0.58 ) }
    dend_38 { pt3dadd( -36.9921, 51.0875, 54.9752, 0.58 ) }
    dend_38 { pt3dadd( -37.6133, 51.9184, 54.9106, 0.44 ) }
    dend_38 { pt3dadd( -38.0604, 52.4115, 54.6625, 0.44 ) }
    dend_38 { pt3dadd( -38.564, 52.9044, 54.1662, 0.44 ) }
    dend_38 { pt3dadd( -39.6063, 53.8612, 52.9649, 0.44 ) }
    dend_38 { pt3dadd( -40.2639, 54.4006, 52.1619, 0.52 ) }
    dend_38 { pt3dadd( -40.8254, 54.8191, 51.4839, 0.74 ) }
    dend_38 { pt3dadd( -41.2864, 55.1431, 50.9486, 0.74 ) }
    dend_38 { pt3dadd( -42.4632, 55.9812, 49.6762, 0.52 ) }
    dend_38 { pt3dadd( -43.1665, 56.5118, 49.0243, 0.36 ) }
    dend_38 { pt3dadd( -43.93, 57.1154, 48.5102, 0.36 ) }
    dend_38 { pt3dadd( -44.6353, 57.6447, 48.1208, 0.44 ) }
    dend_38 { pt3dadd( -45.4907, 58.2187, 47.7184, 0.52 ) }
    dend_38 { pt3dadd( -46.0798, 58.5667, 47.4814, 0.52 ) }
    dend_38 { pt3dadd( -46.9693, 59.0354, 47.2006, 0.74 ) }
    dend_38 { pt3dadd( -47.6924, 59.3947, 46.9919, 0.74 ) }
    dend_38 { pt3dadd( -49.293, 60.1837, 46.6224, 0.22 ) }
    dend_38 { pt3dadd( -50.0299, 60.5212, 46.4982, 0.22 ) }
    dend_38 { pt3dadd( -50.7359, 60.8186, 46.4457, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_38 { pt3dadd( -51.1651, 60.9973, 46.4285, 0.36 ) }
    dend_38 { pt3dadd( -52.0191, 61.371, 46.4338, 0.22 ) }
    dend_38 { pt3dadd( -52.5317, 61.6167, 46.458, 0.44 ) }
    dend_38 { pt3dadd( -53.0797, 61.9203, 46.5184, 0.44 ) }
    dend_38 { pt3dadd( -54.0462, 62.5051, 46.6009, 0.22 ) }
    dend_38 { pt3dadd( -55.0781, 63.1219, 46.6567, 0.44 ) }
    dend_38 { pt3dadd( -56.0735, 63.6663, 46.6733, 0.82 ) }
    dend_38 { pt3dadd( -57.2176, 64.2155, 46.6422, 0.22 ) }
    dend_38 { pt3dadd( -58.0055, 64.5486, 46.6062, 0.22 ) }
    dend_38 { pt3dadd( -58.6969, 64.83, 46.5789, 0.22 ) }
    dend_38 { pt3dadd( -59.147, 65.0129, 46.5693, 0.44 ) }
    dend_38 { pt3dadd( -59.9557, 65.363, 46.577, 0.44 ) }
    dend_38 { pt3dadd( -60.6547, 65.6811, 46.5843, 0.44 ) }
    dend_38 { pt3dadd( -61.7467, 66.2036, 46.6112, 0.44 ) }
    dend_38 { pt3dadd( -62.8685, 66.769, 46.6083, 0.44 ) }
    dend_38 { pt3dadd( -64.3542, 67.5647, 46.607, 0.44 ) }
    dend_38 { pt3dadd( -65.0787, 67.9869, 46.6083, 0.44 ) }
    dend_38 { pt3dadd( -66.4512, 68.8551, 46.6174, 0.36 ) }
    dend_38 { pt3dadd( -67.2736, 69.3986, 46.6302, 0.58 ) }
    dend_38 { pt3dadd( -68.0489, 69.9164, 46.6573, 0.82 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 20/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -72.1736, 31.1149, -38.625, 0.52 ) }
    dend_34 { pt3dadd( -72.6735, 31.565, -38.007, 0.52 ) }
    dend_34 { pt3dadd( -73.0362, 31.9886, -37.2356, 0.3 ) }
    dend_34 { pt3dadd( -73.382, 32.4145, -36.4552, 0.3 ) }
    dend_34 { pt3dadd( -73.6094, 32.6946, -35.942, 0.3 ) }
    dend_34 { pt3dadd( -73.9315, 33.0914, -35.2148, 0.3 ) }
    dend_34 { pt3dadd( -74.2076, 33.4315, -34.5916, 0.3 ) }
    dend_34 { pt3dadd( -74.6198, 34.1423, -33.2036, 0.3 ) }
    dend_34 { pt3dadd( -74.7612, 34.4798, -32.491, 0.14 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 29/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -72.1736, 31.1149, -38.625, 0.14 ) }
    dend_33 { pt3dadd( -71.6572, 31.6952, -38.46, 0.14 ) }
    dend_33 { pt3dadd( -71.2624, 32.1298, -38.2617, 0.3 ) }
    dend_33 { pt3dadd( -70.7364, 32.7144, -37.9604, 0.14 ) }
    dend_33 { pt3dadd( -70.3991, 33.0842, -37.7641, 0.14 ) }
    dend_33 { pt3dadd( -69.8524, 33.6182, -37.4393, 0.3 ) }
    dend_33 { pt3dadd( -69.1256, 34.2469, -37.0488, 0.14 ) }
    dend_33 { pt3dadd( -68.5015, 34.713, -36.7305, 0.14 ) }
    dend_33 { pt3dadd( -68.209, 34.8766, -36.6052, 0.66 ) }
    dend_33 { pt3dadd( -67.7508, 35.0319, -36.4933, 0.74 ) }
    dend_33 { pt3dadd( -66.6773, 35.0823, -36.6192, 0.22 ) }
    dend_33 { pt3dadd( -66.0215, 34.878, -36.9689, 0.22 ) }
    dend_33 { pt3dadd( -65.743, 34.7164, -37.2196, 0.22 ) }
    dend_33 { pt3dadd( -65.3092, 34.3222, -37.7697, 0.44 ) }
    dend_33 { pt3dadd( -64.684, 33.4303, -38.957, 0.14 ) }
    dend_33 { pt3dadd( -64.319, 32.5426, -40.0991, 0.14 ) }
    dend_33 { pt3dadd( -64.2346, 32.0462, -40.7388, 0.3 ) }
    dend_33 { pt3dadd( -64.275, 31.442, -41.4953, 0.3 ) }
    dend_33 { pt3dadd( -64.4916, 30.9141, -42.221, 0.14 ) }
    dend_33 { pt3dadd( -64.8789, 30.4518, -42.8978, 0.14 ) }
    dend_33 { pt3dadd( -65.1002, 30.2652, -43.1597, 0.14 ) }
    dend_33 { pt3dadd( -65.4325, 30.0148, -43.494, 0.36 ) }
    dend_33 { pt3dadd( -65.9837, 29.6207, -44.0143, 0.36 ) }
    dend_33 { pt3dadd( -67.5022, 28.5743, -45.3862, 0.14 ) }
    dend_33 { pt3dadd( -68.2735, 28.0535, -46.0862, 0.14 ) }
    dend_33 { pt3dadd( -68.8447, 27.6676, -46.5769, 0.3 ) }
    dend_33 { pt3dadd( -69.1859, 27.4349, -46.8671, 0.3 ) }
    dend_33 { pt3dadd( -69.5886, 27.1449, -47.1902, 0.3 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -23.5157, 28.957, -27.6894, 0.14 ) }
    dend_29 { pt3dadd( -25.1121, 28.7971, -28.1408, 0.14 ) }
    dend_29 { pt3dadd( -26.409, 28.655, -28.4311, 0.14 ) }
    dend_29 { pt3dadd( -27.6481, 28.5435, -28.7087, 0.14 ) }
    dend_29 { pt3dadd( -28.4245, 28.4737, -28.8826, 0.14 ) }
    dend_29 { pt3dadd( -28.8489, 28.4355, -28.9777, 0.36 ) }
    dend_29 { pt3dadd( -29.442, 28.3821, -29.1106, 0.58 ) }
    dend_29 { pt3dadd( -31.0931, 28.13, -29.3992, 0.22 ) }
    dend_29 { pt3dadd( -32.3153, 27.9747, -29.6198, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 66/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -23.5157, 28.957, -27.6894, 0.58 ) }
    dend_28 { pt3dadd( -24.623, 30.5078, -26.8952, 0.58 ) }
    dend_28 { pt3dadd( -24.9437, 31.0682, -26.6893, 0.58 ) }
    dend_28 { pt3dadd( -25.2362, 31.669, -26.5255, 0.44 ) }
    dend_28 { pt3dadd( -25.5755, 32.5035, -26.3613, 0.36 ) }
    dend_28 { pt3dadd( -26.2617, 34.1407, -26.0561, 0.36 ) }
    dend_28 { pt3dadd( -26.6747, 35.0734, -25.8831, 0.52 ) }
    dend_28 { pt3dadd( -27.1452, 36.0997, -25.6264, 0.82 ) }
    dend_28 { pt3dadd( -27.4689, 36.8564, -25.4677, 0.66 ) }
    dend_28 { pt3dadd( -27.9221, 37.9999, -25.278, 0.52 ) }
    dend_28 { pt3dadd( -28.3558, 39.2325, -25.1122, 0.52 ) }
    dend_28 { pt3dadd( -28.6395, 40.0656, -25.0278, 0.58 ) }
    dend_28 { pt3dadd( -28.9383, 40.9078, -24.8695, 0.74 ) }
    dend_28 { pt3dadd( -29.1372, 41.5169, -24.6851, 0.52 ) }
    dend_28 { pt3dadd( -29.3908, 42.3816, -24.4491, 0.52 ) }
    dend_28 { pt3dadd( -29.7093, 43.658, -24.145, 0.52 ) }
    dend_28 { pt3dadd( -29.8881, 44.59, -23.9676, 0.82 ) }
    dend_28 { pt3dadd( -30.217, 46.092, -23.759, 0.36 ) }
    dend_28 { pt3dadd( -30.5201, 47.0667, -23.6464, 0.36 ) }
    dend_28 { pt3dadd( -31.5385, 49.0571, -23.4902, 0.36 ) }
    dend_28 { pt3dadd( -31.9282, 49.52, -23.474, 0.88 ) }
    dend_28 { pt3dadd( -32.189, 49.689, -23.4747, 0.88 ) }
    dend_28 { pt3dadd( -33.9, 50.1942, -23.4674, 0.36 ) }
    dend_28 { pt3dadd( -35.0178, 50.3936, -23.4761, 0.36 ) }
    dend_28 { pt3dadd( -36.6406, 50.5417, -23.4192, 0.22 ) }
    dend_28 { pt3dadd( -37.8091, 50.5605, -23.2682, 0.22 ) }
    dend_28 { pt3dadd( -38.8185, 50.4855, -23.142, 0.22 ) }
    dend_28 { pt3dadd( -39.9091, 50.2827, -23.0056, 0.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 94/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 58.4926, 31.5556, 101.903, 0.22 ) }
    dend_6 { pt3dadd( 58.9318, 31.7583, 102.432, 0.22 ) }
    dend_6 { pt3dadd( 59.8782, 32.1762, 103.518, 0.66 ) }
    dend_6 { pt3dadd( 60.8587, 32.5741, 104.59, 0.22 ) }
    dend_6 { pt3dadd( 62.0098, 32.9755, 105.86, 0.14 ) }
    dend_6 { pt3dadd( 62.8067, 33.2035, 106.727, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_6 { pt3dadd( 63.2126, 33.2928, 107.183, 0.14 ) }
    dend_6 { pt3dadd( 63.5406, 33.3278, 107.567, 0.14 ) }
    dend_6 { pt3dadd( 63.8928, 33.3304, 107.98, 0.36 ) }
    dend_6 { pt3dadd( 64.5689, 33.2581, 108.777, 0.36 ) }
    dend_6 { pt3dadd( 64.9085, 33.174, 109.176, 0.14 ) }
    dend_6 { pt3dadd( 65.9276, 32.8207, 110.36, 0.14 ) }
    dend_6 { pt3dadd( 66.5636, 32.5603, 111.208, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 7/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 58.4926, 31.5556, 101.903, 0.3 ) }
    dend_5 { pt3dadd( 58.8, 31.9046, 102.375, 0.3 ) }
    dend_5 { pt3dadd( 59.225, 32.3123, 102.936, 0.22 ) }
    dend_5 { pt3dadd( 59.6919, 32.6607, 103.497, 0.22 ) }
    dend_5 { pt3dadd( 60.0562, 32.9059, 103.908, 0.44 ) }
    dend_5 { pt3dadd( 61.1579, 33.6548, 105.101, 0.44 ) }
    dend_5 { pt3dadd( 61.638, 33.9593, 105.6, 0.66 ) }
    dend_5 { pt3dadd( 62.0561, 34.1878, 106.018, 0.44 ) }
    dend_5 { pt3dadd( 63.0676, 34.7081, 106.934, 0.22 ) }
    dend_5 { pt3dadd( 63.5968, 35.0081, 107.409, 0.22 ) }
    dend_5 { pt3dadd( 63.9231, 35.2154, 107.706, 0.44 ) }
    dend_5 { pt3dadd( 64.8015, 35.7971, 108.477, 0.22 ) }
    dend_5 { pt3dadd( 65.6787, 36.3636, 109.261, 0.3 ) }
    dend_5 { pt3dadd( 66.4689, 36.8458, 109.965, 0.3 ) }
    dend_5 { pt3dadd( 67.6935, 37.6121, 111.048, 0.14 ) }
    dend_5 { pt3dadd( 68.3121, 37.9891, 111.603, 0.52 ) }
    dend_5 { pt3dadd( 68.6924, 38.2125, 111.949, 0.52 ) }
    dend_5 { pt3dadd( 69.342, 38.6068, 112.546, 0.22 ) }
    dend_5 { pt3dadd( 70.1199, 39.0123, 113.269, 0.74 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 26/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -47.784, 44.1267, 65.9681, 0.14 ) }
    dend_44 { pt3dadd( -47.3488, 45.1756, 65.9257, 0.14 ) }
    dend_44 { pt3dadd( -47.0527, 45.8894, 65.8968, 0.14 ) }
    dend_44 { pt3dadd( -46.8736, 46.321, 65.8794, 0.3 ) }
    dend_44 { pt3dadd( -46.6688, 46.8144, 65.8594, 0.3 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -47.784, 44.1267, 65.9681, 0.14 ) }
    dend_43 { pt3dadd( -46.9579, 44.085, 66.1751, 0.14 ) }
    dend_43 { pt3dadd( -45.9648, 44.101, 66.4849, 0.14 ) }
    dend_43 { pt3dadd( -45.472, 44.1089, 66.6386, 0.22 ) }
    dend_43 { pt3dadd( -44.5672, 44.1235, 66.9209, 0.22 ) }
    dend_43 { pt3dadd( -43.9961, 44.1327, 67.0991, 0.22 ) }
    dend_43 { pt3dadd( -43.4007, 44.1423, 67.2848, 0.3 ) }
    dend_43 { pt3dadd( -42.7994, 44.1096, 67.5207, 0.3 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_60, dend_45, dend_20, dend_13, dend_0, dend_83, dend_76, dend_70, dend_61, dend_53, dend_46, dend_30, dend_21, dend_15, dend_14, dend_8, dend_1, dend_87, dend_84, dend_80, dend_77, dend_74, dend_71, dend_65, dend_62, dend_59, dend_54, dend_50, dend_47, dend_36, dend_31, dend_25, dend_22, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_89, dend_88, dend_86, dend_85, dend_82, dend_81, dend_79, dend_78, dend_73, dend_72, dend_69, dend_66, dend_64, dend_63, dend_58, dend_55, dend_52, dend_51, dend_49, dend_48, dend_40, dend_37, dend_35, dend_32, dend_27, dend_26, dend_24, dend_23, dend_19, dend_18, dend_12, dend_11, dend_4, dend_3, dend_68, dend_67, dend_57, dend_56, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_29, dend_28, dend_6, dend_5, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_60, dend_45, dend_20, dend_13, dend_0, dend_83, dend_76, dend_70, dend_61, dend_53, dend_46, dend_30, dend_21, dend_15, dend_14, dend_8, dend_1, dend_87, dend_84, dend_80, dend_77, dend_74, dend_71, dend_65, dend_62, dend_59, dend_54, dend_50, dend_47, dend_36, dend_31, dend_25, dend_22, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_89, dend_88, dend_86, dend_85, dend_82, dend_81, dend_79, dend_78, dend_73, dend_72, dend_69, dend_66, dend_64, dend_63, dend_58, dend_55, dend_52, dend_51, dend_49, dend_48, dend_40, dend_37, dend_35, dend_32, dend_27, dend_26, dend_24, dend_23, dend_19, dend_18, dend_12, dend_11, dend_4, dend_3, dend_68, dend_67, dend_57, dend_56, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_29, dend_28, dend_6, dend_5, dend_44, dend_43]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_75, dend_60, dend_45, dend_20, dend_13, dend_0, axon_0, dend_83, dend_76, dend_70, dend_61, dend_53, dend_46, dend_30, dend_21, dend_15, dend_14, dend_8, dend_1, axon_1, dend_87, dend_84, dend_80, dend_77, dend_74, dend_71, dend_65, dend_62, dend_59, dend_54, dend_50, dend_47, dend_36, dend_31, dend_25, dend_22, dend_17, dend_16, dend_10, dend_9, dend_7, dend_2, dend_89, dend_88, dend_86, dend_85, dend_82, dend_81, dend_79, dend_78, dend_73, dend_72, dend_69, dend_66, dend_64, dend_63, dend_58, dend_55, dend_52, dend_51, dend_49, dend_48, dend_40, dend_37, dend_35, dend_32, dend_27, dend_26, dend_24, dend_23, dend_19, dend_18, dend_12, dend_11, dend_4, dend_3, dend_68, dend_67, dend_57, dend_56, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_29, dend_28, dend_6, dend_5, dend_44, dend_43]}
    ModelViewParmSubset_5 = new SectionList()
    dend_75 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_21 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_76 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_14 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_84 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_80 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_74 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_62 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_59 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_89 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_88 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_73 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_72 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_69 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_64 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_55 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_51 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_49 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_40 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_35 OneSecGrp_SectionRef_66.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_32 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_23 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_18 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_3 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_38 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_60 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_15 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_30 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_25 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_53 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_61 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_83 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_22 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_46 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_24 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_17 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_50 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_54 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_31 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_19 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_71 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_87 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_27 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_10 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_37 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_65 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_29 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_58 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_39 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_12 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_52 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_11 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_28 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_68 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_67 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_63 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_34 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_86 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_42 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_44 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_33 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_43 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_85 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_41 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_6 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_77 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_48 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_5 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_79 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_78 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_82 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_81 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_56 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_57 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_86, dend_86, dend_86, dend_86, dend_86, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_45 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_76 nseg = 5
    dend_14 nseg = 3
    dend_84 nseg = 5
    dend_80 nseg = 3
    dend_74 nseg = 5
    dend_62 nseg = 3
    dend_59 nseg = 3
    dend_47 nseg = 5
    dend_9 nseg = 3
    dend_7 nseg = 3
    dend_89 nseg = 3
    dend_88 nseg = 5
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 3
    dend_64 nseg = 3
    dend_55 nseg = 9
    dend_51 nseg = 3
    dend_49 nseg = 5
    dend_40 nseg = 3
    dend_35 nseg = 5
    dend_32 nseg = 3
    dend_26 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_4 nseg = 5
    dend_3 nseg = 5
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L1_HAC_a67a175a7c_0_0


