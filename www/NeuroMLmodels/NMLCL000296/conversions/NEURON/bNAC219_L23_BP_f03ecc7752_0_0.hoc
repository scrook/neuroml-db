// Cell: bNAC219_L23_BP_f03ecc7752_0_0
/*
{
  "id" : "bNAC219_L23_BP_f03ecc7752_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.626701, -11.1722, 12.601, 1.66", "-1.24601, -13.594, 14.6076, 1.66", "-2.30959, -17.7531, 18.0538, 1.39", "-6.53947, -34.2938, 31.7594, 1.11", "-7.28149, -37.1955, 34.1636, 1.11", "-8.22127, -40.8705, 37.2087, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.628991, 14.3402, 2.04868, 0.83", "0.632911, 16.4735, 2.97948, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.22127, -40.8705, 37.2087, 0.83", "-11.0574, -45.9212, 35.4658, 0.83", "-11.7326, -47.1239, 35.0508, 0.83", "-13.4564, -50.1938, 33.9914, 0.83", "-14.2292, -51.5699, 33.5165, 0.83", "-15.891, -54.5294, 32.4953, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.22127, -40.8705, 37.2087, 0.83", "-7.91468, -42.6997, 37.6348, 0.83", "-7.63097, -44.3571, 37.9954, 0.83", "-7.32137, -46.5451, 38.4217, 0.83", "-6.49452, -51.5293, 39.2858, 0.83", "-5.74311, -55.6317, 39.9503, 0.55", "-4.43155, -62.5942, 40.9247, 0.55", "-3.69197, -66.0337, 41.4636, 0.83", "-2.759, -69.946, 42.1067, 0.55", "-1.09705, -76.2881, 43.3967, 0.55", "-0.591307, -78.09, 43.797, 0.55", "0.788288, -82.9718, 44.9145, 0.55", "2.50784, -89.118, 46.488, 0.55", "3.52206, -92.798, 47.4722, 0.55", "4.81342, -97.7084, 48.8176, 0.55", "6.80339, -106.62, 51.2616, 0.55", "7.72372, -111.358, 52.5001, 0.55", "8.34735, -114.914, 53.3551, 0.55", "8.65992, -117.418, 53.8069, 0.55", "8.83372, -119.639, 54.13, 0.55", "8.97346, -124.131, 54.8277, 0.55", "8.98957, -126.39, 55.1832, 0.55", "8.96115, -129.84, 55.8636, 0.55", "8.88883, -134.461, 56.8461, 0.55", "8.68273, -141.142, 58.3439, 0.55", "8.51088, -147.146, 59.7876, 0.55", "8.28728, -152.39, 61.143, 0.83", "8.01629, -157.394, 62.605, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.632911, 16.4735, 2.97948, 0.83", "0.498386, 22.9008, -0.0838868, 0.83", "0.515909, 24.5943, -0.827431, 0.83", "0.535891, 26.67, -1.75977, 0.83", "0.578345, 28.3844, -2.47959, 0.83", "0.660286, 31.1261, -3.57281, 0.83", "0.814404, 34.7113, -4.92304, 0.83", "0.900516, 37.2603, -5.67102, 0.83", "1.01835, 40.0181, -6.52927, 0.83", "1.17734, 42.8492, -7.52411, 0.55", "1.22764, 43.7457, -7.84451, 0.55", "1.28938, 45.2798, -8.40231, 0.55", "1.46316, 48.4825, -9.5087, 0.55", "1.56623, 50.8063, -10.2824, 0.55", "1.87191, 56.6292, -12.2138, 0.55", "1.98271, 59.2578, -13.1981, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.632911, 16.4735, 2.97948, 0.83", "1.56121, 19.4291, 4.23755, 0.83", "2.21756, 21.7632, 5.30377, 0.83", "3.13118, 25.4486, 7.09424, 0.83", "3.96655, 29.0021, 8.84735, 0.83", "4.92088, 33.5024, 10.8508, 0.83", "5.6507, 36.8943, 12.2676, 0.83", "6.1083, 39.4628, 13.3276, 0.83", "6.59536, 42.2807, 14.3851, 0.83", "6.7027, 43.0483, 14.6227, 0.83", "8.01135, 51.8701, 16.8738, 0.83", "8.2699, 53.7455, 17.2189, 0.83", "8.62077, 56.2955, 17.5486, 0.83", "8.90981, 58.5032, 17.7785, 0.83", "9.21107, 61.0643, 17.994, 0.83", "9.61567, 64.2985, 18.273, 0.83", "9.94974, 67.6336, 18.5308, 0.83", "10.1741, 69.5379, 18.6872, 0.83", "10.6019, 72.4809, 18.9422, 0.83", "10.9733, 75.3762, 19.1893, 0.83", "11.4225, 78.4173, 19.4245, 0.83", "12.0008, 82.3921, 19.775, 0.83", "12.3577, 84.9897, 20.1241, 0.83", "12.5208, 86.4282, 20.3517, 0.83", "12.6582, 88.0569, 20.6862, 0.83", "12.8318, 90.4679, 21.3246, 0.83", "12.8887, 94.0138, 22.4577, 0.55", "12.9492, 98.6657, 24.139, 0.55", "12.8933, 100.036, 24.6432, 0.55", "12.7669, 102.92, 25.6841, 0.55", "12.6863, 104.129, 26.0959, 0.55", "12.4995, 106.398, 26.855, 0.55", "12.3683, 108.763, 27.5447, 0.55", "12.3631, 112.194, 28.3792, 0.55", "12.3735, 114.455, 28.8959, 0.55", "12.3598, 116.513, 29.292, 0.55", "12.413, 119.082, 29.7912, 0.55", "12.633, 121.754, 30.292, 0.55", "13.0308, 125.394, 31.0517, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.891, -54.5294, 32.4953, 0.83", "-18.0552, -59.8371, 34.724, 0.83", "-19.7253, -64.0491, 36.2865, 0.83", "-21.691, -69.1358, 37.9473, 0.83", "-23.3036, -73.344, 39.1752, 0.83", "-24.2837, -75.9014, 39.9214, 0.83", "-25.4522, -78.9506, 40.8111, 0.83", "-26.1906, -81.1641, 41.3062, 0.83", "-27.0108, -83.6943, 41.7592, 0.83", "-27.9223, -86.9446, 41.8597, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-15.891, -54.5294, 32.4953, 0.55", "-11.4677, -56.243, 40.4417, 0.55", "-6.47586, -58.079, 48.8015, 0.55", "-3.9401, -59.0116, 53.048, 0.55", "-0.746274, -60.1863, 58.3967, 0.28", "-0.218658, -60.3804, 59.2802, 0.83", "2.54922, -61.3984, 63.9155, 0.28", "3.06466, -61.5216, 64.6941, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "1.98271, 59.2578, -13.1981, 0.55", "2.57811, 62.9763, -13.3877, 0.55", "3.24077, 66.9044, -13.6924, 0.55", "3.70102, 69.6659, -13.8797, 0.55", "4.42778, 73.8104, -14.1272, 0.83", "4.94202, 76.7565, -14.2857, 0.55", "5.44575, 79.5034, -14.4141, 0.55", "5.9004, 82.0734, -14.4613, 1.11", "6.75365, 86.5349, -14.6675, 0.55", "7.00614, 88.0279, -14.776, 0.55", "7.3223, 89.9113, -14.9365, 1.11", "7.70709, 92.2486, -15.1558, 0.55", "7.9301, 93.7763, -15.3078, 1.11", "8.55363, 98.44, -15.7364, 0.55", "8.83944, 100.898, -16.155, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.98271, 59.2578, -13.1981, 0.28", "1.78698, 62.8767, -16.9355, 0.28", "1.78106, 63.4167, -17.4799, 0.55", "1.82678, 68.186, -22.0903, 0.28", "1.97636, 72.6213, -26.6398, 1.11", "2.11595, 74.9208, -29.1399, 0.28", "2.11595, 74.9208, -29.1399, 0.55", "2.6838, 77.6898, -31.5919, 0.28", "3.00977, 78.7425, -32.4136, 1.11", "5.47399, 83.3339, -34.6486, 0.55", "8.05122, 86.8598, -35.1763, 0.28", "12.5383, 92.3379, -35.2548, 1.11", "16.6159, 96.9627, -34.7623, 0.28", "16.7232, 97.0692, -34.7244, 0.55", "20.0575, 100.067, -33.0002, 0.28", "20.3735, 100.329, -32.7667, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-27.9223, -86.9446, 41.8597, 0.83", "-27.9982, -91.7105, 43.9536, 0.83", "-28.1464, -95.5154, 45.8869, 0.83", "-28.169, -97.2925, 46.8144, 0.83", "-28.2197, -98.3081, 47.432, 0.83", "-28.4487, -101.083, 49.1703, 0.83", "-28.5631, -102.735, 50.0766, 0.83", "-28.6677, -105.896, 51.4995, 0.83", "-28.6516, -108.083, 52.516, 0.83", "-28.4057, -111.817, 54.1713, 0.83", "-28.1439, -113.741, 54.9208, 0.83", "-27.2623, -118.508, 56.3419, 0.83", "-26.433, -122.786, 57.3272, 0.83", "-25.7562, -126.355, 57.8181, 0.83", "-25.3683, -128.952, 58.069, 0.83", "-25.2934, -129.478, 58.1012, 0.83", "-25.0235, -132.49, 58.4052, 0.28", "-25.0201, -133.287, 58.5269, 0.83", "-25.1318, -135.353, 58.7528, 0.28", "-25.3624, -139.032, 59.0864, 0.28", "-25.4281, -139.819, 59.1842, 0.28", "-25.6253, -142.328, 59.5189, 0.83", "-25.7545, -144.541, 59.8577, 0.28", "-25.8536, -146.313, 60.1557, 0.83", "-25.8871, -147.726, 60.446, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-27.9223, -86.9446, 41.8597, 0.55", "-29.7686, -93.3666, 39.6782, 0.55", "-30.6721, -96.1144, 38.7946, 0.55", "-32.7488, -101.935, 37.0299, 0.55", "-33.7121, -104.422, 36.3112, 0.55", "-34.75, -106.838, 35.6441, 0.28", "-35.2138, -107.919, 35.346, 0.55", "-36.5492, -110.405, 34.762, 0.28", "-37.4543, -112.017, 34.4157, 0.55", "-38.6687, -113.879, 34.1456, 0.28", "-40.6055, -116.681, 33.692, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BP_f03ecc7752_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.626701, -11.1722, 12.601, 1.66 ) }
    dend_5 { pt3dadd( -1.24601, -13.594, 14.6076, 1.66 ) }
    dend_5 { pt3dadd( -2.30959, -17.7531, 18.0538, 1.39 ) }
    dend_5 { pt3dadd( -6.53947, -34.2938, 31.7594, 1.11 ) }
    dend_5 { pt3dadd( -7.28149, -37.1955, 34.1636, 1.11 ) }
    dend_5 { pt3dadd( -8.22127, -40.8705, 37.2087, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.628991, 14.3402, 2.04868, 0.83 ) }
    dend_0 { pt3dadd( 0.632911, 16.4735, 2.97948, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.22127, -40.8705, 37.2087, 0.83 ) }
    dend_7 { pt3dadd( -11.0574, -45.9212, 35.4658, 0.83 ) }
    dend_7 { pt3dadd( -11.7326, -47.1239, 35.0508, 0.83 ) }
    dend_7 { pt3dadd( -13.4564, -50.1938, 33.9914, 0.83 ) }
    dend_7 { pt3dadd( -14.2292, -51.5699, 33.5165, 0.83 ) }
    dend_7 { pt3dadd( -15.891, -54.5294, 32.4953, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.22127, -40.8705, 37.2087, 0.83 ) }
    dend_6 { pt3dadd( -7.91468, -42.6997, 37.6348, 0.83 ) }
    dend_6 { pt3dadd( -7.63097, -44.3571, 37.9954, 0.83 ) }
    dend_6 { pt3dadd( -7.32137, -46.5451, 38.4217, 0.83 ) }
    dend_6 { pt3dadd( -6.49452, -51.5293, 39.2858, 0.83 ) }
    dend_6 { pt3dadd( -5.74311, -55.6317, 39.9503, 0.55 ) }
    dend_6 { pt3dadd( -4.43155, -62.5942, 40.9247, 0.55 ) }
    dend_6 { pt3dadd( -3.69197, -66.0337, 41.4636, 0.83 ) }
    dend_6 { pt3dadd( -2.759, -69.946, 42.1067, 0.55 ) }
    dend_6 { pt3dadd( -1.09705, -76.2881, 43.3967, 0.55 ) }
    dend_6 { pt3dadd( -0.591307, -78.09, 43.797, 0.55 ) }
    dend_6 { pt3dadd( 0.788288, -82.9718, 44.9145, 0.55 ) }
    dend_6 { pt3dadd( 2.50784, -89.118, 46.488, 0.55 ) }
    dend_6 { pt3dadd( 3.52206, -92.798, 47.4722, 0.55 ) }
    dend_6 { pt3dadd( 4.81342, -97.7084, 48.8176, 0.55 ) }
    dend_6 { pt3dadd( 6.80339, -106.62, 51.2616, 0.55 ) }
    dend_6 { pt3dadd( 7.72372, -111.358, 52.5001, 0.55 ) }
    dend_6 { pt3dadd( 8.34735, -114.914, 53.3551, 0.55 ) }
    dend_6 { pt3dadd( 8.65992, -117.418, 53.8069, 0.55 ) }
    dend_6 { pt3dadd( 8.83372, -119.639, 54.13, 0.55 ) }
    dend_6 { pt3dadd( 8.97346, -124.131, 54.8277, 0.55 ) }
    dend_6 { pt3dadd( 8.98957, -126.39, 55.1832, 0.55 ) }
    dend_6 { pt3dadd( 8.96115, -129.84, 55.8636, 0.55 ) }
    dend_6 { pt3dadd( 8.88883, -134.461, 56.8461, 0.55 ) }
    dend_6 { pt3dadd( 8.68273, -141.142, 58.3439, 0.55 ) }
    dend_6 { pt3dadd( 8.51088, -147.146, 59.7876, 0.55 ) }
    dend_6 { pt3dadd( 8.28728, -152.39, 61.143, 0.83 ) }
    dend_6 { pt3dadd( 8.01629, -157.394, 62.605, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.632911, 16.4735, 2.97948, 0.83 ) }
    dend_2 { pt3dadd( 0.498386, 22.9008, -0.0838868, 0.83 ) }
    dend_2 { pt3dadd( 0.515909, 24.5943, -0.827431, 0.83 ) }
    dend_2 { pt3dadd( 0.535891, 26.67, -1.75977, 0.83 ) }
    dend_2 { pt3dadd( 0.578345, 28.3844, -2.47959, 0.83 ) }
    dend_2 { pt3dadd( 0.660286, 31.1261, -3.57281, 0.83 ) }
    dend_2 { pt3dadd( 0.814404, 34.7113, -4.92304, 0.83 ) }
    dend_2 { pt3dadd( 0.900516, 37.2603, -5.67102, 0.83 ) }
    dend_2 { pt3dadd( 1.01835, 40.0181, -6.52927, 0.83 ) }
    dend_2 { pt3dadd( 1.17734, 42.8492, -7.52411, 0.55 ) }
    dend_2 { pt3dadd( 1.22764, 43.7457, -7.84451, 0.55 ) }
    dend_2 { pt3dadd( 1.28938, 45.2798, -8.40231, 0.55 ) }
    dend_2 { pt3dadd( 1.46316, 48.4825, -9.5087, 0.55 ) }
    dend_2 { pt3dadd( 1.56623, 50.8063, -10.2824, 0.55 ) }
    dend_2 { pt3dadd( 1.87191, 56.6292, -12.2138, 0.55 ) }
    dend_2 { pt3dadd( 1.98271, 59.2578, -13.1981, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.632911, 16.4735, 2.97948, 0.83 ) }
    dend_1 { pt3dadd( 1.56121, 19.4291, 4.23755, 0.83 ) }
    dend_1 { pt3dadd( 2.21756, 21.7632, 5.30377, 0.83 ) }
    dend_1 { pt3dadd( 3.13118, 25.4486, 7.09424, 0.83 ) }
    dend_1 { pt3dadd( 3.96655, 29.0021, 8.84735, 0.83 ) }
    dend_1 { pt3dadd( 4.92088, 33.5024, 10.8508, 0.83 ) }
    dend_1 { pt3dadd( 5.6507, 36.8943, 12.2676, 0.83 ) }
    dend_1 { pt3dadd( 6.1083, 39.4628, 13.3276, 0.83 ) }
    dend_1 { pt3dadd( 6.59536, 42.2807, 14.3851, 0.83 ) }
    dend_1 { pt3dadd( 6.7027, 43.0483, 14.6227, 0.83 ) }
    dend_1 { pt3dadd( 8.01135, 51.8701, 16.8738, 0.83 ) }
    dend_1 { pt3dadd( 8.2699, 53.7455, 17.2189, 0.83 ) }
    dend_1 { pt3dadd( 8.62077, 56.2955, 17.5486, 0.83 ) }
    dend_1 { pt3dadd( 8.90981, 58.5032, 17.7785, 0.83 ) }
    dend_1 { pt3dadd( 9.21107, 61.0643, 17.994, 0.83 ) }
    dend_1 { pt3dadd( 9.61567, 64.2985, 18.273, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.94974, 67.6336, 18.5308, 0.83 ) }
    dend_1 { pt3dadd( 10.1741, 69.5379, 18.6872, 0.83 ) }
    dend_1 { pt3dadd( 10.6019, 72.4809, 18.9422, 0.83 ) }
    dend_1 { pt3dadd( 10.9733, 75.3762, 19.1893, 0.83 ) }
    dend_1 { pt3dadd( 11.4225, 78.4173, 19.4245, 0.83 ) }
    dend_1 { pt3dadd( 12.0008, 82.3921, 19.775, 0.83 ) }
    dend_1 { pt3dadd( 12.3577, 84.9897, 20.1241, 0.83 ) }
    dend_1 { pt3dadd( 12.5208, 86.4282, 20.3517, 0.83 ) }
    dend_1 { pt3dadd( 12.6582, 88.0569, 20.6862, 0.83 ) }
    dend_1 { pt3dadd( 12.8318, 90.4679, 21.3246, 0.83 ) }
    dend_1 { pt3dadd( 12.8887, 94.0138, 22.4577, 0.55 ) }
    dend_1 { pt3dadd( 12.9492, 98.6657, 24.139, 0.55 ) }
    dend_1 { pt3dadd( 12.8933, 100.036, 24.6432, 0.55 ) }
    dend_1 { pt3dadd( 12.7669, 102.92, 25.6841, 0.55 ) }
    dend_1 { pt3dadd( 12.6863, 104.129, 26.0959, 0.55 ) }
    dend_1 { pt3dadd( 12.4995, 106.398, 26.855, 0.55 ) }
    dend_1 { pt3dadd( 12.3683, 108.763, 27.5447, 0.55 ) }
    dend_1 { pt3dadd( 12.3631, 112.194, 28.3792, 0.55 ) }
    dend_1 { pt3dadd( 12.3735, 114.455, 28.8959, 0.55 ) }
    dend_1 { pt3dadd( 12.3598, 116.513, 29.292, 0.55 ) }
    dend_1 { pt3dadd( 12.413, 119.082, 29.7912, 0.55 ) }
    dend_1 { pt3dadd( 12.633, 121.754, 30.292, 0.55 ) }
    dend_1 { pt3dadd( 13.0308, 125.394, 31.0517, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.891, -54.5294, 32.4953, 0.83 ) }
    dend_9 { pt3dadd( -18.0552, -59.8371, 34.724, 0.83 ) }
    dend_9 { pt3dadd( -19.7253, -64.0491, 36.2865, 0.83 ) }
    dend_9 { pt3dadd( -21.691, -69.1358, 37.9473, 0.83 ) }
    dend_9 { pt3dadd( -23.3036, -73.344, 39.1752, 0.83 ) }
    dend_9 { pt3dadd( -24.2837, -75.9014, 39.9214, 0.83 ) }
    dend_9 { pt3dadd( -25.4522, -78.9506, 40.8111, 0.83 ) }
    dend_9 { pt3dadd( -26.1906, -81.1641, 41.3062, 0.83 ) }
    dend_9 { pt3dadd( -27.0108, -83.6943, 41.7592, 0.83 ) }
    dend_9 { pt3dadd( -27.9223, -86.9446, 41.8597, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -15.891, -54.5294, 32.4953, 0.55 ) }
    dend_8 { pt3dadd( -11.4677, -56.243, 40.4417, 0.55 ) }
    dend_8 { pt3dadd( -6.47586, -58.079, 48.8015, 0.55 ) }
    dend_8 { pt3dadd( -3.9401, -59.0116, 53.048, 0.55 ) }
    dend_8 { pt3dadd( -0.746274, -60.1863, 58.3967, 0.28 ) }
    dend_8 { pt3dadd( -0.218658, -60.3804, 59.2802, 0.83 ) }
    dend_8 { pt3dadd( 2.54922, -61.3984, 63.9155, 0.28 ) }
    dend_8 { pt3dadd( 3.06466, -61.5216, 64.6941, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 1.98271, 59.2578, -13.1981, 0.55 ) }
    dend_4 { pt3dadd( 2.57811, 62.9763, -13.3877, 0.55 ) }
    dend_4 { pt3dadd( 3.24077, 66.9044, -13.6924, 0.55 ) }
    dend_4 { pt3dadd( 3.70102, 69.6659, -13.8797, 0.55 ) }
    dend_4 { pt3dadd( 4.42778, 73.8104, -14.1272, 0.83 ) }
    dend_4 { pt3dadd( 4.94202, 76.7565, -14.2857, 0.55 ) }
    dend_4 { pt3dadd( 5.44575, 79.5034, -14.4141, 0.55 ) }
    dend_4 { pt3dadd( 5.9004, 82.0734, -14.4613, 1.11 ) }
    dend_4 { pt3dadd( 6.75365, 86.5349, -14.6675, 0.55 ) }
    dend_4 { pt3dadd( 7.00614, 88.0279, -14.776, 0.55 ) }
    dend_4 { pt3dadd( 7.3223, 89.9113, -14.9365, 1.11 ) }
    dend_4 { pt3dadd( 7.70709, 92.2486, -15.1558, 0.55 ) }
    dend_4 { pt3dadd( 7.9301, 93.7763, -15.3078, 1.11 ) }
    dend_4 { pt3dadd( 8.55363, 98.44, -15.7364, 0.55 ) }
    dend_4 { pt3dadd( 8.83944, 100.898, -16.155, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.98271, 59.2578, -13.1981, 0.28 ) }
    dend_3 { pt3dadd( 1.78698, 62.8767, -16.9355, 0.28 ) }
    dend_3 { pt3dadd( 1.78106, 63.4167, -17.4799, 0.55 ) }
    dend_3 { pt3dadd( 1.82678, 68.186, -22.0903, 0.28 ) }
    dend_3 { pt3dadd( 1.97636, 72.6213, -26.6398, 1.11 ) }
    dend_3 { pt3dadd( 2.11595, 74.9208, -29.1399, 0.28 ) }
    dend_3 { pt3dadd( 2.11595, 74.9208, -29.1399, 0.55 ) }
    dend_3 { pt3dadd( 2.6838, 77.6898, -31.5919, 0.28 ) }
    dend_3 { pt3dadd( 3.00977, 78.7425, -32.4136, 1.11 ) }
    dend_3 { pt3dadd( 5.47399, 83.3339, -34.6486, 0.55 ) }
    dend_3 { pt3dadd( 8.05122, 86.8598, -35.1763, 0.28 ) }
    dend_3 { pt3dadd( 12.5383, 92.3379, -35.2548, 1.11 ) }
    dend_3 { pt3dadd( 16.6159, 96.9627, -34.7623, 0.28 ) }
    dend_3 { pt3dadd( 16.7232, 97.0692, -34.7244, 0.55 ) }
    dend_3 { pt3dadd( 20.0575, 100.067, -33.0002, 0.28 ) }
    dend_3 { pt3dadd( 20.3735, 100.329, -32.7667, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -27.9223, -86.9446, 41.8597, 0.83 ) }
    dend_11 { pt3dadd( -27.9982, -91.7105, 43.9536, 0.83 ) }
    dend_11 { pt3dadd( -28.1464, -95.5154, 45.8869, 0.83 ) }
    dend_11 { pt3dadd( -28.169, -97.2925, 46.8144, 0.83 ) }
    dend_11 { pt3dadd( -28.2197, -98.3081, 47.432, 0.83 ) }
    dend_11 { pt3dadd( -28.4487, -101.083, 49.1703, 0.83 ) }
    dend_11 { pt3dadd( -28.5631, -102.735, 50.0766, 0.83 ) }
    dend_11 { pt3dadd( -28.6677, -105.896, 51.4995, 0.83 ) }
    dend_11 { pt3dadd( -28.6516, -108.083, 52.516, 0.83 ) }
    dend_11 { pt3dadd( -28.4057, -111.817, 54.1713, 0.83 ) }
    dend_11 { pt3dadd( -28.1439, -113.741, 54.9208, 0.83 ) }
    dend_11 { pt3dadd( -27.2623, -118.508, 56.3419, 0.83 ) }
    dend_11 { pt3dadd( -26.433, -122.786, 57.3272, 0.83 ) }
    dend_11 { pt3dadd( -25.7562, -126.355, 57.8181, 0.83 ) }
    dend_11 { pt3dadd( -25.3683, -128.952, 58.069, 0.83 ) }
    dend_11 { pt3dadd( -25.2934, -129.478, 58.1012, 0.83 ) }
    dend_11 { pt3dadd( -25.0235, -132.49, 58.4052, 0.28 ) }
    dend_11 { pt3dadd( -25.0201, -133.287, 58.5269, 0.83 ) }
    dend_11 { pt3dadd( -25.1318, -135.353, 58.7528, 0.28 ) }
    dend_11 { pt3dadd( -25.3624, -139.032, 59.0864, 0.28 ) }
    dend_11 { pt3dadd( -25.4281, -139.819, 59.1842, 0.28 ) }
    dend_11 { pt3dadd( -25.6253, -142.328, 59.5189, 0.83 ) }
    dend_11 { pt3dadd( -25.7545, -144.541, 59.8577, 0.28 ) }
    dend_11 { pt3dadd( -25.8536, -146.313, 60.1557, 0.83 ) }
    dend_11 { pt3dadd( -25.8871, -147.726, 60.446, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -27.9223, -86.9446, 41.8597, 0.55 ) }
    dend_10 { pt3dadd( -29.7686, -93.3666, 39.6782, 0.55 ) }
    dend_10 { pt3dadd( -30.6721, -96.1144, 38.7946, 0.55 ) }
    dend_10 { pt3dadd( -32.7488, -101.935, 37.0299, 0.55 ) }
    dend_10 { pt3dadd( -33.7121, -104.422, 36.3112, 0.55 ) }
    dend_10 { pt3dadd( -34.75, -106.838, 35.6441, 0.28 ) }
    dend_10 { pt3dadd( -35.2138, -107.919, 35.346, 0.55 ) }
    dend_10 { pt3dadd( -36.5492, -110.405, 34.762, 0.28 ) }
    dend_10 { pt3dadd( -37.4543, -112.017, 34.4157, 0.55 ) }
    dend_10 { pt3dadd( -38.6687, -113.879, 34.1456, 0.28 ) }
    dend_10 { pt3dadd( -40.6055, -116.681, 33.692, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BP_f03ecc7752_0_0


