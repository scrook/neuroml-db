// Cell: bIR215_L4_BTC_7ea9933f77_0_0
/*
{
  "id" : "bIR215_L4_BTC_7ea9933f77_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.465097, 8.04727, -0.0175891, 2.59198", "0.424424, 7.2054, -0.0170165, 4.38773", "0.383751, 6.36352, -0.0164438, 5.44399", "0.343077, 5.52165, -0.0158711, 6.50025", "0.302404, 4.67978, -0.0152984, 7.50099", "0.261731, 3.83791, -0.0147257, 8.3937", "0.221058, 2.99604, -0.014153, 9.3444", "0.180384, 2.15416, -0.0135803, 10.2953", "0.139711, 1.31229, -0.0130077, 10.7907", "0.0990378, 0.470419, -0.012435, 10.75", "0.0583646, -0.371454, -0.0118623, 10.6053", "0.0176913, -1.21333, -0.0112896, 10.4607", "-0.0229819, -2.0552, -0.0107169, 10.316", "-0.0636552, -2.89707, -0.0101442, 9.78436", "-0.104328, -3.73894, -0.00957155, 9.07182", "-0.145002, -4.58081, -0.00899886, 8.12082", "-0.185675, -5.42269, -0.00842618, 7.10426", "-0.226348, -6.26456, -0.00785349, 5.9023", "-0.267021, -7.10643, -0.0072808, 4.68096", "-0.307695, -7.9483, -0.00670812, 3.08046", "-0.348368, -8.79018, -0.00613543, 1.81235" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.46257, 6.73541, -0.101719, 1.82", "-1.58508, 7.36767, 1.04194, 1.82", "-1.66791, 7.68892, 1.56862, 1.82", "-1.88237, 8.43053, 2.63057, 1.68", "-2.10979, 9.17893, 3.62859, 1.82", "-2.10979, 9.17893, 3.62859, 1.96", "-2.34598, 9.95617, 4.66507, 1.4", "-2.50054, 10.3224, 5.13009, 1.26", "-2.69522, 10.6989, 5.59012, 1.4", "-2.69522, 10.6989, 5.59012, 1.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.682563, -8.18459, 0.898281, 2.1", "-0.25202, -9.01864, 1.56247, 2.1", "0.150517, -10.0958, 2.17736, 1.96", "0.335689, -10.7143, 2.43975, 2.1", "0.4109, -10.9972, 2.53784, 1.96", "0.526511, -11.5855, 2.70845, 1.82", "0.615988, -12.2476, 2.87306, 1.68", "0.646709, -12.9414, 2.93106, 1.54", "0.628879, -13.5615, 2.93106, 1.4", "0.612141, -13.8621, 2.93106, 1.4", "0.566891, -14.5575, 2.93106, 2.38", "0.539918, -14.9878, 2.93106, 2.24", "0.524396, -15.6079, 2.93106, 2.38", "0.535851, -16.2312, 2.93106, 2.24", "0.554494, -16.8512, 2.93106, 2.1", "0.584266, -17.2909, 2.93106, 1.96", "0.623025, -17.6002, 2.93106, 1.82", "0.697875, -18.2052, 2.93106, 1.54", "0.766087, -18.8218, 2.93106, 1.68", "0.805192, -19.2592, 2.96896, 1.82", "0.845208, -19.8744, 3.06107, 1.68", "0.88097, -20.4721, 3.17552, 1.68", "0.897182, -21.1397, 3.37498, 1.82", "0.899365, -21.7187, 3.59768, 1.82", "0.88009, -22.8726, 4.20076, 1.82", "0.872975, -23.4706, 4.5626, 1.68", "0.868235, -23.7298, 4.73564, 1.68", "0.85171, -24.6934, 5.42984, 1.12", "0.834835, -25.1919, 5.79863, 0.98", "0.761583, -26.2673, 6.53953, 1.12", "0.709842, -26.8046, 6.84509, 0.98", "0.678372, -27.083, 6.98156, 1.12", "0.678372, -27.083, 6.98156, 1.26", "0.616635, -27.7595, 7.09954, 1.26", "0.570555, -28.454, 7.16305, 1.12", "0.565432, -28.8851, 7.16305, 0.98", "0.597509, -29.5046, 7.16305, 1.12", "0.666785, -30.124, 7.16305, 1.26", "0.763854, -30.7367, 7.16305, 1.4", "0.910679, -31.3316, 7.16305, 1.26", "1.09637, -31.9235, 7.16305, 1.4", "1.24903, -32.337, 7.16305, 1.4", "1.24903, -32.337, 7.16305, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.348368, -8.79018, -0.00613543, 0.28", "-1.07222, -23.7727, -0.00613543, 0.28", "-1.79606, -38.7552, -0.00613543, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.69522, 10.6989, 5.59012, 0.84", "-2.88783, 11.1188, 5.26013, 0.84", "-3.24529, 11.9356, 4.71541, 0.7", "-3.42159, 12.3551, 4.47799, 0.84", "-3.76039, 13.2336, 4.0251, 0.98", "-3.92957, 13.6736, 3.82208, 1.12", "-4.09509, 14.1002, 3.61561, 1.26", "-4.26604, 14.5412, 3.41603, 1.4", "-4.44849, 14.9896, 3.2532, 1.54", "-4.54494, 15.2204, 3.19571, 1.68", "-4.7662, 15.7498, 3.18199, 1.68", "-5.16738, 16.7085, 3.28923, 1.54", "-5.38191, 17.2202, 3.40916, 1.4", "-5.57946, 17.6678, 3.56454, 1.4", "-6.0164, 18.5633, 3.87891, 1.26", "-6.46647, 19.3704, 4.07397, 1.12", "-6.74384, 19.7993, 4.07192, 0.98", "-6.74384, 19.7993, 4.07192, 0.98", "-7.01622, 20.0301, 3.62253, 0.7", "-7.44836, 20.4182, 2.83352, 0.56", "-7.88808, 20.8614, 1.95589, 0.42", "-8.25456, 21.2882, 1.15577, 0.56", "-8.86186, 22.1451, -0.377633, 0.56", "-9.00208, 22.399, -0.798069, 1.26", "-9.13585, 22.7109, -1.24972, 1.12", "-9.25195, 23.0962, -1.66121, 0.98", "-9.3469, 23.5756, -1.96204, 0.84", "-9.50934, 24.5343, -2.06744, 0.7", "-9.55344, 24.7789, -2.0031, 0.84", "-9.84573, 25.7845, -1.50378, 0.1", "-10.2172, 26.4152, -0.848151, 0.1", "-10.3689, 26.5744, -0.569451, 0.14", "-10.3689, 26.5744, -0.569451, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.69522, 10.6989, 5.59012, 3.22", "-2.50369, 10.9487, 5.38325, 3.22", "-2.24109, 11.3709, 5.05439, 3.08", "-1.80063, 12.2158, 4.47032, 2.94", "-1.67481, 12.5113, 4.29003, 2.8", "-1.49156, 12.9796, 3.98308, 2.66", "-1.16825, 13.8774, 3.39958, 2.52", "-1.04104, 14.3162, 3.12571, 2.38", "-0.927397, 14.8176, 2.84043, 2.24", "-0.839527, 15.2944, 2.61986, 2.1", "-0.694111, 16.1597, 2.17782, 1.96", "-0.609604, 16.679, 1.8952, 0.28", "-0.510175, 17.1946, 1.63467, 0.42", "-0.433408, 17.5155, 1.45299, 0.56", "-0.303574, 18.0026, 1.15042, 0.7", "-0.0630682, 18.7813, 0.670635, 0.84", "-0.00175463, 19.0178, 0.571215, 0.84" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.24903, -32.337, 7.16305, 1.4", "1.33635, -32.6536, 7.16071, 1.4", "1.47689, -33.2921, 7.15707, 1.54", "1.56413, -33.9052, 6.94731, 1.68", "1.58938, -34.1528, 6.73287, 1.54", "1.61667, -34.6437, 6.30193, 1.4", "1.61667, -34.6437, 6.30193, 1.54", "1.62793, -35.0343, 6.04031, 1.4", "1.64642, -36.2012, 5.38426, 1.26", "1.68123, -37.4259, 4.86213, 1.12", "1.70497, -38.1308, 4.65665, 0.98", "1.73829, -38.7728, 4.53795, 0.84", "1.83315, -40.1227, 4.30884, 0.7", "1.85697, -40.4479, 4.26846, 0.56", "1.8879, -41.1003, 4.23956, 0.56", "1.91733, -41.8338, 4.21312, 0.7", "1.93411, -42.4641, 4.08945, 0.84", "1.95418, -43.7359, 3.67659, 0.98", "1.96508, -44.1642, 3.49703, 0.56", "1.97396, -44.8538, 3.24415, 0.7", "1.98329, -45.4781, 3.09235, 0.84", "2.03637, -46.8509, 2.97847, 0.84", "2.07681, -47.5006, 3.03986, 0.98", "2.13732, -48.134, 3.20359, 1.12", "2.29999, -49.3139, 3.59583, 0.56", "2.51266, -50.5399, 4.09011, 0.42", "2.6282, -51.1262, 4.35546, 0.42", "2.76142, -51.7161, 4.61208, 0.56", "2.83284, -52.0199, 4.70423, 0.7", "2.91277, -52.3374, 4.73143, 1.12", "3.08123, -52.9504, 4.6176, 1.26", "3.24281, -53.5505, 4.4146, 1.12", "3.55357, -54.689, 4.13885, 1.12", "3.55357, -54.689, 4.13885, 1.12", "3.61569, -55.0084, 4.13667, 1.12", "3.70254, -55.6573, 4.19144, 0.98", "3.7598, -56.2997, 4.29882, 1.12", "3.84179, -57.5645, 4.71298, 1.12", "3.88282, -58.2394, 5.00543, 1.26", "3.92631, -58.9092, 5.30377, 1.26", "3.95611, -59.3236, 5.4877, 1.4", "3.97351, -59.6185, 5.62419, 1.4", "4.03371, -60.7195, 6.12701, 1.26", "4.07749, -61.3287, 6.36025, 1.26", "4.16403, -61.9206, 6.63198, 1.26", "4.29405, -62.4881, 6.92949, 1.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.24903, -32.337, 7.16305, 2.24", "0.87408, -32.6938, 6.13109, 2.24", "0.5717, -33.0683, 5.0832, 2.38", "0.268961, -33.4433, 4.03406, 2.52", "0.19468, -33.5352, 3.77665, 2.38", "-0.115661, -33.9196, 2.70116, 2.24", "-0.400066, -34.2718, 1.71557, 2.1", "-0.610016, -34.6559, 0.766578, 1.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.79606, -38.7552, -0.00613543, 0.28", "-2.51991, -53.7378, -0.00613543, 0.28", "-3.24376, -68.7203, -0.00613543, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-10.3689, 26.5744, -0.569451, 0.28", "-10.6452, 27.7199, -1.16298, 0.28", "-11.0125, 28.9434, -1.46425, 0.42", "-11.2123, 29.5546, -1.53981, 0.56", "-11.4226, 30.1632, -1.56204, 0.56", "-11.5315, 30.468, -1.55729, 0.56", "-11.981, 31.7056, -1.50251, 0.56", "-12.2025, 32.3, -1.37263, 0.7", "-12.2025, 32.3, -1.37263, 0.7", "-12.4002, 32.8853, -1.23384, 0.56", "-12.5703, 33.5068, -1.17067, 0.42", "-12.7102, 34.1355, -1.18903, 0.28", "-12.8392, 34.8402, -1.29291, 0.14", "-12.9351, 35.4468, -1.44713, 0.1", "-13.0266, 36.0543, -1.64134, 0.1", "-13.1517, 37.18, -2.13954, 0.14", "-13.1996, 37.7489, -2.44495, 0.84", "-13.2403, 38.3, -2.77623, 0.7", "-13.3198, 39.3886, -3.50783, 0.56", "-13.3487, 39.9089, -3.88678, 0.7", "-13.404, 40.9884, -4.71154, 0.84", "-13.404, 40.9884, -4.71154, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-10.3689, 26.5744, -0.569451, 0.56", "-10.6907, 26.7235, -1.64121, 0.56", "-10.971, 26.8811, -2.61468, 0.42", "-11.46, 27.1964, -4.47389, 0.28", "-11.703, 27.3701, -5.45785, 0.14", "-12.1708, 27.7289, -7.31389, 0.28", "-12.415, 27.9324, -8.25406, 0.42", "-12.6789, 28.1888, -9.28076, 0.56", "-13.1522, 28.7456, -11.0665, 0.42", "-13.4022, 29.1041, -11.9575, 0.56", "-13.5538, 29.353, -12.4764, 0.84", "-13.7081, 29.6279, -12.9124, 0.7", "-13.8894, 29.932, -13.314, 0.56", "-14.1042, 30.2482, -13.6926, 0.42", "-14.5727, 30.8629, -14.3142, 0.56", "-14.6994, 31.0125, -14.4946, 0.7", "-14.9815, 31.2969, -14.9347, 1.12", "-15.5338, 31.7268, -15.816, 0.98", "-16.0281, 31.9851, -16.6799, 0.84", "-16.3265, 32.0804, -17.1858, 0.7", "-16.8442, 32.1734, -18.0275, 0.84", "-17.0486, 32.1997, -18.3373, 0.56", "-17.3833, 32.2132, -18.839, 0.42", "-18.0489, 32.244, -19.7097, 0.56", "-18.5482, 32.2994, -20.2762, 0.28", "-19.2687, 32.4521, -20.9939, 0.14", "-19.8359, 32.6448, -21.4492, 0.1", "-20.615, 33.0301, -21.9987, 0.14", "-21.0637, 33.3225, -22.2739, 0.28", "-21.3495, 33.5293, -22.4164, 0.14", "-21.7885, 33.874, -22.6229, 0.1", "-22.0682, 34.1176, -22.7072, 0.14", "-22.4423, 34.4907, -22.7941, 0.84", "-22.6945, 34.7753, -22.7836, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-0.00175463, 19.0178, 0.571215, 1.4", "-0.00876063, 20.5122, 0.614892, 1.4", "-0.07624, 21.2888, 0.536444, 1.4", "-0.180961, 22.044, 0.300164, 1.26", "-0.290886, 22.7014, 0.0498094, 1.12", "-0.351306, 23.0249, -0.0764822, 0.98", "-0.619437, 24.359, -0.579459, 0.84", "-0.764862, 24.9754, -0.868651, 0.7", "-1.09822, 26.2924, -1.48977, 0.56", "-1.24741, 26.926, -1.7694, 0.56", "-1.36524, 27.5833, -2.01603, 0.42", "-1.43922, 28.2495, -2.20458, 0.56", "-1.44819, 28.6012, -2.25863, 0.7", "-1.41955, 29.3093, -2.32599, 0.56", "-1.33641, 30.103, -2.34556, 0.56", "-1.18522, 30.871, -2.31219, 0.7", "-1.05735, 31.3621, -2.26541, 0.56", "-0.831322, 32.1059, -2.1683, 0.56", "-0.592586, 32.8589, -2.05316, 0.56", "-0.434237, 33.3188, -1.97671, 0.42", "0.103586, 34.8326, -1.80198, 0.56", "0.364326, 35.5728, -1.76211, 0.7", "0.535898, 36.046, -1.77037, 0.56", "0.815396, 36.7746, -1.84046, 0.42", "1.09452, 37.4959, -2.03783, 0.28", "1.53058, 38.6355, -2.52349, 0.14", "1.77862, 39.2812, -2.89137, 0.56", "2.05256, 39.9451, -3.23451, 0.42", "2.23642, 40.369, -3.42195, 0.56", "2.89537, 41.7911, -3.78585, 0.7", "3.11333, 42.2445, -3.80507, 0.56", "3.32368, 42.6966, -3.73596, 0.42", "3.9099, 44.0255, -3.41069, 0.98", "4.0851, 44.4856, -3.30578, 0.98", "4.56936, 45.8606, -3.01155, 0.84", "4.71827, 46.344, -2.95057, 0.84", "4.91808, 47.1136, -2.98812, 0.98", "5.07704, 47.8744, -3.1041, 0.84", "5.33354, 49.3198, -3.38051, 0.7", "5.41204, 49.8044, -3.41654, 0.56", "5.65939, 51.2785, -3.38569, 0.7", "5.65939, 51.2785, -3.38569, 0.84", "5.96398, 52.5264, -2.71136, 0.84", "6.31634, 53.7054, -1.87407, 0.7", "6.66632, 54.6448, -1.02585, 0.56", "6.77605, 54.8898, -0.792083, 0.56", "7.07032, 55.4012, -0.257799, 0.98", "7.42124, 55.917, 0.219997, 0.84", "7.61453, 56.1538, 0.402383, 0.98", "8.46337, 57.0432, 0.975737, 0.42", "8.98427, 57.5698, 1.267, 0.56", "9.93971, 58.5759, 1.80804, 0.7", "10.4318, 59.1237, 2.08668, 0.56", "10.6363, 59.3932, 2.1974, 0.7", "10.9644, 60.0033, 2.36135, 0.84", "11.1675, 60.6654, 2.43342, 0.56", "11.2766, 61.3679, 2.47079, 0.42", "11.3112, 62.0755, 2.46072, 0.28", "11.3149, 62.8714, 2.45599, 0.42", "11.3077, 63.5652, 2.39868, 0.56", "11.3045, 64.2694, 2.29401, 0.7", "11.3223, 64.6171, 2.21991, 0.56", "11.4046, 65.3849, 2.01757, 0.84", "11.537, 66.124, 1.79395, 0.84", "11.8652, 67.3807, 1.38113, 0.7", "12.1131, 68.0829, 1.13741, 0.56", "12.3906, 68.7898, 0.898998, 0.7", "12.5661, 69.237, 0.765767, 0.7", "12.8592, 69.9556, 0.589034, 0.84", "13.1462, 70.6648, 0.402841, 0.7", "13.2661, 70.9963, 0.353885, 0.56", "13.4674, 71.6789, 0.332541, 0.42", "13.6135, 72.4481, 0.400014, 0.28", "13.6781, 73.2283, 0.543588, 0.14", "13.6442, 74.543, 0.88519, 0.28", "13.5259, 75.9747, 1.31237, 0.1", "13.3983, 77.3488, 1.73445, 0.1", "13.348, 78.0277, 1.94271, 0.1", "13.3281, 78.3659, 2.04047, 0.14", "13.2989, 79.0537, 2.22193, 0.84", "13.2987, 79.832, 2.39881, 0.7", "13.3308, 80.6131, 2.45206, 0.7", "13.385, 81.4094, 2.4379, 0.56", "13.4494, 82.19, 2.4219, 0.56", "13.4805, 82.5446, 2.41428, 0.7", "13.5135, 82.8989, 2.40631, 0.84", "13.5571, 83.6059, 2.39457, 0.56", "13.591, 84.3885, 2.38426, 0.42", "13.6219, 85.0962, 2.37488, 0.56", "13.6651, 85.8909, 2.36278, 0.42", "13.7063, 86.6756, 2.35109, 0.28", "13.7293, 87.3871, 2.34318, 0.42", "13.746, 88.1851, 2.33599, 0.28", "13.7493, 88.6774, 2.33288, 0.42", "13.7402, 89.4756, 2.33053, 0.56", "13.7117, 90.187, 2.33223, 0.56", "13.6489, 90.8803, 2.34046, 0.42", "13.5509, 91.5853, 2.35518, 0.56", "13.3894, 92.3666, 2.3814, 0.7", "13.1997, 93.0523, 2.35524, 0.84", "13.1997, 93.0523, 2.35524, 0.7", "12.9582, 93.7924, 2.23788, 0.28", "12.7573, 94.4591, 2.10717, 0.14", "12.5707, 95.1187, 1.96642, 0.1", "12.187, 96.4598, 1.57394, 0.14", "12.0107, 97.1139, 1.35539, 0.28", "11.8343, 97.829, 1.04746, 0.42", "11.6876, 98.5339, 0.738434, 0.56", "11.5636, 99.1778, 0.47049, 0.56", "11.3184, 100.524, -0.0111024, 0.56", "11.1978, 101.2, -0.183999, 0.56", "10.9449, 102.458, -0.457756, 0.7", "10.6057, 103.826, -0.802629, 1.12", "10.406, 104.485, -0.968924, 0.98", "10.1877, 105.148, -1.11118, 0.84", "9.93969, 105.805, -1.19876, 0.7", "9.66629, 106.44, -1.28092, 0.56", "9.12282, 107.559, -1.50949, 0.42", "8.76066, 108.235, -1.75294, 0.28", "8.44248, 108.824, -1.94376, 0.14", "8.09206, 109.526, -2.12641, 0.1", "7.83378, 110.17, -2.17932, 0.1", "7.46755, 111.564, -2.03005, 0.14", "7.46755, 111.564, -2.03005, 0.28", "7.40317, 112.95, -1.60433, 0.28", "7.43057, 113.706, -1.34975, 0.42", "7.5813, 115.106, -0.872377, 0.56", "7.69192, 115.856, -0.623261, 0.56", "7.74404, 116.192, -0.516948, 0.7", "7.8511, 116.951, -0.352175, 0.7", "7.93934, 117.74, -0.271949, 0.56", "8.00071, 118.521, -0.284958, 0.42", "8.02773, 119.311, -0.393857, 0.28", "8.02587, 120.012, -0.517887, 0.42", "7.98334, 120.769, -0.725365, 0.28", "7.91391, 121.437, -0.961373, 0.14", "7.72646, 122.689, -1.46688, 0.1", "7.61944, 123.325, -1.73854, 0.1", "7.51509, 123.97, -2.01209, 0.14", "7.3158, 125.306, -2.54056, 0.28", "7.21726, 126.056, -2.79575, 0.14", "7.14493, 126.73, -2.97139, 0.28", "7.08253, 127.515, -3.09654, 0.42", "7.04149, 128.304, -3.19397, 0.42", "7.0267, 128.999, -3.24434, 0.28", "7.03506, 129.795, -3.24995, 0.42", "7.05125, 130.503, -3.25657, 0.56", "7.08922, 131.285, -3.26764, 0.56", "7.10521, 131.637, -3.27242, 0.7", "7.13459, 132.433, -3.28195, 0.56", "7.15408, 133.218, -3.28959, 0.42", "7.13762, 134.012, -3.34717, 0.56", "7.08746, 134.79, -3.44283, 0.7", "7.00614, 135.489, -3.5545, 0.84", "6.90598, 136.178, -3.68332, 0.7", "6.7785, 136.863, -3.83069, 0.84", "6.495, 138.246, -4.1551, 0.7", "6.36307, 138.926, -4.3189, 0.56", "6.31256, 139.266, -4.39979, 0.56", "6.28368, 140.031, -4.56613, 0.7", "6.28368, 140.031, -4.56613, 0.56", "6.38985, 140.822, -4.5873, 0.14", "6.53146, 141.587, -4.49231, 0.1", "6.61065, 142.075, -4.40219, 0.1", "6.71136, 143.047, -4.17874, 0.1", "6.72009, 143.391, -4.08724, 0.14", "6.62907, 144.809, -3.80596, 0.28", "6.5697, 145.157, -3.75882, 0.42", "6.35441, 145.914, -3.78205, 0.56", "6.11865, 146.561, -3.96144, 0.7", "5.87342, 147.165, -4.20777, 0.56", "5.41341, 148.394, -4.82626, 0.42", "5.22069, 148.975, -5.18295, 0.28", "4.8728, 150.174, -5.92121, 0.42", "4.59887, 151.323, -6.59681, 0.56", "4.32727, 152.599, -7.22747, 0.56", "4.15542, 153.301, -7.52897, 0.42", "4.06567, 153.633, -7.62355, 0.28", "3.83435, 154.366, -7.79031, 0.1", "3.60265, 155.033, -7.88654, 0.1", "3.34854, 155.687, -7.98046, 0.1", "2.75776, 157.017, -8.31892, 0.1", "2.44409, 157.63, -8.48579, 0.1", "2.11981, 158.229, -8.64465, 0.14", "1.80067, 158.843, -8.79861, 0.28", "1.63932, 159.145, -8.89527, 0.42", "1.33528, 159.741, -9.08766, 0.56", "1.02003, 160.439, -9.26864, 0.84", "0.745608, 161.06, -9.44104, 0.7", "0.477701, 161.694, -9.60758, 0.56", "-0.0485143, 163.01, -9.9096, 0.42", "-0.29695, 163.664, -10.0392, 0.28", "-0.527069, 164.331, -10.1057, 0.14", "-0.721603, 165.016, -10.114, 0.28", "-0.874051, 165.693, -10.0584, 0.42", "-0.980052, 166.387, -9.93963, 0.56", "-1.01309, 166.727, -9.85372, 0.56", "-1.07789, 168.133, -9.50049, 0.56", "-1.07283, 168.91, -9.31913, 0.42", "-1.03997, 169.686, -9.218, 0.56", "-0.98574, 170.482, -9.18745, 0.42", "-0.924848, 171.179, -9.1972, 0.28", "-0.878183, 171.678, -9.24554, 0.14", "-0.808997, 172.45, -9.43833, 0.14", "-0.70211, 173.864, -9.88494, 0.28", "-0.70211, 173.864, -9.88494, 0.42" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.00175463, 19.0178, 0.571215, 1.26", "0.677219, 19.4144, 0.283583, 1.26", "0.910725, 19.5305, 0.176336, 1.4", "1.25819, 19.7143, -0.0235115, 1.54", "1.56372, 19.8902, -0.205485, 1.4", "2.13434, 20.2249, -0.526866, 1.26", "2.75754, 20.6224, -0.861885, 1.12", "3.06099, 20.8156, -1.03382, 0.98", "3.7327, 21.2683, -1.42881, 0.84", "3.9393, 21.417, -1.55003, 0.7", "4.2202, 21.6517, -1.7031, 0.56", "4.5261, 21.9488, -1.83291, 0.7", "4.81434, 22.276, -1.92782, 0.56", "5.33063, 22.9125, -2.08257, 0.7", "5.45339, 23.067, -2.1105, 0.7", "5.7242, 23.4134, -2.18385, 0.1", "5.88457, 23.6318, -2.2353, 0.1", "6.21535, 24.0818, -2.33435, 0.1", "6.21535, 24.0818, -2.33435, 0.14", "6.44737, 24.5966, -2.27925, 0.1", "6.55725, 24.8481, -2.25318, 0.1", "6.67822, 25.1011, -2.22442, 0.1", "6.77173, 25.2758, -2.20215, 0.1", "7.0157, 25.6486, -2.21758, 0.7", "7.18208, 25.8666, -2.24632, 0.56", "7.55354, 26.2903, -2.31139, 0.42", "7.73876, 26.4924, -2.34148, 0.28", "8.04513, 26.8134, -2.38389, 0.42", "8.56424, 27.3303, -2.44279, 0.98", "8.90014, 27.6222, -2.46951, 0.84", "9.20671, 27.8736, -2.48386, 0.7", "9.42812, 28.0481, -2.48362, 0.56", "9.77175, 28.3236, -2.46074, 0.42", "10.1052, 28.6081, -2.41271, 0.28", "10.3944, 28.8736, -2.34329, 0.42", "10.5956, 29.0651, -2.29499, 0.28", "10.9102, 29.3647, -2.21948, 0.14", "11.2383, 29.6568, -2.14071, 0.28", "11.4487, 29.8374, -2.09016, 0.14", "11.7809, 30.1162, -2.01035, 0.1", "12.1156, 30.3996, -1.92997, 0.14", "12.416, 30.6485, -1.85779, 0.28", "12.7189, 30.8941, -1.785, 0.42", "13.0604, 31.1762, -1.73449, 0.28", "13.3973, 31.4605, -1.74623, 0.14", "13.6016, 31.6418, -1.81578, 0.1", "13.8741, 31.8882, -2.05977, 0.1", "13.9842, 31.9899, -2.1912, 0.14", "14.4137, 32.3951, -2.77963, 0.84", "14.798, 32.7549, -3.33057, 0.98", "15.1853, 33.1146, -3.87947, 0.84", "15.9323, 33.8106, -4.89836, 0.84", "16.1692, 34.0319, -5.20438, 0.7", "16.3252, 34.1766, -5.37974, 0.56", "16.6192, 34.4328, -5.60622, 0.42", "16.9461, 34.7032, -5.72677, 0.28", "17.1718, 34.872, -5.72702, 0.14", "17.3377, 34.977, -5.70537, 0.28", "17.5124, 35.0726, -5.69691, 0.7", "17.8665, 35.2516, -5.69888, 0.56", "18.2168, 35.4267, -5.71357, 0.42", "18.5672, 35.6115, -5.73545, 0.28", "19.2669, 36.0109, -5.84086, 0.28", "19.4956, 36.1577, -5.88779, 0.56", "19.8485, 36.4056, -6.00041, 0.42", "20.1828, 36.662, -6.13049, 0.28", "20.3912, 36.8356, -6.21917, 0.42", "20.9865, 37.3651, -6.46596, 0.56", "21.2998, 37.6555, -6.57554, 0.56", "21.8946, 38.2086, -6.77598, 0.56", "22.2117, 38.4998, -6.87151, 0.56", "22.4127, 38.6914, -6.91993, 0.7", "22.7223, 39.0024, -6.96328, 0.56", "23.022, 39.3321, -6.98811, 0.42", "23.2036, 39.5469, -7.00637, 0.28", "23.4547, 39.8529, -7.05455, 0.28", "23.7298, 40.1825, -7.14552, 0.1", "23.9078, 40.3811, -7.23687, 0.1", "24.4693, 40.9883, -7.60019, 0.14", "24.6447, 41.1713, -7.72354, 0.28", "25.1814, 41.6926, -8.09217, 0.42", "25.4761, 41.9478, -8.29832, 0.28", "26.005, 42.3327, -8.63443, 0.28", "26.2222, 42.4693, -8.75139, 0.56", "26.5895, 42.6654, -8.89661, 0.42", "26.9364, 42.8283, -8.99901, 0.28", "27.6655, 43.1663, -9.11882, 0.14", "28.0216, 43.3378, -9.15326, 0.28", "28.3741, 43.5242, -9.15305, 0.14", "28.7124, 43.7179, -9.14301, 0.1", "29.0477, 43.9337, -9.1464, 0.14", "29.4965, 44.2703, -9.15639, 0.28", "29.7138, 44.4499, -9.15568, 0.14", "30.0455, 44.7401, -9.16939, 0.1", "30.2574, 44.9256, -9.18287, 0.1", "30.8881, 45.4698, -9.22454, 0.14", "31.2318, 45.7456, -9.24118, 0.28", "31.5541, 45.9802, -9.24534, 0.42", "31.9153, 46.2329, -9.23323, 0.56", "32.2431, 46.4547, -9.20544, 0.42", "32.6147, 46.6995, -9.1791, 0.28", "32.9433, 46.92, -9.15075, 0.14", "33.3106, 47.1717, -9.17292, 0.28", "33.6645, 47.4269, -9.23643, 0.42", "33.8177, 47.5473, -9.27894, 0.56", "34.4286, 48.0749, -9.4888, 0.7", "34.7433, 48.3588, -9.61017, 0.84", "35.2697, 48.868, -9.82544, 0.7", "35.5743, 49.1648, -9.942, 0.7", "35.8891, 49.4658, -10.0369, 0.56", "36.2124, 49.7612, -10.0889, 0.42", "36.3662, 49.8879, -10.0829, 0.28", "36.5924, 50.0532, -10.0516, 0.1", "36.9207, 50.2616, -9.9726, 0.1", "37.2623, 50.4457, -9.89031, 0.1", "37.6044, 50.6155, -9.77575, 0.1", "37.936, 50.7861, -9.64028, 0.14", "38.3009, 50.9802, -9.47317, 0.28", "38.6102, 51.1486, -9.2905, 0.28", "38.9065, 51.3172, -9.0838, 0.28", "39.5087, 51.6631, -8.62184, 0.28", "39.8213, 51.8467, -8.37079, 0.42", "40.1, 52.0168, -8.14202, 0.28", "40.6665, 52.3734, -7.68904, 0.14", "40.9481, 52.5641, -7.481, 0.1", "41.2353, 52.7698, -7.30027, 0.14", "41.5646, 53.0165, -7.14169, 0.28", "41.772, 53.1863, -7.05423, 0.42", "42.0926, 53.4769, -6.94531, 0.28", "42.4147, 53.7819, -6.90112, 0.28", "42.7311, 54.0885, -6.88308, 0.42", "42.9371, 54.281, -6.8835, 0.56", "43.2661, 54.5742, -6.89856, 0.7", "43.6013, 54.8598, -6.92148, 0.7", "44.2429, 55.3942, -6.97302, 0.84", "44.3953, 55.5193, -6.98372, 0.98", "44.7038, 55.7717, -6.99583, 0.7", "44.9248, 55.9468, -6.99342, 0.56", "45.2744, 56.2142, -6.96766, 0.42", "45.6282, 56.4719, -6.91379, 0.28", "45.9792, 56.7293, -6.79589, 0.14", "46.3142, 56.981, -6.65855, 0.1", "46.6113, 57.2033, -6.51799, 0.14", "46.8986, 57.4227, -6.36657, 0.28", "47.1788, 57.6508, -6.20255, 0.42", "47.7697, 58.1591, -5.89864, 0.56", "47.9637, 58.3421, -5.81588, 0.56", "48.0978, 58.4787, -5.79508, 0.56", "48.4015, 58.7959, -5.82497, 0.56", "48.5944, 58.9945, -5.87805, 0.42", "49.1782, 59.5497, -6.09373, 0.28", "49.3818, 59.7263, -6.17662, 0.14", "50.017, 60.2264, -6.39255, 0.1", "50.3295, 60.4489, -6.47317, 0.1", "50.7018, 60.6777, -6.5318, 0.14", "51.0493, 60.873, -6.52161, 0.28", "51.4325, 61.0705, -6.42867, 0.42", "51.7738, 61.2304, -6.3048, 0.56", "52.1045, 61.383, -6.14262, 0.42", "52.4385, 61.5399, -5.99694, 0.28", "53.1311, 61.8759, -5.73693, 0.14", "53.4761, 62.0573, -5.66275, 0.28", "53.8151, 62.2528, -5.64116, 0.42", "54.0479, 62.4061, -5.65857, 0.56", "54.7149, 62.8958, -5.78178, 0.42", "55.052, 63.1536, -5.90146, 0.28", "55.6621, 63.6394, -6.19717, 0.14", "55.8634, 63.8078, -6.30003, 0.1", "56.1771, 64.078, -6.45186, 0.1", "56.5, 64.3574, -6.57987, 0.1", "57.0339, 64.8415, -6.72419, 0.14", "57.238, 65.0273, -6.78169, 0.1", "57.5527, 65.3338, -6.85984, 0.1", "57.8618, 65.6446, -6.94106, 0.1", "58.1576, 65.9538, -7.04731, 0.1", "58.337, 66.1583, -7.12134, 0.14", "58.85, 66.7838, -7.32447, 0.28", "59.1118, 67.1161, -7.46919, 0.14", "59.3554, 67.444, -7.63519, 0.1", "59.7497, 68.0208, -7.9393, 0.1", "59.9696, 68.3492, -8.13, 0.1", "60.1863, 68.6879, -8.32346, 0.1", "60.5801, 69.3423, -8.66487, 0.14", "60.7129, 69.5583, -8.78823, 0.28", "60.9165, 69.8974, -8.98123, 0.42", "61.3095, 70.5579, -9.31173, 0.28", "61.5195, 70.9047, -9.47949, 0.14", "61.6596, 71.1218, -9.59229, 0.1", "62.1298, 71.8141, -9.93238, 0.14", "62.2797, 72.0274, -10.0398, 0.28", "62.5782, 72.4533, -10.241, 0.42", "62.7315, 72.6788, -10.3252, 0.56", "63.141, 73.2884, -10.5247, 0.56", "63.3748, 73.6583, -10.6162, 0.84", "63.5259, 73.8907, -10.6677, 0.7", "63.7779, 74.2389, -10.756, 0.56", "64.057, 74.5764, -10.8418, 0.42", "64.3547, 74.9008, -10.9113, 0.56", "64.5563, 75.0963, -10.9366, 0.7", "65.2041, 75.5807, -11.0013, 0.7", "65.5449, 75.7828, -11.0228, 0.7", "65.907, 75.9497, -11.0288, 0.84", "66.092, 76.0232, -11.0386, 1.26", "66.4595, 76.152, -11.0582, 1.12", "66.8337, 76.2891, -11.0713, 0.98", "67.1991, 76.4436, -11.0695, 0.84", "67.5598, 76.6088, -11.0743, 0.7", "68.307, 76.9849, -11.0871, 0.56", "68.6539, 77.1774, -11.0897, 0.42", "69.0365, 77.4063, -11.0881, 0.28", "69.4118, 77.6376, -11.0796, 0.14", "69.7411, 77.8581, -11.0603, 0.1", "70.1019, 78.1195, -11.0464, 0.1", "70.444, 78.3969, -11.0687, 0.14", "70.5866, 78.5293, -11.1123, 0.28", "70.7148, 78.6665, -11.179, 0.42", "70.9685, 78.9795, -11.3528, 0.7", "71.3652, 79.5271, -11.7043, 0.56", "71.777, 80.1332, -12.1094, 0.56", "71.9143, 80.3336, -12.2398, 0.42", "72.2063, 80.7477, -12.4807, 0.28", "72.3629, 80.9586, -12.5833, 0.14", "72.9032, 81.6335, -12.8375, 0.1", "73.0823, 81.8473, -12.8793, 0.1", "73.3424, 82.1462, -12.8993, 0.1", "73.6365, 82.4811, -12.9073, 0.1", "73.9294, 82.8105, -12.8949, 0.1", "74.1178, 83.0234, -12.8702, 0.14", "74.4078, 83.3534, -12.8317, 0.28", "74.7748, 83.7728, -12.8143, 0.14", "74.9619, 83.9838, -12.8176, 0.1", "75.2627, 84.3057, -12.8351, 0.14", "75.5793, 84.626, -12.8587, 0.1", "76.1285, 85.1496, -12.8965, 0.1", "76.4604, 85.4466, -12.9165, 0.1", "76.7667, 85.6985, -12.9284, 0.1", "77.111, 85.974, -12.9301, 0.1", "77.4587, 86.2523, -12.9128, 0.1", "77.7989, 86.5293, -12.8674, 0.14", "77.9489, 86.6556, -12.8313, 0.28", "78.0954, 86.786, -12.7962, 0.42", "78.2922, 86.9734, -12.7489, 0.56", "78.6044, 87.2893, -12.7122, 0.42", "78.9033, 87.6136, -12.7077, 0.28", "79.1867, 87.9509, -12.7258, 0.14", "79.3574, 88.1788, -12.7462, 0.1", "79.6053, 88.5412, -12.7866, 0.1", "80.042, 89.2492, -12.8749, 0.1", "80.1701, 89.4914, -12.9062, 0.1", "80.4185, 89.9921, -13.0034, 0.1", "80.613, 90.3756, -13.0909, 0.1", "80.7483, 90.6165, -13.1471, 0.1", "80.9783, 90.9758, -13.2552, 0.1", "81.2374, 91.3073, -13.4024, 0.1", "81.686, 91.7661, -13.7618, 0.1", "81.9292, 91.9621, -14.0065, 0.1", "82.1772, 92.1345, -14.2668, 0.1", "82.6632, 92.436, -14.7669, 0.1", "83.1684, 92.7255, -15.2585, 0.14", "83.7455, 93.0425, -15.7704, 0.1", "84.2793, 93.3576, -16.1662, 0.1", "84.618, 93.5638, -16.3709, 0.1", "84.9412, 93.7634, -16.4673, 0.1", "85.3129, 93.9884, -16.3922, 0.1", "85.6189, 94.1768, -16.2193, 0.1", "86.2097, 94.5406, -15.7565, 0.1", "86.4812, 94.705, -15.5184, 0.1", "87.0482, 95.0244, -15.0319, 0.1", "87.1881, 95.1003, -14.9151, 0.1", "87.5074, 95.2646, -14.6509, 0.1", "87.8009, 95.4117, -14.4281, 0.1", "88.1256, 95.5576, -14.2486, 0.1", "88.4585, 95.7085, -14.0941, 0.1", "88.4585, 95.7085, -14.0941, 0.14" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.29405, -62.4881, 6.92949, 0.98", "4.53002, -62.935, 6.91774, 0.98", "4.77868, -63.4464, 6.90546, 0.84", "4.9902, -63.915, 6.8951, 0.98", "5.21157, -64.4389, 6.88435, 1.12", "5.30713, -64.6775, 6.87974, 1.68", "5.48995, -65.1554, 6.87098, 1.54", "5.64976, -65.6415, 6.8635, 1.4", "5.78554, -66.1375, 6.85736, 1.26", "5.90652, -66.6347, 6.85203, 1.12", "6.00647, -67.1381, 6.88482, 1.26", "6.09605, -67.6294, 6.94482, 1.12", "6.19223, -68.1801, 7.07917, 0.98", "6.27492, -68.6589, 7.23991, 0.84", "6.35544, -69.1286, 7.43322, 0.7", "6.52324, -70.0881, 7.88842, 0.84", "6.60715, -70.5392, 8.12058, 0.84", "6.79538, -71.4723, 8.55597, 0.7", "6.90283, -71.9404, 8.73277, 0.84", "6.90283, -71.9404, 8.73277, 0.98", "6.9743, -72.1781, 8.74203, 1.12", "7.13981, -72.6643, 8.71632, 0.98", "7.48468, -73.6512, 8.66276, 0.84", "7.65446, -74.1329, 8.63021, 0.7", "7.85747, -74.6708, 8.62655, 0.56", "8.04221, -75.1478, 8.61036, 0.7", "8.41325, -76.1069, 8.40862, 0.84", "8.59388, -76.5691, 8.28362, 0.98", "8.77545, -77.0319, 8.1922, 0.84", "8.97923, -77.566, 8.12495, 0.98", "9.29622, -78.4565, 8.08008, 1.12", "9.9082, -80.1957, 8.10352, 0.98", "10.2197, -81.0904, 8.05555, 0.84", "10.5573, -82.0647, 8.23556, 0.84", "10.8397, -82.8939, 8.8108, 0.98", "10.9546, -83.2363, 9.1734, 0.84", "11.0664, -83.5634, 9.55417, 0.98" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.29405, -62.4881, 6.92949, 1.82", "3.64378, -63.4919, 7.55319, 1.82", "3.32716, -64.0374, 7.88596, 1.68", "3.14794, -64.3743, 8.13559, 1.54", "2.81954, -65.0528, 8.64083, 1.4", "2.70117, -65.2962, 8.81604, 1.26", "2.16778, -66.3104, 9.52768, 0.1", "1.87441, -66.8645, 9.88356, 0.1", "1.3373, -67.7919, 10.4962, 0.1", "1.00737, -68.3173, 10.8407, 0.14", "0.632563, -68.8305, 11.1644, 0.28", "0.234644, -69.2765, 11.4063, 0.42", "-0.0863895, -69.5793, 11.5211, 0.28", "-0.583249, -69.9662, 11.6442, 0.14", "-0.844722, -70.1453, 11.7034, 0.28", "-1.33684, -70.4684, 11.9586, 0.56", "-1.75103, -70.8041, 12.3214, 0.56", "-1.75103, -70.8041, 12.3214, 0.56", "-1.75103, -70.8041, 12.3214, 0.56", "-2.25122, -71.5289, 13.3431, 0.56", "-2.67631, -72.2195, 14.2711, 0.42", "-2.89199, -72.6554, 14.7909, 0.28", "-3.27285, -73.5704, 15.7119, 0.42", "-3.3994, -73.9042, 15.9791, 0.28", "-3.48794, -74.1699, 16.1389, 0.42", "-3.60661, -74.5881, 16.2938, 0.7", "-3.76477, -75.2518, 16.4891, 0.56", "-3.87681, -75.9382, 16.6869, 0.42", "-3.9078, -76.6073, 16.9213, 0.28", "-3.89421, -76.899, 17.058, 0.14", "-3.89421, -76.899, 17.058, 0.28", "-3.68753, -77.9192, 17.6318, 0.1", "-3.52858, -78.464, 17.9379, 0.14", "-3.13864, -79.5687, 18.5297, 0.1", "-2.91557, -80.1169, 18.7857, 0.1", "-2.67946, -80.6772, 18.9909, 0.1", "-2.42631, -81.2415, 19.1299, 0.1", "-2.1229, -81.8926, 19.1986, 0.1", "-1.97766, -82.1803, 19.2083, 0.28", "-1.6473, -82.8116, 19.1763, 0.14", "-1.34139, -83.3622, 19.1466, 0.1", "-0.983541, -83.9968, 19.1118, 0.1", "-0.670368, -84.5434, 19.0812, 0.1", "-0.310961, -85.1721, 18.9947, 0.14", "-0.0112667, -85.7166, 18.888, 0.1", "0.296119, -86.3424, 18.7381, 0.14", "0.548754, -86.9151, 18.5829, 0.1", "0.779924, -87.5643, 18.3997, 0.1", "1.14625, -88.823, 18.0468, 0.1", "1.24207, -89.2499, 17.9348, 0.28", "1.36629, -89.9385, 17.7614, 0.14", "1.4436, -90.5586, 17.6157, 0.1", "1.50599, -91.2526, 17.481, 0.1", "1.53974, -91.8889, 17.4055, 0.1", "1.58367, -92.5323, 17.4041, 0.14", "1.62894, -92.8515, 17.4009, 0.28", "1.69326, -93.1674, 17.3956, 0.28", "1.84149, -93.7948, 17.383, 0.42", "1.92459, -94.1031, 17.3757, 0.42", "2.08947, -94.7149, 17.3613, 0.28", "2.24014, -95.3385, 17.3484, 0.14", "2.38262, -95.9673, 17.3364, 0.1", "2.50572, -96.597, 17.3265, 0.14", "2.61457, -97.2325, 17.3181, 0.1", "2.69619, -97.867, 17.2677, 0.1", "2.76348, -98.5672, 17.1743, 0.1", "2.81147, -99.1975, 17.064, 0.1", "2.85959, -99.9046, 16.9192, 0.1", "2.89496, -100.529, 16.8176, 0.1", "2.94881, -101.874, 16.6646, 0.1", "2.96344, -102.517, 16.6262, 0.1", "2.96763, -103.159, 16.6247, 0.1", "2.95111, -103.791, 16.6608, 0.14", "2.90313, -105.015, 16.8016, 0.1", "2.86837, -105.727, 16.9237, 0.1", "2.83271, -106.405, 17.1296, 0.14", "2.78958, -107.089, 17.3601, 0.1", "2.75006, -107.742, 17.6359, 0.1", "2.74017, -108.032, 17.7687, 0.14", "2.75014, -108.621, 18.0297, 0.28", "2.8222, -109.724, 18.5754, 0.1", "2.87999, -110.277, 18.8736, 0.1", "3.04838, -111.453, 19.5211, 0.1", "3.14567, -112.016, 19.8127, 0.1", "3.25019, -112.59, 20.0803, 0.1", "3.31001, -112.877, 20.2132, 0.14", "3.31001, -112.877, 20.2132, 0.28", "3.46914, -113.427, 20.4853, 0.28", "3.64807, -113.971, 20.7752, 0.28", "3.64807, -113.971, 20.7752, 0.42", "4.02374, -114.899, 21.4168, 0.1", "4.22693, -115.389, 21.7784, 0.1", "4.64471, -116.369, 22.5471, 0.1", "4.84975, -116.827, 22.9478, 0.1", "4.99788, -117.143, 23.2406, 0.1", "4.99788, -117.143, 23.2406, 0.1" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.610016, -34.6559, 0.766578, 0.56", "-0.983313, -34.9455, 0.402408, 0.56", "-1.41869, -35.2584, 2.74062E-4, 0.42", "-1.86035, -35.5455, -0.402295, 0.28", "-2.72176, -36.034, -1.17159, 0.7", "-3.52309, -36.355, -1.92482, 0.84", "-4.31591, -36.4426, -2.74721, 0.98", "-5.0135, -36.2512, -3.73158, 1.12", "-5.3657, -36.0633, -4.27236, 1.26", "-5.68065, -35.8527, -4.73692, 1.12", "-6.31375, -35.4095, -5.5278, 0.98", "-7.10448, -34.9958, -6.40871, 0.84", "-7.79715, -34.7408, -7.17556, 0.7", "-8.1965, -34.6451, -7.61226, 0.56", "-8.60378, -34.5791, -8.04308, 0.56", "-9.00485, -34.5068, -8.46869, 0.56", "-9.75784, -34.2975, -9.30437, 0.7", "-9.92948, -34.2292, -9.53679, 0.84", "-10.3072, -34.0432, -10.0591, 1.26", "-10.9741, -33.6944, -11.015, 1.12", "-11.6599, -33.3167, -11.9999, 0.98", "-12.2683, -32.9741, -12.8538, 1.12", "-12.911, -32.6474, -13.6368, 0.98", "-13.7091, -32.3713, -14.5105, 0.84", "-14.3276, -32.6036, -14.6273, 0.7", "-15.4162, -33.2272, -14.5377, 0.56", "-15.7844, -33.4148, -14.5709, 0.42", "-16.3196, -33.5031, -14.9645, 0.56", "-16.5091, -33.497, -15.1967, 0.56", "-17.2303, -33.4224, -16.2244, 0.56", "-17.7936, -33.3035, -17.2132, 0.42", "-18.284, -33.1579, -18.2383, 0.28", "-18.7259, -32.9995, -19.2797, 0.14", "-19.1246, -32.8507, -20.2553, 0.1", "-19.5636, -32.7036, -21.3032, 0.84", "-20.4106, -32.4928, -23.2678, 0.7", "-21.3114, -32.3336, -25.2132, 0.56", "-21.7885, -32.2941, -26.1638, 0.7", "-22.0667, -32.2912, -26.6799, 0.56", "-22.3821, -32.2991, -27.1896, 0.56", "-23.1134, -32.3386, -28.1655, 0.42", "-23.5608, -32.3581, -28.564, 0.28", "-24.5601, -32.2898, -29.1129, 0.42", "-24.8168, -32.21, -29.239, 0.56", "-25.3494, -31.9183, -29.5242, 0.28", "-25.8543, -31.5555, -29.7744, 0.14", "-26.348, -31.1789, -30.0069, 0.28", "-26.8651, -30.8259, -30.246, 0.42", "-27.8514, -30.3002, -30.7355, 0.56", "-27.8514, -30.3002, -30.7355, 0.7", "-28.3424, -30.2795, -31.0788, 2.1", "-29.2918, -30.4578, -31.8241, 1.96", "-29.7071, -30.636, -32.2023, 1.82", "-30.4566, -31.0441, -32.9041, 1.68", "-30.9071, -31.3377, -33.3171, 0.7", "-31.7073, -31.9001, -34.0993, 0.56", "-31.9549, -32.1037, -34.3765, 0.56", "-32.6121, -32.7956, -35.1891, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.610016, -34.6559, 0.766578, 0.7", "-0.621412, -35.22, 0.766135, 0.7", "-0.629611, -35.6152, 0.765827, 0.56", "-0.630178, -36.246, 0.765129, 0.42", "-0.621768, -36.8048, 0.709771, 0.28", "-0.60274, -37.4239, 0.665175, 0.14", "-0.573543, -37.9845, 0.677204, 0.1", "-0.519595, -38.6098, 0.741001, 0.1", "-0.45561, -39.1502, 0.833136, 0.1", "-0.312281, -40.1552, 1.06309, 0.14", "-0.155056, -41.149, 1.32949, 0.42", "0.0463909, -42.2353, 1.64343, 0.28", "0.140597, -42.7671, 1.79699, 0.14", "0.247124, -43.3574, 1.95787, 0.1", "0.340816, -43.9034, 2.04937, 0.14", "0.432655, -44.4602, 2.05419, 0.1", "0.509096, -45.0, 1.92013, 0.1", "0.569206, -45.5687, 1.67795, 0.1", "0.612246, -46.0692, 1.42703, 0.1", "0.675194, -47.079, 0.88053, 0.1", "0.702249, -47.9531, 0.391794, 0.14", "0.704216, -48.2995, 0.193635, 0.56", "0.704623, -48.8475, -0.102345, 0.42", "0.708754, -49.354, -0.344841, 0.28", "0.711892, -49.9518, -0.546343, 0.42", "0.722626, -50.2321, -0.576633, 0.56", "0.722626, -50.2321, -0.576633, 0.42", "0.81853, -50.7755, -0.578839, 0.84", "0.81853, -50.7755, -0.578839, 0.7", "0.898308, -51.0439, -0.613582, 0.28", "1.07864, -51.564, -0.724463, 0.14", "1.26383, -52.0798, -0.858834, 0.1", "1.45023, -52.5894, -1.00349, 0.1", "1.63862, -53.0992, -1.15522, 0.1", "2.0314, -54.1687, -1.46365, 0.14", "2.12258, -54.4192, -1.5561, 0.28", "2.21048, -54.6619, -1.66322, 0.1", "2.38422, -55.1482, -1.8655, 0.1", "2.56932, -55.6494, -2.03824, 0.1", "2.76191, -56.168, -2.14941, 0.1", "3.1442, -57.1343, -2.19458, 0.14", "3.1442, -57.1343, -2.19458, 0.1", "3.56052, -58.0878, -2.16221, 0.28", "3.80667, -58.6595, -2.11754, 0.14", "4.02097, -59.1781, -2.05787, 0.1", "4.24423, -59.7553, -1.97764, 0.1", "4.33194, -60.0206, -1.93819, 0.14", "4.4308, -60.4061, -1.90941, 0.28", "4.53641, -60.9477, -1.91178, 0.14", "4.60362, -61.508, -1.91353, 0.1", "4.63952, -62.0683, -1.91475, 0.14", "4.64655, -62.6992, -1.91558, 0.1", "4.64423, -63.3221, -1.91624, 0.1", "4.64576, -63.8863, -1.9169, 0.1", "4.6422, -64.5179, -1.87987, 0.1", "4.6456, -65.1344, -1.8044, 0.1", "4.67263, -65.7559, -1.68894, 0.14", "4.70368, -66.0284, -1.62305, 0.28", "4.75226, -66.2962, -1.54869, 0.42", "4.98055, -67.2716, -1.26859, 0.56", "5.1364, -67.8058, -1.17508, 0.42", "5.30554, -68.3303, -1.14512, 0.28", "5.47714, -68.8621, -1.22362, 0.14", "5.63809, -69.3895, -1.32938, 0.28", "5.79206, -69.9245, -1.42117, 0.14", "6.10567, -71.013, -1.61078, 0.1", "6.27217, -71.5494, -1.6659, 0.1", "6.63092, -72.6352, -1.692, 0.1", "6.9716, -73.6171, -1.63546, 0.1", "7.35629, -74.6893, -1.48883, 0.1", "7.55715, -75.2054, -1.38045, 0.1", "7.77173, -75.7565, -1.18134, 0.14", "7.95977, -76.2468, -0.982494, 0.28", "8.14337, -76.7394, -0.777275, 0.14", "8.32489, -77.2489, -0.626357, 0.1", "8.50949, -77.836, -0.487736, 0.14", "8.78653, -78.8476, -0.242978, 0.1", "8.91206, -79.3834, -0.118416, 0.1", "9.01965, -79.9229, -0.00596958, 0.1", "9.11444, -80.4712, 0.0879724, 0.1", "9.20928, -81.0823, 0.162698, 0.14", "9.27989, -81.641, 0.197995, 0.1", "9.35301, -82.1977, 0.196153, 0.1", "9.42891, -82.8225, 0.152939, 0.1", "9.49406, -83.3662, 0.0840248, 0.14", "9.56539, -83.9145, -0.013882, 0.28", "9.66028, -84.5235, -0.148561, 0.28", "9.75119, -85.0612, -0.282405, 0.14", "9.94292, -86.051, -0.541098, 0.28", "10.0017, -86.3088, -0.607333, 0.56", "10.1404, -86.8266, -0.774329, 0.42", "10.2975, -87.3377, -0.954454, 0.28", "10.471, -87.842, -1.13018, 0.14", "10.6513, -88.3526, -1.28914, 0.1", "10.8348, -88.8675, -1.41746, 0.1", "11.2225, -89.9463, -1.69904, 0.14", "11.4089, -90.4602, -1.83869, 0.28", "11.5905, -90.964, -1.97226, 0.14", "11.7811, -91.4691, -2.13637, 0.28", "11.9725, -91.9672, -2.31106, 0.42", "11.9725, -91.9672, -2.31106, 0.56", "12.0669, -92.2052, -2.42958, 0.56", "12.249, -92.6603, -2.70358, 0.42", "12.6214, -93.6032, -3.3152, 0.28", "12.7938, -94.0529, -3.60384, 0.14", "13.1041, -94.9065, -4.18526, 0.1", "13.2163, -95.2092, -4.41985, 0.56", "13.3736, -95.6325, -4.73703, 0.42", "13.5353, -96.0779, -5.03835, 0.56", "13.6986, -96.5563, -5.28908, 0.7", "14.0567, -97.521, -5.79921, 0.56", "14.4233, -98.3977, -6.30901, 0.42", "14.805, -99.1987, -6.8533, 0.42", "14.9955, -99.606, -7.18968, 0.56", "15.1748, -100.005, -7.54219, 0.56", "15.5168, -100.865, -8.28069, 0.42", "15.8291, -101.77, -8.97117, 0.28", "15.8952, -101.994, -9.12894, 0.98", "16.1509, -102.938, -9.78855, 0.84", "16.2661, -103.411, -10.0743, 0.7", "16.3877, -103.976, -10.3322, 0.56", "16.4886, -104.513, -10.4716, 0.42", "16.5819, -105.056, -10.5049, 0.28", "16.6842, -105.61, -10.4744, 0.14", "16.7956, -106.153, -10.3818, 0.28", "16.9107, -106.694, -10.2719, 0.14", "17.0323, -107.229, -10.1528, 0.1", "17.2853, -108.352, -9.89609, 0.1", "17.4168, -108.884, -9.77715, 0.1", "17.5694, -109.414, -9.66828, 0.1", "17.7424, -109.942, -9.57363, 0.1", "17.9243, -110.469, -9.50062, 0.1", "18.1147, -110.988, -9.46091, 0.1", "18.343, -111.577, -9.46537, 0.1", "18.564, -112.16, -9.4697, 0.1", "18.6606, -112.425, -9.47161, 0.1", "18.7955, -112.792, -9.47426, 0.84", "18.9873, -113.319, -9.47805, 0.7", "19.1853, -113.848, -9.48193, 0.56", "19.3818, -114.374, -9.48579, 0.42", "19.5812, -114.891, -9.4897, 0.28", "19.8081, -115.479, -9.54031, 0.14", "19.9914, -115.985, -9.65949, 0.1", "20.1518, -116.546, -9.91808, 0.14", "20.1954, -116.774, -10.0611, 0.7", "20.2326, -117.208, -10.4152, 0.56", "20.2368, -118.037, -11.2625, 0.42", "20.183, -118.822, -12.1404, 0.28", "20.0996, -119.505, -12.9705, 0.14", "20.036, -119.908, -13.4541, 0.1", "19.9166, -120.682, -14.3348, 0.1", "19.8148, -121.413, -15.0694, 0.1", "19.7736, -121.921, -15.4435, 0.14", "19.7536, -123.012, -15.8885, 0.28", "19.799, -124.028, -16.107, 0.1", "19.8495, -124.579, -16.2203, 0.1", "19.9905, -125.686, -16.4925, 0.1", "20.0699, -126.216, -16.669, 0.1", "20.1571, -126.768, -16.9438, 0.14", "20.3106, -127.738, -17.5412, 0.28", "20.4487, -128.66, -18.213, 0.42", "20.5518, -129.478, -18.8483, 0.56", "20.5771, -129.696, -19.021, 0.7", "20.6156, -130.018, -19.2386, 0.28", "20.6841, -130.504, -19.5161, 0.14", "20.7459, -131.024, -19.7195, 0.1", "20.8007, -131.62, -19.8844, 0.1", "20.8352, -132.167, -20.0078, 0.1", "20.853, -132.716, -20.1363, 0.1", "20.8518, -133.814, -20.4745, 0.14", "20.8394, -134.189, -20.6084, 0.1", "20.811, -134.77, -20.8328, 0.1", "20.775, -135.356, -21.0616, 0.1", "20.7346, -135.94, -21.275, 0.1", "20.6534, -137.042, -21.6994, 0.1", "20.6272, -137.57, -21.8909, 0.14", "20.6264, -137.824, -21.9892, 0.1", "20.6517, -138.412, -22.2202, 0.1", "20.687, -138.927, -22.4481, 0.1", "20.7883, -140.0, -22.9292, 0.1", "20.8421, -140.502, -23.1817, 0.14", "20.8943, -140.982, -23.4671, 0.28", "20.9618, -141.453, -23.7715, 0.28", "21.1461, -142.418, -24.4244, 0.14", "21.2479, -142.865, -24.7529, 0.1", "21.4656, -143.66, -25.3232, 0.14", "21.5247, -143.881, -25.4831, 0.56", "21.6607, -144.392, -25.8269, 0.56", "21.7787, -144.87, -26.0965, 0.42", "22.0027, -145.916, -26.519, 0.56", "22.0931, -146.444, -26.6885, 0.42", "22.1665, -147.046, -26.82, 0.28", "22.2108, -147.597, -26.92, 0.14", "22.2354, -148.221, -27.0065, 0.1", "22.2558, -148.842, -27.0557, 0.1", "22.2735, -149.124, -27.0563, 0.1", "22.3428, -149.753, -27.0582, 0.1", "22.4522, -150.306, -27.0606, 0.14", "22.5251, -150.576, -27.0621, 0.56", "22.7068, -151.1, -27.0657, 0.42", "22.9344, -151.679, -27.1188, 0.28", "23.1371, -152.199, -27.1987, 0.14", "23.3595, -152.77, -27.3154, 0.1", "23.5346, -153.29, -27.4377, 0.1", "23.6868, -153.817, -27.5688, 0.1", "23.9385, -154.88, -27.9226, 0.1", "24.0079, -155.247, -28.0633, 0.84", "24.0936, -155.755, -28.2699, 0.7", "24.1827, -156.336, -28.5037, 0.56", "24.2695, -156.858, -28.699, 0.42", "24.4913, -157.931, -29.0432, 0.28", "24.6233, -158.452, -29.1681, 0.14", "24.7815, -158.982, -29.2838, 0.1", "24.9628, -159.504, -29.3824, 0.1", "25.1683, -160.024, -29.4592, 0.1", "25.3978, -160.602, -29.5105, 0.1", "25.6043, -161.127, -29.5145, 0.1", "25.7935, -161.655, -29.5183, 0.1", "25.9828, -162.25, -29.5221, 0.14", "26.0576, -162.521, -29.5467, 0.28", "26.1453, -162.897, -29.6069, 0.28", "26.2492, -163.436, -29.7226, 0.14", "26.3586, -164.039, -29.8741, 0.1", "26.4538, -164.573, -30.0173, 0.1", "26.643, -165.661, -30.3219, 0.14", "26.6902, -165.926, -30.3962, 0.28", "26.7956, -166.461, -30.5398, 0.1", "26.9028, -166.998, -30.6672, 0.1", "27.0166, -167.53, -30.8155, 0.14", "27.0166, -167.53, -30.8155, 0.28", "27.0749, -167.91, -30.9066, 0.28", "27.1521, -168.45, -31.0534, 0.28", "27.2252, -168.969, -31.2548, 0.42", "27.3815, -170.007, -31.7229, 0.42", "27.4483, -170.35, -31.9164, 0.1", "27.5553, -170.81, -32.2021, 0.1", "27.6802, -171.268, -32.5019, 0.1", "27.9722, -172.196, -33.114, 0.1", "28.1347, -172.654, -33.3958, 0.1", "28.5448, -173.638, -33.9108, 0.1", "28.6528, -173.871, -34.0218, 0.1", "28.8863, -174.332, -34.2478, 0.1", "29.1575, -174.844, -34.4787, 0.14", "29.4108, -175.319, -34.6494, 0.1", "29.6793, -175.84, -34.8629, 0.1", "29.909, -176.314, -35.0591, 0.1", "30.3894, -177.291, -35.5235, 0.1", "30.6198, -177.745, -35.7606, 0.1", "30.8524, -178.188, -35.9996, 0.1", "31.3714, -179.09, -36.4863, 0.14", "31.5098, -179.31, -36.5957, 0.28", "31.7147, -179.605, -36.747, 0.1", "32.064, -180.082, -36.9673, 0.1", "32.4327, -180.544, -37.1895, 0.1", "32.6775, -180.832, -37.3178, 0.1", "33.0758, -181.285, -37.4793, 0.1", "33.7446, -182.035, -37.7491, 0.1", "33.921, -182.244, -37.82, 0.1", "34.2977, -182.72, -37.9652, 0.1", "34.6561, -183.216, -38.0872, 0.1", "34.996, -183.74, -38.1773, 0.1", "35.197, -184.074, -38.1799, 0.14", "35.4685, -184.564, -38.1091, 0.56", "35.7136, -185.059, -38.0121, 0.42", "35.9154, -185.573, -37.8931, 0.28", "36.0791, -186.094, -37.7637, 0.14", "36.3354, -187.086, -37.5935, 0.1", "36.4592, -187.633, -37.5858, 0.1", "36.5657, -188.183, -37.6593, 0.1", "36.6558, -188.788, -37.8207, 0.1", "36.7171, -189.305, -38.012, 0.1", "36.805, -190.353, -38.4723, 0.1", "36.8744, -191.386, -38.9711, 0.1", "36.8885, -191.738, -39.1568, 0.56", "36.9057, -192.287, -39.4475, 0.42", "36.9265, -192.79, -39.6969, 0.28", "36.9538, -193.371, -39.9404, 0.14", "36.9815, -193.917, -40.067, 0.1", "37.0656, -195.086, -40.1928, 0.14", "37.1152, -195.645, -40.2234, 0.28", "37.172, -196.203, -40.225, 0.14", "37.2229, -196.765, -40.1972, 0.1", "37.31, -197.941, -40.1564, 0.1", "37.3296, -198.504, -40.1368, 0.1", "37.3385, -199.136, -40.1067, 0.1", "37.322, -199.69, -40.1193, 0.1", "37.2772, -200.319, -40.1792, 0.1", "37.1593, -201.376, -40.3573, 0.14", "37.1072, -201.752, -40.4472, 0.28", "37.0037, -202.292, -40.5622, 0.14", "36.8748, -202.899, -40.6722, 0.28", "36.7354, -203.501, -40.7509, 0.42", "36.6539, -203.891, -40.7775, 0.28", "36.5397, -204.501, -40.7763, 0.14", "36.4129, -205.294, -40.7751, 0.1", "36.375, -205.564, -40.7747, 0.1", "36.3146, -206.192, -40.7744, 0.1", "36.2949, -206.753, -40.7747, 0.1", "36.3167, -207.374, -40.7758, 0.1", "36.3766, -207.932, -40.7774, 0.1", "36.4194, -208.211, -40.7784, 0.1", "36.4651, -208.487, -40.7795, 0.1", "36.5702, -209.041, -40.7819, 0.1", "36.6667, -209.592, -40.8299, 0.14", "36.762, -210.142, -40.9126, 0.28", "36.8601, -210.746, -41.0284, 0.14", "36.9475, -211.291, -41.1454, 0.1", "37.0326, -211.831, -41.2732, 0.1", "37.1936, -212.977, -41.4997, 0.1", "37.267, -213.528, -41.5792, 0.1", "37.3444, -214.085, -41.6211, 0.1", "37.4208, -214.642, -41.616, 0.1", "37.4208, -214.642, -41.616, 0.1", "37.5305, -215.694, -41.426, 0.1", "37.5867, -216.236, -41.2911, 0.1", "37.6388, -216.785, -41.1718, 0.1", "37.6878, -217.414, -41.1142, 0.1", "37.7317, -217.966, -41.1263, 0.14", "37.7908, -218.592, -41.1977, 0.28", "37.8544, -219.142, -41.3104, 0.42", "37.9136, -219.687, -41.4321, 0.28", "38.0451, -220.828, -41.6946, 0.14", "38.119, -221.371, -41.8172, 0.1", "38.1996, -221.915, -41.9304, 0.1", "38.2939, -222.463, -42.0279, 0.1", "38.3927, -223.072, -42.111, 0.1", "38.4835, -223.627, -42.1545, 0.14", "38.5813, -224.18, -42.1567, 0.1", "38.6679, -224.738, -42.1588, 0.14", "38.7486, -225.294, -42.1608, 0.28", "38.8052, -225.68, -42.1621, 0.1", "38.8943, -226.234, -42.1642, 0.1", "38.9841, -226.791, -42.1664, 0.1", "39.0884, -227.405, -42.1688, 0.1", "39.1917, -227.96, -42.1711, 0.1", "39.296, -228.512, -42.1735, 0.1", "39.408, -229.065, -42.176, 0.1", "39.5087, -229.617, -42.1783, 0.1", "39.6047, -230.17, -42.1805, 0.1", "39.6996, -230.715, -42.2211, 0.1", "39.8003, -231.335, -42.303, 0.1", "39.8876, -231.884, -42.4, 0.1", "39.9854, -232.486, -42.5257, 0.1", "40.0794, -233.028, -42.6495, 0.1", "40.2832, -234.126, -42.9198, 0.1", "40.3936, -234.662, -43.058, 0.1", "40.5212, -235.192, -43.193, 0.1", "40.6575, -235.716, -43.313, 0.1", "40.8069, -236.238, -43.4539, 0.1", "40.8069, -236.238, -43.4539, 0.1", "40.8826, -236.503, -43.516, 0.1", "41.0313, -237.025, -43.6577, 0.1", "41.1625, -237.539, -43.8509, 0.1", "41.4055, -238.57, -44.2943, 0.1", "41.5186, -239.073, -44.5178, 0.1", "41.6286, -239.572, -44.7325, 0.1", "41.7393, -240.082, -44.9407, 0.1", "41.9742, -241.17, -45.3446, 0.1", "42.0889, -241.695, -45.506, 0.1", "42.2085, -242.225, -45.6192, 0.1", "42.3351, -242.763, -45.7173, 0.1", "42.4704, -243.306, -45.7917, 0.1", "42.6151, -243.847, -45.8339, 0.1", "42.7714, -244.386, -45.8371, 0.1", "42.9285, -244.928, -45.8403, 0.1", "43.0817, -245.458, -45.8435, 0.1", "43.2387, -246.0, -45.8467, 0.1", "43.3948, -246.54, -45.8499, 0.1", "43.5518, -247.082, -45.8531, 0.1", "43.7083, -247.621, -45.8563, 0.14", "43.8634, -248.159, -45.8992, 0.1", "44.0263, -248.683, -45.9774, 0.14", "44.1991, -249.206, -46.0861, 0.1", "44.2889, -249.466, -46.1511, 0.1", "44.3808, -249.723, -46.2218, 0.1", "44.7603, -250.767, -46.5143, 0.1", "44.9826, -251.337, -46.6677, 0.1", "45.1886, -251.844, -46.7934, 0.14", "45.3996, -252.353, -46.8999, 0.1", "45.6084, -252.861, -46.9788, 0.1", "45.8174, -253.38, -47.0252, 0.1", "46.0437, -253.967, -47.0765, 0.14", "46.1371, -254.227, -47.1165, 0.56", "46.3208, -254.75, -47.2233, 0.42", "46.4813, -255.262, -47.3876, 0.28", "46.6223, -255.77, -47.5897, 0.28", "46.8753, -256.795, -48.0408, 0.42", "46.9782, -257.304, -48.2367, 0.42", "47.0753, -257.831, -48.4056, 0.28", "47.269, -258.964, -48.6883, 0.14", "47.3488, -259.513, -48.7761, 0.1", "47.4214, -260.069, -48.8076, 0.1", "47.5476, -261.239, -48.7428, 0.14", "47.5919, -261.796, -48.691, 0.28", "47.6303, -262.355, -48.6186, 0.14", "47.676, -262.967, -48.5169, 0.28", "47.7072, -263.527, -48.4486, 0.14", "47.7408, -264.157, -48.407, 0.1", "47.7822, -264.777, -48.4084, 0.1", "47.825, -265.337, -48.4097, 0.1", "47.8811, -265.898, -48.4113, 0.1", "47.9546, -266.517, -48.4132, 0.1", "48.0271, -267.076, -48.415, 0.1", "48.1037, -267.633, -48.4169, 0.1", "48.1813, -268.189, -48.4188, 0.1", "48.2557, -268.748, -48.4207, 0.1", "48.328, -269.367, -48.4226, 0.1", "48.3608, -269.647, -48.4235, 0.1", "48.4287, -270.274, -48.4253, 0.1", "48.4908, -270.832, -48.4269, 0.1", "48.5491, -271.384, -48.4285, 0.1", "48.621, -272.012, -48.4304, 0.1", "48.6981, -272.571, -48.4323, 0.1", "48.7825, -273.126, -48.4344, 0.1", "48.8666, -273.67, -48.4746, 0.1", "48.9567, -274.29, -48.5558, 0.1", "49.0346, -274.837, -48.655, 0.1", "49.1065, -275.382, -48.7796, 0.1", "49.165, -275.922, -48.9228, 0.1", "49.2751, -277.05, -49.2479, 0.1", "49.3028, -277.317, -49.3258, 0.1", "49.3028, -277.317, -49.3258, 0.1", "49.3572, -277.702, -49.4128, 0.1", "49.447, -278.243, -49.4986, 0.1", "49.5572, -278.792, -49.5433, 0.1", "49.6753, -279.342, -49.4974, 0.1", "49.792, -279.885, -49.4209, 0.1", "49.9114, -280.426, -49.3256, 0.1", "50.0356, -280.964, -49.2121, 0.1", "50.1422, -281.491, -49.0845, 0.1", "50.3227, -282.623, -48.7884, 0.1", "50.3902, -283.17, -48.683, 0.1", "50.4326, -283.73, -48.6256, 0.1", "50.4326, -283.73, -48.6256, 0.1", "50.4452, -284.117, -48.7041, 0.1", "50.4679, -284.708, -48.9242, 0.1", "50.503, -285.733, -49.4408, 0.1", "50.5208, -286.282, -49.7301, 0.1", "50.5352, -286.782, -49.9847, 0.1", "50.5851, -287.826, -50.466, 0.14", "50.5998, -288.08, -50.5877, 0.1", "50.615, -288.439, -50.7508, 0.1", "50.6291, -288.967, -50.9511, 0.1", "50.6364, -289.563, -51.1639, 0.1", "50.6256, -290.102, -51.3284, 0.1", "50.5948, -291.251, -51.5961, 0.1", "50.5729, -291.866, -51.7328, 0.1", "50.5584, -292.416, -51.8453, 0.1", "50.5454, -293.028, -51.9537, 0.1", "50.535, -293.654, -52.0401, 0.1", "50.5303, -294.207, -52.084, 0.14", "50.5405, -294.606, -52.0846, 0.1", "50.5626, -295.167, -52.0856, 0.1", "50.5923, -295.728, -52.0867, 0.14", "50.6262, -296.117, -52.0877, 0.1", "50.6872, -296.678, -52.0894, 0.1", "50.7428, -297.236, -52.0909, 0.1", "50.7984, -297.865, -52.0925, 0.1", "50.823, -298.416, -52.0936, 0.1", "50.8211, -298.978, -52.0942, 0.1", "50.8211, -298.978, -52.0942, 0.14", "50.7772, -299.372, -52.0578, 0.84", "50.6803, -299.978, -51.9579, 0.7", "50.5783, -300.588, -51.8278, 0.56", "50.5102, -300.971, -51.7377, 0.42", "50.4162, -301.568, -51.5943, 0.28", "50.2865, -302.715, -51.3285, 0.14", "50.2523, -303.321, -51.1944, 0.1", "50.243, -303.871, -51.0834, 0.1", "50.2463, -304.493, -50.9756, 0.1", "50.2551, -305.04, -50.9047, 0.1", "50.2709, -305.6, -50.8646, 0.1", "50.2844, -306.164, -50.8655, 0.1", "50.2945, -306.795, -50.9099, 0.1", "50.2881, -307.182, -50.9607, 0.1", "50.2592, -307.802, -51.0746, 0.1", "50.209, -308.348, -51.1948, 0.1", "50.1328, -308.947, -51.3383, 0.1", "50.0038, -309.95, -51.5831, 0.1", "49.9591, -310.336, -51.6729, 0.1", "49.888, -310.94, -51.8, 0.1", "49.8168, -311.559, -51.9097, 0.1", "49.7443, -312.163, -52.0341, 0.1", "49.6937, -312.711, -52.1478, 0.1", "49.6497, -313.33, -52.2593, 0.1", "49.6324, -313.711, -52.3402, 0.1", "49.6198, -314.254, -52.4846, 0.1", "49.6229, -315.201, -52.8118, 0.1", "49.6363, -315.71, -53.0485, 0.56", "49.6363, -315.71, -53.0485, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-13.404, 40.9884, -4.71154, 0.84", "-13.7909, 41.8862, -4.50301, 0.84", "-13.9567, 42.3277, -4.41438, 0.7", "-14.1173, 42.7828, -4.3265, 0.56", "-14.2706, 43.2391, -4.24557, 0.42", "-14.4087, 43.7036, -4.16956, 0.28", "-14.5371, 44.1695, -4.10063, 0.42", "-14.6019, 44.5019, -4.08013, 0.56", "-14.6373, 44.7355, -4.06317, 0.7", "-14.698, 45.2125, -4.02566, 0.84", "-14.7664, 45.7479, -3.9199, 0.7", "-14.8238, 46.2163, -3.78611, 0.56", "-14.8487, 46.4452, -3.7084, 0.7", "-14.8897, 46.9008, -3.53797, 0.56", "-14.9243, 47.357, -3.36113, 0.7", "-14.9706, 48.3355, -3.04246, 0.84", "-14.985, 48.8692, -2.96192, 0.7", "-14.9901, 49.2201, -2.97356, 0.56", "-14.9911, 49.4616, -3.01607, 0.7", "-14.9725, 49.9232, -3.15436, 0.98", "-14.9395, 50.8717, -3.46453, 0.98", "-14.9221, 51.8182, -3.78576, 0.84", "-14.9364, 52.2993, -3.86728, 0.84", "-14.9575, 52.6453, -3.85469, 0.7", "-14.9769, 52.9742, -3.77394, 0.56", "-15.0601, 53.8766, -3.35473, 0.7", "-15.1381, 54.3351, -3.06418, 0.84", "-15.34, 55.1849, -2.5266, 0.98", "-15.4364, 55.4819, -2.37546, 0.84", "-15.537, 55.6951, -2.31647, 0.7", "-15.8755, 56.291, -2.39908, 0.1", "-16.1368, 56.7294, -2.59985, 0.14", "-16.6195, 57.5119, -3.05568, 0.28", "-16.7768, 57.7704, -3.22531, 0.42", "-17.0342, 58.1872, -3.45851, 0.56", "-17.5079, 58.9948, -3.80849, 0.56", "-17.722, 59.4178, -3.92512, 0.42", "-17.928, 59.8579, -3.97158, 0.56", "-18.0282, 60.0813, -3.95748, 0.56", "-18.4336, 60.9882, -3.84611, 0.56", "-18.6315, 61.4183, -3.76835, 0.56", "-18.8418, 61.8476, -3.66962, 0.56", "-19.0541, 62.2822, -3.58755, 0.7", "-19.2631, 62.7193, -3.52802, 0.84", "-19.4917, 63.2165, -3.49096, 0.98", "-19.6866, 63.664, -3.49037, 1.12", "-19.874, 64.1173, -3.48726, 0.98", "-20.0589, 64.5691, -3.48368, 0.84", "-20.2363, 65.0149, -3.47889, 0.7", "-20.4084, 65.4742, -3.47128, 0.84", "-20.5596, 65.9381, -3.45791, 0.7", "-20.6332, 66.172, -3.45054, 0.84" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-13.404, 40.9884, -4.71154, 0.7", "-13.5204, 41.0329, -5.69434, 0.7", "-13.7342, 41.1327, -7.5199, 0.56", "-13.9411, 41.2359, -9.3825, 0.42", "-14.1527, 41.3446, -11.2078, 0.28", "-14.3664, 41.4642, -13.0322, 0.14", "-14.5828, 41.5983, -14.8902, 0.1", "-14.7841, 41.7366, -16.733, 0.1", "-14.9897, 41.8861, -18.5561, 0.1", "-15.0993, 41.9727, -19.5385, 0.1", "-15.3113, 42.1544, -21.3748, 0.1", "-15.5225, 42.3525, -23.211, 0.1", "-15.7218, 42.5589, -25.0293, 0.1", "-15.9244, 42.7838, -26.8825, 0.1", "-16.12, 43.0237, -28.7142, 0.1", "-16.2136, 43.1457, -29.6572, 0.1", "-16.4178, 43.4, -31.4873, 0.1", "-16.6529, 43.6808, -33.3098, 0.1", "-16.7958, 43.8456, -34.2401, 0.1", "-17.1166, 44.2066, -36.0352, 0.14", "-17.1743, 44.2622, -36.2816, 0.28", "-17.4967, 44.5323, -37.3835, 0.1", "-17.6116, 44.6214, -37.7112, 0.1", "-18.4932, 44.9996, -37.1987, 0.1", "-18.9333, 45.1819, -36.8797, 0.1", "-19.3544, 45.3538, -36.5178, 0.14", "-19.3544, 45.3538, -36.5178, 0.28" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-22.6945, 34.7753, -22.7836, 0.7", "-23.2916, 35.302, -23.3161, 0.7", "-24.2088, 36.1547, -24.0207, 0.56", "-24.5116, 36.4512, -24.2323, 0.42", "-25.4299, 37.3748, -24.8393, 0.28", "-25.878, 37.8182, -25.0982, 0.14", "-26.3774, 38.3108, -25.4052, 0.1", "-26.8614, 38.8139, -25.6989, 0.1", "-27.0855, 39.0495, -25.8065, 0.14", "-27.0855, 39.0495, -25.8065, 0.28", "-27.6907, 39.7366, -26.1072, 0.42", "-28.4581, 40.6148, -26.5927, 0.42", "-28.8878, 41.148, -26.9165, 0.28", "-29.2893, 41.6986, -27.247, 0.14", "-29.6406, 42.2013, -27.5519, 0.14", "-30.3188, 43.2376, -28.1789, 0.28", "-30.3188, 43.2376, -28.1789, 0.42", "-30.6302, 43.7984, -28.4189, 0.56", "-30.9179, 44.372, -28.6485, 0.42", "-31.2472, 44.9459, -28.8117, 0.28", "-31.4457, 45.2232, -28.8422, 0.42", "-31.9354, 45.8124, -28.8204, 0.28", "-32.3871, 46.3111, -28.7992, 0.28", "-32.8665, 46.7949, -28.7756, 0.42", "-33.5593, 47.4638, -28.8152, 0.42", "-34.1092, 47.9916, -28.888, 0.28", "-34.452, 48.312, -28.9522, 0.14", "-35.0086, 48.8008, -29.1461, 0.1", "-35.3549, 49.0827, -29.3037, 0.1", "-36.199, 49.7571, -29.8618, 0.1", "-36.6848, 50.18, -30.2758, 0.28", "-37.1368, 50.5927, -30.722, 0.42", "-37.9638, 51.3936, -31.5826, 0.28", "-38.2337, 51.678, -31.8668, 0.14", "-38.9169, 52.4531, -32.5937, 0.28", "-39.2752, 52.8959, -32.946, 1.12", "-39.2752, 52.8959, -32.946, 0.98", "-39.679, 53.4776, -33.2601, 0.1", "-40.026, 54.0269, -33.4229, 0.1", "-40.7634, 55.2405, -33.645, 0.1", "-41.11, 55.8141, -33.7081, 0.1", "-41.4941, 56.4609, -33.7973, 0.1", "-42.157, 57.6749, -33.9824, 0.14", "-42.2949, 57.9699, -34.0775, 0.28", "-42.4109, 58.2589, -34.2117, 0.42", "-42.8593, 59.4805, -34.8212, 0.28", "-43.0705, 60.0344, -35.1643, 0.28", "-43.2648, 60.5576, -35.5554, 0.14", "-43.662, 61.5802, -36.4153, 0.1", "-43.8725, 62.098, -36.8111, 0.1", "-44.1276, 62.6987, -37.1956, 0.1", "-44.2606, 62.9856, -37.3268, 0.1" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-22.6945, 34.7753, -22.7836, 0.84", "-22.4842, 34.9418, -23.6136, 0.84", "-21.9615, 35.2475, -25.2019, 0.98", "-21.3015, 35.5312, -26.7425, 0.84", "-21.1956, 35.575, -26.9499, 0.28", "-20.9448, 35.6886, -27.4046, 0.14", "-20.7077, 35.806, -27.8542, 0.1", "-20.5325, 35.8821, -28.1295, 0.1", "-20.2097, 36.0128, -28.5311, 0.14", "-19.6165, 36.2937, -29.2783, 0.28", "-19.1593, 36.5619, -30.0096, 0.42", "-18.485, 37.1033, -31.473, 0.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-0.70211, 173.864, -9.88494, 0.1", "-1.33633, 175.079, -9.55374, 0.1", "-1.65049, 175.658, -9.42411, 0.1", "-2.02583, 176.301, -9.30689, 0.1", "-2.36621, 176.872, -9.2182, 0.14", "-2.71373, 177.444, -9.13476, 0.28", "-2.71373, 177.444, -9.13476, 0.42", "-3.1326, 178.06, -9.12919, 0.1", "-3.56819, 178.661, -9.20138, 0.14", "-3.76865, 178.925, -9.26378, 0.28", "-3.96251, 179.175, -9.37887, 0.42", "-4.37587, 179.715, -9.70479, 0.56", "-4.77115, 180.267, -10.013, 0.42", "-5.4302, 181.339, -10.5607, 0.28", "-5.7441, 181.969, -10.8302, 0.14", "-6.22386, 183.219, -11.1277, 0.28", "-6.22386, 183.219, -11.1277, 0.42", "-6.36641, 184.578, -10.9812, 0.1", "-6.35381, 185.311, -10.7961, 0.1", "-6.28616, 186.0, -10.5299, 0.1", "-6.08518, 187.274, -9.9469, 0.1", "-6.00778, 187.678, -9.72754, 0.1", "-5.8662, 188.339, -9.39461, 0.14", "-5.75067, 188.764, -9.22419, 0.28", "-5.6661, 189.047, -9.09512, 0.42" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.70211, 173.864, -9.88494, 0.28", "-0.203316, 175.242, -9.67088, 0.28", "0.00393537, 175.985, -9.58156, 0.14", "0.102694, 176.478, -9.53302, 0.1", "0.229888, 177.453, -9.45058, 0.14", "0.276332, 177.948, -9.41592, 0.1", "0.329727, 178.647, -9.37619, 0.1", "0.338587, 179.352, -9.38137, 0.14", "0.323474, 180.042, -9.38182, 0.1", "0.280958, 180.746, -9.37701, 0.1", "0.219369, 181.535, -9.36891, 0.1", "0.176541, 182.31, -9.36438, 0.1", "0.170235, 183.012, -9.36661, 0.1", "0.198584, 183.8, -9.37599, 0.1", "0.25666, 184.487, -9.39066, 0.14", "0.342349, 185.271, -9.41117, 0.1", "0.394655, 185.773, -9.42381, 0.1", "0.46346, 186.546, -9.44099, 0.14", "0.515738, 187.335, -9.45503, 0.28", "0.514658, 187.671, -9.4848, 0.28", "0.463738, 188.364, -9.58582, 0.1", "0.354147, 189.046, -9.70972, 0.1", "0.197617, 189.72, -9.84301, 0.1", "0.00769547, 190.383, -9.97767, 0.1", "-0.399729, 191.735, -10.2448, 0.14", "-0.582955, 192.389, -10.3644, 0.28", "-0.738443, 193.067, -10.4833, 0.14", "-0.851559, 193.752, -10.5894, 0.1", "-0.928169, 194.445, -10.6713, 0.1", "-0.981928, 195.23, -10.7225, 0.1", "-0.997217, 196.008, -10.7234, 0.1", "-0.991127, 196.506, -10.7606, 0.1", "-0.961332, 197.279, -10.8146, 0.1", "-0.919004, 197.979, -10.8577, 0.1", "-0.867238, 198.681, -10.8928, 0.1", "-0.825527, 199.459, -10.917, 0.1", "-0.768072, 200.758, -10.9355, 0.1", "-0.729589, 202.195, -10.9306, 0.14", "-0.720805, 202.986, -10.9144, 0.1", "-0.724733, 203.762, -10.8861, 0.1", "-0.765099, 204.461, -10.8446, 0.1", "-0.866223, 205.231, -10.8322, 0.1", "-1.02512, 205.912, -10.895, 0.1", "-1.25342, 206.537, -11.1296, 0.1", "-1.53821, 207.074, -11.4796, 0.14", "-1.88141, 207.608, -11.9333, 0.1", "-2.48672, 208.434, -12.7366, 0.1", "-3.20085, 209.331, -13.6647, 0.1", "-3.90424, 210.167, -14.5987, 0.1", "-4.62958, 211.015, -15.5644, 0.14", "-4.79924, 211.226, -15.791, 0.28", "-5.14938, 211.746, -16.2549, 0.42", "-5.42473, 212.319, -16.5613, 0.56", "-5.51853, 212.649, -16.6404, 0.7", "-5.6346, 213.341, -16.6805, 0.84", "-5.71434, 214.113, -16.6688, 0.7", "-5.80181, 214.897, -16.7233, 0.56", "-5.89444, 215.661, -16.8219, 0.42", "-6.00072, 216.346, -16.9326, 0.28", "-6.12682, 217.02, -17.1009, 0.14", "-6.27298, 217.673, -17.3122, 0.1", "-6.63047, 218.941, -17.8863, 0.1", "-6.82325, 219.534, -18.2081, 0.1", "-7.02355, 220.086, -18.5779, 0.14", "-7.45291, 221.18, -19.4795, 0.28", "-7.65822, 221.682, -19.9304, 0.28", "-8.02385, 222.607, -20.7676, 0.14", "-8.20977, 223.14, -21.1911, 0.1", "-8.55182, 224.25, -22.0242, 0.1", "-8.84338, 225.435, -22.7852, 0.1", "-8.94299, 226.07, -23.0671, 0.1", "-8.97851, 226.824, -23.2931, 0.14", "-8.8777, 228.287, -23.4567, 0.28", "-8.82132, 228.635, -23.459, 0.42", "-8.64594, 229.387, -23.3847, 0.14", "-8.44629, 230.146, -23.282, 0.1", "-8.32252, 230.627, -23.2404, 0.1", "-8.15202, 231.384, -23.2207, 0.1", "-8.01951, 232.163, -23.2503, 0.1", "-7.92786, 232.93, -23.329, 0.1", "-7.90316, 233.275, -23.3823, 0.1", "-7.8888, 234.036, -23.5887, 0.1", "-7.8964, 234.769, -23.8509, 0.1", "-7.91081, 235.418, -24.1261, 0.1", "-7.93836, 236.764, -24.7446, 0.1", "-7.95379, 237.392, -25.0377, 0.1", "-7.99512, 238.744, -25.6425, 0.1", "-8.01816, 239.204, -25.8327, 0.1", "-8.068, 239.936, -26.0873, 0.1", "-8.11505, 240.702, -26.28, 0.1", "-8.15284, 241.401, -26.3672, 0.1", "-8.1909, 242.088, -26.413, 0.1", "-8.23147, 242.789, -26.4085, 0.1", "-8.28513, 243.492, -26.4015, 0.1", "-8.35628, 244.28, -26.3915, 0.1", "-8.40704, 245.052, -26.3272, 0.1", "-8.42087, 245.401, -26.2783, 0.1", "-8.4455, 246.178, -26.1338, 0.1", "-8.45355, 246.855, -25.9838, 0.1", "-8.47478, 247.52, -25.7609, 0.1", "-8.61119, 248.81, -25.046, 0.14", "-8.73756, 249.357, -24.6184, 0.1", "-8.93473, 249.83, -24.1391, 0.1", "-9.07056, 250.028, -23.885, 0.14", "-9.82316, 250.779, -22.8535, 0.1", "-10.7753, 251.446, -21.9375, 0.1", "-11.4043, 251.779, -21.6223, 0.14", "-12.1197, 252.103, -21.5484, 0.14", "-12.5589, 252.3, -21.6265, 0.1", "-13.8034, 252.876, -22.1839, 0.1", "-14.18, 253.057, -22.4474, 0.1", "-15.2331, 253.584, -23.3437, 0.1", "-16.2203, 254.104, -24.3064, 0.1", "-16.7198, 254.375, -24.853, 0.1", "-17.49, 254.782, -25.7533, 0.1", "-17.795, 254.931, -26.1188, 0.14" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.0664, -83.5634, 9.55417, 1.12", "11.1159, -83.8909, 9.55224, 1.12", "11.1767, -84.2646, 9.54976, 1.26", "11.2361, -84.5964, 9.5472, 1.4", "11.314, -84.926, 9.54342, 1.54", "11.3579, -85.0878, 9.54119, 1.4", "11.3579, -85.0878, 9.54119, 1.26", "11.4142, -85.2379, 9.50861, 1.12", "11.5409, -85.5386, 9.42418, 0.98", "11.6857, -85.8612, 9.28857, 0.84", "11.8132, -86.1413, 9.15135, 0.7", "12.0769, -86.7299, 8.85281, 0.84", "12.2041, -87.0086, 8.71237, 0.98", "12.3357, -87.2923, 8.58672, 1.12", "12.6284, -87.8971, 8.35526, 1.12", "12.7653, -88.1863, 8.24932, 1.12", "12.908, -88.4798, 8.1588, 0.98", "13.0713, -88.8134, 8.11014, 1.12", "13.3617, -89.3647, 8.06476, 0.98", "13.4767, -89.5674, 8.08716, 1.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.0664, -83.5634, 9.55417, 0.28", "11.4031, -83.751, 9.34747, 0.28", "11.9485, -84.0514, 9.01246, 0.42", "12.3203, -84.2395, 8.85006, 0.56", "12.9094, -84.5485, 8.63824, 0.42", "13.2872, -84.7532, 8.51452, 0.28", "14.0304, -85.1832, 8.28027, 0.14", "14.6106, -85.5521, 8.11494, 0.28", "15.5774, -86.2253, 7.86124, 0.28", "16.1315, -86.6385, 7.71254, 0.14", "16.4693, -86.9089, 7.61727, 0.1", "16.9902, -87.3571, 7.45111, 0.1", "17.464, -87.8223, 7.2311, 0.1", "17.7347, -88.1293, 7.05085, 0.1", "18.2381, -88.7323, 6.64417, 0.1", "18.5042, -89.0221, 6.44067, 0.1", "18.9891, -89.4635, 6.17611, 0.14", "19.8747, -90.0812, 5.86765, 0.28", "19.8747, -90.0812, 5.86765, 0.42", "20.9604, -90.5795, 5.70876, 0.42", "21.6186, -90.8376, 5.7133, 0.56", "22.7432, -91.2788, 5.79405, 0.42", "23.3792, -91.5523, 5.86657, 0.28", "24.0127, -91.8632, 5.93566, 0.14", "24.392, -92.0805, 5.95211, 0.28", "25.3539, -92.7382, 5.89765, 0.56", "25.9017, -93.1675, 5.82767, 0.7", "26.3805, -93.5752, 5.76033, 0.56", "27.0297, -94.1738, 5.70877, 0.42", "27.3433, -94.4922, 5.69286, 0.28", "27.6339, -94.8185, 5.6745, 0.14", "28.1958, -95.5176, 5.60253, 0.14", "28.901, -96.4435, 5.53413, 0.28", "29.2631, -96.9475, 5.49869, 0.14", "29.6092, -97.4719, 5.46183, 0.14", "29.9586, -97.9989, 5.45165, 0.1", "30.3465, -98.581, 5.4495, 0.1", "30.7368, -99.1613, 5.43515, 0.1", "31.1634, -99.7251, 5.42571, 0.1", "31.4576, -100.056, 5.43929, 0.1", "32.2642, -100.896, 5.5153, 0.1", "32.7554, -101.39, 5.5727, 0.1", "33.2535, -101.888, 5.6358, 0.1", "34.1948, -102.8, 5.81776, 0.1", "34.5071, -103.112, 5.88896, 0.1", "34.9269, -103.571, 5.98406, 0.14", "35.388, -104.095, 6.09702, 0.28", "35.6702, -104.418, 6.18353, 0.42", "36.4181, -105.282, 6.41663, 0.1", "36.8154, -105.76, 6.51677, 0.1", "37.2106, -106.244, 6.61281, 0.14", "38.0224, -107.275, 6.78489, 0.1", "38.4312, -107.838, 6.85693, 0.1", "38.6724, -108.214, 6.8788, 0.1", "39.0091, -108.826, 6.85383, 0.14", "39.2775, -109.393, 6.77069, 0.28", "39.5163, -109.965, 6.66545, 0.28", "39.6115, -110.26, 6.60039, 0.42", "39.8247, -110.848, 6.53309, 0.28", "40.059, -111.435, 6.52008, 0.14", "40.6209, -112.497, 6.65791, 0.1", "41.252, -113.454, 6.86682, 0.28", "41.6251, -113.949, 6.99301, 0.14", "42.4365, -114.956, 7.27212, 0.1", "42.8356, -115.425, 7.40225, 0.1", "43.699, -116.4, 7.65749, 0.1", "44.1585, -116.906, 7.80643, 0.1", "44.619, -117.434, 7.90152, 0.1", "44.8258, -117.667, 7.93167, 0.1", "45.2677, -118.219, 7.91581, 0.1", "45.5427, -118.557, 7.87689, 0.1" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-32.6121, -32.7956, -35.1891, 0.28", "-32.8167, -33.2713, -35.1413, 0.28", "-33.2015, -34.221, -35.0498, 0.14", "-33.3948, -34.7016, -35.0037, 0.28", "-33.6848, -35.4567, -34.9336, 0.14", "-33.962, -36.2279, -34.865, 0.1", "-34.1211, -36.7281, -34.8239, 0.1", "-34.2925, -37.5175, -34.7719, 0.14", "-34.3416, -38.0347, -34.7482, 0.28", "-34.328, -38.3986, -34.7392, 0.42", "-34.2692, -38.7616, -34.7377, 0.98", "-34.0864, -39.4611, -34.746, 0.84", "-33.8135, -40.2375, -34.7665, 0.7", "-33.5426, -40.9034, -34.7901, 0.56", "-33.217, -41.6684, -34.8196, 0.42", "-32.9339, -42.3292, -34.7941, 0.28", "-32.65, -43.0044, -34.7268, 0.14", "-32.3492, -43.7519, -34.6146, 0.1", "-32.0978, -44.4275, -34.4876, 0.1", "-31.858, -45.1079, -34.3447, 0.1", "-31.4047, -46.4997, -34.0306, 0.1", "-31.1889, -47.1848, -33.872, 0.1", "-31.0021, -47.8625, -33.7196, 0.1", "-30.8405, -48.5661, -33.5786, 0.1", "-30.7096, -49.2776, -33.4677, 0.14", "-30.6583, -49.6403, -33.4343, 0.28", "-30.6195, -50.0024, -33.4296, 0.7", "-30.5449, -50.8084, -33.417, 0.56", "-30.4803, -51.5374, -33.4052, 0.42", "-30.4231, -52.3576, -33.3894, 0.28", "-30.3757, -53.0878, -33.3748, 0.14", "-30.3213, -53.8212, -33.3612, 0.1", "-30.2886, -54.1713, -33.3558, 0.1", "-30.2145, -54.903, -33.3455, 0.1", "-30.1744, -55.4214, -33.3361, 0.1", "-30.1226, -56.1514, -33.3222, 0.1", "-30.0959, -56.8862, -33.3041, 0.1", "-30.0814, -57.6052, -33.2845, 0.1", "-30.0799, -58.4271, -33.2596, 0.1", "-30.0975, -59.2512, -33.2315, 0.1", "-30.1273, -59.9731, -33.2046, 0.1", "-30.1795, -60.7955, -33.171, 0.1", "-30.2326, -61.5248, -33.1401, 0.1", "-30.2824, -62.3321, -33.1073, 0.14", "-30.3063, -63.1536, -33.0783, 0.28", "-30.3214, -63.9649, -33.0511, 0.42", "-30.3418, -64.6961, -33.0254, 0.56", "-30.3463, -65.0636, -33.0134, 0.42", "-30.3534, -65.7983, -33.0478, 0.42", "-30.3449, -66.5252, -33.1335, 0.56", "-30.3286, -67.0258, -33.2221, 0.1", "-30.2887, -67.8307, -33.3973, 0.1", "-30.2479, -68.5454, -33.5662, 0.1", "-30.1375, -69.9975, -33.9134, 0.1", "-30.1097, -70.3544, -33.9976, 0.1", "-30.0429, -71.0542, -34.1505, 0.7", "-29.9519, -71.7717, -34.2841, 0.56", "-29.8459, -72.4891, -34.3834, 0.42", "-29.7352, -73.2144, -34.4353, 0.42", "-29.6464, -73.7135, -34.3943, 0.56", "-29.5097, -74.4254, -34.293, 0.56", "-29.3722, -75.1344, -34.174, 0.42", "-29.2306, -75.8421, -34.0324, 0.28", "-29.0813, -76.5389, -33.8655, 0.14", "-28.7426, -77.9424, -33.4629, 0.1", "-28.5515, -78.5994, -33.241, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-32.6121, -32.7956, -35.1891, 0.1", "-33.389, -31.537, -34.3277, 0.1", "-33.815, -30.962, -33.9392, 0.1", "-34.2807, -30.4207, -33.569, 0.1", "-34.8358, -29.821, -33.1557, 0.1", "-35.3458, -29.3085, -32.8033, 0.1", "-35.3458, -29.3085, -32.8033, 0.1", "-36.1317, -28.5591, -32.4204, 0.1", "-36.5335, -28.1907, -32.2263, 0.1", "-36.5335, -28.1907, -32.2263, 0.1", "-37.1203, -27.5672, -31.9332, 0.1", "-37.6294, -26.9869, -31.6744, 0.1", "-38.1075, -26.3722, -31.4233, 0.1", "-38.5853, -25.6501, -31.1602, 0.1", "-38.9904, -24.9774, -30.9302, 0.1", "-39.3766, -24.294, -30.7749, 0.1", "-39.3766, -24.294, -30.7749, 0.1", "-39.7266, -23.56, -30.7327, 0.1", "-40.053, -22.8097, -30.7251, 0.1", "-40.3397, -22.0478, -30.7402, 0.1", "-40.9088, -20.4284, -30.7783, 0.1", "-41.1647, -19.6702, -30.7861, 0.1", "-41.4524, -18.8033, -30.8366, 0.1", "-41.7051, -18.0323, -30.9057, 0.1", "-41.9854, -17.1803, -30.9853, 0.1", "-42.2454, -16.4104, -31.0369, 0.1", "-42.5038, -15.6341, -31.0463, 0.1", "-43.0115, -14.1524, -31.0715, 0.1", "-43.2865, -13.3966, -31.0749, 0.1", "-43.5702, -12.6335, -31.0594, 0.1", "-43.8669, -11.8711, -31.0729, 0.1", "-44.1996, -11.0164, -31.0979, 0.1", "-44.4931, -10.2676, -31.1063, 0.1", "-44.7801, -9.50595, -31.0844, 0.1", "-45.0639, -8.7385, -31.0786, 0.1", "-45.6596, -7.1268, -31.0766, 0.1", "-45.9431, -6.37414, -31.0696, 0.1", "-46.2406, -5.61683, -31.1006, 0.1", "-46.5745, -4.7642, -31.1578, 0.1", "-46.8736, -4.00427, -31.2085, 0.1", "-47.1615, -3.24339, -31.2421, 0.1", "-47.4405, -2.489, -31.2364, 0.1", "-48.0369, -0.877549, -31.2342, 0.1", "-48.3259, -0.11208, -31.2269, 0.1", "-48.6244, 0.644859, -31.2575, 0.1", "-48.953, 1.48138, -31.3136, 0.1", "-49.2512, 2.23738, -31.364, 0.1", "-49.5397, 3.00188, -31.4065, 0.1", "-49.8199, 3.76635, -31.4145, 0.1", "-50.4048, 5.37188, -31.4574, 0.1", "-50.688, 6.13503, -31.4764, 0.1", "-50.9815, 6.8945, -31.4786, 0.1", "-51.1279, 7.27633, -31.4656, 0.1", "-51.4152, 8.0244, -31.3965, 0.1", "-51.708, 8.77326, -31.2681, 0.1", "-52.0103, 9.52257, -31.1391, 0.1", "-52.3245, 10.2693, -31.0578, 0.1", "-52.6531, 11.0168, -31.0056, 0.1", "-52.9927, 11.7561, -30.9703, 0.1", "-53.3282, 12.4869, -30.9541, 0.1", "-54.0458, 14.0481, -30.9368, 0.1", "-54.3856, 14.7879, -30.9259, 0.1", "-54.7125, 15.5377, -30.9046, 0.1", "-54.8642, 15.902, -30.883, 0.1", "-55.1515, 16.6603, -30.8095, 0.1", "-55.4163, 17.4253, -30.6902, 0.1", "-55.6601, 18.1814, -30.5118, 0.1", "-55.9258, 19.0369, -30.3137, 0.1", "-56.1423, 19.7931, -30.1455, 0.1", "-56.2931, 20.3388, -30.0262, 0.1", "-56.5041, 21.1072, -29.8588, 0.1", "-56.7236, 21.8767, -29.688, 0.1", "-56.936, 22.6301, -29.5217, 0.1", "-57.1887, 23.4878, -29.3283, 0.1", "-57.4165, 24.2501, -29.1552, 0.1", "-57.6568, 25.0076, -28.9779, 0.1", "-57.9224, 25.7725, -28.8602, 0.1", "-58.0669, 26.1496, -28.8265, 0.1", "-58.3848, 26.8985, -28.7933, 0.1", "-58.7316, 27.6395, -28.7786, 0.1", "-59.0872, 28.3719, -28.7725, 0.1", "-59.8339, 29.8626, -28.7506, 0.1", "-60.1994, 30.5741, -28.725, 0.1", "-60.593, 31.2914, -28.7268, 0.1", "-60.9892, 32.0025, -28.7474, 0.1", "-61.3853, 32.7136, -28.7679, 0.1", "-61.779, 33.4309, -28.7699, 0.1", "-62.1606, 34.1492, -28.7334, 0.1", "-62.9413, 35.6134, -28.668, 0.1", "-63.3229, 36.3318, -28.6315, 0.1", "-63.7166, 37.0491, -28.6335, 0.1", "-64.1135, 37.7596, -28.6575, 0.1", "-64.511, 38.4697, -28.6851, 0.1", "-64.9065, 39.1859, -28.6962, 0.1", "-65.2835, 39.8912, -28.6682, 0.1", "-66.0711, 41.3588, -28.747, 0.1", "-66.261, 41.7145, -28.7871, 0.1", "-66.6492, 42.4183, -28.9406, 0.1", "-67.0358, 43.1095, -29.1293, 0.1", "-67.4153, 43.7912, -29.3761, 0.1", "-68.191, 45.2, -29.9592, 0.1", "-68.5769, 45.8675, -30.2332, 0.1", "-69.4194, 47.1892, -30.7963, 0.1", "-69.8674, 47.8169, -31.0697, 0.1", "-70.921, 49.0715, -31.562, 0.1", "-70.921, 49.0715, -31.562, 0.1", "-71.822, 49.769, -31.7283, 0.1", "-72.5859, 50.2664, -31.8055, 0.1", "-73.0781, 50.5453, -31.7949, 0.1", "-74.1133, 51.0624, -31.7986, 0.1", "-75.5328, 51.7067, -31.7712, 0.1", "-76.3729, 52.095, -31.7728, 0.1", "-76.8856, 52.3341, -31.7847, 0.1", "-77.7176, 52.7145, -31.7882, 0.1", "-79.1373, 53.3573, -31.8348, 0.1", "-80.1948, 53.8433, -31.8641, 0.1", "-81.0181, 54.2188, -31.8505, 0.1", "-81.5469, 54.4535, -31.8504, 0.1", "-82.5837, 54.938, -31.843, 0.1", "-83.9693, 55.6508, -31.79, 0.1", "-84.7521, 56.1358, -31.6973, 0.1", "-85.1984, 56.4794, -31.6432, 0.1", "-85.1984, 56.4794, -31.6432, 0.1", "-85.7322, 57.0861, -31.5146, 0.1", "-86.185, 57.7228, -31.3417, 0.1", "-86.5949, 58.3921, -31.1103, 0.1", "-87.0197, 59.0677, -30.9486, 0.1", "-87.2398, 59.4076, -30.8904, 0.1", "-87.7607, 60.147, -30.8613, 0.1", "-88.2789, 60.7788, -30.9056, 0.1", "-88.8574, 61.3312, -31.0579, 0.1", "-90.1651, 62.2584, -31.6577, 0.1", "-90.8193, 62.6081, -32.0031, 0.1", "-92.0745, 63.1182, -32.6681, 0.1", "-92.7637, 63.3285, -33.0254, 0.1", "-94.2289, 63.6484, -33.7497, 0.1", "-95.6008, 63.8699, -34.3388, 0.1", "-96.6862, 64.0211, -34.6684, 0.1", "-97.577, 64.1683, -34.8317, 0.1", "-98.1394, 64.3044, -34.8309, 0.1", "-98.1394, 64.3044, -34.8309, 0.1", "-98.9115, 64.696, -34.5676, 0.1", "-99.64, 65.1239, -34.2431, 0.1", "-100.368, 65.5706, -33.9165, 0.1", "-100.829, 65.842, -33.7111, 0.1", "-101.59, 66.2261, -33.3793, 0.1", "-102.365, 66.5565, -33.0484, 0.1", "-102.365, 66.5565, -33.0484, 0.1", "-103.192, 66.7571, -32.7126, 0.1", "-104.015, 66.9274, -32.3817, 0.1", "-104.851, 67.0903, -32.0469, 0.1", "-105.366, 67.1965, -31.8396, 0.1", "-105.742, 67.2935, -31.7215, 0.1", "-106.801, 67.6331, -31.4517, 0.1", "-107.649, 67.9608, -31.3528, 0.1", "-108.17, 68.1827, -31.3404, 0.1", "-109.007, 68.5667, -31.4282, 0.1", "-110.532, 69.2998, -31.6895, 0.1", "-111.041, 69.5521, -31.7967, 0.1", "-112.657, 70.3666, -32.1772, 0.1", "-113.158, 70.6162, -32.3245, 0.1", "-114.646, 71.3488, -32.7693, 0.1", "-115.436, 71.7369, -32.9801, 0.1", "-115.947, 71.991, -33.0744, 0.1", "-116.752, 72.395, -33.1658, 0.1", "-118.051, 73.0377, -33.2609, 0.1", "-119.091, 73.5414, -33.3221, 0.1", "-119.928, 73.9138, -33.3264, 0.1", "-120.46, 74.1421, -33.3236, 0.1", "-121.513, 74.5876, -33.2856, 0.1", "-122.954, 75.1948, -33.2561, 0.1", "-123.79, 75.5396, -33.218, 0.1", "-124.624, 75.885, -33.2048, 0.1", "-125.471, 76.2302, -33.1946, 0.1", "-125.994, 76.4456, -33.217, 0.1", "-127.569, 77.1196, -33.3244, 0.1", "-128.392, 77.491, -33.3586, 0.1", "-129.216, 77.8851, -33.4116, 0.1", "-129.714, 78.1466, -33.4763, 0.1", "-130.962, 78.864, -33.6694, 0.1", "-131.725, 79.338, -33.8449, 0.1", "-132.44, 79.856, -34.0411, 0.1", "-133.1, 80.4243, -34.2866, 0.1", "-134.289, 81.5717, -34.7741, 0.1", "-134.809, 82.1455, -34.9765, 0.1", "-135.691, 83.2682, -35.2431, 0.1", "-136.199, 84.0135, -35.3977, 0.1", "-136.494, 84.5137, -35.4717, 0.1", "-136.909, 85.3285, -35.5012, 0.1", "-137.241, 86.0667, -35.4123, 0.1", "-137.565, 86.7884, -35.2675, 0.1", "-137.889, 87.5072, -35.0631, 0.1", "-138.06, 87.8634, -34.9577, 0.1", "-138.418, 88.5623, -34.7425, 0.1", "-138.812, 89.2621, -34.5848, 0.1", "-139.245, 89.9431, -34.4756, 0.1", "-139.731, 90.5839, -34.4691, 0.1", "-139.731, 90.5839, -34.4691, 0.1", "-140.354, 91.2333, -34.6388, 0.1", "-141.567, 92.3643, -35.0598, 0.1", "-142.153, 92.8538, -35.3134, 0.1", "-143.41, 93.8662, -35.8993, 0.1", "-143.994, 94.3414, -36.1722, 0.1", "-145.117, 95.2683, -36.7495, 0.1", "-145.76, 95.8055, -37.0908, 0.1", "-146.976, 96.8625, -37.6831, 0.1", "-147.549, 97.3798, -37.9424, 0.1", "-148.117, 97.9192, -38.1789, 0.1", "-149.109, 98.9055, -38.5707, 0.1", "-149.702, 99.5625, -38.7596, 0.1", "-150.208, 100.167, -38.9008, 0.1", "-150.721, 100.79, -39.0304, 0.1", "-151.801, 102.089, -39.3073, 0.1", "-152.311, 102.719, -39.4186, 0.1", "-152.82, 103.345, -39.5287, 0.1", "-153.33, 103.97, -39.6672, 0.1", "-154.399, 105.273, -39.9637, 0.1", "-154.902, 105.901, -40.0884, 0.1", "-155.395, 106.541, -40.2176, 0.1", "-156.432, 107.862, -40.5524, 0.1", "-156.933, 108.487, -40.7185, 0.1", "-157.42, 109.105, -40.8637, 0.1", "-157.9, 109.755, -40.9618, 0.1", "-158.899, 111.082, -41.1066, 0.1", "-158.899, 111.082, -41.1066, 0.1", "-159.429, 111.812, -41.0346, 0.1", "-159.914, 112.463, -40.9344, 0.1", "-160.422, 113.094, -40.8502, 0.1", "-160.993, 113.789, -40.7517, 0.1", "-161.502, 114.421, -40.6413, 0.1", "-162.07, 115.117, -40.5369, 0.1", "-162.582, 115.751, -40.4581, 0.1", "-163.658, 117.073, -40.311, 0.1", "-164.163, 117.709, -40.2429, 0.1", "-164.65, 118.362, -40.1691, 0.1", "-165.166, 119.098, -40.0667, 0.1", "-165.594, 119.769, -39.9472, 0.1", "-165.797, 120.11, -39.8668, 0.1", "-166.177, 120.8, -39.6441, 0.1", "-166.575, 121.473, -39.417, 0.1", "-166.999, 122.132, -39.1813, 0.1", "-167.45, 122.765, -38.9385, 0.1", "-167.45, 122.765, -38.9385, 0.1", "-168.038, 123.387, -38.6449, 0.1", "-168.672, 123.971, -38.3385, 0.1", "-169.317, 124.527, -38.0312, 0.1", "-169.98, 125.073, -37.7179, 0.1", "-170.641, 125.608, -37.4069, 0.1", "-171.055, 125.961, -37.2099, 0.1", "-171.686, 126.549, -36.9039, 0.1", "-172.24, 127.091, -36.7031, 0.1", "-172.24, 127.091, -36.7031, 0.1", "-172.857, 127.78, -36.6769, 0.1", "-173.373, 128.39, -36.7308, 0.1", "-173.883, 129.011, -36.8828, 0.1", "-174.925, 130.295, -37.3238, 0.1", "-175.402, 130.911, -37.5617, 0.1", "-176.301, 132.213, -38.0877, 0.1", "-176.69, 132.87, -38.3687, 0.1", "-177.356, 134.278, -38.9642, 0.1", "-177.472, 134.641, -39.1021, 0.1", "-177.576, 135.5, -39.354, 0.1", "-177.584, 136.381, -39.56, 0.1", "-177.561, 136.95, -39.6642, 0.1", "-177.568, 137.852, -39.8209, 0.1", "-177.672, 138.409, -39.9353, 0.1", "-177.829, 138.772, -40.0425, 0.1", "-178.341, 139.491, -40.2827, 0.1", "-179.483, 140.711, -40.654, 0.1", "-180.144, 141.295, -40.8557, 0.1", "-181.469, 142.331, -41.2004, 0.1", "-181.79, 142.56, -41.292, 0.1", "-182.527, 143.063, -41.4958, 0.1", "-183.255, 143.548, -41.7264, 0.1", "-184.631, 144.484, -42.1465, 0.1", "-185.366, 144.981, -42.3759, 0.1", "-186.616, 145.853, -42.7263, 0.1", "-187.33, 146.351, -42.9722, 0.1", "-188.657, 147.331, -43.4296, 0.1", "-189.275, 147.834, -43.6144, 0.1", "-189.681, 148.223, -43.6791, 0.1", "-190.206, 148.85, -43.6994, 0.1", "-190.976, 150.07, -43.5221, 0.1", "-191.714, 151.528, -43.2025, 0.1", "-192.028, 152.247, -42.971, 0.1", "-192.344, 152.942, -42.7309, 0.1", "-192.727, 153.72, -42.4401, 0.1", "-193.108, 154.384, -42.1614, 0.1", "-193.313, 154.706, -42.0148, 0.1", "-193.822, 155.403, -41.7426, 0.1", "-194.368, 156.067, -41.4604, 0.1", "-194.944, 156.715, -41.1684, 0.1", "-195.527, 157.343, -40.8764, 0.1", "-196.041, 157.924, -40.6155, 0.1", "-196.041, 157.924, -40.6155, 0.1", "-196.554, 158.617, -40.3424, 0.1", "-196.979, 159.271, -40.1071, 0.1", "-197.371, 159.953, -39.881, 0.1", "-197.736, 160.647, -39.6634, 0.1", "-197.736, 160.647, -39.6634, 0.1", "-198.075, 161.346, -39.4557, 0.1", "-198.402, 162.063, -39.2501, 0.1", "-198.714, 162.788, -39.0493, 0.1", "-199.016, 163.522, -38.8513, 0.1", "-199.309, 164.256, -38.6567, 0.1", "-199.599, 164.996, -38.4625, 0.1", "-199.879, 165.722, -38.2741, 0.1", "-200.192, 166.555, -38.0605, 0.1", "-200.466, 167.298, -37.8723, 0.1", "-200.734, 168.048, -37.6852, 0.1", "-200.991, 168.784, -37.5039, 0.1", "-201.122, 169.16, -37.4115, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "49.6363, -315.71, -53.0485, 0.1", "49.6679, -316.081, -53.1939, 0.1", "49.7054, -316.608, -53.3946, 0.1", "49.731, -317.195, -53.6034, 0.1", "49.7523, -317.733, -53.7772, 0.1", "49.7808, -318.871, -54.1129, 0.1", "49.7937, -319.408, -54.2563, 0.1", "49.8179, -320.013, -54.4447, 0.1", "49.8433, -320.601, -54.6454, 0.1", "49.8657, -321.132, -54.8294, 0.1", "49.8758, -321.733, -55.027, 0.1", "49.88, -322.275, -55.1774, 0.1", "49.9006, -323.411, -55.4993, 0.1", "49.9133, -323.681, -55.5724, 0.14", "49.9451, -324.293, -55.7247, 0.14", "49.9769, -324.903, -55.8545, 0.1", "50.0031, -325.46, -55.9458, 0.1", "50.0244, -326.019, -56.0039, 0.1", "50.0482, -326.584, -56.0214, 0.1", "50.0865, -327.207, -56.0371, 0.1", "50.1378, -327.77, -56.0462, 0.1", "50.22, -328.398, -56.0487, 0.1", "50.2944, -328.949, -56.0503, 0.1", "50.3763, -329.505, -56.0498, 0.1", "50.4695, -330.06, -56.0458, 0.1", "50.5797, -330.614, -56.0801, 0.1", "50.7096, -331.22, -56.1558, 0.1", "50.7988, -331.604, -56.2218, 0.1", "50.9222, -332.142, -56.3337, 0.1", "51.022, -332.681, -56.4213, 0.1", "51.195, -333.849, -56.5533, 0.1", "51.251, -334.41, -56.5912, 0.14", "51.2877, -334.971, -56.6031, 0.1", "51.3125, -335.526, -56.5893, 0.1", "51.3116, -336.711, -56.5141, 0.1", "51.2927, -337.273, -56.454, 0.1", "51.2514, -337.888, -56.3615, 0.1", "51.2064, -338.448, -56.2967, 0.1", "51.15, -339.078, -56.2547, 0.1", "51.1035, -339.699, -56.2486, 0.14", "51.094, -339.978, -56.2637, 0.1", "51.0726, -340.609, -56.2978, 0.1", "51.0448, -341.17, -56.3309, 0.1", "50.9941, -341.788, -56.3733, 0.1", "50.9575, -342.344, -56.45, 0.1", "50.9209, -342.902, -56.5339, 0.14", "50.8748, -343.516, -56.6369, 0.28", "50.8104, -344.298, -56.7891, 0.14", "50.7681, -344.676, -56.8787, 0.1", "50.627, -345.772, -57.2, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "49.6363, -315.71, -53.0485, 0.1", "49.1462, -316.036, -53.1114, 0.1", "48.7118, -316.348, -53.08, 0.1", "48.2284, -316.688, -53.0107, 0.1", "47.7411, -317.032, -52.9325, 0.1", "47.4443, -317.243, -52.8551, 0.1", "46.9664, -317.578, -52.7106, 0.1", "46.0973, -318.226, -52.3933, 0.1", "45.6973, -318.532, -52.2303, 0.1", "45.242, -318.877, -52.0409, 0.1", "44.4036, -319.548, -51.7015, 0.1", "44.2079, -319.722, -51.6416, 0.1", "43.7813, -320.122, -51.5314, 0.1", "43.5182, -320.396, -51.5028, 0.1", "43.1349, -320.851, -51.4825, 0.1", "42.7819, -321.335, -51.5319, 0.1", "42.2589, -322.239, -51.8634, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-20.6332, 66.172, -3.45054, 0.28", "-21.7131, 66.6169, -3.37082, 0.28", "-22.2253, 66.8647, -3.35372, 0.14", "-22.549, 67.0326, -3.35176, 0.28", "-23.1782, 67.3852, -3.36117, 0.42", "-23.4904, 67.5732, -3.37089, 0.42", "-23.9761, 67.8844, -3.39198, 0.28", "-24.4275, 68.2287, -3.44622, 0.14", "-24.7049, 68.4633, -3.47751, 0.1", "-25.1209, 68.8512, -3.52122, 0.1", "-25.5238, 69.2618, -3.56048, 0.14", "-25.9126, 69.6775, -3.59665, 0.28", "-26.2691, 70.0486, -3.63068, 0.14", "-26.5202, 70.3006, -3.65551, 0.1", "-26.8985, 70.6488, -3.69567, 0.14", "-27.3381, 71.0087, -3.7463, 0.28", "-27.7884, 71.3459, -3.84013, 0.42", "-28.2625, 71.6631, -3.9348, 0.56", "-28.563, 71.847, -3.99059, 0.42", "-29.0512, 72.1426, -4.07214, 0.28", "-29.365, 72.3315, -4.11855, 0.28", "-30.128, 72.8288, -4.21285, 0.42", "-30.9953, 73.465, -4.29626, 0.1", "-31.4306, 73.8323, -4.32516, 0.1", "-31.848, 74.2298, -4.34105, 0.1", "-32.2414, 74.6428, -4.34566, 0.1", "-32.6212, 75.0665, -4.38525, 0.14", "-32.7908, 75.2584, -4.4146, 0.28", "-33.1573, 75.675, -4.54674, 0.42", "-33.4931, 76.0408, -4.68602, 0.56", "-33.8682, 76.4341, -4.85896, 0.7", "-34.5936, 77.1572, -5.20799, 0.56", "-34.8392, 77.3886, -5.32365, 0.42", "-35.3607, 77.8528, -5.54916, 0.42", "-35.6171, 78.0801, -5.64812, 0.56", "-35.6171, 78.0801, -5.64812, 0.7", "-36.0366, 78.4653, -5.73798, 0.56", "-36.4306, 78.869, -5.82254, 0.42", "-36.7968, 79.2918, -5.93399, 0.28", "-37.106, 79.6866, -6.05431, 0.14", "-37.4386, 80.1265, -6.20007, 0.1", "-37.7621, 80.5711, -6.35145, 0.1", "-38.3074, 81.3939, -6.71207, 0.14", "-38.3074, 81.3939, -6.71207, 0.28", "-38.6257, 81.8308, -6.89402, 0.56", "-38.9935, 82.2505, -7.01199, 0.42", "-39.3637, 82.6076, -7.04999, 0.56", "-40.1027, 83.2043, -6.99791, 0.7", "-41.0602, 83.852, -6.82811, 0.14", "-41.3671, 84.0403, -6.7708, 0.1", "-42.37, 84.5916, -6.54919, 0.1", "-42.6839, 84.7448, -6.47731, 0.14", "-43.0133, 84.8952, -6.40546, 0.28", "-43.6544, 85.1996, -6.27681, 0.42", "-43.9752, 85.372, -6.25759, 0.56", "-44.2871, 85.5608, -6.26219, 0.42", "-44.8806, 85.9781, -6.33662, 0.7", "-45.3229, 86.3326, -6.44536, 0.56", "-45.7393, 86.6951, -6.58853, 0.42", "-45.7393, 86.6951, -6.58853, 0.28", "-46.1216, 87.0659, -6.80965, 0.1", "-46.5128, 87.4209, -7.02466, 0.1", "-47.3036, 88.0651, -7.37584, 0.1", "-47.6055, 88.2594, -7.44008, 0.1", "-48.1171, 88.5112, -7.4497, 0.14", "-49.0243, 88.8774, -7.32962, 0.28", "-49.9946, 89.1706, -6.94835, 0.84", "-50.8699, 89.3944, -6.36162, 0.7", "-51.6791, 89.6187, -5.67764, 0.84", "-51.8566, 89.6772, -5.49996, 0.98", "-52.0198, 89.7369, -5.3095, 1.12", "-52.6591, 90.0016, -4.48187, 0.56", "-53.2953, 90.3292, -3.67459, 0.42", "-53.6048, 90.5173, -3.30749, 0.28", "-54.2769, 90.9571, -2.58731, 0.28", "-54.9252, 91.3871, -1.98212, 0.42", "-54.9252, 91.3871, -1.98212, 0.56", "-55.4728, 91.7729, -1.70279, 0.7", "-55.9147, 92.1085, -1.57074, 0.56", "-56.1925, 92.3405, -1.52627, 0.42", "-56.5971, 92.7425, -1.52864, 0.28", "-56.9785, 93.1748, -1.51986, 0.14", "-57.2991, 93.5734, -1.47935, 0.1", "-57.6245, 94.0256, -1.35705, 0.1", "-57.8945, 94.4344, -1.19582, 0.1", "-58.1443, 94.836, -0.996694, 0.1", "-58.6234, 95.6305, -0.503069, 0.14", "-58.7335, 95.8177, -0.364113, 0.28", "-59.177, 96.5015, 0.29057, 0.42", "-59.3895, 96.8165, 0.635522, 0.56", "-59.5034, 96.9566, 0.816151, 0.56", "-59.748, 97.2295, 1.17898, 0.7", "-60.013, 97.4941, 1.53354, 0.98", "-60.6034, 98.0469, 2.24745, 0.84", "-60.897, 98.3257, 2.5627, 0.7", "-61.5385, 98.9002, 3.2179, 0.56", "-61.6968, 99.0387, 3.36701, 0.42", "-62.3861, 99.6216, 3.95767, 0.1", "-62.7815, 99.9251, 4.24862, 0.1", "-63.1497, 100.193, 4.4717, 0.14", "-64.0624, 100.808, 4.86255, 0.1", "-64.3627, 101.009, 4.9112, 0.1", "-64.6625, 101.202, 4.93184, 0.1", "-65.2737, 101.583, 4.84514, 0.14", "-65.2737, 101.583, 4.84514, 0.28", "-66.1782, 102.093, 4.30451, 0.84", "-66.7151, 102.452, 3.65529, 0.84" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-20.6332, 66.172, -3.45054, 0.84", "-20.7118, 66.8284, -3.392, 0.84", "-20.8109, 67.5518, -3.33113, 0.98", "-20.9048, 68.2851, -3.26751, 0.84", "-20.9921, 68.9261, -3.21343, 0.84", "-21.0904, 69.5804, -3.16086, 0.84", "-21.2118, 70.3125, -3.10535, 0.7", "-21.3348, 70.9632, -3.06036, 0.56", "-21.4918, 71.6775, -3.01737, 0.56", "-21.643, 72.3228, -2.98123, 0.56", "-21.7933, 72.9649, -2.94522, 0.7", "-21.9504, 73.6056, -2.91135, 0.84", "-22.1322, 74.2434, -2.88498, 0.84", "-22.1322, 74.2434, -2.88498, 0.98" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-44.2606, 62.9856, -37.3268, 1.12", "-44.1492, 63.4724, -37.3503, 1.12", "-44.0048, 64.0247, -37.3784, 0.98", "-43.8335, 64.5615, -37.4082, 0.84", "-43.7128, 64.9016, -37.4281, 0.7", "-43.5001, 65.4311, -37.4612, 0.56", "-43.2677, 65.9453, -37.4954, 0.7", "-42.9951, 66.4482, -37.5325, 0.1", "-42.6963, 66.9266, -37.5711, 0.14", "-42.4916, 67.22, -37.6227, 0.1", "-42.1692, 67.6705, -37.7356, 0.1", "-41.8462, 68.1133, -37.8741, 0.1", "-41.6442, 68.4015, -37.9742, 0.1", "-41.3381, 68.8475, -38.1386, 0.1", "-40.7882, 69.7141, -38.45, 0.14", "-40.5107, 70.1773, -38.6082, 0.42", "-40.3412, 70.4818, -38.7042, 0.28", "-40.0155, 71.101, -38.8717, 0.14", "-39.8539, 71.4169, -38.9406, 0.1", "-39.5397, 72.0518, -39.037, 0.1", "-39.3739, 72.3772, -39.0601, 0.1", "-39.2131, 72.6912, -39.0826, 0.1", "-38.9072, 73.3359, -39.1266, 0.1", "-38.7726, 73.667, -39.1803, 0.14", "-38.6609, 74.0057, -39.2623, 0.28", "-38.603, 74.2414, -39.3343, 0.42", "-38.5137, 74.6991, -39.5374, 0.1", "-38.4357, 75.1941, -39.7932, 0.14", "-38.3042, 76.1247, -40.3119, 0.1", "-38.2344, 76.6146, -40.5795, 0.1", "-38.1953, 76.8365, -40.695, 0.1", "-37.9903, 77.8346, -41.2398, 0.14", "-37.867, 78.3201, -41.515, 0.1", "-37.7743, 78.6317, -41.6828, 0.1", "-37.6081, 79.118, -41.9116, 0.1", "-37.4149, 79.6081, -42.1334, 0.1", "-37.0235, 80.5322, -42.5009, 0.1", "-36.8779, 80.8475, -42.6011, 0.14", "-36.5706, 81.4651, -42.789, 0.28", "-36.4066, 81.7811, -42.8734, 0.42", "-36.1419, 82.2689, -42.9811, 0.56", "-35.8706, 82.7659, -43.0586, 0.42", "-35.5919, 83.2564, -43.0959, 0.28", "-35.4195, 83.5732, -43.1193, 0.14", "-35.087, 84.2095, -43.1653, 0.1", "-34.9359, 84.5257, -43.2118, 0.1", "-34.7936, 84.851, -43.2795, 0.1", "-34.5411, 85.4885, -43.4973, 0.1", "-34.3674, 85.9867, -43.717, 0.1", "-34.2668, 86.2892, -43.8696, 0.1", "-33.9753, 87.194, -44.3684, 0.1", "-33.8746, 87.4981, -44.536, 0.1", "-33.565, 88.3968, -45.0225, 0.1", "-33.4555, 88.7082, -45.1803, 0.1", "-33.2137, 89.3245, -45.4503, 0.1", "-33.0827, 89.6442, -45.5565, 0.1", "-32.8072, 90.2839, -45.7363, 0.1", "-32.6634, 90.6028, -45.8276, 0.1", "-32.4402, 91.1029, -45.9564, 0.1", "-32.2329, 91.6137, -46.1073, 0.1", "-32.0608, 92.1108, -46.3115, 0.1", "-31.8022, 92.957, -46.7255, 0.1", "-31.7498, 93.1663, -46.858, 0.1", "-31.6624, 93.5775, -47.1444, 0.1", "-31.5653, 94.0337, -47.4748, 0.1", "-31.3833, 94.9262, -48.0337, 0.1", "-31.3118, 95.2417, -48.195, 0.1", "-31.0633, 96.2452, -48.4807, 0.1", "-30.9155, 96.7846, -48.5561, 0.1", "-30.7333, 97.3197, -48.5508, 0.1", "-30.3757, 98.3259, -48.45, 0.1", "-30.253, 98.6589, -48.3811, 0.1", "-29.8736, 99.6341, -48.1635, 0.1", "-29.7275, 99.9545, -48.0821, 0.14", "-29.6083, 100.179, -48.0529, 0.14", "-29.0657, 101.06, -48.0943, 0.28", "-28.849, 101.341, -48.1624, 0.28", "-28.4794, 101.75, -48.2888, 0.14", "-28.1294, 102.099, -48.4181, 0.1", "-27.7232, 102.475, -48.5353, 0.1", "-27.2956, 102.835, -48.6206, 0.1", "-26.8914, 103.145, -48.6629, 0.1", "-26.4364, 103.477, -48.7099, 0.1", "-26.1449, 103.689, -48.74, 0.14", "-25.9375, 103.836, -48.7613, 0.28", "-25.5254, 104.122, -48.8476, 0.7", "-25.233, 104.316, -48.9334, 0.56", "-24.8267, 104.587, -49.0762, 0.42", "-24.3718, 104.875, -49.2486, 0.28", "-23.9574, 105.127, -49.4102, 0.14", "-23.0938, 105.652, -49.7602, 0.1", "-22.689, 105.913, -49.9309, 0.1", "-22.2463, 106.213, -50.1137, 0.1", "-21.8711, 106.504, -50.3044, 0.1", "-21.6952, 106.656, -50.4044, 0.1", "-21.6952, 106.656, -50.4044, 0.1", "-21.3847, 107.046, -50.6837, 0.1", "-21.131, 107.453, -50.9827, 0.1", "-20.7615, 108.193, -51.5036, 0.1", "-20.5704, 108.644, -51.7989, 0.1", "-20.2694, 109.417, -52.3151, 0.14", "-20.0998, 109.864, -52.6108, 0.1", "-19.9428, 110.313, -52.9304, 0.1", "-19.8024, 110.76, -53.2428, 0.14", "-19.7069, 111.054, -53.4304, 0.28", "-19.3926, 111.997, -54.0238, 0.14", "-19.2804, 112.296, -54.1939, 0.1", "-18.8997, 113.161, -54.69, 0.1", "-18.7543, 113.455, -54.8518, 0.1", "-18.5148, 113.917, -55.0731, 0.1", "-18.3548, 114.221, -55.1863, 0.1", "-18.0226, 114.839, -55.3235, 0.1", "-17.7571, 115.347, -55.4003, 0.1", "-17.5959, 115.661, -55.4227, 0.1", "-17.3589, 116.175, -55.4971, 0.1", "-17.228, 116.506, -55.5635, 0.1", "-16.9904, 117.165, -55.7249, 0.1", "-16.8269, 117.684, -55.8685, 0.1", "-16.7349, 118.02, -55.9651, 0.1", "-16.4633, 119.015, -56.2623, 0.1", "-16.3122, 119.542, -56.3891, 0.1", "-16.2035, 119.887, -56.4466, 0.1", "-16.0059, 120.412, -56.4872, 0.1", "-15.7585, 120.929, -56.4759, 0.1", "-15.6381, 121.143, -56.4501, 0.14", "-15.1036, 121.94, -56.2758, 0.28", "-14.757, 122.377, -56.1823, 0.14", "-14.3998, 122.806, -56.059, 0.1", "-14.0568, 123.218, -55.8805, 0.1", "-13.8556, 123.473, -55.7208, 0.1", "-13.5771, 123.875, -55.4379, 0.1", "-13.3646, 124.236, -55.1445, 0.14", "-12.9993, 124.948, -54.4868, 0.1", "-12.6632, 125.707, -53.8076, 0.1", "-12.3859, 126.424, -53.2044, 0.1", "-12.2383, 126.852, -52.8673, 0.1", "-12.0069, 127.634, -52.1701, 0.1", "-11.9671, 127.835, -52.4632, 0.14", "-11.7408, 128.934, -53.9128, 0.28", "-11.6232, 129.494, -54.7052, 0.14", "-11.4947, 130.051, -55.4974, 0.28", "-11.457, 130.193, -55.7064, 0.42", "-11.365, 130.519, -56.1553, 0.14", "-11.2481, 130.917, -56.5509, 0.1", "-11.1577, 131.214, -56.7204, 0.1", "-10.9786, 131.868, -56.983, 0.1", "-10.7569, 132.774, -57.2641, 0.1", "-10.6454, 133.302, -57.4541, 0.1", "-10.5483, 133.818, -57.6595, 0.1", "-10.5103, 134.053, -57.7536, 0.1", "-10.4303, 134.58, -57.9598, 0.1", "-10.3632, 135.107, -58.148, 0.1", "-10.2362, 136.131, -58.4425, 0.1", "-10.1772, 136.671, -58.5958, 0.1", "-10.1222, 137.221, -58.7402, 0.1", "-10.0979, 137.469, -58.7959, 0.1", "-10.0628, 137.969, -58.883, 0.1", "-10.0344, 138.528, -58.9433, 0.1", "-10.0134, 139.036, -58.96, 0.1", "-10.0003, 139.598, -58.9777, 0.1", "-10.0017, 140.171, -58.9945, 0.1", "-10.0181, 140.682, -59.0082, 0.1", "-10.0367, 141.245, -59.0233, 0.1", "-10.0576, 141.816, -59.0384, 0.1", "-10.0624, 142.069, -59.0455, 0.1", "-10.0695, 142.578, -59.0978, 0.14", "-10.077, 143.079, -59.1812, 0.1", "-10.0764, 143.629, -59.2998, 0.1", "-10.0816, 144.186, -59.4374, 0.1", "-10.0828, 144.528, -59.5271, 0.1", "-10.0847, 145.565, -59.7987, 0.1", "-10.0818, 146.058, -59.9238, 0.1", "-10.0774, 146.606, -60.051, 0.1", "-10.0827, 147.105, -60.1521, 0.1", "-10.0954, 147.662, -60.2795, 0.1", "-10.1148, 148.149, -60.3901, 0.1", "-10.144, 148.711, -60.5022, 0.1", "-10.1819, 149.257, -60.6299, 0.1", "-10.2016, 149.508, -60.6758, 0.1", "-10.2738, 150.57, -60.8124, 0.1", "-10.3139, 151.078, -60.8489, 0.1", "-10.3439, 151.586, -60.8612, 0.1", "-10.3745, 152.087, -60.8438, 0.14", "-10.441, 153.154, -60.7394, 0.1", "-10.4804, 153.722, -60.6932, 0.1", "-10.5245, 154.218, -60.6511, 0.1", "-10.56, 154.575, -60.6937, 0.1", "-10.6106, 155.061, -60.8448, 0.1", "-10.6595, 155.504, -61.0901, 0.1", "-10.7676, 156.349, -61.6898, 0.1", "-10.8162, 156.755, -61.9922, 0.1", "-10.8959, 157.616, -62.6185, 0.1", "-10.9287, 158.103, -62.9193, 0.1", "-10.934, 159.048, -63.416, 0.1", "-10.9242, 159.284, -63.5068, 0.1", "-10.872, 159.85, -63.5697, 0.1", "-10.8042, 160.408, -63.5203, 0.1", "-10.6857, 161.438, -63.247, 0.1", "-10.6459, 161.762, -63.1097, 0.1", "-10.5802, 162.204, -62.8665, 0.1", "-10.4554, 163.123, -62.3278, 0.1", "-10.4079, 163.605, -62.038, 0.1", "-10.388, 164.06, -61.8062, 0.1", "-10.4181, 164.987, -61.4941, 0.14", "-10.4462, 165.228, -61.4634, 0.28", "-10.5597, 165.783, -61.5391, 0.1", "-10.6923, 166.194, -61.7914, 0.1", "-10.9853, 166.962, -62.4314, 0.1", "-11.1217, 167.317, -62.7691, 0.1", "-11.3974, 168.027, -63.4793, 0.1", "-11.5239, 168.382, -63.8217, 0.14", "-11.9388, 169.734, -65.069, 0.28", "-12.037, 170.113, -65.3801, 0.28", "-12.0991, 170.407, -65.5802, 0.14", "-12.1753, 170.846, -65.8262, 0.1", "-12.2374, 171.374, -66.0114, 0.1", "-12.2698, 171.871, -66.1109, 0.1", "-12.2879, 172.443, -66.1263, 0.1", "-12.2879, 172.443, -66.1263, 0.1", "-12.3056, 172.951, -66.1398, 0.1", "-12.3134, 173.513, -66.1558, 0.1", "-12.3231, 174.086, -66.1719, 0.1" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-44.2606, 62.9856, -37.3268, 0.7", "-44.9329, 63.2228, -37.5984, 0.7", "-45.461, 63.4397, -37.8129, 0.56", "-45.7925, 63.5849, -37.9353, 0.42", "-46.324, 63.8236, -38.1155, 0.28", "-47.3182, 64.2926, -38.4216, 0.14", "-47.6531, 64.4598, -38.5148, 0.1", "-48.1755, 64.7442, -38.6519, 0.1", "-48.826, 65.1323, -38.7981, 0.14", "-49.1415, 65.332, -38.8518, 0.1", "-49.6427, 65.6669, -38.9446, 0.1", "-50.1322, 66.0097, -39.027, 0.1", "-50.4388, 66.2414, -39.0961, 0.1", "-50.8979, 66.6121, -39.2216, 0.1", "-51.3419, 66.9978, -39.3561, 0.1", "-52.1032, 67.6697, -39.5924, 0.1", "-52.4927, 68.0131, -39.7505, 0.14", "-52.9192, 68.3963, -39.9583, 0.28", "-53.333, 68.7751, -40.1801, 0.14", "-53.7395, 69.1592, -40.4065, 0.1", "-54.0001, 69.4107, -40.5391, 0.14", "-54.7073, 70.1277, -40.8156, 0.28", "-54.9584, 70.3944, -40.9505, 0.42", "-55.3161, 70.8228, -41.1797, 0.7", "-55.6171, 71.2294, -41.3837, 0.56", "-55.9283, 71.6832, -41.6311, 0.42", "-56.1995, 72.1032, -41.8493, 0.28", "-56.7618, 73.0051, -42.2645, 0.14", "-57.0236, 73.4241, -42.4892, 0.1", "-57.2735, 73.842, -42.7353, 0.1", "-57.7826, 74.7163, -43.2629, 0.1", "-58.0263, 75.1379, -43.5088, 0.1", "-58.2754, 75.5623, -43.7378, 0.1", "-58.8295, 76.4737, -44.1432, 0.1", "-59.1057, 76.9068, -44.3267, 0.1", "-59.3986, 77.3371, -44.4805, 0.1", "-59.7446, 77.8271, -44.5909, 0.1", "-59.9024, 78.0432, -44.6276, 0.1", "-60.2607, 78.5351, -44.668, 0.1", "-60.2607, 78.5351, -44.668, 0.1", "-60.6038, 79.0247, -44.7489, 0.1", "-60.8925, 79.4613, -44.8928, 0.1", "-61.1702, 79.8782, -45.0841, 0.1", "-61.4568, 80.2841, -45.3026, 0.1", "-62.0761, 81.1092, -45.7981, 0.14", "-62.3755, 81.4764, -46.0632, 0.28", "-62.9259, 82.0922, -46.569, 0.42", "-63.3703, 82.5344, -47.012, 0.1", "-63.7355, 82.8646, -47.3719, 0.1", "-63.9672, 83.0509, -47.6041, 0.1", "-64.6667, 83.5828, -48.3374, 0.1", "-65.0337, 83.8482, -48.736, 0.1", "-65.6768, 84.3127, -49.4123, 0.1", "-66.0424, 84.5829, -49.809, 0.1", "-66.7508, 85.1067, -50.5411, 0.14", "-67.4875, 85.6469, -51.2249, 0.1", "-67.7432, 85.8353, -51.4437, 0.1", "-68.1532, 86.1366, -51.7679, 0.1", "-68.569, 86.444, -52.0785, 0.1", "-68.9743, 86.7539, -52.4256, 0.1", "-69.2197, 86.9462, -52.6378, 0.14", "-69.8517, 87.4225, -53.2593, 0.28", "-70.3129, 87.7603, -53.7645, 0.28", "-70.9437, 88.1829, -54.4789, 0.14", "-71.649, 88.6265, -55.2585, 0.1", "-71.9037, 88.7721, -55.5162, 0.1", "-72.7677, 89.2267, -56.2691, 0.1", "-73.0556, 89.3689, -56.4829, 0.1", "-73.5177, 89.6002, -56.7918, 0.1", "-74.0139, 89.8441, -57.0492, 0.14", "-74.5169, 90.0951, -57.2599, 0.1", "-74.8294, 90.2689, -57.4046, 0.1", "-75.7004, 90.8247, -57.8978, 0.1", "-76.1308, 91.1303, -58.2032, 0.14", "-76.3801, 91.3267, -58.4071, 0.1", "-76.7694, 91.653, -58.7447, 0.1", "-77.473, 92.3067, -59.3608, 0.14", "-78.1827, 92.9945, -59.931, 0.28", "-78.1827, 92.9945, -59.931, 0.42", "-78.5539, 93.3989, -60.1969, 0.28", "-78.9096, 93.8189, -60.4439, 0.14", "-79.2231, 94.2186, -60.6354, 0.1", "-79.5705, 94.6955, -60.7896, 0.1", "-79.8675, 95.137, -60.8967, 0.1", "-80.4787, 96.0795, -61.1162, 0.1", "-80.7562, 96.5351, -61.2165, 0.1", "-81.0178, 96.994, -61.3414, 0.1", "-81.2718, 97.4561, -61.4813, 0.1", "-81.5216, 97.9168, -61.6226, 0.1", "-81.8164, 98.4299, -61.7699, 0.1", "-82.0803, 98.8823, -61.9128, 0.1", "-82.6352, 99.7692, -62.2707, 0.1", "-82.7741, 99.9829, -62.3678, 0.1", "-83.0833, 100.441, -62.6254, 0.1", "-83.3982, 100.885, -62.9007, 0.1", "-83.9724, 101.682, -63.4084, 0.1", "-84.3101, 102.122, -63.6789, 0.1", "-84.622, 102.503, -63.8843, 0.1", "-85.326, 103.301, -64.2959, 0.1", "-85.7275, 103.724, -64.4988, 0.1", "-85.9113, 103.899, -64.5689, 0.1", "-86.3715, 104.285, -64.6761, 0.1", "-86.8433, 104.652, -64.758, 0.1", "-87.4586, 105.103, -64.8753, 0.1", "-87.7643, 105.317, -64.9284, 0.1", "-88.257, 105.659, -65.041, 0.1", "-88.5566, 105.87, -65.1478, 0.1", "-89.0203, 106.193, -65.36, 0.1", "-89.8745, 106.8, -65.82, 0.1", "-90.1445, 107.001, -65.9895, 0.1", "-90.5776, 107.323, -66.2743, 0.14", "-91.4076, 107.893, -66.8111, 0.1", "-91.8702, 108.185, -67.0843, 0.1", "-92.091, 108.301, -67.1885, 0.14", "-92.4333, 108.438, -67.2881, 0.28", "-93.1272, 108.675, -67.5157, 0.7", "-93.6901, 108.823, -67.6974, 0.56", "-94.0507, 108.899, -67.7985, 0.42", "-94.626, 109.006, -67.9704, 0.28", "-95.1954, 109.103, -68.1407, 0.14", "-96.1843, 109.265, -68.428, 0.14", "-96.7648, 109.349, -68.595, 0.1", "-97.3396, 109.443, -68.7479, 0.1", "-97.926, 109.542, -68.8828, 0.1", "-98.2908, 109.611, -68.9502, 0.1", "-98.8836, 109.742, -69.0234, 0.14", "-99.4586, 109.9, -69.0927, 0.28", "-100.027, 110.096, -69.1954, 0.14", "-100.558, 110.324, -69.3637, 0.1", "-100.882, 110.477, -69.5065, 0.14", "-101.374, 110.705, -69.7708, 0.14", "-102.291, 111.092, -70.3362, 0.1", "-102.598, 111.194, -70.5388, 0.1", "-103.452, 111.345, -71.0443, 0.14", "-103.944, 111.336, -71.2736, 0.1", "-104.449, 111.194, -71.4117, 0.1", "-104.923, 110.945, -71.4564, 0.1", "-105.36, 110.631, -71.3881, 0.1", "-106.226, 109.924, -71.1438, 0.1", "-106.663, 109.549, -70.9401, 0.1", "-107.075, 109.174, -70.7097, 0.1", "-107.335, 108.935, -70.5546, 0.1", "-108.114, 108.237, -70.0986, 0.1", "-108.497, 107.904, -69.8966, 0.1", "-109.322, 107.246, -69.5539, 0.1", "-109.796, 106.887, -69.4159, 0.1", "-110.235, 106.575, -69.3549, 0.1", "-110.679, 106.279, -69.3692, 0.1", "-111.178, 105.946, -69.4788, 0.1", "-111.613, 105.652, -69.6171, 0.1", "-112.512, 105.05, -69.9897, 0.14", "-112.939, 104.764, -70.1653, 0.1", "-113.367, 104.475, -70.3326, 0.1", "-113.837, 104.149, -70.5438, 0.1", "-114.044, 104.001, -70.6427, 0.1", "-114.455, 103.701, -70.8299, 0.1", "-114.921, 103.359, -71.0059, 0.1", "-115.327, 103.044, -71.1867, 0.1", "-116.148, 102.382, -71.622, 0.14", "-116.418, 102.165, -71.7927, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-18.485, 37.1033, -31.473, 1.12", "-19.8704, 37.8929, -33.2689, 1.12", "-20.0479, 37.9929, -33.5193, 1.12", "-20.5189, 38.2569, -34.2431, 0.14", "-21.1578, 38.6497, -35.2257, 0.1", "-21.7797, 39.0653, -36.2026, 0.1", "-22.5012, 39.5814, -37.3694, 0.1", "-23.0623, 39.9967, -38.3825, 0.1", "-23.6287, 40.4222, -39.3955, 0.1", "-23.9209, 40.6505, -39.9067, 0.1", "-24.6035, 41.184, -40.9541, 0.1", "-25.3308, 41.7753, -41.9267, 0.1", "-25.3308, 41.7753, -41.9267, 0.14", "-25.8599, 42.2258, -42.5034, 0.1", "-26.1244, 42.4582, -42.7942, 0.1", "-26.9674, 43.2064, -43.7266, 0.1", "-27.337, 43.5651, -44.116, 0.1", "-28.0057, 44.2782, -44.8631, 0.1", "-28.3344, 44.6692, -45.2581, 0.14", "-28.8834, 45.4005, -46.0167, 0.28", "-29.2022, 45.8643, -46.4699, 0.7", "-29.464, 46.2829, -46.8637, 0.56", "-29.9943, 47.1666, -47.75, 0.42", "-30.2304, 47.5807, -48.1642, 0.28", "-30.7519, 48.4474, -49.0593, 0.14", "-31.0241, 48.8585, -49.4762, 0.1", "-31.6125, 49.666, -50.33, 0.1", "-32.2682, 50.4493, -51.1594, 0.14", "-32.2682, 50.4493, -51.1594, 0.28", "-32.7977, 50.952, -51.6908, 0.1", "-33.2485, 51.3265, -52.116, 0.1", "-33.5396, 51.5415, -52.3775, 0.1", "-33.86, 51.7574, -52.6208, 0.14", "-34.0906, 51.9154, -52.7824, 0.28", "-34.9501, 52.5606, -53.3888, 0.84", "-35.8281, 53.2775, -54.1234, 0.7", "-36.2747, 53.662, -54.5267, 0.56", "-36.5668, 53.9151, -54.7801, 0.42", "-37.0177, 54.3055, -55.1729, 0.28", "-37.4727, 54.6847, -55.5856, 0.14", "-38.2159, 55.3129, -56.3384, 0.28", "-38.2159, 55.3129, -56.3384, 0.42", "-38.5975, 55.6511, -56.8495, 0.1", "-39.2692, 56.3033, -57.8231, 0.1", "-39.8122, 56.9251, -58.7403, 0.1", "-40.3381, 57.6784, -59.7365, 0.1", "-40.3381, 57.6784, -59.7365, 0.14", "-40.52, 58.1115, -60.1586, 0.1", "-40.6526, 58.5917, -60.5695, 0.1", "-40.8062, 59.6787, -61.3652, 0.14", "-40.8418, 60.2689, -61.7594, 0.1", "-40.8519, 60.8103, -62.1054, 0.1", "-40.8752, 61.9521, -62.8342, 0.1", "-40.8864, 62.3183, -63.0896, 0.1", "-40.956, 63.4272, -63.8666, 0.14", "-40.956, 63.4272, -63.8666, 0.28", "-41.0284, 63.9428, -64.2486, 0.28", "-41.1063, 64.4574, -64.6062, 0.14", "-41.2765, 65.5361, -65.3374, 0.1", "-41.3527, 66.0697, -65.693, 0.1", "-41.4768, 67.2241, -66.3933, 0.14", "-41.5109, 67.7841, -66.7129, 0.1", "-41.5117, 68.4126, -67.049, 0.1", "-41.4498, 69.5341, -67.5603, 0.14", "-41.3903, 70.206, -67.7838, 0.1", "-41.3271, 70.9044, -67.9638, 0.1", "-41.2793, 71.5963, -68.1187, 0.1", "-41.2551, 72.0397, -68.225, 0.14", "-41.2331, 72.7308, -68.4395, 0.28", "-41.2247, 73.3109, -68.6889, 0.42", "-41.2133, 73.8676, -69.0159, 0.56", "-41.1816, 74.8095, -69.7441, 0.42", "-41.1578, 75.3201, -70.2568, 0.14", "-41.104, 76.1058, -71.2022, 0.1", "-41.0336, 76.9114, -72.2905, 0.1", "-41.002, 77.171, -72.6525, 0.1", "-40.8847, 77.9817, -73.7316, 0.14", "-40.7752, 78.7412, -74.5834, 0.28", "-40.7478, 78.9684, -74.8112, 0.42", "-40.7045, 79.4783, -75.205, 1.26", "-40.6661, 80.0752, -75.6129, 1.12", "-40.6298, 80.6465, -76.0338, 0.98", "-40.5871, 81.213, -76.4826, 0.84", "-40.492, 82.2025, -77.3944, 0.7", "-40.4663, 82.4145, -77.6324, 0.84", "-40.3456, 83.2174, -78.717, 1.12", "-40.2479, 83.9056, -79.7322, 0.98", "-40.1455, 84.6538, -80.8583, 0.84", "-40.0636, 85.3475, -81.8712, 0.7", "-39.9898, 86.0784, -82.8627, 0.56", "-39.9163, 86.9118, -83.9298, 0.42", "-39.8959, 87.3362, -84.4013, 0.28", "-39.8917, 87.8764, -84.8833, 0.14", "-39.9018, 88.413, -85.2423, 0.1", "-39.9431, 89.6421, -85.7992, 0.1", "-39.9431, 89.6421, -85.7992, 0.14", "-39.9404, 90.2766, -85.9189, 0.56", "-39.9223, 90.9816, -86.0823, 0.42", "-39.91, 91.6717, -86.2515, 0.28", "-39.9067, 92.3776, -86.4126, 0.14", "-39.9255, 93.0643, -86.5941, 0.1", "-39.9439, 93.4969, -86.7391, 0.1", "-39.9967, 94.6794, -87.3102, 0.1", "-40.0247, 95.2104, -87.6709, 0.1", "-40.0433, 95.6892, -88.1037, 0.1", "-40.0762, 96.5176, -88.9548, 0.14", "-40.0995, 96.9931, -89.5002, 0.28", "-40.1254, 97.7585, -90.4678, 0.14", "-40.1375, 98.5854, -91.5349, 0.1", "-40.1514, 99.3393, -92.5118, 0.1", "-40.1673, 99.7466, -93.0125, 0.14", "-40.2401, 100.636, -93.9696, 0.1", "-40.3679, 101.527, -94.8142, 0.1", "-40.4703, 102.036, -95.1926, 0.1", "-40.6103, 102.591, -95.4917, 0.1", "-40.7758, 103.16, -95.739, 0.1", "-40.9504, 103.731, -95.9549, 0.1", "-41.1451, 104.323, -96.1111, 0.1", "-41.1451, 104.323, -96.1111, 0.14", "-41.3547, 104.914, -96.2503, 0.1", "-41.7833, 106.124, -96.5387, 0.1", "-41.9764, 106.709, -96.7212, 0.1", "-42.1581, 107.294, -96.9255, 0.1", "-42.3171, 107.871, -97.1278, 0.1", "-42.4675, 108.468, -97.3212, 0.1", "-42.5952, 109.075, -97.4915, 0.1", "-42.78, 110.248, -97.8263, 0.1", "-42.8438, 110.855, -98.0277, 0.1", "-42.8891, 111.505, -98.3096, 0.1", "-42.9092, 112.083, -98.5911, 0.1", "-42.9116, 112.699, -98.9456, 0.1", "-42.8892, 113.859, -99.646, 0.1", "-42.8654, 114.461, -100.044, 0.1", "-42.7921, 115.41, -100.755, 0.1", "-42.733, 115.965, -101.216, 0.1", "-42.6087, 116.948, -102.14, 0.1", "-42.5428, 117.456, -102.636, 0.1", "-42.4123, 118.354, -103.472, 0.1", "-42.359, 118.687, -103.765, 0.14", "-42.3139, 118.947, -103.951, 0.28", "-42.1149, 120.051, -104.636, 0.7", "-41.9964, 120.706, -104.914, 0.56", "-41.9116, 121.113, -105.077, 0.42", "-41.7836, 121.77, -105.355, 0.28", "-41.6831, 122.393, -105.705, 0.14", "-41.6327, 122.754, -105.962, 0.1", "-41.5686, 123.318, -106.412, 0.1", "-41.506, 124.33, -107.304, 0.14", "-41.479, 125.297, -108.194, 0.28", "-41.49, 126.259, -109.092, 0.14", "-41.5488, 127.26, -109.996, 0.1", "-41.5965, 127.748, -110.416, 0.1", "-41.6668, 128.256, -110.803, 0.1", "-41.7343, 128.643, -111.035, 0.1", "-41.853, 129.212, -111.29, 0.1", "-42.0197, 129.786, -111.527, 0.14", "-42.4961, 130.95, -112.032, 0.28", "-42.7665, 131.449, -112.34, 0.42", "-42.7665, 131.449, -112.34, 0.56", "-43.1947, 131.974, -112.937, 0.28", "-43.8016, 132.658, -113.937, 0.14", "-43.9818, 132.848, -114.299, 0.1", "-44.4754, 133.356, -115.454, 0.1", "-44.9178, 133.826, -116.646, 0.1", "-45.2926, 134.23, -117.698, 0.1", "-45.6521, 134.627, -118.761, 0.1", "-46.4264, 135.439, -120.89, 0.14", "-46.8404, 135.849, -121.924, 0.28", "-46.8404, 135.849, -121.924, 0.42", "-47.3037, 136.175, -122.648, 0.7", "-47.5866, 136.317, -122.963, 0.56", "-48.239, 136.541, -123.561, 0.42", "-48.5728, 136.605, -123.859, 0.56", "-48.7997, 136.63, -124.087, 0.7", "-49.6702, 136.688, -125.124, 1.68", "-50.435, 136.693, -126.186, 1.54", "-51.0735, 136.661, -127.191, 1.4", "-51.7037, 136.586, -128.342, 1.26", "-51.7037, 136.586, -128.342, 1.12", "-51.8373, 136.562, -128.635, 0.98" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-18.485, 37.1033, -31.473, 1.4", "-18.4965, 37.3899, -32.2937, 1.4", "-18.515, 37.6402, -33.0679, 1.26", "-18.5331, 37.893, -33.9276, 1.12", "-18.5471, 38.1062, -34.7168, 0.98", "-18.5537, 38.2846, -35.5109, 0.84", "-18.5576, 38.4205, -36.3158, 0.7", "-18.5371, 38.534, -37.8995, 0.56", "-18.5165, 38.5351, -38.6871, 0.56", "-18.5057, 38.5222, -38.9, 0.1", "-18.4309, 38.4418, -39.7867, 0.1", "-18.3312, 38.3578, -40.6473, 0.1", "-18.1818, 38.2752, -41.5243, 0.14", "-18.1123, 38.2606, -41.8178, 0.84", "-17.8911, 38.2975, -42.6858, 0.7", "-17.6592, 38.4256, -43.5419, 0.56", "-17.4333, 38.6428, -44.293, 0.42", "-17.3061, 38.8004, -44.6691, 0.28", "-17.0555, 39.1894, -45.4334, 0.14", "-16.8391, 39.5544, -46.1308, 0.28", "-16.7222, 39.7928, -46.5186, 0.42", "-16.6315, 40.0656, -46.9017, 0.28", "-16.6005, 40.2442, -47.1349, 0.14", "-16.5916, 40.7446, -47.7434, 0.1", "-16.6019, 40.8808, -47.9076, 0.14", "-16.629, 41.1534, -48.2325, 0.1", "-16.6712, 41.6757, -48.9275, 0.1", "-16.6965, 42.1784, -49.6699, 0.1", "-16.6905, 42.3961, -50.0289, 0.14", "-16.6434, 42.7895, -50.7426, 0.28", "-16.5996, 42.9979, -51.1715, 1.4", "-16.4915, 43.3351, -51.9918, 1.26", "-16.3643, 43.5998, -52.7535, 1.12", "-16.1995, 43.8458, -53.5708, 0.98", "-16.0196, 44.0435, -54.3422, 1.12", "-15.7864, 44.2361, -55.1829, 0.98", "-15.5498, 44.3724, -55.9536, 0.84", "-15.2595, 44.5009, -56.7591, 0.7", "-15.0946, 44.5604, -57.1463, 0.56", "-14.9712, 44.6046, -57.4184, 0.42", "-14.7932, 44.6696, -57.8012, 0.28", "-14.485, 44.8103, -58.5412, 0.42", "-14.3859, 44.8711, -58.8168, 0.56", "-14.1159, 45.0901, -59.6428, 0.42", "-13.888, 45.3166, -60.3906, 0.28", "-13.6475, 45.5937, -61.2052, 0.14", "-13.4281, 45.8724, -61.9405, 0.1", "-13.1588, 46.2174, -62.7194, 0.1", "-13.0041, 46.4132, -63.1265, 0.1", "-12.8933, 46.5473, -63.3699, 0.1", "-12.5251, 46.9991, -64.0508, 0.1", "-12.4047, 47.1642, -64.264, 0.1", "-12.2362, 47.4497, -64.6077, 0.1", "-11.9862, 48.0256, -65.3411, 0.14", "-11.9493, 48.1527, -65.5087, 0.14", "-11.8984, 48.3983, -65.8518, 0.1", "-11.8242, 48.9252, -66.568, 0.1", "-11.7759, 49.4196, -67.2815, 0.1", "-11.7523, 49.8679, -67.9633, 0.1", "-11.743, 50.0874, -68.3186, 0.1", "-11.713, 50.5477, -69.0869, 0.14", "-11.6877, 50.7809, -69.4943, 0.28", "-11.6316, 51.1864, -70.2021, 0.14", "-11.5639, 51.6456, -70.9687, 0.1", "-11.5138, 52.0712, -71.6607, 0.1", "-11.5007, 52.2328, -71.9155, 0.1", "-11.476, 52.7345, -72.6538, 0.1", "-11.4489, 53.2549, -73.3829, 0.1", "-11.4257, 53.5168, -73.7169, 0.1", "-11.3544, 54.0683, -74.4146, 0.14", "-11.3069, 54.3192, -74.7544, 0.14", "-11.2721, 54.4359, -74.9298, 0.28", "-11.1971, 54.5889, -75.1712, 0.56", "-10.8814, 55.0139, -75.8942, 0.42", "-10.5332, 55.3607, -76.543, 0.28", "-10.0902, 55.7123, -77.2382, 0.14", "-9.87945, 55.8552, -77.5785, 0.28", "-9.66507, 55.9864, -77.9845, 0.14", "-9.50996, 56.0403, -78.3765, 0.28", "-9.47008, 56.0172, -78.5851, 0.42", "-9.47008, 56.0172, -78.5851, 0.56", "-9.46964, 55.7366, -79.3516, 0.84", "-9.4619, 55.4566, -80.1184, 0.7", "-9.42154, 55.1498, -80.927, 0.56", "-9.33636, 54.8921, -81.6666, 0.42", "-9.29516, 54.8342, -81.8659, 0.56", "-9.15699, 54.7307, -82.3031, 0.42", "-8.80584, 54.6081, -83.0889, 0.28", "-8.59691, 54.5714, -83.5167, 0.14", "-8.20604, 54.5605, -84.2931, 0.1", "-7.83406, 54.5821, -85.0758, 0.1", "-7.75277, 54.5915, -85.2731, 0.1", "-7.46914, 54.6448, -86.0932, 0.1", "-7.2413, 54.7192, -86.8127, 0.14", "-7.16289, 54.7611, -87.1013, 0.28", "-6.96589, 54.926, -87.9318, 0.14", "-6.80111, 55.1273, -88.7613, 0.1", "-6.67839, 55.3314, -89.5124, 0.1", "-6.61559, 55.4629, -89.9671, 0.42", "-6.52181, 55.7099, -90.7384, 0.42", "-6.44829, 56.0088, -91.58, 0.28", "-6.4117, 56.3331, -92.3283, 0.14", "-6.40052, 56.6972, -93.0576, 0.28", "-6.41453, 57.0734, -93.7475, 0.42", "-6.43972, 57.2791, -94.1186, 0.1", "-6.48278, 57.4926, -94.4836, 0.1", "-6.55014, 57.7035, -94.8403, 0.1", "-6.72078, 58.1106, -95.527, 0.14", "-6.9408, 58.5494, -96.2445, 0.7", "-7.18419, 58.9734, -96.9646, 0.56", "-7.42126, 59.3286, -97.626, 0.42", "-7.70539, 59.7125, -98.3844, 0.28", "-7.99494, 60.0762, -99.119, 0.14", "-8.15658, 60.2747, -99.516, 0.1", "-8.41095, 60.599, -100.187, 0.1", "-8.65386, 60.957, -100.969, 0.1", "-8.8317, 61.283, -101.756, 0.1", "-8.8317, 61.283, -101.756, 0.14", "-8.85353, 61.5259, -102.533, 0.56", "-8.81858, 61.7555, -103.315, 0.42", "-8.71647, 62.005, -104.17, 0.28", "-8.56834, 62.2261, -104.912, 0.14", "-8.36273, 62.4734, -105.745, 0.1", "-8.13064, 62.7262, -106.573, 0.1", "-8.0422, 62.8173, -106.84, 0.1", "-7.72732, 63.1289, -107.619, 0.1", "-7.54208, 63.3138, -108.012, 0.1", "-7.19827, 63.6645, -108.628, 0.14", "-7.09582, 63.7681, -108.782, 0.28", "-6.85583, 64.01, -109.116, 0.7", "-6.60986, 64.2511, -109.448, 0.56", "-6.12314, 64.7124, -110.042, 0.42", "-5.95305, 64.8572, -110.236, 0.28", "-5.65825, 65.0611, -110.551, 0.14", "-5.08643, 65.3546, -111.172, 0.1", "-4.94856, 65.3912, -111.331, 0.1", "-4.81269, 65.4121, -111.491, 0.1", "-4.49722, 65.4418, -111.839, 0.1", "-3.93082, 65.4972, -112.532, 0.1", "-3.7446, 65.5246, -112.768, 0.1", "-3.21932, 65.6649, -113.476, 0.1", "-2.95985, 65.7749, -113.854, 0.56", "-2.70587, 65.9262, -114.229, 0.42", "-2.31117, 66.25, -114.862, 0.28", "-2.08482, 66.4707, -115.22, 0.14", "-1.67124, 66.9156, -115.875, 0.1", "-1.53422, 67.0696, -116.096, 0.1", "-1.32527, 67.2835, -116.469, 0.1", "-1.00345, 67.6125, -117.143, 0.1", "-0.925067, 67.6865, -117.325, 0.14", "-0.830531, 67.7767, -117.598, 0.28", "-0.589467, 68.0008, -118.428, 0.14", "-0.37897, 68.21, -119.247, 0.1", "-0.196839, 68.417, -120.012, 0.14", "5.95605E-4, 68.6626, -120.824, 0.1", "0.18064, 68.9255, -121.572, 0.14", "0.36718, 69.2196, -122.279, 0.28", "0.488106, 69.4454, -122.682, 0.1", "0.622146, 69.7178, -123.043, 0.1", "0.719691, 69.9046, -123.259, 0.1", "0.879335, 70.1867, -123.602, 0.1", "1.05373, 70.4072, -123.988, 0.1", "1.35677, 70.6353, -124.795, 0.1", "1.42103, 70.6556, -124.998, 0.14", "1.6565, 70.6675, -125.779, 0.56", "1.88222, 70.6499, -126.561, 0.42", "2.11491, 70.6166, -127.427, 0.28", "2.31688, 70.5967, -128.217, 0.14", "2.52977, 70.592, -129.057, 0.28", "2.58191, 70.5989, -129.264, 0.42", "2.8227, 70.6743, -130.121, 0.28", "3.07299, 70.7844, -130.891, 0.14", "3.37581, 70.9385, -131.718, 0.1", "3.68691, 71.0934, -132.425, 0.1", "3.78522, 71.1357, -132.61, 0.42", "3.99944, 71.2098, -132.96, 0.28", "4.25549, 71.2749, -133.296, 0.14", "4.82861, 71.4149, -133.935, 0.1", "5.10365, 71.5018, -134.25, 0.1", "5.35112, 71.6242, -134.573, 0.1", "5.67151, 71.953, -135.311, 0.14", "5.69129, 72.0546, -135.489, 0.28", "5.61789, 72.3186, -135.874, 0.1", "5.35413, 72.8339, -136.555, 0.1", "5.18452, 73.1184, -136.906, 0.1", "4.87466, 73.5838, -137.498, 0.1", "4.71189, 73.8351, -137.803, 0.1", "4.4132, 74.3503, -138.431, 0.1", "4.15439, 74.863, -139.085, 0.1", "4.0466, 75.1092, -139.414, 0.1", "3.87526, 75.5257, -140.024, 0.14", "3.77272, 75.759, -140.428, 0.14", "3.70723, 75.8872, -140.691, 0.1", "3.50677, 76.2342, -141.492, 0.1", "3.32771, 76.4942, -142.213, 0.1", "3.1265, 76.7631, -143.016, 0.1", "2.76051, 77.2183, -144.432, 0.1", "2.54515, 77.4501, -145.242, 0.1", "2.34815, 77.6446, -145.98, 0.1", "1.9931, 77.9988, -147.427, 0.1" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.4767, -89.5674, 8.08716, 0.84", "13.579, -90.1927, 8.43698, 0.84", "13.6227, -90.5236, 8.60168, 0.98", "13.6661, -90.8666, 8.75146, 1.12", "13.703, -91.2188, 8.88577, 0.98", "13.778, -91.9696, 9.1368, 0.84", "13.8086, -92.3299, 9.24273, 0.7", "13.8404, -92.7372, 9.32504, 0.7", "13.8569, -93.1115, 9.36496, 0.84", "13.8679, -93.5281, 9.36764, 0.84", "13.8774, -93.9031, 9.33188, 0.84", "13.8869, -94.3187, 9.25185, 0.84", "13.8884, -94.6873, 9.17358, 0.7", "13.8878, -95.4466, 8.95159, 0.56", "13.8805, -95.8089, 8.8486, 0.7", "13.8676, -96.1752, 8.75343, 0.84", "13.8404, -96.5832, 8.66659, 0.7", "13.82, -96.847, 8.62536, 0.84", "13.758, -97.6124, 8.55982, 0.98", "13.6857, -98.3323, 8.57582, 0.98", "13.6254, -98.7443, 8.59418, 0.84", "13.5532, -99.1626, 8.58394, 0.98", "13.5244, -99.3497, 8.58537, 0.84", "13.5026, -99.5376, 8.59367, 0.84", "13.4727, -99.9536, 8.6285, 0.98", "13.4718, -100.379, 8.62247, 1.12", "13.5206, -101.076, 8.62299, 1.26", "13.5848, -101.771, 8.63433, 1.12", "13.6146, -102.14, 8.6454, 0.98", "13.6475, -102.517, 8.66037, 1.12", "13.6877, -102.891, 8.67906, 0.98", "13.7254, -103.267, 8.70233, 1.12", "13.7494, -103.537, 8.72148, 1.12", "13.7639, -103.953, 8.72375, 0.98", "13.757, -104.33, 8.72771, 1.12", "13.7238, -104.745, 8.70444, 0.98", "13.6743, -105.116, 8.66233, 0.84", "13.6123, -105.484, 8.60291, 0.98", "13.5391, -105.888, 8.5184, 0.7", "13.4562, -106.29, 8.40987, 0.84", "13.273, -106.954, 8.18818, 0.98", "13.1477, -107.326, 8.04347, 0.84", "13.1477, -107.326, 8.04347, 0.98", "12.9733, -107.675, 7.89346, 0.84", "12.9007, -107.835, 7.82304, 0.84", "12.7146, -108.195, 7.71939, 0.98", "12.5138, -108.569, 7.74172, 0.84", "12.388, -108.798, 7.75565, 0.7", "12.3118, -108.964, 7.76434, 0.7", "12.1806, -109.366, 7.78031, 0.84", "12.1279, -109.626, 7.78759, 0.7", "12.1143, -110.038, 7.86518, 0.7", "12.1232, -110.441, 7.97429, 0.84", "12.1453, -110.846, 8.09666, 0.7", "12.1732, -111.205, 8.20541, 0.7", "12.2063, -111.566, 8.30994, 0.56", "12.3085, -112.3, 8.51182, 0.7", "12.3085, -112.3, 8.51182, 0.84", "12.3573, -112.47, 8.58029, 0.84", "12.455, -112.814, 8.69841, 0.98", "12.5386, -113.174, 8.77339, 0.84", "12.5787, -113.542, 8.69627, 0.84", "12.5207, -114.066, 8.13367, 0.98", "12.4694, -114.278, 7.82385, 0.98", "12.3433, -114.643, 7.21486, 0.84", "12.208, -114.98, 6.61768, 0.7", "11.9379, -115.625, 5.45373, 0.56", "11.7988, -115.955, 4.85452, 0.56", "11.7485, -116.08, 4.6299, 0.84", "11.6761, -116.309, 4.28185, 0.84", "11.6455, -116.589, 4.03075, 0.84", "11.6597, -116.938, 3.90267, 0.98", "11.6816, -117.124, 3.88749, 1.12", "11.7096, -117.311, 3.88648, 0.98", "11.7764, -117.684, 3.88341, 0.98", "11.8403, -118.055, 3.88061, 0.98", "11.9025, -118.468, 3.87834, 0.84", "11.9463, -118.844, 3.87748, 0.84", "11.9834, -119.219, 3.87725, 0.84", "11.996, -119.408, 3.87771, 0.98", "12.0063, -119.676, 3.87908, 0.84", "12.007, -120.046, 3.88227, 0.84", "11.9871, -120.468, 3.8491, 0.98", "11.9496, -120.83, 3.75066, 1.12", "11.914, -121.077, 3.67271, 0.98", "11.914, -121.077, 3.67271, 1.12", "11.8792, -121.329, 3.58942, 0.84", "11.7816, -122.082, 3.35275, 0.84", "11.7171, -122.819, 3.14652, 0.84", "11.6784, -123.536, 3.05104, 0.56", "11.6784, -123.913, 3.04948, 0.56", "11.6971, -124.327, 3.09099, 0.56", "11.7326, -124.695, 3.16377, 0.56", "11.7767, -125.046, 3.29187, 0.7", "11.8783, -125.771, 3.60263, 0.84", "11.9276, -126.119, 3.7383, 0.98", "11.9745, -126.46, 3.87845, 1.12", "12.0238, -126.805, 4.02179, 1.12", "12.1218, -127.553, 4.27139, 1.12", "12.1737, -127.923, 4.3244, 0.98", "12.2408, -128.331, 4.27658, 0.84", "12.2733, -128.509, 4.2277, 0.7", "12.3107, -128.674, 4.14277, 0.56", "12.4847, -129.317, 3.75303, 0.7", "12.6841, -129.955, 3.32746, 0.84", "12.7938, -130.268, 3.14934, 0.98", "12.9207, -130.597, 3.0111, 0.84", "13.1735, -131.33, 2.84827, 0.84", "13.3595, -132.0, 2.77889, 0.98", "13.4355, -132.362, 2.76635, 0.98", "13.5473, -133.124, 2.80774, 0.98", "13.5847, -133.499, 2.82375, 0.98", "13.618, -134.027, 2.83832, 0.98", "13.6577, -134.75, 2.84631, 0.84", "13.7234, -135.439, 2.75819, 0.98", "13.8483, -136.116, 2.63749, 0.84", "13.9493, -136.47, 2.55891, 0.84", "14.0961, -136.808, 2.50846, 0.84", "14.2289, -137.044, 2.49345, 1.12", "14.4532, -137.398, 2.5019, 0.98", "14.6851, -137.746, 2.47905, 0.84", "14.8846, -138.052, 2.37976, 0.98", "15.0205, -138.262, 2.30258, 1.12", "15.2135, -138.574, 2.2079, 0.98", "15.4143, -138.932, 2.12601, 0.84", "15.7831, -139.625, 2.01759, 0.84", "16.13, -140.312, 1.96138, 0.98", "16.4342, -140.94, 1.95492, 0.84", "16.7473, -141.644, 1.99434, 0.84", "16.8921, -141.984, 2.0366, 0.84", "17.0363, -142.37, 2.1127, 0.98", "17.1466, -142.718, 2.20471, 1.12", "17.2362, -143.077, 2.28714, 0.98", "17.2996, -143.448, 2.28803, 0.98", "17.3181, -143.634, 2.2608, 0.98", "17.3217, -143.897, 2.20732, 0.98", "17.297, -144.301, 2.10539, 1.12", "17.2626, -144.707, 1.9891, 1.26", "17.2118, -145.374, 1.79041, 1.12", "17.2118, -145.374, 1.79041, 0.98", "17.199, -145.622, 1.70687, 0.56", "17.1904, -145.965, 1.54749, 0.7", "17.1706, -146.297, 1.37015, 0.84", "17.122, -146.611, 1.16443, 0.84", "17.0274, -146.929, 0.909527, 0.98", "16.8058, -147.478, 0.379601, 0.84", "16.5727, -147.974, -0.162502, 0.98", "16.4434, -148.193, -0.440322, 1.12", "16.1502, -148.592, -1.0308, 1.26", "15.8205, -148.951, -1.6583, 1.12", "15.8205, -148.951, -1.6583, 0.98" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.4767, -89.5674, 8.08716, 0.98", "13.6887, -90.1458, 7.73742, 0.98", "13.8109, -90.4412, 7.52461, 1.12", "13.9463, -90.7308, 7.3154, 1.26", "14.113, -91.0527, 7.09416, 1.12", "14.448, -91.6426, 6.70408, 0.98", "14.8179, -92.2478, 6.32692, 1.12", "14.9493, -92.4446, 6.19384, 0.98", "15.1767, -92.7446, 5.99716, 0.84", "15.427, -93.0414, 5.8251, 0.7", "15.6006, -93.2326, 5.74125, 0.56", "15.8953, -93.5284, 5.6635, 0.42", "16.2031, -93.8309, 5.61468, 0.28", "16.3899, -94.0174, 5.5851, 0.42", "16.6912, -94.3195, 5.53743, 0.28", "16.9946, -94.6127, 5.48918, 0.14", "17.1901, -94.7985, 5.45802, 0.1", "17.5014, -95.0831, 5.40817, 0.1", "17.8138, -95.3664, 5.35809, 0.1", "18.1301, -95.6523, 5.30737, 0.14", "18.4457, -95.9306, 5.2566, 0.1", "18.7684, -96.209, 5.20457, 0.14", "18.9684, -96.3807, 5.17229, 0.28", "19.1164, -96.5006, 5.14824, 0.42" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-28.5515, -78.5994, -33.241, 0.1", "-28.4742, -79.4352, -33.3007, 0.1", "-28.3796, -80.1762, -33.2484, 0.1", "-28.2511, -80.9877, -33.1433, 0.1", "-28.1088, -81.6997, -32.9598, 0.1", "-27.9304, -82.4867, -32.7216, 0.1", "-27.7724, -83.1853, -32.5029, 0.1", "-27.446, -84.5007, -32.0341, 0.1", "-27.2713, -85.1776, -31.7656, 0.1", "-26.8533, -86.5484, -31.1025, 0.1", "-26.6435, -87.1713, -30.7711, 0.1", "-26.3798, -87.8781, -30.3985, 0.1", "-26.258, -88.1982, -30.2515, 0.1", "-26.258, -88.1982, -30.2515, 0.1", "-25.7339, -89.4523, -29.969, 0.1", "-25.4287, -90.1374, -29.9074, 0.1", "-25.1172, -90.8038, -29.8808, 0.1", "-24.8143, -91.4849, -29.9528, 0.1", "-24.541, -92.1694, -30.1048, 0.1", "-24.2719, -92.9206, -30.3419, 0.1", "-24.0594, -93.5895, -30.6136, 0.1", "-23.8695, -94.2593, -30.8895, 0.1", "-23.5153, -95.6421, -31.4501, 0.1", "-23.368, -96.3292, -31.709, 0.1", "-23.243, -97.0163, -31.9415, 0.1", "-23.1297, -97.7309, -32.1488, 0.1", "-23.0337, -98.5334, -32.3912, 0.1", "-22.9606, -99.2522, -32.602, 0.1", "-22.8779, -100.052, -32.8134, 0.14", "-22.8229, -100.773, -33.02, 0.28", "-22.7754, -101.489, -33.2361, 0.42", "-22.666, -102.986, -33.7043, 0.28", "-22.6196, -103.683, -33.9742, 0.14", "-22.5922, -104.374, -34.2711, 0.1", "-22.5643, -105.141, -34.6214, 0.1", "-22.5406, -105.815, -34.9255, 0.1", "-22.4994, -106.504, -35.2157, 0.1", "-22.3536, -107.802, -35.6853, 0.1", "-22.2905, -108.299, -35.8646, 0.1", "-22.1811, -108.999, -36.1077, 0.1", "-22.0289, -109.682, -36.335, 0.1", "-21.8384, -110.381, -36.5396, 0.1", "-21.6129, -111.075, -36.7083, 0.1", "-21.3523, -111.769, -36.8385, 0.1", "-21.0788, -112.453, -36.9736, 0.1", "-20.7732, -113.212, -37.1245, 0.1", "-20.4981, -113.9, -37.2605, 0.14", "-20.2209, -114.591, -37.3413, 0.28", "-19.961, -115.283, -37.3698, 0.14", "-19.7136, -115.989, -37.3572, 0.1", "-19.4816, -116.704, -37.3112, 0.1", "-19.2695, -117.418, -37.2344, 0.1", "-18.8368, -118.915, -37.0273, 0.1", "-18.5951, -119.715, -36.9088, 0.14", "-18.3543, -120.422, -36.817, 0.28", "-18.2214, -120.769, -36.7888, 0.42", "-18.2214, -120.769, -36.7888, 0.56", "-18.0643, -121.109, -36.8272, 0.56", "-17.709, -121.842, -36.9976, 0.56", "-17.3711, -122.572, -37.2439, 0.7", "-17.1016, -123.222, -37.4999, 0.56", "-16.8561, -123.879, -37.7741, 0.42", "-16.6373, -124.526, -38.0478, 0.28", "-16.4375, -125.189, -38.334, 0.14", "-16.1098, -126.567, -38.9216, 0.1", "-15.9772, -127.248, -39.2034, 0.1", "-15.8504, -127.937, -39.4767, 0.1", "-15.7228, -128.632, -39.7259, 0.14", "-15.7228, -128.632, -39.7259, 0.28", "-15.6111, -129.128, -39.8379, 0.56", "-15.422, -129.845, -39.9396, 0.56", "-15.2261, -130.564, -40.0441, 0.42", "-15.0234, -131.277, -40.1512, 0.28", "-14.8136, -131.978, -40.2608, 0.14", "-14.5789, -132.679, -40.3806, 0.28", "-14.3149, -133.38, -40.4594, 0.28", "-14.0195, -134.067, -40.4388, 0.14", "-13.7158, -134.743, -40.3273, 0.1", "-13.3974, -135.384, -40.0961, 0.1", "-13.1708, -135.817, -39.8853, 0.1", "-12.5846, -136.963, -39.2463, 0.84", "-11.9905, -138.203, -38.5685, 0.7", "-11.6936, -138.916, -38.2283, 0.56", "-11.2274, -140.28, -37.7029, 0.42", "-11.4883, -140.625, -38.2984, 0.28", "-11.8048, -140.965, -39.0, 0.14", "-12.3398, -141.47, -40.1759, 0.1", "-13.4153, -142.353, -42.5189, 0.1", "-14.4738, -143.15, -44.8974, 0.1", "-15.0243, -143.55, -46.1644, 0.1", "-15.5194, -143.924, -47.3481, 0.14", "-15.5194, -143.924, -47.3481, 0.28", "-15.6249, -144.082, -47.6727, 0.84", "-15.6662, -144.701, -48.2285, 0.7", "-15.5511, -145.403, -48.4615, 0.56", "-15.4078, -146.13, -48.5932, 0.42", "-15.2824, -146.851, -48.6689, 0.28", "-15.1806, -147.684, -48.7385, 0.14", "-15.1293, -148.511, -48.7874, 0.1", "-15.1419, -149.348, -48.8717, 0.1", "-15.1603, -149.72, -48.9001, 0.1", "-15.2242, -150.544, -48.943, 0.1", "-15.2638, -151.384, -48.9168, 0.1", "-15.2687, -152.223, -48.8289, 0.1", "-15.2106, -153.59, -48.6128, 0.14", "-15.081, -154.997, -48.3452, 0.56", "-14.9683, -155.817, -48.1802, 0.42", "-14.6788, -157.294, -47.8842, 0.28", "-14.4677, -158.085, -47.7431, 0.14", "-14.2394, -158.791, -47.6424, 0.28", "-13.9855, -159.496, -47.5735, 0.42", "-13.7248, -160.198, -47.6013, 0.28", "-13.4566, -160.883, -47.6754, 0.28", "-13.1621, -161.648, -47.8219, 0.28", "-12.8801, -162.332, -47.9605, 0.42", "-12.6013, -163.013, -48.0978, 0.28", "-12.3286, -163.697, -48.2327, 0.42", "-12.3286, -163.697, -48.2327, 0.56", "-12.1824, -164.042, -48.267, 0.56", "-11.8739, -164.729, -48.2841, 0.42", "-11.5477, -165.403, -48.2714, 0.28", "-11.2174, -166.06, -48.2445, 0.14", "-10.8778, -166.731, -48.2139, 0.1", "-10.1508, -168.127, -48.1725, 0.1", "-9.79866, -168.792, -48.1635, 0.1", "-9.44798, -169.453, -48.1687, 0.1", "-9.09067, -170.115, -48.2004, 0.1", "-8.75417, -170.775, -48.3074, 0.1", "-8.40486, -171.515, -48.4594, 0.1", "-8.12388, -172.191, -48.6367, 0.1", "-7.86479, -172.861, -48.7945, 0.14", "-7.58611, -173.649, -48.9561, 0.28", "-7.17026, -174.95, -49.1814, 0.42", "-6.77755, -176.32, -49.3757, 0.84", "-6.59181, -177.044, -49.4573, 0.7", "-6.38885, -177.846, -49.5344, 0.56", "-6.21855, -178.573, -49.5893, 0.42", "-6.05396, -179.307, -49.6338, 0.28", "-5.87713, -180.033, -49.677, 0.14", "-5.70207, -180.758, -49.7731, 0.1", "-5.54112, -181.475, -49.9192, 0.14", "-5.37, -182.258, -50.1281, 0.1", "-5.2257, -182.965, -50.3305, 0.1", "-5.09315, -183.672, -50.5517, 0.1", "-4.97481, -184.37, -50.7962, 0.1", "-4.76346, -185.77, -51.3637, 0.14", "-4.71713, -186.105, -51.5287, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-28.5515, -78.5994, -33.241, 0.1", "-28.5097, -78.7603, -33.5007, 0.1", "-28.4186, -79.0322, -34.0431, 0.1", "-28.2322, -79.517, -35.1871, 0.1", "-28.1381, -79.737, -35.7521, 0.1", "-27.8079, -80.5073, -37.8213, 0.1", "-27.6413, -80.8994, -38.9162, 0.1", "-27.4823, -81.2667, -39.9799, 0.1", "-27.1588, -82.01, -42.1275, 0.1", "-26.987, -82.4115, -43.2182, 0.14", "-26.8193, -82.8311, -44.2619, 0.1", "-26.4676, -83.845, -46.2885, 0.14", "-26.3724, -84.1686, -46.8046, 0.1", "-26.2704, -84.5576, -47.268, 0.1", "-26.1447, -85.0274, -47.6297, 0.1", "-26.0596, -85.2924, -47.7553, 0.1", "-25.825, -85.8497, -47.8761, 0.1", "-25.5205, -86.3823, -47.8796, 0.1", "-24.7508, -87.4222, -47.8793, 0.14", "-23.9661, -88.292, -47.9683, 0.1", "-23.5049, -88.7564, -48.1911, 0.1", "-23.2313, -89.0143, -48.392, 0.1", "-22.7264, -89.4856, -48.9243, 0.1", "-22.4942, -89.7037, -49.2159, 0.1", "-21.9323, -90.278, -50.0778, 0.1", "-20.9329, -91.3733, -51.8273, 0.1", "-20.755, -91.5794, -52.1678, 0.1", "-20.2219, -92.1702, -53.1828, 0.1", "-20.0416, -92.3614, -53.5307, 0.1", "-19.4577, -92.9067, -54.5432, 0.1", "-19.2304, -93.0832, -54.8777, 0.1", "-18.4202, -93.6034, -55.8853, 0.1", "-18.044, -93.8139, -56.3219, 0.1", "-17.2514, -94.1811, -57.1127, 0.1", "-16.8128, -94.3637, -57.5057, 0.1", "-15.8118, -94.7258, -58.2328, 0.14", "-15.4538, -94.849, -58.4489, 0.28", "-14.8773, -95.0511, -58.7489, 0.14", "-14.2924, -95.2811, -59.0323, 0.1", "-13.92, -95.4285, -59.1783, 0.1", "-13.3179, -95.6859, -59.4003, 0.1", "-12.7049, -95.9461, -59.5784, 0.1", "-11.6747, -96.3847, -59.9342, 0.1", "-11.3023, -96.5543, -60.0994, 0.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-66.7151, 102.452, 3.65529, 0.1", "-67.0259, 102.986, 4.33192, 0.1", "-67.3567, 103.555, 4.97149, 0.1", "-67.5229, 103.848, 5.2547, 0.1", "-67.8987, 104.496, 5.78341, 0.1", "-68.1152, 104.871, 6.04025, 0.1", "-68.1152, 104.871, 6.04025, 0.1", "-68.3435, 105.265, 6.24097, 0.1", "-68.5544, 105.634, 6.38973, 0.1", "-68.7815, 106.05, 6.5425, 0.1", "-68.9702, 106.442, 6.65975, 0.1", "-69.3078, 107.271, 6.85463, 0.1", "-69.375, 107.472, 6.90435, 0.14", "-69.4848, 107.893, 7.01085, 0.1", "-69.5885, 108.373, 7.12426, 0.1", "-69.6645, 108.854, 7.22352, 0.1", "-69.762, 109.698, 7.35907, 0.14", "-69.8475, 110.606, 7.45198, 0.28", "-69.8857, 111.051, 7.50419, 0.14", "-69.9419, 111.48, 7.58938, 0.1", "-70.036, 111.957, 7.71777, 0.1", "-70.1558, 112.424, 7.86888, 0.1", "-70.2819, 112.811, 8.04175, 0.14", "-70.3819, 113.076, 8.18786, 0.1", "-70.7063, 113.806, 8.6866, 0.1", "-70.8725, 114.135, 8.9413, 0.1", "-71.0525, 114.455, 9.20252, 0.1", "-71.4216, 115.106, 9.73062, 0.1", "-71.7704, 115.769, 10.2545, 0.1", "-71.9393, 116.095, 10.5116, 0.1", "-72.0218, 116.265, 10.6338, 0.1", "-72.1909, 116.606, 10.8696, 0.1", "-72.405, 116.999, 11.1003, 0.1", "-72.5138, 117.179, 11.1745, 0.1", "-73.0426, 117.924, 11.4046, 0.28", "-73.3751, 118.296, 11.5057, 0.14", "-73.6936, 118.585, 11.6007, 0.28", "-74.1802, 118.967, 11.7379, 0.14", "-74.4328, 119.142, 11.8216, 0.1", "-74.6842, 119.315, 11.9113, 0.1", "-75.1725, 119.675, 12.0955, 0.1", "-75.8771, 120.208, 12.4219, 0.1", "-76.0426, 120.332, 12.5102, 0.1", "-76.6977, 120.859, 12.9354, 0.1", "-76.9954, 121.114, 13.1569, 0.1", "-77.2677, 121.369, 13.3915, 0.14", "-77.2677, 121.369, 13.3915, 0.28" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-66.7151, 102.452, 3.65529, 0.1", "-67.7599, 102.175, 4.14631, 0.1", "-68.3093, 102.013, 4.4258, 0.1", "-68.7817, 101.848, 4.69498, 0.1", "-69.7376, 101.49, 5.2294, 0.1", "-70.7072, 101.117, 5.73743, 0.1", "-71.1882, 100.928, 5.97434, 0.1", "-72.1712, 100.506, 6.41466, 0.14", "-73.1888, 100.049, 6.83461, 0.28", "-73.6786, 99.8202, 7.00114, 0.14", "-74.1837, 99.5889, 7.12112, 0.1", "-74.4408, 99.4809, 7.15885, 0.1", "-74.961, 99.2962, 7.24461, 0.14", "-75.5001, 99.1382, 7.31003, 0.28", "-75.893, 99.0429, 7.35432, 0.42", "-77.0453, 98.8006, 7.51316, 0.1", "-77.664, 98.6834, 7.59746, 0.1", "-78.8196, 98.4901, 7.79509, 0.14", "-79.3727, 98.4057, 7.89434, 0.1", "-79.9267, 98.333, 7.98157, 0.1", "-80.5443, 98.2583, 8.04654, 0.1", "-81.1044, 98.1818, 8.06181, 0.1", "-82.2841, 98.0082, 8.06835, 0.1", "-82.845, 97.9424, 8.03841, 0.14", "-83.4685, 97.9021, 8.0094, 0.1", "-84.0329, 97.9114, 7.97472, 0.14", "-84.3142, 97.9404, 7.94723, 0.1", "-84.5887, 97.9981, 7.90234, 0.1", "-85.3336, 98.1975, 7.70956, 0.1", "-85.7224, 98.3012, 7.64955, 0.1", "-86.4893, 98.4994, 7.58458, 0.1", "-86.8793, 98.5948, 7.5662, 0.1", "-87.4919, 98.7289, 7.55007, 0.1", "-88.051, 98.8297, 7.53842, 0.1", "-89.2331, 98.9932, 7.52329, 0.1", "-89.6242, 99.0308, 7.5135, 0.1", "-90.2582, 99.0639, 7.48694, 0.14", "-90.2582, 99.0639, 7.48694, 0.28", "-90.8794, 99.0529, 7.40071, 0.28", "-91.4989, 99.0178, 7.26409, 0.14", "-92.0334, 98.9522, 7.09147, 0.1", "-92.2987, 98.9019, 7.0029, 0.14", "-92.8203, 98.776, 6.8243, 0.1", "-93.3378, 98.6173, 6.68609, 0.1", "-93.858, 98.4236, 6.57798, 0.1", "-94.3776, 98.2098, 6.49282, 0.1", "-94.8946, 97.9916, 6.42297, 0.14", "-95.4094, 97.7588, 6.39806, 0.28", "-96.4868, 97.248, 6.41205, 0.42", "-96.9905, 96.9921, 6.43569, 0.28", "-97.4789, 96.7222, 6.46343, 0.14", "-97.9626, 96.43, 6.48407, 0.1", "-98.9612, 95.7853, 6.50544, 0.1", "-99.4336, 95.4699, 6.52342, 0.1", "-99.9502, 95.1119, 6.52729, 0.1", "-100.466, 94.7416, 6.54226, 0.1", "-100.974, 94.3593, 6.55613, 0.14", "-100.974, 94.3593, 6.55613, 0.28", "-101.866, 93.6361, 6.4658, 0.1", "-102.352, 93.2186, 6.41441, 0.1", "-102.766, 92.8515, 6.35877, 0.14", "-103.061, 92.5771, 6.30245, 0.28", "-103.509, 92.1532, 6.18348, 0.14", "-103.951, 91.7239, 6.02701, 0.1", "-104.213, 91.4579, 5.90403, 0.14", "-104.644, 91.036, 5.70422, 0.1", "-105.082, 90.6317, 5.50514, 0.1", "-105.496, 90.2915, 5.32395, 0.1", "-105.982, 89.9375, 5.11865, 0.1", "-106.483, 89.6173, 4.91441, 0.1", "-106.954, 89.3649, 4.73023, 0.1", "-107.443, 89.1425, 4.54555, 0.1", "-107.942, 88.9483, 4.36267, 0.1", "-108.455, 88.7843, 4.1805, 0.1", "-108.966, 88.656, 4.00459, 0.1", "-109.557, 88.5337, 3.80559, 0.1", "-109.821, 88.4887, 3.71834, 0.1", "-110.358, 88.423, 3.5449, 0.1", "-110.953, 88.3678, 3.35554, 0.1", "-111.495, 88.3355, 3.18627, 0.14", "-111.495, 88.3355, 3.18627, 0.28", "-112.105, 88.3326, 3.00119, 0.1", "-112.704, 88.3418, 2.82136, 0.1", "-113.245, 88.3628, 2.66076, 0.1", "-113.854, 88.3941, 2.48158, 0.1", "-114.455, 88.4381, 2.30688, 0.1", "-115.064, 88.4767, 2.12892, 0.1", "-115.336, 88.4927, 2.04913, 0.1", "-115.937, 88.5352, 1.87416, 0.1", "-116.545, 88.5901, 1.69902, 0.1", "-117.146, 88.6362, 1.52468, 0.1", "-117.691, 88.6745, 1.36615, 0.1", "-118.301, 88.72, 1.18883, 0.1", "-118.677, 88.7499, 1.07979, 0.1", "-119.288, 88.7945, 0.902316, 0.1", "-119.832, 88.8329, 0.743792, 0.14", "-120.433, 88.8786, 0.569384, 0.28", "-120.702, 88.9073, 0.492571, 0.14" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-22.1322, 74.2434, -2.88498, 0.98", "-22.256, 75.5306, -2.29523, 0.98", "-22.3168, 76.2354, -2.0172, 0.84", "-22.3883, 76.9426, -1.77643, 0.7", "-22.4347, 77.3999, -1.63583, 0.56", "-22.5165, 78.1167, -1.43762, 0.7", "-22.5919, 78.7677, -1.26992, 0.56", "-22.6724, 79.5123, -1.14013, 0.42", "-22.7643, 80.1746, -1.03759, 0.28", "-22.9289, 80.8926, -0.906609, 0.14", "-23.1293, 81.5257, -0.777565, 0.1", "-23.4022, 82.218, -0.622782, 0.14", "-23.682, 82.8062, -0.489398, 0.28", "-23.8444, 83.0983, -0.427183, 0.14", "-24.5706, 84.2983, -0.192481, 0.1", "-24.9348, 84.8647, -0.0998257, 0.1", "-25.2889, 85.4352, -0.0175003, 0.1", "-25.6576, 86.0855, 0.0634375, 0.1", "-25.9247, 86.7097, 0.098106, 0.1", "-26.1107, 87.3601, 0.0987725, 0.1", "-26.2311, 88.0292, 0.0961796, 0.1", "-26.3715, 88.762, 0.176476, 0.1", "-26.5287, 89.4875, 0.339708, 0.14", "-26.829, 90.6854, 0.730782, 0.28", "-26.9251, 90.9889, 0.849812, 0.42", "-27.4175, 92.1826, 1.34697, 0.1", "-28.0064, 93.3431, 1.82224, 0.14", "-28.3352, 93.8969, 2.02908, 0.1", "-28.6841, 94.433, 2.2104, 0.1", "-29.0524, 94.9814, 2.37113, 0.1", "-29.4391, 95.6177, 2.47562, 0.1", "-29.7448, 96.2247, 2.49133, 0.1", "-30.0205, 96.8419, 2.4665, 0.1", "-30.152, 97.1553, 2.45927, 0.14", "-30.4349, 97.769, 2.49079, 0.7", "-30.7332, 98.3754, 2.56448, 0.7", "-31.0312, 98.9604, 2.66972, 0.84", "-31.3476, 99.5492, 2.79352, 0.98", "-31.5786, 99.9672, 2.887, 0.98", "-32.2369, 101.199, 3.17368, 0.84", "-32.5399, 101.789, 3.31011, 0.84", "-32.8332, 102.388, 3.4388, 0.7", "-33.1226, 102.979, 3.59645, 0.56", "-33.3903, 103.563, 3.76941, 0.56", "-33.6661, 104.24, 3.97741, 0.56", "-33.8582, 104.859, 4.1711, 0.42", "-34.0345, 105.475, 4.397, 0.42", "-34.4701, 106.654, 5.0605, 0.56", "-34.7319, 107.229, 5.48381, 0.56", "-34.9029, 107.559, 5.77132, 0.7", "-35.1854, 108.074, 6.25731, 0.7", "-35.1854, 108.074, 6.25731, 0.84", "-35.9105, 109.893, 7.82381, 1.12", "-35.9794, 110.163, 8.0126, 1.12", "-36.1025, 110.8, 8.38625, 0.98", "-36.2033, 111.497, 8.67689, 0.84", "-36.2416, 111.954, 8.78165, 0.84", "-36.3371, 113.491, 8.87113, 0.84", "-36.3522, 113.826, 8.83629, 0.7", "-36.4414, 114.566, 8.73561, 0.56", "-36.6128, 115.305, 8.61082, 0.42", "-36.8296, 115.924, 8.50276, 0.28", "-37.1228, 116.61, 8.41099, 0.14", "-37.4241, 117.218, 8.3677, 0.28", "-37.4241, 117.218, 8.3677, 0.42", "-37.6525, 117.855, 8.37761, 0.1", "-37.8509, 118.504, 8.40953, 0.1", "-38.0558, 119.237, 8.45759, 0.1", "-38.2116, 119.884, 8.51602, 0.1", "-38.3676, 120.626, 8.59727, 0.14", "-38.5113, 121.278, 8.72445, 0.28", "-38.5794, 121.595, 8.81532, 0.42", "-38.703, 122.21, 9.04452, 0.56", "-38.8304, 122.898, 9.34721, 0.56", "-38.8751, 123.201, 9.49566, 0.42", "-38.9881, 124.497, 10.066, 0.56", "-38.9794, 125.219, 10.3075, 0.42", "-38.9687, 125.661, 10.4685, 0.28", "-38.9321, 126.372, 10.7356, 0.42", "-38.8974, 127.095, 10.9733, 0.56", "-38.8622, 128.317, 11.2406, 0.7", "-38.8069, 129.522, 11.269, 0.7", "-39.0623, 131.936, 11.4786, 0.56", "-39.1774, 132.229, 11.6075, 0.7", "-39.4351, 132.746, 11.9431, 0.7", "-39.7061, 133.211, 12.3531, 0.7", "-39.9628, 133.666, 12.788, 0.56", "-40.2469, 134.198, 13.2537, 0.42", "-40.7286, 135.31, 13.9945, 0.28", "-40.9036, 135.689, 14.2331, 0.14", "-41.4524, 136.81, 14.9123, 0.1", "-41.657, 137.195, 15.116, 0.14", "-42.0176, 137.809, 15.3578, 0.56", "-42.3732, 138.375, 15.4775, 0.42", "-42.793, 138.996, 15.5439, 0.28", "-43.1955, 139.542, 15.5852, 0.14", "-43.6386, 140.149, 15.6103, 0.1", "-44.0682, 140.762, 15.6791, 0.1", "-44.4182, 141.332, 15.801, 0.1", "-44.9994, 142.526, 16.1889, 0.14", "-44.9994, 142.526, 16.1889, 0.28", "-45.087, 143.188, 16.528, 0.84", "-45.0627, 143.842, 16.9136, 0.7", "-44.9938, 144.245, 17.1572, 0.56", "-44.8329, 144.899, 17.5104, 0.42", "-44.6574, 145.572, 17.7851, 0.56", "-44.6042, 145.889, 17.8957, 0.56", "-44.5787, 146.215, 17.9909, 0.7", "-44.5867, 146.876, 18.1465, 0.84", "-44.6471, 147.539, 18.269, 0.7", "-44.773, 148.199, 18.3495, 0.56", "-44.9513, 148.923, 18.4123, 0.7", "-44.9513, 148.923, 18.4123, 0.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-22.1322, 74.2434, -2.88498, 0.84", "-22.2306, 74.5673, -3.32666, 0.84", "-22.4175, 75.182, -4.16462, 0.7", "-22.5987, 75.7782, -4.97747, 0.56", "-22.7689, 76.3381, -5.74072, 0.42", "-22.8674, 76.6621, -6.18241, 0.56", "-22.956, 76.9536, -6.57981, 0.42" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-12.3231, 174.086, -66.1719, 0.14", "-12.0787, 175.559, -66.0378, 0.14", "-11.9648, 176.257, -65.9425, 0.28", "-11.8338, 177.042, -65.837, 0.42", "-11.7737, 177.39, -65.796, 0.42", "-11.5401, 178.862, -65.6395, 0.28", "-11.4183, 179.655, -65.5676, 0.14", "-11.3034, 180.344, -65.4705, 0.1", "-11.1731, 181.133, -65.3846, 0.1", "-11.0662, 181.926, -65.3274, 0.1", "-10.983, 182.62, -65.2639, 0.1", "-10.9192, 183.417, -65.1915, 0.1", "-10.8911, 183.771, -65.1411, 0.1", "-10.8181, 184.549, -65.0078, 0.1", "-10.7442, 185.246, -64.874, 0.1", "-10.5615, 186.671, -64.6014, 0.1", "-10.466, 187.375, -64.5279, 0.1", "-10.3598, 188.158, -64.5164, 0.1", "-10.2395, 188.951, -64.5769, 0.1", "-10.1581, 189.445, -64.6611, 0.1", "-10.0191, 190.197, -64.8583, 0.14", "-9.74944, 191.6, -65.3366, 0.14", "-9.57592, 192.344, -65.5389, 0.1", "-9.45646, 192.828, -65.6348, 0.1", "-9.25889, 193.59, -65.7234, 0.1", "-9.03082, 194.358, -65.6928, 0.1", "-8.78973, 195.113, -65.5527, 0.1", "-8.33004, 196.48, -65.1436, 0.1", "-8.22991, 196.804, -65.0363, 0.1", "-8.03471, 197.54, -64.7846, 0.1", "-7.71456, 198.933, -64.3256, 0.1", "-7.59215, 199.611, -64.1258, 0.1", "-7.50209, 200.377, -63.9467, 0.1", "-7.45275, 201.086, -63.8454, 0.1", "-7.41297, 201.795, -63.7653, 0.1", "-7.37975, 202.59, -63.6618, 0.1", "-7.35319, 203.299, -63.5824, 0.1", "-7.29041, 203.993, -63.471, 0.1", "-7.23321, 204.493, -63.3691, 0.1", "-7.17942, 204.836, -63.2954, 0.1", "-6.91789, 206.244, -63.0082, 0.1", "-6.76535, 207.008, -62.8738, 0.1", "-6.60415, 207.788, -62.7628, 0.1", "-6.4637, 208.489, -62.6946, 0.1", "-6.33568, 209.269, -62.6506, 0.1", "-6.23966, 210.064, -62.6987, 0.1", "-6.19353, 210.829, -62.8993, 0.1", "-6.19149, 211.167, -63.0217, 0.1", "-6.21022, 211.904, -63.3434, 0.1", "-6.24155, 212.548, -63.6583, 0.1", "-6.33815, 213.838, -64.4182, 0.14", "-6.43607, 215.101, -65.2323, 0.28", "-6.47069, 215.693, -65.6309, 0.14", "-6.48318, 216.35, -66.0682, 0.1", "-6.4754, 216.654, -66.2589, 0.1", "-6.34148, 218.077, -67.0338, 0.1", "-6.23058, 218.812, -67.3367, 0.1", "-6.13903, 219.287, -67.4908, 0.1", "-5.96615, 220.023, -67.7263, 0.1", "-5.78128, 220.775, -67.937, 0.14", "-5.58703, 221.526, -68.0978, 0.1", "-5.50338, 221.873, -68.1346, 0.1", "-5.33575, 222.656, -68.2101, 0.1", "-5.24341, 223.142, -68.2527, 0.1", "-5.11276, 223.829, -68.3129, 0.1", "-4.98471, 224.609, -68.4502, 0.1", "-4.87688, 225.295, -68.619, 0.1", "-4.75808, 226.044, -68.8382, 0.1", "-4.65545, 226.806, -69.0757, 0.1", "-4.60625, 227.278, -69.2206, 0.1", "-4.47954, 228.712, -69.6662, 0.1", "-4.44858, 229.196, -69.8164, 0.1", "-4.41685, 229.952, -70.0422, 0.14", "-4.40872, 230.638, -70.2411, 0.1", "-4.42407, 231.333, -70.4188, 0.1", "-4.46117, 232.036, -70.5401, 0.1", "-4.46117, 232.036, -70.5401, 0.14", "-4.50764, 232.392, -70.5297, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-12.3231, 174.086, -66.1719, 0.1", "-12.7293, 173.5, -66.1611, 0.1", "-12.9388, 173.188, -66.173, 0.1", "-13.0613, 172.982, -66.2148, 0.1", "-13.2304, 172.66, -66.3086, 0.1", "-13.3838, 172.333, -66.4134, 0.1", "-13.4697, 172.119, -66.4815, 0.1", "-13.5695, 171.774, -66.591, 0.1", "-13.6865, 171.15, -66.7274, 0.1", "-13.7166, 170.675, -66.7768, 0.1", "-13.7153, 170.506, -66.7601, 0.1", "-13.7006, 170.18, -66.6723, 0.1", "-13.6722, 169.534, -66.4238, 0.1", "-13.6671, 169.226, -66.2842, 0.1", "-13.6758, 168.889, -66.1097, 0.14", "-13.6985, 168.261, -65.7769, 0.84", "-13.7213, 167.92, -65.6086, 0.7", "-13.7353, 167.705, -65.516, 0.56", "-13.7379, 167.241, -65.3777, 0.42", "-13.7379, 167.241, -65.3777, 0.28", "-13.6914, 167.082, -65.3419, 0.42", "-13.6123, 166.934, -65.3148, 0.56", "-13.4127, 166.623, -65.2459, 0.42", "-13.2242, 166.348, -65.1806, 0.28", "-13.0144, 166.045, -65.108, 0.42", "-12.82, 165.769, -65.0658, 0.28", "-12.6362, 165.495, -65.0227, 0.14", "-12.4523, 165.214, -64.9761, 0.1", "-12.271, 164.933, -64.926, 0.1", "-12.089, 164.653, -64.8704, 0.1", "-11.7574, 164.133, -64.7587, 0.1", "-11.4472, 163.618, -64.5814, 0.28", "-11.2928, 163.343, -64.4592, 0.14", "-11.1498, 163.043, -64.2749, 0.1", "-11.0422, 162.781, -64.0899, 0.1", "-10.9467, 162.519, -63.8958, 0.1", "-10.7689, 161.98, -63.5009, 0.1", "-10.6707, 161.707, -63.3354, 0.1", "-10.4408, 161.126, -63.0395, 0.1", "-10.2818, 160.832, -62.9877, 0.1", "-10.072, 160.585, -63.0913, 0.1", "-9.85186, 160.382, -63.2478, 0.1", "-9.432, 160.055, -63.5794, 0.1", "-8.98141, 159.753, -63.9362, 0.1", "-8.06567, 159.219, -64.6252, 0.1", "-8.06567, 159.219, -64.6252, 0.14", "-7.50751, 158.962, -64.8349, 0.42", "-7.2972, 158.862, -64.804, 0.28", "-7.01058, 158.689, -64.6246, 0.14", "-6.54771, 158.348, -64.2069, 0.1", "-6.30837, 158.158, -63.981, 0.1", "-6.14306, 158.033, -63.8706, 0.1", "-5.84299, 157.831, -63.7537, 0.1", "-5.52384, 157.64, -63.6721, 0.14", "-5.37824, 157.558, -63.6409, 0.1", "-4.83647, 157.235, -63.4948, 0.1", "-4.5491, 157.04, -63.3372, 0.1", "-4.33321, 156.858, -63.1488, 0.1", "-4.20784, 156.726, -63.0003, 0.1", "-3.91417, 156.351, -62.5921, 0.1", "-3.63569, 155.896, -62.1511, 0.1", "-3.5205, 155.653, -61.9456, 0.1", "-3.41423, 155.385, -61.769, 0.14", "-3.29891, 155.093, -61.6381, 0.1", "-3.17441, 154.794, -61.5635, 0.1", "-3.03629, 154.484, -61.5522, 0.1", "-2.90404, 154.175, -61.5832, 0.1", "-2.79467, 153.854, -61.6047, 0.1", "-2.63214, 153.249, -61.6197, 0.1", "-2.58261, 153.019, -61.614, 0.1", "-2.51461, 152.646, -61.5849, 0.1", "-2.45991, 152.278, -61.5383, 0.1", "-2.3645, 151.582, -61.4155, 0.1", "-2.31956, 151.256, -61.3409, 0.1", "-2.26883, 150.932, -61.2496, 0.1", "-2.19908, 150.613, -61.1623, 0.1", "-2.10034, 150.263, -61.0751, 0.1", "-2.00115, 149.952, -60.9878, 0.1", "-1.94642, 149.797, -60.9447, 0.1", "-1.84092, 149.492, -60.8435, 0.1", "-1.73715, 149.194, -60.7329, 0.1", "-1.63069, 148.897, -60.6128, 0.1", "-1.41624, 148.29, -60.3592, 0.1", "-1.31504, 147.989, -60.2368, 0.1", "-1.22124, 147.685, -60.1242, 0.1", "-1.13732, 147.37, -60.0259, 0.1", "-1.09853, 147.211, -59.9871, 0.1", "-1.04884, 146.984, -59.9513, 0.7", "-0.983858, 146.652, -59.9304, 0.56", "-0.920209, 146.276, -59.9102, 0.42", "-0.856852, 145.908, -59.9201, 0.28", "-0.795731, 145.576, -59.9471, 0.14", "-0.73339, 145.208, -59.9698, 0.1", "-0.674932, 144.832, -59.9852, 0.1", "-0.6418, 144.494, -59.9703, 0.1", "-0.606004, 143.791, -59.8786, 0.1", "-0.607163, 143.624, -59.8454, 0.1", "-0.636709, 142.996, -59.6834, 0.1", "-0.659611, 142.633, -59.5682, 0.1", "-0.725293, 141.974, -59.3135, 0.1", "-0.776555, 141.632, -59.1545, 0.1", "-0.814415, 141.43, -59.0396, 0.1", "-0.866105, 141.134, -58.8843, 0.1", "-0.879328, 140.976, -58.8247, 0.14" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.8205, -148.951, -1.6583, 0.98", "15.7535, -149.324, -1.1202, 0.98", "15.7323, -149.509, -0.888392, 1.12", "15.6854, -150.258, -0.0882764, 1.82", "15.6792, -151.149, 0.731286, 1.68", "15.7308, -152.115, 1.46014, 1.54", "15.8016, -152.641, 1.72718, 1.4", "15.9482, -153.194, 1.83331, 1.26", "16.3224, -154.209, 1.65046, 1.12", "16.7611, -155.101, 1.09796, 1.12", "16.8765, -155.296, 0.909535, 1.12", "17.3479, -155.977, 0.025084, 1.12", "17.7886, -156.535, -0.862297, 1.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.8205, -148.951, -1.6583, 0.98", "15.4227, -149.192, -1.57113, 0.98", "15.2452, -149.3, -1.5202, 1.12", "14.5142, -149.734, -1.32673, 1.4", "14.1228, -149.983, -1.2326, 1.26", "13.3899, -150.476, -1.08875, 1.12", "13.0032, -150.751, -1.02755, 0.98", "12.3588, -151.248, -0.955661, 0.84", "12.0391, -151.521, -0.947452, 0.7", "11.7055, -151.855, -0.958435, 0.56", "11.3811, -152.206, -0.972252, 0.1", "11.1913, -152.432, -0.996679, 0.1", "10.8166, -152.9, -1.05341, 0.1", "10.6426, -153.139, -1.11522, 0.1", "10.1124, -153.913, -1.3521, 0.14", "10.1124, -153.913, -1.3521, 0.28", "9.93191, -154.294, -1.57728, 0.28", "9.85522, -154.53, -1.73944, 0.14", "9.74409, -155.245, -2.27452, 0.1", "9.74165, -155.484, -2.44982, 0.1", "9.82893, -156.219, -2.95799, 0.14", "9.86063, -156.403, -3.05805, 0.56", "9.97372, -156.78, -3.22559, 0.42", "10.1111, -157.155, -3.35062, 0.28", "10.2601, -157.547, -3.43724, 0.14", "10.4059, -157.94, -3.51146, 0.1", "10.5338, -158.343, -3.57242, 0.14", "10.7614, -159.195, -3.72661, 0.28", "10.8527, -159.602, -3.81032, 0.42", "10.9056, -159.894, -3.87388, 0.1", "10.9682, -160.35, -3.97009, 0.1", "11.0206, -160.82, -4.0497, 0.1", "11.0603, -161.287, -4.09836, 0.1", "11.0779, -161.5, -4.09978, 0.1", "11.1104, -161.709, -4.09171, 0.84", "11.2148, -162.122, -4.05067, 0.7", "11.362, -162.567, -3.98497, 0.56", "11.5122, -162.959, -3.91426, 0.42", "11.6885, -163.396, -3.82991, 0.28", "11.8483, -163.783, -3.75296, 0.14", "12.0269, -164.218, -3.66712, 0.28", "12.1036, -164.413, -3.63063, 0.28", "12.2488, -164.809, -3.56334, 0.14", "12.3838, -165.201, -3.50208, 0.1", "12.5274, -165.659, -3.4393, 0.1", "12.6452, -166.057, -3.38913, 0.1", "12.7563, -166.465, -3.34371, 0.14", "12.8801, -166.875, -3.32551, 0.28", "13.011, -167.28, -3.3311, 0.28", "13.1462, -167.685, -3.35609, 0.14", "13.2794, -168.079, -3.39774, 0.1", "13.4159, -168.481, -3.45519, 0.1", "13.6759, -169.299, -3.60272, 0.14", "13.7922, -169.7, -3.68368, 0.28", "13.8962, -170.107, -3.76604, 0.42", "13.8962, -170.107, -3.76604, 0.56", "13.9477, -170.396, -3.80493, 0.56", "14.0137, -170.87, -3.83788, 0.56", "14.0591, -171.295, -3.83433, 0.56", "14.1118, -171.718, -3.82606, 0.7", "14.1807, -172.132, -3.80726, 0.56", "14.2658, -172.548, -3.77845, 0.42", "14.3734, -172.958, -3.73533, 0.56", "14.4966, -173.364, -3.68226, 0.42", "14.6249, -173.766, -3.62577, 0.28", "14.7902, -174.213, -3.58588, 0.14", "14.9528, -174.606, -3.5682, 0.1", "15.1418, -175.04, -3.5723, 0.1", "15.3084, -175.433, -3.60279, 0.1", "15.4634, -175.826, -3.65825, 0.1", "15.7006, -176.561, -3.80821, 0.1", "15.7006, -176.561, -3.80821, 0.1", "15.7136, -176.862, -3.8401, 0.1", "15.68, -177.34, -3.86255, 0.1", "15.6283, -177.757, -3.85372, 0.1", "15.5522, -178.23, -3.82054, 0.1", "15.3841, -179.107, -3.72832, 0.14", "15.3073, -179.517, -3.6922, 0.1", "15.2219, -179.986, -3.6603, 0.14", "15.1449, -180.405, -3.64747, 0.1", "15.0617, -180.868, -3.65388, 0.14", "15.0193, -181.167, -3.6713, 0.28", "14.9677, -181.633, -3.7304, 0.14", "14.9153, -182.105, -3.79041, 0.1", "14.8747, -182.58, -3.84323, 0.14", "14.8471, -182.792, -3.85242, 0.28", "14.7824, -183.205, -3.84521, 0.42", "14.7273, -183.502, -3.82884, 0.1", "14.6359, -183.917, -3.79778, 0.1", "14.5388, -184.332, -3.76144, 0.1", "14.314, -185.269, -3.67482, 0.14", "14.1893, -185.719, -3.60867, 0.1", "14.107, -186.005, -3.55314, 0.14", "13.9886, -186.458, -3.4481, 0.28", "13.8991, -186.857, -3.34892, 0.42", "13.8727, -187.062, -3.2947, 0.56", "13.8677, -187.827, -3.1048, 0.56", "13.8867, -188.241, -2.99523, 0.42", "13.9167, -188.653, -2.89417, 0.28", "13.9485, -189.072, -2.81129, 0.14", "13.9841, -189.539, -2.74768, 0.1", "14.025, -190.008, -2.71182, 0.1", "14.056, -190.434, -2.68449, 0.1", "14.0687, -190.911, -2.63346, 0.1", "14.0655, -191.377, -2.56506, 0.1", "14.0291, -191.79, -2.46639, 0.1", "14.0008, -191.992, -2.40328, 0.1", "13.8823, -192.725, -2.13674, 0.1", "13.8093, -193.119, -1.99078, 0.14", "13.7323, -193.516, -1.85074, 0.1", "13.5623, -194.357, -1.59892, 0.14", "13.4791, -194.766, -1.50353, 0.1", "13.3906, -195.232, -1.4352, 0.1", "13.3287, -195.699, -1.44258, 0.1", "13.277, -196.172, -1.50135, 0.1", "13.2485, -196.631, -1.60189, 0.1", "13.247, -196.834, -1.66381, 0.1", "13.2433, -197.288, -1.81498, 0.1", "13.2405, -198.134, -2.10453, 0.14", "13.2358, -198.587, -2.25832, 0.1", "13.2158, -198.999, -2.36464, 0.14", "13.1789, -199.462, -2.44183, 0.1", "13.1479, -199.762, -2.4637, 0.1", "13.0878, -200.23, -2.45269, 0.1", "13.0089, -200.7, -2.40308, 0.1", "12.9004, -201.562, -2.34515, 0.14", "12.8525, -201.987, -2.34333, 0.28", "12.814, -202.403, -2.36789, 0.42", "12.7697, -202.874, -2.43773, 0.56", "12.7498, -203.164, -2.5348, 0.42", "12.7228, -203.94, -2.92278, 0.28", "12.7237, -204.348, -3.17371, 0.42", "12.7224, -204.597, -3.33207, 0.28", "12.7255, -205.119, -3.64624, 0.14", "12.782, -205.819, -4.06008, 0.1", "12.8251, -206.19, -4.26452, 0.1", "12.8767, -206.574, -4.44586, 0.1", "12.9655, -207.009, -4.62867, 0.1", "13.0398, -207.404, -4.75104, 0.1", "13.1615, -208.251, -4.91228, 0.1", "13.1776, -208.552, -4.93724, 0.1", "13.1792, -208.978, -4.95713, 0.1", "13.1601, -209.398, -4.96262, 0.1", "13.0946, -210.293, -4.93581, 0.1", "13.0381, -210.768, -4.90816, 0.1", "12.9704, -211.233, -4.86367, 0.1", "12.9161, -211.656, -4.83443, 0.1", "12.8574, -212.132, -4.8247, 0.1", "12.8133, -212.55, -4.84048, 0.1", "12.7916, -212.851, -4.87139, 0.1", "12.7692, -213.269, -4.94467, 0.1", "12.7474, -213.726, -5.05599, 0.1", "12.7294, -214.186, -5.19075, 0.1", "12.7165, -214.634, -5.33568, 0.1", "12.7019, -215.088, -5.49134, 0.1", "12.6752, -215.859, -5.76269, 0.1", "12.6517, -216.303, -5.92223, 0.1", "12.642, -216.699, -6.08434, 0.1", "12.635, -217.137, -6.27883, 0.1", "12.6432, -217.554, -6.49692, 0.14", "12.6456, -217.816, -6.64868, 0.28", "12.6371, -218.223, -6.88822, 0.14", "12.6261, -218.975, -7.37804, 0.14", "12.6196, -219.218, -7.54765, 0.28", "12.5967, -219.952, -8.06517, 0.14", "12.5779, -220.345, -8.32759, 0.1", "12.5726, -220.746, -8.58789, 0.14", "12.5673, -220.927, -8.6993, 0.28", "12.5468, -221.189, -8.83429, 0.1", "12.5156, -221.622, -9.03559, 0.1", "12.471, -222.073, -9.19286, 0.1", "12.4658, -222.889, -9.48557, 0.14" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "19.1164, -96.5006, 5.14824, 0.84", "18.8317, -97.0388, 4.23167, 0.84", "18.5203, -97.6276, 3.229, 0.98", "18.2455, -98.1471, 2.34435, 0.84", "17.933, -98.738, 1.33807, 0.7", "17.8592, -98.8774, 1.10056, 0.84", "17.8592, -98.8774, 1.10056, 0.98" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.1164, -96.5006, 5.14824, 0.56", "19.1665, -96.6337, 5.0243, 0.56", "19.4113, -97.1984, 4.53013, 0.7", "19.5384, -97.4883, 4.25806, 0.56", "19.6523, -97.7507, 4.01204, 0.42", "19.9016, -98.2996, 3.50251, 0.28", "19.9916, -98.4848, 3.33285, 0.14", "20.1436, -98.7627, 3.05349, 0.1", "20.46, -99.2621, 2.52689, 0.1", "20.5319, -99.3702, 2.39246, 0.14", "20.6383, -99.5175, 2.19711, 0.28", "20.7526, -99.6671, 2.00802, 0.14", "21.0983, -100.12, 1.46265, 0.1", "21.2214, -100.279, 1.28264, 0.14", "21.6019, -100.78, 0.805902, 0.28", "21.7992, -101.065, 0.573253, 0.14", "21.9892, -101.381, 0.369004, 0.1", "22.1616, -101.728, 0.212977, 0.1", "22.2273, -101.896, 0.157503, 0.28", "22.3333, -102.241, 0.0555201, 0.14", "22.419, -102.599, -0.0285544, 0.1", "22.4647, -102.952, -0.146396, 0.14", "22.4865, -103.337, -0.30104, 0.1", "22.4824, -103.953, -0.625195, 0.1", "22.4785, -104.114, -0.722012, 0.1", "22.4699, -104.433, -0.924818, 0.14", "22.4613, -105.08, -1.33808, 0.1", "22.4632, -105.392, -1.53512, 0.1", "22.4623, -106.035, -1.95707, 0.14", "22.4321, -106.329, -2.18809, 0.28", "22.3665, -106.584, -2.45814, 0.42", "22.277, -106.805, -2.74832, 0.56", "22.277, -106.805, -2.74832, 0.56", "22.0741, -107.13, -3.32906, 0.56", "21.6981, -107.734, -4.49522, 0.42", "21.5309, -108.022, -5.10649, 0.56", "21.5309, -108.022, -5.10649, 0.56", "21.5072, -108.107, -5.27317, 0.28", "21.4936, -108.529, -5.94041, 0.42", "21.5696, -108.808, -6.24088, 0.28", "21.854, -109.364, -6.60191, 0.14", "22.0513, -109.697, -6.75796, 0.1", "22.2414, -110.003, -6.86921, 0.14", "22.6363, -110.657, -7.0691, 0.1", "22.82, -110.979, -7.12781, 0.1", "22.9295, -111.213, -7.19553, 0.1", "22.9295, -111.213, -7.19553, 0.1", "22.9754, -111.377, -7.2768, 0.1", "23.1186, -112.031, -7.65227, 0.1", "23.1732, -112.351, -7.84462, 0.14", "23.2944, -113.056, -8.17887, 0.28", "23.3568, -113.407, -8.29585, 0.42", "23.4303, -113.77, -8.36906, 0.56", "23.5139, -114.135, -8.39494, 0.42", "23.6073, -114.493, -8.36676, 0.28", "23.8093, -115.251, -8.25082, 0.42", "23.9061, -115.606, -8.17118, 0.56", "24.0025, -115.962, -8.09854, 0.42", "24.0507, -116.142, -8.06822, 0.42", "24.1442, -116.496, -8.02692, 0.56", "24.2385, -116.861, -8.00891, 0.42", "24.3305, -117.225, -8.01962, 0.28", "24.4384, -117.587, -8.00792, 0.14", "24.558, -117.941, -7.9779, 0.28", "24.6937, -118.289, -7.93565, 0.42", "24.8475, -118.623, -7.88669, 0.42", "25.0181, -118.953, -7.83365, 0.28", "25.3761, -119.572, -7.73844, 0.14", "25.4739, -119.733, -7.73169, 0.84", "25.6897, -120.089, -7.75643, 0.7", "25.9077, -120.445, -7.82026, 0.56", "26.0958, -120.753, -7.9077, 0.42", "26.3011, -121.093, -8.03507, 0.28", "26.6759, -121.733, -8.31892, 0.14", "26.8405, -122.028, -8.46881, 0.1", "26.9533, -122.243, -8.58727, 0.1", "27.1137, -122.578, -8.7763, 0.1", "27.2634, -122.921, -8.96184, 0.1", "27.3774, -123.279, -9.15409, 0.1", "27.5314, -123.955, -9.48346, 0.1", "27.5553, -124.123, -9.56577, 0.14", "27.5673, -124.361, -9.67233, 0.1", "27.5636, -124.71, -9.81134, 0.1", "27.5197, -125.442, -10.1087, 0.14", "27.494, -125.791, -10.2453, 0.1", "27.4792, -126.139, -10.3668, 0.1", "27.4727, -126.538, -10.5063, 0.14", "27.4735, -126.886, -10.6474, 0.1", "27.4996, -127.607, -10.9131, 0.1", "27.5192, -127.78, -10.9661, 0.56", "27.5806, -128.135, -11.0724, 0.56", "27.6729, -128.485, -11.171, 0.42", "27.9104, -129.196, -11.3411, 0.56", "28.1555, -129.839, -11.4455, 0.56", "28.2975, -130.228, -11.4997, 0.42", "28.4223, -130.62, -11.5705, 0.28", "28.5323, -131.019, -11.6528, 0.14", "28.5839, -131.273, -11.7288, 0.1", "28.6329, -131.624, -11.8573, 0.1", "28.6819, -132.339, -12.187, 0.1", "28.6779, -132.676, -12.3569, 0.1", "28.6493, -133.003, -12.5393, 0.1", "28.5666, -133.589, -12.9059, 0.1", "28.5666, -133.589, -12.9059, 0.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.71713, -186.105, -51.5287, 0.84", "-4.12491, -186.568, -50.8641, 0.84", "-3.91098, -186.735, -50.624, 0.7", "-3.26188, -187.243, -49.8956, 0.56", "-3.04795, -187.41, -49.6556, 0.42", "-2.8292, -187.581, -49.4101, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.71713, -186.105, -51.5287, 0.56", "-4.66584, -186.461, -51.4273, 0.56", "-4.59942, -186.965, -51.2896, 0.42", "-4.52257, -187.525, -51.1531, 0.28", "-4.44664, -188.035, -51.0462, 0.14", "-4.27183, -189.114, -50.8551, 0.1", "-4.18189, -189.627, -50.7796, 0.1", "-4.06558, -190.193, -50.7128, 0.1", "-3.96041, -190.707, -50.6685, 0.1", "-3.85924, -191.225, -50.6464, 0.1", "-3.76832, -191.744, -50.6515, 0.14", "-3.69224, -192.266, -50.6916, 0.1", "-3.62579, -192.777, -50.7287, 0.1", "-3.55109, -193.362, -50.7708, 0.1", "-3.49404, -193.942, -50.8077, 0.1", "-3.47715, -194.205, -50.822, 0.1", "-3.44778, -194.797, -50.8518, 0.1", "-3.43022, -195.322, -50.9155, 0.14", "-3.40975, -195.839, -51.0113, 0.28", "-3.37249, -196.403, -51.1473, 0.42", "-3.3206, -196.972, -51.3064, 0.28", "-3.27416, -197.469, -51.4529, 0.14", "-3.16691, -198.491, -51.7717, 0.1", "-3.10177, -199.001, -51.8985, 0.1", "-3.01667, -199.512, -51.9903, 0.1", "-2.91546, -200.022, -52.0724, 0.1", "-2.78689, -200.586, -52.1349, 0.1", "-2.72444, -200.843, -52.1349, 0.1", "-2.43882, -201.862, -51.941, 0.1", "-2.29722, -202.353, -51.8053, 0.14" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-44.9513, 148.923, 18.4123, 0.42", "-45.0699, 149.863, 19.4967, 0.42", "-45.0919, 150.187, 19.8433, 0.28", "-45.0837, 150.868, 20.5336, 0.14", "-45.0037, 151.821, 21.4251, 0.1", "-44.9115, 152.541, 22.0606, 0.1", "-44.8469, 152.908, 22.3713, 0.1", "-44.7374, 153.283, 22.6592, 0.14", "-44.5448, 153.87, 23.0996, 0.28", "-44.2544, 154.622, 23.6305, 0.14", "-44.0712, 155.004, 23.8663, 0.1", "-43.8032, 155.573, 24.2914, 0.14", "-43.6973, 155.81, 24.5155, 0.28", "-43.4972, 156.281, 25.0753, 0.56", "-43.4972, 156.281, 25.0753, 0.42", "-43.4154, 156.468, 25.3467, 0.56", "-43.0624, 157.226, 26.3569, 0.56", "-42.8332, 157.689, 26.9123, 0.42", "-42.6112, 158.138, 27.4934, 0.28", "-42.375, 158.564, 28.0746, 0.14", "-42.2122, 158.829, 28.4474, 0.1", "-41.9421, 159.255, 29.026, 0.1", "-41.6445, 159.684, 29.5761, 0.1", "-41.121, 160.473, 30.5969, 0.14", "-40.9034, 160.846, 31.1254, 0.28", "-40.8128, 161.037, 31.3953, 0.42", "-40.6241, 161.471, 32.0017, 0.56", "-40.4566, 161.908, 32.5992, 0.42", "-40.3583, 162.202, 32.9723, 0.56", "-40.0697, 163.165, 33.9963, 0.42", "-39.9623, 163.676, 34.5441, 0.28", "-39.8889, 164.119, 35.0477, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-44.9513, 148.923, 18.4123, 0.98", "-45.2944, 149.572, 18.5299, 0.98", "-45.455, 149.898, 18.5741, 0.84", "-45.5766, 150.24, 18.5796, 0.7", "-45.676, 150.585, 18.5642, 0.56", "-45.7668, 150.937, 18.5385, 0.42", "-45.8544, 151.29, 18.5082, 0.28", "-45.9226, 151.643, 18.455, 0.42", "-46.0623, 152.386, 18.3406, 0.28", "-46.1308, 152.741, 18.2872, 0.14", "-46.1951, 153.092, 18.2149, 0.1", "-46.2612, 153.441, 18.1303, 0.1", "-46.3334, 153.786, 18.0411, 0.1", "-46.4181, 154.131, 17.9531, 0.1", "-46.5262, 154.466, 17.895, 0.1", "-46.7712, 155.188, 17.8041, 0.1", "-46.8867, 155.527, 17.7792, 0.1", "-47.0253, 155.863, 17.7964, 0.1", "-47.1859, 156.185, 17.8601, 0.1", "-47.5351, 156.76, 18.0488, 0.1", "-47.7312, 157.041, 18.1708, 0.1", "-47.8327, 157.175, 18.2388, 0.1", "-48.2721, 157.737, 18.5126, 0.1", "-48.4879, 158.004, 18.6395, 0.1", "-48.7319, 158.302, 18.7611, 0.1", "-48.9525, 158.586, 18.828, 0.1", "-49.1766, 158.867, 18.8837, 0.1", "-49.1766, 158.867, 18.8837, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-22.956, 76.9536, -6.57981, 0.28", "-23.6234, 77.4453, -5.70921, 0.28", "-24.164, 78.0196, -4.95952, 0.42", "-24.164, 78.0196, -4.95952, 0.56", "-24.6798, 78.8578, -4.28028, 0.28", "-24.936, 79.3827, -3.97404, 0.28", "-25.1642, 79.9456, -3.73922, 0.14", "-25.2822, 80.5921, -3.684, 0.1", "-25.3317, 81.1749, -3.73459, 0.1", "-25.3576, 81.7552, -3.83734, 0.1", "-25.3299, 82.8928, -4.20488, 0.1", "-25.3043, 83.4348, -4.4288, 0.1", "-25.2721, 84.5698, -4.92163, 0.1", "-25.2654, 85.1122, -5.14595, 0.1", "-25.2658, 85.3919, -5.23977, 0.14", "-25.3094, 86.5641, -5.47234, 0.1", "-25.3094, 86.5641, -5.47234, 0.1", "-25.4509, 87.7508, -5.3433, 0.1", "-25.5614, 88.3858, -5.19478, 0.1", "-25.6707, 89.0033, -5.02665, 0.1", "-25.7826, 89.6275, -4.83837, 0.1", "-25.9033, 90.2348, -4.64331, 0.14", "-25.9539, 90.5075, -4.57796, 0.28", "-26.0399, 91.0745, -4.49207, 0.28", "-26.1502, 91.6466, -4.42019, 0.14", "-26.2981, 92.2861, -4.35532, 0.1", "-26.4114, 92.8619, -4.34152, 0.1", "-26.5106, 93.4329, -4.35784, 0.1", "-26.6142, 94.0851, -4.39586, 0.1", "-26.6991, 94.6668, -4.44602, 0.14", "-26.7846, 95.244, -4.50968, 0.28", "-27.0109, 96.4538, -4.59015, 0.42", "-27.1385, 97.0297, -4.5978, 0.28", "-27.29, 97.5964, -4.5766, 0.14", "-27.4719, 98.1556, -4.52922, 0.1", "-27.663, 98.6939, -4.44821, 0.14", "-28.0679, 99.8514, -4.27986, 0.1", "-28.2499, 100.406, -4.22188, 0.1", "-28.3902, 100.979, -4.2172, 0.1", "-28.4802, 101.556, -4.28156, 0.1", "-28.5292, 102.186, -4.43034, 0.1", "-28.5566, 103.321, -4.82127, 0.1", "-28.5554, 104.283, -5.23355, 0.14", "-28.5554, 104.283, -5.23355, 0.28", "-28.6472, 104.846, -5.3722, 0.7", "-28.8197, 105.408, -5.42314, 0.56", "-29.0554, 105.934, -5.39084, 0.42", "-29.3311, 106.447, -5.29725, 0.28", "-29.9108, 107.474, -5.07128, 0.14", "-30.1917, 107.982, -4.96792, 0.28", "-30.4668, 108.492, -4.87352, 0.14", "-30.7338, 109.009, -4.79363, 0.1", "-30.986, 109.528, -4.73548, 0.1", "-31.2252, 110.063, -4.7044, 0.1", "-31.4317, 110.614, -4.7478, 0.1", "-31.6256, 111.163, -4.82389, 0.1", "-31.8113, 111.713, -4.92555, 0.1", "-31.9885, 112.26, -5.04568, 0.1", "-32.1559, 112.798, -5.18309, 0.14", "-32.4996, 113.938, -5.5054, 0.28", "-32.624, 114.481, -5.69117, 0.42", "-32.7172, 115.026, -5.8964, 0.28", "-32.7532, 115.297, -5.99928, 0.42", "-32.7884, 115.569, -6.10155, 0.56", "-32.9085, 116.121, -6.2579, 0.84", "-33.3323, 117.271, -6.43567, 0.7", "-33.5749, 117.79, -6.50261, 0.56", "-33.8954, 118.285, -6.49862, 0.56", "-34.1464, 118.604, -6.45626, 0.42", "-34.9344, 119.537, -6.23125, 0.28", "-35.3627, 120.001, -6.06621, 0.14", "-35.3627, 120.001, -6.06621, 0.14", "-36.0749, 120.908, -5.74931, 0.1", "-36.3668, 121.406, -5.63091, 0.1", "-36.6005, 122.02, -5.54793, 0.1", "-36.7344, 122.594, -5.52817, 0.1", "-36.8269, 123.163, -5.52335, 0.1", "-36.9571, 124.394, -5.54618, 0.1", "-36.9772, 124.979, -5.58563, 0.1", "-36.9945, 125.627, -5.62981, 0.14", "-37.0226, 126.212, -5.66812, 0.14", "-37.088, 126.867, -5.70008, 0.1", "-37.1462, 127.156, -5.70527, 0.14", "-37.2267, 127.44, -5.72524, 0.28", "-37.3889, 128.063, -5.82728, 0.84", "-37.5209, 128.626, -5.94455, 0.7", "-37.6427, 129.255, -6.07039, 0.56", "-37.7414, 129.815, -6.18134, 0.42", "-37.9335, 130.982, -6.3861, 0.28", "-38.028, 131.631, -6.47751, 0.14", "-38.1035, 132.272, -6.54351, 0.1", "-38.1726, 132.927, -6.57959, 0.1", "-38.1726, 132.927, -6.57959, 0.14", "-38.2389, 133.509, -6.53277, 0.1", "-38.2938, 134.09, -6.47834, 0.1", "-38.3313, 134.669, -6.45751, 0.1", "-38.3746, 135.329, -6.47019, 0.1", "-38.423, 135.985, -6.50771, 0.1", "-38.5113, 136.63, -6.52854, 0.1", "-38.7323, 137.736, -6.54154, 0.14", "-38.8906, 138.304, -6.53735, 0.28", "-39.1134, 138.917, -6.5233, 0.42", "-39.3645, 139.447, -6.5033, 0.28", "-39.9789, 140.519, -6.43342, 0.14", "-40.2909, 141.002, -6.38292, 0.1", "-40.5952, 141.505, -6.3358, 0.1", "-40.5952, 141.505, -6.3358, 0.1", "-40.7871, 142.059, -6.36229, 0.1", "-40.933, 142.627, -6.42932, 0.1", "-41.0395, 143.196, -6.52718, 0.1", "-41.2658, 144.391, -6.73139, 0.1", "-41.3757, 144.963, -6.82778, 0.1", "-41.494, 145.531, -6.91661, 0.14", "-41.6253, 146.1, -6.99616, 0.28", "-41.741, 146.668, -7.08724, 0.14", "-41.8545, 147.23, -7.17779, 0.1", "-41.8545, 147.23, -7.17779, 0.14", "-41.9483, 147.804, -7.25738, 0.84", "-42.0539, 148.382, -7.30345, 0.7", "-42.3091, 149.594, -7.33131, 0.56", "-42.4322, 150.168, -7.31401, 0.42", "-42.6045, 150.787, -7.21927, 0.28", "-42.7959, 151.322, -7.07415, 0.14", "-43.2601, 152.353, -6.66393, 0.1", "-43.5184, 152.824, -6.42734, 0.14", "-43.7199, 153.137, -6.24837, 0.28", "-44.3171, 154.052, -5.75095, 0.56", "-44.6203, 154.498, -5.51095, 0.7", "-44.9165, 154.952, -5.28639, 0.56", "-45.1932, 155.441, -5.11637, 0.42", "-45.4752, 155.937, -4.9659, 0.28", "-45.6106, 156.182, -4.91614, 0.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-22.956, 76.9536, -6.57981, 0.1", "-23.3996, 76.7027, -6.80096, 0.1", "-23.841, 76.453, -7.02102, 0.14", "-24.0627, 76.3275, -7.13159, 0.28" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "17.7886, -156.535, -0.862297, 1.12", "17.4372, -157.237, -0.44284, 1.12", "17.3185, -157.487, -0.323215, 0.98", "17.246, -157.68, -0.268844, 0.84", "17.0784, -158.477, -0.238101, 1.12", "17.017, -158.942, -0.241718, 0.98", "16.9669, -159.415, -0.209029, 0.84", "16.9669, -159.713, -0.202853, 0.84", "17.0421, -160.576, -0.148668, 0.7", "17.1806, -161.454, -0.0780711, 0.84", "17.3501, -162.219, -0.0200462, 0.84", "17.5504, -163.051, 0.115885, 0.84", "17.6468, -163.455, 0.21202, 0.7", "17.7431, -163.898, 0.340733, 0.56", "17.7728, -164.099, 0.405641, 0.7", "17.8057, -164.382, 0.479138, 0.56", "17.8496, -164.802, 0.514253, 0.7", "17.8743, -165.225, 0.5076, 0.84", "17.8858, -165.649, 0.462826, 0.84", "17.8798, -166.119, 0.375917, 0.98", "17.8738, -166.526, 0.279671, 0.84", "17.8731, -167.111, 0.121102, 0.84", "17.8664, -167.398, 0.0560164, 0.98", "17.8469, -168.173, -0.0722165, 0.84", "17.8497, -168.473, -0.0994124, 1.12", "17.8801, -168.896, -0.0963573, 1.12", "17.9326, -169.309, -0.0540652, 0.98", "18.0923, -170.147, 0.104347, 0.84", "18.1691, -170.552, 0.20107, 0.7", "18.2191, -170.838, 0.281207, 0.56", "18.309, -171.249, 0.352888, 0.98", "18.3897, -171.662, 0.404539, 0.98", "18.4516, -172.077, 0.463161, 0.98", "18.486, -172.367, 0.500866, 0.84", "18.5144, -172.785, 0.579112, 0.7", "18.5409, -173.63, 0.77201, 0.84", "18.5819, -174.428, 0.925191, 0.84", "18.6544, -175.283, 1.05491, 0.98", "18.7211, -175.696, 1.06399, 0.98", "18.7705, -175.9, 1.04495, 0.98", "18.889, -176.302, 0.967446, 0.84", "19.1762, -177.095, 0.765052, 0.98", "19.337, -177.467, 0.63548, 0.98", "19.6778, -178.211, 0.348682, 0.84", "19.8419, -178.576, 0.225253, 0.84", "20.0109, -178.952, 0.126888, 0.84", "20.1909, -179.385, 0.0802913, 0.84", "20.3431, -179.782, 0.115871, 0.84", "20.4938, -180.169, 0.200558, 0.98", "20.6451, -180.545, 0.331377, 0.84", "20.8324, -180.957, 0.463008, 0.98", "21.1581, -181.646, 0.654895, 0.56", "21.368, -182.064, 0.710978, 0.7", "21.594, -182.483, 0.700865, 0.84", "21.8094, -182.895, 0.624869, 0.7", "22.1304, -183.595, 0.470548, 0.84", "22.2316, -183.874, 0.400344, 0.84", "22.4582, -184.695, 0.231307, 0.7", "22.508, -185.108, 0.204385, 0.84", "22.5002, -185.583, 0.241023, 0.84", "22.4458, -186.442, 0.340218, 0.7", "22.4004, -186.903, 0.416143, 0.56", "22.3251, -187.674, 0.542827, 0.42", "22.2722, -188.14, 0.623791, 0.42", "22.2211, -188.603, 0.684173, 0.56", "22.1581, -189.467, 0.712825, 0.56", "22.1542, -189.764, 0.662258, 0.84", "22.1743, -190.169, 0.539843, 0.84", "22.197, -190.359, 0.446354, 0.98" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.7886, -156.535, -0.862297, 0.14", "18.0148, -156.764, -0.786128, 0.14", "18.3863, -157.128, -0.660578, 0.28", "18.5975, -157.355, -0.545619, 0.42", "18.9173, -157.726, -0.329253, 0.28", "19.2177, -158.108, -0.104856, 0.14", "19.4014, -158.355, 0.0360122, 0.14", "19.5711, -158.603, 0.175268, 0.28", "20.0132, -159.269, 0.549849, 0.28", "20.277, -159.673, 0.767028, 0.14", "20.5293, -160.032, 0.957757, 0.1", "20.8258, -160.424, 1.15328, 0.1", "21.1421, -160.81, 1.32927, 0.14", "21.3603, -161.05, 1.42733, 0.28", "21.7317, -161.405, 1.55317, 0.14", "22.1239, -161.746, 1.68738, 0.1", "22.5272, -162.059, 1.82677, 0.1", "22.7992, -162.249, 1.89343, 0.1", "23.0812, -162.43, 1.94024, 0.1", "23.3654, -162.605, 1.97215, 0.1", "23.6566, -162.776, 1.99342, 0.1", "24.2332, -163.114, 2.0261, 0.14", "25.0271, -163.566, 2.07179, 0.28", "25.6097, -163.901, 2.1173, 0.14", "25.9017, -164.07, 2.14508, 0.1", "26.1861, -164.236, 2.17806, 0.1", "26.7631, -164.587, 2.26498, 0.14", "27.0318, -164.771, 2.32377, 0.28", "27.5259, -165.189, 2.49328, 0.14", "27.5259, -165.189, 2.49328, 0.28", "27.5259, -165.189, 2.49328, 0.42", "27.6492, -165.39, 2.53186, 0.56", "27.8469, -165.822, 2.58961, 0.42", "28.0304, -166.259, 2.64185, 0.28", "28.1179, -166.48, 2.66625, 0.28", "28.1179, -166.48, 2.66625, 0.28", "28.2229, -166.69, 2.69762, 0.28", "28.4832, -167.151, 2.77778, 0.14", "28.7549, -167.597, 2.86272, 0.1", "29.0055, -167.997, 2.94153, 0.1", "29.2779, -168.443, 3.02675, 0.1", "29.5393, -168.896, 3.10759, 0.14", "29.7883, -169.363, 3.18322, 0.28", "29.8879, -169.576, 3.21247, 0.42", "29.984, -169.795, 3.21948, 0.28", "30.1708, -170.235, 3.19751, 0.14", "30.3398, -170.668, 3.14182, 0.1", "30.4997, -171.109, 3.05889, 0.1", "30.6535, -171.552, 2.96176, 0.1", "30.9669, -172.453, 2.76378, 0.14", "30.9669, -172.453, 2.76378, 0.28", "31.0559, -172.672, 2.72869, 0.56", "31.2512, -173.104, 2.68822, 0.42", "31.4558, -173.528, 2.67724, 0.28", "31.6646, -173.955, 2.69616, 0.14", "31.8924, -174.435, 2.76338, 0.1", "32.1267, -174.911, 2.83314, 0.14", "32.3708, -175.375, 2.90707, 0.1", "32.3708, -175.375, 2.90707, 0.14", "32.6919, -175.796, 2.91121, 0.1", "33.0291, -176.2, 2.81227, 0.14", "33.0291, -176.2, 2.81227, 0.28", "33.1739, -176.38, 2.76096, 0.56", "33.4904, -176.802, 2.67025, 0.42", "34.1088, -177.563, 2.45153, 0.28", "34.4028, -177.91, 2.34222, 0.14", "34.741, -178.305, 2.21538, 0.1", "35.0759, -178.702, 2.08524, 0.1", "35.3618, -179.058, 1.9718, 0.1", "35.859, -179.76, 1.77733, 0.1", "35.859, -179.76, 1.77733, 0.1", "35.9795, -179.963, 1.75285, 0.1", "36.2004, -180.377, 1.72375, 0.1", "36.4154, -180.802, 1.72507, 0.1", "36.6312, -181.228, 1.7603, 0.1", "36.87, -181.695, 1.83212, 0.1", "37.1269, -182.151, 1.91112, 0.14", "37.3789, -182.55, 1.99049, 0.1", "37.6936, -182.97, 2.05533, 0.1", "38.0428, -183.365, 2.10148, 0.1", "38.2924, -183.599, 2.12131, 0.1", "38.7134, -183.919, 2.14096, 0.1", "39.0047, -184.091, 2.12393, 0.14", "39.8286, -184.476, 2.02722, 0.28", "40.0486, -184.563, 1.99295, 0.7", "40.5423, -184.735, 1.91587, 0.56", "41.0489, -184.895, 1.85362, 0.42", "41.9216, -185.157, 1.78841, 0.28", "42.2449, -185.257, 1.79031, 0.7", "42.565, -185.36, 1.82771, 0.7", "43.058, -185.529, 1.90397, 0.56", "43.5634, -185.698, 1.96694, 0.42", "43.8754, -185.801, 2.00598, 0.28", "44.3781, -185.965, 2.09733, 0.14", "44.8754, -186.12, 2.17466, 0.1", "45.1973, -186.217, 2.21278, 0.1", "46.1571, -186.51, 2.26886, 0.1", "46.4742, -186.604, 2.26321, 0.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "28.5666, -133.589, -12.9059, 0.1", "29.0419, -134.456, -12.8225, 0.1", "29.2832, -134.934, -12.7961, 0.1", "29.5356, -135.473, -12.7794, 0.1", "29.7512, -135.966, -12.7717, 0.1", "29.9916, -136.51, -12.7722, 0.1", "30.2047, -136.994, -12.7776, 0.1", "30.4069, -137.489, -12.8186, 0.1", "30.6036, -137.988, -12.8576, 0.1", "30.7861, -138.49, -12.8915, 0.1", "30.8924, -138.852, -12.9399, 0.1", "30.9497, -139.108, -12.987, 0.7", "31.0451, -139.625, -13.103, 0.7", "31.1249, -140.139, -13.23, 0.56", "31.1939, -140.657, -13.3607, 0.7", "31.3205, -141.742, -13.6314, 0.56", "31.376, -142.263, -13.7527, 0.42", "31.438, -142.783, -13.8647, 0.28", "31.51, -143.307, -13.9639, 0.14", "31.6049, -143.818, -14.0441, 0.28", "31.6677, -144.079, -14.0723, 0.28", "31.8228, -144.591, -14.0964, 0.28", "31.9932, -145.1, -14.1257, 0.14", "32.1728, -145.604, -14.1586, 0.1", "32.3788, -146.161, -14.1975, 0.1", "32.564, -146.66, -14.2731, 0.1", "32.7436, -147.154, -14.3776, 0.1", "32.9408, -147.704, -14.5226, 0.1", "33.1098, -148.189, -14.6722, 0.14", "33.2655, -148.666, -14.8328, 0.28", "33.5675, -149.694, -15.1882, 0.42", "33.7147, -150.18, -15.3586, 0.84", "33.7147, -150.18, -15.3586, 0.7", "33.8031, -150.429, -15.409, 0.28", "34.039, -150.91, -15.3935, 0.14", "34.3188, -151.341, -15.2334, 0.1", "34.648, -151.742, -14.942, 0.1", "34.9501, -152.078, -14.6497, 0.1", "35.5769, -152.726, -13.9753, 0.1", "36.2085, -153.337, -13.2718, 0.1", "36.7771, -153.87, -12.6575, 0.1", "37.4292, -154.496, -11.9859, 0.1", "37.7438, -154.811, -11.6837, 0.1", "38.3361, -155.482, -11.2548, 0.1", "38.5849, -155.985, -11.454, 0.1", "38.85, -156.807, -12.1756, 0.1", "39.0583, -157.553, -12.952, 0.1", "39.2324, -158.218, -13.713, 0.1", "39.3322, -158.562, -14.1151, 0.1", "39.5344, -159.227, -14.8686, 0.1", "39.5953, -159.407, -15.0591, 0.1", "39.7598, -159.82, -15.4558, 0.1", "39.9495, -160.251, -15.83, 0.1", "40.1276, -160.677, -16.2058, 0.1", "40.2759, -161.059, -16.5546, 0.1", "40.5233, -161.778, -17.2421, 0.1", "40.7556, -162.552, -18.036, 0.1", "40.8321, -162.9, -18.4238, 0.1", "40.9444, -163.611, -19.2896, 0.1", "40.985, -163.944, -19.7098, 0.14", "41.0793, -164.651, -20.5809, 0.28", "41.1066, -164.832, -20.7789, 0.14", "41.2494, -165.598, -21.5486, 0.1", "41.4221, -166.388, -22.3369, 0.1", "41.4713, -166.582, -22.512, 0.1", "41.6101, -167.042, -22.8741, 0.1", "41.7872, -167.488, -23.1127, 0.1", "42.0379, -168.004, -23.2708, 0.1", "42.6125, -168.975, -23.3116, 0.14", "42.8953, -169.427, -23.2587, 0.28", "43.4, -170.279, -23.1852, 0.84", "43.8986, -171.288, -23.1895, 0.7", "44.1034, -171.784, -23.2332, 0.56", "44.2437, -172.344, -23.3768, 0.42", "44.3038, -172.842, -23.5732, 0.28", "44.2732, -173.773, -24.149, 0.14", "44.1696, -174.679, -24.8059, 0.1", "44.1309, -174.882, -24.9749, 0.1", "43.9467, -175.728, -25.6996, 0.1", "43.8505, -176.135, -26.0342, 0.1", "43.663, -177.021, -26.6999, 0.1", "43.5951, -177.473, -26.9797, 0.1", "43.509, -178.442, -27.4863, 0.1", "43.4849, -178.928, -27.7091, 0.1", "43.4955, -179.487, -27.9036, 0.1", "43.5287, -180.003, -28.0429, 0.1", "43.5842, -180.523, -28.1613, 0.1", "43.614, -180.783, -28.2225, 0.1", "43.657, -181.046, -28.258, 0.56", "43.7573, -181.569, -28.3186, 0.42", "43.8869, -182.079, -28.3704, 0.28", "44.1609, -183.03, -28.4405, 0.14", "44.3221, -183.543, -28.4635, 0.1", "44.6557, -184.478, -28.4888, 0.1", "44.8492, -184.977, -28.4927, 0.1", "45.0865, -185.523, -28.4894, 0.1", "45.3129, -186.011, -28.4791, 0.1", "45.5435, -186.494, -28.4611, 0.1", "45.7923, -187.042, -28.4735, 0.1", "45.9974, -187.535, -28.5156, 0.1", "46.2161, -188.086, -28.5591, 0.14", "46.4098, -188.587, -28.5969, 0.28", "46.5994, -189.077, -28.634, 0.14", "46.788, -189.579, -28.67, 0.1", "46.9643, -190.084, -28.7016, 0.1", "47.1382, -190.593, -28.7323, 0.1", "47.254, -190.946, -28.7519, 0.1", "47.4259, -191.455, -28.7818, 0.84", "47.602, -191.96, -28.8134, 0.7", "47.7823, -192.463, -28.8465, 0.56", "47.7823, -192.463, -28.8465, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "28.5666, -133.589, -12.9059, 0.28", "29.8144, -133.856, -11.4412, 0.28", "30.4768, -134.001, -10.6762, 0.14", "31.1551, -134.158, -9.92336, 0.1", "31.8344, -134.315, -9.16931, 0.1", "32.6365, -134.5, -8.27903, 0.1", "33.3127, -134.657, -7.52849, 0.14", "34.0182, -134.838, -6.80675, 0.28", "34.2863, -134.909, -6.54111, 0.42" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.29722, -202.353, -51.8053, 0.14", "-2.07605, -202.43, -51.9304, 0.14", "-1.71126, -202.549, -52.1246, 0.28", "-1.07511, -202.751, -52.4233, 0.14", "-0.696132, -202.873, -52.5832, 0.1", "-0.454725, -202.951, -52.6791, 0.1", "0.259553, -203.195, -52.9509, 0.1", "0.640612, -203.338, -53.0862, 0.1", "1.01327, -203.507, -53.1952, 0.1", "1.24944, -203.635, -53.2343, 0.1", "1.24944, -203.635, -53.2343, 0.1", "1.39763, -203.756, -53.2382, 0.1", "1.70065, -204.052, -53.2107, 0.1", "1.98859, -204.357, -53.145, 0.1", "2.16735, -204.553, -53.0869, 0.1", "2.45153, -204.856, -52.9799, 0.1", "2.73779, -205.155, -52.8656, 0.1", "2.91612, -205.337, -52.7918, 0.1", "3.50241, -205.925, -52.5429, 0.1", "3.79272, -206.217, -52.422, 0.1", "3.97548, -206.4, -52.3502, 0.1", "4.26883, -206.692, -52.2357, 0.1", "4.56021, -206.982, -52.1298, 0.1", "4.74659, -207.171, -52.0764, 0.1", "5.04111, -207.476, -52.0501, 0.1", "5.23059, -207.669, -52.0332, 0.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.29722, -202.353, -51.8053, 0.1", "-2.20836, -203.167, -51.643, 0.1", "-2.15347, -203.587, -51.578, 0.1", "-2.09182, -204.013, -51.5247, 0.1", "-2.02529, -204.442, -51.4801, 0.1", "-1.96588, -204.87, -51.4439, 0.1", "-1.91734, -205.302, -51.4151, 0.1", "-1.86724, -205.733, -51.4154, 0.1", "-1.82676, -206.158, -51.4172, 0.1", "-1.79126, -206.592, -51.4201, 0.1", "-1.75471, -207.08, -51.4239, 0.1", "-1.71872, -207.558, -51.4277, 0.1", "-1.68342, -207.991, -51.4306, 0.1", "-1.65003, -208.425, -51.4339, 0.1", "-1.6147, -208.858, -51.4368, 0.1", "-1.57254, -209.292, -51.4385, 0.1", "-1.52075, -209.715, -51.4383, 0.14", "-1.4761, -210.145, -51.409, 0.28", "-1.4404, -210.628, -51.3491, 0.14", "-1.43302, -211.049, -51.246, 0.1", "-1.44169, -211.462, -51.1068, 0.1", "-1.44974, -211.657, -51.0287, 0.1", "-1.4874, -212.496, -50.6638, 0.1", "-1.50075, -212.894, -50.4858, 0.1", "-1.50758, -213.729, -50.1206, 0.1", "-1.50585, -214.141, -49.983, 0.1", "-1.5004, -214.568, -49.8956, 0.1", "-1.48552, -215.0, -49.8663, 0.1", "-1.45579, -215.433, -49.9049, 0.14", "-1.42304, -215.852, -49.9801, 0.1", "-1.33338, -216.73, -50.2206, 0.14", "-1.28807, -217.199, -50.3514, 0.1", "-1.26747, -217.409, -50.4066, 0.14", "-1.24264, -217.608, -50.469, 0.28", "-1.21104, -217.811, -50.5348, 0.28", "-1.13312, -218.223, -50.657, 0.14", "-1.04085, -218.635, -50.7545, 0.1", "-0.939508, -219.047, -50.8539, 0.1", "-0.734611, -219.888, -51.0488, 0.1", "-0.628748, -220.294, -51.1374, 0.1", "-0.51632, -220.705, -51.2183, 0.1", "-0.399482, -221.117, -51.2904, 0.1", "-0.289555, -221.537, -51.3222, 0.1", "-0.202705, -221.962, -51.2971, 0.1", "-0.16843, -222.254, -51.2056, 0.1", "-0.156995, -222.652, -51.0323, 1.12", "-0.156995, -222.652, -51.0323, 0.98", "-0.20854, -223.383, -50.6415, 0.28", "-0.245263, -223.814, -50.4171, 0.14", "-0.310257, -224.613, -50.0367, 0.1", "-0.341223, -225.055, -49.8515, 0.1", "-0.344725, -225.464, -49.707, 0.1", "-0.309465, -225.884, -49.5954, 0.1", "-0.223953, -226.303, -49.5272, 0.1", "-0.115594, -226.716, -49.4495, 0.1", "-0.0572295, -226.923, -49.4134, 0.1", "0.0622096, -227.384, -49.307, 0.1", "0.149595, -227.842, -49.1846, 0.1", "0.184968, -228.13, -49.1028, 0.1", "0.236159, -228.931, -48.8795, 0.1", "0.244769, -229.396, -48.7617, 0.1", "0.239808, -229.874, -48.6602, 0.1", "0.22977, -230.171, -48.6116, 0.1", "0.220469, -230.605, -48.564, 0.1", "0.23011, -231.038, -48.5403, 0.1", "0.25621, -231.47, -48.5135, 0.1", "0.2914, -231.901, -48.4581, 0.1", "0.316705, -232.321, -48.3509, 0.1", "0.331578, -232.726, -48.2112, 0.1", "0.334046, -233.127, -48.0474, 0.1", "0.3001, -233.867, -47.6665, 0.1", "0.272023, -234.243, -47.4508, 0.1", "0.190511, -235.024, -46.9897, 0.1", "0.141743, -235.399, -46.7765, 0.1", "0.0884361, -235.781, -46.5737, 0.1", "-0.0280781, -236.606, -46.2035, 0.1", "-0.075397, -237.018, -46.0691, 0.1", "-0.128519, -237.48, -45.9203, 0.1", "-0.169829, -237.941, -45.792, 0.1", "-0.185808, -238.15, -45.7329, 0.1", "-0.206573, -238.622, -45.609, 0.1", "-0.202114, -239.046, -45.5169, 0.1", "-0.163829, -239.911, -45.3189, 0.1", "-0.127417, -240.325, -45.2217, 0.1", "-0.0755405, -240.747, -45.1273, 0.1", "-0.0223012, -241.171, -45.0471, 0.1", "0.0368791, -241.598, -44.9851, 0.1", "0.0864983, -242.028, -44.9521, 0.1", "0.108512, -242.245, -44.9528, 0.1", "0.135128, -242.67, -44.9571, 0.1", "0.152553, -243.157, -44.9643, 0.1", "0.153597, -243.591, -44.9732, 0.1", "0.146237, -244.071, -44.9846, 0.1", "0.138672, -244.504, -44.9951, 0.1", "0.126625, -244.991, -45.0075, 0.1", "0.117893, -245.425, -45.0181, 0.1", "0.121748, -245.903, -45.059, 0.14", "0.131717, -246.332, -45.1188, 0.1", "0.154161, -246.76, -45.1999, 0.1", "0.189771, -247.227, -45.3105, 0.1", "0.23899, -247.643, -45.423, 0.1", "0.351039, -248.409, -45.6428, 0.14", "0.351039, -248.409, -45.6428, 0.28", "0.38894, -248.611, -45.7141, 0.28", "0.466042, -249.011, -45.8646, 0.14", "0.547137, -249.414, -46.0087, 0.1", "0.625881, -249.803, -46.1645, 0.1", "0.688186, -250.204, -46.3248, 0.1", "0.782129, -251.039, -46.6882, 0.1", "0.80589, -251.433, -46.8731, 0.1", "0.804861, -251.823, -47.0631, 0.1", "0.764814, -252.62, -47.4419, 0.1", "0.73391, -253.065, -47.6384, 0.1", "0.700411, -253.515, -47.803, 0.1", "0.688412, -253.814, -47.8741, 0.1", "0.691251, -254.288, -47.9576, 0.1", "0.721062, -254.722, -47.9974, 0.1", "0.763051, -255.02, -47.9963, 0.1", "0.850432, -255.447, -47.9899, 0.1", "0.959671, -255.917, -47.9806, 0.1", "1.05363, -256.342, -47.973, 0.1", "1.13768, -256.768, -47.9672, 0.1", "1.19801, -257.196, -47.9358, 0.1", "1.23918, -257.671, -47.8771, 0.1", "1.26462, -258.09, -47.7691, 0.1", "1.28421, -258.547, -47.6012, 0.1", "1.29527, -258.746, -47.5119, 0.1", "1.35722, -259.435, -47.103, 0.1", "1.40273, -259.788, -46.8642, 0.1", "1.52939, -260.527, -46.3399, 0.1", "1.59783, -260.875, -46.0991, 0.1", "1.67838, -261.235, -45.8707, 0.1", "1.85996, -262.024, -45.4518, 0.1", "1.95402, -262.42, -45.2959, 0.1", "2.05255, -262.831, -45.1946, 0.1", "2.15403, -263.253, -45.1648, 0.1", "2.24836, -263.677, -45.1775, 0.1", "2.33565, -264.098, -45.2311, 0.1", "2.41441, -264.51, -45.3221, 0.1", "2.57021, -265.358, -45.5297, 0.14", "2.63626, -265.775, -45.6393, 0.28", "2.69855, -266.244, -45.763, 0.14", "2.74378, -266.658, -45.8627, 0.1", "2.76285, -266.869, -45.9027, 0.14", "2.76285, -266.869, -45.9027, 0.28", "2.77691, -267.173, -45.8511, 0.1", "2.81523, -267.596, -45.7518, 0.1", "2.87261, -268.011, -45.6389, 0.1", "2.9388, -268.419, -45.5251, 0.1", "3.0942, -269.262, -45.2984, 0.1", "3.17869, -269.675, -45.1949, 0.1", "3.2843, -270.139, -45.0875, 0.1", "3.38029, -270.554, -45.0047, 0.1", "3.47868, -270.973, -44.9403, 0.1", "3.56968, -271.396, -44.9025, 0.1", "3.65506, -271.823, -44.8965, 0.1", "3.7195, -272.245, -44.894, 0.1", "3.75731, -272.677, -44.8965, 0.1", "3.77152, -273.113, -44.9032, 0.1", "3.76729, -273.601, -44.9142, 0.14", "3.75269, -274.029, -44.9258, 0.1", "3.73879, -274.337, -44.9347, 0.1", "3.70936, -274.825, -44.9502, 0.1", "3.6821, -275.304, -44.9651, 0.1", "3.66636, -275.737, -44.977, 0.1", "3.65926, -276.173, -44.9874, 0.1", "3.65986, -276.607, -44.9965, 0.1", "3.67712, -277.088, -45.0035, 0.1", "3.69649, -277.523, -45.0093, 0.14", "3.7173, -277.956, -45.0148, 0.1", "3.73801, -278.436, -45.0212, 0.14", "3.75097, -278.869, -45.0281, 0.1", "3.75602, -279.305, -45.0364, 0.1", "3.75947, -279.794, -45.0461, 0.1", "3.75795, -280.222, -45.0554, 0.1", "3.75141, -280.656, -45.0366, 0.1", "3.7465, -281.14, -44.9847, 0.1", "3.74185, -281.615, -44.9084, 0.1", "3.74311, -281.829, -44.8649, 0.1", "3.75963, -282.251, -44.7655, 0.14", "3.80785, -283.03, -44.5732, 0.42", "3.84844, -283.45, -44.471, 0.28", "3.90758, -283.871, -44.376, 0.14", "3.96871, -284.286, -44.2989, 0.1", "4.02886, -284.714, -44.2421, 0.1", "4.08843, -285.143, -44.2115, 0.1", "4.15021, -285.574, -44.2097, 0.1", "4.20936, -286.004, -44.2084, 0.1", "4.27388, -286.48, -44.207, 0.1", "4.31948, -286.91, -44.1789, 0.1", "4.35519, -287.339, -44.1268, 0.1", "4.37689, -287.769, -44.0564, 1.26", "4.38979, -288.195, -43.973, 1.12", "4.39148, -288.621, -43.8827, 0.98", "4.38758, -289.433, -43.7065, 0.84", "4.37125, -289.858, -43.6206, 0.7", "4.34534, -290.337, -43.5358, 0.56", "4.32285, -290.759, -43.4759, 0.42", "4.30569, -291.245, -43.4283, 0.28", "4.31271, -291.68, -43.4069, 0.14", "4.35081, -292.16, -43.4103, 0.1", "4.41534, -292.59, -43.4385, 0.1", "4.50419, -293.015, -43.4581, 0.1", "4.6109, -293.437, -43.4699, 0.1", "4.74246, -293.9, -43.4392, 0.1", "4.86347, -294.314, -43.3771, 0.1", "5.11807, -295.169, -43.1891, 0.1", "5.325, -295.92, -42.9878, 0.56", "5.42565, -296.324, -42.8671, 0.42", "5.57176, -297.138, -42.5543, 0.28", "5.61083, -297.524, -42.355, 0.14", "5.63275, -297.896, -42.1336, 0.1", "5.64328, -298.266, -41.9025, 0.1", "5.65631, -298.644, -41.69, 0.1", "5.68426, -299.444, -41.2564, 0.1", "5.72133, -300.243, -40.8726, 0.1", "5.73525, -300.639, -40.6909, 0.14", "5.74989, -301.041, -40.5264, 0.28", "5.75737, -301.243, -40.4449, 0.98", "5.77943, -301.651, -40.3005, 1.12", "5.80021, -302.057, -40.1644, 0.98", "5.81399, -302.518, -40.0028, 0.84", "5.81297, -302.91, -39.8129, 0.7", "5.79994, -303.683, -39.3773, 0.56", "5.78272, -304.038, -39.1412, 0.42", "5.73525, -304.777, -38.6035, 0.28", "5.71335, -305.123, -38.3438, 0.14", "5.68059, -305.839, -37.8182, 0.1", "5.6676, -306.19, -37.5772, 0.1", "5.64515, -306.964, -37.0888, 0.14", "5.63683, -307.332, -36.8596, 0.1", "5.64184, -307.715, -36.6523, 0.1", "5.64516, -308.094, -36.457, 0.14", "5.65207, -308.3, -36.3843, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-24.0627, 76.3275, -7.13159, 0.28", "-24.0137, 75.973, -6.99663, 0.28", "-23.8738, 75.4442, -6.78048, 0.14", "-23.6965, 74.9787, -6.59416, 0.1", "-23.5874, 74.7506, -6.50768, 0.1", "-23.1519, 73.9178, -6.2103, 0.1", "-22.8908, 73.4184, -6.03199, 0.1", "-22.5989, 72.9413, -5.84104, 0.1", "-22.2731, 72.4834, -5.6382, 0.1", "-21.9282, 72.044, -5.44475, 0.1", "-21.7603, 71.8483, -5.37468, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-24.0627, 76.3275, -7.13159, 0.1", "-24.4064, 76.5972, -7.49363, 0.1", "-24.5706, 76.7365, -7.67419, 0.1", "-24.9147, 77.0236, -8.02208, 0.1", "-25.3849, 77.4238, -8.47281, 0.1", "-25.6807, 77.6704, -8.70279, 0.1", "-26.2213, 78.1104, -9.01683, 0.1", "-26.5534, 78.3866, -9.15581, 0.1", "-26.9897, 78.7331, -9.22306, 0.1", "-27.1491, 78.853, -9.20237, 0.1", "-27.8159, 79.3168, -8.99115, 0.1", "-28.4096, 79.7006, -8.77222, 0.1", "-28.4096, 79.7006, -8.77222, 0.1", "-28.8731, 79.9793, -8.62284, 0.1", "-29.2466, 80.2136, -8.57342, 0.1", "-29.4852, 80.3714, -8.59906, 0.1", "-29.9316, 80.6743, -8.75337, 0.1", "-30.1505, 80.8256, -8.8519, 0.1", "-30.4882, 81.0625, -9.01512, 0.1", "-31.0549, 81.4733, -9.33147, 0.1", "-31.3732, 81.7053, -9.53565, 0.1", "-31.6789, 81.942, -9.7631, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "22.197, -190.359, 0.446354, 0.84", "22.2997, -190.599, 0.584421, 0.84", "22.5127, -191.072, 0.839495, 0.98", "22.7325, -191.563, 1.07712, 0.84", "23.2603, -192.621, 1.45232, 0.7", "23.5449, -193.19, 1.59943, 0.56", "23.8347, -193.783, 1.70661, 0.42", "23.9579, -194.036, 1.72945, 0.56", "24.2101, -194.571, 1.72282, 0.7", "24.6703, -195.591, 1.59623, 0.56", "24.8213, -195.975, 1.53132, 0.84", "25.0078, -196.534, 1.48858, 0.84", "25.171, -197.099, 1.51295, 0.84", "25.3376, -197.655, 1.6079, 0.84", "25.3376, -197.655, 1.6079, 0.98", "25.6734, -198.624, 1.97709, 0.1", "25.8939, -199.205, 2.20115, 0.14", "26.0902, -199.716, 2.38654, 0.1", "26.3154, -200.31, 2.57075, 0.14", "26.5363, -200.916, 2.71348, 0.28", "26.6306, -201.19, 2.75532, 0.42", "26.7656, -201.575, 2.78107, 0.84", "26.9465, -202.136, 2.81426, 0.84", "27.1201, -202.697, 2.84553, 0.84", "27.2818, -203.262, 2.8735, 0.7", "27.4559, -203.826, 2.90483, 0.56", "27.5927, -204.22, 2.93079, 0.56", "27.6964, -204.493, 2.95117, 0.84", "27.9273, -205.026, 2.94885, 0.84", "28.1767, -205.557, 2.91226, 0.7", "28.4724, -206.136, 2.84577, 0.84", "28.7446, -206.656, 2.77025, 0.7", "29.0207, -207.169, 2.69066, 0.84", "29.6178, -208.243, 2.52626, 0.7", "29.7606, -208.498, 2.51, 0.84", "30.0752, -209.079, 2.52598, 0.7", "30.3362, -209.602, 2.58596, 0.84", "30.6088, -210.193, 2.7032, 0.7", "30.8276, -210.719, 2.84784, 0.56", "31.2333, -211.816, 3.24688, 0.7", "31.4188, -212.34, 3.44828, 0.84", "31.585, -212.862, 3.6621, 0.98", "31.7421, -213.384, 3.89071, 0.84", "31.8083, -213.645, 4.00477, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.197, -190.359, 0.446354, 1.26", "22.0122, -190.912, 0.322728, 1.26", "21.851, -191.484, 0.210158, 1.12", "21.7719, -191.844, 0.150766, 0.98", "21.6763, -192.433, 0.0708065, 0.84", "21.6046, -193.02, 0.00313663, 0.7", "21.558, -193.398, -0.0101004, 0.56", "21.5211, -193.932, 0.0265079, 0.1", "21.5157, -194.464, 0.114087, 0.1", "21.542, -194.976, 0.237092, 0.1", "21.5747, -195.232, 0.316474, 0.1", "21.7487, -196.154, 0.64499, 0.1", "21.8313, -196.64, 0.857564, 0.1", "21.9057, -197.172, 1.11503, 0.1", "21.9541, -197.657, 1.34624, 0.1", "21.9971, -198.202, 1.58416, 0.1", "22.0111, -198.456, 1.67425, 0.1", "22.0588, -199.453, 1.93001, 0.28", "22.0557, -199.968, 2.03992, 0.14", "22.0316, -200.563, 2.13694, 0.28", "22.0076, -201.095, 2.20201, 0.42", "21.9853, -201.686, 2.24771, 0.56", "21.9986, -202.222, 2.27146, 0.42", "22.073, -202.82, 2.27785, 0.28", "22.1781, -203.345, 2.30373, 0.14", "22.2561, -203.602, 2.33003, 0.28", "22.3452, -203.844, 2.36271, 0.98", "22.5703, -204.397, 2.44838, 0.84", "22.7952, -204.943, 2.53442, 0.7", "23.0085, -205.501, 2.61382, 0.56", "23.1139, -205.857, 2.64883, 0.42", "23.1735, -206.231, 2.69499, 0.1", "23.1844, -206.819, 2.76971, 0.14", "23.1278, -207.349, 2.83524, 0.28", "23.0176, -207.936, 2.91352, 0.42", "22.8717, -208.507, 2.99293, 0.28", "22.6323, -209.506, 3.08097, 0.14", "22.5339, -210.092, 3.10874, 0.1", "22.5339, -210.092, 3.10874, 0.14", "22.4983, -210.35, 3.1667, 0.14", "22.4446, -210.682, 3.3281, 0.14", "22.2466, -211.531, 3.99664, 0.28", "22.1431, -211.929, 4.34148, 0.28", "21.9244, -212.76, 5.0231, 0.42", "21.7349, -213.55, 5.5967, 0.56", "21.5288, -214.445, 6.1912, 0.42", "21.3581, -215.275, 6.71083, 0.28", "21.2623, -215.795, 7.00048, 0.14", "21.2363, -216.894, 7.24834, 0.1", "21.4331, -217.837, 7.00032, 0.14", "21.5057, -218.074, 6.89532, 0.56", "21.6816, -218.508, 6.6335, 0.42", "21.8746, -218.928, 6.35594, 0.28", "22.0679, -219.352, 6.09014, 0.28", "22.4497, -220.29, 5.59827, 0.14", "22.6088, -220.755, 5.38112, 0.1", "22.9117, -221.713, 4.9408, 0.1", "22.9706, -221.959, 4.8479, 0.14", "23.0275, -222.324, 4.75488, 0.28", "23.0566, -222.848, 4.70007, 0.14", "23.0427, -223.45, 4.73026, 0.1", "23.0125, -223.982, 4.79192, 0.14", "22.9336, -225.088, 4.98658, 0.1", "22.912, -225.616, 5.07923, 0.1", "22.9123, -226.21, 5.18218, 0.1", "22.9288, -226.73, 5.26613, 0.1", "22.9625, -227.264, 5.33808, 0.1", "23.0138, -227.796, 5.38383, 0.1", "23.0842, -228.33, 5.39155, 0.1", "23.1489, -228.863, 5.39641, 0.1", "23.1761, -229.131, 5.39614, 0.14", "23.2038, -229.503, 5.39064, 0.1", "23.2253, -230.038, 5.37328, 0.14", "23.2397, -230.642, 5.34871, 0.1", "23.2519, -231.181, 5.3265, 0.1", "23.2933, -231.771, 5.26753, 0.1", "23.3545, -232.302, 5.19421, 0.1", "23.4236, -232.889, 5.1268, 0.1", "23.4844, -233.423, 5.07667, 0.1", "23.5405, -233.955, 5.03907, 0.1", "23.6387, -235.048, 4.98777, 0.14", "23.6571, -235.314, 4.98159, 0.28", "23.682, -236.344, 4.96968, 0.7", "23.682, -236.874, 4.97431, 0.56", "23.6561, -237.478, 4.98356, 0.42", "23.6219, -238.016, 4.99927, 0.28", "23.5827, -238.609, 5.02821, 0.14", "23.5673, -239.211, 5.03388, 0.1", "23.5851, -239.747, 5.01466, 0.1", "23.6176, -240.339, 4.99995, 0.1", "23.6669, -240.874, 4.99689, 0.1", "23.7326, -241.406, 5.00228, 0.1", "23.7818, -241.671, 5.0134, 0.56", "23.9037, -242.195, 5.04796, 0.42", "24.0282, -242.706, 5.08452, 0.28", "24.1523, -243.227, 5.12032, 0.14", "24.265, -243.753, 5.15007, 0.14", "24.3659, -244.34, 5.17053, 0.28", "24.403, -244.607, 5.1754, 0.42", "24.4449, -244.986, 5.17677, 0.1", "24.4967, -245.579, 5.17187, 0.1", "24.5361, -246.116, 5.16354, 0.1", "24.5777, -246.719, 5.15294, 0.1", "24.6297, -247.256, 5.1511, 0.1", "24.6685, -247.511, 5.15747, 0.14", "24.7247, -247.774, 5.17223, 0.56", "24.8384, -248.295, 5.25307, 0.42", "24.9452, -248.807, 5.36927, 0.28", "25.0613, -249.371, 5.52606, 0.14", "25.1576, -249.879, 5.67788, 0.1", "25.2285, -250.377, 5.86349, 0.1", "25.3338, -251.385, 6.28896, 0.14", "25.3688, -251.864, 6.5066, 0.1", "25.3938, -252.353, 6.73188, 0.1", "25.404, -252.846, 6.94368, 0.1", "25.4257, -253.773, 7.30249, 0.56", "25.4643, -254.291, 7.43662, 0.7", "25.5194, -254.819, 7.52976, 0.56", "25.5766, -255.346, 7.61166, 0.42", "25.6485, -255.931, 7.68314, 0.28", "25.7175, -256.461, 7.71987, 0.14", "25.8789, -257.547, 7.73225, 0.28", "26.0312, -258.528, 7.676, 0.7", "26.1176, -259.048, 7.61978, 0.56", "26.2124, -259.571, 7.54671, 0.42", "26.3485, -260.143, 7.41712, 0.28", "26.4583, -260.655, 7.29853, 0.14", "26.6492, -261.738, 7.05328, 0.1", "26.7335, -262.251, 6.91096, 0.1", "26.8005, -262.766, 6.77321, 0.1", "26.9096, -263.826, 6.50756, 0.1", "26.9713, -264.829, 6.29286, 0.1", "26.9708, -265.427, 6.20479, 0.1", "26.9254, -266.018, 6.17568, 0.1", "26.8984, -266.283, 6.16497, 0.1", "26.8984, -266.283, 6.16497, 0.1", "26.8911, -266.659, 6.10094, 0.1", "26.9374, -267.178, 5.9635, 0.1", "27.0193, -267.747, 5.8103, 0.1", "27.101, -268.261, 5.66994, 0.1", "27.2787, -269.343, 5.38895, 0.1", "27.3687, -269.858, 5.26849, 0.1", "27.4666, -270.369, 5.16535, 0.1", "27.5678, -270.889, 5.07962, 0.1", "27.6429, -271.26, 5.03972, 0.1", "27.7437, -271.789, 5.01781, 0.1", "27.8486, -272.315, 5.04361, 0.1", "27.9367, -272.831, 5.10366, 0.1", "28.0154, -273.357, 5.19593, 0.14", "28.0878, -273.875, 5.31225, 0.28", "28.1599, -274.393, 5.44638, 0.28", "28.2213, -274.966, 5.59885, 0.42", "28.3063, -275.959, 5.85901, 0.56", "28.3442, -276.469, 5.98505, 0.42", "28.3825, -276.995, 6.10116, 0.28", "28.4234, -277.52, 6.2007, 0.14", "28.4363, -278.112, 6.31431, 0.1", "28.4205, -278.632, 6.40033, 0.1", "28.3707, -279.159, 6.5021, 0.1", "28.2633, -279.668, 6.63378, 0.14", "28.1875, -279.916, 6.70692, 0.28", "27.7988, -280.927, 7.0209, 0.1", "27.5685, -281.459, 7.19201, 0.1", "27.1471, -282.356, 7.4728, 0.1", "26.9067, -282.878, 7.62243, 0.1", "26.7036, -283.437, 7.7311, 0.1", "26.638, -283.803, 7.75445, 0.1", "26.6559, -284.071, 7.73128, 0.14", "26.7118, -284.329, 7.69207, 0.56", "26.8775, -284.831, 7.58794, 0.42", "27.2628, -285.87, 7.37722, 0.28", "27.4425, -286.366, 7.28104, 0.14", "27.5986, -286.874, 7.18892, 0.1", "27.7389, -287.377, 7.06632, 0.14", "27.8005, -287.63, 6.99493, 0.28", "27.8692, -287.981, 6.89109, 0.7", "27.949, -288.56, 6.73622, 0.56", "28.0736, -289.105, 6.53767, 0.42", "28.3462, -289.988, 6.17144, 0.28", "28.4328, -290.221, 6.07374, 0.1", "28.6288, -290.69, 5.89239, 0.1", "28.8516, -291.154, 5.74125, 0.1", "29.321, -292.161, 5.52925, 0.1", "29.5165, -292.658, 5.4871, 0.1", "29.6563, -293.176, 5.50379, 0.1", "29.7474, -293.697, 5.53866, 0.1", "29.7982, -294.288, 5.60018, 0.14", "29.8052, -295.308, 5.74669, 0.1", "29.7655, -295.899, 5.85667, 0.1", "29.731, -296.484, 5.9601, 0.1", "29.7118, -297.079, 6.05299, 0.1", "29.7302, -297.611, 6.12425, 0.1", "29.7612, -297.868, 6.14999, 0.1", "29.838, -298.124, 6.15184, 0.1", "30.0787, -298.684, 6.14403, 0.1", "30.3211, -299.152, 6.1206, 0.1", "30.6181, -299.674, 6.07339, 0.1", "30.8787, -300.139, 6.01344, 0.1", "31.3508, -301.045, 5.88058, 0.1", "31.3508, -301.045, 5.88058, 0.14", "31.4909, -301.401, 5.82776, 0.28", "31.6618, -301.909, 5.77003, 0.28", "31.8032, -302.425, 5.73548, 0.14", "31.9269, -302.95, 5.73222, 0.1", "32.0311, -303.466, 5.75815, 0.1", "32.1187, -303.995, 5.81638, 0.1", "32.1839, -304.521, 5.89726, 0.1", "32.2228, -305.05, 5.99339, 0.1", "32.2329, -305.577, 6.09438, 0.1", "32.223, -306.104, 6.19666, 0.1", "32.1838, -307.112, 6.38858, 0.1", "32.1582, -307.705, 6.49512, 0.1", "32.1416, -308.234, 6.58133, 0.1", "32.1491, -308.826, 6.62113, 0.1", "32.1874, -309.361, 6.6079, 0.1", "32.2624, -309.892, 6.55134, 0.1", "32.3738, -310.409, 6.46146, 0.1", "32.5122, -310.902, 6.33708, 0.1", "32.8076, -311.956, 6.05253, 0.1", "32.9487, -312.456, 5.91792, 0.1", "33.0811, -312.962, 5.78859, 0.1", "33.2017, -313.473, 5.67844, 0.1", "33.3755, -314.403, 5.53349, 0.1", "33.5179, -315.418, 5.46243, 0.1", "33.5725, -315.952, 5.47946, 0.1", "33.613, -316.489, 5.49721, 0.1", "33.6364, -317.025, 5.51249, 0.1", "33.6341, -317.615, 5.57184, 0.1", "33.6212, -318.145, 5.65349, 0.1", "33.621, -318.679, 5.72655, 0.1", "33.6138, -319.266, 5.82338, 0.1", "33.6042, -319.859, 5.93519, 0.1", "33.5775, -320.934, 6.15263, 0.1", "33.5614, -321.462, 6.2595, 0.1", "33.5348, -321.981, 6.35016, 0.1", "33.4968, -322.514, 6.42174, 0.1", "33.4893, -322.781, 6.42631, 0.1", "33.474, -323.161, 6.40563, 0.1", "33.4478, -323.748, 6.32443, 0.1", "33.4084, -324.346, 6.24578, 0.1", "33.3697, -324.725, 6.23332, 0.1", "33.2542, -325.81, 6.29942, 0.1", "33.1335, -326.808, 6.52455, 0.1", "33.0787, -327.313, 6.70424, 0.1", "33.0341, -327.801, 6.92292, 0.1", "32.9674, -328.781, 7.41318, 0.1", "32.9365, -329.25, 7.65656, 0.1", "32.8578, -330.226, 8.15181, 0.1", "32.8324, -330.727, 8.349, 0.1", "32.7927, -331.237, 8.51078, 0.1", "32.758, -331.77, 8.58561, 0.14", "32.7275, -332.147, 8.58367, 0.1", "32.6638, -332.744, 8.53777, 0.1", "32.6037, -333.33, 8.45065, 0.1", "32.5624, -333.705, 8.3994, 0.1", "32.4583, -334.825, 8.27472, 0.1", "32.4048, -335.848, 8.19891, 0.1", "32.434, -336.382, 8.15219, 0.1", "32.4862, -336.915, 8.13255, 0.1", "32.5605, -337.449, 8.14171, 0.1", "32.6183, -337.978, 8.21186, 0.1", "32.6575, -338.493, 8.33111, 0.1", "32.7257, -339.498, 8.53942, 0.1", "32.7504, -340.493, 8.79446, 0.28", "32.7465, -341.01, 8.94679, 0.28", "32.72, -342.089, 9.28934, 0.14", "32.716, -342.604, 9.41436, 0.1", "32.7313, -343.2, 9.50995, 0.14", "32.7502, -343.468, 9.53153, 0.7", "32.8697, -343.985, 9.45305, 0.56", "33.0189, -344.481, 9.30314, 0.56", "33.3564, -345.473, 8.88714, 0.42", "33.5011, -345.946, 8.67364, 0.28", "33.6238, -346.42, 8.45343, 0.14", "33.8021, -347.407, 8.00421, 0.1", "33.8385, -347.755, 7.85333, 0.1", "33.8484, -348.311, 7.64307, 0.1", "33.8069, -348.889, 7.47614, 0.1", "33.7566, -349.25, 7.37844, 0.14", "33.6675, -349.822, 7.21014, 0.1", "33.5698, -350.387, 7.04994, 0.1", "33.4796, -350.951, 6.85853, 0.14", "33.3912, -351.497, 6.63843, 0.14", "33.327, -351.838, 6.48104, 0.28", "33.1774, -352.681, 5.9756, 0.42", "33.1774, -352.681, 5.9756, 0.56", "33.0899, -353.153, 5.62169, 0.56", "33.0284, -353.454, 5.39587, 0.42", "32.8999, -354.065, 4.96492, 0.28", "32.6887, -354.918, 4.42711, 0.42", "32.5422, -355.428, 4.16008, 0.28", "32.4222, -355.946, 3.87414, 0.14", "32.3705, -356.279, 3.69459, 0.1", "32.3469, -356.518, 3.57371, 0.14", "32.3207, -357.062, 3.32927, 0.7", "32.2866, -357.616, 3.11437, 0.56", "32.2067, -358.659, 2.68436, 0.42", "32.1569, -359.151, 2.47614, 0.28", "32.1022, -359.628, 2.23787, 0.14", "32.0679, -359.862, 2.10862, 0.28", "31.9815, -360.376, 1.81762, 0.28", "31.8607, -360.881, 1.52548, 0.14", "31.7598, -361.205, 1.35068, 0.1", "31.3909, -362.216, 0.773463, 0.1", "31.2703, -362.531, 0.596964, 0.1", "31.0898, -363.033, 0.336839, 0.1", "30.9831, -363.369, 0.179932, 0.1", "30.8239, -363.907, -0.0416231, 0.1", "30.656, -364.448, -0.226829, 0.1", "30.4711, -365.0, -0.350457, 0.14", "30.3921, -365.252, -0.404103, 0.28", "30.3921, -365.252, -0.404103, 0.84", "30.3921, -365.252, -0.404103, 0.84", "30.3118, -365.62, -0.464561, 0.28", "30.2046, -366.208, -0.550422, 0.14", "30.1006, -366.786, -0.634102, 0.1", "29.9831, -367.372, -0.725068, 0.14", "29.8597, -367.945, -0.818374, 0.1", "29.7996, -368.204, -0.862772, 0.1", "29.6494, -368.78, -0.969912, 0.14", "29.4811, -369.337, -1.0853, 0.28", "29.2349, -370.036, -1.24799, 0.14", "29.0974, -370.38, -1.33638, 0.1", "28.9518, -370.72, -1.42875, 0.1", "28.6508, -371.385, -1.61758, 0.1", "28.4962, -371.725, -1.71452, 0.1", "28.2049, -372.396, -1.89875, 0.1", "28.0697, -372.742, -1.98604, 0.1", "27.8712, -373.287, -2.11627, 0.1", "27.7539, -373.641, -2.19487, 0.1", "27.5837, -374.198, -2.3112, 0.1", "27.4208, -374.769, -2.4246, 0.1", "27.2716, -375.333, -2.53064, 0.1", "27.1781, -375.701, -2.59784, 0.1", "27.0356, -376.278, -2.70109, 0.1", "26.9531, -376.636, -2.76214, 0.1", "26.8253, -377.219, -2.85822, 0.1", "26.7072, -377.794, -2.9489, 0.14", "26.6151, -378.377, -3.07608, 0.1", "26.5675, -378.953, -3.21275, 0.1", "26.5549, -379.214, -3.27744, 0.1", "26.5347, -379.8, -3.4266, 0.1", "26.5172, -380.374, -3.57604, 0.1", "26.4782, -381.467, -3.86651, 0.1", "26.3803, -383.603, -4.43436, 0.1", "26.3362, -384.174, -4.59067, 0.1", "26.289, -384.542, -4.69516, 0.1", "26.1783, -385.102, -4.85892, 0.1", "26.0697, -385.452, -4.96422, 0.14", "25.8349, -385.975, -5.15357, 0.14", "25.5837, -386.389, -5.38569, 0.28", "25.2945, -386.83, -5.66284, 0.14", "24.9977, -387.262, -5.96175, 0.1", "24.6979, -387.665, -6.28252, 0.1", "24.1908, -388.336, -6.87786, 0.1", "24.0658, -388.503, -7.04871, 0.1" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-31.6789, 81.942, -9.7631, 0.14", "-32.2982, 82.3787, -9.00276, 0.14", "-32.5943, 82.5795, -8.56214, 0.1", "-32.7899, 82.7164, -8.28301, 0.14", "-33.1066, 82.9485, -7.87328, 0.28", "-33.6823, 83.3888, -7.21242, 0.14", "-34.822, 84.2955, -6.05854, 0.1", "-34.822, 84.2955, -6.05854, 0.14", "-35.177, 84.5838, -5.72237, 0.28", "-35.5602, 84.8988, -5.44673, 0.14", "-36.0041, 85.2449, -5.33548, 0.1", "-36.4207, 85.5198, -5.61961, 0.1", "-36.6287, 85.6275, -5.89675, 0.1", "-36.8742, 85.7172, -6.40054, 0.14", "-37.2648, 85.8025, -7.25859, 0.1", "-37.6837, 85.8343, -8.21486, 0.1", "-38.3683, 85.8128, -9.92295, 0.1", "-38.6749, 85.7746, -10.8177, 0.1", "-39.131, 85.6964, -12.5973, 0.1", "-39.252, 85.7049, -14.4866, 0.1", "-39.623, 85.5162, -13.5967, 0.1", "-40.6723, 85.0256, -12.103, 0.14", "-40.8206, 84.9577, -11.9082, 0.28", "-41.1446, 84.8213, -11.464, 0.84", "-41.4305, 84.7171, -11.0508, 0.7", "-41.889, 84.6727, -10.8304, 0.56", "-42.7623, 84.9762, -11.0337, 0.42", "-42.9557, 85.0949, -11.1534, 0.28", "-43.3529, 85.4354, -11.3734, 0.1", "-43.6726, 85.8247, -11.4713, 0.1", "-43.9756, 86.2962, -11.3819, 0.1", "-44.1982, 86.6867, -11.1394, 0.1", "-44.5638, 87.2638, -10.5366, 0.14", "-45.0183, 87.8643, -9.76693, 0.56", "-45.4532, 88.3586, -8.95605, 0.42", "-45.9108, 88.7904, -8.12608, 0.28", "-46.3577, 89.1422, -7.3702, 0.42", "-46.9183, 89.4963, -6.52075, 0.56", "-47.332, 89.7043, -5.97236, 0.42", "-48.0126, 89.9563, -5.31265, 0.56", "-48.4906, 90.0651, -5.02886, 0.7", "-49.0416, 90.1257, -4.88077, 0.84", "-49.5515, 90.136, -4.90584, 0.7", "-50.0441, 90.105, -5.04627, 0.84", "-50.9122, 89.9779, -5.48177, 0.7", "-51.338, 89.8941, -5.75562, 0.56", "-51.729, 89.7914, -6.06762, 0.42", "-52.4983, 89.5687, -6.74014, 0.28", "-52.8617, 89.4589, -7.08169, 0.14", "-53.5848, 89.2226, -7.79294, 0.1", "-53.94, 89.0884, -8.13439, 0.1", "-54.577, 88.8386, -8.83704, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-31.6789, 81.942, -9.7631, 0.1", "-30.8953, 82.1173, -8.39112, 0.1", "-30.4093, 82.2133, -7.63701, 0.1", "-29.9357, 82.2906, -6.97496, 0.1", "-28.9112, 82.4002, -5.68577, 0.1", "-28.6252, 82.4164, -5.3603, 0.1", "-28.4684, 82.4156, -5.2037, 0.1", "-28.0509, 82.3641, -4.93889, 0.1", "-27.7712, 82.2967, -4.83301, 0.28", "-27.3068, 82.1313, -4.78246, 0.14", "-27.0333, 81.9964, -4.81374, 0.1", "-26.4926, 81.677, -4.87242, 0.1", "-26.4926, 81.677, -4.87242, 0.14", "-26.4926, 81.677, -4.87242, 0.28", "-26.2413, 81.5034, -4.89818, 0.14", "-25.823, 81.2413, -4.94267, 0.1", "-25.5625, 81.0905, -5.00064, 0.1", "-25.1339, 80.8782, -5.13048, 0.1", "-24.7205, 80.6927, -5.3154, 0.1", "-24.3004, 80.5161, -5.51002, 0.1", "-23.9208, 80.3651, -5.66173, 0.1", "-23.0786, 80.0307, -5.87479, 0.1", "-22.6775, 79.848, -5.89367, 0.1", "-21.9398, 79.46, -5.75702, 0.1", "-21.2883, 79.0388, -5.4985, 0.1", "-20.5809, 78.521, -5.18771, 0.1", "-19.9301, 77.9701, -4.89271, 0.1", "-19.5838, 77.6498, -4.7593, 0.1", "-19.3613, 77.4388, -4.69436, 0.1", "-18.9901, 77.1229, -4.64117, 0.1", "-18.2966, 76.6407, -4.70679, 0.1", "-17.8673, 76.4228, -4.79947, 0.1", "-17.0491, 76.2059, -4.85946, 0.1", "-16.2451, 76.1278, -4.73219, 0.1", "-15.8191, 76.1143, -4.61052, 0.1", "-14.9723, 76.1182, -4.3099, 0.1", "-14.5593, 76.1215, -4.14886, 0.1", "-13.7147, 76.1212, -3.83144, 0.1", "-13.1304, 76.0967, -3.62545, 0.1", "-12.8273, 76.0664, -3.53676, 0.1", "-12.3533, 76.0012, -3.40766, 0.1", "-11.8799, 75.9209, -3.31353, 0.1", "-11.5748, 75.8721, -3.26038, 0.14", "-11.2721, 75.8381, -3.22614, 0.28", "-10.4615, 75.7974, -3.12642, 0.28", "-10.0239, 75.7916, -3.07145, 0.14", "-9.53195, 75.8028, -3.012, 0.1", "-9.09349, 75.8324, -2.97358, 0.1", "-8.66064, 75.8812, -2.96215, 0.1", "-8.34725, 75.9276, -2.97938, 0.14", "-8.34725, 75.9276, -2.97938, 0.28", "-8.12963, 75.9538, -3.01228, 0.28", "-7.69678, 76.0079, -3.07783, 0.28", "-7.26037, 76.0501, -3.14318, 0.14", "-6.83347, 76.0905, -3.20705, 0.1", "-6.34591, 76.141, -3.28027, 0.1", "-5.85629, 76.1855, -3.35341, 0.1", "-5.42613, 76.2138, -3.41702, 0.1", "-4.93443, 76.2266, -3.48857, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "31.8083, -213.645, 4.00477, 0.84", "31.6304, -214.326, 4.39225, 0.84", "31.4649, -215.087, 4.75202, 0.84", "31.4075, -215.523, 4.92532, 0.98", "31.3822, -215.962, 5.07129, 0.84", "31.3862, -216.252, 5.15684, 0.7", "31.4086, -216.657, 5.26862, 0.7", "31.446, -216.857, 5.27858, 0.56", "31.5894, -217.294, 5.17398, 0.56", "31.7518, -217.577, 4.92301, 0.7", "31.8751, -217.758, 4.71567, 0.84", "31.8751, -217.758, 4.71567, 0.98", "32.1897, -218.232, 4.18575, 1.12", "32.4911, -218.726, 3.6711, 0.98", "33.0415, -219.691, 2.58342, 0.84", "33.0389, -220.323, 3.03495, 0.84", "32.989, -221.027, 3.52272, 0.7", "32.9241, -221.734, 4.00354, 0.56", "32.9044, -221.904, 4.12675, 0.42", "32.8177, -222.534, 4.6158, 0.1", "32.765, -222.911, 4.89434, 0.14", "32.7369, -223.35, 5.06574, 0.28", "32.7491, -223.762, 5.0706, 0.42", "32.7756, -223.962, 5.01173, 0.56", "32.8167, -224.15, 4.92549, 0.84", "33.0418, -224.83, 4.45352, 0.84", "33.1685, -225.141, 4.19885, 0.84", "33.4074, -225.67, 3.72742, 0.84", "33.4745, -225.813, 3.58766, 0.84", "33.6075, -226.089, 3.30202, 0.84", "33.8784, -226.653, 2.72013, 0.7", "33.9455, -226.803, 2.58858, 0.56", "34.2181, -227.43, 2.07103, 0.56", "34.329, -227.759, 1.845, 0.7", "34.4269, -228.093, 1.61177, 0.84", "34.4269, -228.093, 1.61177, 0.84", "34.4716, -228.28, 1.52492, 0.98", "34.5653, -228.64, 1.33263, 1.12", "34.7583, -229.401, 0.932729, 0.98", "34.8514, -229.767, 0.74569, 0.84", "34.9448, -230.133, 0.563325, 0.84", "35.0394, -230.498, 0.375641, 0.7", "35.2165, -231.161, 0.012064, 0.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "31.8083, -213.645, 4.00477, 1.26", "32.0529, -213.714, 3.90006, 1.26", "32.7788, -213.916, 3.58933, 1.4", "33.018, -213.983, 3.48692, 1.26", "33.7444, -214.186, 3.17594, 1.12", "33.9837, -214.253, 3.07353, 0.7", "34.2283, -214.321, 2.96882, 0.84" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "24.0658, -388.503, -7.04871, 0.1", "23.6339, -387.912, -6.73845, 0.1", "23.225, -387.259, -6.54227, 0.1", "23.0335, -386.953, -6.4504, 0.1", "22.8155, -386.605, -6.34579, 0.1", "22.6249, -386.301, -6.25438, 0.1", "22.4301, -385.99, -6.1609, 0.1", "22.1441, -385.353, -6.18944, 0.1" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "24.0658, -388.503, -7.04871, 0.1", "23.9344, -389.057, -7.37114, 0.1", "23.7962, -389.629, -7.65605, 0.1", "23.5558, -390.63, -8.08275, 0.1", "23.3919, -391.221, -8.31272, 0.1", "23.2201, -391.806, -8.51872, 0.1", "23.1192, -392.179, -8.66687, 0.1", "22.9755, -392.761, -8.90507, 0.1", "22.8265, -393.353, -9.14066, 0.1", "22.6754, -393.946, -9.3484, 0.1", "22.5145, -394.556, -9.52771, 0.1", "22.2347, -395.569, -9.76964, 0.1", "22.1273, -395.953, -9.83687, 0.1", "21.9272, -396.577, -9.85765, 0.1", "21.7015, -397.188, -9.8002, 0.1", "21.2604, -398.308, -9.59018, 0.14", "21.1039, -398.679, -9.4941, 0.28", "20.8635, -399.251, -9.31585, 0.14", "20.4751, -400.252, -9.00675, 0.1", "20.1893, -400.999, -8.83424, 0.1", "19.9789, -401.614, -8.75038, 0.1", "19.9016, -401.895, -8.73453, 0.14", "19.7797, -402.457, -8.72802, 0.28", "19.7257, -402.741, -8.73105, 0.42", "19.4486, -404.462, -8.77898, 0.83", "19.155, -406.706, -8.79606, 0.28", "19.0046, -408.157, -8.78843, 0.55", "18.6387, -411.881, -8.72859, 0.55", "18.5023, -413.425, -8.67284, 0.28", "18.4092, -414.889, -8.59559, 0.55", "18.3508, -416.975, -8.49732, 0.28", "18.3657, -418.41, -8.44617, 0.55", "18.423, -419.678, -8.42405, 0.28", "18.5828, -421.544, -8.41599, 0.55", "18.7925, -423.837, -8.42758, 0.55", "18.9472, -425.894, -8.46984, 0.28", "19.134, -428.211, -8.56111, 0.55", "19.2962, -430.317, -8.66506, 0.28", "19.4574, -432.632, -8.80672, 0.55", "19.4975, -433.821, -8.89539, 0.28", "19.4019, -436.378, -9.08068, 0.55", "19.2025, -437.958, -9.16354, 0.28", "18.9284, -439.352, -9.29804, 0.55", "18.5962, -440.522, -9.45413, 0.28", "18.2845, -441.507, -9.61261, 0.55", "17.8237, -442.889, -9.86468, 0.28", "16.6637, -446.019, -10.4732, 0.55", "15.1104, -449.848, -11.2451, 0.55", "14.2866, -451.986, -11.6845, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "35.2165, -231.161, 0.012064, 0.7", "34.9329, -231.833, 0.00726366, 0.7", "34.767, -232.268, 0.00470972, 0.84", "34.4961, -233.15, 0.00153827, 0.7", "34.3883, -233.589, -0.0523934, 0.56", "34.2644, -234.222, -0.172468, 0.7", "34.2197, -234.541, -0.243623, 0.56", "34.2147, -234.991, -0.36392, 0.56", "34.2716, -235.599, -0.604193, 0.56", "34.4593, -236.674, -1.14081, 0.7", "34.5115, -236.955, -1.27433, 0.84", "34.6048, -237.556, -1.52836, 0.7", "34.6892, -238.174, -1.73188, 0.56", "34.8261, -239.481, -2.00907, 0.42", "34.8261, -239.481, -2.00907, 0.56", "34.8801, -240.739, -1.95958, 0.56", "34.8867, -241.458, -1.8455, 0.7", "34.8666, -242.093, -1.68193, 0.56", "34.8367, -242.793, -1.45432, 0.7", "34.8057, -243.399, -1.23538, 0.84", "34.7736, -244.028, -1.04295, 0.84", "34.7314, -245.254, -0.75435, 0.84", "34.7152, -245.963, -0.591574, 0.7", "34.7074, -246.608, -0.456214, 0.56", "34.7193, -247.336, -0.326907, 0.56", "34.7493, -248.055, -0.23183, 0.56", "34.8021, -248.707, -0.182547, 0.56", "34.8884, -249.358, -0.130808, 0.7", "34.9828, -249.993, 0.00493049, 0.84", "35.0787, -250.609, 0.208762, 0.7", "35.1695, -251.2, 0.460372, 0.56", "35.2528, -251.783, 0.74821, 0.56", "35.3713, -252.968, 1.37004, 0.42", "35.4487, -254.081, 1.95683, 0.56", "35.4677, -254.668, 2.24836, 0.7", "35.4641, -255.087, 2.42869, 0.56", "35.4342, -255.709, 2.63466, 0.42", "35.3722, -256.427, 2.78634, 0.56", "35.3003, -257.068, 2.78352, 0.7", "35.2081, -257.793, 2.68984, 0.56", "35.0967, -258.502, 2.56777, 0.56", "34.9806, -259.215, 2.42308, 0.56", "34.9021, -259.663, 2.31977, 0.7", "34.6735, -260.998, 2.06111, 0.56", "34.5618, -261.719, 1.95954, 0.7", "34.5047, -262.444, 1.97042, 0.56", "34.5127, -262.767, 2.03829, 0.7", "34.5599, -263.071, 2.15637, 0.7", "34.8577, -264.122, 2.68931, 0.56", "35.0612, -264.662, 3.00806, 0.56", "35.5752, -265.812, 3.56972, 0.42", "35.8457, -266.375, 3.76954, 0.56", "36.1581, -267.027, 3.91137, 0.56", "36.446, -267.695, 3.95979, 0.56", "36.6696, -268.313, 3.90449, 0.42", "36.9985, -269.594, 3.67586, 0.56", "37.0817, -270.232, 3.55081, 0.42", "37.0797, -270.549, 3.51874, 0.56", "36.9898, -271.281, 3.52231, 0.56", "36.9101, -271.727, 3.56903, 0.7", "36.774, -272.44, 3.71104, 0.56", "36.5582, -273.632, 4.05638, 0.56", "36.4657, -274.324, 4.25277, 0.42", "36.4323, -274.959, 4.41611, 0.28", "36.467, -275.602, 4.55628, 0.28", "36.5085, -275.922, 4.60814, 0.42", "36.5709, -276.244, 4.63775, 0.56", "36.7235, -276.882, 4.64623, 0.56", "36.8878, -277.509, 4.655, 0.56", "37.0546, -278.143, 4.6639, 0.56", "37.2221, -278.781, 4.67284, 0.7", "37.3888, -279.415, 4.68173, 0.56", "37.5563, -280.053, 4.69067, 0.56", "37.7323, -280.672, 4.65692, 0.7", "37.9107, -281.303, 4.58447, 0.7", "38.072, -281.919, 4.43018, 0.7", "38.2165, -282.521, 4.21155, 0.56", "38.3482, -283.111, 3.94954, 0.56", "38.5801, -284.22, 3.40722, 0.56", "38.6635, -284.641, 3.22523, 0.84", "38.9067, -285.92, 2.7755, 0.84", "39.0209, -286.544, 2.60621, 0.7", "39.1368, -287.185, 2.50845, 0.7", "39.2559, -287.83, 2.50382, 0.7", "39.5101, -289.138, 2.67789, 0.84", "39.6543, -289.755, 2.79686, 0.7", "39.6543, -289.755, 2.79686, 0.84", "39.8118, -290.373, 2.95047, 0.56", "39.9873, -290.996, 3.07431, 0.56", "40.1792, -291.619, 3.14738, 0.42", "40.4026, -292.239, 3.15794, 0.56", "40.4026, -292.239, 3.15794, 0.56", "40.5277, -292.539, 3.19152, 0.56", "40.8174, -293.203, 3.326, 0.56", "41.0731, -293.786, 3.48389, 0.56", "41.3333, -294.446, 3.68456, 0.56", "41.4374, -294.741, 3.77801, 0.7", "41.8108, -295.842, 4.12442, 0.7", "42.0146, -296.438, 4.30779, 0.56", "42.2273, -297.037, 4.48493, 0.42", "42.5038, -297.7, 4.65699, 0.28", "42.6391, -297.995, 4.7162, 0.14", "42.8423, -298.411, 4.76773, 0.7", "43.1558, -299.069, 4.7813, 0.7", "43.3374, -299.499, 4.78944, 0.56", "43.5703, -300.19, 4.80071, 0.42", "43.6405, -300.512, 4.80478, 0.56", "43.6716, -300.977, 4.80849, 0.84", "43.6218, -301.699, 4.87914, 0.7", "43.5181, -302.42, 4.99354, 0.7", "43.4381, -302.876, 5.08365, 0.7", "43.3287, -303.576, 5.24273, 0.56", "43.2605, -304.291, 5.41783, 0.7", "43.2537, -305.623, 5.76705, 0.84", "43.3058, -306.253, 5.94092, 0.7", "43.3596, -306.567, 6.02745, 0.56", "43.5539, -307.248, 6.19896, 0.42", "43.8058, -307.845, 6.32046, 0.28", "44.0364, -308.25, 6.33082, 0.28", "44.2228, -308.514, 6.28403, 1.12", "44.4169, -308.777, 6.24391, 0.7", "44.839, -309.368, 6.17726, 0.56", "45.2278, -309.993, 6.13317, 0.42", "45.818, -311.101, 6.10748, 0.28", "46.0022, -311.529, 6.11579, 0.42", "46.3982, -312.724, 6.17957, 0.56", "46.5538, -313.359, 6.23106, 0.56", "46.6749, -314.074, 6.24698, 0.42", "46.7379, -314.726, 6.28843, 0.42", "46.7644, -315.382, 6.3531, 0.28", "46.7639, -316.12, 6.3892, 0.28", "46.7636, -316.779, 6.37998, 0.28", "46.7527, -317.991, 6.38009, 0.42", "46.7568, -319.251, 6.39896, 0.42", "46.7508, -319.988, 6.42018, 0.28", "46.7516, -320.715, 6.45096, 0.42", "46.758, -321.373, 6.4868, 0.28", "46.7699, -322.028, 6.52911, 0.42", "46.7953, -322.681, 6.57857, 0.56", "46.8358, -323.406, 6.58411, 0.56", "46.8797, -324.06, 6.58932, 0.42", "46.9196, -324.796, 6.59489, 0.28", "46.9422, -325.441, 6.59939, 0.28", "46.9533, -325.77, 6.60168, 0.14", "46.9763, -326.236, 6.60514, 0.56", "47.0306, -326.889, 6.61067, 0.42", "47.1084, -327.611, 6.61733, 0.56", "47.1878, -328.262, 6.62363, 0.56", "47.2577, -328.917, 6.62965, 0.42", "47.3273, -329.57, 6.63566, 0.28", "47.4048, -330.223, 6.59854, 0.14", "47.4788, -330.871, 6.52512, 0.1", "47.5629, -331.588, 6.45104, 0.14", "47.6402, -332.32, 6.38775, 0.1", "47.7069, -332.96, 6.34832, 0.1", "47.8478, -334.168, 6.31346, 0.1", "47.8478, -334.168, 6.31346, 0.14", "48.0699, -335.362, 6.37271, 0.1", "48.22, -335.998, 6.4274, 0.14", "48.3849, -336.632, 6.49934, 0.1", "48.5481, -337.262, 6.58189, 0.14", "48.7113, -337.895, 6.67403, 0.28", "48.8613, -338.519, 6.72902, 0.42", "48.9933, -339.165, 6.73691, 0.28", "49.0902, -339.814, 6.74373, 0.28", "49.1434, -340.468, 6.74923, 0.42", "49.1527, -340.797, 6.75146, 0.56", "49.1438, -341.253, 6.75387, 0.42", "49.0864, -341.99, 6.75645, 0.28", "49.0017, -342.722, 6.75815, 0.14", "48.9056, -343.443, 6.75944, 0.1", "48.8638, -343.769, 6.7892, 0.14", "48.8638, -343.769, 6.7892, 0.28", "48.8607, -344.22, 6.90767, 0.56", "48.884, -344.831, 7.11243, 0.56", "48.9104, -345.133, 7.24086, 0.7", "49.049, -346.207, 7.79374, 0.56", "49.1286, -346.773, 8.11717, 0.42", "49.1754, -347.049, 8.29025, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "35.2165, -231.161, 0.012064, 2.38", "35.4738, -231.229, -0.0311832, 2.38", "36.0357, -231.406, -0.157545, 2.24", "36.5759, -231.639, -0.296262, 2.1", "37.0795, -231.927, -0.422258, 1.96", "37.8664, -232.506, -0.608791, 1.82", "37.8664, -232.506, -0.608791, 1.68", "38.0417, -232.692, -0.685513, 0.1", "38.3536, -233.101, -0.845552, 0.1", "38.6744, -233.578, -1.00482, 0.1", "38.9626, -234.019, -1.12136, 0.1", "39.5954, -234.938, -1.28346, 0.1", "39.9481, -235.413, -1.35805, 0.1", "40.2851, -235.83, -1.41158, 0.1", "40.6797, -236.275, -1.45068, 0.1", "40.9407, -236.553, -1.456, 0.14", "41.2029, -236.817, -1.43407, 0.28", "41.4782, -237.087, -1.4106, 0.7", "41.9099, -237.498, -1.41236, 0.56", "42.183, -237.759, -1.46397, 0.42", "42.5924, -238.151, -1.65, 0.28", "42.9844, -238.531, -1.90518, 0.14", "43.6876, -239.244, -2.42315, 0.1", "43.8471, -239.418, -2.55367, 0.14", "44.4745, -240.131, -3.10291, 0.1", "45.0429, -240.81, -3.62949, 0.14", "45.0429, -240.81, -3.62949, 0.28", "45.574, -241.542, -4.04326, 0.28", "45.8544, -241.979, -4.18013, 0.42", "46.059, -242.293, -4.24799, 0.56", "46.059, -242.293, -4.24799, 0.7", "46.2076, -242.502, -4.32336, 0.84", "46.553, -242.948, -4.53497, 0.7", "47.2036, -243.714, -4.9759, 0.56", "47.5704, -244.109, -5.24541, 0.42", "48.2875, -244.816, -5.75364, 0.28", "48.4675, -244.98, -5.86819, 0.42", "48.7267, -245.192, -6.03224, 0.7", "49.0094, -245.4, -6.19327, 0.56", "49.8864, -245.985, -6.5938, 0.42", "50.3717, -246.289, -6.78199, 0.28", "50.867, -246.588, -6.9263, 0.14", "51.7295, -247.11, -7.13901, 0.28", "52.3711, -247.497, -7.25842, 0.42", "52.6941, -247.696, -7.29172, 0.28", "53.3308, -248.1, -7.28588, 0.14", "53.6558, -248.308, -7.26671, 0.28", "54.1477, -248.628, -7.16264, 0.42", "54.6116, -248.954, -6.98853, 0.28", "55.0687, -249.291, -6.7858, 0.14", "55.3498, -249.503, -6.64937, 0.28", "55.7925, -249.842, -6.42001, 0.14", "56.6292, -250.46, -5.98467, 0.14", "57.0877, -250.775, -5.75259, 0.1", "57.3764, -250.966, -5.61359, 0.1", "57.9853, -251.349, -5.34739, 0.1", "58.2873, -251.535, -5.23247, 0.14", "58.7889, -251.836, -5.08071, 0.1", "59.2978, -252.121, -4.97201, 0.14", "59.6232, -252.307, -4.90258, 0.28", "60.1213, -252.617, -4.79686, 0.14", "60.4325, -252.827, -4.73113, 0.1", "61.0193, -253.274, -4.55191, 0.14", "61.2949, -253.514, -4.44344, 0.14", "61.7062, -253.901, -4.25207, 0.28", "62.1096, -254.297, -4.04408, 0.14", "62.3559, -254.549, -3.90857, 0.1", "63.0922, -255.304, -3.49829, 0.14", "63.4645, -255.697, -3.24814, 0.28", "63.6939, -255.949, -3.07831, 0.14", "64.0312, -256.333, -2.77109, 0.1", "64.3545, -256.713, -2.44462, 0.1", "64.6571, -257.092, -2.08374, 0.1", "65.2026, -257.798, -1.39397, 0.14", "65.4502, -258.129, -1.04793, 0.28", "65.9109, -258.763, -0.38345, 0.28", "66.1825, -259.14, 9.23152E-4, 0.14", "66.7077, -259.86, 0.691746, 0.1", "67.004, -260.259, 1.02104, 0.1", "67.2198, -260.523, 1.19179, 0.14", "67.5866, -260.936, 1.41636, 0.28", "67.9852, -261.365, 1.58441, 0.14", "68.2327, -261.632, 1.66622, 0.1", "68.6406, -262.068, 1.7489, 0.1", "69.0166, -262.516, 1.86593, 0.1", "69.2252, -262.819, 1.96515, 0.1", "69.2252, -262.819, 1.96515, 0.14", "69.3889, -263.293, 2.15635, 0.84", "69.3889, -263.293, 2.15635, 0.7", "69.5271, -264.246, 2.52307, 0.1", "69.58, -264.742, 2.69395, 0.1", "69.6365, -265.257, 2.84264, 0.1", "69.7228, -265.772, 2.96607, 0.1", "69.7855, -266.029, 3.01642, 0.1", "69.8715, -266.282, 3.05287, 0.56", "70.0962, -266.768, 3.0931, 0.42", "70.3479, -267.239, 3.13974, 0.28", "70.6502, -267.757, 3.1968, 0.28", "70.8416, -268.075, 3.23313, 0.56", "71.1457, -268.592, 3.2906, 0.42", "71.3335, -268.913, 3.3261, 0.28", "71.4671, -269.145, 3.35123, 0.56", "71.7209, -269.619, 3.3983, 0.42", "71.9573, -270.098, 3.44131, 0.28", "72.1887, -270.58, 3.48312, 0.42", "72.4434, -271.125, 3.52888, 0.56", "72.5603, -271.364, 3.55011, 0.7", "72.6893, -271.599, 3.57413, 0.84", "73.0047, -272.11, 3.63431, 0.7", "73.3496, -272.591, 3.70177, 0.56", "73.6677, -273.019, 3.76435, 0.42", "74.0195, -273.503, 3.83329, 0.28", "74.2315, -273.807, 3.87459, 0.14", "74.5567, -274.311, 3.93713, 0.1", "74.9396, -274.96, 3.95079, 0.1", "75.1205, -275.295, 3.9294, 0.84", "75.3579, -275.772, 3.86594, 0.7", "75.5817, -276.244, 3.7343, 0.56", "75.7902, -276.707, 3.55999, 0.42", "76.2128, -277.629, 3.15388, 0.28", "76.3177, -277.855, 3.0497, 0.42", "76.4343, -278.083, 2.9658, 0.56", "76.9414, -279.058, 2.7122, 0.42", "77.1843, -279.535, 2.65128, 0.28", "77.4407, -280.073, 2.65954, 0.14", "77.662, -280.556, 2.73465, 0.1", "78.1141, -281.571, 2.94635, 0.1", "78.3151, -282.053, 3.0724, 0.1", "78.4955, -282.537, 3.22688, 0.1", "78.671, -283.025, 3.3641, 0.1", "78.7969, -283.376, 3.44301, 0.1", "78.8903, -283.626, 3.4812, 0.56", "79.0676, -284.131, 3.5103, 0.42", "79.2352, -284.64, 3.53715, 0.28", "79.3901, -285.146, 3.5612, 0.14", "79.5626, -285.716, 3.58782, 0.1", "79.7233, -286.23, 3.61302, 0.1", "79.9153, -286.803, 3.64401, 0.14", "80.1132, -287.304, 3.63832, 0.1", "80.2214, -287.548, 3.62074, 0.1", "80.4807, -288.087, 3.55157, 0.1", "80.7439, -288.615, 3.46054, 0.1", "81.0003, -289.077, 3.37204, 0.1", "81.514, -289.955, 3.20369, 0.1", "81.6467, -290.188, 3.18306, 0.56", "81.9049, -290.659, 3.19231, 0.42", "82.1431, -291.129, 3.24745, 0.28", "82.4056, -291.66, 3.35961, 0.42", "82.6374, -292.114, 3.49578, 0.28", "83.1364, -293.064, 3.85222, 0.14", "83.4259, -293.558, 4.04411, 0.1", "83.7106, -293.973, 4.21041, 0.1", "84.0787, -294.429, 4.35369, 0.1", "84.3297, -294.711, 4.4071, 0.42", "84.7394, -295.144, 4.42679, 0.28", "85.0016, -295.42, 4.42499, 0.14", "85.4925, -295.987, 4.50385, 0.1", "86.0826, -296.77, 4.81531, 0.1", "86.332, -297.173, 5.05331, 0.14", "86.5446, -297.571, 5.34341, 0.28", "86.9022, -298.348, 6.08346, 0.28", "87.2037, -299.063, 6.85934, 0.14", "87.4914, -299.769, 7.69021, 0.1", "87.5627, -299.932, 7.89327, 0.14", "87.6706, -300.151, 8.18575, 0.28", "87.9627, -300.73, 8.98516, 0.7", "88.1235, -301.074, 9.45298, 0.56", "88.2744, -301.427, 9.90932, 0.42", "88.364, -301.659, 10.1983, 0.56", "88.5899, -302.268, 10.9506, 0.1", "88.8015, -302.937, 11.7956, 0.1", "88.9914, -303.628, 12.6269, 0.1", "89.0782, -303.964, 13.0272, 0.1", "89.143, -304.215, 13.3016, 0.14", "89.2273, -304.489, 13.5525, 0.28", "89.5353, -305.271, 14.0849, 0.28", "89.7123, -305.708, 14.3406, 0.14", "89.904, -306.214, 14.6066, 0.1", "90.0339, -306.657, 14.8789, 0.1", "90.1428, -307.154, 15.1896, 0.14", "90.1827, -307.382, 15.3287, 0.28", "90.3056, -308.268, 15.8329, 0.1", "90.3546, -308.743, 16.0792, 0.1", "90.4358, -309.76, 16.4843, 0.1", "90.4625, -310.258, 16.6833, 0.1", "90.4696, -310.512, 16.7736, 0.1", "90.4957, -310.876, 16.8478, 0.1", "90.6991, -311.925, 16.5945, 0.1", "90.9091, -312.708, 16.0186, 0.1" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "49.1754, -347.049, 8.29025, 0.28", "50.0795, -347.082, 9.01538, 0.28", "50.6206, -347.101, 9.44933, 0.14", "51.1107, -347.119, 9.84242, 0.1", "51.6603, -347.138, 10.2832, 0.1", "51.9054, -347.147, 10.4797, 0.1" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "49.1754, -347.049, 8.29025, 0.42", "49.201, -347.486, 8.44753, 0.42", "49.1993, -347.928, 8.60003, 0.28", "49.1746, -348.37, 8.74187, 0.14", "49.1334, -348.81, 8.8672, 0.1", "49.029, -349.671, 9.08034, 0.14", "48.9542, -350.178, 9.19156, 0.14", "48.8512, -350.673, 9.28669, 0.28", "48.7699, -350.994, 9.33492, 0.28", "48.6215, -351.479, 9.41889, 0.14", "48.4547, -351.969, 9.50202, 0.1", "48.3509, -352.272, 9.54477, 0.14", "48.1872, -352.761, 9.63009, 0.28", "48.0319, -353.252, 9.72795, 0.28", "47.7335, -354.243, 9.93929, 0.14", "47.6501, -354.548, 10.0064, 0.28", "47.5308, -355.047, 10.1103, 0.42", "47.4487, -355.5, 10.1915, 0.56", "47.4228, -355.728, 10.2226, 0.7", "47.4132, -356.05, 10.2466, 0.56", "47.4402, -356.517, 10.2473, 0.42", "47.4955, -357.038, 10.2508, 0.56", "47.5614, -357.501, 10.2557, 0.42", "47.6353, -357.952, 10.2615, 0.28", "47.7229, -358.408, 10.2688, 0.28", "47.8248, -358.865, 10.2777, 0.42", "47.9332, -359.317, 10.2873, 0.56", "48.051, -359.769, 10.2978, 0.56", "48.168, -360.219, 10.3084, 0.56", "48.2837, -360.663, 10.3188, 0.56", "48.4009, -361.114, 10.3293, 0.56", "48.5182, -361.563, 10.3399, 0.56", "48.6361, -362.016, 10.3505, 0.7", "48.7534, -362.465, 10.361, 0.56", "48.8714, -362.918, 10.3717, 0.56", "48.9865, -363.36, 10.382, 0.42", "49.1044, -363.812, 10.3926, 0.56", "49.2218, -364.262, 10.4032, 0.42", "49.3396, -364.714, 10.4138, 0.56", "49.4568, -365.164, 10.4243, 0.7", "49.5738, -365.614, 10.4348, 0.7", "49.6893, -366.059, 10.4452, 0.56", "49.8059, -366.509, 10.4557, 0.7" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "49.8059, -366.509, 10.4557, 1.12", "50.1949, -366.407, 10.4104, 1.12", "50.5636, -366.345, 10.2511, 0.98", "50.5636, -366.345, 10.2511, 0.84", "50.8876, -366.318, 10.0103, 0.28", "50.8876, -366.318, 10.0103, 0.28", "51.0626, -366.284, 9.91285, 0.28", "51.828, -366.089, 9.5992, 0.14", "52.6209, -365.844, 9.40222, 0.1", "53.342, -365.574, 9.31728, 0.42", "53.7609, -365.398, 9.31116, 0.28", "54.1295, -365.233, 9.33332, 0.14", "54.8896, -364.865, 9.45327, 0.1", "55.2346, -364.681, 9.55667, 0.1", "55.6076, -364.472, 9.69636, 0.1", "55.9598, -364.29, 9.7851, 0.1", "56.1372, -364.202, 9.83213, 0.1" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "49.8059, -366.509, 10.4557, 0.56", "50.003, -367.683, 10.6988, 0.56", "50.0737, -368.306, 10.7999, 0.56", "50.1354, -368.93, 10.8819, 0.7", "50.1803, -369.547, 10.9504, 0.56", "50.2229, -370.178, 11.0106, 0.56", "50.274, -370.887, 11.0692, 0.56", "50.3153, -371.585, 11.0818, 0.56", "50.3444, -372.217, 11.0942, 0.56", "50.3644, -372.927, 11.1095, 0.56", "50.3698, -373.548, 11.1243, 0.42", "50.3751, -374.184, 11.1395, 0.28", "50.3869, -374.896, 11.1097, 0.42", "50.4022, -375.528, 11.0462, 0.56", "50.4194, -376.222, 10.9425, 0.56", "50.4413, -376.925, 10.8372, 0.56", "50.4551, -377.55, 10.7409, 0.42", "50.4849, -378.707, 10.5551, 0.56", "50.5263, -379.32, 10.4601, 0.7", "50.5726, -379.633, 10.4242, 0.84", "50.9355, -380.874, 10.3934, 0.84", "50.9355, -380.874, 10.3934, 0.84", "51.0717, -381.155, 10.432, 0.84", "51.3659, -381.712, 10.5178, 0.7", "51.7098, -382.324, 10.5613, 0.7", "52.0172, -382.877, 10.5676, 0.56", "52.3519, -383.503, 10.5445, 0.56", "52.6441, -384.064, 10.5247, 0.7", "52.9741, -384.69, 10.4583, 0.56", "53.2935, -385.313, 10.3977, 0.7", "53.5676, -385.883, 10.3947, 0.84", "53.8174, -386.466, 10.4487, 0.7", "54.0246, -387.039, 10.6187, 0.84", "54.3464, -388.064, 11.0884, 0.98", "54.6187, -389.098, 11.6651, 0.84", "54.8497, -390.18, 12.3361, 0.7", "54.9624, -390.762, 12.7077, 0.7", "55.1335, -391.884, 13.3279, 0.56", "55.204, -392.463, 13.5817, 0.7", "55.2549, -393.066, 13.7655, 0.84", "55.2828, -393.504, 13.7929, 0.56", "55.3053, -394.139, 13.7887, 0.56", "55.3502, -395.473, 13.7725, 0.56", "55.3729, -396.094, 13.8018, 0.7", "55.4442, -396.792, 13.9149, 0.56", "55.523, -397.405, 14.0489, 0.56", "55.7205, -398.679, 14.369, 0.56", "55.8155, -399.28, 14.5401, 0.56", "56.0084, -400.503, 14.9218, 0.7", "56.3811, -403.208, 15.7044, 0.56", "56.4685, -403.892, 15.8777, 0.7", "56.5298, -404.509, 16.0019, 0.7", "56.5579, -404.944, 16.0562, 0.56", "56.576, -405.652, 16.1186, 0.42", "56.5657, -406.353, 16.1373, 0.28", "56.5357, -406.985, 16.1989, 0.42", "56.5326, -407.69, 16.3059, 0.56", "56.5591, -408.376, 16.4392, 0.7", "56.6196, -408.991, 16.5753, 0.56", "56.7218, -409.597, 16.7241, 0.7", "56.976, -410.705, 17.0147, 0.84", "57.1254, -411.311, 17.1311, 0.7", "57.2914, -411.919, 17.191, 0.56", "57.4571, -412.518, 17.1869, 0.42", "57.5686, -412.957, 17.139, 0.56", "57.6371, -413.25, 17.0797, 0.7", "57.8798, -414.513, 16.7237, 0.56", "57.9652, -415.122, 16.5591, 0.56", "58.0269, -415.734, 16.4122, 0.56", "58.0577, -416.357, 16.291, 0.56", "58.0628, -416.658, 16.2505, 0.56", "58.0584, -417.103, 16.185, 0.98", "58.0479, -417.808, 16.0933, 0.84", "58.0162, -418.407, 15.9311, 0.84", "57.9896, -418.826, 15.7695, 0.28", "57.9614, -419.399, 15.5049, 0.28", "57.9306, -420.578, 14.8937, 0.28", "57.9337, -421.124, 14.5748, 0.28", "58.0105, -422.136, 14.0797, 0.42", "58.0886, -422.741, 13.9027, 0.84", "58.1751, -423.361, 13.8106, 0.84", "58.1751, -423.361, 13.8106, 0.7", "58.1751, -423.361, 13.8106, 0.84", "58.494, -426.124, 13.7561, 0.55", "58.815, -428.935, 13.7791, 0.83", "59.155, -432.111, 13.8074, 0.83", "59.2251, -432.805, 13.8139, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "59.2251, -432.805, 13.8139, 0.55", "58.1642, -434.833, 13.8459, 0.55", "57.254, -436.532, 13.7756, 0.83", "56.3585, -438.321, 13.5698, 0.83", "55.0867, -440.862, 13.2775, 0.55", "54.3065, -442.421, 13.0982, 0.28", "53.3385, -444.354, 12.8757, 0.55", "52.6777, -445.941, 12.582, 0.28", "52.0074, -447.568, 12.1115, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "59.2251, -432.805, 13.8139, 0.83", "59.2447, -435.575, 13.8928, 0.83", "59.3227, -437.551, 13.9998, 0.55", "59.3936, -439.241, 14.0953, 0.83", "59.4588, -440.282, 14.1829, 0.55", "59.632, -442.546, 14.3981, 0.83", "59.798, -444.846, 14.6044, 0.83", "59.9972, -447.189, 14.842, 0.83", "60.2874, -450.355, 15.1724, 0.83", "60.4557, -452.385, 15.404, 0.83", "60.6094, -454.402, 15.6151, 0.83", "61.0194, -459.378, 16.1714, 0.83", "61.1947, -461.056, 16.3604, 0.55", "61.5473, -463.647, 16.6413, 0.83", "61.8041, -465.137, 16.8132, 0.83", "62.2509, -467.323, 17.0544, 0.55", "62.9945, -470.36, 17.4036, 0.55", "63.7792, -473.01, 17.731, 0.55", "64.2806, -474.622, 17.8685, 0.55", "64.6787, -475.863, 17.9332, 0.55", "65.4205, -478.278, 17.9856, 0.83", "66.1123, -480.764, 17.983, 0.55", "66.6804, -483.007, 17.8973, 0.55", "67.2206, -485.289, 17.7796, 0.55", "68.1426, -489.475, 17.5069, 0.55", "68.4288, -490.795, 17.4025, 0.55", "68.7895, -492.513, 17.2507, 0.55", "69.5926, -496.211, 16.9213, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "69.5926, -496.211, 16.9213, 0.28", "70.62, -496.612, 16.8294, 0.28", "72.1628, -497.166, 16.3229, 0.55", "72.902, -497.38, 16.0638, 0.28", "73.9466, -497.649, 15.7415, 0.55", "78.2241, -498.691, 14.5036, 0.28", "79.4842, -499.005, 14.1759, 0.55", "83.2534, -499.833, 12.9988, 0.28", "84.5671, -500.074, 12.5254, 0.55", "85.9432, -500.279, 12.0125, 0.55", "87.2659, -500.433, 11.5385, 0.28", "88.7337, -500.686, 11.2223, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "69.5926, -496.211, 16.9213, 0.55", "70.1072, -498.212, 16.9459, 0.55", "70.9831, -501.617, 16.9877, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_BTC_7ea9933f77_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_63
create dend_75
public dend_75
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_64
create dend_72
public dend_72
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_65
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.49999994045921775)
    connect dend_0(0), soma_0(0.49999994045921775)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.465097, 8.04727, -0.0175891, 2.59198 ) }
    soma_0 { pt3dadd( 0.424424, 7.2054, -0.0170165, 4.38773 ) }
    soma_0 { pt3dadd( 0.383751, 6.36352, -0.0164438, 5.44399 ) }
    soma_0 { pt3dadd( 0.343077, 5.52165, -0.0158711, 6.50025 ) }
    soma_0 { pt3dadd( 0.302404, 4.67978, -0.0152984, 7.50099 ) }
    soma_0 { pt3dadd( 0.261731, 3.83791, -0.0147257, 8.3937 ) }
    soma_0 { pt3dadd( 0.221058, 2.99604, -0.014153, 9.3444 ) }
    soma_0 { pt3dadd( 0.180384, 2.15416, -0.0135803, 10.2953 ) }
    soma_0 { pt3dadd( 0.139711, 1.31229, -0.0130077, 10.7907 ) }
    soma_0 { pt3dadd( 0.0990378, 0.470419, -0.012435, 10.75 ) }
    soma_0 { pt3dadd( 0.0583646, -0.371454, -0.0118623, 10.6053 ) }
    soma_0 { pt3dadd( 0.0176913, -1.21333, -0.0112896, 10.4607 ) }
    soma_0 { pt3dadd( -0.0229819, -2.0552, -0.0107169, 10.316 ) }
    soma_0 { pt3dadd( -0.0636552, -2.89707, -0.0101442, 9.78436 ) }
    soma_0 { pt3dadd( -0.104328, -3.73894, -0.00957155, 9.07182 ) }
    soma_0 { pt3dadd( -0.145002, -4.58081, -0.00899886, 8.12082 ) }
    soma_0 { pt3dadd( -0.185675, -5.42269, -0.00842618, 7.10426 ) }
    soma_0 { pt3dadd( -0.226348, -6.26456, -0.00785349, 5.9023 ) }
    soma_0 { pt3dadd( -0.267021, -7.10643, -0.0072808, 4.68096 ) }
    soma_0 { pt3dadd( -0.307695, -7.9483, -0.00670812, 3.08046 ) }
    soma_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 1.81235 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.46257, 6.73541, -0.101719, 1.82 ) }
    dend_45 { pt3dadd( -1.58508, 7.36767, 1.04194, 1.82 ) }
    dend_45 { pt3dadd( -1.66791, 7.68892, 1.56862, 1.82 ) }
    dend_45 { pt3dadd( -1.88237, 8.43053, 2.63057, 1.68 ) }
    dend_45 { pt3dadd( -2.10979, 9.17893, 3.62859, 1.82 ) }
    dend_45 { pt3dadd( -2.10979, 9.17893, 3.62859, 1.96 ) }
    dend_45 { pt3dadd( -2.34598, 9.95617, 4.66507, 1.4 ) }
    dend_45 { pt3dadd( -2.50054, 10.3224, 5.13009, 1.26 ) }
    dend_45 { pt3dadd( -2.69522, 10.6989, 5.59012, 1.4 ) }
    dend_45 { pt3dadd( -2.69522, 10.6989, 5.59012, 1.26 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.682563, -8.18459, 0.898281, 2.1 ) }
    dend_0 { pt3dadd( -0.25202, -9.01864, 1.56247, 2.1 ) }
    dend_0 { pt3dadd( 0.150517, -10.0958, 2.17736, 1.96 ) }
    dend_0 { pt3dadd( 0.335689, -10.7143, 2.43975, 2.1 ) }
    dend_0 { pt3dadd( 0.4109, -10.9972, 2.53784, 1.96 ) }
    dend_0 { pt3dadd( 0.526511, -11.5855, 2.70845, 1.82 ) }
    dend_0 { pt3dadd( 0.615988, -12.2476, 2.87306, 1.68 ) }
    dend_0 { pt3dadd( 0.646709, -12.9414, 2.93106, 1.54 ) }
    dend_0 { pt3dadd( 0.628879, -13.5615, 2.93106, 1.4 ) }
    dend_0 { pt3dadd( 0.612141, -13.8621, 2.93106, 1.4 ) }
    dend_0 { pt3dadd( 0.566891, -14.5575, 2.93106, 2.38 ) }
    dend_0 { pt3dadd( 0.539918, -14.9878, 2.93106, 2.24 ) }
    dend_0 { pt3dadd( 0.524396, -15.6079, 2.93106, 2.38 ) }
    dend_0 { pt3dadd( 0.535851, -16.2312, 2.93106, 2.24 ) }
    dend_0 { pt3dadd( 0.554494, -16.8512, 2.93106, 2.1 ) }
    dend_0 { pt3dadd( 0.584266, -17.2909, 2.93106, 1.96 ) }
    dend_0 { pt3dadd( 0.623025, -17.6002, 2.93106, 1.82 ) }
    dend_0 { pt3dadd( 0.697875, -18.2052, 2.93106, 1.54 ) }
    dend_0 { pt3dadd( 0.766087, -18.8218, 2.93106, 1.68 ) }
    dend_0 { pt3dadd( 0.805192, -19.2592, 2.96896, 1.82 ) }
    dend_0 { pt3dadd( 0.845208, -19.8744, 3.06107, 1.68 ) }
    dend_0 { pt3dadd( 0.88097, -20.4721, 3.17552, 1.68 ) }
    dend_0 { pt3dadd( 0.897182, -21.1397, 3.37498, 1.82 ) }
    dend_0 { pt3dadd( 0.899365, -21.7187, 3.59768, 1.82 ) }
    dend_0 { pt3dadd( 0.88009, -22.8726, 4.20076, 1.82 ) }
    dend_0 { pt3dadd( 0.872975, -23.4706, 4.5626, 1.68 ) }
    dend_0 { pt3dadd( 0.868235, -23.7298, 4.73564, 1.68 ) }
    dend_0 { pt3dadd( 0.85171, -24.6934, 5.42984, 1.12 ) }
    dend_0 { pt3dadd( 0.834835, -25.1919, 5.79863, 0.98 ) }
    dend_0 { pt3dadd( 0.761583, -26.2673, 6.53953, 1.12 ) }
    dend_0 { pt3dadd( 0.709842, -26.8046, 6.84509, 0.98 ) }
    dend_0 { pt3dadd( 0.678372, -27.083, 6.98156, 1.12 ) }
    dend_0 { pt3dadd( 0.678372, -27.083, 6.98156, 1.26 ) }
    dend_0 { pt3dadd( 0.616635, -27.7595, 7.09954, 1.26 ) }
    dend_0 { pt3dadd( 0.570555, -28.454, 7.16305, 1.12 ) }
    dend_0 { pt3dadd( 0.565432, -28.8851, 7.16305, 0.98 ) }
    dend_0 { pt3dadd( 0.597509, -29.5046, 7.16305, 1.12 ) }
    dend_0 { pt3dadd( 0.666785, -30.124, 7.16305, 1.26 ) }
    dend_0 { pt3dadd( 0.763854, -30.7367, 7.16305, 1.4 ) }
    dend_0 { pt3dadd( 0.910679, -31.3316, 7.16305, 1.26 ) }
    dend_0 { pt3dadd( 1.09637, -31.9235, 7.16305, 1.4 ) }
    dend_0 { pt3dadd( 1.24903, -32.337, 7.16305, 1.4 ) }
    dend_0 { pt3dadd( 1.24903, -32.337, 7.16305, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.07222, -23.7727, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.69522, 10.6989, 5.59012, 0.84 ) }
    dend_51 { pt3dadd( -2.88783, 11.1188, 5.26013, 0.84 ) }
    dend_51 { pt3dadd( -3.24529, 11.9356, 4.71541, 0.7 ) }
    dend_51 { pt3dadd( -3.42159, 12.3551, 4.47799, 0.84 ) }
    dend_51 { pt3dadd( -3.76039, 13.2336, 4.0251, 0.98 ) }
    dend_51 { pt3dadd( -3.92957, 13.6736, 3.82208, 1.12 ) }
    dend_51 { pt3dadd( -4.09509, 14.1002, 3.61561, 1.26 ) }
    dend_51 { pt3dadd( -4.26604, 14.5412, 3.41603, 1.4 ) }
    dend_51 { pt3dadd( -4.44849, 14.9896, 3.2532, 1.54 ) }
    dend_51 { pt3dadd( -4.54494, 15.2204, 3.19571, 1.68 ) }
    dend_51 { pt3dadd( -4.7662, 15.7498, 3.18199, 1.68 ) }
    dend_51 { pt3dadd( -5.16738, 16.7085, 3.28923, 1.54 ) }
    dend_51 { pt3dadd( -5.38191, 17.2202, 3.40916, 1.4 ) }
    dend_51 { pt3dadd( -5.57946, 17.6678, 3.56454, 1.4 ) }
    dend_51 { pt3dadd( -6.0164, 18.5633, 3.87891, 1.26 ) }
    dend_51 { pt3dadd( -6.46647, 19.3704, 4.07397, 1.12 ) }
    dend_51 { pt3dadd( -6.74384, 19.7993, 4.07192, 0.98 ) }
    dend_51 { pt3dadd( -6.74384, 19.7993, 4.07192, 0.98 ) }
    dend_51 { pt3dadd( -7.01622, 20.0301, 3.62253, 0.7 ) }
    dend_51 { pt3dadd( -7.44836, 20.4182, 2.83352, 0.56 ) }
    dend_51 { pt3dadd( -7.88808, 20.8614, 1.95589, 0.42 ) }
    dend_51 { pt3dadd( -8.25456, 21.2882, 1.15577, 0.56 ) }
    dend_51 { pt3dadd( -8.86186, 22.1451, -0.377633, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( -9.00208, 22.399, -0.798069, 1.26 ) }
    dend_51 { pt3dadd( -9.13585, 22.7109, -1.24972, 1.12 ) }
    dend_51 { pt3dadd( -9.25195, 23.0962, -1.66121, 0.98 ) }
    dend_51 { pt3dadd( -9.3469, 23.5756, -1.96204, 0.84 ) }
    dend_51 { pt3dadd( -9.50934, 24.5343, -2.06744, 0.7 ) }
    dend_51 { pt3dadd( -9.55344, 24.7789, -2.0031, 0.84 ) }
    dend_51 { pt3dadd( -9.84573, 25.7845, -1.50378, 0.1 ) }
    dend_51 { pt3dadd( -10.2172, 26.4152, -0.848151, 0.1 ) }
    dend_51 { pt3dadd( -10.3689, 26.5744, -0.569451, 0.14 ) }
    dend_51 { pt3dadd( -10.3689, 26.5744, -0.569451, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 10/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.69522, 10.6989, 5.59012, 3.22 ) }
    dend_46 { pt3dadd( -2.50369, 10.9487, 5.38325, 3.22 ) }
    dend_46 { pt3dadd( -2.24109, 11.3709, 5.05439, 3.08 ) }
    dend_46 { pt3dadd( -1.80063, 12.2158, 4.47032, 2.94 ) }
    dend_46 { pt3dadd( -1.67481, 12.5113, 4.29003, 2.8 ) }
    dend_46 { pt3dadd( -1.49156, 12.9796, 3.98308, 2.66 ) }
    dend_46 { pt3dadd( -1.16825, 13.8774, 3.39958, 2.52 ) }
    dend_46 { pt3dadd( -1.04104, 14.3162, 3.12571, 2.38 ) }
    dend_46 { pt3dadd( -0.927397, 14.8176, 2.84043, 2.24 ) }
    dend_46 { pt3dadd( -0.839527, 15.2944, 2.61986, 2.1 ) }
    dend_46 { pt3dadd( -0.694111, 16.1597, 2.17782, 1.96 ) }
    dend_46 { pt3dadd( -0.609604, 16.679, 1.8952, 0.28 ) }
    dend_46 { pt3dadd( -0.510175, 17.1946, 1.63467, 0.42 ) }
    dend_46 { pt3dadd( -0.433408, 17.5155, 1.45299, 0.56 ) }
    dend_46 { pt3dadd( -0.303574, 18.0026, 1.15042, 0.7 ) }
    dend_46 { pt3dadd( -0.0630682, 18.7813, 0.670635, 0.84 ) }
    dend_46 { pt3dadd( -0.00175463, 19.0178, 0.571215, 0.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 27/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.24903, -32.337, 7.16305, 1.4 ) }
    dend_14 { pt3dadd( 1.33635, -32.6536, 7.16071, 1.4 ) }
    dend_14 { pt3dadd( 1.47689, -33.2921, 7.15707, 1.54 ) }
    dend_14 { pt3dadd( 1.56413, -33.9052, 6.94731, 1.68 ) }
    dend_14 { pt3dadd( 1.58938, -34.1528, 6.73287, 1.54 ) }
    dend_14 { pt3dadd( 1.61667, -34.6437, 6.30193, 1.4 ) }
    dend_14 { pt3dadd( 1.61667, -34.6437, 6.30193, 1.54 ) }
    dend_14 { pt3dadd( 1.62793, -35.0343, 6.04031, 1.4 ) }
    dend_14 { pt3dadd( 1.64642, -36.2012, 5.38426, 1.26 ) }
    dend_14 { pt3dadd( 1.68123, -37.4259, 4.86213, 1.12 ) }
    dend_14 { pt3dadd( 1.70497, -38.1308, 4.65665, 0.98 ) }
    dend_14 { pt3dadd( 1.73829, -38.7728, 4.53795, 0.84 ) }
    dend_14 { pt3dadd( 1.83315, -40.1227, 4.30884, 0.7 ) }
    dend_14 { pt3dadd( 1.85697, -40.4479, 4.26846, 0.56 ) }
    dend_14 { pt3dadd( 1.8879, -41.1003, 4.23956, 0.56 ) }
    dend_14 { pt3dadd( 1.91733, -41.8338, 4.21312, 0.7 ) }
    dend_14 { pt3dadd( 1.93411, -42.4641, 4.08945, 0.84 ) }
    dend_14 { pt3dadd( 1.95418, -43.7359, 3.67659, 0.98 ) }
    dend_14 { pt3dadd( 1.96508, -44.1642, 3.49703, 0.56 ) }
    dend_14 { pt3dadd( 1.97396, -44.8538, 3.24415, 0.7 ) }
    dend_14 { pt3dadd( 1.98329, -45.4781, 3.09235, 0.84 ) }
    dend_14 { pt3dadd( 2.03637, -46.8509, 2.97847, 0.84 ) }
    dend_14 { pt3dadd( 2.07681, -47.5006, 3.03986, 0.98 ) }
    dend_14 { pt3dadd( 2.13732, -48.134, 3.20359, 1.12 ) }
    dend_14 { pt3dadd( 2.29999, -49.3139, 3.59583, 0.56 ) }
    dend_14 { pt3dadd( 2.51266, -50.5399, 4.09011, 0.42 ) }
    dend_14 { pt3dadd( 2.6282, -51.1262, 4.35546, 0.42 ) }
    dend_14 { pt3dadd( 2.76142, -51.7161, 4.61208, 0.56 ) }
    dend_14 { pt3dadd( 2.83284, -52.0199, 4.70423, 0.7 ) }
    dend_14 { pt3dadd( 2.91277, -52.3374, 4.73143, 1.12 ) }
    dend_14 { pt3dadd( 3.08123, -52.9504, 4.6176, 1.26 ) }
    dend_14 { pt3dadd( 3.24281, -53.5505, 4.4146, 1.12 ) }
    dend_14 { pt3dadd( 3.55357, -54.689, 4.13885, 1.12 ) }
    dend_14 { pt3dadd( 3.55357, -54.689, 4.13885, 1.12 ) }
    dend_14 { pt3dadd( 3.61569, -55.0084, 4.13667, 1.12 ) }
    dend_14 { pt3dadd( 3.70254, -55.6573, 4.19144, 0.98 ) }
    dend_14 { pt3dadd( 3.7598, -56.2997, 4.29882, 1.12 ) }
    dend_14 { pt3dadd( 3.84179, -57.5645, 4.71298, 1.12 ) }
    dend_14 { pt3dadd( 3.88282, -58.2394, 5.00543, 1.26 ) }
    dend_14 { pt3dadd( 3.92631, -58.9092, 5.30377, 1.26 ) }
    dend_14 { pt3dadd( 3.95611, -59.3236, 5.4877, 1.4 ) }
    dend_14 { pt3dadd( 3.97351, -59.6185, 5.62419, 1.4 ) }
    dend_14 { pt3dadd( 4.03371, -60.7195, 6.12701, 1.26 ) }
    dend_14 { pt3dadd( 4.07749, -61.3287, 6.36025, 1.26 ) }
    dend_14 { pt3dadd( 4.16403, -61.9206, 6.63198, 1.26 ) }
    dend_14 { pt3dadd( 4.29405, -62.4881, 6.92949, 1.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.24903, -32.337, 7.16305, 2.24 ) }
    dend_1 { pt3dadd( 0.87408, -32.6938, 6.13109, 2.24 ) }
    dend_1 { pt3dadd( 0.5717, -33.0683, 5.0832, 2.38 ) }
    dend_1 { pt3dadd( 0.268961, -33.4433, 4.03406, 2.52 ) }
    dend_1 { pt3dadd( 0.19468, -33.5352, 3.77665, 2.38 ) }
    dend_1 { pt3dadd( -0.115661, -33.9196, 2.70116, 2.24 ) }
    dend_1 { pt3dadd( -0.400066, -34.2718, 1.71557, 2.1 ) }
    dend_1 { pt3dadd( -0.610016, -34.6559, 0.766578, 1.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -2.51991, -53.7378, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -3.24376, -68.7203, -0.00613543, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 84/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -10.3689, 26.5744, -0.569451, 0.28 ) }
    dend_61 { pt3dadd( -10.6452, 27.7199, -1.16298, 0.28 ) }
    dend_61 { pt3dadd( -11.0125, 28.9434, -1.46425, 0.42 ) }
    dend_61 { pt3dadd( -11.2123, 29.5546, -1.53981, 0.56 ) }
    dend_61 { pt3dadd( -11.4226, 30.1632, -1.56204, 0.56 ) }
    dend_61 { pt3dadd( -11.5315, 30.468, -1.55729, 0.56 ) }
    dend_61 { pt3dadd( -11.981, 31.7056, -1.50251, 0.56 ) }
    dend_61 { pt3dadd( -12.2025, 32.3, -1.37263, 0.7 ) }
    dend_61 { pt3dadd( -12.2025, 32.3, -1.37263, 0.7 ) }
    dend_61 { pt3dadd( -12.4002, 32.8853, -1.23384, 0.56 ) }
    dend_61 { pt3dadd( -12.5703, 33.5068, -1.17067, 0.42 ) }
    dend_61 { pt3dadd( -12.7102, 34.1355, -1.18903, 0.28 ) }
    dend_61 { pt3dadd( -12.8392, 34.8402, -1.29291, 0.14 ) }
    dend_61 { pt3dadd( -12.9351, 35.4468, -1.44713, 0.1 ) }
    dend_61 { pt3dadd( -13.0266, 36.0543, -1.64134, 0.1 ) }
    dend_61 { pt3dadd( -13.1517, 37.18, -2.13954, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -13.1996, 37.7489, -2.44495, 0.84 ) }
    dend_61 { pt3dadd( -13.2403, 38.3, -2.77623, 0.7 ) }
    dend_61 { pt3dadd( -13.3198, 39.3886, -3.50783, 0.56 ) }
    dend_61 { pt3dadd( -13.3487, 39.9089, -3.88678, 0.7 ) }
    dend_61 { pt3dadd( -13.404, 40.9884, -4.71154, 0.84 ) }
    dend_61 { pt3dadd( -13.404, 40.9884, -4.71154, 0.98 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 6/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -10.3689, 26.5744, -0.569451, 0.56 ) }
    dend_52 { pt3dadd( -10.6907, 26.7235, -1.64121, 0.56 ) }
    dend_52 { pt3dadd( -10.971, 26.8811, -2.61468, 0.42 ) }
    dend_52 { pt3dadd( -11.46, 27.1964, -4.47389, 0.28 ) }
    dend_52 { pt3dadd( -11.703, 27.3701, -5.45785, 0.14 ) }
    dend_52 { pt3dadd( -12.1708, 27.7289, -7.31389, 0.28 ) }
    dend_52 { pt3dadd( -12.415, 27.9324, -8.25406, 0.42 ) }
    dend_52 { pt3dadd( -12.6789, 28.1888, -9.28076, 0.56 ) }
    dend_52 { pt3dadd( -13.1522, 28.7456, -11.0665, 0.42 ) }
    dend_52 { pt3dadd( -13.4022, 29.1041, -11.9575, 0.56 ) }
    dend_52 { pt3dadd( -13.5538, 29.353, -12.4764, 0.84 ) }
    dend_52 { pt3dadd( -13.7081, 29.6279, -12.9124, 0.7 ) }
    dend_52 { pt3dadd( -13.8894, 29.932, -13.314, 0.56 ) }
    dend_52 { pt3dadd( -14.1042, 30.2482, -13.6926, 0.42 ) }
    dend_52 { pt3dadd( -14.5727, 30.8629, -14.3142, 0.56 ) }
    dend_52 { pt3dadd( -14.6994, 31.0125, -14.4946, 0.7 ) }
    dend_52 { pt3dadd( -14.9815, 31.2969, -14.9347, 1.12 ) }
    dend_52 { pt3dadd( -15.5338, 31.7268, -15.816, 0.98 ) }
    dend_52 { pt3dadd( -16.0281, 31.9851, -16.6799, 0.84 ) }
    dend_52 { pt3dadd( -16.3265, 32.0804, -17.1858, 0.7 ) }
    dend_52 { pt3dadd( -16.8442, 32.1734, -18.0275, 0.84 ) }
    dend_52 { pt3dadd( -17.0486, 32.1997, -18.3373, 0.56 ) }
    dend_52 { pt3dadd( -17.3833, 32.2132, -18.839, 0.42 ) }
    dend_52 { pt3dadd( -18.0489, 32.244, -19.7097, 0.56 ) }
    dend_52 { pt3dadd( -18.5482, 32.2994, -20.2762, 0.28 ) }
    dend_52 { pt3dadd( -19.2687, 32.4521, -20.9939, 0.14 ) }
    dend_52 { pt3dadd( -19.8359, 32.6448, -21.4492, 0.1 ) }
    dend_52 { pt3dadd( -20.615, 33.0301, -21.9987, 0.14 ) }
    dend_52 { pt3dadd( -21.0637, 33.3225, -22.2739, 0.28 ) }
    dend_52 { pt3dadd( -21.3495, 33.5293, -22.4164, 0.14 ) }
    dend_52 { pt3dadd( -21.7885, 33.874, -22.6229, 0.1 ) }
    dend_52 { pt3dadd( -22.0682, 34.1176, -22.7072, 0.14 ) }
    dend_52 { pt3dadd( -22.4423, 34.4907, -22.7941, 0.84 ) }
    dend_52 { pt3dadd( -22.6945, 34.7753, -22.7836, 0.98 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -0.00175463, 19.0178, 0.571215, 1.4 ) }
    dend_48 { pt3dadd( -0.00876063, 20.5122, 0.614892, 1.4 ) }
    dend_48 { pt3dadd( -0.07624, 21.2888, 0.536444, 1.4 ) }
    dend_48 { pt3dadd( -0.180961, 22.044, 0.300164, 1.26 ) }
    dend_48 { pt3dadd( -0.290886, 22.7014, 0.0498094, 1.12 ) }
    dend_48 { pt3dadd( -0.351306, 23.0249, -0.0764822, 0.98 ) }
    dend_48 { pt3dadd( -0.619437, 24.359, -0.579459, 0.84 ) }
    dend_48 { pt3dadd( -0.764862, 24.9754, -0.868651, 0.7 ) }
    dend_48 { pt3dadd( -1.09822, 26.2924, -1.48977, 0.56 ) }
    dend_48 { pt3dadd( -1.24741, 26.926, -1.7694, 0.56 ) }
    dend_48 { pt3dadd( -1.36524, 27.5833, -2.01603, 0.42 ) }
    dend_48 { pt3dadd( -1.43922, 28.2495, -2.20458, 0.56 ) }
    dend_48 { pt3dadd( -1.44819, 28.6012, -2.25863, 0.7 ) }
    dend_48 { pt3dadd( -1.41955, 29.3093, -2.32599, 0.56 ) }
    dend_48 { pt3dadd( -1.33641, 30.103, -2.34556, 0.56 ) }
    dend_48 { pt3dadd( -1.18522, 30.871, -2.31219, 0.7 ) }
    dend_48 { pt3dadd( -1.05735, 31.3621, -2.26541, 0.56 ) }
    dend_48 { pt3dadd( -0.831322, 32.1059, -2.1683, 0.56 ) }
    dend_48 { pt3dadd( -0.592586, 32.8589, -2.05316, 0.56 ) }
    dend_48 { pt3dadd( -0.434237, 33.3188, -1.97671, 0.42 ) }
    dend_48 { pt3dadd( 0.103586, 34.8326, -1.80198, 0.56 ) }
    dend_48 { pt3dadd( 0.364326, 35.5728, -1.76211, 0.7 ) }
    dend_48 { pt3dadd( 0.535898, 36.046, -1.77037, 0.56 ) }
    dend_48 { pt3dadd( 0.815396, 36.7746, -1.84046, 0.42 ) }
    dend_48 { pt3dadd( 1.09452, 37.4959, -2.03783, 0.28 ) }
    dend_48 { pt3dadd( 1.53058, 38.6355, -2.52349, 0.14 ) }
    dend_48 { pt3dadd( 1.77862, 39.2812, -2.89137, 0.56 ) }
    dend_48 { pt3dadd( 2.05256, 39.9451, -3.23451, 0.42 ) }
    dend_48 { pt3dadd( 2.23642, 40.369, -3.42195, 0.56 ) }
    dend_48 { pt3dadd( 2.89537, 41.7911, -3.78585, 0.7 ) }
    dend_48 { pt3dadd( 3.11333, 42.2445, -3.80507, 0.56 ) }
    dend_48 { pt3dadd( 3.32368, 42.6966, -3.73596, 0.42 ) }
    dend_48 { pt3dadd( 3.9099, 44.0255, -3.41069, 0.98 ) }
    dend_48 { pt3dadd( 4.0851, 44.4856, -3.30578, 0.98 ) }
    dend_48 { pt3dadd( 4.56936, 45.8606, -3.01155, 0.84 ) }
    dend_48 { pt3dadd( 4.71827, 46.344, -2.95057, 0.84 ) }
    dend_48 { pt3dadd( 4.91808, 47.1136, -2.98812, 0.98 ) }
    dend_48 { pt3dadd( 5.07704, 47.8744, -3.1041, 0.84 ) }
    dend_48 { pt3dadd( 5.33354, 49.3198, -3.38051, 0.7 ) }
    dend_48 { pt3dadd( 5.41204, 49.8044, -3.41654, 0.56 ) }
    dend_48 { pt3dadd( 5.65939, 51.2785, -3.38569, 0.7 ) }
    dend_48 { pt3dadd( 5.65939, 51.2785, -3.38569, 0.84 ) }
    dend_48 { pt3dadd( 5.96398, 52.5264, -2.71136, 0.84 ) }
    dend_48 { pt3dadd( 6.31634, 53.7054, -1.87407, 0.7 ) }
    dend_48 { pt3dadd( 6.66632, 54.6448, -1.02585, 0.56 ) }
    dend_48 { pt3dadd( 6.77605, 54.8898, -0.792083, 0.56 ) }
    dend_48 { pt3dadd( 7.07032, 55.4012, -0.257799, 0.98 ) }
    dend_48 { pt3dadd( 7.42124, 55.917, 0.219997, 0.84 ) }
    dend_48 { pt3dadd( 7.61453, 56.1538, 0.402383, 0.98 ) }
    dend_48 { pt3dadd( 8.46337, 57.0432, 0.975737, 0.42 ) }
    dend_48 { pt3dadd( 8.98427, 57.5698, 1.267, 0.56 ) }
    dend_48 { pt3dadd( 9.93971, 58.5759, 1.80804, 0.7 ) }
    dend_48 { pt3dadd( 10.4318, 59.1237, 2.08668, 0.56 ) }
    dend_48 { pt3dadd( 10.6363, 59.3932, 2.1974, 0.7 ) }
    dend_48 { pt3dadd( 10.9644, 60.0033, 2.36135, 0.84 ) }
    dend_48 { pt3dadd( 11.1675, 60.6654, 2.43342, 0.56 ) }
    dend_48 { pt3dadd( 11.2766, 61.3679, 2.47079, 0.42 ) }
    dend_48 { pt3dadd( 11.3112, 62.0755, 2.46072, 0.28 ) }
    dend_48 { pt3dadd( 11.3149, 62.8714, 2.45599, 0.42 ) }
    dend_48 { pt3dadd( 11.3077, 63.5652, 2.39868, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_48 { pt3dadd( 11.3045, 64.2694, 2.29401, 0.7 ) }
    dend_48 { pt3dadd( 11.3223, 64.6171, 2.21991, 0.56 ) }
    dend_48 { pt3dadd( 11.4046, 65.3849, 2.01757, 0.84 ) }
    dend_48 { pt3dadd( 11.537, 66.124, 1.79395, 0.84 ) }
    dend_48 { pt3dadd( 11.8652, 67.3807, 1.38113, 0.7 ) }
    dend_48 { pt3dadd( 12.1131, 68.0829, 1.13741, 0.56 ) }
    dend_48 { pt3dadd( 12.3906, 68.7898, 0.898998, 0.7 ) }
    dend_48 { pt3dadd( 12.5661, 69.237, 0.765767, 0.7 ) }
    dend_48 { pt3dadd( 12.8592, 69.9556, 0.589034, 0.84 ) }
    dend_48 { pt3dadd( 13.1462, 70.6648, 0.402841, 0.7 ) }
    dend_48 { pt3dadd( 13.2661, 70.9963, 0.353885, 0.56 ) }
    dend_48 { pt3dadd( 13.4674, 71.6789, 0.332541, 0.42 ) }
    dend_48 { pt3dadd( 13.6135, 72.4481, 0.400014, 0.28 ) }
    dend_48 { pt3dadd( 13.6781, 73.2283, 0.543588, 0.14 ) }
    dend_48 { pt3dadd( 13.6442, 74.543, 0.88519, 0.28 ) }
    dend_48 { pt3dadd( 13.5259, 75.9747, 1.31237, 0.1 ) }
    dend_48 { pt3dadd( 13.3983, 77.3488, 1.73445, 0.1 ) }
    dend_48 { pt3dadd( 13.348, 78.0277, 1.94271, 0.1 ) }
    dend_48 { pt3dadd( 13.3281, 78.3659, 2.04047, 0.14 ) }
    dend_48 { pt3dadd( 13.2989, 79.0537, 2.22193, 0.84 ) }
    dend_48 { pt3dadd( 13.2987, 79.832, 2.39881, 0.7 ) }
    dend_48 { pt3dadd( 13.3308, 80.6131, 2.45206, 0.7 ) }
    dend_48 { pt3dadd( 13.385, 81.4094, 2.4379, 0.56 ) }
    dend_48 { pt3dadd( 13.4494, 82.19, 2.4219, 0.56 ) }
    dend_48 { pt3dadd( 13.4805, 82.5446, 2.41428, 0.7 ) }
    dend_48 { pt3dadd( 13.5135, 82.8989, 2.40631, 0.84 ) }
    dend_48 { pt3dadd( 13.5571, 83.6059, 2.39457, 0.56 ) }
    dend_48 { pt3dadd( 13.591, 84.3885, 2.38426, 0.42 ) }
    dend_48 { pt3dadd( 13.6219, 85.0962, 2.37488, 0.56 ) }
    dend_48 { pt3dadd( 13.6651, 85.8909, 2.36278, 0.42 ) }
    dend_48 { pt3dadd( 13.7063, 86.6756, 2.35109, 0.28 ) }
    dend_48 { pt3dadd( 13.7293, 87.3871, 2.34318, 0.42 ) }
    dend_48 { pt3dadd( 13.746, 88.1851, 2.33599, 0.28 ) }
    dend_48 { pt3dadd( 13.7493, 88.6774, 2.33288, 0.42 ) }
    dend_48 { pt3dadd( 13.7402, 89.4756, 2.33053, 0.56 ) }
    dend_48 { pt3dadd( 13.7117, 90.187, 2.33223, 0.56 ) }
    dend_48 { pt3dadd( 13.6489, 90.8803, 2.34046, 0.42 ) }
    dend_48 { pt3dadd( 13.5509, 91.5853, 2.35518, 0.56 ) }
    dend_48 { pt3dadd( 13.3894, 92.3666, 2.3814, 0.7 ) }
    dend_48 { pt3dadd( 13.1997, 93.0523, 2.35524, 0.84 ) }
    dend_48 { pt3dadd( 13.1997, 93.0523, 2.35524, 0.7 ) }
    dend_48 { pt3dadd( 12.9582, 93.7924, 2.23788, 0.28 ) }
    dend_48 { pt3dadd( 12.7573, 94.4591, 2.10717, 0.14 ) }
    dend_48 { pt3dadd( 12.5707, 95.1187, 1.96642, 0.1 ) }
    dend_48 { pt3dadd( 12.187, 96.4598, 1.57394, 0.14 ) }
    dend_48 { pt3dadd( 12.0107, 97.1139, 1.35539, 0.28 ) }
    dend_48 { pt3dadd( 11.8343, 97.829, 1.04746, 0.42 ) }
    dend_48 { pt3dadd( 11.6876, 98.5339, 0.738434, 0.56 ) }
    dend_48 { pt3dadd( 11.5636, 99.1778, 0.47049, 0.56 ) }
    dend_48 { pt3dadd( 11.3184, 100.524, -0.0111024, 0.56 ) }
    dend_48 { pt3dadd( 11.1978, 101.2, -0.183999, 0.56 ) }
    dend_48 { pt3dadd( 10.9449, 102.458, -0.457756, 0.7 ) }
    dend_48 { pt3dadd( 10.6057, 103.826, -0.802629, 1.12 ) }
    dend_48 { pt3dadd( 10.406, 104.485, -0.968924, 0.98 ) }
    dend_48 { pt3dadd( 10.1877, 105.148, -1.11118, 0.84 ) }
    dend_48 { pt3dadd( 9.93969, 105.805, -1.19876, 0.7 ) }
    dend_48 { pt3dadd( 9.66629, 106.44, -1.28092, 0.56 ) }
    dend_48 { pt3dadd( 9.12282, 107.559, -1.50949, 0.42 ) }
    dend_48 { pt3dadd( 8.76066, 108.235, -1.75294, 0.28 ) }
    dend_48 { pt3dadd( 8.44248, 108.824, -1.94376, 0.14 ) }
    dend_48 { pt3dadd( 8.09206, 109.526, -2.12641, 0.1 ) }
    dend_48 { pt3dadd( 7.83378, 110.17, -2.17932, 0.1 ) }
    dend_48 { pt3dadd( 7.46755, 111.564, -2.03005, 0.14 ) }
    dend_48 { pt3dadd( 7.46755, 111.564, -2.03005, 0.28 ) }
    dend_48 { pt3dadd( 7.40317, 112.95, -1.60433, 0.28 ) }
    dend_48 { pt3dadd( 7.43057, 113.706, -1.34975, 0.42 ) }
    dend_48 { pt3dadd( 7.5813, 115.106, -0.872377, 0.56 ) }
    dend_48 { pt3dadd( 7.69192, 115.856, -0.623261, 0.56 ) }
    dend_48 { pt3dadd( 7.74404, 116.192, -0.516948, 0.7 ) }
    dend_48 { pt3dadd( 7.8511, 116.951, -0.352175, 0.7 ) }
    dend_48 { pt3dadd( 7.93934, 117.74, -0.271949, 0.56 ) }
    dend_48 { pt3dadd( 8.00071, 118.521, -0.284958, 0.42 ) }
    dend_48 { pt3dadd( 8.02773, 119.311, -0.393857, 0.28 ) }
    dend_48 { pt3dadd( 8.02587, 120.012, -0.517887, 0.42 ) }
    dend_48 { pt3dadd( 7.98334, 120.769, -0.725365, 0.28 ) }
    dend_48 { pt3dadd( 7.91391, 121.437, -0.961373, 0.14 ) }
    dend_48 { pt3dadd( 7.72646, 122.689, -1.46688, 0.1 ) }
    dend_48 { pt3dadd( 7.61944, 123.325, -1.73854, 0.1 ) }
    dend_48 { pt3dadd( 7.51509, 123.97, -2.01209, 0.14 ) }
    dend_48 { pt3dadd( 7.3158, 125.306, -2.54056, 0.28 ) }
    dend_48 { pt3dadd( 7.21726, 126.056, -2.79575, 0.14 ) }
    dend_48 { pt3dadd( 7.14493, 126.73, -2.97139, 0.28 ) }
    dend_48 { pt3dadd( 7.08253, 127.515, -3.09654, 0.42 ) }
    dend_48 { pt3dadd( 7.04149, 128.304, -3.19397, 0.42 ) }
    dend_48 { pt3dadd( 7.0267, 128.999, -3.24434, 0.28 ) }
    dend_48 { pt3dadd( 7.03506, 129.795, -3.24995, 0.42 ) }
    dend_48 { pt3dadd( 7.05125, 130.503, -3.25657, 0.56 ) }
    dend_48 { pt3dadd( 7.08922, 131.285, -3.26764, 0.56 ) }
    dend_48 { pt3dadd( 7.10521, 131.637, -3.27242, 0.7 ) }
    dend_48 { pt3dadd( 7.13459, 132.433, -3.28195, 0.56 ) }
    dend_48 { pt3dadd( 7.15408, 133.218, -3.28959, 0.42 ) }
    dend_48 { pt3dadd( 7.13762, 134.012, -3.34717, 0.56 ) }
    dend_48 { pt3dadd( 7.08746, 134.79, -3.44283, 0.7 ) }
    dend_48 { pt3dadd( 7.00614, 135.489, -3.5545, 0.84 ) }
    dend_48 { pt3dadd( 6.90598, 136.178, -3.68332, 0.7 ) }
    dend_48 { pt3dadd( 6.7785, 136.863, -3.83069, 0.84 ) }
    dend_48 { pt3dadd( 6.495, 138.246, -4.1551, 0.7 ) }
    dend_48 { pt3dadd( 6.36307, 138.926, -4.3189, 0.56 ) }
    dend_48 { pt3dadd( 6.31256, 139.266, -4.39979, 0.56 ) }
    dend_48 { pt3dadd( 6.28368, 140.031, -4.56613, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 6.28368, 140.031, -4.56613, 0.56 ) }
    dend_48 { pt3dadd( 6.38985, 140.822, -4.5873, 0.14 ) }
    dend_48 { pt3dadd( 6.53146, 141.587, -4.49231, 0.1 ) }
    dend_48 { pt3dadd( 6.61065, 142.075, -4.40219, 0.1 ) }
    dend_48 { pt3dadd( 6.71136, 143.047, -4.17874, 0.1 ) }
    dend_48 { pt3dadd( 6.72009, 143.391, -4.08724, 0.14 ) }
    dend_48 { pt3dadd( 6.62907, 144.809, -3.80596, 0.28 ) }
    dend_48 { pt3dadd( 6.5697, 145.157, -3.75882, 0.42 ) }
    dend_48 { pt3dadd( 6.35441, 145.914, -3.78205, 0.56 ) }
    dend_48 { pt3dadd( 6.11865, 146.561, -3.96144, 0.7 ) }
    dend_48 { pt3dadd( 5.87342, 147.165, -4.20777, 0.56 ) }
    dend_48 { pt3dadd( 5.41341, 148.394, -4.82626, 0.42 ) }
    dend_48 { pt3dadd( 5.22069, 148.975, -5.18295, 0.28 ) }
    dend_48 { pt3dadd( 4.8728, 150.174, -5.92121, 0.42 ) }
    dend_48 { pt3dadd( 4.59887, 151.323, -6.59681, 0.56 ) }
    dend_48 { pt3dadd( 4.32727, 152.599, -7.22747, 0.56 ) }
    dend_48 { pt3dadd( 4.15542, 153.301, -7.52897, 0.42 ) }
    dend_48 { pt3dadd( 4.06567, 153.633, -7.62355, 0.28 ) }
    dend_48 { pt3dadd( 3.83435, 154.366, -7.79031, 0.1 ) }
    dend_48 { pt3dadd( 3.60265, 155.033, -7.88654, 0.1 ) }
    dend_48 { pt3dadd( 3.34854, 155.687, -7.98046, 0.1 ) }
    dend_48 { pt3dadd( 2.75776, 157.017, -8.31892, 0.1 ) }
    dend_48 { pt3dadd( 2.44409, 157.63, -8.48579, 0.1 ) }
    dend_48 { pt3dadd( 2.11981, 158.229, -8.64465, 0.14 ) }
    dend_48 { pt3dadd( 1.80067, 158.843, -8.79861, 0.28 ) }
    dend_48 { pt3dadd( 1.63932, 159.145, -8.89527, 0.42 ) }
    dend_48 { pt3dadd( 1.33528, 159.741, -9.08766, 0.56 ) }
    dend_48 { pt3dadd( 1.02003, 160.439, -9.26864, 0.84 ) }
    dend_48 { pt3dadd( 0.745608, 161.06, -9.44104, 0.7 ) }
    dend_48 { pt3dadd( 0.477701, 161.694, -9.60758, 0.56 ) }
    dend_48 { pt3dadd( -0.0485143, 163.01, -9.9096, 0.42 ) }
    dend_48 { pt3dadd( -0.29695, 163.664, -10.0392, 0.28 ) }
    dend_48 { pt3dadd( -0.527069, 164.331, -10.1057, 0.14 ) }
    dend_48 { pt3dadd( -0.721603, 165.016, -10.114, 0.28 ) }
    dend_48 { pt3dadd( -0.874051, 165.693, -10.0584, 0.42 ) }
    dend_48 { pt3dadd( -0.980052, 166.387, -9.93963, 0.56 ) }
    dend_48 { pt3dadd( -1.01309, 166.727, -9.85372, 0.56 ) }
    dend_48 { pt3dadd( -1.07789, 168.133, -9.50049, 0.56 ) }
    dend_48 { pt3dadd( -1.07283, 168.91, -9.31913, 0.42 ) }
    dend_48 { pt3dadd( -1.03997, 169.686, -9.218, 0.56 ) }
    dend_48 { pt3dadd( -0.98574, 170.482, -9.18745, 0.42 ) }
    dend_48 { pt3dadd( -0.924848, 171.179, -9.1972, 0.28 ) }
    dend_48 { pt3dadd( -0.878183, 171.678, -9.24554, 0.14 ) }
    dend_48 { pt3dadd( -0.808997, 172.45, -9.43833, 0.14 ) }
    dend_48 { pt3dadd( -0.70211, 173.864, -9.88494, 0.28 ) }
    dend_48 { pt3dadd( -0.70211, 173.864, -9.88494, 0.42 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 46/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.00175463, 19.0178, 0.571215, 1.26 ) }
    dend_47 { pt3dadd( 0.677219, 19.4144, 0.283583, 1.26 ) }
    dend_47 { pt3dadd( 0.910725, 19.5305, 0.176336, 1.4 ) }
    dend_47 { pt3dadd( 1.25819, 19.7143, -0.0235115, 1.54 ) }
    dend_47 { pt3dadd( 1.56372, 19.8902, -0.205485, 1.4 ) }
    dend_47 { pt3dadd( 2.13434, 20.2249, -0.526866, 1.26 ) }
    dend_47 { pt3dadd( 2.75754, 20.6224, -0.861885, 1.12 ) }
    dend_47 { pt3dadd( 3.06099, 20.8156, -1.03382, 0.98 ) }
    dend_47 { pt3dadd( 3.7327, 21.2683, -1.42881, 0.84 ) }
    dend_47 { pt3dadd( 3.9393, 21.417, -1.55003, 0.7 ) }
    dend_47 { pt3dadd( 4.2202, 21.6517, -1.7031, 0.56 ) }
    dend_47 { pt3dadd( 4.5261, 21.9488, -1.83291, 0.7 ) }
    dend_47 { pt3dadd( 4.81434, 22.276, -1.92782, 0.56 ) }
    dend_47 { pt3dadd( 5.33063, 22.9125, -2.08257, 0.7 ) }
    dend_47 { pt3dadd( 5.45339, 23.067, -2.1105, 0.7 ) }
    dend_47 { pt3dadd( 5.7242, 23.4134, -2.18385, 0.1 ) }
    dend_47 { pt3dadd( 5.88457, 23.6318, -2.2353, 0.1 ) }
    dend_47 { pt3dadd( 6.21535, 24.0818, -2.33435, 0.1 ) }
    dend_47 { pt3dadd( 6.21535, 24.0818, -2.33435, 0.14 ) }
    dend_47 { pt3dadd( 6.44737, 24.5966, -2.27925, 0.1 ) }
    dend_47 { pt3dadd( 6.55725, 24.8481, -2.25318, 0.1 ) }
    dend_47 { pt3dadd( 6.67822, 25.1011, -2.22442, 0.1 ) }
    dend_47 { pt3dadd( 6.77173, 25.2758, -2.20215, 0.1 ) }
    dend_47 { pt3dadd( 7.0157, 25.6486, -2.21758, 0.7 ) }
    dend_47 { pt3dadd( 7.18208, 25.8666, -2.24632, 0.56 ) }
    dend_47 { pt3dadd( 7.55354, 26.2903, -2.31139, 0.42 ) }
    dend_47 { pt3dadd( 7.73876, 26.4924, -2.34148, 0.28 ) }
    dend_47 { pt3dadd( 8.04513, 26.8134, -2.38389, 0.42 ) }
    dend_47 { pt3dadd( 8.56424, 27.3303, -2.44279, 0.98 ) }
    dend_47 { pt3dadd( 8.90014, 27.6222, -2.46951, 0.84 ) }
    dend_47 { pt3dadd( 9.20671, 27.8736, -2.48386, 0.7 ) }
    dend_47 { pt3dadd( 9.42812, 28.0481, -2.48362, 0.56 ) }
    dend_47 { pt3dadd( 9.77175, 28.3236, -2.46074, 0.42 ) }
    dend_47 { pt3dadd( 10.1052, 28.6081, -2.41271, 0.28 ) }
    dend_47 { pt3dadd( 10.3944, 28.8736, -2.34329, 0.42 ) }
    dend_47 { pt3dadd( 10.5956, 29.0651, -2.29499, 0.28 ) }
    dend_47 { pt3dadd( 10.9102, 29.3647, -2.21948, 0.14 ) }
    dend_47 { pt3dadd( 11.2383, 29.6568, -2.14071, 0.28 ) }
    dend_47 { pt3dadd( 11.4487, 29.8374, -2.09016, 0.14 ) }
    dend_47 { pt3dadd( 11.7809, 30.1162, -2.01035, 0.1 ) }
    dend_47 { pt3dadd( 12.1156, 30.3996, -1.92997, 0.14 ) }
    dend_47 { pt3dadd( 12.416, 30.6485, -1.85779, 0.28 ) }
    dend_47 { pt3dadd( 12.7189, 30.8941, -1.785, 0.42 ) }
    dend_47 { pt3dadd( 13.0604, 31.1762, -1.73449, 0.28 ) }
    dend_47 { pt3dadd( 13.3973, 31.4605, -1.74623, 0.14 ) }
    dend_47 { pt3dadd( 13.6016, 31.6418, -1.81578, 0.1 ) }
    dend_47 { pt3dadd( 13.8741, 31.8882, -2.05977, 0.1 ) }
    dend_47 { pt3dadd( 13.9842, 31.9899, -2.1912, 0.14 ) }
    dend_47 { pt3dadd( 14.4137, 32.3951, -2.77963, 0.84 ) }
    dend_47 { pt3dadd( 14.798, 32.7549, -3.33057, 0.98 ) }
    dend_47 { pt3dadd( 15.1853, 33.1146, -3.87947, 0.84 ) }
    dend_47 { pt3dadd( 15.9323, 33.8106, -4.89836, 0.84 ) }
    dend_47 { pt3dadd( 16.1692, 34.0319, -5.20438, 0.7 ) }
    dend_47 { pt3dadd( 16.3252, 34.1766, -5.37974, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( 16.6192, 34.4328, -5.60622, 0.42 ) }
    dend_47 { pt3dadd( 16.9461, 34.7032, -5.72677, 0.28 ) }
    dend_47 { pt3dadd( 17.1718, 34.872, -5.72702, 0.14 ) }
    dend_47 { pt3dadd( 17.3377, 34.977, -5.70537, 0.28 ) }
    dend_47 { pt3dadd( 17.5124, 35.0726, -5.69691, 0.7 ) }
    dend_47 { pt3dadd( 17.8665, 35.2516, -5.69888, 0.56 ) }
    dend_47 { pt3dadd( 18.2168, 35.4267, -5.71357, 0.42 ) }
    dend_47 { pt3dadd( 18.5672, 35.6115, -5.73545, 0.28 ) }
    dend_47 { pt3dadd( 19.2669, 36.0109, -5.84086, 0.28 ) }
    dend_47 { pt3dadd( 19.4956, 36.1577, -5.88779, 0.56 ) }
    dend_47 { pt3dadd( 19.8485, 36.4056, -6.00041, 0.42 ) }
    dend_47 { pt3dadd( 20.1828, 36.662, -6.13049, 0.28 ) }
    dend_47 { pt3dadd( 20.3912, 36.8356, -6.21917, 0.42 ) }
    dend_47 { pt3dadd( 20.9865, 37.3651, -6.46596, 0.56 ) }
    dend_47 { pt3dadd( 21.2998, 37.6555, -6.57554, 0.56 ) }
    dend_47 { pt3dadd( 21.8946, 38.2086, -6.77598, 0.56 ) }
    dend_47 { pt3dadd( 22.2117, 38.4998, -6.87151, 0.56 ) }
    dend_47 { pt3dadd( 22.4127, 38.6914, -6.91993, 0.7 ) }
    dend_47 { pt3dadd( 22.7223, 39.0024, -6.96328, 0.56 ) }
    dend_47 { pt3dadd( 23.022, 39.3321, -6.98811, 0.42 ) }
    dend_47 { pt3dadd( 23.2036, 39.5469, -7.00637, 0.28 ) }
    dend_47 { pt3dadd( 23.4547, 39.8529, -7.05455, 0.28 ) }
    dend_47 { pt3dadd( 23.7298, 40.1825, -7.14552, 0.1 ) }
    dend_47 { pt3dadd( 23.9078, 40.3811, -7.23687, 0.1 ) }
    dend_47 { pt3dadd( 24.4693, 40.9883, -7.60019, 0.14 ) }
    dend_47 { pt3dadd( 24.6447, 41.1713, -7.72354, 0.28 ) }
    dend_47 { pt3dadd( 25.1814, 41.6926, -8.09217, 0.42 ) }
    dend_47 { pt3dadd( 25.4761, 41.9478, -8.29832, 0.28 ) }
    dend_47 { pt3dadd( 26.005, 42.3327, -8.63443, 0.28 ) }
    dend_47 { pt3dadd( 26.2222, 42.4693, -8.75139, 0.56 ) }
    dend_47 { pt3dadd( 26.5895, 42.6654, -8.89661, 0.42 ) }
    dend_47 { pt3dadd( 26.9364, 42.8283, -8.99901, 0.28 ) }
    dend_47 { pt3dadd( 27.6655, 43.1663, -9.11882, 0.14 ) }
    dend_47 { pt3dadd( 28.0216, 43.3378, -9.15326, 0.28 ) }
    dend_47 { pt3dadd( 28.3741, 43.5242, -9.15305, 0.14 ) }
    dend_47 { pt3dadd( 28.7124, 43.7179, -9.14301, 0.1 ) }
    dend_47 { pt3dadd( 29.0477, 43.9337, -9.1464, 0.14 ) }
    dend_47 { pt3dadd( 29.4965, 44.2703, -9.15639, 0.28 ) }
    dend_47 { pt3dadd( 29.7138, 44.4499, -9.15568, 0.14 ) }
    dend_47 { pt3dadd( 30.0455, 44.7401, -9.16939, 0.1 ) }
    dend_47 { pt3dadd( 30.2574, 44.9256, -9.18287, 0.1 ) }
    dend_47 { pt3dadd( 30.8881, 45.4698, -9.22454, 0.14 ) }
    dend_47 { pt3dadd( 31.2318, 45.7456, -9.24118, 0.28 ) }
    dend_47 { pt3dadd( 31.5541, 45.9802, -9.24534, 0.42 ) }
    dend_47 { pt3dadd( 31.9153, 46.2329, -9.23323, 0.56 ) }
    dend_47 { pt3dadd( 32.2431, 46.4547, -9.20544, 0.42 ) }
    dend_47 { pt3dadd( 32.6147, 46.6995, -9.1791, 0.28 ) }
    dend_47 { pt3dadd( 32.9433, 46.92, -9.15075, 0.14 ) }
    dend_47 { pt3dadd( 33.3106, 47.1717, -9.17292, 0.28 ) }
    dend_47 { pt3dadd( 33.6645, 47.4269, -9.23643, 0.42 ) }
    dend_47 { pt3dadd( 33.8177, 47.5473, -9.27894, 0.56 ) }
    dend_47 { pt3dadd( 34.4286, 48.0749, -9.4888, 0.7 ) }
    dend_47 { pt3dadd( 34.7433, 48.3588, -9.61017, 0.84 ) }
    dend_47 { pt3dadd( 35.2697, 48.868, -9.82544, 0.7 ) }
    dend_47 { pt3dadd( 35.5743, 49.1648, -9.942, 0.7 ) }
    dend_47 { pt3dadd( 35.8891, 49.4658, -10.0369, 0.56 ) }
    dend_47 { pt3dadd( 36.2124, 49.7612, -10.0889, 0.42 ) }
    dend_47 { pt3dadd( 36.3662, 49.8879, -10.0829, 0.28 ) }
    dend_47 { pt3dadd( 36.5924, 50.0532, -10.0516, 0.1 ) }
    dend_47 { pt3dadd( 36.9207, 50.2616, -9.9726, 0.1 ) }
    dend_47 { pt3dadd( 37.2623, 50.4457, -9.89031, 0.1 ) }
    dend_47 { pt3dadd( 37.6044, 50.6155, -9.77575, 0.1 ) }
    dend_47 { pt3dadd( 37.936, 50.7861, -9.64028, 0.14 ) }
    dend_47 { pt3dadd( 38.3009, 50.9802, -9.47317, 0.28 ) }
    dend_47 { pt3dadd( 38.6102, 51.1486, -9.2905, 0.28 ) }
    dend_47 { pt3dadd( 38.9065, 51.3172, -9.0838, 0.28 ) }
    dend_47 { pt3dadd( 39.5087, 51.6631, -8.62184, 0.28 ) }
    dend_47 { pt3dadd( 39.8213, 51.8467, -8.37079, 0.42 ) }
    dend_47 { pt3dadd( 40.1, 52.0168, -8.14202, 0.28 ) }
    dend_47 { pt3dadd( 40.6665, 52.3734, -7.68904, 0.14 ) }
    dend_47 { pt3dadd( 40.9481, 52.5641, -7.481, 0.1 ) }
    dend_47 { pt3dadd( 41.2353, 52.7698, -7.30027, 0.14 ) }
    dend_47 { pt3dadd( 41.5646, 53.0165, -7.14169, 0.28 ) }
    dend_47 { pt3dadd( 41.772, 53.1863, -7.05423, 0.42 ) }
    dend_47 { pt3dadd( 42.0926, 53.4769, -6.94531, 0.28 ) }
    dend_47 { pt3dadd( 42.4147, 53.7819, -6.90112, 0.28 ) }
    dend_47 { pt3dadd( 42.7311, 54.0885, -6.88308, 0.42 ) }
    dend_47 { pt3dadd( 42.9371, 54.281, -6.8835, 0.56 ) }
    dend_47 { pt3dadd( 43.2661, 54.5742, -6.89856, 0.7 ) }
    dend_47 { pt3dadd( 43.6013, 54.8598, -6.92148, 0.7 ) }
    dend_47 { pt3dadd( 44.2429, 55.3942, -6.97302, 0.84 ) }
    dend_47 { pt3dadd( 44.3953, 55.5193, -6.98372, 0.98 ) }
    dend_47 { pt3dadd( 44.7038, 55.7717, -6.99583, 0.7 ) }
    dend_47 { pt3dadd( 44.9248, 55.9468, -6.99342, 0.56 ) }
    dend_47 { pt3dadd( 45.2744, 56.2142, -6.96766, 0.42 ) }
    dend_47 { pt3dadd( 45.6282, 56.4719, -6.91379, 0.28 ) }
    dend_47 { pt3dadd( 45.9792, 56.7293, -6.79589, 0.14 ) }
    dend_47 { pt3dadd( 46.3142, 56.981, -6.65855, 0.1 ) }
    dend_47 { pt3dadd( 46.6113, 57.2033, -6.51799, 0.14 ) }
    dend_47 { pt3dadd( 46.8986, 57.4227, -6.36657, 0.28 ) }
    dend_47 { pt3dadd( 47.1788, 57.6508, -6.20255, 0.42 ) }
    dend_47 { pt3dadd( 47.7697, 58.1591, -5.89864, 0.56 ) }
    dend_47 { pt3dadd( 47.9637, 58.3421, -5.81588, 0.56 ) }
    dend_47 { pt3dadd( 48.0978, 58.4787, -5.79508, 0.56 ) }
    dend_47 { pt3dadd( 48.4015, 58.7959, -5.82497, 0.56 ) }
    dend_47 { pt3dadd( 48.5944, 58.9945, -5.87805, 0.42 ) }
    dend_47 { pt3dadd( 49.1782, 59.5497, -6.09373, 0.28 ) }
    dend_47 { pt3dadd( 49.3818, 59.7263, -6.17662, 0.14 ) }
    dend_47 { pt3dadd( 50.017, 60.2264, -6.39255, 0.1 ) }
    dend_47 { pt3dadd( 50.3295, 60.4489, -6.47317, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 50.7018, 60.6777, -6.5318, 0.14 ) }
    dend_47 { pt3dadd( 51.0493, 60.873, -6.52161, 0.28 ) }
    dend_47 { pt3dadd( 51.4325, 61.0705, -6.42867, 0.42 ) }
    dend_47 { pt3dadd( 51.7738, 61.2304, -6.3048, 0.56 ) }
    dend_47 { pt3dadd( 52.1045, 61.383, -6.14262, 0.42 ) }
    dend_47 { pt3dadd( 52.4385, 61.5399, -5.99694, 0.28 ) }
    dend_47 { pt3dadd( 53.1311, 61.8759, -5.73693, 0.14 ) }
    dend_47 { pt3dadd( 53.4761, 62.0573, -5.66275, 0.28 ) }
    dend_47 { pt3dadd( 53.8151, 62.2528, -5.64116, 0.42 ) }
    dend_47 { pt3dadd( 54.0479, 62.4061, -5.65857, 0.56 ) }
    dend_47 { pt3dadd( 54.7149, 62.8958, -5.78178, 0.42 ) }
    dend_47 { pt3dadd( 55.052, 63.1536, -5.90146, 0.28 ) }
    dend_47 { pt3dadd( 55.6621, 63.6394, -6.19717, 0.14 ) }
    dend_47 { pt3dadd( 55.8634, 63.8078, -6.30003, 0.1 ) }
    dend_47 { pt3dadd( 56.1771, 64.078, -6.45186, 0.1 ) }
    dend_47 { pt3dadd( 56.5, 64.3574, -6.57987, 0.1 ) }
    dend_47 { pt3dadd( 57.0339, 64.8415, -6.72419, 0.14 ) }
    dend_47 { pt3dadd( 57.238, 65.0273, -6.78169, 0.1 ) }
    dend_47 { pt3dadd( 57.5527, 65.3338, -6.85984, 0.1 ) }
    dend_47 { pt3dadd( 57.8618, 65.6446, -6.94106, 0.1 ) }
    dend_47 { pt3dadd( 58.1576, 65.9538, -7.04731, 0.1 ) }
    dend_47 { pt3dadd( 58.337, 66.1583, -7.12134, 0.14 ) }
    dend_47 { pt3dadd( 58.85, 66.7838, -7.32447, 0.28 ) }
    dend_47 { pt3dadd( 59.1118, 67.1161, -7.46919, 0.14 ) }
    dend_47 { pt3dadd( 59.3554, 67.444, -7.63519, 0.1 ) }
    dend_47 { pt3dadd( 59.7497, 68.0208, -7.9393, 0.1 ) }
    dend_47 { pt3dadd( 59.9696, 68.3492, -8.13, 0.1 ) }
    dend_47 { pt3dadd( 60.1863, 68.6879, -8.32346, 0.1 ) }
    dend_47 { pt3dadd( 60.5801, 69.3423, -8.66487, 0.14 ) }
    dend_47 { pt3dadd( 60.7129, 69.5583, -8.78823, 0.28 ) }
    dend_47 { pt3dadd( 60.9165, 69.8974, -8.98123, 0.42 ) }
    dend_47 { pt3dadd( 61.3095, 70.5579, -9.31173, 0.28 ) }
    dend_47 { pt3dadd( 61.5195, 70.9047, -9.47949, 0.14 ) }
    dend_47 { pt3dadd( 61.6596, 71.1218, -9.59229, 0.1 ) }
    dend_47 { pt3dadd( 62.1298, 71.8141, -9.93238, 0.14 ) }
    dend_47 { pt3dadd( 62.2797, 72.0274, -10.0398, 0.28 ) }
    dend_47 { pt3dadd( 62.5782, 72.4533, -10.241, 0.42 ) }
    dend_47 { pt3dadd( 62.7315, 72.6788, -10.3252, 0.56 ) }
    dend_47 { pt3dadd( 63.141, 73.2884, -10.5247, 0.56 ) }
    dend_47 { pt3dadd( 63.3748, 73.6583, -10.6162, 0.84 ) }
    dend_47 { pt3dadd( 63.5259, 73.8907, -10.6677, 0.7 ) }
    dend_47 { pt3dadd( 63.7779, 74.2389, -10.756, 0.56 ) }
    dend_47 { pt3dadd( 64.057, 74.5764, -10.8418, 0.42 ) }
    dend_47 { pt3dadd( 64.3547, 74.9008, -10.9113, 0.56 ) }
    dend_47 { pt3dadd( 64.5563, 75.0963, -10.9366, 0.7 ) }
    dend_47 { pt3dadd( 65.2041, 75.5807, -11.0013, 0.7 ) }
    dend_47 { pt3dadd( 65.5449, 75.7828, -11.0228, 0.7 ) }
    dend_47 { pt3dadd( 65.907, 75.9497, -11.0288, 0.84 ) }
    dend_47 { pt3dadd( 66.092, 76.0232, -11.0386, 1.26 ) }
    dend_47 { pt3dadd( 66.4595, 76.152, -11.0582, 1.12 ) }
    dend_47 { pt3dadd( 66.8337, 76.2891, -11.0713, 0.98 ) }
    dend_47 { pt3dadd( 67.1991, 76.4436, -11.0695, 0.84 ) }
    dend_47 { pt3dadd( 67.5598, 76.6088, -11.0743, 0.7 ) }
    dend_47 { pt3dadd( 68.307, 76.9849, -11.0871, 0.56 ) }
    dend_47 { pt3dadd( 68.6539, 77.1774, -11.0897, 0.42 ) }
    dend_47 { pt3dadd( 69.0365, 77.4063, -11.0881, 0.28 ) }
    dend_47 { pt3dadd( 69.4118, 77.6376, -11.0796, 0.14 ) }
    dend_47 { pt3dadd( 69.7411, 77.8581, -11.0603, 0.1 ) }
    dend_47 { pt3dadd( 70.1019, 78.1195, -11.0464, 0.1 ) }
    dend_47 { pt3dadd( 70.444, 78.3969, -11.0687, 0.14 ) }
    dend_47 { pt3dadd( 70.5866, 78.5293, -11.1123, 0.28 ) }
    dend_47 { pt3dadd( 70.7148, 78.6665, -11.179, 0.42 ) }
    dend_47 { pt3dadd( 70.9685, 78.9795, -11.3528, 0.7 ) }
    dend_47 { pt3dadd( 71.3652, 79.5271, -11.7043, 0.56 ) }
    dend_47 { pt3dadd( 71.777, 80.1332, -12.1094, 0.56 ) }
    dend_47 { pt3dadd( 71.9143, 80.3336, -12.2398, 0.42 ) }
    dend_47 { pt3dadd( 72.2063, 80.7477, -12.4807, 0.28 ) }
    dend_47 { pt3dadd( 72.3629, 80.9586, -12.5833, 0.14 ) }
    dend_47 { pt3dadd( 72.9032, 81.6335, -12.8375, 0.1 ) }
    dend_47 { pt3dadd( 73.0823, 81.8473, -12.8793, 0.1 ) }
    dend_47 { pt3dadd( 73.3424, 82.1462, -12.8993, 0.1 ) }
    dend_47 { pt3dadd( 73.6365, 82.4811, -12.9073, 0.1 ) }
    dend_47 { pt3dadd( 73.9294, 82.8105, -12.8949, 0.1 ) }
    dend_47 { pt3dadd( 74.1178, 83.0234, -12.8702, 0.14 ) }
    dend_47 { pt3dadd( 74.4078, 83.3534, -12.8317, 0.28 ) }
    dend_47 { pt3dadd( 74.7748, 83.7728, -12.8143, 0.14 ) }
    dend_47 { pt3dadd( 74.9619, 83.9838, -12.8176, 0.1 ) }
    dend_47 { pt3dadd( 75.2627, 84.3057, -12.8351, 0.14 ) }
    dend_47 { pt3dadd( 75.5793, 84.626, -12.8587, 0.1 ) }
    dend_47 { pt3dadd( 76.1285, 85.1496, -12.8965, 0.1 ) }
    dend_47 { pt3dadd( 76.4604, 85.4466, -12.9165, 0.1 ) }
    dend_47 { pt3dadd( 76.7667, 85.6985, -12.9284, 0.1 ) }
    dend_47 { pt3dadd( 77.111, 85.974, -12.9301, 0.1 ) }
    dend_47 { pt3dadd( 77.4587, 86.2523, -12.9128, 0.1 ) }
    dend_47 { pt3dadd( 77.7989, 86.5293, -12.8674, 0.14 ) }
    dend_47 { pt3dadd( 77.9489, 86.6556, -12.8313, 0.28 ) }
    dend_47 { pt3dadd( 78.0954, 86.786, -12.7962, 0.42 ) }
    dend_47 { pt3dadd( 78.2922, 86.9734, -12.7489, 0.56 ) }
    dend_47 { pt3dadd( 78.6044, 87.2893, -12.7122, 0.42 ) }
    dend_47 { pt3dadd( 78.9033, 87.6136, -12.7077, 0.28 ) }
    dend_47 { pt3dadd( 79.1867, 87.9509, -12.7258, 0.14 ) }
    dend_47 { pt3dadd( 79.3574, 88.1788, -12.7462, 0.1 ) }
    dend_47 { pt3dadd( 79.6053, 88.5412, -12.7866, 0.1 ) }
    dend_47 { pt3dadd( 80.042, 89.2492, -12.8749, 0.1 ) }
    dend_47 { pt3dadd( 80.1701, 89.4914, -12.9062, 0.1 ) }
    dend_47 { pt3dadd( 80.4185, 89.9921, -13.0034, 0.1 ) }
    dend_47 { pt3dadd( 80.613, 90.3756, -13.0909, 0.1 ) }
    dend_47 { pt3dadd( 80.7483, 90.6165, -13.1471, 0.1 ) }
    dend_47 { pt3dadd( 80.9783, 90.9758, -13.2552, 0.1 ) }
    dend_47 { pt3dadd( 81.2374, 91.3073, -13.4024, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( 81.686, 91.7661, -13.7618, 0.1 ) }
    dend_47 { pt3dadd( 81.9292, 91.9621, -14.0065, 0.1 ) }
    dend_47 { pt3dadd( 82.1772, 92.1345, -14.2668, 0.1 ) }
    dend_47 { pt3dadd( 82.6632, 92.436, -14.7669, 0.1 ) }
    dend_47 { pt3dadd( 83.1684, 92.7255, -15.2585, 0.14 ) }
    dend_47 { pt3dadd( 83.7455, 93.0425, -15.7704, 0.1 ) }
    dend_47 { pt3dadd( 84.2793, 93.3576, -16.1662, 0.1 ) }
    dend_47 { pt3dadd( 84.618, 93.5638, -16.3709, 0.1 ) }
    dend_47 { pt3dadd( 84.9412, 93.7634, -16.4673, 0.1 ) }
    dend_47 { pt3dadd( 85.3129, 93.9884, -16.3922, 0.1 ) }
    dend_47 { pt3dadd( 85.6189, 94.1768, -16.2193, 0.1 ) }
    dend_47 { pt3dadd( 86.2097, 94.5406, -15.7565, 0.1 ) }
    dend_47 { pt3dadd( 86.4812, 94.705, -15.5184, 0.1 ) }
    dend_47 { pt3dadd( 87.0482, 95.0244, -15.0319, 0.1 ) }
    dend_47 { pt3dadd( 87.1881, 95.1003, -14.9151, 0.1 ) }
    dend_47 { pt3dadd( 87.5074, 95.2646, -14.6509, 0.1 ) }
    dend_47 { pt3dadd( 87.8009, 95.4117, -14.4281, 0.1 ) }
    dend_47 { pt3dadd( 88.1256, 95.5576, -14.2486, 0.1 ) }
    dend_47 { pt3dadd( 88.4585, 95.7085, -14.0941, 0.1 ) }
    dend_47 { pt3dadd( 88.4585, 95.7085, -14.0941, 0.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.29405, -62.4881, 6.92949, 0.98 ) }
    dend_16 { pt3dadd( 4.53002, -62.935, 6.91774, 0.98 ) }
    dend_16 { pt3dadd( 4.77868, -63.4464, 6.90546, 0.84 ) }
    dend_16 { pt3dadd( 4.9902, -63.915, 6.8951, 0.98 ) }
    dend_16 { pt3dadd( 5.21157, -64.4389, 6.88435, 1.12 ) }
    dend_16 { pt3dadd( 5.30713, -64.6775, 6.87974, 1.68 ) }
    dend_16 { pt3dadd( 5.48995, -65.1554, 6.87098, 1.54 ) }
    dend_16 { pt3dadd( 5.64976, -65.6415, 6.8635, 1.4 ) }
    dend_16 { pt3dadd( 5.78554, -66.1375, 6.85736, 1.26 ) }
    dend_16 { pt3dadd( 5.90652, -66.6347, 6.85203, 1.12 ) }
    dend_16 { pt3dadd( 6.00647, -67.1381, 6.88482, 1.26 ) }
    dend_16 { pt3dadd( 6.09605, -67.6294, 6.94482, 1.12 ) }
    dend_16 { pt3dadd( 6.19223, -68.1801, 7.07917, 0.98 ) }
    dend_16 { pt3dadd( 6.27492, -68.6589, 7.23991, 0.84 ) }
    dend_16 { pt3dadd( 6.35544, -69.1286, 7.43322, 0.7 ) }
    dend_16 { pt3dadd( 6.52324, -70.0881, 7.88842, 0.84 ) }
    dend_16 { pt3dadd( 6.60715, -70.5392, 8.12058, 0.84 ) }
    dend_16 { pt3dadd( 6.79538, -71.4723, 8.55597, 0.7 ) }
    dend_16 { pt3dadd( 6.90283, -71.9404, 8.73277, 0.84 ) }
    dend_16 { pt3dadd( 6.90283, -71.9404, 8.73277, 0.98 ) }
    dend_16 { pt3dadd( 6.9743, -72.1781, 8.74203, 1.12 ) }
    dend_16 { pt3dadd( 7.13981, -72.6643, 8.71632, 0.98 ) }
    dend_16 { pt3dadd( 7.48468, -73.6512, 8.66276, 0.84 ) }
    dend_16 { pt3dadd( 7.65446, -74.1329, 8.63021, 0.7 ) }
    dend_16 { pt3dadd( 7.85747, -74.6708, 8.62655, 0.56 ) }
    dend_16 { pt3dadd( 8.04221, -75.1478, 8.61036, 0.7 ) }
    dend_16 { pt3dadd( 8.41325, -76.1069, 8.40862, 0.84 ) }
    dend_16 { pt3dadd( 8.59388, -76.5691, 8.28362, 0.98 ) }
    dend_16 { pt3dadd( 8.77545, -77.0319, 8.1922, 0.84 ) }
    dend_16 { pt3dadd( 8.97923, -77.566, 8.12495, 0.98 ) }
    dend_16 { pt3dadd( 9.29622, -78.4565, 8.08008, 1.12 ) }
    dend_16 { pt3dadd( 9.9082, -80.1957, 8.10352, 0.98 ) }
    dend_16 { pt3dadd( 10.2197, -81.0904, 8.05555, 0.84 ) }
    dend_16 { pt3dadd( 10.5573, -82.0647, 8.23556, 0.84 ) }
    dend_16 { pt3dadd( 10.8397, -82.8939, 8.8108, 0.98 ) }
    dend_16 { pt3dadd( 10.9546, -83.2363, 9.1734, 0.84 ) }
    dend_16 { pt3dadd( 11.0664, -83.5634, 9.55417, 0.98 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.29405, -62.4881, 6.92949, 1.82 ) }
    dend_15 { pt3dadd( 3.64378, -63.4919, 7.55319, 1.82 ) }
    dend_15 { pt3dadd( 3.32716, -64.0374, 7.88596, 1.68 ) }
    dend_15 { pt3dadd( 3.14794, -64.3743, 8.13559, 1.54 ) }
    dend_15 { pt3dadd( 2.81954, -65.0528, 8.64083, 1.4 ) }
    dend_15 { pt3dadd( 2.70117, -65.2962, 8.81604, 1.26 ) }
    dend_15 { pt3dadd( 2.16778, -66.3104, 9.52768, 0.1 ) }
    dend_15 { pt3dadd( 1.87441, -66.8645, 9.88356, 0.1 ) }
    dend_15 { pt3dadd( 1.3373, -67.7919, 10.4962, 0.1 ) }
    dend_15 { pt3dadd( 1.00737, -68.3173, 10.8407, 0.14 ) }
    dend_15 { pt3dadd( 0.632563, -68.8305, 11.1644, 0.28 ) }
    dend_15 { pt3dadd( 0.234644, -69.2765, 11.4063, 0.42 ) }
    dend_15 { pt3dadd( -0.0863895, -69.5793, 11.5211, 0.28 ) }
    dend_15 { pt3dadd( -0.583249, -69.9662, 11.6442, 0.14 ) }
    dend_15 { pt3dadd( -0.844722, -70.1453, 11.7034, 0.28 ) }
    dend_15 { pt3dadd( -1.33684, -70.4684, 11.9586, 0.56 ) }
    dend_15 { pt3dadd( -1.75103, -70.8041, 12.3214, 0.56 ) }
    dend_15 { pt3dadd( -1.75103, -70.8041, 12.3214, 0.56 ) }
    dend_15 { pt3dadd( -1.75103, -70.8041, 12.3214, 0.56 ) }
    dend_15 { pt3dadd( -2.25122, -71.5289, 13.3431, 0.56 ) }
    dend_15 { pt3dadd( -2.67631, -72.2195, 14.2711, 0.42 ) }
    dend_15 { pt3dadd( -2.89199, -72.6554, 14.7909, 0.28 ) }
    dend_15 { pt3dadd( -3.27285, -73.5704, 15.7119, 0.42 ) }
    dend_15 { pt3dadd( -3.3994, -73.9042, 15.9791, 0.28 ) }
    dend_15 { pt3dadd( -3.48794, -74.1699, 16.1389, 0.42 ) }
    dend_15 { pt3dadd( -3.60661, -74.5881, 16.2938, 0.7 ) }
    dend_15 { pt3dadd( -3.76477, -75.2518, 16.4891, 0.56 ) }
    dend_15 { pt3dadd( -3.87681, -75.9382, 16.6869, 0.42 ) }
    dend_15 { pt3dadd( -3.9078, -76.6073, 16.9213, 0.28 ) }
    dend_15 { pt3dadd( -3.89421, -76.899, 17.058, 0.14 ) }
    dend_15 { pt3dadd( -3.89421, -76.899, 17.058, 0.28 ) }
    dend_15 { pt3dadd( -3.68753, -77.9192, 17.6318, 0.1 ) }
    dend_15 { pt3dadd( -3.52858, -78.464, 17.9379, 0.14 ) }
    dend_15 { pt3dadd( -3.13864, -79.5687, 18.5297, 0.1 ) }
    dend_15 { pt3dadd( -2.91557, -80.1169, 18.7857, 0.1 ) }
    dend_15 { pt3dadd( -2.67946, -80.6772, 18.9909, 0.1 ) }
    dend_15 { pt3dadd( -2.42631, -81.2415, 19.1299, 0.1 ) }
    dend_15 { pt3dadd( -2.1229, -81.8926, 19.1986, 0.1 ) }
    dend_15 { pt3dadd( -1.97766, -82.1803, 19.2083, 0.28 ) }
    dend_15 { pt3dadd( -1.6473, -82.8116, 19.1763, 0.14 ) }
    dend_15 { pt3dadd( -1.34139, -83.3622, 19.1466, 0.1 ) }
    dend_15 { pt3dadd( -0.983541, -83.9968, 19.1118, 0.1 ) }
    dend_15 { pt3dadd( -0.670368, -84.5434, 19.0812, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( -0.310961, -85.1721, 18.9947, 0.14 ) }
    dend_15 { pt3dadd( -0.0112667, -85.7166, 18.888, 0.1 ) }
    dend_15 { pt3dadd( 0.296119, -86.3424, 18.7381, 0.14 ) }
    dend_15 { pt3dadd( 0.548754, -86.9151, 18.5829, 0.1 ) }
    dend_15 { pt3dadd( 0.779924, -87.5643, 18.3997, 0.1 ) }
    dend_15 { pt3dadd( 1.14625, -88.823, 18.0468, 0.1 ) }
    dend_15 { pt3dadd( 1.24207, -89.2499, 17.9348, 0.28 ) }
    dend_15 { pt3dadd( 1.36629, -89.9385, 17.7614, 0.14 ) }
    dend_15 { pt3dadd( 1.4436, -90.5586, 17.6157, 0.1 ) }
    dend_15 { pt3dadd( 1.50599, -91.2526, 17.481, 0.1 ) }
    dend_15 { pt3dadd( 1.53974, -91.8889, 17.4055, 0.1 ) }
    dend_15 { pt3dadd( 1.58367, -92.5323, 17.4041, 0.14 ) }
    dend_15 { pt3dadd( 1.62894, -92.8515, 17.4009, 0.28 ) }
    dend_15 { pt3dadd( 1.69326, -93.1674, 17.3956, 0.28 ) }
    dend_15 { pt3dadd( 1.84149, -93.7948, 17.383, 0.42 ) }
    dend_15 { pt3dadd( 1.92459, -94.1031, 17.3757, 0.42 ) }
    dend_15 { pt3dadd( 2.08947, -94.7149, 17.3613, 0.28 ) }
    dend_15 { pt3dadd( 2.24014, -95.3385, 17.3484, 0.14 ) }
    dend_15 { pt3dadd( 2.38262, -95.9673, 17.3364, 0.1 ) }
    dend_15 { pt3dadd( 2.50572, -96.597, 17.3265, 0.14 ) }
    dend_15 { pt3dadd( 2.61457, -97.2325, 17.3181, 0.1 ) }
    dend_15 { pt3dadd( 2.69619, -97.867, 17.2677, 0.1 ) }
    dend_15 { pt3dadd( 2.76348, -98.5672, 17.1743, 0.1 ) }
    dend_15 { pt3dadd( 2.81147, -99.1975, 17.064, 0.1 ) }
    dend_15 { pt3dadd( 2.85959, -99.9046, 16.9192, 0.1 ) }
    dend_15 { pt3dadd( 2.89496, -100.529, 16.8176, 0.1 ) }
    dend_15 { pt3dadd( 2.94881, -101.874, 16.6646, 0.1 ) }
    dend_15 { pt3dadd( 2.96344, -102.517, 16.6262, 0.1 ) }
    dend_15 { pt3dadd( 2.96763, -103.159, 16.6247, 0.1 ) }
    dend_15 { pt3dadd( 2.95111, -103.791, 16.6608, 0.14 ) }
    dend_15 { pt3dadd( 2.90313, -105.015, 16.8016, 0.1 ) }
    dend_15 { pt3dadd( 2.86837, -105.727, 16.9237, 0.1 ) }
    dend_15 { pt3dadd( 2.83271, -106.405, 17.1296, 0.14 ) }
    dend_15 { pt3dadd( 2.78958, -107.089, 17.3601, 0.1 ) }
    dend_15 { pt3dadd( 2.75006, -107.742, 17.6359, 0.1 ) }
    dend_15 { pt3dadd( 2.74017, -108.032, 17.7687, 0.14 ) }
    dend_15 { pt3dadd( 2.75014, -108.621, 18.0297, 0.28 ) }
    dend_15 { pt3dadd( 2.8222, -109.724, 18.5754, 0.1 ) }
    dend_15 { pt3dadd( 2.87999, -110.277, 18.8736, 0.1 ) }
    dend_15 { pt3dadd( 3.04838, -111.453, 19.5211, 0.1 ) }
    dend_15 { pt3dadd( 3.14567, -112.016, 19.8127, 0.1 ) }
    dend_15 { pt3dadd( 3.25019, -112.59, 20.0803, 0.1 ) }
    dend_15 { pt3dadd( 3.31001, -112.877, 20.2132, 0.14 ) }
    dend_15 { pt3dadd( 3.31001, -112.877, 20.2132, 0.28 ) }
    dend_15 { pt3dadd( 3.46914, -113.427, 20.4853, 0.28 ) }
    dend_15 { pt3dadd( 3.64807, -113.971, 20.7752, 0.28 ) }
    dend_15 { pt3dadd( 3.64807, -113.971, 20.7752, 0.42 ) }
    dend_15 { pt3dadd( 4.02374, -114.899, 21.4168, 0.1 ) }
    dend_15 { pt3dadd( 4.22693, -115.389, 21.7784, 0.1 ) }
    dend_15 { pt3dadd( 4.64471, -116.369, 22.5471, 0.1 ) }
    dend_15 { pt3dadd( 4.84975, -116.827, 22.9478, 0.1 ) }
    dend_15 { pt3dadd( 4.99788, -117.143, 23.2406, 0.1 ) }
    dend_15 { pt3dadd( 4.99788, -117.143, 23.2406, 0.1 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.610016, -34.6559, 0.766578, 0.56 ) }
    dend_5 { pt3dadd( -0.983313, -34.9455, 0.402408, 0.56 ) }
    dend_5 { pt3dadd( -1.41869, -35.2584, 2.74062E-4, 0.42 ) }
    dend_5 { pt3dadd( -1.86035, -35.5455, -0.402295, 0.28 ) }
    dend_5 { pt3dadd( -2.72176, -36.034, -1.17159, 0.7 ) }
    dend_5 { pt3dadd( -3.52309, -36.355, -1.92482, 0.84 ) }
    dend_5 { pt3dadd( -4.31591, -36.4426, -2.74721, 0.98 ) }
    dend_5 { pt3dadd( -5.0135, -36.2512, -3.73158, 1.12 ) }
    dend_5 { pt3dadd( -5.3657, -36.0633, -4.27236, 1.26 ) }
    dend_5 { pt3dadd( -5.68065, -35.8527, -4.73692, 1.12 ) }
    dend_5 { pt3dadd( -6.31375, -35.4095, -5.5278, 0.98 ) }
    dend_5 { pt3dadd( -7.10448, -34.9958, -6.40871, 0.84 ) }
    dend_5 { pt3dadd( -7.79715, -34.7408, -7.17556, 0.7 ) }
    dend_5 { pt3dadd( -8.1965, -34.6451, -7.61226, 0.56 ) }
    dend_5 { pt3dadd( -8.60378, -34.5791, -8.04308, 0.56 ) }
    dend_5 { pt3dadd( -9.00485, -34.5068, -8.46869, 0.56 ) }
    dend_5 { pt3dadd( -9.75784, -34.2975, -9.30437, 0.7 ) }
    dend_5 { pt3dadd( -9.92948, -34.2292, -9.53679, 0.84 ) }
    dend_5 { pt3dadd( -10.3072, -34.0432, -10.0591, 1.26 ) }
    dend_5 { pt3dadd( -10.9741, -33.6944, -11.015, 1.12 ) }
    dend_5 { pt3dadd( -11.6599, -33.3167, -11.9999, 0.98 ) }
    dend_5 { pt3dadd( -12.2683, -32.9741, -12.8538, 1.12 ) }
    dend_5 { pt3dadd( -12.911, -32.6474, -13.6368, 0.98 ) }
    dend_5 { pt3dadd( -13.7091, -32.3713, -14.5105, 0.84 ) }
    dend_5 { pt3dadd( -14.3276, -32.6036, -14.6273, 0.7 ) }
    dend_5 { pt3dadd( -15.4162, -33.2272, -14.5377, 0.56 ) }
    dend_5 { pt3dadd( -15.7844, -33.4148, -14.5709, 0.42 ) }
    dend_5 { pt3dadd( -16.3196, -33.5031, -14.9645, 0.56 ) }
    dend_5 { pt3dadd( -16.5091, -33.497, -15.1967, 0.56 ) }
    dend_5 { pt3dadd( -17.2303, -33.4224, -16.2244, 0.56 ) }
    dend_5 { pt3dadd( -17.7936, -33.3035, -17.2132, 0.42 ) }
    dend_5 { pt3dadd( -18.284, -33.1579, -18.2383, 0.28 ) }
    dend_5 { pt3dadd( -18.7259, -32.9995, -19.2797, 0.14 ) }
    dend_5 { pt3dadd( -19.1246, -32.8507, -20.2553, 0.1 ) }
    dend_5 { pt3dadd( -19.5636, -32.7036, -21.3032, 0.84 ) }
    dend_5 { pt3dadd( -20.4106, -32.4928, -23.2678, 0.7 ) }
    dend_5 { pt3dadd( -21.3114, -32.3336, -25.2132, 0.56 ) }
    dend_5 { pt3dadd( -21.7885, -32.2941, -26.1638, 0.7 ) }
    dend_5 { pt3dadd( -22.0667, -32.2912, -26.6799, 0.56 ) }
    dend_5 { pt3dadd( -22.3821, -32.2991, -27.1896, 0.56 ) }
    dend_5 { pt3dadd( -23.1134, -32.3386, -28.1655, 0.42 ) }
    dend_5 { pt3dadd( -23.5608, -32.3581, -28.564, 0.28 ) }
    dend_5 { pt3dadd( -24.5601, -32.2898, -29.1129, 0.42 ) }
    dend_5 { pt3dadd( -24.8168, -32.21, -29.239, 0.56 ) }
    dend_5 { pt3dadd( -25.3494, -31.9183, -29.5242, 0.28 ) }
    dend_5 { pt3dadd( -25.8543, -31.5555, -29.7744, 0.14 ) }
    dend_5 { pt3dadd( -26.348, -31.1789, -30.0069, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -26.8651, -30.8259, -30.246, 0.42 ) }
    dend_5 { pt3dadd( -27.8514, -30.3002, -30.7355, 0.56 ) }
    dend_5 { pt3dadd( -27.8514, -30.3002, -30.7355, 0.7 ) }
    dend_5 { pt3dadd( -28.3424, -30.2795, -31.0788, 2.1 ) }
    dend_5 { pt3dadd( -29.2918, -30.4578, -31.8241, 1.96 ) }
    dend_5 { pt3dadd( -29.7071, -30.636, -32.2023, 1.82 ) }
    dend_5 { pt3dadd( -30.4566, -31.0441, -32.9041, 1.68 ) }
    dend_5 { pt3dadd( -30.9071, -31.3377, -33.3171, 0.7 ) }
    dend_5 { pt3dadd( -31.7073, -31.9001, -34.0993, 0.56 ) }
    dend_5 { pt3dadd( -31.9549, -32.1037, -34.3765, 0.56 ) }
    dend_5 { pt3dadd( -32.6121, -32.7956, -35.1891, 0.42 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.610016, -34.6559, 0.766578, 0.7 ) }
    dend_2 { pt3dadd( -0.621412, -35.22, 0.766135, 0.7 ) }
    dend_2 { pt3dadd( -0.629611, -35.6152, 0.765827, 0.56 ) }
    dend_2 { pt3dadd( -0.630178, -36.246, 0.765129, 0.42 ) }
    dend_2 { pt3dadd( -0.621768, -36.8048, 0.709771, 0.28 ) }
    dend_2 { pt3dadd( -0.60274, -37.4239, 0.665175, 0.14 ) }
    dend_2 { pt3dadd( -0.573543, -37.9845, 0.677204, 0.1 ) }
    dend_2 { pt3dadd( -0.519595, -38.6098, 0.741001, 0.1 ) }
    dend_2 { pt3dadd( -0.45561, -39.1502, 0.833136, 0.1 ) }
    dend_2 { pt3dadd( -0.312281, -40.1552, 1.06309, 0.14 ) }
    dend_2 { pt3dadd( -0.155056, -41.149, 1.32949, 0.42 ) }
    dend_2 { pt3dadd( 0.0463909, -42.2353, 1.64343, 0.28 ) }
    dend_2 { pt3dadd( 0.140597, -42.7671, 1.79699, 0.14 ) }
    dend_2 { pt3dadd( 0.247124, -43.3574, 1.95787, 0.1 ) }
    dend_2 { pt3dadd( 0.340816, -43.9034, 2.04937, 0.14 ) }
    dend_2 { pt3dadd( 0.432655, -44.4602, 2.05419, 0.1 ) }
    dend_2 { pt3dadd( 0.509096, -45.0, 1.92013, 0.1 ) }
    dend_2 { pt3dadd( 0.569206, -45.5687, 1.67795, 0.1 ) }
    dend_2 { pt3dadd( 0.612246, -46.0692, 1.42703, 0.1 ) }
    dend_2 { pt3dadd( 0.675194, -47.079, 0.88053, 0.1 ) }
    dend_2 { pt3dadd( 0.702249, -47.9531, 0.391794, 0.14 ) }
    dend_2 { pt3dadd( 0.704216, -48.2995, 0.193635, 0.56 ) }
    dend_2 { pt3dadd( 0.704623, -48.8475, -0.102345, 0.42 ) }
    dend_2 { pt3dadd( 0.708754, -49.354, -0.344841, 0.28 ) }
    dend_2 { pt3dadd( 0.711892, -49.9518, -0.546343, 0.42 ) }
    dend_2 { pt3dadd( 0.722626, -50.2321, -0.576633, 0.56 ) }
    dend_2 { pt3dadd( 0.722626, -50.2321, -0.576633, 0.42 ) }
    dend_2 { pt3dadd( 0.81853, -50.7755, -0.578839, 0.84 ) }
    dend_2 { pt3dadd( 0.81853, -50.7755, -0.578839, 0.7 ) }
    dend_2 { pt3dadd( 0.898308, -51.0439, -0.613582, 0.28 ) }
    dend_2 { pt3dadd( 1.07864, -51.564, -0.724463, 0.14 ) }
    dend_2 { pt3dadd( 1.26383, -52.0798, -0.858834, 0.1 ) }
    dend_2 { pt3dadd( 1.45023, -52.5894, -1.00349, 0.1 ) }
    dend_2 { pt3dadd( 1.63862, -53.0992, -1.15522, 0.1 ) }
    dend_2 { pt3dadd( 2.0314, -54.1687, -1.46365, 0.14 ) }
    dend_2 { pt3dadd( 2.12258, -54.4192, -1.5561, 0.28 ) }
    dend_2 { pt3dadd( 2.21048, -54.6619, -1.66322, 0.1 ) }
    dend_2 { pt3dadd( 2.38422, -55.1482, -1.8655, 0.1 ) }
    dend_2 { pt3dadd( 2.56932, -55.6494, -2.03824, 0.1 ) }
    dend_2 { pt3dadd( 2.76191, -56.168, -2.14941, 0.1 ) }
    dend_2 { pt3dadd( 3.1442, -57.1343, -2.19458, 0.14 ) }
    dend_2 { pt3dadd( 3.1442, -57.1343, -2.19458, 0.1 ) }
    dend_2 { pt3dadd( 3.56052, -58.0878, -2.16221, 0.28 ) }
    dend_2 { pt3dadd( 3.80667, -58.6595, -2.11754, 0.14 ) }
    dend_2 { pt3dadd( 4.02097, -59.1781, -2.05787, 0.1 ) }
    dend_2 { pt3dadd( 4.24423, -59.7553, -1.97764, 0.1 ) }
    dend_2 { pt3dadd( 4.33194, -60.0206, -1.93819, 0.14 ) }
    dend_2 { pt3dadd( 4.4308, -60.4061, -1.90941, 0.28 ) }
    dend_2 { pt3dadd( 4.53641, -60.9477, -1.91178, 0.14 ) }
    dend_2 { pt3dadd( 4.60362, -61.508, -1.91353, 0.1 ) }
    dend_2 { pt3dadd( 4.63952, -62.0683, -1.91475, 0.14 ) }
    dend_2 { pt3dadd( 4.64655, -62.6992, -1.91558, 0.1 ) }
    dend_2 { pt3dadd( 4.64423, -63.3221, -1.91624, 0.1 ) }
    dend_2 { pt3dadd( 4.64576, -63.8863, -1.9169, 0.1 ) }
    dend_2 { pt3dadd( 4.6422, -64.5179, -1.87987, 0.1 ) }
    dend_2 { pt3dadd( 4.6456, -65.1344, -1.8044, 0.1 ) }
    dend_2 { pt3dadd( 4.67263, -65.7559, -1.68894, 0.14 ) }
    dend_2 { pt3dadd( 4.70368, -66.0284, -1.62305, 0.28 ) }
    dend_2 { pt3dadd( 4.75226, -66.2962, -1.54869, 0.42 ) }
    dend_2 { pt3dadd( 4.98055, -67.2716, -1.26859, 0.56 ) }
    dend_2 { pt3dadd( 5.1364, -67.8058, -1.17508, 0.42 ) }
    dend_2 { pt3dadd( 5.30554, -68.3303, -1.14512, 0.28 ) }
    dend_2 { pt3dadd( 5.47714, -68.8621, -1.22362, 0.14 ) }
    dend_2 { pt3dadd( 5.63809, -69.3895, -1.32938, 0.28 ) }
    dend_2 { pt3dadd( 5.79206, -69.9245, -1.42117, 0.14 ) }
    dend_2 { pt3dadd( 6.10567, -71.013, -1.61078, 0.1 ) }
    dend_2 { pt3dadd( 6.27217, -71.5494, -1.6659, 0.1 ) }
    dend_2 { pt3dadd( 6.63092, -72.6352, -1.692, 0.1 ) }
    dend_2 { pt3dadd( 6.9716, -73.6171, -1.63546, 0.1 ) }
    dend_2 { pt3dadd( 7.35629, -74.6893, -1.48883, 0.1 ) }
    dend_2 { pt3dadd( 7.55715, -75.2054, -1.38045, 0.1 ) }
    dend_2 { pt3dadd( 7.77173, -75.7565, -1.18134, 0.14 ) }
    dend_2 { pt3dadd( 7.95977, -76.2468, -0.982494, 0.28 ) }
    dend_2 { pt3dadd( 8.14337, -76.7394, -0.777275, 0.14 ) }
    dend_2 { pt3dadd( 8.32489, -77.2489, -0.626357, 0.1 ) }
    dend_2 { pt3dadd( 8.50949, -77.836, -0.487736, 0.14 ) }
    dend_2 { pt3dadd( 8.78653, -78.8476, -0.242978, 0.1 ) }
    dend_2 { pt3dadd( 8.91206, -79.3834, -0.118416, 0.1 ) }
    dend_2 { pt3dadd( 9.01965, -79.9229, -0.00596958, 0.1 ) }
    dend_2 { pt3dadd( 9.11444, -80.4712, 0.0879724, 0.1 ) }
    dend_2 { pt3dadd( 9.20928, -81.0823, 0.162698, 0.14 ) }
    dend_2 { pt3dadd( 9.27989, -81.641, 0.197995, 0.1 ) }
    dend_2 { pt3dadd( 9.35301, -82.1977, 0.196153, 0.1 ) }
    dend_2 { pt3dadd( 9.42891, -82.8225, 0.152939, 0.1 ) }
    dend_2 { pt3dadd( 9.49406, -83.3662, 0.0840248, 0.14 ) }
    dend_2 { pt3dadd( 9.56539, -83.9145, -0.013882, 0.28 ) }
    dend_2 { pt3dadd( 9.66028, -84.5235, -0.148561, 0.28 ) }
    dend_2 { pt3dadd( 9.75119, -85.0612, -0.282405, 0.14 ) }
    dend_2 { pt3dadd( 9.94292, -86.051, -0.541098, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 10.0017, -86.3088, -0.607333, 0.56 ) }
    dend_2 { pt3dadd( 10.1404, -86.8266, -0.774329, 0.42 ) }
    dend_2 { pt3dadd( 10.2975, -87.3377, -0.954454, 0.28 ) }
    dend_2 { pt3dadd( 10.471, -87.842, -1.13018, 0.14 ) }
    dend_2 { pt3dadd( 10.6513, -88.3526, -1.28914, 0.1 ) }
    dend_2 { pt3dadd( 10.8348, -88.8675, -1.41746, 0.1 ) }
    dend_2 { pt3dadd( 11.2225, -89.9463, -1.69904, 0.14 ) }
    dend_2 { pt3dadd( 11.4089, -90.4602, -1.83869, 0.28 ) }
    dend_2 { pt3dadd( 11.5905, -90.964, -1.97226, 0.14 ) }
    dend_2 { pt3dadd( 11.7811, -91.4691, -2.13637, 0.28 ) }
    dend_2 { pt3dadd( 11.9725, -91.9672, -2.31106, 0.42 ) }
    dend_2 { pt3dadd( 11.9725, -91.9672, -2.31106, 0.56 ) }
    dend_2 { pt3dadd( 12.0669, -92.2052, -2.42958, 0.56 ) }
    dend_2 { pt3dadd( 12.249, -92.6603, -2.70358, 0.42 ) }
    dend_2 { pt3dadd( 12.6214, -93.6032, -3.3152, 0.28 ) }
    dend_2 { pt3dadd( 12.7938, -94.0529, -3.60384, 0.14 ) }
    dend_2 { pt3dadd( 13.1041, -94.9065, -4.18526, 0.1 ) }
    dend_2 { pt3dadd( 13.2163, -95.2092, -4.41985, 0.56 ) }
    dend_2 { pt3dadd( 13.3736, -95.6325, -4.73703, 0.42 ) }
    dend_2 { pt3dadd( 13.5353, -96.0779, -5.03835, 0.56 ) }
    dend_2 { pt3dadd( 13.6986, -96.5563, -5.28908, 0.7 ) }
    dend_2 { pt3dadd( 14.0567, -97.521, -5.79921, 0.56 ) }
    dend_2 { pt3dadd( 14.4233, -98.3977, -6.30901, 0.42 ) }
    dend_2 { pt3dadd( 14.805, -99.1987, -6.8533, 0.42 ) }
    dend_2 { pt3dadd( 14.9955, -99.606, -7.18968, 0.56 ) }
    dend_2 { pt3dadd( 15.1748, -100.005, -7.54219, 0.56 ) }
    dend_2 { pt3dadd( 15.5168, -100.865, -8.28069, 0.42 ) }
    dend_2 { pt3dadd( 15.8291, -101.77, -8.97117, 0.28 ) }
    dend_2 { pt3dadd( 15.8952, -101.994, -9.12894, 0.98 ) }
    dend_2 { pt3dadd( 16.1509, -102.938, -9.78855, 0.84 ) }
    dend_2 { pt3dadd( 16.2661, -103.411, -10.0743, 0.7 ) }
    dend_2 { pt3dadd( 16.3877, -103.976, -10.3322, 0.56 ) }
    dend_2 { pt3dadd( 16.4886, -104.513, -10.4716, 0.42 ) }
    dend_2 { pt3dadd( 16.5819, -105.056, -10.5049, 0.28 ) }
    dend_2 { pt3dadd( 16.6842, -105.61, -10.4744, 0.14 ) }
    dend_2 { pt3dadd( 16.7956, -106.153, -10.3818, 0.28 ) }
    dend_2 { pt3dadd( 16.9107, -106.694, -10.2719, 0.14 ) }
    dend_2 { pt3dadd( 17.0323, -107.229, -10.1528, 0.1 ) }
    dend_2 { pt3dadd( 17.2853, -108.352, -9.89609, 0.1 ) }
    dend_2 { pt3dadd( 17.4168, -108.884, -9.77715, 0.1 ) }
    dend_2 { pt3dadd( 17.5694, -109.414, -9.66828, 0.1 ) }
    dend_2 { pt3dadd( 17.7424, -109.942, -9.57363, 0.1 ) }
    dend_2 { pt3dadd( 17.9243, -110.469, -9.50062, 0.1 ) }
    dend_2 { pt3dadd( 18.1147, -110.988, -9.46091, 0.1 ) }
    dend_2 { pt3dadd( 18.343, -111.577, -9.46537, 0.1 ) }
    dend_2 { pt3dadd( 18.564, -112.16, -9.4697, 0.1 ) }
    dend_2 { pt3dadd( 18.6606, -112.425, -9.47161, 0.1 ) }
    dend_2 { pt3dadd( 18.7955, -112.792, -9.47426, 0.84 ) }
    dend_2 { pt3dadd( 18.9873, -113.319, -9.47805, 0.7 ) }
    dend_2 { pt3dadd( 19.1853, -113.848, -9.48193, 0.56 ) }
    dend_2 { pt3dadd( 19.3818, -114.374, -9.48579, 0.42 ) }
    dend_2 { pt3dadd( 19.5812, -114.891, -9.4897, 0.28 ) }
    dend_2 { pt3dadd( 19.8081, -115.479, -9.54031, 0.14 ) }
    dend_2 { pt3dadd( 19.9914, -115.985, -9.65949, 0.1 ) }
    dend_2 { pt3dadd( 20.1518, -116.546, -9.91808, 0.14 ) }
    dend_2 { pt3dadd( 20.1954, -116.774, -10.0611, 0.7 ) }
    dend_2 { pt3dadd( 20.2326, -117.208, -10.4152, 0.56 ) }
    dend_2 { pt3dadd( 20.2368, -118.037, -11.2625, 0.42 ) }
    dend_2 { pt3dadd( 20.183, -118.822, -12.1404, 0.28 ) }
    dend_2 { pt3dadd( 20.0996, -119.505, -12.9705, 0.14 ) }
    dend_2 { pt3dadd( 20.036, -119.908, -13.4541, 0.1 ) }
    dend_2 { pt3dadd( 19.9166, -120.682, -14.3348, 0.1 ) }
    dend_2 { pt3dadd( 19.8148, -121.413, -15.0694, 0.1 ) }
    dend_2 { pt3dadd( 19.7736, -121.921, -15.4435, 0.14 ) }
    dend_2 { pt3dadd( 19.7536, -123.012, -15.8885, 0.28 ) }
    dend_2 { pt3dadd( 19.799, -124.028, -16.107, 0.1 ) }
    dend_2 { pt3dadd( 19.8495, -124.579, -16.2203, 0.1 ) }
    dend_2 { pt3dadd( 19.9905, -125.686, -16.4925, 0.1 ) }
    dend_2 { pt3dadd( 20.0699, -126.216, -16.669, 0.1 ) }
    dend_2 { pt3dadd( 20.1571, -126.768, -16.9438, 0.14 ) }
    dend_2 { pt3dadd( 20.3106, -127.738, -17.5412, 0.28 ) }
    dend_2 { pt3dadd( 20.4487, -128.66, -18.213, 0.42 ) }
    dend_2 { pt3dadd( 20.5518, -129.478, -18.8483, 0.56 ) }
    dend_2 { pt3dadd( 20.5771, -129.696, -19.021, 0.7 ) }
    dend_2 { pt3dadd( 20.6156, -130.018, -19.2386, 0.28 ) }
    dend_2 { pt3dadd( 20.6841, -130.504, -19.5161, 0.14 ) }
    dend_2 { pt3dadd( 20.7459, -131.024, -19.7195, 0.1 ) }
    dend_2 { pt3dadd( 20.8007, -131.62, -19.8844, 0.1 ) }
    dend_2 { pt3dadd( 20.8352, -132.167, -20.0078, 0.1 ) }
    dend_2 { pt3dadd( 20.853, -132.716, -20.1363, 0.1 ) }
    dend_2 { pt3dadd( 20.8518, -133.814, -20.4745, 0.14 ) }
    dend_2 { pt3dadd( 20.8394, -134.189, -20.6084, 0.1 ) }
    dend_2 { pt3dadd( 20.811, -134.77, -20.8328, 0.1 ) }
    dend_2 { pt3dadd( 20.775, -135.356, -21.0616, 0.1 ) }
    dend_2 { pt3dadd( 20.7346, -135.94, -21.275, 0.1 ) }
    dend_2 { pt3dadd( 20.6534, -137.042, -21.6994, 0.1 ) }
    dend_2 { pt3dadd( 20.6272, -137.57, -21.8909, 0.14 ) }
    dend_2 { pt3dadd( 20.6264, -137.824, -21.9892, 0.1 ) }
    dend_2 { pt3dadd( 20.6517, -138.412, -22.2202, 0.1 ) }
    dend_2 { pt3dadd( 20.687, -138.927, -22.4481, 0.1 ) }
    dend_2 { pt3dadd( 20.7883, -140.0, -22.9292, 0.1 ) }
    dend_2 { pt3dadd( 20.8421, -140.502, -23.1817, 0.14 ) }
    dend_2 { pt3dadd( 20.8943, -140.982, -23.4671, 0.28 ) }
    dend_2 { pt3dadd( 20.9618, -141.453, -23.7715, 0.28 ) }
    dend_2 { pt3dadd( 21.1461, -142.418, -24.4244, 0.14 ) }
    dend_2 { pt3dadd( 21.2479, -142.865, -24.7529, 0.1 ) }
    dend_2 { pt3dadd( 21.4656, -143.66, -25.3232, 0.14 ) }
    dend_2 { pt3dadd( 21.5247, -143.881, -25.4831, 0.56 ) }
    dend_2 { pt3dadd( 21.6607, -144.392, -25.8269, 0.56 ) }
    dend_2 { pt3dadd( 21.7787, -144.87, -26.0965, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 22.0027, -145.916, -26.519, 0.56 ) }
    dend_2 { pt3dadd( 22.0931, -146.444, -26.6885, 0.42 ) }
    dend_2 { pt3dadd( 22.1665, -147.046, -26.82, 0.28 ) }
    dend_2 { pt3dadd( 22.2108, -147.597, -26.92, 0.14 ) }
    dend_2 { pt3dadd( 22.2354, -148.221, -27.0065, 0.1 ) }
    dend_2 { pt3dadd( 22.2558, -148.842, -27.0557, 0.1 ) }
    dend_2 { pt3dadd( 22.2735, -149.124, -27.0563, 0.1 ) }
    dend_2 { pt3dadd( 22.3428, -149.753, -27.0582, 0.1 ) }
    dend_2 { pt3dadd( 22.4522, -150.306, -27.0606, 0.14 ) }
    dend_2 { pt3dadd( 22.5251, -150.576, -27.0621, 0.56 ) }
    dend_2 { pt3dadd( 22.7068, -151.1, -27.0657, 0.42 ) }
    dend_2 { pt3dadd( 22.9344, -151.679, -27.1188, 0.28 ) }
    dend_2 { pt3dadd( 23.1371, -152.199, -27.1987, 0.14 ) }
    dend_2 { pt3dadd( 23.3595, -152.77, -27.3154, 0.1 ) }
    dend_2 { pt3dadd( 23.5346, -153.29, -27.4377, 0.1 ) }
    dend_2 { pt3dadd( 23.6868, -153.817, -27.5688, 0.1 ) }
    dend_2 { pt3dadd( 23.9385, -154.88, -27.9226, 0.1 ) }
    dend_2 { pt3dadd( 24.0079, -155.247, -28.0633, 0.84 ) }
    dend_2 { pt3dadd( 24.0936, -155.755, -28.2699, 0.7 ) }
    dend_2 { pt3dadd( 24.1827, -156.336, -28.5037, 0.56 ) }
    dend_2 { pt3dadd( 24.2695, -156.858, -28.699, 0.42 ) }
    dend_2 { pt3dadd( 24.4913, -157.931, -29.0432, 0.28 ) }
    dend_2 { pt3dadd( 24.6233, -158.452, -29.1681, 0.14 ) }
    dend_2 { pt3dadd( 24.7815, -158.982, -29.2838, 0.1 ) }
    dend_2 { pt3dadd( 24.9628, -159.504, -29.3824, 0.1 ) }
    dend_2 { pt3dadd( 25.1683, -160.024, -29.4592, 0.1 ) }
    dend_2 { pt3dadd( 25.3978, -160.602, -29.5105, 0.1 ) }
    dend_2 { pt3dadd( 25.6043, -161.127, -29.5145, 0.1 ) }
    dend_2 { pt3dadd( 25.7935, -161.655, -29.5183, 0.1 ) }
    dend_2 { pt3dadd( 25.9828, -162.25, -29.5221, 0.14 ) }
    dend_2 { pt3dadd( 26.0576, -162.521, -29.5467, 0.28 ) }
    dend_2 { pt3dadd( 26.1453, -162.897, -29.6069, 0.28 ) }
    dend_2 { pt3dadd( 26.2492, -163.436, -29.7226, 0.14 ) }
    dend_2 { pt3dadd( 26.3586, -164.039, -29.8741, 0.1 ) }
    dend_2 { pt3dadd( 26.4538, -164.573, -30.0173, 0.1 ) }
    dend_2 { pt3dadd( 26.643, -165.661, -30.3219, 0.14 ) }
    dend_2 { pt3dadd( 26.6902, -165.926, -30.3962, 0.28 ) }
    dend_2 { pt3dadd( 26.7956, -166.461, -30.5398, 0.1 ) }
    dend_2 { pt3dadd( 26.9028, -166.998, -30.6672, 0.1 ) }
    dend_2 { pt3dadd( 27.0166, -167.53, -30.8155, 0.14 ) }
    dend_2 { pt3dadd( 27.0166, -167.53, -30.8155, 0.28 ) }
    dend_2 { pt3dadd( 27.0749, -167.91, -30.9066, 0.28 ) }
    dend_2 { pt3dadd( 27.1521, -168.45, -31.0534, 0.28 ) }
    dend_2 { pt3dadd( 27.2252, -168.969, -31.2548, 0.42 ) }
    dend_2 { pt3dadd( 27.3815, -170.007, -31.7229, 0.42 ) }
    dend_2 { pt3dadd( 27.4483, -170.35, -31.9164, 0.1 ) }
    dend_2 { pt3dadd( 27.5553, -170.81, -32.2021, 0.1 ) }
    dend_2 { pt3dadd( 27.6802, -171.268, -32.5019, 0.1 ) }
    dend_2 { pt3dadd( 27.9722, -172.196, -33.114, 0.1 ) }
    dend_2 { pt3dadd( 28.1347, -172.654, -33.3958, 0.1 ) }
    dend_2 { pt3dadd( 28.5448, -173.638, -33.9108, 0.1 ) }
    dend_2 { pt3dadd( 28.6528, -173.871, -34.0218, 0.1 ) }
    dend_2 { pt3dadd( 28.8863, -174.332, -34.2478, 0.1 ) }
    dend_2 { pt3dadd( 29.1575, -174.844, -34.4787, 0.14 ) }
    dend_2 { pt3dadd( 29.4108, -175.319, -34.6494, 0.1 ) }
    dend_2 { pt3dadd( 29.6793, -175.84, -34.8629, 0.1 ) }
    dend_2 { pt3dadd( 29.909, -176.314, -35.0591, 0.1 ) }
    dend_2 { pt3dadd( 30.3894, -177.291, -35.5235, 0.1 ) }
    dend_2 { pt3dadd( 30.6198, -177.745, -35.7606, 0.1 ) }
    dend_2 { pt3dadd( 30.8524, -178.188, -35.9996, 0.1 ) }
    dend_2 { pt3dadd( 31.3714, -179.09, -36.4863, 0.14 ) }
    dend_2 { pt3dadd( 31.5098, -179.31, -36.5957, 0.28 ) }
    dend_2 { pt3dadd( 31.7147, -179.605, -36.747, 0.1 ) }
    dend_2 { pt3dadd( 32.064, -180.082, -36.9673, 0.1 ) }
    dend_2 { pt3dadd( 32.4327, -180.544, -37.1895, 0.1 ) }
    dend_2 { pt3dadd( 32.6775, -180.832, -37.3178, 0.1 ) }
    dend_2 { pt3dadd( 33.0758, -181.285, -37.4793, 0.1 ) }
    dend_2 { pt3dadd( 33.7446, -182.035, -37.7491, 0.1 ) }
    dend_2 { pt3dadd( 33.921, -182.244, -37.82, 0.1 ) }
    dend_2 { pt3dadd( 34.2977, -182.72, -37.9652, 0.1 ) }
    dend_2 { pt3dadd( 34.6561, -183.216, -38.0872, 0.1 ) }
    dend_2 { pt3dadd( 34.996, -183.74, -38.1773, 0.1 ) }
    dend_2 { pt3dadd( 35.197, -184.074, -38.1799, 0.14 ) }
    dend_2 { pt3dadd( 35.4685, -184.564, -38.1091, 0.56 ) }
    dend_2 { pt3dadd( 35.7136, -185.059, -38.0121, 0.42 ) }
    dend_2 { pt3dadd( 35.9154, -185.573, -37.8931, 0.28 ) }
    dend_2 { pt3dadd( 36.0791, -186.094, -37.7637, 0.14 ) }
    dend_2 { pt3dadd( 36.3354, -187.086, -37.5935, 0.1 ) }
    dend_2 { pt3dadd( 36.4592, -187.633, -37.5858, 0.1 ) }
    dend_2 { pt3dadd( 36.5657, -188.183, -37.6593, 0.1 ) }
    dend_2 { pt3dadd( 36.6558, -188.788, -37.8207, 0.1 ) }
    dend_2 { pt3dadd( 36.7171, -189.305, -38.012, 0.1 ) }
    dend_2 { pt3dadd( 36.805, -190.353, -38.4723, 0.1 ) }
    dend_2 { pt3dadd( 36.8744, -191.386, -38.9711, 0.1 ) }
    dend_2 { pt3dadd( 36.8885, -191.738, -39.1568, 0.56 ) }
    dend_2 { pt3dadd( 36.9057, -192.287, -39.4475, 0.42 ) }
    dend_2 { pt3dadd( 36.9265, -192.79, -39.6969, 0.28 ) }
    dend_2 { pt3dadd( 36.9538, -193.371, -39.9404, 0.14 ) }
    dend_2 { pt3dadd( 36.9815, -193.917, -40.067, 0.1 ) }
    dend_2 { pt3dadd( 37.0656, -195.086, -40.1928, 0.14 ) }
    dend_2 { pt3dadd( 37.1152, -195.645, -40.2234, 0.28 ) }
    dend_2 { pt3dadd( 37.172, -196.203, -40.225, 0.14 ) }
    dend_2 { pt3dadd( 37.2229, -196.765, -40.1972, 0.1 ) }
    dend_2 { pt3dadd( 37.31, -197.941, -40.1564, 0.1 ) }
    dend_2 { pt3dadd( 37.3296, -198.504, -40.1368, 0.1 ) }
    dend_2 { pt3dadd( 37.3385, -199.136, -40.1067, 0.1 ) }
    dend_2 { pt3dadd( 37.322, -199.69, -40.1193, 0.1 ) }
    dend_2 { pt3dadd( 37.2772, -200.319, -40.1792, 0.1 ) }
    dend_2 { pt3dadd( 37.1593, -201.376, -40.3573, 0.14 ) }
    dend_2 { pt3dadd( 37.1072, -201.752, -40.4472, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 37.0037, -202.292, -40.5622, 0.14 ) }
    dend_2 { pt3dadd( 36.8748, -202.899, -40.6722, 0.28 ) }
    dend_2 { pt3dadd( 36.7354, -203.501, -40.7509, 0.42 ) }
    dend_2 { pt3dadd( 36.6539, -203.891, -40.7775, 0.28 ) }
    dend_2 { pt3dadd( 36.5397, -204.501, -40.7763, 0.14 ) }
    dend_2 { pt3dadd( 36.4129, -205.294, -40.7751, 0.1 ) }
    dend_2 { pt3dadd( 36.375, -205.564, -40.7747, 0.1 ) }
    dend_2 { pt3dadd( 36.3146, -206.192, -40.7744, 0.1 ) }
    dend_2 { pt3dadd( 36.2949, -206.753, -40.7747, 0.1 ) }
    dend_2 { pt3dadd( 36.3167, -207.374, -40.7758, 0.1 ) }
    dend_2 { pt3dadd( 36.3766, -207.932, -40.7774, 0.1 ) }
    dend_2 { pt3dadd( 36.4194, -208.211, -40.7784, 0.1 ) }
    dend_2 { pt3dadd( 36.4651, -208.487, -40.7795, 0.1 ) }
    dend_2 { pt3dadd( 36.5702, -209.041, -40.7819, 0.1 ) }
    dend_2 { pt3dadd( 36.6667, -209.592, -40.8299, 0.14 ) }
    dend_2 { pt3dadd( 36.762, -210.142, -40.9126, 0.28 ) }
    dend_2 { pt3dadd( 36.8601, -210.746, -41.0284, 0.14 ) }
    dend_2 { pt3dadd( 36.9475, -211.291, -41.1454, 0.1 ) }
    dend_2 { pt3dadd( 37.0326, -211.831, -41.2732, 0.1 ) }
    dend_2 { pt3dadd( 37.1936, -212.977, -41.4997, 0.1 ) }
    dend_2 { pt3dadd( 37.267, -213.528, -41.5792, 0.1 ) }
    dend_2 { pt3dadd( 37.3444, -214.085, -41.6211, 0.1 ) }
    dend_2 { pt3dadd( 37.4208, -214.642, -41.616, 0.1 ) }
    dend_2 { pt3dadd( 37.4208, -214.642, -41.616, 0.1 ) }
    dend_2 { pt3dadd( 37.5305, -215.694, -41.426, 0.1 ) }
    dend_2 { pt3dadd( 37.5867, -216.236, -41.2911, 0.1 ) }
    dend_2 { pt3dadd( 37.6388, -216.785, -41.1718, 0.1 ) }
    dend_2 { pt3dadd( 37.6878, -217.414, -41.1142, 0.1 ) }
    dend_2 { pt3dadd( 37.7317, -217.966, -41.1263, 0.14 ) }
    dend_2 { pt3dadd( 37.7908, -218.592, -41.1977, 0.28 ) }
    dend_2 { pt3dadd( 37.8544, -219.142, -41.3104, 0.42 ) }
    dend_2 { pt3dadd( 37.9136, -219.687, -41.4321, 0.28 ) }
    dend_2 { pt3dadd( 38.0451, -220.828, -41.6946, 0.14 ) }
    dend_2 { pt3dadd( 38.119, -221.371, -41.8172, 0.1 ) }
    dend_2 { pt3dadd( 38.1996, -221.915, -41.9304, 0.1 ) }
    dend_2 { pt3dadd( 38.2939, -222.463, -42.0279, 0.1 ) }
    dend_2 { pt3dadd( 38.3927, -223.072, -42.111, 0.1 ) }
    dend_2 { pt3dadd( 38.4835, -223.627, -42.1545, 0.14 ) }
    dend_2 { pt3dadd( 38.5813, -224.18, -42.1567, 0.1 ) }
    dend_2 { pt3dadd( 38.6679, -224.738, -42.1588, 0.14 ) }
    dend_2 { pt3dadd( 38.7486, -225.294, -42.1608, 0.28 ) }
    dend_2 { pt3dadd( 38.8052, -225.68, -42.1621, 0.1 ) }
    dend_2 { pt3dadd( 38.8943, -226.234, -42.1642, 0.1 ) }
    dend_2 { pt3dadd( 38.9841, -226.791, -42.1664, 0.1 ) }
    dend_2 { pt3dadd( 39.0884, -227.405, -42.1688, 0.1 ) }
    dend_2 { pt3dadd( 39.1917, -227.96, -42.1711, 0.1 ) }
    dend_2 { pt3dadd( 39.296, -228.512, -42.1735, 0.1 ) }
    dend_2 { pt3dadd( 39.408, -229.065, -42.176, 0.1 ) }
    dend_2 { pt3dadd( 39.5087, -229.617, -42.1783, 0.1 ) }
    dend_2 { pt3dadd( 39.6047, -230.17, -42.1805, 0.1 ) }
    dend_2 { pt3dadd( 39.6996, -230.715, -42.2211, 0.1 ) }
    dend_2 { pt3dadd( 39.8003, -231.335, -42.303, 0.1 ) }
    dend_2 { pt3dadd( 39.8876, -231.884, -42.4, 0.1 ) }
    dend_2 { pt3dadd( 39.9854, -232.486, -42.5257, 0.1 ) }
    dend_2 { pt3dadd( 40.0794, -233.028, -42.6495, 0.1 ) }
    dend_2 { pt3dadd( 40.2832, -234.126, -42.9198, 0.1 ) }
    dend_2 { pt3dadd( 40.3936, -234.662, -43.058, 0.1 ) }
    dend_2 { pt3dadd( 40.5212, -235.192, -43.193, 0.1 ) }
    dend_2 { pt3dadd( 40.6575, -235.716, -43.313, 0.1 ) }
    dend_2 { pt3dadd( 40.8069, -236.238, -43.4539, 0.1 ) }
    dend_2 { pt3dadd( 40.8069, -236.238, -43.4539, 0.1 ) }
    dend_2 { pt3dadd( 40.8826, -236.503, -43.516, 0.1 ) }
    dend_2 { pt3dadd( 41.0313, -237.025, -43.6577, 0.1 ) }
    dend_2 { pt3dadd( 41.1625, -237.539, -43.8509, 0.1 ) }
    dend_2 { pt3dadd( 41.4055, -238.57, -44.2943, 0.1 ) }
    dend_2 { pt3dadd( 41.5186, -239.073, -44.5178, 0.1 ) }
    dend_2 { pt3dadd( 41.6286, -239.572, -44.7325, 0.1 ) }
    dend_2 { pt3dadd( 41.7393, -240.082, -44.9407, 0.1 ) }
    dend_2 { pt3dadd( 41.9742, -241.17, -45.3446, 0.1 ) }
    dend_2 { pt3dadd( 42.0889, -241.695, -45.506, 0.1 ) }
    dend_2 { pt3dadd( 42.2085, -242.225, -45.6192, 0.1 ) }
    dend_2 { pt3dadd( 42.3351, -242.763, -45.7173, 0.1 ) }
    dend_2 { pt3dadd( 42.4704, -243.306, -45.7917, 0.1 ) }
    dend_2 { pt3dadd( 42.6151, -243.847, -45.8339, 0.1 ) }
    dend_2 { pt3dadd( 42.7714, -244.386, -45.8371, 0.1 ) }
    dend_2 { pt3dadd( 42.9285, -244.928, -45.8403, 0.1 ) }
    dend_2 { pt3dadd( 43.0817, -245.458, -45.8435, 0.1 ) }
    dend_2 { pt3dadd( 43.2387, -246.0, -45.8467, 0.1 ) }
    dend_2 { pt3dadd( 43.3948, -246.54, -45.8499, 0.1 ) }
    dend_2 { pt3dadd( 43.5518, -247.082, -45.8531, 0.1 ) }
    dend_2 { pt3dadd( 43.7083, -247.621, -45.8563, 0.14 ) }
    dend_2 { pt3dadd( 43.8634, -248.159, -45.8992, 0.1 ) }
    dend_2 { pt3dadd( 44.0263, -248.683, -45.9774, 0.14 ) }
    dend_2 { pt3dadd( 44.1991, -249.206, -46.0861, 0.1 ) }
    dend_2 { pt3dadd( 44.2889, -249.466, -46.1511, 0.1 ) }
    dend_2 { pt3dadd( 44.3808, -249.723, -46.2218, 0.1 ) }
    dend_2 { pt3dadd( 44.7603, -250.767, -46.5143, 0.1 ) }
    dend_2 { pt3dadd( 44.9826, -251.337, -46.6677, 0.1 ) }
    dend_2 { pt3dadd( 45.1886, -251.844, -46.7934, 0.14 ) }
    dend_2 { pt3dadd( 45.3996, -252.353, -46.8999, 0.1 ) }
    dend_2 { pt3dadd( 45.6084, -252.861, -46.9788, 0.1 ) }
    dend_2 { pt3dadd( 45.8174, -253.38, -47.0252, 0.1 ) }
    dend_2 { pt3dadd( 46.0437, -253.967, -47.0765, 0.14 ) }
    dend_2 { pt3dadd( 46.1371, -254.227, -47.1165, 0.56 ) }
    dend_2 { pt3dadd( 46.3208, -254.75, -47.2233, 0.42 ) }
    dend_2 { pt3dadd( 46.4813, -255.262, -47.3876, 0.28 ) }
    dend_2 { pt3dadd( 46.6223, -255.77, -47.5897, 0.28 ) }
    dend_2 { pt3dadd( 46.8753, -256.795, -48.0408, 0.42 ) }
    dend_2 { pt3dadd( 46.9782, -257.304, -48.2367, 0.42 ) }
    dend_2 { pt3dadd( 47.0753, -257.831, -48.4056, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 47.269, -258.964, -48.6883, 0.14 ) }
    dend_2 { pt3dadd( 47.3488, -259.513, -48.7761, 0.1 ) }
    dend_2 { pt3dadd( 47.4214, -260.069, -48.8076, 0.1 ) }
    dend_2 { pt3dadd( 47.5476, -261.239, -48.7428, 0.14 ) }
    dend_2 { pt3dadd( 47.5919, -261.796, -48.691, 0.28 ) }
    dend_2 { pt3dadd( 47.6303, -262.355, -48.6186, 0.14 ) }
    dend_2 { pt3dadd( 47.676, -262.967, -48.5169, 0.28 ) }
    dend_2 { pt3dadd( 47.7072, -263.527, -48.4486, 0.14 ) }
    dend_2 { pt3dadd( 47.7408, -264.157, -48.407, 0.1 ) }
    dend_2 { pt3dadd( 47.7822, -264.777, -48.4084, 0.1 ) }
    dend_2 { pt3dadd( 47.825, -265.337, -48.4097, 0.1 ) }
    dend_2 { pt3dadd( 47.8811, -265.898, -48.4113, 0.1 ) }
    dend_2 { pt3dadd( 47.9546, -266.517, -48.4132, 0.1 ) }
    dend_2 { pt3dadd( 48.0271, -267.076, -48.415, 0.1 ) }
    dend_2 { pt3dadd( 48.1037, -267.633, -48.4169, 0.1 ) }
    dend_2 { pt3dadd( 48.1813, -268.189, -48.4188, 0.1 ) }
    dend_2 { pt3dadd( 48.2557, -268.748, -48.4207, 0.1 ) }
    dend_2 { pt3dadd( 48.328, -269.367, -48.4226, 0.1 ) }
    dend_2 { pt3dadd( 48.3608, -269.647, -48.4235, 0.1 ) }
    dend_2 { pt3dadd( 48.4287, -270.274, -48.4253, 0.1 ) }
    dend_2 { pt3dadd( 48.4908, -270.832, -48.4269, 0.1 ) }
    dend_2 { pt3dadd( 48.5491, -271.384, -48.4285, 0.1 ) }
    dend_2 { pt3dadd( 48.621, -272.012, -48.4304, 0.1 ) }
    dend_2 { pt3dadd( 48.6981, -272.571, -48.4323, 0.1 ) }
    dend_2 { pt3dadd( 48.7825, -273.126, -48.4344, 0.1 ) }
    dend_2 { pt3dadd( 48.8666, -273.67, -48.4746, 0.1 ) }
    dend_2 { pt3dadd( 48.9567, -274.29, -48.5558, 0.1 ) }
    dend_2 { pt3dadd( 49.0346, -274.837, -48.655, 0.1 ) }
    dend_2 { pt3dadd( 49.1065, -275.382, -48.7796, 0.1 ) }
    dend_2 { pt3dadd( 49.165, -275.922, -48.9228, 0.1 ) }
    dend_2 { pt3dadd( 49.2751, -277.05, -49.2479, 0.1 ) }
    dend_2 { pt3dadd( 49.3028, -277.317, -49.3258, 0.1 ) }
    dend_2 { pt3dadd( 49.3028, -277.317, -49.3258, 0.1 ) }
    dend_2 { pt3dadd( 49.3572, -277.702, -49.4128, 0.1 ) }
    dend_2 { pt3dadd( 49.447, -278.243, -49.4986, 0.1 ) }
    dend_2 { pt3dadd( 49.5572, -278.792, -49.5433, 0.1 ) }
    dend_2 { pt3dadd( 49.6753, -279.342, -49.4974, 0.1 ) }
    dend_2 { pt3dadd( 49.792, -279.885, -49.4209, 0.1 ) }
    dend_2 { pt3dadd( 49.9114, -280.426, -49.3256, 0.1 ) }
    dend_2 { pt3dadd( 50.0356, -280.964, -49.2121, 0.1 ) }
    dend_2 { pt3dadd( 50.1422, -281.491, -49.0845, 0.1 ) }
    dend_2 { pt3dadd( 50.3227, -282.623, -48.7884, 0.1 ) }
    dend_2 { pt3dadd( 50.3902, -283.17, -48.683, 0.1 ) }
    dend_2 { pt3dadd( 50.4326, -283.73, -48.6256, 0.1 ) }
    dend_2 { pt3dadd( 50.4326, -283.73, -48.6256, 0.1 ) }
    dend_2 { pt3dadd( 50.4452, -284.117, -48.7041, 0.1 ) }
    dend_2 { pt3dadd( 50.4679, -284.708, -48.9242, 0.1 ) }
    dend_2 { pt3dadd( 50.503, -285.733, -49.4408, 0.1 ) }
    dend_2 { pt3dadd( 50.5208, -286.282, -49.7301, 0.1 ) }
    dend_2 { pt3dadd( 50.5352, -286.782, -49.9847, 0.1 ) }
    dend_2 { pt3dadd( 50.5851, -287.826, -50.466, 0.14 ) }
    dend_2 { pt3dadd( 50.5998, -288.08, -50.5877, 0.1 ) }
    dend_2 { pt3dadd( 50.615, -288.439, -50.7508, 0.1 ) }
    dend_2 { pt3dadd( 50.6291, -288.967, -50.9511, 0.1 ) }
    dend_2 { pt3dadd( 50.6364, -289.563, -51.1639, 0.1 ) }
    dend_2 { pt3dadd( 50.6256, -290.102, -51.3284, 0.1 ) }
    dend_2 { pt3dadd( 50.5948, -291.251, -51.5961, 0.1 ) }
    dend_2 { pt3dadd( 50.5729, -291.866, -51.7328, 0.1 ) }
    dend_2 { pt3dadd( 50.5584, -292.416, -51.8453, 0.1 ) }
    dend_2 { pt3dadd( 50.5454, -293.028, -51.9537, 0.1 ) }
    dend_2 { pt3dadd( 50.535, -293.654, -52.0401, 0.1 ) }
    dend_2 { pt3dadd( 50.5303, -294.207, -52.084, 0.14 ) }
    dend_2 { pt3dadd( 50.5405, -294.606, -52.0846, 0.1 ) }
    dend_2 { pt3dadd( 50.5626, -295.167, -52.0856, 0.1 ) }
    dend_2 { pt3dadd( 50.5923, -295.728, -52.0867, 0.14 ) }
    dend_2 { pt3dadd( 50.6262, -296.117, -52.0877, 0.1 ) }
    dend_2 { pt3dadd( 50.6872, -296.678, -52.0894, 0.1 ) }
    dend_2 { pt3dadd( 50.7428, -297.236, -52.0909, 0.1 ) }
    dend_2 { pt3dadd( 50.7984, -297.865, -52.0925, 0.1 ) }
    dend_2 { pt3dadd( 50.823, -298.416, -52.0936, 0.1 ) }
    dend_2 { pt3dadd( 50.8211, -298.978, -52.0942, 0.1 ) }
    dend_2 { pt3dadd( 50.8211, -298.978, -52.0942, 0.14 ) }
    dend_2 { pt3dadd( 50.7772, -299.372, -52.0578, 0.84 ) }
    dend_2 { pt3dadd( 50.6803, -299.978, -51.9579, 0.7 ) }
    dend_2 { pt3dadd( 50.5783, -300.588, -51.8278, 0.56 ) }
    dend_2 { pt3dadd( 50.5102, -300.971, -51.7377, 0.42 ) }
    dend_2 { pt3dadd( 50.4162, -301.568, -51.5943, 0.28 ) }
    dend_2 { pt3dadd( 50.2865, -302.715, -51.3285, 0.14 ) }
    dend_2 { pt3dadd( 50.2523, -303.321, -51.1944, 0.1 ) }
    dend_2 { pt3dadd( 50.243, -303.871, -51.0834, 0.1 ) }
    dend_2 { pt3dadd( 50.2463, -304.493, -50.9756, 0.1 ) }
    dend_2 { pt3dadd( 50.2551, -305.04, -50.9047, 0.1 ) }
    dend_2 { pt3dadd( 50.2709, -305.6, -50.8646, 0.1 ) }
    dend_2 { pt3dadd( 50.2844, -306.164, -50.8655, 0.1 ) }
    dend_2 { pt3dadd( 50.2945, -306.795, -50.9099, 0.1 ) }
    dend_2 { pt3dadd( 50.2881, -307.182, -50.9607, 0.1 ) }
    dend_2 { pt3dadd( 50.2592, -307.802, -51.0746, 0.1 ) }
    dend_2 { pt3dadd( 50.209, -308.348, -51.1948, 0.1 ) }
    dend_2 { pt3dadd( 50.1328, -308.947, -51.3383, 0.1 ) }
    dend_2 { pt3dadd( 50.0038, -309.95, -51.5831, 0.1 ) }
    dend_2 { pt3dadd( 49.9591, -310.336, -51.6729, 0.1 ) }
    dend_2 { pt3dadd( 49.888, -310.94, -51.8, 0.1 ) }
    dend_2 { pt3dadd( 49.8168, -311.559, -51.9097, 0.1 ) }
    dend_2 { pt3dadd( 49.7443, -312.163, -52.0341, 0.1 ) }
    dend_2 { pt3dadd( 49.6937, -312.711, -52.1478, 0.1 ) }
    dend_2 { pt3dadd( 49.6497, -313.33, -52.2593, 0.1 ) }
    dend_2 { pt3dadd( 49.6324, -313.711, -52.3402, 0.1 ) }
    dend_2 { pt3dadd( 49.6198, -314.254, -52.4846, 0.1 ) }
    dend_2 { pt3dadd( 49.6229, -315.201, -52.8118, 0.1 ) }
    dend_2 { pt3dadd( 49.6363, -315.71, -53.0485, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 49.6363, -315.71, -53.0485, 0.42 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 1/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -13.404, 40.9884, -4.71154, 0.84 ) }
    dend_63 { pt3dadd( -13.7909, 41.8862, -4.50301, 0.84 ) }
    dend_63 { pt3dadd( -13.9567, 42.3277, -4.41438, 0.7 ) }
    dend_63 { pt3dadd( -14.1173, 42.7828, -4.3265, 0.56 ) }
    dend_63 { pt3dadd( -14.2706, 43.2391, -4.24557, 0.42 ) }
    dend_63 { pt3dadd( -14.4087, 43.7036, -4.16956, 0.28 ) }
    dend_63 { pt3dadd( -14.5371, 44.1695, -4.10063, 0.42 ) }
    dend_63 { pt3dadd( -14.6019, 44.5019, -4.08013, 0.56 ) }
    dend_63 { pt3dadd( -14.6373, 44.7355, -4.06317, 0.7 ) }
    dend_63 { pt3dadd( -14.698, 45.2125, -4.02566, 0.84 ) }
    dend_63 { pt3dadd( -14.7664, 45.7479, -3.9199, 0.7 ) }
    dend_63 { pt3dadd( -14.8238, 46.2163, -3.78611, 0.56 ) }
    dend_63 { pt3dadd( -14.8487, 46.4452, -3.7084, 0.7 ) }
    dend_63 { pt3dadd( -14.8897, 46.9008, -3.53797, 0.56 ) }
    dend_63 { pt3dadd( -14.9243, 47.357, -3.36113, 0.7 ) }
    dend_63 { pt3dadd( -14.9706, 48.3355, -3.04246, 0.84 ) }
    dend_63 { pt3dadd( -14.985, 48.8692, -2.96192, 0.7 ) }
    dend_63 { pt3dadd( -14.9901, 49.2201, -2.97356, 0.56 ) }
    dend_63 { pt3dadd( -14.9911, 49.4616, -3.01607, 0.7 ) }
    dend_63 { pt3dadd( -14.9725, 49.9232, -3.15436, 0.98 ) }
    dend_63 { pt3dadd( -14.9395, 50.8717, -3.46453, 0.98 ) }
    dend_63 { pt3dadd( -14.9221, 51.8182, -3.78576, 0.84 ) }
    dend_63 { pt3dadd( -14.9364, 52.2993, -3.86728, 0.84 ) }
    dend_63 { pt3dadd( -14.9575, 52.6453, -3.85469, 0.7 ) }
    dend_63 { pt3dadd( -14.9769, 52.9742, -3.77394, 0.56 ) }
    dend_63 { pt3dadd( -15.0601, 53.8766, -3.35473, 0.7 ) }
    dend_63 { pt3dadd( -15.1381, 54.3351, -3.06418, 0.84 ) }
    dend_63 { pt3dadd( -15.34, 55.1849, -2.5266, 0.98 ) }
    dend_63 { pt3dadd( -15.4364, 55.4819, -2.37546, 0.84 ) }
    dend_63 { pt3dadd( -15.537, 55.6951, -2.31647, 0.7 ) }
    dend_63 { pt3dadd( -15.8755, 56.291, -2.39908, 0.1 ) }
    dend_63 { pt3dadd( -16.1368, 56.7294, -2.59985, 0.14 ) }
    dend_63 { pt3dadd( -16.6195, 57.5119, -3.05568, 0.28 ) }
    dend_63 { pt3dadd( -16.7768, 57.7704, -3.22531, 0.42 ) }
    dend_63 { pt3dadd( -17.0342, 58.1872, -3.45851, 0.56 ) }
    dend_63 { pt3dadd( -17.5079, 58.9948, -3.80849, 0.56 ) }
    dend_63 { pt3dadd( -17.722, 59.4178, -3.92512, 0.42 ) }
    dend_63 { pt3dadd( -17.928, 59.8579, -3.97158, 0.56 ) }
    dend_63 { pt3dadd( -18.0282, 60.0813, -3.95748, 0.56 ) }
    dend_63 { pt3dadd( -18.4336, 60.9882, -3.84611, 0.56 ) }
    dend_63 { pt3dadd( -18.6315, 61.4183, -3.76835, 0.56 ) }
    dend_63 { pt3dadd( -18.8418, 61.8476, -3.66962, 0.56 ) }
    dend_63 { pt3dadd( -19.0541, 62.2822, -3.58755, 0.7 ) }
    dend_63 { pt3dadd( -19.2631, 62.7193, -3.52802, 0.84 ) }
    dend_63 { pt3dadd( -19.4917, 63.2165, -3.49096, 0.98 ) }
    dend_63 { pt3dadd( -19.6866, 63.664, -3.49037, 1.12 ) }
    dend_63 { pt3dadd( -19.874, 64.1173, -3.48726, 0.98 ) }
    dend_63 { pt3dadd( -20.0589, 64.5691, -3.48368, 0.84 ) }
    dend_63 { pt3dadd( -20.2363, 65.0149, -3.47889, 0.7 ) }
    dend_63 { pt3dadd( -20.4084, 65.4742, -3.47128, 0.84 ) }
    dend_63 { pt3dadd( -20.5596, 65.9381, -3.45791, 0.7 ) }
    dend_63 { pt3dadd( -20.6332, 66.172, -3.45054, 0.84 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 53/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -13.404, 40.9884, -4.71154, 0.7 ) }
    dend_62 { pt3dadd( -13.5204, 41.0329, -5.69434, 0.7 ) }
    dend_62 { pt3dadd( -13.7342, 41.1327, -7.5199, 0.56 ) }
    dend_62 { pt3dadd( -13.9411, 41.2359, -9.3825, 0.42 ) }
    dend_62 { pt3dadd( -14.1527, 41.3446, -11.2078, 0.28 ) }
    dend_62 { pt3dadd( -14.3664, 41.4642, -13.0322, 0.14 ) }
    dend_62 { pt3dadd( -14.5828, 41.5983, -14.8902, 0.1 ) }
    dend_62 { pt3dadd( -14.7841, 41.7366, -16.733, 0.1 ) }
    dend_62 { pt3dadd( -14.9897, 41.8861, -18.5561, 0.1 ) }
    dend_62 { pt3dadd( -15.0993, 41.9727, -19.5385, 0.1 ) }
    dend_62 { pt3dadd( -15.3113, 42.1544, -21.3748, 0.1 ) }
    dend_62 { pt3dadd( -15.5225, 42.3525, -23.211, 0.1 ) }
    dend_62 { pt3dadd( -15.7218, 42.5589, -25.0293, 0.1 ) }
    dend_62 { pt3dadd( -15.9244, 42.7838, -26.8825, 0.1 ) }
    dend_62 { pt3dadd( -16.12, 43.0237, -28.7142, 0.1 ) }
    dend_62 { pt3dadd( -16.2136, 43.1457, -29.6572, 0.1 ) }
    dend_62 { pt3dadd( -16.4178, 43.4, -31.4873, 0.1 ) }
    dend_62 { pt3dadd( -16.6529, 43.6808, -33.3098, 0.1 ) }
    dend_62 { pt3dadd( -16.7958, 43.8456, -34.2401, 0.1 ) }
    dend_62 { pt3dadd( -17.1166, 44.2066, -36.0352, 0.14 ) }
    dend_62 { pt3dadd( -17.1743, 44.2622, -36.2816, 0.28 ) }
    dend_62 { pt3dadd( -17.4967, 44.5323, -37.3835, 0.1 ) }
    dend_62 { pt3dadd( -17.6116, 44.6214, -37.7112, 0.1 ) }
    dend_62 { pt3dadd( -18.4932, 44.9996, -37.1987, 0.1 ) }
    dend_62 { pt3dadd( -18.9333, 45.1819, -36.8797, 0.1 ) }
    dend_62 { pt3dadd( -19.3544, 45.3538, -36.5178, 0.14 ) }
    dend_62 { pt3dadd( -19.3544, 45.3538, -36.5178, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 80/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -22.6945, 34.7753, -22.7836, 0.7 ) }
    dend_56 { pt3dadd( -23.2916, 35.302, -23.3161, 0.7 ) }
    dend_56 { pt3dadd( -24.2088, 36.1547, -24.0207, 0.56 ) }
    dend_56 { pt3dadd( -24.5116, 36.4512, -24.2323, 0.42 ) }
    dend_56 { pt3dadd( -25.4299, 37.3748, -24.8393, 0.28 ) }
    dend_56 { pt3dadd( -25.878, 37.8182, -25.0982, 0.14 ) }
    dend_56 { pt3dadd( -26.3774, 38.3108, -25.4052, 0.1 ) }
    dend_56 { pt3dadd( -26.8614, 38.8139, -25.6989, 0.1 ) }
    dend_56 { pt3dadd( -27.0855, 39.0495, -25.8065, 0.14 ) }
    dend_56 { pt3dadd( -27.0855, 39.0495, -25.8065, 0.28 ) }
    dend_56 { pt3dadd( -27.6907, 39.7366, -26.1072, 0.42 ) }
    dend_56 { pt3dadd( -28.4581, 40.6148, -26.5927, 0.42 ) }
    dend_56 { pt3dadd( -28.8878, 41.148, -26.9165, 0.28 ) }
    dend_56 { pt3dadd( -29.2893, 41.6986, -27.247, 0.14 ) }
    dend_56 { pt3dadd( -29.6406, 42.2013, -27.5519, 0.14 ) }
    dend_56 { pt3dadd( -30.3188, 43.2376, -28.1789, 0.28 ) }
    dend_56 { pt3dadd( -30.3188, 43.2376, -28.1789, 0.42 ) }
    dend_56 { pt3dadd( -30.6302, 43.7984, -28.4189, 0.56 ) }
    dend_56 { pt3dadd( -30.9179, 44.372, -28.6485, 0.42 ) }
    dend_56 { pt3dadd( -31.2472, 44.9459, -28.8117, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_56 { pt3dadd( -31.4457, 45.2232, -28.8422, 0.42 ) }
    dend_56 { pt3dadd( -31.9354, 45.8124, -28.8204, 0.28 ) }
    dend_56 { pt3dadd( -32.3871, 46.3111, -28.7992, 0.28 ) }
    dend_56 { pt3dadd( -32.8665, 46.7949, -28.7756, 0.42 ) }
    dend_56 { pt3dadd( -33.5593, 47.4638, -28.8152, 0.42 ) }
    dend_56 { pt3dadd( -34.1092, 47.9916, -28.888, 0.28 ) }
    dend_56 { pt3dadd( -34.452, 48.312, -28.9522, 0.14 ) }
    dend_56 { pt3dadd( -35.0086, 48.8008, -29.1461, 0.1 ) }
    dend_56 { pt3dadd( -35.3549, 49.0827, -29.3037, 0.1 ) }
    dend_56 { pt3dadd( -36.199, 49.7571, -29.8618, 0.1 ) }
    dend_56 { pt3dadd( -36.6848, 50.18, -30.2758, 0.28 ) }
    dend_56 { pt3dadd( -37.1368, 50.5927, -30.722, 0.42 ) }
    dend_56 { pt3dadd( -37.9638, 51.3936, -31.5826, 0.28 ) }
    dend_56 { pt3dadd( -38.2337, 51.678, -31.8668, 0.14 ) }
    dend_56 { pt3dadd( -38.9169, 52.4531, -32.5937, 0.28 ) }
    dend_56 { pt3dadd( -39.2752, 52.8959, -32.946, 1.12 ) }
    dend_56 { pt3dadd( -39.2752, 52.8959, -32.946, 0.98 ) }
    dend_56 { pt3dadd( -39.679, 53.4776, -33.2601, 0.1 ) }
    dend_56 { pt3dadd( -40.026, 54.0269, -33.4229, 0.1 ) }
    dend_56 { pt3dadd( -40.7634, 55.2405, -33.645, 0.1 ) }
    dend_56 { pt3dadd( -41.11, 55.8141, -33.7081, 0.1 ) }
    dend_56 { pt3dadd( -41.4941, 56.4609, -33.7973, 0.1 ) }
    dend_56 { pt3dadd( -42.157, 57.6749, -33.9824, 0.14 ) }
    dend_56 { pt3dadd( -42.2949, 57.9699, -34.0775, 0.28 ) }
    dend_56 { pt3dadd( -42.4109, 58.2589, -34.2117, 0.42 ) }
    dend_56 { pt3dadd( -42.8593, 59.4805, -34.8212, 0.28 ) }
    dend_56 { pt3dadd( -43.0705, 60.0344, -35.1643, 0.28 ) }
    dend_56 { pt3dadd( -43.2648, 60.5576, -35.5554, 0.14 ) }
    dend_56 { pt3dadd( -43.662, 61.5802, -36.4153, 0.1 ) }
    dend_56 { pt3dadd( -43.8725, 62.098, -36.8111, 0.1 ) }
    dend_56 { pt3dadd( -44.1276, 62.6987, -37.1956, 0.1 ) }
    dend_56 { pt3dadd( -44.2606, 62.9856, -37.3268, 0.1 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -22.6945, 34.7753, -22.7836, 0.84 ) }
    dend_53 { pt3dadd( -22.4842, 34.9418, -23.6136, 0.84 ) }
    dend_53 { pt3dadd( -21.9615, 35.2475, -25.2019, 0.98 ) }
    dend_53 { pt3dadd( -21.3015, 35.5312, -26.7425, 0.84 ) }
    dend_53 { pt3dadd( -21.1956, 35.575, -26.9499, 0.28 ) }
    dend_53 { pt3dadd( -20.9448, 35.6886, -27.4046, 0.14 ) }
    dend_53 { pt3dadd( -20.7077, 35.806, -27.8542, 0.1 ) }
    dend_53 { pt3dadd( -20.5325, 35.8821, -28.1295, 0.1 ) }
    dend_53 { pt3dadd( -20.2097, 36.0128, -28.5311, 0.14 ) }
    dend_53 { pt3dadd( -19.6165, 36.2937, -29.2783, 0.28 ) }
    dend_53 { pt3dadd( -19.1593, 36.5619, -30.0096, 0.42 ) }
    dend_53 { pt3dadd( -18.485, 37.1033, -31.473, 0.56 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 44/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -0.70211, 173.864, -9.88494, 0.1 ) }
    dend_50 { pt3dadd( -1.33633, 175.079, -9.55374, 0.1 ) }
    dend_50 { pt3dadd( -1.65049, 175.658, -9.42411, 0.1 ) }
    dend_50 { pt3dadd( -2.02583, 176.301, -9.30689, 0.1 ) }
    dend_50 { pt3dadd( -2.36621, 176.872, -9.2182, 0.14 ) }
    dend_50 { pt3dadd( -2.71373, 177.444, -9.13476, 0.28 ) }
    dend_50 { pt3dadd( -2.71373, 177.444, -9.13476, 0.42 ) }
    dend_50 { pt3dadd( -3.1326, 178.06, -9.12919, 0.1 ) }
    dend_50 { pt3dadd( -3.56819, 178.661, -9.20138, 0.14 ) }
    dend_50 { pt3dadd( -3.76865, 178.925, -9.26378, 0.28 ) }
    dend_50 { pt3dadd( -3.96251, 179.175, -9.37887, 0.42 ) }
    dend_50 { pt3dadd( -4.37587, 179.715, -9.70479, 0.56 ) }
    dend_50 { pt3dadd( -4.77115, 180.267, -10.013, 0.42 ) }
    dend_50 { pt3dadd( -5.4302, 181.339, -10.5607, 0.28 ) }
    dend_50 { pt3dadd( -5.7441, 181.969, -10.8302, 0.14 ) }
    dend_50 { pt3dadd( -6.22386, 183.219, -11.1277, 0.28 ) }
    dend_50 { pt3dadd( -6.22386, 183.219, -11.1277, 0.42 ) }
    dend_50 { pt3dadd( -6.36641, 184.578, -10.9812, 0.1 ) }
    dend_50 { pt3dadd( -6.35381, 185.311, -10.7961, 0.1 ) }
    dend_50 { pt3dadd( -6.28616, 186.0, -10.5299, 0.1 ) }
    dend_50 { pt3dadd( -6.08518, 187.274, -9.9469, 0.1 ) }
    dend_50 { pt3dadd( -6.00778, 187.678, -9.72754, 0.1 ) }
    dend_50 { pt3dadd( -5.8662, 188.339, -9.39461, 0.14 ) }
    dend_50 { pt3dadd( -5.75067, 188.764, -9.22419, 0.28 ) }
    dend_50 { pt3dadd( -5.6661, 189.047, -9.09512, 0.42 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 69/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.70211, 173.864, -9.88494, 0.28 ) }
    dend_49 { pt3dadd( -0.203316, 175.242, -9.67088, 0.28 ) }
    dend_49 { pt3dadd( 0.00393537, 175.985, -9.58156, 0.14 ) }
    dend_49 { pt3dadd( 0.102694, 176.478, -9.53302, 0.1 ) }
    dend_49 { pt3dadd( 0.229888, 177.453, -9.45058, 0.14 ) }
    dend_49 { pt3dadd( 0.276332, 177.948, -9.41592, 0.1 ) }
    dend_49 { pt3dadd( 0.329727, 178.647, -9.37619, 0.1 ) }
    dend_49 { pt3dadd( 0.338587, 179.352, -9.38137, 0.14 ) }
    dend_49 { pt3dadd( 0.323474, 180.042, -9.38182, 0.1 ) }
    dend_49 { pt3dadd( 0.280958, 180.746, -9.37701, 0.1 ) }
    dend_49 { pt3dadd( 0.219369, 181.535, -9.36891, 0.1 ) }
    dend_49 { pt3dadd( 0.176541, 182.31, -9.36438, 0.1 ) }
    dend_49 { pt3dadd( 0.170235, 183.012, -9.36661, 0.1 ) }
    dend_49 { pt3dadd( 0.198584, 183.8, -9.37599, 0.1 ) }
    dend_49 { pt3dadd( 0.25666, 184.487, -9.39066, 0.14 ) }
    dend_49 { pt3dadd( 0.342349, 185.271, -9.41117, 0.1 ) }
    dend_49 { pt3dadd( 0.394655, 185.773, -9.42381, 0.1 ) }
    dend_49 { pt3dadd( 0.46346, 186.546, -9.44099, 0.14 ) }
    dend_49 { pt3dadd( 0.515738, 187.335, -9.45503, 0.28 ) }
    dend_49 { pt3dadd( 0.514658, 187.671, -9.4848, 0.28 ) }
    dend_49 { pt3dadd( 0.463738, 188.364, -9.58582, 0.1 ) }
    dend_49 { pt3dadd( 0.354147, 189.046, -9.70972, 0.1 ) }
    dend_49 { pt3dadd( 0.197617, 189.72, -9.84301, 0.1 ) }
    dend_49 { pt3dadd( 0.00769547, 190.383, -9.97767, 0.1 ) }
    dend_49 { pt3dadd( -0.399729, 191.735, -10.2448, 0.14 ) }
    dend_49 { pt3dadd( -0.582955, 192.389, -10.3644, 0.28 ) }
    dend_49 { pt3dadd( -0.738443, 193.067, -10.4833, 0.14 ) }
    dend_49 { pt3dadd( -0.851559, 193.752, -10.5894, 0.1 ) }
    dend_49 { pt3dadd( -0.928169, 194.445, -10.6713, 0.1 ) }
    dend_49 { pt3dadd( -0.981928, 195.23, -10.7225, 0.1 ) }
    dend_49 { pt3dadd( -0.997217, 196.008, -10.7234, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_49 { pt3dadd( -0.991127, 196.506, -10.7606, 0.1 ) }
    dend_49 { pt3dadd( -0.961332, 197.279, -10.8146, 0.1 ) }
    dend_49 { pt3dadd( -0.919004, 197.979, -10.8577, 0.1 ) }
    dend_49 { pt3dadd( -0.867238, 198.681, -10.8928, 0.1 ) }
    dend_49 { pt3dadd( -0.825527, 199.459, -10.917, 0.1 ) }
    dend_49 { pt3dadd( -0.768072, 200.758, -10.9355, 0.1 ) }
    dend_49 { pt3dadd( -0.729589, 202.195, -10.9306, 0.14 ) }
    dend_49 { pt3dadd( -0.720805, 202.986, -10.9144, 0.1 ) }
    dend_49 { pt3dadd( -0.724733, 203.762, -10.8861, 0.1 ) }
    dend_49 { pt3dadd( -0.765099, 204.461, -10.8446, 0.1 ) }
    dend_49 { pt3dadd( -0.866223, 205.231, -10.8322, 0.1 ) }
    dend_49 { pt3dadd( -1.02512, 205.912, -10.895, 0.1 ) }
    dend_49 { pt3dadd( -1.25342, 206.537, -11.1296, 0.1 ) }
    dend_49 { pt3dadd( -1.53821, 207.074, -11.4796, 0.14 ) }
    dend_49 { pt3dadd( -1.88141, 207.608, -11.9333, 0.1 ) }
    dend_49 { pt3dadd( -2.48672, 208.434, -12.7366, 0.1 ) }
    dend_49 { pt3dadd( -3.20085, 209.331, -13.6647, 0.1 ) }
    dend_49 { pt3dadd( -3.90424, 210.167, -14.5987, 0.1 ) }
    dend_49 { pt3dadd( -4.62958, 211.015, -15.5644, 0.14 ) }
    dend_49 { pt3dadd( -4.79924, 211.226, -15.791, 0.28 ) }
    dend_49 { pt3dadd( -5.14938, 211.746, -16.2549, 0.42 ) }
    dend_49 { pt3dadd( -5.42473, 212.319, -16.5613, 0.56 ) }
    dend_49 { pt3dadd( -5.51853, 212.649, -16.6404, 0.7 ) }
    dend_49 { pt3dadd( -5.6346, 213.341, -16.6805, 0.84 ) }
    dend_49 { pt3dadd( -5.71434, 214.113, -16.6688, 0.7 ) }
    dend_49 { pt3dadd( -5.80181, 214.897, -16.7233, 0.56 ) }
    dend_49 { pt3dadd( -5.89444, 215.661, -16.8219, 0.42 ) }
    dend_49 { pt3dadd( -6.00072, 216.346, -16.9326, 0.28 ) }
    dend_49 { pt3dadd( -6.12682, 217.02, -17.1009, 0.14 ) }
    dend_49 { pt3dadd( -6.27298, 217.673, -17.3122, 0.1 ) }
    dend_49 { pt3dadd( -6.63047, 218.941, -17.8863, 0.1 ) }
    dend_49 { pt3dadd( -6.82325, 219.534, -18.2081, 0.1 ) }
    dend_49 { pt3dadd( -7.02355, 220.086, -18.5779, 0.14 ) }
    dend_49 { pt3dadd( -7.45291, 221.18, -19.4795, 0.28 ) }
    dend_49 { pt3dadd( -7.65822, 221.682, -19.9304, 0.28 ) }
    dend_49 { pt3dadd( -8.02385, 222.607, -20.7676, 0.14 ) }
    dend_49 { pt3dadd( -8.20977, 223.14, -21.1911, 0.1 ) }
    dend_49 { pt3dadd( -8.55182, 224.25, -22.0242, 0.1 ) }
    dend_49 { pt3dadd( -8.84338, 225.435, -22.7852, 0.1 ) }
    dend_49 { pt3dadd( -8.94299, 226.07, -23.0671, 0.1 ) }
    dend_49 { pt3dadd( -8.97851, 226.824, -23.2931, 0.14 ) }
    dend_49 { pt3dadd( -8.8777, 228.287, -23.4567, 0.28 ) }
    dend_49 { pt3dadd( -8.82132, 228.635, -23.459, 0.42 ) }
    dend_49 { pt3dadd( -8.64594, 229.387, -23.3847, 0.14 ) }
    dend_49 { pt3dadd( -8.44629, 230.146, -23.282, 0.1 ) }
    dend_49 { pt3dadd( -8.32252, 230.627, -23.2404, 0.1 ) }
    dend_49 { pt3dadd( -8.15202, 231.384, -23.2207, 0.1 ) }
    dend_49 { pt3dadd( -8.01951, 232.163, -23.2503, 0.1 ) }
    dend_49 { pt3dadd( -7.92786, 232.93, -23.329, 0.1 ) }
    dend_49 { pt3dadd( -7.90316, 233.275, -23.3823, 0.1 ) }
    dend_49 { pt3dadd( -7.8888, 234.036, -23.5887, 0.1 ) }
    dend_49 { pt3dadd( -7.8964, 234.769, -23.8509, 0.1 ) }
    dend_49 { pt3dadd( -7.91081, 235.418, -24.1261, 0.1 ) }
    dend_49 { pt3dadd( -7.93836, 236.764, -24.7446, 0.1 ) }
    dend_49 { pt3dadd( -7.95379, 237.392, -25.0377, 0.1 ) }
    dend_49 { pt3dadd( -7.99512, 238.744, -25.6425, 0.1 ) }
    dend_49 { pt3dadd( -8.01816, 239.204, -25.8327, 0.1 ) }
    dend_49 { pt3dadd( -8.068, 239.936, -26.0873, 0.1 ) }
    dend_49 { pt3dadd( -8.11505, 240.702, -26.28, 0.1 ) }
    dend_49 { pt3dadd( -8.15284, 241.401, -26.3672, 0.1 ) }
    dend_49 { pt3dadd( -8.1909, 242.088, -26.413, 0.1 ) }
    dend_49 { pt3dadd( -8.23147, 242.789, -26.4085, 0.1 ) }
    dend_49 { pt3dadd( -8.28513, 243.492, -26.4015, 0.1 ) }
    dend_49 { pt3dadd( -8.35628, 244.28, -26.3915, 0.1 ) }
    dend_49 { pt3dadd( -8.40704, 245.052, -26.3272, 0.1 ) }
    dend_49 { pt3dadd( -8.42087, 245.401, -26.2783, 0.1 ) }
    dend_49 { pt3dadd( -8.4455, 246.178, -26.1338, 0.1 ) }
    dend_49 { pt3dadd( -8.45355, 246.855, -25.9838, 0.1 ) }
    dend_49 { pt3dadd( -8.47478, 247.52, -25.7609, 0.1 ) }
    dend_49 { pt3dadd( -8.61119, 248.81, -25.046, 0.14 ) }
    dend_49 { pt3dadd( -8.73756, 249.357, -24.6184, 0.1 ) }
    dend_49 { pt3dadd( -8.93473, 249.83, -24.1391, 0.1 ) }
    dend_49 { pt3dadd( -9.07056, 250.028, -23.885, 0.14 ) }
    dend_49 { pt3dadd( -9.82316, 250.779, -22.8535, 0.1 ) }
    dend_49 { pt3dadd( -10.7753, 251.446, -21.9375, 0.1 ) }
    dend_49 { pt3dadd( -11.4043, 251.779, -21.6223, 0.14 ) }
    dend_49 { pt3dadd( -12.1197, 252.103, -21.5484, 0.14 ) }
    dend_49 { pt3dadd( -12.5589, 252.3, -21.6265, 0.1 ) }
    dend_49 { pt3dadd( -13.8034, 252.876, -22.1839, 0.1 ) }
    dend_49 { pt3dadd( -14.18, 253.057, -22.4474, 0.1 ) }
    dend_49 { pt3dadd( -15.2331, 253.584, -23.3437, 0.1 ) }
    dend_49 { pt3dadd( -16.2203, 254.104, -24.3064, 0.1 ) }
    dend_49 { pt3dadd( -16.7198, 254.375, -24.853, 0.1 ) }
    dend_49 { pt3dadd( -17.49, 254.782, -25.7533, 0.1 ) }
    dend_49 { pt3dadd( -17.795, 254.931, -26.1188, 0.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 85/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.0664, -83.5634, 9.55417, 1.12 ) }
    dend_18 { pt3dadd( 11.1159, -83.8909, 9.55224, 1.12 ) }
    dend_18 { pt3dadd( 11.1767, -84.2646, 9.54976, 1.26 ) }
    dend_18 { pt3dadd( 11.2361, -84.5964, 9.5472, 1.4 ) }
    dend_18 { pt3dadd( 11.314, -84.926, 9.54342, 1.54 ) }
    dend_18 { pt3dadd( 11.3579, -85.0878, 9.54119, 1.4 ) }
    dend_18 { pt3dadd( 11.3579, -85.0878, 9.54119, 1.26 ) }
    dend_18 { pt3dadd( 11.4142, -85.2379, 9.50861, 1.12 ) }
    dend_18 { pt3dadd( 11.5409, -85.5386, 9.42418, 0.98 ) }
    dend_18 { pt3dadd( 11.6857, -85.8612, 9.28857, 0.84 ) }
    dend_18 { pt3dadd( 11.8132, -86.1413, 9.15135, 0.7 ) }
    dend_18 { pt3dadd( 12.0769, -86.7299, 8.85281, 0.84 ) }
    dend_18 { pt3dadd( 12.2041, -87.0086, 8.71237, 0.98 ) }
    dend_18 { pt3dadd( 12.3357, -87.2923, 8.58672, 1.12 ) }
    dend_18 { pt3dadd( 12.6284, -87.8971, 8.35526, 1.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 12.7653, -88.1863, 8.24932, 1.12 ) }
    dend_18 { pt3dadd( 12.908, -88.4798, 8.1588, 0.98 ) }
    dend_18 { pt3dadd( 13.0713, -88.8134, 8.11014, 1.12 ) }
    dend_18 { pt3dadd( 13.3617, -89.3647, 8.06476, 0.98 ) }
    dend_18 { pt3dadd( 13.4767, -89.5674, 8.08716, 1.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.0664, -83.5634, 9.55417, 0.28 ) }
    dend_17 { pt3dadd( 11.4031, -83.751, 9.34747, 0.28 ) }
    dend_17 { pt3dadd( 11.9485, -84.0514, 9.01246, 0.42 ) }
    dend_17 { pt3dadd( 12.3203, -84.2395, 8.85006, 0.56 ) }
    dend_17 { pt3dadd( 12.9094, -84.5485, 8.63824, 0.42 ) }
    dend_17 { pt3dadd( 13.2872, -84.7532, 8.51452, 0.28 ) }
    dend_17 { pt3dadd( 14.0304, -85.1832, 8.28027, 0.14 ) }
    dend_17 { pt3dadd( 14.6106, -85.5521, 8.11494, 0.28 ) }
    dend_17 { pt3dadd( 15.5774, -86.2253, 7.86124, 0.28 ) }
    dend_17 { pt3dadd( 16.1315, -86.6385, 7.71254, 0.14 ) }
    dend_17 { pt3dadd( 16.4693, -86.9089, 7.61727, 0.1 ) }
    dend_17 { pt3dadd( 16.9902, -87.3571, 7.45111, 0.1 ) }
    dend_17 { pt3dadd( 17.464, -87.8223, 7.2311, 0.1 ) }
    dend_17 { pt3dadd( 17.7347, -88.1293, 7.05085, 0.1 ) }
    dend_17 { pt3dadd( 18.2381, -88.7323, 6.64417, 0.1 ) }
    dend_17 { pt3dadd( 18.5042, -89.0221, 6.44067, 0.1 ) }
    dend_17 { pt3dadd( 18.9891, -89.4635, 6.17611, 0.14 ) }
    dend_17 { pt3dadd( 19.8747, -90.0812, 5.86765, 0.28 ) }
    dend_17 { pt3dadd( 19.8747, -90.0812, 5.86765, 0.42 ) }
    dend_17 { pt3dadd( 20.9604, -90.5795, 5.70876, 0.42 ) }
    dend_17 { pt3dadd( 21.6186, -90.8376, 5.7133, 0.56 ) }
    dend_17 { pt3dadd( 22.7432, -91.2788, 5.79405, 0.42 ) }
    dend_17 { pt3dadd( 23.3792, -91.5523, 5.86657, 0.28 ) }
    dend_17 { pt3dadd( 24.0127, -91.8632, 5.93566, 0.14 ) }
    dend_17 { pt3dadd( 24.392, -92.0805, 5.95211, 0.28 ) }
    dend_17 { pt3dadd( 25.3539, -92.7382, 5.89765, 0.56 ) }
    dend_17 { pt3dadd( 25.9017, -93.1675, 5.82767, 0.7 ) }
    dend_17 { pt3dadd( 26.3805, -93.5752, 5.76033, 0.56 ) }
    dend_17 { pt3dadd( 27.0297, -94.1738, 5.70877, 0.42 ) }
    dend_17 { pt3dadd( 27.3433, -94.4922, 5.69286, 0.28 ) }
    dend_17 { pt3dadd( 27.6339, -94.8185, 5.6745, 0.14 ) }
    dend_17 { pt3dadd( 28.1958, -95.5176, 5.60253, 0.14 ) }
    dend_17 { pt3dadd( 28.901, -96.4435, 5.53413, 0.28 ) }
    dend_17 { pt3dadd( 29.2631, -96.9475, 5.49869, 0.14 ) }
    dend_17 { pt3dadd( 29.6092, -97.4719, 5.46183, 0.14 ) }
    dend_17 { pt3dadd( 29.9586, -97.9989, 5.45165, 0.1 ) }
    dend_17 { pt3dadd( 30.3465, -98.581, 5.4495, 0.1 ) }
    dend_17 { pt3dadd( 30.7368, -99.1613, 5.43515, 0.1 ) }
    dend_17 { pt3dadd( 31.1634, -99.7251, 5.42571, 0.1 ) }
    dend_17 { pt3dadd( 31.4576, -100.056, 5.43929, 0.1 ) }
    dend_17 { pt3dadd( 32.2642, -100.896, 5.5153, 0.1 ) }
    dend_17 { pt3dadd( 32.7554, -101.39, 5.5727, 0.1 ) }
    dend_17 { pt3dadd( 33.2535, -101.888, 5.6358, 0.1 ) }
    dend_17 { pt3dadd( 34.1948, -102.8, 5.81776, 0.1 ) }
    dend_17 { pt3dadd( 34.5071, -103.112, 5.88896, 0.1 ) }
    dend_17 { pt3dadd( 34.9269, -103.571, 5.98406, 0.14 ) }
    dend_17 { pt3dadd( 35.388, -104.095, 6.09702, 0.28 ) }
    dend_17 { pt3dadd( 35.6702, -104.418, 6.18353, 0.42 ) }
    dend_17 { pt3dadd( 36.4181, -105.282, 6.41663, 0.1 ) }
    dend_17 { pt3dadd( 36.8154, -105.76, 6.51677, 0.1 ) }
    dend_17 { pt3dadd( 37.2106, -106.244, 6.61281, 0.14 ) }
    dend_17 { pt3dadd( 38.0224, -107.275, 6.78489, 0.1 ) }
    dend_17 { pt3dadd( 38.4312, -107.838, 6.85693, 0.1 ) }
    dend_17 { pt3dadd( 38.6724, -108.214, 6.8788, 0.1 ) }
    dend_17 { pt3dadd( 39.0091, -108.826, 6.85383, 0.14 ) }
    dend_17 { pt3dadd( 39.2775, -109.393, 6.77069, 0.28 ) }
    dend_17 { pt3dadd( 39.5163, -109.965, 6.66545, 0.28 ) }
    dend_17 { pt3dadd( 39.6115, -110.26, 6.60039, 0.42 ) }
    dend_17 { pt3dadd( 39.8247, -110.848, 6.53309, 0.28 ) }
    dend_17 { pt3dadd( 40.059, -111.435, 6.52008, 0.14 ) }
    dend_17 { pt3dadd( 40.6209, -112.497, 6.65791, 0.1 ) }
    dend_17 { pt3dadd( 41.252, -113.454, 6.86682, 0.28 ) }
    dend_17 { pt3dadd( 41.6251, -113.949, 6.99301, 0.14 ) }
    dend_17 { pt3dadd( 42.4365, -114.956, 7.27212, 0.1 ) }
    dend_17 { pt3dadd( 42.8356, -115.425, 7.40225, 0.1 ) }
    dend_17 { pt3dadd( 43.699, -116.4, 7.65749, 0.1 ) }
    dend_17 { pt3dadd( 44.1585, -116.906, 7.80643, 0.1 ) }
    dend_17 { pt3dadd( 44.619, -117.434, 7.90152, 0.1 ) }
    dend_17 { pt3dadd( 44.8258, -117.667, 7.93167, 0.1 ) }
    dend_17 { pt3dadd( 45.2677, -118.219, 7.91581, 0.1 ) }
    dend_17 { pt3dadd( 45.5427, -118.557, 7.87689, 0.1 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -32.6121, -32.7956, -35.1891, 0.28 ) }
    dend_7 { pt3dadd( -32.8167, -33.2713, -35.1413, 0.28 ) }
    dend_7 { pt3dadd( -33.2015, -34.221, -35.0498, 0.14 ) }
    dend_7 { pt3dadd( -33.3948, -34.7016, -35.0037, 0.28 ) }
    dend_7 { pt3dadd( -33.6848, -35.4567, -34.9336, 0.14 ) }
    dend_7 { pt3dadd( -33.962, -36.2279, -34.865, 0.1 ) }
    dend_7 { pt3dadd( -34.1211, -36.7281, -34.8239, 0.1 ) }
    dend_7 { pt3dadd( -34.2925, -37.5175, -34.7719, 0.14 ) }
    dend_7 { pt3dadd( -34.3416, -38.0347, -34.7482, 0.28 ) }
    dend_7 { pt3dadd( -34.328, -38.3986, -34.7392, 0.42 ) }
    dend_7 { pt3dadd( -34.2692, -38.7616, -34.7377, 0.98 ) }
    dend_7 { pt3dadd( -34.0864, -39.4611, -34.746, 0.84 ) }
    dend_7 { pt3dadd( -33.8135, -40.2375, -34.7665, 0.7 ) }
    dend_7 { pt3dadd( -33.5426, -40.9034, -34.7901, 0.56 ) }
    dend_7 { pt3dadd( -33.217, -41.6684, -34.8196, 0.42 ) }
    dend_7 { pt3dadd( -32.9339, -42.3292, -34.7941, 0.28 ) }
    dend_7 { pt3dadd( -32.65, -43.0044, -34.7268, 0.14 ) }
    dend_7 { pt3dadd( -32.3492, -43.7519, -34.6146, 0.1 ) }
    dend_7 { pt3dadd( -32.0978, -44.4275, -34.4876, 0.1 ) }
    dend_7 { pt3dadd( -31.858, -45.1079, -34.3447, 0.1 ) }
    dend_7 { pt3dadd( -31.4047, -46.4997, -34.0306, 0.1 ) }
    dend_7 { pt3dadd( -31.1889, -47.1848, -33.872, 0.1 ) }
    dend_7 { pt3dadd( -31.0021, -47.8625, -33.7196, 0.1 ) }
    dend_7 { pt3dadd( -30.8405, -48.5661, -33.5786, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( -30.7096, -49.2776, -33.4677, 0.14 ) }
    dend_7 { pt3dadd( -30.6583, -49.6403, -33.4343, 0.28 ) }
    dend_7 { pt3dadd( -30.6195, -50.0024, -33.4296, 0.7 ) }
    dend_7 { pt3dadd( -30.5449, -50.8084, -33.417, 0.56 ) }
    dend_7 { pt3dadd( -30.4803, -51.5374, -33.4052, 0.42 ) }
    dend_7 { pt3dadd( -30.4231, -52.3576, -33.3894, 0.28 ) }
    dend_7 { pt3dadd( -30.3757, -53.0878, -33.3748, 0.14 ) }
    dend_7 { pt3dadd( -30.3213, -53.8212, -33.3612, 0.1 ) }
    dend_7 { pt3dadd( -30.2886, -54.1713, -33.3558, 0.1 ) }
    dend_7 { pt3dadd( -30.2145, -54.903, -33.3455, 0.1 ) }
    dend_7 { pt3dadd( -30.1744, -55.4214, -33.3361, 0.1 ) }
    dend_7 { pt3dadd( -30.1226, -56.1514, -33.3222, 0.1 ) }
    dend_7 { pt3dadd( -30.0959, -56.8862, -33.3041, 0.1 ) }
    dend_7 { pt3dadd( -30.0814, -57.6052, -33.2845, 0.1 ) }
    dend_7 { pt3dadd( -30.0799, -58.4271, -33.2596, 0.1 ) }
    dend_7 { pt3dadd( -30.0975, -59.2512, -33.2315, 0.1 ) }
    dend_7 { pt3dadd( -30.1273, -59.9731, -33.2046, 0.1 ) }
    dend_7 { pt3dadd( -30.1795, -60.7955, -33.171, 0.1 ) }
    dend_7 { pt3dadd( -30.2326, -61.5248, -33.1401, 0.1 ) }
    dend_7 { pt3dadd( -30.2824, -62.3321, -33.1073, 0.14 ) }
    dend_7 { pt3dadd( -30.3063, -63.1536, -33.0783, 0.28 ) }
    dend_7 { pt3dadd( -30.3214, -63.9649, -33.0511, 0.42 ) }
    dend_7 { pt3dadd( -30.3418, -64.6961, -33.0254, 0.56 ) }
    dend_7 { pt3dadd( -30.3463, -65.0636, -33.0134, 0.42 ) }
    dend_7 { pt3dadd( -30.3534, -65.7983, -33.0478, 0.42 ) }
    dend_7 { pt3dadd( -30.3449, -66.5252, -33.1335, 0.56 ) }
    dend_7 { pt3dadd( -30.3286, -67.0258, -33.2221, 0.1 ) }
    dend_7 { pt3dadd( -30.2887, -67.8307, -33.3973, 0.1 ) }
    dend_7 { pt3dadd( -30.2479, -68.5454, -33.5662, 0.1 ) }
    dend_7 { pt3dadd( -30.1375, -69.9975, -33.9134, 0.1 ) }
    dend_7 { pt3dadd( -30.1097, -70.3544, -33.9976, 0.1 ) }
    dend_7 { pt3dadd( -30.0429, -71.0542, -34.1505, 0.7 ) }
    dend_7 { pt3dadd( -29.9519, -71.7717, -34.2841, 0.56 ) }
    dend_7 { pt3dadd( -29.8459, -72.4891, -34.3834, 0.42 ) }
    dend_7 { pt3dadd( -29.7352, -73.2144, -34.4353, 0.42 ) }
    dend_7 { pt3dadd( -29.6464, -73.7135, -34.3943, 0.56 ) }
    dend_7 { pt3dadd( -29.5097, -74.4254, -34.293, 0.56 ) }
    dend_7 { pt3dadd( -29.3722, -75.1344, -34.174, 0.42 ) }
    dend_7 { pt3dadd( -29.2306, -75.8421, -34.0324, 0.28 ) }
    dend_7 { pt3dadd( -29.0813, -76.5389, -33.8655, 0.14 ) }
    dend_7 { pt3dadd( -28.7426, -77.9424, -33.4629, 0.1 ) }
    dend_7 { pt3dadd( -28.5515, -78.5994, -33.241, 0.1 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -32.6121, -32.7956, -35.1891, 0.1 ) }
    dend_6 { pt3dadd( -33.389, -31.537, -34.3277, 0.1 ) }
    dend_6 { pt3dadd( -33.815, -30.962, -33.9392, 0.1 ) }
    dend_6 { pt3dadd( -34.2807, -30.4207, -33.569, 0.1 ) }
    dend_6 { pt3dadd( -34.8358, -29.821, -33.1557, 0.1 ) }
    dend_6 { pt3dadd( -35.3458, -29.3085, -32.8033, 0.1 ) }
    dend_6 { pt3dadd( -35.3458, -29.3085, -32.8033, 0.1 ) }
    dend_6 { pt3dadd( -36.1317, -28.5591, -32.4204, 0.1 ) }
    dend_6 { pt3dadd( -36.5335, -28.1907, -32.2263, 0.1 ) }
    dend_6 { pt3dadd( -36.5335, -28.1907, -32.2263, 0.1 ) }
    dend_6 { pt3dadd( -37.1203, -27.5672, -31.9332, 0.1 ) }
    dend_6 { pt3dadd( -37.6294, -26.9869, -31.6744, 0.1 ) }
    dend_6 { pt3dadd( -38.1075, -26.3722, -31.4233, 0.1 ) }
    dend_6 { pt3dadd( -38.5853, -25.6501, -31.1602, 0.1 ) }
    dend_6 { pt3dadd( -38.9904, -24.9774, -30.9302, 0.1 ) }
    dend_6 { pt3dadd( -39.3766, -24.294, -30.7749, 0.1 ) }
    dend_6 { pt3dadd( -39.3766, -24.294, -30.7749, 0.1 ) }
    dend_6 { pt3dadd( -39.7266, -23.56, -30.7327, 0.1 ) }
    dend_6 { pt3dadd( -40.053, -22.8097, -30.7251, 0.1 ) }
    dend_6 { pt3dadd( -40.3397, -22.0478, -30.7402, 0.1 ) }
    dend_6 { pt3dadd( -40.9088, -20.4284, -30.7783, 0.1 ) }
    dend_6 { pt3dadd( -41.1647, -19.6702, -30.7861, 0.1 ) }
    dend_6 { pt3dadd( -41.4524, -18.8033, -30.8366, 0.1 ) }
    dend_6 { pt3dadd( -41.7051, -18.0323, -30.9057, 0.1 ) }
    dend_6 { pt3dadd( -41.9854, -17.1803, -30.9853, 0.1 ) }
    dend_6 { pt3dadd( -42.2454, -16.4104, -31.0369, 0.1 ) }
    dend_6 { pt3dadd( -42.5038, -15.6341, -31.0463, 0.1 ) }
    dend_6 { pt3dadd( -43.0115, -14.1524, -31.0715, 0.1 ) }
    dend_6 { pt3dadd( -43.2865, -13.3966, -31.0749, 0.1 ) }
    dend_6 { pt3dadd( -43.5702, -12.6335, -31.0594, 0.1 ) }
    dend_6 { pt3dadd( -43.8669, -11.8711, -31.0729, 0.1 ) }
    dend_6 { pt3dadd( -44.1996, -11.0164, -31.0979, 0.1 ) }
    dend_6 { pt3dadd( -44.4931, -10.2676, -31.1063, 0.1 ) }
    dend_6 { pt3dadd( -44.7801, -9.50595, -31.0844, 0.1 ) }
    dend_6 { pt3dadd( -45.0639, -8.7385, -31.0786, 0.1 ) }
    dend_6 { pt3dadd( -45.6596, -7.1268, -31.0766, 0.1 ) }
    dend_6 { pt3dadd( -45.9431, -6.37414, -31.0696, 0.1 ) }
    dend_6 { pt3dadd( -46.2406, -5.61683, -31.1006, 0.1 ) }
    dend_6 { pt3dadd( -46.5745, -4.7642, -31.1578, 0.1 ) }
    dend_6 { pt3dadd( -46.8736, -4.00427, -31.2085, 0.1 ) }
    dend_6 { pt3dadd( -47.1615, -3.24339, -31.2421, 0.1 ) }
    dend_6 { pt3dadd( -47.4405, -2.489, -31.2364, 0.1 ) }
    dend_6 { pt3dadd( -48.0369, -0.877549, -31.2342, 0.1 ) }
    dend_6 { pt3dadd( -48.3259, -0.11208, -31.2269, 0.1 ) }
    dend_6 { pt3dadd( -48.6244, 0.644859, -31.2575, 0.1 ) }
    dend_6 { pt3dadd( -48.953, 1.48138, -31.3136, 0.1 ) }
    dend_6 { pt3dadd( -49.2512, 2.23738, -31.364, 0.1 ) }
    dend_6 { pt3dadd( -49.5397, 3.00188, -31.4065, 0.1 ) }
    dend_6 { pt3dadd( -49.8199, 3.76635, -31.4145, 0.1 ) }
    dend_6 { pt3dadd( -50.4048, 5.37188, -31.4574, 0.1 ) }
    dend_6 { pt3dadd( -50.688, 6.13503, -31.4764, 0.1 ) }
    dend_6 { pt3dadd( -50.9815, 6.8945, -31.4786, 0.1 ) }
    dend_6 { pt3dadd( -51.1279, 7.27633, -31.4656, 0.1 ) }
    dend_6 { pt3dadd( -51.4152, 8.0244, -31.3965, 0.1 ) }
    dend_6 { pt3dadd( -51.708, 8.77326, -31.2681, 0.1 ) }
    dend_6 { pt3dadd( -52.0103, 9.52257, -31.1391, 0.1 ) }
    dend_6 { pt3dadd( -52.3245, 10.2693, -31.0578, 0.1 ) }
    dend_6 { pt3dadd( -52.6531, 11.0168, -31.0056, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( -52.9927, 11.7561, -30.9703, 0.1 ) }
    dend_6 { pt3dadd( -53.3282, 12.4869, -30.9541, 0.1 ) }
    dend_6 { pt3dadd( -54.0458, 14.0481, -30.9368, 0.1 ) }
    dend_6 { pt3dadd( -54.3856, 14.7879, -30.9259, 0.1 ) }
    dend_6 { pt3dadd( -54.7125, 15.5377, -30.9046, 0.1 ) }
    dend_6 { pt3dadd( -54.8642, 15.902, -30.883, 0.1 ) }
    dend_6 { pt3dadd( -55.1515, 16.6603, -30.8095, 0.1 ) }
    dend_6 { pt3dadd( -55.4163, 17.4253, -30.6902, 0.1 ) }
    dend_6 { pt3dadd( -55.6601, 18.1814, -30.5118, 0.1 ) }
    dend_6 { pt3dadd( -55.9258, 19.0369, -30.3137, 0.1 ) }
    dend_6 { pt3dadd( -56.1423, 19.7931, -30.1455, 0.1 ) }
    dend_6 { pt3dadd( -56.2931, 20.3388, -30.0262, 0.1 ) }
    dend_6 { pt3dadd( -56.5041, 21.1072, -29.8588, 0.1 ) }
    dend_6 { pt3dadd( -56.7236, 21.8767, -29.688, 0.1 ) }
    dend_6 { pt3dadd( -56.936, 22.6301, -29.5217, 0.1 ) }
    dend_6 { pt3dadd( -57.1887, 23.4878, -29.3283, 0.1 ) }
    dend_6 { pt3dadd( -57.4165, 24.2501, -29.1552, 0.1 ) }
    dend_6 { pt3dadd( -57.6568, 25.0076, -28.9779, 0.1 ) }
    dend_6 { pt3dadd( -57.9224, 25.7725, -28.8602, 0.1 ) }
    dend_6 { pt3dadd( -58.0669, 26.1496, -28.8265, 0.1 ) }
    dend_6 { pt3dadd( -58.3848, 26.8985, -28.7933, 0.1 ) }
    dend_6 { pt3dadd( -58.7316, 27.6395, -28.7786, 0.1 ) }
    dend_6 { pt3dadd( -59.0872, 28.3719, -28.7725, 0.1 ) }
    dend_6 { pt3dadd( -59.8339, 29.8626, -28.7506, 0.1 ) }
    dend_6 { pt3dadd( -60.1994, 30.5741, -28.725, 0.1 ) }
    dend_6 { pt3dadd( -60.593, 31.2914, -28.7268, 0.1 ) }
    dend_6 { pt3dadd( -60.9892, 32.0025, -28.7474, 0.1 ) }
    dend_6 { pt3dadd( -61.3853, 32.7136, -28.7679, 0.1 ) }
    dend_6 { pt3dadd( -61.779, 33.4309, -28.7699, 0.1 ) }
    dend_6 { pt3dadd( -62.1606, 34.1492, -28.7334, 0.1 ) }
    dend_6 { pt3dadd( -62.9413, 35.6134, -28.668, 0.1 ) }
    dend_6 { pt3dadd( -63.3229, 36.3318, -28.6315, 0.1 ) }
    dend_6 { pt3dadd( -63.7166, 37.0491, -28.6335, 0.1 ) }
    dend_6 { pt3dadd( -64.1135, 37.7596, -28.6575, 0.1 ) }
    dend_6 { pt3dadd( -64.511, 38.4697, -28.6851, 0.1 ) }
    dend_6 { pt3dadd( -64.9065, 39.1859, -28.6962, 0.1 ) }
    dend_6 { pt3dadd( -65.2835, 39.8912, -28.6682, 0.1 ) }
    dend_6 { pt3dadd( -66.0711, 41.3588, -28.747, 0.1 ) }
    dend_6 { pt3dadd( -66.261, 41.7145, -28.7871, 0.1 ) }
    dend_6 { pt3dadd( -66.6492, 42.4183, -28.9406, 0.1 ) }
    dend_6 { pt3dadd( -67.0358, 43.1095, -29.1293, 0.1 ) }
    dend_6 { pt3dadd( -67.4153, 43.7912, -29.3761, 0.1 ) }
    dend_6 { pt3dadd( -68.191, 45.2, -29.9592, 0.1 ) }
    dend_6 { pt3dadd( -68.5769, 45.8675, -30.2332, 0.1 ) }
    dend_6 { pt3dadd( -69.4194, 47.1892, -30.7963, 0.1 ) }
    dend_6 { pt3dadd( -69.8674, 47.8169, -31.0697, 0.1 ) }
    dend_6 { pt3dadd( -70.921, 49.0715, -31.562, 0.1 ) }
    dend_6 { pt3dadd( -70.921, 49.0715, -31.562, 0.1 ) }
    dend_6 { pt3dadd( -71.822, 49.769, -31.7283, 0.1 ) }
    dend_6 { pt3dadd( -72.5859, 50.2664, -31.8055, 0.1 ) }
    dend_6 { pt3dadd( -73.0781, 50.5453, -31.7949, 0.1 ) }
    dend_6 { pt3dadd( -74.1133, 51.0624, -31.7986, 0.1 ) }
    dend_6 { pt3dadd( -75.5328, 51.7067, -31.7712, 0.1 ) }
    dend_6 { pt3dadd( -76.3729, 52.095, -31.7728, 0.1 ) }
    dend_6 { pt3dadd( -76.8856, 52.3341, -31.7847, 0.1 ) }
    dend_6 { pt3dadd( -77.7176, 52.7145, -31.7882, 0.1 ) }
    dend_6 { pt3dadd( -79.1373, 53.3573, -31.8348, 0.1 ) }
    dend_6 { pt3dadd( -80.1948, 53.8433, -31.8641, 0.1 ) }
    dend_6 { pt3dadd( -81.0181, 54.2188, -31.8505, 0.1 ) }
    dend_6 { pt3dadd( -81.5469, 54.4535, -31.8504, 0.1 ) }
    dend_6 { pt3dadd( -82.5837, 54.938, -31.843, 0.1 ) }
    dend_6 { pt3dadd( -83.9693, 55.6508, -31.79, 0.1 ) }
    dend_6 { pt3dadd( -84.7521, 56.1358, -31.6973, 0.1 ) }
    dend_6 { pt3dadd( -85.1984, 56.4794, -31.6432, 0.1 ) }
    dend_6 { pt3dadd( -85.1984, 56.4794, -31.6432, 0.1 ) }
    dend_6 { pt3dadd( -85.7322, 57.0861, -31.5146, 0.1 ) }
    dend_6 { pt3dadd( -86.185, 57.7228, -31.3417, 0.1 ) }
    dend_6 { pt3dadd( -86.5949, 58.3921, -31.1103, 0.1 ) }
    dend_6 { pt3dadd( -87.0197, 59.0677, -30.9486, 0.1 ) }
    dend_6 { pt3dadd( -87.2398, 59.4076, -30.8904, 0.1 ) }
    dend_6 { pt3dadd( -87.7607, 60.147, -30.8613, 0.1 ) }
    dend_6 { pt3dadd( -88.2789, 60.7788, -30.9056, 0.1 ) }
    dend_6 { pt3dadd( -88.8574, 61.3312, -31.0579, 0.1 ) }
    dend_6 { pt3dadd( -90.1651, 62.2584, -31.6577, 0.1 ) }
    dend_6 { pt3dadd( -90.8193, 62.6081, -32.0031, 0.1 ) }
    dend_6 { pt3dadd( -92.0745, 63.1182, -32.6681, 0.1 ) }
    dend_6 { pt3dadd( -92.7637, 63.3285, -33.0254, 0.1 ) }
    dend_6 { pt3dadd( -94.2289, 63.6484, -33.7497, 0.1 ) }
    dend_6 { pt3dadd( -95.6008, 63.8699, -34.3388, 0.1 ) }
    dend_6 { pt3dadd( -96.6862, 64.0211, -34.6684, 0.1 ) }
    dend_6 { pt3dadd( -97.577, 64.1683, -34.8317, 0.1 ) }
    dend_6 { pt3dadd( -98.1394, 64.3044, -34.8309, 0.1 ) }
    dend_6 { pt3dadd( -98.1394, 64.3044, -34.8309, 0.1 ) }
    dend_6 { pt3dadd( -98.9115, 64.696, -34.5676, 0.1 ) }
    dend_6 { pt3dadd( -99.64, 65.1239, -34.2431, 0.1 ) }
    dend_6 { pt3dadd( -100.368, 65.5706, -33.9165, 0.1 ) }
    dend_6 { pt3dadd( -100.829, 65.842, -33.7111, 0.1 ) }
    dend_6 { pt3dadd( -101.59, 66.2261, -33.3793, 0.1 ) }
    dend_6 { pt3dadd( -102.365, 66.5565, -33.0484, 0.1 ) }
    dend_6 { pt3dadd( -102.365, 66.5565, -33.0484, 0.1 ) }
    dend_6 { pt3dadd( -103.192, 66.7571, -32.7126, 0.1 ) }
    dend_6 { pt3dadd( -104.015, 66.9274, -32.3817, 0.1 ) }
    dend_6 { pt3dadd( -104.851, 67.0903, -32.0469, 0.1 ) }
    dend_6 { pt3dadd( -105.366, 67.1965, -31.8396, 0.1 ) }
    dend_6 { pt3dadd( -105.742, 67.2935, -31.7215, 0.1 ) }
    dend_6 { pt3dadd( -106.801, 67.6331, -31.4517, 0.1 ) }
    dend_6 { pt3dadd( -107.649, 67.9608, -31.3528, 0.1 ) }
    dend_6 { pt3dadd( -108.17, 68.1827, -31.3404, 0.1 ) }
    dend_6 { pt3dadd( -109.007, 68.5667, -31.4282, 0.1 ) }
    dend_6 { pt3dadd( -110.532, 69.2998, -31.6895, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -111.041, 69.5521, -31.7967, 0.1 ) }
    dend_6 { pt3dadd( -112.657, 70.3666, -32.1772, 0.1 ) }
    dend_6 { pt3dadd( -113.158, 70.6162, -32.3245, 0.1 ) }
    dend_6 { pt3dadd( -114.646, 71.3488, -32.7693, 0.1 ) }
    dend_6 { pt3dadd( -115.436, 71.7369, -32.9801, 0.1 ) }
    dend_6 { pt3dadd( -115.947, 71.991, -33.0744, 0.1 ) }
    dend_6 { pt3dadd( -116.752, 72.395, -33.1658, 0.1 ) }
    dend_6 { pt3dadd( -118.051, 73.0377, -33.2609, 0.1 ) }
    dend_6 { pt3dadd( -119.091, 73.5414, -33.3221, 0.1 ) }
    dend_6 { pt3dadd( -119.928, 73.9138, -33.3264, 0.1 ) }
    dend_6 { pt3dadd( -120.46, 74.1421, -33.3236, 0.1 ) }
    dend_6 { pt3dadd( -121.513, 74.5876, -33.2856, 0.1 ) }
    dend_6 { pt3dadd( -122.954, 75.1948, -33.2561, 0.1 ) }
    dend_6 { pt3dadd( -123.79, 75.5396, -33.218, 0.1 ) }
    dend_6 { pt3dadd( -124.624, 75.885, -33.2048, 0.1 ) }
    dend_6 { pt3dadd( -125.471, 76.2302, -33.1946, 0.1 ) }
    dend_6 { pt3dadd( -125.994, 76.4456, -33.217, 0.1 ) }
    dend_6 { pt3dadd( -127.569, 77.1196, -33.3244, 0.1 ) }
    dend_6 { pt3dadd( -128.392, 77.491, -33.3586, 0.1 ) }
    dend_6 { pt3dadd( -129.216, 77.8851, -33.4116, 0.1 ) }
    dend_6 { pt3dadd( -129.714, 78.1466, -33.4763, 0.1 ) }
    dend_6 { pt3dadd( -130.962, 78.864, -33.6694, 0.1 ) }
    dend_6 { pt3dadd( -131.725, 79.338, -33.8449, 0.1 ) }
    dend_6 { pt3dadd( -132.44, 79.856, -34.0411, 0.1 ) }
    dend_6 { pt3dadd( -133.1, 80.4243, -34.2866, 0.1 ) }
    dend_6 { pt3dadd( -134.289, 81.5717, -34.7741, 0.1 ) }
    dend_6 { pt3dadd( -134.809, 82.1455, -34.9765, 0.1 ) }
    dend_6 { pt3dadd( -135.691, 83.2682, -35.2431, 0.1 ) }
    dend_6 { pt3dadd( -136.199, 84.0135, -35.3977, 0.1 ) }
    dend_6 { pt3dadd( -136.494, 84.5137, -35.4717, 0.1 ) }
    dend_6 { pt3dadd( -136.909, 85.3285, -35.5012, 0.1 ) }
    dend_6 { pt3dadd( -137.241, 86.0667, -35.4123, 0.1 ) }
    dend_6 { pt3dadd( -137.565, 86.7884, -35.2675, 0.1 ) }
    dend_6 { pt3dadd( -137.889, 87.5072, -35.0631, 0.1 ) }
    dend_6 { pt3dadd( -138.06, 87.8634, -34.9577, 0.1 ) }
    dend_6 { pt3dadd( -138.418, 88.5623, -34.7425, 0.1 ) }
    dend_6 { pt3dadd( -138.812, 89.2621, -34.5848, 0.1 ) }
    dend_6 { pt3dadd( -139.245, 89.9431, -34.4756, 0.1 ) }
    dend_6 { pt3dadd( -139.731, 90.5839, -34.4691, 0.1 ) }
    dend_6 { pt3dadd( -139.731, 90.5839, -34.4691, 0.1 ) }
    dend_6 { pt3dadd( -140.354, 91.2333, -34.6388, 0.1 ) }
    dend_6 { pt3dadd( -141.567, 92.3643, -35.0598, 0.1 ) }
    dend_6 { pt3dadd( -142.153, 92.8538, -35.3134, 0.1 ) }
    dend_6 { pt3dadd( -143.41, 93.8662, -35.8993, 0.1 ) }
    dend_6 { pt3dadd( -143.994, 94.3414, -36.1722, 0.1 ) }
    dend_6 { pt3dadd( -145.117, 95.2683, -36.7495, 0.1 ) }
    dend_6 { pt3dadd( -145.76, 95.8055, -37.0908, 0.1 ) }
    dend_6 { pt3dadd( -146.976, 96.8625, -37.6831, 0.1 ) }
    dend_6 { pt3dadd( -147.549, 97.3798, -37.9424, 0.1 ) }
    dend_6 { pt3dadd( -148.117, 97.9192, -38.1789, 0.1 ) }
    dend_6 { pt3dadd( -149.109, 98.9055, -38.5707, 0.1 ) }
    dend_6 { pt3dadd( -149.702, 99.5625, -38.7596, 0.1 ) }
    dend_6 { pt3dadd( -150.208, 100.167, -38.9008, 0.1 ) }
    dend_6 { pt3dadd( -150.721, 100.79, -39.0304, 0.1 ) }
    dend_6 { pt3dadd( -151.801, 102.089, -39.3073, 0.1 ) }
    dend_6 { pt3dadd( -152.311, 102.719, -39.4186, 0.1 ) }
    dend_6 { pt3dadd( -152.82, 103.345, -39.5287, 0.1 ) }
    dend_6 { pt3dadd( -153.33, 103.97, -39.6672, 0.1 ) }
    dend_6 { pt3dadd( -154.399, 105.273, -39.9637, 0.1 ) }
    dend_6 { pt3dadd( -154.902, 105.901, -40.0884, 0.1 ) }
    dend_6 { pt3dadd( -155.395, 106.541, -40.2176, 0.1 ) }
    dend_6 { pt3dadd( -156.432, 107.862, -40.5524, 0.1 ) }
    dend_6 { pt3dadd( -156.933, 108.487, -40.7185, 0.1 ) }
    dend_6 { pt3dadd( -157.42, 109.105, -40.8637, 0.1 ) }
    dend_6 { pt3dadd( -157.9, 109.755, -40.9618, 0.1 ) }
    dend_6 { pt3dadd( -158.899, 111.082, -41.1066, 0.1 ) }
    dend_6 { pt3dadd( -158.899, 111.082, -41.1066, 0.1 ) }
    dend_6 { pt3dadd( -159.429, 111.812, -41.0346, 0.1 ) }
    dend_6 { pt3dadd( -159.914, 112.463, -40.9344, 0.1 ) }
    dend_6 { pt3dadd( -160.422, 113.094, -40.8502, 0.1 ) }
    dend_6 { pt3dadd( -160.993, 113.789, -40.7517, 0.1 ) }
    dend_6 { pt3dadd( -161.502, 114.421, -40.6413, 0.1 ) }
    dend_6 { pt3dadd( -162.07, 115.117, -40.5369, 0.1 ) }
    dend_6 { pt3dadd( -162.582, 115.751, -40.4581, 0.1 ) }
    dend_6 { pt3dadd( -163.658, 117.073, -40.311, 0.1 ) }
    dend_6 { pt3dadd( -164.163, 117.709, -40.2429, 0.1 ) }
    dend_6 { pt3dadd( -164.65, 118.362, -40.1691, 0.1 ) }
    dend_6 { pt3dadd( -165.166, 119.098, -40.0667, 0.1 ) }
    dend_6 { pt3dadd( -165.594, 119.769, -39.9472, 0.1 ) }
    dend_6 { pt3dadd( -165.797, 120.11, -39.8668, 0.1 ) }
    dend_6 { pt3dadd( -166.177, 120.8, -39.6441, 0.1 ) }
    dend_6 { pt3dadd( -166.575, 121.473, -39.417, 0.1 ) }
    dend_6 { pt3dadd( -166.999, 122.132, -39.1813, 0.1 ) }
    dend_6 { pt3dadd( -167.45, 122.765, -38.9385, 0.1 ) }
    dend_6 { pt3dadd( -167.45, 122.765, -38.9385, 0.1 ) }
    dend_6 { pt3dadd( -168.038, 123.387, -38.6449, 0.1 ) }
    dend_6 { pt3dadd( -168.672, 123.971, -38.3385, 0.1 ) }
    dend_6 { pt3dadd( -169.317, 124.527, -38.0312, 0.1 ) }
    dend_6 { pt3dadd( -169.98, 125.073, -37.7179, 0.1 ) }
    dend_6 { pt3dadd( -170.641, 125.608, -37.4069, 0.1 ) }
    dend_6 { pt3dadd( -171.055, 125.961, -37.2099, 0.1 ) }
    dend_6 { pt3dadd( -171.686, 126.549, -36.9039, 0.1 ) }
    dend_6 { pt3dadd( -172.24, 127.091, -36.7031, 0.1 ) }
    dend_6 { pt3dadd( -172.24, 127.091, -36.7031, 0.1 ) }
    dend_6 { pt3dadd( -172.857, 127.78, -36.6769, 0.1 ) }
    dend_6 { pt3dadd( -173.373, 128.39, -36.7308, 0.1 ) }
    dend_6 { pt3dadd( -173.883, 129.011, -36.8828, 0.1 ) }
    dend_6 { pt3dadd( -174.925, 130.295, -37.3238, 0.1 ) }
    dend_6 { pt3dadd( -175.402, 130.911, -37.5617, 0.1 ) }
    dend_6 { pt3dadd( -176.301, 132.213, -38.0877, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -176.69, 132.87, -38.3687, 0.1 ) }
    dend_6 { pt3dadd( -177.356, 134.278, -38.9642, 0.1 ) }
    dend_6 { pt3dadd( -177.472, 134.641, -39.1021, 0.1 ) }
    dend_6 { pt3dadd( -177.576, 135.5, -39.354, 0.1 ) }
    dend_6 { pt3dadd( -177.584, 136.381, -39.56, 0.1 ) }
    dend_6 { pt3dadd( -177.561, 136.95, -39.6642, 0.1 ) }
    dend_6 { pt3dadd( -177.568, 137.852, -39.8209, 0.1 ) }
    dend_6 { pt3dadd( -177.672, 138.409, -39.9353, 0.1 ) }
    dend_6 { pt3dadd( -177.829, 138.772, -40.0425, 0.1 ) }
    dend_6 { pt3dadd( -178.341, 139.491, -40.2827, 0.1 ) }
    dend_6 { pt3dadd( -179.483, 140.711, -40.654, 0.1 ) }
    dend_6 { pt3dadd( -180.144, 141.295, -40.8557, 0.1 ) }
    dend_6 { pt3dadd( -181.469, 142.331, -41.2004, 0.1 ) }
    dend_6 { pt3dadd( -181.79, 142.56, -41.292, 0.1 ) }
    dend_6 { pt3dadd( -182.527, 143.063, -41.4958, 0.1 ) }
    dend_6 { pt3dadd( -183.255, 143.548, -41.7264, 0.1 ) }
    dend_6 { pt3dadd( -184.631, 144.484, -42.1465, 0.1 ) }
    dend_6 { pt3dadd( -185.366, 144.981, -42.3759, 0.1 ) }
    dend_6 { pt3dadd( -186.616, 145.853, -42.7263, 0.1 ) }
    dend_6 { pt3dadd( -187.33, 146.351, -42.9722, 0.1 ) }
    dend_6 { pt3dadd( -188.657, 147.331, -43.4296, 0.1 ) }
    dend_6 { pt3dadd( -189.275, 147.834, -43.6144, 0.1 ) }
    dend_6 { pt3dadd( -189.681, 148.223, -43.6791, 0.1 ) }
    dend_6 { pt3dadd( -190.206, 148.85, -43.6994, 0.1 ) }
    dend_6 { pt3dadd( -190.976, 150.07, -43.5221, 0.1 ) }
    dend_6 { pt3dadd( -191.714, 151.528, -43.2025, 0.1 ) }
    dend_6 { pt3dadd( -192.028, 152.247, -42.971, 0.1 ) }
    dend_6 { pt3dadd( -192.344, 152.942, -42.7309, 0.1 ) }
    dend_6 { pt3dadd( -192.727, 153.72, -42.4401, 0.1 ) }
    dend_6 { pt3dadd( -193.108, 154.384, -42.1614, 0.1 ) }
    dend_6 { pt3dadd( -193.313, 154.706, -42.0148, 0.1 ) }
    dend_6 { pt3dadd( -193.822, 155.403, -41.7426, 0.1 ) }
    dend_6 { pt3dadd( -194.368, 156.067, -41.4604, 0.1 ) }
    dend_6 { pt3dadd( -194.944, 156.715, -41.1684, 0.1 ) }
    dend_6 { pt3dadd( -195.527, 157.343, -40.8764, 0.1 ) }
    dend_6 { pt3dadd( -196.041, 157.924, -40.6155, 0.1 ) }
    dend_6 { pt3dadd( -196.041, 157.924, -40.6155, 0.1 ) }
    dend_6 { pt3dadd( -196.554, 158.617, -40.3424, 0.1 ) }
    dend_6 { pt3dadd( -196.979, 159.271, -40.1071, 0.1 ) }
    dend_6 { pt3dadd( -197.371, 159.953, -39.881, 0.1 ) }
    dend_6 { pt3dadd( -197.736, 160.647, -39.6634, 0.1 ) }
    dend_6 { pt3dadd( -197.736, 160.647, -39.6634, 0.1 ) }
    dend_6 { pt3dadd( -198.075, 161.346, -39.4557, 0.1 ) }
    dend_6 { pt3dadd( -198.402, 162.063, -39.2501, 0.1 ) }
    dend_6 { pt3dadd( -198.714, 162.788, -39.0493, 0.1 ) }
    dend_6 { pt3dadd( -199.016, 163.522, -38.8513, 0.1 ) }
    dend_6 { pt3dadd( -199.309, 164.256, -38.6567, 0.1 ) }
    dend_6 { pt3dadd( -199.599, 164.996, -38.4625, 0.1 ) }
    dend_6 { pt3dadd( -199.879, 165.722, -38.2741, 0.1 ) }
    dend_6 { pt3dadd( -200.192, 166.555, -38.0605, 0.1 ) }
    dend_6 { pt3dadd( -200.466, 167.298, -37.8723, 0.1 ) }
    dend_6 { pt3dadd( -200.734, 168.048, -37.6852, 0.1 ) }
    dend_6 { pt3dadd( -200.991, 168.784, -37.5039, 0.1 ) }
    dend_6 { pt3dadd( -201.122, 169.16, -37.4115, 0.1 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 49.6363, -315.71, -53.0485, 0.1 ) }
    dend_4 { pt3dadd( 49.6679, -316.081, -53.1939, 0.1 ) }
    dend_4 { pt3dadd( 49.7054, -316.608, -53.3946, 0.1 ) }
    dend_4 { pt3dadd( 49.731, -317.195, -53.6034, 0.1 ) }
    dend_4 { pt3dadd( 49.7523, -317.733, -53.7772, 0.1 ) }
    dend_4 { pt3dadd( 49.7808, -318.871, -54.1129, 0.1 ) }
    dend_4 { pt3dadd( 49.7937, -319.408, -54.2563, 0.1 ) }
    dend_4 { pt3dadd( 49.8179, -320.013, -54.4447, 0.1 ) }
    dend_4 { pt3dadd( 49.8433, -320.601, -54.6454, 0.1 ) }
    dend_4 { pt3dadd( 49.8657, -321.132, -54.8294, 0.1 ) }
    dend_4 { pt3dadd( 49.8758, -321.733, -55.027, 0.1 ) }
    dend_4 { pt3dadd( 49.88, -322.275, -55.1774, 0.1 ) }
    dend_4 { pt3dadd( 49.9006, -323.411, -55.4993, 0.1 ) }
    dend_4 { pt3dadd( 49.9133, -323.681, -55.5724, 0.14 ) }
    dend_4 { pt3dadd( 49.9451, -324.293, -55.7247, 0.14 ) }
    dend_4 { pt3dadd( 49.9769, -324.903, -55.8545, 0.1 ) }
    dend_4 { pt3dadd( 50.0031, -325.46, -55.9458, 0.1 ) }
    dend_4 { pt3dadd( 50.0244, -326.019, -56.0039, 0.1 ) }
    dend_4 { pt3dadd( 50.0482, -326.584, -56.0214, 0.1 ) }
    dend_4 { pt3dadd( 50.0865, -327.207, -56.0371, 0.1 ) }
    dend_4 { pt3dadd( 50.1378, -327.77, -56.0462, 0.1 ) }
    dend_4 { pt3dadd( 50.22, -328.398, -56.0487, 0.1 ) }
    dend_4 { pt3dadd( 50.2944, -328.949, -56.0503, 0.1 ) }
    dend_4 { pt3dadd( 50.3763, -329.505, -56.0498, 0.1 ) }
    dend_4 { pt3dadd( 50.4695, -330.06, -56.0458, 0.1 ) }
    dend_4 { pt3dadd( 50.5797, -330.614, -56.0801, 0.1 ) }
    dend_4 { pt3dadd( 50.7096, -331.22, -56.1558, 0.1 ) }
    dend_4 { pt3dadd( 50.7988, -331.604, -56.2218, 0.1 ) }
    dend_4 { pt3dadd( 50.9222, -332.142, -56.3337, 0.1 ) }
    dend_4 { pt3dadd( 51.022, -332.681, -56.4213, 0.1 ) }
    dend_4 { pt3dadd( 51.195, -333.849, -56.5533, 0.1 ) }
    dend_4 { pt3dadd( 51.251, -334.41, -56.5912, 0.14 ) }
    dend_4 { pt3dadd( 51.2877, -334.971, -56.6031, 0.1 ) }
    dend_4 { pt3dadd( 51.3125, -335.526, -56.5893, 0.1 ) }
    dend_4 { pt3dadd( 51.3116, -336.711, -56.5141, 0.1 ) }
    dend_4 { pt3dadd( 51.2927, -337.273, -56.454, 0.1 ) }
    dend_4 { pt3dadd( 51.2514, -337.888, -56.3615, 0.1 ) }
    dend_4 { pt3dadd( 51.2064, -338.448, -56.2967, 0.1 ) }
    dend_4 { pt3dadd( 51.15, -339.078, -56.2547, 0.1 ) }
    dend_4 { pt3dadd( 51.1035, -339.699, -56.2486, 0.14 ) }
    dend_4 { pt3dadd( 51.094, -339.978, -56.2637, 0.1 ) }
    dend_4 { pt3dadd( 51.0726, -340.609, -56.2978, 0.1 ) }
    dend_4 { pt3dadd( 51.0448, -341.17, -56.3309, 0.1 ) }
    dend_4 { pt3dadd( 50.9941, -341.788, -56.3733, 0.1 ) }
    dend_4 { pt3dadd( 50.9575, -342.344, -56.45, 0.1 ) }
    dend_4 { pt3dadd( 50.9209, -342.902, -56.5339, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 50.8748, -343.516, -56.6369, 0.28 ) }
    dend_4 { pt3dadd( 50.8104, -344.298, -56.7891, 0.14 ) }
    dend_4 { pt3dadd( 50.7681, -344.676, -56.8787, 0.1 ) }
    dend_4 { pt3dadd( 50.627, -345.772, -57.2, 0.1 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 49.6363, -315.71, -53.0485, 0.1 ) }
    dend_3 { pt3dadd( 49.1462, -316.036, -53.1114, 0.1 ) }
    dend_3 { pt3dadd( 48.7118, -316.348, -53.08, 0.1 ) }
    dend_3 { pt3dadd( 48.2284, -316.688, -53.0107, 0.1 ) }
    dend_3 { pt3dadd( 47.7411, -317.032, -52.9325, 0.1 ) }
    dend_3 { pt3dadd( 47.4443, -317.243, -52.8551, 0.1 ) }
    dend_3 { pt3dadd( 46.9664, -317.578, -52.7106, 0.1 ) }
    dend_3 { pt3dadd( 46.0973, -318.226, -52.3933, 0.1 ) }
    dend_3 { pt3dadd( 45.6973, -318.532, -52.2303, 0.1 ) }
    dend_3 { pt3dadd( 45.242, -318.877, -52.0409, 0.1 ) }
    dend_3 { pt3dadd( 44.4036, -319.548, -51.7015, 0.1 ) }
    dend_3 { pt3dadd( 44.2079, -319.722, -51.6416, 0.1 ) }
    dend_3 { pt3dadd( 43.7813, -320.122, -51.5314, 0.1 ) }
    dend_3 { pt3dadd( 43.5182, -320.396, -51.5028, 0.1 ) }
    dend_3 { pt3dadd( 43.1349, -320.851, -51.4825, 0.1 ) }
    dend_3 { pt3dadd( 42.7819, -321.335, -51.5319, 0.1 ) }
    dend_3 { pt3dadd( 42.2589, -322.239, -51.8634, 0.1 ) }
    // Section: dend_75, id: dend_75, parent: dend_63 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -20.6332, 66.172, -3.45054, 0.28 ) }
    dend_75 { pt3dadd( -21.7131, 66.6169, -3.37082, 0.28 ) }
    dend_75 { pt3dadd( -22.2253, 66.8647, -3.35372, 0.14 ) }
    dend_75 { pt3dadd( -22.549, 67.0326, -3.35176, 0.28 ) }
    dend_75 { pt3dadd( -23.1782, 67.3852, -3.36117, 0.42 ) }
    dend_75 { pt3dadd( -23.4904, 67.5732, -3.37089, 0.42 ) }
    dend_75 { pt3dadd( -23.9761, 67.8844, -3.39198, 0.28 ) }
    dend_75 { pt3dadd( -24.4275, 68.2287, -3.44622, 0.14 ) }
    dend_75 { pt3dadd( -24.7049, 68.4633, -3.47751, 0.1 ) }
    dend_75 { pt3dadd( -25.1209, 68.8512, -3.52122, 0.1 ) }
    dend_75 { pt3dadd( -25.5238, 69.2618, -3.56048, 0.14 ) }
    dend_75 { pt3dadd( -25.9126, 69.6775, -3.59665, 0.28 ) }
    dend_75 { pt3dadd( -26.2691, 70.0486, -3.63068, 0.14 ) }
    dend_75 { pt3dadd( -26.5202, 70.3006, -3.65551, 0.1 ) }
    dend_75 { pt3dadd( -26.8985, 70.6488, -3.69567, 0.14 ) }
    dend_75 { pt3dadd( -27.3381, 71.0087, -3.7463, 0.28 ) }
    dend_75 { pt3dadd( -27.7884, 71.3459, -3.84013, 0.42 ) }
    dend_75 { pt3dadd( -28.2625, 71.6631, -3.9348, 0.56 ) }
    dend_75 { pt3dadd( -28.563, 71.847, -3.99059, 0.42 ) }
    dend_75 { pt3dadd( -29.0512, 72.1426, -4.07214, 0.28 ) }
    dend_75 { pt3dadd( -29.365, 72.3315, -4.11855, 0.28 ) }
    dend_75 { pt3dadd( -30.128, 72.8288, -4.21285, 0.42 ) }
    dend_75 { pt3dadd( -30.9953, 73.465, -4.29626, 0.1 ) }
    dend_75 { pt3dadd( -31.4306, 73.8323, -4.32516, 0.1 ) }
    dend_75 { pt3dadd( -31.848, 74.2298, -4.34105, 0.1 ) }
    dend_75 { pt3dadd( -32.2414, 74.6428, -4.34566, 0.1 ) }
    dend_75 { pt3dadd( -32.6212, 75.0665, -4.38525, 0.14 ) }
    dend_75 { pt3dadd( -32.7908, 75.2584, -4.4146, 0.28 ) }
    dend_75 { pt3dadd( -33.1573, 75.675, -4.54674, 0.42 ) }
    dend_75 { pt3dadd( -33.4931, 76.0408, -4.68602, 0.56 ) }
    dend_75 { pt3dadd( -33.8682, 76.4341, -4.85896, 0.7 ) }
    dend_75 { pt3dadd( -34.5936, 77.1572, -5.20799, 0.56 ) }
    dend_75 { pt3dadd( -34.8392, 77.3886, -5.32365, 0.42 ) }
    dend_75 { pt3dadd( -35.3607, 77.8528, -5.54916, 0.42 ) }
    dend_75 { pt3dadd( -35.6171, 78.0801, -5.64812, 0.56 ) }
    dend_75 { pt3dadd( -35.6171, 78.0801, -5.64812, 0.7 ) }
    dend_75 { pt3dadd( -36.0366, 78.4653, -5.73798, 0.56 ) }
    dend_75 { pt3dadd( -36.4306, 78.869, -5.82254, 0.42 ) }
    dend_75 { pt3dadd( -36.7968, 79.2918, -5.93399, 0.28 ) }
    dend_75 { pt3dadd( -37.106, 79.6866, -6.05431, 0.14 ) }
    dend_75 { pt3dadd( -37.4386, 80.1265, -6.20007, 0.1 ) }
    dend_75 { pt3dadd( -37.7621, 80.5711, -6.35145, 0.1 ) }
    dend_75 { pt3dadd( -38.3074, 81.3939, -6.71207, 0.14 ) }
    dend_75 { pt3dadd( -38.3074, 81.3939, -6.71207, 0.28 ) }
    dend_75 { pt3dadd( -38.6257, 81.8308, -6.89402, 0.56 ) }
    dend_75 { pt3dadd( -38.9935, 82.2505, -7.01199, 0.42 ) }
    dend_75 { pt3dadd( -39.3637, 82.6076, -7.04999, 0.56 ) }
    dend_75 { pt3dadd( -40.1027, 83.2043, -6.99791, 0.7 ) }
    dend_75 { pt3dadd( -41.0602, 83.852, -6.82811, 0.14 ) }
    dend_75 { pt3dadd( -41.3671, 84.0403, -6.7708, 0.1 ) }
    dend_75 { pt3dadd( -42.37, 84.5916, -6.54919, 0.1 ) }
    dend_75 { pt3dadd( -42.6839, 84.7448, -6.47731, 0.14 ) }
    dend_75 { pt3dadd( -43.0133, 84.8952, -6.40546, 0.28 ) }
    dend_75 { pt3dadd( -43.6544, 85.1996, -6.27681, 0.42 ) }
    dend_75 { pt3dadd( -43.9752, 85.372, -6.25759, 0.56 ) }
    dend_75 { pt3dadd( -44.2871, 85.5608, -6.26219, 0.42 ) }
    dend_75 { pt3dadd( -44.8806, 85.9781, -6.33662, 0.7 ) }
    dend_75 { pt3dadd( -45.3229, 86.3326, -6.44536, 0.56 ) }
    dend_75 { pt3dadd( -45.7393, 86.6951, -6.58853, 0.42 ) }
    dend_75 { pt3dadd( -45.7393, 86.6951, -6.58853, 0.28 ) }
    dend_75 { pt3dadd( -46.1216, 87.0659, -6.80965, 0.1 ) }
    dend_75 { pt3dadd( -46.5128, 87.4209, -7.02466, 0.1 ) }
    dend_75 { pt3dadd( -47.3036, 88.0651, -7.37584, 0.1 ) }
    dend_75 { pt3dadd( -47.6055, 88.2594, -7.44008, 0.1 ) }
    dend_75 { pt3dadd( -48.1171, 88.5112, -7.4497, 0.14 ) }
    dend_75 { pt3dadd( -49.0243, 88.8774, -7.32962, 0.28 ) }
    dend_75 { pt3dadd( -49.9946, 89.1706, -6.94835, 0.84 ) }
    dend_75 { pt3dadd( -50.8699, 89.3944, -6.36162, 0.7 ) }
    dend_75 { pt3dadd( -51.6791, 89.6187, -5.67764, 0.84 ) }
    dend_75 { pt3dadd( -51.8566, 89.6772, -5.49996, 0.98 ) }
    dend_75 { pt3dadd( -52.0198, 89.7369, -5.3095, 1.12 ) }
    dend_75 { pt3dadd( -52.6591, 90.0016, -4.48187, 0.56 ) }
    dend_75 { pt3dadd( -53.2953, 90.3292, -3.67459, 0.42 ) }
    dend_75 { pt3dadd( -53.6048, 90.5173, -3.30749, 0.28 ) }
    dend_75 { pt3dadd( -54.2769, 90.9571, -2.58731, 0.28 ) }
    dend_75 { pt3dadd( -54.9252, 91.3871, -1.98212, 0.42 ) }
    dend_75 { pt3dadd( -54.9252, 91.3871, -1.98212, 0.56 ) }
    dend_75 { pt3dadd( -55.4728, 91.7729, -1.70279, 0.7 ) }
    dend_75 { pt3dadd( -55.9147, 92.1085, -1.57074, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -56.1925, 92.3405, -1.52627, 0.42 ) }
    dend_75 { pt3dadd( -56.5971, 92.7425, -1.52864, 0.28 ) }
    dend_75 { pt3dadd( -56.9785, 93.1748, -1.51986, 0.14 ) }
    dend_75 { pt3dadd( -57.2991, 93.5734, -1.47935, 0.1 ) }
    dend_75 { pt3dadd( -57.6245, 94.0256, -1.35705, 0.1 ) }
    dend_75 { pt3dadd( -57.8945, 94.4344, -1.19582, 0.1 ) }
    dend_75 { pt3dadd( -58.1443, 94.836, -0.996694, 0.1 ) }
    dend_75 { pt3dadd( -58.6234, 95.6305, -0.503069, 0.14 ) }
    dend_75 { pt3dadd( -58.7335, 95.8177, -0.364113, 0.28 ) }
    dend_75 { pt3dadd( -59.177, 96.5015, 0.29057, 0.42 ) }
    dend_75 { pt3dadd( -59.3895, 96.8165, 0.635522, 0.56 ) }
    dend_75 { pt3dadd( -59.5034, 96.9566, 0.816151, 0.56 ) }
    dend_75 { pt3dadd( -59.748, 97.2295, 1.17898, 0.7 ) }
    dend_75 { pt3dadd( -60.013, 97.4941, 1.53354, 0.98 ) }
    dend_75 { pt3dadd( -60.6034, 98.0469, 2.24745, 0.84 ) }
    dend_75 { pt3dadd( -60.897, 98.3257, 2.5627, 0.7 ) }
    dend_75 { pt3dadd( -61.5385, 98.9002, 3.2179, 0.56 ) }
    dend_75 { pt3dadd( -61.6968, 99.0387, 3.36701, 0.42 ) }
    dend_75 { pt3dadd( -62.3861, 99.6216, 3.95767, 0.1 ) }
    dend_75 { pt3dadd( -62.7815, 99.9251, 4.24862, 0.1 ) }
    dend_75 { pt3dadd( -63.1497, 100.193, 4.4717, 0.14 ) }
    dend_75 { pt3dadd( -64.0624, 100.808, 4.86255, 0.1 ) }
    dend_75 { pt3dadd( -64.3627, 101.009, 4.9112, 0.1 ) }
    dend_75 { pt3dadd( -64.6625, 101.202, 4.93184, 0.1 ) }
    dend_75 { pt3dadd( -65.2737, 101.583, 4.84514, 0.14 ) }
    dend_75 { pt3dadd( -65.2737, 101.583, 4.84514, 0.28 ) }
    dend_75 { pt3dadd( -66.1782, 102.093, 4.30451, 0.84 ) }
    dend_75 { pt3dadd( -66.7151, 102.452, 3.65529, 0.84 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 28/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -20.6332, 66.172, -3.45054, 0.84 ) }
    dend_64 { pt3dadd( -20.7118, 66.8284, -3.392, 0.84 ) }
    dend_64 { pt3dadd( -20.8109, 67.5518, -3.33113, 0.98 ) }
    dend_64 { pt3dadd( -20.9048, 68.2851, -3.26751, 0.84 ) }
    dend_64 { pt3dadd( -20.9921, 68.9261, -3.21343, 0.84 ) }
    dend_64 { pt3dadd( -21.0904, 69.5804, -3.16086, 0.84 ) }
    dend_64 { pt3dadd( -21.2118, 70.3125, -3.10535, 0.7 ) }
    dend_64 { pt3dadd( -21.3348, 70.9632, -3.06036, 0.56 ) }
    dend_64 { pt3dadd( -21.4918, 71.6775, -3.01737, 0.56 ) }
    dend_64 { pt3dadd( -21.643, 72.3228, -2.98123, 0.56 ) }
    dend_64 { pt3dadd( -21.7933, 72.9649, -2.94522, 0.7 ) }
    dend_64 { pt3dadd( -21.9504, 73.6056, -2.91135, 0.84 ) }
    dend_64 { pt3dadd( -22.1322, 74.2434, -2.88498, 0.84 ) }
    dend_64 { pt3dadd( -22.1322, 74.2434, -2.88498, 0.98 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 42/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -44.2606, 62.9856, -37.3268, 1.12 ) }
    dend_58 { pt3dadd( -44.1492, 63.4724, -37.3503, 1.12 ) }
    dend_58 { pt3dadd( -44.0048, 64.0247, -37.3784, 0.98 ) }
    dend_58 { pt3dadd( -43.8335, 64.5615, -37.4082, 0.84 ) }
    dend_58 { pt3dadd( -43.7128, 64.9016, -37.4281, 0.7 ) }
    dend_58 { pt3dadd( -43.5001, 65.4311, -37.4612, 0.56 ) }
    dend_58 { pt3dadd( -43.2677, 65.9453, -37.4954, 0.7 ) }
    dend_58 { pt3dadd( -42.9951, 66.4482, -37.5325, 0.1 ) }
    dend_58 { pt3dadd( -42.6963, 66.9266, -37.5711, 0.14 ) }
    dend_58 { pt3dadd( -42.4916, 67.22, -37.6227, 0.1 ) }
    dend_58 { pt3dadd( -42.1692, 67.6705, -37.7356, 0.1 ) }
    dend_58 { pt3dadd( -41.8462, 68.1133, -37.8741, 0.1 ) }
    dend_58 { pt3dadd( -41.6442, 68.4015, -37.9742, 0.1 ) }
    dend_58 { pt3dadd( -41.3381, 68.8475, -38.1386, 0.1 ) }
    dend_58 { pt3dadd( -40.7882, 69.7141, -38.45, 0.14 ) }
    dend_58 { pt3dadd( -40.5107, 70.1773, -38.6082, 0.42 ) }
    dend_58 { pt3dadd( -40.3412, 70.4818, -38.7042, 0.28 ) }
    dend_58 { pt3dadd( -40.0155, 71.101, -38.8717, 0.14 ) }
    dend_58 { pt3dadd( -39.8539, 71.4169, -38.9406, 0.1 ) }
    dend_58 { pt3dadd( -39.5397, 72.0518, -39.037, 0.1 ) }
    dend_58 { pt3dadd( -39.3739, 72.3772, -39.0601, 0.1 ) }
    dend_58 { pt3dadd( -39.2131, 72.6912, -39.0826, 0.1 ) }
    dend_58 { pt3dadd( -38.9072, 73.3359, -39.1266, 0.1 ) }
    dend_58 { pt3dadd( -38.7726, 73.667, -39.1803, 0.14 ) }
    dend_58 { pt3dadd( -38.6609, 74.0057, -39.2623, 0.28 ) }
    dend_58 { pt3dadd( -38.603, 74.2414, -39.3343, 0.42 ) }
    dend_58 { pt3dadd( -38.5137, 74.6991, -39.5374, 0.1 ) }
    dend_58 { pt3dadd( -38.4357, 75.1941, -39.7932, 0.14 ) }
    dend_58 { pt3dadd( -38.3042, 76.1247, -40.3119, 0.1 ) }
    dend_58 { pt3dadd( -38.2344, 76.6146, -40.5795, 0.1 ) }
    dend_58 { pt3dadd( -38.1953, 76.8365, -40.695, 0.1 ) }
    dend_58 { pt3dadd( -37.9903, 77.8346, -41.2398, 0.14 ) }
    dend_58 { pt3dadd( -37.867, 78.3201, -41.515, 0.1 ) }
    dend_58 { pt3dadd( -37.7743, 78.6317, -41.6828, 0.1 ) }
    dend_58 { pt3dadd( -37.6081, 79.118, -41.9116, 0.1 ) }
    dend_58 { pt3dadd( -37.4149, 79.6081, -42.1334, 0.1 ) }
    dend_58 { pt3dadd( -37.0235, 80.5322, -42.5009, 0.1 ) }
    dend_58 { pt3dadd( -36.8779, 80.8475, -42.6011, 0.14 ) }
    dend_58 { pt3dadd( -36.5706, 81.4651, -42.789, 0.28 ) }
    dend_58 { pt3dadd( -36.4066, 81.7811, -42.8734, 0.42 ) }
    dend_58 { pt3dadd( -36.1419, 82.2689, -42.9811, 0.56 ) }
    dend_58 { pt3dadd( -35.8706, 82.7659, -43.0586, 0.42 ) }
    dend_58 { pt3dadd( -35.5919, 83.2564, -43.0959, 0.28 ) }
    dend_58 { pt3dadd( -35.4195, 83.5732, -43.1193, 0.14 ) }
    dend_58 { pt3dadd( -35.087, 84.2095, -43.1653, 0.1 ) }
    dend_58 { pt3dadd( -34.9359, 84.5257, -43.2118, 0.1 ) }
    dend_58 { pt3dadd( -34.7936, 84.851, -43.2795, 0.1 ) }
    dend_58 { pt3dadd( -34.5411, 85.4885, -43.4973, 0.1 ) }
    dend_58 { pt3dadd( -34.3674, 85.9867, -43.717, 0.1 ) }
    dend_58 { pt3dadd( -34.2668, 86.2892, -43.8696, 0.1 ) }
    dend_58 { pt3dadd( -33.9753, 87.194, -44.3684, 0.1 ) }
    dend_58 { pt3dadd( -33.8746, 87.4981, -44.536, 0.1 ) }
    dend_58 { pt3dadd( -33.565, 88.3968, -45.0225, 0.1 ) }
    dend_58 { pt3dadd( -33.4555, 88.7082, -45.1803, 0.1 ) }
    dend_58 { pt3dadd( -33.2137, 89.3245, -45.4503, 0.1 ) }
    dend_58 { pt3dadd( -33.0827, 89.6442, -45.5565, 0.1 ) }
    dend_58 { pt3dadd( -32.8072, 90.2839, -45.7363, 0.1 ) }
    dend_58 { pt3dadd( -32.6634, 90.6028, -45.8276, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -32.4402, 91.1029, -45.9564, 0.1 ) }
    dend_58 { pt3dadd( -32.2329, 91.6137, -46.1073, 0.1 ) }
    dend_58 { pt3dadd( -32.0608, 92.1108, -46.3115, 0.1 ) }
    dend_58 { pt3dadd( -31.8022, 92.957, -46.7255, 0.1 ) }
    dend_58 { pt3dadd( -31.7498, 93.1663, -46.858, 0.1 ) }
    dend_58 { pt3dadd( -31.6624, 93.5775, -47.1444, 0.1 ) }
    dend_58 { pt3dadd( -31.5653, 94.0337, -47.4748, 0.1 ) }
    dend_58 { pt3dadd( -31.3833, 94.9262, -48.0337, 0.1 ) }
    dend_58 { pt3dadd( -31.3118, 95.2417, -48.195, 0.1 ) }
    dend_58 { pt3dadd( -31.0633, 96.2452, -48.4807, 0.1 ) }
    dend_58 { pt3dadd( -30.9155, 96.7846, -48.5561, 0.1 ) }
    dend_58 { pt3dadd( -30.7333, 97.3197, -48.5508, 0.1 ) }
    dend_58 { pt3dadd( -30.3757, 98.3259, -48.45, 0.1 ) }
    dend_58 { pt3dadd( -30.253, 98.6589, -48.3811, 0.1 ) }
    dend_58 { pt3dadd( -29.8736, 99.6341, -48.1635, 0.1 ) }
    dend_58 { pt3dadd( -29.7275, 99.9545, -48.0821, 0.14 ) }
    dend_58 { pt3dadd( -29.6083, 100.179, -48.0529, 0.14 ) }
    dend_58 { pt3dadd( -29.0657, 101.06, -48.0943, 0.28 ) }
    dend_58 { pt3dadd( -28.849, 101.341, -48.1624, 0.28 ) }
    dend_58 { pt3dadd( -28.4794, 101.75, -48.2888, 0.14 ) }
    dend_58 { pt3dadd( -28.1294, 102.099, -48.4181, 0.1 ) }
    dend_58 { pt3dadd( -27.7232, 102.475, -48.5353, 0.1 ) }
    dend_58 { pt3dadd( -27.2956, 102.835, -48.6206, 0.1 ) }
    dend_58 { pt3dadd( -26.8914, 103.145, -48.6629, 0.1 ) }
    dend_58 { pt3dadd( -26.4364, 103.477, -48.7099, 0.1 ) }
    dend_58 { pt3dadd( -26.1449, 103.689, -48.74, 0.14 ) }
    dend_58 { pt3dadd( -25.9375, 103.836, -48.7613, 0.28 ) }
    dend_58 { pt3dadd( -25.5254, 104.122, -48.8476, 0.7 ) }
    dend_58 { pt3dadd( -25.233, 104.316, -48.9334, 0.56 ) }
    dend_58 { pt3dadd( -24.8267, 104.587, -49.0762, 0.42 ) }
    dend_58 { pt3dadd( -24.3718, 104.875, -49.2486, 0.28 ) }
    dend_58 { pt3dadd( -23.9574, 105.127, -49.4102, 0.14 ) }
    dend_58 { pt3dadd( -23.0938, 105.652, -49.7602, 0.1 ) }
    dend_58 { pt3dadd( -22.689, 105.913, -49.9309, 0.1 ) }
    dend_58 { pt3dadd( -22.2463, 106.213, -50.1137, 0.1 ) }
    dend_58 { pt3dadd( -21.8711, 106.504, -50.3044, 0.1 ) }
    dend_58 { pt3dadd( -21.6952, 106.656, -50.4044, 0.1 ) }
    dend_58 { pt3dadd( -21.6952, 106.656, -50.4044, 0.1 ) }
    dend_58 { pt3dadd( -21.3847, 107.046, -50.6837, 0.1 ) }
    dend_58 { pt3dadd( -21.131, 107.453, -50.9827, 0.1 ) }
    dend_58 { pt3dadd( -20.7615, 108.193, -51.5036, 0.1 ) }
    dend_58 { pt3dadd( -20.5704, 108.644, -51.7989, 0.1 ) }
    dend_58 { pt3dadd( -20.2694, 109.417, -52.3151, 0.14 ) }
    dend_58 { pt3dadd( -20.0998, 109.864, -52.6108, 0.1 ) }
    dend_58 { pt3dadd( -19.9428, 110.313, -52.9304, 0.1 ) }
    dend_58 { pt3dadd( -19.8024, 110.76, -53.2428, 0.14 ) }
    dend_58 { pt3dadd( -19.7069, 111.054, -53.4304, 0.28 ) }
    dend_58 { pt3dadd( -19.3926, 111.997, -54.0238, 0.14 ) }
    dend_58 { pt3dadd( -19.2804, 112.296, -54.1939, 0.1 ) }
    dend_58 { pt3dadd( -18.8997, 113.161, -54.69, 0.1 ) }
    dend_58 { pt3dadd( -18.7543, 113.455, -54.8518, 0.1 ) }
    dend_58 { pt3dadd( -18.5148, 113.917, -55.0731, 0.1 ) }
    dend_58 { pt3dadd( -18.3548, 114.221, -55.1863, 0.1 ) }
    dend_58 { pt3dadd( -18.0226, 114.839, -55.3235, 0.1 ) }
    dend_58 { pt3dadd( -17.7571, 115.347, -55.4003, 0.1 ) }
    dend_58 { pt3dadd( -17.5959, 115.661, -55.4227, 0.1 ) }
    dend_58 { pt3dadd( -17.3589, 116.175, -55.4971, 0.1 ) }
    dend_58 { pt3dadd( -17.228, 116.506, -55.5635, 0.1 ) }
    dend_58 { pt3dadd( -16.9904, 117.165, -55.7249, 0.1 ) }
    dend_58 { pt3dadd( -16.8269, 117.684, -55.8685, 0.1 ) }
    dend_58 { pt3dadd( -16.7349, 118.02, -55.9651, 0.1 ) }
    dend_58 { pt3dadd( -16.4633, 119.015, -56.2623, 0.1 ) }
    dend_58 { pt3dadd( -16.3122, 119.542, -56.3891, 0.1 ) }
    dend_58 { pt3dadd( -16.2035, 119.887, -56.4466, 0.1 ) }
    dend_58 { pt3dadd( -16.0059, 120.412, -56.4872, 0.1 ) }
    dend_58 { pt3dadd( -15.7585, 120.929, -56.4759, 0.1 ) }
    dend_58 { pt3dadd( -15.6381, 121.143, -56.4501, 0.14 ) }
    dend_58 { pt3dadd( -15.1036, 121.94, -56.2758, 0.28 ) }
    dend_58 { pt3dadd( -14.757, 122.377, -56.1823, 0.14 ) }
    dend_58 { pt3dadd( -14.3998, 122.806, -56.059, 0.1 ) }
    dend_58 { pt3dadd( -14.0568, 123.218, -55.8805, 0.1 ) }
    dend_58 { pt3dadd( -13.8556, 123.473, -55.7208, 0.1 ) }
    dend_58 { pt3dadd( -13.5771, 123.875, -55.4379, 0.1 ) }
    dend_58 { pt3dadd( -13.3646, 124.236, -55.1445, 0.14 ) }
    dend_58 { pt3dadd( -12.9993, 124.948, -54.4868, 0.1 ) }
    dend_58 { pt3dadd( -12.6632, 125.707, -53.8076, 0.1 ) }
    dend_58 { pt3dadd( -12.3859, 126.424, -53.2044, 0.1 ) }
    dend_58 { pt3dadd( -12.2383, 126.852, -52.8673, 0.1 ) }
    dend_58 { pt3dadd( -12.0069, 127.634, -52.1701, 0.1 ) }
    dend_58 { pt3dadd( -11.9671, 127.835, -52.4632, 0.14 ) }
    dend_58 { pt3dadd( -11.7408, 128.934, -53.9128, 0.28 ) }
    dend_58 { pt3dadd( -11.6232, 129.494, -54.7052, 0.14 ) }
    dend_58 { pt3dadd( -11.4947, 130.051, -55.4974, 0.28 ) }
    dend_58 { pt3dadd( -11.457, 130.193, -55.7064, 0.42 ) }
    dend_58 { pt3dadd( -11.365, 130.519, -56.1553, 0.14 ) }
    dend_58 { pt3dadd( -11.2481, 130.917, -56.5509, 0.1 ) }
    dend_58 { pt3dadd( -11.1577, 131.214, -56.7204, 0.1 ) }
    dend_58 { pt3dadd( -10.9786, 131.868, -56.983, 0.1 ) }
    dend_58 { pt3dadd( -10.7569, 132.774, -57.2641, 0.1 ) }
    dend_58 { pt3dadd( -10.6454, 133.302, -57.4541, 0.1 ) }
    dend_58 { pt3dadd( -10.5483, 133.818, -57.6595, 0.1 ) }
    dend_58 { pt3dadd( -10.5103, 134.053, -57.7536, 0.1 ) }
    dend_58 { pt3dadd( -10.4303, 134.58, -57.9598, 0.1 ) }
    dend_58 { pt3dadd( -10.3632, 135.107, -58.148, 0.1 ) }
    dend_58 { pt3dadd( -10.2362, 136.131, -58.4425, 0.1 ) }
    dend_58 { pt3dadd( -10.1772, 136.671, -58.5958, 0.1 ) }
    dend_58 { pt3dadd( -10.1222, 137.221, -58.7402, 0.1 ) }
    dend_58 { pt3dadd( -10.0979, 137.469, -58.7959, 0.1 ) }
    dend_58 { pt3dadd( -10.0628, 137.969, -58.883, 0.1 ) }
    dend_58 { pt3dadd( -10.0344, 138.528, -58.9433, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_58 { pt3dadd( -10.0134, 139.036, -58.96, 0.1 ) }
    dend_58 { pt3dadd( -10.0003, 139.598, -58.9777, 0.1 ) }
    dend_58 { pt3dadd( -10.0017, 140.171, -58.9945, 0.1 ) }
    dend_58 { pt3dadd( -10.0181, 140.682, -59.0082, 0.1 ) }
    dend_58 { pt3dadd( -10.0367, 141.245, -59.0233, 0.1 ) }
    dend_58 { pt3dadd( -10.0576, 141.816, -59.0384, 0.1 ) }
    dend_58 { pt3dadd( -10.0624, 142.069, -59.0455, 0.1 ) }
    dend_58 { pt3dadd( -10.0695, 142.578, -59.0978, 0.14 ) }
    dend_58 { pt3dadd( -10.077, 143.079, -59.1812, 0.1 ) }
    dend_58 { pt3dadd( -10.0764, 143.629, -59.2998, 0.1 ) }
    dend_58 { pt3dadd( -10.0816, 144.186, -59.4374, 0.1 ) }
    dend_58 { pt3dadd( -10.0828, 144.528, -59.5271, 0.1 ) }
    dend_58 { pt3dadd( -10.0847, 145.565, -59.7987, 0.1 ) }
    dend_58 { pt3dadd( -10.0818, 146.058, -59.9238, 0.1 ) }
    dend_58 { pt3dadd( -10.0774, 146.606, -60.051, 0.1 ) }
    dend_58 { pt3dadd( -10.0827, 147.105, -60.1521, 0.1 ) }
    dend_58 { pt3dadd( -10.0954, 147.662, -60.2795, 0.1 ) }
    dend_58 { pt3dadd( -10.1148, 148.149, -60.3901, 0.1 ) }
    dend_58 { pt3dadd( -10.144, 148.711, -60.5022, 0.1 ) }
    dend_58 { pt3dadd( -10.1819, 149.257, -60.6299, 0.1 ) }
    dend_58 { pt3dadd( -10.2016, 149.508, -60.6758, 0.1 ) }
    dend_58 { pt3dadd( -10.2738, 150.57, -60.8124, 0.1 ) }
    dend_58 { pt3dadd( -10.3139, 151.078, -60.8489, 0.1 ) }
    dend_58 { pt3dadd( -10.3439, 151.586, -60.8612, 0.1 ) }
    dend_58 { pt3dadd( -10.3745, 152.087, -60.8438, 0.14 ) }
    dend_58 { pt3dadd( -10.441, 153.154, -60.7394, 0.1 ) }
    dend_58 { pt3dadd( -10.4804, 153.722, -60.6932, 0.1 ) }
    dend_58 { pt3dadd( -10.5245, 154.218, -60.6511, 0.1 ) }
    dend_58 { pt3dadd( -10.56, 154.575, -60.6937, 0.1 ) }
    dend_58 { pt3dadd( -10.6106, 155.061, -60.8448, 0.1 ) }
    dend_58 { pt3dadd( -10.6595, 155.504, -61.0901, 0.1 ) }
    dend_58 { pt3dadd( -10.7676, 156.349, -61.6898, 0.1 ) }
    dend_58 { pt3dadd( -10.8162, 156.755, -61.9922, 0.1 ) }
    dend_58 { pt3dadd( -10.8959, 157.616, -62.6185, 0.1 ) }
    dend_58 { pt3dadd( -10.9287, 158.103, -62.9193, 0.1 ) }
    dend_58 { pt3dadd( -10.934, 159.048, -63.416, 0.1 ) }
    dend_58 { pt3dadd( -10.9242, 159.284, -63.5068, 0.1 ) }
    dend_58 { pt3dadd( -10.872, 159.85, -63.5697, 0.1 ) }
    dend_58 { pt3dadd( -10.8042, 160.408, -63.5203, 0.1 ) }
    dend_58 { pt3dadd( -10.6857, 161.438, -63.247, 0.1 ) }
    dend_58 { pt3dadd( -10.6459, 161.762, -63.1097, 0.1 ) }
    dend_58 { pt3dadd( -10.5802, 162.204, -62.8665, 0.1 ) }
    dend_58 { pt3dadd( -10.4554, 163.123, -62.3278, 0.1 ) }
    dend_58 { pt3dadd( -10.4079, 163.605, -62.038, 0.1 ) }
    dend_58 { pt3dadd( -10.388, 164.06, -61.8062, 0.1 ) }
    dend_58 { pt3dadd( -10.4181, 164.987, -61.4941, 0.14 ) }
    dend_58 { pt3dadd( -10.4462, 165.228, -61.4634, 0.28 ) }
    dend_58 { pt3dadd( -10.5597, 165.783, -61.5391, 0.1 ) }
    dend_58 { pt3dadd( -10.6923, 166.194, -61.7914, 0.1 ) }
    dend_58 { pt3dadd( -10.9853, 166.962, -62.4314, 0.1 ) }
    dend_58 { pt3dadd( -11.1217, 167.317, -62.7691, 0.1 ) }
    dend_58 { pt3dadd( -11.3974, 168.027, -63.4793, 0.1 ) }
    dend_58 { pt3dadd( -11.5239, 168.382, -63.8217, 0.14 ) }
    dend_58 { pt3dadd( -11.9388, 169.734, -65.069, 0.28 ) }
    dend_58 { pt3dadd( -12.037, 170.113, -65.3801, 0.28 ) }
    dend_58 { pt3dadd( -12.0991, 170.407, -65.5802, 0.14 ) }
    dend_58 { pt3dadd( -12.1753, 170.846, -65.8262, 0.1 ) }
    dend_58 { pt3dadd( -12.2374, 171.374, -66.0114, 0.1 ) }
    dend_58 { pt3dadd( -12.2698, 171.871, -66.1109, 0.1 ) }
    dend_58 { pt3dadd( -12.2879, 172.443, -66.1263, 0.1 ) }
    dend_58 { pt3dadd( -12.2879, 172.443, -66.1263, 0.1 ) }
    dend_58 { pt3dadd( -12.3056, 172.951, -66.1398, 0.1 ) }
    dend_58 { pt3dadd( -12.3134, 173.513, -66.1558, 0.1 ) }
    dend_58 { pt3dadd( -12.3231, 174.086, -66.1719, 0.1 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 64/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -44.2606, 62.9856, -37.3268, 0.7 ) }
    dend_57 { pt3dadd( -44.9329, 63.2228, -37.5984, 0.7 ) }
    dend_57 { pt3dadd( -45.461, 63.4397, -37.8129, 0.56 ) }
    dend_57 { pt3dadd( -45.7925, 63.5849, -37.9353, 0.42 ) }
    dend_57 { pt3dadd( -46.324, 63.8236, -38.1155, 0.28 ) }
    dend_57 { pt3dadd( -47.3182, 64.2926, -38.4216, 0.14 ) }
    dend_57 { pt3dadd( -47.6531, 64.4598, -38.5148, 0.1 ) }
    dend_57 { pt3dadd( -48.1755, 64.7442, -38.6519, 0.1 ) }
    dend_57 { pt3dadd( -48.826, 65.1323, -38.7981, 0.14 ) }
    dend_57 { pt3dadd( -49.1415, 65.332, -38.8518, 0.1 ) }
    dend_57 { pt3dadd( -49.6427, 65.6669, -38.9446, 0.1 ) }
    dend_57 { pt3dadd( -50.1322, 66.0097, -39.027, 0.1 ) }
    dend_57 { pt3dadd( -50.4388, 66.2414, -39.0961, 0.1 ) }
    dend_57 { pt3dadd( -50.8979, 66.6121, -39.2216, 0.1 ) }
    dend_57 { pt3dadd( -51.3419, 66.9978, -39.3561, 0.1 ) }
    dend_57 { pt3dadd( -52.1032, 67.6697, -39.5924, 0.1 ) }
    dend_57 { pt3dadd( -52.4927, 68.0131, -39.7505, 0.14 ) }
    dend_57 { pt3dadd( -52.9192, 68.3963, -39.9583, 0.28 ) }
    dend_57 { pt3dadd( -53.333, 68.7751, -40.1801, 0.14 ) }
    dend_57 { pt3dadd( -53.7395, 69.1592, -40.4065, 0.1 ) }
    dend_57 { pt3dadd( -54.0001, 69.4107, -40.5391, 0.14 ) }
    dend_57 { pt3dadd( -54.7073, 70.1277, -40.8156, 0.28 ) }
    dend_57 { pt3dadd( -54.9584, 70.3944, -40.9505, 0.42 ) }
    dend_57 { pt3dadd( -55.3161, 70.8228, -41.1797, 0.7 ) }
    dend_57 { pt3dadd( -55.6171, 71.2294, -41.3837, 0.56 ) }
    dend_57 { pt3dadd( -55.9283, 71.6832, -41.6311, 0.42 ) }
    dend_57 { pt3dadd( -56.1995, 72.1032, -41.8493, 0.28 ) }
    dend_57 { pt3dadd( -56.7618, 73.0051, -42.2645, 0.14 ) }
    dend_57 { pt3dadd( -57.0236, 73.4241, -42.4892, 0.1 ) }
    dend_57 { pt3dadd( -57.2735, 73.842, -42.7353, 0.1 ) }
    dend_57 { pt3dadd( -57.7826, 74.7163, -43.2629, 0.1 ) }
    dend_57 { pt3dadd( -58.0263, 75.1379, -43.5088, 0.1 ) }
    dend_57 { pt3dadd( -58.2754, 75.5623, -43.7378, 0.1 ) }
    dend_57 { pt3dadd( -58.8295, 76.4737, -44.1432, 0.1 ) }
    dend_57 { pt3dadd( -59.1057, 76.9068, -44.3267, 0.1 ) }
    dend_57 { pt3dadd( -59.3986, 77.3371, -44.4805, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_57 { pt3dadd( -59.7446, 77.8271, -44.5909, 0.1 ) }
    dend_57 { pt3dadd( -59.9024, 78.0432, -44.6276, 0.1 ) }
    dend_57 { pt3dadd( -60.2607, 78.5351, -44.668, 0.1 ) }
    dend_57 { pt3dadd( -60.2607, 78.5351, -44.668, 0.1 ) }
    dend_57 { pt3dadd( -60.6038, 79.0247, -44.7489, 0.1 ) }
    dend_57 { pt3dadd( -60.8925, 79.4613, -44.8928, 0.1 ) }
    dend_57 { pt3dadd( -61.1702, 79.8782, -45.0841, 0.1 ) }
    dend_57 { pt3dadd( -61.4568, 80.2841, -45.3026, 0.1 ) }
    dend_57 { pt3dadd( -62.0761, 81.1092, -45.7981, 0.14 ) }
    dend_57 { pt3dadd( -62.3755, 81.4764, -46.0632, 0.28 ) }
    dend_57 { pt3dadd( -62.9259, 82.0922, -46.569, 0.42 ) }
    dend_57 { pt3dadd( -63.3703, 82.5344, -47.012, 0.1 ) }
    dend_57 { pt3dadd( -63.7355, 82.8646, -47.3719, 0.1 ) }
    dend_57 { pt3dadd( -63.9672, 83.0509, -47.6041, 0.1 ) }
    dend_57 { pt3dadd( -64.6667, 83.5828, -48.3374, 0.1 ) }
    dend_57 { pt3dadd( -65.0337, 83.8482, -48.736, 0.1 ) }
    dend_57 { pt3dadd( -65.6768, 84.3127, -49.4123, 0.1 ) }
    dend_57 { pt3dadd( -66.0424, 84.5829, -49.809, 0.1 ) }
    dend_57 { pt3dadd( -66.7508, 85.1067, -50.5411, 0.14 ) }
    dend_57 { pt3dadd( -67.4875, 85.6469, -51.2249, 0.1 ) }
    dend_57 { pt3dadd( -67.7432, 85.8353, -51.4437, 0.1 ) }
    dend_57 { pt3dadd( -68.1532, 86.1366, -51.7679, 0.1 ) }
    dend_57 { pt3dadd( -68.569, 86.444, -52.0785, 0.1 ) }
    dend_57 { pt3dadd( -68.9743, 86.7539, -52.4256, 0.1 ) }
    dend_57 { pt3dadd( -69.2197, 86.9462, -52.6378, 0.14 ) }
    dend_57 { pt3dadd( -69.8517, 87.4225, -53.2593, 0.28 ) }
    dend_57 { pt3dadd( -70.3129, 87.7603, -53.7645, 0.28 ) }
    dend_57 { pt3dadd( -70.9437, 88.1829, -54.4789, 0.14 ) }
    dend_57 { pt3dadd( -71.649, 88.6265, -55.2585, 0.1 ) }
    dend_57 { pt3dadd( -71.9037, 88.7721, -55.5162, 0.1 ) }
    dend_57 { pt3dadd( -72.7677, 89.2267, -56.2691, 0.1 ) }
    dend_57 { pt3dadd( -73.0556, 89.3689, -56.4829, 0.1 ) }
    dend_57 { pt3dadd( -73.5177, 89.6002, -56.7918, 0.1 ) }
    dend_57 { pt3dadd( -74.0139, 89.8441, -57.0492, 0.14 ) }
    dend_57 { pt3dadd( -74.5169, 90.0951, -57.2599, 0.1 ) }
    dend_57 { pt3dadd( -74.8294, 90.2689, -57.4046, 0.1 ) }
    dend_57 { pt3dadd( -75.7004, 90.8247, -57.8978, 0.1 ) }
    dend_57 { pt3dadd( -76.1308, 91.1303, -58.2032, 0.14 ) }
    dend_57 { pt3dadd( -76.3801, 91.3267, -58.4071, 0.1 ) }
    dend_57 { pt3dadd( -76.7694, 91.653, -58.7447, 0.1 ) }
    dend_57 { pt3dadd( -77.473, 92.3067, -59.3608, 0.14 ) }
    dend_57 { pt3dadd( -78.1827, 92.9945, -59.931, 0.28 ) }
    dend_57 { pt3dadd( -78.1827, 92.9945, -59.931, 0.42 ) }
    dend_57 { pt3dadd( -78.5539, 93.3989, -60.1969, 0.28 ) }
    dend_57 { pt3dadd( -78.9096, 93.8189, -60.4439, 0.14 ) }
    dend_57 { pt3dadd( -79.2231, 94.2186, -60.6354, 0.1 ) }
    dend_57 { pt3dadd( -79.5705, 94.6955, -60.7896, 0.1 ) }
    dend_57 { pt3dadd( -79.8675, 95.137, -60.8967, 0.1 ) }
    dend_57 { pt3dadd( -80.4787, 96.0795, -61.1162, 0.1 ) }
    dend_57 { pt3dadd( -80.7562, 96.5351, -61.2165, 0.1 ) }
    dend_57 { pt3dadd( -81.0178, 96.994, -61.3414, 0.1 ) }
    dend_57 { pt3dadd( -81.2718, 97.4561, -61.4813, 0.1 ) }
    dend_57 { pt3dadd( -81.5216, 97.9168, -61.6226, 0.1 ) }
    dend_57 { pt3dadd( -81.8164, 98.4299, -61.7699, 0.1 ) }
    dend_57 { pt3dadd( -82.0803, 98.8823, -61.9128, 0.1 ) }
    dend_57 { pt3dadd( -82.6352, 99.7692, -62.2707, 0.1 ) }
    dend_57 { pt3dadd( -82.7741, 99.9829, -62.3678, 0.1 ) }
    dend_57 { pt3dadd( -83.0833, 100.441, -62.6254, 0.1 ) }
    dend_57 { pt3dadd( -83.3982, 100.885, -62.9007, 0.1 ) }
    dend_57 { pt3dadd( -83.9724, 101.682, -63.4084, 0.1 ) }
    dend_57 { pt3dadd( -84.3101, 102.122, -63.6789, 0.1 ) }
    dend_57 { pt3dadd( -84.622, 102.503, -63.8843, 0.1 ) }
    dend_57 { pt3dadd( -85.326, 103.301, -64.2959, 0.1 ) }
    dend_57 { pt3dadd( -85.7275, 103.724, -64.4988, 0.1 ) }
    dend_57 { pt3dadd( -85.9113, 103.899, -64.5689, 0.1 ) }
    dend_57 { pt3dadd( -86.3715, 104.285, -64.6761, 0.1 ) }
    dend_57 { pt3dadd( -86.8433, 104.652, -64.758, 0.1 ) }
    dend_57 { pt3dadd( -87.4586, 105.103, -64.8753, 0.1 ) }
    dend_57 { pt3dadd( -87.7643, 105.317, -64.9284, 0.1 ) }
    dend_57 { pt3dadd( -88.257, 105.659, -65.041, 0.1 ) }
    dend_57 { pt3dadd( -88.5566, 105.87, -65.1478, 0.1 ) }
    dend_57 { pt3dadd( -89.0203, 106.193, -65.36, 0.1 ) }
    dend_57 { pt3dadd( -89.8745, 106.8, -65.82, 0.1 ) }
    dend_57 { pt3dadd( -90.1445, 107.001, -65.9895, 0.1 ) }
    dend_57 { pt3dadd( -90.5776, 107.323, -66.2743, 0.14 ) }
    dend_57 { pt3dadd( -91.4076, 107.893, -66.8111, 0.1 ) }
    dend_57 { pt3dadd( -91.8702, 108.185, -67.0843, 0.1 ) }
    dend_57 { pt3dadd( -92.091, 108.301, -67.1885, 0.14 ) }
    dend_57 { pt3dadd( -92.4333, 108.438, -67.2881, 0.28 ) }
    dend_57 { pt3dadd( -93.1272, 108.675, -67.5157, 0.7 ) }
    dend_57 { pt3dadd( -93.6901, 108.823, -67.6974, 0.56 ) }
    dend_57 { pt3dadd( -94.0507, 108.899, -67.7985, 0.42 ) }
    dend_57 { pt3dadd( -94.626, 109.006, -67.9704, 0.28 ) }
    dend_57 { pt3dadd( -95.1954, 109.103, -68.1407, 0.14 ) }
    dend_57 { pt3dadd( -96.1843, 109.265, -68.428, 0.14 ) }
    dend_57 { pt3dadd( -96.7648, 109.349, -68.595, 0.1 ) }
    dend_57 { pt3dadd( -97.3396, 109.443, -68.7479, 0.1 ) }
    dend_57 { pt3dadd( -97.926, 109.542, -68.8828, 0.1 ) }
    dend_57 { pt3dadd( -98.2908, 109.611, -68.9502, 0.1 ) }
    dend_57 { pt3dadd( -98.8836, 109.742, -69.0234, 0.14 ) }
    dend_57 { pt3dadd( -99.4586, 109.9, -69.0927, 0.28 ) }
    dend_57 { pt3dadd( -100.027, 110.096, -69.1954, 0.14 ) }
    dend_57 { pt3dadd( -100.558, 110.324, -69.3637, 0.1 ) }
    dend_57 { pt3dadd( -100.882, 110.477, -69.5065, 0.14 ) }
    dend_57 { pt3dadd( -101.374, 110.705, -69.7708, 0.14 ) }
    dend_57 { pt3dadd( -102.291, 111.092, -70.3362, 0.1 ) }
    dend_57 { pt3dadd( -102.598, 111.194, -70.5388, 0.1 ) }
    dend_57 { pt3dadd( -103.452, 111.345, -71.0443, 0.14 ) }
    dend_57 { pt3dadd( -103.944, 111.336, -71.2736, 0.1 ) }
    dend_57 { pt3dadd( -104.449, 111.194, -71.4117, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_57 { pt3dadd( -104.923, 110.945, -71.4564, 0.1 ) }
    dend_57 { pt3dadd( -105.36, 110.631, -71.3881, 0.1 ) }
    dend_57 { pt3dadd( -106.226, 109.924, -71.1438, 0.1 ) }
    dend_57 { pt3dadd( -106.663, 109.549, -70.9401, 0.1 ) }
    dend_57 { pt3dadd( -107.075, 109.174, -70.7097, 0.1 ) }
    dend_57 { pt3dadd( -107.335, 108.935, -70.5546, 0.1 ) }
    dend_57 { pt3dadd( -108.114, 108.237, -70.0986, 0.1 ) }
    dend_57 { pt3dadd( -108.497, 107.904, -69.8966, 0.1 ) }
    dend_57 { pt3dadd( -109.322, 107.246, -69.5539, 0.1 ) }
    dend_57 { pt3dadd( -109.796, 106.887, -69.4159, 0.1 ) }
    dend_57 { pt3dadd( -110.235, 106.575, -69.3549, 0.1 ) }
    dend_57 { pt3dadd( -110.679, 106.279, -69.3692, 0.1 ) }
    dend_57 { pt3dadd( -111.178, 105.946, -69.4788, 0.1 ) }
    dend_57 { pt3dadd( -111.613, 105.652, -69.6171, 0.1 ) }
    dend_57 { pt3dadd( -112.512, 105.05, -69.9897, 0.14 ) }
    dend_57 { pt3dadd( -112.939, 104.764, -70.1653, 0.1 ) }
    dend_57 { pt3dadd( -113.367, 104.475, -70.3326, 0.1 ) }
    dend_57 { pt3dadd( -113.837, 104.149, -70.5438, 0.1 ) }
    dend_57 { pt3dadd( -114.044, 104.001, -70.6427, 0.1 ) }
    dend_57 { pt3dadd( -114.455, 103.701, -70.8299, 0.1 ) }
    dend_57 { pt3dadd( -114.921, 103.359, -71.0059, 0.1 ) }
    dend_57 { pt3dadd( -115.327, 103.044, -71.1867, 0.1 ) }
    dend_57 { pt3dadd( -116.148, 102.382, -71.622, 0.14 ) }
    dend_57 { pt3dadd( -116.418, 102.165, -71.7927, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 24/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -18.485, 37.1033, -31.473, 1.12 ) }
    dend_55 { pt3dadd( -19.8704, 37.8929, -33.2689, 1.12 ) }
    dend_55 { pt3dadd( -20.0479, 37.9929, -33.5193, 1.12 ) }
    dend_55 { pt3dadd( -20.5189, 38.2569, -34.2431, 0.14 ) }
    dend_55 { pt3dadd( -21.1578, 38.6497, -35.2257, 0.1 ) }
    dend_55 { pt3dadd( -21.7797, 39.0653, -36.2026, 0.1 ) }
    dend_55 { pt3dadd( -22.5012, 39.5814, -37.3694, 0.1 ) }
    dend_55 { pt3dadd( -23.0623, 39.9967, -38.3825, 0.1 ) }
    dend_55 { pt3dadd( -23.6287, 40.4222, -39.3955, 0.1 ) }
    dend_55 { pt3dadd( -23.9209, 40.6505, -39.9067, 0.1 ) }
    dend_55 { pt3dadd( -24.6035, 41.184, -40.9541, 0.1 ) }
    dend_55 { pt3dadd( -25.3308, 41.7753, -41.9267, 0.1 ) }
    dend_55 { pt3dadd( -25.3308, 41.7753, -41.9267, 0.14 ) }
    dend_55 { pt3dadd( -25.8599, 42.2258, -42.5034, 0.1 ) }
    dend_55 { pt3dadd( -26.1244, 42.4582, -42.7942, 0.1 ) }
    dend_55 { pt3dadd( -26.9674, 43.2064, -43.7266, 0.1 ) }
    dend_55 { pt3dadd( -27.337, 43.5651, -44.116, 0.1 ) }
    dend_55 { pt3dadd( -28.0057, 44.2782, -44.8631, 0.1 ) }
    dend_55 { pt3dadd( -28.3344, 44.6692, -45.2581, 0.14 ) }
    dend_55 { pt3dadd( -28.8834, 45.4005, -46.0167, 0.28 ) }
    dend_55 { pt3dadd( -29.2022, 45.8643, -46.4699, 0.7 ) }
    dend_55 { pt3dadd( -29.464, 46.2829, -46.8637, 0.56 ) }
    dend_55 { pt3dadd( -29.9943, 47.1666, -47.75, 0.42 ) }
    dend_55 { pt3dadd( -30.2304, 47.5807, -48.1642, 0.28 ) }
    dend_55 { pt3dadd( -30.7519, 48.4474, -49.0593, 0.14 ) }
    dend_55 { pt3dadd( -31.0241, 48.8585, -49.4762, 0.1 ) }
    dend_55 { pt3dadd( -31.6125, 49.666, -50.33, 0.1 ) }
    dend_55 { pt3dadd( -32.2682, 50.4493, -51.1594, 0.14 ) }
    dend_55 { pt3dadd( -32.2682, 50.4493, -51.1594, 0.28 ) }
    dend_55 { pt3dadd( -32.7977, 50.952, -51.6908, 0.1 ) }
    dend_55 { pt3dadd( -33.2485, 51.3265, -52.116, 0.1 ) }
    dend_55 { pt3dadd( -33.5396, 51.5415, -52.3775, 0.1 ) }
    dend_55 { pt3dadd( -33.86, 51.7574, -52.6208, 0.14 ) }
    dend_55 { pt3dadd( -34.0906, 51.9154, -52.7824, 0.28 ) }
    dend_55 { pt3dadd( -34.9501, 52.5606, -53.3888, 0.84 ) }
    dend_55 { pt3dadd( -35.8281, 53.2775, -54.1234, 0.7 ) }
    dend_55 { pt3dadd( -36.2747, 53.662, -54.5267, 0.56 ) }
    dend_55 { pt3dadd( -36.5668, 53.9151, -54.7801, 0.42 ) }
    dend_55 { pt3dadd( -37.0177, 54.3055, -55.1729, 0.28 ) }
    dend_55 { pt3dadd( -37.4727, 54.6847, -55.5856, 0.14 ) }
    dend_55 { pt3dadd( -38.2159, 55.3129, -56.3384, 0.28 ) }
    dend_55 { pt3dadd( -38.2159, 55.3129, -56.3384, 0.42 ) }
    dend_55 { pt3dadd( -38.5975, 55.6511, -56.8495, 0.1 ) }
    dend_55 { pt3dadd( -39.2692, 56.3033, -57.8231, 0.1 ) }
    dend_55 { pt3dadd( -39.8122, 56.9251, -58.7403, 0.1 ) }
    dend_55 { pt3dadd( -40.3381, 57.6784, -59.7365, 0.1 ) }
    dend_55 { pt3dadd( -40.3381, 57.6784, -59.7365, 0.14 ) }
    dend_55 { pt3dadd( -40.52, 58.1115, -60.1586, 0.1 ) }
    dend_55 { pt3dadd( -40.6526, 58.5917, -60.5695, 0.1 ) }
    dend_55 { pt3dadd( -40.8062, 59.6787, -61.3652, 0.14 ) }
    dend_55 { pt3dadd( -40.8418, 60.2689, -61.7594, 0.1 ) }
    dend_55 { pt3dadd( -40.8519, 60.8103, -62.1054, 0.1 ) }
    dend_55 { pt3dadd( -40.8752, 61.9521, -62.8342, 0.1 ) }
    dend_55 { pt3dadd( -40.8864, 62.3183, -63.0896, 0.1 ) }
    dend_55 { pt3dadd( -40.956, 63.4272, -63.8666, 0.14 ) }
    dend_55 { pt3dadd( -40.956, 63.4272, -63.8666, 0.28 ) }
    dend_55 { pt3dadd( -41.0284, 63.9428, -64.2486, 0.28 ) }
    dend_55 { pt3dadd( -41.1063, 64.4574, -64.6062, 0.14 ) }
    dend_55 { pt3dadd( -41.2765, 65.5361, -65.3374, 0.1 ) }
    dend_55 { pt3dadd( -41.3527, 66.0697, -65.693, 0.1 ) }
    dend_55 { pt3dadd( -41.4768, 67.2241, -66.3933, 0.14 ) }
    dend_55 { pt3dadd( -41.5109, 67.7841, -66.7129, 0.1 ) }
    dend_55 { pt3dadd( -41.5117, 68.4126, -67.049, 0.1 ) }
    dend_55 { pt3dadd( -41.4498, 69.5341, -67.5603, 0.14 ) }
    dend_55 { pt3dadd( -41.3903, 70.206, -67.7838, 0.1 ) }
    dend_55 { pt3dadd( -41.3271, 70.9044, -67.9638, 0.1 ) }
    dend_55 { pt3dadd( -41.2793, 71.5963, -68.1187, 0.1 ) }
    dend_55 { pt3dadd( -41.2551, 72.0397, -68.225, 0.14 ) }
    dend_55 { pt3dadd( -41.2331, 72.7308, -68.4395, 0.28 ) }
    dend_55 { pt3dadd( -41.2247, 73.3109, -68.6889, 0.42 ) }
    dend_55 { pt3dadd( -41.2133, 73.8676, -69.0159, 0.56 ) }
    dend_55 { pt3dadd( -41.1816, 74.8095, -69.7441, 0.42 ) }
    dend_55 { pt3dadd( -41.1578, 75.3201, -70.2568, 0.14 ) }
    dend_55 { pt3dadd( -41.104, 76.1058, -71.2022, 0.1 ) }
    dend_55 { pt3dadd( -41.0336, 76.9114, -72.2905, 0.1 ) }
    dend_55 { pt3dadd( -41.002, 77.171, -72.6525, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_55 { pt3dadd( -40.8847, 77.9817, -73.7316, 0.14 ) }
    dend_55 { pt3dadd( -40.7752, 78.7412, -74.5834, 0.28 ) }
    dend_55 { pt3dadd( -40.7478, 78.9684, -74.8112, 0.42 ) }
    dend_55 { pt3dadd( -40.7045, 79.4783, -75.205, 1.26 ) }
    dend_55 { pt3dadd( -40.6661, 80.0752, -75.6129, 1.12 ) }
    dend_55 { pt3dadd( -40.6298, 80.6465, -76.0338, 0.98 ) }
    dend_55 { pt3dadd( -40.5871, 81.213, -76.4826, 0.84 ) }
    dend_55 { pt3dadd( -40.492, 82.2025, -77.3944, 0.7 ) }
    dend_55 { pt3dadd( -40.4663, 82.4145, -77.6324, 0.84 ) }
    dend_55 { pt3dadd( -40.3456, 83.2174, -78.717, 1.12 ) }
    dend_55 { pt3dadd( -40.2479, 83.9056, -79.7322, 0.98 ) }
    dend_55 { pt3dadd( -40.1455, 84.6538, -80.8583, 0.84 ) }
    dend_55 { pt3dadd( -40.0636, 85.3475, -81.8712, 0.7 ) }
    dend_55 { pt3dadd( -39.9898, 86.0784, -82.8627, 0.56 ) }
    dend_55 { pt3dadd( -39.9163, 86.9118, -83.9298, 0.42 ) }
    dend_55 { pt3dadd( -39.8959, 87.3362, -84.4013, 0.28 ) }
    dend_55 { pt3dadd( -39.8917, 87.8764, -84.8833, 0.14 ) }
    dend_55 { pt3dadd( -39.9018, 88.413, -85.2423, 0.1 ) }
    dend_55 { pt3dadd( -39.9431, 89.6421, -85.7992, 0.1 ) }
    dend_55 { pt3dadd( -39.9431, 89.6421, -85.7992, 0.14 ) }
    dend_55 { pt3dadd( -39.9404, 90.2766, -85.9189, 0.56 ) }
    dend_55 { pt3dadd( -39.9223, 90.9816, -86.0823, 0.42 ) }
    dend_55 { pt3dadd( -39.91, 91.6717, -86.2515, 0.28 ) }
    dend_55 { pt3dadd( -39.9067, 92.3776, -86.4126, 0.14 ) }
    dend_55 { pt3dadd( -39.9255, 93.0643, -86.5941, 0.1 ) }
    dend_55 { pt3dadd( -39.9439, 93.4969, -86.7391, 0.1 ) }
    dend_55 { pt3dadd( -39.9967, 94.6794, -87.3102, 0.1 ) }
    dend_55 { pt3dadd( -40.0247, 95.2104, -87.6709, 0.1 ) }
    dend_55 { pt3dadd( -40.0433, 95.6892, -88.1037, 0.1 ) }
    dend_55 { pt3dadd( -40.0762, 96.5176, -88.9548, 0.14 ) }
    dend_55 { pt3dadd( -40.0995, 96.9931, -89.5002, 0.28 ) }
    dend_55 { pt3dadd( -40.1254, 97.7585, -90.4678, 0.14 ) }
    dend_55 { pt3dadd( -40.1375, 98.5854, -91.5349, 0.1 ) }
    dend_55 { pt3dadd( -40.1514, 99.3393, -92.5118, 0.1 ) }
    dend_55 { pt3dadd( -40.1673, 99.7466, -93.0125, 0.14 ) }
    dend_55 { pt3dadd( -40.2401, 100.636, -93.9696, 0.1 ) }
    dend_55 { pt3dadd( -40.3679, 101.527, -94.8142, 0.1 ) }
    dend_55 { pt3dadd( -40.4703, 102.036, -95.1926, 0.1 ) }
    dend_55 { pt3dadd( -40.6103, 102.591, -95.4917, 0.1 ) }
    dend_55 { pt3dadd( -40.7758, 103.16, -95.739, 0.1 ) }
    dend_55 { pt3dadd( -40.9504, 103.731, -95.9549, 0.1 ) }
    dend_55 { pt3dadd( -41.1451, 104.323, -96.1111, 0.1 ) }
    dend_55 { pt3dadd( -41.1451, 104.323, -96.1111, 0.14 ) }
    dend_55 { pt3dadd( -41.3547, 104.914, -96.2503, 0.1 ) }
    dend_55 { pt3dadd( -41.7833, 106.124, -96.5387, 0.1 ) }
    dend_55 { pt3dadd( -41.9764, 106.709, -96.7212, 0.1 ) }
    dend_55 { pt3dadd( -42.1581, 107.294, -96.9255, 0.1 ) }
    dend_55 { pt3dadd( -42.3171, 107.871, -97.1278, 0.1 ) }
    dend_55 { pt3dadd( -42.4675, 108.468, -97.3212, 0.1 ) }
    dend_55 { pt3dadd( -42.5952, 109.075, -97.4915, 0.1 ) }
    dend_55 { pt3dadd( -42.78, 110.248, -97.8263, 0.1 ) }
    dend_55 { pt3dadd( -42.8438, 110.855, -98.0277, 0.1 ) }
    dend_55 { pt3dadd( -42.8891, 111.505, -98.3096, 0.1 ) }
    dend_55 { pt3dadd( -42.9092, 112.083, -98.5911, 0.1 ) }
    dend_55 { pt3dadd( -42.9116, 112.699, -98.9456, 0.1 ) }
    dend_55 { pt3dadd( -42.8892, 113.859, -99.646, 0.1 ) }
    dend_55 { pt3dadd( -42.8654, 114.461, -100.044, 0.1 ) }
    dend_55 { pt3dadd( -42.7921, 115.41, -100.755, 0.1 ) }
    dend_55 { pt3dadd( -42.733, 115.965, -101.216, 0.1 ) }
    dend_55 { pt3dadd( -42.6087, 116.948, -102.14, 0.1 ) }
    dend_55 { pt3dadd( -42.5428, 117.456, -102.636, 0.1 ) }
    dend_55 { pt3dadd( -42.4123, 118.354, -103.472, 0.1 ) }
    dend_55 { pt3dadd( -42.359, 118.687, -103.765, 0.14 ) }
    dend_55 { pt3dadd( -42.3139, 118.947, -103.951, 0.28 ) }
    dend_55 { pt3dadd( -42.1149, 120.051, -104.636, 0.7 ) }
    dend_55 { pt3dadd( -41.9964, 120.706, -104.914, 0.56 ) }
    dend_55 { pt3dadd( -41.9116, 121.113, -105.077, 0.42 ) }
    dend_55 { pt3dadd( -41.7836, 121.77, -105.355, 0.28 ) }
    dend_55 { pt3dadd( -41.6831, 122.393, -105.705, 0.14 ) }
    dend_55 { pt3dadd( -41.6327, 122.754, -105.962, 0.1 ) }
    dend_55 { pt3dadd( -41.5686, 123.318, -106.412, 0.1 ) }
    dend_55 { pt3dadd( -41.506, 124.33, -107.304, 0.14 ) }
    dend_55 { pt3dadd( -41.479, 125.297, -108.194, 0.28 ) }
    dend_55 { pt3dadd( -41.49, 126.259, -109.092, 0.14 ) }
    dend_55 { pt3dadd( -41.5488, 127.26, -109.996, 0.1 ) }
    dend_55 { pt3dadd( -41.5965, 127.748, -110.416, 0.1 ) }
    dend_55 { pt3dadd( -41.6668, 128.256, -110.803, 0.1 ) }
    dend_55 { pt3dadd( -41.7343, 128.643, -111.035, 0.1 ) }
    dend_55 { pt3dadd( -41.853, 129.212, -111.29, 0.1 ) }
    dend_55 { pt3dadd( -42.0197, 129.786, -111.527, 0.14 ) }
    dend_55 { pt3dadd( -42.4961, 130.95, -112.032, 0.28 ) }
    dend_55 { pt3dadd( -42.7665, 131.449, -112.34, 0.42 ) }
    dend_55 { pt3dadd( -42.7665, 131.449, -112.34, 0.56 ) }
    dend_55 { pt3dadd( -43.1947, 131.974, -112.937, 0.28 ) }
    dend_55 { pt3dadd( -43.8016, 132.658, -113.937, 0.14 ) }
    dend_55 { pt3dadd( -43.9818, 132.848, -114.299, 0.1 ) }
    dend_55 { pt3dadd( -44.4754, 133.356, -115.454, 0.1 ) }
    dend_55 { pt3dadd( -44.9178, 133.826, -116.646, 0.1 ) }
    dend_55 { pt3dadd( -45.2926, 134.23, -117.698, 0.1 ) }
    dend_55 { pt3dadd( -45.6521, 134.627, -118.761, 0.1 ) }
    dend_55 { pt3dadd( -46.4264, 135.439, -120.89, 0.14 ) }
    dend_55 { pt3dadd( -46.8404, 135.849, -121.924, 0.28 ) }
    dend_55 { pt3dadd( -46.8404, 135.849, -121.924, 0.42 ) }
    dend_55 { pt3dadd( -47.3037, 136.175, -122.648, 0.7 ) }
    dend_55 { pt3dadd( -47.5866, 136.317, -122.963, 0.56 ) }
    dend_55 { pt3dadd( -48.239, 136.541, -123.561, 0.42 ) }
    dend_55 { pt3dadd( -48.5728, 136.605, -123.859, 0.56 ) }
    dend_55 { pt3dadd( -48.7997, 136.63, -124.087, 0.7 ) }
    dend_55 { pt3dadd( -49.6702, 136.688, -125.124, 1.68 ) }
    dend_55 { pt3dadd( -50.435, 136.693, -126.186, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_55 { pt3dadd( -51.0735, 136.661, -127.191, 1.4 ) }
    dend_55 { pt3dadd( -51.7037, 136.586, -128.342, 1.26 ) }
    dend_55 { pt3dadd( -51.7037, 136.586, -128.342, 1.12 ) }
    dend_55 { pt3dadd( -51.8373, 136.562, -128.635, 0.98 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -18.485, 37.1033, -31.473, 1.4 ) }
    dend_54 { pt3dadd( -18.4965, 37.3899, -32.2937, 1.4 ) }
    dend_54 { pt3dadd( -18.515, 37.6402, -33.0679, 1.26 ) }
    dend_54 { pt3dadd( -18.5331, 37.893, -33.9276, 1.12 ) }
    dend_54 { pt3dadd( -18.5471, 38.1062, -34.7168, 0.98 ) }
    dend_54 { pt3dadd( -18.5537, 38.2846, -35.5109, 0.84 ) }
    dend_54 { pt3dadd( -18.5576, 38.4205, -36.3158, 0.7 ) }
    dend_54 { pt3dadd( -18.5371, 38.534, -37.8995, 0.56 ) }
    dend_54 { pt3dadd( -18.5165, 38.5351, -38.6871, 0.56 ) }
    dend_54 { pt3dadd( -18.5057, 38.5222, -38.9, 0.1 ) }
    dend_54 { pt3dadd( -18.4309, 38.4418, -39.7867, 0.1 ) }
    dend_54 { pt3dadd( -18.3312, 38.3578, -40.6473, 0.1 ) }
    dend_54 { pt3dadd( -18.1818, 38.2752, -41.5243, 0.14 ) }
    dend_54 { pt3dadd( -18.1123, 38.2606, -41.8178, 0.84 ) }
    dend_54 { pt3dadd( -17.8911, 38.2975, -42.6858, 0.7 ) }
    dend_54 { pt3dadd( -17.6592, 38.4256, -43.5419, 0.56 ) }
    dend_54 { pt3dadd( -17.4333, 38.6428, -44.293, 0.42 ) }
    dend_54 { pt3dadd( -17.3061, 38.8004, -44.6691, 0.28 ) }
    dend_54 { pt3dadd( -17.0555, 39.1894, -45.4334, 0.14 ) }
    dend_54 { pt3dadd( -16.8391, 39.5544, -46.1308, 0.28 ) }
    dend_54 { pt3dadd( -16.7222, 39.7928, -46.5186, 0.42 ) }
    dend_54 { pt3dadd( -16.6315, 40.0656, -46.9017, 0.28 ) }
    dend_54 { pt3dadd( -16.6005, 40.2442, -47.1349, 0.14 ) }
    dend_54 { pt3dadd( -16.5916, 40.7446, -47.7434, 0.1 ) }
    dend_54 { pt3dadd( -16.6019, 40.8808, -47.9076, 0.14 ) }
    dend_54 { pt3dadd( -16.629, 41.1534, -48.2325, 0.1 ) }
    dend_54 { pt3dadd( -16.6712, 41.6757, -48.9275, 0.1 ) }
    dend_54 { pt3dadd( -16.6965, 42.1784, -49.6699, 0.1 ) }
    dend_54 { pt3dadd( -16.6905, 42.3961, -50.0289, 0.14 ) }
    dend_54 { pt3dadd( -16.6434, 42.7895, -50.7426, 0.28 ) }
    dend_54 { pt3dadd( -16.5996, 42.9979, -51.1715, 1.4 ) }
    dend_54 { pt3dadd( -16.4915, 43.3351, -51.9918, 1.26 ) }
    dend_54 { pt3dadd( -16.3643, 43.5998, -52.7535, 1.12 ) }
    dend_54 { pt3dadd( -16.1995, 43.8458, -53.5708, 0.98 ) }
    dend_54 { pt3dadd( -16.0196, 44.0435, -54.3422, 1.12 ) }
    dend_54 { pt3dadd( -15.7864, 44.2361, -55.1829, 0.98 ) }
    dend_54 { pt3dadd( -15.5498, 44.3724, -55.9536, 0.84 ) }
    dend_54 { pt3dadd( -15.2595, 44.5009, -56.7591, 0.7 ) }
    dend_54 { pt3dadd( -15.0946, 44.5604, -57.1463, 0.56 ) }
    dend_54 { pt3dadd( -14.9712, 44.6046, -57.4184, 0.42 ) }
    dend_54 { pt3dadd( -14.7932, 44.6696, -57.8012, 0.28 ) }
    dend_54 { pt3dadd( -14.485, 44.8103, -58.5412, 0.42 ) }
    dend_54 { pt3dadd( -14.3859, 44.8711, -58.8168, 0.56 ) }
    dend_54 { pt3dadd( -14.1159, 45.0901, -59.6428, 0.42 ) }
    dend_54 { pt3dadd( -13.888, 45.3166, -60.3906, 0.28 ) }
    dend_54 { pt3dadd( -13.6475, 45.5937, -61.2052, 0.14 ) }
    dend_54 { pt3dadd( -13.4281, 45.8724, -61.9405, 0.1 ) }
    dend_54 { pt3dadd( -13.1588, 46.2174, -62.7194, 0.1 ) }
    dend_54 { pt3dadd( -13.0041, 46.4132, -63.1265, 0.1 ) }
    dend_54 { pt3dadd( -12.8933, 46.5473, -63.3699, 0.1 ) }
    dend_54 { pt3dadd( -12.5251, 46.9991, -64.0508, 0.1 ) }
    dend_54 { pt3dadd( -12.4047, 47.1642, -64.264, 0.1 ) }
    dend_54 { pt3dadd( -12.2362, 47.4497, -64.6077, 0.1 ) }
    dend_54 { pt3dadd( -11.9862, 48.0256, -65.3411, 0.14 ) }
    dend_54 { pt3dadd( -11.9493, 48.1527, -65.5087, 0.14 ) }
    dend_54 { pt3dadd( -11.8984, 48.3983, -65.8518, 0.1 ) }
    dend_54 { pt3dadd( -11.8242, 48.9252, -66.568, 0.1 ) }
    dend_54 { pt3dadd( -11.7759, 49.4196, -67.2815, 0.1 ) }
    dend_54 { pt3dadd( -11.7523, 49.8679, -67.9633, 0.1 ) }
    dend_54 { pt3dadd( -11.743, 50.0874, -68.3186, 0.1 ) }
    dend_54 { pt3dadd( -11.713, 50.5477, -69.0869, 0.14 ) }
    dend_54 { pt3dadd( -11.6877, 50.7809, -69.4943, 0.28 ) }
    dend_54 { pt3dadd( -11.6316, 51.1864, -70.2021, 0.14 ) }
    dend_54 { pt3dadd( -11.5639, 51.6456, -70.9687, 0.1 ) }
    dend_54 { pt3dadd( -11.5138, 52.0712, -71.6607, 0.1 ) }
    dend_54 { pt3dadd( -11.5007, 52.2328, -71.9155, 0.1 ) }
    dend_54 { pt3dadd( -11.476, 52.7345, -72.6538, 0.1 ) }
    dend_54 { pt3dadd( -11.4489, 53.2549, -73.3829, 0.1 ) }
    dend_54 { pt3dadd( -11.4257, 53.5168, -73.7169, 0.1 ) }
    dend_54 { pt3dadd( -11.3544, 54.0683, -74.4146, 0.14 ) }
    dend_54 { pt3dadd( -11.3069, 54.3192, -74.7544, 0.14 ) }
    dend_54 { pt3dadd( -11.2721, 54.4359, -74.9298, 0.28 ) }
    dend_54 { pt3dadd( -11.1971, 54.5889, -75.1712, 0.56 ) }
    dend_54 { pt3dadd( -10.8814, 55.0139, -75.8942, 0.42 ) }
    dend_54 { pt3dadd( -10.5332, 55.3607, -76.543, 0.28 ) }
    dend_54 { pt3dadd( -10.0902, 55.7123, -77.2382, 0.14 ) }
    dend_54 { pt3dadd( -9.87945, 55.8552, -77.5785, 0.28 ) }
    dend_54 { pt3dadd( -9.66507, 55.9864, -77.9845, 0.14 ) }
    dend_54 { pt3dadd( -9.50996, 56.0403, -78.3765, 0.28 ) }
    dend_54 { pt3dadd( -9.47008, 56.0172, -78.5851, 0.42 ) }
    dend_54 { pt3dadd( -9.47008, 56.0172, -78.5851, 0.56 ) }
    dend_54 { pt3dadd( -9.46964, 55.7366, -79.3516, 0.84 ) }
    dend_54 { pt3dadd( -9.4619, 55.4566, -80.1184, 0.7 ) }
    dend_54 { pt3dadd( -9.42154, 55.1498, -80.927, 0.56 ) }
    dend_54 { pt3dadd( -9.33636, 54.8921, -81.6666, 0.42 ) }
    dend_54 { pt3dadd( -9.29516, 54.8342, -81.8659, 0.56 ) }
    dend_54 { pt3dadd( -9.15699, 54.7307, -82.3031, 0.42 ) }
    dend_54 { pt3dadd( -8.80584, 54.6081, -83.0889, 0.28 ) }
    dend_54 { pt3dadd( -8.59691, 54.5714, -83.5167, 0.14 ) }
    dend_54 { pt3dadd( -8.20604, 54.5605, -84.2931, 0.1 ) }
    dend_54 { pt3dadd( -7.83406, 54.5821, -85.0758, 0.1 ) }
    dend_54 { pt3dadd( -7.75277, 54.5915, -85.2731, 0.1 ) }
    dend_54 { pt3dadd( -7.46914, 54.6448, -86.0932, 0.1 ) }
    dend_54 { pt3dadd( -7.2413, 54.7192, -86.8127, 0.14 ) }
    dend_54 { pt3dadd( -7.16289, 54.7611, -87.1013, 0.28 ) }
    dend_54 { pt3dadd( -6.96589, 54.926, -87.9318, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_54 { pt3dadd( -6.80111, 55.1273, -88.7613, 0.1 ) }
    dend_54 { pt3dadd( -6.67839, 55.3314, -89.5124, 0.1 ) }
    dend_54 { pt3dadd( -6.61559, 55.4629, -89.9671, 0.42 ) }
    dend_54 { pt3dadd( -6.52181, 55.7099, -90.7384, 0.42 ) }
    dend_54 { pt3dadd( -6.44829, 56.0088, -91.58, 0.28 ) }
    dend_54 { pt3dadd( -6.4117, 56.3331, -92.3283, 0.14 ) }
    dend_54 { pt3dadd( -6.40052, 56.6972, -93.0576, 0.28 ) }
    dend_54 { pt3dadd( -6.41453, 57.0734, -93.7475, 0.42 ) }
    dend_54 { pt3dadd( -6.43972, 57.2791, -94.1186, 0.1 ) }
    dend_54 { pt3dadd( -6.48278, 57.4926, -94.4836, 0.1 ) }
    dend_54 { pt3dadd( -6.55014, 57.7035, -94.8403, 0.1 ) }
    dend_54 { pt3dadd( -6.72078, 58.1106, -95.527, 0.14 ) }
    dend_54 { pt3dadd( -6.9408, 58.5494, -96.2445, 0.7 ) }
    dend_54 { pt3dadd( -7.18419, 58.9734, -96.9646, 0.56 ) }
    dend_54 { pt3dadd( -7.42126, 59.3286, -97.626, 0.42 ) }
    dend_54 { pt3dadd( -7.70539, 59.7125, -98.3844, 0.28 ) }
    dend_54 { pt3dadd( -7.99494, 60.0762, -99.119, 0.14 ) }
    dend_54 { pt3dadd( -8.15658, 60.2747, -99.516, 0.1 ) }
    dend_54 { pt3dadd( -8.41095, 60.599, -100.187, 0.1 ) }
    dend_54 { pt3dadd( -8.65386, 60.957, -100.969, 0.1 ) }
    dend_54 { pt3dadd( -8.8317, 61.283, -101.756, 0.1 ) }
    dend_54 { pt3dadd( -8.8317, 61.283, -101.756, 0.14 ) }
    dend_54 { pt3dadd( -8.85353, 61.5259, -102.533, 0.56 ) }
    dend_54 { pt3dadd( -8.81858, 61.7555, -103.315, 0.42 ) }
    dend_54 { pt3dadd( -8.71647, 62.005, -104.17, 0.28 ) }
    dend_54 { pt3dadd( -8.56834, 62.2261, -104.912, 0.14 ) }
    dend_54 { pt3dadd( -8.36273, 62.4734, -105.745, 0.1 ) }
    dend_54 { pt3dadd( -8.13064, 62.7262, -106.573, 0.1 ) }
    dend_54 { pt3dadd( -8.0422, 62.8173, -106.84, 0.1 ) }
    dend_54 { pt3dadd( -7.72732, 63.1289, -107.619, 0.1 ) }
    dend_54 { pt3dadd( -7.54208, 63.3138, -108.012, 0.1 ) }
    dend_54 { pt3dadd( -7.19827, 63.6645, -108.628, 0.14 ) }
    dend_54 { pt3dadd( -7.09582, 63.7681, -108.782, 0.28 ) }
    dend_54 { pt3dadd( -6.85583, 64.01, -109.116, 0.7 ) }
    dend_54 { pt3dadd( -6.60986, 64.2511, -109.448, 0.56 ) }
    dend_54 { pt3dadd( -6.12314, 64.7124, -110.042, 0.42 ) }
    dend_54 { pt3dadd( -5.95305, 64.8572, -110.236, 0.28 ) }
    dend_54 { pt3dadd( -5.65825, 65.0611, -110.551, 0.14 ) }
    dend_54 { pt3dadd( -5.08643, 65.3546, -111.172, 0.1 ) }
    dend_54 { pt3dadd( -4.94856, 65.3912, -111.331, 0.1 ) }
    dend_54 { pt3dadd( -4.81269, 65.4121, -111.491, 0.1 ) }
    dend_54 { pt3dadd( -4.49722, 65.4418, -111.839, 0.1 ) }
    dend_54 { pt3dadd( -3.93082, 65.4972, -112.532, 0.1 ) }
    dend_54 { pt3dadd( -3.7446, 65.5246, -112.768, 0.1 ) }
    dend_54 { pt3dadd( -3.21932, 65.6649, -113.476, 0.1 ) }
    dend_54 { pt3dadd( -2.95985, 65.7749, -113.854, 0.56 ) }
    dend_54 { pt3dadd( -2.70587, 65.9262, -114.229, 0.42 ) }
    dend_54 { pt3dadd( -2.31117, 66.25, -114.862, 0.28 ) }
    dend_54 { pt3dadd( -2.08482, 66.4707, -115.22, 0.14 ) }
    dend_54 { pt3dadd( -1.67124, 66.9156, -115.875, 0.1 ) }
    dend_54 { pt3dadd( -1.53422, 67.0696, -116.096, 0.1 ) }
    dend_54 { pt3dadd( -1.32527, 67.2835, -116.469, 0.1 ) }
    dend_54 { pt3dadd( -1.00345, 67.6125, -117.143, 0.1 ) }
    dend_54 { pt3dadd( -0.925067, 67.6865, -117.325, 0.14 ) }
    dend_54 { pt3dadd( -0.830531, 67.7767, -117.598, 0.28 ) }
    dend_54 { pt3dadd( -0.589467, 68.0008, -118.428, 0.14 ) }
    dend_54 { pt3dadd( -0.37897, 68.21, -119.247, 0.1 ) }
    dend_54 { pt3dadd( -0.196839, 68.417, -120.012, 0.14 ) }
    dend_54 { pt3dadd( 5.95605E-4, 68.6626, -120.824, 0.1 ) }
    dend_54 { pt3dadd( 0.18064, 68.9255, -121.572, 0.14 ) }
    dend_54 { pt3dadd( 0.36718, 69.2196, -122.279, 0.28 ) }
    dend_54 { pt3dadd( 0.488106, 69.4454, -122.682, 0.1 ) }
    dend_54 { pt3dadd( 0.622146, 69.7178, -123.043, 0.1 ) }
    dend_54 { pt3dadd( 0.719691, 69.9046, -123.259, 0.1 ) }
    dend_54 { pt3dadd( 0.879335, 70.1867, -123.602, 0.1 ) }
    dend_54 { pt3dadd( 1.05373, 70.4072, -123.988, 0.1 ) }
    dend_54 { pt3dadd( 1.35677, 70.6353, -124.795, 0.1 ) }
    dend_54 { pt3dadd( 1.42103, 70.6556, -124.998, 0.14 ) }
    dend_54 { pt3dadd( 1.6565, 70.6675, -125.779, 0.56 ) }
    dend_54 { pt3dadd( 1.88222, 70.6499, -126.561, 0.42 ) }
    dend_54 { pt3dadd( 2.11491, 70.6166, -127.427, 0.28 ) }
    dend_54 { pt3dadd( 2.31688, 70.5967, -128.217, 0.14 ) }
    dend_54 { pt3dadd( 2.52977, 70.592, -129.057, 0.28 ) }
    dend_54 { pt3dadd( 2.58191, 70.5989, -129.264, 0.42 ) }
    dend_54 { pt3dadd( 2.8227, 70.6743, -130.121, 0.28 ) }
    dend_54 { pt3dadd( 3.07299, 70.7844, -130.891, 0.14 ) }
    dend_54 { pt3dadd( 3.37581, 70.9385, -131.718, 0.1 ) }
    dend_54 { pt3dadd( 3.68691, 71.0934, -132.425, 0.1 ) }
    dend_54 { pt3dadd( 3.78522, 71.1357, -132.61, 0.42 ) }
    dend_54 { pt3dadd( 3.99944, 71.2098, -132.96, 0.28 ) }
    dend_54 { pt3dadd( 4.25549, 71.2749, -133.296, 0.14 ) }
    dend_54 { pt3dadd( 4.82861, 71.4149, -133.935, 0.1 ) }
    dend_54 { pt3dadd( 5.10365, 71.5018, -134.25, 0.1 ) }
    dend_54 { pt3dadd( 5.35112, 71.6242, -134.573, 0.1 ) }
    dend_54 { pt3dadd( 5.67151, 71.953, -135.311, 0.14 ) }
    dend_54 { pt3dadd( 5.69129, 72.0546, -135.489, 0.28 ) }
    dend_54 { pt3dadd( 5.61789, 72.3186, -135.874, 0.1 ) }
    dend_54 { pt3dadd( 5.35413, 72.8339, -136.555, 0.1 ) }
    dend_54 { pt3dadd( 5.18452, 73.1184, -136.906, 0.1 ) }
    dend_54 { pt3dadd( 4.87466, 73.5838, -137.498, 0.1 ) }
    dend_54 { pt3dadd( 4.71189, 73.8351, -137.803, 0.1 ) }
    dend_54 { pt3dadd( 4.4132, 74.3503, -138.431, 0.1 ) }
    dend_54 { pt3dadd( 4.15439, 74.863, -139.085, 0.1 ) }
    dend_54 { pt3dadd( 4.0466, 75.1092, -139.414, 0.1 ) }
    dend_54 { pt3dadd( 3.87526, 75.5257, -140.024, 0.14 ) }
    dend_54 { pt3dadd( 3.77272, 75.759, -140.428, 0.14 ) }
    dend_54 { pt3dadd( 3.70723, 75.8872, -140.691, 0.1 ) }
    dend_54 { pt3dadd( 3.50677, 76.2342, -141.492, 0.1 ) }
    dend_54 { pt3dadd( 3.32771, 76.4942, -142.213, 0.1 ) }
    dend_54 { pt3dadd( 3.1265, 76.7631, -143.016, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 2.76051, 77.2183, -144.432, 0.1 ) }
    dend_54 { pt3dadd( 2.54515, 77.4501, -145.242, 0.1 ) }
    dend_54 { pt3dadd( 2.34815, 77.6446, -145.98, 0.1 ) }
    dend_54 { pt3dadd( 1.9931, 77.9988, -147.427, 0.1 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.4767, -89.5674, 8.08716, 0.84 ) }
    dend_24 { pt3dadd( 13.579, -90.1927, 8.43698, 0.84 ) }
    dend_24 { pt3dadd( 13.6227, -90.5236, 8.60168, 0.98 ) }
    dend_24 { pt3dadd( 13.6661, -90.8666, 8.75146, 1.12 ) }
    dend_24 { pt3dadd( 13.703, -91.2188, 8.88577, 0.98 ) }
    dend_24 { pt3dadd( 13.778, -91.9696, 9.1368, 0.84 ) }
    dend_24 { pt3dadd( 13.8086, -92.3299, 9.24273, 0.7 ) }
    dend_24 { pt3dadd( 13.8404, -92.7372, 9.32504, 0.7 ) }
    dend_24 { pt3dadd( 13.8569, -93.1115, 9.36496, 0.84 ) }
    dend_24 { pt3dadd( 13.8679, -93.5281, 9.36764, 0.84 ) }
    dend_24 { pt3dadd( 13.8774, -93.9031, 9.33188, 0.84 ) }
    dend_24 { pt3dadd( 13.8869, -94.3187, 9.25185, 0.84 ) }
    dend_24 { pt3dadd( 13.8884, -94.6873, 9.17358, 0.7 ) }
    dend_24 { pt3dadd( 13.8878, -95.4466, 8.95159, 0.56 ) }
    dend_24 { pt3dadd( 13.8805, -95.8089, 8.8486, 0.7 ) }
    dend_24 { pt3dadd( 13.8676, -96.1752, 8.75343, 0.84 ) }
    dend_24 { pt3dadd( 13.8404, -96.5832, 8.66659, 0.7 ) }
    dend_24 { pt3dadd( 13.82, -96.847, 8.62536, 0.84 ) }
    dend_24 { pt3dadd( 13.758, -97.6124, 8.55982, 0.98 ) }
    dend_24 { pt3dadd( 13.6857, -98.3323, 8.57582, 0.98 ) }
    dend_24 { pt3dadd( 13.6254, -98.7443, 8.59418, 0.84 ) }
    dend_24 { pt3dadd( 13.5532, -99.1626, 8.58394, 0.98 ) }
    dend_24 { pt3dadd( 13.5244, -99.3497, 8.58537, 0.84 ) }
    dend_24 { pt3dadd( 13.5026, -99.5376, 8.59367, 0.84 ) }
    dend_24 { pt3dadd( 13.4727, -99.9536, 8.6285, 0.98 ) }
    dend_24 { pt3dadd( 13.4718, -100.379, 8.62247, 1.12 ) }
    dend_24 { pt3dadd( 13.5206, -101.076, 8.62299, 1.26 ) }
    dend_24 { pt3dadd( 13.5848, -101.771, 8.63433, 1.12 ) }
    dend_24 { pt3dadd( 13.6146, -102.14, 8.6454, 0.98 ) }
    dend_24 { pt3dadd( 13.6475, -102.517, 8.66037, 1.12 ) }
    dend_24 { pt3dadd( 13.6877, -102.891, 8.67906, 0.98 ) }
    dend_24 { pt3dadd( 13.7254, -103.267, 8.70233, 1.12 ) }
    dend_24 { pt3dadd( 13.7494, -103.537, 8.72148, 1.12 ) }
    dend_24 { pt3dadd( 13.7639, -103.953, 8.72375, 0.98 ) }
    dend_24 { pt3dadd( 13.757, -104.33, 8.72771, 1.12 ) }
    dend_24 { pt3dadd( 13.7238, -104.745, 8.70444, 0.98 ) }
    dend_24 { pt3dadd( 13.6743, -105.116, 8.66233, 0.84 ) }
    dend_24 { pt3dadd( 13.6123, -105.484, 8.60291, 0.98 ) }
    dend_24 { pt3dadd( 13.5391, -105.888, 8.5184, 0.7 ) }
    dend_24 { pt3dadd( 13.4562, -106.29, 8.40987, 0.84 ) }
    dend_24 { pt3dadd( 13.273, -106.954, 8.18818, 0.98 ) }
    dend_24 { pt3dadd( 13.1477, -107.326, 8.04347, 0.84 ) }
    dend_24 { pt3dadd( 13.1477, -107.326, 8.04347, 0.98 ) }
    dend_24 { pt3dadd( 12.9733, -107.675, 7.89346, 0.84 ) }
    dend_24 { pt3dadd( 12.9007, -107.835, 7.82304, 0.84 ) }
    dend_24 { pt3dadd( 12.7146, -108.195, 7.71939, 0.98 ) }
    dend_24 { pt3dadd( 12.5138, -108.569, 7.74172, 0.84 ) }
    dend_24 { pt3dadd( 12.388, -108.798, 7.75565, 0.7 ) }
    dend_24 { pt3dadd( 12.3118, -108.964, 7.76434, 0.7 ) }
    dend_24 { pt3dadd( 12.1806, -109.366, 7.78031, 0.84 ) }
    dend_24 { pt3dadd( 12.1279, -109.626, 7.78759, 0.7 ) }
    dend_24 { pt3dadd( 12.1143, -110.038, 7.86518, 0.7 ) }
    dend_24 { pt3dadd( 12.1232, -110.441, 7.97429, 0.84 ) }
    dend_24 { pt3dadd( 12.1453, -110.846, 8.09666, 0.7 ) }
    dend_24 { pt3dadd( 12.1732, -111.205, 8.20541, 0.7 ) }
    dend_24 { pt3dadd( 12.2063, -111.566, 8.30994, 0.56 ) }
    dend_24 { pt3dadd( 12.3085, -112.3, 8.51182, 0.7 ) }
    dend_24 { pt3dadd( 12.3085, -112.3, 8.51182, 0.84 ) }
    dend_24 { pt3dadd( 12.3573, -112.47, 8.58029, 0.84 ) }
    dend_24 { pt3dadd( 12.455, -112.814, 8.69841, 0.98 ) }
    dend_24 { pt3dadd( 12.5386, -113.174, 8.77339, 0.84 ) }
    dend_24 { pt3dadd( 12.5787, -113.542, 8.69627, 0.84 ) }
    dend_24 { pt3dadd( 12.5207, -114.066, 8.13367, 0.98 ) }
    dend_24 { pt3dadd( 12.4694, -114.278, 7.82385, 0.98 ) }
    dend_24 { pt3dadd( 12.3433, -114.643, 7.21486, 0.84 ) }
    dend_24 { pt3dadd( 12.208, -114.98, 6.61768, 0.7 ) }
    dend_24 { pt3dadd( 11.9379, -115.625, 5.45373, 0.56 ) }
    dend_24 { pt3dadd( 11.7988, -115.955, 4.85452, 0.56 ) }
    dend_24 { pt3dadd( 11.7485, -116.08, 4.6299, 0.84 ) }
    dend_24 { pt3dadd( 11.6761, -116.309, 4.28185, 0.84 ) }
    dend_24 { pt3dadd( 11.6455, -116.589, 4.03075, 0.84 ) }
    dend_24 { pt3dadd( 11.6597, -116.938, 3.90267, 0.98 ) }
    dend_24 { pt3dadd( 11.6816, -117.124, 3.88749, 1.12 ) }
    dend_24 { pt3dadd( 11.7096, -117.311, 3.88648, 0.98 ) }
    dend_24 { pt3dadd( 11.7764, -117.684, 3.88341, 0.98 ) }
    dend_24 { pt3dadd( 11.8403, -118.055, 3.88061, 0.98 ) }
    dend_24 { pt3dadd( 11.9025, -118.468, 3.87834, 0.84 ) }
    dend_24 { pt3dadd( 11.9463, -118.844, 3.87748, 0.84 ) }
    dend_24 { pt3dadd( 11.9834, -119.219, 3.87725, 0.84 ) }
    dend_24 { pt3dadd( 11.996, -119.408, 3.87771, 0.98 ) }
    dend_24 { pt3dadd( 12.0063, -119.676, 3.87908, 0.84 ) }
    dend_24 { pt3dadd( 12.007, -120.046, 3.88227, 0.84 ) }
    dend_24 { pt3dadd( 11.9871, -120.468, 3.8491, 0.98 ) }
    dend_24 { pt3dadd( 11.9496, -120.83, 3.75066, 1.12 ) }
    dend_24 { pt3dadd( 11.914, -121.077, 3.67271, 0.98 ) }
    dend_24 { pt3dadd( 11.914, -121.077, 3.67271, 1.12 ) }
    dend_24 { pt3dadd( 11.8792, -121.329, 3.58942, 0.84 ) }
    dend_24 { pt3dadd( 11.7816, -122.082, 3.35275, 0.84 ) }
    dend_24 { pt3dadd( 11.7171, -122.819, 3.14652, 0.84 ) }
    dend_24 { pt3dadd( 11.6784, -123.536, 3.05104, 0.56 ) }
    dend_24 { pt3dadd( 11.6784, -123.913, 3.04948, 0.56 ) }
    dend_24 { pt3dadd( 11.6971, -124.327, 3.09099, 0.56 ) }
    dend_24 { pt3dadd( 11.7326, -124.695, 3.16377, 0.56 ) }
    dend_24 { pt3dadd( 11.7767, -125.046, 3.29187, 0.7 ) }
    dend_24 { pt3dadd( 11.8783, -125.771, 3.60263, 0.84 ) }
    dend_24 { pt3dadd( 11.9276, -126.119, 3.7383, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_24 { pt3dadd( 11.9745, -126.46, 3.87845, 1.12 ) }
    dend_24 { pt3dadd( 12.0238, -126.805, 4.02179, 1.12 ) }
    dend_24 { pt3dadd( 12.1218, -127.553, 4.27139, 1.12 ) }
    dend_24 { pt3dadd( 12.1737, -127.923, 4.3244, 0.98 ) }
    dend_24 { pt3dadd( 12.2408, -128.331, 4.27658, 0.84 ) }
    dend_24 { pt3dadd( 12.2733, -128.509, 4.2277, 0.7 ) }
    dend_24 { pt3dadd( 12.3107, -128.674, 4.14277, 0.56 ) }
    dend_24 { pt3dadd( 12.4847, -129.317, 3.75303, 0.7 ) }
    dend_24 { pt3dadd( 12.6841, -129.955, 3.32746, 0.84 ) }
    dend_24 { pt3dadd( 12.7938, -130.268, 3.14934, 0.98 ) }
    dend_24 { pt3dadd( 12.9207, -130.597, 3.0111, 0.84 ) }
    dend_24 { pt3dadd( 13.1735, -131.33, 2.84827, 0.84 ) }
    dend_24 { pt3dadd( 13.3595, -132.0, 2.77889, 0.98 ) }
    dend_24 { pt3dadd( 13.4355, -132.362, 2.76635, 0.98 ) }
    dend_24 { pt3dadd( 13.5473, -133.124, 2.80774, 0.98 ) }
    dend_24 { pt3dadd( 13.5847, -133.499, 2.82375, 0.98 ) }
    dend_24 { pt3dadd( 13.618, -134.027, 2.83832, 0.98 ) }
    dend_24 { pt3dadd( 13.6577, -134.75, 2.84631, 0.84 ) }
    dend_24 { pt3dadd( 13.7234, -135.439, 2.75819, 0.98 ) }
    dend_24 { pt3dadd( 13.8483, -136.116, 2.63749, 0.84 ) }
    dend_24 { pt3dadd( 13.9493, -136.47, 2.55891, 0.84 ) }
    dend_24 { pt3dadd( 14.0961, -136.808, 2.50846, 0.84 ) }
    dend_24 { pt3dadd( 14.2289, -137.044, 2.49345, 1.12 ) }
    dend_24 { pt3dadd( 14.4532, -137.398, 2.5019, 0.98 ) }
    dend_24 { pt3dadd( 14.6851, -137.746, 2.47905, 0.84 ) }
    dend_24 { pt3dadd( 14.8846, -138.052, 2.37976, 0.98 ) }
    dend_24 { pt3dadd( 15.0205, -138.262, 2.30258, 1.12 ) }
    dend_24 { pt3dadd( 15.2135, -138.574, 2.2079, 0.98 ) }
    dend_24 { pt3dadd( 15.4143, -138.932, 2.12601, 0.84 ) }
    dend_24 { pt3dadd( 15.7831, -139.625, 2.01759, 0.84 ) }
    dend_24 { pt3dadd( 16.13, -140.312, 1.96138, 0.98 ) }
    dend_24 { pt3dadd( 16.4342, -140.94, 1.95492, 0.84 ) }
    dend_24 { pt3dadd( 16.7473, -141.644, 1.99434, 0.84 ) }
    dend_24 { pt3dadd( 16.8921, -141.984, 2.0366, 0.84 ) }
    dend_24 { pt3dadd( 17.0363, -142.37, 2.1127, 0.98 ) }
    dend_24 { pt3dadd( 17.1466, -142.718, 2.20471, 1.12 ) }
    dend_24 { pt3dadd( 17.2362, -143.077, 2.28714, 0.98 ) }
    dend_24 { pt3dadd( 17.2996, -143.448, 2.28803, 0.98 ) }
    dend_24 { pt3dadd( 17.3181, -143.634, 2.2608, 0.98 ) }
    dend_24 { pt3dadd( 17.3217, -143.897, 2.20732, 0.98 ) }
    dend_24 { pt3dadd( 17.297, -144.301, 2.10539, 1.12 ) }
    dend_24 { pt3dadd( 17.2626, -144.707, 1.9891, 1.26 ) }
    dend_24 { pt3dadd( 17.2118, -145.374, 1.79041, 1.12 ) }
    dend_24 { pt3dadd( 17.2118, -145.374, 1.79041, 0.98 ) }
    dend_24 { pt3dadd( 17.199, -145.622, 1.70687, 0.56 ) }
    dend_24 { pt3dadd( 17.1904, -145.965, 1.54749, 0.7 ) }
    dend_24 { pt3dadd( 17.1706, -146.297, 1.37015, 0.84 ) }
    dend_24 { pt3dadd( 17.122, -146.611, 1.16443, 0.84 ) }
    dend_24 { pt3dadd( 17.0274, -146.929, 0.909527, 0.98 ) }
    dend_24 { pt3dadd( 16.8058, -147.478, 0.379601, 0.84 ) }
    dend_24 { pt3dadd( 16.5727, -147.974, -0.162502, 0.98 ) }
    dend_24 { pt3dadd( 16.4434, -148.193, -0.440322, 1.12 ) }
    dend_24 { pt3dadd( 16.1502, -148.592, -1.0308, 1.26 ) }
    dend_24 { pt3dadd( 15.8205, -148.951, -1.6583, 1.12 ) }
    dend_24 { pt3dadd( 15.8205, -148.951, -1.6583, 0.98 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 55/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.4767, -89.5674, 8.08716, 0.98 ) }
    dend_19 { pt3dadd( 13.6887, -90.1458, 7.73742, 0.98 ) }
    dend_19 { pt3dadd( 13.8109, -90.4412, 7.52461, 1.12 ) }
    dend_19 { pt3dadd( 13.9463, -90.7308, 7.3154, 1.26 ) }
    dend_19 { pt3dadd( 14.113, -91.0527, 7.09416, 1.12 ) }
    dend_19 { pt3dadd( 14.448, -91.6426, 6.70408, 0.98 ) }
    dend_19 { pt3dadd( 14.8179, -92.2478, 6.32692, 1.12 ) }
    dend_19 { pt3dadd( 14.9493, -92.4446, 6.19384, 0.98 ) }
    dend_19 { pt3dadd( 15.1767, -92.7446, 5.99716, 0.84 ) }
    dend_19 { pt3dadd( 15.427, -93.0414, 5.8251, 0.7 ) }
    dend_19 { pt3dadd( 15.6006, -93.2326, 5.74125, 0.56 ) }
    dend_19 { pt3dadd( 15.8953, -93.5284, 5.6635, 0.42 ) }
    dend_19 { pt3dadd( 16.2031, -93.8309, 5.61468, 0.28 ) }
    dend_19 { pt3dadd( 16.3899, -94.0174, 5.5851, 0.42 ) }
    dend_19 { pt3dadd( 16.6912, -94.3195, 5.53743, 0.28 ) }
    dend_19 { pt3dadd( 16.9946, -94.6127, 5.48918, 0.14 ) }
    dend_19 { pt3dadd( 17.1901, -94.7985, 5.45802, 0.1 ) }
    dend_19 { pt3dadd( 17.5014, -95.0831, 5.40817, 0.1 ) }
    dend_19 { pt3dadd( 17.8138, -95.3664, 5.35809, 0.1 ) }
    dend_19 { pt3dadd( 18.1301, -95.6523, 5.30737, 0.14 ) }
    dend_19 { pt3dadd( 18.4457, -95.9306, 5.2566, 0.1 ) }
    dend_19 { pt3dadd( 18.7684, -96.209, 5.20457, 0.14 ) }
    dend_19 { pt3dadd( 18.9684, -96.3807, 5.17229, 0.28 ) }
    dend_19 { pt3dadd( 19.1164, -96.5006, 5.14824, 0.42 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -28.5515, -78.5994, -33.241, 0.1 ) }
    dend_9 { pt3dadd( -28.4742, -79.4352, -33.3007, 0.1 ) }
    dend_9 { pt3dadd( -28.3796, -80.1762, -33.2484, 0.1 ) }
    dend_9 { pt3dadd( -28.2511, -80.9877, -33.1433, 0.1 ) }
    dend_9 { pt3dadd( -28.1088, -81.6997, -32.9598, 0.1 ) }
    dend_9 { pt3dadd( -27.9304, -82.4867, -32.7216, 0.1 ) }
    dend_9 { pt3dadd( -27.7724, -83.1853, -32.5029, 0.1 ) }
    dend_9 { pt3dadd( -27.446, -84.5007, -32.0341, 0.1 ) }
    dend_9 { pt3dadd( -27.2713, -85.1776, -31.7656, 0.1 ) }
    dend_9 { pt3dadd( -26.8533, -86.5484, -31.1025, 0.1 ) }
    dend_9 { pt3dadd( -26.6435, -87.1713, -30.7711, 0.1 ) }
    dend_9 { pt3dadd( -26.3798, -87.8781, -30.3985, 0.1 ) }
    dend_9 { pt3dadd( -26.258, -88.1982, -30.2515, 0.1 ) }
    dend_9 { pt3dadd( -26.258, -88.1982, -30.2515, 0.1 ) }
    dend_9 { pt3dadd( -25.7339, -89.4523, -29.969, 0.1 ) }
    dend_9 { pt3dadd( -25.4287, -90.1374, -29.9074, 0.1 ) }
    dend_9 { pt3dadd( -25.1172, -90.8038, -29.8808, 0.1 ) }
    dend_9 { pt3dadd( -24.8143, -91.4849, -29.9528, 0.1 ) }
    dend_9 { pt3dadd( -24.541, -92.1694, -30.1048, 0.1 ) }
    dend_9 { pt3dadd( -24.2719, -92.9206, -30.3419, 0.1 ) }
    dend_9 { pt3dadd( -24.0594, -93.5895, -30.6136, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -23.8695, -94.2593, -30.8895, 0.1 ) }
    dend_9 { pt3dadd( -23.5153, -95.6421, -31.4501, 0.1 ) }
    dend_9 { pt3dadd( -23.368, -96.3292, -31.709, 0.1 ) }
    dend_9 { pt3dadd( -23.243, -97.0163, -31.9415, 0.1 ) }
    dend_9 { pt3dadd( -23.1297, -97.7309, -32.1488, 0.1 ) }
    dend_9 { pt3dadd( -23.0337, -98.5334, -32.3912, 0.1 ) }
    dend_9 { pt3dadd( -22.9606, -99.2522, -32.602, 0.1 ) }
    dend_9 { pt3dadd( -22.8779, -100.052, -32.8134, 0.14 ) }
    dend_9 { pt3dadd( -22.8229, -100.773, -33.02, 0.28 ) }
    dend_9 { pt3dadd( -22.7754, -101.489, -33.2361, 0.42 ) }
    dend_9 { pt3dadd( -22.666, -102.986, -33.7043, 0.28 ) }
    dend_9 { pt3dadd( -22.6196, -103.683, -33.9742, 0.14 ) }
    dend_9 { pt3dadd( -22.5922, -104.374, -34.2711, 0.1 ) }
    dend_9 { pt3dadd( -22.5643, -105.141, -34.6214, 0.1 ) }
    dend_9 { pt3dadd( -22.5406, -105.815, -34.9255, 0.1 ) }
    dend_9 { pt3dadd( -22.4994, -106.504, -35.2157, 0.1 ) }
    dend_9 { pt3dadd( -22.3536, -107.802, -35.6853, 0.1 ) }
    dend_9 { pt3dadd( -22.2905, -108.299, -35.8646, 0.1 ) }
    dend_9 { pt3dadd( -22.1811, -108.999, -36.1077, 0.1 ) }
    dend_9 { pt3dadd( -22.0289, -109.682, -36.335, 0.1 ) }
    dend_9 { pt3dadd( -21.8384, -110.381, -36.5396, 0.1 ) }
    dend_9 { pt3dadd( -21.6129, -111.075, -36.7083, 0.1 ) }
    dend_9 { pt3dadd( -21.3523, -111.769, -36.8385, 0.1 ) }
    dend_9 { pt3dadd( -21.0788, -112.453, -36.9736, 0.1 ) }
    dend_9 { pt3dadd( -20.7732, -113.212, -37.1245, 0.1 ) }
    dend_9 { pt3dadd( -20.4981, -113.9, -37.2605, 0.14 ) }
    dend_9 { pt3dadd( -20.2209, -114.591, -37.3413, 0.28 ) }
    dend_9 { pt3dadd( -19.961, -115.283, -37.3698, 0.14 ) }
    dend_9 { pt3dadd( -19.7136, -115.989, -37.3572, 0.1 ) }
    dend_9 { pt3dadd( -19.4816, -116.704, -37.3112, 0.1 ) }
    dend_9 { pt3dadd( -19.2695, -117.418, -37.2344, 0.1 ) }
    dend_9 { pt3dadd( -18.8368, -118.915, -37.0273, 0.1 ) }
    dend_9 { pt3dadd( -18.5951, -119.715, -36.9088, 0.14 ) }
    dend_9 { pt3dadd( -18.3543, -120.422, -36.817, 0.28 ) }
    dend_9 { pt3dadd( -18.2214, -120.769, -36.7888, 0.42 ) }
    dend_9 { pt3dadd( -18.2214, -120.769, -36.7888, 0.56 ) }
    dend_9 { pt3dadd( -18.0643, -121.109, -36.8272, 0.56 ) }
    dend_9 { pt3dadd( -17.709, -121.842, -36.9976, 0.56 ) }
    dend_9 { pt3dadd( -17.3711, -122.572, -37.2439, 0.7 ) }
    dend_9 { pt3dadd( -17.1016, -123.222, -37.4999, 0.56 ) }
    dend_9 { pt3dadd( -16.8561, -123.879, -37.7741, 0.42 ) }
    dend_9 { pt3dadd( -16.6373, -124.526, -38.0478, 0.28 ) }
    dend_9 { pt3dadd( -16.4375, -125.189, -38.334, 0.14 ) }
    dend_9 { pt3dadd( -16.1098, -126.567, -38.9216, 0.1 ) }
    dend_9 { pt3dadd( -15.9772, -127.248, -39.2034, 0.1 ) }
    dend_9 { pt3dadd( -15.8504, -127.937, -39.4767, 0.1 ) }
    dend_9 { pt3dadd( -15.7228, -128.632, -39.7259, 0.14 ) }
    dend_9 { pt3dadd( -15.7228, -128.632, -39.7259, 0.28 ) }
    dend_9 { pt3dadd( -15.6111, -129.128, -39.8379, 0.56 ) }
    dend_9 { pt3dadd( -15.422, -129.845, -39.9396, 0.56 ) }
    dend_9 { pt3dadd( -15.2261, -130.564, -40.0441, 0.42 ) }
    dend_9 { pt3dadd( -15.0234, -131.277, -40.1512, 0.28 ) }
    dend_9 { pt3dadd( -14.8136, -131.978, -40.2608, 0.14 ) }
    dend_9 { pt3dadd( -14.5789, -132.679, -40.3806, 0.28 ) }
    dend_9 { pt3dadd( -14.3149, -133.38, -40.4594, 0.28 ) }
    dend_9 { pt3dadd( -14.0195, -134.067, -40.4388, 0.14 ) }
    dend_9 { pt3dadd( -13.7158, -134.743, -40.3273, 0.1 ) }
    dend_9 { pt3dadd( -13.3974, -135.384, -40.0961, 0.1 ) }
    dend_9 { pt3dadd( -13.1708, -135.817, -39.8853, 0.1 ) }
    dend_9 { pt3dadd( -12.5846, -136.963, -39.2463, 0.84 ) }
    dend_9 { pt3dadd( -11.9905, -138.203, -38.5685, 0.7 ) }
    dend_9 { pt3dadd( -11.6936, -138.916, -38.2283, 0.56 ) }
    dend_9 { pt3dadd( -11.2274, -140.28, -37.7029, 0.42 ) }
    dend_9 { pt3dadd( -11.4883, -140.625, -38.2984, 0.28 ) }
    dend_9 { pt3dadd( -11.8048, -140.965, -39.0, 0.14 ) }
    dend_9 { pt3dadd( -12.3398, -141.47, -40.1759, 0.1 ) }
    dend_9 { pt3dadd( -13.4153, -142.353, -42.5189, 0.1 ) }
    dend_9 { pt3dadd( -14.4738, -143.15, -44.8974, 0.1 ) }
    dend_9 { pt3dadd( -15.0243, -143.55, -46.1644, 0.1 ) }
    dend_9 { pt3dadd( -15.5194, -143.924, -47.3481, 0.14 ) }
    dend_9 { pt3dadd( -15.5194, -143.924, -47.3481, 0.28 ) }
    dend_9 { pt3dadd( -15.6249, -144.082, -47.6727, 0.84 ) }
    dend_9 { pt3dadd( -15.6662, -144.701, -48.2285, 0.7 ) }
    dend_9 { pt3dadd( -15.5511, -145.403, -48.4615, 0.56 ) }
    dend_9 { pt3dadd( -15.4078, -146.13, -48.5932, 0.42 ) }
    dend_9 { pt3dadd( -15.2824, -146.851, -48.6689, 0.28 ) }
    dend_9 { pt3dadd( -15.1806, -147.684, -48.7385, 0.14 ) }
    dend_9 { pt3dadd( -15.1293, -148.511, -48.7874, 0.1 ) }
    dend_9 { pt3dadd( -15.1419, -149.348, -48.8717, 0.1 ) }
    dend_9 { pt3dadd( -15.1603, -149.72, -48.9001, 0.1 ) }
    dend_9 { pt3dadd( -15.2242, -150.544, -48.943, 0.1 ) }
    dend_9 { pt3dadd( -15.2638, -151.384, -48.9168, 0.1 ) }
    dend_9 { pt3dadd( -15.2687, -152.223, -48.8289, 0.1 ) }
    dend_9 { pt3dadd( -15.2106, -153.59, -48.6128, 0.14 ) }
    dend_9 { pt3dadd( -15.081, -154.997, -48.3452, 0.56 ) }
    dend_9 { pt3dadd( -14.9683, -155.817, -48.1802, 0.42 ) }
    dend_9 { pt3dadd( -14.6788, -157.294, -47.8842, 0.28 ) }
    dend_9 { pt3dadd( -14.4677, -158.085, -47.7431, 0.14 ) }
    dend_9 { pt3dadd( -14.2394, -158.791, -47.6424, 0.28 ) }
    dend_9 { pt3dadd( -13.9855, -159.496, -47.5735, 0.42 ) }
    dend_9 { pt3dadd( -13.7248, -160.198, -47.6013, 0.28 ) }
    dend_9 { pt3dadd( -13.4566, -160.883, -47.6754, 0.28 ) }
    dend_9 { pt3dadd( -13.1621, -161.648, -47.8219, 0.28 ) }
    dend_9 { pt3dadd( -12.8801, -162.332, -47.9605, 0.42 ) }
    dend_9 { pt3dadd( -12.6013, -163.013, -48.0978, 0.28 ) }
    dend_9 { pt3dadd( -12.3286, -163.697, -48.2327, 0.42 ) }
    dend_9 { pt3dadd( -12.3286, -163.697, -48.2327, 0.56 ) }
    dend_9 { pt3dadd( -12.1824, -164.042, -48.267, 0.56 ) }
    dend_9 { pt3dadd( -11.8739, -164.729, -48.2841, 0.42 ) }
    dend_9 { pt3dadd( -11.5477, -165.403, -48.2714, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_9 { pt3dadd( -11.2174, -166.06, -48.2445, 0.14 ) }
    dend_9 { pt3dadd( -10.8778, -166.731, -48.2139, 0.1 ) }
    dend_9 { pt3dadd( -10.1508, -168.127, -48.1725, 0.1 ) }
    dend_9 { pt3dadd( -9.79866, -168.792, -48.1635, 0.1 ) }
    dend_9 { pt3dadd( -9.44798, -169.453, -48.1687, 0.1 ) }
    dend_9 { pt3dadd( -9.09067, -170.115, -48.2004, 0.1 ) }
    dend_9 { pt3dadd( -8.75417, -170.775, -48.3074, 0.1 ) }
    dend_9 { pt3dadd( -8.40486, -171.515, -48.4594, 0.1 ) }
    dend_9 { pt3dadd( -8.12388, -172.191, -48.6367, 0.1 ) }
    dend_9 { pt3dadd( -7.86479, -172.861, -48.7945, 0.14 ) }
    dend_9 { pt3dadd( -7.58611, -173.649, -48.9561, 0.28 ) }
    dend_9 { pt3dadd( -7.17026, -174.95, -49.1814, 0.42 ) }
    dend_9 { pt3dadd( -6.77755, -176.32, -49.3757, 0.84 ) }
    dend_9 { pt3dadd( -6.59181, -177.044, -49.4573, 0.7 ) }
    dend_9 { pt3dadd( -6.38885, -177.846, -49.5344, 0.56 ) }
    dend_9 { pt3dadd( -6.21855, -178.573, -49.5893, 0.42 ) }
    dend_9 { pt3dadd( -6.05396, -179.307, -49.6338, 0.28 ) }
    dend_9 { pt3dadd( -5.87713, -180.033, -49.677, 0.14 ) }
    dend_9 { pt3dadd( -5.70207, -180.758, -49.7731, 0.1 ) }
    dend_9 { pt3dadd( -5.54112, -181.475, -49.9192, 0.14 ) }
    dend_9 { pt3dadd( -5.37, -182.258, -50.1281, 0.1 ) }
    dend_9 { pt3dadd( -5.2257, -182.965, -50.3305, 0.1 ) }
    dend_9 { pt3dadd( -5.09315, -183.672, -50.5517, 0.1 ) }
    dend_9 { pt3dadd( -4.97481, -184.37, -50.7962, 0.1 ) }
    dend_9 { pt3dadd( -4.76346, -185.77, -51.3637, 0.14 ) }
    dend_9 { pt3dadd( -4.71713, -186.105, -51.5287, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -28.5515, -78.5994, -33.241, 0.1 ) }
    dend_8 { pt3dadd( -28.5097, -78.7603, -33.5007, 0.1 ) }
    dend_8 { pt3dadd( -28.4186, -79.0322, -34.0431, 0.1 ) }
    dend_8 { pt3dadd( -28.2322, -79.517, -35.1871, 0.1 ) }
    dend_8 { pt3dadd( -28.1381, -79.737, -35.7521, 0.1 ) }
    dend_8 { pt3dadd( -27.8079, -80.5073, -37.8213, 0.1 ) }
    dend_8 { pt3dadd( -27.6413, -80.8994, -38.9162, 0.1 ) }
    dend_8 { pt3dadd( -27.4823, -81.2667, -39.9799, 0.1 ) }
    dend_8 { pt3dadd( -27.1588, -82.01, -42.1275, 0.1 ) }
    dend_8 { pt3dadd( -26.987, -82.4115, -43.2182, 0.14 ) }
    dend_8 { pt3dadd( -26.8193, -82.8311, -44.2619, 0.1 ) }
    dend_8 { pt3dadd( -26.4676, -83.845, -46.2885, 0.14 ) }
    dend_8 { pt3dadd( -26.3724, -84.1686, -46.8046, 0.1 ) }
    dend_8 { pt3dadd( -26.2704, -84.5576, -47.268, 0.1 ) }
    dend_8 { pt3dadd( -26.1447, -85.0274, -47.6297, 0.1 ) }
    dend_8 { pt3dadd( -26.0596, -85.2924, -47.7553, 0.1 ) }
    dend_8 { pt3dadd( -25.825, -85.8497, -47.8761, 0.1 ) }
    dend_8 { pt3dadd( -25.5205, -86.3823, -47.8796, 0.1 ) }
    dend_8 { pt3dadd( -24.7508, -87.4222, -47.8793, 0.14 ) }
    dend_8 { pt3dadd( -23.9661, -88.292, -47.9683, 0.1 ) }
    dend_8 { pt3dadd( -23.5049, -88.7564, -48.1911, 0.1 ) }
    dend_8 { pt3dadd( -23.2313, -89.0143, -48.392, 0.1 ) }
    dend_8 { pt3dadd( -22.7264, -89.4856, -48.9243, 0.1 ) }
    dend_8 { pt3dadd( -22.4942, -89.7037, -49.2159, 0.1 ) }
    dend_8 { pt3dadd( -21.9323, -90.278, -50.0778, 0.1 ) }
    dend_8 { pt3dadd( -20.9329, -91.3733, -51.8273, 0.1 ) }
    dend_8 { pt3dadd( -20.755, -91.5794, -52.1678, 0.1 ) }
    dend_8 { pt3dadd( -20.2219, -92.1702, -53.1828, 0.1 ) }
    dend_8 { pt3dadd( -20.0416, -92.3614, -53.5307, 0.1 ) }
    dend_8 { pt3dadd( -19.4577, -92.9067, -54.5432, 0.1 ) }
    dend_8 { pt3dadd( -19.2304, -93.0832, -54.8777, 0.1 ) }
    dend_8 { pt3dadd( -18.4202, -93.6034, -55.8853, 0.1 ) }
    dend_8 { pt3dadd( -18.044, -93.8139, -56.3219, 0.1 ) }
    dend_8 { pt3dadd( -17.2514, -94.1811, -57.1127, 0.1 ) }
    dend_8 { pt3dadd( -16.8128, -94.3637, -57.5057, 0.1 ) }
    dend_8 { pt3dadd( -15.8118, -94.7258, -58.2328, 0.14 ) }
    dend_8 { pt3dadd( -15.4538, -94.849, -58.4489, 0.28 ) }
    dend_8 { pt3dadd( -14.8773, -95.0511, -58.7489, 0.14 ) }
    dend_8 { pt3dadd( -14.2924, -95.2811, -59.0323, 0.1 ) }
    dend_8 { pt3dadd( -13.92, -95.4285, -59.1783, 0.1 ) }
    dend_8 { pt3dadd( -13.3179, -95.6859, -59.4003, 0.1 ) }
    dend_8 { pt3dadd( -12.7049, -95.9461, -59.5784, 0.1 ) }
    dend_8 { pt3dadd( -11.6747, -96.3847, -59.9342, 0.1 ) }
    dend_8 { pt3dadd( -11.3023, -96.5543, -60.0994, 0.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 70/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -66.7151, 102.452, 3.65529, 0.1 ) }
    dend_77 { pt3dadd( -67.0259, 102.986, 4.33192, 0.1 ) }
    dend_77 { pt3dadd( -67.3567, 103.555, 4.97149, 0.1 ) }
    dend_77 { pt3dadd( -67.5229, 103.848, 5.2547, 0.1 ) }
    dend_77 { pt3dadd( -67.8987, 104.496, 5.78341, 0.1 ) }
    dend_77 { pt3dadd( -68.1152, 104.871, 6.04025, 0.1 ) }
    dend_77 { pt3dadd( -68.1152, 104.871, 6.04025, 0.1 ) }
    dend_77 { pt3dadd( -68.3435, 105.265, 6.24097, 0.1 ) }
    dend_77 { pt3dadd( -68.5544, 105.634, 6.38973, 0.1 ) }
    dend_77 { pt3dadd( -68.7815, 106.05, 6.5425, 0.1 ) }
    dend_77 { pt3dadd( -68.9702, 106.442, 6.65975, 0.1 ) }
    dend_77 { pt3dadd( -69.3078, 107.271, 6.85463, 0.1 ) }
    dend_77 { pt3dadd( -69.375, 107.472, 6.90435, 0.14 ) }
    dend_77 { pt3dadd( -69.4848, 107.893, 7.01085, 0.1 ) }
    dend_77 { pt3dadd( -69.5885, 108.373, 7.12426, 0.1 ) }
    dend_77 { pt3dadd( -69.6645, 108.854, 7.22352, 0.1 ) }
    dend_77 { pt3dadd( -69.762, 109.698, 7.35907, 0.14 ) }
    dend_77 { pt3dadd( -69.8475, 110.606, 7.45198, 0.28 ) }
    dend_77 { pt3dadd( -69.8857, 111.051, 7.50419, 0.14 ) }
    dend_77 { pt3dadd( -69.9419, 111.48, 7.58938, 0.1 ) }
    dend_77 { pt3dadd( -70.036, 111.957, 7.71777, 0.1 ) }
    dend_77 { pt3dadd( -70.1558, 112.424, 7.86888, 0.1 ) }
    dend_77 { pt3dadd( -70.2819, 112.811, 8.04175, 0.14 ) }
    dend_77 { pt3dadd( -70.3819, 113.076, 8.18786, 0.1 ) }
    dend_77 { pt3dadd( -70.7063, 113.806, 8.6866, 0.1 ) }
    dend_77 { pt3dadd( -70.8725, 114.135, 8.9413, 0.1 ) }
    dend_77 { pt3dadd( -71.0525, 114.455, 9.20252, 0.1 ) }
    dend_77 { pt3dadd( -71.4216, 115.106, 9.73062, 0.1 ) }
    dend_77 { pt3dadd( -71.7704, 115.769, 10.2545, 0.1 ) }
    dend_77 { pt3dadd( -71.9393, 116.095, 10.5116, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_77 { pt3dadd( -72.0218, 116.265, 10.6338, 0.1 ) }
    dend_77 { pt3dadd( -72.1909, 116.606, 10.8696, 0.1 ) }
    dend_77 { pt3dadd( -72.405, 116.999, 11.1003, 0.1 ) }
    dend_77 { pt3dadd( -72.5138, 117.179, 11.1745, 0.1 ) }
    dend_77 { pt3dadd( -73.0426, 117.924, 11.4046, 0.28 ) }
    dend_77 { pt3dadd( -73.3751, 118.296, 11.5057, 0.14 ) }
    dend_77 { pt3dadd( -73.6936, 118.585, 11.6007, 0.28 ) }
    dend_77 { pt3dadd( -74.1802, 118.967, 11.7379, 0.14 ) }
    dend_77 { pt3dadd( -74.4328, 119.142, 11.8216, 0.1 ) }
    dend_77 { pt3dadd( -74.6842, 119.315, 11.9113, 0.1 ) }
    dend_77 { pt3dadd( -75.1725, 119.675, 12.0955, 0.1 ) }
    dend_77 { pt3dadd( -75.8771, 120.208, 12.4219, 0.1 ) }
    dend_77 { pt3dadd( -76.0426, 120.332, 12.5102, 0.1 ) }
    dend_77 { pt3dadd( -76.6977, 120.859, 12.9354, 0.1 ) }
    dend_77 { pt3dadd( -76.9954, 121.114, 13.1569, 0.1 ) }
    dend_77 { pt3dadd( -77.2677, 121.369, 13.3915, 0.14 ) }
    dend_77 { pt3dadd( -77.2677, 121.369, 13.3915, 0.28 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 17/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -66.7151, 102.452, 3.65529, 0.1 ) }
    dend_76 { pt3dadd( -67.7599, 102.175, 4.14631, 0.1 ) }
    dend_76 { pt3dadd( -68.3093, 102.013, 4.4258, 0.1 ) }
    dend_76 { pt3dadd( -68.7817, 101.848, 4.69498, 0.1 ) }
    dend_76 { pt3dadd( -69.7376, 101.49, 5.2294, 0.1 ) }
    dend_76 { pt3dadd( -70.7072, 101.117, 5.73743, 0.1 ) }
    dend_76 { pt3dadd( -71.1882, 100.928, 5.97434, 0.1 ) }
    dend_76 { pt3dadd( -72.1712, 100.506, 6.41466, 0.14 ) }
    dend_76 { pt3dadd( -73.1888, 100.049, 6.83461, 0.28 ) }
    dend_76 { pt3dadd( -73.6786, 99.8202, 7.00114, 0.14 ) }
    dend_76 { pt3dadd( -74.1837, 99.5889, 7.12112, 0.1 ) }
    dend_76 { pt3dadd( -74.4408, 99.4809, 7.15885, 0.1 ) }
    dend_76 { pt3dadd( -74.961, 99.2962, 7.24461, 0.14 ) }
    dend_76 { pt3dadd( -75.5001, 99.1382, 7.31003, 0.28 ) }
    dend_76 { pt3dadd( -75.893, 99.0429, 7.35432, 0.42 ) }
    dend_76 { pt3dadd( -77.0453, 98.8006, 7.51316, 0.1 ) }
    dend_76 { pt3dadd( -77.664, 98.6834, 7.59746, 0.1 ) }
    dend_76 { pt3dadd( -78.8196, 98.4901, 7.79509, 0.14 ) }
    dend_76 { pt3dadd( -79.3727, 98.4057, 7.89434, 0.1 ) }
    dend_76 { pt3dadd( -79.9267, 98.333, 7.98157, 0.1 ) }
    dend_76 { pt3dadd( -80.5443, 98.2583, 8.04654, 0.1 ) }
    dend_76 { pt3dadd( -81.1044, 98.1818, 8.06181, 0.1 ) }
    dend_76 { pt3dadd( -82.2841, 98.0082, 8.06835, 0.1 ) }
    dend_76 { pt3dadd( -82.845, 97.9424, 8.03841, 0.14 ) }
    dend_76 { pt3dadd( -83.4685, 97.9021, 8.0094, 0.1 ) }
    dend_76 { pt3dadd( -84.0329, 97.9114, 7.97472, 0.14 ) }
    dend_76 { pt3dadd( -84.3142, 97.9404, 7.94723, 0.1 ) }
    dend_76 { pt3dadd( -84.5887, 97.9981, 7.90234, 0.1 ) }
    dend_76 { pt3dadd( -85.3336, 98.1975, 7.70956, 0.1 ) }
    dend_76 { pt3dadd( -85.7224, 98.3012, 7.64955, 0.1 ) }
    dend_76 { pt3dadd( -86.4893, 98.4994, 7.58458, 0.1 ) }
    dend_76 { pt3dadd( -86.8793, 98.5948, 7.5662, 0.1 ) }
    dend_76 { pt3dadd( -87.4919, 98.7289, 7.55007, 0.1 ) }
    dend_76 { pt3dadd( -88.051, 98.8297, 7.53842, 0.1 ) }
    dend_76 { pt3dadd( -89.2331, 98.9932, 7.52329, 0.1 ) }
    dend_76 { pt3dadd( -89.6242, 99.0308, 7.5135, 0.1 ) }
    dend_76 { pt3dadd( -90.2582, 99.0639, 7.48694, 0.14 ) }
    dend_76 { pt3dadd( -90.2582, 99.0639, 7.48694, 0.28 ) }
    dend_76 { pt3dadd( -90.8794, 99.0529, 7.40071, 0.28 ) }
    dend_76 { pt3dadd( -91.4989, 99.0178, 7.26409, 0.14 ) }
    dend_76 { pt3dadd( -92.0334, 98.9522, 7.09147, 0.1 ) }
    dend_76 { pt3dadd( -92.2987, 98.9019, 7.0029, 0.14 ) }
    dend_76 { pt3dadd( -92.8203, 98.776, 6.8243, 0.1 ) }
    dend_76 { pt3dadd( -93.3378, 98.6173, 6.68609, 0.1 ) }
    dend_76 { pt3dadd( -93.858, 98.4236, 6.57798, 0.1 ) }
    dend_76 { pt3dadd( -94.3776, 98.2098, 6.49282, 0.1 ) }
    dend_76 { pt3dadd( -94.8946, 97.9916, 6.42297, 0.14 ) }
    dend_76 { pt3dadd( -95.4094, 97.7588, 6.39806, 0.28 ) }
    dend_76 { pt3dadd( -96.4868, 97.248, 6.41205, 0.42 ) }
    dend_76 { pt3dadd( -96.9905, 96.9921, 6.43569, 0.28 ) }
    dend_76 { pt3dadd( -97.4789, 96.7222, 6.46343, 0.14 ) }
    dend_76 { pt3dadd( -97.9626, 96.43, 6.48407, 0.1 ) }
    dend_76 { pt3dadd( -98.9612, 95.7853, 6.50544, 0.1 ) }
    dend_76 { pt3dadd( -99.4336, 95.4699, 6.52342, 0.1 ) }
    dend_76 { pt3dadd( -99.9502, 95.1119, 6.52729, 0.1 ) }
    dend_76 { pt3dadd( -100.466, 94.7416, 6.54226, 0.1 ) }
    dend_76 { pt3dadd( -100.974, 94.3593, 6.55613, 0.14 ) }
    dend_76 { pt3dadd( -100.974, 94.3593, 6.55613, 0.28 ) }
    dend_76 { pt3dadd( -101.866, 93.6361, 6.4658, 0.1 ) }
    dend_76 { pt3dadd( -102.352, 93.2186, 6.41441, 0.1 ) }
    dend_76 { pt3dadd( -102.766, 92.8515, 6.35877, 0.14 ) }
    dend_76 { pt3dadd( -103.061, 92.5771, 6.30245, 0.28 ) }
    dend_76 { pt3dadd( -103.509, 92.1532, 6.18348, 0.14 ) }
    dend_76 { pt3dadd( -103.951, 91.7239, 6.02701, 0.1 ) }
    dend_76 { pt3dadd( -104.213, 91.4579, 5.90403, 0.14 ) }
    dend_76 { pt3dadd( -104.644, 91.036, 5.70422, 0.1 ) }
    dend_76 { pt3dadd( -105.082, 90.6317, 5.50514, 0.1 ) }
    dend_76 { pt3dadd( -105.496, 90.2915, 5.32395, 0.1 ) }
    dend_76 { pt3dadd( -105.982, 89.9375, 5.11865, 0.1 ) }
    dend_76 { pt3dadd( -106.483, 89.6173, 4.91441, 0.1 ) }
    dend_76 { pt3dadd( -106.954, 89.3649, 4.73023, 0.1 ) }
    dend_76 { pt3dadd( -107.443, 89.1425, 4.54555, 0.1 ) }
    dend_76 { pt3dadd( -107.942, 88.9483, 4.36267, 0.1 ) }
    dend_76 { pt3dadd( -108.455, 88.7843, 4.1805, 0.1 ) }
    dend_76 { pt3dadd( -108.966, 88.656, 4.00459, 0.1 ) }
    dend_76 { pt3dadd( -109.557, 88.5337, 3.80559, 0.1 ) }
    dend_76 { pt3dadd( -109.821, 88.4887, 3.71834, 0.1 ) }
    dend_76 { pt3dadd( -110.358, 88.423, 3.5449, 0.1 ) }
    dend_76 { pt3dadd( -110.953, 88.3678, 3.35554, 0.1 ) }
    dend_76 { pt3dadd( -111.495, 88.3355, 3.18627, 0.14 ) }
    dend_76 { pt3dadd( -111.495, 88.3355, 3.18627, 0.28 ) }
    dend_76 { pt3dadd( -112.105, 88.3326, 3.00119, 0.1 ) }
    dend_76 { pt3dadd( -112.704, 88.3418, 2.82136, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_76 { pt3dadd( -113.245, 88.3628, 2.66076, 0.1 ) }
    dend_76 { pt3dadd( -113.854, 88.3941, 2.48158, 0.1 ) }
    dend_76 { pt3dadd( -114.455, 88.4381, 2.30688, 0.1 ) }
    dend_76 { pt3dadd( -115.064, 88.4767, 2.12892, 0.1 ) }
    dend_76 { pt3dadd( -115.336, 88.4927, 2.04913, 0.1 ) }
    dend_76 { pt3dadd( -115.937, 88.5352, 1.87416, 0.1 ) }
    dend_76 { pt3dadd( -116.545, 88.5901, 1.69902, 0.1 ) }
    dend_76 { pt3dadd( -117.146, 88.6362, 1.52468, 0.1 ) }
    dend_76 { pt3dadd( -117.691, 88.6745, 1.36615, 0.1 ) }
    dend_76 { pt3dadd( -118.301, 88.72, 1.18883, 0.1 ) }
    dend_76 { pt3dadd( -118.677, 88.7499, 1.07979, 0.1 ) }
    dend_76 { pt3dadd( -119.288, 88.7945, 0.902316, 0.1 ) }
    dend_76 { pt3dadd( -119.832, 88.8329, 0.743792, 0.14 ) }
    dend_76 { pt3dadd( -120.433, 88.8786, 0.569384, 0.28 ) }
    dend_76 { pt3dadd( -120.702, 88.9073, 0.492571, 0.14 ) }
    // Section: dend_72, id: dend_72, parent: dend_64 (entry count 15/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -22.1322, 74.2434, -2.88498, 0.98 ) }
    dend_72 { pt3dadd( -22.256, 75.5306, -2.29523, 0.98 ) }
    dend_72 { pt3dadd( -22.3168, 76.2354, -2.0172, 0.84 ) }
    dend_72 { pt3dadd( -22.3883, 76.9426, -1.77643, 0.7 ) }
    dend_72 { pt3dadd( -22.4347, 77.3999, -1.63583, 0.56 ) }
    dend_72 { pt3dadd( -22.5165, 78.1167, -1.43762, 0.7 ) }
    dend_72 { pt3dadd( -22.5919, 78.7677, -1.26992, 0.56 ) }
    dend_72 { pt3dadd( -22.6724, 79.5123, -1.14013, 0.42 ) }
    dend_72 { pt3dadd( -22.7643, 80.1746, -1.03759, 0.28 ) }
    dend_72 { pt3dadd( -22.9289, 80.8926, -0.906609, 0.14 ) }
    dend_72 { pt3dadd( -23.1293, 81.5257, -0.777565, 0.1 ) }
    dend_72 { pt3dadd( -23.4022, 82.218, -0.622782, 0.14 ) }
    dend_72 { pt3dadd( -23.682, 82.8062, -0.489398, 0.28 ) }
    dend_72 { pt3dadd( -23.8444, 83.0983, -0.427183, 0.14 ) }
    dend_72 { pt3dadd( -24.5706, 84.2983, -0.192481, 0.1 ) }
    dend_72 { pt3dadd( -24.9348, 84.8647, -0.0998257, 0.1 ) }
    dend_72 { pt3dadd( -25.2889, 85.4352, -0.0175003, 0.1 ) }
    dend_72 { pt3dadd( -25.6576, 86.0855, 0.0634375, 0.1 ) }
    dend_72 { pt3dadd( -25.9247, 86.7097, 0.098106, 0.1 ) }
    dend_72 { pt3dadd( -26.1107, 87.3601, 0.0987725, 0.1 ) }
    dend_72 { pt3dadd( -26.2311, 88.0292, 0.0961796, 0.1 ) }
    dend_72 { pt3dadd( -26.3715, 88.762, 0.176476, 0.1 ) }
    dend_72 { pt3dadd( -26.5287, 89.4875, 0.339708, 0.14 ) }
    dend_72 { pt3dadd( -26.829, 90.6854, 0.730782, 0.28 ) }
    dend_72 { pt3dadd( -26.9251, 90.9889, 0.849812, 0.42 ) }
    dend_72 { pt3dadd( -27.4175, 92.1826, 1.34697, 0.1 ) }
    dend_72 { pt3dadd( -28.0064, 93.3431, 1.82224, 0.14 ) }
    dend_72 { pt3dadd( -28.3352, 93.8969, 2.02908, 0.1 ) }
    dend_72 { pt3dadd( -28.6841, 94.433, 2.2104, 0.1 ) }
    dend_72 { pt3dadd( -29.0524, 94.9814, 2.37113, 0.1 ) }
    dend_72 { pt3dadd( -29.4391, 95.6177, 2.47562, 0.1 ) }
    dend_72 { pt3dadd( -29.7448, 96.2247, 2.49133, 0.1 ) }
    dend_72 { pt3dadd( -30.0205, 96.8419, 2.4665, 0.1 ) }
    dend_72 { pt3dadd( -30.152, 97.1553, 2.45927, 0.14 ) }
    dend_72 { pt3dadd( -30.4349, 97.769, 2.49079, 0.7 ) }
    dend_72 { pt3dadd( -30.7332, 98.3754, 2.56448, 0.7 ) }
    dend_72 { pt3dadd( -31.0312, 98.9604, 2.66972, 0.84 ) }
    dend_72 { pt3dadd( -31.3476, 99.5492, 2.79352, 0.98 ) }
    dend_72 { pt3dadd( -31.5786, 99.9672, 2.887, 0.98 ) }
    dend_72 { pt3dadd( -32.2369, 101.199, 3.17368, 0.84 ) }
    dend_72 { pt3dadd( -32.5399, 101.789, 3.31011, 0.84 ) }
    dend_72 { pt3dadd( -32.8332, 102.388, 3.4388, 0.7 ) }
    dend_72 { pt3dadd( -33.1226, 102.979, 3.59645, 0.56 ) }
    dend_72 { pt3dadd( -33.3903, 103.563, 3.76941, 0.56 ) }
    dend_72 { pt3dadd( -33.6661, 104.24, 3.97741, 0.56 ) }
    dend_72 { pt3dadd( -33.8582, 104.859, 4.1711, 0.42 ) }
    dend_72 { pt3dadd( -34.0345, 105.475, 4.397, 0.42 ) }
    dend_72 { pt3dadd( -34.4701, 106.654, 5.0605, 0.56 ) }
    dend_72 { pt3dadd( -34.7319, 107.229, 5.48381, 0.56 ) }
    dend_72 { pt3dadd( -34.9029, 107.559, 5.77132, 0.7 ) }
    dend_72 { pt3dadd( -35.1854, 108.074, 6.25731, 0.7 ) }
    dend_72 { pt3dadd( -35.1854, 108.074, 6.25731, 0.84 ) }
    dend_72 { pt3dadd( -35.9105, 109.893, 7.82381, 1.12 ) }
    dend_72 { pt3dadd( -35.9794, 110.163, 8.0126, 1.12 ) }
    dend_72 { pt3dadd( -36.1025, 110.8, 8.38625, 0.98 ) }
    dend_72 { pt3dadd( -36.2033, 111.497, 8.67689, 0.84 ) }
    dend_72 { pt3dadd( -36.2416, 111.954, 8.78165, 0.84 ) }
    dend_72 { pt3dadd( -36.3371, 113.491, 8.87113, 0.84 ) }
    dend_72 { pt3dadd( -36.3522, 113.826, 8.83629, 0.7 ) }
    dend_72 { pt3dadd( -36.4414, 114.566, 8.73561, 0.56 ) }
    dend_72 { pt3dadd( -36.6128, 115.305, 8.61082, 0.42 ) }
    dend_72 { pt3dadd( -36.8296, 115.924, 8.50276, 0.28 ) }
    dend_72 { pt3dadd( -37.1228, 116.61, 8.41099, 0.14 ) }
    dend_72 { pt3dadd( -37.4241, 117.218, 8.3677, 0.28 ) }
    dend_72 { pt3dadd( -37.4241, 117.218, 8.3677, 0.42 ) }
    dend_72 { pt3dadd( -37.6525, 117.855, 8.37761, 0.1 ) }
    dend_72 { pt3dadd( -37.8509, 118.504, 8.40953, 0.1 ) }
    dend_72 { pt3dadd( -38.0558, 119.237, 8.45759, 0.1 ) }
    dend_72 { pt3dadd( -38.2116, 119.884, 8.51602, 0.1 ) }
    dend_72 { pt3dadd( -38.3676, 120.626, 8.59727, 0.14 ) }
    dend_72 { pt3dadd( -38.5113, 121.278, 8.72445, 0.28 ) }
    dend_72 { pt3dadd( -38.5794, 121.595, 8.81532, 0.42 ) }
    dend_72 { pt3dadd( -38.703, 122.21, 9.04452, 0.56 ) }
    dend_72 { pt3dadd( -38.8304, 122.898, 9.34721, 0.56 ) }
    dend_72 { pt3dadd( -38.8751, 123.201, 9.49566, 0.42 ) }
    dend_72 { pt3dadd( -38.9881, 124.497, 10.066, 0.56 ) }
    dend_72 { pt3dadd( -38.9794, 125.219, 10.3075, 0.42 ) }
    dend_72 { pt3dadd( -38.9687, 125.661, 10.4685, 0.28 ) }
    dend_72 { pt3dadd( -38.9321, 126.372, 10.7356, 0.42 ) }
    dend_72 { pt3dadd( -38.8974, 127.095, 10.9733, 0.56 ) }
    dend_72 { pt3dadd( -38.8622, 128.317, 11.2406, 0.7 ) }
    dend_72 { pt3dadd( -38.8069, 129.522, 11.269, 0.7 ) }
    dend_72 { pt3dadd( -39.0623, 131.936, 11.4786, 0.56 ) }
    dend_72 { pt3dadd( -39.1774, 132.229, 11.6075, 0.7 ) }
    dend_72 { pt3dadd( -39.4351, 132.746, 11.9431, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_72 { pt3dadd( -39.7061, 133.211, 12.3531, 0.7 ) }
    dend_72 { pt3dadd( -39.9628, 133.666, 12.788, 0.56 ) }
    dend_72 { pt3dadd( -40.2469, 134.198, 13.2537, 0.42 ) }
    dend_72 { pt3dadd( -40.7286, 135.31, 13.9945, 0.28 ) }
    dend_72 { pt3dadd( -40.9036, 135.689, 14.2331, 0.14 ) }
    dend_72 { pt3dadd( -41.4524, 136.81, 14.9123, 0.1 ) }
    dend_72 { pt3dadd( -41.657, 137.195, 15.116, 0.14 ) }
    dend_72 { pt3dadd( -42.0176, 137.809, 15.3578, 0.56 ) }
    dend_72 { pt3dadd( -42.3732, 138.375, 15.4775, 0.42 ) }
    dend_72 { pt3dadd( -42.793, 138.996, 15.5439, 0.28 ) }
    dend_72 { pt3dadd( -43.1955, 139.542, 15.5852, 0.14 ) }
    dend_72 { pt3dadd( -43.6386, 140.149, 15.6103, 0.1 ) }
    dend_72 { pt3dadd( -44.0682, 140.762, 15.6791, 0.1 ) }
    dend_72 { pt3dadd( -44.4182, 141.332, 15.801, 0.1 ) }
    dend_72 { pt3dadd( -44.9994, 142.526, 16.1889, 0.14 ) }
    dend_72 { pt3dadd( -44.9994, 142.526, 16.1889, 0.28 ) }
    dend_72 { pt3dadd( -45.087, 143.188, 16.528, 0.84 ) }
    dend_72 { pt3dadd( -45.0627, 143.842, 16.9136, 0.7 ) }
    dend_72 { pt3dadd( -44.9938, 144.245, 17.1572, 0.56 ) }
    dend_72 { pt3dadd( -44.8329, 144.899, 17.5104, 0.42 ) }
    dend_72 { pt3dadd( -44.6574, 145.572, 17.7851, 0.56 ) }
    dend_72 { pt3dadd( -44.6042, 145.889, 17.8957, 0.56 ) }
    dend_72 { pt3dadd( -44.5787, 146.215, 17.9909, 0.7 ) }
    dend_72 { pt3dadd( -44.5867, 146.876, 18.1465, 0.84 ) }
    dend_72 { pt3dadd( -44.6471, 147.539, 18.269, 0.7 ) }
    dend_72 { pt3dadd( -44.773, 148.199, 18.3495, 0.56 ) }
    dend_72 { pt3dadd( -44.9513, 148.923, 18.4123, 0.7 ) }
    dend_72 { pt3dadd( -44.9513, 148.923, 18.4123, 0.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 28/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -22.1322, 74.2434, -2.88498, 0.84 ) }
    dend_65 { pt3dadd( -22.2306, 74.5673, -3.32666, 0.84 ) }
    dend_65 { pt3dadd( -22.4175, 75.182, -4.16462, 0.7 ) }
    dend_65 { pt3dadd( -22.5987, 75.7782, -4.97747, 0.56 ) }
    dend_65 { pt3dadd( -22.7689, 76.3381, -5.74072, 0.42 ) }
    dend_65 { pt3dadd( -22.8674, 76.6621, -6.18241, 0.56 ) }
    dend_65 { pt3dadd( -22.956, 76.9536, -6.57981, 0.42 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -12.3231, 174.086, -66.1719, 0.14 ) }
    dend_60 { pt3dadd( -12.0787, 175.559, -66.0378, 0.14 ) }
    dend_60 { pt3dadd( -11.9648, 176.257, -65.9425, 0.28 ) }
    dend_60 { pt3dadd( -11.8338, 177.042, -65.837, 0.42 ) }
    dend_60 { pt3dadd( -11.7737, 177.39, -65.796, 0.42 ) }
    dend_60 { pt3dadd( -11.5401, 178.862, -65.6395, 0.28 ) }
    dend_60 { pt3dadd( -11.4183, 179.655, -65.5676, 0.14 ) }
    dend_60 { pt3dadd( -11.3034, 180.344, -65.4705, 0.1 ) }
    dend_60 { pt3dadd( -11.1731, 181.133, -65.3846, 0.1 ) }
    dend_60 { pt3dadd( -11.0662, 181.926, -65.3274, 0.1 ) }
    dend_60 { pt3dadd( -10.983, 182.62, -65.2639, 0.1 ) }
    dend_60 { pt3dadd( -10.9192, 183.417, -65.1915, 0.1 ) }
    dend_60 { pt3dadd( -10.8911, 183.771, -65.1411, 0.1 ) }
    dend_60 { pt3dadd( -10.8181, 184.549, -65.0078, 0.1 ) }
    dend_60 { pt3dadd( -10.7442, 185.246, -64.874, 0.1 ) }
    dend_60 { pt3dadd( -10.5615, 186.671, -64.6014, 0.1 ) }
    dend_60 { pt3dadd( -10.466, 187.375, -64.5279, 0.1 ) }
    dend_60 { pt3dadd( -10.3598, 188.158, -64.5164, 0.1 ) }
    dend_60 { pt3dadd( -10.2395, 188.951, -64.5769, 0.1 ) }
    dend_60 { pt3dadd( -10.1581, 189.445, -64.6611, 0.1 ) }
    dend_60 { pt3dadd( -10.0191, 190.197, -64.8583, 0.14 ) }
    dend_60 { pt3dadd( -9.74944, 191.6, -65.3366, 0.14 ) }
    dend_60 { pt3dadd( -9.57592, 192.344, -65.5389, 0.1 ) }
    dend_60 { pt3dadd( -9.45646, 192.828, -65.6348, 0.1 ) }
    dend_60 { pt3dadd( -9.25889, 193.59, -65.7234, 0.1 ) }
    dend_60 { pt3dadd( -9.03082, 194.358, -65.6928, 0.1 ) }
    dend_60 { pt3dadd( -8.78973, 195.113, -65.5527, 0.1 ) }
    dend_60 { pt3dadd( -8.33004, 196.48, -65.1436, 0.1 ) }
    dend_60 { pt3dadd( -8.22991, 196.804, -65.0363, 0.1 ) }
    dend_60 { pt3dadd( -8.03471, 197.54, -64.7846, 0.1 ) }
    dend_60 { pt3dadd( -7.71456, 198.933, -64.3256, 0.1 ) }
    dend_60 { pt3dadd( -7.59215, 199.611, -64.1258, 0.1 ) }
    dend_60 { pt3dadd( -7.50209, 200.377, -63.9467, 0.1 ) }
    dend_60 { pt3dadd( -7.45275, 201.086, -63.8454, 0.1 ) }
    dend_60 { pt3dadd( -7.41297, 201.795, -63.7653, 0.1 ) }
    dend_60 { pt3dadd( -7.37975, 202.59, -63.6618, 0.1 ) }
    dend_60 { pt3dadd( -7.35319, 203.299, -63.5824, 0.1 ) }
    dend_60 { pt3dadd( -7.29041, 203.993, -63.471, 0.1 ) }
    dend_60 { pt3dadd( -7.23321, 204.493, -63.3691, 0.1 ) }
    dend_60 { pt3dadd( -7.17942, 204.836, -63.2954, 0.1 ) }
    dend_60 { pt3dadd( -6.91789, 206.244, -63.0082, 0.1 ) }
    dend_60 { pt3dadd( -6.76535, 207.008, -62.8738, 0.1 ) }
    dend_60 { pt3dadd( -6.60415, 207.788, -62.7628, 0.1 ) }
    dend_60 { pt3dadd( -6.4637, 208.489, -62.6946, 0.1 ) }
    dend_60 { pt3dadd( -6.33568, 209.269, -62.6506, 0.1 ) }
    dend_60 { pt3dadd( -6.23966, 210.064, -62.6987, 0.1 ) }
    dend_60 { pt3dadd( -6.19353, 210.829, -62.8993, 0.1 ) }
    dend_60 { pt3dadd( -6.19149, 211.167, -63.0217, 0.1 ) }
    dend_60 { pt3dadd( -6.21022, 211.904, -63.3434, 0.1 ) }
    dend_60 { pt3dadd( -6.24155, 212.548, -63.6583, 0.1 ) }
    dend_60 { pt3dadd( -6.33815, 213.838, -64.4182, 0.14 ) }
    dend_60 { pt3dadd( -6.43607, 215.101, -65.2323, 0.28 ) }
    dend_60 { pt3dadd( -6.47069, 215.693, -65.6309, 0.14 ) }
    dend_60 { pt3dadd( -6.48318, 216.35, -66.0682, 0.1 ) }
    dend_60 { pt3dadd( -6.4754, 216.654, -66.2589, 0.1 ) }
    dend_60 { pt3dadd( -6.34148, 218.077, -67.0338, 0.1 ) }
    dend_60 { pt3dadd( -6.23058, 218.812, -67.3367, 0.1 ) }
    dend_60 { pt3dadd( -6.13903, 219.287, -67.4908, 0.1 ) }
    dend_60 { pt3dadd( -5.96615, 220.023, -67.7263, 0.1 ) }
    dend_60 { pt3dadd( -5.78128, 220.775, -67.937, 0.14 ) }
    dend_60 { pt3dadd( -5.58703, 221.526, -68.0978, 0.1 ) }
    dend_60 { pt3dadd( -5.50338, 221.873, -68.1346, 0.1 ) }
    dend_60 { pt3dadd( -5.33575, 222.656, -68.2101, 0.1 ) }
    dend_60 { pt3dadd( -5.24341, 223.142, -68.2527, 0.1 ) }
    dend_60 { pt3dadd( -5.11276, 223.829, -68.3129, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_60 { pt3dadd( -4.98471, 224.609, -68.4502, 0.1 ) }
    dend_60 { pt3dadd( -4.87688, 225.295, -68.619, 0.1 ) }
    dend_60 { pt3dadd( -4.75808, 226.044, -68.8382, 0.1 ) }
    dend_60 { pt3dadd( -4.65545, 226.806, -69.0757, 0.1 ) }
    dend_60 { pt3dadd( -4.60625, 227.278, -69.2206, 0.1 ) }
    dend_60 { pt3dadd( -4.47954, 228.712, -69.6662, 0.1 ) }
    dend_60 { pt3dadd( -4.44858, 229.196, -69.8164, 0.1 ) }
    dend_60 { pt3dadd( -4.41685, 229.952, -70.0422, 0.14 ) }
    dend_60 { pt3dadd( -4.40872, 230.638, -70.2411, 0.1 ) }
    dend_60 { pt3dadd( -4.42407, 231.333, -70.4188, 0.1 ) }
    dend_60 { pt3dadd( -4.46117, 232.036, -70.5401, 0.1 ) }
    dend_60 { pt3dadd( -4.46117, 232.036, -70.5401, 0.14 ) }
    dend_60 { pt3dadd( -4.50764, 232.392, -70.5297, 0.56 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 13/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -12.3231, 174.086, -66.1719, 0.1 ) }
    dend_59 { pt3dadd( -12.7293, 173.5, -66.1611, 0.1 ) }
    dend_59 { pt3dadd( -12.9388, 173.188, -66.173, 0.1 ) }
    dend_59 { pt3dadd( -13.0613, 172.982, -66.2148, 0.1 ) }
    dend_59 { pt3dadd( -13.2304, 172.66, -66.3086, 0.1 ) }
    dend_59 { pt3dadd( -13.3838, 172.333, -66.4134, 0.1 ) }
    dend_59 { pt3dadd( -13.4697, 172.119, -66.4815, 0.1 ) }
    dend_59 { pt3dadd( -13.5695, 171.774, -66.591, 0.1 ) }
    dend_59 { pt3dadd( -13.6865, 171.15, -66.7274, 0.1 ) }
    dend_59 { pt3dadd( -13.7166, 170.675, -66.7768, 0.1 ) }
    dend_59 { pt3dadd( -13.7153, 170.506, -66.7601, 0.1 ) }
    dend_59 { pt3dadd( -13.7006, 170.18, -66.6723, 0.1 ) }
    dend_59 { pt3dadd( -13.6722, 169.534, -66.4238, 0.1 ) }
    dend_59 { pt3dadd( -13.6671, 169.226, -66.2842, 0.1 ) }
    dend_59 { pt3dadd( -13.6758, 168.889, -66.1097, 0.14 ) }
    dend_59 { pt3dadd( -13.6985, 168.261, -65.7769, 0.84 ) }
    dend_59 { pt3dadd( -13.7213, 167.92, -65.6086, 0.7 ) }
    dend_59 { pt3dadd( -13.7353, 167.705, -65.516, 0.56 ) }
    dend_59 { pt3dadd( -13.7379, 167.241, -65.3777, 0.42 ) }
    dend_59 { pt3dadd( -13.7379, 167.241, -65.3777, 0.28 ) }
    dend_59 { pt3dadd( -13.6914, 167.082, -65.3419, 0.42 ) }
    dend_59 { pt3dadd( -13.6123, 166.934, -65.3148, 0.56 ) }
    dend_59 { pt3dadd( -13.4127, 166.623, -65.2459, 0.42 ) }
    dend_59 { pt3dadd( -13.2242, 166.348, -65.1806, 0.28 ) }
    dend_59 { pt3dadd( -13.0144, 166.045, -65.108, 0.42 ) }
    dend_59 { pt3dadd( -12.82, 165.769, -65.0658, 0.28 ) }
    dend_59 { pt3dadd( -12.6362, 165.495, -65.0227, 0.14 ) }
    dend_59 { pt3dadd( -12.4523, 165.214, -64.9761, 0.1 ) }
    dend_59 { pt3dadd( -12.271, 164.933, -64.926, 0.1 ) }
    dend_59 { pt3dadd( -12.089, 164.653, -64.8704, 0.1 ) }
    dend_59 { pt3dadd( -11.7574, 164.133, -64.7587, 0.1 ) }
    dend_59 { pt3dadd( -11.4472, 163.618, -64.5814, 0.28 ) }
    dend_59 { pt3dadd( -11.2928, 163.343, -64.4592, 0.14 ) }
    dend_59 { pt3dadd( -11.1498, 163.043, -64.2749, 0.1 ) }
    dend_59 { pt3dadd( -11.0422, 162.781, -64.0899, 0.1 ) }
    dend_59 { pt3dadd( -10.9467, 162.519, -63.8958, 0.1 ) }
    dend_59 { pt3dadd( -10.7689, 161.98, -63.5009, 0.1 ) }
    dend_59 { pt3dadd( -10.6707, 161.707, -63.3354, 0.1 ) }
    dend_59 { pt3dadd( -10.4408, 161.126, -63.0395, 0.1 ) }
    dend_59 { pt3dadd( -10.2818, 160.832, -62.9877, 0.1 ) }
    dend_59 { pt3dadd( -10.072, 160.585, -63.0913, 0.1 ) }
    dend_59 { pt3dadd( -9.85186, 160.382, -63.2478, 0.1 ) }
    dend_59 { pt3dadd( -9.432, 160.055, -63.5794, 0.1 ) }
    dend_59 { pt3dadd( -8.98141, 159.753, -63.9362, 0.1 ) }
    dend_59 { pt3dadd( -8.06567, 159.219, -64.6252, 0.1 ) }
    dend_59 { pt3dadd( -8.06567, 159.219, -64.6252, 0.14 ) }
    dend_59 { pt3dadd( -7.50751, 158.962, -64.8349, 0.42 ) }
    dend_59 { pt3dadd( -7.2972, 158.862, -64.804, 0.28 ) }
    dend_59 { pt3dadd( -7.01058, 158.689, -64.6246, 0.14 ) }
    dend_59 { pt3dadd( -6.54771, 158.348, -64.2069, 0.1 ) }
    dend_59 { pt3dadd( -6.30837, 158.158, -63.981, 0.1 ) }
    dend_59 { pt3dadd( -6.14306, 158.033, -63.8706, 0.1 ) }
    dend_59 { pt3dadd( -5.84299, 157.831, -63.7537, 0.1 ) }
    dend_59 { pt3dadd( -5.52384, 157.64, -63.6721, 0.14 ) }
    dend_59 { pt3dadd( -5.37824, 157.558, -63.6409, 0.1 ) }
    dend_59 { pt3dadd( -4.83647, 157.235, -63.4948, 0.1 ) }
    dend_59 { pt3dadd( -4.5491, 157.04, -63.3372, 0.1 ) }
    dend_59 { pt3dadd( -4.33321, 156.858, -63.1488, 0.1 ) }
    dend_59 { pt3dadd( -4.20784, 156.726, -63.0003, 0.1 ) }
    dend_59 { pt3dadd( -3.91417, 156.351, -62.5921, 0.1 ) }
    dend_59 { pt3dadd( -3.63569, 155.896, -62.1511, 0.1 ) }
    dend_59 { pt3dadd( -3.5205, 155.653, -61.9456, 0.1 ) }
    dend_59 { pt3dadd( -3.41423, 155.385, -61.769, 0.14 ) }
    dend_59 { pt3dadd( -3.29891, 155.093, -61.6381, 0.1 ) }
    dend_59 { pt3dadd( -3.17441, 154.794, -61.5635, 0.1 ) }
    dend_59 { pt3dadd( -3.03629, 154.484, -61.5522, 0.1 ) }
    dend_59 { pt3dadd( -2.90404, 154.175, -61.5832, 0.1 ) }
    dend_59 { pt3dadd( -2.79467, 153.854, -61.6047, 0.1 ) }
    dend_59 { pt3dadd( -2.63214, 153.249, -61.6197, 0.1 ) }
    dend_59 { pt3dadd( -2.58261, 153.019, -61.614, 0.1 ) }
    dend_59 { pt3dadd( -2.51461, 152.646, -61.5849, 0.1 ) }
    dend_59 { pt3dadd( -2.45991, 152.278, -61.5383, 0.1 ) }
    dend_59 { pt3dadd( -2.3645, 151.582, -61.4155, 0.1 ) }
    dend_59 { pt3dadd( -2.31956, 151.256, -61.3409, 0.1 ) }
    dend_59 { pt3dadd( -2.26883, 150.932, -61.2496, 0.1 ) }
    dend_59 { pt3dadd( -2.19908, 150.613, -61.1623, 0.1 ) }
    dend_59 { pt3dadd( -2.10034, 150.263, -61.0751, 0.1 ) }
    dend_59 { pt3dadd( -2.00115, 149.952, -60.9878, 0.1 ) }
    dend_59 { pt3dadd( -1.94642, 149.797, -60.9447, 0.1 ) }
    dend_59 { pt3dadd( -1.84092, 149.492, -60.8435, 0.1 ) }
    dend_59 { pt3dadd( -1.73715, 149.194, -60.7329, 0.1 ) }
    dend_59 { pt3dadd( -1.63069, 148.897, -60.6128, 0.1 ) }
    dend_59 { pt3dadd( -1.41624, 148.29, -60.3592, 0.1 ) }
    dend_59 { pt3dadd( -1.31504, 147.989, -60.2368, 0.1 ) }
    dend_59 { pt3dadd( -1.22124, 147.685, -60.1242, 0.1 ) }
    dend_59 { pt3dadd( -1.13732, 147.37, -60.0259, 0.1 ) }
    dend_59 { pt3dadd( -1.09853, 147.211, -59.9871, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_59 { pt3dadd( -1.04884, 146.984, -59.9513, 0.7 ) }
    dend_59 { pt3dadd( -0.983858, 146.652, -59.9304, 0.56 ) }
    dend_59 { pt3dadd( -0.920209, 146.276, -59.9102, 0.42 ) }
    dend_59 { pt3dadd( -0.856852, 145.908, -59.9201, 0.28 ) }
    dend_59 { pt3dadd( -0.795731, 145.576, -59.9471, 0.14 ) }
    dend_59 { pt3dadd( -0.73339, 145.208, -59.9698, 0.1 ) }
    dend_59 { pt3dadd( -0.674932, 144.832, -59.9852, 0.1 ) }
    dend_59 { pt3dadd( -0.6418, 144.494, -59.9703, 0.1 ) }
    dend_59 { pt3dadd( -0.606004, 143.791, -59.8786, 0.1 ) }
    dend_59 { pt3dadd( -0.607163, 143.624, -59.8454, 0.1 ) }
    dend_59 { pt3dadd( -0.636709, 142.996, -59.6834, 0.1 ) }
    dend_59 { pt3dadd( -0.659611, 142.633, -59.5682, 0.1 ) }
    dend_59 { pt3dadd( -0.725293, 141.974, -59.3135, 0.1 ) }
    dend_59 { pt3dadd( -0.776555, 141.632, -59.1545, 0.1 ) }
    dend_59 { pt3dadd( -0.814415, 141.43, -59.0396, 0.1 ) }
    dend_59 { pt3dadd( -0.866105, 141.134, -58.8843, 0.1 ) }
    dend_59 { pt3dadd( -0.879328, 140.976, -58.8247, 0.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.8205, -148.951, -1.6583, 0.98 ) }
    dend_26 { pt3dadd( 15.7535, -149.324, -1.1202, 0.98 ) }
    dend_26 { pt3dadd( 15.7323, -149.509, -0.888392, 1.12 ) }
    dend_26 { pt3dadd( 15.6854, -150.258, -0.0882764, 1.82 ) }
    dend_26 { pt3dadd( 15.6792, -151.149, 0.731286, 1.68 ) }
    dend_26 { pt3dadd( 15.7308, -152.115, 1.46014, 1.54 ) }
    dend_26 { pt3dadd( 15.8016, -152.641, 1.72718, 1.4 ) }
    dend_26 { pt3dadd( 15.9482, -153.194, 1.83331, 1.26 ) }
    dend_26 { pt3dadd( 16.3224, -154.209, 1.65046, 1.12 ) }
    dend_26 { pt3dadd( 16.7611, -155.101, 1.09796, 1.12 ) }
    dend_26 { pt3dadd( 16.8765, -155.296, 0.909535, 1.12 ) }
    dend_26 { pt3dadd( 17.3479, -155.977, 0.025084, 1.12 ) }
    dend_26 { pt3dadd( 17.7886, -156.535, -0.862297, 1.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.8205, -148.951, -1.6583, 0.98 ) }
    dend_25 { pt3dadd( 15.4227, -149.192, -1.57113, 0.98 ) }
    dend_25 { pt3dadd( 15.2452, -149.3, -1.5202, 1.12 ) }
    dend_25 { pt3dadd( 14.5142, -149.734, -1.32673, 1.4 ) }
    dend_25 { pt3dadd( 14.1228, -149.983, -1.2326, 1.26 ) }
    dend_25 { pt3dadd( 13.3899, -150.476, -1.08875, 1.12 ) }
    dend_25 { pt3dadd( 13.0032, -150.751, -1.02755, 0.98 ) }
    dend_25 { pt3dadd( 12.3588, -151.248, -0.955661, 0.84 ) }
    dend_25 { pt3dadd( 12.0391, -151.521, -0.947452, 0.7 ) }
    dend_25 { pt3dadd( 11.7055, -151.855, -0.958435, 0.56 ) }
    dend_25 { pt3dadd( 11.3811, -152.206, -0.972252, 0.1 ) }
    dend_25 { pt3dadd( 11.1913, -152.432, -0.996679, 0.1 ) }
    dend_25 { pt3dadd( 10.8166, -152.9, -1.05341, 0.1 ) }
    dend_25 { pt3dadd( 10.6426, -153.139, -1.11522, 0.1 ) }
    dend_25 { pt3dadd( 10.1124, -153.913, -1.3521, 0.14 ) }
    dend_25 { pt3dadd( 10.1124, -153.913, -1.3521, 0.28 ) }
    dend_25 { pt3dadd( 9.93191, -154.294, -1.57728, 0.28 ) }
    dend_25 { pt3dadd( 9.85522, -154.53, -1.73944, 0.14 ) }
    dend_25 { pt3dadd( 9.74409, -155.245, -2.27452, 0.1 ) }
    dend_25 { pt3dadd( 9.74165, -155.484, -2.44982, 0.1 ) }
    dend_25 { pt3dadd( 9.82893, -156.219, -2.95799, 0.14 ) }
    dend_25 { pt3dadd( 9.86063, -156.403, -3.05805, 0.56 ) }
    dend_25 { pt3dadd( 9.97372, -156.78, -3.22559, 0.42 ) }
    dend_25 { pt3dadd( 10.1111, -157.155, -3.35062, 0.28 ) }
    dend_25 { pt3dadd( 10.2601, -157.547, -3.43724, 0.14 ) }
    dend_25 { pt3dadd( 10.4059, -157.94, -3.51146, 0.1 ) }
    dend_25 { pt3dadd( 10.5338, -158.343, -3.57242, 0.14 ) }
    dend_25 { pt3dadd( 10.7614, -159.195, -3.72661, 0.28 ) }
    dend_25 { pt3dadd( 10.8527, -159.602, -3.81032, 0.42 ) }
    dend_25 { pt3dadd( 10.9056, -159.894, -3.87388, 0.1 ) }
    dend_25 { pt3dadd( 10.9682, -160.35, -3.97009, 0.1 ) }
    dend_25 { pt3dadd( 11.0206, -160.82, -4.0497, 0.1 ) }
    dend_25 { pt3dadd( 11.0603, -161.287, -4.09836, 0.1 ) }
    dend_25 { pt3dadd( 11.0779, -161.5, -4.09978, 0.1 ) }
    dend_25 { pt3dadd( 11.1104, -161.709, -4.09171, 0.84 ) }
    dend_25 { pt3dadd( 11.2148, -162.122, -4.05067, 0.7 ) }
    dend_25 { pt3dadd( 11.362, -162.567, -3.98497, 0.56 ) }
    dend_25 { pt3dadd( 11.5122, -162.959, -3.91426, 0.42 ) }
    dend_25 { pt3dadd( 11.6885, -163.396, -3.82991, 0.28 ) }
    dend_25 { pt3dadd( 11.8483, -163.783, -3.75296, 0.14 ) }
    dend_25 { pt3dadd( 12.0269, -164.218, -3.66712, 0.28 ) }
    dend_25 { pt3dadd( 12.1036, -164.413, -3.63063, 0.28 ) }
    dend_25 { pt3dadd( 12.2488, -164.809, -3.56334, 0.14 ) }
    dend_25 { pt3dadd( 12.3838, -165.201, -3.50208, 0.1 ) }
    dend_25 { pt3dadd( 12.5274, -165.659, -3.4393, 0.1 ) }
    dend_25 { pt3dadd( 12.6452, -166.057, -3.38913, 0.1 ) }
    dend_25 { pt3dadd( 12.7563, -166.465, -3.34371, 0.14 ) }
    dend_25 { pt3dadd( 12.8801, -166.875, -3.32551, 0.28 ) }
    dend_25 { pt3dadd( 13.011, -167.28, -3.3311, 0.28 ) }
    dend_25 { pt3dadd( 13.1462, -167.685, -3.35609, 0.14 ) }
    dend_25 { pt3dadd( 13.2794, -168.079, -3.39774, 0.1 ) }
    dend_25 { pt3dadd( 13.4159, -168.481, -3.45519, 0.1 ) }
    dend_25 { pt3dadd( 13.6759, -169.299, -3.60272, 0.14 ) }
    dend_25 { pt3dadd( 13.7922, -169.7, -3.68368, 0.28 ) }
    dend_25 { pt3dadd( 13.8962, -170.107, -3.76604, 0.42 ) }
    dend_25 { pt3dadd( 13.8962, -170.107, -3.76604, 0.56 ) }
    dend_25 { pt3dadd( 13.9477, -170.396, -3.80493, 0.56 ) }
    dend_25 { pt3dadd( 14.0137, -170.87, -3.83788, 0.56 ) }
    dend_25 { pt3dadd( 14.0591, -171.295, -3.83433, 0.56 ) }
    dend_25 { pt3dadd( 14.1118, -171.718, -3.82606, 0.7 ) }
    dend_25 { pt3dadd( 14.1807, -172.132, -3.80726, 0.56 ) }
    dend_25 { pt3dadd( 14.2658, -172.548, -3.77845, 0.42 ) }
    dend_25 { pt3dadd( 14.3734, -172.958, -3.73533, 0.56 ) }
    dend_25 { pt3dadd( 14.4966, -173.364, -3.68226, 0.42 ) }
    dend_25 { pt3dadd( 14.6249, -173.766, -3.62577, 0.28 ) }
    dend_25 { pt3dadd( 14.7902, -174.213, -3.58588, 0.14 ) }
    dend_25 { pt3dadd( 14.9528, -174.606, -3.5682, 0.1 ) }
    dend_25 { pt3dadd( 15.1418, -175.04, -3.5723, 0.1 ) }
    dend_25 { pt3dadd( 15.3084, -175.433, -3.60279, 0.1 ) }
    dend_25 { pt3dadd( 15.4634, -175.826, -3.65825, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_25 { pt3dadd( 15.7006, -176.561, -3.80821, 0.1 ) }
    dend_25 { pt3dadd( 15.7006, -176.561, -3.80821, 0.1 ) }
    dend_25 { pt3dadd( 15.7136, -176.862, -3.8401, 0.1 ) }
    dend_25 { pt3dadd( 15.68, -177.34, -3.86255, 0.1 ) }
    dend_25 { pt3dadd( 15.6283, -177.757, -3.85372, 0.1 ) }
    dend_25 { pt3dadd( 15.5522, -178.23, -3.82054, 0.1 ) }
    dend_25 { pt3dadd( 15.3841, -179.107, -3.72832, 0.14 ) }
    dend_25 { pt3dadd( 15.3073, -179.517, -3.6922, 0.1 ) }
    dend_25 { pt3dadd( 15.2219, -179.986, -3.6603, 0.14 ) }
    dend_25 { pt3dadd( 15.1449, -180.405, -3.64747, 0.1 ) }
    dend_25 { pt3dadd( 15.0617, -180.868, -3.65388, 0.14 ) }
    dend_25 { pt3dadd( 15.0193, -181.167, -3.6713, 0.28 ) }
    dend_25 { pt3dadd( 14.9677, -181.633, -3.7304, 0.14 ) }
    dend_25 { pt3dadd( 14.9153, -182.105, -3.79041, 0.1 ) }
    dend_25 { pt3dadd( 14.8747, -182.58, -3.84323, 0.14 ) }
    dend_25 { pt3dadd( 14.8471, -182.792, -3.85242, 0.28 ) }
    dend_25 { pt3dadd( 14.7824, -183.205, -3.84521, 0.42 ) }
    dend_25 { pt3dadd( 14.7273, -183.502, -3.82884, 0.1 ) }
    dend_25 { pt3dadd( 14.6359, -183.917, -3.79778, 0.1 ) }
    dend_25 { pt3dadd( 14.5388, -184.332, -3.76144, 0.1 ) }
    dend_25 { pt3dadd( 14.314, -185.269, -3.67482, 0.14 ) }
    dend_25 { pt3dadd( 14.1893, -185.719, -3.60867, 0.1 ) }
    dend_25 { pt3dadd( 14.107, -186.005, -3.55314, 0.14 ) }
    dend_25 { pt3dadd( 13.9886, -186.458, -3.4481, 0.28 ) }
    dend_25 { pt3dadd( 13.8991, -186.857, -3.34892, 0.42 ) }
    dend_25 { pt3dadd( 13.8727, -187.062, -3.2947, 0.56 ) }
    dend_25 { pt3dadd( 13.8677, -187.827, -3.1048, 0.56 ) }
    dend_25 { pt3dadd( 13.8867, -188.241, -2.99523, 0.42 ) }
    dend_25 { pt3dadd( 13.9167, -188.653, -2.89417, 0.28 ) }
    dend_25 { pt3dadd( 13.9485, -189.072, -2.81129, 0.14 ) }
    dend_25 { pt3dadd( 13.9841, -189.539, -2.74768, 0.1 ) }
    dend_25 { pt3dadd( 14.025, -190.008, -2.71182, 0.1 ) }
    dend_25 { pt3dadd( 14.056, -190.434, -2.68449, 0.1 ) }
    dend_25 { pt3dadd( 14.0687, -190.911, -2.63346, 0.1 ) }
    dend_25 { pt3dadd( 14.0655, -191.377, -2.56506, 0.1 ) }
    dend_25 { pt3dadd( 14.0291, -191.79, -2.46639, 0.1 ) }
    dend_25 { pt3dadd( 14.0008, -191.992, -2.40328, 0.1 ) }
    dend_25 { pt3dadd( 13.8823, -192.725, -2.13674, 0.1 ) }
    dend_25 { pt3dadd( 13.8093, -193.119, -1.99078, 0.14 ) }
    dend_25 { pt3dadd( 13.7323, -193.516, -1.85074, 0.1 ) }
    dend_25 { pt3dadd( 13.5623, -194.357, -1.59892, 0.14 ) }
    dend_25 { pt3dadd( 13.4791, -194.766, -1.50353, 0.1 ) }
    dend_25 { pt3dadd( 13.3906, -195.232, -1.4352, 0.1 ) }
    dend_25 { pt3dadd( 13.3287, -195.699, -1.44258, 0.1 ) }
    dend_25 { pt3dadd( 13.277, -196.172, -1.50135, 0.1 ) }
    dend_25 { pt3dadd( 13.2485, -196.631, -1.60189, 0.1 ) }
    dend_25 { pt3dadd( 13.247, -196.834, -1.66381, 0.1 ) }
    dend_25 { pt3dadd( 13.2433, -197.288, -1.81498, 0.1 ) }
    dend_25 { pt3dadd( 13.2405, -198.134, -2.10453, 0.14 ) }
    dend_25 { pt3dadd( 13.2358, -198.587, -2.25832, 0.1 ) }
    dend_25 { pt3dadd( 13.2158, -198.999, -2.36464, 0.14 ) }
    dend_25 { pt3dadd( 13.1789, -199.462, -2.44183, 0.1 ) }
    dend_25 { pt3dadd( 13.1479, -199.762, -2.4637, 0.1 ) }
    dend_25 { pt3dadd( 13.0878, -200.23, -2.45269, 0.1 ) }
    dend_25 { pt3dadd( 13.0089, -200.7, -2.40308, 0.1 ) }
    dend_25 { pt3dadd( 12.9004, -201.562, -2.34515, 0.14 ) }
    dend_25 { pt3dadd( 12.8525, -201.987, -2.34333, 0.28 ) }
    dend_25 { pt3dadd( 12.814, -202.403, -2.36789, 0.42 ) }
    dend_25 { pt3dadd( 12.7697, -202.874, -2.43773, 0.56 ) }
    dend_25 { pt3dadd( 12.7498, -203.164, -2.5348, 0.42 ) }
    dend_25 { pt3dadd( 12.7228, -203.94, -2.92278, 0.28 ) }
    dend_25 { pt3dadd( 12.7237, -204.348, -3.17371, 0.42 ) }
    dend_25 { pt3dadd( 12.7224, -204.597, -3.33207, 0.28 ) }
    dend_25 { pt3dadd( 12.7255, -205.119, -3.64624, 0.14 ) }
    dend_25 { pt3dadd( 12.782, -205.819, -4.06008, 0.1 ) }
    dend_25 { pt3dadd( 12.8251, -206.19, -4.26452, 0.1 ) }
    dend_25 { pt3dadd( 12.8767, -206.574, -4.44586, 0.1 ) }
    dend_25 { pt3dadd( 12.9655, -207.009, -4.62867, 0.1 ) }
    dend_25 { pt3dadd( 13.0398, -207.404, -4.75104, 0.1 ) }
    dend_25 { pt3dadd( 13.1615, -208.251, -4.91228, 0.1 ) }
    dend_25 { pt3dadd( 13.1776, -208.552, -4.93724, 0.1 ) }
    dend_25 { pt3dadd( 13.1792, -208.978, -4.95713, 0.1 ) }
    dend_25 { pt3dadd( 13.1601, -209.398, -4.96262, 0.1 ) }
    dend_25 { pt3dadd( 13.0946, -210.293, -4.93581, 0.1 ) }
    dend_25 { pt3dadd( 13.0381, -210.768, -4.90816, 0.1 ) }
    dend_25 { pt3dadd( 12.9704, -211.233, -4.86367, 0.1 ) }
    dend_25 { pt3dadd( 12.9161, -211.656, -4.83443, 0.1 ) }
    dend_25 { pt3dadd( 12.8574, -212.132, -4.8247, 0.1 ) }
    dend_25 { pt3dadd( 12.8133, -212.55, -4.84048, 0.1 ) }
    dend_25 { pt3dadd( 12.7916, -212.851, -4.87139, 0.1 ) }
    dend_25 { pt3dadd( 12.7692, -213.269, -4.94467, 0.1 ) }
    dend_25 { pt3dadd( 12.7474, -213.726, -5.05599, 0.1 ) }
    dend_25 { pt3dadd( 12.7294, -214.186, -5.19075, 0.1 ) }
    dend_25 { pt3dadd( 12.7165, -214.634, -5.33568, 0.1 ) }
    dend_25 { pt3dadd( 12.7019, -215.088, -5.49134, 0.1 ) }
    dend_25 { pt3dadd( 12.6752, -215.859, -5.76269, 0.1 ) }
    dend_25 { pt3dadd( 12.6517, -216.303, -5.92223, 0.1 ) }
    dend_25 { pt3dadd( 12.642, -216.699, -6.08434, 0.1 ) }
    dend_25 { pt3dadd( 12.635, -217.137, -6.27883, 0.1 ) }
    dend_25 { pt3dadd( 12.6432, -217.554, -6.49692, 0.14 ) }
    dend_25 { pt3dadd( 12.6456, -217.816, -6.64868, 0.28 ) }
    dend_25 { pt3dadd( 12.6371, -218.223, -6.88822, 0.14 ) }
    dend_25 { pt3dadd( 12.6261, -218.975, -7.37804, 0.14 ) }
    dend_25 { pt3dadd( 12.6196, -219.218, -7.54765, 0.28 ) }
    dend_25 { pt3dadd( 12.5967, -219.952, -8.06517, 0.14 ) }
    dend_25 { pt3dadd( 12.5779, -220.345, -8.32759, 0.1 ) }
    dend_25 { pt3dadd( 12.5726, -220.746, -8.58789, 0.14 ) }
    dend_25 { pt3dadd( 12.5673, -220.927, -8.6993, 0.28 ) }
    dend_25 { pt3dadd( 12.5468, -221.189, -8.83429, 0.1 ) }
    dend_25 { pt3dadd( 12.5156, -221.622, -9.03559, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_25 { pt3dadd( 12.471, -222.073, -9.19286, 0.1 ) }
    dend_25 { pt3dadd( 12.4658, -222.889, -9.48557, 0.14 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 19.1164, -96.5006, 5.14824, 0.84 ) }
    dend_23 { pt3dadd( 18.8317, -97.0388, 4.23167, 0.84 ) }
    dend_23 { pt3dadd( 18.5203, -97.6276, 3.229, 0.98 ) }
    dend_23 { pt3dadd( 18.2455, -98.1471, 2.34435, 0.84 ) }
    dend_23 { pt3dadd( 17.933, -98.738, 1.33807, 0.7 ) }
    dend_23 { pt3dadd( 17.8592, -98.8774, 1.10056, 0.84 ) }
    dend_23 { pt3dadd( 17.8592, -98.8774, 1.10056, 0.98 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.1164, -96.5006, 5.14824, 0.56 ) }
    dend_20 { pt3dadd( 19.1665, -96.6337, 5.0243, 0.56 ) }
    dend_20 { pt3dadd( 19.4113, -97.1984, 4.53013, 0.7 ) }
    dend_20 { pt3dadd( 19.5384, -97.4883, 4.25806, 0.56 ) }
    dend_20 { pt3dadd( 19.6523, -97.7507, 4.01204, 0.42 ) }
    dend_20 { pt3dadd( 19.9016, -98.2996, 3.50251, 0.28 ) }
    dend_20 { pt3dadd( 19.9916, -98.4848, 3.33285, 0.14 ) }
    dend_20 { pt3dadd( 20.1436, -98.7627, 3.05349, 0.1 ) }
    dend_20 { pt3dadd( 20.46, -99.2621, 2.52689, 0.1 ) }
    dend_20 { pt3dadd( 20.5319, -99.3702, 2.39246, 0.14 ) }
    dend_20 { pt3dadd( 20.6383, -99.5175, 2.19711, 0.28 ) }
    dend_20 { pt3dadd( 20.7526, -99.6671, 2.00802, 0.14 ) }
    dend_20 { pt3dadd( 21.0983, -100.12, 1.46265, 0.1 ) }
    dend_20 { pt3dadd( 21.2214, -100.279, 1.28264, 0.14 ) }
    dend_20 { pt3dadd( 21.6019, -100.78, 0.805902, 0.28 ) }
    dend_20 { pt3dadd( 21.7992, -101.065, 0.573253, 0.14 ) }
    dend_20 { pt3dadd( 21.9892, -101.381, 0.369004, 0.1 ) }
    dend_20 { pt3dadd( 22.1616, -101.728, 0.212977, 0.1 ) }
    dend_20 { pt3dadd( 22.2273, -101.896, 0.157503, 0.28 ) }
    dend_20 { pt3dadd( 22.3333, -102.241, 0.0555201, 0.14 ) }
    dend_20 { pt3dadd( 22.419, -102.599, -0.0285544, 0.1 ) }
    dend_20 { pt3dadd( 22.4647, -102.952, -0.146396, 0.14 ) }
    dend_20 { pt3dadd( 22.4865, -103.337, -0.30104, 0.1 ) }
    dend_20 { pt3dadd( 22.4824, -103.953, -0.625195, 0.1 ) }
    dend_20 { pt3dadd( 22.4785, -104.114, -0.722012, 0.1 ) }
    dend_20 { pt3dadd( 22.4699, -104.433, -0.924818, 0.14 ) }
    dend_20 { pt3dadd( 22.4613, -105.08, -1.33808, 0.1 ) }
    dend_20 { pt3dadd( 22.4632, -105.392, -1.53512, 0.1 ) }
    dend_20 { pt3dadd( 22.4623, -106.035, -1.95707, 0.14 ) }
    dend_20 { pt3dadd( 22.4321, -106.329, -2.18809, 0.28 ) }
    dend_20 { pt3dadd( 22.3665, -106.584, -2.45814, 0.42 ) }
    dend_20 { pt3dadd( 22.277, -106.805, -2.74832, 0.56 ) }
    dend_20 { pt3dadd( 22.277, -106.805, -2.74832, 0.56 ) }
    dend_20 { pt3dadd( 22.0741, -107.13, -3.32906, 0.56 ) }
    dend_20 { pt3dadd( 21.6981, -107.734, -4.49522, 0.42 ) }
    dend_20 { pt3dadd( 21.5309, -108.022, -5.10649, 0.56 ) }
    dend_20 { pt3dadd( 21.5309, -108.022, -5.10649, 0.56 ) }
    dend_20 { pt3dadd( 21.5072, -108.107, -5.27317, 0.28 ) }
    dend_20 { pt3dadd( 21.4936, -108.529, -5.94041, 0.42 ) }
    dend_20 { pt3dadd( 21.5696, -108.808, -6.24088, 0.28 ) }
    dend_20 { pt3dadd( 21.854, -109.364, -6.60191, 0.14 ) }
    dend_20 { pt3dadd( 22.0513, -109.697, -6.75796, 0.1 ) }
    dend_20 { pt3dadd( 22.2414, -110.003, -6.86921, 0.14 ) }
    dend_20 { pt3dadd( 22.6363, -110.657, -7.0691, 0.1 ) }
    dend_20 { pt3dadd( 22.82, -110.979, -7.12781, 0.1 ) }
    dend_20 { pt3dadd( 22.9295, -111.213, -7.19553, 0.1 ) }
    dend_20 { pt3dadd( 22.9295, -111.213, -7.19553, 0.1 ) }
    dend_20 { pt3dadd( 22.9754, -111.377, -7.2768, 0.1 ) }
    dend_20 { pt3dadd( 23.1186, -112.031, -7.65227, 0.1 ) }
    dend_20 { pt3dadd( 23.1732, -112.351, -7.84462, 0.14 ) }
    dend_20 { pt3dadd( 23.2944, -113.056, -8.17887, 0.28 ) }
    dend_20 { pt3dadd( 23.3568, -113.407, -8.29585, 0.42 ) }
    dend_20 { pt3dadd( 23.4303, -113.77, -8.36906, 0.56 ) }
    dend_20 { pt3dadd( 23.5139, -114.135, -8.39494, 0.42 ) }
    dend_20 { pt3dadd( 23.6073, -114.493, -8.36676, 0.28 ) }
    dend_20 { pt3dadd( 23.8093, -115.251, -8.25082, 0.42 ) }
    dend_20 { pt3dadd( 23.9061, -115.606, -8.17118, 0.56 ) }
    dend_20 { pt3dadd( 24.0025, -115.962, -8.09854, 0.42 ) }
    dend_20 { pt3dadd( 24.0507, -116.142, -8.06822, 0.42 ) }
    dend_20 { pt3dadd( 24.1442, -116.496, -8.02692, 0.56 ) }
    dend_20 { pt3dadd( 24.2385, -116.861, -8.00891, 0.42 ) }
    dend_20 { pt3dadd( 24.3305, -117.225, -8.01962, 0.28 ) }
    dend_20 { pt3dadd( 24.4384, -117.587, -8.00792, 0.14 ) }
    dend_20 { pt3dadd( 24.558, -117.941, -7.9779, 0.28 ) }
    dend_20 { pt3dadd( 24.6937, -118.289, -7.93565, 0.42 ) }
    dend_20 { pt3dadd( 24.8475, -118.623, -7.88669, 0.42 ) }
    dend_20 { pt3dadd( 25.0181, -118.953, -7.83365, 0.28 ) }
    dend_20 { pt3dadd( 25.3761, -119.572, -7.73844, 0.14 ) }
    dend_20 { pt3dadd( 25.4739, -119.733, -7.73169, 0.84 ) }
    dend_20 { pt3dadd( 25.6897, -120.089, -7.75643, 0.7 ) }
    dend_20 { pt3dadd( 25.9077, -120.445, -7.82026, 0.56 ) }
    dend_20 { pt3dadd( 26.0958, -120.753, -7.9077, 0.42 ) }
    dend_20 { pt3dadd( 26.3011, -121.093, -8.03507, 0.28 ) }
    dend_20 { pt3dadd( 26.6759, -121.733, -8.31892, 0.14 ) }
    dend_20 { pt3dadd( 26.8405, -122.028, -8.46881, 0.1 ) }
    dend_20 { pt3dadd( 26.9533, -122.243, -8.58727, 0.1 ) }
    dend_20 { pt3dadd( 27.1137, -122.578, -8.7763, 0.1 ) }
    dend_20 { pt3dadd( 27.2634, -122.921, -8.96184, 0.1 ) }
    dend_20 { pt3dadd( 27.3774, -123.279, -9.15409, 0.1 ) }
    dend_20 { pt3dadd( 27.5314, -123.955, -9.48346, 0.1 ) }
    dend_20 { pt3dadd( 27.5553, -124.123, -9.56577, 0.14 ) }
    dend_20 { pt3dadd( 27.5673, -124.361, -9.67233, 0.1 ) }
    dend_20 { pt3dadd( 27.5636, -124.71, -9.81134, 0.1 ) }
    dend_20 { pt3dadd( 27.5197, -125.442, -10.1087, 0.14 ) }
    dend_20 { pt3dadd( 27.494, -125.791, -10.2453, 0.1 ) }
    dend_20 { pt3dadd( 27.4792, -126.139, -10.3668, 0.1 ) }
    dend_20 { pt3dadd( 27.4727, -126.538, -10.5063, 0.14 ) }
    dend_20 { pt3dadd( 27.4735, -126.886, -10.6474, 0.1 ) }
    dend_20 { pt3dadd( 27.4996, -127.607, -10.9131, 0.1 ) }
    dend_20 { pt3dadd( 27.5192, -127.78, -10.9661, 0.56 ) }
    dend_20 { pt3dadd( 27.5806, -128.135, -11.0724, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( 27.6729, -128.485, -11.171, 0.42 ) }
    dend_20 { pt3dadd( 27.9104, -129.196, -11.3411, 0.56 ) }
    dend_20 { pt3dadd( 28.1555, -129.839, -11.4455, 0.56 ) }
    dend_20 { pt3dadd( 28.2975, -130.228, -11.4997, 0.42 ) }
    dend_20 { pt3dadd( 28.4223, -130.62, -11.5705, 0.28 ) }
    dend_20 { pt3dadd( 28.5323, -131.019, -11.6528, 0.14 ) }
    dend_20 { pt3dadd( 28.5839, -131.273, -11.7288, 0.1 ) }
    dend_20 { pt3dadd( 28.6329, -131.624, -11.8573, 0.1 ) }
    dend_20 { pt3dadd( 28.6819, -132.339, -12.187, 0.1 ) }
    dend_20 { pt3dadd( 28.6779, -132.676, -12.3569, 0.1 ) }
    dend_20 { pt3dadd( 28.6493, -133.003, -12.5393, 0.1 ) }
    dend_20 { pt3dadd( 28.5666, -133.589, -12.9059, 0.1 ) }
    dend_20 { pt3dadd( 28.5666, -133.589, -12.9059, 0.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.71713, -186.105, -51.5287, 0.84 ) }
    dend_13 { pt3dadd( -4.12491, -186.568, -50.8641, 0.84 ) }
    dend_13 { pt3dadd( -3.91098, -186.735, -50.624, 0.7 ) }
    dend_13 { pt3dadd( -3.26188, -187.243, -49.8956, 0.56 ) }
    dend_13 { pt3dadd( -3.04795, -187.41, -49.6556, 0.42 ) }
    dend_13 { pt3dadd( -2.8292, -187.581, -49.4101, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.71713, -186.105, -51.5287, 0.56 ) }
    dend_10 { pt3dadd( -4.66584, -186.461, -51.4273, 0.56 ) }
    dend_10 { pt3dadd( -4.59942, -186.965, -51.2896, 0.42 ) }
    dend_10 { pt3dadd( -4.52257, -187.525, -51.1531, 0.28 ) }
    dend_10 { pt3dadd( -4.44664, -188.035, -51.0462, 0.14 ) }
    dend_10 { pt3dadd( -4.27183, -189.114, -50.8551, 0.1 ) }
    dend_10 { pt3dadd( -4.18189, -189.627, -50.7796, 0.1 ) }
    dend_10 { pt3dadd( -4.06558, -190.193, -50.7128, 0.1 ) }
    dend_10 { pt3dadd( -3.96041, -190.707, -50.6685, 0.1 ) }
    dend_10 { pt3dadd( -3.85924, -191.225, -50.6464, 0.1 ) }
    dend_10 { pt3dadd( -3.76832, -191.744, -50.6515, 0.14 ) }
    dend_10 { pt3dadd( -3.69224, -192.266, -50.6916, 0.1 ) }
    dend_10 { pt3dadd( -3.62579, -192.777, -50.7287, 0.1 ) }
    dend_10 { pt3dadd( -3.55109, -193.362, -50.7708, 0.1 ) }
    dend_10 { pt3dadd( -3.49404, -193.942, -50.8077, 0.1 ) }
    dend_10 { pt3dadd( -3.47715, -194.205, -50.822, 0.1 ) }
    dend_10 { pt3dadd( -3.44778, -194.797, -50.8518, 0.1 ) }
    dend_10 { pt3dadd( -3.43022, -195.322, -50.9155, 0.14 ) }
    dend_10 { pt3dadd( -3.40975, -195.839, -51.0113, 0.28 ) }
    dend_10 { pt3dadd( -3.37249, -196.403, -51.1473, 0.42 ) }
    dend_10 { pt3dadd( -3.3206, -196.972, -51.3064, 0.28 ) }
    dend_10 { pt3dadd( -3.27416, -197.469, -51.4529, 0.14 ) }
    dend_10 { pt3dadd( -3.16691, -198.491, -51.7717, 0.1 ) }
    dend_10 { pt3dadd( -3.10177, -199.001, -51.8985, 0.1 ) }
    dend_10 { pt3dadd( -3.01667, -199.512, -51.9903, 0.1 ) }
    dend_10 { pt3dadd( -2.91546, -200.022, -52.0724, 0.1 ) }
    dend_10 { pt3dadd( -2.78689, -200.586, -52.1349, 0.1 ) }
    dend_10 { pt3dadd( -2.72444, -200.843, -52.1349, 0.1 ) }
    dend_10 { pt3dadd( -2.43882, -201.862, -51.941, 0.1 ) }
    dend_10 { pt3dadd( -2.29722, -202.353, -51.8053, 0.14 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 49/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -44.9513, 148.923, 18.4123, 0.42 ) }
    dend_74 { pt3dadd( -45.0699, 149.863, 19.4967, 0.42 ) }
    dend_74 { pt3dadd( -45.0919, 150.187, 19.8433, 0.28 ) }
    dend_74 { pt3dadd( -45.0837, 150.868, 20.5336, 0.14 ) }
    dend_74 { pt3dadd( -45.0037, 151.821, 21.4251, 0.1 ) }
    dend_74 { pt3dadd( -44.9115, 152.541, 22.0606, 0.1 ) }
    dend_74 { pt3dadd( -44.8469, 152.908, 22.3713, 0.1 ) }
    dend_74 { pt3dadd( -44.7374, 153.283, 22.6592, 0.14 ) }
    dend_74 { pt3dadd( -44.5448, 153.87, 23.0996, 0.28 ) }
    dend_74 { pt3dadd( -44.2544, 154.622, 23.6305, 0.14 ) }
    dend_74 { pt3dadd( -44.0712, 155.004, 23.8663, 0.1 ) }
    dend_74 { pt3dadd( -43.8032, 155.573, 24.2914, 0.14 ) }
    dend_74 { pt3dadd( -43.6973, 155.81, 24.5155, 0.28 ) }
    dend_74 { pt3dadd( -43.4972, 156.281, 25.0753, 0.56 ) }
    dend_74 { pt3dadd( -43.4972, 156.281, 25.0753, 0.42 ) }
    dend_74 { pt3dadd( -43.4154, 156.468, 25.3467, 0.56 ) }
    dend_74 { pt3dadd( -43.0624, 157.226, 26.3569, 0.56 ) }
    dend_74 { pt3dadd( -42.8332, 157.689, 26.9123, 0.42 ) }
    dend_74 { pt3dadd( -42.6112, 158.138, 27.4934, 0.28 ) }
    dend_74 { pt3dadd( -42.375, 158.564, 28.0746, 0.14 ) }
    dend_74 { pt3dadd( -42.2122, 158.829, 28.4474, 0.1 ) }
    dend_74 { pt3dadd( -41.9421, 159.255, 29.026, 0.1 ) }
    dend_74 { pt3dadd( -41.6445, 159.684, 29.5761, 0.1 ) }
    dend_74 { pt3dadd( -41.121, 160.473, 30.5969, 0.14 ) }
    dend_74 { pt3dadd( -40.9034, 160.846, 31.1254, 0.28 ) }
    dend_74 { pt3dadd( -40.8128, 161.037, 31.3953, 0.42 ) }
    dend_74 { pt3dadd( -40.6241, 161.471, 32.0017, 0.56 ) }
    dend_74 { pt3dadd( -40.4566, 161.908, 32.5992, 0.42 ) }
    dend_74 { pt3dadd( -40.3583, 162.202, 32.9723, 0.56 ) }
    dend_74 { pt3dadd( -40.0697, 163.165, 33.9963, 0.42 ) }
    dend_74 { pt3dadd( -39.9623, 163.676, 34.5441, 0.28 ) }
    dend_74 { pt3dadd( -39.8889, 164.119, 35.0477, 0.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -44.9513, 148.923, 18.4123, 0.98 ) }
    dend_73 { pt3dadd( -45.2944, 149.572, 18.5299, 0.98 ) }
    dend_73 { pt3dadd( -45.455, 149.898, 18.5741, 0.84 ) }
    dend_73 { pt3dadd( -45.5766, 150.24, 18.5796, 0.7 ) }
    dend_73 { pt3dadd( -45.676, 150.585, 18.5642, 0.56 ) }
    dend_73 { pt3dadd( -45.7668, 150.937, 18.5385, 0.42 ) }
    dend_73 { pt3dadd( -45.8544, 151.29, 18.5082, 0.28 ) }
    dend_73 { pt3dadd( -45.9226, 151.643, 18.455, 0.42 ) }
    dend_73 { pt3dadd( -46.0623, 152.386, 18.3406, 0.28 ) }
    dend_73 { pt3dadd( -46.1308, 152.741, 18.2872, 0.14 ) }
    dend_73 { pt3dadd( -46.1951, 153.092, 18.2149, 0.1 ) }
    dend_73 { pt3dadd( -46.2612, 153.441, 18.1303, 0.1 ) }
    dend_73 { pt3dadd( -46.3334, 153.786, 18.0411, 0.1 ) }
    dend_73 { pt3dadd( -46.4181, 154.131, 17.9531, 0.1 ) }
    dend_73 { pt3dadd( -46.5262, 154.466, 17.895, 0.1 ) }
    dend_73 { pt3dadd( -46.7712, 155.188, 17.8041, 0.1 ) }
    dend_73 { pt3dadd( -46.8867, 155.527, 17.7792, 0.1 ) }
    dend_73 { pt3dadd( -47.0253, 155.863, 17.7964, 0.1 ) }
    dend_73 { pt3dadd( -47.1859, 156.185, 17.8601, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_73 { pt3dadd( -47.5351, 156.76, 18.0488, 0.1 ) }
    dend_73 { pt3dadd( -47.7312, 157.041, 18.1708, 0.1 ) }
    dend_73 { pt3dadd( -47.8327, 157.175, 18.2388, 0.1 ) }
    dend_73 { pt3dadd( -48.2721, 157.737, 18.5126, 0.1 ) }
    dend_73 { pt3dadd( -48.4879, 158.004, 18.6395, 0.1 ) }
    dend_73 { pt3dadd( -48.7319, 158.302, 18.7611, 0.1 ) }
    dend_73 { pt3dadd( -48.9525, 158.586, 18.828, 0.1 ) }
    dend_73 { pt3dadd( -49.1766, 158.867, 18.8837, 0.1 ) }
    dend_73 { pt3dadd( -49.1766, 158.867, 18.8837, 0.14 ) }
    // Section: dend_71, id: dend_71, parent: dend_65 (entry count 9/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -22.956, 76.9536, -6.57981, 0.28 ) }
    dend_71 { pt3dadd( -23.6234, 77.4453, -5.70921, 0.28 ) }
    dend_71 { pt3dadd( -24.164, 78.0196, -4.95952, 0.42 ) }
    dend_71 { pt3dadd( -24.164, 78.0196, -4.95952, 0.56 ) }
    dend_71 { pt3dadd( -24.6798, 78.8578, -4.28028, 0.28 ) }
    dend_71 { pt3dadd( -24.936, 79.3827, -3.97404, 0.28 ) }
    dend_71 { pt3dadd( -25.1642, 79.9456, -3.73922, 0.14 ) }
    dend_71 { pt3dadd( -25.2822, 80.5921, -3.684, 0.1 ) }
    dend_71 { pt3dadd( -25.3317, 81.1749, -3.73459, 0.1 ) }
    dend_71 { pt3dadd( -25.3576, 81.7552, -3.83734, 0.1 ) }
    dend_71 { pt3dadd( -25.3299, 82.8928, -4.20488, 0.1 ) }
    dend_71 { pt3dadd( -25.3043, 83.4348, -4.4288, 0.1 ) }
    dend_71 { pt3dadd( -25.2721, 84.5698, -4.92163, 0.1 ) }
    dend_71 { pt3dadd( -25.2654, 85.1122, -5.14595, 0.1 ) }
    dend_71 { pt3dadd( -25.2658, 85.3919, -5.23977, 0.14 ) }
    dend_71 { pt3dadd( -25.3094, 86.5641, -5.47234, 0.1 ) }
    dend_71 { pt3dadd( -25.3094, 86.5641, -5.47234, 0.1 ) }
    dend_71 { pt3dadd( -25.4509, 87.7508, -5.3433, 0.1 ) }
    dend_71 { pt3dadd( -25.5614, 88.3858, -5.19478, 0.1 ) }
    dend_71 { pt3dadd( -25.6707, 89.0033, -5.02665, 0.1 ) }
    dend_71 { pt3dadd( -25.7826, 89.6275, -4.83837, 0.1 ) }
    dend_71 { pt3dadd( -25.9033, 90.2348, -4.64331, 0.14 ) }
    dend_71 { pt3dadd( -25.9539, 90.5075, -4.57796, 0.28 ) }
    dend_71 { pt3dadd( -26.0399, 91.0745, -4.49207, 0.28 ) }
    dend_71 { pt3dadd( -26.1502, 91.6466, -4.42019, 0.14 ) }
    dend_71 { pt3dadd( -26.2981, 92.2861, -4.35532, 0.1 ) }
    dend_71 { pt3dadd( -26.4114, 92.8619, -4.34152, 0.1 ) }
    dend_71 { pt3dadd( -26.5106, 93.4329, -4.35784, 0.1 ) }
    dend_71 { pt3dadd( -26.6142, 94.0851, -4.39586, 0.1 ) }
    dend_71 { pt3dadd( -26.6991, 94.6668, -4.44602, 0.14 ) }
    dend_71 { pt3dadd( -26.7846, 95.244, -4.50968, 0.28 ) }
    dend_71 { pt3dadd( -27.0109, 96.4538, -4.59015, 0.42 ) }
    dend_71 { pt3dadd( -27.1385, 97.0297, -4.5978, 0.28 ) }
    dend_71 { pt3dadd( -27.29, 97.5964, -4.5766, 0.14 ) }
    dend_71 { pt3dadd( -27.4719, 98.1556, -4.52922, 0.1 ) }
    dend_71 { pt3dadd( -27.663, 98.6939, -4.44821, 0.14 ) }
    dend_71 { pt3dadd( -28.0679, 99.8514, -4.27986, 0.1 ) }
    dend_71 { pt3dadd( -28.2499, 100.406, -4.22188, 0.1 ) }
    dend_71 { pt3dadd( -28.3902, 100.979, -4.2172, 0.1 ) }
    dend_71 { pt3dadd( -28.4802, 101.556, -4.28156, 0.1 ) }
    dend_71 { pt3dadd( -28.5292, 102.186, -4.43034, 0.1 ) }
    dend_71 { pt3dadd( -28.5566, 103.321, -4.82127, 0.1 ) }
    dend_71 { pt3dadd( -28.5554, 104.283, -5.23355, 0.14 ) }
    dend_71 { pt3dadd( -28.5554, 104.283, -5.23355, 0.28 ) }
    dend_71 { pt3dadd( -28.6472, 104.846, -5.3722, 0.7 ) }
    dend_71 { pt3dadd( -28.8197, 105.408, -5.42314, 0.56 ) }
    dend_71 { pt3dadd( -29.0554, 105.934, -5.39084, 0.42 ) }
    dend_71 { pt3dadd( -29.3311, 106.447, -5.29725, 0.28 ) }
    dend_71 { pt3dadd( -29.9108, 107.474, -5.07128, 0.14 ) }
    dend_71 { pt3dadd( -30.1917, 107.982, -4.96792, 0.28 ) }
    dend_71 { pt3dadd( -30.4668, 108.492, -4.87352, 0.14 ) }
    dend_71 { pt3dadd( -30.7338, 109.009, -4.79363, 0.1 ) }
    dend_71 { pt3dadd( -30.986, 109.528, -4.73548, 0.1 ) }
    dend_71 { pt3dadd( -31.2252, 110.063, -4.7044, 0.1 ) }
    dend_71 { pt3dadd( -31.4317, 110.614, -4.7478, 0.1 ) }
    dend_71 { pt3dadd( -31.6256, 111.163, -4.82389, 0.1 ) }
    dend_71 { pt3dadd( -31.8113, 111.713, -4.92555, 0.1 ) }
    dend_71 { pt3dadd( -31.9885, 112.26, -5.04568, 0.1 ) }
    dend_71 { pt3dadd( -32.1559, 112.798, -5.18309, 0.14 ) }
    dend_71 { pt3dadd( -32.4996, 113.938, -5.5054, 0.28 ) }
    dend_71 { pt3dadd( -32.624, 114.481, -5.69117, 0.42 ) }
    dend_71 { pt3dadd( -32.7172, 115.026, -5.8964, 0.28 ) }
    dend_71 { pt3dadd( -32.7532, 115.297, -5.99928, 0.42 ) }
    dend_71 { pt3dadd( -32.7884, 115.569, -6.10155, 0.56 ) }
    dend_71 { pt3dadd( -32.9085, 116.121, -6.2579, 0.84 ) }
    dend_71 { pt3dadd( -33.3323, 117.271, -6.43567, 0.7 ) }
    dend_71 { pt3dadd( -33.5749, 117.79, -6.50261, 0.56 ) }
    dend_71 { pt3dadd( -33.8954, 118.285, -6.49862, 0.56 ) }
    dend_71 { pt3dadd( -34.1464, 118.604, -6.45626, 0.42 ) }
    dend_71 { pt3dadd( -34.9344, 119.537, -6.23125, 0.28 ) }
    dend_71 { pt3dadd( -35.3627, 120.001, -6.06621, 0.14 ) }
    dend_71 { pt3dadd( -35.3627, 120.001, -6.06621, 0.14 ) }
    dend_71 { pt3dadd( -36.0749, 120.908, -5.74931, 0.1 ) }
    dend_71 { pt3dadd( -36.3668, 121.406, -5.63091, 0.1 ) }
    dend_71 { pt3dadd( -36.6005, 122.02, -5.54793, 0.1 ) }
    dend_71 { pt3dadd( -36.7344, 122.594, -5.52817, 0.1 ) }
    dend_71 { pt3dadd( -36.8269, 123.163, -5.52335, 0.1 ) }
    dend_71 { pt3dadd( -36.9571, 124.394, -5.54618, 0.1 ) }
    dend_71 { pt3dadd( -36.9772, 124.979, -5.58563, 0.1 ) }
    dend_71 { pt3dadd( -36.9945, 125.627, -5.62981, 0.14 ) }
    dend_71 { pt3dadd( -37.0226, 126.212, -5.66812, 0.14 ) }
    dend_71 { pt3dadd( -37.088, 126.867, -5.70008, 0.1 ) }
    dend_71 { pt3dadd( -37.1462, 127.156, -5.70527, 0.14 ) }
    dend_71 { pt3dadd( -37.2267, 127.44, -5.72524, 0.28 ) }
    dend_71 { pt3dadd( -37.3889, 128.063, -5.82728, 0.84 ) }
    dend_71 { pt3dadd( -37.5209, 128.626, -5.94455, 0.7 ) }
    dend_71 { pt3dadd( -37.6427, 129.255, -6.07039, 0.56 ) }
    dend_71 { pt3dadd( -37.7414, 129.815, -6.18134, 0.42 ) }
    dend_71 { pt3dadd( -37.9335, 130.982, -6.3861, 0.28 ) }
    dend_71 { pt3dadd( -38.028, 131.631, -6.47751, 0.14 ) }
    dend_71 { pt3dadd( -38.1035, 132.272, -6.54351, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_71 { pt3dadd( -38.1726, 132.927, -6.57959, 0.1 ) }
    dend_71 { pt3dadd( -38.1726, 132.927, -6.57959, 0.14 ) }
    dend_71 { pt3dadd( -38.2389, 133.509, -6.53277, 0.1 ) }
    dend_71 { pt3dadd( -38.2938, 134.09, -6.47834, 0.1 ) }
    dend_71 { pt3dadd( -38.3313, 134.669, -6.45751, 0.1 ) }
    dend_71 { pt3dadd( -38.3746, 135.329, -6.47019, 0.1 ) }
    dend_71 { pt3dadd( -38.423, 135.985, -6.50771, 0.1 ) }
    dend_71 { pt3dadd( -38.5113, 136.63, -6.52854, 0.1 ) }
    dend_71 { pt3dadd( -38.7323, 137.736, -6.54154, 0.14 ) }
    dend_71 { pt3dadd( -38.8906, 138.304, -6.53735, 0.28 ) }
    dend_71 { pt3dadd( -39.1134, 138.917, -6.5233, 0.42 ) }
    dend_71 { pt3dadd( -39.3645, 139.447, -6.5033, 0.28 ) }
    dend_71 { pt3dadd( -39.9789, 140.519, -6.43342, 0.14 ) }
    dend_71 { pt3dadd( -40.2909, 141.002, -6.38292, 0.1 ) }
    dend_71 { pt3dadd( -40.5952, 141.505, -6.3358, 0.1 ) }
    dend_71 { pt3dadd( -40.5952, 141.505, -6.3358, 0.1 ) }
    dend_71 { pt3dadd( -40.7871, 142.059, -6.36229, 0.1 ) }
    dend_71 { pt3dadd( -40.933, 142.627, -6.42932, 0.1 ) }
    dend_71 { pt3dadd( -41.0395, 143.196, -6.52718, 0.1 ) }
    dend_71 { pt3dadd( -41.2658, 144.391, -6.73139, 0.1 ) }
    dend_71 { pt3dadd( -41.3757, 144.963, -6.82778, 0.1 ) }
    dend_71 { pt3dadd( -41.494, 145.531, -6.91661, 0.14 ) }
    dend_71 { pt3dadd( -41.6253, 146.1, -6.99616, 0.28 ) }
    dend_71 { pt3dadd( -41.741, 146.668, -7.08724, 0.14 ) }
    dend_71 { pt3dadd( -41.8545, 147.23, -7.17779, 0.1 ) }
    dend_71 { pt3dadd( -41.8545, 147.23, -7.17779, 0.14 ) }
    dend_71 { pt3dadd( -41.9483, 147.804, -7.25738, 0.84 ) }
    dend_71 { pt3dadd( -42.0539, 148.382, -7.30345, 0.7 ) }
    dend_71 { pt3dadd( -42.3091, 149.594, -7.33131, 0.56 ) }
    dend_71 { pt3dadd( -42.4322, 150.168, -7.31401, 0.42 ) }
    dend_71 { pt3dadd( -42.6045, 150.787, -7.21927, 0.28 ) }
    dend_71 { pt3dadd( -42.7959, 151.322, -7.07415, 0.14 ) }
    dend_71 { pt3dadd( -43.2601, 152.353, -6.66393, 0.1 ) }
    dend_71 { pt3dadd( -43.5184, 152.824, -6.42734, 0.14 ) }
    dend_71 { pt3dadd( -43.7199, 153.137, -6.24837, 0.28 ) }
    dend_71 { pt3dadd( -44.3171, 154.052, -5.75095, 0.56 ) }
    dend_71 { pt3dadd( -44.6203, 154.498, -5.51095, 0.7 ) }
    dend_71 { pt3dadd( -44.9165, 154.952, -5.28639, 0.56 ) }
    dend_71 { pt3dadd( -45.1932, 155.441, -5.11637, 0.42 ) }
    dend_71 { pt3dadd( -45.4752, 155.937, -4.9659, 0.28 ) }
    dend_71 { pt3dadd( -45.6106, 156.182, -4.91614, 0.14 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 41/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -22.956, 76.9536, -6.57981, 0.1 ) }
    dend_66 { pt3dadd( -23.3996, 76.7027, -6.80096, 0.1 ) }
    dend_66 { pt3dadd( -23.841, 76.453, -7.02102, 0.14 ) }
    dend_66 { pt3dadd( -24.0627, 76.3275, -7.13159, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 45/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 17.7886, -156.535, -0.862297, 1.12 ) }
    dend_28 { pt3dadd( 17.4372, -157.237, -0.44284, 1.12 ) }
    dend_28 { pt3dadd( 17.3185, -157.487, -0.323215, 0.98 ) }
    dend_28 { pt3dadd( 17.246, -157.68, -0.268844, 0.84 ) }
    dend_28 { pt3dadd( 17.0784, -158.477, -0.238101, 1.12 ) }
    dend_28 { pt3dadd( 17.017, -158.942, -0.241718, 0.98 ) }
    dend_28 { pt3dadd( 16.9669, -159.415, -0.209029, 0.84 ) }
    dend_28 { pt3dadd( 16.9669, -159.713, -0.202853, 0.84 ) }
    dend_28 { pt3dadd( 17.0421, -160.576, -0.148668, 0.7 ) }
    dend_28 { pt3dadd( 17.1806, -161.454, -0.0780711, 0.84 ) }
    dend_28 { pt3dadd( 17.3501, -162.219, -0.0200462, 0.84 ) }
    dend_28 { pt3dadd( 17.5504, -163.051, 0.115885, 0.84 ) }
    dend_28 { pt3dadd( 17.6468, -163.455, 0.21202, 0.7 ) }
    dend_28 { pt3dadd( 17.7431, -163.898, 0.340733, 0.56 ) }
    dend_28 { pt3dadd( 17.7728, -164.099, 0.405641, 0.7 ) }
    dend_28 { pt3dadd( 17.8057, -164.382, 0.479138, 0.56 ) }
    dend_28 { pt3dadd( 17.8496, -164.802, 0.514253, 0.7 ) }
    dend_28 { pt3dadd( 17.8743, -165.225, 0.5076, 0.84 ) }
    dend_28 { pt3dadd( 17.8858, -165.649, 0.462826, 0.84 ) }
    dend_28 { pt3dadd( 17.8798, -166.119, 0.375917, 0.98 ) }
    dend_28 { pt3dadd( 17.8738, -166.526, 0.279671, 0.84 ) }
    dend_28 { pt3dadd( 17.8731, -167.111, 0.121102, 0.84 ) }
    dend_28 { pt3dadd( 17.8664, -167.398, 0.0560164, 0.98 ) }
    dend_28 { pt3dadd( 17.8469, -168.173, -0.0722165, 0.84 ) }
    dend_28 { pt3dadd( 17.8497, -168.473, -0.0994124, 1.12 ) }
    dend_28 { pt3dadd( 17.8801, -168.896, -0.0963573, 1.12 ) }
    dend_28 { pt3dadd( 17.9326, -169.309, -0.0540652, 0.98 ) }
    dend_28 { pt3dadd( 18.0923, -170.147, 0.104347, 0.84 ) }
    dend_28 { pt3dadd( 18.1691, -170.552, 0.20107, 0.7 ) }
    dend_28 { pt3dadd( 18.2191, -170.838, 0.281207, 0.56 ) }
    dend_28 { pt3dadd( 18.309, -171.249, 0.352888, 0.98 ) }
    dend_28 { pt3dadd( 18.3897, -171.662, 0.404539, 0.98 ) }
    dend_28 { pt3dadd( 18.4516, -172.077, 0.463161, 0.98 ) }
    dend_28 { pt3dadd( 18.486, -172.367, 0.500866, 0.84 ) }
    dend_28 { pt3dadd( 18.5144, -172.785, 0.579112, 0.7 ) }
    dend_28 { pt3dadd( 18.5409, -173.63, 0.77201, 0.84 ) }
    dend_28 { pt3dadd( 18.5819, -174.428, 0.925191, 0.84 ) }
    dend_28 { pt3dadd( 18.6544, -175.283, 1.05491, 0.98 ) }
    dend_28 { pt3dadd( 18.7211, -175.696, 1.06399, 0.98 ) }
    dend_28 { pt3dadd( 18.7705, -175.9, 1.04495, 0.98 ) }
    dend_28 { pt3dadd( 18.889, -176.302, 0.967446, 0.84 ) }
    dend_28 { pt3dadd( 19.1762, -177.095, 0.765052, 0.98 ) }
    dend_28 { pt3dadd( 19.337, -177.467, 0.63548, 0.98 ) }
    dend_28 { pt3dadd( 19.6778, -178.211, 0.348682, 0.84 ) }
    dend_28 { pt3dadd( 19.8419, -178.576, 0.225253, 0.84 ) }
    dend_28 { pt3dadd( 20.0109, -178.952, 0.126888, 0.84 ) }
    dend_28 { pt3dadd( 20.1909, -179.385, 0.0802913, 0.84 ) }
    dend_28 { pt3dadd( 20.3431, -179.782, 0.115871, 0.84 ) }
    dend_28 { pt3dadd( 20.4938, -180.169, 0.200558, 0.98 ) }
    dend_28 { pt3dadd( 20.6451, -180.545, 0.331377, 0.84 ) }
    dend_28 { pt3dadd( 20.8324, -180.957, 0.463008, 0.98 ) }
    dend_28 { pt3dadd( 21.1581, -181.646, 0.654895, 0.56 ) }
    dend_28 { pt3dadd( 21.368, -182.064, 0.710978, 0.7 ) }
    dend_28 { pt3dadd( 21.594, -182.483, 0.700865, 0.84 ) }
    dend_28 { pt3dadd( 21.8094, -182.895, 0.624869, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_28 { pt3dadd( 22.1304, -183.595, 0.470548, 0.84 ) }
    dend_28 { pt3dadd( 22.2316, -183.874, 0.400344, 0.84 ) }
    dend_28 { pt3dadd( 22.4582, -184.695, 0.231307, 0.7 ) }
    dend_28 { pt3dadd( 22.508, -185.108, 0.204385, 0.84 ) }
    dend_28 { pt3dadd( 22.5002, -185.583, 0.241023, 0.84 ) }
    dend_28 { pt3dadd( 22.4458, -186.442, 0.340218, 0.7 ) }
    dend_28 { pt3dadd( 22.4004, -186.903, 0.416143, 0.56 ) }
    dend_28 { pt3dadd( 22.3251, -187.674, 0.542827, 0.42 ) }
    dend_28 { pt3dadd( 22.2722, -188.14, 0.623791, 0.42 ) }
    dend_28 { pt3dadd( 22.2211, -188.603, 0.684173, 0.56 ) }
    dend_28 { pt3dadd( 22.1581, -189.467, 0.712825, 0.56 ) }
    dend_28 { pt3dadd( 22.1542, -189.764, 0.662258, 0.84 ) }
    dend_28 { pt3dadd( 22.1743, -190.169, 0.539843, 0.84 ) }
    dend_28 { pt3dadd( 22.197, -190.359, 0.446354, 0.98 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.7886, -156.535, -0.862297, 0.14 ) }
    dend_27 { pt3dadd( 18.0148, -156.764, -0.786128, 0.14 ) }
    dend_27 { pt3dadd( 18.3863, -157.128, -0.660578, 0.28 ) }
    dend_27 { pt3dadd( 18.5975, -157.355, -0.545619, 0.42 ) }
    dend_27 { pt3dadd( 18.9173, -157.726, -0.329253, 0.28 ) }
    dend_27 { pt3dadd( 19.2177, -158.108, -0.104856, 0.14 ) }
    dend_27 { pt3dadd( 19.4014, -158.355, 0.0360122, 0.14 ) }
    dend_27 { pt3dadd( 19.5711, -158.603, 0.175268, 0.28 ) }
    dend_27 { pt3dadd( 20.0132, -159.269, 0.549849, 0.28 ) }
    dend_27 { pt3dadd( 20.277, -159.673, 0.767028, 0.14 ) }
    dend_27 { pt3dadd( 20.5293, -160.032, 0.957757, 0.1 ) }
    dend_27 { pt3dadd( 20.8258, -160.424, 1.15328, 0.1 ) }
    dend_27 { pt3dadd( 21.1421, -160.81, 1.32927, 0.14 ) }
    dend_27 { pt3dadd( 21.3603, -161.05, 1.42733, 0.28 ) }
    dend_27 { pt3dadd( 21.7317, -161.405, 1.55317, 0.14 ) }
    dend_27 { pt3dadd( 22.1239, -161.746, 1.68738, 0.1 ) }
    dend_27 { pt3dadd( 22.5272, -162.059, 1.82677, 0.1 ) }
    dend_27 { pt3dadd( 22.7992, -162.249, 1.89343, 0.1 ) }
    dend_27 { pt3dadd( 23.0812, -162.43, 1.94024, 0.1 ) }
    dend_27 { pt3dadd( 23.3654, -162.605, 1.97215, 0.1 ) }
    dend_27 { pt3dadd( 23.6566, -162.776, 1.99342, 0.1 ) }
    dend_27 { pt3dadd( 24.2332, -163.114, 2.0261, 0.14 ) }
    dend_27 { pt3dadd( 25.0271, -163.566, 2.07179, 0.28 ) }
    dend_27 { pt3dadd( 25.6097, -163.901, 2.1173, 0.14 ) }
    dend_27 { pt3dadd( 25.9017, -164.07, 2.14508, 0.1 ) }
    dend_27 { pt3dadd( 26.1861, -164.236, 2.17806, 0.1 ) }
    dend_27 { pt3dadd( 26.7631, -164.587, 2.26498, 0.14 ) }
    dend_27 { pt3dadd( 27.0318, -164.771, 2.32377, 0.28 ) }
    dend_27 { pt3dadd( 27.5259, -165.189, 2.49328, 0.14 ) }
    dend_27 { pt3dadd( 27.5259, -165.189, 2.49328, 0.28 ) }
    dend_27 { pt3dadd( 27.5259, -165.189, 2.49328, 0.42 ) }
    dend_27 { pt3dadd( 27.6492, -165.39, 2.53186, 0.56 ) }
    dend_27 { pt3dadd( 27.8469, -165.822, 2.58961, 0.42 ) }
    dend_27 { pt3dadd( 28.0304, -166.259, 2.64185, 0.28 ) }
    dend_27 { pt3dadd( 28.1179, -166.48, 2.66625, 0.28 ) }
    dend_27 { pt3dadd( 28.1179, -166.48, 2.66625, 0.28 ) }
    dend_27 { pt3dadd( 28.2229, -166.69, 2.69762, 0.28 ) }
    dend_27 { pt3dadd( 28.4832, -167.151, 2.77778, 0.14 ) }
    dend_27 { pt3dadd( 28.7549, -167.597, 2.86272, 0.1 ) }
    dend_27 { pt3dadd( 29.0055, -167.997, 2.94153, 0.1 ) }
    dend_27 { pt3dadd( 29.2779, -168.443, 3.02675, 0.1 ) }
    dend_27 { pt3dadd( 29.5393, -168.896, 3.10759, 0.14 ) }
    dend_27 { pt3dadd( 29.7883, -169.363, 3.18322, 0.28 ) }
    dend_27 { pt3dadd( 29.8879, -169.576, 3.21247, 0.42 ) }
    dend_27 { pt3dadd( 29.984, -169.795, 3.21948, 0.28 ) }
    dend_27 { pt3dadd( 30.1708, -170.235, 3.19751, 0.14 ) }
    dend_27 { pt3dadd( 30.3398, -170.668, 3.14182, 0.1 ) }
    dend_27 { pt3dadd( 30.4997, -171.109, 3.05889, 0.1 ) }
    dend_27 { pt3dadd( 30.6535, -171.552, 2.96176, 0.1 ) }
    dend_27 { pt3dadd( 30.9669, -172.453, 2.76378, 0.14 ) }
    dend_27 { pt3dadd( 30.9669, -172.453, 2.76378, 0.28 ) }
    dend_27 { pt3dadd( 31.0559, -172.672, 2.72869, 0.56 ) }
    dend_27 { pt3dadd( 31.2512, -173.104, 2.68822, 0.42 ) }
    dend_27 { pt3dadd( 31.4558, -173.528, 2.67724, 0.28 ) }
    dend_27 { pt3dadd( 31.6646, -173.955, 2.69616, 0.14 ) }
    dend_27 { pt3dadd( 31.8924, -174.435, 2.76338, 0.1 ) }
    dend_27 { pt3dadd( 32.1267, -174.911, 2.83314, 0.14 ) }
    dend_27 { pt3dadd( 32.3708, -175.375, 2.90707, 0.1 ) }
    dend_27 { pt3dadd( 32.3708, -175.375, 2.90707, 0.14 ) }
    dend_27 { pt3dadd( 32.6919, -175.796, 2.91121, 0.1 ) }
    dend_27 { pt3dadd( 33.0291, -176.2, 2.81227, 0.14 ) }
    dend_27 { pt3dadd( 33.0291, -176.2, 2.81227, 0.28 ) }
    dend_27 { pt3dadd( 33.1739, -176.38, 2.76096, 0.56 ) }
    dend_27 { pt3dadd( 33.4904, -176.802, 2.67025, 0.42 ) }
    dend_27 { pt3dadd( 34.1088, -177.563, 2.45153, 0.28 ) }
    dend_27 { pt3dadd( 34.4028, -177.91, 2.34222, 0.14 ) }
    dend_27 { pt3dadd( 34.741, -178.305, 2.21538, 0.1 ) }
    dend_27 { pt3dadd( 35.0759, -178.702, 2.08524, 0.1 ) }
    dend_27 { pt3dadd( 35.3618, -179.058, 1.9718, 0.1 ) }
    dend_27 { pt3dadd( 35.859, -179.76, 1.77733, 0.1 ) }
    dend_27 { pt3dadd( 35.859, -179.76, 1.77733, 0.1 ) }
    dend_27 { pt3dadd( 35.9795, -179.963, 1.75285, 0.1 ) }
    dend_27 { pt3dadd( 36.2004, -180.377, 1.72375, 0.1 ) }
    dend_27 { pt3dadd( 36.4154, -180.802, 1.72507, 0.1 ) }
    dend_27 { pt3dadd( 36.6312, -181.228, 1.7603, 0.1 ) }
    dend_27 { pt3dadd( 36.87, -181.695, 1.83212, 0.1 ) }
    dend_27 { pt3dadd( 37.1269, -182.151, 1.91112, 0.14 ) }
    dend_27 { pt3dadd( 37.3789, -182.55, 1.99049, 0.1 ) }
    dend_27 { pt3dadd( 37.6936, -182.97, 2.05533, 0.1 ) }
    dend_27 { pt3dadd( 38.0428, -183.365, 2.10148, 0.1 ) }
    dend_27 { pt3dadd( 38.2924, -183.599, 2.12131, 0.1 ) }
    dend_27 { pt3dadd( 38.7134, -183.919, 2.14096, 0.1 ) }
    dend_27 { pt3dadd( 39.0047, -184.091, 2.12393, 0.14 ) }
    dend_27 { pt3dadd( 39.8286, -184.476, 2.02722, 0.28 ) }
    dend_27 { pt3dadd( 40.0486, -184.563, 1.99295, 0.7 ) }
    dend_27 { pt3dadd( 40.5423, -184.735, 1.91587, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_27 { pt3dadd( 41.0489, -184.895, 1.85362, 0.42 ) }
    dend_27 { pt3dadd( 41.9216, -185.157, 1.78841, 0.28 ) }
    dend_27 { pt3dadd( 42.2449, -185.257, 1.79031, 0.7 ) }
    dend_27 { pt3dadd( 42.565, -185.36, 1.82771, 0.7 ) }
    dend_27 { pt3dadd( 43.058, -185.529, 1.90397, 0.56 ) }
    dend_27 { pt3dadd( 43.5634, -185.698, 1.96694, 0.42 ) }
    dend_27 { pt3dadd( 43.8754, -185.801, 2.00598, 0.28 ) }
    dend_27 { pt3dadd( 44.3781, -185.965, 2.09733, 0.14 ) }
    dend_27 { pt3dadd( 44.8754, -186.12, 2.17466, 0.1 ) }
    dend_27 { pt3dadd( 45.1973, -186.217, 2.21278, 0.1 ) }
    dend_27 { pt3dadd( 46.1571, -186.51, 2.26886, 0.1 ) }
    dend_27 { pt3dadd( 46.4742, -186.604, 2.26321, 0.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 28.5666, -133.589, -12.9059, 0.1 ) }
    dend_22 { pt3dadd( 29.0419, -134.456, -12.8225, 0.1 ) }
    dend_22 { pt3dadd( 29.2832, -134.934, -12.7961, 0.1 ) }
    dend_22 { pt3dadd( 29.5356, -135.473, -12.7794, 0.1 ) }
    dend_22 { pt3dadd( 29.7512, -135.966, -12.7717, 0.1 ) }
    dend_22 { pt3dadd( 29.9916, -136.51, -12.7722, 0.1 ) }
    dend_22 { pt3dadd( 30.2047, -136.994, -12.7776, 0.1 ) }
    dend_22 { pt3dadd( 30.4069, -137.489, -12.8186, 0.1 ) }
    dend_22 { pt3dadd( 30.6036, -137.988, -12.8576, 0.1 ) }
    dend_22 { pt3dadd( 30.7861, -138.49, -12.8915, 0.1 ) }
    dend_22 { pt3dadd( 30.8924, -138.852, -12.9399, 0.1 ) }
    dend_22 { pt3dadd( 30.9497, -139.108, -12.987, 0.7 ) }
    dend_22 { pt3dadd( 31.0451, -139.625, -13.103, 0.7 ) }
    dend_22 { pt3dadd( 31.1249, -140.139, -13.23, 0.56 ) }
    dend_22 { pt3dadd( 31.1939, -140.657, -13.3607, 0.7 ) }
    dend_22 { pt3dadd( 31.3205, -141.742, -13.6314, 0.56 ) }
    dend_22 { pt3dadd( 31.376, -142.263, -13.7527, 0.42 ) }
    dend_22 { pt3dadd( 31.438, -142.783, -13.8647, 0.28 ) }
    dend_22 { pt3dadd( 31.51, -143.307, -13.9639, 0.14 ) }
    dend_22 { pt3dadd( 31.6049, -143.818, -14.0441, 0.28 ) }
    dend_22 { pt3dadd( 31.6677, -144.079, -14.0723, 0.28 ) }
    dend_22 { pt3dadd( 31.8228, -144.591, -14.0964, 0.28 ) }
    dend_22 { pt3dadd( 31.9932, -145.1, -14.1257, 0.14 ) }
    dend_22 { pt3dadd( 32.1728, -145.604, -14.1586, 0.1 ) }
    dend_22 { pt3dadd( 32.3788, -146.161, -14.1975, 0.1 ) }
    dend_22 { pt3dadd( 32.564, -146.66, -14.2731, 0.1 ) }
    dend_22 { pt3dadd( 32.7436, -147.154, -14.3776, 0.1 ) }
    dend_22 { pt3dadd( 32.9408, -147.704, -14.5226, 0.1 ) }
    dend_22 { pt3dadd( 33.1098, -148.189, -14.6722, 0.14 ) }
    dend_22 { pt3dadd( 33.2655, -148.666, -14.8328, 0.28 ) }
    dend_22 { pt3dadd( 33.5675, -149.694, -15.1882, 0.42 ) }
    dend_22 { pt3dadd( 33.7147, -150.18, -15.3586, 0.84 ) }
    dend_22 { pt3dadd( 33.7147, -150.18, -15.3586, 0.7 ) }
    dend_22 { pt3dadd( 33.8031, -150.429, -15.409, 0.28 ) }
    dend_22 { pt3dadd( 34.039, -150.91, -15.3935, 0.14 ) }
    dend_22 { pt3dadd( 34.3188, -151.341, -15.2334, 0.1 ) }
    dend_22 { pt3dadd( 34.648, -151.742, -14.942, 0.1 ) }
    dend_22 { pt3dadd( 34.9501, -152.078, -14.6497, 0.1 ) }
    dend_22 { pt3dadd( 35.5769, -152.726, -13.9753, 0.1 ) }
    dend_22 { pt3dadd( 36.2085, -153.337, -13.2718, 0.1 ) }
    dend_22 { pt3dadd( 36.7771, -153.87, -12.6575, 0.1 ) }
    dend_22 { pt3dadd( 37.4292, -154.496, -11.9859, 0.1 ) }
    dend_22 { pt3dadd( 37.7438, -154.811, -11.6837, 0.1 ) }
    dend_22 { pt3dadd( 38.3361, -155.482, -11.2548, 0.1 ) }
    dend_22 { pt3dadd( 38.5849, -155.985, -11.454, 0.1 ) }
    dend_22 { pt3dadd( 38.85, -156.807, -12.1756, 0.1 ) }
    dend_22 { pt3dadd( 39.0583, -157.553, -12.952, 0.1 ) }
    dend_22 { pt3dadd( 39.2324, -158.218, -13.713, 0.1 ) }
    dend_22 { pt3dadd( 39.3322, -158.562, -14.1151, 0.1 ) }
    dend_22 { pt3dadd( 39.5344, -159.227, -14.8686, 0.1 ) }
    dend_22 { pt3dadd( 39.5953, -159.407, -15.0591, 0.1 ) }
    dend_22 { pt3dadd( 39.7598, -159.82, -15.4558, 0.1 ) }
    dend_22 { pt3dadd( 39.9495, -160.251, -15.83, 0.1 ) }
    dend_22 { pt3dadd( 40.1276, -160.677, -16.2058, 0.1 ) }
    dend_22 { pt3dadd( 40.2759, -161.059, -16.5546, 0.1 ) }
    dend_22 { pt3dadd( 40.5233, -161.778, -17.2421, 0.1 ) }
    dend_22 { pt3dadd( 40.7556, -162.552, -18.036, 0.1 ) }
    dend_22 { pt3dadd( 40.8321, -162.9, -18.4238, 0.1 ) }
    dend_22 { pt3dadd( 40.9444, -163.611, -19.2896, 0.1 ) }
    dend_22 { pt3dadd( 40.985, -163.944, -19.7098, 0.14 ) }
    dend_22 { pt3dadd( 41.0793, -164.651, -20.5809, 0.28 ) }
    dend_22 { pt3dadd( 41.1066, -164.832, -20.7789, 0.14 ) }
    dend_22 { pt3dadd( 41.2494, -165.598, -21.5486, 0.1 ) }
    dend_22 { pt3dadd( 41.4221, -166.388, -22.3369, 0.1 ) }
    dend_22 { pt3dadd( 41.4713, -166.582, -22.512, 0.1 ) }
    dend_22 { pt3dadd( 41.6101, -167.042, -22.8741, 0.1 ) }
    dend_22 { pt3dadd( 41.7872, -167.488, -23.1127, 0.1 ) }
    dend_22 { pt3dadd( 42.0379, -168.004, -23.2708, 0.1 ) }
    dend_22 { pt3dadd( 42.6125, -168.975, -23.3116, 0.14 ) }
    dend_22 { pt3dadd( 42.8953, -169.427, -23.2587, 0.28 ) }
    dend_22 { pt3dadd( 43.4, -170.279, -23.1852, 0.84 ) }
    dend_22 { pt3dadd( 43.8986, -171.288, -23.1895, 0.7 ) }
    dend_22 { pt3dadd( 44.1034, -171.784, -23.2332, 0.56 ) }
    dend_22 { pt3dadd( 44.2437, -172.344, -23.3768, 0.42 ) }
    dend_22 { pt3dadd( 44.3038, -172.842, -23.5732, 0.28 ) }
    dend_22 { pt3dadd( 44.2732, -173.773, -24.149, 0.14 ) }
    dend_22 { pt3dadd( 44.1696, -174.679, -24.8059, 0.1 ) }
    dend_22 { pt3dadd( 44.1309, -174.882, -24.9749, 0.1 ) }
    dend_22 { pt3dadd( 43.9467, -175.728, -25.6996, 0.1 ) }
    dend_22 { pt3dadd( 43.8505, -176.135, -26.0342, 0.1 ) }
    dend_22 { pt3dadd( 43.663, -177.021, -26.6999, 0.1 ) }
    dend_22 { pt3dadd( 43.5951, -177.473, -26.9797, 0.1 ) }
    dend_22 { pt3dadd( 43.509, -178.442, -27.4863, 0.1 ) }
    dend_22 { pt3dadd( 43.4849, -178.928, -27.7091, 0.1 ) }
    dend_22 { pt3dadd( 43.4955, -179.487, -27.9036, 0.1 ) }
    dend_22 { pt3dadd( 43.5287, -180.003, -28.0429, 0.1 ) }
    dend_22 { pt3dadd( 43.5842, -180.523, -28.1613, 0.1 ) }
    dend_22 { pt3dadd( 43.614, -180.783, -28.2225, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_22 { pt3dadd( 43.657, -181.046, -28.258, 0.56 ) }
    dend_22 { pt3dadd( 43.7573, -181.569, -28.3186, 0.42 ) }
    dend_22 { pt3dadd( 43.8869, -182.079, -28.3704, 0.28 ) }
    dend_22 { pt3dadd( 44.1609, -183.03, -28.4405, 0.14 ) }
    dend_22 { pt3dadd( 44.3221, -183.543, -28.4635, 0.1 ) }
    dend_22 { pt3dadd( 44.6557, -184.478, -28.4888, 0.1 ) }
    dend_22 { pt3dadd( 44.8492, -184.977, -28.4927, 0.1 ) }
    dend_22 { pt3dadd( 45.0865, -185.523, -28.4894, 0.1 ) }
    dend_22 { pt3dadd( 45.3129, -186.011, -28.4791, 0.1 ) }
    dend_22 { pt3dadd( 45.5435, -186.494, -28.4611, 0.1 ) }
    dend_22 { pt3dadd( 45.7923, -187.042, -28.4735, 0.1 ) }
    dend_22 { pt3dadd( 45.9974, -187.535, -28.5156, 0.1 ) }
    dend_22 { pt3dadd( 46.2161, -188.086, -28.5591, 0.14 ) }
    dend_22 { pt3dadd( 46.4098, -188.587, -28.5969, 0.28 ) }
    dend_22 { pt3dadd( 46.5994, -189.077, -28.634, 0.14 ) }
    dend_22 { pt3dadd( 46.788, -189.579, -28.67, 0.1 ) }
    dend_22 { pt3dadd( 46.9643, -190.084, -28.7016, 0.1 ) }
    dend_22 { pt3dadd( 47.1382, -190.593, -28.7323, 0.1 ) }
    dend_22 { pt3dadd( 47.254, -190.946, -28.7519, 0.1 ) }
    dend_22 { pt3dadd( 47.4259, -191.455, -28.7818, 0.84 ) }
    dend_22 { pt3dadd( 47.602, -191.96, -28.8134, 0.7 ) }
    dend_22 { pt3dadd( 47.7823, -192.463, -28.8465, 0.56 ) }
    dend_22 { pt3dadd( 47.7823, -192.463, -28.8465, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 23/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 28.5666, -133.589, -12.9059, 0.28 ) }
    dend_21 { pt3dadd( 29.8144, -133.856, -11.4412, 0.28 ) }
    dend_21 { pt3dadd( 30.4768, -134.001, -10.6762, 0.14 ) }
    dend_21 { pt3dadd( 31.1551, -134.158, -9.92336, 0.1 ) }
    dend_21 { pt3dadd( 31.8344, -134.315, -9.16931, 0.1 ) }
    dend_21 { pt3dadd( 32.6365, -134.5, -8.27903, 0.1 ) }
    dend_21 { pt3dadd( 33.3127, -134.657, -7.52849, 0.14 ) }
    dend_21 { pt3dadd( 34.0182, -134.838, -6.80675, 0.28 ) }
    dend_21 { pt3dadd( 34.2863, -134.909, -6.54111, 0.42 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 32/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.29722, -202.353, -51.8053, 0.14 ) }
    dend_12 { pt3dadd( -2.07605, -202.43, -51.9304, 0.14 ) }
    dend_12 { pt3dadd( -1.71126, -202.549, -52.1246, 0.28 ) }
    dend_12 { pt3dadd( -1.07511, -202.751, -52.4233, 0.14 ) }
    dend_12 { pt3dadd( -0.696132, -202.873, -52.5832, 0.1 ) }
    dend_12 { pt3dadd( -0.454725, -202.951, -52.6791, 0.1 ) }
    dend_12 { pt3dadd( 0.259553, -203.195, -52.9509, 0.1 ) }
    dend_12 { pt3dadd( 0.640612, -203.338, -53.0862, 0.1 ) }
    dend_12 { pt3dadd( 1.01327, -203.507, -53.1952, 0.1 ) }
    dend_12 { pt3dadd( 1.24944, -203.635, -53.2343, 0.1 ) }
    dend_12 { pt3dadd( 1.24944, -203.635, -53.2343, 0.1 ) }
    dend_12 { pt3dadd( 1.39763, -203.756, -53.2382, 0.1 ) }
    dend_12 { pt3dadd( 1.70065, -204.052, -53.2107, 0.1 ) }
    dend_12 { pt3dadd( 1.98859, -204.357, -53.145, 0.1 ) }
    dend_12 { pt3dadd( 2.16735, -204.553, -53.0869, 0.1 ) }
    dend_12 { pt3dadd( 2.45153, -204.856, -52.9799, 0.1 ) }
    dend_12 { pt3dadd( 2.73779, -205.155, -52.8656, 0.1 ) }
    dend_12 { pt3dadd( 2.91612, -205.337, -52.7918, 0.1 ) }
    dend_12 { pt3dadd( 3.50241, -205.925, -52.5429, 0.1 ) }
    dend_12 { pt3dadd( 3.79272, -206.217, -52.422, 0.1 ) }
    dend_12 { pt3dadd( 3.97548, -206.4, -52.3502, 0.1 ) }
    dend_12 { pt3dadd( 4.26883, -206.692, -52.2357, 0.1 ) }
    dend_12 { pt3dadd( 4.56021, -206.982, -52.1298, 0.1 ) }
    dend_12 { pt3dadd( 4.74659, -207.171, -52.0764, 0.1 ) }
    dend_12 { pt3dadd( 5.04111, -207.476, -52.0501, 0.1 ) }
    dend_12 { pt3dadd( 5.23059, -207.669, -52.0332, 0.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.29722, -202.353, -51.8053, 0.1 ) }
    dend_11 { pt3dadd( -2.20836, -203.167, -51.643, 0.1 ) }
    dend_11 { pt3dadd( -2.15347, -203.587, -51.578, 0.1 ) }
    dend_11 { pt3dadd( -2.09182, -204.013, -51.5247, 0.1 ) }
    dend_11 { pt3dadd( -2.02529, -204.442, -51.4801, 0.1 ) }
    dend_11 { pt3dadd( -1.96588, -204.87, -51.4439, 0.1 ) }
    dend_11 { pt3dadd( -1.91734, -205.302, -51.4151, 0.1 ) }
    dend_11 { pt3dadd( -1.86724, -205.733, -51.4154, 0.1 ) }
    dend_11 { pt3dadd( -1.82676, -206.158, -51.4172, 0.1 ) }
    dend_11 { pt3dadd( -1.79126, -206.592, -51.4201, 0.1 ) }
    dend_11 { pt3dadd( -1.75471, -207.08, -51.4239, 0.1 ) }
    dend_11 { pt3dadd( -1.71872, -207.558, -51.4277, 0.1 ) }
    dend_11 { pt3dadd( -1.68342, -207.991, -51.4306, 0.1 ) }
    dend_11 { pt3dadd( -1.65003, -208.425, -51.4339, 0.1 ) }
    dend_11 { pt3dadd( -1.6147, -208.858, -51.4368, 0.1 ) }
    dend_11 { pt3dadd( -1.57254, -209.292, -51.4385, 0.1 ) }
    dend_11 { pt3dadd( -1.52075, -209.715, -51.4383, 0.14 ) }
    dend_11 { pt3dadd( -1.4761, -210.145, -51.409, 0.28 ) }
    dend_11 { pt3dadd( -1.4404, -210.628, -51.3491, 0.14 ) }
    dend_11 { pt3dadd( -1.43302, -211.049, -51.246, 0.1 ) }
    dend_11 { pt3dadd( -1.44169, -211.462, -51.1068, 0.1 ) }
    dend_11 { pt3dadd( -1.44974, -211.657, -51.0287, 0.1 ) }
    dend_11 { pt3dadd( -1.4874, -212.496, -50.6638, 0.1 ) }
    dend_11 { pt3dadd( -1.50075, -212.894, -50.4858, 0.1 ) }
    dend_11 { pt3dadd( -1.50758, -213.729, -50.1206, 0.1 ) }
    dend_11 { pt3dadd( -1.50585, -214.141, -49.983, 0.1 ) }
    dend_11 { pt3dadd( -1.5004, -214.568, -49.8956, 0.1 ) }
    dend_11 { pt3dadd( -1.48552, -215.0, -49.8663, 0.1 ) }
    dend_11 { pt3dadd( -1.45579, -215.433, -49.9049, 0.14 ) }
    dend_11 { pt3dadd( -1.42304, -215.852, -49.9801, 0.1 ) }
    dend_11 { pt3dadd( -1.33338, -216.73, -50.2206, 0.14 ) }
    dend_11 { pt3dadd( -1.28807, -217.199, -50.3514, 0.1 ) }
    dend_11 { pt3dadd( -1.26747, -217.409, -50.4066, 0.14 ) }
    dend_11 { pt3dadd( -1.24264, -217.608, -50.469, 0.28 ) }
    dend_11 { pt3dadd( -1.21104, -217.811, -50.5348, 0.28 ) }
    dend_11 { pt3dadd( -1.13312, -218.223, -50.657, 0.14 ) }
    dend_11 { pt3dadd( -1.04085, -218.635, -50.7545, 0.1 ) }
    dend_11 { pt3dadd( -0.939508, -219.047, -50.8539, 0.1 ) }
    dend_11 { pt3dadd( -0.734611, -219.888, -51.0488, 0.1 ) }
    dend_11 { pt3dadd( -0.628748, -220.294, -51.1374, 0.1 ) }
    dend_11 { pt3dadd( -0.51632, -220.705, -51.2183, 0.1 ) }
    dend_11 { pt3dadd( -0.399482, -221.117, -51.2904, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_11 { pt3dadd( -0.289555, -221.537, -51.3222, 0.1 ) }
    dend_11 { pt3dadd( -0.202705, -221.962, -51.2971, 0.1 ) }
    dend_11 { pt3dadd( -0.16843, -222.254, -51.2056, 0.1 ) }
    dend_11 { pt3dadd( -0.156995, -222.652, -51.0323, 1.12 ) }
    dend_11 { pt3dadd( -0.156995, -222.652, -51.0323, 0.98 ) }
    dend_11 { pt3dadd( -0.20854, -223.383, -50.6415, 0.28 ) }
    dend_11 { pt3dadd( -0.245263, -223.814, -50.4171, 0.14 ) }
    dend_11 { pt3dadd( -0.310257, -224.613, -50.0367, 0.1 ) }
    dend_11 { pt3dadd( -0.341223, -225.055, -49.8515, 0.1 ) }
    dend_11 { pt3dadd( -0.344725, -225.464, -49.707, 0.1 ) }
    dend_11 { pt3dadd( -0.309465, -225.884, -49.5954, 0.1 ) }
    dend_11 { pt3dadd( -0.223953, -226.303, -49.5272, 0.1 ) }
    dend_11 { pt3dadd( -0.115594, -226.716, -49.4495, 0.1 ) }
    dend_11 { pt3dadd( -0.0572295, -226.923, -49.4134, 0.1 ) }
    dend_11 { pt3dadd( 0.0622096, -227.384, -49.307, 0.1 ) }
    dend_11 { pt3dadd( 0.149595, -227.842, -49.1846, 0.1 ) }
    dend_11 { pt3dadd( 0.184968, -228.13, -49.1028, 0.1 ) }
    dend_11 { pt3dadd( 0.236159, -228.931, -48.8795, 0.1 ) }
    dend_11 { pt3dadd( 0.244769, -229.396, -48.7617, 0.1 ) }
    dend_11 { pt3dadd( 0.239808, -229.874, -48.6602, 0.1 ) }
    dend_11 { pt3dadd( 0.22977, -230.171, -48.6116, 0.1 ) }
    dend_11 { pt3dadd( 0.220469, -230.605, -48.564, 0.1 ) }
    dend_11 { pt3dadd( 0.23011, -231.038, -48.5403, 0.1 ) }
    dend_11 { pt3dadd( 0.25621, -231.47, -48.5135, 0.1 ) }
    dend_11 { pt3dadd( 0.2914, -231.901, -48.4581, 0.1 ) }
    dend_11 { pt3dadd( 0.316705, -232.321, -48.3509, 0.1 ) }
    dend_11 { pt3dadd( 0.331578, -232.726, -48.2112, 0.1 ) }
    dend_11 { pt3dadd( 0.334046, -233.127, -48.0474, 0.1 ) }
    dend_11 { pt3dadd( 0.3001, -233.867, -47.6665, 0.1 ) }
    dend_11 { pt3dadd( 0.272023, -234.243, -47.4508, 0.1 ) }
    dend_11 { pt3dadd( 0.190511, -235.024, -46.9897, 0.1 ) }
    dend_11 { pt3dadd( 0.141743, -235.399, -46.7765, 0.1 ) }
    dend_11 { pt3dadd( 0.0884361, -235.781, -46.5737, 0.1 ) }
    dend_11 { pt3dadd( -0.0280781, -236.606, -46.2035, 0.1 ) }
    dend_11 { pt3dadd( -0.075397, -237.018, -46.0691, 0.1 ) }
    dend_11 { pt3dadd( -0.128519, -237.48, -45.9203, 0.1 ) }
    dend_11 { pt3dadd( -0.169829, -237.941, -45.792, 0.1 ) }
    dend_11 { pt3dadd( -0.185808, -238.15, -45.7329, 0.1 ) }
    dend_11 { pt3dadd( -0.206573, -238.622, -45.609, 0.1 ) }
    dend_11 { pt3dadd( -0.202114, -239.046, -45.5169, 0.1 ) }
    dend_11 { pt3dadd( -0.163829, -239.911, -45.3189, 0.1 ) }
    dend_11 { pt3dadd( -0.127417, -240.325, -45.2217, 0.1 ) }
    dend_11 { pt3dadd( -0.0755405, -240.747, -45.1273, 0.1 ) }
    dend_11 { pt3dadd( -0.0223012, -241.171, -45.0471, 0.1 ) }
    dend_11 { pt3dadd( 0.0368791, -241.598, -44.9851, 0.1 ) }
    dend_11 { pt3dadd( 0.0864983, -242.028, -44.9521, 0.1 ) }
    dend_11 { pt3dadd( 0.108512, -242.245, -44.9528, 0.1 ) }
    dend_11 { pt3dadd( 0.135128, -242.67, -44.9571, 0.1 ) }
    dend_11 { pt3dadd( 0.152553, -243.157, -44.9643, 0.1 ) }
    dend_11 { pt3dadd( 0.153597, -243.591, -44.9732, 0.1 ) }
    dend_11 { pt3dadd( 0.146237, -244.071, -44.9846, 0.1 ) }
    dend_11 { pt3dadd( 0.138672, -244.504, -44.9951, 0.1 ) }
    dend_11 { pt3dadd( 0.126625, -244.991, -45.0075, 0.1 ) }
    dend_11 { pt3dadd( 0.117893, -245.425, -45.0181, 0.1 ) }
    dend_11 { pt3dadd( 0.121748, -245.903, -45.059, 0.14 ) }
    dend_11 { pt3dadd( 0.131717, -246.332, -45.1188, 0.1 ) }
    dend_11 { pt3dadd( 0.154161, -246.76, -45.1999, 0.1 ) }
    dend_11 { pt3dadd( 0.189771, -247.227, -45.3105, 0.1 ) }
    dend_11 { pt3dadd( 0.23899, -247.643, -45.423, 0.1 ) }
    dend_11 { pt3dadd( 0.351039, -248.409, -45.6428, 0.14 ) }
    dend_11 { pt3dadd( 0.351039, -248.409, -45.6428, 0.28 ) }
    dend_11 { pt3dadd( 0.38894, -248.611, -45.7141, 0.28 ) }
    dend_11 { pt3dadd( 0.466042, -249.011, -45.8646, 0.14 ) }
    dend_11 { pt3dadd( 0.547137, -249.414, -46.0087, 0.1 ) }
    dend_11 { pt3dadd( 0.625881, -249.803, -46.1645, 0.1 ) }
    dend_11 { pt3dadd( 0.688186, -250.204, -46.3248, 0.1 ) }
    dend_11 { pt3dadd( 0.782129, -251.039, -46.6882, 0.1 ) }
    dend_11 { pt3dadd( 0.80589, -251.433, -46.8731, 0.1 ) }
    dend_11 { pt3dadd( 0.804861, -251.823, -47.0631, 0.1 ) }
    dend_11 { pt3dadd( 0.764814, -252.62, -47.4419, 0.1 ) }
    dend_11 { pt3dadd( 0.73391, -253.065, -47.6384, 0.1 ) }
    dend_11 { pt3dadd( 0.700411, -253.515, -47.803, 0.1 ) }
    dend_11 { pt3dadd( 0.688412, -253.814, -47.8741, 0.1 ) }
    dend_11 { pt3dadd( 0.691251, -254.288, -47.9576, 0.1 ) }
    dend_11 { pt3dadd( 0.721062, -254.722, -47.9974, 0.1 ) }
    dend_11 { pt3dadd( 0.763051, -255.02, -47.9963, 0.1 ) }
    dend_11 { pt3dadd( 0.850432, -255.447, -47.9899, 0.1 ) }
    dend_11 { pt3dadd( 0.959671, -255.917, -47.9806, 0.1 ) }
    dend_11 { pt3dadd( 1.05363, -256.342, -47.973, 0.1 ) }
    dend_11 { pt3dadd( 1.13768, -256.768, -47.9672, 0.1 ) }
    dend_11 { pt3dadd( 1.19801, -257.196, -47.9358, 0.1 ) }
    dend_11 { pt3dadd( 1.23918, -257.671, -47.8771, 0.1 ) }
    dend_11 { pt3dadd( 1.26462, -258.09, -47.7691, 0.1 ) }
    dend_11 { pt3dadd( 1.28421, -258.547, -47.6012, 0.1 ) }
    dend_11 { pt3dadd( 1.29527, -258.746, -47.5119, 0.1 ) }
    dend_11 { pt3dadd( 1.35722, -259.435, -47.103, 0.1 ) }
    dend_11 { pt3dadd( 1.40273, -259.788, -46.8642, 0.1 ) }
    dend_11 { pt3dadd( 1.52939, -260.527, -46.3399, 0.1 ) }
    dend_11 { pt3dadd( 1.59783, -260.875, -46.0991, 0.1 ) }
    dend_11 { pt3dadd( 1.67838, -261.235, -45.8707, 0.1 ) }
    dend_11 { pt3dadd( 1.85996, -262.024, -45.4518, 0.1 ) }
    dend_11 { pt3dadd( 1.95402, -262.42, -45.2959, 0.1 ) }
    dend_11 { pt3dadd( 2.05255, -262.831, -45.1946, 0.1 ) }
    dend_11 { pt3dadd( 2.15403, -263.253, -45.1648, 0.1 ) }
    dend_11 { pt3dadd( 2.24836, -263.677, -45.1775, 0.1 ) }
    dend_11 { pt3dadd( 2.33565, -264.098, -45.2311, 0.1 ) }
    dend_11 { pt3dadd( 2.41441, -264.51, -45.3221, 0.1 ) }
    dend_11 { pt3dadd( 2.57021, -265.358, -45.5297, 0.14 ) }
    dend_11 { pt3dadd( 2.63626, -265.775, -45.6393, 0.28 ) }
    dend_11 { pt3dadd( 2.69855, -266.244, -45.763, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_11 { pt3dadd( 2.74378, -266.658, -45.8627, 0.1 ) }
    dend_11 { pt3dadd( 2.76285, -266.869, -45.9027, 0.14 ) }
    dend_11 { pt3dadd( 2.76285, -266.869, -45.9027, 0.28 ) }
    dend_11 { pt3dadd( 2.77691, -267.173, -45.8511, 0.1 ) }
    dend_11 { pt3dadd( 2.81523, -267.596, -45.7518, 0.1 ) }
    dend_11 { pt3dadd( 2.87261, -268.011, -45.6389, 0.1 ) }
    dend_11 { pt3dadd( 2.9388, -268.419, -45.5251, 0.1 ) }
    dend_11 { pt3dadd( 3.0942, -269.262, -45.2984, 0.1 ) }
    dend_11 { pt3dadd( 3.17869, -269.675, -45.1949, 0.1 ) }
    dend_11 { pt3dadd( 3.2843, -270.139, -45.0875, 0.1 ) }
    dend_11 { pt3dadd( 3.38029, -270.554, -45.0047, 0.1 ) }
    dend_11 { pt3dadd( 3.47868, -270.973, -44.9403, 0.1 ) }
    dend_11 { pt3dadd( 3.56968, -271.396, -44.9025, 0.1 ) }
    dend_11 { pt3dadd( 3.65506, -271.823, -44.8965, 0.1 ) }
    dend_11 { pt3dadd( 3.7195, -272.245, -44.894, 0.1 ) }
    dend_11 { pt3dadd( 3.75731, -272.677, -44.8965, 0.1 ) }
    dend_11 { pt3dadd( 3.77152, -273.113, -44.9032, 0.1 ) }
    dend_11 { pt3dadd( 3.76729, -273.601, -44.9142, 0.14 ) }
    dend_11 { pt3dadd( 3.75269, -274.029, -44.9258, 0.1 ) }
    dend_11 { pt3dadd( 3.73879, -274.337, -44.9347, 0.1 ) }
    dend_11 { pt3dadd( 3.70936, -274.825, -44.9502, 0.1 ) }
    dend_11 { pt3dadd( 3.6821, -275.304, -44.9651, 0.1 ) }
    dend_11 { pt3dadd( 3.66636, -275.737, -44.977, 0.1 ) }
    dend_11 { pt3dadd( 3.65926, -276.173, -44.9874, 0.1 ) }
    dend_11 { pt3dadd( 3.65986, -276.607, -44.9965, 0.1 ) }
    dend_11 { pt3dadd( 3.67712, -277.088, -45.0035, 0.1 ) }
    dend_11 { pt3dadd( 3.69649, -277.523, -45.0093, 0.14 ) }
    dend_11 { pt3dadd( 3.7173, -277.956, -45.0148, 0.1 ) }
    dend_11 { pt3dadd( 3.73801, -278.436, -45.0212, 0.14 ) }
    dend_11 { pt3dadd( 3.75097, -278.869, -45.0281, 0.1 ) }
    dend_11 { pt3dadd( 3.75602, -279.305, -45.0364, 0.1 ) }
    dend_11 { pt3dadd( 3.75947, -279.794, -45.0461, 0.1 ) }
    dend_11 { pt3dadd( 3.75795, -280.222, -45.0554, 0.1 ) }
    dend_11 { pt3dadd( 3.75141, -280.656, -45.0366, 0.1 ) }
    dend_11 { pt3dadd( 3.7465, -281.14, -44.9847, 0.1 ) }
    dend_11 { pt3dadd( 3.74185, -281.615, -44.9084, 0.1 ) }
    dend_11 { pt3dadd( 3.74311, -281.829, -44.8649, 0.1 ) }
    dend_11 { pt3dadd( 3.75963, -282.251, -44.7655, 0.14 ) }
    dend_11 { pt3dadd( 3.80785, -283.03, -44.5732, 0.42 ) }
    dend_11 { pt3dadd( 3.84844, -283.45, -44.471, 0.28 ) }
    dend_11 { pt3dadd( 3.90758, -283.871, -44.376, 0.14 ) }
    dend_11 { pt3dadd( 3.96871, -284.286, -44.2989, 0.1 ) }
    dend_11 { pt3dadd( 4.02886, -284.714, -44.2421, 0.1 ) }
    dend_11 { pt3dadd( 4.08843, -285.143, -44.2115, 0.1 ) }
    dend_11 { pt3dadd( 4.15021, -285.574, -44.2097, 0.1 ) }
    dend_11 { pt3dadd( 4.20936, -286.004, -44.2084, 0.1 ) }
    dend_11 { pt3dadd( 4.27388, -286.48, -44.207, 0.1 ) }
    dend_11 { pt3dadd( 4.31948, -286.91, -44.1789, 0.1 ) }
    dend_11 { pt3dadd( 4.35519, -287.339, -44.1268, 0.1 ) }
    dend_11 { pt3dadd( 4.37689, -287.769, -44.0564, 1.26 ) }
    dend_11 { pt3dadd( 4.38979, -288.195, -43.973, 1.12 ) }
    dend_11 { pt3dadd( 4.39148, -288.621, -43.8827, 0.98 ) }
    dend_11 { pt3dadd( 4.38758, -289.433, -43.7065, 0.84 ) }
    dend_11 { pt3dadd( 4.37125, -289.858, -43.6206, 0.7 ) }
    dend_11 { pt3dadd( 4.34534, -290.337, -43.5358, 0.56 ) }
    dend_11 { pt3dadd( 4.32285, -290.759, -43.4759, 0.42 ) }
    dend_11 { pt3dadd( 4.30569, -291.245, -43.4283, 0.28 ) }
    dend_11 { pt3dadd( 4.31271, -291.68, -43.4069, 0.14 ) }
    dend_11 { pt3dadd( 4.35081, -292.16, -43.4103, 0.1 ) }
    dend_11 { pt3dadd( 4.41534, -292.59, -43.4385, 0.1 ) }
    dend_11 { pt3dadd( 4.50419, -293.015, -43.4581, 0.1 ) }
    dend_11 { pt3dadd( 4.6109, -293.437, -43.4699, 0.1 ) }
    dend_11 { pt3dadd( 4.74246, -293.9, -43.4392, 0.1 ) }
    dend_11 { pt3dadd( 4.86347, -294.314, -43.3771, 0.1 ) }
    dend_11 { pt3dadd( 5.11807, -295.169, -43.1891, 0.1 ) }
    dend_11 { pt3dadd( 5.325, -295.92, -42.9878, 0.56 ) }
    dend_11 { pt3dadd( 5.42565, -296.324, -42.8671, 0.42 ) }
    dend_11 { pt3dadd( 5.57176, -297.138, -42.5543, 0.28 ) }
    dend_11 { pt3dadd( 5.61083, -297.524, -42.355, 0.14 ) }
    dend_11 { pt3dadd( 5.63275, -297.896, -42.1336, 0.1 ) }
    dend_11 { pt3dadd( 5.64328, -298.266, -41.9025, 0.1 ) }
    dend_11 { pt3dadd( 5.65631, -298.644, -41.69, 0.1 ) }
    dend_11 { pt3dadd( 5.68426, -299.444, -41.2564, 0.1 ) }
    dend_11 { pt3dadd( 5.72133, -300.243, -40.8726, 0.1 ) }
    dend_11 { pt3dadd( 5.73525, -300.639, -40.6909, 0.14 ) }
    dend_11 { pt3dadd( 5.74989, -301.041, -40.5264, 0.28 ) }
    dend_11 { pt3dadd( 5.75737, -301.243, -40.4449, 0.98 ) }
    dend_11 { pt3dadd( 5.77943, -301.651, -40.3005, 1.12 ) }
    dend_11 { pt3dadd( 5.80021, -302.057, -40.1644, 0.98 ) }
    dend_11 { pt3dadd( 5.81399, -302.518, -40.0028, 0.84 ) }
    dend_11 { pt3dadd( 5.81297, -302.91, -39.8129, 0.7 ) }
    dend_11 { pt3dadd( 5.79994, -303.683, -39.3773, 0.56 ) }
    dend_11 { pt3dadd( 5.78272, -304.038, -39.1412, 0.42 ) }
    dend_11 { pt3dadd( 5.73525, -304.777, -38.6035, 0.28 ) }
    dend_11 { pt3dadd( 5.71335, -305.123, -38.3438, 0.14 ) }
    dend_11 { pt3dadd( 5.68059, -305.839, -37.8182, 0.1 ) }
    dend_11 { pt3dadd( 5.6676, -306.19, -37.5772, 0.1 ) }
    dend_11 { pt3dadd( 5.64515, -306.964, -37.0888, 0.14 ) }
    dend_11 { pt3dadd( 5.63683, -307.332, -36.8596, 0.1 ) }
    dend_11 { pt3dadd( 5.64184, -307.715, -36.6523, 0.1 ) }
    dend_11 { pt3dadd( 5.64516, -308.094, -36.457, 0.14 ) }
    dend_11 { pt3dadd( 5.65207, -308.3, -36.3843, 0.28 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 92/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -24.0627, 76.3275, -7.13159, 0.28 ) }
    dend_70 { pt3dadd( -24.0137, 75.973, -6.99663, 0.28 ) }
    dend_70 { pt3dadd( -23.8738, 75.4442, -6.78048, 0.14 ) }
    dend_70 { pt3dadd( -23.6965, 74.9787, -6.59416, 0.1 ) }
    dend_70 { pt3dadd( -23.5874, 74.7506, -6.50768, 0.1 ) }
    dend_70 { pt3dadd( -23.1519, 73.9178, -6.2103, 0.1 ) }
    dend_70 { pt3dadd( -22.8908, 73.4184, -6.03199, 0.1 ) }
    dend_70 { pt3dadd( -22.5989, 72.9413, -5.84104, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_70 { pt3dadd( -22.2731, 72.4834, -5.6382, 0.1 ) }
    dend_70 { pt3dadd( -21.9282, 72.044, -5.44475, 0.1 ) }
    dend_70 { pt3dadd( -21.7603, 71.8483, -5.37468, 0.1 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 3/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -24.0627, 76.3275, -7.13159, 0.1 ) }
    dend_67 { pt3dadd( -24.4064, 76.5972, -7.49363, 0.1 ) }
    dend_67 { pt3dadd( -24.5706, 76.7365, -7.67419, 0.1 ) }
    dend_67 { pt3dadd( -24.9147, 77.0236, -8.02208, 0.1 ) }
    dend_67 { pt3dadd( -25.3849, 77.4238, -8.47281, 0.1 ) }
    dend_67 { pt3dadd( -25.6807, 77.6704, -8.70279, 0.1 ) }
    dend_67 { pt3dadd( -26.2213, 78.1104, -9.01683, 0.1 ) }
    dend_67 { pt3dadd( -26.5534, 78.3866, -9.15581, 0.1 ) }
    dend_67 { pt3dadd( -26.9897, 78.7331, -9.22306, 0.1 ) }
    dend_67 { pt3dadd( -27.1491, 78.853, -9.20237, 0.1 ) }
    dend_67 { pt3dadd( -27.8159, 79.3168, -8.99115, 0.1 ) }
    dend_67 { pt3dadd( -28.4096, 79.7006, -8.77222, 0.1 ) }
    dend_67 { pt3dadd( -28.4096, 79.7006, -8.77222, 0.1 ) }
    dend_67 { pt3dadd( -28.8731, 79.9793, -8.62284, 0.1 ) }
    dend_67 { pt3dadd( -29.2466, 80.2136, -8.57342, 0.1 ) }
    dend_67 { pt3dadd( -29.4852, 80.3714, -8.59906, 0.1 ) }
    dend_67 { pt3dadd( -29.9316, 80.6743, -8.75337, 0.1 ) }
    dend_67 { pt3dadd( -30.1505, 80.8256, -8.8519, 0.1 ) }
    dend_67 { pt3dadd( -30.4882, 81.0625, -9.01512, 0.1 ) }
    dend_67 { pt3dadd( -31.0549, 81.4733, -9.33147, 0.1 ) }
    dend_67 { pt3dadd( -31.3732, 81.7053, -9.53565, 0.1 ) }
    dend_67 { pt3dadd( -31.6789, 81.942, -9.7631, 0.1 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 22.197, -190.359, 0.446354, 0.84 ) }
    dend_32 { pt3dadd( 22.2997, -190.599, 0.584421, 0.84 ) }
    dend_32 { pt3dadd( 22.5127, -191.072, 0.839495, 0.98 ) }
    dend_32 { pt3dadd( 22.7325, -191.563, 1.07712, 0.84 ) }
    dend_32 { pt3dadd( 23.2603, -192.621, 1.45232, 0.7 ) }
    dend_32 { pt3dadd( 23.5449, -193.19, 1.59943, 0.56 ) }
    dend_32 { pt3dadd( 23.8347, -193.783, 1.70661, 0.42 ) }
    dend_32 { pt3dadd( 23.9579, -194.036, 1.72945, 0.56 ) }
    dend_32 { pt3dadd( 24.2101, -194.571, 1.72282, 0.7 ) }
    dend_32 { pt3dadd( 24.6703, -195.591, 1.59623, 0.56 ) }
    dend_32 { pt3dadd( 24.8213, -195.975, 1.53132, 0.84 ) }
    dend_32 { pt3dadd( 25.0078, -196.534, 1.48858, 0.84 ) }
    dend_32 { pt3dadd( 25.171, -197.099, 1.51295, 0.84 ) }
    dend_32 { pt3dadd( 25.3376, -197.655, 1.6079, 0.84 ) }
    dend_32 { pt3dadd( 25.3376, -197.655, 1.6079, 0.98 ) }
    dend_32 { pt3dadd( 25.6734, -198.624, 1.97709, 0.1 ) }
    dend_32 { pt3dadd( 25.8939, -199.205, 2.20115, 0.14 ) }
    dend_32 { pt3dadd( 26.0902, -199.716, 2.38654, 0.1 ) }
    dend_32 { pt3dadd( 26.3154, -200.31, 2.57075, 0.14 ) }
    dend_32 { pt3dadd( 26.5363, -200.916, 2.71348, 0.28 ) }
    dend_32 { pt3dadd( 26.6306, -201.19, 2.75532, 0.42 ) }
    dend_32 { pt3dadd( 26.7656, -201.575, 2.78107, 0.84 ) }
    dend_32 { pt3dadd( 26.9465, -202.136, 2.81426, 0.84 ) }
    dend_32 { pt3dadd( 27.1201, -202.697, 2.84553, 0.84 ) }
    dend_32 { pt3dadd( 27.2818, -203.262, 2.8735, 0.7 ) }
    dend_32 { pt3dadd( 27.4559, -203.826, 2.90483, 0.56 ) }
    dend_32 { pt3dadd( 27.5927, -204.22, 2.93079, 0.56 ) }
    dend_32 { pt3dadd( 27.6964, -204.493, 2.95117, 0.84 ) }
    dend_32 { pt3dadd( 27.9273, -205.026, 2.94885, 0.84 ) }
    dend_32 { pt3dadd( 28.1767, -205.557, 2.91226, 0.7 ) }
    dend_32 { pt3dadd( 28.4724, -206.136, 2.84577, 0.84 ) }
    dend_32 { pt3dadd( 28.7446, -206.656, 2.77025, 0.7 ) }
    dend_32 { pt3dadd( 29.0207, -207.169, 2.69066, 0.84 ) }
    dend_32 { pt3dadd( 29.6178, -208.243, 2.52626, 0.7 ) }
    dend_32 { pt3dadd( 29.7606, -208.498, 2.51, 0.84 ) }
    dend_32 { pt3dadd( 30.0752, -209.079, 2.52598, 0.7 ) }
    dend_32 { pt3dadd( 30.3362, -209.602, 2.58596, 0.84 ) }
    dend_32 { pt3dadd( 30.6088, -210.193, 2.7032, 0.7 ) }
    dend_32 { pt3dadd( 30.8276, -210.719, 2.84784, 0.56 ) }
    dend_32 { pt3dadd( 31.2333, -211.816, 3.24688, 0.7 ) }
    dend_32 { pt3dadd( 31.4188, -212.34, 3.44828, 0.84 ) }
    dend_32 { pt3dadd( 31.585, -212.862, 3.6621, 0.98 ) }
    dend_32 { pt3dadd( 31.7421, -213.384, 3.89071, 0.84 ) }
    dend_32 { pt3dadd( 31.8083, -213.645, 4.00477, 0.84 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.197, -190.359, 0.446354, 1.26 ) }
    dend_29 { pt3dadd( 22.0122, -190.912, 0.322728, 1.26 ) }
    dend_29 { pt3dadd( 21.851, -191.484, 0.210158, 1.12 ) }
    dend_29 { pt3dadd( 21.7719, -191.844, 0.150766, 0.98 ) }
    dend_29 { pt3dadd( 21.6763, -192.433, 0.0708065, 0.84 ) }
    dend_29 { pt3dadd( 21.6046, -193.02, 0.00313663, 0.7 ) }
    dend_29 { pt3dadd( 21.558, -193.398, -0.0101004, 0.56 ) }
    dend_29 { pt3dadd( 21.5211, -193.932, 0.0265079, 0.1 ) }
    dend_29 { pt3dadd( 21.5157, -194.464, 0.114087, 0.1 ) }
    dend_29 { pt3dadd( 21.542, -194.976, 0.237092, 0.1 ) }
    dend_29 { pt3dadd( 21.5747, -195.232, 0.316474, 0.1 ) }
    dend_29 { pt3dadd( 21.7487, -196.154, 0.64499, 0.1 ) }
    dend_29 { pt3dadd( 21.8313, -196.64, 0.857564, 0.1 ) }
    dend_29 { pt3dadd( 21.9057, -197.172, 1.11503, 0.1 ) }
    dend_29 { pt3dadd( 21.9541, -197.657, 1.34624, 0.1 ) }
    dend_29 { pt3dadd( 21.9971, -198.202, 1.58416, 0.1 ) }
    dend_29 { pt3dadd( 22.0111, -198.456, 1.67425, 0.1 ) }
    dend_29 { pt3dadd( 22.0588, -199.453, 1.93001, 0.28 ) }
    dend_29 { pt3dadd( 22.0557, -199.968, 2.03992, 0.14 ) }
    dend_29 { pt3dadd( 22.0316, -200.563, 2.13694, 0.28 ) }
    dend_29 { pt3dadd( 22.0076, -201.095, 2.20201, 0.42 ) }
    dend_29 { pt3dadd( 21.9853, -201.686, 2.24771, 0.56 ) }
    dend_29 { pt3dadd( 21.9986, -202.222, 2.27146, 0.42 ) }
    dend_29 { pt3dadd( 22.073, -202.82, 2.27785, 0.28 ) }
    dend_29 { pt3dadd( 22.1781, -203.345, 2.30373, 0.14 ) }
    dend_29 { pt3dadd( 22.2561, -203.602, 2.33003, 0.28 ) }
    dend_29 { pt3dadd( 22.3452, -203.844, 2.36271, 0.98 ) }
    dend_29 { pt3dadd( 22.5703, -204.397, 2.44838, 0.84 ) }
    dend_29 { pt3dadd( 22.7952, -204.943, 2.53442, 0.7 ) }
    dend_29 { pt3dadd( 23.0085, -205.501, 2.61382, 0.56 ) }
    dend_29 { pt3dadd( 23.1139, -205.857, 2.64883, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_29 { pt3dadd( 23.1735, -206.231, 2.69499, 0.1 ) }
    dend_29 { pt3dadd( 23.1844, -206.819, 2.76971, 0.14 ) }
    dend_29 { pt3dadd( 23.1278, -207.349, 2.83524, 0.28 ) }
    dend_29 { pt3dadd( 23.0176, -207.936, 2.91352, 0.42 ) }
    dend_29 { pt3dadd( 22.8717, -208.507, 2.99293, 0.28 ) }
    dend_29 { pt3dadd( 22.6323, -209.506, 3.08097, 0.14 ) }
    dend_29 { pt3dadd( 22.5339, -210.092, 3.10874, 0.1 ) }
    dend_29 { pt3dadd( 22.5339, -210.092, 3.10874, 0.14 ) }
    dend_29 { pt3dadd( 22.4983, -210.35, 3.1667, 0.14 ) }
    dend_29 { pt3dadd( 22.4446, -210.682, 3.3281, 0.14 ) }
    dend_29 { pt3dadd( 22.2466, -211.531, 3.99664, 0.28 ) }
    dend_29 { pt3dadd( 22.1431, -211.929, 4.34148, 0.28 ) }
    dend_29 { pt3dadd( 21.9244, -212.76, 5.0231, 0.42 ) }
    dend_29 { pt3dadd( 21.7349, -213.55, 5.5967, 0.56 ) }
    dend_29 { pt3dadd( 21.5288, -214.445, 6.1912, 0.42 ) }
    dend_29 { pt3dadd( 21.3581, -215.275, 6.71083, 0.28 ) }
    dend_29 { pt3dadd( 21.2623, -215.795, 7.00048, 0.14 ) }
    dend_29 { pt3dadd( 21.2363, -216.894, 7.24834, 0.1 ) }
    dend_29 { pt3dadd( 21.4331, -217.837, 7.00032, 0.14 ) }
    dend_29 { pt3dadd( 21.5057, -218.074, 6.89532, 0.56 ) }
    dend_29 { pt3dadd( 21.6816, -218.508, 6.6335, 0.42 ) }
    dend_29 { pt3dadd( 21.8746, -218.928, 6.35594, 0.28 ) }
    dend_29 { pt3dadd( 22.0679, -219.352, 6.09014, 0.28 ) }
    dend_29 { pt3dadd( 22.4497, -220.29, 5.59827, 0.14 ) }
    dend_29 { pt3dadd( 22.6088, -220.755, 5.38112, 0.1 ) }
    dend_29 { pt3dadd( 22.9117, -221.713, 4.9408, 0.1 ) }
    dend_29 { pt3dadd( 22.9706, -221.959, 4.8479, 0.14 ) }
    dend_29 { pt3dadd( 23.0275, -222.324, 4.75488, 0.28 ) }
    dend_29 { pt3dadd( 23.0566, -222.848, 4.70007, 0.14 ) }
    dend_29 { pt3dadd( 23.0427, -223.45, 4.73026, 0.1 ) }
    dend_29 { pt3dadd( 23.0125, -223.982, 4.79192, 0.14 ) }
    dend_29 { pt3dadd( 22.9336, -225.088, 4.98658, 0.1 ) }
    dend_29 { pt3dadd( 22.912, -225.616, 5.07923, 0.1 ) }
    dend_29 { pt3dadd( 22.9123, -226.21, 5.18218, 0.1 ) }
    dend_29 { pt3dadd( 22.9288, -226.73, 5.26613, 0.1 ) }
    dend_29 { pt3dadd( 22.9625, -227.264, 5.33808, 0.1 ) }
    dend_29 { pt3dadd( 23.0138, -227.796, 5.38383, 0.1 ) }
    dend_29 { pt3dadd( 23.0842, -228.33, 5.39155, 0.1 ) }
    dend_29 { pt3dadd( 23.1489, -228.863, 5.39641, 0.1 ) }
    dend_29 { pt3dadd( 23.1761, -229.131, 5.39614, 0.14 ) }
    dend_29 { pt3dadd( 23.2038, -229.503, 5.39064, 0.1 ) }
    dend_29 { pt3dadd( 23.2253, -230.038, 5.37328, 0.14 ) }
    dend_29 { pt3dadd( 23.2397, -230.642, 5.34871, 0.1 ) }
    dend_29 { pt3dadd( 23.2519, -231.181, 5.3265, 0.1 ) }
    dend_29 { pt3dadd( 23.2933, -231.771, 5.26753, 0.1 ) }
    dend_29 { pt3dadd( 23.3545, -232.302, 5.19421, 0.1 ) }
    dend_29 { pt3dadd( 23.4236, -232.889, 5.1268, 0.1 ) }
    dend_29 { pt3dadd( 23.4844, -233.423, 5.07667, 0.1 ) }
    dend_29 { pt3dadd( 23.5405, -233.955, 5.03907, 0.1 ) }
    dend_29 { pt3dadd( 23.6387, -235.048, 4.98777, 0.14 ) }
    dend_29 { pt3dadd( 23.6571, -235.314, 4.98159, 0.28 ) }
    dend_29 { pt3dadd( 23.682, -236.344, 4.96968, 0.7 ) }
    dend_29 { pt3dadd( 23.682, -236.874, 4.97431, 0.56 ) }
    dend_29 { pt3dadd( 23.6561, -237.478, 4.98356, 0.42 ) }
    dend_29 { pt3dadd( 23.6219, -238.016, 4.99927, 0.28 ) }
    dend_29 { pt3dadd( 23.5827, -238.609, 5.02821, 0.14 ) }
    dend_29 { pt3dadd( 23.5673, -239.211, 5.03388, 0.1 ) }
    dend_29 { pt3dadd( 23.5851, -239.747, 5.01466, 0.1 ) }
    dend_29 { pt3dadd( 23.6176, -240.339, 4.99995, 0.1 ) }
    dend_29 { pt3dadd( 23.6669, -240.874, 4.99689, 0.1 ) }
    dend_29 { pt3dadd( 23.7326, -241.406, 5.00228, 0.1 ) }
    dend_29 { pt3dadd( 23.7818, -241.671, 5.0134, 0.56 ) }
    dend_29 { pt3dadd( 23.9037, -242.195, 5.04796, 0.42 ) }
    dend_29 { pt3dadd( 24.0282, -242.706, 5.08452, 0.28 ) }
    dend_29 { pt3dadd( 24.1523, -243.227, 5.12032, 0.14 ) }
    dend_29 { pt3dadd( 24.265, -243.753, 5.15007, 0.14 ) }
    dend_29 { pt3dadd( 24.3659, -244.34, 5.17053, 0.28 ) }
    dend_29 { pt3dadd( 24.403, -244.607, 5.1754, 0.42 ) }
    dend_29 { pt3dadd( 24.4449, -244.986, 5.17677, 0.1 ) }
    dend_29 { pt3dadd( 24.4967, -245.579, 5.17187, 0.1 ) }
    dend_29 { pt3dadd( 24.5361, -246.116, 5.16354, 0.1 ) }
    dend_29 { pt3dadd( 24.5777, -246.719, 5.15294, 0.1 ) }
    dend_29 { pt3dadd( 24.6297, -247.256, 5.1511, 0.1 ) }
    dend_29 { pt3dadd( 24.6685, -247.511, 5.15747, 0.14 ) }
    dend_29 { pt3dadd( 24.7247, -247.774, 5.17223, 0.56 ) }
    dend_29 { pt3dadd( 24.8384, -248.295, 5.25307, 0.42 ) }
    dend_29 { pt3dadd( 24.9452, -248.807, 5.36927, 0.28 ) }
    dend_29 { pt3dadd( 25.0613, -249.371, 5.52606, 0.14 ) }
    dend_29 { pt3dadd( 25.1576, -249.879, 5.67788, 0.1 ) }
    dend_29 { pt3dadd( 25.2285, -250.377, 5.86349, 0.1 ) }
    dend_29 { pt3dadd( 25.3338, -251.385, 6.28896, 0.14 ) }
    dend_29 { pt3dadd( 25.3688, -251.864, 6.5066, 0.1 ) }
    dend_29 { pt3dadd( 25.3938, -252.353, 6.73188, 0.1 ) }
    dend_29 { pt3dadd( 25.404, -252.846, 6.94368, 0.1 ) }
    dend_29 { pt3dadd( 25.4257, -253.773, 7.30249, 0.56 ) }
    dend_29 { pt3dadd( 25.4643, -254.291, 7.43662, 0.7 ) }
    dend_29 { pt3dadd( 25.5194, -254.819, 7.52976, 0.56 ) }
    dend_29 { pt3dadd( 25.5766, -255.346, 7.61166, 0.42 ) }
    dend_29 { pt3dadd( 25.6485, -255.931, 7.68314, 0.28 ) }
    dend_29 { pt3dadd( 25.7175, -256.461, 7.71987, 0.14 ) }
    dend_29 { pt3dadd( 25.8789, -257.547, 7.73225, 0.28 ) }
    dend_29 { pt3dadd( 26.0312, -258.528, 7.676, 0.7 ) }
    dend_29 { pt3dadd( 26.1176, -259.048, 7.61978, 0.56 ) }
    dend_29 { pt3dadd( 26.2124, -259.571, 7.54671, 0.42 ) }
    dend_29 { pt3dadd( 26.3485, -260.143, 7.41712, 0.28 ) }
    dend_29 { pt3dadd( 26.4583, -260.655, 7.29853, 0.14 ) }
    dend_29 { pt3dadd( 26.6492, -261.738, 7.05328, 0.1 ) }
    dend_29 { pt3dadd( 26.7335, -262.251, 6.91096, 0.1 ) }
    dend_29 { pt3dadd( 26.8005, -262.766, 6.77321, 0.1 ) }
    dend_29 { pt3dadd( 26.9096, -263.826, 6.50756, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_29 { pt3dadd( 26.9713, -264.829, 6.29286, 0.1 ) }
    dend_29 { pt3dadd( 26.9708, -265.427, 6.20479, 0.1 ) }
    dend_29 { pt3dadd( 26.9254, -266.018, 6.17568, 0.1 ) }
    dend_29 { pt3dadd( 26.8984, -266.283, 6.16497, 0.1 ) }
    dend_29 { pt3dadd( 26.8984, -266.283, 6.16497, 0.1 ) }
    dend_29 { pt3dadd( 26.8911, -266.659, 6.10094, 0.1 ) }
    dend_29 { pt3dadd( 26.9374, -267.178, 5.9635, 0.1 ) }
    dend_29 { pt3dadd( 27.0193, -267.747, 5.8103, 0.1 ) }
    dend_29 { pt3dadd( 27.101, -268.261, 5.66994, 0.1 ) }
    dend_29 { pt3dadd( 27.2787, -269.343, 5.38895, 0.1 ) }
    dend_29 { pt3dadd( 27.3687, -269.858, 5.26849, 0.1 ) }
    dend_29 { pt3dadd( 27.4666, -270.369, 5.16535, 0.1 ) }
    dend_29 { pt3dadd( 27.5678, -270.889, 5.07962, 0.1 ) }
    dend_29 { pt3dadd( 27.6429, -271.26, 5.03972, 0.1 ) }
    dend_29 { pt3dadd( 27.7437, -271.789, 5.01781, 0.1 ) }
    dend_29 { pt3dadd( 27.8486, -272.315, 5.04361, 0.1 ) }
    dend_29 { pt3dadd( 27.9367, -272.831, 5.10366, 0.1 ) }
    dend_29 { pt3dadd( 28.0154, -273.357, 5.19593, 0.14 ) }
    dend_29 { pt3dadd( 28.0878, -273.875, 5.31225, 0.28 ) }
    dend_29 { pt3dadd( 28.1599, -274.393, 5.44638, 0.28 ) }
    dend_29 { pt3dadd( 28.2213, -274.966, 5.59885, 0.42 ) }
    dend_29 { pt3dadd( 28.3063, -275.959, 5.85901, 0.56 ) }
    dend_29 { pt3dadd( 28.3442, -276.469, 5.98505, 0.42 ) }
    dend_29 { pt3dadd( 28.3825, -276.995, 6.10116, 0.28 ) }
    dend_29 { pt3dadd( 28.4234, -277.52, 6.2007, 0.14 ) }
    dend_29 { pt3dadd( 28.4363, -278.112, 6.31431, 0.1 ) }
    dend_29 { pt3dadd( 28.4205, -278.632, 6.40033, 0.1 ) }
    dend_29 { pt3dadd( 28.3707, -279.159, 6.5021, 0.1 ) }
    dend_29 { pt3dadd( 28.2633, -279.668, 6.63378, 0.14 ) }
    dend_29 { pt3dadd( 28.1875, -279.916, 6.70692, 0.28 ) }
    dend_29 { pt3dadd( 27.7988, -280.927, 7.0209, 0.1 ) }
    dend_29 { pt3dadd( 27.5685, -281.459, 7.19201, 0.1 ) }
    dend_29 { pt3dadd( 27.1471, -282.356, 7.4728, 0.1 ) }
    dend_29 { pt3dadd( 26.9067, -282.878, 7.62243, 0.1 ) }
    dend_29 { pt3dadd( 26.7036, -283.437, 7.7311, 0.1 ) }
    dend_29 { pt3dadd( 26.638, -283.803, 7.75445, 0.1 ) }
    dend_29 { pt3dadd( 26.6559, -284.071, 7.73128, 0.14 ) }
    dend_29 { pt3dadd( 26.7118, -284.329, 7.69207, 0.56 ) }
    dend_29 { pt3dadd( 26.8775, -284.831, 7.58794, 0.42 ) }
    dend_29 { pt3dadd( 27.2628, -285.87, 7.37722, 0.28 ) }
    dend_29 { pt3dadd( 27.4425, -286.366, 7.28104, 0.14 ) }
    dend_29 { pt3dadd( 27.5986, -286.874, 7.18892, 0.1 ) }
    dend_29 { pt3dadd( 27.7389, -287.377, 7.06632, 0.14 ) }
    dend_29 { pt3dadd( 27.8005, -287.63, 6.99493, 0.28 ) }
    dend_29 { pt3dadd( 27.8692, -287.981, 6.89109, 0.7 ) }
    dend_29 { pt3dadd( 27.949, -288.56, 6.73622, 0.56 ) }
    dend_29 { pt3dadd( 28.0736, -289.105, 6.53767, 0.42 ) }
    dend_29 { pt3dadd( 28.3462, -289.988, 6.17144, 0.28 ) }
    dend_29 { pt3dadd( 28.4328, -290.221, 6.07374, 0.1 ) }
    dend_29 { pt3dadd( 28.6288, -290.69, 5.89239, 0.1 ) }
    dend_29 { pt3dadd( 28.8516, -291.154, 5.74125, 0.1 ) }
    dend_29 { pt3dadd( 29.321, -292.161, 5.52925, 0.1 ) }
    dend_29 { pt3dadd( 29.5165, -292.658, 5.4871, 0.1 ) }
    dend_29 { pt3dadd( 29.6563, -293.176, 5.50379, 0.1 ) }
    dend_29 { pt3dadd( 29.7474, -293.697, 5.53866, 0.1 ) }
    dend_29 { pt3dadd( 29.7982, -294.288, 5.60018, 0.14 ) }
    dend_29 { pt3dadd( 29.8052, -295.308, 5.74669, 0.1 ) }
    dend_29 { pt3dadd( 29.7655, -295.899, 5.85667, 0.1 ) }
    dend_29 { pt3dadd( 29.731, -296.484, 5.9601, 0.1 ) }
    dend_29 { pt3dadd( 29.7118, -297.079, 6.05299, 0.1 ) }
    dend_29 { pt3dadd( 29.7302, -297.611, 6.12425, 0.1 ) }
    dend_29 { pt3dadd( 29.7612, -297.868, 6.14999, 0.1 ) }
    dend_29 { pt3dadd( 29.838, -298.124, 6.15184, 0.1 ) }
    dend_29 { pt3dadd( 30.0787, -298.684, 6.14403, 0.1 ) }
    dend_29 { pt3dadd( 30.3211, -299.152, 6.1206, 0.1 ) }
    dend_29 { pt3dadd( 30.6181, -299.674, 6.07339, 0.1 ) }
    dend_29 { pt3dadd( 30.8787, -300.139, 6.01344, 0.1 ) }
    dend_29 { pt3dadd( 31.3508, -301.045, 5.88058, 0.1 ) }
    dend_29 { pt3dadd( 31.3508, -301.045, 5.88058, 0.14 ) }
    dend_29 { pt3dadd( 31.4909, -301.401, 5.82776, 0.28 ) }
    dend_29 { pt3dadd( 31.6618, -301.909, 5.77003, 0.28 ) }
    dend_29 { pt3dadd( 31.8032, -302.425, 5.73548, 0.14 ) }
    dend_29 { pt3dadd( 31.9269, -302.95, 5.73222, 0.1 ) }
    dend_29 { pt3dadd( 32.0311, -303.466, 5.75815, 0.1 ) }
    dend_29 { pt3dadd( 32.1187, -303.995, 5.81638, 0.1 ) }
    dend_29 { pt3dadd( 32.1839, -304.521, 5.89726, 0.1 ) }
    dend_29 { pt3dadd( 32.2228, -305.05, 5.99339, 0.1 ) }
    dend_29 { pt3dadd( 32.2329, -305.577, 6.09438, 0.1 ) }
    dend_29 { pt3dadd( 32.223, -306.104, 6.19666, 0.1 ) }
    dend_29 { pt3dadd( 32.1838, -307.112, 6.38858, 0.1 ) }
    dend_29 { pt3dadd( 32.1582, -307.705, 6.49512, 0.1 ) }
    dend_29 { pt3dadd( 32.1416, -308.234, 6.58133, 0.1 ) }
    dend_29 { pt3dadd( 32.1491, -308.826, 6.62113, 0.1 ) }
    dend_29 { pt3dadd( 32.1874, -309.361, 6.6079, 0.1 ) }
    dend_29 { pt3dadd( 32.2624, -309.892, 6.55134, 0.1 ) }
    dend_29 { pt3dadd( 32.3738, -310.409, 6.46146, 0.1 ) }
    dend_29 { pt3dadd( 32.5122, -310.902, 6.33708, 0.1 ) }
    dend_29 { pt3dadd( 32.8076, -311.956, 6.05253, 0.1 ) }
    dend_29 { pt3dadd( 32.9487, -312.456, 5.91792, 0.1 ) }
    dend_29 { pt3dadd( 33.0811, -312.962, 5.78859, 0.1 ) }
    dend_29 { pt3dadd( 33.2017, -313.473, 5.67844, 0.1 ) }
    dend_29 { pt3dadd( 33.3755, -314.403, 5.53349, 0.1 ) }
    dend_29 { pt3dadd( 33.5179, -315.418, 5.46243, 0.1 ) }
    dend_29 { pt3dadd( 33.5725, -315.952, 5.47946, 0.1 ) }
    dend_29 { pt3dadd( 33.613, -316.489, 5.49721, 0.1 ) }
    dend_29 { pt3dadd( 33.6364, -317.025, 5.51249, 0.1 ) }
    dend_29 { pt3dadd( 33.6341, -317.615, 5.57184, 0.1 ) }
    dend_29 { pt3dadd( 33.6212, -318.145, 5.65349, 0.1 ) }
    dend_29 { pt3dadd( 33.621, -318.679, 5.72655, 0.1 ) }
    dend_29 { pt3dadd( 33.6138, -319.266, 5.82338, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_29 { pt3dadd( 33.6042, -319.859, 5.93519, 0.1 ) }
    dend_29 { pt3dadd( 33.5775, -320.934, 6.15263, 0.1 ) }
    dend_29 { pt3dadd( 33.5614, -321.462, 6.2595, 0.1 ) }
    dend_29 { pt3dadd( 33.5348, -321.981, 6.35016, 0.1 ) }
    dend_29 { pt3dadd( 33.4968, -322.514, 6.42174, 0.1 ) }
    dend_29 { pt3dadd( 33.4893, -322.781, 6.42631, 0.1 ) }
    dend_29 { pt3dadd( 33.474, -323.161, 6.40563, 0.1 ) }
    dend_29 { pt3dadd( 33.4478, -323.748, 6.32443, 0.1 ) }
    dend_29 { pt3dadd( 33.4084, -324.346, 6.24578, 0.1 ) }
    dend_29 { pt3dadd( 33.3697, -324.725, 6.23332, 0.1 ) }
    dend_29 { pt3dadd( 33.2542, -325.81, 6.29942, 0.1 ) }
    dend_29 { pt3dadd( 33.1335, -326.808, 6.52455, 0.1 ) }
    dend_29 { pt3dadd( 33.0787, -327.313, 6.70424, 0.1 ) }
    dend_29 { pt3dadd( 33.0341, -327.801, 6.92292, 0.1 ) }
    dend_29 { pt3dadd( 32.9674, -328.781, 7.41318, 0.1 ) }
    dend_29 { pt3dadd( 32.9365, -329.25, 7.65656, 0.1 ) }
    dend_29 { pt3dadd( 32.8578, -330.226, 8.15181, 0.1 ) }
    dend_29 { pt3dadd( 32.8324, -330.727, 8.349, 0.1 ) }
    dend_29 { pt3dadd( 32.7927, -331.237, 8.51078, 0.1 ) }
    dend_29 { pt3dadd( 32.758, -331.77, 8.58561, 0.14 ) }
    dend_29 { pt3dadd( 32.7275, -332.147, 8.58367, 0.1 ) }
    dend_29 { pt3dadd( 32.6638, -332.744, 8.53777, 0.1 ) }
    dend_29 { pt3dadd( 32.6037, -333.33, 8.45065, 0.1 ) }
    dend_29 { pt3dadd( 32.5624, -333.705, 8.3994, 0.1 ) }
    dend_29 { pt3dadd( 32.4583, -334.825, 8.27472, 0.1 ) }
    dend_29 { pt3dadd( 32.4048, -335.848, 8.19891, 0.1 ) }
    dend_29 { pt3dadd( 32.434, -336.382, 8.15219, 0.1 ) }
    dend_29 { pt3dadd( 32.4862, -336.915, 8.13255, 0.1 ) }
    dend_29 { pt3dadd( 32.5605, -337.449, 8.14171, 0.1 ) }
    dend_29 { pt3dadd( 32.6183, -337.978, 8.21186, 0.1 ) }
    dend_29 { pt3dadd( 32.6575, -338.493, 8.33111, 0.1 ) }
    dend_29 { pt3dadd( 32.7257, -339.498, 8.53942, 0.1 ) }
    dend_29 { pt3dadd( 32.7504, -340.493, 8.79446, 0.28 ) }
    dend_29 { pt3dadd( 32.7465, -341.01, 8.94679, 0.28 ) }
    dend_29 { pt3dadd( 32.72, -342.089, 9.28934, 0.14 ) }
    dend_29 { pt3dadd( 32.716, -342.604, 9.41436, 0.1 ) }
    dend_29 { pt3dadd( 32.7313, -343.2, 9.50995, 0.14 ) }
    dend_29 { pt3dadd( 32.7502, -343.468, 9.53153, 0.7 ) }
    dend_29 { pt3dadd( 32.8697, -343.985, 9.45305, 0.56 ) }
    dend_29 { pt3dadd( 33.0189, -344.481, 9.30314, 0.56 ) }
    dend_29 { pt3dadd( 33.3564, -345.473, 8.88714, 0.42 ) }
    dend_29 { pt3dadd( 33.5011, -345.946, 8.67364, 0.28 ) }
    dend_29 { pt3dadd( 33.6238, -346.42, 8.45343, 0.14 ) }
    dend_29 { pt3dadd( 33.8021, -347.407, 8.00421, 0.1 ) }
    dend_29 { pt3dadd( 33.8385, -347.755, 7.85333, 0.1 ) }
    dend_29 { pt3dadd( 33.8484, -348.311, 7.64307, 0.1 ) }
    dend_29 { pt3dadd( 33.8069, -348.889, 7.47614, 0.1 ) }
    dend_29 { pt3dadd( 33.7566, -349.25, 7.37844, 0.14 ) }
    dend_29 { pt3dadd( 33.6675, -349.822, 7.21014, 0.1 ) }
    dend_29 { pt3dadd( 33.5698, -350.387, 7.04994, 0.1 ) }
    dend_29 { pt3dadd( 33.4796, -350.951, 6.85853, 0.14 ) }
    dend_29 { pt3dadd( 33.3912, -351.497, 6.63843, 0.14 ) }
    dend_29 { pt3dadd( 33.327, -351.838, 6.48104, 0.28 ) }
    dend_29 { pt3dadd( 33.1774, -352.681, 5.9756, 0.42 ) }
    dend_29 { pt3dadd( 33.1774, -352.681, 5.9756, 0.56 ) }
    dend_29 { pt3dadd( 33.0899, -353.153, 5.62169, 0.56 ) }
    dend_29 { pt3dadd( 33.0284, -353.454, 5.39587, 0.42 ) }
    dend_29 { pt3dadd( 32.8999, -354.065, 4.96492, 0.28 ) }
    dend_29 { pt3dadd( 32.6887, -354.918, 4.42711, 0.42 ) }
    dend_29 { pt3dadd( 32.5422, -355.428, 4.16008, 0.28 ) }
    dend_29 { pt3dadd( 32.4222, -355.946, 3.87414, 0.14 ) }
    dend_29 { pt3dadd( 32.3705, -356.279, 3.69459, 0.1 ) }
    dend_29 { pt3dadd( 32.3469, -356.518, 3.57371, 0.14 ) }
    dend_29 { pt3dadd( 32.3207, -357.062, 3.32927, 0.7 ) }
    dend_29 { pt3dadd( 32.2866, -357.616, 3.11437, 0.56 ) }
    dend_29 { pt3dadd( 32.2067, -358.659, 2.68436, 0.42 ) }
    dend_29 { pt3dadd( 32.1569, -359.151, 2.47614, 0.28 ) }
    dend_29 { pt3dadd( 32.1022, -359.628, 2.23787, 0.14 ) }
    dend_29 { pt3dadd( 32.0679, -359.862, 2.10862, 0.28 ) }
    dend_29 { pt3dadd( 31.9815, -360.376, 1.81762, 0.28 ) }
    dend_29 { pt3dadd( 31.8607, -360.881, 1.52548, 0.14 ) }
    dend_29 { pt3dadd( 31.7598, -361.205, 1.35068, 0.1 ) }
    dend_29 { pt3dadd( 31.3909, -362.216, 0.773463, 0.1 ) }
    dend_29 { pt3dadd( 31.2703, -362.531, 0.596964, 0.1 ) }
    dend_29 { pt3dadd( 31.0898, -363.033, 0.336839, 0.1 ) }
    dend_29 { pt3dadd( 30.9831, -363.369, 0.179932, 0.1 ) }
    dend_29 { pt3dadd( 30.8239, -363.907, -0.0416231, 0.1 ) }
    dend_29 { pt3dadd( 30.656, -364.448, -0.226829, 0.1 ) }
    dend_29 { pt3dadd( 30.4711, -365.0, -0.350457, 0.14 ) }
    dend_29 { pt3dadd( 30.3921, -365.252, -0.404103, 0.28 ) }
    dend_29 { pt3dadd( 30.3921, -365.252, -0.404103, 0.84 ) }
    dend_29 { pt3dadd( 30.3921, -365.252, -0.404103, 0.84 ) }
    dend_29 { pt3dadd( 30.3118, -365.62, -0.464561, 0.28 ) }
    dend_29 { pt3dadd( 30.2046, -366.208, -0.550422, 0.14 ) }
    dend_29 { pt3dadd( 30.1006, -366.786, -0.634102, 0.1 ) }
    dend_29 { pt3dadd( 29.9831, -367.372, -0.725068, 0.14 ) }
    dend_29 { pt3dadd( 29.8597, -367.945, -0.818374, 0.1 ) }
    dend_29 { pt3dadd( 29.7996, -368.204, -0.862772, 0.1 ) }
    dend_29 { pt3dadd( 29.6494, -368.78, -0.969912, 0.14 ) }
    dend_29 { pt3dadd( 29.4811, -369.337, -1.0853, 0.28 ) }
    dend_29 { pt3dadd( 29.2349, -370.036, -1.24799, 0.14 ) }
    dend_29 { pt3dadd( 29.0974, -370.38, -1.33638, 0.1 ) }
    dend_29 { pt3dadd( 28.9518, -370.72, -1.42875, 0.1 ) }
    dend_29 { pt3dadd( 28.6508, -371.385, -1.61758, 0.1 ) }
    dend_29 { pt3dadd( 28.4962, -371.725, -1.71452, 0.1 ) }
    dend_29 { pt3dadd( 28.2049, -372.396, -1.89875, 0.1 ) }
    dend_29 { pt3dadd( 28.0697, -372.742, -1.98604, 0.1 ) }
    dend_29 { pt3dadd( 27.8712, -373.287, -2.11627, 0.1 ) }
    dend_29 { pt3dadd( 27.7539, -373.641, -2.19487, 0.1 ) }
    dend_29 { pt3dadd( 27.5837, -374.198, -2.3112, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_29 { pt3dadd( 27.4208, -374.769, -2.4246, 0.1 ) }
    dend_29 { pt3dadd( 27.2716, -375.333, -2.53064, 0.1 ) }
    dend_29 { pt3dadd( 27.1781, -375.701, -2.59784, 0.1 ) }
    dend_29 { pt3dadd( 27.0356, -376.278, -2.70109, 0.1 ) }
    dend_29 { pt3dadd( 26.9531, -376.636, -2.76214, 0.1 ) }
    dend_29 { pt3dadd( 26.8253, -377.219, -2.85822, 0.1 ) }
    dend_29 { pt3dadd( 26.7072, -377.794, -2.9489, 0.14 ) }
    dend_29 { pt3dadd( 26.6151, -378.377, -3.07608, 0.1 ) }
    dend_29 { pt3dadd( 26.5675, -378.953, -3.21275, 0.1 ) }
    dend_29 { pt3dadd( 26.5549, -379.214, -3.27744, 0.1 ) }
    dend_29 { pt3dadd( 26.5347, -379.8, -3.4266, 0.1 ) }
    dend_29 { pt3dadd( 26.5172, -380.374, -3.57604, 0.1 ) }
    dend_29 { pt3dadd( 26.4782, -381.467, -3.86651, 0.1 ) }
    dend_29 { pt3dadd( 26.3803, -383.603, -4.43436, 0.1 ) }
    dend_29 { pt3dadd( 26.3362, -384.174, -4.59067, 0.1 ) }
    dend_29 { pt3dadd( 26.289, -384.542, -4.69516, 0.1 ) }
    dend_29 { pt3dadd( 26.1783, -385.102, -4.85892, 0.1 ) }
    dend_29 { pt3dadd( 26.0697, -385.452, -4.96422, 0.14 ) }
    dend_29 { pt3dadd( 25.8349, -385.975, -5.15357, 0.14 ) }
    dend_29 { pt3dadd( 25.5837, -386.389, -5.38569, 0.28 ) }
    dend_29 { pt3dadd( 25.2945, -386.83, -5.66284, 0.14 ) }
    dend_29 { pt3dadd( 24.9977, -387.262, -5.96175, 0.1 ) }
    dend_29 { pt3dadd( 24.6979, -387.665, -6.28252, 0.1 ) }
    dend_29 { pt3dadd( 24.1908, -388.336, -6.87786, 0.1 ) }
    dend_29 { pt3dadd( 24.0658, -388.503, -7.04871, 0.1 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 25/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -31.6789, 81.942, -9.7631, 0.14 ) }
    dend_69 { pt3dadd( -32.2982, 82.3787, -9.00276, 0.14 ) }
    dend_69 { pt3dadd( -32.5943, 82.5795, -8.56214, 0.1 ) }
    dend_69 { pt3dadd( -32.7899, 82.7164, -8.28301, 0.14 ) }
    dend_69 { pt3dadd( -33.1066, 82.9485, -7.87328, 0.28 ) }
    dend_69 { pt3dadd( -33.6823, 83.3888, -7.21242, 0.14 ) }
    dend_69 { pt3dadd( -34.822, 84.2955, -6.05854, 0.1 ) }
    dend_69 { pt3dadd( -34.822, 84.2955, -6.05854, 0.14 ) }
    dend_69 { pt3dadd( -35.177, 84.5838, -5.72237, 0.28 ) }
    dend_69 { pt3dadd( -35.5602, 84.8988, -5.44673, 0.14 ) }
    dend_69 { pt3dadd( -36.0041, 85.2449, -5.33548, 0.1 ) }
    dend_69 { pt3dadd( -36.4207, 85.5198, -5.61961, 0.1 ) }
    dend_69 { pt3dadd( -36.6287, 85.6275, -5.89675, 0.1 ) }
    dend_69 { pt3dadd( -36.8742, 85.7172, -6.40054, 0.14 ) }
    dend_69 { pt3dadd( -37.2648, 85.8025, -7.25859, 0.1 ) }
    dend_69 { pt3dadd( -37.6837, 85.8343, -8.21486, 0.1 ) }
    dend_69 { pt3dadd( -38.3683, 85.8128, -9.92295, 0.1 ) }
    dend_69 { pt3dadd( -38.6749, 85.7746, -10.8177, 0.1 ) }
    dend_69 { pt3dadd( -39.131, 85.6964, -12.5973, 0.1 ) }
    dend_69 { pt3dadd( -39.252, 85.7049, -14.4866, 0.1 ) }
    dend_69 { pt3dadd( -39.623, 85.5162, -13.5967, 0.1 ) }
    dend_69 { pt3dadd( -40.6723, 85.0256, -12.103, 0.14 ) }
    dend_69 { pt3dadd( -40.8206, 84.9577, -11.9082, 0.28 ) }
    dend_69 { pt3dadd( -41.1446, 84.8213, -11.464, 0.84 ) }
    dend_69 { pt3dadd( -41.4305, 84.7171, -11.0508, 0.7 ) }
    dend_69 { pt3dadd( -41.889, 84.6727, -10.8304, 0.56 ) }
    dend_69 { pt3dadd( -42.7623, 84.9762, -11.0337, 0.42 ) }
    dend_69 { pt3dadd( -42.9557, 85.0949, -11.1534, 0.28 ) }
    dend_69 { pt3dadd( -43.3529, 85.4354, -11.3734, 0.1 ) }
    dend_69 { pt3dadd( -43.6726, 85.8247, -11.4713, 0.1 ) }
    dend_69 { pt3dadd( -43.9756, 86.2962, -11.3819, 0.1 ) }
    dend_69 { pt3dadd( -44.1982, 86.6867, -11.1394, 0.1 ) }
    dend_69 { pt3dadd( -44.5638, 87.2638, -10.5366, 0.14 ) }
    dend_69 { pt3dadd( -45.0183, 87.8643, -9.76693, 0.56 ) }
    dend_69 { pt3dadd( -45.4532, 88.3586, -8.95605, 0.42 ) }
    dend_69 { pt3dadd( -45.9108, 88.7904, -8.12608, 0.28 ) }
    dend_69 { pt3dadd( -46.3577, 89.1422, -7.3702, 0.42 ) }
    dend_69 { pt3dadd( -46.9183, 89.4963, -6.52075, 0.56 ) }
    dend_69 { pt3dadd( -47.332, 89.7043, -5.97236, 0.42 ) }
    dend_69 { pt3dadd( -48.0126, 89.9563, -5.31265, 0.56 ) }
    dend_69 { pt3dadd( -48.4906, 90.0651, -5.02886, 0.7 ) }
    dend_69 { pt3dadd( -49.0416, 90.1257, -4.88077, 0.84 ) }
    dend_69 { pt3dadd( -49.5515, 90.136, -4.90584, 0.7 ) }
    dend_69 { pt3dadd( -50.0441, 90.105, -5.04627, 0.84 ) }
    dend_69 { pt3dadd( -50.9122, 89.9779, -5.48177, 0.7 ) }
    dend_69 { pt3dadd( -51.338, 89.8941, -5.75562, 0.56 ) }
    dend_69 { pt3dadd( -51.729, 89.7914, -6.06762, 0.42 ) }
    dend_69 { pt3dadd( -52.4983, 89.5687, -6.74014, 0.28 ) }
    dend_69 { pt3dadd( -52.8617, 89.4589, -7.08169, 0.14 ) }
    dend_69 { pt3dadd( -53.5848, 89.2226, -7.79294, 0.1 ) }
    dend_69 { pt3dadd( -53.94, 89.0884, -8.13439, 0.1 ) }
    dend_69 { pt3dadd( -54.577, 88.8386, -8.83704, 0.14 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 77/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -31.6789, 81.942, -9.7631, 0.1 ) }
    dend_68 { pt3dadd( -30.8953, 82.1173, -8.39112, 0.1 ) }
    dend_68 { pt3dadd( -30.4093, 82.2133, -7.63701, 0.1 ) }
    dend_68 { pt3dadd( -29.9357, 82.2906, -6.97496, 0.1 ) }
    dend_68 { pt3dadd( -28.9112, 82.4002, -5.68577, 0.1 ) }
    dend_68 { pt3dadd( -28.6252, 82.4164, -5.3603, 0.1 ) }
    dend_68 { pt3dadd( -28.4684, 82.4156, -5.2037, 0.1 ) }
    dend_68 { pt3dadd( -28.0509, 82.3641, -4.93889, 0.1 ) }
    dend_68 { pt3dadd( -27.7712, 82.2967, -4.83301, 0.28 ) }
    dend_68 { pt3dadd( -27.3068, 82.1313, -4.78246, 0.14 ) }
    dend_68 { pt3dadd( -27.0333, 81.9964, -4.81374, 0.1 ) }
    dend_68 { pt3dadd( -26.4926, 81.677, -4.87242, 0.1 ) }
    dend_68 { pt3dadd( -26.4926, 81.677, -4.87242, 0.14 ) }
    dend_68 { pt3dadd( -26.4926, 81.677, -4.87242, 0.28 ) }
    dend_68 { pt3dadd( -26.2413, 81.5034, -4.89818, 0.14 ) }
    dend_68 { pt3dadd( -25.823, 81.2413, -4.94267, 0.1 ) }
    dend_68 { pt3dadd( -25.5625, 81.0905, -5.00064, 0.1 ) }
    dend_68 { pt3dadd( -25.1339, 80.8782, -5.13048, 0.1 ) }
    dend_68 { pt3dadd( -24.7205, 80.6927, -5.3154, 0.1 ) }
    dend_68 { pt3dadd( -24.3004, 80.5161, -5.51002, 0.1 ) }
    dend_68 { pt3dadd( -23.9208, 80.3651, -5.66173, 0.1 ) }
    dend_68 { pt3dadd( -23.0786, 80.0307, -5.87479, 0.1 ) }
    dend_68 { pt3dadd( -22.6775, 79.848, -5.89367, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_68 { pt3dadd( -21.9398, 79.46, -5.75702, 0.1 ) }
    dend_68 { pt3dadd( -21.2883, 79.0388, -5.4985, 0.1 ) }
    dend_68 { pt3dadd( -20.5809, 78.521, -5.18771, 0.1 ) }
    dend_68 { pt3dadd( -19.9301, 77.9701, -4.89271, 0.1 ) }
    dend_68 { pt3dadd( -19.5838, 77.6498, -4.7593, 0.1 ) }
    dend_68 { pt3dadd( -19.3613, 77.4388, -4.69436, 0.1 ) }
    dend_68 { pt3dadd( -18.9901, 77.1229, -4.64117, 0.1 ) }
    dend_68 { pt3dadd( -18.2966, 76.6407, -4.70679, 0.1 ) }
    dend_68 { pt3dadd( -17.8673, 76.4228, -4.79947, 0.1 ) }
    dend_68 { pt3dadd( -17.0491, 76.2059, -4.85946, 0.1 ) }
    dend_68 { pt3dadd( -16.2451, 76.1278, -4.73219, 0.1 ) }
    dend_68 { pt3dadd( -15.8191, 76.1143, -4.61052, 0.1 ) }
    dend_68 { pt3dadd( -14.9723, 76.1182, -4.3099, 0.1 ) }
    dend_68 { pt3dadd( -14.5593, 76.1215, -4.14886, 0.1 ) }
    dend_68 { pt3dadd( -13.7147, 76.1212, -3.83144, 0.1 ) }
    dend_68 { pt3dadd( -13.1304, 76.0967, -3.62545, 0.1 ) }
    dend_68 { pt3dadd( -12.8273, 76.0664, -3.53676, 0.1 ) }
    dend_68 { pt3dadd( -12.3533, 76.0012, -3.40766, 0.1 ) }
    dend_68 { pt3dadd( -11.8799, 75.9209, -3.31353, 0.1 ) }
    dend_68 { pt3dadd( -11.5748, 75.8721, -3.26038, 0.14 ) }
    dend_68 { pt3dadd( -11.2721, 75.8381, -3.22614, 0.28 ) }
    dend_68 { pt3dadd( -10.4615, 75.7974, -3.12642, 0.28 ) }
    dend_68 { pt3dadd( -10.0239, 75.7916, -3.07145, 0.14 ) }
    dend_68 { pt3dadd( -9.53195, 75.8028, -3.012, 0.1 ) }
    dend_68 { pt3dadd( -9.09349, 75.8324, -2.97358, 0.1 ) }
    dend_68 { pt3dadd( -8.66064, 75.8812, -2.96215, 0.1 ) }
    dend_68 { pt3dadd( -8.34725, 75.9276, -2.97938, 0.14 ) }
    dend_68 { pt3dadd( -8.34725, 75.9276, -2.97938, 0.28 ) }
    dend_68 { pt3dadd( -8.12963, 75.9538, -3.01228, 0.28 ) }
    dend_68 { pt3dadd( -7.69678, 76.0079, -3.07783, 0.28 ) }
    dend_68 { pt3dadd( -7.26037, 76.0501, -3.14318, 0.14 ) }
    dend_68 { pt3dadd( -6.83347, 76.0905, -3.20705, 0.1 ) }
    dend_68 { pt3dadd( -6.34591, 76.141, -3.28027, 0.1 ) }
    dend_68 { pt3dadd( -5.85629, 76.1855, -3.35341, 0.1 ) }
    dend_68 { pt3dadd( -5.42613, 76.2138, -3.41702, 0.1 ) }
    dend_68 { pt3dadd( -4.93443, 76.2266, -3.48857, 0.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 31.8083, -213.645, 4.00477, 0.84 ) }
    dend_34 { pt3dadd( 31.6304, -214.326, 4.39225, 0.84 ) }
    dend_34 { pt3dadd( 31.4649, -215.087, 4.75202, 0.84 ) }
    dend_34 { pt3dadd( 31.4075, -215.523, 4.92532, 0.98 ) }
    dend_34 { pt3dadd( 31.3822, -215.962, 5.07129, 0.84 ) }
    dend_34 { pt3dadd( 31.3862, -216.252, 5.15684, 0.7 ) }
    dend_34 { pt3dadd( 31.4086, -216.657, 5.26862, 0.7 ) }
    dend_34 { pt3dadd( 31.446, -216.857, 5.27858, 0.56 ) }
    dend_34 { pt3dadd( 31.5894, -217.294, 5.17398, 0.56 ) }
    dend_34 { pt3dadd( 31.7518, -217.577, 4.92301, 0.7 ) }
    dend_34 { pt3dadd( 31.8751, -217.758, 4.71567, 0.84 ) }
    dend_34 { pt3dadd( 31.8751, -217.758, 4.71567, 0.98 ) }
    dend_34 { pt3dadd( 32.1897, -218.232, 4.18575, 1.12 ) }
    dend_34 { pt3dadd( 32.4911, -218.726, 3.6711, 0.98 ) }
    dend_34 { pt3dadd( 33.0415, -219.691, 2.58342, 0.84 ) }
    dend_34 { pt3dadd( 33.0389, -220.323, 3.03495, 0.84 ) }
    dend_34 { pt3dadd( 32.989, -221.027, 3.52272, 0.7 ) }
    dend_34 { pt3dadd( 32.9241, -221.734, 4.00354, 0.56 ) }
    dend_34 { pt3dadd( 32.9044, -221.904, 4.12675, 0.42 ) }
    dend_34 { pt3dadd( 32.8177, -222.534, 4.6158, 0.1 ) }
    dend_34 { pt3dadd( 32.765, -222.911, 4.89434, 0.14 ) }
    dend_34 { pt3dadd( 32.7369, -223.35, 5.06574, 0.28 ) }
    dend_34 { pt3dadd( 32.7491, -223.762, 5.0706, 0.42 ) }
    dend_34 { pt3dadd( 32.7756, -223.962, 5.01173, 0.56 ) }
    dend_34 { pt3dadd( 32.8167, -224.15, 4.92549, 0.84 ) }
    dend_34 { pt3dadd( 33.0418, -224.83, 4.45352, 0.84 ) }
    dend_34 { pt3dadd( 33.1685, -225.141, 4.19885, 0.84 ) }
    dend_34 { pt3dadd( 33.4074, -225.67, 3.72742, 0.84 ) }
    dend_34 { pt3dadd( 33.4745, -225.813, 3.58766, 0.84 ) }
    dend_34 { pt3dadd( 33.6075, -226.089, 3.30202, 0.84 ) }
    dend_34 { pt3dadd( 33.8784, -226.653, 2.72013, 0.7 ) }
    dend_34 { pt3dadd( 33.9455, -226.803, 2.58858, 0.56 ) }
    dend_34 { pt3dadd( 34.2181, -227.43, 2.07103, 0.56 ) }
    dend_34 { pt3dadd( 34.329, -227.759, 1.845, 0.7 ) }
    dend_34 { pt3dadd( 34.4269, -228.093, 1.61177, 0.84 ) }
    dend_34 { pt3dadd( 34.4269, -228.093, 1.61177, 0.84 ) }
    dend_34 { pt3dadd( 34.4716, -228.28, 1.52492, 0.98 ) }
    dend_34 { pt3dadd( 34.5653, -228.64, 1.33263, 1.12 ) }
    dend_34 { pt3dadd( 34.7583, -229.401, 0.932729, 0.98 ) }
    dend_34 { pt3dadd( 34.8514, -229.767, 0.74569, 0.84 ) }
    dend_34 { pt3dadd( 34.9448, -230.133, 0.563325, 0.84 ) }
    dend_34 { pt3dadd( 35.0394, -230.498, 0.375641, 0.7 ) }
    dend_34 { pt3dadd( 35.2165, -231.161, 0.012064, 0.56 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 31.8083, -213.645, 4.00477, 1.26 ) }
    dend_33 { pt3dadd( 32.0529, -213.714, 3.90006, 1.26 ) }
    dend_33 { pt3dadd( 32.7788, -213.916, 3.58933, 1.4 ) }
    dend_33 { pt3dadd( 33.018, -213.983, 3.48692, 1.26 ) }
    dend_33 { pt3dadd( 33.7444, -214.186, 3.17594, 1.12 ) }
    dend_33 { pt3dadd( 33.9837, -214.253, 3.07353, 0.7 ) }
    dend_33 { pt3dadd( 34.2283, -214.321, 2.96882, 0.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 24.0658, -388.503, -7.04871, 0.1 ) }
    dend_31 { pt3dadd( 23.6339, -387.912, -6.73845, 0.1 ) }
    dend_31 { pt3dadd( 23.225, -387.259, -6.54227, 0.1 ) }
    dend_31 { pt3dadd( 23.0335, -386.953, -6.4504, 0.1 ) }
    dend_31 { pt3dadd( 22.8155, -386.605, -6.34579, 0.1 ) }
    dend_31 { pt3dadd( 22.6249, -386.301, -6.25438, 0.1 ) }
    dend_31 { pt3dadd( 22.4301, -385.99, -6.1609, 0.1 ) }
    dend_31 { pt3dadd( 22.1441, -385.353, -6.18944, 0.1 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 24.0658, -388.503, -7.04871, 0.1 ) }
    dend_30 { pt3dadd( 23.9344, -389.057, -7.37114, 0.1 ) }
    dend_30 { pt3dadd( 23.7962, -389.629, -7.65605, 0.1 ) }
    dend_30 { pt3dadd( 23.5558, -390.63, -8.08275, 0.1 ) }
    dend_30 { pt3dadd( 23.3919, -391.221, -8.31272, 0.1 ) }
    dend_30 { pt3dadd( 23.2201, -391.806, -8.51872, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_30 { pt3dadd( 23.1192, -392.179, -8.66687, 0.1 ) }
    dend_30 { pt3dadd( 22.9755, -392.761, -8.90507, 0.1 ) }
    dend_30 { pt3dadd( 22.8265, -393.353, -9.14066, 0.1 ) }
    dend_30 { pt3dadd( 22.6754, -393.946, -9.3484, 0.1 ) }
    dend_30 { pt3dadd( 22.5145, -394.556, -9.52771, 0.1 ) }
    dend_30 { pt3dadd( 22.2347, -395.569, -9.76964, 0.1 ) }
    dend_30 { pt3dadd( 22.1273, -395.953, -9.83687, 0.1 ) }
    dend_30 { pt3dadd( 21.9272, -396.577, -9.85765, 0.1 ) }
    dend_30 { pt3dadd( 21.7015, -397.188, -9.8002, 0.1 ) }
    dend_30 { pt3dadd( 21.2604, -398.308, -9.59018, 0.14 ) }
    dend_30 { pt3dadd( 21.1039, -398.679, -9.4941, 0.28 ) }
    dend_30 { pt3dadd( 20.8635, -399.251, -9.31585, 0.14 ) }
    dend_30 { pt3dadd( 20.4751, -400.252, -9.00675, 0.1 ) }
    dend_30 { pt3dadd( 20.1893, -400.999, -8.83424, 0.1 ) }
    dend_30 { pt3dadd( 19.9789, -401.614, -8.75038, 0.1 ) }
    dend_30 { pt3dadd( 19.9016, -401.895, -8.73453, 0.14 ) }
    dend_30 { pt3dadd( 19.7797, -402.457, -8.72802, 0.28 ) }
    dend_30 { pt3dadd( 19.7257, -402.741, -8.73105, 0.42 ) }
    dend_30 { pt3dadd( 19.4486, -404.462, -8.77898, 0.83 ) }
    dend_30 { pt3dadd( 19.155, -406.706, -8.79606, 0.28 ) }
    dend_30 { pt3dadd( 19.0046, -408.157, -8.78843, 0.55 ) }
    dend_30 { pt3dadd( 18.6387, -411.881, -8.72859, 0.55 ) }
    dend_30 { pt3dadd( 18.5023, -413.425, -8.67284, 0.28 ) }
    dend_30 { pt3dadd( 18.4092, -414.889, -8.59559, 0.55 ) }
    dend_30 { pt3dadd( 18.3508, -416.975, -8.49732, 0.28 ) }
    dend_30 { pt3dadd( 18.3657, -418.41, -8.44617, 0.55 ) }
    dend_30 { pt3dadd( 18.423, -419.678, -8.42405, 0.28 ) }
    dend_30 { pt3dadd( 18.5828, -421.544, -8.41599, 0.55 ) }
    dend_30 { pt3dadd( 18.7925, -423.837, -8.42758, 0.55 ) }
    dend_30 { pt3dadd( 18.9472, -425.894, -8.46984, 0.28 ) }
    dend_30 { pt3dadd( 19.134, -428.211, -8.56111, 0.55 ) }
    dend_30 { pt3dadd( 19.2962, -430.317, -8.66506, 0.28 ) }
    dend_30 { pt3dadd( 19.4574, -432.632, -8.80672, 0.55 ) }
    dend_30 { pt3dadd( 19.4975, -433.821, -8.89539, 0.28 ) }
    dend_30 { pt3dadd( 19.4019, -436.378, -9.08068, 0.55 ) }
    dend_30 { pt3dadd( 19.2025, -437.958, -9.16354, 0.28 ) }
    dend_30 { pt3dadd( 18.9284, -439.352, -9.29804, 0.55 ) }
    dend_30 { pt3dadd( 18.5962, -440.522, -9.45413, 0.28 ) }
    dend_30 { pt3dadd( 18.2845, -441.507, -9.61261, 0.55 ) }
    dend_30 { pt3dadd( 17.8237, -442.889, -9.86468, 0.28 ) }
    dend_30 { pt3dadd( 16.6637, -446.019, -10.4732, 0.55 ) }
    dend_30 { pt3dadd( 15.1104, -449.848, -11.2451, 0.55 ) }
    dend_30 { pt3dadd( 14.2866, -451.986, -11.6845, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 35.2165, -231.161, 0.012064, 0.7 ) }
    dend_36 { pt3dadd( 34.9329, -231.833, 0.00726366, 0.7 ) }
    dend_36 { pt3dadd( 34.767, -232.268, 0.00470972, 0.84 ) }
    dend_36 { pt3dadd( 34.4961, -233.15, 0.00153827, 0.7 ) }
    dend_36 { pt3dadd( 34.3883, -233.589, -0.0523934, 0.56 ) }
    dend_36 { pt3dadd( 34.2644, -234.222, -0.172468, 0.7 ) }
    dend_36 { pt3dadd( 34.2197, -234.541, -0.243623, 0.56 ) }
    dend_36 { pt3dadd( 34.2147, -234.991, -0.36392, 0.56 ) }
    dend_36 { pt3dadd( 34.2716, -235.599, -0.604193, 0.56 ) }
    dend_36 { pt3dadd( 34.4593, -236.674, -1.14081, 0.7 ) }
    dend_36 { pt3dadd( 34.5115, -236.955, -1.27433, 0.84 ) }
    dend_36 { pt3dadd( 34.6048, -237.556, -1.52836, 0.7 ) }
    dend_36 { pt3dadd( 34.6892, -238.174, -1.73188, 0.56 ) }
    dend_36 { pt3dadd( 34.8261, -239.481, -2.00907, 0.42 ) }
    dend_36 { pt3dadd( 34.8261, -239.481, -2.00907, 0.56 ) }
    dend_36 { pt3dadd( 34.8801, -240.739, -1.95958, 0.56 ) }
    dend_36 { pt3dadd( 34.8867, -241.458, -1.8455, 0.7 ) }
    dend_36 { pt3dadd( 34.8666, -242.093, -1.68193, 0.56 ) }
    dend_36 { pt3dadd( 34.8367, -242.793, -1.45432, 0.7 ) }
    dend_36 { pt3dadd( 34.8057, -243.399, -1.23538, 0.84 ) }
    dend_36 { pt3dadd( 34.7736, -244.028, -1.04295, 0.84 ) }
    dend_36 { pt3dadd( 34.7314, -245.254, -0.75435, 0.84 ) }
    dend_36 { pt3dadd( 34.7152, -245.963, -0.591574, 0.7 ) }
    dend_36 { pt3dadd( 34.7074, -246.608, -0.456214, 0.56 ) }
    dend_36 { pt3dadd( 34.7193, -247.336, -0.326907, 0.56 ) }
    dend_36 { pt3dadd( 34.7493, -248.055, -0.23183, 0.56 ) }
    dend_36 { pt3dadd( 34.8021, -248.707, -0.182547, 0.56 ) }
    dend_36 { pt3dadd( 34.8884, -249.358, -0.130808, 0.7 ) }
    dend_36 { pt3dadd( 34.9828, -249.993, 0.00493049, 0.84 ) }
    dend_36 { pt3dadd( 35.0787, -250.609, 0.208762, 0.7 ) }
    dend_36 { pt3dadd( 35.1695, -251.2, 0.460372, 0.56 ) }
    dend_36 { pt3dadd( 35.2528, -251.783, 0.74821, 0.56 ) }
    dend_36 { pt3dadd( 35.3713, -252.968, 1.37004, 0.42 ) }
    dend_36 { pt3dadd( 35.4487, -254.081, 1.95683, 0.56 ) }
    dend_36 { pt3dadd( 35.4677, -254.668, 2.24836, 0.7 ) }
    dend_36 { pt3dadd( 35.4641, -255.087, 2.42869, 0.56 ) }
    dend_36 { pt3dadd( 35.4342, -255.709, 2.63466, 0.42 ) }
    dend_36 { pt3dadd( 35.3722, -256.427, 2.78634, 0.56 ) }
    dend_36 { pt3dadd( 35.3003, -257.068, 2.78352, 0.7 ) }
    dend_36 { pt3dadd( 35.2081, -257.793, 2.68984, 0.56 ) }
    dend_36 { pt3dadd( 35.0967, -258.502, 2.56777, 0.56 ) }
    dend_36 { pt3dadd( 34.9806, -259.215, 2.42308, 0.56 ) }
    dend_36 { pt3dadd( 34.9021, -259.663, 2.31977, 0.7 ) }
    dend_36 { pt3dadd( 34.6735, -260.998, 2.06111, 0.56 ) }
    dend_36 { pt3dadd( 34.5618, -261.719, 1.95954, 0.7 ) }
    dend_36 { pt3dadd( 34.5047, -262.444, 1.97042, 0.56 ) }
    dend_36 { pt3dadd( 34.5127, -262.767, 2.03829, 0.7 ) }
    dend_36 { pt3dadd( 34.5599, -263.071, 2.15637, 0.7 ) }
    dend_36 { pt3dadd( 34.8577, -264.122, 2.68931, 0.56 ) }
    dend_36 { pt3dadd( 35.0612, -264.662, 3.00806, 0.56 ) }
    dend_36 { pt3dadd( 35.5752, -265.812, 3.56972, 0.42 ) }
    dend_36 { pt3dadd( 35.8457, -266.375, 3.76954, 0.56 ) }
    dend_36 { pt3dadd( 36.1581, -267.027, 3.91137, 0.56 ) }
    dend_36 { pt3dadd( 36.446, -267.695, 3.95979, 0.56 ) }
    dend_36 { pt3dadd( 36.6696, -268.313, 3.90449, 0.42 ) }
    dend_36 { pt3dadd( 36.9985, -269.594, 3.67586, 0.56 ) }
    dend_36 { pt3dadd( 37.0817, -270.232, 3.55081, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_36 { pt3dadd( 37.0797, -270.549, 3.51874, 0.56 ) }
    dend_36 { pt3dadd( 36.9898, -271.281, 3.52231, 0.56 ) }
    dend_36 { pt3dadd( 36.9101, -271.727, 3.56903, 0.7 ) }
    dend_36 { pt3dadd( 36.774, -272.44, 3.71104, 0.56 ) }
    dend_36 { pt3dadd( 36.5582, -273.632, 4.05638, 0.56 ) }
    dend_36 { pt3dadd( 36.4657, -274.324, 4.25277, 0.42 ) }
    dend_36 { pt3dadd( 36.4323, -274.959, 4.41611, 0.28 ) }
    dend_36 { pt3dadd( 36.467, -275.602, 4.55628, 0.28 ) }
    dend_36 { pt3dadd( 36.5085, -275.922, 4.60814, 0.42 ) }
    dend_36 { pt3dadd( 36.5709, -276.244, 4.63775, 0.56 ) }
    dend_36 { pt3dadd( 36.7235, -276.882, 4.64623, 0.56 ) }
    dend_36 { pt3dadd( 36.8878, -277.509, 4.655, 0.56 ) }
    dend_36 { pt3dadd( 37.0546, -278.143, 4.6639, 0.56 ) }
    dend_36 { pt3dadd( 37.2221, -278.781, 4.67284, 0.7 ) }
    dend_36 { pt3dadd( 37.3888, -279.415, 4.68173, 0.56 ) }
    dend_36 { pt3dadd( 37.5563, -280.053, 4.69067, 0.56 ) }
    dend_36 { pt3dadd( 37.7323, -280.672, 4.65692, 0.7 ) }
    dend_36 { pt3dadd( 37.9107, -281.303, 4.58447, 0.7 ) }
    dend_36 { pt3dadd( 38.072, -281.919, 4.43018, 0.7 ) }
    dend_36 { pt3dadd( 38.2165, -282.521, 4.21155, 0.56 ) }
    dend_36 { pt3dadd( 38.3482, -283.111, 3.94954, 0.56 ) }
    dend_36 { pt3dadd( 38.5801, -284.22, 3.40722, 0.56 ) }
    dend_36 { pt3dadd( 38.6635, -284.641, 3.22523, 0.84 ) }
    dend_36 { pt3dadd( 38.9067, -285.92, 2.7755, 0.84 ) }
    dend_36 { pt3dadd( 39.0209, -286.544, 2.60621, 0.7 ) }
    dend_36 { pt3dadd( 39.1368, -287.185, 2.50845, 0.7 ) }
    dend_36 { pt3dadd( 39.2559, -287.83, 2.50382, 0.7 ) }
    dend_36 { pt3dadd( 39.5101, -289.138, 2.67789, 0.84 ) }
    dend_36 { pt3dadd( 39.6543, -289.755, 2.79686, 0.7 ) }
    dend_36 { pt3dadd( 39.6543, -289.755, 2.79686, 0.84 ) }
    dend_36 { pt3dadd( 39.8118, -290.373, 2.95047, 0.56 ) }
    dend_36 { pt3dadd( 39.9873, -290.996, 3.07431, 0.56 ) }
    dend_36 { pt3dadd( 40.1792, -291.619, 3.14738, 0.42 ) }
    dend_36 { pt3dadd( 40.4026, -292.239, 3.15794, 0.56 ) }
    dend_36 { pt3dadd( 40.4026, -292.239, 3.15794, 0.56 ) }
    dend_36 { pt3dadd( 40.5277, -292.539, 3.19152, 0.56 ) }
    dend_36 { pt3dadd( 40.8174, -293.203, 3.326, 0.56 ) }
    dend_36 { pt3dadd( 41.0731, -293.786, 3.48389, 0.56 ) }
    dend_36 { pt3dadd( 41.3333, -294.446, 3.68456, 0.56 ) }
    dend_36 { pt3dadd( 41.4374, -294.741, 3.77801, 0.7 ) }
    dend_36 { pt3dadd( 41.8108, -295.842, 4.12442, 0.7 ) }
    dend_36 { pt3dadd( 42.0146, -296.438, 4.30779, 0.56 ) }
    dend_36 { pt3dadd( 42.2273, -297.037, 4.48493, 0.42 ) }
    dend_36 { pt3dadd( 42.5038, -297.7, 4.65699, 0.28 ) }
    dend_36 { pt3dadd( 42.6391, -297.995, 4.7162, 0.14 ) }
    dend_36 { pt3dadd( 42.8423, -298.411, 4.76773, 0.7 ) }
    dend_36 { pt3dadd( 43.1558, -299.069, 4.7813, 0.7 ) }
    dend_36 { pt3dadd( 43.3374, -299.499, 4.78944, 0.56 ) }
    dend_36 { pt3dadd( 43.5703, -300.19, 4.80071, 0.42 ) }
    dend_36 { pt3dadd( 43.6405, -300.512, 4.80478, 0.56 ) }
    dend_36 { pt3dadd( 43.6716, -300.977, 4.80849, 0.84 ) }
    dend_36 { pt3dadd( 43.6218, -301.699, 4.87914, 0.7 ) }
    dend_36 { pt3dadd( 43.5181, -302.42, 4.99354, 0.7 ) }
    dend_36 { pt3dadd( 43.4381, -302.876, 5.08365, 0.7 ) }
    dend_36 { pt3dadd( 43.3287, -303.576, 5.24273, 0.56 ) }
    dend_36 { pt3dadd( 43.2605, -304.291, 5.41783, 0.7 ) }
    dend_36 { pt3dadd( 43.2537, -305.623, 5.76705, 0.84 ) }
    dend_36 { pt3dadd( 43.3058, -306.253, 5.94092, 0.7 ) }
    dend_36 { pt3dadd( 43.3596, -306.567, 6.02745, 0.56 ) }
    dend_36 { pt3dadd( 43.5539, -307.248, 6.19896, 0.42 ) }
    dend_36 { pt3dadd( 43.8058, -307.845, 6.32046, 0.28 ) }
    dend_36 { pt3dadd( 44.0364, -308.25, 6.33082, 0.28 ) }
    dend_36 { pt3dadd( 44.2228, -308.514, 6.28403, 1.12 ) }
    dend_36 { pt3dadd( 44.4169, -308.777, 6.24391, 0.7 ) }
    dend_36 { pt3dadd( 44.839, -309.368, 6.17726, 0.56 ) }
    dend_36 { pt3dadd( 45.2278, -309.993, 6.13317, 0.42 ) }
    dend_36 { pt3dadd( 45.818, -311.101, 6.10748, 0.28 ) }
    dend_36 { pt3dadd( 46.0022, -311.529, 6.11579, 0.42 ) }
    dend_36 { pt3dadd( 46.3982, -312.724, 6.17957, 0.56 ) }
    dend_36 { pt3dadd( 46.5538, -313.359, 6.23106, 0.56 ) }
    dend_36 { pt3dadd( 46.6749, -314.074, 6.24698, 0.42 ) }
    dend_36 { pt3dadd( 46.7379, -314.726, 6.28843, 0.42 ) }
    dend_36 { pt3dadd( 46.7644, -315.382, 6.3531, 0.28 ) }
    dend_36 { pt3dadd( 46.7639, -316.12, 6.3892, 0.28 ) }
    dend_36 { pt3dadd( 46.7636, -316.779, 6.37998, 0.28 ) }
    dend_36 { pt3dadd( 46.7527, -317.991, 6.38009, 0.42 ) }
    dend_36 { pt3dadd( 46.7568, -319.251, 6.39896, 0.42 ) }
    dend_36 { pt3dadd( 46.7508, -319.988, 6.42018, 0.28 ) }
    dend_36 { pt3dadd( 46.7516, -320.715, 6.45096, 0.42 ) }
    dend_36 { pt3dadd( 46.758, -321.373, 6.4868, 0.28 ) }
    dend_36 { pt3dadd( 46.7699, -322.028, 6.52911, 0.42 ) }
    dend_36 { pt3dadd( 46.7953, -322.681, 6.57857, 0.56 ) }
    dend_36 { pt3dadd( 46.8358, -323.406, 6.58411, 0.56 ) }
    dend_36 { pt3dadd( 46.8797, -324.06, 6.58932, 0.42 ) }
    dend_36 { pt3dadd( 46.9196, -324.796, 6.59489, 0.28 ) }
    dend_36 { pt3dadd( 46.9422, -325.441, 6.59939, 0.28 ) }
    dend_36 { pt3dadd( 46.9533, -325.77, 6.60168, 0.14 ) }
    dend_36 { pt3dadd( 46.9763, -326.236, 6.60514, 0.56 ) }
    dend_36 { pt3dadd( 47.0306, -326.889, 6.61067, 0.42 ) }
    dend_36 { pt3dadd( 47.1084, -327.611, 6.61733, 0.56 ) }
    dend_36 { pt3dadd( 47.1878, -328.262, 6.62363, 0.56 ) }
    dend_36 { pt3dadd( 47.2577, -328.917, 6.62965, 0.42 ) }
    dend_36 { pt3dadd( 47.3273, -329.57, 6.63566, 0.28 ) }
    dend_36 { pt3dadd( 47.4048, -330.223, 6.59854, 0.14 ) }
    dend_36 { pt3dadd( 47.4788, -330.871, 6.52512, 0.1 ) }
    dend_36 { pt3dadd( 47.5629, -331.588, 6.45104, 0.14 ) }
    dend_36 { pt3dadd( 47.6402, -332.32, 6.38775, 0.1 ) }
    dend_36 { pt3dadd( 47.7069, -332.96, 6.34832, 0.1 ) }
    dend_36 { pt3dadd( 47.8478, -334.168, 6.31346, 0.1 ) }
    dend_36 { pt3dadd( 47.8478, -334.168, 6.31346, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_36 { pt3dadd( 48.0699, -335.362, 6.37271, 0.1 ) }
    dend_36 { pt3dadd( 48.22, -335.998, 6.4274, 0.14 ) }
    dend_36 { pt3dadd( 48.3849, -336.632, 6.49934, 0.1 ) }
    dend_36 { pt3dadd( 48.5481, -337.262, 6.58189, 0.14 ) }
    dend_36 { pt3dadd( 48.7113, -337.895, 6.67403, 0.28 ) }
    dend_36 { pt3dadd( 48.8613, -338.519, 6.72902, 0.42 ) }
    dend_36 { pt3dadd( 48.9933, -339.165, 6.73691, 0.28 ) }
    dend_36 { pt3dadd( 49.0902, -339.814, 6.74373, 0.28 ) }
    dend_36 { pt3dadd( 49.1434, -340.468, 6.74923, 0.42 ) }
    dend_36 { pt3dadd( 49.1527, -340.797, 6.75146, 0.56 ) }
    dend_36 { pt3dadd( 49.1438, -341.253, 6.75387, 0.42 ) }
    dend_36 { pt3dadd( 49.0864, -341.99, 6.75645, 0.28 ) }
    dend_36 { pt3dadd( 49.0017, -342.722, 6.75815, 0.14 ) }
    dend_36 { pt3dadd( 48.9056, -343.443, 6.75944, 0.1 ) }
    dend_36 { pt3dadd( 48.8638, -343.769, 6.7892, 0.14 ) }
    dend_36 { pt3dadd( 48.8638, -343.769, 6.7892, 0.28 ) }
    dend_36 { pt3dadd( 48.8607, -344.22, 6.90767, 0.56 ) }
    dend_36 { pt3dadd( 48.884, -344.831, 7.11243, 0.56 ) }
    dend_36 { pt3dadd( 48.9104, -345.133, 7.24086, 0.7 ) }
    dend_36 { pt3dadd( 49.049, -346.207, 7.79374, 0.56 ) }
    dend_36 { pt3dadd( 49.1286, -346.773, 8.11717, 0.42 ) }
    dend_36 { pt3dadd( 49.1754, -347.049, 8.29025, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 22/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 35.2165, -231.161, 0.012064, 2.38 ) }
    dend_35 { pt3dadd( 35.4738, -231.229, -0.0311832, 2.38 ) }
    dend_35 { pt3dadd( 36.0357, -231.406, -0.157545, 2.24 ) }
    dend_35 { pt3dadd( 36.5759, -231.639, -0.296262, 2.1 ) }
    dend_35 { pt3dadd( 37.0795, -231.927, -0.422258, 1.96 ) }
    dend_35 { pt3dadd( 37.8664, -232.506, -0.608791, 1.82 ) }
    dend_35 { pt3dadd( 37.8664, -232.506, -0.608791, 1.68 ) }
    dend_35 { pt3dadd( 38.0417, -232.692, -0.685513, 0.1 ) }
    dend_35 { pt3dadd( 38.3536, -233.101, -0.845552, 0.1 ) }
    dend_35 { pt3dadd( 38.6744, -233.578, -1.00482, 0.1 ) }
    dend_35 { pt3dadd( 38.9626, -234.019, -1.12136, 0.1 ) }
    dend_35 { pt3dadd( 39.5954, -234.938, -1.28346, 0.1 ) }
    dend_35 { pt3dadd( 39.9481, -235.413, -1.35805, 0.1 ) }
    dend_35 { pt3dadd( 40.2851, -235.83, -1.41158, 0.1 ) }
    dend_35 { pt3dadd( 40.6797, -236.275, -1.45068, 0.1 ) }
    dend_35 { pt3dadd( 40.9407, -236.553, -1.456, 0.14 ) }
    dend_35 { pt3dadd( 41.2029, -236.817, -1.43407, 0.28 ) }
    dend_35 { pt3dadd( 41.4782, -237.087, -1.4106, 0.7 ) }
    dend_35 { pt3dadd( 41.9099, -237.498, -1.41236, 0.56 ) }
    dend_35 { pt3dadd( 42.183, -237.759, -1.46397, 0.42 ) }
    dend_35 { pt3dadd( 42.5924, -238.151, -1.65, 0.28 ) }
    dend_35 { pt3dadd( 42.9844, -238.531, -1.90518, 0.14 ) }
    dend_35 { pt3dadd( 43.6876, -239.244, -2.42315, 0.1 ) }
    dend_35 { pt3dadd( 43.8471, -239.418, -2.55367, 0.14 ) }
    dend_35 { pt3dadd( 44.4745, -240.131, -3.10291, 0.1 ) }
    dend_35 { pt3dadd( 45.0429, -240.81, -3.62949, 0.14 ) }
    dend_35 { pt3dadd( 45.0429, -240.81, -3.62949, 0.28 ) }
    dend_35 { pt3dadd( 45.574, -241.542, -4.04326, 0.28 ) }
    dend_35 { pt3dadd( 45.8544, -241.979, -4.18013, 0.42 ) }
    dend_35 { pt3dadd( 46.059, -242.293, -4.24799, 0.56 ) }
    dend_35 { pt3dadd( 46.059, -242.293, -4.24799, 0.7 ) }
    dend_35 { pt3dadd( 46.2076, -242.502, -4.32336, 0.84 ) }
    dend_35 { pt3dadd( 46.553, -242.948, -4.53497, 0.7 ) }
    dend_35 { pt3dadd( 47.2036, -243.714, -4.9759, 0.56 ) }
    dend_35 { pt3dadd( 47.5704, -244.109, -5.24541, 0.42 ) }
    dend_35 { pt3dadd( 48.2875, -244.816, -5.75364, 0.28 ) }
    dend_35 { pt3dadd( 48.4675, -244.98, -5.86819, 0.42 ) }
    dend_35 { pt3dadd( 48.7267, -245.192, -6.03224, 0.7 ) }
    dend_35 { pt3dadd( 49.0094, -245.4, -6.19327, 0.56 ) }
    dend_35 { pt3dadd( 49.8864, -245.985, -6.5938, 0.42 ) }
    dend_35 { pt3dadd( 50.3717, -246.289, -6.78199, 0.28 ) }
    dend_35 { pt3dadd( 50.867, -246.588, -6.9263, 0.14 ) }
    dend_35 { pt3dadd( 51.7295, -247.11, -7.13901, 0.28 ) }
    dend_35 { pt3dadd( 52.3711, -247.497, -7.25842, 0.42 ) }
    dend_35 { pt3dadd( 52.6941, -247.696, -7.29172, 0.28 ) }
    dend_35 { pt3dadd( 53.3308, -248.1, -7.28588, 0.14 ) }
    dend_35 { pt3dadd( 53.6558, -248.308, -7.26671, 0.28 ) }
    dend_35 { pt3dadd( 54.1477, -248.628, -7.16264, 0.42 ) }
    dend_35 { pt3dadd( 54.6116, -248.954, -6.98853, 0.28 ) }
    dend_35 { pt3dadd( 55.0687, -249.291, -6.7858, 0.14 ) }
    dend_35 { pt3dadd( 55.3498, -249.503, -6.64937, 0.28 ) }
    dend_35 { pt3dadd( 55.7925, -249.842, -6.42001, 0.14 ) }
    dend_35 { pt3dadd( 56.6292, -250.46, -5.98467, 0.14 ) }
    dend_35 { pt3dadd( 57.0877, -250.775, -5.75259, 0.1 ) }
    dend_35 { pt3dadd( 57.3764, -250.966, -5.61359, 0.1 ) }
    dend_35 { pt3dadd( 57.9853, -251.349, -5.34739, 0.1 ) }
    dend_35 { pt3dadd( 58.2873, -251.535, -5.23247, 0.14 ) }
    dend_35 { pt3dadd( 58.7889, -251.836, -5.08071, 0.1 ) }
    dend_35 { pt3dadd( 59.2978, -252.121, -4.97201, 0.14 ) }
    dend_35 { pt3dadd( 59.6232, -252.307, -4.90258, 0.28 ) }
    dend_35 { pt3dadd( 60.1213, -252.617, -4.79686, 0.14 ) }
    dend_35 { pt3dadd( 60.4325, -252.827, -4.73113, 0.1 ) }
    dend_35 { pt3dadd( 61.0193, -253.274, -4.55191, 0.14 ) }
    dend_35 { pt3dadd( 61.2949, -253.514, -4.44344, 0.14 ) }
    dend_35 { pt3dadd( 61.7062, -253.901, -4.25207, 0.28 ) }
    dend_35 { pt3dadd( 62.1096, -254.297, -4.04408, 0.14 ) }
    dend_35 { pt3dadd( 62.3559, -254.549, -3.90857, 0.1 ) }
    dend_35 { pt3dadd( 63.0922, -255.304, -3.49829, 0.14 ) }
    dend_35 { pt3dadd( 63.4645, -255.697, -3.24814, 0.28 ) }
    dend_35 { pt3dadd( 63.6939, -255.949, -3.07831, 0.14 ) }
    dend_35 { pt3dadd( 64.0312, -256.333, -2.77109, 0.1 ) }
    dend_35 { pt3dadd( 64.3545, -256.713, -2.44462, 0.1 ) }
    dend_35 { pt3dadd( 64.6571, -257.092, -2.08374, 0.1 ) }
    dend_35 { pt3dadd( 65.2026, -257.798, -1.39397, 0.14 ) }
    dend_35 { pt3dadd( 65.4502, -258.129, -1.04793, 0.28 ) }
    dend_35 { pt3dadd( 65.9109, -258.763, -0.38345, 0.28 ) }
    dend_35 { pt3dadd( 66.1825, -259.14, 9.23152E-4, 0.14 ) }
    dend_35 { pt3dadd( 66.7077, -259.86, 0.691746, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_35 { pt3dadd( 67.004, -260.259, 1.02104, 0.1 ) }
    dend_35 { pt3dadd( 67.2198, -260.523, 1.19179, 0.14 ) }
    dend_35 { pt3dadd( 67.5866, -260.936, 1.41636, 0.28 ) }
    dend_35 { pt3dadd( 67.9852, -261.365, 1.58441, 0.14 ) }
    dend_35 { pt3dadd( 68.2327, -261.632, 1.66622, 0.1 ) }
    dend_35 { pt3dadd( 68.6406, -262.068, 1.7489, 0.1 ) }
    dend_35 { pt3dadd( 69.0166, -262.516, 1.86593, 0.1 ) }
    dend_35 { pt3dadd( 69.2252, -262.819, 1.96515, 0.1 ) }
    dend_35 { pt3dadd( 69.2252, -262.819, 1.96515, 0.14 ) }
    dend_35 { pt3dadd( 69.3889, -263.293, 2.15635, 0.84 ) }
    dend_35 { pt3dadd( 69.3889, -263.293, 2.15635, 0.7 ) }
    dend_35 { pt3dadd( 69.5271, -264.246, 2.52307, 0.1 ) }
    dend_35 { pt3dadd( 69.58, -264.742, 2.69395, 0.1 ) }
    dend_35 { pt3dadd( 69.6365, -265.257, 2.84264, 0.1 ) }
    dend_35 { pt3dadd( 69.7228, -265.772, 2.96607, 0.1 ) }
    dend_35 { pt3dadd( 69.7855, -266.029, 3.01642, 0.1 ) }
    dend_35 { pt3dadd( 69.8715, -266.282, 3.05287, 0.56 ) }
    dend_35 { pt3dadd( 70.0962, -266.768, 3.0931, 0.42 ) }
    dend_35 { pt3dadd( 70.3479, -267.239, 3.13974, 0.28 ) }
    dend_35 { pt3dadd( 70.6502, -267.757, 3.1968, 0.28 ) }
    dend_35 { pt3dadd( 70.8416, -268.075, 3.23313, 0.56 ) }
    dend_35 { pt3dadd( 71.1457, -268.592, 3.2906, 0.42 ) }
    dend_35 { pt3dadd( 71.3335, -268.913, 3.3261, 0.28 ) }
    dend_35 { pt3dadd( 71.4671, -269.145, 3.35123, 0.56 ) }
    dend_35 { pt3dadd( 71.7209, -269.619, 3.3983, 0.42 ) }
    dend_35 { pt3dadd( 71.9573, -270.098, 3.44131, 0.28 ) }
    dend_35 { pt3dadd( 72.1887, -270.58, 3.48312, 0.42 ) }
    dend_35 { pt3dadd( 72.4434, -271.125, 3.52888, 0.56 ) }
    dend_35 { pt3dadd( 72.5603, -271.364, 3.55011, 0.7 ) }
    dend_35 { pt3dadd( 72.6893, -271.599, 3.57413, 0.84 ) }
    dend_35 { pt3dadd( 73.0047, -272.11, 3.63431, 0.7 ) }
    dend_35 { pt3dadd( 73.3496, -272.591, 3.70177, 0.56 ) }
    dend_35 { pt3dadd( 73.6677, -273.019, 3.76435, 0.42 ) }
    dend_35 { pt3dadd( 74.0195, -273.503, 3.83329, 0.28 ) }
    dend_35 { pt3dadd( 74.2315, -273.807, 3.87459, 0.14 ) }
    dend_35 { pt3dadd( 74.5567, -274.311, 3.93713, 0.1 ) }
    dend_35 { pt3dadd( 74.9396, -274.96, 3.95079, 0.1 ) }
    dend_35 { pt3dadd( 75.1205, -275.295, 3.9294, 0.84 ) }
    dend_35 { pt3dadd( 75.3579, -275.772, 3.86594, 0.7 ) }
    dend_35 { pt3dadd( 75.5817, -276.244, 3.7343, 0.56 ) }
    dend_35 { pt3dadd( 75.7902, -276.707, 3.55999, 0.42 ) }
    dend_35 { pt3dadd( 76.2128, -277.629, 3.15388, 0.28 ) }
    dend_35 { pt3dadd( 76.3177, -277.855, 3.0497, 0.42 ) }
    dend_35 { pt3dadd( 76.4343, -278.083, 2.9658, 0.56 ) }
    dend_35 { pt3dadd( 76.9414, -279.058, 2.7122, 0.42 ) }
    dend_35 { pt3dadd( 77.1843, -279.535, 2.65128, 0.28 ) }
    dend_35 { pt3dadd( 77.4407, -280.073, 2.65954, 0.14 ) }
    dend_35 { pt3dadd( 77.662, -280.556, 2.73465, 0.1 ) }
    dend_35 { pt3dadd( 78.1141, -281.571, 2.94635, 0.1 ) }
    dend_35 { pt3dadd( 78.3151, -282.053, 3.0724, 0.1 ) }
    dend_35 { pt3dadd( 78.4955, -282.537, 3.22688, 0.1 ) }
    dend_35 { pt3dadd( 78.671, -283.025, 3.3641, 0.1 ) }
    dend_35 { pt3dadd( 78.7969, -283.376, 3.44301, 0.1 ) }
    dend_35 { pt3dadd( 78.8903, -283.626, 3.4812, 0.56 ) }
    dend_35 { pt3dadd( 79.0676, -284.131, 3.5103, 0.42 ) }
    dend_35 { pt3dadd( 79.2352, -284.64, 3.53715, 0.28 ) }
    dend_35 { pt3dadd( 79.3901, -285.146, 3.5612, 0.14 ) }
    dend_35 { pt3dadd( 79.5626, -285.716, 3.58782, 0.1 ) }
    dend_35 { pt3dadd( 79.7233, -286.23, 3.61302, 0.1 ) }
    dend_35 { pt3dadd( 79.9153, -286.803, 3.64401, 0.14 ) }
    dend_35 { pt3dadd( 80.1132, -287.304, 3.63832, 0.1 ) }
    dend_35 { pt3dadd( 80.2214, -287.548, 3.62074, 0.1 ) }
    dend_35 { pt3dadd( 80.4807, -288.087, 3.55157, 0.1 ) }
    dend_35 { pt3dadd( 80.7439, -288.615, 3.46054, 0.1 ) }
    dend_35 { pt3dadd( 81.0003, -289.077, 3.37204, 0.1 ) }
    dend_35 { pt3dadd( 81.514, -289.955, 3.20369, 0.1 ) }
    dend_35 { pt3dadd( 81.6467, -290.188, 3.18306, 0.56 ) }
    dend_35 { pt3dadd( 81.9049, -290.659, 3.19231, 0.42 ) }
    dend_35 { pt3dadd( 82.1431, -291.129, 3.24745, 0.28 ) }
    dend_35 { pt3dadd( 82.4056, -291.66, 3.35961, 0.42 ) }
    dend_35 { pt3dadd( 82.6374, -292.114, 3.49578, 0.28 ) }
    dend_35 { pt3dadd( 83.1364, -293.064, 3.85222, 0.14 ) }
    dend_35 { pt3dadd( 83.4259, -293.558, 4.04411, 0.1 ) }
    dend_35 { pt3dadd( 83.7106, -293.973, 4.21041, 0.1 ) }
    dend_35 { pt3dadd( 84.0787, -294.429, 4.35369, 0.1 ) }
    dend_35 { pt3dadd( 84.3297, -294.711, 4.4071, 0.42 ) }
    dend_35 { pt3dadd( 84.7394, -295.144, 4.42679, 0.28 ) }
    dend_35 { pt3dadd( 85.0016, -295.42, 4.42499, 0.14 ) }
    dend_35 { pt3dadd( 85.4925, -295.987, 4.50385, 0.1 ) }
    dend_35 { pt3dadd( 86.0826, -296.77, 4.81531, 0.1 ) }
    dend_35 { pt3dadd( 86.332, -297.173, 5.05331, 0.14 ) }
    dend_35 { pt3dadd( 86.5446, -297.571, 5.34341, 0.28 ) }
    dend_35 { pt3dadd( 86.9022, -298.348, 6.08346, 0.28 ) }
    dend_35 { pt3dadd( 87.2037, -299.063, 6.85934, 0.14 ) }
    dend_35 { pt3dadd( 87.4914, -299.769, 7.69021, 0.1 ) }
    dend_35 { pt3dadd( 87.5627, -299.932, 7.89327, 0.14 ) }
    dend_35 { pt3dadd( 87.6706, -300.151, 8.18575, 0.28 ) }
    dend_35 { pt3dadd( 87.9627, -300.73, 8.98516, 0.7 ) }
    dend_35 { pt3dadd( 88.1235, -301.074, 9.45298, 0.56 ) }
    dend_35 { pt3dadd( 88.2744, -301.427, 9.90932, 0.42 ) }
    dend_35 { pt3dadd( 88.364, -301.659, 10.1983, 0.56 ) }
    dend_35 { pt3dadd( 88.5899, -302.268, 10.9506, 0.1 ) }
    dend_35 { pt3dadd( 88.8015, -302.937, 11.7956, 0.1 ) }
    dend_35 { pt3dadd( 88.9914, -303.628, 12.6269, 0.1 ) }
    dend_35 { pt3dadd( 89.0782, -303.964, 13.0272, 0.1 ) }
    dend_35 { pt3dadd( 89.143, -304.215, 13.3016, 0.14 ) }
    dend_35 { pt3dadd( 89.2273, -304.489, 13.5525, 0.28 ) }
    dend_35 { pt3dadd( 89.5353, -305.271, 14.0849, 0.28 ) }
    dend_35 { pt3dadd( 89.7123, -305.708, 14.3406, 0.14 ) }
    dend_35 { pt3dadd( 89.904, -306.214, 14.6066, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_35 { pt3dadd( 90.0339, -306.657, 14.8789, 0.1 ) }
    dend_35 { pt3dadd( 90.1428, -307.154, 15.1896, 0.14 ) }
    dend_35 { pt3dadd( 90.1827, -307.382, 15.3287, 0.28 ) }
    dend_35 { pt3dadd( 90.3056, -308.268, 15.8329, 0.1 ) }
    dend_35 { pt3dadd( 90.3546, -308.743, 16.0792, 0.1 ) }
    dend_35 { pt3dadd( 90.4358, -309.76, 16.4843, 0.1 ) }
    dend_35 { pt3dadd( 90.4625, -310.258, 16.6833, 0.1 ) }
    dend_35 { pt3dadd( 90.4696, -310.512, 16.7736, 0.1 ) }
    dend_35 { pt3dadd( 90.4957, -310.876, 16.8478, 0.1 ) }
    dend_35 { pt3dadd( 90.6991, -311.925, 16.5945, 0.1 ) }
    dend_35 { pt3dadd( 90.9091, -312.708, 16.0186, 0.1 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 11/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 49.1754, -347.049, 8.29025, 0.28 ) }
    dend_44 { pt3dadd( 50.0795, -347.082, 9.01538, 0.28 ) }
    dend_44 { pt3dadd( 50.6206, -347.101, 9.44933, 0.14 ) }
    dend_44 { pt3dadd( 51.1107, -347.119, 9.84242, 0.1 ) }
    dend_44 { pt3dadd( 51.6603, -347.138, 10.2832, 0.1 ) }
    dend_44 { pt3dadd( 51.9054, -347.147, 10.4797, 0.1 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 17/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 49.1754, -347.049, 8.29025, 0.42 ) }
    dend_37 { pt3dadd( 49.201, -347.486, 8.44753, 0.42 ) }
    dend_37 { pt3dadd( 49.1993, -347.928, 8.60003, 0.28 ) }
    dend_37 { pt3dadd( 49.1746, -348.37, 8.74187, 0.14 ) }
    dend_37 { pt3dadd( 49.1334, -348.81, 8.8672, 0.1 ) }
    dend_37 { pt3dadd( 49.029, -349.671, 9.08034, 0.14 ) }
    dend_37 { pt3dadd( 48.9542, -350.178, 9.19156, 0.14 ) }
    dend_37 { pt3dadd( 48.8512, -350.673, 9.28669, 0.28 ) }
    dend_37 { pt3dadd( 48.7699, -350.994, 9.33492, 0.28 ) }
    dend_37 { pt3dadd( 48.6215, -351.479, 9.41889, 0.14 ) }
    dend_37 { pt3dadd( 48.4547, -351.969, 9.50202, 0.1 ) }
    dend_37 { pt3dadd( 48.3509, -352.272, 9.54477, 0.14 ) }
    dend_37 { pt3dadd( 48.1872, -352.761, 9.63009, 0.28 ) }
    dend_37 { pt3dadd( 48.0319, -353.252, 9.72795, 0.28 ) }
    dend_37 { pt3dadd( 47.7335, -354.243, 9.93929, 0.14 ) }
    dend_37 { pt3dadd( 47.6501, -354.548, 10.0064, 0.28 ) }
    dend_37 { pt3dadd( 47.5308, -355.047, 10.1103, 0.42 ) }
    dend_37 { pt3dadd( 47.4487, -355.5, 10.1915, 0.56 ) }
    dend_37 { pt3dadd( 47.4228, -355.728, 10.2226, 0.7 ) }
    dend_37 { pt3dadd( 47.4132, -356.05, 10.2466, 0.56 ) }
    dend_37 { pt3dadd( 47.4402, -356.517, 10.2473, 0.42 ) }
    dend_37 { pt3dadd( 47.4955, -357.038, 10.2508, 0.56 ) }
    dend_37 { pt3dadd( 47.5614, -357.501, 10.2557, 0.42 ) }
    dend_37 { pt3dadd( 47.6353, -357.952, 10.2615, 0.28 ) }
    dend_37 { pt3dadd( 47.7229, -358.408, 10.2688, 0.28 ) }
    dend_37 { pt3dadd( 47.8248, -358.865, 10.2777, 0.42 ) }
    dend_37 { pt3dadd( 47.9332, -359.317, 10.2873, 0.56 ) }
    dend_37 { pt3dadd( 48.051, -359.769, 10.2978, 0.56 ) }
    dend_37 { pt3dadd( 48.168, -360.219, 10.3084, 0.56 ) }
    dend_37 { pt3dadd( 48.2837, -360.663, 10.3188, 0.56 ) }
    dend_37 { pt3dadd( 48.4009, -361.114, 10.3293, 0.56 ) }
    dend_37 { pt3dadd( 48.5182, -361.563, 10.3399, 0.56 ) }
    dend_37 { pt3dadd( 48.6361, -362.016, 10.3505, 0.7 ) }
    dend_37 { pt3dadd( 48.7534, -362.465, 10.361, 0.56 ) }
    dend_37 { pt3dadd( 48.8714, -362.918, 10.3717, 0.56 ) }
    dend_37 { pt3dadd( 48.9865, -363.36, 10.382, 0.42 ) }
    dend_37 { pt3dadd( 49.1044, -363.812, 10.3926, 0.56 ) }
    dend_37 { pt3dadd( 49.2218, -364.262, 10.4032, 0.42 ) }
    dend_37 { pt3dadd( 49.3396, -364.714, 10.4138, 0.56 ) }
    dend_37 { pt3dadd( 49.4568, -365.164, 10.4243, 0.7 ) }
    dend_37 { pt3dadd( 49.5738, -365.614, 10.4348, 0.7 ) }
    dend_37 { pt3dadd( 49.6893, -366.059, 10.4452, 0.56 ) }
    dend_37 { pt3dadd( 49.8059, -366.509, 10.4557, 0.7 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 60/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 49.8059, -366.509, 10.4557, 1.12 ) }
    dend_43 { pt3dadd( 50.1949, -366.407, 10.4104, 1.12 ) }
    dend_43 { pt3dadd( 50.5636, -366.345, 10.2511, 0.98 ) }
    dend_43 { pt3dadd( 50.5636, -366.345, 10.2511, 0.84 ) }
    dend_43 { pt3dadd( 50.8876, -366.318, 10.0103, 0.28 ) }
    dend_43 { pt3dadd( 50.8876, -366.318, 10.0103, 0.28 ) }
    dend_43 { pt3dadd( 51.0626, -366.284, 9.91285, 0.28 ) }
    dend_43 { pt3dadd( 51.828, -366.089, 9.5992, 0.14 ) }
    dend_43 { pt3dadd( 52.6209, -365.844, 9.40222, 0.1 ) }
    dend_43 { pt3dadd( 53.342, -365.574, 9.31728, 0.42 ) }
    dend_43 { pt3dadd( 53.7609, -365.398, 9.31116, 0.28 ) }
    dend_43 { pt3dadd( 54.1295, -365.233, 9.33332, 0.14 ) }
    dend_43 { pt3dadd( 54.8896, -364.865, 9.45327, 0.1 ) }
    dend_43 { pt3dadd( 55.2346, -364.681, 9.55667, 0.1 ) }
    dend_43 { pt3dadd( 55.6076, -364.472, 9.69636, 0.1 ) }
    dend_43 { pt3dadd( 55.9598, -364.29, 9.7851, 0.1 ) }
    dend_43 { pt3dadd( 56.1372, -364.202, 9.83213, 0.1 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 77/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 49.8059, -366.509, 10.4557, 0.56 ) }
    dend_38 { pt3dadd( 50.003, -367.683, 10.6988, 0.56 ) }
    dend_38 { pt3dadd( 50.0737, -368.306, 10.7999, 0.56 ) }
    dend_38 { pt3dadd( 50.1354, -368.93, 10.8819, 0.7 ) }
    dend_38 { pt3dadd( 50.1803, -369.547, 10.9504, 0.56 ) }
    dend_38 { pt3dadd( 50.2229, -370.178, 11.0106, 0.56 ) }
    dend_38 { pt3dadd( 50.274, -370.887, 11.0692, 0.56 ) }
    dend_38 { pt3dadd( 50.3153, -371.585, 11.0818, 0.56 ) }
    dend_38 { pt3dadd( 50.3444, -372.217, 11.0942, 0.56 ) }
    dend_38 { pt3dadd( 50.3644, -372.927, 11.1095, 0.56 ) }
    dend_38 { pt3dadd( 50.3698, -373.548, 11.1243, 0.42 ) }
    dend_38 { pt3dadd( 50.3751, -374.184, 11.1395, 0.28 ) }
    dend_38 { pt3dadd( 50.3869, -374.896, 11.1097, 0.42 ) }
    dend_38 { pt3dadd( 50.4022, -375.528, 11.0462, 0.56 ) }
    dend_38 { pt3dadd( 50.4194, -376.222, 10.9425, 0.56 ) }
    dend_38 { pt3dadd( 50.4413, -376.925, 10.8372, 0.56 ) }
    dend_38 { pt3dadd( 50.4551, -377.55, 10.7409, 0.42 ) }
    dend_38 { pt3dadd( 50.4849, -378.707, 10.5551, 0.56 ) }
    dend_38 { pt3dadd( 50.5263, -379.32, 10.4601, 0.7 ) }
    dend_38 { pt3dadd( 50.5726, -379.633, 10.4242, 0.84 ) }
    dend_38 { pt3dadd( 50.9355, -380.874, 10.3934, 0.84 ) }
    dend_38 { pt3dadd( 50.9355, -380.874, 10.3934, 0.84 ) }
    dend_38 { pt3dadd( 51.0717, -381.155, 10.432, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_38 { pt3dadd( 51.3659, -381.712, 10.5178, 0.7 ) }
    dend_38 { pt3dadd( 51.7098, -382.324, 10.5613, 0.7 ) }
    dend_38 { pt3dadd( 52.0172, -382.877, 10.5676, 0.56 ) }
    dend_38 { pt3dadd( 52.3519, -383.503, 10.5445, 0.56 ) }
    dend_38 { pt3dadd( 52.6441, -384.064, 10.5247, 0.7 ) }
    dend_38 { pt3dadd( 52.9741, -384.69, 10.4583, 0.56 ) }
    dend_38 { pt3dadd( 53.2935, -385.313, 10.3977, 0.7 ) }
    dend_38 { pt3dadd( 53.5676, -385.883, 10.3947, 0.84 ) }
    dend_38 { pt3dadd( 53.8174, -386.466, 10.4487, 0.7 ) }
    dend_38 { pt3dadd( 54.0246, -387.039, 10.6187, 0.84 ) }
    dend_38 { pt3dadd( 54.3464, -388.064, 11.0884, 0.98 ) }
    dend_38 { pt3dadd( 54.6187, -389.098, 11.6651, 0.84 ) }
    dend_38 { pt3dadd( 54.8497, -390.18, 12.3361, 0.7 ) }
    dend_38 { pt3dadd( 54.9624, -390.762, 12.7077, 0.7 ) }
    dend_38 { pt3dadd( 55.1335, -391.884, 13.3279, 0.56 ) }
    dend_38 { pt3dadd( 55.204, -392.463, 13.5817, 0.7 ) }
    dend_38 { pt3dadd( 55.2549, -393.066, 13.7655, 0.84 ) }
    dend_38 { pt3dadd( 55.2828, -393.504, 13.7929, 0.56 ) }
    dend_38 { pt3dadd( 55.3053, -394.139, 13.7887, 0.56 ) }
    dend_38 { pt3dadd( 55.3502, -395.473, 13.7725, 0.56 ) }
    dend_38 { pt3dadd( 55.3729, -396.094, 13.8018, 0.7 ) }
    dend_38 { pt3dadd( 55.4442, -396.792, 13.9149, 0.56 ) }
    dend_38 { pt3dadd( 55.523, -397.405, 14.0489, 0.56 ) }
    dend_38 { pt3dadd( 55.7205, -398.679, 14.369, 0.56 ) }
    dend_38 { pt3dadd( 55.8155, -399.28, 14.5401, 0.56 ) }
    dend_38 { pt3dadd( 56.0084, -400.503, 14.9218, 0.7 ) }
    dend_38 { pt3dadd( 56.3811, -403.208, 15.7044, 0.56 ) }
    dend_38 { pt3dadd( 56.4685, -403.892, 15.8777, 0.7 ) }
    dend_38 { pt3dadd( 56.5298, -404.509, 16.0019, 0.7 ) }
    dend_38 { pt3dadd( 56.5579, -404.944, 16.0562, 0.56 ) }
    dend_38 { pt3dadd( 56.576, -405.652, 16.1186, 0.42 ) }
    dend_38 { pt3dadd( 56.5657, -406.353, 16.1373, 0.28 ) }
    dend_38 { pt3dadd( 56.5357, -406.985, 16.1989, 0.42 ) }
    dend_38 { pt3dadd( 56.5326, -407.69, 16.3059, 0.56 ) }
    dend_38 { pt3dadd( 56.5591, -408.376, 16.4392, 0.7 ) }
    dend_38 { pt3dadd( 56.6196, -408.991, 16.5753, 0.56 ) }
    dend_38 { pt3dadd( 56.7218, -409.597, 16.7241, 0.7 ) }
    dend_38 { pt3dadd( 56.976, -410.705, 17.0147, 0.84 ) }
    dend_38 { pt3dadd( 57.1254, -411.311, 17.1311, 0.7 ) }
    dend_38 { pt3dadd( 57.2914, -411.919, 17.191, 0.56 ) }
    dend_38 { pt3dadd( 57.4571, -412.518, 17.1869, 0.42 ) }
    dend_38 { pt3dadd( 57.5686, -412.957, 17.139, 0.56 ) }
    dend_38 { pt3dadd( 57.6371, -413.25, 17.0797, 0.7 ) }
    dend_38 { pt3dadd( 57.8798, -414.513, 16.7237, 0.56 ) }
    dend_38 { pt3dadd( 57.9652, -415.122, 16.5591, 0.56 ) }
    dend_38 { pt3dadd( 58.0269, -415.734, 16.4122, 0.56 ) }
    dend_38 { pt3dadd( 58.0577, -416.357, 16.291, 0.56 ) }
    dend_38 { pt3dadd( 58.0628, -416.658, 16.2505, 0.56 ) }
    dend_38 { pt3dadd( 58.0584, -417.103, 16.185, 0.98 ) }
    dend_38 { pt3dadd( 58.0479, -417.808, 16.0933, 0.84 ) }
    dend_38 { pt3dadd( 58.0162, -418.407, 15.9311, 0.84 ) }
    dend_38 { pt3dadd( 57.9896, -418.826, 15.7695, 0.28 ) }
    dend_38 { pt3dadd( 57.9614, -419.399, 15.5049, 0.28 ) }
    dend_38 { pt3dadd( 57.9306, -420.578, 14.8937, 0.28 ) }
    dend_38 { pt3dadd( 57.9337, -421.124, 14.5748, 0.28 ) }
    dend_38 { pt3dadd( 58.0105, -422.136, 14.0797, 0.42 ) }
    dend_38 { pt3dadd( 58.0886, -422.741, 13.9027, 0.84 ) }
    dend_38 { pt3dadd( 58.1751, -423.361, 13.8106, 0.84 ) }
    dend_38 { pt3dadd( 58.1751, -423.361, 13.8106, 0.7 ) }
    dend_38 { pt3dadd( 58.1751, -423.361, 13.8106, 0.84 ) }
    dend_38 { pt3dadd( 58.494, -426.124, 13.7561, 0.55 ) }
    dend_38 { pt3dadd( 58.815, -428.935, 13.7791, 0.83 ) }
    dend_38 { pt3dadd( 59.155, -432.111, 13.8074, 0.83 ) }
    dend_38 { pt3dadd( 59.2251, -432.805, 13.8139, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 59.2251, -432.805, 13.8139, 0.55 ) }
    dend_42 { pt3dadd( 58.1642, -434.833, 13.8459, 0.55 ) }
    dend_42 { pt3dadd( 57.254, -436.532, 13.7756, 0.83 ) }
    dend_42 { pt3dadd( 56.3585, -438.321, 13.5698, 0.83 ) }
    dend_42 { pt3dadd( 55.0867, -440.862, 13.2775, 0.55 ) }
    dend_42 { pt3dadd( 54.3065, -442.421, 13.0982, 0.28 ) }
    dend_42 { pt3dadd( 53.3385, -444.354, 12.8757, 0.55 ) }
    dend_42 { pt3dadd( 52.6777, -445.941, 12.582, 0.28 ) }
    dend_42 { pt3dadd( 52.0074, -447.568, 12.1115, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 59.2251, -432.805, 13.8139, 0.83 ) }
    dend_39 { pt3dadd( 59.2447, -435.575, 13.8928, 0.83 ) }
    dend_39 { pt3dadd( 59.3227, -437.551, 13.9998, 0.55 ) }
    dend_39 { pt3dadd( 59.3936, -439.241, 14.0953, 0.83 ) }
    dend_39 { pt3dadd( 59.4588, -440.282, 14.1829, 0.55 ) }
    dend_39 { pt3dadd( 59.632, -442.546, 14.3981, 0.83 ) }
    dend_39 { pt3dadd( 59.798, -444.846, 14.6044, 0.83 ) }
    dend_39 { pt3dadd( 59.9972, -447.189, 14.842, 0.83 ) }
    dend_39 { pt3dadd( 60.2874, -450.355, 15.1724, 0.83 ) }
    dend_39 { pt3dadd( 60.4557, -452.385, 15.404, 0.83 ) }
    dend_39 { pt3dadd( 60.6094, -454.402, 15.6151, 0.83 ) }
    dend_39 { pt3dadd( 61.0194, -459.378, 16.1714, 0.83 ) }
    dend_39 { pt3dadd( 61.1947, -461.056, 16.3604, 0.55 ) }
    dend_39 { pt3dadd( 61.5473, -463.647, 16.6413, 0.83 ) }
    dend_39 { pt3dadd( 61.8041, -465.137, 16.8132, 0.83 ) }
    dend_39 { pt3dadd( 62.2509, -467.323, 17.0544, 0.55 ) }
    dend_39 { pt3dadd( 62.9945, -470.36, 17.4036, 0.55 ) }
    dend_39 { pt3dadd( 63.7792, -473.01, 17.731, 0.55 ) }
    dend_39 { pt3dadd( 64.2806, -474.622, 17.8685, 0.55 ) }
    dend_39 { pt3dadd( 64.6787, -475.863, 17.9332, 0.55 ) }
    dend_39 { pt3dadd( 65.4205, -478.278, 17.9856, 0.83 ) }
    dend_39 { pt3dadd( 66.1123, -480.764, 17.983, 0.55 ) }
    dend_39 { pt3dadd( 66.6804, -483.007, 17.8973, 0.55 ) }
    dend_39 { pt3dadd( 67.2206, -485.289, 17.7796, 0.55 ) }
    dend_39 { pt3dadd( 68.1426, -489.475, 17.5069, 0.55 ) }
    dend_39 { pt3dadd( 68.4288, -490.795, 17.4025, 0.55 ) }
    dend_39 { pt3dadd( 68.7895, -492.513, 17.2507, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_39 { pt3dadd( 69.5926, -496.211, 16.9213, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 69.5926, -496.211, 16.9213, 0.28 ) }
    dend_41 { pt3dadd( 70.62, -496.612, 16.8294, 0.28 ) }
    dend_41 { pt3dadd( 72.1628, -497.166, 16.3229, 0.55 ) }
    dend_41 { pt3dadd( 72.902, -497.38, 16.0638, 0.28 ) }
    dend_41 { pt3dadd( 73.9466, -497.649, 15.7415, 0.55 ) }
    dend_41 { pt3dadd( 78.2241, -498.691, 14.5036, 0.28 ) }
    dend_41 { pt3dadd( 79.4842, -499.005, 14.1759, 0.55 ) }
    dend_41 { pt3dadd( 83.2534, -499.833, 12.9988, 0.28 ) }
    dend_41 { pt3dadd( 84.5671, -500.074, 12.5254, 0.55 ) }
    dend_41 { pt3dadd( 85.9432, -500.279, 12.0125, 0.55 ) }
    dend_41 { pt3dadd( 87.2659, -500.433, 11.5385, 0.28 ) }
    dend_41 { pt3dadd( 88.7337, -500.686, 11.2223, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 69.5926, -496.211, 16.9213, 0.55 ) }
    dend_40 { pt3dadd( 70.1072, -498.212, 16.9459, 0.55 ) }
    dend_40 { pt3dadd( 70.9831, -501.617, 16.9877, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_75 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_58 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_76 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_72 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_60 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_59 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_71 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_29 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_35 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_38 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_39 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_51 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_14 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_53 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_63 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_62 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_64 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_65 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_18 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_70 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_67 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_23 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_68 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_21 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_77 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_74 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_32 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_33 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_34 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_44 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_37 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_43 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_42 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_40 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_41 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 9
    dend_47 nseg = 7
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 15
    dend_49 nseg = 5
    dend_17 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 15
    dend_75 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 5
    dend_55 nseg = 7
    dend_54 nseg = 7
    dend_24 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 3
    dend_76 nseg = 3
    dend_72 nseg = 5
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_25 nseg = 5
    dend_20 nseg = 3
    dend_71 nseg = 5
    dend_27 nseg = 3
    dend_22 nseg = 3
    dend_11 nseg = 5
    dend_29 nseg = 11
    dend_69 nseg = 3
    dend_30 nseg = 3
    dend_36 nseg = 7
    dend_35 nseg = 5
    dend_38 nseg = 3
    dend_39 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_BTC_7ea9933f77_0_0


