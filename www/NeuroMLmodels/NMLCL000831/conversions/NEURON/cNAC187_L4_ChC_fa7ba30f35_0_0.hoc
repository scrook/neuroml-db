// Cell: cNAC187_L4_ChC_fa7ba30f35_0_0
/*
{
  "id" : "cNAC187_L4_ChC_fa7ba30f35_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -7.26205, -8.0337, 1.77", "-3.66144, -7.26205, -8.0337, 1.77", "-3.08216, -9.18288, -8.30454, 1.77", "-2.64098, -10.6127, -8.52029, 1.77", "-1.96667, -12.854, -8.83868, 1.55", "-1.57062, -14.3402, -9.09155, 1.69", "-1.29951, -15.495, -9.3119, 1.77", "-1.06199, -16.6184, -9.57841, 1.77", "-0.760457, -18.1244, -10.0264, 1.25", "-0.271679, -20.4348, -10.6303, 0.74", "-1.21124, -19.4281, -11.665, 0.74", "-1.94392, -19.0722, -12.7661, 0.74", "-3.22866, -18.5885, -14.7454, 1.18", "-3.91929, -18.467, -15.874, 1.18", "-4.9552, -18.2228, -17.4339, 0.52", "-6.18105, -17.7782, -19.1098, 0.52", "-7.5745, -17.8427, -21.2279, 0.74", "-8.1617, -18.1662, -22.6687, 0.74", "-8.44185, -18.6651, -23.9261, 0.74", "-8.89397, -19.3079, -25.8236, 1.11", "-9.29757, -19.6434, -27.0383, 1.69", "-9.95811, -19.8744, -28.2647, 1.77", "-11.4629, -20.3188, -30.9749, 1.33", "-12.2638, -20.7165, -32.627, 1.4", "-12.7357, -21.2463, -33.8678, 1.55", "-13.0039, -22.1274, -35.1672, 1.33", "-13.0331, -23.6466, -36.8166, 0.74", "-12.7821, -24.8905, -37.775, 1.03", "-12.4154, -25.9348, -38.3809, 1.47", "-12.0263, -26.6212, -38.816, 1.62", "-11.41, -27.4409, -39.4162, 1.62", "-10.7115, -28.0997, -39.9686, 0.52", "-9.88125, -28.7194, -40.5779, 0.52", "-9.67469, -29.0432, -41.1017, 0.52", "-9.71668, -29.706, -42.4583, 0.66", "-9.98525, -30.3569, -43.8918, 0.74", "-10.4233, -30.6225, -44.903, 0.44", "-11.178, -30.6193, -45.9727, 0.44", "-12.2904, -30.4826, -47.333, 0.44", "-13.0812, -30.5631, -48.5433, 0.44", "-13.5209, -30.7216, -49.4017, 0.44", "-14.3384, -31.251, -51.0695, 0.66", "-14.7375, -32.073, -52.7546, 1.11", "-14.9441, -32.3742, -53.3399, 0.96", "-15.484, -33.0094, -54.6816, 1.18", "-15.694, -33.2813, -55.2061, 1.69", "-16.0354, -33.6997, -55.9663, 1.69", "-17.3364, -35.1809, -58.5101, 0.88", "-18.131, -35.8856, -59.8385, 2.14", "-19.9335, -36.8381, -62.293, 2.28", "-20.1866, -36.9069, -62.5739, 2.28", "-21.6488, -37.042, -63.9379, 0.44", "-22.4836, -36.975, -64.5514, 0.44", "-23.4696, -36.7738, -65.1169, 0.81", "-24.4812, -36.5165, -65.7211, 0.81", "-24.9423, -36.4531, -66.0515, 0.96", "-25.8585, -36.5355, -66.8569, 0.66", "-26.7797, -36.8487, -67.8028, 1.99", "-27.4697, -37.2237, -68.6009, 2.21", "-28.1434, -37.7178, -69.4344, 2.5", "-29.997, -39.4143, -71.9052, 0.66", "-30.958, -40.5211, -73.3645, 0.66", "-31.5516, -41.3815, -74.3669, 0.66", "-32.1628, -42.4049, -75.4399, 1.55", "-32.4467, -42.9083, -75.9149, 2.21", "-32.7206, -43.434, -76.3682, 2.21", "-33.476, -45.1057, -77.7316, 0.29", "-33.8801, -46.184, -78.6794, 0.29", "-34.1443, -46.9285, -79.321, 1.55", "-34.4737, -47.8269, -80.0781, 1.99", "-34.7766, -48.6309, -80.7718, 2.36", "-35.6284, -50.8181, -82.7163, 0.59", "-36.0519, -51.9393, -83.7806, 1.84", "-36.2185, -52.4596, -84.3348, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.69206, 2.1563, 1.92", "-6.50143, -1.69206, 2.1563, 1.92", "-6.99127, -2.55913, 2.11734, 1.92", "-7.82449, -4.27847, 2.0326, 1.92", "-8.6837, -5.84705, 1.94713, 2.14", "-9.34603, -6.90785, 1.87484, 2.36", "-10.2846, -8.19147, 1.77518, 2.28", "-11.3157, -9.37661, 1.66119, 2.36", "-12.4693, -10.4732, 1.51319, 2.36", "-14.2599, -11.7027, 1.30195, 1.77", "-15.2448, -12.1073, 1.22793, 1.77", "-16.7891, -12.4371, 1.18677, 1.99", "-18.1652, -12.5725, 1.27414, 1.99", "-18.8461, -12.5971, 1.35821, 1.99", "-19.861, -12.6463, 1.53929, 1.77", "-21.432, -12.9201, 1.94571, 1.47", "-22.5659, -13.3252, 2.26653, 1.47", "-23.9951, -14.1503, 2.62766, 1.33", "-24.6447, -14.6551, 2.74863, 1.99", "-25.7489, -15.687, 2.86984, 1.99", "-27.0209, -17.028, 2.88608, 1.77", "-28.4278, -18.6664, 2.76227, 1.92", "-29.7288, -20.2236, 2.49684, 1.69", "-30.5287, -21.1277, 2.23958, 1.69", "-31.5311, -22.1458, 1.86061, 1.84", "-32.4454, -22.9974, 1.51142, 1.84", "-33.6289, -24.061, 1.07786, 1.69", "-34.9296, -25.2458, 0.672062, 1.55", "-36.2431, -26.5281, 0.365519, 1.4", "-37.3193, -27.5837, 0.147061, 1.25", "-38.4454, -28.7381, -0.055787, 1.33", "-39.5117, -29.9383, -0.173783, 1.47", "-40.5101, -31.2117, -0.125929, 1.62", "-41.216, -32.4028, 0.122709, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.71205, -4.9037, 3.61", "0.448551, -8.71205, -4.9037, 3.61", "0.635721, -10.0355, -4.842, 2.95", "0.903985, -12.0892, -4.74917, 2.8", "1.05866, -13.4655, -4.66071, 2.8", "1.19339, -15.0045, -4.54925, 3.02", "1.25785, -16.026, -4.47462, 3.02", "1.28482, -17.0279, -4.39751, 3.02", "1.25882, -18.5376, -4.27925, 3.02", "1.15339, -20.1347, -4.14919, 2.36", "0.870453, -22.9284, -4.00705, 2.36", "0.666196, -24.4934, -3.99318, 2.43", "0.431219, -26.0081, -4.0286, 2.43", "0.124087, -27.7837, -4.12912, 2.43", "-0.353451, -30.2351, -4.33428, 2.28", "-0.868027, -32.7503, -4.60266, 2.14", "-1.58644, -36.0824, -5.02256, 2.06", "-2.08503, -38.3951, -5.35054, 2.43", "-2.39997, -39.8677, -5.58859, 2.58", "-2.73767, -41.4196, -5.87336, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.60794, -7.5337, 1.62", "-0.46481, 8.36069, -7.59093, 1.62", "-0.596699, 9.46813, -7.62421, 1.92", "-0.7956, 10.9475, -7.68175, 1.33", "-1.04645, 12.5398, -7.76652, 1.69", "-1.2522, 13.718, -7.80965, 2.21", "-1.42855, 14.7029, -7.80223, 2.21", "-1.64089, 15.8116, -7.7507, 1.99", "-1.84017, 16.7544, -7.67248, 1.77", "-2.0768, 17.8032, -7.55748, 1.99", "-2.33343, 18.9133, -7.43111, 1.99", "-2.7721, 20.8634, -7.24685, 1.11", "-3.04288, 22.0826, -7.16781, 1.11", "-3.33306, 23.3092, -7.13643, 1.25", "-3.60971, 24.3392, -7.13104, 1.4", "-3.97184, 25.4649, -7.19359, 0.81", "-4.39832, 26.5312, -7.35349, 0.74", "-4.73724, 27.2284, -7.52372, 0.74", "-5.15501, 27.9848, -7.75398, 0.74", "-5.64052, 28.8085, -8.04677, 0.96", "-6.09825, 29.5839, -8.34247, 0.96", "-6.5758, 30.3624, -8.64661, 1.55", "-7.11522, 31.2352, -8.99993, 2.06", "-7.57159, 32.03, -9.32946, 2.43", "-8.09499, 33.1002, -9.77679, 2.36", "-8.68759, 34.5581, -10.3704, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 8.32794, 0.346303, 2.5", "-2.37853, 8.45394, 0.346952, 2.5", "-3.2836, 10.2191, 0.311977, 1.77", "-3.91533, 11.412, 0.318442, 1.55", "-4.65627, 12.7696, 0.378781, 1.55", "-5.22083, 13.8056, 0.462953, 1.33", "-6.08223, 15.4125, 0.642061, 1.33", "-6.6209, 16.3942, 0.779871, 1.55", "-7.43363, 17.8485, 1.01408, 1.55", "-8.2777, 19.43, 1.27387, 1.62", "-8.9516, 20.8396, 1.49205, 1.4", "-9.5799, 22.3909, 1.70514, 1.4", "-9.93732, 23.3439, 1.8375, 1.4", "-10.4931, 24.8765, 2.03867, 1.4", "-11.0208, 26.4074, 2.1791, 1.4", "-11.6141, 28.2998, 2.27431, 1.77", "-12.1135, 29.9976, 2.29211, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 4.18794, 1.3463, 2.58", "6.87984, 4.23798, 1.35096, 2.58", "7.52628, 4.8847, 1.41846, 2.58", "8.25975, 5.62612, 1.51774, 1.84", "8.80272, 6.16404, 1.60582, 2.06", "9.50378, 6.85664, 1.73754, 2.06", "9.96703, 7.30368, 1.85454, 2.58", "10.4812, 7.79653, 2.01409, 2.58", "10.8211, 8.1277, 2.14301, 2.58", "11.4243, 8.68901, 2.40072, 2.58", "11.8487, 9.05586, 2.59209, 2.43", "12.7377, 9.77976, 3.02763, 2.21", "13.3862, 10.2774, 3.35851, 1.99", "13.9066, 10.6533, 3.60797, 1.99", "14.5816, 11.0692, 3.8995, 1.69", "15.1458, 11.3072, 4.11349, 1.69", "16.1449, 11.4441, 4.44189, 2.06", "16.7719, 11.3344, 4.61265, 2.06", "18.2536, 10.6888, 5.00906, 1.69", "19.2727, 10.1298, 5.26661, 1.92", "20.8659, 9.04689, 5.6408, 1.92", "22.383, 7.80057, 5.96425, 2.06", "23.1608, 7.02398, 6.11059, 2.28", "23.7441, 6.31645, 6.22821, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.834799", "4.36343, 23.5449, 1.13455, 0.834799", "6.95552, 38.3192, 1.13455, 0.834799" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-36.2185, -52.4596, -84.3348, 0.96", "-34.3652, -56.5627, -91.0014, 0.96", "-34.0465, -57.461, -92.2466, 0.96", "-33.6774, -58.6641, -93.7137, 0.96", "-33.1973, -60.3432, -95.5915, 1.55", "-32.848, -61.7471, -97.0163, 0.22", "-32.52, -63.3586, -98.4146, 0.22", "-32.427, -64.3755, -98.9572, 1.11", "-32.3677, -65.3263, -99.3899, 1.4", "-32.2504, -66.6175, -99.8668, 1.4", "-31.9217, -69.4044, -100.715, 0.22", "-31.4374, -72.2744, -101.492, 0.22", "-31.234, -73.2215, -101.729, 0.74", "-31.1133, -73.7293, -101.839, 0.74", "-30.4437, -76.4375, -102.347, 0.15", "-30.3326, -76.8579, -102.407, 0.37", "-29.6081, -79.1589, -102.658, 0.22", "-29.1406, -80.4471, -102.827, 0.22", "-28.7697, -81.4743, -102.957, 0.74", "-28.4441, -82.5134, -103.071, 0.88", "-28.3811, -82.8609, -103.101, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-36.2185, -52.4596, -84.3348, 2.87", "-37.1048, -52.5639, -84.56, 2.87", "-39.9392, -53.1296, -85.3716, 0.22", "-42.5674, -53.968, -86.1478, 0.22", "-43.8519, -54.4423, -86.5243, 1.69", "-44.259, -54.607, -86.6422, 2.21", "-44.9249, -54.8921, -86.8326, 2.21", "-47.4206, -56.1531, -87.5029, 0.22", "-49.6773, -57.5831, -88.1233, 0.22", "-50.3861, -58.0778, -88.3246, 1.25", "-50.966, -58.4876, -88.4898, 1.25", "-51.733, -59.0247, -88.719, 1.25", "-53.2786, -60.0323, -89.1908, 0.15", "-54.1497, -60.5729, -89.453, 0.15", "-54.8228, -60.9421, -89.6708, 0.96", "-55.573, -61.3103, -89.9444, 1.18", "-55.9104, -61.4503, -90.0764, 1.18", "-58.0348, -62.1836, -91.0553, 0.22", "-58.5799, -62.3026, -91.3459, 0.52", "-59.0688, -62.3827, -91.6172, 0.52", "-60.3186, -62.5472, -92.31, 0.22", "-61.0915, -62.6418, -92.7494, 1.25", "-62.2382, -62.8219, -93.376, 1.4", "-64.4876, -63.383, -94.6342, 0.22", "-66.0644, -63.9627, -95.4916, 0.22", "-66.6799, -64.2722, -95.8178, 0.74", "-67.4993, -64.8178, -96.2311, 0.88", "-68.7057, -66.0229, -96.9579, 0.22", "-69.7878, -67.679, -97.6407, 0.22", "-70.2968, -68.8048, -97.9941, 1.99", "-70.5449, -69.5072, -98.1629, 2.36", "-70.7611, -70.203, -98.3226, 2.36", "-71.8089, -74.1452, -99.1795, 0.15", "-72.3453, -76.6229, -99.7399, 0.15", "-72.4713, -77.2691, -99.8589, 0.44", "-72.6816, -78.5189, -100.052, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-41.216, -32.4028, 0.122709, 0.96", "-42.0451, -32.8013, -0.257052, 0.96", "-42.8341, -33.2109, -0.61903, 1.25", "-43.9717, -33.7995, -1.13553, 1.25", "-45.9614, -34.7469, -1.99058, 1.18", "-47.3216, -35.3205, -2.53762, 1.11", "-48.3707, -35.7343, -2.95248, 0.88", "-49.7493, -36.2921, -3.51915, 0.96", "-50.5375, -36.6125, -3.85075, 0.96", "-51.6935, -37.0934, -4.34329, 0.96", "-52.8423, -37.5602, -4.76171, 0.96", "-53.8271, -37.9362, -5.06139, 1.18", "-55.0455, -38.3698, -5.37965, 1.03", "-55.657, -38.5539, -5.47856, 1.03", "-56.9552, -38.8656, -5.55341, 1.18", "-57.7594, -38.9982, -5.4907, 1.18", "-59.6168, -39.1242, -5.02709, 0.96", "-60.3066, -39.119, -4.80101, 1.11", "-61.6585, -39.07, -4.30026, 1.11", "-62.7438, -39.0549, -3.88198, 1.11", "-64.021, -39.084, -3.38151, 1.11", "-65.7251, -39.2616, -2.70662, 1.55", "-66.9396, -39.5273, -2.24575, 1.03", "-68.3911, -40.021, -1.68358, 0.88", "-69.625, -40.6197, -1.21216, 0.74", "-70.3295, -41.0815, -0.942933, 0.74", "-71.2303, -41.8615, -0.632316, 0.74", "-72.1138, -42.8303, -0.37449, 0.66", "-72.8993, -43.8431, -0.158007, 0.88", "-73.4076, -44.5897, -0.0360493, 1.03", "-73.9347, -45.4734, 0.0881141, 1.03", "-74.6059, -46.6153, 0.23063, 0.88", "-75.4404, -47.9608, 0.374217, 0.88", "-75.9116, -48.6377, 0.428205, 0.88", "-76.6114, -49.4705, 0.479108, 0.88", "-77.9774, -50.8058, 0.534605, 0.88", "-78.7775, -51.4122, 0.537591, 0.88", "-79.9252, -52.0516, 0.503611, 0.88", "-80.6982, -52.3485, 0.452988, 0.96", "-81.6051, -52.6145, 0.351743, 0.96", "-82.43, -52.7907, 0.250745, 0.96", "-83.3548, -52.957, 0.140753, 0.52", "-83.9882, -53.1769, 0.0982351, 0.52", "-84.4714, -53.5561, 0.150216, 0.52", "-84.9569, -54.2488, 0.376616, 0.81", "-85.3415, -54.9725, 0.677884, 0.96", "-85.6345, -55.8045, 1.06043, 0.96", "-85.9818, -57.2916, 1.77787, 0.81", "-86.1055, -58.0174, 2.14353, 0.81", "-86.2267, -58.9286, 2.6536, 1.11", "-86.3363, -59.4371, 2.98037, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-41.216, -32.4028, 0.122709, 1.33", "-42.1386, -32.4857, 0.707356, 1.33", "-43.0188, -32.6116, 1.19079, 1.18", "-44.6639, -32.826, 2.04217, 0.88", "-45.4525, -32.9061, 2.40553, 0.74", "-46.5982, -32.9875, 2.85347, 0.74", "-47.7612, -33.0072, 3.28987, 0.74", "-48.6341, -33.0071, 3.5842, 0.59", "-49.6583, -32.9572, 3.91127, 0.59", "-50.4643, -32.8692, 4.16163, 0.52", "-51.2843, -32.6815, 4.45403, 0.52", "-52.8432, -32.122, 5.08086, 0.74", "-53.8397, -31.6722, 5.52642, 0.59", "-54.7616, -31.2413, 5.95882, 0.44", "-55.7606, -30.8225, 6.46023, 0.37", "-56.5634, -30.5631, 6.88664, 0.66", "-57.2716, -30.4527, 7.20796, 0.66", "-57.722, -30.4659, 7.34326, 0.66", "-58.3138, -30.5241, 7.49852, 0.44", "-58.9967, -30.6423, 7.65779, 0.44", "-60.2106, -30.8653, 7.91493, 0.44", "-61.8877, -31.2091, 8.28276, 0.74", "-62.8819, -31.4478, 8.50429, 0.74", "-64.2523, -31.7684, 8.79113, 0.52", "-65.5314, -32.0544, 9.0421, 0.59", "-66.6266, -32.2965, 9.23848, 0.44", "-68.1498, -32.6922, 9.5233, 0.37", "-69.248, -33.0695, 9.7529, 0.37", "-70.4414, -33.6455, 10.009, 0.29", "-71.0075, -34.0342, 10.14, 0.29", "-71.6837, -34.6223, 10.3716, 0.29", "-72.2679, -35.1776, 10.6248, 0.37", "-72.9376, -35.818, 10.9732, 0.37", "-73.6243, -36.4232, 11.3719, 0.37", "-74.3719, -37.1305, 11.8703, 0.66", "-75.1204, -37.8113, 12.3842, 0.81", "-75.6979, -38.2726, 12.7707, 0.81", "-76.5374, -38.8095, 13.2736, 0.22", "-77.5658, -39.3416, 13.8434, 0.22", "-87.3475, -39.9399, 16.9598, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.73767, -41.4196, -5.87336, 1.55", "-2.33305, -42.5863, -5.88335, 1.55", "-1.93011, -43.7748, -5.89064, 1.55", "-1.58892, -44.8193, -5.89984, 1.55", "-1.21368, -46.0048, -5.90343, 1.69", "-0.944023, -46.9149, -5.89945, 1.69", "-0.764081, -47.5961, -5.89381, 1.69", "-0.517898, -48.728, -5.87763, 1.55", "-0.252064, -50.2106, -5.85393, 1.47", "-0.0962509, -51.4479, -5.81692, 1.33", "-0.024579, -52.636, -5.76391, 1.33", "-0.0381498, -54.2166, -5.67621, 1.33", "-0.136544, -55.378, -5.58824, 1.11", "-0.261357, -56.1112, -5.51612, 1.11", "-0.648345, -57.7117, -5.32841, 1.25", "-0.966751, -58.776, -5.19089, 1.25", "-1.29199, -59.7347, -5.06045, 1.25", "-1.77836, -61.0667, -4.88566, 1.4", "-2.27858, -62.3811, -4.7261, 1.4", "-2.67466, -63.4473, -4.62201, 1.55", "-2.92779, -64.2321, -4.58324, 1.55", "-3.23196, -65.3933, -4.57097, 1.33", "-3.52821, -66.8435, -4.62122, 0.96", "-3.61401, -67.4182, -4.67007, 0.81", "-3.68115, -68.0647, -4.73394, 0.81", "-3.7798, -69.5581, -4.88044, 0.96", "-3.81117, -70.5921, -4.97045, 1.33", "-3.82566, -71.7332, -5.05149, 1.69", "-3.84034, -72.4249, -5.0835, 1.84", "-3.87141, -73.2094, -5.09569, 1.99", "-3.949, -74.1383, -5.07488, 2.06", "-4.02732, -74.9328, -5.03569, 2.06", "-4.10397, -75.7415, -4.96434, 1.84", "-4.17123, -76.6045, -4.85093, 1.62", "-4.22891, -77.6414, -4.68224, 1.18", "-4.25306, -78.4716, -4.53851, 0.88", "-4.27147, -79.6062, -4.32509, 0.88", "-4.27507, -80.387, -4.15155, 1.03", "-4.27847, -81.1903, -3.94892, 1.11", "-4.29389, -81.7624, -3.79569, 1.11", "-4.40248, -83.1907, -3.40447, 1.03", "-4.51806, -84.1231, -3.14587, 1.18", "-4.63211, -84.8844, -2.94535, 1.25", "-4.82424, -86.0428, -2.66779, 1.18", "-5.02022, -87.0934, -2.44576, 1.03", "-5.24635, -88.1422, -2.25282, 0.96", "-5.52545, -89.2778, -2.08193, 0.88", "-5.7412, -90.0364, -2.00298, 0.88", "-6.13377, -91.1785, -1.97493, 1.25", "-6.58172, -92.3177, -2.01898, 1.55", "-6.93561, -93.1888, -2.09019, 1.62", "-7.20227, -93.886, -2.1642, 1.62", "-7.51573, -94.7986, -2.26996, 1.4", "-7.90461, -96.0908, -2.40791, 1.11", "-8.22458, -97.4224, -2.53064, 1.11", "-8.49021, -98.8927, -2.61887, 1.11", "-8.71534, -100.461, -2.68158, 1.11", "-8.85739, -101.608, -2.70661, 1.4", "-8.98637, -102.796, -2.71637, 1.4", "-9.17038, -104.65, -2.70546, 1.25", "-9.35943, -106.548, -2.69992, 1.25", "-9.49478, -107.796, -2.69775, 1.62", "-9.63059, -108.89, -2.70553, 1.77", "-9.81586, -110.354, -2.73887, 1.33", "-9.97811, -111.68, -2.77825, 0.88", "-10.1296, -113.157, -2.84112, 1.25", "-10.192, -113.889, -2.88367, 1.84", "-10.2406, -114.707, -2.94603, 2.28", "-10.2705, -115.556, -3.03047, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.73767, -41.4196, -5.87336, 2.14", "-2.58556, -42.1081, -6.05463, 2.14", "-2.31403, -43.1979, -6.28885, 2.14", "-1.84972, -45.0615, -6.68936, 1.69", "-1.46067, -46.6231, -7.02496, 1.84", "-1.08271, -48.1401, -7.35098, 1.99", "-0.77696, -49.3673, -7.61472, 2.36", "-0.535714, -50.268, -7.77, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.68759, 34.5581, -10.3704, 1.25", "-8.33587, 35.5922, -10.7298, 1.25", "-8.03795, 36.2835, -10.9689, 1.03", "-7.63963, 37.1034, -11.247, 0.81", "-7.18984, 38.0225, -11.5415, 0.81", "-6.78992, 38.9447, -11.8101, 1.11", "-6.53451, 39.6175, -11.9878, 1.11", "-6.25174, 40.409, -12.1503, 0.96", "-5.9083, 41.4736, -12.328, 0.66", "-5.69604, 42.2127, -12.441, 0.52", "-5.44302, 43.1858, -12.5738, 0.52", "-5.27918, 43.9112, -12.6643, 0.52", "-4.93077, 45.4615, -12.883, 1.18", "-4.74893, 46.2541, -13.0044, 1.62", "-4.61095, 46.8218, -13.0997, 1.69", "-4.35756, 47.7584, -13.2914, 1.33", "-4.20477, 48.2187, -13.411, 0.74", "-3.93234, 48.9199, -13.6314, 0.59", "-3.48205, 50.0233, -14.0507, 0.66", "-3.25214, 50.62, -14.2912, 0.44", "-3.10496, 51.0678, -14.4666, 0.44", "-2.87494, 51.8922, -14.7827, 0.37", "-2.67684, 52.5863, -15.0431, 0.37", "-2.50831, 53.0899, -15.2223, 0.37", "-2.18215, 53.8771, -15.5334, 0.37", "-1.86704, 54.5758, -15.8302, 0.44", "-1.59526, 55.257, -16.1383, 0.44", "-1.23918, 56.3638, -16.6581, 0.81", "-1.01865, 57.1478, -17.0302, 1.03", "-0.812339, 57.8549, -17.3793, 1.03", "-0.628948, 58.497, -17.7227, 0.81", "-0.390312, 59.4341, -18.2625, 0.29", "-0.293136, 59.9012, -18.5383, 0.29", "-0.114877, 61.0354, -19.1874, 1.77", "-0.0616779, 61.4139, -19.3979, 2.36", "0.022704, 61.9387, -19.6696, 2.36", "0.211492, 62.9374, -20.1614, 2.28", "0.484659, 64.1351, -20.7141, 0.66", "0.641284, 64.7898, -21.0179, 0.88", "0.801643, 65.4714, -21.3372, 0.88", "0.986042, 66.2371, -21.6774, 0.37", "1.11337, 66.7545, -21.8997, 0.37", "1.37289, 67.835, -22.3371, 0.37", "1.5602, 68.6513, -22.6528, 1.11", "1.69884, 69.3048, -22.8948, 1.47", "1.78631, 69.7736, -23.057, 1.69", "1.91042, 70.5688, -23.3095, 1.33", "2.02197, 71.4457, -23.5597, 0.44", "2.08061, 72.3843, -23.7874, 0.29", "2.09987, 73.1233, -23.956, 0.52", "2.09983, 73.6768, -24.0771, 0.52", "2.07564, 74.6067, -24.2969, 0.29", "2.06409, 75.5629, -24.5309, 0.29", "2.07265, 77.2449, -24.9778, 1.18", "2.08522, 77.8767, -25.1479, 1.62", "2.10084, 78.5501, -25.3175, 1.84", "2.12627, 79.4009, -25.5171, 1.33", "2.19801, 81.8296, -26.065, 0.22", "2.25411, 83.3847, -26.4024, 0.22", "2.30873, 84.7912, -26.6857, 0.22", "2.35303, 86.2802, -26.9534, 0.74", "2.37064, 87.0927, -27.0904, 1.03", "2.37329, 87.4764, -27.1489, 1.03", "2.32177, 88.7027, -27.3504, 0.15", "2.28804, 89.1729, -27.4473, 0.15", "2.2371, 89.71, -27.5938, 0.44", "2.18496, 90.22, -27.7568, 0.66", "2.13752, 90.6899, -27.9084, 0.66", "2.04262, 92.0424, -28.3469, 1.55", "2.00447, 93.0357, -28.6626, 2.58", "1.99649, 93.8989, -28.9404, 2.58", "2.07326, 95.8112, -29.5378, 0.29", "2.21192, 97.0865, -29.8943, 0.29", "2.5267, 98.9125, -30.3349, 0.29", "2.80203, 100.057, -30.5685, 0.96", "2.97516, 100.645, -30.6653, 0.96", "3.64899, 102.555, -30.9149, 0.22", "4.45696, 104.587, -31.1099, 0.22", "5.00379, 105.863, -31.1977, 1.77", "5.23136, 106.362, -31.2195, 2.36", "5.51503, 106.971, -31.2418, 2.5", "6.43431, 108.94, -31.2997, 0.15", "6.89162, 109.931, -31.3349, 0.29", "7.1903, 110.594, -31.3702, 0.29", "7.55822, 111.441, -31.457, 0.15", "7.90886, 112.306, -31.5952, 1.18", "8.12109, 112.842, -31.7085, 1.55", "8.35184, 113.436, -31.8571, 1.18", "8.51734, 113.863, -31.9774, 0.74", "8.98869, 115.193, -32.3521, 0.22", "9.33033, 116.233, -32.6427, 0.22", "9.88438, 118.056, -33.1044, 0.22", "10.1655, 119.04, -33.3284, 0.81", "10.2716, 119.436, -33.4086, 0.81", "10.8947, 121.917, -33.8248, 0.22", "11.1871, 123.171, -33.96, 0.22", "11.4152, 124.306, -34.0623, 1.25", "11.4552, 124.609, -34.0842, 1.69", "11.4842, 124.952, -34.1042, 1.69", "11.5224, 125.685, -34.1368, 1.33", "11.5269, 126.328, -34.1676, 0.59", "11.5064, 127.665, -34.2602, 0.22", "11.4846, 129.567, -34.4533, 0.22", "11.4694, 130.738, -34.5857, 1.03", "11.4609, 131.231, -34.6442, 1.03", "11.4677, 131.746, -34.7085, 1.03", "11.5069, 132.508, -34.8027, 0.52", "11.6658, 134.213, -34.993, 0.22", "11.8047, 135.03, -35.095, 0.59", "11.9257, 135.552, -35.1634, 0.59", "12.5665, 137.838, -35.466, 0.22", "12.8048, 138.546, -35.5594, 0.66", "13.0088, 139.049, -35.6314, 0.66", "13.5243, 140.214, -35.8165, 0.15", "13.8202, 140.86, -35.9311, 0.81", "14.0213, 141.305, -36.0176, 0.81", "14.3057, 141.96, -36.16, 0.81", "14.8065, 143.212, -36.4456, 0.22", "15.2877, 144.484, -36.7637, 1.33", "15.4782, 145.017, -36.9053, 1.55", "15.5903, 145.329, -36.9902, 1.55", "15.7083, 145.659, -37.0851, 1.03", "16.2661, 147.159, -37.5464, 0.22", "16.7946, 148.49, -37.9827, 0.22", "17.0937, 149.186, -38.2339, 0.22", "17.4443, 150.01, -38.5331, 1.25", "17.6557, 150.543, -38.7271, 1.77", "17.8298, 151.026, -38.9044, 1.77", "17.9652, 151.435, -39.0613, 1.18", "18.164, 152.081, -39.3148, 0.66", "18.7562, 154.05, -40.1314, 0.22", "19.1495, 155.362, -40.7184, 0.22", "19.4262, 156.257, -41.1189, 1.11", "19.6254, 156.831, -41.3746, 1.4", "19.8249, 157.339, -41.6044, 1.4", "20.0827, 157.926, -41.8941, 0.96", "20.8731, 159.578, -42.7762, 0.22", "21.7654, 161.289, -43.7137, 0.22", "22.4821, 162.599, -44.4289, 1.77", "22.7421, 163.061, -44.6747, 2.65", "23.1622, 163.783, -45.0478, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.68759, 34.5581, -10.3704, 0.66", "-10.1756, 35.2122, -10.821, 0.66", "-10.7671, 35.4452, -10.9997, 0.66", "-11.4601, 35.691, -11.2044, 0.66", "-12.249, 35.9374, -11.4411, 1.11", "-12.7362, 36.0673, -11.5923, 1.33", "-13.4694, 36.2542, -11.8227, 1.33", "-14.2642, 36.4316, -12.0726, 0.96", "-14.8162, 36.5565, -12.2267, 0.88", "-15.4796, 36.7048, -12.3894, 0.88", "-16.2751, 36.8761, -12.5442, 0.37", "-16.6883, 36.9592, -12.6061, 0.37", "-17.3987, 37.0983, -12.6865, 0.81", "-18.0165, 37.2246, -12.7388, 0.88", "-18.5905, 37.3457, -12.7788, 0.81", "-19.1984, 37.4768, -12.812, 0.29", "-19.5851, 37.5555, -12.8379, 0.29", "-20.2491, 37.652, -12.9136, 0.74", "-20.7389, 37.7104, -12.9914, 0.74", "-21.021, 37.7555, -13.0322, 0.74", "-21.3533, 37.8316, -13.0554, 0.74", "-21.7667, 37.9414, -13.0598, 0.59", "-22.1738, 38.0415, -13.0393, 0.59", "-22.5354, 38.1161, -12.9938, 0.37", "-23.5147, 38.2646, -12.8531, 0.37", "-24.2038, 38.3273, -12.7494, 0.37", "-24.5713, 38.3412, -12.6942, 0.22", "-25.1877, 38.3354, -12.6091, 0.22", "-25.5163, 38.314, -12.5795, 0.22", "-26.4743, 38.2326, -12.5383, 1.03", "-26.9449, 38.2035, -12.5447, 1.4", "-27.2266, 38.2012, -12.5533, 1.4", "-27.9114, 38.2381, -12.5837, 0.81", "-28.7853, 38.3247, -12.6473, 0.22", "-29.2563, 38.3787, -12.69, 0.22", "-30.2038, 38.5024, -12.7972, 1.11", "-30.6861, 38.5723, -12.8633, 1.4", "-31.0276, 38.6237, -12.9166, 1.4", "-31.8216, 38.7429, -13.0571, 0.66", "-32.566, 38.8465, -13.1978, 0.52", "-33.4634, 38.9466, -13.3802, 0.74", "-34.0445, 39.0079, -13.5058, 0.88", "-34.8684, 39.1052, -13.6908, 0.66", "-35.4527, 39.1809, -13.8258, 0.66", "-35.9311, 39.2491, -13.9415, 0.66", "-36.8328, 39.3946, -14.1553, 0.29", "-37.5598, 39.5241, -14.3075, 1.03", "-38.1822, 39.6419, -14.4164, 1.25", "-38.3837, 39.6873, -14.4355, 1.25", "-38.9106, 39.8332, -14.4482, 0.81", "-39.5523, 40.0302, -14.4217, 0.29", "-39.9731, 40.1692, -14.3748, 0.52", "-40.2553, 40.2719, -14.3348, 0.66", "-41.2835, 40.6686, -14.1909, 0.22", "-41.863, 40.9004, -14.1233, 0.22", "-42.3347, 41.0922, -14.0876, 0.22", "-42.9603, 41.3572, -14.083, 0.22", "-43.7964, 41.7213, -14.114, 0.59", "-44.2712, 41.9354, -14.1521, 0.81", "-44.707, 42.1527, -14.2212, 0.81", "-45.3701, 42.5195, -14.3543, 0.52", "-46.2567, 43.0559, -14.5652, 1.03", "-46.7845, 43.393, -14.707, 1.18", "-47.1742, 43.6567, -14.8224, 1.25", "-48.0393, 44.2737, -15.097, 0.29", "-48.8192, 44.8509, -15.3589, 0.74", "-49.111, 45.0714, -15.4622, 0.96", "-49.3651, 45.2636, -15.5597, 0.96", "-50.2071, 45.8819, -15.9004, 0.22", "-50.5405, 46.1133, -16.0382, 0.22", "-50.9979, 46.4071, -16.2228, 0.66", "-51.3079, 46.5988, -16.3559, 0.88", "-51.6752, 46.8145, -16.5137, 0.44", "-52.1553, 47.0883, -16.7151, 0.37", "-52.4466, 47.2493, -16.83, 0.44", "-52.8353, 47.4725, -16.9817, 0.44", "-53.1151, 47.6355, -17.0909, 0.44", "-53.6557, 47.9561, -17.2949, 0.22", "-54.0115, 48.1723, -17.4168, 0.22", "-54.4363, 48.4518, -17.5509, 0.29", "-54.6879, 48.6274, -17.6197, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.1135, 29.9976, 2.29211, 1.47", "-11.7757, 30.661, 2.44965, 1.47", "-11.4694, 31.3866, 2.6081, 0.81", "-11.2784, 31.919, 2.71825, 0.81", "-11.0751, 32.6667, 2.85833, 0.81", "-10.8658, 33.5784, 3.02182, 0.81", "-10.6703, 34.5859, 3.19614, 0.81", "-10.5402, 35.5946, 3.35182, 1.03", "-10.4563, 36.5034, 3.48514, 1.03", "-10.3509, 37.8961, 3.67935, 1.18", "-10.2914, 38.7585, 3.80242, 1.18", "-10.2553, 40.2616, 3.99058, 1.18", "-10.2643, 41.3331, 4.11005, 1.4", "-10.2628, 42.0924, 4.19481, 1.4", "-10.2657, 42.6333, 4.25108, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.1135, 29.9976, 2.29211, 0.96", "-15.1549, 31.1518, 2.14423, 0.96", "-16.2388, 31.5983, 2.11266, 0.96", "-17.7414, 32.2311, 2.06866, 0.96", "-19.3102, 32.9133, 2.00526, 0.81", "-20.6608, 33.5257, 1.94986, 0.81", "-22.5183, 34.3991, 1.88933, 1.03", "-23.7755, 35.0469, 1.8434, 1.03", "-24.944, 35.7673, 1.78594, 1.03", "-26.3975, 36.8129, 1.69489, 0.81", "-27.4607, 37.6158, 1.62552, 0.81", "-28.6236, 38.5315, 1.56043, 0.81", "-29.9932, 39.6824, 1.47265, 0.52", "-31.25, 40.8626, 1.3895, 0.52", "-31.949, 41.5929, 1.35966, 0.52", "-32.9412, 42.7258, 1.33399, 0.52", "-34.1686, 44.1939, 1.30858, 0.52", "-34.8092, 45.0017, 1.30258, 0.52", "-35.4487, 45.8458, 1.31795, 0.52", "-36.1879, 46.8601, 1.36078, 0.66", "-36.8658, 47.8729, 1.4106, 0.88", "-37.5205, 48.9653, 1.45783, 0.88", "-38.2492, 50.2518, 1.49958, 0.59", "-38.9922, 51.5258, 1.53201, 0.88", "-39.5332, 52.4407, 1.54526, 0.88", "-39.9813, 53.257, 1.53652, 0.96", "-40.3829, 54.0022, 1.51078, 0.96", "-40.7509, 54.6507, 1.47935, 0.96", "-41.4175, 55.7029, 1.42275, 0.74", "-42.4866, 57.2406, 1.33096, 1.25", "-43.2345, 58.2594, 1.26544, 1.25", "-44.0869, 59.3943, 1.19297, 0.29", "-44.6506, 60.1513, 1.15274, 0.29", "-45.2143, 60.9223, 1.12586, 0.66", "-45.7144, 61.6236, 1.12047, 0.81", "-46.1241, 62.2227, 1.13373, 0.81", "-46.7872, 63.2991, 1.18577, 0.37", "-47.4265, 64.4913, 1.17969, 0.37", "-47.8097, 65.2688, 1.1354, 1.03", "-48.1446, 65.9541, 1.07268, 1.25", "-48.5851, 66.7873, 0.979723, 1.25", "-48.975, 67.4422, 0.894024, 0.81", "-49.8263, 68.7318, 0.71618, 0.59", "-50.3387, 69.464, 0.614601, 0.44", "-51.0422, 70.5037, 0.502237, 0.88", "-51.5704, 71.3112, 0.444125, 0.88", "-52.447, 72.7403, 0.410971, 0.59", "-53.0037, 73.6982, 0.40469, 0.59", "-53.8475, 75.263, 0.427921, 0.44", "-54.7609, 77.073, 0.454013, 1.03", "-55.477, 78.6216, 0.491585, 1.55", "-55.8681, 79.5907, 0.528382, 1.62", "-56.3793, 81.0183, 0.595096, 1.11", "-56.8897, 82.592, 0.67476, 0.59", "-57.2108, 83.6855, 0.746551, 0.59", "-57.7026, 85.5204, 0.889585, 0.59", "-58.181, 87.3537, 1.05752, 0.52", "-58.4915, 88.557, 1.1949, 0.52", "-58.8715, 90.0648, 1.42165, 0.52", "-59.2805, 91.6392, 1.67574, 0.52", "-59.7691, 93.3589, 1.95638, 0.37", "-60.5324, 95.6354, 2.34454, 1.55", "-60.8356, 96.3808, 2.47793, 1.92", "-61.1625, 97.0534, 2.60239, 1.92", "-61.4861, 97.6207, 2.70161, 1.92", "-62.2089, 98.6813, 2.88407, 0.88", "-63.207, 100.013, 3.09725, 0.44", "-63.9717, 100.993, 3.24376, 0.44", "-64.8023, 102.051, 3.37923, 0.44", "-65.9597, 103.558, 3.55594, 0.37", "-66.5769, 104.378, 3.64602, 0.37", "-67.8483, 106.141, 3.82246, 0.74", "-68.3512, 106.869, 3.89737, 0.74", "-68.9713, 107.806, 3.98833, 0.52", "-69.8025, 109.099, 4.08067, 1.25", "-70.3928, 110.002, 4.1105, 1.47", "-70.7952, 110.611, 4.10919, 1.47", "-71.3652, 111.351, 4.07667, 0.81", "-72.1557, 112.265, 4.0087, 0.59", "-72.9676, 113.091, 3.9058, 0.88", "-73.6639, 113.747, 3.79937, 1.18", "-74.1022, 114.147, 3.72431, 1.18", "-75.1678, 115.176, 3.56267, 0.96", "-76.2806, 116.365, 3.43508, 0.52", "-76.8946, 117.128, 3.42258, 0.37", "-77.7303, 118.344, 3.50286, 0.37", "-78.4877, 119.634, 3.65339, 0.37", "-79.1487, 120.944, 3.84693, 0.37", "-79.5755, 121.973, 4.02545, 0.81", "-80.1572, 123.639, 4.31794, 1.84", "-80.3871, 124.313, 4.43562, 1.92", "-80.5684, 124.796, 4.51285, 1.92", "-80.907, 125.69, 4.62587, 1.62", "-81.3995, 126.944, 4.71312, 0.88", "-81.9148, 128.287, 4.75269, 0.29", "-82.7211, 130.372, 4.76924, 0.29", "-83.3329, 131.871, 4.78945, 0.29", "-83.7302, 132.745, 4.82553, 0.29", "-83.9406, 133.15, 4.85566, 0.29", "-84.4823, 134.037, 4.95794, 0.66", "-85.1741, 135.008, 5.11166, 0.81", "-85.6776, 135.646, 5.23188, 0.81", "-86.6448, 136.851, 5.45947, 0.37", "-87.4077, 137.775, 5.6403, 0.37", "-88.1299, 138.661, 5.81009, 0.81", "-88.6369, 139.291, 5.93349, 0.81", "-89.3509, 140.202, 6.11657, 0.37", "-90.0568, 141.05, 6.30925, 0.37", "-90.7756, 141.839, 6.52148, 0.88", "-91.6582, 142.765, 6.79083, 1.47", "-92.324, 143.456, 6.98987, 1.69", "-92.8661, 144.021, 7.14417, 1.69", "-94.3473, 145.529, 7.55649, 0.37", "-94.8562, 146.054, 7.69449, 0.37", "-95.8126, 147.103, 7.93109, 0.37", "-96.9158, 148.403, 8.17596, 0.81", "-97.6292, 149.356, 8.30907, 1.33", "-98.0622, 149.991, 8.37282, 1.33", "-98.6445, 150.884, 8.44262, 0.81", "-99.8275, 152.63, 8.57034, 0.52", "-100.82, 153.974, 8.67525, 0.52", "-101.944, 155.461, 8.78319, 0.52", "-102.568, 156.279, 8.83724, 0.52", "-103.372, 157.338, 8.89792, 0.52", "-104.278, 158.523, 8.95435, 0.52", "-105.827, 160.515, 9.03889, 0.52", "-106.39, 161.235, 9.06819, 0.52", "-107.786, 162.993, 9.15021, 1.25", "-108.18, 163.493, 9.17617, 1.47", "-108.699, 164.14, 9.20468, 1.47", "-109.464, 165.035, 9.24524, 0.88", "-110.399, 166.021, 9.30379, 0.29", "-110.787, 166.385, 9.33743, 0.29", "-111.588, 167.076, 9.42637, 0.44", "-112.22, 167.605, 9.51346, 0.44", "-112.811, 168.089, 9.61184, 0.44", "-113.162, 168.385, 9.65538, 0.44", "-113.652, 168.832, 9.73702, 0.29", "-114.268, 169.582, 9.86449, 0.29", "-114.473, 169.873, 9.92479, 0.44", "-114.717, 170.244, 10.0142, 0.44", "-115.355, 171.202, 10.2719, 0.37", "-116.217, 172.45, 10.6393, 0.44", "-117.657, 174.418, 11.135, 2.28", "-118.248, 175.194, 11.2965, 2.5", "-118.711, 175.807, 11.3878, 2.5", "-119.478, 176.807, 11.4874, 1.92", "-120.266, 177.808, 11.5141, 0.81", "-121.334, 179.164, 11.3702, 0.52", "-121.792, 179.784, 11.2562, 0.52", "-122.778, 181.215, 10.9381, 0.88", "-123.333, 182.103, 10.7245, 0.88", "-123.946, 183.181, 10.4627, 0.66", "-124.415, 184.071, 10.2474, 0.44", "-125.043, 185.376, 9.96355, 0.29", "-125.727, 186.882, 9.61005, 0.29", "-126.456, 188.599, 9.15851, 0.29", "-126.802, 189.45, 8.91477, 0.29", "-127.447, 191.015, 8.38362, 0.52", "-127.918, 192.081, 7.97138, 0.88", "-128.34, 192.944, 7.57725, 0.88", "-128.864, 193.88, 7.10369, 0.44", "-129.885, 195.34, 6.32413, 1.11", "-130.961, 196.586, 5.65288, 2.43", "-131.846, 197.414, 5.21388, 2.43", "-132.463, 197.886, 4.97466, 2.43", "-133.321, 198.438, 4.74925, 1.69", "-134.549, 199.128, 4.51917, 0.59", "-135.893, 199.781, 4.38735, 0.74", "-136.338, 199.982, 4.38758, 0.74", "-137.081, 200.303, 4.40621, 0.52", "-138.217, 200.807, 4.47349, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.7441, 6.31645, 6.22821, 1.99", "25.2346, 6.65865, 6.161, 1.99", "26.1008, 7.01629, 6.29392, 1.99", "26.6965, 7.45568, 6.54524, 1.69", "27.534, 8.07335, 6.89853, 1.69", "27.8867, 8.33351, 7.04734, 1.69", "28.4727, 8.76577, 7.29458, 1.69", "28.8313, 9.19815, 7.52679, 1.92", "29.348, 10.0349, 8.08265, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "23.7441, 6.31645, 6.22821, 0.74", "24.5038, 8.37711, 7.51553, 0.74", "24.7761, 9.26914, 8.0626, 0.74", "25.1361, 10.6698, 8.90426, 0.74", "25.4059, 11.8755, 9.61966, 0.44", "25.6051, 12.8916, 10.2309, 0.44", "25.8605, 14.392, 11.142, 0.66", "25.9409, 15.1151, 11.5707, 0.88", "26.0376, 16.15, 12.2218, 0.88", "26.1142, 17.085, 12.8622, 1.03", "26.2466, 18.4104, 13.8168, 0.96", "26.3609, 19.3447, 14.5088, 0.52", "26.4823, 20.0961, 15.0709, 0.52", "26.6115, 21.0883, 15.8255, 0.88", "26.718, 21.8954, 16.4442, 0.66", "26.8431, 22.7951, 17.1453, 0.88", "26.9539, 23.5953, 17.7772, 0.88", "27.104, 24.7679, 18.7261, 0.29", "27.1969, 25.7135, 19.4905, 0.29", "27.2492, 26.3691, 20.0064, 0.29", "27.3379, 27.4829, 20.8932, 0.44", "27.4127, 28.1413, 21.4399, 0.74", "27.5407, 28.9346, 22.1038, 0.88", "27.6424, 29.4137, 22.5122, 1.11", "27.7358, 29.7954, 22.8322, 1.11", "27.9004, 30.6713, 23.5333, 0.29", "28.0758, 31.5588, 24.1801, 0.29", "28.2847, 32.4155, 24.7646, 0.29", "30.4709, 40.5915, 33.2895, 0.29", "34.0288, 49.0995, 40.9873, 0.29", "36.1485, 58.522, 48.1304, 0.29", "37.1041, 68.3733, 54.9378, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-86.3363, -59.4371, 2.98037, 0.44", "-88.7258, -60.2051, 3.72676, 0.44", "-89.9347, -60.6824, 4.10894, 0.29", "-91.2057, -61.255, 4.48291, 0.29", "-91.9499, -61.6094, 4.69117, 0.29", "-93.5283, -62.3561, 5.09685, 0.37", "-94.2493, -62.6759, 5.2828, 0.37", "-95.3412, -63.1531, 5.47425, 0.29", "-96.3882, -63.6818, 5.69358, 0.29", "-97.1897, -64.1465, 5.88583, 0.29", "-97.7462, -64.4884, 6.02204, 0.29", "-98.6131, -65.0058, 6.22578, 0.29", "-99.4668, -65.4474, 6.39635, 0.44", "-100.644, -65.9835, 6.61262, 0.44", "-101.27, -66.281, 6.759, 0.44", "-102.19, -66.7709, 7.03503, 0.66", "-103.117, -67.3621, 7.39933, 0.66", "-103.599, -67.7547, 7.6618, 0.52", "-104.447, -68.6929, 8.3814, 0.44", "-104.805, -69.3471, 8.93521, 0.66", "-105.03, -70.0276, 9.54402, 0.66", "-105.209, -70.8132, 10.26, 0.52", "-105.439, -71.8525, 11.2223, 0.52", "-105.607, -72.8041, 12.0943, 0.44", "-105.726, -73.6403, 12.857, 0.37", "-105.964, -74.9412, 14.03, 0.37", "-106.217, -75.9613, 14.9656, 0.29", "-106.593, -76.9775, 15.9552, 0.29", "-115.233, -84.7464, 18.6799, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-86.3363, -59.4371, 2.98037, 1.11", "-87.7666, -59.9968, 3.15439, 1.11", "-88.8765, -60.5374, 3.28652, 1.11", "-91.1278, -61.7115, 3.58045, 0.88", "-92.8437, -62.557, 3.79162, 0.88", "-95.4524, -63.7385, 4.08358, 0.88", "-98.1707, -64.8588, 4.33939, 0.88", "-99.6596, -65.4644, 4.47374, 0.88", "-101.039, -66.0188, 4.55949, 0.81", "-102.584, -66.6253, 4.61015, 0.81", "-103.699, -67.02, 4.62919, 0.81", "-105.681, -67.65, 4.65086, 0.96", "-106.715, -68.0136, 4.66099, 0.96", "-107.767, -68.5016, 4.6688, 0.96", "-108.759, -69.1347, 4.67433, 0.96", "-110.05, -70.1291, 4.69592, 0.96", "-110.478, -70.479, 4.69652, 0.96", "-111.783, -71.5321, 4.65623, 0.88", "-113.414, -72.7063, 4.52736, 0.88", "-114.58, -73.5172, 4.41275, 1.11", "-115.756, -74.3395, 4.29226, 1.11", "-117.111, -75.3308, 4.13366, 0.96", "-118.263, -76.2356, 4.04783, 0.96", "-119.852, -77.5884, 4.01037, 0.88", "-121.672, -79.2915, 3.98078, 0.88", "-123.066, -80.6815, 3.903, 0.96", "-124.174, -81.8214, 3.79119, 0.96", "-125.746, -83.406, 3.56974, 0.88", "-126.486, -84.1246, 3.41717, 0.74", "-128.14, -85.6505, 2.98334, 0.96", "-129.601, -86.8806, 2.55469, 1.11", "-130.794, -87.8311, 2.215, 1.25", "-131.834, -88.6523, 1.95138, 1.25", "-133.517, -89.9978, 1.5731, 1.03", "-135.806, -91.8989, 1.2177, 0.88", "-137.478, -93.3872, 1.07286, 0.88", "-139.17, -94.9832, 0.982893, 0.88", "-140.58, -96.3326, 0.908446, 0.88", "-141.943, -97.5834, 0.82654, 1.33", "-143.016, -98.4733, 0.756, 1.33", "-144.296, -99.4648, 0.648909, 1.18", "-145.195, -100.125, 0.556475, 0.96", "-146.816, -101.227, 0.387794, 0.96", "-148.315, -102.13, 0.234178, 0.96", "-150.343, -103.17, 0.0593608, 0.88", "-152.112, -103.87, -0.0517378, 0.81", "-153.116, -104.152, -0.0805698, 0.81", "-154.291, -104.427, -0.0898794, 0.74", "-155.163, -104.658, -0.0749086, 0.74", "-156.277, -105.046, -0.023158, 0.74", "-157.872, -105.813, 0.102587, 0.74", "-158.76, -106.432, 0.200782, 1.11", "-160.107, -107.768, 0.39602, 1.11", "-161.75, -109.783, 0.661821, 0.88", "-162.812, -111.288, 0.85561, 0.88", "-163.623, -112.554, 1.01388, 0.88", "-164.737, -114.324, 1.224, 0.81", "-166.264, -116.625, 1.41324, 0.81", "-167.045, -117.711, 1.46187, 1.18", "-167.901, -118.884, 1.46165, 1.33", "-168.826, -120.078, 1.41316, 1.33", "-170.341, -121.883, 1.27272, 0.88", "-171.842, -123.544, 1.05837, 0.81", "-173.414, -125.164, 0.801757, 0.81", "-175.28, -127.006, 0.450379, 0.81", "-176.688, -128.357, 0.12994, 0.81", "-178.013, -129.598, -0.192644, 1.11", "-178.816, -130.346, -0.401119, 1.25", "-179.777, -131.235, -0.64986, 2.14", "-180.698, -132.146, -0.911927, 2.5", "-181.961, -133.376, -1.27485, 1.92", "-183.766, -135.402, -1.83695, 1.11", "-184.533, -136.383, -2.0891, 0.96", "-185.58, -137.847, -2.42991, 1.4", "-186.911, -139.831, -2.92374, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-10.2705, -115.556, -3.03047, 0.37", "-9.06204, -118.029, -2.5988, 0.37", "-8.73877, -118.666, -2.52073, 0.52", "-8.34797, -119.447, -2.45721, 0.66", "-7.9149, -120.335, -2.40207, 0.37", "-7.59426, -120.991, -2.37107, 0.44", "-7.22352, -121.755, -2.34643, 0.44", "-6.80746, -122.663, -2.40438, 0.29", "-6.38731, -123.514, -2.46742, 0.29", "-5.98053, -124.228, -2.54267, 0.59", "-5.57914, -124.841, -2.64425, 0.59", "-5.09908, -125.479, -2.79359, 0.37", "-4.59065, -126.078, -2.97982, 0.66", "-4.10087, -126.582, -3.17833, 0.52", "-3.36425, -127.254, -3.50766, 0.37", "-2.80768, -127.724, -3.77888, 0.37", "-1.98029, -128.416, -4.21227, 0.37", "-1.18403, -129.08, -4.65562, 1.03", "-0.612035, -129.565, -4.99386, 1.18", "-0.0811097, -130.032, -5.33151, 0.81", "0.331513, -130.408, -5.61088, 0.52", "1.103, -131.116, -6.13494, 0.52", "1.83346, -131.817, -6.63629, 0.59", "2.45687, -132.478, -7.10096, 0.59", "2.9541, -133.075, -7.49865, 0.81", "3.35281, -133.594, -7.83152, 0.81", "3.78426, -134.198, -8.20848, 0.66", "4.08966, -134.659, -8.48988, 0.29", "4.77773, -135.782, -9.15066, 0.52", "5.35967, -136.762, -9.71979, 1.03", "5.56521, -137.12, -9.92862, 1.47", "5.94113, -137.745, -10.3112, 1.62", "6.45143, -138.5, -10.821, 1.03", "6.96022, -139.15, -11.2932, 0.29", "7.46906, -139.715, -11.728, 0.29", "8.068, -140.319, -12.2335, 0.37", "8.69251, -140.94, -12.7591, 0.66", "9.01732, -141.258, -13.0255, 0.81", "9.54061, -141.744, -13.4318, 0.96", "9.94212, -142.104, -13.7283, 0.44", "10.2672, -142.387, -13.9532, 0.29", "10.9117, -142.922, -14.3636, 0.29", "11.4006, -143.372, -14.6669, 0.59", "11.8707, -143.86, -14.9522, 0.74", "12.247, -144.294, -15.1776, 0.74", "12.7494, -144.944, -15.4799, 0.74", "13.1461, -145.514, -15.7274, 0.44", "13.6669, -146.332, -16.063, 0.29", "13.9694, -146.846, -16.2682, 0.66", "14.3395, -147.5, -16.5332, 0.88", "14.6825, -148.104, -16.7851, 0.96", "15.1813, -148.951, -17.1398, 0.66", "15.6991, -149.818, -17.4995, 0.37", "16.3184, -150.795, -17.917, 0.74", "16.6655, -151.323, -18.1474, 0.81", "17.0683, -151.942, -18.4098, 0.37", "17.6073, -152.807, -18.7569, 0.37", "18.0698, -153.584, -19.0538, 0.37", "18.4518, -154.251, -19.3022, 0.37", "18.7557, -154.81, -19.5053, 0.52", "19.1138, -155.47, -19.7555, 0.52", "19.4782, -156.141, -20.0246, 0.37", "19.8443, -156.846, -20.3157, 0.37", "20.2742, -157.65, -20.6564, 0.81", "20.5373, -158.091, -20.86, 0.88", "20.9908, -158.762, -21.2041, 0.59", "21.3879, -159.297, -21.4988, 0.37", "21.7971, -159.803, -21.7977, 0.37", "22.3256, -160.411, -22.1736, 0.44", "23.4203, -161.572, -22.9328, 0.44", "24.1437, -162.248, -23.4227, 1.18", "24.6931, -162.719, -23.7864, 1.47", "25.2985, -163.211, -24.196, 1.47", "26.1831, -163.926, -24.8131, 1.18", "26.8588, -164.518, -25.3128, 0.29", "27.2702, -164.921, -25.64, 0.29", "27.5731, -165.249, -25.907, 0.29", "28.0848, -165.892, -26.4374, 0.59", "28.5506, -166.591, -27.0003, 0.66", "28.7873, -167.029, -27.343, 0.74", "29.0176, -167.542, -27.7148, 0.59", "29.2613, -168.175, -28.1371, 0.44", "29.542, -168.985, -28.657, 0.29", "29.6975, -169.533, -28.9733, 0.37", "29.9089, -170.456, -29.4591, 0.52", "30.0501, -171.165, -29.7809, 1.03", "30.1784, -171.908, -30.1036, 1.55", "30.2941, -172.552, -30.3747, 1.55", "30.5804, -174.176, -31.0493, 0.44", "30.7791, -175.235, -31.5106, 0.37", "31.3018, -177.593, -32.6687, 0.29", "31.4447, -178.092, -32.9496, 0.29", "31.936, -179.374, -33.7796, 1.47", "32.1515, -179.788, -34.1016, 1.92", "32.608, -180.446, -34.7418, 2.06", "33.2999, -181.247, -35.7427, 0.81", "34.1856, -182.08, -37.11, 0.29", "34.7337, -182.568, -37.9984, 0.29", "35.4578, -183.182, -39.152, 0.44", "35.8259, -183.49, -39.696, 0.52", "36.7365, -184.257, -40.9171, 0.29", "37.4462, -184.859, -41.7403, 0.88", "37.8924, -185.234, -42.1541, 0.74", "39.0437, -186.217, -42.9231, 0.29", "39.9177, -186.946, -43.3255, 0.29", "40.8134, -187.684, -43.6294, 0.59", "41.4141, -188.176, -43.7785, 0.66", "42.5681, -189.136, -44.0238, 0.29", "43.7171, -190.145, -44.2744, 0.29", "44.4474, -190.87, -44.4775, 0.29", "45.0973, -191.622, -44.6971, 1.03", "45.5524, -192.21, -44.8876, 1.47", "45.9459, -192.779, -45.0954, 1.18", "46.6332, -193.885, -45.5417, 0.22", "47.2316, -194.906, -45.9725, 0.22", "47.9792, -196.223, -46.5558, 0.22", "48.2983, -196.765, -46.8061, 0.52", "48.8494, -197.669, -47.2404, 0.29", "49.369, -198.503, -47.6597, 0.29", "49.6951, -199.006, -47.9363, 0.88", "50.1531, -199.681, -48.2946, 0.88", "50.8368, -200.703, -48.8038, 0.29", "51.1563, -201.176, -49.0179, 0.29", "51.7433, -201.995, -49.3344, 0.96", "52.1787, -202.537, -49.5046, 1.4", "52.6579, -203.087, -49.6455, 1.77", "52.9672, -203.411, -49.7145, 1.77", "54.1926, -204.608, -49.9608, 0.22", "55.467, -205.754, -50.1768, 0.22", "56.4703, -206.582, -50.3506, 0.88", "56.9192, -206.938, -50.44, 1.33", "57.3707, -207.29, -50.555, 1.33", "58.3902, -208.067, -50.8469, 0.22", "59.6332, -208.999, -51.2595, 0.22", "60.9234, -210.002, -51.768, 0.22", "62.0669, -210.956, -52.2941, 0.22", "62.7213, -211.538, -52.6245, 0.74", "63.0677, -211.872, -52.8159, 0.88", "63.4619, -212.299, -53.062, 0.52", "64.1257, -213.161, -53.5493, 0.22", "64.4494, -213.654, -53.8094, 0.88", "64.8034, -214.238, -54.091, 1.33", "65.0854, -214.724, -54.3059, 1.33", "65.7454, -215.916, -54.7865, 0.29", "66.5218, -217.379, -55.3084, 0.29", "66.9049, -218.108, -55.5353, 0.44", "67.2456, -218.749, -55.7097, 0.59", "67.563, -219.338, -55.8498, 0.59", "68.0814, -220.281, -56.0468, 0.22", "68.6134, -221.25, -56.2292, 0.22", "68.9441, -221.84, -56.3426, 0.74", "69.1414, -222.192, -56.4176, 0.88", "69.3984, -222.642, -56.5354, 0.88", "69.9117, -223.518, -56.7759, 0.22", "70.8131, -225.004, -57.2284, 0.22", "71.2085, -225.654, -57.4518, 0.52", "71.4601, -226.078, -57.6103, 0.66", "71.8488, -226.736, -57.8718, 0.44", "77.0952, -233.336, -63.0365, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.2705, -115.556, -3.03047, 2.28", "-10.8883, -117.335, -2.448, 2.28", "-11.4495, -118.86, -1.84058, 1.62", "-12.1774, -120.674, -1.07313, 1.33", "-12.9289, -122.378, -0.342527, 0.88", "-13.3075, -123.163, -0.00315367, 0.88", "-13.9237, -124.316, 0.509195, 1.03", "-15.1885, -126.375, 1.47357, 1.03", "-16.3106, -127.947, 2.25561, 0.96", "-17.2315, -129.082, 2.82144, 0.88", "-18.0465, -130.047, 3.24726, 1.11", "-18.9751, -131.207, 3.62635, 1.33", "-19.7382, -132.309, 3.83371, 1.55", "-20.3851, -133.43, 3.89924, 1.25", "-20.8877, -134.559, 3.84603, 0.96", "-21.3671, -136.109, 3.64779, 0.88", "-21.7895, -138.032, 3.29149, 0.88", "-22.1176, -140.087, 2.85551, 0.88", "-22.3428, -141.896, 2.45561, 1.03", "-22.5049, -143.587, 2.08004, 1.03", "-22.6584, -145.578, 1.66509, 1.03", "-22.7668, -147.395, 1.31727, 1.25", "-22.8359, -149.493, 0.960727, 1.55", "-22.8302, -151.099, 0.718261, 1.55", "-22.7315, -153.315, 0.407208, 1.33", "-22.5993, -155.127, 0.167123, 1.33", "-22.4757, -156.745, -0.0272517, 1.11", "-22.3022, -158.479, -0.171054, 1.11", "-22.1186, -160.389, -0.256986, 0.96", "-22.0109, -161.811, -0.26698, 0.96", "-21.8926, -163.873, -0.181524, 0.88", "-21.7795, -166.597, 0.024794, 0.88", "-21.7075, -168.962, 0.281101, 1.03", "-21.6623, -171.07, 0.567631, 1.25", "-21.6424, -173.075, 0.88263, 1.33", "-21.6421, -174.654, 1.1552, 1.62", "-21.6213, -176.277, 1.44822, 2.5", "-21.5837, -177.158, 1.59205, 2.8", "-21.538, -178.247, 1.71472, 3.02", "-21.4522, -179.267, 1.81716, 3.02", "-21.3894, -179.951, 1.87957, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.535714, -50.268, -7.77, 0.81", "-0.881087, -51.8735, -7.72556, 0.81", "-1.20118, -52.9523, -7.65604, 0.66", "-1.63979, -54.1561, -7.56498, 0.66", "-2.14947, -55.4159, -7.4692, 0.52", "-2.36072, -55.9191, -7.43219, 0.52", "-2.92022, -57.2447, -7.33938, 0.74", "-3.48289, -58.5925, -7.1862, 0.74", "-3.98001, -59.7068, -7.07179, 0.88", "-4.55866, -60.9138, -6.97857, 0.59", "-4.93832, -61.7005, -6.94957, 1.03", "-5.28494, -62.4732, -6.92778, 1.25", "-5.62489, -63.3831, -6.90194, 1.03", "-5.98081, -64.5599, -6.86972, 0.66", "-6.24665, -65.5203, -6.8466, 0.66", "-6.51832, -66.5116, -6.83791, 0.81", "-6.81605, -67.6724, -6.8597, 0.81", "-7.02512, -68.645, -6.91799, 0.66", "-7.18404, -69.6767, -7.02235, 0.52", "-7.24923, -70.2899, -7.12034, 0.52", "-7.31874, -71.0416, -7.26057, 0.52", "-7.42193, -72.1128, -7.48807, 0.66", "-7.53233, -73.0853, -7.70579, 0.66", "-7.67123, -74.1124, -7.94692, 0.59", "-7.85161, -75.2379, -8.20342, 1.18", "-8.00125, -76.2182, -8.4166, 1.55", "-8.16617, -77.1553, -8.60294, 1.99", "-8.44908, -78.2872, -8.80877, 2.73", "-8.72152, -79.1221, -8.94692, 2.87", "-9.02186, -79.8996, -9.08005, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.535714, -50.268, -7.77, 0.52", "0.664017, -51.957, -8.7979, 0.52", "0.919831, -52.3537, -9.01037, 0.52", "1.79594, -53.666, -9.69963, 0.52", "2.49354, -54.6419, -10.1987, 0.66", "2.93822, -55.2402, -10.4752, 0.66", "3.33615, -55.7468, -10.6891, 0.44", "3.8351, -56.443, -11.0003, 0.88", "4.27019, -57.0952, -11.2588, 1.33", "4.72923, -57.7975, -11.4927, 1.47", "5.29113, -58.6121, -11.8438, 1.03", "6.08399, -59.8725, -12.5812, 0.44", "6.43222, -60.6308, -13.2465, 0.44", "6.72419, -61.4901, -14.3266, 0.37", "6.91086, -62.1097, -15.2876, 0.37", "7.2376, -62.9094, -16.7103, 0.37", "7.54619, -63.4387, -17.7612, 0.74", "7.83545, -63.8036, -18.5277, 0.96", "8.31813, -64.3172, -19.5383, 0.96", "9.24547, -65.2546, -21.2616, 0.44", "9.8985, -65.9022, -22.3194, 1.33", "10.7789, -66.793, -23.6124, 1.55", "11.5589, -67.612, -24.7293, 1.33", "12.5594, -68.7275, -26.1114, 0.81", "12.9644, -69.205, -26.6327, 1.25", "13.4445, -69.7965, -27.1767, 0.88", "13.9177, -70.4581, -27.6895, 0.37", "14.2775, -71.0386, -28.052, 0.81", "14.6199, -71.6587, -28.3885, 1.03", "14.8225, -72.0321, -28.5564, 1.03", "15.5502, -73.3288, -29.0814, 0.29", "15.9241, -73.988, -29.3158, 0.29", "16.4291, -74.8442, -29.5661, 1.84", "16.9043, -75.5687, -29.7546, 2.14", "18.2294, -77.367, -30.2111, 0.29", "18.9106, -78.1964, -30.4054, 0.81", "19.5957, -78.9464, -30.5586, 0.81", "20.3131, -79.6504, -30.6994, 0.52", "21.3108, -80.5255, -30.9006, 1.25", "21.9739, -81.0606, -31.0441, 1.4", "23.6835, -82.3887, -31.4127, 0.22", "24.7242, -83.1973, -31.6087, 0.22", "25.8854, -84.1204, -31.7955, 1.4", "26.5987, -84.7308, -31.8918, 2.21", "26.9154, -85.0314, -31.9199, 2.21", "28.9073, -87.139, -32.0056, 0.22", "29.433, -87.731, -32.0171, 0.74", "29.899, -88.2786, -32.0347, 1.03", "30.6514, -89.224, -32.0751, 0.59", "32.4055, -91.5517, -32.1883, 0.22", "34.6429, -94.5747, -32.3775, 0.22", "35.4386, -95.6493, -32.4806, 0.81", "36.0353, -96.444, -32.5704, 0.96", "37.9937, -99.0346, -32.9113, 0.22", "39.2424, -100.636, -33.1719, 0.22", "39.9516, -101.522, -33.3596, 0.88", "40.6718, -102.383, -33.5876, 0.88", "42.7253, -104.79, -34.2786, 0.15", "44.2516, -106.551, -34.7347, 0.15", "45.1438, -107.548, -34.9916, 0.15", "45.9497, -108.456, -35.2154, 1.62", "46.4461, -109.04, -35.3469, 1.92", "46.8284, -109.509, -35.4277, 1.92", "49.2555, -112.617, -35.8617, 0.22", "49.7628, -113.281, -35.9279, 0.66", "50.1437, -113.797, -35.9706, 0.88", "50.5357, -114.322, -36.0161, 0.88", "51.8468, -116.04, -36.2912, 0.15", "52.8933, -117.43, -36.6878, 0.15", "53.4987, -118.275, -37.0305, 0.81", "53.8888, -118.876, -37.312, 1.03", "54.2048, -119.418, -37.5952, 1.03", "55.1355, -121.234, -38.6605, 0.22", "55.9974, -123.196, -39.9595, 0.22", "56.3402, -123.994, -40.5425, 0.22", "56.8455, -125.149, -41.4462, 1.03", "57.1127, -125.75, -41.9195, 1.62", "57.397, -126.357, -42.4258, 1.62", "57.9231, -127.383, -43.3294, 1.03", "59.0889, -129.49, -45.2583, 0.22", "59.6814, -130.478, -46.268, 0.44", "60.0383, -131.023, -46.8473, 0.44", "60.845, -132.225, -48.129, 0.66", "61.254, -132.83, -48.7499, 0.96", "61.7338, -133.53, -49.4443, 0.37", "63.274, -135.775, -51.552, 0.66", "63.6005, -136.237, -51.9637, 0.66", "64.8274, -137.917, -53.4566, 0.22", "65.4908, -138.804, -54.1898, 0.22", "66.1001, -139.596, -54.8126, 0.81", "66.6849, -140.31, -55.3283, 0.96", "67.0492, -140.774, -55.5398, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "23.1622, 163.783, -45.0478, 0.37", "25.4747, 162.826, -42.9946, 0.37", "25.9465, 162.631, -42.5757, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "23.1622, 163.783, -45.0478, 0.22", "24.0985, 165.607, -45.7465, 0.22", "24.5558, 166.605, -46.1448, 0.22", "24.8967, 167.398, -46.4682, 0.74", "25.0161, 167.693, -46.5865, 0.74", "25.5692, 169.061, -47.1349, 0.15", "25.927, 169.945, -47.4896, 0.15", "26.1405, 170.587, -47.8086, 0.66", "26.257, 170.987, -47.9757, 0.88", "26.3973, 171.446, -48.1383, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-10.2657, 42.6333, 4.25108, 0.66", "-10.5914, 44.6493, 4.16004, 0.66", "-10.6606, 45.4084, 4.16812, 0.96", "-10.7404, 46.2976, 4.19435, 0.96", "-10.8442, 47.5112, 4.24654, 0.59", "-10.9258, 48.5855, 4.3034, 0.59", "-11.0042, 49.8549, 4.38147, 0.59", "-11.0867, 51.6941, 4.56014, 0.59", "-11.1, 52.561, 4.65322, 0.52", "-11.0938, 53.8549, 4.80308, 0.88", "-11.0887, 54.7934, 4.90482, 1.11", "-11.1022, 55.9148, 5.00783, 1.11", "-11.1355, 57.2064, 5.12409, 0.74", "-11.2004, 58.5608, 5.24137, 0.74", "-11.3016, 60.294, 5.39348, 0.74", "-11.3932, 61.4906, 5.48699, 0.52", "-11.514, 62.7723, 5.56361, 0.52", "-11.6103, 63.6966, 5.60467, 0.96", "-11.751, 65.0639, 5.63554, 1.11", "-11.9593, 67.0945, 5.64577, 1.11", "-12.0916, 68.4303, 5.63523, 1.11", "-12.2044, 69.7604, 5.63849, 0.81", "-12.2851, 70.9286, 5.65319, 0.74", "-12.3444, 72.1444, 5.68514, 0.74", "-12.3731, 73.2822, 5.73833, 0.44", "-12.3934, 74.2429, 5.80441, 0.44", "-12.4404, 75.82, 5.95564, 0.74", "-12.4765, 76.9067, 6.08249, 0.74", "-12.5094, 78.0611, 6.22857, 0.37", "-12.5108, 79.258, 6.39381, 0.74", "-12.4901, 80.3063, 6.50167, 0.96", "-12.4467, 81.5125, 6.57972, 0.96", "-12.3785, 82.8456, 6.59934, 0.81", "-12.296, 84.1001, 6.58152, 0.52", "-12.1872, 85.4136, 6.53477, 0.52", "-11.9958, 87.1385, 6.45439, 1.03", "-11.8735, 88.0556, 6.40612, 1.55", "-11.7535, 88.8852, 6.3562, 1.69", "-11.6743, 89.4257, 6.32427, 1.69", "-11.4762, 90.76, 6.26959, 0.37", "-11.3114, 91.8725, 6.2662, 0.44", "-11.21, 92.4479, 6.30418, 0.44", "-11.0766, 93.1085, 6.3711, 0.44", "-10.8379, 94.199, 6.51123, 0.29", "-10.721, 94.6621, 6.57645, 0.59", "-10.488, 95.4468, 6.69641, 0.44", "-10.1074, 96.6802, 6.89254, 0.29", "-9.7738, 97.8238, 7.07506, 1.18", "-9.60608, 98.4393, 7.17377, 1.18", "-9.36112, 99.3639, 7.3185, 0.52", "-9.12777, 100.251, 7.45689, 0.29", "-8.85951, 101.261, 7.64494, 0.29", "-8.64272, 102.171, 7.86163, 0.29", "-8.52567, 102.765, 8.02702, 0.29", "-8.33932, 103.945, 8.3898, 0.81", "-8.19939, 104.978, 8.73102, 0.44", "-8.04609, 105.967, 9.05456, 0.22", "-7.84421, 106.966, 9.37664, 0.44", "-7.75894, 107.348, 9.50539, 0.44", "-7.58292, 108.167, 9.78438, 0.29", "-7.44185, 108.907, 10.0386, 0.29", "-7.24108, 109.92, 10.3642, 0.29", "-7.10324, 110.569, 10.5495, 0.29", "-6.91777, 111.405, 10.7791, 0.66", "-6.7729, 112.084, 10.9717, 0.66", "-6.59129, 112.945, 11.1918, 0.74", "-6.43453, 113.883, 11.4283, 0.37", "-6.33604, 114.618, 11.6123, 0.37", "-6.19825, 115.648, 11.837, 0.52", "-6.08457, 116.428, 11.9772, 0.59", "-5.90579, 117.617, 12.1744, 0.44", "-5.77453, 118.455, 12.306, 0.29", "-5.67573, 119.042, 12.4025, 0.29", "-5.46276, 120.34, 12.6309, 1.11", "-5.34477, 121.081, 12.7701, 1.25", "-5.26301, 121.611, 12.8751, 1.25", "-5.07341, 122.721, 13.0996, 0.66", "-4.93282, 123.385, 13.2179, 0.29", "-4.67844, 124.417, 13.3957, 0.29", "-4.42328, 125.339, 13.5509, 0.29", "-4.16713, 126.174, 13.6892, 0.29", "-3.75291, 127.42, 13.8901, 0.96", "-3.56974, 127.962, 13.9682, 1.47", "-3.4244, 128.427, 14.025, 1.47", "-3.34757, 128.701, 14.0524, 1.47", "-3.15434, 129.506, 14.1271, 0.74", "-2.95604, 130.429, 14.2156, 0.29", "-2.78221, 131.376, 14.3082, 0.52", "-2.6217, 132.25, 14.3994, 0.74", "-2.39234, 133.36, 14.529, 0.44", "-2.18712, 134.241, 14.6419, 0.29", "-2.02569, 134.859, 14.727, 0.29", "-1.76983, 135.705, 14.8553, 0.66", "-1.567, 136.31, 14.95, 0.74", "-1.26952, 137.161, 15.0841, 0.74", "-0.944801, 138.115, 15.2399, 0.29", "-0.672721, 138.968, 15.3811, 0.29", "-0.165958, 140.687, 15.6654, 0.29", "0.131511, 141.856, 15.9104, 0.52", "0.285362, 142.56, 16.0811, 1.18", "0.395082, 143.171, 16.2435, 1.4", "0.534887, 144.163, 16.5254, 1.4", "0.61613, 144.942, 16.7547, 0.66", "0.781642, 146.768, 17.293, 0.29", "0.905267, 147.92, 17.6111, 0.29", "1.00917, 148.617, 17.7686, 0.37", "1.18552, 149.56, 17.9354, 0.37", "1.40374, 150.535, 18.0724, 0.37", "1.85709, 152.267, 18.2536, 0.37", "2.43259, 154.152, 18.3674, 0.37", "3.04338, 155.981, 18.4663, 1.33", "3.37082, 156.858, 18.5019, 1.99", "3.64872, 157.554, 18.5222, 1.99", "3.76799, 157.85, 18.5276, 1.99", "3.99041, 158.394, 18.5384, 1.99", "4.45488, 159.528, 18.5825, 0.59", "4.99472, 160.84, 18.6823, 0.29", "5.37252, 161.753, 18.8033, 0.59", "5.66547, 162.457, 18.9196, 0.59", "6.27885, 163.928, 19.2064, 0.37", "6.60515, 164.743, 19.3866, 0.37", "7.10017, 166.061, 19.7111, 0.37", "7.64534, 167.647, 20.1343, 0.74", "7.84006, 168.301, 20.3034, 0.74", "8.00439, 168.978, 20.4781, 0.88", "8.18427, 169.963, 20.7263, 0.44", "8.41606, 171.673, 21.1027, 0.29", "8.50122, 172.595, 21.2453, 0.52", "8.61101, 174.319, 21.3945, 1.25", "8.64279, 175.057, 21.4342, 1.62", "8.66241, 175.543, 21.4361, 1.62", "8.70304, 176.547, 21.3946, 0.96", "8.7822, 178.05, 21.2657, 0.29", "8.85348, 178.915, 21.1771, 0.29", "8.96946, 179.965, 21.0819, 0.29", "9.09106, 181.062, 21.0162, 0.74", "9.13641, 181.559, 21.0081, 0.96", "9.17887, 182.132, 21.0249, 0.96", "9.27101, 183.581, 21.1024, 0.52", "9.39598, 185.583, 21.1986, 0.37", "9.4768, 186.956, 21.268, 0.29", "9.53735, 188.252, 21.3235, 0.66", "9.57382, 189.123, 21.3426, 0.66", "9.62982, 190.761, 21.3444, 0.29", "9.65772, 191.574, 21.3388, 0.29", "9.74112, 193.717, 21.3201, 0.29", "9.86174, 196.049, 21.3139, 1.99", "9.88967, 196.578, 21.3205, 2.28", "9.91971, 197.324, 21.3457, 1.55", "9.93992, 198.138, 21.4111, 0.88", "9.94342, 199.461, 21.5883, 0.22", "9.93008, 200.078, 21.6969, 0.22", "9.888, 201.202, 21.9339, 0.66", "9.86099, 201.913, 22.0837, 0.66", "9.82628, 203.116, 22.3267, 0.29", "9.78499, 205.045, 22.6777, 0.22", "9.78997, 206.023, 22.8473, 0.22", "9.82372, 207.059, 23.0149, 0.52", "9.93154, 208.357, 23.2087, 0.44", "10.0794, 209.488, 23.3649, 0.44", "10.3052, 210.794, 23.5235, 0.44", "10.7498, 212.819, 23.7592, 0.22", "11.1206, 214.326, 23.934, 0.66", "11.4552, 215.544, 24.0763, 1.77", "11.6492, 216.188, 24.153, 1.77", "11.8398, 216.765, 24.2245, 1.77", "12.1575, 217.608, 24.3378, 0.88", "12.535, 218.541, 24.5064, 0.29", "12.796, 219.172, 24.6462, 0.52", "13.4491, 220.8, 25.043, 0.22", "13.8241, 221.729, 25.2648, 0.52", "14.2525, 222.777, 25.5017, 0.52", "15.1847, 225.083, 25.9908, 0.22", "15.8953, 226.85, 26.3363, 0.37", "16.3558, 228.013, 26.5576, 0.37", "16.8547, 229.31, 26.7903, 1.92", "17.0755, 229.907, 26.8859, 2.21", "17.2903, 230.529, 26.9589, 2.21", "17.5446, 231.271, 26.9561, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-10.2657, 42.6333, 4.25108, 0.66", "-9.76567, 44.5089, 4.88709, 0.66", "-9.45669, 45.6521, 5.26555, 0.81", "-9.23824, 46.5001, 5.56862, 0.37", "-8.99621, 47.5217, 5.93471, 0.29", "-8.58017, 49.2352, 6.5385, 0.29", "-8.31125, 50.2377, 6.89756, 0.29", "-7.99138, 51.2025, 7.23052, 0.29", "-7.48927, 52.47, 7.70918, 0.29", "-7.0386, 53.5081, 8.11732, 0.29", "-6.58923, 54.5421, 8.52333, 0.74", "-6.27838, 55.2358, 8.80694, 0.74", "-5.68433, 56.4082, 9.30724, 0.29", "-5.33304, 57.0804, 9.60513, 0.37", "-4.52505, 58.6462, 10.2817, 0.37", "-4.1013, 59.532, 10.6625, 0.37", "-3.67243, 60.5804, 11.0935, 0.37", "-3.502, 61.0645, 11.2845, 0.37", "-3.23648, 61.9484, 11.6266, 0.22", "-3.00183, 62.8074, 11.9531, 0.22", "-2.79062, 63.4851, 12.2094, 0.66", "-2.55157, 64.3058, 12.4744, 0.96", "0.208385, 74.1997, 14.8151, 0.96", "4.75491, 82.6031, 19.2532, 0.96", "7.9646, 91.0539, 24.6631, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "29.348, 10.0349, 8.08265, 0.66", "30.2691, 8.79308, 7.17896, 0.66", "30.5285, 8.40926, 6.86654, 0.66", "30.9554, 7.81127, 6.40423, 0.88", "31.7249, 6.83467, 5.69464, 0.88", "32.2758, 6.20528, 5.26663, 0.88", "32.8025, 5.68134, 4.92604, 1.03", "33.4179, 5.11662, 4.56233, 1.03", "34.2919, 4.66184, 4.37775, 0.88", "34.9745, 4.54709, 4.42552, 0.88", "35.5603, 4.4973, 4.51837, 0.88", "36.4944, 4.38085, 4.67428, 0.81", "37.5837, 4.11541, 4.8106, 0.81", "38.2832, 3.84239, 4.82023, 0.81", "39.1766, 3.35387, 4.67684, 0.74", "40.1324, 2.73855, 4.41992, 0.88", "40.9812, 2.13731, 4.11229, 0.88", "41.8926, 1.42199, 3.69317, 0.52", "42.3461, 1.06968, 3.44476, 0.52", "42.889, 0.737014, 3.12762, 0.52", "43.5738, 0.446123, 2.74566, 0.52", "44.3459, 0.257277, 2.35112, 0.74", "45.1234, 0.149303, 1.97354, 0.74", "46.1047, 0.079023, 1.51557, 0.74", "47.3991, 0.030696, 0.941454, 0.74", "48.2943, 0.023001, 0.550553, 0.74", "49.0017, 0.046653, 0.263485, 0.74", "49.7666, 0.136944, 1.66725E-4, 0.74", "50.2149, 0.211614, -0.119535, 0.88", "51.4776, 0.497806, -0.38425, 0.88", "52.5544, 0.763194, -0.572625, 0.88", "53.8908, 1.07392, -0.797929, 0.66", "54.8728, 1.27214, -0.952372, 0.66", "57.41, 1.73014, -1.30535, 0.59", "58.2927, 1.87446, -1.41762, 0.52", "59.6295, 2.1081, -1.55294, 0.52", "60.4332, 2.28061, -1.6002, 0.52", "61.3014, 2.53836, -1.60626, 0.52", "62.3346, 2.90369, -1.57375, 0.52", "63.0251, 3.15801, -1.53568, 0.52", "64.1583, 3.5234, -1.48786, 0.52", "65.3889, 3.9155, -1.42816, 0.52", "66.5464, 4.2469, -1.38386, 0.52", "67.6321, 4.47253, -1.37887, 0.52", "68.8834, 4.59014, -1.43368, 0.52", "69.7575, 4.5376, -1.52149, 0.52", "70.5855, 4.37698, -1.60678, 0.52", "71.1478, 4.23772, -1.64422, 0.52", "71.8602, 4.06163, -1.65731, 0.52", "73.3081, 3.74076, -1.57312, 0.29", "75.8971, 3.28339, -1.23146, 0.29", "78.2423, 2.97418, -0.790618, 0.29", "79.4369, 2.87752, -0.490166, 0.29", "80.2938, 2.8354, -0.242257, 0.44", "81.2005, 2.83633, 0.082286, 0.59", "81.7721, 2.87438, 0.371205, 0.59", "82.6975, 3.14717, 1.13133, 0.59", "83.1747, 3.46614, 1.66923, 0.59", "92.7602, 1.39071, 0.980523, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "29.348, 10.0349, 8.08265, 1.11", "31.1764, 9.69648, 7.90874, 1.11", "32.3109, 9.35209, 7.75182, 1.11", "33.6085, 9.03849, 7.47332, 1.25", "34.6119, 8.89889, 7.24504, 1.47", "35.9743, 8.85988, 6.94899, 1.4", "37.1844, 8.94022, 6.70173, 1.4", "38.5464, 9.10666, 6.37631, 1.18", "40.3795, 9.68524, 5.95343, 1.18", "41.6242, 10.3615, 5.68618, 1.18", "42.6824, 11.0438, 5.46063, 1.18", "43.3109, 11.4558, 5.32734, 0.88", "43.9441, 11.7994, 5.18709, 0.88", "44.9537, 12.1147, 4.93789, 0.88", "46.5211, 12.2108, 4.51508, 1.11", "47.721, 12.1121, 4.15177, 1.11", "48.9402, 11.9241, 3.757, 1.11", "50.322, 11.638, 3.29509, 1.25", "51.7347, 11.2761, 2.81334, 1.33", "52.3893, 11.0796, 2.59054, 1.47", "53.4697, 10.7627, 2.25067, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-186.911, -139.831, -2.92374, 0.59", "-186.816, -141.731, -2.98901, 0.59", "-186.77, -142.53, -2.9836, 0.59", "-186.713, -143.227, -2.95584, 0.52", "-186.638, -144.03, -2.90077, 0.52", "-186.58, -144.897, -2.83042, 0.88", "-186.523, -145.857, -2.74339, 1.03", "-186.499, -146.428, -2.64902, 1.03", "-186.432, -147.433, -2.46393, 1.03", "-186.35, -148.295, -2.29117, 0.29", "-186.297, -148.909, -2.16473, 0.29", "-186.267, -149.417, -2.059, 0.29", "-186.262, -150.377, -1.86858, 0.59", "-186.302, -151.16, -1.68202, 0.74", "-186.365, -151.717, -1.53078, 0.88", "-186.449, -152.254, -1.37526, 0.88", "-186.542, -152.75, -1.21762, 0.88", "-186.707, -153.412, -0.997797, 0.81", "-187.122, -154.836, -0.522562, 0.37", "-187.345, -155.605, -0.258853, 1.03", "-187.574, -156.365, 0.0354204, 1.33", "-187.792, -157.056, 0.323956, 1.33", "-188.094, -157.938, 0.707062, 1.03", "-188.365, -158.678, 1.03128, 0.74", "-188.612, -159.321, 1.2898, 0.37", "-188.955, -160.163, 1.67824, 0.74", "-189.164, -160.645, 1.91428, 0.74", "-189.397, -161.241, 2.16288, 0.59", "-189.547, -161.7, 2.32256, 0.37", "-189.728, -162.377, 2.49297, 0.37", "-189.997, -163.508, 2.63808, 0.66", "-190.19, -164.321, 2.65258, 0.74", "-190.547, -165.706, 2.58599, 0.52", "-190.7, -166.287, 2.53138, 0.52", "-190.917, -166.979, 2.44489, 1.33", "-191.201, -167.842, 2.31349, 1.55", "-191.584, -168.973, 2.16187, 1.99", "-191.836, -169.645, 2.11083, 2.21", "-192.19, -170.474, 2.09255, 1.99", "-192.642, -171.472, 2.07307, 1.11", "-193.121, -172.618, 2.04685, 0.37", "-193.476, -173.597, 2.02984, 1.11", "-193.637, -174.093, 2.01942, 1.25", "-193.84, -174.734, 2.0067, 1.25", "-194.293, -176.149, 1.94247, 0.29", "-194.585, -177.052, 1.88168, 0.29", "-194.885, -177.88, 1.81785, 0.44", "-195.211, -178.739, 1.7431, 0.59", "-195.606, -179.751, 1.66429, 0.88", "-195.941, -180.59, 1.61144, 0.96", "-196.313, -181.395, 1.57388, 0.66", "-196.829, -182.347, 1.56208, 0.37", "-197.228, -183.024, 1.56267, 0.29", "-197.673, -183.725, 1.59514, 0.29", "-198.063, -184.336, 1.65277, 0.29", "-198.608, -185.153, 1.76339, 0.29", "-199.429, -186.274, 1.91276, 0.74", "-200.073, -187.043, 2.04462, 1.03", "-200.879, -187.93, 2.22822, 2.28", "-201.518, -188.571, 2.37838, 2.8", "-202.132, -189.177, 2.52196, 3.09", "-203.121, -190.189, 2.75338, 1.84", "-204.265, -191.349, 3.01044, 0.29", "-204.826, -191.949, 3.14641, 0.29", "-205.557, -192.808, 3.32795, 0.29", "-206.291, -193.752, 3.53281, 0.29", "-206.789, -194.536, 3.71499, 0.88", "-207.171, -195.242, 3.87996, 1.11", "-207.466, -195.853, 4.00198, 0.81", "-207.704, -196.382, 4.11021, 0.52", "-208.064, -197.271, 4.29848, 0.29", "-208.467, -198.324, 4.53287, 0.29", "-208.788, -199.225, 4.73795, 0.29", "-208.969, -199.712, 4.84701, 0.29", "-209.312, -200.681, 5.06795, 0.81", "-209.602, -201.581, 5.27785, 1.11", "-209.808, -202.287, 5.44539, 0.88", "-210.096, -203.29, 5.68135, 0.29", "-210.441, -204.513, 5.97229, 0.29", "-210.778, -205.612, 6.19082, 0.29", "-210.907, -206.014, 6.25951, 0.29", "-211.212, -206.978, 6.4008, 0.74", "-211.431, -207.67, 6.48556, 0.74", "-211.725, -208.65, 6.59166, 0.44", "-212.052, -209.79, 6.70148, 0.29", "-212.221, -210.358, 6.74976, 0.29", "-212.447, -211.143, 6.84722, 0.29", "-212.678, -212.082, 7.0127, 0.29", "-212.794, -212.619, 7.14289, 0.74", "-212.898, -213.11, 7.29335, 0.74", "-213.086, -213.986, 7.62384, 0.44", "-213.32, -214.973, 8.01425, 0.29", "-213.538, -215.82, 8.38242, 0.74", "-213.699, -216.414, 8.64743, 1.11", "-213.854, -216.914, 8.86607, 1.69", "-213.988, -217.335, 9.04336, 1.92", "-214.182, -217.947, 9.28386, 1.92", "-214.456, -218.877, 9.60598, 1.62", "-214.782, -220.009, 9.97265, 0.29", "-215.034, -220.918, 10.249, 0.22", "-215.257, -221.671, 10.465, 0.22", "-215.571, -222.693, 10.7346, 0.59", "-215.846, -223.543, 10.9379, 0.74", "-216.057, -224.136, 11.0713, 0.74", "-216.354, -224.897, 11.2479, 0.44", "-216.64, -225.542, 11.3971, 0.29", "-216.984, -226.179, 11.565, 0.29", "-217.807, -227.444, 11.9496, 0.44", "-218.29, -228.092, 12.1427, 0.59", "-218.776, -228.695, 12.3142, 0.59", "-219.349, -229.388, 12.4821, 0.52", "-220.225, -230.43, 12.693, 1.33", "-220.946, -231.278, 12.8283, 2.06", "-221.619, -232.103, 12.9261, 2.21", "-222.103, -232.768, 12.9799, 2.21", "-222.798, -233.862, 13.0348, 0.81", "-223.213, -234.659, 13.0463, 0.29", "-223.521, -235.389, 13.0302, 0.44", "-223.708, -235.946, 13.0186, 0.44", "-223.941, -236.763, 13.0159, 0.29", "-224.112, -237.378, 13.0004, 0.29", "-224.33, -238.14, 12.9808, 0.29", "-224.495, -238.636, 12.9675, 0.74", "-224.676, -239.084, 12.9688, 0.88", "-224.918, -239.607, 12.9894, 0.88", "-225.321, -240.449, 13.0706, 0.29", "-225.733, -241.281, 13.2146, 0.29", "-226.128, -242.111, 13.4399, 0.29", "-226.567, -243.107, 13.7685, 0.52", "-226.767, -243.571, 13.9426, 0.52", "-227.11, -244.413, 14.3033, 0.29", "-227.317, -244.99, 14.5968, 0.29", "-227.668, -246.149, 15.2625, 0.59", "-227.849, -246.802, 15.6768, 0.29", "-227.976, -247.225, 15.9739, 0.29", "-228.19, -247.802, 16.4156, 0.74", "-228.585, -248.547, 17.0342, 0.88", "-228.984, -249.094, 17.5063, 0.29", "-229.449, -249.586, 17.9484, 0.29", "-230.109, -250.199, 18.4731, 0.96", "-230.652, -250.689, 18.8389, 1.11", "-231.334, -251.325, 19.2032, 1.11", "-232.055, -252.068, 19.5311, 0.29", "-232.52, -252.631, 19.7379, 0.22", "-232.889, -253.203, 19.9043, 0.44", "-233.234, -253.889, 20.0617, 0.44", "-233.695, -255.058, 20.2583, 0.22", "-233.944, -255.796, 20.3433, 0.22", "-234.109, -256.351, 20.3781, 0.22", "-234.291, -256.983, 20.3956, 0.59", "-234.421, -257.438, 20.4048, 0.74", "-234.813, -258.785, 20.3947, 0.29", "-235.023, -259.502, 20.3761, 0.29", "-235.29, -260.396, 20.3434, 0.44", "-235.534, -261.252, 20.3136, 0.44", "-235.839, -262.385, 20.2941, 0.52", "-236.014, -263.03, 20.295, 0.96", "-236.198, -263.671, 20.3137, 1.4", "-236.406, -264.319, 20.3301, 1.4", "-236.962, -265.801, 20.4437, 0.29", "-237.563, -267.227, 20.6297, 0.22", "-237.883, -267.913, 20.764, 0.37", "-238.426, -268.988, 21.0464, 0.37", "-238.994, -270.029, 21.3776, 0.29", "-239.792, -271.372, 21.8753, 0.74", "-240.24, -272.048, 22.1611, 1.11", "-240.759, -272.758, 22.4722, 1.25", "-241.307, -273.455, 22.7661, 1.11", "-241.834, -274.096, 23.0155, 0.59", "-242.522, -274.928, 23.2897, 0.29", "-242.928, -275.44, 23.3924, 0.29", "-243.682, -276.427, 23.5432, 0.22", "-244.178, -277.106, 23.6279, 0.22", "-244.454, -277.494, 23.6731, 0.66", "-244.88, -278.102, 23.7445, 0.66", "-245.745, -279.368, 23.9236, 0.29", "-246.272, -280.127, 24.0442, 0.29", "-246.829, -280.882, 24.1702, 0.29", "-247.413, -281.625, 24.291, 0.66", "-247.883, -282.19, 24.3778, 0.66", "-248.64, -283.061, 24.501, 0.22", "-249.161, -283.644, 24.5747, 0.22", "-250.034, -284.625, 24.6838, 0.22", "-251.555, -286.371, 24.8305, 0.22", "-252.007, -286.94, 24.8591, 0.22", "-252.471, -287.593, 24.8739, 1.11", "-252.716, -288.003, 24.868, 1.11", "-252.829, -288.242, 24.8636, 1.11", "-253.047, -288.873, 24.8542, 0.66", "-253.305, -289.921, 24.8353, 0.22", "-253.422, -290.565, 24.8332, 0.52", "-253.597, -292.046, 24.8549, 0.22", "-253.732, -293.248, 24.8834, 0.22", "-253.79, -293.762, 24.9006, 0.59", "-253.866, -294.413, 24.9321, 0.59", "-253.973, -295.355, 24.9765, 0.52", "-254.115, -296.746, 25.0384, 0.22", "-254.182, -297.562, 25.0738, 0.22", "-254.205, -298.048, 25.0973, 0.22", "-254.22, -298.602, 25.1244, 0.66", "-254.214, -299.392, 25.2151, 0.81", "-254.147, -300.252, 25.3946, 0.59", "-253.911, -301.462, 25.8252, 1.25", "-253.696, -302.092, 26.1355, 1.69", "-253.538, -302.397, 26.3306, 1.92", "-252.821, -303.357, 27.108, 1.18", "-252.092, -304.061, 27.8406, 0.22", "-251.201, -304.689, 28.6449, 0.22", "-250.58, -305.028, 29.1574, 0.22", "-249.785, -305.41, 29.7513, 0.22", "-249.201, -305.677, 30.1444, 0.66", "-248.76, -305.883, 30.3989, 0.66", "-247.552, -306.455, 31.0294, 0.22", "-247.089, -306.685, 31.252, 0.37", "-246.622, -306.972, 31.4854, 0.37", "-246.25, -307.256, 31.6918, 0.22", "-245.692, -307.754, 32.0237, 0.22", "-249.714, -316.667, 33.6329, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-186.911, -139.831, -2.92374, 0.37", "-188.377, -139.492, -2.65898, 0.37", "-188.996, -139.379, -2.5751, 0.37", "-190.327, -139.188, -2.48463, 0.29", "-191.342, -139.08, -2.45208, 0.44", "-192.325, -139.008, -2.44442, 0.66", "-192.891, -138.984, -2.45663, 0.81", "-193.383, -138.984, -2.49543, 0.81", "-194.917, -139.031, -2.68502, 0.22", "-195.399, -139.058, -2.77006, 0.22", "-196.265, -139.113, -2.92484, 0.74", "-196.976, -139.155, -3.05768, 0.88", "-198.16, -139.233, -3.31272, 0.22", "-198.648, -139.258, -3.45953, 0.22", "-199.102, -139.285, -3.63375, 0.22", "-199.619, -139.325, -3.86313, 0.74", "-200.167, -139.398, -4.1463, 0.88", "-200.769, -139.547, -4.53662, 0.88", "-202.095, -140.064, -5.59659, 0.22", "-202.564, -140.289, -6.01474, 0.22", "-202.95, -140.491, -6.38914, 0.74", "-203.433, -140.782, -6.94238, 0.74", "-204.438, -141.403, -8.00809, 0.29", "-204.753, -141.596, -8.31477, 0.29", "-205.267, -141.912, -8.77229, 0.88", "-205.884, -142.25, -9.2829, 1.03", "-207.747, -143.126, -10.7215, 0.22", "-209.518, -143.88, -11.9867, 0.22", "-210.236, -144.15, -12.44, 0.22", "-210.662, -144.301, -12.6929, 1.11", "-211.177, -144.485, -12.9767, 1.11", "-211.729, -144.673, -13.2249, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-21.3894, -179.951, 1.87957, 0.81", "-20.1065, -180.663, 1.27155, 0.81", "-19.0747, -181.172, 0.764635, 0.52", "-17.6105, -181.836, 0.0233402, 0.52", "-16.9731, -182.136, -0.306658, 0.37", "-15.7019, -182.756, -0.972996, 0.37", "-15.1975, -183.011, -1.23891, 0.66", "-14.7536, -183.24, -1.49209, 0.88", "-14.3832, -183.434, -1.69885, 0.88", "-13.4369, -184.041, -2.23089, 0.59", "-12.5972, -184.702, -2.70525, 0.66", "-11.7595, -185.463, -3.17582, 0.74", "-11.2465, -185.925, -3.46204, 0.74", "-10.8478, -186.255, -3.68231, 0.52", "-10.1977, -186.732, -4.04193, 0.29", "-9.49863, -187.134, -4.41191, 0.96", "-8.85858, -187.44, -4.73535, 1.03", "-8.43243, -187.623, -4.93765, 1.03", "-7.45425, -188.019, -5.37269, 0.66", "-7.04398, -188.19, -5.55729, 0.52", "-6.10241, -188.6, -5.98417, 0.59", "-5.17047, -189.064, -6.41082, 0.59", "-4.31623, -189.555, -6.81125, 0.52", "-3.61276, -190.014, -7.15166, 0.52", "-2.8796, -190.548, -7.51855, 0.96", "-2.42784, -190.887, -7.76121, 1.18", "-1.68852, -191.436, -8.1866, 0.66", "-0.819325, -192.028, -8.69514, 0.37", "-0.2769, -192.361, -9.01639, 0.37", "0.844133, -192.975, -9.68617, 0.88", "1.84814, -193.496, -10.2502, 1.03", "2.61681, -193.892, -10.6663, 0.81", "3.33268, -194.259, -11.0323, 0.52", "4.18207, -194.692, -11.4402, 0.52", "4.85467, -195.048, -11.7396, 0.52", "5.79246, -195.616, -12.1283, 0.52", "6.59024, -196.157, -12.4374, 1.33", "7.09067, -196.533, -12.6257, 1.69", "7.66668, -197.024, -12.8375, 1.69", "8.59577, -197.899, -13.2611, 1.11", "9.57287, -198.867, -13.7936, 0.44", "10.1799, -199.466, -14.1991, 0.44", "10.6569, -199.93, -14.5616, 0.29", "11.1802, -200.436, -15.0244, 0.29", "12.3319, -201.516, -16.1586, 1.03", "12.6577, -201.81, -16.513, 1.4", "12.9989, -202.131, -16.9215, 1.4", "14.058, -203.262, -18.2957, 0.22", "14.616, -203.895, -19.0305, 0.52", "14.8931, -204.222, -19.3864, 0.52", "15.3764, -204.844, -19.9783, 0.29", "16.0493, -205.747, -20.8137, 0.29", "16.4659, -206.307, -21.3148, 0.29", "16.8845, -206.906, -21.8266, 0.66", "17.2033, -207.356, -22.1778, 0.81", "17.4386, -207.684, -22.4238, 0.81", "17.8465, -208.197, -22.8048, 0.59", "18.3171, -208.718, -23.2204, 0.29", "18.7768, -209.238, -23.5889, 0.29", "19.3047, -209.921, -23.9723, 0.66", "19.7198, -210.53, -24.2183, 0.66", "20.2876, -211.472, -24.4698, 0.29", "20.617, -212.084, -24.56, 0.29", "21.1809, -213.209, -24.634, 0.66", "21.5785, -214.01, -24.632, 0.66", "22.0794, -215.061, -24.5639, 0.44", "22.558, -216.135, -24.4412, 1.47", "22.9153, -217.002, -24.313, 1.84", "23.1124, -217.512, -24.2331, 1.84", "23.2258, -217.828, -24.1958, 1.84", "23.5184, -218.635, -24.1176, 1.33", "23.889, -219.606, -24.0538, 0.52", "24.0913, -220.117, -24.03, 0.52", "24.3692, -220.811, -24.0002, 0.52", "24.8173, -221.919, -23.9438, 0.29", "25.0572, -222.492, -23.9105, 0.29", "25.423, -223.309, -23.853, 0.29", "25.7836, -224.061, -23.7937, 0.44", "26.323, -225.071, -23.7296, 0.44", "26.8175, -225.89, -23.7146, 0.44", "27.195, -226.46, -23.7399, 1.33", "27.6256, -227.111, -23.8123, 1.84", "28.0399, -227.686, -23.9169, 1.84", "28.7358, -228.573, -24.1274, 0.96", "29.6463, -229.653, -24.4413, 0.22", "30.4201, -230.523, -24.7329, 0.22", "31.5128, -231.692, -25.1773, 0.22", "32.1726, -232.346, -25.4565, 0.22", "32.9236, -233.013, -25.7831, 0.22", "33.5847, -233.548, -26.088, 0.44", "34.3675, -234.128, -26.4773, 0.88", "35.1117, -234.661, -26.8846, 1.03", "35.595, -235.005, -27.1628, 1.03", "36.155, -235.438, -27.4956, 0.88", "36.7126, -235.846, -27.8349, 0.29", "37.1198, -236.12, -28.0675, 0.29", "37.7598, -236.502, -28.3863, 0.29", "38.5828, -236.942, -28.7469, 0.37", "39.2175, -237.244, -28.984, 0.37", "39.7846, -237.481, -29.1673, 0.29", "40.8903, -237.876, -29.4776, 0.29", "41.7586, -238.159, -29.7169, 0.81", "42.2439, -238.317, -29.8569, 0.81", "43.1762, -238.675, -30.1267, 0.59", "43.8583, -239.015, -30.3105, 0.29", "44.4452, -239.367, -30.4554, 0.29", "45.0628, -239.786, -30.5929, 0.66", "45.5223, -240.116, -30.6747, 0.66", "46.9033, -241.128, -30.8556, 0.29", "47.7898, -241.767, -30.9162, 0.29", "48.7227, -242.43, -30.9067, 0.29", "49.4394, -242.941, -30.8474, 0.29", "50.1597, -243.441, -30.7378, 0.88", "50.4856, -243.665, -30.6829, 0.88", "51.3619, -244.263, -30.5028, 0.66", "52.5748, -245.073, -30.2039, 0.29", "53.2045, -245.499, -30.022, 0.29", "53.9488, -246.021, -29.8018, 0.66", "54.5662, -246.478, -29.6454, 0.44", "62.7034, -253.376, -30.9422, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.3894, -179.951, 1.87957, 2.14", "-21.9731, -181.376, 1.79185, 2.14", "-22.4481, -182.675, 1.72024, 1.33", "-22.8691, -183.954, 1.66172, 1.03", "-23.1388, -184.926, 1.62338, 1.03", "-23.3063, -185.588, 1.59842, 1.25", "-23.4619, -186.236, 1.57615, 1.25", "-23.686, -187.459, 1.53614, 0.96", "-23.8373, -188.45, 1.52209, 0.96", "-24.1083, -190.189, 1.51732, 0.88", "-24.2642, -191.214, 1.53671, 0.88", "-24.3838, -192.186, 1.56169, 0.96", "-24.4839, -193.294, 1.59508, 0.96", "-24.5439, -194.242, 1.63675, 0.74", "-24.5821, -195.155, 1.68765, 0.52", "-24.5999, -195.913, 1.74209, 0.52", "-24.6088, -196.845, 1.82124, 0.37", "-24.6118, -197.587, 1.88568, 0.74", "-24.629, -198.393, 1.96291, 0.74", "-24.6535, -199.302, 2.06377, 1.03", "-24.6769, -199.88, 2.13474, 1.18", "-24.7225, -200.68, 2.23124, 1.33", "-24.7696, -201.283, 2.31117, 1.33", "-24.7997, -201.926, 2.42242, 1.18", "-24.8057, -202.866, 2.67355, 0.96", "-24.7816, -203.587, 2.9364, 0.81", "-24.7289, -204.315, 3.24945, 0.81", "-24.6314, -205.115, 3.62117, 0.81", "-24.5311, -205.816, 3.95146, 0.59", "-24.3582, -206.972, 4.4683, 0.66", "-24.3104, -207.465, 4.67212, 0.66", "-24.3095, -208.347, 4.98034, 1.18", "-24.4641, -209.254, 5.2068, 1.47", "-24.7404, -210.035, 5.32759, 1.55", "-25.0501, -210.601, 5.37974, 1.55", "-25.6016, -211.363, 5.42652, 1.4", "-26.3842, -212.246, 5.50959, 1.18", "-27.3255, -213.179, 5.63129, 0.66", "-28.1086, -213.911, 5.7548, 0.74", "-29.1216, -214.83, 5.94692, 1.18", "-29.9505, -215.57, 6.14532, 1.25", "-30.806, -216.333, 6.40561, 1.25", "-31.5155, -216.966, 6.68235, 1.25", "-32.2246, -217.557, 7.00795, 1.33", "-32.6263, -217.857, 7.22311, 1.33", "-33.2559, -218.27, 7.63432, 1.03", "-33.7828, -218.567, 8.04094, 0.74", "-34.196, -218.771, 8.38964, 0.59", "-34.7326, -219.042, 8.86901, 0.59", "-35.263, -219.352, 9.35919, 0.88", "-35.7789, -219.766, 9.87167, 1.18", "-36.2403, -220.267, 10.3897, 1.18", "-36.6306, -220.801, 10.8764, 1.18", "-36.99, -221.392, 11.341, 1.18", "-37.2658, -221.906, 11.6949, 1.18", "-37.6491, -222.694, 12.1776, 0.81", "-37.8814, -223.213, 12.4582, 0.59", "-38.0982, -223.755, 12.7054, 0.52", "-38.523, -224.907, 13.1497, 0.96", "-38.774, -225.677, 13.3849, 1.18", "-38.9911, -226.392, 13.5583, 1.18", "-39.2841, -227.367, 13.7432, 0.88", "-39.5783, -228.348, 13.8961, 0.59", "-39.8218, -229.23, 14.0127, 0.59", "-40.0874, -230.258, 14.1377, 0.59", "-40.3343, -231.216, 14.2555, 0.74", "-40.6224, -232.289, 14.3956, 1.33", "-40.8819, -233.221, 14.5232, 1.69", "-41.2156, -234.372, 14.6881, 1.77", "-41.4069, -235.049, 14.7809, 1.77", "-41.651, -235.901, 14.8757, 1.77", "-41.8605, -236.72, 14.9287, 1.47", "-42.0673, -237.627, 14.9456, 1.03", "-42.2642, -238.519, 14.9342, 1.03", "-42.5019, -239.56, 14.8967, 1.03", "-42.7372, -240.639, 14.8498, 1.11", "-42.9424, -241.656, 14.807, 1.33", "-43.0919, -242.582, 14.7683, 1.03", "-43.2294, -243.838, 14.7133, 0.81", "-43.2872, -244.717, 14.6779, 1.03", "-43.3147, -245.823, 14.6396, 0.81", "-43.3099, -246.426, 14.6247, 0.81", "-43.2628, -248.058, 14.5792, 0.74", "-43.1835, -249.699, 14.5277, 0.74", "-43.0932, -251.017, 14.4767, 0.74", "-42.9642, -252.943, 14.4042, 0.74", "-42.9069, -254.272, 14.3595, 0.74", "-42.9014, -255.135, 14.3442, 1.18", "-42.9534, -256.023, 14.3638, 1.4", "-43.0926, -256.944, 14.4413, 1.4", "-43.3247, -257.818, 14.5831, 1.47", "-43.735, -258.784, 14.834, 1.55", "-44.0712, -259.363, 15.0325, 1.55", "-44.7167, -260.265, 15.4141, 1.11", "-45.5774, -261.279, 15.9307, 0.88", "-46.2015, -261.938, 16.3338, 0.88", "-46.9128, -262.615, 16.8208, 1.03", "-47.4042, -263.057, 17.1635, 1.03", "-47.7915, -263.415, 17.4411, 1.03", "-48.3436, -264.018, 17.8772, 0.81", "-48.963, -264.87, 18.4043, 0.59", "-49.6239, -266.038, 18.9984, 0.59", "-50.0281, -266.944, 19.384, 0.88", "-50.3185, -267.783, 19.6855, 0.88", "-50.6776, -269.099, 20.0764, 0.74", "-50.8679, -270.004, 20.2937, 0.96", "-51.0231, -270.894, 20.4489, 1.11", "-51.1115, -271.533, 20.5351, 1.11", "-51.2039, -272.205, 20.6007, 0.88", "-51.3633, -273.127, 20.6487, 0.66", "-51.497, -273.774, 20.6692, 0.66", "-51.7188, -274.863, 20.7053, 0.96", "-51.8829, -275.695, 20.7269, 0.96", "-52.0857, -276.76, 20.7457, 0.66", "-52.2712, -277.731, 20.7613, 0.74", "-52.5529, -279.29, 20.798, 0.96", "-52.6987, -280.191, 20.8399, 0.96", "-52.8437, -281.131, 20.8861, 0.96", "-53.0258, -282.207, 20.9277, 0.66", "-53.3114, -283.796, 20.9644, 0.66", "-53.5699, -285.311, 20.9442, 0.66", "-53.7182, -286.215, 20.8984, 0.81", "-53.9628, -287.796, 20.7732, 0.74", "-54.1432, -289.047, 20.637, 0.74", "-54.3083, -290.366, 20.4556, 0.96", "-54.4285, -291.472, 20.2786, 0.96", "-54.5037, -292.206, 20.1664, 1.62", "-54.5565, -292.611, 20.1294, 1.62", "-54.6359, -293.144, 20.1354, 1.62", "-54.7643, -293.926, 20.197, 1.4", "-54.9212, -294.745, 20.303, 0.88", "-55.1264, -295.793, 20.4666, 0.59", "-55.391, -297.219, 20.7009, 0.81", "-55.6007, -298.366, 20.8988, 0.96", "-55.7619, -299.293, 21.0478, 0.96", "-55.9454, -300.41, 21.2014, 1.11", "-56.0698, -301.141, 21.2933, 1.11", "-56.1799, -301.706, 21.3619, 1.33", "-56.2992, -302.256, 21.4289, 1.33", "-56.5406, -303.151, 21.5778, 1.03", "-56.8362, -304.036, 21.7735, 0.66", "-57.0838, -304.696, 21.944, 0.37", "-57.2712, -305.178, 22.0746, 0.37", "-57.4962, -305.809, 22.2374, 0.37", "-57.696, -306.409, 22.3876, 1.03", "-57.9113, -307.077, 22.551, 1.25", "-58.0476, -307.572, 22.6609, 1.25", "-58.2595, -308.498, 22.8369, 0.96", "-58.4906, -309.662, 23.0279, 0.52", "-58.6903, -310.709, 23.1831, 0.52", "-58.9519, -312.168, 23.3729, 0.52", "-59.1351, -313.356, 23.5025, 0.81", "-59.2611, -314.222, 23.5957, 1.03", "-59.3801, -315.005, 23.685, 1.03", "-59.4775, -315.609, 23.7567, 0.81", "-59.6099, -316.337, 23.8475, 0.81", "-59.8327, -317.358, 23.9842, 0.59", "-60.133, -318.43, 24.1505, 0.44", "-60.6125, -319.779, 24.4209, 0.88", "-60.8632, -320.357, 24.5649, 0.88", "-61.245, -321.106, 24.786, 0.59", "-61.6544, -321.745, 25.0287, 0.59", "-62.3199, -322.547, 25.4152, 0.59", "-63.0516, -323.252, 25.828, 0.81", "-63.4731, -323.589, 26.0655, 0.81", "-63.8151, -323.831, 26.2575, 0.81", "-64.5939, -324.302, 26.689, 0.59", "-65.455, -324.725, 27.1628, 0.88", "-66.317, -325.066, 27.6306, 1.03", "-67.1452, -325.343, 28.0728, 1.03", "-67.8297, -325.53, 28.4427, 0.59", "-68.4431, -325.678, 28.7849, 0.59", "-68.9601, -325.805, 29.0826, 0.59", "-69.3965, -325.912, 29.3526, 0.59", "-69.857, -326.051, 29.6453, 0.59", "-70.4527, -326.269, 30.0369, 0.44", "-71.3354, -326.669, 30.633, 0.81", "-72.0623, -327.069, 31.1413, 1.11", "-72.8425, -327.581, 31.7103, 0.81", "-73.6136, -328.174, 32.2887, 0.66", "-73.9639, -328.482, 32.5553, 0.66", "-74.3822, -328.902, 32.8764, 0.52", "-74.8548, -329.429, 33.2485, 0.52", "-75.3282, -330.026, 33.6271, 0.52", "-75.7996, -330.668, 34.0096, 0.52", "-76.0811, -331.093, 34.2418, 1.11", "-76.7055, -332.128, 34.7477, 1.4", "-77.0429, -332.748, 35.0158, 1.84", "-77.4179, -333.498, 35.295, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.02186, -79.8996, -9.08005, 0.66", "-9.08858, -81.2312, -9.05265, 0.66", "-9.1431, -82.0516, -9.04015, 0.37", "-9.17361, -82.5999, -9.05089, 0.81", "-9.19908, -83.3085, -9.07824, 1.03", "-9.22138, -83.9244, -9.10681, 1.11", "-9.24882, -84.5816, -9.14822, 0.88", "-9.281, -85.3383, -9.22338, 0.59", "-9.29602, -86.2191, -9.33782, 0.29", "-9.28712, -86.8577, -9.43758, 0.29", "-9.2687, -87.1504, -9.48936, 0.29", "-9.17818, -87.8102, -9.62874, 0.74", "-9.04078, -88.4243, -9.7767, 1.11", "-8.92746, -88.812, -9.87349, 1.11", "-8.74217, -89.3827, -10.0168, 1.11", "-8.5113, -90.045, -10.156, 0.81", "-8.13158, -91.1386, -10.3354, 0.44", "-7.79053, -92.178, -10.4564, 0.59", "-7.61079, -92.8041, -10.5063, 0.88", "-7.4577, -93.4633, -10.5324, 0.88", "-7.29129, -94.4073, -10.5379, 0.81", "-7.18199, -95.3341, -10.5045, 0.44", "-7.13709, -96.0652, -10.4452, 1.03", "-7.12215, -96.6772, -10.3858, 0.74", "-7.11801, -97.4442, -10.3174, 0.52", "-7.1215, -98.0377, -10.2749, 0.88", "-7.13379, -98.5826, -10.2708, 1.18", "-7.14494, -99.0546, -10.2765, 1.18", "-7.16363, -99.5952, -10.2895, 0.88", "-7.19947, -100.535, -10.3233, 0.29", "-7.23156, -101.245, -10.3586, 0.29", "-7.28395, -102.262, -10.4321, 1.03", "-7.31419, -102.938, -10.4922, 1.47", "-7.33405, -103.364, -10.5309, 1.47", "-7.35256, -103.832, -10.574, 1.47", "-7.36372, -104.532, -10.6361, 1.25", "-7.36472, -105.389, -10.7016, 0.44", "-7.35003, -106.095, -10.743, 0.44", "-7.32824, -106.786, -10.7873, 0.44", "-7.31202, -107.141, -10.8113, 0.59", "-7.27154, -107.974, -10.8687, 0.59", "-7.22897, -108.61, -10.9151, 0.37", "-7.19219, -109.14, -10.9537, 0.81", "-7.15926, -109.626, -10.9825, 1.03", "-7.13739, -109.982, -10.9976, 1.03", "-7.12084, -110.422, -11.0072, 0.59", "-7.09113, -111.141, -11.0107, 0.22", "-7.05701, -111.591, -11.0094, 0.22", "-7.00237, -112.123, -11.0059, 0.22", "-6.93301, -112.695, -11.0007, 0.66", "-6.83888, -113.38, -10.9966, 0.88", "-6.67883, -114.379, -10.9938, 0.88", "-6.48363, -115.54, -10.9931, 0.96", "-6.33368, -116.414, -11.0068, 1.18", "-6.22372, -117.122, -11.0327, 0.66", "-6.13886, -117.703, -11.0572, 0.52", "-5.99969, -118.813, -11.1152, 0.52", "-5.91047, -119.669, -11.1674, 0.81", "-5.82998, -120.533, -11.2283, 0.52", "-5.76904, -121.179, -11.2718, 0.52", "-5.69146, -121.944, -11.3383, 1.47", "-5.60298, -122.726, -11.4245, 1.77", "-5.52497, -123.329, -11.515, 1.77", "-5.46889, -123.676, -11.5758, 1.77", "-5.35709, -124.25, -11.6805, 1.25", "-5.2136, -124.915, -11.803, 0.81", "-5.04335, -125.723, -11.9554, 0.44", "-4.82458, -126.735, -12.1417, 0.37", "-4.6903, -127.358, -12.2516, 0.52", "-4.51744, -128.111, -12.3787, 0.52", "-4.37914, -128.675, -12.4696, 0.66", "-4.18211, -129.417, -12.5893, 0.66", "-3.91545, -130.366, -12.7771, 0.88", "-3.67376, -131.162, -12.9617, 1.25", "-3.52875, -131.61, -13.0881, 1.25", "-3.3924, -131.995, -13.2125, 1.25", "-3.10654, -132.751, -13.4846, 1.11", "-2.84275, -133.417, -13.7448, 0.74", "-2.60357, -134.002, -13.9896, 0.29", "-2.46304, -134.348, -14.1422, 0.29", "-2.1327, -135.193, -14.5045, 0.44", "-1.95293, -135.678, -14.6934, 0.88", "-1.80917, -136.119, -14.8376, 1.33", "-1.6584, -136.642, -14.9745, 1.47", "-1.51578, -137.21, -15.0915, 1.47", "-1.3994, -137.715, -15.1732, 1.25", "-1.25054, -138.407, -15.2607, 0.44", "-1.03987, -139.421, -15.3271, 0.29", "-0.887177, -140.226, -15.3324, 0.29", "-0.749441, -141.049, -15.298, 0.29", "-0.6563, -141.704, -15.2439, 0.74", "-0.606317, -142.169, -15.1901, 0.88", "-0.551951, -143.112, -15.0504, 0.96", "-0.556465, -143.918, -14.9202, 1.03", "-0.601287, -144.525, -14.8321, 1.03", "-0.678949, -145.129, -14.7461, 0.59", "-0.77604, -145.775, -14.6609, 0.22", "-0.8374, -146.182, -14.6197, 0.22", "-0.969332, -147.118, -14.5755, 0.96", "-1.04525, -147.673, -14.5653, 1.11", "-1.11952, -148.283, -14.5393, 1.11", "-1.1728, -148.867, -14.4937, 0.59", "-1.20817, -149.46, -14.4326, 0.29", "-1.22329, -149.967, -14.3659, 0.29", "-1.23371, -150.39, -14.2978, 0.29", "-1.25151, -151.307, -14.1321, 0.44", "-1.26555, -152.084, -13.9713, 0.66", "-1.27898, -152.905, -13.7934, 0.66", "-1.28191, -153.498, -13.6698, 0.81", "-1.28044, -154.157, -13.5473, 0.81", "-1.27558, -154.787, -13.442, 0.52", "-1.28696, -155.587, -13.3315, 0.66", "-1.30473, -156.18, -13.2545, 0.66", "-1.36439, -157.178, -13.1753, 0.37", "-1.43761, -158.061, -13.1506, 0.37", "-1.51414, -158.766, -13.1639, 1.03", "-1.60567, -159.474, -13.2287, 1.47", "-1.71485, -160.168, -13.3389, 1.62", "-1.95024, -161.407, -13.6131, 0.88", "-2.15351, -162.211, -13.8599, 0.59", "-2.35355, -162.823, -14.0997, 0.37", "-2.75835, -163.806, -14.5431, 0.29", "-2.90114, -164.096, -14.6736, 0.29", "-3.13843, -164.511, -14.8487, 0.29", "-3.59725, -165.281, -15.1218, 0.29", "-4.05388, -166.007, -15.3803, 0.59", "-4.52956, -166.778, -15.6393, 0.59", "-4.82862, -167.255, -15.7952, 0.44", "-5.20093, -167.827, -15.9931, 0.44", "-5.45067, -168.175, -16.147, 0.29", "-5.81761, -168.671, -16.4119, 1.4", "-6.36402, -169.235, -16.8433, 1.62", "-6.87923, -169.618, -17.24, 1.4", "-7.38724, -169.892, -17.611, 1.11", "-8.2418, -170.254, -18.1953, 0.81", "-8.71652, -170.44, -18.5155, 0.59", "-9.23796, -170.664, -18.8874, 0.74", "-9.73702, -170.938, -19.2644, 0.81", "-10.1242, -171.292, -19.5817, 0.52", "-10.4075, -171.652, -19.8381, 0.52", "-10.6661, -172.055, -20.0672, 0.74", "-11.0197, -172.628, -20.4034, 0.74", "-11.2034, -172.985, -20.587, 0.74", "-11.388, -173.389, -20.8007, 0.52", "-11.6604, -174.025, -21.1026, 0.52", "-11.8092, -174.375, -21.2561, 0.52", "-12.0931, -175.062, -21.5126, 1.69", "-12.2653, -175.516, -21.6459, 2.14", "-12.5768, -176.479, -21.8646, 1.55", "-12.8622, -177.49, -22.0401, 0.29", "-13.0123, -178.081, -22.1187, 0.29", "-13.2077, -178.895, -22.2027, 0.44", "-13.3901, -179.671, -22.2545, 0.59", "-13.5515, -180.36, -22.2836, 0.59", "-13.7151, -181.062, -22.2858, 0.29", "-13.8039, -181.439, -22.2877, 0.29", "-13.9261, -181.966, -22.2905, 0.96", "-14.0254, -182.428, -22.2932, 1.03", "-14.1459, -183.071, -22.3007, 0.52", "-14.2747, -183.909, -22.3157, 0.29", "-14.3333, -184.386, -22.325, 0.81", "-14.3903, -184.94, -22.3342, 0.96", "-14.4301, -185.367, -22.3421, 0.96", "-14.4986, -186.115, -22.3577, 0.29", "-14.5911, -186.969, -22.3736, 0.29", "-14.7003, -187.863, -22.4149, 1.47", "-14.7785, -188.489, -22.4563, 1.92", "-14.8134, -188.793, -22.4798, 1.92", "-14.8979, -189.55, -22.5336, 1.33", "-14.9823, -190.392, -22.5973, 0.29", "-15.0626, -191.251, -22.669, 0.29", "-15.1197, -191.937, -22.7353, 0.29", "-15.237, -193.427, -22.8921, 0.29", "-15.3074, -194.441, -22.9923, 1.4", "-15.3427, -195.058, -23.0481, 2.14", "-15.3549, -195.328, -23.07, 2.28", "-15.3696, -195.768, -23.0968, 2.28", "-15.387, -196.223, -23.1107, 1.92", "-15.4213, -196.883, -23.0785, 0.88", "-15.4788, -197.89, -22.9694, 0.29", "-15.5144, -198.505, -22.8708, 0.29", "-15.5524, -199.194, -22.7381, 0.29", "-15.611, -200.272, -22.5068, 0.29", "-15.6661, -201.376, -22.2684, 0.96", "-15.6975, -202.115, -22.1165, 1.62", "-15.7131, -202.534, -22.0334, 1.62", "-15.7276, -202.928, -21.9641, 1.62", "-15.7614, -203.777, -21.8499, 1.11", "-15.8019, -204.82, -21.807, 0.29", "-15.8421, -205.596, -21.8267, 0.29", "-15.8813, -206.212, -21.8605, 0.59", "-15.9067, -206.517, -21.8841, 0.66", "-15.9445, -206.886, -21.9173, 0.66", "-16.072, -207.901, -22.0158, 0.29", "-16.2569, -209.076, -22.1553, 0.29", "-16.4264, -209.987, -22.2726, 0.96", "-16.5881, -210.704, -22.3632, 1.4", "-16.7227, -211.241, -22.4241, 1.4", "-16.8691, -211.796, -22.4777, 1.4", "-17.0704, -212.529, -22.5303, 0.88", "-17.3209, -213.426, -22.5888, 0.29", "-17.5467, -214.246, -22.63, 0.29", "-17.7848, -215.074, -22.6655, 0.44", "-17.9477, -215.598, -22.6807, 0.66", "-18.0867, -216.019, -22.6831, 0.66", "-18.3396, -216.769, -22.6567, 0.29", "-18.4895, -217.219, -22.6371, 0.29", "-18.6826, -217.794, -22.6367, 0.29", "-18.9618, -218.583, -22.6884, 0.29", "-19.1293, -219.033, -22.7486, 0.52", "-19.3557, -219.657, -22.8648, 0.66", "-19.5369, -220.279, -22.9682, 0.66", "-19.7322, -221.248, -23.1132, 1.4", "-19.812, -222.098, -23.2386, 2.28", "-19.816, -222.945, -23.364, 2.5", "-19.7751, -223.421, -23.4209, 2.5", "-19.4432, -225.087, -23.5577, 0.22", "-19.2364, -225.76, -23.5775, 0.22", "-18.8703, -226.613, -23.5534, 0.37", "-18.593, -227.117, -23.5113, 0.44", "-18.0661, -227.861, -23.4999, 0.29", "-17.4789, -228.549, -23.5876, 0.88", "-17.1345, -228.871, -23.7319, 1.4", "-16.872, -229.103, -23.8946, 1.4", "-16.5252, -229.433, -24.1846, 1.11", "-15.4688, -230.571, -25.3165, 0.29", "-15.1425, -230.982, -25.744, 0.29", "-14.6593, -231.701, -26.4773, 0.81", "-14.4274, -232.169, -26.8822, 0.81", "-14.0715, -233.164, -27.6009, 0.22", "-13.9659, -233.581, -27.8483, 0.22", "-13.8607, -234.227, -28.1211, 0.44", "-13.8185, -234.592, -28.2465, 0.59", "-13.6941, -236.12, -28.668, 0.22", "-13.6613, -236.654, -28.8067, 0.74", "-13.64, -237.129, -28.9216, 1.03", "-13.6117, -237.636, -29.0342, 1.03", "-13.5821, -238.134, -29.1363, 0.74", "-13.5513, -238.595, -29.2293, 0.37", "-13.4593, -239.768, -29.4701, 0.22", "-13.3792, -240.935, -29.7142, 0.22", "-13.3315, -241.814, -29.894, 0.88", "-13.3036, -242.462, -30.0257, 1.62", "-13.293, -242.819, -30.0981, 1.84", "-13.2902, -243.249, -30.1835, 1.84", "-13.3084, -244.135, -30.3507, 0.52", "-13.3559, -244.883, -30.4894, 0.22", "-13.4223, -245.482, -30.6026, 0.22", "-13.5015, -245.998, -30.6997, 0.37", "-13.541, -246.199, -30.7318, 0.37", "-13.6647, -246.694, -30.8093, 0.22", "-13.7839, -247.097, -30.8699, 0.74", "-13.93, -247.555, -30.9416, 0.74", "-14.0706, -247.969, -31.0023, 0.59", "-14.3945, -248.865, -31.1245, 0.22", "-14.5578, -249.279, -31.1724, 0.22", "-14.8031, -249.832, -31.2055, 0.59", "-14.9987, -250.23, -31.2016, 0.59", "-15.2082, -250.64, -31.1565, 0.29", "-15.4382, -251.058, -31.0866, 0.22", "-15.7978, -251.634, -31.0007, 0.37", "-16.2789, -252.325, -30.9065, 0.44", "-16.7295, -252.815, -30.8916, 0.59", "-17.3261, -253.311, -30.9568, 0.37", "-17.7045, -253.527, -31.0461, 0.22", "-18.6786, -253.855, -31.3842, 2.21", "-19.0554, -253.888, -31.5555, 2.5", "-20.5444, -253.632, -32.3549, 0.22", "-21.0066, -253.459, -32.6279, 0.22", "-21.6337, -253.083, -33.0598, 0.66", "-21.9342, -252.842, -33.2929, 0.66", "-22.3608, -252.431, -33.6523, 0.37", "-22.9558, -251.825, -34.1959, 1.92", "-23.1663, -251.611, -34.396, 1.92", "-24.2452, -250.701, -35.4665, 0.44", "-24.7246, -250.376, -35.9464, 0.59", "-25.0143, -250.235, -36.2104, 0.37", "-25.466, -250.116, -36.5567, 0.37", "-25.9339, -250.05, -36.8946, 0.22", "-27.0547, -250.015, -37.5944, 0.29", "-27.4474, -250.07, -37.7711, 0.22", "-28.0919, -250.194, -38.0149, 0.22", "-28.9821, -250.36, -38.3238, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.02186, -79.8996, -9.08005, 0.74", "-10.792, -81.1597, -9.06509, 0.74", "-11.4938, -81.609, -9.05926, 0.74", "-12.5081, -82.1709, -9.08011, 0.74", "-13.2187, -82.4987, -9.11275, 0.52", "-13.9587, -82.7316, -9.18719, 0.52", "-14.6688, -82.8815, -9.2936, 0.88", "-15.2662, -82.8323, -9.48345, 0.88", "-16.2212, -82.5847, -9.8965, 0.59", "-16.8168, -82.3751, -10.1961, 0.37", "-17.733, -82.0842, -10.7161, 0.37", "-18.2873, -81.9769, -11.0833, 1.11", "-18.7509, -82.0047, -11.4319, 1.47", "-19.1992, -82.1192, -11.7714, 1.47", "-19.5273, -82.2389, -12.0045, 1.47", "-20.281, -82.5211, -12.5131, 0.96", "-20.9557, -82.7183, -12.9363, 0.59", "-21.5793, -82.8236, -13.2722, 0.59", "-22.23, -82.878, -13.543, 0.59", "-22.9182, -82.9307, -13.8041, 0.81", "-23.5736, -82.9827, -14.035, 0.81", "-24.0876, -83.0218, -14.1794, 0.81", "-24.6975, -83.0925, -14.33, 0.81", "-25.3566, -83.3988, -14.5888, 0.22", "-25.7709, -84.1126, -14.9547, 0.22", "-26.0252, -84.6855, -15.2633, 0.66", "-26.1585, -85.0273, -15.4578, 0.88", "-26.3478, -85.5235, -15.7638, 0.88", "-26.6204, -86.1017, -16.2542, 0.44", "-27.0412, -86.668, -16.9244, 1.4", "-27.4487, -86.968, -17.5002, 2.14", "-27.6329, -87.0406, -17.7544, 2.58", "-28.0249, -87.0908, -18.2666, 2.36", "-29.0926, -87.0661, -19.6489, 1.69", "-29.6584, -86.9998, -20.3551, 0.37", "-30.3613, -86.8756, -21.1358, 0.37", "-30.9438, -86.7673, -21.7195, 0.37", "-32.1338, -86.5979, -22.8002, 1.92", "-32.6295, -86.5607, -23.2163, 2.14", "-33.1301, -86.5767, -23.6015, 2.5", "-34.6017, -86.8014, -24.7709, 0.44", "-35.0581, -86.9215, -25.144, 0.44", "-35.7523, -87.1254, -25.7526, 0.44", "-36.3785, -87.2875, -26.348, 0.44", "-37.019, -87.4006, -26.9845, 1.4", "-37.7141, -87.4884, -27.7062, 2.06", "-38.329, -87.557, -28.4022, 2.06", "-39.0753, -87.5856, -29.2934, 0.66", "-39.6525, -87.582, -30.051, 0.81", "-40.262, -87.5756, -30.9335, 0.52", "-40.7394, -87.6093, -31.7707, 1.77", "-41.039, -87.686, -32.4389, 2.28", "-41.7984, -88.1479, -34.7228, 1.33", "-42.0032, -88.4219, -35.6278, 1.77", "-42.0955, -88.6204, -36.2096, 1.77", "-42.236, -89.0223, -37.3332, 0.74", "-42.3338, -89.3507, -38.2271, 0.52", "-42.4946, -89.8766, -39.521, 0.52", "-42.666, -90.5078, -40.8263, 0.88", "-42.8994, -91.1158, -42.0164, 1.47", "-43.1852, -91.7202, -43.1289, 0.22", "-43.3496, -92.0348, -43.6619, 0.22", "-43.5728, -92.4658, -44.2986, 0.81", "-43.7949, -92.9366, -44.8742, 0.96", "-44.0783, -93.5667, -45.5425, 1.55", "-44.3433, -94.1981, -46.1101, 1.55", "-44.633, -94.8865, -46.6999, 0.37", "-44.8424, -95.3752, -47.1278, 0.74", "-45.1135, -95.9781, -47.6964, 0.81", "-45.4512, -96.7702, -48.4842, 0.29", "-45.5895, -97.1508, -48.8638, 0.96", "-45.7588, -97.7089, -49.4129, 1.33", "-45.9364, -98.4918, -50.1768, 0.74", "-46.0239, -99.1457, -50.7944, 0.59", "-46.053, -100.181, -51.7189, 0.29", "-45.9869, -100.853, -52.2498, 0.29", "-45.8578, -101.474, -52.7096, 0.29", "-45.7054, -101.951, -53.0168, 1.18", "-45.5115, -102.399, -53.2807, 1.69", "-45.1613, -103.049, -53.6288, 1.33", "-44.6047, -103.964, -54.1063, 0.22", "-44.3437, -104.381, -54.332, 0.22", "-44.0304, -104.923, -54.6264, 0.96", "-43.8376, -105.306, -54.8339, 1.11", "-43.5113, -106.042, -55.2232, 0.52", "-43.047, -107.231, -55.8314, 0.22", "-42.8485, -107.796, -56.1155, 0.22", "-42.655, -108.415, -56.4281, 0.88", "-42.5288, -108.866, -56.6771, 1.03", "-42.3274, -109.646, -57.1439, 0.22", "-42.2338, -110.005, -57.3709, 0.22", "-42.085, -110.528, -57.7137, 0.66", "-41.9047, -111.111, -58.0919, 0.74", "-41.4602, -112.464, -58.9361, 0.22", "-41.1478, -113.451, -59.4858, 0.22", "-40.821, -114.71, -60.1021, 0.96", "-40.721, -115.188, -60.3089, 1.25", "-40.6413, -115.832, -60.5397, 1.25", "-40.5917, -116.79, -60.806, 0.66", "-40.6326, -117.974, -61.062, 0.15", "-40.7844, -118.988, -61.2607, 0.37", "-40.9025, -119.46, -61.3624, 0.37", "-41.4503, -121.182, -61.7792, 0.22", "-41.5534, -121.449, -61.8571, 0.74", "-41.7983, -122.015, -62.0536, 0.88", "-42.6335, -123.808, -62.7418, 0.22", "-42.9564, -124.482, -63.0044, 0.74", "-43.2792, -125.136, -63.2551, 0.74", "-43.9863, -126.557, -63.8107, 0.22", "-44.5751, -127.75, -64.2619, 0.22", "-45.235, -129.124, -64.7113, 0.22", "-45.8301, -130.426, -65.0582, 0.22", "-46.1417, -131.136, -65.2043, 0.88", "-46.3745, -131.7, -65.2884, 1.11", "-46.5813, -132.275, -65.3328, 1.11", "-47.0196, -133.681, -65.373, 0.15", "-47.316, -134.822, -65.3788, 0.15", "-47.4601, -135.456, -65.3732, 0.81", "-47.5748, -136.01, -65.3653, 0.96", "-47.9599, -138.079, -65.5659, 0.22", "-48.1241, -139.051, -65.6847, 0.22", "-48.2881, -140.124, -65.8807, 0.22", "-48.3485, -140.554, -65.9802, 1.18", "-48.4028, -140.964, -66.1013, 1.18", "-48.8042, -143.979, -67.4167, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.9465, 162.631, -42.5757, 0.37", "26.4514, 161.849, -42.0718, 0.37", "26.8611, 161.261, -41.7134, 0.52", "27.4416, 160.464, -41.2327, 0.74", "27.9115, 159.832, -40.8668, 1.11", "28.1866, 159.476, -40.6577, 1.11", "28.5865, 158.96, -40.3505, 0.81", "29.5067, 157.852, -39.6008, 0.22", "29.9479, 157.31, -39.2378, 0.22", "30.2221, 156.943, -39.0214, 0.66", "30.4986, 156.533, -38.7995, 0.66", "30.7638, 156.104, -38.5827, 0.66", "31.2524, 155.246, -38.1465, 0.44", "31.6924, 154.396, -37.7144, 0.22", "32.1421, 153.447, -37.2565, 0.22", "32.3441, 152.986, -37.0436, 0.44", "32.4702, 152.665, -36.9189, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "25.9465, 162.631, -42.5757, 0.22", "27.5235, 162.703, -42.5248, 0.22", "27.885, 162.742, -42.5295, 0.44", "29.5442, 163.012, -42.5736, 0.22", "30.258, 163.15, -42.6156, 0.59", "30.8057, 163.261, -42.6744, 0.59", "33.1549, 163.74, -42.9266, 0.22", "35.8694, 164.329, -43.2863, 0.22", "36.8412, 164.565, -43.4382, 0.66", "37.6024, 164.781, -43.5894, 0.81", "38.7539, 165.129, -43.8525, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "17.5446, 231.271, 26.9561, 0.59", "19.1342, 232.507, 27.014, 0.59", "19.6461, 232.923, 27.0508, 0.44", "20.7143, 233.84, 27.1049, 0.22", "21.6294, 234.691, 27.158, 0.81", "22.1152, 235.161, 27.1721, 0.96", "22.3405, 235.383, 27.1725, 0.96", "23.0379, 236.166, 27.1595, 0.22", "24.0388, 237.439, 27.034, 0.22", "24.8653, 238.637, 26.8403, 1.11", "25.2751, 239.308, 26.7149, 1.47", "25.453, 239.64, 26.6326, 1.47", "26.1037, 241.098, 26.2235, 0.22", "26.5852, 242.44, 25.7995, 0.22", "26.8132, 243.232, 25.5342, 0.66", "26.9126, 243.627, 25.3901, 0.66", "27.2826, 245.512, 24.6915, 0.22", "27.5413, 247.232, 24.048, 0.22", "27.6455, 248.213, 23.6645, 0.22", "27.7332, 249.354, 23.2135, 1.47", "27.7531, 250.004, 22.9605, 1.47", "27.7027, 252.198, 22.1549, 0.22", "27.6457, 252.91, 21.903, 0.81", "27.5592, 253.507, 21.6976, 0.81", "27.2554, 254.965, 21.2257, 0.22", "26.9541, 256.12, 20.8612, 0.22", "26.5909, 257.319, 20.4887, 1.47", "26.4272, 257.816, 20.3172, 1.84", "25.8001, 259.624, 19.6753, 0.22", "25.2866, 261.009, 19.1787, 0.22", "25.0891, 261.489, 18.9954, 0.22", "24.5591, 262.75, 18.4621, 1.55", "24.2222, 263.511, 18.1053, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.5446, 231.271, 26.9561, 0.22", "18.3913, 233.683, 27.0631, 0.22", "18.8716, 234.992, 27.1416, 0.22", "19.2512, 236.005, 27.2128, 0.96", "19.4169, 236.445, 27.2485, 1.18", "19.5883, 236.899, 27.2897, 1.18", "19.864, 237.641, 27.363, 0.22", "20.0669, 238.168, 27.4337, 0.44", "20.1638, 238.437, 27.4659, 0.44", "20.4217, 239.215, 27.5528, 0.22", "20.6395, 239.899, 27.6284, 0.44", "20.8768, 240.656, 27.7124, 0.44", "21.5629, 242.975, 27.9705, 0.22", "22.1311, 244.931, 28.1699, 0.22", "22.3467, 245.666, 28.2358, 0.66", "22.4662, 246.07, 28.2666, 0.74", "22.6642, 246.715, 28.2974, 0.22", "23.1705, 248.295, 28.3396, 0.22", "23.4702, 249.224, 28.3503, 1.03", "23.6706, 249.842, 28.3498, 1.25", "23.8219, 250.309, 28.3458, 1.25", "24.332, 251.881, 28.3218, 0.22", "25.1804, 254.468, 28.2718, 0.22", "25.4709, 255.34, 28.256, 0.74", "25.632, 255.841, 28.2588, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.9646, 91.0539, 24.6631, 0.37", "11.798, 99.9228, 29.8828, 0.37", "16.5828, 108.258, 35.1959, 0.37", "19.7931, 115.803, 42.5008, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.9646, 91.0539, 24.6631, 0.22", "10.5297, 95.8854, 25.1401, 0.37", "13.548, 100.471, 25.0268, 0.37", "16.8258, 104.865, 24.7032, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "92.7602, 1.39071, 0.980523, 0.37", "100.178, 0.60454, -0.0332518, 0.37", "107.684, 0.904154, -0.520715, 0.37", "115.162, 1.58246, 0.00504933, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "92.7602, 1.39071, 0.980523, 0.22", "100.611, 0.112345, 0.347213, 0.37", "108.545, 0.300751, -0.485491, 0.37", "116.506, -0.0286449, -0.930084, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "53.4697, 10.7627, 2.25067, 0.52", "54.757, 10.9836, 2.62595, 0.52", "55.259, 11.0444, 2.77115, 0.52", "55.7827, 11.082, 2.95327, 0.52", "56.7889, 11.1319, 3.32999, 0.52", "57.3917, 11.1433, 3.56482, 0.88", "58.3151, 11.1446, 3.91265, 0.88", "58.9992, 11.145, 4.16018, 0.88", "59.7325, 11.0582, 4.41035, 0.81", "60.2067, 10.9084, 4.52325, 0.81", "60.924, 10.5253, 4.62235, 0.59", "61.4988, 10.109, 4.63191, 0.59", "62.1153, 9.5866, 4.55753, 0.59", "62.7244, 9.04152, 4.4095, 0.74", "63.6742, 8.1157, 4.0884, 0.66", "64.0637, 7.70065, 3.9362, 0.66", "64.6531, 7.01637, 3.68201, 0.52", "65.0526, 6.5444, 3.50127, 0.52", "65.5667, 5.96302, 3.26419, 0.81", "66.2055, 5.24305, 2.9595, 0.81", "66.6289, 4.73964, 2.75999, 0.81", "67.1401, 4.07331, 2.49842, 0.81", "67.7525, 3.18274, 2.16291, 0.88", "68.2416, 2.38794, 1.87638, 1.11", "68.5417, 1.86387, 1.68715, 1.11", "69.0935, 0.803024, 1.31598, 0.88", "69.4706, -0.0542379, 1.0545, 0.96", "69.7146, -0.735037, 0.890703, 0.96", "69.8851, -1.31287, 0.78603, 0.96", "70.0264, -1.84608, 0.709515, 0.66", "70.2531, -2.70229, 0.634088, 0.66", "70.5891, -3.83788, 0.596202, 0.81", "70.9299, -4.73819, 0.600328, 1.11", "71.398, -5.75156, 0.640459, 0.96", "71.8016, -6.46549, 0.657829, 0.81", "72.4122, -7.3574, 0.662152, 0.81", "73.1705, -8.26332, 0.635327, 0.59", "73.8255, -8.93064, 0.580784, 0.37", "74.4341, -9.49054, 0.503031, 0.37", "75.3389, -10.2877, 0.346831, 0.59", "75.8347, -10.7246, 0.222353, 0.88", "76.1088, -10.9752, 0.127304, 1.11", "76.4596, -11.326, -0.00403718, 1.11", "76.9243, -11.8243, -0.166366, 0.74", "77.2976, -12.2036, -0.291565, 0.74", "77.6665, -12.5905, -0.426274, 0.74", "78.2259, -13.2009, -0.67591, 0.74", "78.7913, -13.8384, -0.979143, 0.74", "79.3041, -14.4131, -1.27082, 0.66", "79.7892, -14.9452, -1.56094, 0.66", "80.4312, -15.6377, -1.96581, 0.96", "81.1851, -16.4681, -2.48676, 1.4", "81.5662, -16.9205, -2.79169, 1.62", "81.9549, -17.4173, -3.14727, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "53.4697, 10.7627, 2.25067, 0.88", "54.0871, 11.4217, 2.45022, 0.88", "54.6496, 11.9489, 2.64225, 0.88", "55.2932, 12.4535, 2.85596, 0.88", "56.0006, 12.9205, 3.07445, 0.88", "56.847, 13.4034, 3.33182, 0.74", "57.3852, 13.6898, 3.49975, 0.74", "58.1533, 14.0352, 3.75296, 0.88", "58.8484, 14.2983, 3.97813, 0.88", "59.4262, 14.4911, 4.15293, 0.88", "59.9882, 14.6716, 4.31477, 0.66", "60.3813, 14.8173, 4.42166, 0.66", "60.9035, 15.0851, 4.54222, 0.88", "61.2122, 15.295, 4.60397, 0.88", "61.505, 15.5301, 4.65595, 0.88", "61.8018, 15.7791, 4.70401, 0.88", "62.3552, 16.2324, 4.79267, 0.59", "62.7496, 16.5364, 4.87998, 0.59", "63.0507, 16.7754, 4.97175, 0.81", "63.4428, 17.1153, 5.12112, 0.81", "63.7398, 17.4067, 5.25519, 0.81", "64.0729, 17.7602, 5.42032, 0.66", "64.5492, 18.2825, 5.66911, 0.59", "65.0463, 18.9324, 5.94971, 0.59", "65.3095, 19.3366, 6.09876, 0.59", "65.6055, 19.8485, 6.25332, 0.44", "65.7908, 20.1769, 6.33093, 0.44", "65.9914, 20.5264, 6.39268, 0.44", "66.4943, 21.3732, 6.50772, 0.44", "66.8958, 22.0111, 6.58868, 0.66", "67.2323, 22.5325, 6.65229, 0.66", "67.649, 23.1712, 6.72548, 0.74", "67.9744, 23.6697, 6.77969, 0.96", "68.2257, 24.0417, 6.8187, 0.96", "68.6016, 24.5383, 6.86915, 0.66", "68.9721, 25.003, 6.91612, 0.66", "69.5615, 25.7268, 6.98837, 0.59", "70.1055, 26.4123, 7.0723, 0.59", "70.4562, 26.8631, 7.13684, 0.81", "70.7212, 27.2143, 7.1928, 0.81", "71.1763, 27.7916, 7.29232, 0.52", "71.5318, 28.2011, 7.36733, 0.52", "72.0071, 28.7105, 7.47069, 0.52", "72.4083, 29.1289, 7.55814, 0.52", "72.7936, 29.5217, 7.63859, 0.37", "73.4821, 30.2065, 7.77427, 0.37", "73.9361, 30.6498, 7.8559, 0.59", "74.2274, 30.9158, 7.89892, 0.59", "74.848, 31.4625, 7.96793, 0.74", "75.1716, 31.7509, 8.00377, 0.74", "75.4459, 32.006, 8.03888, 0.74", "75.8332, 32.4125, 8.10522, 0.74", "76.0921, 32.7033, 8.12988, 0.44", "76.4642, 33.1121, 8.11095, 0.44", "76.7868, 33.4398, 8.05895, 0.81", "77.3321, 33.9561, 7.93194, 0.81", "77.7352, 34.3083, 7.80726, 0.66", "78.4408, 34.8951, 7.56364, 0.52", "78.9784, 35.35, 7.34523, 0.44", "79.3345, 35.6424, 7.17333, 0.44", "79.6458, 35.8963, 7.00177, 0.44", "79.8897, 36.0896, 6.84766, 0.44", "80.2988, 36.3922, 6.59765, 0.74", "80.6546, 36.6453, 6.46568, 0.59", "80.8931, 36.8399, 6.39875, 0.59", "85.2209, 41.5995, 8.06878, 0.59", "89.7092, 46.2387, 9.65182, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-77.4179, -333.498, 35.295, 0.52", "-77.9648, -335.042, 35.4475, 0.52", "-78.1922, -335.667, 35.5186, 0.29", "-78.5108, -336.483, 35.6145, 0.44", "-78.8137, -337.242, 35.7012, 0.44", "-79.0562, -337.83, 35.7682, 0.29", "-79.4323, -338.686, 35.8609, 0.29", "-79.8251, -339.501, 35.9501, 0.81", "-80.1311, -340.126, 35.9963, 1.18", "-80.2946, -340.467, 36.0121, 1.4", "-80.5533, -341.035, 36.0288, 1.4", "-80.7809, -341.58, 36.0361, 1.11", "-81.2309, -342.758, 36.0434, 0.52", "-81.5284, -343.683, 36.0443, 0.44", "-81.7308, -344.425, 36.0432, 0.74", "-81.9577, -345.319, 36.0469, 0.81", "-82.1177, -345.992, 36.049, 0.81", "-82.2706, -346.706, 36.0462, 0.74", "-82.4404, -347.65, 36.0742, 0.22", "-82.5123, -348.087, 36.0914, 0.22", "-82.623, -348.855, 36.1129, 0.22", "-82.6887, -349.519, 36.1404, 0.66", "-82.7282, -350.213, 36.1884, 0.81", "-82.7483, -351.328, 36.2924, 0.66", "-82.7172, -352.341, 36.4145, 0.22", "-82.6369, -353.245, 36.54, 0.22", "-82.5383, -353.903, 36.6417, 0.22", "-82.4203, -354.54, 36.7682, 0.96", "-82.3618, -354.867, 36.8424, 1.18", "-82.2803, -355.354, 36.9534, 1.18", "-82.2067, -355.754, 37.0685, 1.18", "-82.0976, -356.517, 37.2859, 0.74", "-81.9945, -357.673, 37.5997, 0.22", "-81.9768, -358.054, 37.7017, 0.22", "-81.9666, -358.499, 37.8221, 0.44", "-81.9647, -358.884, 37.9187, 0.44", "-81.9583, -359.892, 38.1446, 0.22", "-81.9533, -360.526, 38.2634, 0.96", "-81.9396, -361.011, 38.3297, 1.18", "-81.9195, -361.475, 38.3843, 1.25", "-81.8816, -362.361, 38.4784, 0.96", "-81.8647, -363.632, 38.6107, 0.29", "-81.8789, -364.633, 38.7104, 0.22", "-81.9349, -365.764, 38.8147, 0.22", "-81.9861, -366.346, 38.8689, 0.81", "-82.0538, -366.821, 38.915, 0.96", "-82.3832, -368.471, 39.0982, 0.22", "-82.5174, -368.988, 39.1634, 0.22", "-82.7543, -369.81, 39.2808, 0.59", "-82.9392, -370.411, 39.3764, 0.59", "-83.2057, -371.314, 39.5212, 0.52", "-83.4047, -372.057, 39.6409, 0.52", "-83.6412, -373.065, 39.8151, 0.52", "-83.7282, -373.462, 39.8876, 0.96", "-83.8655, -374.14, 40.0139, 0.96", "-84.009, -374.903, 40.1579, 0.59", "-84.2383, -376.193, 40.4382, 0.22", "-84.4623, -377.524, 40.7318, 0.22", "-84.564, -378.148, 40.8736, 0.22", "-84.6613, -378.701, 41.0065, 0.96", "-84.7284, -379.079, 41.103, 1.18", "-84.8669, -379.831, 41.3157, 0.52", "-85.1881, -389.054, 41.2038, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-77.4179, -333.498, 35.295, 0.29", "-79.1823, -332.894, 36.5371, 0.29", "-80.1288, -332.87, 37.1696, 0.37", "-80.5606, -332.995, 37.4449, 0.37", "-81.5308, -333.463, 38.0993, 0.37", "-82.5087, -333.98, 38.6184, 0.52", "-83.3825, -334.451, 39.0187, 0.59", "-84.5948, -335.237, 39.4663, 0.59", "-85.6903, -335.977, 39.8113, 0.37", "-86.7153, -336.674, 40.0919, 0.37", "-88.563, -337.929, 40.5165, 0.37", "-89.4227, -338.457, 40.6939, 0.37", "-90.2222, -338.908, 40.8521, 0.29", "-90.8594, -339.239, 40.9846, 0.29", "-91.5721, -339.603, 41.1522, 0.81", "-92.1345, -339.921, 41.3083, 0.81", "-92.8625, -340.453, 41.6213, 0.81", "-94.0672, -341.488, 42.1948, 0.29", "-94.629, -342.043, 42.4876, 0.66", "-95.0346, -342.491, 42.729, 0.66", "-95.4019, -342.938, 42.9701, 0.66", "-96.6994, -344.643, 43.8839, 0.29", "-97.275, -345.435, 44.2854, 0.44", "-97.7738, -346.118, 44.6305, 0.29", "-98.3788, -346.906, 45.0257, 0.74", "-98.8391, -347.439, 45.2826, 0.74", "-99.6244, -348.21, 45.6557, 0.52", "-101.056, -349.39, 46.2298, 0.29", "-101.923, -350.026, 46.5431, 0.52", "-102.525, -350.421, 46.721, 0.52", "-103.825, -351.189, 47.0042, 0.29", "-104.805, -351.707, 47.1893, 0.29", "-105.408, -351.98, 47.2892, 0.59", "-106.132, -352.267, 47.3815, 0.59", "-107.453, -352.763, 47.5177, 0.22", "-108.189, -353.031, 47.6073, 0.29", "-109.285, -353.441, 47.7785, 0.29", "-109.8, -353.644, 47.8631, 0.29", "-111.111, -354.225, 48.088, 0.37", "-112.064, -354.779, 48.3433, 0.37", "-112.996, -355.469, 48.7115, 0.52", "-114.03, -356.413, 49.2117, 1.55", "-114.634, -357.066, 49.5382, 1.92", "-115.195, -357.749, 49.878, 1.92", "-116.446, -359.447, 50.7559, 0.29", "-117.25, -360.643, 51.3528, 0.29", "-117.882, -361.675, 51.86, 0.29", "-118.375, -362.511, 52.2808, 0.74", "-118.62, -362.93, 52.4915, 0.96", "-118.841, -363.287, 52.6726, 1.11", "-119.482, -364.341, 53.1905, 0.52", "-119.864, -365.048, 53.5566, 0.29", "-120.408, -366.072, 54.1325, 0.22", "-120.778, -366.738, 54.5363, 0.44", "-121.096, -367.281, 54.8861, 0.44", "-121.972, -368.768, 55.873, 0.22", "-122.498, -369.653, 56.4843, 0.22", "-123.009, -370.471, 57.0683, 1.25", "-123.474, -371.211, 57.621, 1.55", "-123.7, -371.547, 57.8819, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "81.9549, -17.4173, -3.14727, 0.74", "83.4167, -17.7449, -2.07932, 0.74", "83.8398, -17.8636, -1.78955, 0.74", "84.5616, -18.1213, -1.33338, 0.59", "85.4063, -18.5003, -0.853302, 0.59", "86.1887, -18.9166, -0.449478, 0.59", "86.5791, -19.14, -0.259322, 0.59", "87.3447, -19.6568, 0.065337, 0.59", "87.9957, -20.1309, 0.315959, 0.81", "88.859, -20.7546, 0.643101, 0.81", "89.5707, -21.2454, 0.903877, 0.37", "90.3085, -21.7136, 1.16949, 0.37", "91.1716, -22.2493, 1.48734, 0.37", "92.0534, -22.7906, 1.84178, 0.37", "92.8982, -23.2733, 2.20013, 0.37", "94.1691, -23.9439, 2.77003, 0.22", "95.5255, -24.6237, 3.39661, 0.22", "102.733, -30.1585, 6.57072, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "81.9549, -17.4173, -3.14727, 0.37", "81.984, -18.6294, -3.4243, 0.37", "82.0589, -19.3905, -3.56351, 0.37", "82.1703, -20.096, -3.67782, 0.37", "82.3353, -20.8167, -3.73937, 0.37", "82.5065, -21.4354, -3.77703, 0.37", "82.7368, -22.1562, -3.8031, 0.29", "83.1364, -23.1679, -3.86436, 0.22", "83.5906, -24.2437, -3.97737, 0.22", "84.1921, -25.5862, -4.18176, 0.22", "84.4176, -26.0853, -4.28293, 1.18", "84.581, -26.5009, -4.40585, 1.4", "84.9036, -27.804, -4.93258, 1.4", "84.9841, -28.8802, -5.47299, 0.44", "84.9581, -29.2494, -5.66601, 0.44", "84.8552, -29.8132, -5.96455, 0.29", "84.6179, -30.7513, -6.40113, 0.29", "84.2634, -31.9358, -6.90652, 0.22", "83.9488, -32.8376, -7.19308, 0.22", "83.7192, -33.3782, -7.34561, 1.03", "83.5961, -33.6517, -7.40993, 1.33", "83.4166, -34.0327, -7.47604, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-123.7, -371.547, 57.8819, 0.29", "-124.542, -370.674, 58.4827, 0.29", "-124.732, -370.481, 58.6103, 0.52", "-125.03, -370.176, 58.7989, 0.59", "-126.784, -368.439, 59.7648, 0.22", "-127.286, -367.957, 60.0191, 0.22", "-127.986, -367.306, 60.3516, 0.66", "-128.372, -366.954, 60.5035, 0.66", "-130.035, -365.514, 61.0951, 0.22", "-130.729, -364.947, 61.3212, 0.22", "-131.369, -364.473, 61.5207, 0.52", "-131.823, -364.161, 61.662, 0.66", "-133.065, -363.372, 62.0512, 0.22", "-135.526, -361.844, 62.8274, 0.22", "-137.11, -360.908, 63.3344, 0.22", "-138.561, -360.053, 63.8357, 1.18", "-138.968, -359.818, 63.976, 1.4", "-139.592, -359.469, 64.196, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-123.7, -371.547, 57.8819, 0.22", "-124.365, -373.414, 58.5908, 0.22", "-124.827, -374.962, 59.1864, 0.22", "-125.013, -375.66, 59.4402, 0.44", "-125.091, -375.967, 59.5489, 0.44", "-125.801, -378.897, 60.5345, 0.22", "-126.133, -380.268, 60.9958, 0.44", "-126.402, -381.424, 61.3926, 0.22", "-126.557, -382.204, 61.6395, 0.59", "-126.677, -382.881, 61.8482, 0.66", "-126.755, -383.402, 62.0009, 0.44", "-127.859, -395.449, 64.8548, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_ChC_fa7ba30f35_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -7.26205, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -7.26205, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.08216, -9.18288, -8.30454, 1.77 ) }
    dend_49 { pt3dadd( -2.64098, -10.6127, -8.52029, 1.77 ) }
    dend_49 { pt3dadd( -1.96667, -12.854, -8.83868, 1.55 ) }
    dend_49 { pt3dadd( -1.57062, -14.3402, -9.09155, 1.69 ) }
    dend_49 { pt3dadd( -1.29951, -15.495, -9.3119, 1.77 ) }
    dend_49 { pt3dadd( -1.06199, -16.6184, -9.57841, 1.77 ) }
    dend_49 { pt3dadd( -0.760457, -18.1244, -10.0264, 1.25 ) }
    dend_49 { pt3dadd( -0.271679, -20.4348, -10.6303, 0.74 ) }
    dend_49 { pt3dadd( -1.21124, -19.4281, -11.665, 0.74 ) }
    dend_49 { pt3dadd( -1.94392, -19.0722, -12.7661, 0.74 ) }
    dend_49 { pt3dadd( -3.22866, -18.5885, -14.7454, 1.18 ) }
    dend_49 { pt3dadd( -3.91929, -18.467, -15.874, 1.18 ) }
    dend_49 { pt3dadd( -4.9552, -18.2228, -17.4339, 0.52 ) }
    dend_49 { pt3dadd( -6.18105, -17.7782, -19.1098, 0.52 ) }
    dend_49 { pt3dadd( -7.5745, -17.8427, -21.2279, 0.74 ) }
    dend_49 { pt3dadd( -8.1617, -18.1662, -22.6687, 0.74 ) }
    dend_49 { pt3dadd( -8.44185, -18.6651, -23.9261, 0.74 ) }
    dend_49 { pt3dadd( -8.89397, -19.3079, -25.8236, 1.11 ) }
    dend_49 { pt3dadd( -9.29757, -19.6434, -27.0383, 1.69 ) }
    dend_49 { pt3dadd( -9.95811, -19.8744, -28.2647, 1.77 ) }
    dend_49 { pt3dadd( -11.4629, -20.3188, -30.9749, 1.33 ) }
    dend_49 { pt3dadd( -12.2638, -20.7165, -32.627, 1.4 ) }
    dend_49 { pt3dadd( -12.7357, -21.2463, -33.8678, 1.55 ) }
    dend_49 { pt3dadd( -13.0039, -22.1274, -35.1672, 1.33 ) }
    dend_49 { pt3dadd( -13.0331, -23.6466, -36.8166, 0.74 ) }
    dend_49 { pt3dadd( -12.7821, -24.8905, -37.775, 1.03 ) }
    dend_49 { pt3dadd( -12.4154, -25.9348, -38.3809, 1.47 ) }
    dend_49 { pt3dadd( -12.0263, -26.6212, -38.816, 1.62 ) }
    dend_49 { pt3dadd( -11.41, -27.4409, -39.4162, 1.62 ) }
    dend_49 { pt3dadd( -10.7115, -28.0997, -39.9686, 0.52 ) }
    dend_49 { pt3dadd( -9.88125, -28.7194, -40.5779, 0.52 ) }
    dend_49 { pt3dadd( -9.67469, -29.0432, -41.1017, 0.52 ) }
    dend_49 { pt3dadd( -9.71668, -29.706, -42.4583, 0.66 ) }
    dend_49 { pt3dadd( -9.98525, -30.3569, -43.8918, 0.74 ) }
    dend_49 { pt3dadd( -10.4233, -30.6225, -44.903, 0.44 ) }
    dend_49 { pt3dadd( -11.178, -30.6193, -45.9727, 0.44 ) }
    dend_49 { pt3dadd( -12.2904, -30.4826, -47.333, 0.44 ) }
    dend_49 { pt3dadd( -13.0812, -30.5631, -48.5433, 0.44 ) }
    dend_49 { pt3dadd( -13.5209, -30.7216, -49.4017, 0.44 ) }
    dend_49 { pt3dadd( -14.3384, -31.251, -51.0695, 0.66 ) }
    dend_49 { pt3dadd( -14.7375, -32.073, -52.7546, 1.11 ) }
    dend_49 { pt3dadd( -14.9441, -32.3742, -53.3399, 0.96 ) }
    dend_49 { pt3dadd( -15.484, -33.0094, -54.6816, 1.18 ) }
    dend_49 { pt3dadd( -15.694, -33.2813, -55.2061, 1.69 ) }
    dend_49 { pt3dadd( -16.0354, -33.6997, -55.9663, 1.69 ) }
    dend_49 { pt3dadd( -17.3364, -35.1809, -58.5101, 0.88 ) }
    dend_49 { pt3dadd( -18.131, -35.8856, -59.8385, 2.14 ) }
    dend_49 { pt3dadd( -19.9335, -36.8381, -62.293, 2.28 ) }
    dend_49 { pt3dadd( -20.1866, -36.9069, -62.5739, 2.28 ) }
    dend_49 { pt3dadd( -21.6488, -37.042, -63.9379, 0.44 ) }
    dend_49 { pt3dadd( -22.4836, -36.975, -64.5514, 0.44 ) }
    dend_49 { pt3dadd( -23.4696, -36.7738, -65.1169, 0.81 ) }
    dend_49 { pt3dadd( -24.4812, -36.5165, -65.7211, 0.81 ) }
    dend_49 { pt3dadd( -24.9423, -36.4531, -66.0515, 0.96 ) }
    dend_49 { pt3dadd( -25.8585, -36.5355, -66.8569, 0.66 ) }
    dend_49 { pt3dadd( -26.7797, -36.8487, -67.8028, 1.99 ) }
    dend_49 { pt3dadd( -27.4697, -37.2237, -68.6009, 2.21 ) }
    dend_49 { pt3dadd( -28.1434, -37.7178, -69.4344, 2.5 ) }
    dend_49 { pt3dadd( -29.997, -39.4143, -71.9052, 0.66 ) }
    dend_49 { pt3dadd( -30.958, -40.5211, -73.3645, 0.66 ) }
    dend_49 { pt3dadd( -31.5516, -41.3815, -74.3669, 0.66 ) }
    dend_49 { pt3dadd( -32.1628, -42.4049, -75.4399, 1.55 ) }
    dend_49 { pt3dadd( -32.4467, -42.9083, -75.9149, 2.21 ) }
    dend_49 { pt3dadd( -32.7206, -43.434, -76.3682, 2.21 ) }
    dend_49 { pt3dadd( -33.476, -45.1057, -77.7316, 0.29 ) }
    dend_49 { pt3dadd( -33.8801, -46.184, -78.6794, 0.29 ) }
    dend_49 { pt3dadd( -34.1443, -46.9285, -79.321, 1.55 ) }
    dend_49 { pt3dadd( -34.4737, -47.8269, -80.0781, 1.99 ) }
    dend_49 { pt3dadd( -34.7766, -48.6309, -80.7718, 2.36 ) }
    dend_49 { pt3dadd( -35.6284, -50.8181, -82.7163, 0.59 ) }
    dend_49 { pt3dadd( -36.0519, -51.9393, -83.7806, 1.84 ) }
    dend_49 { pt3dadd( -36.2185, -52.4596, -84.3348, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.69206, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.69206, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.99127, -2.55913, 2.11734, 1.92 ) }
    dend_42 { pt3dadd( -7.82449, -4.27847, 2.0326, 1.92 ) }
    dend_42 { pt3dadd( -8.6837, -5.84705, 1.94713, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.34603, -6.90785, 1.87484, 2.36 ) }
    dend_42 { pt3dadd( -10.2846, -8.19147, 1.77518, 2.28 ) }
    dend_42 { pt3dadd( -11.3157, -9.37661, 1.66119, 2.36 ) }
    dend_42 { pt3dadd( -12.4693, -10.4732, 1.51319, 2.36 ) }
    dend_42 { pt3dadd( -14.2599, -11.7027, 1.30195, 1.77 ) }
    dend_42 { pt3dadd( -15.2448, -12.1073, 1.22793, 1.77 ) }
    dend_42 { pt3dadd( -16.7891, -12.4371, 1.18677, 1.99 ) }
    dend_42 { pt3dadd( -18.1652, -12.5725, 1.27414, 1.99 ) }
    dend_42 { pt3dadd( -18.8461, -12.5971, 1.35821, 1.99 ) }
    dend_42 { pt3dadd( -19.861, -12.6463, 1.53929, 1.77 ) }
    dend_42 { pt3dadd( -21.432, -12.9201, 1.94571, 1.47 ) }
    dend_42 { pt3dadd( -22.5659, -13.3252, 2.26653, 1.47 ) }
    dend_42 { pt3dadd( -23.9951, -14.1503, 2.62766, 1.33 ) }
    dend_42 { pt3dadd( -24.6447, -14.6551, 2.74863, 1.99 ) }
    dend_42 { pt3dadd( -25.7489, -15.687, 2.86984, 1.99 ) }
    dend_42 { pt3dadd( -27.0209, -17.028, 2.88608, 1.77 ) }
    dend_42 { pt3dadd( -28.4278, -18.6664, 2.76227, 1.92 ) }
    dend_42 { pt3dadd( -29.7288, -20.2236, 2.49684, 1.69 ) }
    dend_42 { pt3dadd( -30.5287, -21.1277, 2.23958, 1.69 ) }
    dend_42 { pt3dadd( -31.5311, -22.1458, 1.86061, 1.84 ) }
    dend_42 { pt3dadd( -32.4454, -22.9974, 1.51142, 1.84 ) }
    dend_42 { pt3dadd( -33.6289, -24.061, 1.07786, 1.69 ) }
    dend_42 { pt3dadd( -34.9296, -25.2458, 0.672062, 1.55 ) }
    dend_42 { pt3dadd( -36.2431, -26.5281, 0.365519, 1.4 ) }
    dend_42 { pt3dadd( -37.3193, -27.5837, 0.147061, 1.25 ) }
    dend_42 { pt3dadd( -38.4454, -28.7381, -0.055787, 1.33 ) }
    dend_42 { pt3dadd( -39.5117, -29.9383, -0.173783, 1.47 ) }
    dend_42 { pt3dadd( -40.5101, -31.2117, -0.125929, 1.62 ) }
    dend_42 { pt3dadd( -41.216, -32.4028, 0.122709, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.71205, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.71205, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.635721, -10.0355, -4.842, 2.95 ) }
    dend_27 { pt3dadd( 0.903985, -12.0892, -4.74917, 2.8 ) }
    dend_27 { pt3dadd( 1.05866, -13.4655, -4.66071, 2.8 ) }
    dend_27 { pt3dadd( 1.19339, -15.0045, -4.54925, 3.02 ) }
    dend_27 { pt3dadd( 1.25785, -16.026, -4.47462, 3.02 ) }
    dend_27 { pt3dadd( 1.28482, -17.0279, -4.39751, 3.02 ) }
    dend_27 { pt3dadd( 1.25882, -18.5376, -4.27925, 3.02 ) }
    dend_27 { pt3dadd( 1.15339, -20.1347, -4.14919, 2.36 ) }
    dend_27 { pt3dadd( 0.870453, -22.9284, -4.00705, 2.36 ) }
    dend_27 { pt3dadd( 0.666196, -24.4934, -3.99318, 2.43 ) }
    dend_27 { pt3dadd( 0.431219, -26.0081, -4.0286, 2.43 ) }
    dend_27 { pt3dadd( 0.124087, -27.7837, -4.12912, 2.43 ) }
    dend_27 { pt3dadd( -0.353451, -30.2351, -4.33428, 2.28 ) }
    dend_27 { pt3dadd( -0.868027, -32.7503, -4.60266, 2.14 ) }
    dend_27 { pt3dadd( -1.58644, -36.0824, -5.02256, 2.06 ) }
    dend_27 { pt3dadd( -2.08503, -38.3951, -5.35054, 2.43 ) }
    dend_27 { pt3dadd( -2.39997, -39.8677, -5.58859, 2.58 ) }
    dend_27 { pt3dadd( -2.73767, -41.4196, -5.87336, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.60794, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.46481, 8.36069, -7.59093, 1.62 ) }
    dend_20 { pt3dadd( -0.596699, 9.46813, -7.62421, 1.92 ) }
    dend_20 { pt3dadd( -0.7956, 10.9475, -7.68175, 1.33 ) }
    dend_20 { pt3dadd( -1.04645, 12.5398, -7.76652, 1.69 ) }
    dend_20 { pt3dadd( -1.2522, 13.718, -7.80965, 2.21 ) }
    dend_20 { pt3dadd( -1.42855, 14.7029, -7.80223, 2.21 ) }
    dend_20 { pt3dadd( -1.64089, 15.8116, -7.7507, 1.99 ) }
    dend_20 { pt3dadd( -1.84017, 16.7544, -7.67248, 1.77 ) }
    dend_20 { pt3dadd( -2.0768, 17.8032, -7.55748, 1.99 ) }
    dend_20 { pt3dadd( -2.33343, 18.9133, -7.43111, 1.99 ) }
    dend_20 { pt3dadd( -2.7721, 20.8634, -7.24685, 1.11 ) }
    dend_20 { pt3dadd( -3.04288, 22.0826, -7.16781, 1.11 ) }
    dend_20 { pt3dadd( -3.33306, 23.3092, -7.13643, 1.25 ) }
    dend_20 { pt3dadd( -3.60971, 24.3392, -7.13104, 1.4 ) }
    dend_20 { pt3dadd( -3.97184, 25.4649, -7.19359, 0.81 ) }
    dend_20 { pt3dadd( -4.39832, 26.5312, -7.35349, 0.74 ) }
    dend_20 { pt3dadd( -4.73724, 27.2284, -7.52372, 0.74 ) }
    dend_20 { pt3dadd( -5.15501, 27.9848, -7.75398, 0.74 ) }
    dend_20 { pt3dadd( -5.64052, 28.8085, -8.04677, 0.96 ) }
    dend_20 { pt3dadd( -6.09825, 29.5839, -8.34247, 0.96 ) }
    dend_20 { pt3dadd( -6.5758, 30.3624, -8.64661, 1.55 ) }
    dend_20 { pt3dadd( -7.11522, 31.2352, -8.99993, 2.06 ) }
    dend_20 { pt3dadd( -7.57159, 32.03, -9.32946, 2.43 ) }
    dend_20 { pt3dadd( -8.09499, 33.1002, -9.77679, 2.36 ) }
    dend_20 { pt3dadd( -8.68759, 34.5581, -10.3704, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 8.32794, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.37853, 8.45394, 0.346952, 2.5 ) }
    dend_11 { pt3dadd( -3.2836, 10.2191, 0.311977, 1.77 ) }
    dend_11 { pt3dadd( -3.91533, 11.412, 0.318442, 1.55 ) }
    dend_11 { pt3dadd( -4.65627, 12.7696, 0.378781, 1.55 ) }
    dend_11 { pt3dadd( -5.22083, 13.8056, 0.462953, 1.33 ) }
    dend_11 { pt3dadd( -6.08223, 15.4125, 0.642061, 1.33 ) }
    dend_11 { pt3dadd( -6.6209, 16.3942, 0.779871, 1.55 ) }
    dend_11 { pt3dadd( -7.43363, 17.8485, 1.01408, 1.55 ) }
    dend_11 { pt3dadd( -8.2777, 19.43, 1.27387, 1.62 ) }
    dend_11 { pt3dadd( -8.9516, 20.8396, 1.49205, 1.4 ) }
    dend_11 { pt3dadd( -9.5799, 22.3909, 1.70514, 1.4 ) }
    dend_11 { pt3dadd( -9.93732, 23.3439, 1.8375, 1.4 ) }
    dend_11 { pt3dadd( -10.4931, 24.8765, 2.03867, 1.4 ) }
    dend_11 { pt3dadd( -11.0208, 26.4074, 2.1791, 1.4 ) }
    dend_11 { pt3dadd( -11.6141, 28.2998, 2.27431, 1.77 ) }
    dend_11 { pt3dadd( -12.1135, 29.9976, 2.29211, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 4.18794, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.87984, 4.23798, 1.35096, 2.58 ) }
    dend_0 { pt3dadd( 7.52628, 4.8847, 1.41846, 2.58 ) }
    dend_0 { pt3dadd( 8.25975, 5.62612, 1.51774, 1.84 ) }
    dend_0 { pt3dadd( 8.80272, 6.16404, 1.60582, 2.06 ) }
    dend_0 { pt3dadd( 9.50378, 6.85664, 1.73754, 2.06 ) }
    dend_0 { pt3dadd( 9.96703, 7.30368, 1.85454, 2.58 ) }
    dend_0 { pt3dadd( 10.4812, 7.79653, 2.01409, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.8211, 8.1277, 2.14301, 2.58 ) }
    dend_0 { pt3dadd( 11.4243, 8.68901, 2.40072, 2.58 ) }
    dend_0 { pt3dadd( 11.8487, 9.05586, 2.59209, 2.43 ) }
    dend_0 { pt3dadd( 12.7377, 9.77976, 3.02763, 2.21 ) }
    dend_0 { pt3dadd( 13.3862, 10.2774, 3.35851, 1.99 ) }
    dend_0 { pt3dadd( 13.9066, 10.6533, 3.60797, 1.99 ) }
    dend_0 { pt3dadd( 14.5816, 11.0692, 3.8995, 1.69 ) }
    dend_0 { pt3dadd( 15.1458, 11.3072, 4.11349, 1.69 ) }
    dend_0 { pt3dadd( 16.1449, 11.4441, 4.44189, 2.06 ) }
    dend_0 { pt3dadd( 16.7719, 11.3344, 4.61265, 2.06 ) }
    dend_0 { pt3dadd( 18.2536, 10.6888, 5.00906, 1.69 ) }
    dend_0 { pt3dadd( 19.2727, 10.1298, 5.26661, 1.92 ) }
    dend_0 { pt3dadd( 20.8659, 9.04689, 5.6408, 1.92 ) }
    dend_0 { pt3dadd( 22.383, 7.80057, 5.96425, 2.06 ) }
    dend_0 { pt3dadd( 23.1608, 7.02398, 6.11059, 2.28 ) }
    dend_0 { pt3dadd( 23.7441, 6.31645, 6.22821, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.834799 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.834799 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.834799 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -36.2185, -52.4596, -84.3348, 0.96 ) }
    dend_51 { pt3dadd( -34.3652, -56.5627, -91.0014, 0.96 ) }
    dend_51 { pt3dadd( -34.0465, -57.461, -92.2466, 0.96 ) }
    dend_51 { pt3dadd( -33.6774, -58.6641, -93.7137, 0.96 ) }
    dend_51 { pt3dadd( -33.1973, -60.3432, -95.5915, 1.55 ) }
    dend_51 { pt3dadd( -32.848, -61.7471, -97.0163, 0.22 ) }
    dend_51 { pt3dadd( -32.52, -63.3586, -98.4146, 0.22 ) }
    dend_51 { pt3dadd( -32.427, -64.3755, -98.9572, 1.11 ) }
    dend_51 { pt3dadd( -32.3677, -65.3263, -99.3899, 1.4 ) }
    dend_51 { pt3dadd( -32.2504, -66.6175, -99.8668, 1.4 ) }
    dend_51 { pt3dadd( -31.9217, -69.4044, -100.715, 0.22 ) }
    dend_51 { pt3dadd( -31.4374, -72.2744, -101.492, 0.22 ) }
    dend_51 { pt3dadd( -31.234, -73.2215, -101.729, 0.74 ) }
    dend_51 { pt3dadd( -31.1133, -73.7293, -101.839, 0.74 ) }
    dend_51 { pt3dadd( -30.4437, -76.4375, -102.347, 0.15 ) }
    dend_51 { pt3dadd( -30.3326, -76.8579, -102.407, 0.37 ) }
    dend_51 { pt3dadd( -29.6081, -79.1589, -102.658, 0.22 ) }
    dend_51 { pt3dadd( -29.1406, -80.4471, -102.827, 0.22 ) }
    dend_51 { pt3dadd( -28.7697, -81.4743, -102.957, 0.74 ) }
    dend_51 { pt3dadd( -28.4441, -82.5134, -103.071, 0.88 ) }
    dend_51 { pt3dadd( -28.3811, -82.8609, -103.101, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -36.2185, -52.4596, -84.3348, 2.87 ) }
    dend_50 { pt3dadd( -37.1048, -52.5639, -84.56, 2.87 ) }
    dend_50 { pt3dadd( -39.9392, -53.1296, -85.3716, 0.22 ) }
    dend_50 { pt3dadd( -42.5674, -53.968, -86.1478, 0.22 ) }
    dend_50 { pt3dadd( -43.8519, -54.4423, -86.5243, 1.69 ) }
    dend_50 { pt3dadd( -44.259, -54.607, -86.6422, 2.21 ) }
    dend_50 { pt3dadd( -44.9249, -54.8921, -86.8326, 2.21 ) }
    dend_50 { pt3dadd( -47.4206, -56.1531, -87.5029, 0.22 ) }
    dend_50 { pt3dadd( -49.6773, -57.5831, -88.1233, 0.22 ) }
    dend_50 { pt3dadd( -50.3861, -58.0778, -88.3246, 1.25 ) }
    dend_50 { pt3dadd( -50.966, -58.4876, -88.4898, 1.25 ) }
    dend_50 { pt3dadd( -51.733, -59.0247, -88.719, 1.25 ) }
    dend_50 { pt3dadd( -53.2786, -60.0323, -89.1908, 0.15 ) }
    dend_50 { pt3dadd( -54.1497, -60.5729, -89.453, 0.15 ) }
    dend_50 { pt3dadd( -54.8228, -60.9421, -89.6708, 0.96 ) }
    dend_50 { pt3dadd( -55.573, -61.3103, -89.9444, 1.18 ) }
    dend_50 { pt3dadd( -55.9104, -61.4503, -90.0764, 1.18 ) }
    dend_50 { pt3dadd( -58.0348, -62.1836, -91.0553, 0.22 ) }
    dend_50 { pt3dadd( -58.5799, -62.3026, -91.3459, 0.52 ) }
    dend_50 { pt3dadd( -59.0688, -62.3827, -91.6172, 0.52 ) }
    dend_50 { pt3dadd( -60.3186, -62.5472, -92.31, 0.22 ) }
    dend_50 { pt3dadd( -61.0915, -62.6418, -92.7494, 1.25 ) }
    dend_50 { pt3dadd( -62.2382, -62.8219, -93.376, 1.4 ) }
    dend_50 { pt3dadd( -64.4876, -63.383, -94.6342, 0.22 ) }
    dend_50 { pt3dadd( -66.0644, -63.9627, -95.4916, 0.22 ) }
    dend_50 { pt3dadd( -66.6799, -64.2722, -95.8178, 0.74 ) }
    dend_50 { pt3dadd( -67.4993, -64.8178, -96.2311, 0.88 ) }
    dend_50 { pt3dadd( -68.7057, -66.0229, -96.9579, 0.22 ) }
    dend_50 { pt3dadd( -69.7878, -67.679, -97.6407, 0.22 ) }
    dend_50 { pt3dadd( -70.2968, -68.8048, -97.9941, 1.99 ) }
    dend_50 { pt3dadd( -70.5449, -69.5072, -98.1629, 2.36 ) }
    dend_50 { pt3dadd( -70.7611, -70.203, -98.3226, 2.36 ) }
    dend_50 { pt3dadd( -71.8089, -74.1452, -99.1795, 0.15 ) }
    dend_50 { pt3dadd( -72.3453, -76.6229, -99.7399, 0.15 ) }
    dend_50 { pt3dadd( -72.4713, -77.2691, -99.8589, 0.44 ) }
    dend_50 { pt3dadd( -72.6816, -78.5189, -100.052, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -41.216, -32.4028, 0.122709, 0.96 ) }
    dend_44 { pt3dadd( -42.0451, -32.8013, -0.257052, 0.96 ) }
    dend_44 { pt3dadd( -42.8341, -33.2109, -0.61903, 1.25 ) }
    dend_44 { pt3dadd( -43.9717, -33.7995, -1.13553, 1.25 ) }
    dend_44 { pt3dadd( -45.9614, -34.7469, -1.99058, 1.18 ) }
    dend_44 { pt3dadd( -47.3216, -35.3205, -2.53762, 1.11 ) }
    dend_44 { pt3dadd( -48.3707, -35.7343, -2.95248, 0.88 ) }
    dend_44 { pt3dadd( -49.7493, -36.2921, -3.51915, 0.96 ) }
    dend_44 { pt3dadd( -50.5375, -36.6125, -3.85075, 0.96 ) }
    dend_44 { pt3dadd( -51.6935, -37.0934, -4.34329, 0.96 ) }
    dend_44 { pt3dadd( -52.8423, -37.5602, -4.76171, 0.96 ) }
    dend_44 { pt3dadd( -53.8271, -37.9362, -5.06139, 1.18 ) }
    dend_44 { pt3dadd( -55.0455, -38.3698, -5.37965, 1.03 ) }
    dend_44 { pt3dadd( -55.657, -38.5539, -5.47856, 1.03 ) }
    dend_44 { pt3dadd( -56.9552, -38.8656, -5.55341, 1.18 ) }
    dend_44 { pt3dadd( -57.7594, -38.9982, -5.4907, 1.18 ) }
    dend_44 { pt3dadd( -59.6168, -39.1242, -5.02709, 0.96 ) }
    dend_44 { pt3dadd( -60.3066, -39.119, -4.80101, 1.11 ) }
    dend_44 { pt3dadd( -61.6585, -39.07, -4.30026, 1.11 ) }
    dend_44 { pt3dadd( -62.7438, -39.0549, -3.88198, 1.11 ) }
    dend_44 { pt3dadd( -64.021, -39.084, -3.38151, 1.11 ) }
    dend_44 { pt3dadd( -65.7251, -39.2616, -2.70662, 1.55 ) }
    dend_44 { pt3dadd( -66.9396, -39.5273, -2.24575, 1.03 ) }
    dend_44 { pt3dadd( -68.3911, -40.021, -1.68358, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -69.625, -40.6197, -1.21216, 0.74 ) }
    dend_44 { pt3dadd( -70.3295, -41.0815, -0.942933, 0.74 ) }
    dend_44 { pt3dadd( -71.2303, -41.8615, -0.632316, 0.74 ) }
    dend_44 { pt3dadd( -72.1138, -42.8303, -0.37449, 0.66 ) }
    dend_44 { pt3dadd( -72.8993, -43.8431, -0.158007, 0.88 ) }
    dend_44 { pt3dadd( -73.4076, -44.5897, -0.0360493, 1.03 ) }
    dend_44 { pt3dadd( -73.9347, -45.4734, 0.0881141, 1.03 ) }
    dend_44 { pt3dadd( -74.6059, -46.6153, 0.23063, 0.88 ) }
    dend_44 { pt3dadd( -75.4404, -47.9608, 0.374217, 0.88 ) }
    dend_44 { pt3dadd( -75.9116, -48.6377, 0.428205, 0.88 ) }
    dend_44 { pt3dadd( -76.6114, -49.4705, 0.479108, 0.88 ) }
    dend_44 { pt3dadd( -77.9774, -50.8058, 0.534605, 0.88 ) }
    dend_44 { pt3dadd( -78.7775, -51.4122, 0.537591, 0.88 ) }
    dend_44 { pt3dadd( -79.9252, -52.0516, 0.503611, 0.88 ) }
    dend_44 { pt3dadd( -80.6982, -52.3485, 0.452988, 0.96 ) }
    dend_44 { pt3dadd( -81.6051, -52.6145, 0.351743, 0.96 ) }
    dend_44 { pt3dadd( -82.43, -52.7907, 0.250745, 0.96 ) }
    dend_44 { pt3dadd( -83.3548, -52.957, 0.140753, 0.52 ) }
    dend_44 { pt3dadd( -83.9882, -53.1769, 0.0982351, 0.52 ) }
    dend_44 { pt3dadd( -84.4714, -53.5561, 0.150216, 0.52 ) }
    dend_44 { pt3dadd( -84.9569, -54.2488, 0.376616, 0.81 ) }
    dend_44 { pt3dadd( -85.3415, -54.9725, 0.677884, 0.96 ) }
    dend_44 { pt3dadd( -85.6345, -55.8045, 1.06043, 0.96 ) }
    dend_44 { pt3dadd( -85.9818, -57.2916, 1.77787, 0.81 ) }
    dend_44 { pt3dadd( -86.1055, -58.0174, 2.14353, 0.81 ) }
    dend_44 { pt3dadd( -86.2267, -58.9286, 2.6536, 1.11 ) }
    dend_44 { pt3dadd( -86.3363, -59.4371, 2.98037, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -41.216, -32.4028, 0.122709, 1.33 ) }
    dend_43 { pt3dadd( -42.1386, -32.4857, 0.707356, 1.33 ) }
    dend_43 { pt3dadd( -43.0188, -32.6116, 1.19079, 1.18 ) }
    dend_43 { pt3dadd( -44.6639, -32.826, 2.04217, 0.88 ) }
    dend_43 { pt3dadd( -45.4525, -32.9061, 2.40553, 0.74 ) }
    dend_43 { pt3dadd( -46.5982, -32.9875, 2.85347, 0.74 ) }
    dend_43 { pt3dadd( -47.7612, -33.0072, 3.28987, 0.74 ) }
    dend_43 { pt3dadd( -48.6341, -33.0071, 3.5842, 0.59 ) }
    dend_43 { pt3dadd( -49.6583, -32.9572, 3.91127, 0.59 ) }
    dend_43 { pt3dadd( -50.4643, -32.8692, 4.16163, 0.52 ) }
    dend_43 { pt3dadd( -51.2843, -32.6815, 4.45403, 0.52 ) }
    dend_43 { pt3dadd( -52.8432, -32.122, 5.08086, 0.74 ) }
    dend_43 { pt3dadd( -53.8397, -31.6722, 5.52642, 0.59 ) }
    dend_43 { pt3dadd( -54.7616, -31.2413, 5.95882, 0.44 ) }
    dend_43 { pt3dadd( -55.7606, -30.8225, 6.46023, 0.37 ) }
    dend_43 { pt3dadd( -56.5634, -30.5631, 6.88664, 0.66 ) }
    dend_43 { pt3dadd( -57.2716, -30.4527, 7.20796, 0.66 ) }
    dend_43 { pt3dadd( -57.722, -30.4659, 7.34326, 0.66 ) }
    dend_43 { pt3dadd( -58.3138, -30.5241, 7.49852, 0.44 ) }
    dend_43 { pt3dadd( -58.9967, -30.6423, 7.65779, 0.44 ) }
    dend_43 { pt3dadd( -60.2106, -30.8653, 7.91493, 0.44 ) }
    dend_43 { pt3dadd( -61.8877, -31.2091, 8.28276, 0.74 ) }
    dend_43 { pt3dadd( -62.8819, -31.4478, 8.50429, 0.74 ) }
    dend_43 { pt3dadd( -64.2523, -31.7684, 8.79113, 0.52 ) }
    dend_43 { pt3dadd( -65.5314, -32.0544, 9.0421, 0.59 ) }
    dend_43 { pt3dadd( -66.6266, -32.2965, 9.23848, 0.44 ) }
    dend_43 { pt3dadd( -68.1498, -32.6922, 9.5233, 0.37 ) }
    dend_43 { pt3dadd( -69.248, -33.0695, 9.7529, 0.37 ) }
    dend_43 { pt3dadd( -70.4414, -33.6455, 10.009, 0.29 ) }
    dend_43 { pt3dadd( -71.0075, -34.0342, 10.14, 0.29 ) }
    dend_43 { pt3dadd( -71.6837, -34.6223, 10.3716, 0.29 ) }
    dend_43 { pt3dadd( -72.2679, -35.1776, 10.6248, 0.37 ) }
    dend_43 { pt3dadd( -72.9376, -35.818, 10.9732, 0.37 ) }
    dend_43 { pt3dadd( -73.6243, -36.4232, 11.3719, 0.37 ) }
    dend_43 { pt3dadd( -74.3719, -37.1305, 11.8703, 0.66 ) }
    dend_43 { pt3dadd( -75.1204, -37.8113, 12.3842, 0.81 ) }
    dend_43 { pt3dadd( -75.6979, -38.2726, 12.7707, 0.81 ) }
    dend_43 { pt3dadd( -76.5374, -38.8095, 13.2736, 0.22 ) }
    dend_43 { pt3dadd( -77.5658, -39.3416, 13.8434, 0.22 ) }
    dend_43 { pt3dadd( -87.3475, -39.9399, 16.9598, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.73767, -41.4196, -5.87336, 1.55 ) }
    dend_33 { pt3dadd( -2.33305, -42.5863, -5.88335, 1.55 ) }
    dend_33 { pt3dadd( -1.93011, -43.7748, -5.89064, 1.55 ) }
    dend_33 { pt3dadd( -1.58892, -44.8193, -5.89984, 1.55 ) }
    dend_33 { pt3dadd( -1.21368, -46.0048, -5.90343, 1.69 ) }
    dend_33 { pt3dadd( -0.944023, -46.9149, -5.89945, 1.69 ) }
    dend_33 { pt3dadd( -0.764081, -47.5961, -5.89381, 1.69 ) }
    dend_33 { pt3dadd( -0.517898, -48.728, -5.87763, 1.55 ) }
    dend_33 { pt3dadd( -0.252064, -50.2106, -5.85393, 1.47 ) }
    dend_33 { pt3dadd( -0.0962509, -51.4479, -5.81692, 1.33 ) }
    dend_33 { pt3dadd( -0.024579, -52.636, -5.76391, 1.33 ) }
    dend_33 { pt3dadd( -0.0381498, -54.2166, -5.67621, 1.33 ) }
    dend_33 { pt3dadd( -0.136544, -55.378, -5.58824, 1.11 ) }
    dend_33 { pt3dadd( -0.261357, -56.1112, -5.51612, 1.11 ) }
    dend_33 { pt3dadd( -0.648345, -57.7117, -5.32841, 1.25 ) }
    dend_33 { pt3dadd( -0.966751, -58.776, -5.19089, 1.25 ) }
    dend_33 { pt3dadd( -1.29199, -59.7347, -5.06045, 1.25 ) }
    dend_33 { pt3dadd( -1.77836, -61.0667, -4.88566, 1.4 ) }
    dend_33 { pt3dadd( -2.27858, -62.3811, -4.7261, 1.4 ) }
    dend_33 { pt3dadd( -2.67466, -63.4473, -4.62201, 1.55 ) }
    dend_33 { pt3dadd( -2.92779, -64.2321, -4.58324, 1.55 ) }
    dend_33 { pt3dadd( -3.23196, -65.3933, -4.57097, 1.33 ) }
    dend_33 { pt3dadd( -3.52821, -66.8435, -4.62122, 0.96 ) }
    dend_33 { pt3dadd( -3.61401, -67.4182, -4.67007, 0.81 ) }
    dend_33 { pt3dadd( -3.68115, -68.0647, -4.73394, 0.81 ) }
    dend_33 { pt3dadd( -3.7798, -69.5581, -4.88044, 0.96 ) }
    dend_33 { pt3dadd( -3.81117, -70.5921, -4.97045, 1.33 ) }
    dend_33 { pt3dadd( -3.82566, -71.7332, -5.05149, 1.69 ) }
    dend_33 { pt3dadd( -3.84034, -72.4249, -5.0835, 1.84 ) }
    dend_33 { pt3dadd( -3.87141, -73.2094, -5.09569, 1.99 ) }
    dend_33 { pt3dadd( -3.949, -74.1383, -5.07488, 2.06 ) }
    dend_33 { pt3dadd( -4.02732, -74.9328, -5.03569, 2.06 ) }
    dend_33 { pt3dadd( -4.10397, -75.7415, -4.96434, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -4.17123, -76.6045, -4.85093, 1.62 ) }
    dend_33 { pt3dadd( -4.22891, -77.6414, -4.68224, 1.18 ) }
    dend_33 { pt3dadd( -4.25306, -78.4716, -4.53851, 0.88 ) }
    dend_33 { pt3dadd( -4.27147, -79.6062, -4.32509, 0.88 ) }
    dend_33 { pt3dadd( -4.27507, -80.387, -4.15155, 1.03 ) }
    dend_33 { pt3dadd( -4.27847, -81.1903, -3.94892, 1.11 ) }
    dend_33 { pt3dadd( -4.29389, -81.7624, -3.79569, 1.11 ) }
    dend_33 { pt3dadd( -4.40248, -83.1907, -3.40447, 1.03 ) }
    dend_33 { pt3dadd( -4.51806, -84.1231, -3.14587, 1.18 ) }
    dend_33 { pt3dadd( -4.63211, -84.8844, -2.94535, 1.25 ) }
    dend_33 { pt3dadd( -4.82424, -86.0428, -2.66779, 1.18 ) }
    dend_33 { pt3dadd( -5.02022, -87.0934, -2.44576, 1.03 ) }
    dend_33 { pt3dadd( -5.24635, -88.1422, -2.25282, 0.96 ) }
    dend_33 { pt3dadd( -5.52545, -89.2778, -2.08193, 0.88 ) }
    dend_33 { pt3dadd( -5.7412, -90.0364, -2.00298, 0.88 ) }
    dend_33 { pt3dadd( -6.13377, -91.1785, -1.97493, 1.25 ) }
    dend_33 { pt3dadd( -6.58172, -92.3177, -2.01898, 1.55 ) }
    dend_33 { pt3dadd( -6.93561, -93.1888, -2.09019, 1.62 ) }
    dend_33 { pt3dadd( -7.20227, -93.886, -2.1642, 1.62 ) }
    dend_33 { pt3dadd( -7.51573, -94.7986, -2.26996, 1.4 ) }
    dend_33 { pt3dadd( -7.90461, -96.0908, -2.40791, 1.11 ) }
    dend_33 { pt3dadd( -8.22458, -97.4224, -2.53064, 1.11 ) }
    dend_33 { pt3dadd( -8.49021, -98.8927, -2.61887, 1.11 ) }
    dend_33 { pt3dadd( -8.71534, -100.461, -2.68158, 1.11 ) }
    dend_33 { pt3dadd( -8.85739, -101.608, -2.70661, 1.4 ) }
    dend_33 { pt3dadd( -8.98637, -102.796, -2.71637, 1.4 ) }
    dend_33 { pt3dadd( -9.17038, -104.65, -2.70546, 1.25 ) }
    dend_33 { pt3dadd( -9.35943, -106.548, -2.69992, 1.25 ) }
    dend_33 { pt3dadd( -9.49478, -107.796, -2.69775, 1.62 ) }
    dend_33 { pt3dadd( -9.63059, -108.89, -2.70553, 1.77 ) }
    dend_33 { pt3dadd( -9.81586, -110.354, -2.73887, 1.33 ) }
    dend_33 { pt3dadd( -9.97811, -111.68, -2.77825, 0.88 ) }
    dend_33 { pt3dadd( -10.1296, -113.157, -2.84112, 1.25 ) }
    dend_33 { pt3dadd( -10.192, -113.889, -2.88367, 1.84 ) }
    dend_33 { pt3dadd( -10.2406, -114.707, -2.94603, 2.28 ) }
    dend_33 { pt3dadd( -10.2705, -115.556, -3.03047, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.73767, -41.4196, -5.87336, 2.14 ) }
    dend_28 { pt3dadd( -2.58556, -42.1081, -6.05463, 2.14 ) }
    dend_28 { pt3dadd( -2.31403, -43.1979, -6.28885, 2.14 ) }
    dend_28 { pt3dadd( -1.84972, -45.0615, -6.68936, 1.69 ) }
    dend_28 { pt3dadd( -1.46067, -46.6231, -7.02496, 1.84 ) }
    dend_28 { pt3dadd( -1.08271, -48.1401, -7.35098, 1.99 ) }
    dend_28 { pt3dadd( -0.77696, -49.3673, -7.61472, 2.36 ) }
    dend_28 { pt3dadd( -0.535714, -50.268, -7.77, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.68759, 34.5581, -10.3704, 1.25 ) }
    dend_22 { pt3dadd( -8.33587, 35.5922, -10.7298, 1.25 ) }
    dend_22 { pt3dadd( -8.03795, 36.2835, -10.9689, 1.03 ) }
    dend_22 { pt3dadd( -7.63963, 37.1034, -11.247, 0.81 ) }
    dend_22 { pt3dadd( -7.18984, 38.0225, -11.5415, 0.81 ) }
    dend_22 { pt3dadd( -6.78992, 38.9447, -11.8101, 1.11 ) }
    dend_22 { pt3dadd( -6.53451, 39.6175, -11.9878, 1.11 ) }
    dend_22 { pt3dadd( -6.25174, 40.409, -12.1503, 0.96 ) }
    dend_22 { pt3dadd( -5.9083, 41.4736, -12.328, 0.66 ) }
    dend_22 { pt3dadd( -5.69604, 42.2127, -12.441, 0.52 ) }
    dend_22 { pt3dadd( -5.44302, 43.1858, -12.5738, 0.52 ) }
    dend_22 { pt3dadd( -5.27918, 43.9112, -12.6643, 0.52 ) }
    dend_22 { pt3dadd( -4.93077, 45.4615, -12.883, 1.18 ) }
    dend_22 { pt3dadd( -4.74893, 46.2541, -13.0044, 1.62 ) }
    dend_22 { pt3dadd( -4.61095, 46.8218, -13.0997, 1.69 ) }
    dend_22 { pt3dadd( -4.35756, 47.7584, -13.2914, 1.33 ) }
    dend_22 { pt3dadd( -4.20477, 48.2187, -13.411, 0.74 ) }
    dend_22 { pt3dadd( -3.93234, 48.9199, -13.6314, 0.59 ) }
    dend_22 { pt3dadd( -3.48205, 50.0233, -14.0507, 0.66 ) }
    dend_22 { pt3dadd( -3.25214, 50.62, -14.2912, 0.44 ) }
    dend_22 { pt3dadd( -3.10496, 51.0678, -14.4666, 0.44 ) }
    dend_22 { pt3dadd( -2.87494, 51.8922, -14.7827, 0.37 ) }
    dend_22 { pt3dadd( -2.67684, 52.5863, -15.0431, 0.37 ) }
    dend_22 { pt3dadd( -2.50831, 53.0899, -15.2223, 0.37 ) }
    dend_22 { pt3dadd( -2.18215, 53.8771, -15.5334, 0.37 ) }
    dend_22 { pt3dadd( -1.86704, 54.5758, -15.8302, 0.44 ) }
    dend_22 { pt3dadd( -1.59526, 55.257, -16.1383, 0.44 ) }
    dend_22 { pt3dadd( -1.23918, 56.3638, -16.6581, 0.81 ) }
    dend_22 { pt3dadd( -1.01865, 57.1478, -17.0302, 1.03 ) }
    dend_22 { pt3dadd( -0.812339, 57.8549, -17.3793, 1.03 ) }
    dend_22 { pt3dadd( -0.628948, 58.497, -17.7227, 0.81 ) }
    dend_22 { pt3dadd( -0.390312, 59.4341, -18.2625, 0.29 ) }
    dend_22 { pt3dadd( -0.293136, 59.9012, -18.5383, 0.29 ) }
    dend_22 { pt3dadd( -0.114877, 61.0354, -19.1874, 1.77 ) }
    dend_22 { pt3dadd( -0.0616779, 61.4139, -19.3979, 2.36 ) }
    dend_22 { pt3dadd( 0.022704, 61.9387, -19.6696, 2.36 ) }
    dend_22 { pt3dadd( 0.211492, 62.9374, -20.1614, 2.28 ) }
    dend_22 { pt3dadd( 0.484659, 64.1351, -20.7141, 0.66 ) }
    dend_22 { pt3dadd( 0.641284, 64.7898, -21.0179, 0.88 ) }
    dend_22 { pt3dadd( 0.801643, 65.4714, -21.3372, 0.88 ) }
    dend_22 { pt3dadd( 0.986042, 66.2371, -21.6774, 0.37 ) }
    dend_22 { pt3dadd( 1.11337, 66.7545, -21.8997, 0.37 ) }
    dend_22 { pt3dadd( 1.37289, 67.835, -22.3371, 0.37 ) }
    dend_22 { pt3dadd( 1.5602, 68.6513, -22.6528, 1.11 ) }
    dend_22 { pt3dadd( 1.69884, 69.3048, -22.8948, 1.47 ) }
    dend_22 { pt3dadd( 1.78631, 69.7736, -23.057, 1.69 ) }
    dend_22 { pt3dadd( 1.91042, 70.5688, -23.3095, 1.33 ) }
    dend_22 { pt3dadd( 2.02197, 71.4457, -23.5597, 0.44 ) }
    dend_22 { pt3dadd( 2.08061, 72.3843, -23.7874, 0.29 ) }
    dend_22 { pt3dadd( 2.09987, 73.1233, -23.956, 0.52 ) }
    dend_22 { pt3dadd( 2.09983, 73.6768, -24.0771, 0.52 ) }
    dend_22 { pt3dadd( 2.07564, 74.6067, -24.2969, 0.29 ) }
    dend_22 { pt3dadd( 2.06409, 75.5629, -24.5309, 0.29 ) }
    dend_22 { pt3dadd( 2.07265, 77.2449, -24.9778, 1.18 ) }
    dend_22 { pt3dadd( 2.08522, 77.8767, -25.1479, 1.62 ) }
    dend_22 { pt3dadd( 2.10084, 78.5501, -25.3175, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 2.12627, 79.4009, -25.5171, 1.33 ) }
    dend_22 { pt3dadd( 2.19801, 81.8296, -26.065, 0.22 ) }
    dend_22 { pt3dadd( 2.25411, 83.3847, -26.4024, 0.22 ) }
    dend_22 { pt3dadd( 2.30873, 84.7912, -26.6857, 0.22 ) }
    dend_22 { pt3dadd( 2.35303, 86.2802, -26.9534, 0.74 ) }
    dend_22 { pt3dadd( 2.37064, 87.0927, -27.0904, 1.03 ) }
    dend_22 { pt3dadd( 2.37329, 87.4764, -27.1489, 1.03 ) }
    dend_22 { pt3dadd( 2.32177, 88.7027, -27.3504, 0.15 ) }
    dend_22 { pt3dadd( 2.28804, 89.1729, -27.4473, 0.15 ) }
    dend_22 { pt3dadd( 2.2371, 89.71, -27.5938, 0.44 ) }
    dend_22 { pt3dadd( 2.18496, 90.22, -27.7568, 0.66 ) }
    dend_22 { pt3dadd( 2.13752, 90.6899, -27.9084, 0.66 ) }
    dend_22 { pt3dadd( 2.04262, 92.0424, -28.3469, 1.55 ) }
    dend_22 { pt3dadd( 2.00447, 93.0357, -28.6626, 2.58 ) }
    dend_22 { pt3dadd( 1.99649, 93.8989, -28.9404, 2.58 ) }
    dend_22 { pt3dadd( 2.07326, 95.8112, -29.5378, 0.29 ) }
    dend_22 { pt3dadd( 2.21192, 97.0865, -29.8943, 0.29 ) }
    dend_22 { pt3dadd( 2.5267, 98.9125, -30.3349, 0.29 ) }
    dend_22 { pt3dadd( 2.80203, 100.057, -30.5685, 0.96 ) }
    dend_22 { pt3dadd( 2.97516, 100.645, -30.6653, 0.96 ) }
    dend_22 { pt3dadd( 3.64899, 102.555, -30.9149, 0.22 ) }
    dend_22 { pt3dadd( 4.45696, 104.587, -31.1099, 0.22 ) }
    dend_22 { pt3dadd( 5.00379, 105.863, -31.1977, 1.77 ) }
    dend_22 { pt3dadd( 5.23136, 106.362, -31.2195, 2.36 ) }
    dend_22 { pt3dadd( 5.51503, 106.971, -31.2418, 2.5 ) }
    dend_22 { pt3dadd( 6.43431, 108.94, -31.2997, 0.15 ) }
    dend_22 { pt3dadd( 6.89162, 109.931, -31.3349, 0.29 ) }
    dend_22 { pt3dadd( 7.1903, 110.594, -31.3702, 0.29 ) }
    dend_22 { pt3dadd( 7.55822, 111.441, -31.457, 0.15 ) }
    dend_22 { pt3dadd( 7.90886, 112.306, -31.5952, 1.18 ) }
    dend_22 { pt3dadd( 8.12109, 112.842, -31.7085, 1.55 ) }
    dend_22 { pt3dadd( 8.35184, 113.436, -31.8571, 1.18 ) }
    dend_22 { pt3dadd( 8.51734, 113.863, -31.9774, 0.74 ) }
    dend_22 { pt3dadd( 8.98869, 115.193, -32.3521, 0.22 ) }
    dend_22 { pt3dadd( 9.33033, 116.233, -32.6427, 0.22 ) }
    dend_22 { pt3dadd( 9.88438, 118.056, -33.1044, 0.22 ) }
    dend_22 { pt3dadd( 10.1655, 119.04, -33.3284, 0.81 ) }
    dend_22 { pt3dadd( 10.2716, 119.436, -33.4086, 0.81 ) }
    dend_22 { pt3dadd( 10.8947, 121.917, -33.8248, 0.22 ) }
    dend_22 { pt3dadd( 11.1871, 123.171, -33.96, 0.22 ) }
    dend_22 { pt3dadd( 11.4152, 124.306, -34.0623, 1.25 ) }
    dend_22 { pt3dadd( 11.4552, 124.609, -34.0842, 1.69 ) }
    dend_22 { pt3dadd( 11.4842, 124.952, -34.1042, 1.69 ) }
    dend_22 { pt3dadd( 11.5224, 125.685, -34.1368, 1.33 ) }
    dend_22 { pt3dadd( 11.5269, 126.328, -34.1676, 0.59 ) }
    dend_22 { pt3dadd( 11.5064, 127.665, -34.2602, 0.22 ) }
    dend_22 { pt3dadd( 11.4846, 129.567, -34.4533, 0.22 ) }
    dend_22 { pt3dadd( 11.4694, 130.738, -34.5857, 1.03 ) }
    dend_22 { pt3dadd( 11.4609, 131.231, -34.6442, 1.03 ) }
    dend_22 { pt3dadd( 11.4677, 131.746, -34.7085, 1.03 ) }
    dend_22 { pt3dadd( 11.5069, 132.508, -34.8027, 0.52 ) }
    dend_22 { pt3dadd( 11.6658, 134.213, -34.993, 0.22 ) }
    dend_22 { pt3dadd( 11.8047, 135.03, -35.095, 0.59 ) }
    dend_22 { pt3dadd( 11.9257, 135.552, -35.1634, 0.59 ) }
    dend_22 { pt3dadd( 12.5665, 137.838, -35.466, 0.22 ) }
    dend_22 { pt3dadd( 12.8048, 138.546, -35.5594, 0.66 ) }
    dend_22 { pt3dadd( 13.0088, 139.049, -35.6314, 0.66 ) }
    dend_22 { pt3dadd( 13.5243, 140.214, -35.8165, 0.15 ) }
    dend_22 { pt3dadd( 13.8202, 140.86, -35.9311, 0.81 ) }
    dend_22 { pt3dadd( 14.0213, 141.305, -36.0176, 0.81 ) }
    dend_22 { pt3dadd( 14.3057, 141.96, -36.16, 0.81 ) }
    dend_22 { pt3dadd( 14.8065, 143.212, -36.4456, 0.22 ) }
    dend_22 { pt3dadd( 15.2877, 144.484, -36.7637, 1.33 ) }
    dend_22 { pt3dadd( 15.4782, 145.017, -36.9053, 1.55 ) }
    dend_22 { pt3dadd( 15.5903, 145.329, -36.9902, 1.55 ) }
    dend_22 { pt3dadd( 15.7083, 145.659, -37.0851, 1.03 ) }
    dend_22 { pt3dadd( 16.2661, 147.159, -37.5464, 0.22 ) }
    dend_22 { pt3dadd( 16.7946, 148.49, -37.9827, 0.22 ) }
    dend_22 { pt3dadd( 17.0937, 149.186, -38.2339, 0.22 ) }
    dend_22 { pt3dadd( 17.4443, 150.01, -38.5331, 1.25 ) }
    dend_22 { pt3dadd( 17.6557, 150.543, -38.7271, 1.77 ) }
    dend_22 { pt3dadd( 17.8298, 151.026, -38.9044, 1.77 ) }
    dend_22 { pt3dadd( 17.9652, 151.435, -39.0613, 1.18 ) }
    dend_22 { pt3dadd( 18.164, 152.081, -39.3148, 0.66 ) }
    dend_22 { pt3dadd( 18.7562, 154.05, -40.1314, 0.22 ) }
    dend_22 { pt3dadd( 19.1495, 155.362, -40.7184, 0.22 ) }
    dend_22 { pt3dadd( 19.4262, 156.257, -41.1189, 1.11 ) }
    dend_22 { pt3dadd( 19.6254, 156.831, -41.3746, 1.4 ) }
    dend_22 { pt3dadd( 19.8249, 157.339, -41.6044, 1.4 ) }
    dend_22 { pt3dadd( 20.0827, 157.926, -41.8941, 0.96 ) }
    dend_22 { pt3dadd( 20.8731, 159.578, -42.7762, 0.22 ) }
    dend_22 { pt3dadd( 21.7654, 161.289, -43.7137, 0.22 ) }
    dend_22 { pt3dadd( 22.4821, 162.599, -44.4289, 1.77 ) }
    dend_22 { pt3dadd( 22.7421, 163.061, -44.6747, 2.65 ) }
    dend_22 { pt3dadd( 23.1622, 163.783, -45.0478, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.68759, 34.5581, -10.3704, 0.66 ) }
    dend_21 { pt3dadd( -10.1756, 35.2122, -10.821, 0.66 ) }
    dend_21 { pt3dadd( -10.7671, 35.4452, -10.9997, 0.66 ) }
    dend_21 { pt3dadd( -11.4601, 35.691, -11.2044, 0.66 ) }
    dend_21 { pt3dadd( -12.249, 35.9374, -11.4411, 1.11 ) }
    dend_21 { pt3dadd( -12.7362, 36.0673, -11.5923, 1.33 ) }
    dend_21 { pt3dadd( -13.4694, 36.2542, -11.8227, 1.33 ) }
    dend_21 { pt3dadd( -14.2642, 36.4316, -12.0726, 0.96 ) }
    dend_21 { pt3dadd( -14.8162, 36.5565, -12.2267, 0.88 ) }
    dend_21 { pt3dadd( -15.4796, 36.7048, -12.3894, 0.88 ) }
    dend_21 { pt3dadd( -16.2751, 36.8761, -12.5442, 0.37 ) }
    dend_21 { pt3dadd( -16.6883, 36.9592, -12.6061, 0.37 ) }
    dend_21 { pt3dadd( -17.3987, 37.0983, -12.6865, 0.81 ) }
    dend_21 { pt3dadd( -18.0165, 37.2246, -12.7388, 0.88 ) }
    dend_21 { pt3dadd( -18.5905, 37.3457, -12.7788, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -19.1984, 37.4768, -12.812, 0.29 ) }
    dend_21 { pt3dadd( -19.5851, 37.5555, -12.8379, 0.29 ) }
    dend_21 { pt3dadd( -20.2491, 37.652, -12.9136, 0.74 ) }
    dend_21 { pt3dadd( -20.7389, 37.7104, -12.9914, 0.74 ) }
    dend_21 { pt3dadd( -21.021, 37.7555, -13.0322, 0.74 ) }
    dend_21 { pt3dadd( -21.3533, 37.8316, -13.0554, 0.74 ) }
    dend_21 { pt3dadd( -21.7667, 37.9414, -13.0598, 0.59 ) }
    dend_21 { pt3dadd( -22.1738, 38.0415, -13.0393, 0.59 ) }
    dend_21 { pt3dadd( -22.5354, 38.1161, -12.9938, 0.37 ) }
    dend_21 { pt3dadd( -23.5147, 38.2646, -12.8531, 0.37 ) }
    dend_21 { pt3dadd( -24.2038, 38.3273, -12.7494, 0.37 ) }
    dend_21 { pt3dadd( -24.5713, 38.3412, -12.6942, 0.22 ) }
    dend_21 { pt3dadd( -25.1877, 38.3354, -12.6091, 0.22 ) }
    dend_21 { pt3dadd( -25.5163, 38.314, -12.5795, 0.22 ) }
    dend_21 { pt3dadd( -26.4743, 38.2326, -12.5383, 1.03 ) }
    dend_21 { pt3dadd( -26.9449, 38.2035, -12.5447, 1.4 ) }
    dend_21 { pt3dadd( -27.2266, 38.2012, -12.5533, 1.4 ) }
    dend_21 { pt3dadd( -27.9114, 38.2381, -12.5837, 0.81 ) }
    dend_21 { pt3dadd( -28.7853, 38.3247, -12.6473, 0.22 ) }
    dend_21 { pt3dadd( -29.2563, 38.3787, -12.69, 0.22 ) }
    dend_21 { pt3dadd( -30.2038, 38.5024, -12.7972, 1.11 ) }
    dend_21 { pt3dadd( -30.6861, 38.5723, -12.8633, 1.4 ) }
    dend_21 { pt3dadd( -31.0276, 38.6237, -12.9166, 1.4 ) }
    dend_21 { pt3dadd( -31.8216, 38.7429, -13.0571, 0.66 ) }
    dend_21 { pt3dadd( -32.566, 38.8465, -13.1978, 0.52 ) }
    dend_21 { pt3dadd( -33.4634, 38.9466, -13.3802, 0.74 ) }
    dend_21 { pt3dadd( -34.0445, 39.0079, -13.5058, 0.88 ) }
    dend_21 { pt3dadd( -34.8684, 39.1052, -13.6908, 0.66 ) }
    dend_21 { pt3dadd( -35.4527, 39.1809, -13.8258, 0.66 ) }
    dend_21 { pt3dadd( -35.9311, 39.2491, -13.9415, 0.66 ) }
    dend_21 { pt3dadd( -36.8328, 39.3946, -14.1553, 0.29 ) }
    dend_21 { pt3dadd( -37.5598, 39.5241, -14.3075, 1.03 ) }
    dend_21 { pt3dadd( -38.1822, 39.6419, -14.4164, 1.25 ) }
    dend_21 { pt3dadd( -38.3837, 39.6873, -14.4355, 1.25 ) }
    dend_21 { pt3dadd( -38.9106, 39.8332, -14.4482, 0.81 ) }
    dend_21 { pt3dadd( -39.5523, 40.0302, -14.4217, 0.29 ) }
    dend_21 { pt3dadd( -39.9731, 40.1692, -14.3748, 0.52 ) }
    dend_21 { pt3dadd( -40.2553, 40.2719, -14.3348, 0.66 ) }
    dend_21 { pt3dadd( -41.2835, 40.6686, -14.1909, 0.22 ) }
    dend_21 { pt3dadd( -41.863, 40.9004, -14.1233, 0.22 ) }
    dend_21 { pt3dadd( -42.3347, 41.0922, -14.0876, 0.22 ) }
    dend_21 { pt3dadd( -42.9603, 41.3572, -14.083, 0.22 ) }
    dend_21 { pt3dadd( -43.7964, 41.7213, -14.114, 0.59 ) }
    dend_21 { pt3dadd( -44.2712, 41.9354, -14.1521, 0.81 ) }
    dend_21 { pt3dadd( -44.707, 42.1527, -14.2212, 0.81 ) }
    dend_21 { pt3dadd( -45.3701, 42.5195, -14.3543, 0.52 ) }
    dend_21 { pt3dadd( -46.2567, 43.0559, -14.5652, 1.03 ) }
    dend_21 { pt3dadd( -46.7845, 43.393, -14.707, 1.18 ) }
    dend_21 { pt3dadd( -47.1742, 43.6567, -14.8224, 1.25 ) }
    dend_21 { pt3dadd( -48.0393, 44.2737, -15.097, 0.29 ) }
    dend_21 { pt3dadd( -48.8192, 44.8509, -15.3589, 0.74 ) }
    dend_21 { pt3dadd( -49.111, 45.0714, -15.4622, 0.96 ) }
    dend_21 { pt3dadd( -49.3651, 45.2636, -15.5597, 0.96 ) }
    dend_21 { pt3dadd( -50.2071, 45.8819, -15.9004, 0.22 ) }
    dend_21 { pt3dadd( -50.5405, 46.1133, -16.0382, 0.22 ) }
    dend_21 { pt3dadd( -50.9979, 46.4071, -16.2228, 0.66 ) }
    dend_21 { pt3dadd( -51.3079, 46.5988, -16.3559, 0.88 ) }
    dend_21 { pt3dadd( -51.6752, 46.8145, -16.5137, 0.44 ) }
    dend_21 { pt3dadd( -52.1553, 47.0883, -16.7151, 0.37 ) }
    dend_21 { pt3dadd( -52.4466, 47.2493, -16.83, 0.44 ) }
    dend_21 { pt3dadd( -52.8353, 47.4725, -16.9817, 0.44 ) }
    dend_21 { pt3dadd( -53.1151, 47.6355, -17.0909, 0.44 ) }
    dend_21 { pt3dadd( -53.6557, 47.9561, -17.2949, 0.22 ) }
    dend_21 { pt3dadd( -54.0115, 48.1723, -17.4168, 0.22 ) }
    dend_21 { pt3dadd( -54.4363, 48.4518, -17.5509, 0.29 ) }
    dend_21 { pt3dadd( -54.6879, 48.6274, -17.6197, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.1135, 29.9976, 2.29211, 1.47 ) }
    dend_13 { pt3dadd( -11.7757, 30.661, 2.44965, 1.47 ) }
    dend_13 { pt3dadd( -11.4694, 31.3866, 2.6081, 0.81 ) }
    dend_13 { pt3dadd( -11.2784, 31.919, 2.71825, 0.81 ) }
    dend_13 { pt3dadd( -11.0751, 32.6667, 2.85833, 0.81 ) }
    dend_13 { pt3dadd( -10.8658, 33.5784, 3.02182, 0.81 ) }
    dend_13 { pt3dadd( -10.6703, 34.5859, 3.19614, 0.81 ) }
    dend_13 { pt3dadd( -10.5402, 35.5946, 3.35182, 1.03 ) }
    dend_13 { pt3dadd( -10.4563, 36.5034, 3.48514, 1.03 ) }
    dend_13 { pt3dadd( -10.3509, 37.8961, 3.67935, 1.18 ) }
    dend_13 { pt3dadd( -10.2914, 38.7585, 3.80242, 1.18 ) }
    dend_13 { pt3dadd( -10.2553, 40.2616, 3.99058, 1.18 ) }
    dend_13 { pt3dadd( -10.2643, 41.3331, 4.11005, 1.4 ) }
    dend_13 { pt3dadd( -10.2628, 42.0924, 4.19481, 1.4 ) }
    dend_13 { pt3dadd( -10.2657, 42.6333, 4.25108, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.1135, 29.9976, 2.29211, 0.96 ) }
    dend_12 { pt3dadd( -15.1549, 31.1518, 2.14423, 0.96 ) }
    dend_12 { pt3dadd( -16.2388, 31.5983, 2.11266, 0.96 ) }
    dend_12 { pt3dadd( -17.7414, 32.2311, 2.06866, 0.96 ) }
    dend_12 { pt3dadd( -19.3102, 32.9133, 2.00526, 0.81 ) }
    dend_12 { pt3dadd( -20.6608, 33.5257, 1.94986, 0.81 ) }
    dend_12 { pt3dadd( -22.5183, 34.3991, 1.88933, 1.03 ) }
    dend_12 { pt3dadd( -23.7755, 35.0469, 1.8434, 1.03 ) }
    dend_12 { pt3dadd( -24.944, 35.7673, 1.78594, 1.03 ) }
    dend_12 { pt3dadd( -26.3975, 36.8129, 1.69489, 0.81 ) }
    dend_12 { pt3dadd( -27.4607, 37.6158, 1.62552, 0.81 ) }
    dend_12 { pt3dadd( -28.6236, 38.5315, 1.56043, 0.81 ) }
    dend_12 { pt3dadd( -29.9932, 39.6824, 1.47265, 0.52 ) }
    dend_12 { pt3dadd( -31.25, 40.8626, 1.3895, 0.52 ) }
    dend_12 { pt3dadd( -31.949, 41.5929, 1.35966, 0.52 ) }
    dend_12 { pt3dadd( -32.9412, 42.7258, 1.33399, 0.52 ) }
    dend_12 { pt3dadd( -34.1686, 44.1939, 1.30858, 0.52 ) }
    dend_12 { pt3dadd( -34.8092, 45.0017, 1.30258, 0.52 ) }
    dend_12 { pt3dadd( -35.4487, 45.8458, 1.31795, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -36.1879, 46.8601, 1.36078, 0.66 ) }
    dend_12 { pt3dadd( -36.8658, 47.8729, 1.4106, 0.88 ) }
    dend_12 { pt3dadd( -37.5205, 48.9653, 1.45783, 0.88 ) }
    dend_12 { pt3dadd( -38.2492, 50.2518, 1.49958, 0.59 ) }
    dend_12 { pt3dadd( -38.9922, 51.5258, 1.53201, 0.88 ) }
    dend_12 { pt3dadd( -39.5332, 52.4407, 1.54526, 0.88 ) }
    dend_12 { pt3dadd( -39.9813, 53.257, 1.53652, 0.96 ) }
    dend_12 { pt3dadd( -40.3829, 54.0022, 1.51078, 0.96 ) }
    dend_12 { pt3dadd( -40.7509, 54.6507, 1.47935, 0.96 ) }
    dend_12 { pt3dadd( -41.4175, 55.7029, 1.42275, 0.74 ) }
    dend_12 { pt3dadd( -42.4866, 57.2406, 1.33096, 1.25 ) }
    dend_12 { pt3dadd( -43.2345, 58.2594, 1.26544, 1.25 ) }
    dend_12 { pt3dadd( -44.0869, 59.3943, 1.19297, 0.29 ) }
    dend_12 { pt3dadd( -44.6506, 60.1513, 1.15274, 0.29 ) }
    dend_12 { pt3dadd( -45.2143, 60.9223, 1.12586, 0.66 ) }
    dend_12 { pt3dadd( -45.7144, 61.6236, 1.12047, 0.81 ) }
    dend_12 { pt3dadd( -46.1241, 62.2227, 1.13373, 0.81 ) }
    dend_12 { pt3dadd( -46.7872, 63.2991, 1.18577, 0.37 ) }
    dend_12 { pt3dadd( -47.4265, 64.4913, 1.17969, 0.37 ) }
    dend_12 { pt3dadd( -47.8097, 65.2688, 1.1354, 1.03 ) }
    dend_12 { pt3dadd( -48.1446, 65.9541, 1.07268, 1.25 ) }
    dend_12 { pt3dadd( -48.5851, 66.7873, 0.979723, 1.25 ) }
    dend_12 { pt3dadd( -48.975, 67.4422, 0.894024, 0.81 ) }
    dend_12 { pt3dadd( -49.8263, 68.7318, 0.71618, 0.59 ) }
    dend_12 { pt3dadd( -50.3387, 69.464, 0.614601, 0.44 ) }
    dend_12 { pt3dadd( -51.0422, 70.5037, 0.502237, 0.88 ) }
    dend_12 { pt3dadd( -51.5704, 71.3112, 0.444125, 0.88 ) }
    dend_12 { pt3dadd( -52.447, 72.7403, 0.410971, 0.59 ) }
    dend_12 { pt3dadd( -53.0037, 73.6982, 0.40469, 0.59 ) }
    dend_12 { pt3dadd( -53.8475, 75.263, 0.427921, 0.44 ) }
    dend_12 { pt3dadd( -54.7609, 77.073, 0.454013, 1.03 ) }
    dend_12 { pt3dadd( -55.477, 78.6216, 0.491585, 1.55 ) }
    dend_12 { pt3dadd( -55.8681, 79.5907, 0.528382, 1.62 ) }
    dend_12 { pt3dadd( -56.3793, 81.0183, 0.595096, 1.11 ) }
    dend_12 { pt3dadd( -56.8897, 82.592, 0.67476, 0.59 ) }
    dend_12 { pt3dadd( -57.2108, 83.6855, 0.746551, 0.59 ) }
    dend_12 { pt3dadd( -57.7026, 85.5204, 0.889585, 0.59 ) }
    dend_12 { pt3dadd( -58.181, 87.3537, 1.05752, 0.52 ) }
    dend_12 { pt3dadd( -58.4915, 88.557, 1.1949, 0.52 ) }
    dend_12 { pt3dadd( -58.8715, 90.0648, 1.42165, 0.52 ) }
    dend_12 { pt3dadd( -59.2805, 91.6392, 1.67574, 0.52 ) }
    dend_12 { pt3dadd( -59.7691, 93.3589, 1.95638, 0.37 ) }
    dend_12 { pt3dadd( -60.5324, 95.6354, 2.34454, 1.55 ) }
    dend_12 { pt3dadd( -60.8356, 96.3808, 2.47793, 1.92 ) }
    dend_12 { pt3dadd( -61.1625, 97.0534, 2.60239, 1.92 ) }
    dend_12 { pt3dadd( -61.4861, 97.6207, 2.70161, 1.92 ) }
    dend_12 { pt3dadd( -62.2089, 98.6813, 2.88407, 0.88 ) }
    dend_12 { pt3dadd( -63.207, 100.013, 3.09725, 0.44 ) }
    dend_12 { pt3dadd( -63.9717, 100.993, 3.24376, 0.44 ) }
    dend_12 { pt3dadd( -64.8023, 102.051, 3.37923, 0.44 ) }
    dend_12 { pt3dadd( -65.9597, 103.558, 3.55594, 0.37 ) }
    dend_12 { pt3dadd( -66.5769, 104.378, 3.64602, 0.37 ) }
    dend_12 { pt3dadd( -67.8483, 106.141, 3.82246, 0.74 ) }
    dend_12 { pt3dadd( -68.3512, 106.869, 3.89737, 0.74 ) }
    dend_12 { pt3dadd( -68.9713, 107.806, 3.98833, 0.52 ) }
    dend_12 { pt3dadd( -69.8025, 109.099, 4.08067, 1.25 ) }
    dend_12 { pt3dadd( -70.3928, 110.002, 4.1105, 1.47 ) }
    dend_12 { pt3dadd( -70.7952, 110.611, 4.10919, 1.47 ) }
    dend_12 { pt3dadd( -71.3652, 111.351, 4.07667, 0.81 ) }
    dend_12 { pt3dadd( -72.1557, 112.265, 4.0087, 0.59 ) }
    dend_12 { pt3dadd( -72.9676, 113.091, 3.9058, 0.88 ) }
    dend_12 { pt3dadd( -73.6639, 113.747, 3.79937, 1.18 ) }
    dend_12 { pt3dadd( -74.1022, 114.147, 3.72431, 1.18 ) }
    dend_12 { pt3dadd( -75.1678, 115.176, 3.56267, 0.96 ) }
    dend_12 { pt3dadd( -76.2806, 116.365, 3.43508, 0.52 ) }
    dend_12 { pt3dadd( -76.8946, 117.128, 3.42258, 0.37 ) }
    dend_12 { pt3dadd( -77.7303, 118.344, 3.50286, 0.37 ) }
    dend_12 { pt3dadd( -78.4877, 119.634, 3.65339, 0.37 ) }
    dend_12 { pt3dadd( -79.1487, 120.944, 3.84693, 0.37 ) }
    dend_12 { pt3dadd( -79.5755, 121.973, 4.02545, 0.81 ) }
    dend_12 { pt3dadd( -80.1572, 123.639, 4.31794, 1.84 ) }
    dend_12 { pt3dadd( -80.3871, 124.313, 4.43562, 1.92 ) }
    dend_12 { pt3dadd( -80.5684, 124.796, 4.51285, 1.92 ) }
    dend_12 { pt3dadd( -80.907, 125.69, 4.62587, 1.62 ) }
    dend_12 { pt3dadd( -81.3995, 126.944, 4.71312, 0.88 ) }
    dend_12 { pt3dadd( -81.9148, 128.287, 4.75269, 0.29 ) }
    dend_12 { pt3dadd( -82.7211, 130.372, 4.76924, 0.29 ) }
    dend_12 { pt3dadd( -83.3329, 131.871, 4.78945, 0.29 ) }
    dend_12 { pt3dadd( -83.7302, 132.745, 4.82553, 0.29 ) }
    dend_12 { pt3dadd( -83.9406, 133.15, 4.85566, 0.29 ) }
    dend_12 { pt3dadd( -84.4823, 134.037, 4.95794, 0.66 ) }
    dend_12 { pt3dadd( -85.1741, 135.008, 5.11166, 0.81 ) }
    dend_12 { pt3dadd( -85.6776, 135.646, 5.23188, 0.81 ) }
    dend_12 { pt3dadd( -86.6448, 136.851, 5.45947, 0.37 ) }
    dend_12 { pt3dadd( -87.4077, 137.775, 5.6403, 0.37 ) }
    dend_12 { pt3dadd( -88.1299, 138.661, 5.81009, 0.81 ) }
    dend_12 { pt3dadd( -88.6369, 139.291, 5.93349, 0.81 ) }
    dend_12 { pt3dadd( -89.3509, 140.202, 6.11657, 0.37 ) }
    dend_12 { pt3dadd( -90.0568, 141.05, 6.30925, 0.37 ) }
    dend_12 { pt3dadd( -90.7756, 141.839, 6.52148, 0.88 ) }
    dend_12 { pt3dadd( -91.6582, 142.765, 6.79083, 1.47 ) }
    dend_12 { pt3dadd( -92.324, 143.456, 6.98987, 1.69 ) }
    dend_12 { pt3dadd( -92.8661, 144.021, 7.14417, 1.69 ) }
    dend_12 { pt3dadd( -94.3473, 145.529, 7.55649, 0.37 ) }
    dend_12 { pt3dadd( -94.8562, 146.054, 7.69449, 0.37 ) }
    dend_12 { pt3dadd( -95.8126, 147.103, 7.93109, 0.37 ) }
    dend_12 { pt3dadd( -96.9158, 148.403, 8.17596, 0.81 ) }
    dend_12 { pt3dadd( -97.6292, 149.356, 8.30907, 1.33 ) }
    dend_12 { pt3dadd( -98.0622, 149.991, 8.37282, 1.33 ) }
    dend_12 { pt3dadd( -98.6445, 150.884, 8.44262, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -99.8275, 152.63, 8.57034, 0.52 ) }
    dend_12 { pt3dadd( -100.82, 153.974, 8.67525, 0.52 ) }
    dend_12 { pt3dadd( -101.944, 155.461, 8.78319, 0.52 ) }
    dend_12 { pt3dadd( -102.568, 156.279, 8.83724, 0.52 ) }
    dend_12 { pt3dadd( -103.372, 157.338, 8.89792, 0.52 ) }
    dend_12 { pt3dadd( -104.278, 158.523, 8.95435, 0.52 ) }
    dend_12 { pt3dadd( -105.827, 160.515, 9.03889, 0.52 ) }
    dend_12 { pt3dadd( -106.39, 161.235, 9.06819, 0.52 ) }
    dend_12 { pt3dadd( -107.786, 162.993, 9.15021, 1.25 ) }
    dend_12 { pt3dadd( -108.18, 163.493, 9.17617, 1.47 ) }
    dend_12 { pt3dadd( -108.699, 164.14, 9.20468, 1.47 ) }
    dend_12 { pt3dadd( -109.464, 165.035, 9.24524, 0.88 ) }
    dend_12 { pt3dadd( -110.399, 166.021, 9.30379, 0.29 ) }
    dend_12 { pt3dadd( -110.787, 166.385, 9.33743, 0.29 ) }
    dend_12 { pt3dadd( -111.588, 167.076, 9.42637, 0.44 ) }
    dend_12 { pt3dadd( -112.22, 167.605, 9.51346, 0.44 ) }
    dend_12 { pt3dadd( -112.811, 168.089, 9.61184, 0.44 ) }
    dend_12 { pt3dadd( -113.162, 168.385, 9.65538, 0.44 ) }
    dend_12 { pt3dadd( -113.652, 168.832, 9.73702, 0.29 ) }
    dend_12 { pt3dadd( -114.268, 169.582, 9.86449, 0.29 ) }
    dend_12 { pt3dadd( -114.473, 169.873, 9.92479, 0.44 ) }
    dend_12 { pt3dadd( -114.717, 170.244, 10.0142, 0.44 ) }
    dend_12 { pt3dadd( -115.355, 171.202, 10.2719, 0.37 ) }
    dend_12 { pt3dadd( -116.217, 172.45, 10.6393, 0.44 ) }
    dend_12 { pt3dadd( -117.657, 174.418, 11.135, 2.28 ) }
    dend_12 { pt3dadd( -118.248, 175.194, 11.2965, 2.5 ) }
    dend_12 { pt3dadd( -118.711, 175.807, 11.3878, 2.5 ) }
    dend_12 { pt3dadd( -119.478, 176.807, 11.4874, 1.92 ) }
    dend_12 { pt3dadd( -120.266, 177.808, 11.5141, 0.81 ) }
    dend_12 { pt3dadd( -121.334, 179.164, 11.3702, 0.52 ) }
    dend_12 { pt3dadd( -121.792, 179.784, 11.2562, 0.52 ) }
    dend_12 { pt3dadd( -122.778, 181.215, 10.9381, 0.88 ) }
    dend_12 { pt3dadd( -123.333, 182.103, 10.7245, 0.88 ) }
    dend_12 { pt3dadd( -123.946, 183.181, 10.4627, 0.66 ) }
    dend_12 { pt3dadd( -124.415, 184.071, 10.2474, 0.44 ) }
    dend_12 { pt3dadd( -125.043, 185.376, 9.96355, 0.29 ) }
    dend_12 { pt3dadd( -125.727, 186.882, 9.61005, 0.29 ) }
    dend_12 { pt3dadd( -126.456, 188.599, 9.15851, 0.29 ) }
    dend_12 { pt3dadd( -126.802, 189.45, 8.91477, 0.29 ) }
    dend_12 { pt3dadd( -127.447, 191.015, 8.38362, 0.52 ) }
    dend_12 { pt3dadd( -127.918, 192.081, 7.97138, 0.88 ) }
    dend_12 { pt3dadd( -128.34, 192.944, 7.57725, 0.88 ) }
    dend_12 { pt3dadd( -128.864, 193.88, 7.10369, 0.44 ) }
    dend_12 { pt3dadd( -129.885, 195.34, 6.32413, 1.11 ) }
    dend_12 { pt3dadd( -130.961, 196.586, 5.65288, 2.43 ) }
    dend_12 { pt3dadd( -131.846, 197.414, 5.21388, 2.43 ) }
    dend_12 { pt3dadd( -132.463, 197.886, 4.97466, 2.43 ) }
    dend_12 { pt3dadd( -133.321, 198.438, 4.74925, 1.69 ) }
    dend_12 { pt3dadd( -134.549, 199.128, 4.51917, 0.59 ) }
    dend_12 { pt3dadd( -135.893, 199.781, 4.38735, 0.74 ) }
    dend_12 { pt3dadd( -136.338, 199.982, 4.38758, 0.74 ) }
    dend_12 { pt3dadd( -137.081, 200.303, 4.40621, 0.52 ) }
    dend_12 { pt3dadd( -138.217, 200.807, 4.47349, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.7441, 6.31645, 6.22821, 1.99 ) }
    dend_2 { pt3dadd( 25.2346, 6.65865, 6.161, 1.99 ) }
    dend_2 { pt3dadd( 26.1008, 7.01629, 6.29392, 1.99 ) }
    dend_2 { pt3dadd( 26.6965, 7.45568, 6.54524, 1.69 ) }
    dend_2 { pt3dadd( 27.534, 8.07335, 6.89853, 1.69 ) }
    dend_2 { pt3dadd( 27.8867, 8.33351, 7.04734, 1.69 ) }
    dend_2 { pt3dadd( 28.4727, 8.76577, 7.29458, 1.69 ) }
    dend_2 { pt3dadd( 28.8313, 9.19815, 7.52679, 1.92 ) }
    dend_2 { pt3dadd( 29.348, 10.0349, 8.08265, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 23.7441, 6.31645, 6.22821, 0.74 ) }
    dend_1 { pt3dadd( 24.5038, 8.37711, 7.51553, 0.74 ) }
    dend_1 { pt3dadd( 24.7761, 9.26914, 8.0626, 0.74 ) }
    dend_1 { pt3dadd( 25.1361, 10.6698, 8.90426, 0.74 ) }
    dend_1 { pt3dadd( 25.4059, 11.8755, 9.61966, 0.44 ) }
    dend_1 { pt3dadd( 25.6051, 12.8916, 10.2309, 0.44 ) }
    dend_1 { pt3dadd( 25.8605, 14.392, 11.142, 0.66 ) }
    dend_1 { pt3dadd( 25.9409, 15.1151, 11.5707, 0.88 ) }
    dend_1 { pt3dadd( 26.0376, 16.15, 12.2218, 0.88 ) }
    dend_1 { pt3dadd( 26.1142, 17.085, 12.8622, 1.03 ) }
    dend_1 { pt3dadd( 26.2466, 18.4104, 13.8168, 0.96 ) }
    dend_1 { pt3dadd( 26.3609, 19.3447, 14.5088, 0.52 ) }
    dend_1 { pt3dadd( 26.4823, 20.0961, 15.0709, 0.52 ) }
    dend_1 { pt3dadd( 26.6115, 21.0883, 15.8255, 0.88 ) }
    dend_1 { pt3dadd( 26.718, 21.8954, 16.4442, 0.66 ) }
    dend_1 { pt3dadd( 26.8431, 22.7951, 17.1453, 0.88 ) }
    dend_1 { pt3dadd( 26.9539, 23.5953, 17.7772, 0.88 ) }
    dend_1 { pt3dadd( 27.104, 24.7679, 18.7261, 0.29 ) }
    dend_1 { pt3dadd( 27.1969, 25.7135, 19.4905, 0.29 ) }
    dend_1 { pt3dadd( 27.2492, 26.3691, 20.0064, 0.29 ) }
    dend_1 { pt3dadd( 27.3379, 27.4829, 20.8932, 0.44 ) }
    dend_1 { pt3dadd( 27.4127, 28.1413, 21.4399, 0.74 ) }
    dend_1 { pt3dadd( 27.5407, 28.9346, 22.1038, 0.88 ) }
    dend_1 { pt3dadd( 27.6424, 29.4137, 22.5122, 1.11 ) }
    dend_1 { pt3dadd( 27.7358, 29.7954, 22.8322, 1.11 ) }
    dend_1 { pt3dadd( 27.9004, 30.6713, 23.5333, 0.29 ) }
    dend_1 { pt3dadd( 28.0758, 31.5588, 24.1801, 0.29 ) }
    dend_1 { pt3dadd( 28.2847, 32.4155, 24.7646, 0.29 ) }
    dend_1 { pt3dadd( 30.4709, 40.5915, 33.2895, 0.29 ) }
    dend_1 { pt3dadd( 34.0288, 49.0995, 40.9873, 0.29 ) }
    dend_1 { pt3dadd( 36.1485, 58.522, 48.1304, 0.29 ) }
    dend_1 { pt3dadd( 37.1041, 68.3733, 54.9378, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -86.3363, -59.4371, 2.98037, 0.44 ) }
    dend_48 { pt3dadd( -88.7258, -60.2051, 3.72676, 0.44 ) }
    dend_48 { pt3dadd( -89.9347, -60.6824, 4.10894, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -91.2057, -61.255, 4.48291, 0.29 ) }
    dend_48 { pt3dadd( -91.9499, -61.6094, 4.69117, 0.29 ) }
    dend_48 { pt3dadd( -93.5283, -62.3561, 5.09685, 0.37 ) }
    dend_48 { pt3dadd( -94.2493, -62.6759, 5.2828, 0.37 ) }
    dend_48 { pt3dadd( -95.3412, -63.1531, 5.47425, 0.29 ) }
    dend_48 { pt3dadd( -96.3882, -63.6818, 5.69358, 0.29 ) }
    dend_48 { pt3dadd( -97.1897, -64.1465, 5.88583, 0.29 ) }
    dend_48 { pt3dadd( -97.7462, -64.4884, 6.02204, 0.29 ) }
    dend_48 { pt3dadd( -98.6131, -65.0058, 6.22578, 0.29 ) }
    dend_48 { pt3dadd( -99.4668, -65.4474, 6.39635, 0.44 ) }
    dend_48 { pt3dadd( -100.644, -65.9835, 6.61262, 0.44 ) }
    dend_48 { pt3dadd( -101.27, -66.281, 6.759, 0.44 ) }
    dend_48 { pt3dadd( -102.19, -66.7709, 7.03503, 0.66 ) }
    dend_48 { pt3dadd( -103.117, -67.3621, 7.39933, 0.66 ) }
    dend_48 { pt3dadd( -103.599, -67.7547, 7.6618, 0.52 ) }
    dend_48 { pt3dadd( -104.447, -68.6929, 8.3814, 0.44 ) }
    dend_48 { pt3dadd( -104.805, -69.3471, 8.93521, 0.66 ) }
    dend_48 { pt3dadd( -105.03, -70.0276, 9.54402, 0.66 ) }
    dend_48 { pt3dadd( -105.209, -70.8132, 10.26, 0.52 ) }
    dend_48 { pt3dadd( -105.439, -71.8525, 11.2223, 0.52 ) }
    dend_48 { pt3dadd( -105.607, -72.8041, 12.0943, 0.44 ) }
    dend_48 { pt3dadd( -105.726, -73.6403, 12.857, 0.37 ) }
    dend_48 { pt3dadd( -105.964, -74.9412, 14.03, 0.37 ) }
    dend_48 { pt3dadd( -106.217, -75.9613, 14.9656, 0.29 ) }
    dend_48 { pt3dadd( -106.593, -76.9775, 15.9552, 0.29 ) }
    dend_48 { pt3dadd( -115.233, -84.7464, 18.6799, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -86.3363, -59.4371, 2.98037, 1.11 ) }
    dend_45 { pt3dadd( -87.7666, -59.9968, 3.15439, 1.11 ) }
    dend_45 { pt3dadd( -88.8765, -60.5374, 3.28652, 1.11 ) }
    dend_45 { pt3dadd( -91.1278, -61.7115, 3.58045, 0.88 ) }
    dend_45 { pt3dadd( -92.8437, -62.557, 3.79162, 0.88 ) }
    dend_45 { pt3dadd( -95.4524, -63.7385, 4.08358, 0.88 ) }
    dend_45 { pt3dadd( -98.1707, -64.8588, 4.33939, 0.88 ) }
    dend_45 { pt3dadd( -99.6596, -65.4644, 4.47374, 0.88 ) }
    dend_45 { pt3dadd( -101.039, -66.0188, 4.55949, 0.81 ) }
    dend_45 { pt3dadd( -102.584, -66.6253, 4.61015, 0.81 ) }
    dend_45 { pt3dadd( -103.699, -67.02, 4.62919, 0.81 ) }
    dend_45 { pt3dadd( -105.681, -67.65, 4.65086, 0.96 ) }
    dend_45 { pt3dadd( -106.715, -68.0136, 4.66099, 0.96 ) }
    dend_45 { pt3dadd( -107.767, -68.5016, 4.6688, 0.96 ) }
    dend_45 { pt3dadd( -108.759, -69.1347, 4.67433, 0.96 ) }
    dend_45 { pt3dadd( -110.05, -70.1291, 4.69592, 0.96 ) }
    dend_45 { pt3dadd( -110.478, -70.479, 4.69652, 0.96 ) }
    dend_45 { pt3dadd( -111.783, -71.5321, 4.65623, 0.88 ) }
    dend_45 { pt3dadd( -113.414, -72.7063, 4.52736, 0.88 ) }
    dend_45 { pt3dadd( -114.58, -73.5172, 4.41275, 1.11 ) }
    dend_45 { pt3dadd( -115.756, -74.3395, 4.29226, 1.11 ) }
    dend_45 { pt3dadd( -117.111, -75.3308, 4.13366, 0.96 ) }
    dend_45 { pt3dadd( -118.263, -76.2356, 4.04783, 0.96 ) }
    dend_45 { pt3dadd( -119.852, -77.5884, 4.01037, 0.88 ) }
    dend_45 { pt3dadd( -121.672, -79.2915, 3.98078, 0.88 ) }
    dend_45 { pt3dadd( -123.066, -80.6815, 3.903, 0.96 ) }
    dend_45 { pt3dadd( -124.174, -81.8214, 3.79119, 0.96 ) }
    dend_45 { pt3dadd( -125.746, -83.406, 3.56974, 0.88 ) }
    dend_45 { pt3dadd( -126.486, -84.1246, 3.41717, 0.74 ) }
    dend_45 { pt3dadd( -128.14, -85.6505, 2.98334, 0.96 ) }
    dend_45 { pt3dadd( -129.601, -86.8806, 2.55469, 1.11 ) }
    dend_45 { pt3dadd( -130.794, -87.8311, 2.215, 1.25 ) }
    dend_45 { pt3dadd( -131.834, -88.6523, 1.95138, 1.25 ) }
    dend_45 { pt3dadd( -133.517, -89.9978, 1.5731, 1.03 ) }
    dend_45 { pt3dadd( -135.806, -91.8989, 1.2177, 0.88 ) }
    dend_45 { pt3dadd( -137.478, -93.3872, 1.07286, 0.88 ) }
    dend_45 { pt3dadd( -139.17, -94.9832, 0.982893, 0.88 ) }
    dend_45 { pt3dadd( -140.58, -96.3326, 0.908446, 0.88 ) }
    dend_45 { pt3dadd( -141.943, -97.5834, 0.82654, 1.33 ) }
    dend_45 { pt3dadd( -143.016, -98.4733, 0.756, 1.33 ) }
    dend_45 { pt3dadd( -144.296, -99.4648, 0.648909, 1.18 ) }
    dend_45 { pt3dadd( -145.195, -100.125, 0.556475, 0.96 ) }
    dend_45 { pt3dadd( -146.816, -101.227, 0.387794, 0.96 ) }
    dend_45 { pt3dadd( -148.315, -102.13, 0.234178, 0.96 ) }
    dend_45 { pt3dadd( -150.343, -103.17, 0.0593608, 0.88 ) }
    dend_45 { pt3dadd( -152.112, -103.87, -0.0517378, 0.81 ) }
    dend_45 { pt3dadd( -153.116, -104.152, -0.0805698, 0.81 ) }
    dend_45 { pt3dadd( -154.291, -104.427, -0.0898794, 0.74 ) }
    dend_45 { pt3dadd( -155.163, -104.658, -0.0749086, 0.74 ) }
    dend_45 { pt3dadd( -156.277, -105.046, -0.023158, 0.74 ) }
    dend_45 { pt3dadd( -157.872, -105.813, 0.102587, 0.74 ) }
    dend_45 { pt3dadd( -158.76, -106.432, 0.200782, 1.11 ) }
    dend_45 { pt3dadd( -160.107, -107.768, 0.39602, 1.11 ) }
    dend_45 { pt3dadd( -161.75, -109.783, 0.661821, 0.88 ) }
    dend_45 { pt3dadd( -162.812, -111.288, 0.85561, 0.88 ) }
    dend_45 { pt3dadd( -163.623, -112.554, 1.01388, 0.88 ) }
    dend_45 { pt3dadd( -164.737, -114.324, 1.224, 0.81 ) }
    dend_45 { pt3dadd( -166.264, -116.625, 1.41324, 0.81 ) }
    dend_45 { pt3dadd( -167.045, -117.711, 1.46187, 1.18 ) }
    dend_45 { pt3dadd( -167.901, -118.884, 1.46165, 1.33 ) }
    dend_45 { pt3dadd( -168.826, -120.078, 1.41316, 1.33 ) }
    dend_45 { pt3dadd( -170.341, -121.883, 1.27272, 0.88 ) }
    dend_45 { pt3dadd( -171.842, -123.544, 1.05837, 0.81 ) }
    dend_45 { pt3dadd( -173.414, -125.164, 0.801757, 0.81 ) }
    dend_45 { pt3dadd( -175.28, -127.006, 0.450379, 0.81 ) }
    dend_45 { pt3dadd( -176.688, -128.357, 0.12994, 0.81 ) }
    dend_45 { pt3dadd( -178.013, -129.598, -0.192644, 1.11 ) }
    dend_45 { pt3dadd( -178.816, -130.346, -0.401119, 1.25 ) }
    dend_45 { pt3dadd( -179.777, -131.235, -0.64986, 2.14 ) }
    dend_45 { pt3dadd( -180.698, -132.146, -0.911927, 2.5 ) }
    dend_45 { pt3dadd( -181.961, -133.376, -1.27485, 1.92 ) }
    dend_45 { pt3dadd( -183.766, -135.402, -1.83695, 1.11 ) }
    dend_45 { pt3dadd( -184.533, -136.383, -2.0891, 0.96 ) }
    dend_45 { pt3dadd( -185.58, -137.847, -2.42991, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -186.911, -139.831, -2.92374, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -10.2705, -115.556, -3.03047, 0.37 ) }
    dend_41 { pt3dadd( -9.06204, -118.029, -2.5988, 0.37 ) }
    dend_41 { pt3dadd( -8.73877, -118.666, -2.52073, 0.52 ) }
    dend_41 { pt3dadd( -8.34797, -119.447, -2.45721, 0.66 ) }
    dend_41 { pt3dadd( -7.9149, -120.335, -2.40207, 0.37 ) }
    dend_41 { pt3dadd( -7.59426, -120.991, -2.37107, 0.44 ) }
    dend_41 { pt3dadd( -7.22352, -121.755, -2.34643, 0.44 ) }
    dend_41 { pt3dadd( -6.80746, -122.663, -2.40438, 0.29 ) }
    dend_41 { pt3dadd( -6.38731, -123.514, -2.46742, 0.29 ) }
    dend_41 { pt3dadd( -5.98053, -124.228, -2.54267, 0.59 ) }
    dend_41 { pt3dadd( -5.57914, -124.841, -2.64425, 0.59 ) }
    dend_41 { pt3dadd( -5.09908, -125.479, -2.79359, 0.37 ) }
    dend_41 { pt3dadd( -4.59065, -126.078, -2.97982, 0.66 ) }
    dend_41 { pt3dadd( -4.10087, -126.582, -3.17833, 0.52 ) }
    dend_41 { pt3dadd( -3.36425, -127.254, -3.50766, 0.37 ) }
    dend_41 { pt3dadd( -2.80768, -127.724, -3.77888, 0.37 ) }
    dend_41 { pt3dadd( -1.98029, -128.416, -4.21227, 0.37 ) }
    dend_41 { pt3dadd( -1.18403, -129.08, -4.65562, 1.03 ) }
    dend_41 { pt3dadd( -0.612035, -129.565, -4.99386, 1.18 ) }
    dend_41 { pt3dadd( -0.0811097, -130.032, -5.33151, 0.81 ) }
    dend_41 { pt3dadd( 0.331513, -130.408, -5.61088, 0.52 ) }
    dend_41 { pt3dadd( 1.103, -131.116, -6.13494, 0.52 ) }
    dend_41 { pt3dadd( 1.83346, -131.817, -6.63629, 0.59 ) }
    dend_41 { pt3dadd( 2.45687, -132.478, -7.10096, 0.59 ) }
    dend_41 { pt3dadd( 2.9541, -133.075, -7.49865, 0.81 ) }
    dend_41 { pt3dadd( 3.35281, -133.594, -7.83152, 0.81 ) }
    dend_41 { pt3dadd( 3.78426, -134.198, -8.20848, 0.66 ) }
    dend_41 { pt3dadd( 4.08966, -134.659, -8.48988, 0.29 ) }
    dend_41 { pt3dadd( 4.77773, -135.782, -9.15066, 0.52 ) }
    dend_41 { pt3dadd( 5.35967, -136.762, -9.71979, 1.03 ) }
    dend_41 { pt3dadd( 5.56521, -137.12, -9.92862, 1.47 ) }
    dend_41 { pt3dadd( 5.94113, -137.745, -10.3112, 1.62 ) }
    dend_41 { pt3dadd( 6.45143, -138.5, -10.821, 1.03 ) }
    dend_41 { pt3dadd( 6.96022, -139.15, -11.2932, 0.29 ) }
    dend_41 { pt3dadd( 7.46906, -139.715, -11.728, 0.29 ) }
    dend_41 { pt3dadd( 8.068, -140.319, -12.2335, 0.37 ) }
    dend_41 { pt3dadd( 8.69251, -140.94, -12.7591, 0.66 ) }
    dend_41 { pt3dadd( 9.01732, -141.258, -13.0255, 0.81 ) }
    dend_41 { pt3dadd( 9.54061, -141.744, -13.4318, 0.96 ) }
    dend_41 { pt3dadd( 9.94212, -142.104, -13.7283, 0.44 ) }
    dend_41 { pt3dadd( 10.2672, -142.387, -13.9532, 0.29 ) }
    dend_41 { pt3dadd( 10.9117, -142.922, -14.3636, 0.29 ) }
    dend_41 { pt3dadd( 11.4006, -143.372, -14.6669, 0.59 ) }
    dend_41 { pt3dadd( 11.8707, -143.86, -14.9522, 0.74 ) }
    dend_41 { pt3dadd( 12.247, -144.294, -15.1776, 0.74 ) }
    dend_41 { pt3dadd( 12.7494, -144.944, -15.4799, 0.74 ) }
    dend_41 { pt3dadd( 13.1461, -145.514, -15.7274, 0.44 ) }
    dend_41 { pt3dadd( 13.6669, -146.332, -16.063, 0.29 ) }
    dend_41 { pt3dadd( 13.9694, -146.846, -16.2682, 0.66 ) }
    dend_41 { pt3dadd( 14.3395, -147.5, -16.5332, 0.88 ) }
    dend_41 { pt3dadd( 14.6825, -148.104, -16.7851, 0.96 ) }
    dend_41 { pt3dadd( 15.1813, -148.951, -17.1398, 0.66 ) }
    dend_41 { pt3dadd( 15.6991, -149.818, -17.4995, 0.37 ) }
    dend_41 { pt3dadd( 16.3184, -150.795, -17.917, 0.74 ) }
    dend_41 { pt3dadd( 16.6655, -151.323, -18.1474, 0.81 ) }
    dend_41 { pt3dadd( 17.0683, -151.942, -18.4098, 0.37 ) }
    dend_41 { pt3dadd( 17.6073, -152.807, -18.7569, 0.37 ) }
    dend_41 { pt3dadd( 18.0698, -153.584, -19.0538, 0.37 ) }
    dend_41 { pt3dadd( 18.4518, -154.251, -19.3022, 0.37 ) }
    dend_41 { pt3dadd( 18.7557, -154.81, -19.5053, 0.52 ) }
    dend_41 { pt3dadd( 19.1138, -155.47, -19.7555, 0.52 ) }
    dend_41 { pt3dadd( 19.4782, -156.141, -20.0246, 0.37 ) }
    dend_41 { pt3dadd( 19.8443, -156.846, -20.3157, 0.37 ) }
    dend_41 { pt3dadd( 20.2742, -157.65, -20.6564, 0.81 ) }
    dend_41 { pt3dadd( 20.5373, -158.091, -20.86, 0.88 ) }
    dend_41 { pt3dadd( 20.9908, -158.762, -21.2041, 0.59 ) }
    dend_41 { pt3dadd( 21.3879, -159.297, -21.4988, 0.37 ) }
    dend_41 { pt3dadd( 21.7971, -159.803, -21.7977, 0.37 ) }
    dend_41 { pt3dadd( 22.3256, -160.411, -22.1736, 0.44 ) }
    dend_41 { pt3dadd( 23.4203, -161.572, -22.9328, 0.44 ) }
    dend_41 { pt3dadd( 24.1437, -162.248, -23.4227, 1.18 ) }
    dend_41 { pt3dadd( 24.6931, -162.719, -23.7864, 1.47 ) }
    dend_41 { pt3dadd( 25.2985, -163.211, -24.196, 1.47 ) }
    dend_41 { pt3dadd( 26.1831, -163.926, -24.8131, 1.18 ) }
    dend_41 { pt3dadd( 26.8588, -164.518, -25.3128, 0.29 ) }
    dend_41 { pt3dadd( 27.2702, -164.921, -25.64, 0.29 ) }
    dend_41 { pt3dadd( 27.5731, -165.249, -25.907, 0.29 ) }
    dend_41 { pt3dadd( 28.0848, -165.892, -26.4374, 0.59 ) }
    dend_41 { pt3dadd( 28.5506, -166.591, -27.0003, 0.66 ) }
    dend_41 { pt3dadd( 28.7873, -167.029, -27.343, 0.74 ) }
    dend_41 { pt3dadd( 29.0176, -167.542, -27.7148, 0.59 ) }
    dend_41 { pt3dadd( 29.2613, -168.175, -28.1371, 0.44 ) }
    dend_41 { pt3dadd( 29.542, -168.985, -28.657, 0.29 ) }
    dend_41 { pt3dadd( 29.6975, -169.533, -28.9733, 0.37 ) }
    dend_41 { pt3dadd( 29.9089, -170.456, -29.4591, 0.52 ) }
    dend_41 { pt3dadd( 30.0501, -171.165, -29.7809, 1.03 ) }
    dend_41 { pt3dadd( 30.1784, -171.908, -30.1036, 1.55 ) }
    dend_41 { pt3dadd( 30.2941, -172.552, -30.3747, 1.55 ) }
    dend_41 { pt3dadd( 30.5804, -174.176, -31.0493, 0.44 ) }
    dend_41 { pt3dadd( 30.7791, -175.235, -31.5106, 0.37 ) }
    dend_41 { pt3dadd( 31.3018, -177.593, -32.6687, 0.29 ) }
    dend_41 { pt3dadd( 31.4447, -178.092, -32.9496, 0.29 ) }
    dend_41 { pt3dadd( 31.936, -179.374, -33.7796, 1.47 ) }
    dend_41 { pt3dadd( 32.1515, -179.788, -34.1016, 1.92 ) }
    dend_41 { pt3dadd( 32.608, -180.446, -34.7418, 2.06 ) }
    dend_41 { pt3dadd( 33.2999, -181.247, -35.7427, 0.81 ) }
    dend_41 { pt3dadd( 34.1856, -182.08, -37.11, 0.29 ) }
    dend_41 { pt3dadd( 34.7337, -182.568, -37.9984, 0.29 ) }
    dend_41 { pt3dadd( 35.4578, -183.182, -39.152, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 35.8259, -183.49, -39.696, 0.52 ) }
    dend_41 { pt3dadd( 36.7365, -184.257, -40.9171, 0.29 ) }
    dend_41 { pt3dadd( 37.4462, -184.859, -41.7403, 0.88 ) }
    dend_41 { pt3dadd( 37.8924, -185.234, -42.1541, 0.74 ) }
    dend_41 { pt3dadd( 39.0437, -186.217, -42.9231, 0.29 ) }
    dend_41 { pt3dadd( 39.9177, -186.946, -43.3255, 0.29 ) }
    dend_41 { pt3dadd( 40.8134, -187.684, -43.6294, 0.59 ) }
    dend_41 { pt3dadd( 41.4141, -188.176, -43.7785, 0.66 ) }
    dend_41 { pt3dadd( 42.5681, -189.136, -44.0238, 0.29 ) }
    dend_41 { pt3dadd( 43.7171, -190.145, -44.2744, 0.29 ) }
    dend_41 { pt3dadd( 44.4474, -190.87, -44.4775, 0.29 ) }
    dend_41 { pt3dadd( 45.0973, -191.622, -44.6971, 1.03 ) }
    dend_41 { pt3dadd( 45.5524, -192.21, -44.8876, 1.47 ) }
    dend_41 { pt3dadd( 45.9459, -192.779, -45.0954, 1.18 ) }
    dend_41 { pt3dadd( 46.6332, -193.885, -45.5417, 0.22 ) }
    dend_41 { pt3dadd( 47.2316, -194.906, -45.9725, 0.22 ) }
    dend_41 { pt3dadd( 47.9792, -196.223, -46.5558, 0.22 ) }
    dend_41 { pt3dadd( 48.2983, -196.765, -46.8061, 0.52 ) }
    dend_41 { pt3dadd( 48.8494, -197.669, -47.2404, 0.29 ) }
    dend_41 { pt3dadd( 49.369, -198.503, -47.6597, 0.29 ) }
    dend_41 { pt3dadd( 49.6951, -199.006, -47.9363, 0.88 ) }
    dend_41 { pt3dadd( 50.1531, -199.681, -48.2946, 0.88 ) }
    dend_41 { pt3dadd( 50.8368, -200.703, -48.8038, 0.29 ) }
    dend_41 { pt3dadd( 51.1563, -201.176, -49.0179, 0.29 ) }
    dend_41 { pt3dadd( 51.7433, -201.995, -49.3344, 0.96 ) }
    dend_41 { pt3dadd( 52.1787, -202.537, -49.5046, 1.4 ) }
    dend_41 { pt3dadd( 52.6579, -203.087, -49.6455, 1.77 ) }
    dend_41 { pt3dadd( 52.9672, -203.411, -49.7145, 1.77 ) }
    dend_41 { pt3dadd( 54.1926, -204.608, -49.9608, 0.22 ) }
    dend_41 { pt3dadd( 55.467, -205.754, -50.1768, 0.22 ) }
    dend_41 { pt3dadd( 56.4703, -206.582, -50.3506, 0.88 ) }
    dend_41 { pt3dadd( 56.9192, -206.938, -50.44, 1.33 ) }
    dend_41 { pt3dadd( 57.3707, -207.29, -50.555, 1.33 ) }
    dend_41 { pt3dadd( 58.3902, -208.067, -50.8469, 0.22 ) }
    dend_41 { pt3dadd( 59.6332, -208.999, -51.2595, 0.22 ) }
    dend_41 { pt3dadd( 60.9234, -210.002, -51.768, 0.22 ) }
    dend_41 { pt3dadd( 62.0669, -210.956, -52.2941, 0.22 ) }
    dend_41 { pt3dadd( 62.7213, -211.538, -52.6245, 0.74 ) }
    dend_41 { pt3dadd( 63.0677, -211.872, -52.8159, 0.88 ) }
    dend_41 { pt3dadd( 63.4619, -212.299, -53.062, 0.52 ) }
    dend_41 { pt3dadd( 64.1257, -213.161, -53.5493, 0.22 ) }
    dend_41 { pt3dadd( 64.4494, -213.654, -53.8094, 0.88 ) }
    dend_41 { pt3dadd( 64.8034, -214.238, -54.091, 1.33 ) }
    dend_41 { pt3dadd( 65.0854, -214.724, -54.3059, 1.33 ) }
    dend_41 { pt3dadd( 65.7454, -215.916, -54.7865, 0.29 ) }
    dend_41 { pt3dadd( 66.5218, -217.379, -55.3084, 0.29 ) }
    dend_41 { pt3dadd( 66.9049, -218.108, -55.5353, 0.44 ) }
    dend_41 { pt3dadd( 67.2456, -218.749, -55.7097, 0.59 ) }
    dend_41 { pt3dadd( 67.563, -219.338, -55.8498, 0.59 ) }
    dend_41 { pt3dadd( 68.0814, -220.281, -56.0468, 0.22 ) }
    dend_41 { pt3dadd( 68.6134, -221.25, -56.2292, 0.22 ) }
    dend_41 { pt3dadd( 68.9441, -221.84, -56.3426, 0.74 ) }
    dend_41 { pt3dadd( 69.1414, -222.192, -56.4176, 0.88 ) }
    dend_41 { pt3dadd( 69.3984, -222.642, -56.5354, 0.88 ) }
    dend_41 { pt3dadd( 69.9117, -223.518, -56.7759, 0.22 ) }
    dend_41 { pt3dadd( 70.8131, -225.004, -57.2284, 0.22 ) }
    dend_41 { pt3dadd( 71.2085, -225.654, -57.4518, 0.52 ) }
    dend_41 { pt3dadd( 71.4601, -226.078, -57.6103, 0.66 ) }
    dend_41 { pt3dadd( 71.8488, -226.736, -57.8718, 0.44 ) }
    dend_41 { pt3dadd( 77.0952, -233.336, -63.0365, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.2705, -115.556, -3.03047, 2.28 ) }
    dend_34 { pt3dadd( -10.8883, -117.335, -2.448, 2.28 ) }
    dend_34 { pt3dadd( -11.4495, -118.86, -1.84058, 1.62 ) }
    dend_34 { pt3dadd( -12.1774, -120.674, -1.07313, 1.33 ) }
    dend_34 { pt3dadd( -12.9289, -122.378, -0.342527, 0.88 ) }
    dend_34 { pt3dadd( -13.3075, -123.163, -0.00315367, 0.88 ) }
    dend_34 { pt3dadd( -13.9237, -124.316, 0.509195, 1.03 ) }
    dend_34 { pt3dadd( -15.1885, -126.375, 1.47357, 1.03 ) }
    dend_34 { pt3dadd( -16.3106, -127.947, 2.25561, 0.96 ) }
    dend_34 { pt3dadd( -17.2315, -129.082, 2.82144, 0.88 ) }
    dend_34 { pt3dadd( -18.0465, -130.047, 3.24726, 1.11 ) }
    dend_34 { pt3dadd( -18.9751, -131.207, 3.62635, 1.33 ) }
    dend_34 { pt3dadd( -19.7382, -132.309, 3.83371, 1.55 ) }
    dend_34 { pt3dadd( -20.3851, -133.43, 3.89924, 1.25 ) }
    dend_34 { pt3dadd( -20.8877, -134.559, 3.84603, 0.96 ) }
    dend_34 { pt3dadd( -21.3671, -136.109, 3.64779, 0.88 ) }
    dend_34 { pt3dadd( -21.7895, -138.032, 3.29149, 0.88 ) }
    dend_34 { pt3dadd( -22.1176, -140.087, 2.85551, 0.88 ) }
    dend_34 { pt3dadd( -22.3428, -141.896, 2.45561, 1.03 ) }
    dend_34 { pt3dadd( -22.5049, -143.587, 2.08004, 1.03 ) }
    dend_34 { pt3dadd( -22.6584, -145.578, 1.66509, 1.03 ) }
    dend_34 { pt3dadd( -22.7668, -147.395, 1.31727, 1.25 ) }
    dend_34 { pt3dadd( -22.8359, -149.493, 0.960727, 1.55 ) }
    dend_34 { pt3dadd( -22.8302, -151.099, 0.718261, 1.55 ) }
    dend_34 { pt3dadd( -22.7315, -153.315, 0.407208, 1.33 ) }
    dend_34 { pt3dadd( -22.5993, -155.127, 0.167123, 1.33 ) }
    dend_34 { pt3dadd( -22.4757, -156.745, -0.0272517, 1.11 ) }
    dend_34 { pt3dadd( -22.3022, -158.479, -0.171054, 1.11 ) }
    dend_34 { pt3dadd( -22.1186, -160.389, -0.256986, 0.96 ) }
    dend_34 { pt3dadd( -22.0109, -161.811, -0.26698, 0.96 ) }
    dend_34 { pt3dadd( -21.8926, -163.873, -0.181524, 0.88 ) }
    dend_34 { pt3dadd( -21.7795, -166.597, 0.024794, 0.88 ) }
    dend_34 { pt3dadd( -21.7075, -168.962, 0.281101, 1.03 ) }
    dend_34 { pt3dadd( -21.6623, -171.07, 0.567631, 1.25 ) }
    dend_34 { pt3dadd( -21.6424, -173.075, 0.88263, 1.33 ) }
    dend_34 { pt3dadd( -21.6421, -174.654, 1.1552, 1.62 ) }
    dend_34 { pt3dadd( -21.6213, -176.277, 1.44822, 2.5 ) }
    dend_34 { pt3dadd( -21.5837, -177.158, 1.59205, 2.8 ) }
    dend_34 { pt3dadd( -21.538, -178.247, 1.71472, 3.02 ) }
    dend_34 { pt3dadd( -21.4522, -179.267, 1.81716, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -21.3894, -179.951, 1.87957, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.535714, -50.268, -7.77, 0.81 ) }
    dend_30 { pt3dadd( -0.881087, -51.8735, -7.72556, 0.81 ) }
    dend_30 { pt3dadd( -1.20118, -52.9523, -7.65604, 0.66 ) }
    dend_30 { pt3dadd( -1.63979, -54.1561, -7.56498, 0.66 ) }
    dend_30 { pt3dadd( -2.14947, -55.4159, -7.4692, 0.52 ) }
    dend_30 { pt3dadd( -2.36072, -55.9191, -7.43219, 0.52 ) }
    dend_30 { pt3dadd( -2.92022, -57.2447, -7.33938, 0.74 ) }
    dend_30 { pt3dadd( -3.48289, -58.5925, -7.1862, 0.74 ) }
    dend_30 { pt3dadd( -3.98001, -59.7068, -7.07179, 0.88 ) }
    dend_30 { pt3dadd( -4.55866, -60.9138, -6.97857, 0.59 ) }
    dend_30 { pt3dadd( -4.93832, -61.7005, -6.94957, 1.03 ) }
    dend_30 { pt3dadd( -5.28494, -62.4732, -6.92778, 1.25 ) }
    dend_30 { pt3dadd( -5.62489, -63.3831, -6.90194, 1.03 ) }
    dend_30 { pt3dadd( -5.98081, -64.5599, -6.86972, 0.66 ) }
    dend_30 { pt3dadd( -6.24665, -65.5203, -6.8466, 0.66 ) }
    dend_30 { pt3dadd( -6.51832, -66.5116, -6.83791, 0.81 ) }
    dend_30 { pt3dadd( -6.81605, -67.6724, -6.8597, 0.81 ) }
    dend_30 { pt3dadd( -7.02512, -68.645, -6.91799, 0.66 ) }
    dend_30 { pt3dadd( -7.18404, -69.6767, -7.02235, 0.52 ) }
    dend_30 { pt3dadd( -7.24923, -70.2899, -7.12034, 0.52 ) }
    dend_30 { pt3dadd( -7.31874, -71.0416, -7.26057, 0.52 ) }
    dend_30 { pt3dadd( -7.42193, -72.1128, -7.48807, 0.66 ) }
    dend_30 { pt3dadd( -7.53233, -73.0853, -7.70579, 0.66 ) }
    dend_30 { pt3dadd( -7.67123, -74.1124, -7.94692, 0.59 ) }
    dend_30 { pt3dadd( -7.85161, -75.2379, -8.20342, 1.18 ) }
    dend_30 { pt3dadd( -8.00125, -76.2182, -8.4166, 1.55 ) }
    dend_30 { pt3dadd( -8.16617, -77.1553, -8.60294, 1.99 ) }
    dend_30 { pt3dadd( -8.44908, -78.2872, -8.80877, 2.73 ) }
    dend_30 { pt3dadd( -8.72152, -79.1221, -8.94692, 2.87 ) }
    dend_30 { pt3dadd( -9.02186, -79.8996, -9.08005, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.535714, -50.268, -7.77, 0.52 ) }
    dend_29 { pt3dadd( 0.664017, -51.957, -8.7979, 0.52 ) }
    dend_29 { pt3dadd( 0.919831, -52.3537, -9.01037, 0.52 ) }
    dend_29 { pt3dadd( 1.79594, -53.666, -9.69963, 0.52 ) }
    dend_29 { pt3dadd( 2.49354, -54.6419, -10.1987, 0.66 ) }
    dend_29 { pt3dadd( 2.93822, -55.2402, -10.4752, 0.66 ) }
    dend_29 { pt3dadd( 3.33615, -55.7468, -10.6891, 0.44 ) }
    dend_29 { pt3dadd( 3.8351, -56.443, -11.0003, 0.88 ) }
    dend_29 { pt3dadd( 4.27019, -57.0952, -11.2588, 1.33 ) }
    dend_29 { pt3dadd( 4.72923, -57.7975, -11.4927, 1.47 ) }
    dend_29 { pt3dadd( 5.29113, -58.6121, -11.8438, 1.03 ) }
    dend_29 { pt3dadd( 6.08399, -59.8725, -12.5812, 0.44 ) }
    dend_29 { pt3dadd( 6.43222, -60.6308, -13.2465, 0.44 ) }
    dend_29 { pt3dadd( 6.72419, -61.4901, -14.3266, 0.37 ) }
    dend_29 { pt3dadd( 6.91086, -62.1097, -15.2876, 0.37 ) }
    dend_29 { pt3dadd( 7.2376, -62.9094, -16.7103, 0.37 ) }
    dend_29 { pt3dadd( 7.54619, -63.4387, -17.7612, 0.74 ) }
    dend_29 { pt3dadd( 7.83545, -63.8036, -18.5277, 0.96 ) }
    dend_29 { pt3dadd( 8.31813, -64.3172, -19.5383, 0.96 ) }
    dend_29 { pt3dadd( 9.24547, -65.2546, -21.2616, 0.44 ) }
    dend_29 { pt3dadd( 9.8985, -65.9022, -22.3194, 1.33 ) }
    dend_29 { pt3dadd( 10.7789, -66.793, -23.6124, 1.55 ) }
    dend_29 { pt3dadd( 11.5589, -67.612, -24.7293, 1.33 ) }
    dend_29 { pt3dadd( 12.5594, -68.7275, -26.1114, 0.81 ) }
    dend_29 { pt3dadd( 12.9644, -69.205, -26.6327, 1.25 ) }
    dend_29 { pt3dadd( 13.4445, -69.7965, -27.1767, 0.88 ) }
    dend_29 { pt3dadd( 13.9177, -70.4581, -27.6895, 0.37 ) }
    dend_29 { pt3dadd( 14.2775, -71.0386, -28.052, 0.81 ) }
    dend_29 { pt3dadd( 14.6199, -71.6587, -28.3885, 1.03 ) }
    dend_29 { pt3dadd( 14.8225, -72.0321, -28.5564, 1.03 ) }
    dend_29 { pt3dadd( 15.5502, -73.3288, -29.0814, 0.29 ) }
    dend_29 { pt3dadd( 15.9241, -73.988, -29.3158, 0.29 ) }
    dend_29 { pt3dadd( 16.4291, -74.8442, -29.5661, 1.84 ) }
    dend_29 { pt3dadd( 16.9043, -75.5687, -29.7546, 2.14 ) }
    dend_29 { pt3dadd( 18.2294, -77.367, -30.2111, 0.29 ) }
    dend_29 { pt3dadd( 18.9106, -78.1964, -30.4054, 0.81 ) }
    dend_29 { pt3dadd( 19.5957, -78.9464, -30.5586, 0.81 ) }
    dend_29 { pt3dadd( 20.3131, -79.6504, -30.6994, 0.52 ) }
    dend_29 { pt3dadd( 21.3108, -80.5255, -30.9006, 1.25 ) }
    dend_29 { pt3dadd( 21.9739, -81.0606, -31.0441, 1.4 ) }
    dend_29 { pt3dadd( 23.6835, -82.3887, -31.4127, 0.22 ) }
    dend_29 { pt3dadd( 24.7242, -83.1973, -31.6087, 0.22 ) }
    dend_29 { pt3dadd( 25.8854, -84.1204, -31.7955, 1.4 ) }
    dend_29 { pt3dadd( 26.5987, -84.7308, -31.8918, 2.21 ) }
    dend_29 { pt3dadd( 26.9154, -85.0314, -31.9199, 2.21 ) }
    dend_29 { pt3dadd( 28.9073, -87.139, -32.0056, 0.22 ) }
    dend_29 { pt3dadd( 29.433, -87.731, -32.0171, 0.74 ) }
    dend_29 { pt3dadd( 29.899, -88.2786, -32.0347, 1.03 ) }
    dend_29 { pt3dadd( 30.6514, -89.224, -32.0751, 0.59 ) }
    dend_29 { pt3dadd( 32.4055, -91.5517, -32.1883, 0.22 ) }
    dend_29 { pt3dadd( 34.6429, -94.5747, -32.3775, 0.22 ) }
    dend_29 { pt3dadd( 35.4386, -95.6493, -32.4806, 0.81 ) }
    dend_29 { pt3dadd( 36.0353, -96.444, -32.5704, 0.96 ) }
    dend_29 { pt3dadd( 37.9937, -99.0346, -32.9113, 0.22 ) }
    dend_29 { pt3dadd( 39.2424, -100.636, -33.1719, 0.22 ) }
    dend_29 { pt3dadd( 39.9516, -101.522, -33.3596, 0.88 ) }
    dend_29 { pt3dadd( 40.6718, -102.383, -33.5876, 0.88 ) }
    dend_29 { pt3dadd( 42.7253, -104.79, -34.2786, 0.15 ) }
    dend_29 { pt3dadd( 44.2516, -106.551, -34.7347, 0.15 ) }
    dend_29 { pt3dadd( 45.1438, -107.548, -34.9916, 0.15 ) }
    dend_29 { pt3dadd( 45.9497, -108.456, -35.2154, 1.62 ) }
    dend_29 { pt3dadd( 46.4461, -109.04, -35.3469, 1.92 ) }
    dend_29 { pt3dadd( 46.8284, -109.509, -35.4277, 1.92 ) }
    dend_29 { pt3dadd( 49.2555, -112.617, -35.8617, 0.22 ) }
    dend_29 { pt3dadd( 49.7628, -113.281, -35.9279, 0.66 ) }
    dend_29 { pt3dadd( 50.1437, -113.797, -35.9706, 0.88 ) }
    dend_29 { pt3dadd( 50.5357, -114.322, -36.0161, 0.88 ) }
    dend_29 { pt3dadd( 51.8468, -116.04, -36.2912, 0.15 ) }
    dend_29 { pt3dadd( 52.8933, -117.43, -36.6878, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 53.4987, -118.275, -37.0305, 0.81 ) }
    dend_29 { pt3dadd( 53.8888, -118.876, -37.312, 1.03 ) }
    dend_29 { pt3dadd( 54.2048, -119.418, -37.5952, 1.03 ) }
    dend_29 { pt3dadd( 55.1355, -121.234, -38.6605, 0.22 ) }
    dend_29 { pt3dadd( 55.9974, -123.196, -39.9595, 0.22 ) }
    dend_29 { pt3dadd( 56.3402, -123.994, -40.5425, 0.22 ) }
    dend_29 { pt3dadd( 56.8455, -125.149, -41.4462, 1.03 ) }
    dend_29 { pt3dadd( 57.1127, -125.75, -41.9195, 1.62 ) }
    dend_29 { pt3dadd( 57.397, -126.357, -42.4258, 1.62 ) }
    dend_29 { pt3dadd( 57.9231, -127.383, -43.3294, 1.03 ) }
    dend_29 { pt3dadd( 59.0889, -129.49, -45.2583, 0.22 ) }
    dend_29 { pt3dadd( 59.6814, -130.478, -46.268, 0.44 ) }
    dend_29 { pt3dadd( 60.0383, -131.023, -46.8473, 0.44 ) }
    dend_29 { pt3dadd( 60.845, -132.225, -48.129, 0.66 ) }
    dend_29 { pt3dadd( 61.254, -132.83, -48.7499, 0.96 ) }
    dend_29 { pt3dadd( 61.7338, -133.53, -49.4443, 0.37 ) }
    dend_29 { pt3dadd( 63.274, -135.775, -51.552, 0.66 ) }
    dend_29 { pt3dadd( 63.6005, -136.237, -51.9637, 0.66 ) }
    dend_29 { pt3dadd( 64.8274, -137.917, -53.4566, 0.22 ) }
    dend_29 { pt3dadd( 65.4908, -138.804, -54.1898, 0.22 ) }
    dend_29 { pt3dadd( 66.1001, -139.596, -54.8126, 0.81 ) }
    dend_29 { pt3dadd( 66.6849, -140.31, -55.3283, 0.96 ) }
    dend_29 { pt3dadd( 67.0492, -140.774, -55.5398, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 23.1622, 163.783, -45.0478, 0.37 ) }
    dend_24 { pt3dadd( 25.4747, 162.826, -42.9946, 0.37 ) }
    dend_24 { pt3dadd( 25.9465, 162.631, -42.5757, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 23.1622, 163.783, -45.0478, 0.22 ) }
    dend_23 { pt3dadd( 24.0985, 165.607, -45.7465, 0.22 ) }
    dend_23 { pt3dadd( 24.5558, 166.605, -46.1448, 0.22 ) }
    dend_23 { pt3dadd( 24.8967, 167.398, -46.4682, 0.74 ) }
    dend_23 { pt3dadd( 25.0161, 167.693, -46.5865, 0.74 ) }
    dend_23 { pt3dadd( 25.5692, 169.061, -47.1349, 0.15 ) }
    dend_23 { pt3dadd( 25.927, 169.945, -47.4896, 0.15 ) }
    dend_23 { pt3dadd( 26.1405, 170.587, -47.8086, 0.66 ) }
    dend_23 { pt3dadd( 26.257, 170.987, -47.9757, 0.88 ) }
    dend_23 { pt3dadd( 26.3973, 171.446, -48.1383, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -10.2657, 42.6333, 4.25108, 0.66 ) }
    dend_17 { pt3dadd( -10.5914, 44.6493, 4.16004, 0.66 ) }
    dend_17 { pt3dadd( -10.6606, 45.4084, 4.16812, 0.96 ) }
    dend_17 { pt3dadd( -10.7404, 46.2976, 4.19435, 0.96 ) }
    dend_17 { pt3dadd( -10.8442, 47.5112, 4.24654, 0.59 ) }
    dend_17 { pt3dadd( -10.9258, 48.5855, 4.3034, 0.59 ) }
    dend_17 { pt3dadd( -11.0042, 49.8549, 4.38147, 0.59 ) }
    dend_17 { pt3dadd( -11.0867, 51.6941, 4.56014, 0.59 ) }
    dend_17 { pt3dadd( -11.1, 52.561, 4.65322, 0.52 ) }
    dend_17 { pt3dadd( -11.0938, 53.8549, 4.80308, 0.88 ) }
    dend_17 { pt3dadd( -11.0887, 54.7934, 4.90482, 1.11 ) }
    dend_17 { pt3dadd( -11.1022, 55.9148, 5.00783, 1.11 ) }
    dend_17 { pt3dadd( -11.1355, 57.2064, 5.12409, 0.74 ) }
    dend_17 { pt3dadd( -11.2004, 58.5608, 5.24137, 0.74 ) }
    dend_17 { pt3dadd( -11.3016, 60.294, 5.39348, 0.74 ) }
    dend_17 { pt3dadd( -11.3932, 61.4906, 5.48699, 0.52 ) }
    dend_17 { pt3dadd( -11.514, 62.7723, 5.56361, 0.52 ) }
    dend_17 { pt3dadd( -11.6103, 63.6966, 5.60467, 0.96 ) }
    dend_17 { pt3dadd( -11.751, 65.0639, 5.63554, 1.11 ) }
    dend_17 { pt3dadd( -11.9593, 67.0945, 5.64577, 1.11 ) }
    dend_17 { pt3dadd( -12.0916, 68.4303, 5.63523, 1.11 ) }
    dend_17 { pt3dadd( -12.2044, 69.7604, 5.63849, 0.81 ) }
    dend_17 { pt3dadd( -12.2851, 70.9286, 5.65319, 0.74 ) }
    dend_17 { pt3dadd( -12.3444, 72.1444, 5.68514, 0.74 ) }
    dend_17 { pt3dadd( -12.3731, 73.2822, 5.73833, 0.44 ) }
    dend_17 { pt3dadd( -12.3934, 74.2429, 5.80441, 0.44 ) }
    dend_17 { pt3dadd( -12.4404, 75.82, 5.95564, 0.74 ) }
    dend_17 { pt3dadd( -12.4765, 76.9067, 6.08249, 0.74 ) }
    dend_17 { pt3dadd( -12.5094, 78.0611, 6.22857, 0.37 ) }
    dend_17 { pt3dadd( -12.5108, 79.258, 6.39381, 0.74 ) }
    dend_17 { pt3dadd( -12.4901, 80.3063, 6.50167, 0.96 ) }
    dend_17 { pt3dadd( -12.4467, 81.5125, 6.57972, 0.96 ) }
    dend_17 { pt3dadd( -12.3785, 82.8456, 6.59934, 0.81 ) }
    dend_17 { pt3dadd( -12.296, 84.1001, 6.58152, 0.52 ) }
    dend_17 { pt3dadd( -12.1872, 85.4136, 6.53477, 0.52 ) }
    dend_17 { pt3dadd( -11.9958, 87.1385, 6.45439, 1.03 ) }
    dend_17 { pt3dadd( -11.8735, 88.0556, 6.40612, 1.55 ) }
    dend_17 { pt3dadd( -11.7535, 88.8852, 6.3562, 1.69 ) }
    dend_17 { pt3dadd( -11.6743, 89.4257, 6.32427, 1.69 ) }
    dend_17 { pt3dadd( -11.4762, 90.76, 6.26959, 0.37 ) }
    dend_17 { pt3dadd( -11.3114, 91.8725, 6.2662, 0.44 ) }
    dend_17 { pt3dadd( -11.21, 92.4479, 6.30418, 0.44 ) }
    dend_17 { pt3dadd( -11.0766, 93.1085, 6.3711, 0.44 ) }
    dend_17 { pt3dadd( -10.8379, 94.199, 6.51123, 0.29 ) }
    dend_17 { pt3dadd( -10.721, 94.6621, 6.57645, 0.59 ) }
    dend_17 { pt3dadd( -10.488, 95.4468, 6.69641, 0.44 ) }
    dend_17 { pt3dadd( -10.1074, 96.6802, 6.89254, 0.29 ) }
    dend_17 { pt3dadd( -9.7738, 97.8238, 7.07506, 1.18 ) }
    dend_17 { pt3dadd( -9.60608, 98.4393, 7.17377, 1.18 ) }
    dend_17 { pt3dadd( -9.36112, 99.3639, 7.3185, 0.52 ) }
    dend_17 { pt3dadd( -9.12777, 100.251, 7.45689, 0.29 ) }
    dend_17 { pt3dadd( -8.85951, 101.261, 7.64494, 0.29 ) }
    dend_17 { pt3dadd( -8.64272, 102.171, 7.86163, 0.29 ) }
    dend_17 { pt3dadd( -8.52567, 102.765, 8.02702, 0.29 ) }
    dend_17 { pt3dadd( -8.33932, 103.945, 8.3898, 0.81 ) }
    dend_17 { pt3dadd( -8.19939, 104.978, 8.73102, 0.44 ) }
    dend_17 { pt3dadd( -8.04609, 105.967, 9.05456, 0.22 ) }
    dend_17 { pt3dadd( -7.84421, 106.966, 9.37664, 0.44 ) }
    dend_17 { pt3dadd( -7.75894, 107.348, 9.50539, 0.44 ) }
    dend_17 { pt3dadd( -7.58292, 108.167, 9.78438, 0.29 ) }
    dend_17 { pt3dadd( -7.44185, 108.907, 10.0386, 0.29 ) }
    dend_17 { pt3dadd( -7.24108, 109.92, 10.3642, 0.29 ) }
    dend_17 { pt3dadd( -7.10324, 110.569, 10.5495, 0.29 ) }
    dend_17 { pt3dadd( -6.91777, 111.405, 10.7791, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -6.7729, 112.084, 10.9717, 0.66 ) }
    dend_17 { pt3dadd( -6.59129, 112.945, 11.1918, 0.74 ) }
    dend_17 { pt3dadd( -6.43453, 113.883, 11.4283, 0.37 ) }
    dend_17 { pt3dadd( -6.33604, 114.618, 11.6123, 0.37 ) }
    dend_17 { pt3dadd( -6.19825, 115.648, 11.837, 0.52 ) }
    dend_17 { pt3dadd( -6.08457, 116.428, 11.9772, 0.59 ) }
    dend_17 { pt3dadd( -5.90579, 117.617, 12.1744, 0.44 ) }
    dend_17 { pt3dadd( -5.77453, 118.455, 12.306, 0.29 ) }
    dend_17 { pt3dadd( -5.67573, 119.042, 12.4025, 0.29 ) }
    dend_17 { pt3dadd( -5.46276, 120.34, 12.6309, 1.11 ) }
    dend_17 { pt3dadd( -5.34477, 121.081, 12.7701, 1.25 ) }
    dend_17 { pt3dadd( -5.26301, 121.611, 12.8751, 1.25 ) }
    dend_17 { pt3dadd( -5.07341, 122.721, 13.0996, 0.66 ) }
    dend_17 { pt3dadd( -4.93282, 123.385, 13.2179, 0.29 ) }
    dend_17 { pt3dadd( -4.67844, 124.417, 13.3957, 0.29 ) }
    dend_17 { pt3dadd( -4.42328, 125.339, 13.5509, 0.29 ) }
    dend_17 { pt3dadd( -4.16713, 126.174, 13.6892, 0.29 ) }
    dend_17 { pt3dadd( -3.75291, 127.42, 13.8901, 0.96 ) }
    dend_17 { pt3dadd( -3.56974, 127.962, 13.9682, 1.47 ) }
    dend_17 { pt3dadd( -3.4244, 128.427, 14.025, 1.47 ) }
    dend_17 { pt3dadd( -3.34757, 128.701, 14.0524, 1.47 ) }
    dend_17 { pt3dadd( -3.15434, 129.506, 14.1271, 0.74 ) }
    dend_17 { pt3dadd( -2.95604, 130.429, 14.2156, 0.29 ) }
    dend_17 { pt3dadd( -2.78221, 131.376, 14.3082, 0.52 ) }
    dend_17 { pt3dadd( -2.6217, 132.25, 14.3994, 0.74 ) }
    dend_17 { pt3dadd( -2.39234, 133.36, 14.529, 0.44 ) }
    dend_17 { pt3dadd( -2.18712, 134.241, 14.6419, 0.29 ) }
    dend_17 { pt3dadd( -2.02569, 134.859, 14.727, 0.29 ) }
    dend_17 { pt3dadd( -1.76983, 135.705, 14.8553, 0.66 ) }
    dend_17 { pt3dadd( -1.567, 136.31, 14.95, 0.74 ) }
    dend_17 { pt3dadd( -1.26952, 137.161, 15.0841, 0.74 ) }
    dend_17 { pt3dadd( -0.944801, 138.115, 15.2399, 0.29 ) }
    dend_17 { pt3dadd( -0.672721, 138.968, 15.3811, 0.29 ) }
    dend_17 { pt3dadd( -0.165958, 140.687, 15.6654, 0.29 ) }
    dend_17 { pt3dadd( 0.131511, 141.856, 15.9104, 0.52 ) }
    dend_17 { pt3dadd( 0.285362, 142.56, 16.0811, 1.18 ) }
    dend_17 { pt3dadd( 0.395082, 143.171, 16.2435, 1.4 ) }
    dend_17 { pt3dadd( 0.534887, 144.163, 16.5254, 1.4 ) }
    dend_17 { pt3dadd( 0.61613, 144.942, 16.7547, 0.66 ) }
    dend_17 { pt3dadd( 0.781642, 146.768, 17.293, 0.29 ) }
    dend_17 { pt3dadd( 0.905267, 147.92, 17.6111, 0.29 ) }
    dend_17 { pt3dadd( 1.00917, 148.617, 17.7686, 0.37 ) }
    dend_17 { pt3dadd( 1.18552, 149.56, 17.9354, 0.37 ) }
    dend_17 { pt3dadd( 1.40374, 150.535, 18.0724, 0.37 ) }
    dend_17 { pt3dadd( 1.85709, 152.267, 18.2536, 0.37 ) }
    dend_17 { pt3dadd( 2.43259, 154.152, 18.3674, 0.37 ) }
    dend_17 { pt3dadd( 3.04338, 155.981, 18.4663, 1.33 ) }
    dend_17 { pt3dadd( 3.37082, 156.858, 18.5019, 1.99 ) }
    dend_17 { pt3dadd( 3.64872, 157.554, 18.5222, 1.99 ) }
    dend_17 { pt3dadd( 3.76799, 157.85, 18.5276, 1.99 ) }
    dend_17 { pt3dadd( 3.99041, 158.394, 18.5384, 1.99 ) }
    dend_17 { pt3dadd( 4.45488, 159.528, 18.5825, 0.59 ) }
    dend_17 { pt3dadd( 4.99472, 160.84, 18.6823, 0.29 ) }
    dend_17 { pt3dadd( 5.37252, 161.753, 18.8033, 0.59 ) }
    dend_17 { pt3dadd( 5.66547, 162.457, 18.9196, 0.59 ) }
    dend_17 { pt3dadd( 6.27885, 163.928, 19.2064, 0.37 ) }
    dend_17 { pt3dadd( 6.60515, 164.743, 19.3866, 0.37 ) }
    dend_17 { pt3dadd( 7.10017, 166.061, 19.7111, 0.37 ) }
    dend_17 { pt3dadd( 7.64534, 167.647, 20.1343, 0.74 ) }
    dend_17 { pt3dadd( 7.84006, 168.301, 20.3034, 0.74 ) }
    dend_17 { pt3dadd( 8.00439, 168.978, 20.4781, 0.88 ) }
    dend_17 { pt3dadd( 8.18427, 169.963, 20.7263, 0.44 ) }
    dend_17 { pt3dadd( 8.41606, 171.673, 21.1027, 0.29 ) }
    dend_17 { pt3dadd( 8.50122, 172.595, 21.2453, 0.52 ) }
    dend_17 { pt3dadd( 8.61101, 174.319, 21.3945, 1.25 ) }
    dend_17 { pt3dadd( 8.64279, 175.057, 21.4342, 1.62 ) }
    dend_17 { pt3dadd( 8.66241, 175.543, 21.4361, 1.62 ) }
    dend_17 { pt3dadd( 8.70304, 176.547, 21.3946, 0.96 ) }
    dend_17 { pt3dadd( 8.7822, 178.05, 21.2657, 0.29 ) }
    dend_17 { pt3dadd( 8.85348, 178.915, 21.1771, 0.29 ) }
    dend_17 { pt3dadd( 8.96946, 179.965, 21.0819, 0.29 ) }
    dend_17 { pt3dadd( 9.09106, 181.062, 21.0162, 0.74 ) }
    dend_17 { pt3dadd( 9.13641, 181.559, 21.0081, 0.96 ) }
    dend_17 { pt3dadd( 9.17887, 182.132, 21.0249, 0.96 ) }
    dend_17 { pt3dadd( 9.27101, 183.581, 21.1024, 0.52 ) }
    dend_17 { pt3dadd( 9.39598, 185.583, 21.1986, 0.37 ) }
    dend_17 { pt3dadd( 9.4768, 186.956, 21.268, 0.29 ) }
    dend_17 { pt3dadd( 9.53735, 188.252, 21.3235, 0.66 ) }
    dend_17 { pt3dadd( 9.57382, 189.123, 21.3426, 0.66 ) }
    dend_17 { pt3dadd( 9.62982, 190.761, 21.3444, 0.29 ) }
    dend_17 { pt3dadd( 9.65772, 191.574, 21.3388, 0.29 ) }
    dend_17 { pt3dadd( 9.74112, 193.717, 21.3201, 0.29 ) }
    dend_17 { pt3dadd( 9.86174, 196.049, 21.3139, 1.99 ) }
    dend_17 { pt3dadd( 9.88967, 196.578, 21.3205, 2.28 ) }
    dend_17 { pt3dadd( 9.91971, 197.324, 21.3457, 1.55 ) }
    dend_17 { pt3dadd( 9.93992, 198.138, 21.4111, 0.88 ) }
    dend_17 { pt3dadd( 9.94342, 199.461, 21.5883, 0.22 ) }
    dend_17 { pt3dadd( 9.93008, 200.078, 21.6969, 0.22 ) }
    dend_17 { pt3dadd( 9.888, 201.202, 21.9339, 0.66 ) }
    dend_17 { pt3dadd( 9.86099, 201.913, 22.0837, 0.66 ) }
    dend_17 { pt3dadd( 9.82628, 203.116, 22.3267, 0.29 ) }
    dend_17 { pt3dadd( 9.78499, 205.045, 22.6777, 0.22 ) }
    dend_17 { pt3dadd( 9.78997, 206.023, 22.8473, 0.22 ) }
    dend_17 { pt3dadd( 9.82372, 207.059, 23.0149, 0.52 ) }
    dend_17 { pt3dadd( 9.93154, 208.357, 23.2087, 0.44 ) }
    dend_17 { pt3dadd( 10.0794, 209.488, 23.3649, 0.44 ) }
    dend_17 { pt3dadd( 10.3052, 210.794, 23.5235, 0.44 ) }
    dend_17 { pt3dadd( 10.7498, 212.819, 23.7592, 0.22 ) }
    dend_17 { pt3dadd( 11.1206, 214.326, 23.934, 0.66 ) }
    dend_17 { pt3dadd( 11.4552, 215.544, 24.0763, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 11.6492, 216.188, 24.153, 1.77 ) }
    dend_17 { pt3dadd( 11.8398, 216.765, 24.2245, 1.77 ) }
    dend_17 { pt3dadd( 12.1575, 217.608, 24.3378, 0.88 ) }
    dend_17 { pt3dadd( 12.535, 218.541, 24.5064, 0.29 ) }
    dend_17 { pt3dadd( 12.796, 219.172, 24.6462, 0.52 ) }
    dend_17 { pt3dadd( 13.4491, 220.8, 25.043, 0.22 ) }
    dend_17 { pt3dadd( 13.8241, 221.729, 25.2648, 0.52 ) }
    dend_17 { pt3dadd( 14.2525, 222.777, 25.5017, 0.52 ) }
    dend_17 { pt3dadd( 15.1847, 225.083, 25.9908, 0.22 ) }
    dend_17 { pt3dadd( 15.8953, 226.85, 26.3363, 0.37 ) }
    dend_17 { pt3dadd( 16.3558, 228.013, 26.5576, 0.37 ) }
    dend_17 { pt3dadd( 16.8547, 229.31, 26.7903, 1.92 ) }
    dend_17 { pt3dadd( 17.0755, 229.907, 26.8859, 2.21 ) }
    dend_17 { pt3dadd( 17.2903, 230.529, 26.9589, 2.21 ) }
    dend_17 { pt3dadd( 17.5446, 231.271, 26.9561, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -10.2657, 42.6333, 4.25108, 0.66 ) }
    dend_14 { pt3dadd( -9.76567, 44.5089, 4.88709, 0.66 ) }
    dend_14 { pt3dadd( -9.45669, 45.6521, 5.26555, 0.81 ) }
    dend_14 { pt3dadd( -9.23824, 46.5001, 5.56862, 0.37 ) }
    dend_14 { pt3dadd( -8.99621, 47.5217, 5.93471, 0.29 ) }
    dend_14 { pt3dadd( -8.58017, 49.2352, 6.5385, 0.29 ) }
    dend_14 { pt3dadd( -8.31125, 50.2377, 6.89756, 0.29 ) }
    dend_14 { pt3dadd( -7.99138, 51.2025, 7.23052, 0.29 ) }
    dend_14 { pt3dadd( -7.48927, 52.47, 7.70918, 0.29 ) }
    dend_14 { pt3dadd( -7.0386, 53.5081, 8.11732, 0.29 ) }
    dend_14 { pt3dadd( -6.58923, 54.5421, 8.52333, 0.74 ) }
    dend_14 { pt3dadd( -6.27838, 55.2358, 8.80694, 0.74 ) }
    dend_14 { pt3dadd( -5.68433, 56.4082, 9.30724, 0.29 ) }
    dend_14 { pt3dadd( -5.33304, 57.0804, 9.60513, 0.37 ) }
    dend_14 { pt3dadd( -4.52505, 58.6462, 10.2817, 0.37 ) }
    dend_14 { pt3dadd( -4.1013, 59.532, 10.6625, 0.37 ) }
    dend_14 { pt3dadd( -3.67243, 60.5804, 11.0935, 0.37 ) }
    dend_14 { pt3dadd( -3.502, 61.0645, 11.2845, 0.37 ) }
    dend_14 { pt3dadd( -3.23648, 61.9484, 11.6266, 0.22 ) }
    dend_14 { pt3dadd( -3.00183, 62.8074, 11.9531, 0.22 ) }
    dend_14 { pt3dadd( -2.79062, 63.4851, 12.2094, 0.66 ) }
    dend_14 { pt3dadd( -2.55157, 64.3058, 12.4744, 0.96 ) }
    dend_14 { pt3dadd( 0.208385, 74.1997, 14.8151, 0.96 ) }
    dend_14 { pt3dadd( 4.75491, 82.6031, 19.2532, 0.96 ) }
    dend_14 { pt3dadd( 7.9646, 91.0539, 24.6631, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 29.348, 10.0349, 8.08265, 0.66 ) }
    dend_8 { pt3dadd( 30.2691, 8.79308, 7.17896, 0.66 ) }
    dend_8 { pt3dadd( 30.5285, 8.40926, 6.86654, 0.66 ) }
    dend_8 { pt3dadd( 30.9554, 7.81127, 6.40423, 0.88 ) }
    dend_8 { pt3dadd( 31.7249, 6.83467, 5.69464, 0.88 ) }
    dend_8 { pt3dadd( 32.2758, 6.20528, 5.26663, 0.88 ) }
    dend_8 { pt3dadd( 32.8025, 5.68134, 4.92604, 1.03 ) }
    dend_8 { pt3dadd( 33.4179, 5.11662, 4.56233, 1.03 ) }
    dend_8 { pt3dadd( 34.2919, 4.66184, 4.37775, 0.88 ) }
    dend_8 { pt3dadd( 34.9745, 4.54709, 4.42552, 0.88 ) }
    dend_8 { pt3dadd( 35.5603, 4.4973, 4.51837, 0.88 ) }
    dend_8 { pt3dadd( 36.4944, 4.38085, 4.67428, 0.81 ) }
    dend_8 { pt3dadd( 37.5837, 4.11541, 4.8106, 0.81 ) }
    dend_8 { pt3dadd( 38.2832, 3.84239, 4.82023, 0.81 ) }
    dend_8 { pt3dadd( 39.1766, 3.35387, 4.67684, 0.74 ) }
    dend_8 { pt3dadd( 40.1324, 2.73855, 4.41992, 0.88 ) }
    dend_8 { pt3dadd( 40.9812, 2.13731, 4.11229, 0.88 ) }
    dend_8 { pt3dadd( 41.8926, 1.42199, 3.69317, 0.52 ) }
    dend_8 { pt3dadd( 42.3461, 1.06968, 3.44476, 0.52 ) }
    dend_8 { pt3dadd( 42.889, 0.737014, 3.12762, 0.52 ) }
    dend_8 { pt3dadd( 43.5738, 0.446123, 2.74566, 0.52 ) }
    dend_8 { pt3dadd( 44.3459, 0.257277, 2.35112, 0.74 ) }
    dend_8 { pt3dadd( 45.1234, 0.149303, 1.97354, 0.74 ) }
    dend_8 { pt3dadd( 46.1047, 0.079023, 1.51557, 0.74 ) }
    dend_8 { pt3dadd( 47.3991, 0.030696, 0.941454, 0.74 ) }
    dend_8 { pt3dadd( 48.2943, 0.023001, 0.550553, 0.74 ) }
    dend_8 { pt3dadd( 49.0017, 0.046653, 0.263485, 0.74 ) }
    dend_8 { pt3dadd( 49.7666, 0.136944, 1.66725E-4, 0.74 ) }
    dend_8 { pt3dadd( 50.2149, 0.211614, -0.119535, 0.88 ) }
    dend_8 { pt3dadd( 51.4776, 0.497806, -0.38425, 0.88 ) }
    dend_8 { pt3dadd( 52.5544, 0.763194, -0.572625, 0.88 ) }
    dend_8 { pt3dadd( 53.8908, 1.07392, -0.797929, 0.66 ) }
    dend_8 { pt3dadd( 54.8728, 1.27214, -0.952372, 0.66 ) }
    dend_8 { pt3dadd( 57.41, 1.73014, -1.30535, 0.59 ) }
    dend_8 { pt3dadd( 58.2927, 1.87446, -1.41762, 0.52 ) }
    dend_8 { pt3dadd( 59.6295, 2.1081, -1.55294, 0.52 ) }
    dend_8 { pt3dadd( 60.4332, 2.28061, -1.6002, 0.52 ) }
    dend_8 { pt3dadd( 61.3014, 2.53836, -1.60626, 0.52 ) }
    dend_8 { pt3dadd( 62.3346, 2.90369, -1.57375, 0.52 ) }
    dend_8 { pt3dadd( 63.0251, 3.15801, -1.53568, 0.52 ) }
    dend_8 { pt3dadd( 64.1583, 3.5234, -1.48786, 0.52 ) }
    dend_8 { pt3dadd( 65.3889, 3.9155, -1.42816, 0.52 ) }
    dend_8 { pt3dadd( 66.5464, 4.2469, -1.38386, 0.52 ) }
    dend_8 { pt3dadd( 67.6321, 4.47253, -1.37887, 0.52 ) }
    dend_8 { pt3dadd( 68.8834, 4.59014, -1.43368, 0.52 ) }
    dend_8 { pt3dadd( 69.7575, 4.5376, -1.52149, 0.52 ) }
    dend_8 { pt3dadd( 70.5855, 4.37698, -1.60678, 0.52 ) }
    dend_8 { pt3dadd( 71.1478, 4.23772, -1.64422, 0.52 ) }
    dend_8 { pt3dadd( 71.8602, 4.06163, -1.65731, 0.52 ) }
    dend_8 { pt3dadd( 73.3081, 3.74076, -1.57312, 0.29 ) }
    dend_8 { pt3dadd( 75.8971, 3.28339, -1.23146, 0.29 ) }
    dend_8 { pt3dadd( 78.2423, 2.97418, -0.790618, 0.29 ) }
    dend_8 { pt3dadd( 79.4369, 2.87752, -0.490166, 0.29 ) }
    dend_8 { pt3dadd( 80.2938, 2.8354, -0.242257, 0.44 ) }
    dend_8 { pt3dadd( 81.2005, 2.83633, 0.082286, 0.59 ) }
    dend_8 { pt3dadd( 81.7721, 2.87438, 0.371205, 0.59 ) }
    dend_8 { pt3dadd( 82.6975, 3.14717, 1.13133, 0.59 ) }
    dend_8 { pt3dadd( 83.1747, 3.46614, 1.66923, 0.59 ) }
    dend_8 { pt3dadd( 92.7602, 1.39071, 0.980523, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 29.348, 10.0349, 8.08265, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 31.1764, 9.69648, 7.90874, 1.11 ) }
    dend_3 { pt3dadd( 32.3109, 9.35209, 7.75182, 1.11 ) }
    dend_3 { pt3dadd( 33.6085, 9.03849, 7.47332, 1.25 ) }
    dend_3 { pt3dadd( 34.6119, 8.89889, 7.24504, 1.47 ) }
    dend_3 { pt3dadd( 35.9743, 8.85988, 6.94899, 1.4 ) }
    dend_3 { pt3dadd( 37.1844, 8.94022, 6.70173, 1.4 ) }
    dend_3 { pt3dadd( 38.5464, 9.10666, 6.37631, 1.18 ) }
    dend_3 { pt3dadd( 40.3795, 9.68524, 5.95343, 1.18 ) }
    dend_3 { pt3dadd( 41.6242, 10.3615, 5.68618, 1.18 ) }
    dend_3 { pt3dadd( 42.6824, 11.0438, 5.46063, 1.18 ) }
    dend_3 { pt3dadd( 43.3109, 11.4558, 5.32734, 0.88 ) }
    dend_3 { pt3dadd( 43.9441, 11.7994, 5.18709, 0.88 ) }
    dend_3 { pt3dadd( 44.9537, 12.1147, 4.93789, 0.88 ) }
    dend_3 { pt3dadd( 46.5211, 12.2108, 4.51508, 1.11 ) }
    dend_3 { pt3dadd( 47.721, 12.1121, 4.15177, 1.11 ) }
    dend_3 { pt3dadd( 48.9402, 11.9241, 3.757, 1.11 ) }
    dend_3 { pt3dadd( 50.322, 11.638, 3.29509, 1.25 ) }
    dend_3 { pt3dadd( 51.7347, 11.2761, 2.81334, 1.33 ) }
    dend_3 { pt3dadd( 52.3893, 11.0796, 2.59054, 1.47 ) }
    dend_3 { pt3dadd( 53.4697, 10.7627, 2.25067, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -186.911, -139.831, -2.92374, 0.59 ) }
    dend_47 { pt3dadd( -186.816, -141.731, -2.98901, 0.59 ) }
    dend_47 { pt3dadd( -186.77, -142.53, -2.9836, 0.59 ) }
    dend_47 { pt3dadd( -186.713, -143.227, -2.95584, 0.52 ) }
    dend_47 { pt3dadd( -186.638, -144.03, -2.90077, 0.52 ) }
    dend_47 { pt3dadd( -186.58, -144.897, -2.83042, 0.88 ) }
    dend_47 { pt3dadd( -186.523, -145.857, -2.74339, 1.03 ) }
    dend_47 { pt3dadd( -186.499, -146.428, -2.64902, 1.03 ) }
    dend_47 { pt3dadd( -186.432, -147.433, -2.46393, 1.03 ) }
    dend_47 { pt3dadd( -186.35, -148.295, -2.29117, 0.29 ) }
    dend_47 { pt3dadd( -186.297, -148.909, -2.16473, 0.29 ) }
    dend_47 { pt3dadd( -186.267, -149.417, -2.059, 0.29 ) }
    dend_47 { pt3dadd( -186.262, -150.377, -1.86858, 0.59 ) }
    dend_47 { pt3dadd( -186.302, -151.16, -1.68202, 0.74 ) }
    dend_47 { pt3dadd( -186.365, -151.717, -1.53078, 0.88 ) }
    dend_47 { pt3dadd( -186.449, -152.254, -1.37526, 0.88 ) }
    dend_47 { pt3dadd( -186.542, -152.75, -1.21762, 0.88 ) }
    dend_47 { pt3dadd( -186.707, -153.412, -0.997797, 0.81 ) }
    dend_47 { pt3dadd( -187.122, -154.836, -0.522562, 0.37 ) }
    dend_47 { pt3dadd( -187.345, -155.605, -0.258853, 1.03 ) }
    dend_47 { pt3dadd( -187.574, -156.365, 0.0354204, 1.33 ) }
    dend_47 { pt3dadd( -187.792, -157.056, 0.323956, 1.33 ) }
    dend_47 { pt3dadd( -188.094, -157.938, 0.707062, 1.03 ) }
    dend_47 { pt3dadd( -188.365, -158.678, 1.03128, 0.74 ) }
    dend_47 { pt3dadd( -188.612, -159.321, 1.2898, 0.37 ) }
    dend_47 { pt3dadd( -188.955, -160.163, 1.67824, 0.74 ) }
    dend_47 { pt3dadd( -189.164, -160.645, 1.91428, 0.74 ) }
    dend_47 { pt3dadd( -189.397, -161.241, 2.16288, 0.59 ) }
    dend_47 { pt3dadd( -189.547, -161.7, 2.32256, 0.37 ) }
    dend_47 { pt3dadd( -189.728, -162.377, 2.49297, 0.37 ) }
    dend_47 { pt3dadd( -189.997, -163.508, 2.63808, 0.66 ) }
    dend_47 { pt3dadd( -190.19, -164.321, 2.65258, 0.74 ) }
    dend_47 { pt3dadd( -190.547, -165.706, 2.58599, 0.52 ) }
    dend_47 { pt3dadd( -190.7, -166.287, 2.53138, 0.52 ) }
    dend_47 { pt3dadd( -190.917, -166.979, 2.44489, 1.33 ) }
    dend_47 { pt3dadd( -191.201, -167.842, 2.31349, 1.55 ) }
    dend_47 { pt3dadd( -191.584, -168.973, 2.16187, 1.99 ) }
    dend_47 { pt3dadd( -191.836, -169.645, 2.11083, 2.21 ) }
    dend_47 { pt3dadd( -192.19, -170.474, 2.09255, 1.99 ) }
    dend_47 { pt3dadd( -192.642, -171.472, 2.07307, 1.11 ) }
    dend_47 { pt3dadd( -193.121, -172.618, 2.04685, 0.37 ) }
    dend_47 { pt3dadd( -193.476, -173.597, 2.02984, 1.11 ) }
    dend_47 { pt3dadd( -193.637, -174.093, 2.01942, 1.25 ) }
    dend_47 { pt3dadd( -193.84, -174.734, 2.0067, 1.25 ) }
    dend_47 { pt3dadd( -194.293, -176.149, 1.94247, 0.29 ) }
    dend_47 { pt3dadd( -194.585, -177.052, 1.88168, 0.29 ) }
    dend_47 { pt3dadd( -194.885, -177.88, 1.81785, 0.44 ) }
    dend_47 { pt3dadd( -195.211, -178.739, 1.7431, 0.59 ) }
    dend_47 { pt3dadd( -195.606, -179.751, 1.66429, 0.88 ) }
    dend_47 { pt3dadd( -195.941, -180.59, 1.61144, 0.96 ) }
    dend_47 { pt3dadd( -196.313, -181.395, 1.57388, 0.66 ) }
    dend_47 { pt3dadd( -196.829, -182.347, 1.56208, 0.37 ) }
    dend_47 { pt3dadd( -197.228, -183.024, 1.56267, 0.29 ) }
    dend_47 { pt3dadd( -197.673, -183.725, 1.59514, 0.29 ) }
    dend_47 { pt3dadd( -198.063, -184.336, 1.65277, 0.29 ) }
    dend_47 { pt3dadd( -198.608, -185.153, 1.76339, 0.29 ) }
    dend_47 { pt3dadd( -199.429, -186.274, 1.91276, 0.74 ) }
    dend_47 { pt3dadd( -200.073, -187.043, 2.04462, 1.03 ) }
    dend_47 { pt3dadd( -200.879, -187.93, 2.22822, 2.28 ) }
    dend_47 { pt3dadd( -201.518, -188.571, 2.37838, 2.8 ) }
    dend_47 { pt3dadd( -202.132, -189.177, 2.52196, 3.09 ) }
    dend_47 { pt3dadd( -203.121, -190.189, 2.75338, 1.84 ) }
    dend_47 { pt3dadd( -204.265, -191.349, 3.01044, 0.29 ) }
    dend_47 { pt3dadd( -204.826, -191.949, 3.14641, 0.29 ) }
    dend_47 { pt3dadd( -205.557, -192.808, 3.32795, 0.29 ) }
    dend_47 { pt3dadd( -206.291, -193.752, 3.53281, 0.29 ) }
    dend_47 { pt3dadd( -206.789, -194.536, 3.71499, 0.88 ) }
    dend_47 { pt3dadd( -207.171, -195.242, 3.87996, 1.11 ) }
    dend_47 { pt3dadd( -207.466, -195.853, 4.00198, 0.81 ) }
    dend_47 { pt3dadd( -207.704, -196.382, 4.11021, 0.52 ) }
    dend_47 { pt3dadd( -208.064, -197.271, 4.29848, 0.29 ) }
    dend_47 { pt3dadd( -208.467, -198.324, 4.53287, 0.29 ) }
    dend_47 { pt3dadd( -208.788, -199.225, 4.73795, 0.29 ) }
    dend_47 { pt3dadd( -208.969, -199.712, 4.84701, 0.29 ) }
    dend_47 { pt3dadd( -209.312, -200.681, 5.06795, 0.81 ) }
    dend_47 { pt3dadd( -209.602, -201.581, 5.27785, 1.11 ) }
    dend_47 { pt3dadd( -209.808, -202.287, 5.44539, 0.88 ) }
    dend_47 { pt3dadd( -210.096, -203.29, 5.68135, 0.29 ) }
    dend_47 { pt3dadd( -210.441, -204.513, 5.97229, 0.29 ) }
    dend_47 { pt3dadd( -210.778, -205.612, 6.19082, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -210.907, -206.014, 6.25951, 0.29 ) }
    dend_47 { pt3dadd( -211.212, -206.978, 6.4008, 0.74 ) }
    dend_47 { pt3dadd( -211.431, -207.67, 6.48556, 0.74 ) }
    dend_47 { pt3dadd( -211.725, -208.65, 6.59166, 0.44 ) }
    dend_47 { pt3dadd( -212.052, -209.79, 6.70148, 0.29 ) }
    dend_47 { pt3dadd( -212.221, -210.358, 6.74976, 0.29 ) }
    dend_47 { pt3dadd( -212.447, -211.143, 6.84722, 0.29 ) }
    dend_47 { pt3dadd( -212.678, -212.082, 7.0127, 0.29 ) }
    dend_47 { pt3dadd( -212.794, -212.619, 7.14289, 0.74 ) }
    dend_47 { pt3dadd( -212.898, -213.11, 7.29335, 0.74 ) }
    dend_47 { pt3dadd( -213.086, -213.986, 7.62384, 0.44 ) }
    dend_47 { pt3dadd( -213.32, -214.973, 8.01425, 0.29 ) }
    dend_47 { pt3dadd( -213.538, -215.82, 8.38242, 0.74 ) }
    dend_47 { pt3dadd( -213.699, -216.414, 8.64743, 1.11 ) }
    dend_47 { pt3dadd( -213.854, -216.914, 8.86607, 1.69 ) }
    dend_47 { pt3dadd( -213.988, -217.335, 9.04336, 1.92 ) }
    dend_47 { pt3dadd( -214.182, -217.947, 9.28386, 1.92 ) }
    dend_47 { pt3dadd( -214.456, -218.877, 9.60598, 1.62 ) }
    dend_47 { pt3dadd( -214.782, -220.009, 9.97265, 0.29 ) }
    dend_47 { pt3dadd( -215.034, -220.918, 10.249, 0.22 ) }
    dend_47 { pt3dadd( -215.257, -221.671, 10.465, 0.22 ) }
    dend_47 { pt3dadd( -215.571, -222.693, 10.7346, 0.59 ) }
    dend_47 { pt3dadd( -215.846, -223.543, 10.9379, 0.74 ) }
    dend_47 { pt3dadd( -216.057, -224.136, 11.0713, 0.74 ) }
    dend_47 { pt3dadd( -216.354, -224.897, 11.2479, 0.44 ) }
    dend_47 { pt3dadd( -216.64, -225.542, 11.3971, 0.29 ) }
    dend_47 { pt3dadd( -216.984, -226.179, 11.565, 0.29 ) }
    dend_47 { pt3dadd( -217.807, -227.444, 11.9496, 0.44 ) }
    dend_47 { pt3dadd( -218.29, -228.092, 12.1427, 0.59 ) }
    dend_47 { pt3dadd( -218.776, -228.695, 12.3142, 0.59 ) }
    dend_47 { pt3dadd( -219.349, -229.388, 12.4821, 0.52 ) }
    dend_47 { pt3dadd( -220.225, -230.43, 12.693, 1.33 ) }
    dend_47 { pt3dadd( -220.946, -231.278, 12.8283, 2.06 ) }
    dend_47 { pt3dadd( -221.619, -232.103, 12.9261, 2.21 ) }
    dend_47 { pt3dadd( -222.103, -232.768, 12.9799, 2.21 ) }
    dend_47 { pt3dadd( -222.798, -233.862, 13.0348, 0.81 ) }
    dend_47 { pt3dadd( -223.213, -234.659, 13.0463, 0.29 ) }
    dend_47 { pt3dadd( -223.521, -235.389, 13.0302, 0.44 ) }
    dend_47 { pt3dadd( -223.708, -235.946, 13.0186, 0.44 ) }
    dend_47 { pt3dadd( -223.941, -236.763, 13.0159, 0.29 ) }
    dend_47 { pt3dadd( -224.112, -237.378, 13.0004, 0.29 ) }
    dend_47 { pt3dadd( -224.33, -238.14, 12.9808, 0.29 ) }
    dend_47 { pt3dadd( -224.495, -238.636, 12.9675, 0.74 ) }
    dend_47 { pt3dadd( -224.676, -239.084, 12.9688, 0.88 ) }
    dend_47 { pt3dadd( -224.918, -239.607, 12.9894, 0.88 ) }
    dend_47 { pt3dadd( -225.321, -240.449, 13.0706, 0.29 ) }
    dend_47 { pt3dadd( -225.733, -241.281, 13.2146, 0.29 ) }
    dend_47 { pt3dadd( -226.128, -242.111, 13.4399, 0.29 ) }
    dend_47 { pt3dadd( -226.567, -243.107, 13.7685, 0.52 ) }
    dend_47 { pt3dadd( -226.767, -243.571, 13.9426, 0.52 ) }
    dend_47 { pt3dadd( -227.11, -244.413, 14.3033, 0.29 ) }
    dend_47 { pt3dadd( -227.317, -244.99, 14.5968, 0.29 ) }
    dend_47 { pt3dadd( -227.668, -246.149, 15.2625, 0.59 ) }
    dend_47 { pt3dadd( -227.849, -246.802, 15.6768, 0.29 ) }
    dend_47 { pt3dadd( -227.976, -247.225, 15.9739, 0.29 ) }
    dend_47 { pt3dadd( -228.19, -247.802, 16.4156, 0.74 ) }
    dend_47 { pt3dadd( -228.585, -248.547, 17.0342, 0.88 ) }
    dend_47 { pt3dadd( -228.984, -249.094, 17.5063, 0.29 ) }
    dend_47 { pt3dadd( -229.449, -249.586, 17.9484, 0.29 ) }
    dend_47 { pt3dadd( -230.109, -250.199, 18.4731, 0.96 ) }
    dend_47 { pt3dadd( -230.652, -250.689, 18.8389, 1.11 ) }
    dend_47 { pt3dadd( -231.334, -251.325, 19.2032, 1.11 ) }
    dend_47 { pt3dadd( -232.055, -252.068, 19.5311, 0.29 ) }
    dend_47 { pt3dadd( -232.52, -252.631, 19.7379, 0.22 ) }
    dend_47 { pt3dadd( -232.889, -253.203, 19.9043, 0.44 ) }
    dend_47 { pt3dadd( -233.234, -253.889, 20.0617, 0.44 ) }
    dend_47 { pt3dadd( -233.695, -255.058, 20.2583, 0.22 ) }
    dend_47 { pt3dadd( -233.944, -255.796, 20.3433, 0.22 ) }
    dend_47 { pt3dadd( -234.109, -256.351, 20.3781, 0.22 ) }
    dend_47 { pt3dadd( -234.291, -256.983, 20.3956, 0.59 ) }
    dend_47 { pt3dadd( -234.421, -257.438, 20.4048, 0.74 ) }
    dend_47 { pt3dadd( -234.813, -258.785, 20.3947, 0.29 ) }
    dend_47 { pt3dadd( -235.023, -259.502, 20.3761, 0.29 ) }
    dend_47 { pt3dadd( -235.29, -260.396, 20.3434, 0.44 ) }
    dend_47 { pt3dadd( -235.534, -261.252, 20.3136, 0.44 ) }
    dend_47 { pt3dadd( -235.839, -262.385, 20.2941, 0.52 ) }
    dend_47 { pt3dadd( -236.014, -263.03, 20.295, 0.96 ) }
    dend_47 { pt3dadd( -236.198, -263.671, 20.3137, 1.4 ) }
    dend_47 { pt3dadd( -236.406, -264.319, 20.3301, 1.4 ) }
    dend_47 { pt3dadd( -236.962, -265.801, 20.4437, 0.29 ) }
    dend_47 { pt3dadd( -237.563, -267.227, 20.6297, 0.22 ) }
    dend_47 { pt3dadd( -237.883, -267.913, 20.764, 0.37 ) }
    dend_47 { pt3dadd( -238.426, -268.988, 21.0464, 0.37 ) }
    dend_47 { pt3dadd( -238.994, -270.029, 21.3776, 0.29 ) }
    dend_47 { pt3dadd( -239.792, -271.372, 21.8753, 0.74 ) }
    dend_47 { pt3dadd( -240.24, -272.048, 22.1611, 1.11 ) }
    dend_47 { pt3dadd( -240.759, -272.758, 22.4722, 1.25 ) }
    dend_47 { pt3dadd( -241.307, -273.455, 22.7661, 1.11 ) }
    dend_47 { pt3dadd( -241.834, -274.096, 23.0155, 0.59 ) }
    dend_47 { pt3dadd( -242.522, -274.928, 23.2897, 0.29 ) }
    dend_47 { pt3dadd( -242.928, -275.44, 23.3924, 0.29 ) }
    dend_47 { pt3dadd( -243.682, -276.427, 23.5432, 0.22 ) }
    dend_47 { pt3dadd( -244.178, -277.106, 23.6279, 0.22 ) }
    dend_47 { pt3dadd( -244.454, -277.494, 23.6731, 0.66 ) }
    dend_47 { pt3dadd( -244.88, -278.102, 23.7445, 0.66 ) }
    dend_47 { pt3dadd( -245.745, -279.368, 23.9236, 0.29 ) }
    dend_47 { pt3dadd( -246.272, -280.127, 24.0442, 0.29 ) }
    dend_47 { pt3dadd( -246.829, -280.882, 24.1702, 0.29 ) }
    dend_47 { pt3dadd( -247.413, -281.625, 24.291, 0.66 ) }
    dend_47 { pt3dadd( -247.883, -282.19, 24.3778, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -248.64, -283.061, 24.501, 0.22 ) }
    dend_47 { pt3dadd( -249.161, -283.644, 24.5747, 0.22 ) }
    dend_47 { pt3dadd( -250.034, -284.625, 24.6838, 0.22 ) }
    dend_47 { pt3dadd( -251.555, -286.371, 24.8305, 0.22 ) }
    dend_47 { pt3dadd( -252.007, -286.94, 24.8591, 0.22 ) }
    dend_47 { pt3dadd( -252.471, -287.593, 24.8739, 1.11 ) }
    dend_47 { pt3dadd( -252.716, -288.003, 24.868, 1.11 ) }
    dend_47 { pt3dadd( -252.829, -288.242, 24.8636, 1.11 ) }
    dend_47 { pt3dadd( -253.047, -288.873, 24.8542, 0.66 ) }
    dend_47 { pt3dadd( -253.305, -289.921, 24.8353, 0.22 ) }
    dend_47 { pt3dadd( -253.422, -290.565, 24.8332, 0.52 ) }
    dend_47 { pt3dadd( -253.597, -292.046, 24.8549, 0.22 ) }
    dend_47 { pt3dadd( -253.732, -293.248, 24.8834, 0.22 ) }
    dend_47 { pt3dadd( -253.79, -293.762, 24.9006, 0.59 ) }
    dend_47 { pt3dadd( -253.866, -294.413, 24.9321, 0.59 ) }
    dend_47 { pt3dadd( -253.973, -295.355, 24.9765, 0.52 ) }
    dend_47 { pt3dadd( -254.115, -296.746, 25.0384, 0.22 ) }
    dend_47 { pt3dadd( -254.182, -297.562, 25.0738, 0.22 ) }
    dend_47 { pt3dadd( -254.205, -298.048, 25.0973, 0.22 ) }
    dend_47 { pt3dadd( -254.22, -298.602, 25.1244, 0.66 ) }
    dend_47 { pt3dadd( -254.214, -299.392, 25.2151, 0.81 ) }
    dend_47 { pt3dadd( -254.147, -300.252, 25.3946, 0.59 ) }
    dend_47 { pt3dadd( -253.911, -301.462, 25.8252, 1.25 ) }
    dend_47 { pt3dadd( -253.696, -302.092, 26.1355, 1.69 ) }
    dend_47 { pt3dadd( -253.538, -302.397, 26.3306, 1.92 ) }
    dend_47 { pt3dadd( -252.821, -303.357, 27.108, 1.18 ) }
    dend_47 { pt3dadd( -252.092, -304.061, 27.8406, 0.22 ) }
    dend_47 { pt3dadd( -251.201, -304.689, 28.6449, 0.22 ) }
    dend_47 { pt3dadd( -250.58, -305.028, 29.1574, 0.22 ) }
    dend_47 { pt3dadd( -249.785, -305.41, 29.7513, 0.22 ) }
    dend_47 { pt3dadd( -249.201, -305.677, 30.1444, 0.66 ) }
    dend_47 { pt3dadd( -248.76, -305.883, 30.3989, 0.66 ) }
    dend_47 { pt3dadd( -247.552, -306.455, 31.0294, 0.22 ) }
    dend_47 { pt3dadd( -247.089, -306.685, 31.252, 0.37 ) }
    dend_47 { pt3dadd( -246.622, -306.972, 31.4854, 0.37 ) }
    dend_47 { pt3dadd( -246.25, -307.256, 31.6918, 0.22 ) }
    dend_47 { pt3dadd( -245.692, -307.754, 32.0237, 0.22 ) }
    dend_47 { pt3dadd( -249.714, -316.667, 33.6329, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -186.911, -139.831, -2.92374, 0.37 ) }
    dend_46 { pt3dadd( -188.377, -139.492, -2.65898, 0.37 ) }
    dend_46 { pt3dadd( -188.996, -139.379, -2.5751, 0.37 ) }
    dend_46 { pt3dadd( -190.327, -139.188, -2.48463, 0.29 ) }
    dend_46 { pt3dadd( -191.342, -139.08, -2.45208, 0.44 ) }
    dend_46 { pt3dadd( -192.325, -139.008, -2.44442, 0.66 ) }
    dend_46 { pt3dadd( -192.891, -138.984, -2.45663, 0.81 ) }
    dend_46 { pt3dadd( -193.383, -138.984, -2.49543, 0.81 ) }
    dend_46 { pt3dadd( -194.917, -139.031, -2.68502, 0.22 ) }
    dend_46 { pt3dadd( -195.399, -139.058, -2.77006, 0.22 ) }
    dend_46 { pt3dadd( -196.265, -139.113, -2.92484, 0.74 ) }
    dend_46 { pt3dadd( -196.976, -139.155, -3.05768, 0.88 ) }
    dend_46 { pt3dadd( -198.16, -139.233, -3.31272, 0.22 ) }
    dend_46 { pt3dadd( -198.648, -139.258, -3.45953, 0.22 ) }
    dend_46 { pt3dadd( -199.102, -139.285, -3.63375, 0.22 ) }
    dend_46 { pt3dadd( -199.619, -139.325, -3.86313, 0.74 ) }
    dend_46 { pt3dadd( -200.167, -139.398, -4.1463, 0.88 ) }
    dend_46 { pt3dadd( -200.769, -139.547, -4.53662, 0.88 ) }
    dend_46 { pt3dadd( -202.095, -140.064, -5.59659, 0.22 ) }
    dend_46 { pt3dadd( -202.564, -140.289, -6.01474, 0.22 ) }
    dend_46 { pt3dadd( -202.95, -140.491, -6.38914, 0.74 ) }
    dend_46 { pt3dadd( -203.433, -140.782, -6.94238, 0.74 ) }
    dend_46 { pt3dadd( -204.438, -141.403, -8.00809, 0.29 ) }
    dend_46 { pt3dadd( -204.753, -141.596, -8.31477, 0.29 ) }
    dend_46 { pt3dadd( -205.267, -141.912, -8.77229, 0.88 ) }
    dend_46 { pt3dadd( -205.884, -142.25, -9.2829, 1.03 ) }
    dend_46 { pt3dadd( -207.747, -143.126, -10.7215, 0.22 ) }
    dend_46 { pt3dadd( -209.518, -143.88, -11.9867, 0.22 ) }
    dend_46 { pt3dadd( -210.236, -144.15, -12.44, 0.22 ) }
    dend_46 { pt3dadd( -210.662, -144.301, -12.6929, 1.11 ) }
    dend_46 { pt3dadd( -211.177, -144.485, -12.9767, 1.11 ) }
    dend_46 { pt3dadd( -211.729, -144.673, -13.2249, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -21.3894, -179.951, 1.87957, 0.81 ) }
    dend_40 { pt3dadd( -20.1065, -180.663, 1.27155, 0.81 ) }
    dend_40 { pt3dadd( -19.0747, -181.172, 0.764635, 0.52 ) }
    dend_40 { pt3dadd( -17.6105, -181.836, 0.0233402, 0.52 ) }
    dend_40 { pt3dadd( -16.9731, -182.136, -0.306658, 0.37 ) }
    dend_40 { pt3dadd( -15.7019, -182.756, -0.972996, 0.37 ) }
    dend_40 { pt3dadd( -15.1975, -183.011, -1.23891, 0.66 ) }
    dend_40 { pt3dadd( -14.7536, -183.24, -1.49209, 0.88 ) }
    dend_40 { pt3dadd( -14.3832, -183.434, -1.69885, 0.88 ) }
    dend_40 { pt3dadd( -13.4369, -184.041, -2.23089, 0.59 ) }
    dend_40 { pt3dadd( -12.5972, -184.702, -2.70525, 0.66 ) }
    dend_40 { pt3dadd( -11.7595, -185.463, -3.17582, 0.74 ) }
    dend_40 { pt3dadd( -11.2465, -185.925, -3.46204, 0.74 ) }
    dend_40 { pt3dadd( -10.8478, -186.255, -3.68231, 0.52 ) }
    dend_40 { pt3dadd( -10.1977, -186.732, -4.04193, 0.29 ) }
    dend_40 { pt3dadd( -9.49863, -187.134, -4.41191, 0.96 ) }
    dend_40 { pt3dadd( -8.85858, -187.44, -4.73535, 1.03 ) }
    dend_40 { pt3dadd( -8.43243, -187.623, -4.93765, 1.03 ) }
    dend_40 { pt3dadd( -7.45425, -188.019, -5.37269, 0.66 ) }
    dend_40 { pt3dadd( -7.04398, -188.19, -5.55729, 0.52 ) }
    dend_40 { pt3dadd( -6.10241, -188.6, -5.98417, 0.59 ) }
    dend_40 { pt3dadd( -5.17047, -189.064, -6.41082, 0.59 ) }
    dend_40 { pt3dadd( -4.31623, -189.555, -6.81125, 0.52 ) }
    dend_40 { pt3dadd( -3.61276, -190.014, -7.15166, 0.52 ) }
    dend_40 { pt3dadd( -2.8796, -190.548, -7.51855, 0.96 ) }
    dend_40 { pt3dadd( -2.42784, -190.887, -7.76121, 1.18 ) }
    dend_40 { pt3dadd( -1.68852, -191.436, -8.1866, 0.66 ) }
    dend_40 { pt3dadd( -0.819325, -192.028, -8.69514, 0.37 ) }
    dend_40 { pt3dadd( -0.2769, -192.361, -9.01639, 0.37 ) }
    dend_40 { pt3dadd( 0.844133, -192.975, -9.68617, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 1.84814, -193.496, -10.2502, 1.03 ) }
    dend_40 { pt3dadd( 2.61681, -193.892, -10.6663, 0.81 ) }
    dend_40 { pt3dadd( 3.33268, -194.259, -11.0323, 0.52 ) }
    dend_40 { pt3dadd( 4.18207, -194.692, -11.4402, 0.52 ) }
    dend_40 { pt3dadd( 4.85467, -195.048, -11.7396, 0.52 ) }
    dend_40 { pt3dadd( 5.79246, -195.616, -12.1283, 0.52 ) }
    dend_40 { pt3dadd( 6.59024, -196.157, -12.4374, 1.33 ) }
    dend_40 { pt3dadd( 7.09067, -196.533, -12.6257, 1.69 ) }
    dend_40 { pt3dadd( 7.66668, -197.024, -12.8375, 1.69 ) }
    dend_40 { pt3dadd( 8.59577, -197.899, -13.2611, 1.11 ) }
    dend_40 { pt3dadd( 9.57287, -198.867, -13.7936, 0.44 ) }
    dend_40 { pt3dadd( 10.1799, -199.466, -14.1991, 0.44 ) }
    dend_40 { pt3dadd( 10.6569, -199.93, -14.5616, 0.29 ) }
    dend_40 { pt3dadd( 11.1802, -200.436, -15.0244, 0.29 ) }
    dend_40 { pt3dadd( 12.3319, -201.516, -16.1586, 1.03 ) }
    dend_40 { pt3dadd( 12.6577, -201.81, -16.513, 1.4 ) }
    dend_40 { pt3dadd( 12.9989, -202.131, -16.9215, 1.4 ) }
    dend_40 { pt3dadd( 14.058, -203.262, -18.2957, 0.22 ) }
    dend_40 { pt3dadd( 14.616, -203.895, -19.0305, 0.52 ) }
    dend_40 { pt3dadd( 14.8931, -204.222, -19.3864, 0.52 ) }
    dend_40 { pt3dadd( 15.3764, -204.844, -19.9783, 0.29 ) }
    dend_40 { pt3dadd( 16.0493, -205.747, -20.8137, 0.29 ) }
    dend_40 { pt3dadd( 16.4659, -206.307, -21.3148, 0.29 ) }
    dend_40 { pt3dadd( 16.8845, -206.906, -21.8266, 0.66 ) }
    dend_40 { pt3dadd( 17.2033, -207.356, -22.1778, 0.81 ) }
    dend_40 { pt3dadd( 17.4386, -207.684, -22.4238, 0.81 ) }
    dend_40 { pt3dadd( 17.8465, -208.197, -22.8048, 0.59 ) }
    dend_40 { pt3dadd( 18.3171, -208.718, -23.2204, 0.29 ) }
    dend_40 { pt3dadd( 18.7768, -209.238, -23.5889, 0.29 ) }
    dend_40 { pt3dadd( 19.3047, -209.921, -23.9723, 0.66 ) }
    dend_40 { pt3dadd( 19.7198, -210.53, -24.2183, 0.66 ) }
    dend_40 { pt3dadd( 20.2876, -211.472, -24.4698, 0.29 ) }
    dend_40 { pt3dadd( 20.617, -212.084, -24.56, 0.29 ) }
    dend_40 { pt3dadd( 21.1809, -213.209, -24.634, 0.66 ) }
    dend_40 { pt3dadd( 21.5785, -214.01, -24.632, 0.66 ) }
    dend_40 { pt3dadd( 22.0794, -215.061, -24.5639, 0.44 ) }
    dend_40 { pt3dadd( 22.558, -216.135, -24.4412, 1.47 ) }
    dend_40 { pt3dadd( 22.9153, -217.002, -24.313, 1.84 ) }
    dend_40 { pt3dadd( 23.1124, -217.512, -24.2331, 1.84 ) }
    dend_40 { pt3dadd( 23.2258, -217.828, -24.1958, 1.84 ) }
    dend_40 { pt3dadd( 23.5184, -218.635, -24.1176, 1.33 ) }
    dend_40 { pt3dadd( 23.889, -219.606, -24.0538, 0.52 ) }
    dend_40 { pt3dadd( 24.0913, -220.117, -24.03, 0.52 ) }
    dend_40 { pt3dadd( 24.3692, -220.811, -24.0002, 0.52 ) }
    dend_40 { pt3dadd( 24.8173, -221.919, -23.9438, 0.29 ) }
    dend_40 { pt3dadd( 25.0572, -222.492, -23.9105, 0.29 ) }
    dend_40 { pt3dadd( 25.423, -223.309, -23.853, 0.29 ) }
    dend_40 { pt3dadd( 25.7836, -224.061, -23.7937, 0.44 ) }
    dend_40 { pt3dadd( 26.323, -225.071, -23.7296, 0.44 ) }
    dend_40 { pt3dadd( 26.8175, -225.89, -23.7146, 0.44 ) }
    dend_40 { pt3dadd( 27.195, -226.46, -23.7399, 1.33 ) }
    dend_40 { pt3dadd( 27.6256, -227.111, -23.8123, 1.84 ) }
    dend_40 { pt3dadd( 28.0399, -227.686, -23.9169, 1.84 ) }
    dend_40 { pt3dadd( 28.7358, -228.573, -24.1274, 0.96 ) }
    dend_40 { pt3dadd( 29.6463, -229.653, -24.4413, 0.22 ) }
    dend_40 { pt3dadd( 30.4201, -230.523, -24.7329, 0.22 ) }
    dend_40 { pt3dadd( 31.5128, -231.692, -25.1773, 0.22 ) }
    dend_40 { pt3dadd( 32.1726, -232.346, -25.4565, 0.22 ) }
    dend_40 { pt3dadd( 32.9236, -233.013, -25.7831, 0.22 ) }
    dend_40 { pt3dadd( 33.5847, -233.548, -26.088, 0.44 ) }
    dend_40 { pt3dadd( 34.3675, -234.128, -26.4773, 0.88 ) }
    dend_40 { pt3dadd( 35.1117, -234.661, -26.8846, 1.03 ) }
    dend_40 { pt3dadd( 35.595, -235.005, -27.1628, 1.03 ) }
    dend_40 { pt3dadd( 36.155, -235.438, -27.4956, 0.88 ) }
    dend_40 { pt3dadd( 36.7126, -235.846, -27.8349, 0.29 ) }
    dend_40 { pt3dadd( 37.1198, -236.12, -28.0675, 0.29 ) }
    dend_40 { pt3dadd( 37.7598, -236.502, -28.3863, 0.29 ) }
    dend_40 { pt3dadd( 38.5828, -236.942, -28.7469, 0.37 ) }
    dend_40 { pt3dadd( 39.2175, -237.244, -28.984, 0.37 ) }
    dend_40 { pt3dadd( 39.7846, -237.481, -29.1673, 0.29 ) }
    dend_40 { pt3dadd( 40.8903, -237.876, -29.4776, 0.29 ) }
    dend_40 { pt3dadd( 41.7586, -238.159, -29.7169, 0.81 ) }
    dend_40 { pt3dadd( 42.2439, -238.317, -29.8569, 0.81 ) }
    dend_40 { pt3dadd( 43.1762, -238.675, -30.1267, 0.59 ) }
    dend_40 { pt3dadd( 43.8583, -239.015, -30.3105, 0.29 ) }
    dend_40 { pt3dadd( 44.4452, -239.367, -30.4554, 0.29 ) }
    dend_40 { pt3dadd( 45.0628, -239.786, -30.5929, 0.66 ) }
    dend_40 { pt3dadd( 45.5223, -240.116, -30.6747, 0.66 ) }
    dend_40 { pt3dadd( 46.9033, -241.128, -30.8556, 0.29 ) }
    dend_40 { pt3dadd( 47.7898, -241.767, -30.9162, 0.29 ) }
    dend_40 { pt3dadd( 48.7227, -242.43, -30.9067, 0.29 ) }
    dend_40 { pt3dadd( 49.4394, -242.941, -30.8474, 0.29 ) }
    dend_40 { pt3dadd( 50.1597, -243.441, -30.7378, 0.88 ) }
    dend_40 { pt3dadd( 50.4856, -243.665, -30.6829, 0.88 ) }
    dend_40 { pt3dadd( 51.3619, -244.263, -30.5028, 0.66 ) }
    dend_40 { pt3dadd( 52.5748, -245.073, -30.2039, 0.29 ) }
    dend_40 { pt3dadd( 53.2045, -245.499, -30.022, 0.29 ) }
    dend_40 { pt3dadd( 53.9488, -246.021, -29.8018, 0.66 ) }
    dend_40 { pt3dadd( 54.5662, -246.478, -29.6454, 0.44 ) }
    dend_40 { pt3dadd( 62.7034, -253.376, -30.9422, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.3894, -179.951, 1.87957, 2.14 ) }
    dend_35 { pt3dadd( -21.9731, -181.376, 1.79185, 2.14 ) }
    dend_35 { pt3dadd( -22.4481, -182.675, 1.72024, 1.33 ) }
    dend_35 { pt3dadd( -22.8691, -183.954, 1.66172, 1.03 ) }
    dend_35 { pt3dadd( -23.1388, -184.926, 1.62338, 1.03 ) }
    dend_35 { pt3dadd( -23.3063, -185.588, 1.59842, 1.25 ) }
    dend_35 { pt3dadd( -23.4619, -186.236, 1.57615, 1.25 ) }
    dend_35 { pt3dadd( -23.686, -187.459, 1.53614, 0.96 ) }
    dend_35 { pt3dadd( -23.8373, -188.45, 1.52209, 0.96 ) }
    dend_35 { pt3dadd( -24.1083, -190.189, 1.51732, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -24.2642, -191.214, 1.53671, 0.88 ) }
    dend_35 { pt3dadd( -24.3838, -192.186, 1.56169, 0.96 ) }
    dend_35 { pt3dadd( -24.4839, -193.294, 1.59508, 0.96 ) }
    dend_35 { pt3dadd( -24.5439, -194.242, 1.63675, 0.74 ) }
    dend_35 { pt3dadd( -24.5821, -195.155, 1.68765, 0.52 ) }
    dend_35 { pt3dadd( -24.5999, -195.913, 1.74209, 0.52 ) }
    dend_35 { pt3dadd( -24.6088, -196.845, 1.82124, 0.37 ) }
    dend_35 { pt3dadd( -24.6118, -197.587, 1.88568, 0.74 ) }
    dend_35 { pt3dadd( -24.629, -198.393, 1.96291, 0.74 ) }
    dend_35 { pt3dadd( -24.6535, -199.302, 2.06377, 1.03 ) }
    dend_35 { pt3dadd( -24.6769, -199.88, 2.13474, 1.18 ) }
    dend_35 { pt3dadd( -24.7225, -200.68, 2.23124, 1.33 ) }
    dend_35 { pt3dadd( -24.7696, -201.283, 2.31117, 1.33 ) }
    dend_35 { pt3dadd( -24.7997, -201.926, 2.42242, 1.18 ) }
    dend_35 { pt3dadd( -24.8057, -202.866, 2.67355, 0.96 ) }
    dend_35 { pt3dadd( -24.7816, -203.587, 2.9364, 0.81 ) }
    dend_35 { pt3dadd( -24.7289, -204.315, 3.24945, 0.81 ) }
    dend_35 { pt3dadd( -24.6314, -205.115, 3.62117, 0.81 ) }
    dend_35 { pt3dadd( -24.5311, -205.816, 3.95146, 0.59 ) }
    dend_35 { pt3dadd( -24.3582, -206.972, 4.4683, 0.66 ) }
    dend_35 { pt3dadd( -24.3104, -207.465, 4.67212, 0.66 ) }
    dend_35 { pt3dadd( -24.3095, -208.347, 4.98034, 1.18 ) }
    dend_35 { pt3dadd( -24.4641, -209.254, 5.2068, 1.47 ) }
    dend_35 { pt3dadd( -24.7404, -210.035, 5.32759, 1.55 ) }
    dend_35 { pt3dadd( -25.0501, -210.601, 5.37974, 1.55 ) }
    dend_35 { pt3dadd( -25.6016, -211.363, 5.42652, 1.4 ) }
    dend_35 { pt3dadd( -26.3842, -212.246, 5.50959, 1.18 ) }
    dend_35 { pt3dadd( -27.3255, -213.179, 5.63129, 0.66 ) }
    dend_35 { pt3dadd( -28.1086, -213.911, 5.7548, 0.74 ) }
    dend_35 { pt3dadd( -29.1216, -214.83, 5.94692, 1.18 ) }
    dend_35 { pt3dadd( -29.9505, -215.57, 6.14532, 1.25 ) }
    dend_35 { pt3dadd( -30.806, -216.333, 6.40561, 1.25 ) }
    dend_35 { pt3dadd( -31.5155, -216.966, 6.68235, 1.25 ) }
    dend_35 { pt3dadd( -32.2246, -217.557, 7.00795, 1.33 ) }
    dend_35 { pt3dadd( -32.6263, -217.857, 7.22311, 1.33 ) }
    dend_35 { pt3dadd( -33.2559, -218.27, 7.63432, 1.03 ) }
    dend_35 { pt3dadd( -33.7828, -218.567, 8.04094, 0.74 ) }
    dend_35 { pt3dadd( -34.196, -218.771, 8.38964, 0.59 ) }
    dend_35 { pt3dadd( -34.7326, -219.042, 8.86901, 0.59 ) }
    dend_35 { pt3dadd( -35.263, -219.352, 9.35919, 0.88 ) }
    dend_35 { pt3dadd( -35.7789, -219.766, 9.87167, 1.18 ) }
    dend_35 { pt3dadd( -36.2403, -220.267, 10.3897, 1.18 ) }
    dend_35 { pt3dadd( -36.6306, -220.801, 10.8764, 1.18 ) }
    dend_35 { pt3dadd( -36.99, -221.392, 11.341, 1.18 ) }
    dend_35 { pt3dadd( -37.2658, -221.906, 11.6949, 1.18 ) }
    dend_35 { pt3dadd( -37.6491, -222.694, 12.1776, 0.81 ) }
    dend_35 { pt3dadd( -37.8814, -223.213, 12.4582, 0.59 ) }
    dend_35 { pt3dadd( -38.0982, -223.755, 12.7054, 0.52 ) }
    dend_35 { pt3dadd( -38.523, -224.907, 13.1497, 0.96 ) }
    dend_35 { pt3dadd( -38.774, -225.677, 13.3849, 1.18 ) }
    dend_35 { pt3dadd( -38.9911, -226.392, 13.5583, 1.18 ) }
    dend_35 { pt3dadd( -39.2841, -227.367, 13.7432, 0.88 ) }
    dend_35 { pt3dadd( -39.5783, -228.348, 13.8961, 0.59 ) }
    dend_35 { pt3dadd( -39.8218, -229.23, 14.0127, 0.59 ) }
    dend_35 { pt3dadd( -40.0874, -230.258, 14.1377, 0.59 ) }
    dend_35 { pt3dadd( -40.3343, -231.216, 14.2555, 0.74 ) }
    dend_35 { pt3dadd( -40.6224, -232.289, 14.3956, 1.33 ) }
    dend_35 { pt3dadd( -40.8819, -233.221, 14.5232, 1.69 ) }
    dend_35 { pt3dadd( -41.2156, -234.372, 14.6881, 1.77 ) }
    dend_35 { pt3dadd( -41.4069, -235.049, 14.7809, 1.77 ) }
    dend_35 { pt3dadd( -41.651, -235.901, 14.8757, 1.77 ) }
    dend_35 { pt3dadd( -41.8605, -236.72, 14.9287, 1.47 ) }
    dend_35 { pt3dadd( -42.0673, -237.627, 14.9456, 1.03 ) }
    dend_35 { pt3dadd( -42.2642, -238.519, 14.9342, 1.03 ) }
    dend_35 { pt3dadd( -42.5019, -239.56, 14.8967, 1.03 ) }
    dend_35 { pt3dadd( -42.7372, -240.639, 14.8498, 1.11 ) }
    dend_35 { pt3dadd( -42.9424, -241.656, 14.807, 1.33 ) }
    dend_35 { pt3dadd( -43.0919, -242.582, 14.7683, 1.03 ) }
    dend_35 { pt3dadd( -43.2294, -243.838, 14.7133, 0.81 ) }
    dend_35 { pt3dadd( -43.2872, -244.717, 14.6779, 1.03 ) }
    dend_35 { pt3dadd( -43.3147, -245.823, 14.6396, 0.81 ) }
    dend_35 { pt3dadd( -43.3099, -246.426, 14.6247, 0.81 ) }
    dend_35 { pt3dadd( -43.2628, -248.058, 14.5792, 0.74 ) }
    dend_35 { pt3dadd( -43.1835, -249.699, 14.5277, 0.74 ) }
    dend_35 { pt3dadd( -43.0932, -251.017, 14.4767, 0.74 ) }
    dend_35 { pt3dadd( -42.9642, -252.943, 14.4042, 0.74 ) }
    dend_35 { pt3dadd( -42.9069, -254.272, 14.3595, 0.74 ) }
    dend_35 { pt3dadd( -42.9014, -255.135, 14.3442, 1.18 ) }
    dend_35 { pt3dadd( -42.9534, -256.023, 14.3638, 1.4 ) }
    dend_35 { pt3dadd( -43.0926, -256.944, 14.4413, 1.4 ) }
    dend_35 { pt3dadd( -43.3247, -257.818, 14.5831, 1.47 ) }
    dend_35 { pt3dadd( -43.735, -258.784, 14.834, 1.55 ) }
    dend_35 { pt3dadd( -44.0712, -259.363, 15.0325, 1.55 ) }
    dend_35 { pt3dadd( -44.7167, -260.265, 15.4141, 1.11 ) }
    dend_35 { pt3dadd( -45.5774, -261.279, 15.9307, 0.88 ) }
    dend_35 { pt3dadd( -46.2015, -261.938, 16.3338, 0.88 ) }
    dend_35 { pt3dadd( -46.9128, -262.615, 16.8208, 1.03 ) }
    dend_35 { pt3dadd( -47.4042, -263.057, 17.1635, 1.03 ) }
    dend_35 { pt3dadd( -47.7915, -263.415, 17.4411, 1.03 ) }
    dend_35 { pt3dadd( -48.3436, -264.018, 17.8772, 0.81 ) }
    dend_35 { pt3dadd( -48.963, -264.87, 18.4043, 0.59 ) }
    dend_35 { pt3dadd( -49.6239, -266.038, 18.9984, 0.59 ) }
    dend_35 { pt3dadd( -50.0281, -266.944, 19.384, 0.88 ) }
    dend_35 { pt3dadd( -50.3185, -267.783, 19.6855, 0.88 ) }
    dend_35 { pt3dadd( -50.6776, -269.099, 20.0764, 0.74 ) }
    dend_35 { pt3dadd( -50.8679, -270.004, 20.2937, 0.96 ) }
    dend_35 { pt3dadd( -51.0231, -270.894, 20.4489, 1.11 ) }
    dend_35 { pt3dadd( -51.1115, -271.533, 20.5351, 1.11 ) }
    dend_35 { pt3dadd( -51.2039, -272.205, 20.6007, 0.88 ) }
    dend_35 { pt3dadd( -51.3633, -273.127, 20.6487, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -51.497, -273.774, 20.6692, 0.66 ) }
    dend_35 { pt3dadd( -51.7188, -274.863, 20.7053, 0.96 ) }
    dend_35 { pt3dadd( -51.8829, -275.695, 20.7269, 0.96 ) }
    dend_35 { pt3dadd( -52.0857, -276.76, 20.7457, 0.66 ) }
    dend_35 { pt3dadd( -52.2712, -277.731, 20.7613, 0.74 ) }
    dend_35 { pt3dadd( -52.5529, -279.29, 20.798, 0.96 ) }
    dend_35 { pt3dadd( -52.6987, -280.191, 20.8399, 0.96 ) }
    dend_35 { pt3dadd( -52.8437, -281.131, 20.8861, 0.96 ) }
    dend_35 { pt3dadd( -53.0258, -282.207, 20.9277, 0.66 ) }
    dend_35 { pt3dadd( -53.3114, -283.796, 20.9644, 0.66 ) }
    dend_35 { pt3dadd( -53.5699, -285.311, 20.9442, 0.66 ) }
    dend_35 { pt3dadd( -53.7182, -286.215, 20.8984, 0.81 ) }
    dend_35 { pt3dadd( -53.9628, -287.796, 20.7732, 0.74 ) }
    dend_35 { pt3dadd( -54.1432, -289.047, 20.637, 0.74 ) }
    dend_35 { pt3dadd( -54.3083, -290.366, 20.4556, 0.96 ) }
    dend_35 { pt3dadd( -54.4285, -291.472, 20.2786, 0.96 ) }
    dend_35 { pt3dadd( -54.5037, -292.206, 20.1664, 1.62 ) }
    dend_35 { pt3dadd( -54.5565, -292.611, 20.1294, 1.62 ) }
    dend_35 { pt3dadd( -54.6359, -293.144, 20.1354, 1.62 ) }
    dend_35 { pt3dadd( -54.7643, -293.926, 20.197, 1.4 ) }
    dend_35 { pt3dadd( -54.9212, -294.745, 20.303, 0.88 ) }
    dend_35 { pt3dadd( -55.1264, -295.793, 20.4666, 0.59 ) }
    dend_35 { pt3dadd( -55.391, -297.219, 20.7009, 0.81 ) }
    dend_35 { pt3dadd( -55.6007, -298.366, 20.8988, 0.96 ) }
    dend_35 { pt3dadd( -55.7619, -299.293, 21.0478, 0.96 ) }
    dend_35 { pt3dadd( -55.9454, -300.41, 21.2014, 1.11 ) }
    dend_35 { pt3dadd( -56.0698, -301.141, 21.2933, 1.11 ) }
    dend_35 { pt3dadd( -56.1799, -301.706, 21.3619, 1.33 ) }
    dend_35 { pt3dadd( -56.2992, -302.256, 21.4289, 1.33 ) }
    dend_35 { pt3dadd( -56.5406, -303.151, 21.5778, 1.03 ) }
    dend_35 { pt3dadd( -56.8362, -304.036, 21.7735, 0.66 ) }
    dend_35 { pt3dadd( -57.0838, -304.696, 21.944, 0.37 ) }
    dend_35 { pt3dadd( -57.2712, -305.178, 22.0746, 0.37 ) }
    dend_35 { pt3dadd( -57.4962, -305.809, 22.2374, 0.37 ) }
    dend_35 { pt3dadd( -57.696, -306.409, 22.3876, 1.03 ) }
    dend_35 { pt3dadd( -57.9113, -307.077, 22.551, 1.25 ) }
    dend_35 { pt3dadd( -58.0476, -307.572, 22.6609, 1.25 ) }
    dend_35 { pt3dadd( -58.2595, -308.498, 22.8369, 0.96 ) }
    dend_35 { pt3dadd( -58.4906, -309.662, 23.0279, 0.52 ) }
    dend_35 { pt3dadd( -58.6903, -310.709, 23.1831, 0.52 ) }
    dend_35 { pt3dadd( -58.9519, -312.168, 23.3729, 0.52 ) }
    dend_35 { pt3dadd( -59.1351, -313.356, 23.5025, 0.81 ) }
    dend_35 { pt3dadd( -59.2611, -314.222, 23.5957, 1.03 ) }
    dend_35 { pt3dadd( -59.3801, -315.005, 23.685, 1.03 ) }
    dend_35 { pt3dadd( -59.4775, -315.609, 23.7567, 0.81 ) }
    dend_35 { pt3dadd( -59.6099, -316.337, 23.8475, 0.81 ) }
    dend_35 { pt3dadd( -59.8327, -317.358, 23.9842, 0.59 ) }
    dend_35 { pt3dadd( -60.133, -318.43, 24.1505, 0.44 ) }
    dend_35 { pt3dadd( -60.6125, -319.779, 24.4209, 0.88 ) }
    dend_35 { pt3dadd( -60.8632, -320.357, 24.5649, 0.88 ) }
    dend_35 { pt3dadd( -61.245, -321.106, 24.786, 0.59 ) }
    dend_35 { pt3dadd( -61.6544, -321.745, 25.0287, 0.59 ) }
    dend_35 { pt3dadd( -62.3199, -322.547, 25.4152, 0.59 ) }
    dend_35 { pt3dadd( -63.0516, -323.252, 25.828, 0.81 ) }
    dend_35 { pt3dadd( -63.4731, -323.589, 26.0655, 0.81 ) }
    dend_35 { pt3dadd( -63.8151, -323.831, 26.2575, 0.81 ) }
    dend_35 { pt3dadd( -64.5939, -324.302, 26.689, 0.59 ) }
    dend_35 { pt3dadd( -65.455, -324.725, 27.1628, 0.88 ) }
    dend_35 { pt3dadd( -66.317, -325.066, 27.6306, 1.03 ) }
    dend_35 { pt3dadd( -67.1452, -325.343, 28.0728, 1.03 ) }
    dend_35 { pt3dadd( -67.8297, -325.53, 28.4427, 0.59 ) }
    dend_35 { pt3dadd( -68.4431, -325.678, 28.7849, 0.59 ) }
    dend_35 { pt3dadd( -68.9601, -325.805, 29.0826, 0.59 ) }
    dend_35 { pt3dadd( -69.3965, -325.912, 29.3526, 0.59 ) }
    dend_35 { pt3dadd( -69.857, -326.051, 29.6453, 0.59 ) }
    dend_35 { pt3dadd( -70.4527, -326.269, 30.0369, 0.44 ) }
    dend_35 { pt3dadd( -71.3354, -326.669, 30.633, 0.81 ) }
    dend_35 { pt3dadd( -72.0623, -327.069, 31.1413, 1.11 ) }
    dend_35 { pt3dadd( -72.8425, -327.581, 31.7103, 0.81 ) }
    dend_35 { pt3dadd( -73.6136, -328.174, 32.2887, 0.66 ) }
    dend_35 { pt3dadd( -73.9639, -328.482, 32.5553, 0.66 ) }
    dend_35 { pt3dadd( -74.3822, -328.902, 32.8764, 0.52 ) }
    dend_35 { pt3dadd( -74.8548, -329.429, 33.2485, 0.52 ) }
    dend_35 { pt3dadd( -75.3282, -330.026, 33.6271, 0.52 ) }
    dend_35 { pt3dadd( -75.7996, -330.668, 34.0096, 0.52 ) }
    dend_35 { pt3dadd( -76.0811, -331.093, 34.2418, 1.11 ) }
    dend_35 { pt3dadd( -76.7055, -332.128, 34.7477, 1.4 ) }
    dend_35 { pt3dadd( -77.0429, -332.748, 35.0158, 1.84 ) }
    dend_35 { pt3dadd( -77.4179, -333.498, 35.295, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.02186, -79.8996, -9.08005, 0.66 ) }
    dend_32 { pt3dadd( -9.08858, -81.2312, -9.05265, 0.66 ) }
    dend_32 { pt3dadd( -9.1431, -82.0516, -9.04015, 0.37 ) }
    dend_32 { pt3dadd( -9.17361, -82.5999, -9.05089, 0.81 ) }
    dend_32 { pt3dadd( -9.19908, -83.3085, -9.07824, 1.03 ) }
    dend_32 { pt3dadd( -9.22138, -83.9244, -9.10681, 1.11 ) }
    dend_32 { pt3dadd( -9.24882, -84.5816, -9.14822, 0.88 ) }
    dend_32 { pt3dadd( -9.281, -85.3383, -9.22338, 0.59 ) }
    dend_32 { pt3dadd( -9.29602, -86.2191, -9.33782, 0.29 ) }
    dend_32 { pt3dadd( -9.28712, -86.8577, -9.43758, 0.29 ) }
    dend_32 { pt3dadd( -9.2687, -87.1504, -9.48936, 0.29 ) }
    dend_32 { pt3dadd( -9.17818, -87.8102, -9.62874, 0.74 ) }
    dend_32 { pt3dadd( -9.04078, -88.4243, -9.7767, 1.11 ) }
    dend_32 { pt3dadd( -8.92746, -88.812, -9.87349, 1.11 ) }
    dend_32 { pt3dadd( -8.74217, -89.3827, -10.0168, 1.11 ) }
    dend_32 { pt3dadd( -8.5113, -90.045, -10.156, 0.81 ) }
    dend_32 { pt3dadd( -8.13158, -91.1386, -10.3354, 0.44 ) }
    dend_32 { pt3dadd( -7.79053, -92.178, -10.4564, 0.59 ) }
    dend_32 { pt3dadd( -7.61079, -92.8041, -10.5063, 0.88 ) }
    dend_32 { pt3dadd( -7.4577, -93.4633, -10.5324, 0.88 ) }
    dend_32 { pt3dadd( -7.29129, -94.4073, -10.5379, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.18199, -95.3341, -10.5045, 0.44 ) }
    dend_32 { pt3dadd( -7.13709, -96.0652, -10.4452, 1.03 ) }
    dend_32 { pt3dadd( -7.12215, -96.6772, -10.3858, 0.74 ) }
    dend_32 { pt3dadd( -7.11801, -97.4442, -10.3174, 0.52 ) }
    dend_32 { pt3dadd( -7.1215, -98.0377, -10.2749, 0.88 ) }
    dend_32 { pt3dadd( -7.13379, -98.5826, -10.2708, 1.18 ) }
    dend_32 { pt3dadd( -7.14494, -99.0546, -10.2765, 1.18 ) }
    dend_32 { pt3dadd( -7.16363, -99.5952, -10.2895, 0.88 ) }
    dend_32 { pt3dadd( -7.19947, -100.535, -10.3233, 0.29 ) }
    dend_32 { pt3dadd( -7.23156, -101.245, -10.3586, 0.29 ) }
    dend_32 { pt3dadd( -7.28395, -102.262, -10.4321, 1.03 ) }
    dend_32 { pt3dadd( -7.31419, -102.938, -10.4922, 1.47 ) }
    dend_32 { pt3dadd( -7.33405, -103.364, -10.5309, 1.47 ) }
    dend_32 { pt3dadd( -7.35256, -103.832, -10.574, 1.47 ) }
    dend_32 { pt3dadd( -7.36372, -104.532, -10.6361, 1.25 ) }
    dend_32 { pt3dadd( -7.36472, -105.389, -10.7016, 0.44 ) }
    dend_32 { pt3dadd( -7.35003, -106.095, -10.743, 0.44 ) }
    dend_32 { pt3dadd( -7.32824, -106.786, -10.7873, 0.44 ) }
    dend_32 { pt3dadd( -7.31202, -107.141, -10.8113, 0.59 ) }
    dend_32 { pt3dadd( -7.27154, -107.974, -10.8687, 0.59 ) }
    dend_32 { pt3dadd( -7.22897, -108.61, -10.9151, 0.37 ) }
    dend_32 { pt3dadd( -7.19219, -109.14, -10.9537, 0.81 ) }
    dend_32 { pt3dadd( -7.15926, -109.626, -10.9825, 1.03 ) }
    dend_32 { pt3dadd( -7.13739, -109.982, -10.9976, 1.03 ) }
    dend_32 { pt3dadd( -7.12084, -110.422, -11.0072, 0.59 ) }
    dend_32 { pt3dadd( -7.09113, -111.141, -11.0107, 0.22 ) }
    dend_32 { pt3dadd( -7.05701, -111.591, -11.0094, 0.22 ) }
    dend_32 { pt3dadd( -7.00237, -112.123, -11.0059, 0.22 ) }
    dend_32 { pt3dadd( -6.93301, -112.695, -11.0007, 0.66 ) }
    dend_32 { pt3dadd( -6.83888, -113.38, -10.9966, 0.88 ) }
    dend_32 { pt3dadd( -6.67883, -114.379, -10.9938, 0.88 ) }
    dend_32 { pt3dadd( -6.48363, -115.54, -10.9931, 0.96 ) }
    dend_32 { pt3dadd( -6.33368, -116.414, -11.0068, 1.18 ) }
    dend_32 { pt3dadd( -6.22372, -117.122, -11.0327, 0.66 ) }
    dend_32 { pt3dadd( -6.13886, -117.703, -11.0572, 0.52 ) }
    dend_32 { pt3dadd( -5.99969, -118.813, -11.1152, 0.52 ) }
    dend_32 { pt3dadd( -5.91047, -119.669, -11.1674, 0.81 ) }
    dend_32 { pt3dadd( -5.82998, -120.533, -11.2283, 0.52 ) }
    dend_32 { pt3dadd( -5.76904, -121.179, -11.2718, 0.52 ) }
    dend_32 { pt3dadd( -5.69146, -121.944, -11.3383, 1.47 ) }
    dend_32 { pt3dadd( -5.60298, -122.726, -11.4245, 1.77 ) }
    dend_32 { pt3dadd( -5.52497, -123.329, -11.515, 1.77 ) }
    dend_32 { pt3dadd( -5.46889, -123.676, -11.5758, 1.77 ) }
    dend_32 { pt3dadd( -5.35709, -124.25, -11.6805, 1.25 ) }
    dend_32 { pt3dadd( -5.2136, -124.915, -11.803, 0.81 ) }
    dend_32 { pt3dadd( -5.04335, -125.723, -11.9554, 0.44 ) }
    dend_32 { pt3dadd( -4.82458, -126.735, -12.1417, 0.37 ) }
    dend_32 { pt3dadd( -4.6903, -127.358, -12.2516, 0.52 ) }
    dend_32 { pt3dadd( -4.51744, -128.111, -12.3787, 0.52 ) }
    dend_32 { pt3dadd( -4.37914, -128.675, -12.4696, 0.66 ) }
    dend_32 { pt3dadd( -4.18211, -129.417, -12.5893, 0.66 ) }
    dend_32 { pt3dadd( -3.91545, -130.366, -12.7771, 0.88 ) }
    dend_32 { pt3dadd( -3.67376, -131.162, -12.9617, 1.25 ) }
    dend_32 { pt3dadd( -3.52875, -131.61, -13.0881, 1.25 ) }
    dend_32 { pt3dadd( -3.3924, -131.995, -13.2125, 1.25 ) }
    dend_32 { pt3dadd( -3.10654, -132.751, -13.4846, 1.11 ) }
    dend_32 { pt3dadd( -2.84275, -133.417, -13.7448, 0.74 ) }
    dend_32 { pt3dadd( -2.60357, -134.002, -13.9896, 0.29 ) }
    dend_32 { pt3dadd( -2.46304, -134.348, -14.1422, 0.29 ) }
    dend_32 { pt3dadd( -2.1327, -135.193, -14.5045, 0.44 ) }
    dend_32 { pt3dadd( -1.95293, -135.678, -14.6934, 0.88 ) }
    dend_32 { pt3dadd( -1.80917, -136.119, -14.8376, 1.33 ) }
    dend_32 { pt3dadd( -1.6584, -136.642, -14.9745, 1.47 ) }
    dend_32 { pt3dadd( -1.51578, -137.21, -15.0915, 1.47 ) }
    dend_32 { pt3dadd( -1.3994, -137.715, -15.1732, 1.25 ) }
    dend_32 { pt3dadd( -1.25054, -138.407, -15.2607, 0.44 ) }
    dend_32 { pt3dadd( -1.03987, -139.421, -15.3271, 0.29 ) }
    dend_32 { pt3dadd( -0.887177, -140.226, -15.3324, 0.29 ) }
    dend_32 { pt3dadd( -0.749441, -141.049, -15.298, 0.29 ) }
    dend_32 { pt3dadd( -0.6563, -141.704, -15.2439, 0.74 ) }
    dend_32 { pt3dadd( -0.606317, -142.169, -15.1901, 0.88 ) }
    dend_32 { pt3dadd( -0.551951, -143.112, -15.0504, 0.96 ) }
    dend_32 { pt3dadd( -0.556465, -143.918, -14.9202, 1.03 ) }
    dend_32 { pt3dadd( -0.601287, -144.525, -14.8321, 1.03 ) }
    dend_32 { pt3dadd( -0.678949, -145.129, -14.7461, 0.59 ) }
    dend_32 { pt3dadd( -0.77604, -145.775, -14.6609, 0.22 ) }
    dend_32 { pt3dadd( -0.8374, -146.182, -14.6197, 0.22 ) }
    dend_32 { pt3dadd( -0.969332, -147.118, -14.5755, 0.96 ) }
    dend_32 { pt3dadd( -1.04525, -147.673, -14.5653, 1.11 ) }
    dend_32 { pt3dadd( -1.11952, -148.283, -14.5393, 1.11 ) }
    dend_32 { pt3dadd( -1.1728, -148.867, -14.4937, 0.59 ) }
    dend_32 { pt3dadd( -1.20817, -149.46, -14.4326, 0.29 ) }
    dend_32 { pt3dadd( -1.22329, -149.967, -14.3659, 0.29 ) }
    dend_32 { pt3dadd( -1.23371, -150.39, -14.2978, 0.29 ) }
    dend_32 { pt3dadd( -1.25151, -151.307, -14.1321, 0.44 ) }
    dend_32 { pt3dadd( -1.26555, -152.084, -13.9713, 0.66 ) }
    dend_32 { pt3dadd( -1.27898, -152.905, -13.7934, 0.66 ) }
    dend_32 { pt3dadd( -1.28191, -153.498, -13.6698, 0.81 ) }
    dend_32 { pt3dadd( -1.28044, -154.157, -13.5473, 0.81 ) }
    dend_32 { pt3dadd( -1.27558, -154.787, -13.442, 0.52 ) }
    dend_32 { pt3dadd( -1.28696, -155.587, -13.3315, 0.66 ) }
    dend_32 { pt3dadd( -1.30473, -156.18, -13.2545, 0.66 ) }
    dend_32 { pt3dadd( -1.36439, -157.178, -13.1753, 0.37 ) }
    dend_32 { pt3dadd( -1.43761, -158.061, -13.1506, 0.37 ) }
    dend_32 { pt3dadd( -1.51414, -158.766, -13.1639, 1.03 ) }
    dend_32 { pt3dadd( -1.60567, -159.474, -13.2287, 1.47 ) }
    dend_32 { pt3dadd( -1.71485, -160.168, -13.3389, 1.62 ) }
    dend_32 { pt3dadd( -1.95024, -161.407, -13.6131, 0.88 ) }
    dend_32 { pt3dadd( -2.15351, -162.211, -13.8599, 0.59 ) }
    dend_32 { pt3dadd( -2.35355, -162.823, -14.0997, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -2.75835, -163.806, -14.5431, 0.29 ) }
    dend_32 { pt3dadd( -2.90114, -164.096, -14.6736, 0.29 ) }
    dend_32 { pt3dadd( -3.13843, -164.511, -14.8487, 0.29 ) }
    dend_32 { pt3dadd( -3.59725, -165.281, -15.1218, 0.29 ) }
    dend_32 { pt3dadd( -4.05388, -166.007, -15.3803, 0.59 ) }
    dend_32 { pt3dadd( -4.52956, -166.778, -15.6393, 0.59 ) }
    dend_32 { pt3dadd( -4.82862, -167.255, -15.7952, 0.44 ) }
    dend_32 { pt3dadd( -5.20093, -167.827, -15.9931, 0.44 ) }
    dend_32 { pt3dadd( -5.45067, -168.175, -16.147, 0.29 ) }
    dend_32 { pt3dadd( -5.81761, -168.671, -16.4119, 1.4 ) }
    dend_32 { pt3dadd( -6.36402, -169.235, -16.8433, 1.62 ) }
    dend_32 { pt3dadd( -6.87923, -169.618, -17.24, 1.4 ) }
    dend_32 { pt3dadd( -7.38724, -169.892, -17.611, 1.11 ) }
    dend_32 { pt3dadd( -8.2418, -170.254, -18.1953, 0.81 ) }
    dend_32 { pt3dadd( -8.71652, -170.44, -18.5155, 0.59 ) }
    dend_32 { pt3dadd( -9.23796, -170.664, -18.8874, 0.74 ) }
    dend_32 { pt3dadd( -9.73702, -170.938, -19.2644, 0.81 ) }
    dend_32 { pt3dadd( -10.1242, -171.292, -19.5817, 0.52 ) }
    dend_32 { pt3dadd( -10.4075, -171.652, -19.8381, 0.52 ) }
    dend_32 { pt3dadd( -10.6661, -172.055, -20.0672, 0.74 ) }
    dend_32 { pt3dadd( -11.0197, -172.628, -20.4034, 0.74 ) }
    dend_32 { pt3dadd( -11.2034, -172.985, -20.587, 0.74 ) }
    dend_32 { pt3dadd( -11.388, -173.389, -20.8007, 0.52 ) }
    dend_32 { pt3dadd( -11.6604, -174.025, -21.1026, 0.52 ) }
    dend_32 { pt3dadd( -11.8092, -174.375, -21.2561, 0.52 ) }
    dend_32 { pt3dadd( -12.0931, -175.062, -21.5126, 1.69 ) }
    dend_32 { pt3dadd( -12.2653, -175.516, -21.6459, 2.14 ) }
    dend_32 { pt3dadd( -12.5768, -176.479, -21.8646, 1.55 ) }
    dend_32 { pt3dadd( -12.8622, -177.49, -22.0401, 0.29 ) }
    dend_32 { pt3dadd( -13.0123, -178.081, -22.1187, 0.29 ) }
    dend_32 { pt3dadd( -13.2077, -178.895, -22.2027, 0.44 ) }
    dend_32 { pt3dadd( -13.3901, -179.671, -22.2545, 0.59 ) }
    dend_32 { pt3dadd( -13.5515, -180.36, -22.2836, 0.59 ) }
    dend_32 { pt3dadd( -13.7151, -181.062, -22.2858, 0.29 ) }
    dend_32 { pt3dadd( -13.8039, -181.439, -22.2877, 0.29 ) }
    dend_32 { pt3dadd( -13.9261, -181.966, -22.2905, 0.96 ) }
    dend_32 { pt3dadd( -14.0254, -182.428, -22.2932, 1.03 ) }
    dend_32 { pt3dadd( -14.1459, -183.071, -22.3007, 0.52 ) }
    dend_32 { pt3dadd( -14.2747, -183.909, -22.3157, 0.29 ) }
    dend_32 { pt3dadd( -14.3333, -184.386, -22.325, 0.81 ) }
    dend_32 { pt3dadd( -14.3903, -184.94, -22.3342, 0.96 ) }
    dend_32 { pt3dadd( -14.4301, -185.367, -22.3421, 0.96 ) }
    dend_32 { pt3dadd( -14.4986, -186.115, -22.3577, 0.29 ) }
    dend_32 { pt3dadd( -14.5911, -186.969, -22.3736, 0.29 ) }
    dend_32 { pt3dadd( -14.7003, -187.863, -22.4149, 1.47 ) }
    dend_32 { pt3dadd( -14.7785, -188.489, -22.4563, 1.92 ) }
    dend_32 { pt3dadd( -14.8134, -188.793, -22.4798, 1.92 ) }
    dend_32 { pt3dadd( -14.8979, -189.55, -22.5336, 1.33 ) }
    dend_32 { pt3dadd( -14.9823, -190.392, -22.5973, 0.29 ) }
    dend_32 { pt3dadd( -15.0626, -191.251, -22.669, 0.29 ) }
    dend_32 { pt3dadd( -15.1197, -191.937, -22.7353, 0.29 ) }
    dend_32 { pt3dadd( -15.237, -193.427, -22.8921, 0.29 ) }
    dend_32 { pt3dadd( -15.3074, -194.441, -22.9923, 1.4 ) }
    dend_32 { pt3dadd( -15.3427, -195.058, -23.0481, 2.14 ) }
    dend_32 { pt3dadd( -15.3549, -195.328, -23.07, 2.28 ) }
    dend_32 { pt3dadd( -15.3696, -195.768, -23.0968, 2.28 ) }
    dend_32 { pt3dadd( -15.387, -196.223, -23.1107, 1.92 ) }
    dend_32 { pt3dadd( -15.4213, -196.883, -23.0785, 0.88 ) }
    dend_32 { pt3dadd( -15.4788, -197.89, -22.9694, 0.29 ) }
    dend_32 { pt3dadd( -15.5144, -198.505, -22.8708, 0.29 ) }
    dend_32 { pt3dadd( -15.5524, -199.194, -22.7381, 0.29 ) }
    dend_32 { pt3dadd( -15.611, -200.272, -22.5068, 0.29 ) }
    dend_32 { pt3dadd( -15.6661, -201.376, -22.2684, 0.96 ) }
    dend_32 { pt3dadd( -15.6975, -202.115, -22.1165, 1.62 ) }
    dend_32 { pt3dadd( -15.7131, -202.534, -22.0334, 1.62 ) }
    dend_32 { pt3dadd( -15.7276, -202.928, -21.9641, 1.62 ) }
    dend_32 { pt3dadd( -15.7614, -203.777, -21.8499, 1.11 ) }
    dend_32 { pt3dadd( -15.8019, -204.82, -21.807, 0.29 ) }
    dend_32 { pt3dadd( -15.8421, -205.596, -21.8267, 0.29 ) }
    dend_32 { pt3dadd( -15.8813, -206.212, -21.8605, 0.59 ) }
    dend_32 { pt3dadd( -15.9067, -206.517, -21.8841, 0.66 ) }
    dend_32 { pt3dadd( -15.9445, -206.886, -21.9173, 0.66 ) }
    dend_32 { pt3dadd( -16.072, -207.901, -22.0158, 0.29 ) }
    dend_32 { pt3dadd( -16.2569, -209.076, -22.1553, 0.29 ) }
    dend_32 { pt3dadd( -16.4264, -209.987, -22.2726, 0.96 ) }
    dend_32 { pt3dadd( -16.5881, -210.704, -22.3632, 1.4 ) }
    dend_32 { pt3dadd( -16.7227, -211.241, -22.4241, 1.4 ) }
    dend_32 { pt3dadd( -16.8691, -211.796, -22.4777, 1.4 ) }
    dend_32 { pt3dadd( -17.0704, -212.529, -22.5303, 0.88 ) }
    dend_32 { pt3dadd( -17.3209, -213.426, -22.5888, 0.29 ) }
    dend_32 { pt3dadd( -17.5467, -214.246, -22.63, 0.29 ) }
    dend_32 { pt3dadd( -17.7848, -215.074, -22.6655, 0.44 ) }
    dend_32 { pt3dadd( -17.9477, -215.598, -22.6807, 0.66 ) }
    dend_32 { pt3dadd( -18.0867, -216.019, -22.6831, 0.66 ) }
    dend_32 { pt3dadd( -18.3396, -216.769, -22.6567, 0.29 ) }
    dend_32 { pt3dadd( -18.4895, -217.219, -22.6371, 0.29 ) }
    dend_32 { pt3dadd( -18.6826, -217.794, -22.6367, 0.29 ) }
    dend_32 { pt3dadd( -18.9618, -218.583, -22.6884, 0.29 ) }
    dend_32 { pt3dadd( -19.1293, -219.033, -22.7486, 0.52 ) }
    dend_32 { pt3dadd( -19.3557, -219.657, -22.8648, 0.66 ) }
    dend_32 { pt3dadd( -19.5369, -220.279, -22.9682, 0.66 ) }
    dend_32 { pt3dadd( -19.7322, -221.248, -23.1132, 1.4 ) }
    dend_32 { pt3dadd( -19.812, -222.098, -23.2386, 2.28 ) }
    dend_32 { pt3dadd( -19.816, -222.945, -23.364, 2.5 ) }
    dend_32 { pt3dadd( -19.7751, -223.421, -23.4209, 2.5 ) }
    dend_32 { pt3dadd( -19.4432, -225.087, -23.5577, 0.22 ) }
    dend_32 { pt3dadd( -19.2364, -225.76, -23.5775, 0.22 ) }
    dend_32 { pt3dadd( -18.8703, -226.613, -23.5534, 0.37 ) }
    dend_32 { pt3dadd( -18.593, -227.117, -23.5113, 0.44 ) }
    dend_32 { pt3dadd( -18.0661, -227.861, -23.4999, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -17.4789, -228.549, -23.5876, 0.88 ) }
    dend_32 { pt3dadd( -17.1345, -228.871, -23.7319, 1.4 ) }
    dend_32 { pt3dadd( -16.872, -229.103, -23.8946, 1.4 ) }
    dend_32 { pt3dadd( -16.5252, -229.433, -24.1846, 1.11 ) }
    dend_32 { pt3dadd( -15.4688, -230.571, -25.3165, 0.29 ) }
    dend_32 { pt3dadd( -15.1425, -230.982, -25.744, 0.29 ) }
    dend_32 { pt3dadd( -14.6593, -231.701, -26.4773, 0.81 ) }
    dend_32 { pt3dadd( -14.4274, -232.169, -26.8822, 0.81 ) }
    dend_32 { pt3dadd( -14.0715, -233.164, -27.6009, 0.22 ) }
    dend_32 { pt3dadd( -13.9659, -233.581, -27.8483, 0.22 ) }
    dend_32 { pt3dadd( -13.8607, -234.227, -28.1211, 0.44 ) }
    dend_32 { pt3dadd( -13.8185, -234.592, -28.2465, 0.59 ) }
    dend_32 { pt3dadd( -13.6941, -236.12, -28.668, 0.22 ) }
    dend_32 { pt3dadd( -13.6613, -236.654, -28.8067, 0.74 ) }
    dend_32 { pt3dadd( -13.64, -237.129, -28.9216, 1.03 ) }
    dend_32 { pt3dadd( -13.6117, -237.636, -29.0342, 1.03 ) }
    dend_32 { pt3dadd( -13.5821, -238.134, -29.1363, 0.74 ) }
    dend_32 { pt3dadd( -13.5513, -238.595, -29.2293, 0.37 ) }
    dend_32 { pt3dadd( -13.4593, -239.768, -29.4701, 0.22 ) }
    dend_32 { pt3dadd( -13.3792, -240.935, -29.7142, 0.22 ) }
    dend_32 { pt3dadd( -13.3315, -241.814, -29.894, 0.88 ) }
    dend_32 { pt3dadd( -13.3036, -242.462, -30.0257, 1.62 ) }
    dend_32 { pt3dadd( -13.293, -242.819, -30.0981, 1.84 ) }
    dend_32 { pt3dadd( -13.2902, -243.249, -30.1835, 1.84 ) }
    dend_32 { pt3dadd( -13.3084, -244.135, -30.3507, 0.52 ) }
    dend_32 { pt3dadd( -13.3559, -244.883, -30.4894, 0.22 ) }
    dend_32 { pt3dadd( -13.4223, -245.482, -30.6026, 0.22 ) }
    dend_32 { pt3dadd( -13.5015, -245.998, -30.6997, 0.37 ) }
    dend_32 { pt3dadd( -13.541, -246.199, -30.7318, 0.37 ) }
    dend_32 { pt3dadd( -13.6647, -246.694, -30.8093, 0.22 ) }
    dend_32 { pt3dadd( -13.7839, -247.097, -30.8699, 0.74 ) }
    dend_32 { pt3dadd( -13.93, -247.555, -30.9416, 0.74 ) }
    dend_32 { pt3dadd( -14.0706, -247.969, -31.0023, 0.59 ) }
    dend_32 { pt3dadd( -14.3945, -248.865, -31.1245, 0.22 ) }
    dend_32 { pt3dadd( -14.5578, -249.279, -31.1724, 0.22 ) }
    dend_32 { pt3dadd( -14.8031, -249.832, -31.2055, 0.59 ) }
    dend_32 { pt3dadd( -14.9987, -250.23, -31.2016, 0.59 ) }
    dend_32 { pt3dadd( -15.2082, -250.64, -31.1565, 0.29 ) }
    dend_32 { pt3dadd( -15.4382, -251.058, -31.0866, 0.22 ) }
    dend_32 { pt3dadd( -15.7978, -251.634, -31.0007, 0.37 ) }
    dend_32 { pt3dadd( -16.2789, -252.325, -30.9065, 0.44 ) }
    dend_32 { pt3dadd( -16.7295, -252.815, -30.8916, 0.59 ) }
    dend_32 { pt3dadd( -17.3261, -253.311, -30.9568, 0.37 ) }
    dend_32 { pt3dadd( -17.7045, -253.527, -31.0461, 0.22 ) }
    dend_32 { pt3dadd( -18.6786, -253.855, -31.3842, 2.21 ) }
    dend_32 { pt3dadd( -19.0554, -253.888, -31.5555, 2.5 ) }
    dend_32 { pt3dadd( -20.5444, -253.632, -32.3549, 0.22 ) }
    dend_32 { pt3dadd( -21.0066, -253.459, -32.6279, 0.22 ) }
    dend_32 { pt3dadd( -21.6337, -253.083, -33.0598, 0.66 ) }
    dend_32 { pt3dadd( -21.9342, -252.842, -33.2929, 0.66 ) }
    dend_32 { pt3dadd( -22.3608, -252.431, -33.6523, 0.37 ) }
    dend_32 { pt3dadd( -22.9558, -251.825, -34.1959, 1.92 ) }
    dend_32 { pt3dadd( -23.1663, -251.611, -34.396, 1.92 ) }
    dend_32 { pt3dadd( -24.2452, -250.701, -35.4665, 0.44 ) }
    dend_32 { pt3dadd( -24.7246, -250.376, -35.9464, 0.59 ) }
    dend_32 { pt3dadd( -25.0143, -250.235, -36.2104, 0.37 ) }
    dend_32 { pt3dadd( -25.466, -250.116, -36.5567, 0.37 ) }
    dend_32 { pt3dadd( -25.9339, -250.05, -36.8946, 0.22 ) }
    dend_32 { pt3dadd( -27.0547, -250.015, -37.5944, 0.29 ) }
    dend_32 { pt3dadd( -27.4474, -250.07, -37.7711, 0.22 ) }
    dend_32 { pt3dadd( -28.0919, -250.194, -38.0149, 0.22 ) }
    dend_32 { pt3dadd( -28.9821, -250.36, -38.3238, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.02186, -79.8996, -9.08005, 0.74 ) }
    dend_31 { pt3dadd( -10.792, -81.1597, -9.06509, 0.74 ) }
    dend_31 { pt3dadd( -11.4938, -81.609, -9.05926, 0.74 ) }
    dend_31 { pt3dadd( -12.5081, -82.1709, -9.08011, 0.74 ) }
    dend_31 { pt3dadd( -13.2187, -82.4987, -9.11275, 0.52 ) }
    dend_31 { pt3dadd( -13.9587, -82.7316, -9.18719, 0.52 ) }
    dend_31 { pt3dadd( -14.6688, -82.8815, -9.2936, 0.88 ) }
    dend_31 { pt3dadd( -15.2662, -82.8323, -9.48345, 0.88 ) }
    dend_31 { pt3dadd( -16.2212, -82.5847, -9.8965, 0.59 ) }
    dend_31 { pt3dadd( -16.8168, -82.3751, -10.1961, 0.37 ) }
    dend_31 { pt3dadd( -17.733, -82.0842, -10.7161, 0.37 ) }
    dend_31 { pt3dadd( -18.2873, -81.9769, -11.0833, 1.11 ) }
    dend_31 { pt3dadd( -18.7509, -82.0047, -11.4319, 1.47 ) }
    dend_31 { pt3dadd( -19.1992, -82.1192, -11.7714, 1.47 ) }
    dend_31 { pt3dadd( -19.5273, -82.2389, -12.0045, 1.47 ) }
    dend_31 { pt3dadd( -20.281, -82.5211, -12.5131, 0.96 ) }
    dend_31 { pt3dadd( -20.9557, -82.7183, -12.9363, 0.59 ) }
    dend_31 { pt3dadd( -21.5793, -82.8236, -13.2722, 0.59 ) }
    dend_31 { pt3dadd( -22.23, -82.878, -13.543, 0.59 ) }
    dend_31 { pt3dadd( -22.9182, -82.9307, -13.8041, 0.81 ) }
    dend_31 { pt3dadd( -23.5736, -82.9827, -14.035, 0.81 ) }
    dend_31 { pt3dadd( -24.0876, -83.0218, -14.1794, 0.81 ) }
    dend_31 { pt3dadd( -24.6975, -83.0925, -14.33, 0.81 ) }
    dend_31 { pt3dadd( -25.3566, -83.3988, -14.5888, 0.22 ) }
    dend_31 { pt3dadd( -25.7709, -84.1126, -14.9547, 0.22 ) }
    dend_31 { pt3dadd( -26.0252, -84.6855, -15.2633, 0.66 ) }
    dend_31 { pt3dadd( -26.1585, -85.0273, -15.4578, 0.88 ) }
    dend_31 { pt3dadd( -26.3478, -85.5235, -15.7638, 0.88 ) }
    dend_31 { pt3dadd( -26.6204, -86.1017, -16.2542, 0.44 ) }
    dend_31 { pt3dadd( -27.0412, -86.668, -16.9244, 1.4 ) }
    dend_31 { pt3dadd( -27.4487, -86.968, -17.5002, 2.14 ) }
    dend_31 { pt3dadd( -27.6329, -87.0406, -17.7544, 2.58 ) }
    dend_31 { pt3dadd( -28.0249, -87.0908, -18.2666, 2.36 ) }
    dend_31 { pt3dadd( -29.0926, -87.0661, -19.6489, 1.69 ) }
    dend_31 { pt3dadd( -29.6584, -86.9998, -20.3551, 0.37 ) }
    dend_31 { pt3dadd( -30.3613, -86.8756, -21.1358, 0.37 ) }
    dend_31 { pt3dadd( -30.9438, -86.7673, -21.7195, 0.37 ) }
    dend_31 { pt3dadd( -32.1338, -86.5979, -22.8002, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -32.6295, -86.5607, -23.2163, 2.14 ) }
    dend_31 { pt3dadd( -33.1301, -86.5767, -23.6015, 2.5 ) }
    dend_31 { pt3dadd( -34.6017, -86.8014, -24.7709, 0.44 ) }
    dend_31 { pt3dadd( -35.0581, -86.9215, -25.144, 0.44 ) }
    dend_31 { pt3dadd( -35.7523, -87.1254, -25.7526, 0.44 ) }
    dend_31 { pt3dadd( -36.3785, -87.2875, -26.348, 0.44 ) }
    dend_31 { pt3dadd( -37.019, -87.4006, -26.9845, 1.4 ) }
    dend_31 { pt3dadd( -37.7141, -87.4884, -27.7062, 2.06 ) }
    dend_31 { pt3dadd( -38.329, -87.557, -28.4022, 2.06 ) }
    dend_31 { pt3dadd( -39.0753, -87.5856, -29.2934, 0.66 ) }
    dend_31 { pt3dadd( -39.6525, -87.582, -30.051, 0.81 ) }
    dend_31 { pt3dadd( -40.262, -87.5756, -30.9335, 0.52 ) }
    dend_31 { pt3dadd( -40.7394, -87.6093, -31.7707, 1.77 ) }
    dend_31 { pt3dadd( -41.039, -87.686, -32.4389, 2.28 ) }
    dend_31 { pt3dadd( -41.7984, -88.1479, -34.7228, 1.33 ) }
    dend_31 { pt3dadd( -42.0032, -88.4219, -35.6278, 1.77 ) }
    dend_31 { pt3dadd( -42.0955, -88.6204, -36.2096, 1.77 ) }
    dend_31 { pt3dadd( -42.236, -89.0223, -37.3332, 0.74 ) }
    dend_31 { pt3dadd( -42.3338, -89.3507, -38.2271, 0.52 ) }
    dend_31 { pt3dadd( -42.4946, -89.8766, -39.521, 0.52 ) }
    dend_31 { pt3dadd( -42.666, -90.5078, -40.8263, 0.88 ) }
    dend_31 { pt3dadd( -42.8994, -91.1158, -42.0164, 1.47 ) }
    dend_31 { pt3dadd( -43.1852, -91.7202, -43.1289, 0.22 ) }
    dend_31 { pt3dadd( -43.3496, -92.0348, -43.6619, 0.22 ) }
    dend_31 { pt3dadd( -43.5728, -92.4658, -44.2986, 0.81 ) }
    dend_31 { pt3dadd( -43.7949, -92.9366, -44.8742, 0.96 ) }
    dend_31 { pt3dadd( -44.0783, -93.5667, -45.5425, 1.55 ) }
    dend_31 { pt3dadd( -44.3433, -94.1981, -46.1101, 1.55 ) }
    dend_31 { pt3dadd( -44.633, -94.8865, -46.6999, 0.37 ) }
    dend_31 { pt3dadd( -44.8424, -95.3752, -47.1278, 0.74 ) }
    dend_31 { pt3dadd( -45.1135, -95.9781, -47.6964, 0.81 ) }
    dend_31 { pt3dadd( -45.4512, -96.7702, -48.4842, 0.29 ) }
    dend_31 { pt3dadd( -45.5895, -97.1508, -48.8638, 0.96 ) }
    dend_31 { pt3dadd( -45.7588, -97.7089, -49.4129, 1.33 ) }
    dend_31 { pt3dadd( -45.9364, -98.4918, -50.1768, 0.74 ) }
    dend_31 { pt3dadd( -46.0239, -99.1457, -50.7944, 0.59 ) }
    dend_31 { pt3dadd( -46.053, -100.181, -51.7189, 0.29 ) }
    dend_31 { pt3dadd( -45.9869, -100.853, -52.2498, 0.29 ) }
    dend_31 { pt3dadd( -45.8578, -101.474, -52.7096, 0.29 ) }
    dend_31 { pt3dadd( -45.7054, -101.951, -53.0168, 1.18 ) }
    dend_31 { pt3dadd( -45.5115, -102.399, -53.2807, 1.69 ) }
    dend_31 { pt3dadd( -45.1613, -103.049, -53.6288, 1.33 ) }
    dend_31 { pt3dadd( -44.6047, -103.964, -54.1063, 0.22 ) }
    dend_31 { pt3dadd( -44.3437, -104.381, -54.332, 0.22 ) }
    dend_31 { pt3dadd( -44.0304, -104.923, -54.6264, 0.96 ) }
    dend_31 { pt3dadd( -43.8376, -105.306, -54.8339, 1.11 ) }
    dend_31 { pt3dadd( -43.5113, -106.042, -55.2232, 0.52 ) }
    dend_31 { pt3dadd( -43.047, -107.231, -55.8314, 0.22 ) }
    dend_31 { pt3dadd( -42.8485, -107.796, -56.1155, 0.22 ) }
    dend_31 { pt3dadd( -42.655, -108.415, -56.4281, 0.88 ) }
    dend_31 { pt3dadd( -42.5288, -108.866, -56.6771, 1.03 ) }
    dend_31 { pt3dadd( -42.3274, -109.646, -57.1439, 0.22 ) }
    dend_31 { pt3dadd( -42.2338, -110.005, -57.3709, 0.22 ) }
    dend_31 { pt3dadd( -42.085, -110.528, -57.7137, 0.66 ) }
    dend_31 { pt3dadd( -41.9047, -111.111, -58.0919, 0.74 ) }
    dend_31 { pt3dadd( -41.4602, -112.464, -58.9361, 0.22 ) }
    dend_31 { pt3dadd( -41.1478, -113.451, -59.4858, 0.22 ) }
    dend_31 { pt3dadd( -40.821, -114.71, -60.1021, 0.96 ) }
    dend_31 { pt3dadd( -40.721, -115.188, -60.3089, 1.25 ) }
    dend_31 { pt3dadd( -40.6413, -115.832, -60.5397, 1.25 ) }
    dend_31 { pt3dadd( -40.5917, -116.79, -60.806, 0.66 ) }
    dend_31 { pt3dadd( -40.6326, -117.974, -61.062, 0.15 ) }
    dend_31 { pt3dadd( -40.7844, -118.988, -61.2607, 0.37 ) }
    dend_31 { pt3dadd( -40.9025, -119.46, -61.3624, 0.37 ) }
    dend_31 { pt3dadd( -41.4503, -121.182, -61.7792, 0.22 ) }
    dend_31 { pt3dadd( -41.5534, -121.449, -61.8571, 0.74 ) }
    dend_31 { pt3dadd( -41.7983, -122.015, -62.0536, 0.88 ) }
    dend_31 { pt3dadd( -42.6335, -123.808, -62.7418, 0.22 ) }
    dend_31 { pt3dadd( -42.9564, -124.482, -63.0044, 0.74 ) }
    dend_31 { pt3dadd( -43.2792, -125.136, -63.2551, 0.74 ) }
    dend_31 { pt3dadd( -43.9863, -126.557, -63.8107, 0.22 ) }
    dend_31 { pt3dadd( -44.5751, -127.75, -64.2619, 0.22 ) }
    dend_31 { pt3dadd( -45.235, -129.124, -64.7113, 0.22 ) }
    dend_31 { pt3dadd( -45.8301, -130.426, -65.0582, 0.22 ) }
    dend_31 { pt3dadd( -46.1417, -131.136, -65.2043, 0.88 ) }
    dend_31 { pt3dadd( -46.3745, -131.7, -65.2884, 1.11 ) }
    dend_31 { pt3dadd( -46.5813, -132.275, -65.3328, 1.11 ) }
    dend_31 { pt3dadd( -47.0196, -133.681, -65.373, 0.15 ) }
    dend_31 { pt3dadd( -47.316, -134.822, -65.3788, 0.15 ) }
    dend_31 { pt3dadd( -47.4601, -135.456, -65.3732, 0.81 ) }
    dend_31 { pt3dadd( -47.5748, -136.01, -65.3653, 0.96 ) }
    dend_31 { pt3dadd( -47.9599, -138.079, -65.5659, 0.22 ) }
    dend_31 { pt3dadd( -48.1241, -139.051, -65.6847, 0.22 ) }
    dend_31 { pt3dadd( -48.2881, -140.124, -65.8807, 0.22 ) }
    dend_31 { pt3dadd( -48.3485, -140.554, -65.9802, 1.18 ) }
    dend_31 { pt3dadd( -48.4028, -140.964, -66.1013, 1.18 ) }
    dend_31 { pt3dadd( -48.8042, -143.979, -67.4167, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.9465, 162.631, -42.5757, 0.37 ) }
    dend_26 { pt3dadd( 26.4514, 161.849, -42.0718, 0.37 ) }
    dend_26 { pt3dadd( 26.8611, 161.261, -41.7134, 0.52 ) }
    dend_26 { pt3dadd( 27.4416, 160.464, -41.2327, 0.74 ) }
    dend_26 { pt3dadd( 27.9115, 159.832, -40.8668, 1.11 ) }
    dend_26 { pt3dadd( 28.1866, 159.476, -40.6577, 1.11 ) }
    dend_26 { pt3dadd( 28.5865, 158.96, -40.3505, 0.81 ) }
    dend_26 { pt3dadd( 29.5067, 157.852, -39.6008, 0.22 ) }
    dend_26 { pt3dadd( 29.9479, 157.31, -39.2378, 0.22 ) }
    dend_26 { pt3dadd( 30.2221, 156.943, -39.0214, 0.66 ) }
    dend_26 { pt3dadd( 30.4986, 156.533, -38.7995, 0.66 ) }
    dend_26 { pt3dadd( 30.7638, 156.104, -38.5827, 0.66 ) }
    dend_26 { pt3dadd( 31.2524, 155.246, -38.1465, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 31.6924, 154.396, -37.7144, 0.22 ) }
    dend_26 { pt3dadd( 32.1421, 153.447, -37.2565, 0.22 ) }
    dend_26 { pt3dadd( 32.3441, 152.986, -37.0436, 0.44 ) }
    dend_26 { pt3dadd( 32.4702, 152.665, -36.9189, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 25.9465, 162.631, -42.5757, 0.22 ) }
    dend_25 { pt3dadd( 27.5235, 162.703, -42.5248, 0.22 ) }
    dend_25 { pt3dadd( 27.885, 162.742, -42.5295, 0.44 ) }
    dend_25 { pt3dadd( 29.5442, 163.012, -42.5736, 0.22 ) }
    dend_25 { pt3dadd( 30.258, 163.15, -42.6156, 0.59 ) }
    dend_25 { pt3dadd( 30.8057, 163.261, -42.6744, 0.59 ) }
    dend_25 { pt3dadd( 33.1549, 163.74, -42.9266, 0.22 ) }
    dend_25 { pt3dadd( 35.8694, 164.329, -43.2863, 0.22 ) }
    dend_25 { pt3dadd( 36.8412, 164.565, -43.4382, 0.66 ) }
    dend_25 { pt3dadd( 37.6024, 164.781, -43.5894, 0.81 ) }
    dend_25 { pt3dadd( 38.7539, 165.129, -43.8525, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 17.5446, 231.271, 26.9561, 0.59 ) }
    dend_19 { pt3dadd( 19.1342, 232.507, 27.014, 0.59 ) }
    dend_19 { pt3dadd( 19.6461, 232.923, 27.0508, 0.44 ) }
    dend_19 { pt3dadd( 20.7143, 233.84, 27.1049, 0.22 ) }
    dend_19 { pt3dadd( 21.6294, 234.691, 27.158, 0.81 ) }
    dend_19 { pt3dadd( 22.1152, 235.161, 27.1721, 0.96 ) }
    dend_19 { pt3dadd( 22.3405, 235.383, 27.1725, 0.96 ) }
    dend_19 { pt3dadd( 23.0379, 236.166, 27.1595, 0.22 ) }
    dend_19 { pt3dadd( 24.0388, 237.439, 27.034, 0.22 ) }
    dend_19 { pt3dadd( 24.8653, 238.637, 26.8403, 1.11 ) }
    dend_19 { pt3dadd( 25.2751, 239.308, 26.7149, 1.47 ) }
    dend_19 { pt3dadd( 25.453, 239.64, 26.6326, 1.47 ) }
    dend_19 { pt3dadd( 26.1037, 241.098, 26.2235, 0.22 ) }
    dend_19 { pt3dadd( 26.5852, 242.44, 25.7995, 0.22 ) }
    dend_19 { pt3dadd( 26.8132, 243.232, 25.5342, 0.66 ) }
    dend_19 { pt3dadd( 26.9126, 243.627, 25.3901, 0.66 ) }
    dend_19 { pt3dadd( 27.2826, 245.512, 24.6915, 0.22 ) }
    dend_19 { pt3dadd( 27.5413, 247.232, 24.048, 0.22 ) }
    dend_19 { pt3dadd( 27.6455, 248.213, 23.6645, 0.22 ) }
    dend_19 { pt3dadd( 27.7332, 249.354, 23.2135, 1.47 ) }
    dend_19 { pt3dadd( 27.7531, 250.004, 22.9605, 1.47 ) }
    dend_19 { pt3dadd( 27.7027, 252.198, 22.1549, 0.22 ) }
    dend_19 { pt3dadd( 27.6457, 252.91, 21.903, 0.81 ) }
    dend_19 { pt3dadd( 27.5592, 253.507, 21.6976, 0.81 ) }
    dend_19 { pt3dadd( 27.2554, 254.965, 21.2257, 0.22 ) }
    dend_19 { pt3dadd( 26.9541, 256.12, 20.8612, 0.22 ) }
    dend_19 { pt3dadd( 26.5909, 257.319, 20.4887, 1.47 ) }
    dend_19 { pt3dadd( 26.4272, 257.816, 20.3172, 1.84 ) }
    dend_19 { pt3dadd( 25.8001, 259.624, 19.6753, 0.22 ) }
    dend_19 { pt3dadd( 25.2866, 261.009, 19.1787, 0.22 ) }
    dend_19 { pt3dadd( 25.0891, 261.489, 18.9954, 0.22 ) }
    dend_19 { pt3dadd( 24.5591, 262.75, 18.4621, 1.55 ) }
    dend_19 { pt3dadd( 24.2222, 263.511, 18.1053, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.5446, 231.271, 26.9561, 0.22 ) }
    dend_18 { pt3dadd( 18.3913, 233.683, 27.0631, 0.22 ) }
    dend_18 { pt3dadd( 18.8716, 234.992, 27.1416, 0.22 ) }
    dend_18 { pt3dadd( 19.2512, 236.005, 27.2128, 0.96 ) }
    dend_18 { pt3dadd( 19.4169, 236.445, 27.2485, 1.18 ) }
    dend_18 { pt3dadd( 19.5883, 236.899, 27.2897, 1.18 ) }
    dend_18 { pt3dadd( 19.864, 237.641, 27.363, 0.22 ) }
    dend_18 { pt3dadd( 20.0669, 238.168, 27.4337, 0.44 ) }
    dend_18 { pt3dadd( 20.1638, 238.437, 27.4659, 0.44 ) }
    dend_18 { pt3dadd( 20.4217, 239.215, 27.5528, 0.22 ) }
    dend_18 { pt3dadd( 20.6395, 239.899, 27.6284, 0.44 ) }
    dend_18 { pt3dadd( 20.8768, 240.656, 27.7124, 0.44 ) }
    dend_18 { pt3dadd( 21.5629, 242.975, 27.9705, 0.22 ) }
    dend_18 { pt3dadd( 22.1311, 244.931, 28.1699, 0.22 ) }
    dend_18 { pt3dadd( 22.3467, 245.666, 28.2358, 0.66 ) }
    dend_18 { pt3dadd( 22.4662, 246.07, 28.2666, 0.74 ) }
    dend_18 { pt3dadd( 22.6642, 246.715, 28.2974, 0.22 ) }
    dend_18 { pt3dadd( 23.1705, 248.295, 28.3396, 0.22 ) }
    dend_18 { pt3dadd( 23.4702, 249.224, 28.3503, 1.03 ) }
    dend_18 { pt3dadd( 23.6706, 249.842, 28.3498, 1.25 ) }
    dend_18 { pt3dadd( 23.8219, 250.309, 28.3458, 1.25 ) }
    dend_18 { pt3dadd( 24.332, 251.881, 28.3218, 0.22 ) }
    dend_18 { pt3dadd( 25.1804, 254.468, 28.2718, 0.22 ) }
    dend_18 { pt3dadd( 25.4709, 255.34, 28.256, 0.74 ) }
    dend_18 { pt3dadd( 25.632, 255.841, 28.2588, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.9646, 91.0539, 24.6631, 0.37 ) }
    dend_16 { pt3dadd( 11.798, 99.9228, 29.8828, 0.37 ) }
    dend_16 { pt3dadd( 16.5828, 108.258, 35.1959, 0.37 ) }
    dend_16 { pt3dadd( 19.7931, 115.803, 42.5008, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.9646, 91.0539, 24.6631, 0.22 ) }
    dend_15 { pt3dadd( 10.5297, 95.8854, 25.1401, 0.37 ) }
    dend_15 { pt3dadd( 13.548, 100.471, 25.0268, 0.37 ) }
    dend_15 { pt3dadd( 16.8258, 104.865, 24.7032, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 92.7602, 1.39071, 0.980523, 0.37 ) }
    dend_10 { pt3dadd( 100.178, 0.60454, -0.0332518, 0.37 ) }
    dend_10 { pt3dadd( 107.684, 0.904154, -0.520715, 0.37 ) }
    dend_10 { pt3dadd( 115.162, 1.58246, 0.00504933, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 92.7602, 1.39071, 0.980523, 0.22 ) }
    dend_9 { pt3dadd( 100.611, 0.112345, 0.347213, 0.37 ) }
    dend_9 { pt3dadd( 108.545, 0.300751, -0.485491, 0.37 ) }
    dend_9 { pt3dadd( 116.506, -0.0286449, -0.930084, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 53.4697, 10.7627, 2.25067, 0.52 ) }
    dend_5 { pt3dadd( 54.757, 10.9836, 2.62595, 0.52 ) }
    dend_5 { pt3dadd( 55.259, 11.0444, 2.77115, 0.52 ) }
    dend_5 { pt3dadd( 55.7827, 11.082, 2.95327, 0.52 ) }
    dend_5 { pt3dadd( 56.7889, 11.1319, 3.32999, 0.52 ) }
    dend_5 { pt3dadd( 57.3917, 11.1433, 3.56482, 0.88 ) }
    dend_5 { pt3dadd( 58.3151, 11.1446, 3.91265, 0.88 ) }
    dend_5 { pt3dadd( 58.9992, 11.145, 4.16018, 0.88 ) }
    dend_5 { pt3dadd( 59.7325, 11.0582, 4.41035, 0.81 ) }
    dend_5 { pt3dadd( 60.2067, 10.9084, 4.52325, 0.81 ) }
    dend_5 { pt3dadd( 60.924, 10.5253, 4.62235, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 61.4988, 10.109, 4.63191, 0.59 ) }
    dend_5 { pt3dadd( 62.1153, 9.5866, 4.55753, 0.59 ) }
    dend_5 { pt3dadd( 62.7244, 9.04152, 4.4095, 0.74 ) }
    dend_5 { pt3dadd( 63.6742, 8.1157, 4.0884, 0.66 ) }
    dend_5 { pt3dadd( 64.0637, 7.70065, 3.9362, 0.66 ) }
    dend_5 { pt3dadd( 64.6531, 7.01637, 3.68201, 0.52 ) }
    dend_5 { pt3dadd( 65.0526, 6.5444, 3.50127, 0.52 ) }
    dend_5 { pt3dadd( 65.5667, 5.96302, 3.26419, 0.81 ) }
    dend_5 { pt3dadd( 66.2055, 5.24305, 2.9595, 0.81 ) }
    dend_5 { pt3dadd( 66.6289, 4.73964, 2.75999, 0.81 ) }
    dend_5 { pt3dadd( 67.1401, 4.07331, 2.49842, 0.81 ) }
    dend_5 { pt3dadd( 67.7525, 3.18274, 2.16291, 0.88 ) }
    dend_5 { pt3dadd( 68.2416, 2.38794, 1.87638, 1.11 ) }
    dend_5 { pt3dadd( 68.5417, 1.86387, 1.68715, 1.11 ) }
    dend_5 { pt3dadd( 69.0935, 0.803024, 1.31598, 0.88 ) }
    dend_5 { pt3dadd( 69.4706, -0.0542379, 1.0545, 0.96 ) }
    dend_5 { pt3dadd( 69.7146, -0.735037, 0.890703, 0.96 ) }
    dend_5 { pt3dadd( 69.8851, -1.31287, 0.78603, 0.96 ) }
    dend_5 { pt3dadd( 70.0264, -1.84608, 0.709515, 0.66 ) }
    dend_5 { pt3dadd( 70.2531, -2.70229, 0.634088, 0.66 ) }
    dend_5 { pt3dadd( 70.5891, -3.83788, 0.596202, 0.81 ) }
    dend_5 { pt3dadd( 70.9299, -4.73819, 0.600328, 1.11 ) }
    dend_5 { pt3dadd( 71.398, -5.75156, 0.640459, 0.96 ) }
    dend_5 { pt3dadd( 71.8016, -6.46549, 0.657829, 0.81 ) }
    dend_5 { pt3dadd( 72.4122, -7.3574, 0.662152, 0.81 ) }
    dend_5 { pt3dadd( 73.1705, -8.26332, 0.635327, 0.59 ) }
    dend_5 { pt3dadd( 73.8255, -8.93064, 0.580784, 0.37 ) }
    dend_5 { pt3dadd( 74.4341, -9.49054, 0.503031, 0.37 ) }
    dend_5 { pt3dadd( 75.3389, -10.2877, 0.346831, 0.59 ) }
    dend_5 { pt3dadd( 75.8347, -10.7246, 0.222353, 0.88 ) }
    dend_5 { pt3dadd( 76.1088, -10.9752, 0.127304, 1.11 ) }
    dend_5 { pt3dadd( 76.4596, -11.326, -0.00403718, 1.11 ) }
    dend_5 { pt3dadd( 76.9243, -11.8243, -0.166366, 0.74 ) }
    dend_5 { pt3dadd( 77.2976, -12.2036, -0.291565, 0.74 ) }
    dend_5 { pt3dadd( 77.6665, -12.5905, -0.426274, 0.74 ) }
    dend_5 { pt3dadd( 78.2259, -13.2009, -0.67591, 0.74 ) }
    dend_5 { pt3dadd( 78.7913, -13.8384, -0.979143, 0.74 ) }
    dend_5 { pt3dadd( 79.3041, -14.4131, -1.27082, 0.66 ) }
    dend_5 { pt3dadd( 79.7892, -14.9452, -1.56094, 0.66 ) }
    dend_5 { pt3dadd( 80.4312, -15.6377, -1.96581, 0.96 ) }
    dend_5 { pt3dadd( 81.1851, -16.4681, -2.48676, 1.4 ) }
    dend_5 { pt3dadd( 81.5662, -16.9205, -2.79169, 1.62 ) }
    dend_5 { pt3dadd( 81.9549, -17.4173, -3.14727, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 53.4697, 10.7627, 2.25067, 0.88 ) }
    dend_4 { pt3dadd( 54.0871, 11.4217, 2.45022, 0.88 ) }
    dend_4 { pt3dadd( 54.6496, 11.9489, 2.64225, 0.88 ) }
    dend_4 { pt3dadd( 55.2932, 12.4535, 2.85596, 0.88 ) }
    dend_4 { pt3dadd( 56.0006, 12.9205, 3.07445, 0.88 ) }
    dend_4 { pt3dadd( 56.847, 13.4034, 3.33182, 0.74 ) }
    dend_4 { pt3dadd( 57.3852, 13.6898, 3.49975, 0.74 ) }
    dend_4 { pt3dadd( 58.1533, 14.0352, 3.75296, 0.88 ) }
    dend_4 { pt3dadd( 58.8484, 14.2983, 3.97813, 0.88 ) }
    dend_4 { pt3dadd( 59.4262, 14.4911, 4.15293, 0.88 ) }
    dend_4 { pt3dadd( 59.9882, 14.6716, 4.31477, 0.66 ) }
    dend_4 { pt3dadd( 60.3813, 14.8173, 4.42166, 0.66 ) }
    dend_4 { pt3dadd( 60.9035, 15.0851, 4.54222, 0.88 ) }
    dend_4 { pt3dadd( 61.2122, 15.295, 4.60397, 0.88 ) }
    dend_4 { pt3dadd( 61.505, 15.5301, 4.65595, 0.88 ) }
    dend_4 { pt3dadd( 61.8018, 15.7791, 4.70401, 0.88 ) }
    dend_4 { pt3dadd( 62.3552, 16.2324, 4.79267, 0.59 ) }
    dend_4 { pt3dadd( 62.7496, 16.5364, 4.87998, 0.59 ) }
    dend_4 { pt3dadd( 63.0507, 16.7754, 4.97175, 0.81 ) }
    dend_4 { pt3dadd( 63.4428, 17.1153, 5.12112, 0.81 ) }
    dend_4 { pt3dadd( 63.7398, 17.4067, 5.25519, 0.81 ) }
    dend_4 { pt3dadd( 64.0729, 17.7602, 5.42032, 0.66 ) }
    dend_4 { pt3dadd( 64.5492, 18.2825, 5.66911, 0.59 ) }
    dend_4 { pt3dadd( 65.0463, 18.9324, 5.94971, 0.59 ) }
    dend_4 { pt3dadd( 65.3095, 19.3366, 6.09876, 0.59 ) }
    dend_4 { pt3dadd( 65.6055, 19.8485, 6.25332, 0.44 ) }
    dend_4 { pt3dadd( 65.7908, 20.1769, 6.33093, 0.44 ) }
    dend_4 { pt3dadd( 65.9914, 20.5264, 6.39268, 0.44 ) }
    dend_4 { pt3dadd( 66.4943, 21.3732, 6.50772, 0.44 ) }
    dend_4 { pt3dadd( 66.8958, 22.0111, 6.58868, 0.66 ) }
    dend_4 { pt3dadd( 67.2323, 22.5325, 6.65229, 0.66 ) }
    dend_4 { pt3dadd( 67.649, 23.1712, 6.72548, 0.74 ) }
    dend_4 { pt3dadd( 67.9744, 23.6697, 6.77969, 0.96 ) }
    dend_4 { pt3dadd( 68.2257, 24.0417, 6.8187, 0.96 ) }
    dend_4 { pt3dadd( 68.6016, 24.5383, 6.86915, 0.66 ) }
    dend_4 { pt3dadd( 68.9721, 25.003, 6.91612, 0.66 ) }
    dend_4 { pt3dadd( 69.5615, 25.7268, 6.98837, 0.59 ) }
    dend_4 { pt3dadd( 70.1055, 26.4123, 7.0723, 0.59 ) }
    dend_4 { pt3dadd( 70.4562, 26.8631, 7.13684, 0.81 ) }
    dend_4 { pt3dadd( 70.7212, 27.2143, 7.1928, 0.81 ) }
    dend_4 { pt3dadd( 71.1763, 27.7916, 7.29232, 0.52 ) }
    dend_4 { pt3dadd( 71.5318, 28.2011, 7.36733, 0.52 ) }
    dend_4 { pt3dadd( 72.0071, 28.7105, 7.47069, 0.52 ) }
    dend_4 { pt3dadd( 72.4083, 29.1289, 7.55814, 0.52 ) }
    dend_4 { pt3dadd( 72.7936, 29.5217, 7.63859, 0.37 ) }
    dend_4 { pt3dadd( 73.4821, 30.2065, 7.77427, 0.37 ) }
    dend_4 { pt3dadd( 73.9361, 30.6498, 7.8559, 0.59 ) }
    dend_4 { pt3dadd( 74.2274, 30.9158, 7.89892, 0.59 ) }
    dend_4 { pt3dadd( 74.848, 31.4625, 7.96793, 0.74 ) }
    dend_4 { pt3dadd( 75.1716, 31.7509, 8.00377, 0.74 ) }
    dend_4 { pt3dadd( 75.4459, 32.006, 8.03888, 0.74 ) }
    dend_4 { pt3dadd( 75.8332, 32.4125, 8.10522, 0.74 ) }
    dend_4 { pt3dadd( 76.0921, 32.7033, 8.12988, 0.44 ) }
    dend_4 { pt3dadd( 76.4642, 33.1121, 8.11095, 0.44 ) }
    dend_4 { pt3dadd( 76.7868, 33.4398, 8.05895, 0.81 ) }
    dend_4 { pt3dadd( 77.3321, 33.9561, 7.93194, 0.81 ) }
    dend_4 { pt3dadd( 77.7352, 34.3083, 7.80726, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 78.4408, 34.8951, 7.56364, 0.52 ) }
    dend_4 { pt3dadd( 78.9784, 35.35, 7.34523, 0.44 ) }
    dend_4 { pt3dadd( 79.3345, 35.6424, 7.17333, 0.44 ) }
    dend_4 { pt3dadd( 79.6458, 35.8963, 7.00177, 0.44 ) }
    dend_4 { pt3dadd( 79.8897, 36.0896, 6.84766, 0.44 ) }
    dend_4 { pt3dadd( 80.2988, 36.3922, 6.59765, 0.74 ) }
    dend_4 { pt3dadd( 80.6546, 36.6453, 6.46568, 0.59 ) }
    dend_4 { pt3dadd( 80.8931, 36.8399, 6.39875, 0.59 ) }
    dend_4 { pt3dadd( 85.2209, 41.5995, 8.06878, 0.59 ) }
    dend_4 { pt3dadd( 89.7092, 46.2387, 9.65182, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -77.4179, -333.498, 35.295, 0.52 ) }
    dend_39 { pt3dadd( -77.9648, -335.042, 35.4475, 0.52 ) }
    dend_39 { pt3dadd( -78.1922, -335.667, 35.5186, 0.29 ) }
    dend_39 { pt3dadd( -78.5108, -336.483, 35.6145, 0.44 ) }
    dend_39 { pt3dadd( -78.8137, -337.242, 35.7012, 0.44 ) }
    dend_39 { pt3dadd( -79.0562, -337.83, 35.7682, 0.29 ) }
    dend_39 { pt3dadd( -79.4323, -338.686, 35.8609, 0.29 ) }
    dend_39 { pt3dadd( -79.8251, -339.501, 35.9501, 0.81 ) }
    dend_39 { pt3dadd( -80.1311, -340.126, 35.9963, 1.18 ) }
    dend_39 { pt3dadd( -80.2946, -340.467, 36.0121, 1.4 ) }
    dend_39 { pt3dadd( -80.5533, -341.035, 36.0288, 1.4 ) }
    dend_39 { pt3dadd( -80.7809, -341.58, 36.0361, 1.11 ) }
    dend_39 { pt3dadd( -81.2309, -342.758, 36.0434, 0.52 ) }
    dend_39 { pt3dadd( -81.5284, -343.683, 36.0443, 0.44 ) }
    dend_39 { pt3dadd( -81.7308, -344.425, 36.0432, 0.74 ) }
    dend_39 { pt3dadd( -81.9577, -345.319, 36.0469, 0.81 ) }
    dend_39 { pt3dadd( -82.1177, -345.992, 36.049, 0.81 ) }
    dend_39 { pt3dadd( -82.2706, -346.706, 36.0462, 0.74 ) }
    dend_39 { pt3dadd( -82.4404, -347.65, 36.0742, 0.22 ) }
    dend_39 { pt3dadd( -82.5123, -348.087, 36.0914, 0.22 ) }
    dend_39 { pt3dadd( -82.623, -348.855, 36.1129, 0.22 ) }
    dend_39 { pt3dadd( -82.6887, -349.519, 36.1404, 0.66 ) }
    dend_39 { pt3dadd( -82.7282, -350.213, 36.1884, 0.81 ) }
    dend_39 { pt3dadd( -82.7483, -351.328, 36.2924, 0.66 ) }
    dend_39 { pt3dadd( -82.7172, -352.341, 36.4145, 0.22 ) }
    dend_39 { pt3dadd( -82.6369, -353.245, 36.54, 0.22 ) }
    dend_39 { pt3dadd( -82.5383, -353.903, 36.6417, 0.22 ) }
    dend_39 { pt3dadd( -82.4203, -354.54, 36.7682, 0.96 ) }
    dend_39 { pt3dadd( -82.3618, -354.867, 36.8424, 1.18 ) }
    dend_39 { pt3dadd( -82.2803, -355.354, 36.9534, 1.18 ) }
    dend_39 { pt3dadd( -82.2067, -355.754, 37.0685, 1.18 ) }
    dend_39 { pt3dadd( -82.0976, -356.517, 37.2859, 0.74 ) }
    dend_39 { pt3dadd( -81.9945, -357.673, 37.5997, 0.22 ) }
    dend_39 { pt3dadd( -81.9768, -358.054, 37.7017, 0.22 ) }
    dend_39 { pt3dadd( -81.9666, -358.499, 37.8221, 0.44 ) }
    dend_39 { pt3dadd( -81.9647, -358.884, 37.9187, 0.44 ) }
    dend_39 { pt3dadd( -81.9583, -359.892, 38.1446, 0.22 ) }
    dend_39 { pt3dadd( -81.9533, -360.526, 38.2634, 0.96 ) }
    dend_39 { pt3dadd( -81.9396, -361.011, 38.3297, 1.18 ) }
    dend_39 { pt3dadd( -81.9195, -361.475, 38.3843, 1.25 ) }
    dend_39 { pt3dadd( -81.8816, -362.361, 38.4784, 0.96 ) }
    dend_39 { pt3dadd( -81.8647, -363.632, 38.6107, 0.29 ) }
    dend_39 { pt3dadd( -81.8789, -364.633, 38.7104, 0.22 ) }
    dend_39 { pt3dadd( -81.9349, -365.764, 38.8147, 0.22 ) }
    dend_39 { pt3dadd( -81.9861, -366.346, 38.8689, 0.81 ) }
    dend_39 { pt3dadd( -82.0538, -366.821, 38.915, 0.96 ) }
    dend_39 { pt3dadd( -82.3832, -368.471, 39.0982, 0.22 ) }
    dend_39 { pt3dadd( -82.5174, -368.988, 39.1634, 0.22 ) }
    dend_39 { pt3dadd( -82.7543, -369.81, 39.2808, 0.59 ) }
    dend_39 { pt3dadd( -82.9392, -370.411, 39.3764, 0.59 ) }
    dend_39 { pt3dadd( -83.2057, -371.314, 39.5212, 0.52 ) }
    dend_39 { pt3dadd( -83.4047, -372.057, 39.6409, 0.52 ) }
    dend_39 { pt3dadd( -83.6412, -373.065, 39.8151, 0.52 ) }
    dend_39 { pt3dadd( -83.7282, -373.462, 39.8876, 0.96 ) }
    dend_39 { pt3dadd( -83.8655, -374.14, 40.0139, 0.96 ) }
    dend_39 { pt3dadd( -84.009, -374.903, 40.1579, 0.59 ) }
    dend_39 { pt3dadd( -84.2383, -376.193, 40.4382, 0.22 ) }
    dend_39 { pt3dadd( -84.4623, -377.524, 40.7318, 0.22 ) }
    dend_39 { pt3dadd( -84.564, -378.148, 40.8736, 0.22 ) }
    dend_39 { pt3dadd( -84.6613, -378.701, 41.0065, 0.96 ) }
    dend_39 { pt3dadd( -84.7284, -379.079, 41.103, 1.18 ) }
    dend_39 { pt3dadd( -84.8669, -379.831, 41.3157, 0.52 ) }
    dend_39 { pt3dadd( -85.1881, -389.054, 41.2038, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -77.4179, -333.498, 35.295, 0.29 ) }
    dend_36 { pt3dadd( -79.1823, -332.894, 36.5371, 0.29 ) }
    dend_36 { pt3dadd( -80.1288, -332.87, 37.1696, 0.37 ) }
    dend_36 { pt3dadd( -80.5606, -332.995, 37.4449, 0.37 ) }
    dend_36 { pt3dadd( -81.5308, -333.463, 38.0993, 0.37 ) }
    dend_36 { pt3dadd( -82.5087, -333.98, 38.6184, 0.52 ) }
    dend_36 { pt3dadd( -83.3825, -334.451, 39.0187, 0.59 ) }
    dend_36 { pt3dadd( -84.5948, -335.237, 39.4663, 0.59 ) }
    dend_36 { pt3dadd( -85.6903, -335.977, 39.8113, 0.37 ) }
    dend_36 { pt3dadd( -86.7153, -336.674, 40.0919, 0.37 ) }
    dend_36 { pt3dadd( -88.563, -337.929, 40.5165, 0.37 ) }
    dend_36 { pt3dadd( -89.4227, -338.457, 40.6939, 0.37 ) }
    dend_36 { pt3dadd( -90.2222, -338.908, 40.8521, 0.29 ) }
    dend_36 { pt3dadd( -90.8594, -339.239, 40.9846, 0.29 ) }
    dend_36 { pt3dadd( -91.5721, -339.603, 41.1522, 0.81 ) }
    dend_36 { pt3dadd( -92.1345, -339.921, 41.3083, 0.81 ) }
    dend_36 { pt3dadd( -92.8625, -340.453, 41.6213, 0.81 ) }
    dend_36 { pt3dadd( -94.0672, -341.488, 42.1948, 0.29 ) }
    dend_36 { pt3dadd( -94.629, -342.043, 42.4876, 0.66 ) }
    dend_36 { pt3dadd( -95.0346, -342.491, 42.729, 0.66 ) }
    dend_36 { pt3dadd( -95.4019, -342.938, 42.9701, 0.66 ) }
    dend_36 { pt3dadd( -96.6994, -344.643, 43.8839, 0.29 ) }
    dend_36 { pt3dadd( -97.275, -345.435, 44.2854, 0.44 ) }
    dend_36 { pt3dadd( -97.7738, -346.118, 44.6305, 0.29 ) }
    dend_36 { pt3dadd( -98.3788, -346.906, 45.0257, 0.74 ) }
    dend_36 { pt3dadd( -98.8391, -347.439, 45.2826, 0.74 ) }
    dend_36 { pt3dadd( -99.6244, -348.21, 45.6557, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -101.056, -349.39, 46.2298, 0.29 ) }
    dend_36 { pt3dadd( -101.923, -350.026, 46.5431, 0.52 ) }
    dend_36 { pt3dadd( -102.525, -350.421, 46.721, 0.52 ) }
    dend_36 { pt3dadd( -103.825, -351.189, 47.0042, 0.29 ) }
    dend_36 { pt3dadd( -104.805, -351.707, 47.1893, 0.29 ) }
    dend_36 { pt3dadd( -105.408, -351.98, 47.2892, 0.59 ) }
    dend_36 { pt3dadd( -106.132, -352.267, 47.3815, 0.59 ) }
    dend_36 { pt3dadd( -107.453, -352.763, 47.5177, 0.22 ) }
    dend_36 { pt3dadd( -108.189, -353.031, 47.6073, 0.29 ) }
    dend_36 { pt3dadd( -109.285, -353.441, 47.7785, 0.29 ) }
    dend_36 { pt3dadd( -109.8, -353.644, 47.8631, 0.29 ) }
    dend_36 { pt3dadd( -111.111, -354.225, 48.088, 0.37 ) }
    dend_36 { pt3dadd( -112.064, -354.779, 48.3433, 0.37 ) }
    dend_36 { pt3dadd( -112.996, -355.469, 48.7115, 0.52 ) }
    dend_36 { pt3dadd( -114.03, -356.413, 49.2117, 1.55 ) }
    dend_36 { pt3dadd( -114.634, -357.066, 49.5382, 1.92 ) }
    dend_36 { pt3dadd( -115.195, -357.749, 49.878, 1.92 ) }
    dend_36 { pt3dadd( -116.446, -359.447, 50.7559, 0.29 ) }
    dend_36 { pt3dadd( -117.25, -360.643, 51.3528, 0.29 ) }
    dend_36 { pt3dadd( -117.882, -361.675, 51.86, 0.29 ) }
    dend_36 { pt3dadd( -118.375, -362.511, 52.2808, 0.74 ) }
    dend_36 { pt3dadd( -118.62, -362.93, 52.4915, 0.96 ) }
    dend_36 { pt3dadd( -118.841, -363.287, 52.6726, 1.11 ) }
    dend_36 { pt3dadd( -119.482, -364.341, 53.1905, 0.52 ) }
    dend_36 { pt3dadd( -119.864, -365.048, 53.5566, 0.29 ) }
    dend_36 { pt3dadd( -120.408, -366.072, 54.1325, 0.22 ) }
    dend_36 { pt3dadd( -120.778, -366.738, 54.5363, 0.44 ) }
    dend_36 { pt3dadd( -121.096, -367.281, 54.8861, 0.44 ) }
    dend_36 { pt3dadd( -121.972, -368.768, 55.873, 0.22 ) }
    dend_36 { pt3dadd( -122.498, -369.653, 56.4843, 0.22 ) }
    dend_36 { pt3dadd( -123.009, -370.471, 57.0683, 1.25 ) }
    dend_36 { pt3dadd( -123.474, -371.211, 57.621, 1.55 ) }
    dend_36 { pt3dadd( -123.7, -371.547, 57.8819, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 81.9549, -17.4173, -3.14727, 0.74 ) }
    dend_7 { pt3dadd( 83.4167, -17.7449, -2.07932, 0.74 ) }
    dend_7 { pt3dadd( 83.8398, -17.8636, -1.78955, 0.74 ) }
    dend_7 { pt3dadd( 84.5616, -18.1213, -1.33338, 0.59 ) }
    dend_7 { pt3dadd( 85.4063, -18.5003, -0.853302, 0.59 ) }
    dend_7 { pt3dadd( 86.1887, -18.9166, -0.449478, 0.59 ) }
    dend_7 { pt3dadd( 86.5791, -19.14, -0.259322, 0.59 ) }
    dend_7 { pt3dadd( 87.3447, -19.6568, 0.065337, 0.59 ) }
    dend_7 { pt3dadd( 87.9957, -20.1309, 0.315959, 0.81 ) }
    dend_7 { pt3dadd( 88.859, -20.7546, 0.643101, 0.81 ) }
    dend_7 { pt3dadd( 89.5707, -21.2454, 0.903877, 0.37 ) }
    dend_7 { pt3dadd( 90.3085, -21.7136, 1.16949, 0.37 ) }
    dend_7 { pt3dadd( 91.1716, -22.2493, 1.48734, 0.37 ) }
    dend_7 { pt3dadd( 92.0534, -22.7906, 1.84178, 0.37 ) }
    dend_7 { pt3dadd( 92.8982, -23.2733, 2.20013, 0.37 ) }
    dend_7 { pt3dadd( 94.1691, -23.9439, 2.77003, 0.22 ) }
    dend_7 { pt3dadd( 95.5255, -24.6237, 3.39661, 0.22 ) }
    dend_7 { pt3dadd( 102.733, -30.1585, 6.57072, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 81.9549, -17.4173, -3.14727, 0.37 ) }
    dend_6 { pt3dadd( 81.984, -18.6294, -3.4243, 0.37 ) }
    dend_6 { pt3dadd( 82.0589, -19.3905, -3.56351, 0.37 ) }
    dend_6 { pt3dadd( 82.1703, -20.096, -3.67782, 0.37 ) }
    dend_6 { pt3dadd( 82.3353, -20.8167, -3.73937, 0.37 ) }
    dend_6 { pt3dadd( 82.5065, -21.4354, -3.77703, 0.37 ) }
    dend_6 { pt3dadd( 82.7368, -22.1562, -3.8031, 0.29 ) }
    dend_6 { pt3dadd( 83.1364, -23.1679, -3.86436, 0.22 ) }
    dend_6 { pt3dadd( 83.5906, -24.2437, -3.97737, 0.22 ) }
    dend_6 { pt3dadd( 84.1921, -25.5862, -4.18176, 0.22 ) }
    dend_6 { pt3dadd( 84.4176, -26.0853, -4.28293, 1.18 ) }
    dend_6 { pt3dadd( 84.581, -26.5009, -4.40585, 1.4 ) }
    dend_6 { pt3dadd( 84.9036, -27.804, -4.93258, 1.4 ) }
    dend_6 { pt3dadd( 84.9841, -28.8802, -5.47299, 0.44 ) }
    dend_6 { pt3dadd( 84.9581, -29.2494, -5.66601, 0.44 ) }
    dend_6 { pt3dadd( 84.8552, -29.8132, -5.96455, 0.29 ) }
    dend_6 { pt3dadd( 84.6179, -30.7513, -6.40113, 0.29 ) }
    dend_6 { pt3dadd( 84.2634, -31.9358, -6.90652, 0.22 ) }
    dend_6 { pt3dadd( 83.9488, -32.8376, -7.19308, 0.22 ) }
    dend_6 { pt3dadd( 83.7192, -33.3782, -7.34561, 1.03 ) }
    dend_6 { pt3dadd( 83.5961, -33.6517, -7.40993, 1.33 ) }
    dend_6 { pt3dadd( 83.4166, -34.0327, -7.47604, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -123.7, -371.547, 57.8819, 0.29 ) }
    dend_38 { pt3dadd( -124.542, -370.674, 58.4827, 0.29 ) }
    dend_38 { pt3dadd( -124.732, -370.481, 58.6103, 0.52 ) }
    dend_38 { pt3dadd( -125.03, -370.176, 58.7989, 0.59 ) }
    dend_38 { pt3dadd( -126.784, -368.439, 59.7648, 0.22 ) }
    dend_38 { pt3dadd( -127.286, -367.957, 60.0191, 0.22 ) }
    dend_38 { pt3dadd( -127.986, -367.306, 60.3516, 0.66 ) }
    dend_38 { pt3dadd( -128.372, -366.954, 60.5035, 0.66 ) }
    dend_38 { pt3dadd( -130.035, -365.514, 61.0951, 0.22 ) }
    dend_38 { pt3dadd( -130.729, -364.947, 61.3212, 0.22 ) }
    dend_38 { pt3dadd( -131.369, -364.473, 61.5207, 0.52 ) }
    dend_38 { pt3dadd( -131.823, -364.161, 61.662, 0.66 ) }
    dend_38 { pt3dadd( -133.065, -363.372, 62.0512, 0.22 ) }
    dend_38 { pt3dadd( -135.526, -361.844, 62.8274, 0.22 ) }
    dend_38 { pt3dadd( -137.11, -360.908, 63.3344, 0.22 ) }
    dend_38 { pt3dadd( -138.561, -360.053, 63.8357, 1.18 ) }
    dend_38 { pt3dadd( -138.968, -359.818, 63.976, 1.4 ) }
    dend_38 { pt3dadd( -139.592, -359.469, 64.196, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -123.7, -371.547, 57.8819, 0.22 ) }
    dend_37 { pt3dadd( -124.365, -373.414, 58.5908, 0.22 ) }
    dend_37 { pt3dadd( -124.827, -374.962, 59.1864, 0.22 ) }
    dend_37 { pt3dadd( -125.013, -375.66, 59.4402, 0.44 ) }
    dend_37 { pt3dadd( -125.091, -375.967, 59.5489, 0.44 ) }
    dend_37 { pt3dadd( -125.801, -378.897, 60.5345, 0.22 ) }
    dend_37 { pt3dadd( -126.133, -380.268, 60.9958, 0.44 ) }
    dend_37 { pt3dadd( -126.402, -381.424, 61.3926, 0.22 ) }
    dend_37 { pt3dadd( -126.557, -382.204, 61.6395, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -126.677, -382.881, 61.8482, 0.66 ) }
    dend_37 { pt3dadd( -126.755, -383.402, 62.0009, 0.44 ) }
    dend_37 { pt3dadd( -127.859, -395.449, 64.8548, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 5
    dend_42 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 11
    dend_1 nseg = 5
    dend_48 nseg = 3
    dend_45 nseg = 7
    dend_41 nseg = 9
    dend_34 nseg = 3
    dend_29 nseg = 7
    dend_17 nseg = 9
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 7
    dend_35 nseg = 9
    dend_32 nseg = 11
    dend_31 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_ChC_fa7ba30f35_0_0


