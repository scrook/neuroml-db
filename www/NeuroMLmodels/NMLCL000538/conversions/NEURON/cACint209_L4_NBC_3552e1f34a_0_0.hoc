// Cell: cACint209_L4_NBC_3552e1f34a_0_0
/*
{
  "id" : "cACint209_L4_NBC_3552e1f34a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.06688, 8.74128, -1.1272, 2.20257", "-0.937306, 7.82691, -0.999547, 3.85541", "-0.807729, 6.91254, -0.871898, 5.84624", "-0.678152, 5.99818, -0.744249, 7.26434", "-0.548576, 5.08381, -0.6166, 10.3712", "-0.418999, 4.16944, -0.488951, 11.2076", "-0.289422, 3.25508, -0.361302, 11.8779", "-0.159846, 2.34071, -0.233653, 11.9642", "-0.0302691, 1.42634, -0.106004, 11.5058", "0.0993075, 0.511976, 0.0216455, 11.0473", "0.228884, -0.402391, 0.149295, 10.6248", "0.358461, -1.31676, 0.276944, 10.1128", "0.488037, -2.23113, 0.404593, 9.57755", "0.617614, -3.14549, 0.532242, 9.04063", "0.747191, -4.05986, 0.659891, 8.48926", "0.876767, -4.97423, 0.78754, 7.85518", "1.00634, -5.88859, 0.915189, 7.19302", "1.13592, -6.80296, 1.04284, 6.47635", "1.2655, -7.71733, 1.17049, 5.43009", "1.39507, -8.63169, 1.29814, 3.7337", "1.52465, -9.54606, 1.42578, 2.56951" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.70824, 3.35321, -7.70142, 0.83", "-6.53866, 3.88497, -9.45578, 0.83", "-8.15423, 3.99495, -10.7289, 1.11", "-11.0523, 4.20238, -12.8906, 1.11", "-13.8657, 4.00453, -15.8186, 1.11", "-14.7523, 3.87909, -16.7769, 0.83", "-17.627, 3.33885, -19.8419, 0.83", "-18.6675, 3.01581, -21.0256, 0.55", "-20.6444, 2.10888, -23.2556, 0.55", "-25.3346, -0.526206, -28.4427, 0.83", "-27.4681, -1.77816, -30.857, 0.55", "-28.1326, -2.1397, -31.7648, 0.83", "-28.906, -2.53295, -33.0694, 0.55", "-29.4957, -2.83725, -34.1285, 1.11", "-31.0648, -3.61024, -37.0322, 1.11", "-33.0259, -4.29911, -40.533, 0.83", "-35.0802, -4.92802, -44.6392, 0.83", "-36.9082, -5.2914, -48.3368, 0.28", "-37.212, -5.31133, -48.9404, 0.55", "-37.9687, -5.26772, -50.4158, 0.28", "-38.7412, -5.09771, -51.8504, 0.55", "-39.4435, -4.80385, -53.0138, 0.28", "-40.165, -4.48473, -53.9241, 0.83", "-41.8873, -3.64998, -56.2944, 0.28", "-42.0036, -3.59029, -56.4731, 0.55", "-42.8022, -3.16811, -57.8946, 0.28", "-43.5722, -2.76375, -59.427, 0.83", "-43.771, -2.68381, -59.843, 0.83", "-46.094, -2.01696, -64.8095, 0.28", "-46.425, -1.94363, -65.4899, 0.55", "-47.8465, -1.71194, -68.2581, 0.28", "-48.4626, -1.65536, -69.4469, 0.83", "-49.6833, -1.53406, -71.7133, 0.28", "-50.3012, -1.46072, -72.7673, 0.55", "-50.9426, -1.38397, -73.724, 0.28", "-51.282, -1.33419, -74.2467, 0.55", "-54.484, -0.641955, -79.0885, 0.28", "-54.8636, -0.515102, -79.7282, 0.55", "-55.2177, -0.359528, -80.382, 0.28", "-55.5119, -0.196865, -81.0557, 0.83", "-56.5611, 0.497252, -84.0146, 0.28", "-56.6796, 0.608572, -84.4497, 0.83", "-57.1181, 1.23363, -86.5606, 0.28", "-57.1974, 1.31642, -86.912, 0.83", "-57.7345, 1.84179, -89.268, 0.28", "-57.8227, 1.92626, -89.6508, 0.83", "-58.4262, 2.5016, -92.2147, 0.28", "-58.5372, 2.60165, -92.6807, 0.83", "-60.2083, 3.95445, -99.2006, 0.28", "-61.1443, 4.62173, -102.557, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.88824, 6.39321, -6.65142, 1.11", "-4.58832, 7.19023, -8.91446, 1.11", "-5.0617, 7.44997, -10.3908, 1.11", "-5.93538, 7.67287, -13.5049, 0.83", "-6.58441, 7.6874, -15.9457, 1.38", "-8.63872, 7.3644, -24.3065, 0.83", "-9.56011, 7.20378, -28.3988, 0.83", "-11.2535, 6.72747, -38.2351, 0.83", "-13.0485, 5.93842, -49.7051, 0.83", "-13.5944, 5.55223, -53.3995, 0.83", "-13.9596, 5.21842, -55.7476, 0.83", "-14.4494, 4.67233, -58.8739, 0.83", "-14.6745, 4.21917, -61.9756, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.44824, 7.31321, -3.11142, 0.83", "-4.3553, 9.38042, -3.60626, 0.55", "-5.50346, 10.6683, -3.88414, 0.55", "-6.43983, 11.8212, -4.18179, 1.11", "-7.74185, 13.4972, -4.63022, 0.83", "-10.2771, 17.2164, -5.5583, 0.83", "-12.0324, 20.0588, -6.20848, 0.83", "-13.8913, 23.3195, -6.89373, 0.83", "-15.2075, 25.8315, -7.24621, 0.83", "-16.2987, 28.2645, -7.41512, 1.38", "-17.5745, 31.6807, -7.33078, 0.55", "-18.258, 34.1823, -6.96682, 0.55", "-18.7074, 35.9193, -6.5518, 0.55", "-19.6067, 39.1232, -5.62731, 0.55", "-20.0141, 40.4441, -5.19948, 0.55", "-20.8738, 42.9394, -4.41777, 0.55", "-22.7012, 47.6335, -3.18647, 0.55", "-23.4951, 49.681, -2.77159, 0.28", "-24.3399, 51.9283, -2.47834, 0.28", "-24.9778, 53.8299, -2.33059, 0.55", "-25.5069, 55.7824, -2.25452, 0.28", "-26.6114, 61.203, -2.25729, 0.83", "-26.883, 63.442, -2.35476, 0.55", "-27.0066, 66.061, -2.51094, 0.28", "-27.0191, 67.963, -2.635, 0.55", "-26.7971, 74.0057, -3.07757, 0.28", "-26.6945, 75.0453, -3.16343, 0.83", "-26.0245, 78.9167, -3.60475, 0.28", "-25.7862, 80.049, -3.75521, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.69824, 6.32321, 3.79858, 1.11", "-4.93901, 11.458, 4.25143, 1.11", "-6.88609, 18.5451, 4.94914, 1.11", "-8.06453, 23.1654, 5.34926, 1.11", "-9.72696, 29.1751, 5.88746, 1.11", "-11.5454, 35.3824, 6.40534, 1.11", "-12.9534, 40.502, 6.74472, 1.11", "-14.04, 44.4614, 6.76026, 1.11", "-15.3273, 49.3646, 6.45318, 1.11", "-16.2823, 53.6714, 6.071, 1.11", "-17.1868, 58.9759, 5.5084, 1.11", "-18.0589, 65.3559, 4.67199, 1.11", "-18.8647, 74.0245, 3.29388, 1.11", "-19.1374, 77.4661, 2.7219, 1.11", "-19.4292, 81.7996, 2.0166, 0.83", "-19.5175, 85.7386, 1.385, 0.83", "-19.5429, 90.2118, 0.746834, 1.11", "-19.5793, 95.3457, 0.205093, 1.11", "-19.5598, 96.9848, 0.111535, 0.28", "-19.5541, 100.01, -0.032653, 0.55", "-19.6139, 102.132, -0.125856, 0.55", "-19.7882, 105.495, -0.337092, 0.55", "-19.9841, 108.404, -0.583945, 0.28", "-20.0479, 109.433, -0.740177, 0.83", "-20.2141, 111.71, -1.15469, 0.28", "-20.8287, 117.833, -2.15526, 0.55", "-21.2495, 121.639, -2.82154, 0.28", "-21.4958, 124.313, -3.30902, 1.11", "-21.8678, 129.833, -4.35294, 0.28", "-21.9949, 133.569, -5.01086, 1.11", "-21.9774, 138.014, -5.74263, 0.28", "-21.7756, 140.942, -6.1449, 0.55", "-21.366, 144.065, -6.34999, 0.28", "-21.0447, 145.677, -6.36403, 0.28", "-20.5781, 147.398, -6.27038, 0.55", "-19.8207, 149.673, -6.17144, 0.28", "-19.1924, 151.414, -6.12224, 0.83", "-18.2346, 154.161, -5.89827, 0.28", "-17.9879, 154.915, -5.83816, 0.83", "-17.0008, 158.085, -5.63027, 0.55", "-16.2287, 160.63, -5.50793, 0.28", "-15.9465, 161.614, -5.45423, 0.55", "-15.0664, 164.491, -5.32136, 0.28", "-14.8624, 165.186, -5.2972, 0.55", "-14.1807, 167.407, -5.21372, 0.28", "-13.936, 168.17, -5.18992, 0.55", "-13.2595, 170.633, -5.13423, 0.28", "-12.4981, 174.192, -5.10575, 0.83", "-12.1601, 176.381, -5.11484, 0.28", "-12.0448, 177.834, -5.22505, 0.83", "-11.9614, 180.428, -5.56339, 0.28", "-11.9187, 182.535, -5.93389, 0.55", "-11.9087, 184.088, -6.25552, 0.28", "-11.9546, 186.923, -6.91208, 0.83", "-12.0121, 192.468, -8.22967, 0.28", "-12.0222, 193.769, -8.53365, 0.55", "-12.0467, 199.693, -9.90879, 0.55", "-12.03, 200.402, -10.0746, 0.55", "-11.9164, 202.998, -10.6597, 0.28", "-11.8578, 204.317, -10.9399, 0.55", "-11.7919, 205.943, -11.1465, 0.28", "-11.8341, 207.598, -11.3396, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.18176, 4.76321, -6.33142, 0.83", "4.55585, 7.05136, -9.64694, 0.83", "4.47414, 8.51126, -12.1676, 0.83", "4.38495, 9.70468, -14.1631, 1.94", "4.29625, 11.7733, -17.7814, 0.83", "4.23909, 13.0665, -19.9807, 1.11", "4.12407, 16.0651, -24.6712, 1.38", "3.86904, 17.5976, -27.0258, 0.28", "3.53448, 19.0234, -29.0481, 0.83", "2.71258, 21.9987, -32.5949, 0.28", "2.37894, 23.1744, -33.6604, 0.83", "1.80243, 25.2482, -35.067, 0.83", "1.05082, 27.7566, -36.4078, 1.11", "-0.369536, 31.8682, -38.4976, 0.28", "-1.20669, 33.8522, -39.4702, 0.83", "-2.5611, 36.7228, -40.7609, 0.55", "-3.56339, 38.6866, -41.702, 0.83", "-4.88985, 41.121, -42.901, 0.28", "-6.62858, 44.2199, -44.4587, 0.83", "-8.25412, 47.1349, -45.7568, 0.55", "-9.45307, 49.2451, -46.6896, 0.83", "-11.6702, 52.855, -48.224, 0.28", "-12.2186, 53.7295, -48.5695, 0.55", "-13.1366, 55.1816, -49.0879, 0.28", "-15.0492, 58.1322, -50.0679, 0.83", "-16.4625, 60.4302, -50.8011, 0.28", "-17.6687, 62.4489, -51.4348, 0.83", "-18.1441, 63.2741, -51.6651, 0.28", "-19.2639, 65.2284, -52.2242, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.99176, 3.38321, -9.40142, 1.11", "8.6557, 3.22987, -9.40142, 1.11", "11.4132, 3.11446, -9.40142, 1.11", "15.2875, 2.95232, -9.40142, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.36824, 1.16321, 0.248578, 0.55", "-7.39072, 1.43561, -1.17625, 0.55", "-9.13439, 1.67046, -2.40465, 0.83", "-12.552, 2.13076, -4.81233, 0.83", "-18.6762, 2.95561, -9.12682, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.65176, -7.97679, -3.47142, 0.83", "3.17351, -10.4578, -4.51453, 0.83", "3.53892, -12.8281, -5.71308, 0.83", "3.87338, -15.9188, -7.72105, 1.11", "4.27601, -19.9843, -10.6307, 0.83", "4.7255, -24.2663, -13.904, 0.83", "5.14847, -28.2796, -17.1083, 0.55", "5.31567, -30.0086, -18.661, 0.83", "5.63243, -33.4805, -22.201, 0.55", "5.70724, -34.3878, -23.2726, 0.55", "5.68504, -36.5316, -26.1393, 0.83", "5.51019, -38.2158, -28.6678, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.14824, -9.92679, 4.18858, 2.22", "-0.921767, -12.4212, 4.32973, 2.22", "-1.84636, -15.4029, 4.49846, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.52465, -9.54606, 1.42578, 1.11", "3.6293, -24.3977, 1.42578, 1.11", "5.73394, -39.2493, 1.42578, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-19.2639, 65.2284, -52.2242, 0.28", "-21.3458, 66.5525, -51.4826, 0.28", "-22.1008, 67.0197, -51.2219, 0.28", "-23.0598, 67.6185, -50.9062, 0.55", "-24.0509, 68.2246, -50.5818, 0.28", "-24.8376, 68.6975, -50.328, 0.55", "-26.3631, 69.6052, -49.8428, 0.28", "-27.6385, 70.3739, -49.3965, 0.28", "-28.888, 71.1857, -48.9528, 0.55", "-30.612, 72.3476, -48.3788, 0.28", "-31.3632, 72.8889, -48.1835, 0.28", "-31.9281, 73.3306, -48.06, 0.55", "-34.5064, 75.6132, -47.6689, 0.28", "-36.5505, 77.5404, -47.4336, 0.28", "-37.2757, 78.2732, -47.3872, 0.55", "-39.7385, 80.9852, -47.2992, 0.28", "-40.2777, 81.6102, -47.285, 0.55", "-43.3645, 85.2743, -47.2686, 0.28", "-43.7468, 85.7424, -47.2796, 1.38", "-46.7675, 89.5125, -47.3326, 0.28", "-49.2977, 92.724, -47.2834, 0.28", "-50.7977, 94.6615, -47.1832, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-19.2639, 65.2284, -52.2242, 0.83", "-19.4887, 65.7806, -52.7229, 0.83", "-19.745, 66.4105, -53.2917, 0.28", "-20.2064, 67.5442, -54.3156, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "15.2875, 2.95232, -9.40142, 1.11", "18.0685, 2.84221, -10.7182, 1.11", "20.4374, 2.58548, -11.8879, 1.11", "23.0101, 2.32745, -13.337, 1.11", "26.0079, 2.06782, -15.1565, 1.11", "30.1856, 1.69161, -17.7048, 1.11", "34.2248, 1.32789, -20.1685, 1.11", "38.1423, 1.1217, -22.7008, 0.83", "41.2308, 0.983362, -24.8241, 0.83", "43.4346, 0.843392, -26.396, 0.83", "47.6175, 0.546712, -29.4725, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "15.2875, 2.95232, -9.40142, 0.55", "18.2297, 3.44237, -8.96251, 0.55", "20.478, 3.81686, -8.6271, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-18.6762, 2.95561, -9.12682, 0.83", "-22.4544, 2.6266, -10.5765, 0.83", "-24.5885, 2.74059, -11.4435, 0.83", "-26.5727, 2.72908, -12.276, 1.94", "-29.8736, 2.46014, -15.0216, 0.55", "-32.2991, 2.22684, -17.2418, 0.55", "-35.5282, 2.01238, -20.2079, 0.83", "-37.9044, 1.84926, -22.4193, 0.83", "-40.3982, 1.81701, -24.8507, 0.83", "-49.801, 2.08811, -34.1115, 1.38", "-53.3981, 2.2978, -37.6151, 0.55", "-56.4348, 2.48468, -40.6683, 0.55", "-58.727, 2.60444, -42.9644, 1.11", "-62.477, 2.9571, -46.4392, 0.28", "-63.1804, 3.08842, -46.9637, 0.28", "-64.3004, 3.38662, -47.4634, 0.83", "-68.5939, 4.807, -49.1144, 0.28", "-69.6617, 5.20932, -49.4604, 0.55", "-72.9024, 6.62413, -50.4773, 0.28", "-76.673, 8.22738, -51.8137, 1.11", "-79.2787, 9.3824, -52.9284, 0.28", "-81.1436, 10.2323, -53.8463, 0.83", "-85.8842, 12.5642, -56.4442, 0.28", "-87.8628, 13.6543, -57.7552, 0.83", "-91.8244, 16.0093, -60.805, 0.55", "-93.7058, 17.2263, -62.4077, 0.55", "-95.2167, 18.2407, -63.7168, 0.83", "-96.6296, 19.2733, -64.9948, 0.83", "-100.546, 22.5979, -68.6093, 0.28", "-100.896, 22.9197, -68.9208, 0.83", "-102.682, 24.834, -70.468, 0.28", "-103.494, 25.7095, -71.1945, 0.55", "-104.846, 27.1239, -72.3899, 0.28", "-105.97, 28.1297, -73.3551, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-18.6762, 2.95561, -9.12682, 0.28", "-19.9139, 1.50662, -9.02183, 0.28", "-20.3128, 1.0311, -8.96617, 0.83", "-21.4509, -0.483772, -8.94094, 0.28", "-22.4047, -1.72634, -8.95458, 0.28", "-22.7784, -2.19106, -8.97394, 0.55", "-24.3006, -4.02716, -9.08577, 0.28", "-25.2685, -5.18614, -9.16256, 1.11", "-28.6963, -8.97853, -9.43307, 0.28", "-29.4694, -9.78209, -9.49739, 0.55", "-30.3157, -10.6277, -9.55597, 0.28", "-31.4264, -11.6613, -9.62892, 0.28", "-32.1583, -12.2695, -9.67468, 0.55", "-33.7654, -13.5297, -9.57275, 0.28", "-34.2072, -13.8634, -9.36073, 0.55", "-35.5219, -14.9293, -8.38452, 0.28", "-36.02, -15.3952, -7.87404, 0.55", "-36.7603, -16.1236, -7.00592, 0.28", "-37.9759, -17.338, -5.60348, 0.83", "-40.7041, -20.2146, -2.46616, 0.28", "-41.1482, -20.6901, -1.99055, 0.83", "-42.7575, -22.5852, -0.373154, 0.28", "-43.3641, -23.3419, 0.181043, 0.55", "-45.3478, -25.9727, 1.77284, 0.28", "-46.0977, -27.0349, 2.21031, 0.28", "-46.7174, -27.9581, 2.44206, 0.55", "-47.7185, -29.5344, 2.79861, 0.28", "-48.0267, -30.0381, 2.88726, 1.11", "-49.707, -33.2812, 3.48459, 0.28", "-50.2514, -34.6678, 3.75034, 0.83", "-55.1242, -42.1073, 7.56055, 0.83", "-60.0442, -49.7009, 10.9864, 0.83", "-63.7688, -58.3063, 13.3699, 0.83", "-67.5771, -66.8544, 15.8263, 0.83", "-72.8446, -74.9546, 16.323, 0.83", "-77.238, -83.3077, 18.4516, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "5.51019, -38.2158, -28.6678, 0.83", "6.93503, -39.0634, -29.1964, 0.83", "8.5043, -39.9936, -29.7327, 0.28", "9.26282, -40.4458, -29.9809, 1.11", "10.9533, -41.5141, -30.5317, 0.55", "12.0762, -42.2057, -30.8754, 0.55", "14.6212, -43.7103, -31.6222, 1.38", "15.8017, -44.3269, -32.037, 0.28", "16.0708, -44.4629, -32.1458, 0.55", "16.811, -44.8253, -32.5457, 0.55", "18.2237, -45.4825, -33.4252, 0.55", "19.0973, -45.8863, -34.1223, 1.38", "21.469, -46.9802, -36.2917, 0.55", "22.1693, -47.3199, -36.9398, 1.11", "24.3698, -48.3999, -38.9733, 0.28", "25.268, -48.8452, -39.803, 1.11", "26.8221, -49.6848, -41.246, 0.55", "28.4974, -50.607, -42.6856, 0.28", "29.2158, -50.989, -43.1938, 1.11", "30.5857, -51.6301, -44.0375, 0.28", "30.7754, -51.7036, -44.1238, 0.55", "31.7085, -52.0131, -44.48, 0.28", "32.3312, -52.1772, -44.6418, 0.55", "33.4186, -52.4047, -44.8671, 0.28", "34.2724, -52.5945, -45.0341, 0.55", "35.3351, -52.8299, -45.1989, 0.28", "36.0565, -52.9977, -45.3423, 0.28", "36.4049, -53.0772, -45.4204, 0.55", "37.9272, -53.4938, -45.8402, 0.28", "38.4665, -53.6604, -46.0113, 0.55", "39.6728, -54.1562, -46.5685, 0.55", "40.6308, -54.6075, -47.1261, 0.28", "40.8871, -54.7324, -47.339, 0.55", "41.856, -55.2001, -48.1994, 0.28", "42.0233, -55.2768, -48.3507, 0.55", "43.971, -56.1173, -50.0943, 0.28", "44.3653, -56.2852, -50.4356, 0.83", "46.5421, -57.0625, -52.0974, 0.28", "48.0669, -57.5318, -53.156, 0.28", "48.8595, -57.7304, -53.6179, 0.55", "51.1271, -58.2058, -54.7179, 0.28", "52.0121, -58.3337, -55.0061, 0.83", "53.5507, -58.5342, -55.3446, 0.28", "53.9889, -58.5975, -55.3913, 0.28", "55.8943, -58.8527, -55.5149, 0.28", "56.2005, -58.8957, -55.5205, 0.83", "58.2389, -59.1854, -55.4298, 0.28", "59.8057, -59.4268, -55.3607, 0.55", "61.2037, -59.6798, -55.2915, 0.55", "62.5604, -59.9318, -55.217, 0.28", "63.0436, -60.0217, -55.1862, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.51019, -38.2158, -28.6678, 0.28", "4.30319, -40.9471, -29.5311, 0.28", "3.99578, -41.6427, -29.751, 0.55", "3.31369, -43.1862, -30.2389, 0.28", "2.88809, -44.1492, -30.5433, 0.83", "1.10613, -48.1816, -31.8179, 0.28", "0.807019, -48.8584, -32.0318, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.84636, -15.4029, 4.49846, 2.22", "-1.84244, -19.6985, 5.84388, 2.22", "-1.83827, -24.2736, 7.27683, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.84636, -15.4029, 4.49846, 0.55", "-4.93912, -15.1341, 4.15095, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.73394, -39.2493, 1.42578, 1.11", "7.83859, -54.1009, 1.42578, 1.11", "9.94324, -68.9525, 1.42578, 1.11" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-20.2064, 67.5442, -54.3156, 0.28", "-21.7536, 69.2853, -54.0987, 0.28", "-22.4964, 70.2342, -54.1793, 1.11", "-23.2158, 71.2078, -54.2793, 0.28", "-23.9022, 72.1903, -54.4301, 0.55", "-24.6228, 73.2936, -54.608, 0.28", "-25.4521, 74.6583, -54.825, 1.38", "-27.2757, 77.9163, -55.4038, 0.28", "-27.7338, 78.8415, -55.6021, 0.55", "-28.5772, 80.7445, -56.0473, 0.28", "-29.0499, 82.0081, -56.4257, 0.83", "-29.8696, 84.4305, -57.2415, 0.28", "-30.0424, 84.9723, -57.4197, 0.55", "-31.2454, 88.8075, -58.6749, 0.28", "-31.4904, 89.5699, -58.9438, 0.55", "-32.6412, 93.0891, -60.1862, 0.28", "-33.0432, 94.3002, -60.6505, 0.55", "-33.4345, 95.4847, -61.1324, 0.28", "-33.5685, 95.8812, -61.2922, 1.11", "-34.6914, 98.6271, -62.2991, 0.28", "-35.0249, 99.3892, -62.5508, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-20.2064, 67.5442, -54.3156, 0.55", "-17.4797, 67.2632, -54.7708, 0.55", "-15.1883, 67.027, -55.1533, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "47.6175, 0.546712, -29.4725, 0.28", "50.9563, -0.463313, -34.4734, 0.28", "53.7851, -1.19008, -38.7367, 0.83", "58.0154, -2.0669, -44.8089, 0.28", "59.1038, -2.26509, -46.2553, 0.83", "62.3324, -2.72912, -50.2333, 0.28", "63.1795, -2.81799, -51.2194, 0.55", "64.5064, -2.77631, -52.5269, 0.28", "66.1916, -2.47614, -53.9212, 0.28", "68.0924, -1.96569, -55.0795, 0.83", "69.5923, -1.52974, -55.981, 0.83", "72.231, -0.740509, -57.4673, 0.28", "74.3443, -0.0536831, -58.764, 0.83", "77.3942, 1.0517, -60.6851, 0.28", "77.3942, 1.0517, -60.6851, 0.55", "80.3047, 2.32089, -62.6132, 0.28", "81.2115, 2.68887, -63.1895, 0.55", "83.5101, 3.61795, -64.9314, 0.28", "85.1306, 4.25964, -66.4839, 1.11", "87.4108, 5.05342, -69.4193, 0.28", "88.8772, 5.54988, -71.553, 0.55", "90.1295, 6.00163, -73.5704, 0.28", "93.5951, 7.37382, -79.6797, 0.55", "95.3339, 8.13625, -83.0222, 1.11", "98.6737, 9.80708, -89.9115, 0.28", "99.301, 10.2165, -91.3322, 0.55", "100.186, 10.9892, -93.4574, 0.28", "100.716, 11.6184, -94.7445, 0.55", "101.784, 13.1584, -97.0751, 0.28", "102.221, 14.0133, -98.2016, 1.38", "103.619, 17.6125, -102.428, 0.28", "103.928, 18.5753, -103.691, 0.83", "104.619, 21.0798, -107.259, 0.28", "104.759, 21.684, -108.188, 0.55", "105.16, 23.7885, -111.504, 0.28", "105.25, 24.318, -112.356, 0.55", "105.619, 26.698, -116.011, 0.28", "105.737, 27.3257, -116.915, 0.55", "106.152, 29.5029, -119.783, 0.28", "106.321, 30.2164, -120.585, 0.83", "106.877, 32.2027, -122.439, 0.28", "107.251, 33.3675, -123.335, 0.55", "108.689, 37.0262, -125.428, 0.28", "109.143, 38.0022, -125.83, 0.83", "110.927, 41.4144, -126.803, 0.28", "111.201, 41.8587, -126.897, 0.55", "113.086, 44.5791, -127.287, 0.28", "114.285, 46.2495, -127.449, 0.55", "116.986, 49.9149, -127.527, 0.28", "117.207, 50.2044, -127.532, 0.55", "120.355, 54.2628, -127.76, 0.28", "120.575, 54.5363, -127.776, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "47.6175, 0.546712, -29.4725, 0.83", "49.5072, 1.01633, -30.6006, 0.83", "50.4252, 1.24093, -31.1543, 0.55", "51.0976, 1.35602, -31.5382, 0.55", "52.674, 1.57203, -32.4165, 1.11", "55.6739, 1.82884, -34.2278, 0.28", "56.1211, 1.85867, -34.4953, 1.11", "58.0795, 1.90853, -35.727, 0.28", "59.4863, 1.93434, -36.5785, 0.28", "60.5684, 1.96111, -37.2067, 0.83", "62.7861, 2.05989, -38.4771, 0.28", "64.2492, 2.10765, -39.2003, 0.28", "65.0291, 2.14708, -39.5987, 1.11", "66.9222, 2.31182, -40.5951, 0.28", "67.5477, 2.42582, -40.9294, 0.55", "70.106, 3.01322, -42.1521, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-105.97, 28.1297, -73.3551, 0.28", "-107.874, 29.9687, -73.9496, 0.28", "-108.357, 30.4153, -74.2065, 0.55", "-109.744, 31.6179, -75.0014, 0.28", "-111.213, 32.8751, -75.977, 0.55", "-112.848, 34.2939, -77.0591, 0.28", "-113.199, 34.5982, -77.2902, 0.55", "-115.564, 36.6248, -78.948, 0.28", "-116.233, 37.2068, -79.4472, 0.83", "-117.94, 38.7503, -80.9362, 0.28", "-119.022, 39.8024, -81.9881, 0.83", "-120.97, 41.898, -83.9494, 0.28", "-121.137, 42.0982, -84.1142, 0.83", "-122.662, 44.1535, -85.601, 0.28", "-124.339, 46.7126, -87.4774, 0.83", "-125.311, 48.3966, -88.6802, 0.28", "-125.657, 49.131, -89.2493, 0.55", "-126.129, 50.3956, -90.2538, 0.28", "-126.389, 51.2381, -90.8685, 0.55", "-126.919, 53.5011, -92.2804, 0.28", "-127.037, 54.0799, -92.52, 0.83", "-127.627, 57.0426, -93.5803, 0.28", "-127.76, 57.7675, -93.8038, 0.55", "-128.195, 60.1674, -94.4407, 0.28", "-128.347, 61.0729, -94.6065, 0.83", "-129.429, 67.7039, -95.5208, 0.28", "-129.674, 69.3827, -95.6838, 0.55", "-130.744, 77.5135, -96.2044, 0.28", "-130.875, 78.49, -96.2603, 0.83", "-132.333, 89.2469, -96.8898, 0.28", "-132.545, 90.8317, -96.9689, 0.83", "-133.067, 95.0314, -97.1013, 0.28", "-134.036, 102.674, -97.255, 0.28", "-134.385, 105.334, -97.2714, 0.28", "-134.523, 106.323, -97.2959, 0.83", "-134.849, 108.238, -97.3741, 0.28", "-135.262, 110.421, -97.5299, 0.55", "-135.65, 112.209, -97.7748, 0.28", "-135.867, 113.157, -97.9267, 0.55", "-136.269, 114.848, -98.2131, 0.28", "-136.529, 115.74, -98.321, 0.55", "-138.201, 120.552, -98.728, 0.28", "-139.902, 124.585, -98.9412, 0.28", "-140.659, 126.19, -98.981, 0.28", "-141.189, 127.2, -98.9992, 1.11", "-143.394, 131.024, -99.0385, 0.28", "-143.996, 131.979, -99.0245, 0.55", "-146.861, 135.984, -98.857, 0.28", "-147.058, 136.247, -98.846, 0.55", "-149.102, 139.201, -98.83, 0.28", "-149.348, 139.577, -98.8431, 0.83", "-152.061, 143.787, -99.1639, 0.28", "-152.77, 144.914, -99.2373, 0.55", "-154.665, 147.951, -99.3982, 0.28", "-156.312, 150.634, -99.5593, 0.28", "-158.541, 154.206, -99.7859, 0.28", "-159.093, 155.058, -99.8449, 0.83", "-160.931, 157.728, -100.055, 0.28", "-161.355, 158.311, -100.068, 0.55", "-164.48, 162.321, -99.9115, 0.28", "-165.314, 163.308, -99.8189, 0.55", "-166.507, 164.696, -99.62, 0.28", "-166.966, 165.235, -99.5101, 0.55", "-169.34, 167.921, -98.7648, 0.28", "-170.026, 168.798, -98.5041, 0.55", "-170.829, 169.902, -98.1488, 0.28", "-171.339, 170.712, -97.9206, 0.55", "-172.927, 173.526, -97.2507, 0.28", "-173.053, 173.79, -97.2113, 0.55", "-175.074, 178.645, -96.8726, 0.28", "-175.46, 179.717, -96.8034, 0.55", "-175.983, 181.332, -96.6832, 0.28", "-176.303, 182.429, -96.5872, 0.55", "-177.725, 188.505, -96.1314, 0.28", "-177.938, 189.552, -96.0353, 0.55", "-178.489, 192.679, -95.7234, 0.28", "-178.715, 194.093, -95.5726, 0.83", "-179.274, 197.759, -95.1475, 0.28", "-180.018, 203.312, -94.3606, 0.28", "-180.106, 204.104, -94.2024, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-105.97, 28.1297, -73.3551, 0.28", "-107.637, 28.3834, -73.1432, 0.28", "-108.357, 28.4929, -73.0518, 0.55", "-110.389, 28.8023, -72.7934, 0.28", "-111.024, 28.8989, -72.7127, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.83827, -24.2736, 7.27683, 1.66", "-2.84185, -28.0179, 6.78941, 1.66", "-3.98285, -32.2748, 6.23525, 1.66", "-5.09941, -36.4406, 5.69295, 1.66", "-6.18474, -40.4899, 5.16583, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.83827, -24.2736, 7.27683, 0.83", "3.13229, -26.5471, 12.0184, 0.83", "5.11721, -27.8009, 14.2117, 0.55", "7.01841, -29.2637, 16.7714, 1.11", "8.47123, -30.6839, 19.0493, 0.55", "9.77538, -31.9587, 21.0942, 0.55", "12.4035, -34.5277, 25.2149, 0.28", "13.3672, -35.9814, 27.1647, 0.83", "15.0247, -38.4141, 30.7112, 0.83", "16.0244, -40.2869, 33.4189, 0.55", "24.0878, -45.4793, 41.974, 0.55", "30.2602, -51.8752, 51.2563, 0.55", "36.2573, -60.4847, 58.6778, 0.55", "40.6208, -68.8053, 67.4469, 0.55", "44.1151, -76.8933, 76.8033, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.93912, -15.1341, 4.15095, 0.83", "-5.34414, -15.1451, 4.13476, 0.83", "-9.56759, -15.1334, 4.08082, 0.83", "-13.7638, -15.0999, 4.05991, 0.83", "-16.996, -14.953, 4.04994, 0.83", "-18.2691, -14.8706, 4.04353, 0.83", "-20.1185, -14.7078, 4.03954, 1.11", "-23.9917, -14.342, 3.92243, 0.83", "-26.3059, -14.0063, 3.76781, 0.83", "-28.6789, -13.4939, 3.33949, 0.55", "-30.0156, -13.1632, 2.867, 0.55", "-31.3478, -12.8069, 2.22534, 0.55", "-34.1848, -12.1454, 0.436149, 0.55", "-35.8731, -11.9049, -0.822358, 0.55", "-38.4153, -11.6185, -2.96526, 0.55", "-41.8625, -11.3967, -5.93947, 0.55", "-43.2878, -11.3423, -7.12518, 0.55", "-45.2804, -11.3387, -8.78438, 0.28", "-47.343, -11.413, -10.4387, 0.55", "-49.1362, -11.5643, -11.8059, 0.28", "-51.5498, -11.7517, -13.448, 0.83", "-53.0853, -11.8978, -14.3543, 0.28", "-55.8676, -12.2279, -15.8296, 0.55", "-58.1854, -12.4641, -16.914, 0.55", "-60.3614, -12.7481, -17.8296, 0.55", "-62.0221, -13.0584, -18.4338, 0.83", "-65.418, -13.8032, -19.6115, 0.55", "-67.3272, -14.2244, -20.1723, 0.28", "-67.9404, -14.3581, -20.3271, 0.83", "-70.1468, -14.8539, -20.896, 0.83", "-71.8337, -15.2829, -21.4043, 0.55", "-73.5269, -15.7371, -22.0166, 0.28", "-76.944, -16.6703, -23.2773, 0.55", "-79.1689, -17.3327, -24.0646, 0.28", "-80.1267, -17.6326, -24.3686, 0.55", "-82.0459, -18.2281, -24.8811, 0.28", "-82.624, -18.4081, -24.989, 0.83", "-85.0683, -19.2794, -25.3124, 0.28", "-85.6406, -19.5262, -25.4848, 0.55", "-88.509, -20.9102, -26.4633, 0.28", "-89.6313, -21.4989, -26.969, 0.55", "-90.8952, -22.1689, -27.577, 0.28", "-92.2586, -22.8732, -28.2795, 0.55", "-97.7302, -25.4487, -31.6071, 0.28", "-100.12, -26.4043, -33.036, 0.55", "-103.144, -27.4998, -34.8098, 0.28", "-104.526, -27.942, -35.6331, 0.55", "-107.412, -28.763, -37.2591, 0.28", "-109.644, -29.2223, -38.261, 0.55", "-112.21, -29.5152, -39.0491, 0.28", "-113.14, -29.5051, -39.3964, 0.55", "-115.594, -29.1621, -40.2711, 0.28", "-116.187, -28.9689, -40.6575, 0.55", "-117.371, -28.2493, -41.7522, 0.28", "-117.81, -27.9083, -42.1132, 0.83", "-119.892, -25.8256, -43.7102, 0.28", "-120.695, -24.8873, -44.1375, 0.83", "-124.849, -19.2338, -45.1104, 0.28", "-125.136, -18.7786, -45.1154, 0.83", "-128.546, -12.5934, -44.1055, 0.28", "-128.937, -11.8528, -43.8127, 1.11", "-129.47, -10.8763, -42.8814, 0.28", "-129.751, -10.3686, -42.2098, 0.55", "-130.136, -9.72316, -41.1167, 0.28", "-130.376, -9.28544, -40.4731, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.93912, -15.1341, 4.15095, 0.55", "-6.93479, -15.4241, 4.10417, 0.55", "-9.61118, -15.994, 4.15222, 0.55", "-13.7785, -16.9373, 4.1651, 0.55", "-16.4149, -17.4977, 4.12057, 0.55", "-17.7403, -17.7794, 4.09818, 0.83", "-20.6343, -18.3945, 4.0493, 0.83", "-23.3681, -18.9477, 4.02707, 0.83", "-25.1037, -19.4492, 4.04765, 0.55", "-27.5586, -20.2489, 4.10707, 0.55", "-38.6284, -23.2653, 5.29721, 0.55", "-49.6834, -26.4788, 4.57719, 0.55", "-61.0766, -28.2324, 4.99552, 0.55", "-72.5417, -29.5005, 4.96297, 0.55", "-83.9038, -30.8637, 6.41229, 0.55", "-94.8139, -33.2141, 9.32793, 0.55", "-105.771, -33.5709, 12.9166, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "70.106, 3.01322, -42.1521, 0.55", "71.9982, 3.30232, -41.8128, 0.55", "73.4664, 3.57766, -41.5511, 0.55", "75.6094, 3.99586, -41.1371, 0.28", "77.0503, 4.28338, -40.8516, 0.28", "77.7015, 4.40942, -40.7183, 0.55", "80.3606, 4.90874, -40.1726, 0.28", "81.7896, 5.18619, -39.8242, 0.83", "83.3912, 5.51889, -39.3741, 0.28", "84.0212, 5.61105, -39.1319, 0.55", "85.1954, 5.68441, -38.6119, 0.28", "86.0315, 5.72025, -38.2085, 0.55", "88.4376, 5.74659, -36.8893, 0.28", "89.7243, 5.69448, -36.1388, 0.83", "93.0011, 5.47099, -34.0917, 0.28", "94.2601, 5.34718, -33.2514, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "70.106, 3.01322, -42.1521, 0.55", "70.3253, 2.06077, -42.3584, 0.55", "70.756, 0.475402, -42.6484, 0.55", "70.9481, -0.178542, -42.5624, 0.83", "71.1006, -0.665037, -42.4424, 0.28", "71.1956, -0.969182, -42.3565, 0.55", "71.542, -2.12999, -42.0164, 0.28", "71.7125, -2.6701, -41.826, 0.83", "72.6047, -5.50106, -40.6566, 0.28", "72.7443, -5.91658, -40.4832, 0.55", "72.9514, -6.52991, -40.2426, 0.28", "73.0524, -6.86281, -40.123, 0.55", "73.3021, -7.86229, -39.8391, 0.28", "73.3323, -8.02846, -39.8138, 0.55", "73.4, -8.4981, -39.8462, 0.28", "73.4852, -8.9944, -39.8199, 0.55", "73.7481, -10.3068, -39.6698, 0.28", "73.821, -10.6698, -39.6206, 0.83", "74.0777, -12.0373, -39.3998, 0.28", "74.4042, -13.7805, -39.1075, 0.83", "74.9147, -16.3634, -38.6436, 0.28", "74.9669, -16.5871, -38.602, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.18474, -40.4899, 5.16583, 1.11", "-6.17137, -43.699, 5.05718, 1.11", "-6.12248, -45.5661, 5.05185, 1.11", "-6.36911, -49.1339, 4.981, 1.11", "-6.79496, -53.168, 4.85473, 1.11", "-7.21199, -56.7107, 4.79262, 1.11", "-7.68322, -60.3234, 4.75151, 1.11", "-8.91772, -67.3437, 4.74326, 1.11", "-10.365, -74.5549, 4.72627, 1.11", "-11.3391, -79.012, 4.71516, 1.11", "-12.2413, -82.9713, 4.71665, 1.11", "-12.9072, -85.8372, 4.72357, 1.11", "-13.5589, -88.8214, 4.76808, 1.11", "-14.4078, -93.28, 4.85479, 1.11", "-14.8692, -97.3954, 4.9935, 1.11", "-15.2701, -102.357, 5.13622, 1.11", "-15.3166, -105.384, 5.11958, 1.11", "-15.1133, -109.399, 5.05351, 1.11", "-14.7177, -112.274, 5.02224, 1.11", "-14.1297, -115.137, 4.9861, 1.11", "-13.3108, -118.435, 4.94193, 1.11", "-11.9923, -123.052, 4.84453, 1.11", "-9.54981, -130.992, 4.70586, 1.11", "-7.7268, -136.146, 4.702, 1.11", "-6.48876, -139.884, 4.7448, 0.83", "-5.66658, -142.433, 4.82867, 0.83", "-4.21811, -147.28, 5.12776, 0.83", "-2.68463, -152.693, 5.70399, 0.83", "-1.5367, -157.124, 6.24019, 0.83", "-0.181092, -163.565, 7.06817, 0.83", "0.767843, -168.489, 7.788, 0.83", "1.51023, -173.05, 8.68783, 0.83", "2.37537, -180.184, 10.9506, 0.83", "2.68554, -182.966, 11.9529, 0.83", "2.87013, -185.157, 12.8349, 0.83", "3.10444, -187.302, 13.8908, 0.83", "3.45878, -193.814, 17.5374, 0.83", "3.67883, -199.967, 21.9627, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.18474, -40.4899, 5.16583, 0.83", "-4.45314, -41.3939, 5.36308, 0.83", "-2.62243, -42.3498, 5.57163, 0.83", "0.400304, -43.9279, 5.91596, 0.83", "0.768021, -44.1199, 5.95785, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "44.1151, -76.8933, 76.8033, 0.83", "47.7038, -81.3786, 83.0717, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "44.1151, -76.8933, 76.8033, 0.55", "47.3397, -81.5963, 83.955, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-105.771, -33.5709, 12.9166, 0.83", "-112.196, -33.6876, 9.4715, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-105.771, -33.5709, 12.9166, 0.55", "-109.119, -34.3834, 21.0826, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.67883, -199.967, 21.9627, 0.55", "2.1676, -202.374, 21.2611, 0.55", "0.487605, -205.456, 20.4027, 0.55", "-0.799922, -207.973, 19.7128, 0.28", "-1.90377, -210.456, 19.0089, 0.55", "-2.71602, -212.491, 18.4468, 0.28", "-2.98875, -213.219, 18.2509, 0.55", "-4.40259, -217.608, 17.2446, 0.28", "-4.56471, -218.162, 17.1356, 0.83", "-5.64153, -221.829, 16.5375, 0.28", "-6.23923, -223.802, 16.217, 0.28", "-6.56993, -224.85, 16.0778, 0.55", "-7.58857, -227.961, 15.7029, 0.28", "-7.77229, -228.476, 15.6617, 0.55", "-8.38045, -229.992, 15.5936, 0.28", "-9.13666, -231.346, 15.6723, 0.83", "-10.813, -240.047, 13.6723, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.67883, -199.967, 21.9627, 0.55", "4.60033, -202.51, 24.7972, 0.55", "5.27347, -203.935, 26.3139, 0.28", "5.63702, -204.556, 26.9566, 0.55", "6.87695, -206.374, 28.8268, 0.55", "8.00157, -208.002, 30.413, 0.55", "9.18227, -209.71, 32.0783, 0.55", "10.3893, -211.411, 33.4776, 0.55", "11.1267, -212.311, 34.2413, 0.28", "11.7082, -212.93, 34.772, 0.55", "13.829, -214.812, 36.2878, 0.28", "19.1105, -221.4, 43.8805, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.768021, -44.1199, 5.95785, 0.28", "-0.083875, -41.2157, 4.7912, 0.28", "-0.151415, -40.9252, 4.68966, 0.83", "-0.480999, -39.2028, 4.15948, 0.28", "-0.625226, -38.2999, 3.9681, 0.83", "-1.07034, -34.5976, 3.44047, 0.28", "-1.15151, -33.6945, 3.29049, 0.55", "-1.30599, -31.9257, 2.97282, 0.28", "-1.35639, -31.0183, 2.81239, 0.55", "-1.37592, -29.202, 2.50715, 0.28", "-1.35104, -27.6303, 2.32433, 0.55", "-1.11553, -24.0658, 2.29662, 0.28", "-1.05791, -23.092, 2.2153, 0.55", "-2.2169, -11.8988, 2.38477, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.768021, -44.1199, 5.95785, 0.83", "0.830725, -45.8623, 6.08579, 0.83", "0.831894, -48.1115, 6.31679, 0.83", "0.811032, -49.3168, 6.4517, 0.83", "0.820985, -51.6585, 6.70848, 0.83", "0.989075, -54.7195, 6.99421, 0.83", "1.12806, -55.8968, 7.0835, 0.83", "1.37956, -57.3335, 7.192, 0.83", "1.80724, -59.2667, 7.2678, 0.83", "2.30349, -61.0694, 7.27903, 0.83", "2.9065, -62.9934, 7.20883, 0.83", "3.68672, -65.4501, 6.979, 0.83", "4.09352, -66.6575, 6.84052, 0.83", "5.51283, -70.5505, 6.33311, 0.83", "5.91039, -71.6326, 6.18916, 0.83", "6.97237, -74.6476, 5.79881, 0.83", "7.626, -76.6381, 5.6492, 0.83", "8.44997, -79.0941, 5.57481, 0.83", "8.83317, -80.2927, 5.5939, 0.55", "9.29508, -82.1188, 5.73349, 0.55", "9.54059, -83.3369, 5.89602, 0.83", "10.1161, -86.8224, 6.51494, 0.83", "10.3974, -88.9764, 6.95772, 0.55", "10.5993, -91.4842, 7.50971, 0.55", "10.727, -94.3628, 8.15608, 0.55", "10.7596, -96.3533, 8.60503, 0.55", "10.7392, -100.54, 9.46139, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.7392, -100.54, 9.46139, 0.55", "11.5903, -102.18, 9.18258, 0.55", "12.6191, -104.248, 8.66765, 0.55", "14.7415, -108.821, 7.42978, 0.55", "16.0555, -111.876, 6.57654, 0.55", "17.0832, -114.4, 5.87883, 0.55", "18.1107, -117.104, 4.97847, 0.55", "19.2954, -120.57, 3.62395, 0.55", "19.8421, -122.397, 2.8092, 0.55", "20.3923, -124.521, 1.81125, 0.55", "20.8942, -126.172, 1.0198, 0.83", "22.1799, -130.357, -0.800865, 0.55", "22.4603, -131.21, -1.12836, 0.55", "23.2057, -133.316, -1.81294, 0.55", "24.6162, -137.012, -2.91794, 0.55", "25.5438, -139.376, -3.50731, 0.55", "27.0591, -143.279, -4.2298, 0.55", "27.7388, -145.032, -4.40728, 0.83", "28.1631, -146.163, -4.52458, 0.28", "28.2798, -146.5, -4.56114, 0.55", "28.591, -147.554, -4.67432, 0.28", "28.8288, -148.325, -4.75279, 0.55", "29.4534, -149.882, -4.91901, 0.28", "30.6839, -152.242, -5.19924, 0.55", "32.2231, -154.65, -5.5437, 0.28", "32.6941, -155.262, -5.64331, 0.83", "34.7158, -157.476, -6.11342, 0.28", "35.7241, -158.44, -6.34988, 0.55", "37.2986, -159.755, -6.70814, 0.55", "38.7878, -160.835, -7.06673, 0.55", "40.4375, -161.919, -7.46707, 0.55", "42.1632, -163.057, -7.90034, 0.28", "42.6295, -163.392, -8.02699, 0.55", "43.8574, -164.436, -8.38281, 0.28", "44.1087, -164.689, -8.45861, 0.55", "45.3375, -166.035, -8.82141, 0.28", "45.6525, -166.429, -8.92998, 0.83", "48.1305, -169.721, -9.85918, 0.28", "48.2806, -169.934, -9.93949, 0.55", "49.7781, -172.079, -10.8984, 0.28", "50.2043, -172.707, -11.2131, 0.55", "51.3705, -174.48, -12.1605, 0.28", "51.5039, -174.681, -12.2657, 0.55", "53.6906, -177.891, -14.0119, 0.28", "54.091, -178.476, -14.3111, 0.55", "55.1444, -180.076, -15.0491, 0.28", "55.9505, -181.261, -15.5658, 0.83", "57.7739, -183.866, -16.5701, 0.28", "57.7739, -183.866, -16.5701, 0.55", "58.6561, -185.002, -17.0568, 0.55", "59.4339, -185.948, -17.4851, 0.55", "61.8841, -188.655, -18.7744, 0.28", "62.5995, -189.401, -19.1551, 0.55", "64.623, -191.316, -20.1853, 0.28", "65.6504, -192.244, -20.6702, 0.28", "67.2555, -193.573, -21.4635, 0.55", "67.7532, -193.961, -21.6982, 0.28", "68.0179, -194.174, -21.8125, 0.55", "69.3859, -195.331, -22.3997, 0.28", "69.9478, -195.8, -22.6924, 0.55", "73.2292, -198.524, -24.5845, 0.28", "74.2069, -199.356, -25.2978, 0.83", "75.0972, -200.148, -26.0323, 0.28", "75.4392, -200.458, -26.3306, 0.55", "78.4145, -203.243, -29.1686, 0.28", "79.5064, -204.224, -30.2472, 0.55", "81.6554, -206.174, -32.5822, 0.28", "81.9448, -206.421, -32.9448, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.7392, -100.54, 9.46139, 0.55", "10.7281, -102.41, 10.1134, 0.55", "10.7728, -103.98, 10.6552, 0.28", "10.7913, -104.923, 10.9699, 0.83", "10.8084, -106.696, 11.6159, 0.28", "10.8033, -107.143, 11.763, 0.83", "10.7178, -109.07, 12.4342, 0.28", "10.7034, -109.295, 12.5043, 0.55", "10.6082, -110.102, 12.744, 0.55", "10.414, -111.236, 13.0868, 0.28", "10.155, -112.632, 13.4775, 0.55", "9.64932, -115.196, 14.2768, 0.28", "9.41045, -116.407, 14.6891, 0.83", "9.0361, -118.281, 15.3543, 0.28", "8.68182, -120.094, 16.0398, 0.28", "8.27319, -121.996, 16.7923, 0.28", "7.8386, -123.817, 17.5991, 0.83", "7.48295, -125.227, 18.2099, 0.28", "7.10021, -126.709, 18.905, 0.83", "6.69072, -128.188, 19.594, 0.28", "6.51558, -128.811, 19.9017, 0.28", "5.97309, -130.213, 20.6125, 0.55", "5.3941, -131.644, 21.1704, 0.55", "3.30403, -139.245, 24.1255, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "axon_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "axon_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_NBC_3552e1f34a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, axon_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, axon_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.45000007819020027)
    connect dend_41(0), soma_0(0.45000007819020027)
    connect dend_40(0), soma_0(0.45000007819020027)
    connect dend_39(0), soma_0(0.45000007819020027)
    connect dend_34(0), soma_0(0.45000007819020027)
    connect dend_27(0), soma_0(0.45000007819020027)
    connect dend_22(0), soma_0(0.45000007819020027)
    connect dend_19(0), soma_0(0.45000007819020027)
    connect dend_0(0), soma_0(0.45000007819020027)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.06688, 8.74128, -1.1272, 2.20257 ) }
    soma_0 { pt3dadd( -0.937306, 7.82691, -0.999547, 3.85541 ) }
    soma_0 { pt3dadd( -0.807729, 6.91254, -0.871898, 5.84624 ) }
    soma_0 { pt3dadd( -0.678152, 5.99818, -0.744249, 7.26434 ) }
    soma_0 { pt3dadd( -0.548576, 5.08381, -0.6166, 10.3712 ) }
    soma_0 { pt3dadd( -0.418999, 4.16944, -0.488951, 11.2076 ) }
    soma_0 { pt3dadd( -0.289422, 3.25508, -0.361302, 11.8779 ) }
    soma_0 { pt3dadd( -0.159846, 2.34071, -0.233653, 11.9642 ) }
    soma_0 { pt3dadd( -0.0302691, 1.42634, -0.106004, 11.5058 ) }
    soma_0 { pt3dadd( 0.0993075, 0.511976, 0.0216455, 11.0473 ) }
    soma_0 { pt3dadd( 0.228884, -0.402391, 0.149295, 10.6248 ) }
    soma_0 { pt3dadd( 0.358461, -1.31676, 0.276944, 10.1128 ) }
    soma_0 { pt3dadd( 0.488037, -2.23113, 0.404593, 9.57755 ) }
    soma_0 { pt3dadd( 0.617614, -3.14549, 0.532242, 9.04063 ) }
    soma_0 { pt3dadd( 0.747191, -4.05986, 0.659891, 8.48926 ) }
    soma_0 { pt3dadd( 0.876767, -4.97423, 0.78754, 7.85518 ) }
    soma_0 { pt3dadd( 1.00634, -5.88859, 0.915189, 7.19302 ) }
    soma_0 { pt3dadd( 1.13592, -6.80296, 1.04284, 6.47635 ) }
    soma_0 { pt3dadd( 1.2655, -7.71733, 1.17049, 5.43009 ) }
    soma_0 { pt3dadd( 1.39507, -8.63169, 1.29814, 3.7337 ) }
    soma_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 2.56951 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.70824, 3.35321, -7.70142, 0.83 ) }
    dend_42 { pt3dadd( -6.53866, 3.88497, -9.45578, 0.83 ) }
    dend_42 { pt3dadd( -8.15423, 3.99495, -10.7289, 1.11 ) }
    dend_42 { pt3dadd( -11.0523, 4.20238, -12.8906, 1.11 ) }
    dend_42 { pt3dadd( -13.8657, 4.00453, -15.8186, 1.11 ) }
    dend_42 { pt3dadd( -14.7523, 3.87909, -16.7769, 0.83 ) }
    dend_42 { pt3dadd( -17.627, 3.33885, -19.8419, 0.83 ) }
    dend_42 { pt3dadd( -18.6675, 3.01581, -21.0256, 0.55 ) }
    dend_42 { pt3dadd( -20.6444, 2.10888, -23.2556, 0.55 ) }
    dend_42 { pt3dadd( -25.3346, -0.526206, -28.4427, 0.83 ) }
    dend_42 { pt3dadd( -27.4681, -1.77816, -30.857, 0.55 ) }
    dend_42 { pt3dadd( -28.1326, -2.1397, -31.7648, 0.83 ) }
    dend_42 { pt3dadd( -28.906, -2.53295, -33.0694, 0.55 ) }
    dend_42 { pt3dadd( -29.4957, -2.83725, -34.1285, 1.11 ) }
    dend_42 { pt3dadd( -31.0648, -3.61024, -37.0322, 1.11 ) }
    dend_42 { pt3dadd( -33.0259, -4.29911, -40.533, 0.83 ) }
    dend_42 { pt3dadd( -35.0802, -4.92802, -44.6392, 0.83 ) }
    dend_42 { pt3dadd( -36.9082, -5.2914, -48.3368, 0.28 ) }
    dend_42 { pt3dadd( -37.212, -5.31133, -48.9404, 0.55 ) }
    dend_42 { pt3dadd( -37.9687, -5.26772, -50.4158, 0.28 ) }
    dend_42 { pt3dadd( -38.7412, -5.09771, -51.8504, 0.55 ) }
    dend_42 { pt3dadd( -39.4435, -4.80385, -53.0138, 0.28 ) }
    dend_42 { pt3dadd( -40.165, -4.48473, -53.9241, 0.83 ) }
    dend_42 { pt3dadd( -41.8873, -3.64998, -56.2944, 0.28 ) }
    dend_42 { pt3dadd( -42.0036, -3.59029, -56.4731, 0.55 ) }
    dend_42 { pt3dadd( -42.8022, -3.16811, -57.8946, 0.28 ) }
    dend_42 { pt3dadd( -43.5722, -2.76375, -59.427, 0.83 ) }
    dend_42 { pt3dadd( -43.771, -2.68381, -59.843, 0.83 ) }
    dend_42 { pt3dadd( -46.094, -2.01696, -64.8095, 0.28 ) }
    dend_42 { pt3dadd( -46.425, -1.94363, -65.4899, 0.55 ) }
    dend_42 { pt3dadd( -47.8465, -1.71194, -68.2581, 0.28 ) }
    dend_42 { pt3dadd( -48.4626, -1.65536, -69.4469, 0.83 ) }
    dend_42 { pt3dadd( -49.6833, -1.53406, -71.7133, 0.28 ) }
    dend_42 { pt3dadd( -50.3012, -1.46072, -72.7673, 0.55 ) }
    dend_42 { pt3dadd( -50.9426, -1.38397, -73.724, 0.28 ) }
    dend_42 { pt3dadd( -51.282, -1.33419, -74.2467, 0.55 ) }
    dend_42 { pt3dadd( -54.484, -0.641955, -79.0885, 0.28 ) }
    dend_42 { pt3dadd( -54.8636, -0.515102, -79.7282, 0.55 ) }
    dend_42 { pt3dadd( -55.2177, -0.359528, -80.382, 0.28 ) }
    dend_42 { pt3dadd( -55.5119, -0.196865, -81.0557, 0.83 ) }
    dend_42 { pt3dadd( -56.5611, 0.497252, -84.0146, 0.28 ) }
    dend_42 { pt3dadd( -56.6796, 0.608572, -84.4497, 0.83 ) }
    dend_42 { pt3dadd( -57.1181, 1.23363, -86.5606, 0.28 ) }
    dend_42 { pt3dadd( -57.1974, 1.31642, -86.912, 0.83 ) }
    dend_42 { pt3dadd( -57.7345, 1.84179, -89.268, 0.28 ) }
    dend_42 { pt3dadd( -57.8227, 1.92626, -89.6508, 0.83 ) }
    dend_42 { pt3dadd( -58.4262, 2.5016, -92.2147, 0.28 ) }
    dend_42 { pt3dadd( -58.5372, 2.60165, -92.6807, 0.83 ) }
    dend_42 { pt3dadd( -60.2083, 3.95445, -99.2006, 0.28 ) }
    dend_42 { pt3dadd( -61.1443, 4.62173, -102.557, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 71/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.88824, 6.39321, -6.65142, 1.11 ) }
    dend_41 { pt3dadd( -4.58832, 7.19023, -8.91446, 1.11 ) }
    dend_41 { pt3dadd( -5.0617, 7.44997, -10.3908, 1.11 ) }
    dend_41 { pt3dadd( -5.93538, 7.67287, -13.5049, 0.83 ) }
    dend_41 { pt3dadd( -6.58441, 7.6874, -15.9457, 1.38 ) }
    dend_41 { pt3dadd( -8.63872, 7.3644, -24.3065, 0.83 ) }
    dend_41 { pt3dadd( -9.56011, 7.20378, -28.3988, 0.83 ) }
    dend_41 { pt3dadd( -11.2535, 6.72747, -38.2351, 0.83 ) }
    dend_41 { pt3dadd( -13.0485, 5.93842, -49.7051, 0.83 ) }
    dend_41 { pt3dadd( -13.5944, 5.55223, -53.3995, 0.83 ) }
    dend_41 { pt3dadd( -13.9596, 5.21842, -55.7476, 0.83 ) }
    dend_41 { pt3dadd( -14.4494, 4.67233, -58.8739, 0.83 ) }
    dend_41 { pt3dadd( -14.6745, 4.21917, -61.9756, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.44824, 7.31321, -3.11142, 0.83 ) }
    dend_40 { pt3dadd( -4.3553, 9.38042, -3.60626, 0.55 ) }
    dend_40 { pt3dadd( -5.50346, 10.6683, -3.88414, 0.55 ) }
    dend_40 { pt3dadd( -6.43983, 11.8212, -4.18179, 1.11 ) }
    dend_40 { pt3dadd( -7.74185, 13.4972, -4.63022, 0.83 ) }
    dend_40 { pt3dadd( -10.2771, 17.2164, -5.5583, 0.83 ) }
    dend_40 { pt3dadd( -12.0324, 20.0588, -6.20848, 0.83 ) }
    dend_40 { pt3dadd( -13.8913, 23.3195, -6.89373, 0.83 ) }
    dend_40 { pt3dadd( -15.2075, 25.8315, -7.24621, 0.83 ) }
    dend_40 { pt3dadd( -16.2987, 28.2645, -7.41512, 1.38 ) }
    dend_40 { pt3dadd( -17.5745, 31.6807, -7.33078, 0.55 ) }
    dend_40 { pt3dadd( -18.258, 34.1823, -6.96682, 0.55 ) }
    dend_40 { pt3dadd( -18.7074, 35.9193, -6.5518, 0.55 ) }
    dend_40 { pt3dadd( -19.6067, 39.1232, -5.62731, 0.55 ) }
    dend_40 { pt3dadd( -20.0141, 40.4441, -5.19948, 0.55 ) }
    dend_40 { pt3dadd( -20.8738, 42.9394, -4.41777, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_40 { pt3dadd( -22.7012, 47.6335, -3.18647, 0.55 ) }
    dend_40 { pt3dadd( -23.4951, 49.681, -2.77159, 0.28 ) }
    dend_40 { pt3dadd( -24.3399, 51.9283, -2.47834, 0.28 ) }
    dend_40 { pt3dadd( -24.9778, 53.8299, -2.33059, 0.55 ) }
    dend_40 { pt3dadd( -25.5069, 55.7824, -2.25452, 0.28 ) }
    dend_40 { pt3dadd( -26.6114, 61.203, -2.25729, 0.83 ) }
    dend_40 { pt3dadd( -26.883, 63.442, -2.35476, 0.55 ) }
    dend_40 { pt3dadd( -27.0066, 66.061, -2.51094, 0.28 ) }
    dend_40 { pt3dadd( -27.0191, 67.963, -2.635, 0.55 ) }
    dend_40 { pt3dadd( -26.7971, 74.0057, -3.07757, 0.28 ) }
    dend_40 { pt3dadd( -26.6945, 75.0453, -3.16343, 0.83 ) }
    dend_40 { pt3dadd( -26.0245, 78.9167, -3.60475, 0.28 ) }
    dend_40 { pt3dadd( -25.7862, 80.049, -3.75521, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.69824, 6.32321, 3.79858, 1.11 ) }
    dend_39 { pt3dadd( -4.93901, 11.458, 4.25143, 1.11 ) }
    dend_39 { pt3dadd( -6.88609, 18.5451, 4.94914, 1.11 ) }
    dend_39 { pt3dadd( -8.06453, 23.1654, 5.34926, 1.11 ) }
    dend_39 { pt3dadd( -9.72696, 29.1751, 5.88746, 1.11 ) }
    dend_39 { pt3dadd( -11.5454, 35.3824, 6.40534, 1.11 ) }
    dend_39 { pt3dadd( -12.9534, 40.502, 6.74472, 1.11 ) }
    dend_39 { pt3dadd( -14.04, 44.4614, 6.76026, 1.11 ) }
    dend_39 { pt3dadd( -15.3273, 49.3646, 6.45318, 1.11 ) }
    dend_39 { pt3dadd( -16.2823, 53.6714, 6.071, 1.11 ) }
    dend_39 { pt3dadd( -17.1868, 58.9759, 5.5084, 1.11 ) }
    dend_39 { pt3dadd( -18.0589, 65.3559, 4.67199, 1.11 ) }
    dend_39 { pt3dadd( -18.8647, 74.0245, 3.29388, 1.11 ) }
    dend_39 { pt3dadd( -19.1374, 77.4661, 2.7219, 1.11 ) }
    dend_39 { pt3dadd( -19.4292, 81.7996, 2.0166, 0.83 ) }
    dend_39 { pt3dadd( -19.5175, 85.7386, 1.385, 0.83 ) }
    dend_39 { pt3dadd( -19.5429, 90.2118, 0.746834, 1.11 ) }
    dend_39 { pt3dadd( -19.5793, 95.3457, 0.205093, 1.11 ) }
    dend_39 { pt3dadd( -19.5598, 96.9848, 0.111535, 0.28 ) }
    dend_39 { pt3dadd( -19.5541, 100.01, -0.032653, 0.55 ) }
    dend_39 { pt3dadd( -19.6139, 102.132, -0.125856, 0.55 ) }
    dend_39 { pt3dadd( -19.7882, 105.495, -0.337092, 0.55 ) }
    dend_39 { pt3dadd( -19.9841, 108.404, -0.583945, 0.28 ) }
    dend_39 { pt3dadd( -20.0479, 109.433, -0.740177, 0.83 ) }
    dend_39 { pt3dadd( -20.2141, 111.71, -1.15469, 0.28 ) }
    dend_39 { pt3dadd( -20.8287, 117.833, -2.15526, 0.55 ) }
    dend_39 { pt3dadd( -21.2495, 121.639, -2.82154, 0.28 ) }
    dend_39 { pt3dadd( -21.4958, 124.313, -3.30902, 1.11 ) }
    dend_39 { pt3dadd( -21.8678, 129.833, -4.35294, 0.28 ) }
    dend_39 { pt3dadd( -21.9949, 133.569, -5.01086, 1.11 ) }
    dend_39 { pt3dadd( -21.9774, 138.014, -5.74263, 0.28 ) }
    dend_39 { pt3dadd( -21.7756, 140.942, -6.1449, 0.55 ) }
    dend_39 { pt3dadd( -21.366, 144.065, -6.34999, 0.28 ) }
    dend_39 { pt3dadd( -21.0447, 145.677, -6.36403, 0.28 ) }
    dend_39 { pt3dadd( -20.5781, 147.398, -6.27038, 0.55 ) }
    dend_39 { pt3dadd( -19.8207, 149.673, -6.17144, 0.28 ) }
    dend_39 { pt3dadd( -19.1924, 151.414, -6.12224, 0.83 ) }
    dend_39 { pt3dadd( -18.2346, 154.161, -5.89827, 0.28 ) }
    dend_39 { pt3dadd( -17.9879, 154.915, -5.83816, 0.83 ) }
    dend_39 { pt3dadd( -17.0008, 158.085, -5.63027, 0.55 ) }
    dend_39 { pt3dadd( -16.2287, 160.63, -5.50793, 0.28 ) }
    dend_39 { pt3dadd( -15.9465, 161.614, -5.45423, 0.55 ) }
    dend_39 { pt3dadd( -15.0664, 164.491, -5.32136, 0.28 ) }
    dend_39 { pt3dadd( -14.8624, 165.186, -5.2972, 0.55 ) }
    dend_39 { pt3dadd( -14.1807, 167.407, -5.21372, 0.28 ) }
    dend_39 { pt3dadd( -13.936, 168.17, -5.18992, 0.55 ) }
    dend_39 { pt3dadd( -13.2595, 170.633, -5.13423, 0.28 ) }
    dend_39 { pt3dadd( -12.4981, 174.192, -5.10575, 0.83 ) }
    dend_39 { pt3dadd( -12.1601, 176.381, -5.11484, 0.28 ) }
    dend_39 { pt3dadd( -12.0448, 177.834, -5.22505, 0.83 ) }
    dend_39 { pt3dadd( -11.9614, 180.428, -5.56339, 0.28 ) }
    dend_39 { pt3dadd( -11.9187, 182.535, -5.93389, 0.55 ) }
    dend_39 { pt3dadd( -11.9087, 184.088, -6.25552, 0.28 ) }
    dend_39 { pt3dadd( -11.9546, 186.923, -6.91208, 0.83 ) }
    dend_39 { pt3dadd( -12.0121, 192.468, -8.22967, 0.28 ) }
    dend_39 { pt3dadd( -12.0222, 193.769, -8.53365, 0.55 ) }
    dend_39 { pt3dadd( -12.0467, 199.693, -9.90879, 0.55 ) }
    dend_39 { pt3dadd( -12.03, 200.402, -10.0746, 0.55 ) }
    dend_39 { pt3dadd( -11.9164, 202.998, -10.6597, 0.28 ) }
    dend_39 { pt3dadd( -11.8578, 204.317, -10.9399, 0.55 ) }
    dend_39 { pt3dadd( -11.7919, 205.943, -11.1465, 0.28 ) }
    dend_39 { pt3dadd( -11.8341, 207.598, -11.3396, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.18176, 4.76321, -6.33142, 0.83 ) }
    dend_34 { pt3dadd( 4.55585, 7.05136, -9.64694, 0.83 ) }
    dend_34 { pt3dadd( 4.47414, 8.51126, -12.1676, 0.83 ) }
    dend_34 { pt3dadd( 4.38495, 9.70468, -14.1631, 1.94 ) }
    dend_34 { pt3dadd( 4.29625, 11.7733, -17.7814, 0.83 ) }
    dend_34 { pt3dadd( 4.23909, 13.0665, -19.9807, 1.11 ) }
    dend_34 { pt3dadd( 4.12407, 16.0651, -24.6712, 1.38 ) }
    dend_34 { pt3dadd( 3.86904, 17.5976, -27.0258, 0.28 ) }
    dend_34 { pt3dadd( 3.53448, 19.0234, -29.0481, 0.83 ) }
    dend_34 { pt3dadd( 2.71258, 21.9987, -32.5949, 0.28 ) }
    dend_34 { pt3dadd( 2.37894, 23.1744, -33.6604, 0.83 ) }
    dend_34 { pt3dadd( 1.80243, 25.2482, -35.067, 0.83 ) }
    dend_34 { pt3dadd( 1.05082, 27.7566, -36.4078, 1.11 ) }
    dend_34 { pt3dadd( -0.369536, 31.8682, -38.4976, 0.28 ) }
    dend_34 { pt3dadd( -1.20669, 33.8522, -39.4702, 0.83 ) }
    dend_34 { pt3dadd( -2.5611, 36.7228, -40.7609, 0.55 ) }
    dend_34 { pt3dadd( -3.56339, 38.6866, -41.702, 0.83 ) }
    dend_34 { pt3dadd( -4.88985, 41.121, -42.901, 0.28 ) }
    dend_34 { pt3dadd( -6.62858, 44.2199, -44.4587, 0.83 ) }
    dend_34 { pt3dadd( -8.25412, 47.1349, -45.7568, 0.55 ) }
    dend_34 { pt3dadd( -9.45307, 49.2451, -46.6896, 0.83 ) }
    dend_34 { pt3dadd( -11.6702, 52.855, -48.224, 0.28 ) }
    dend_34 { pt3dadd( -12.2186, 53.7295, -48.5695, 0.55 ) }
    dend_34 { pt3dadd( -13.1366, 55.1816, -49.0879, 0.28 ) }
    dend_34 { pt3dadd( -15.0492, 58.1322, -50.0679, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -16.4625, 60.4302, -50.8011, 0.28 ) }
    dend_34 { pt3dadd( -17.6687, 62.4489, -51.4348, 0.83 ) }
    dend_34 { pt3dadd( -18.1441, 63.2741, -51.6651, 0.28 ) }
    dend_34 { pt3dadd( -19.2639, 65.2284, -52.2242, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.99176, 3.38321, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 8.6557, 3.22987, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 11.4132, 3.11446, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 15.2875, 2.95232, -9.40142, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 8/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.36824, 1.16321, 0.248578, 0.55 ) }
    dend_22 { pt3dadd( -7.39072, 1.43561, -1.17625, 0.55 ) }
    dend_22 { pt3dadd( -9.13439, 1.67046, -2.40465, 0.83 ) }
    dend_22 { pt3dadd( -12.552, 2.13076, -4.81233, 0.83 ) }
    dend_22 { pt3dadd( -18.6762, 2.95561, -9.12682, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 13/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.65176, -7.97679, -3.47142, 0.83 ) }
    dend_19 { pt3dadd( 3.17351, -10.4578, -4.51453, 0.83 ) }
    dend_19 { pt3dadd( 3.53892, -12.8281, -5.71308, 0.83 ) }
    dend_19 { pt3dadd( 3.87338, -15.9188, -7.72105, 1.11 ) }
    dend_19 { pt3dadd( 4.27601, -19.9843, -10.6307, 0.83 ) }
    dend_19 { pt3dadd( 4.7255, -24.2663, -13.904, 0.83 ) }
    dend_19 { pt3dadd( 5.14847, -28.2796, -17.1083, 0.55 ) }
    dend_19 { pt3dadd( 5.31567, -30.0086, -18.661, 0.83 ) }
    dend_19 { pt3dadd( 5.63243, -33.4805, -22.201, 0.55 ) }
    dend_19 { pt3dadd( 5.70724, -34.3878, -23.2726, 0.55 ) }
    dend_19 { pt3dadd( 5.68504, -36.5316, -26.1393, 0.83 ) }
    dend_19 { pt3dadd( 5.51019, -38.2158, -28.6678, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.14824, -9.92679, 4.18858, 2.22 ) }
    dend_0 { pt3dadd( -0.921767, -12.4212, 4.32973, 2.22 ) }
    dend_0 { pt3dadd( -1.84636, -15.4029, 4.49846, 3.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 3.6293, -24.3977, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 31/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -19.2639, 65.2284, -52.2242, 0.28 ) }
    dend_38 { pt3dadd( -21.3458, 66.5525, -51.4826, 0.28 ) }
    dend_38 { pt3dadd( -22.1008, 67.0197, -51.2219, 0.28 ) }
    dend_38 { pt3dadd( -23.0598, 67.6185, -50.9062, 0.55 ) }
    dend_38 { pt3dadd( -24.0509, 68.2246, -50.5818, 0.28 ) }
    dend_38 { pt3dadd( -24.8376, 68.6975, -50.328, 0.55 ) }
    dend_38 { pt3dadd( -26.3631, 69.6052, -49.8428, 0.28 ) }
    dend_38 { pt3dadd( -27.6385, 70.3739, -49.3965, 0.28 ) }
    dend_38 { pt3dadd( -28.888, 71.1857, -48.9528, 0.55 ) }
    dend_38 { pt3dadd( -30.612, 72.3476, -48.3788, 0.28 ) }
    dend_38 { pt3dadd( -31.3632, 72.8889, -48.1835, 0.28 ) }
    dend_38 { pt3dadd( -31.9281, 73.3306, -48.06, 0.55 ) }
    dend_38 { pt3dadd( -34.5064, 75.6132, -47.6689, 0.28 ) }
    dend_38 { pt3dadd( -36.5505, 77.5404, -47.4336, 0.28 ) }
    dend_38 { pt3dadd( -37.2757, 78.2732, -47.3872, 0.55 ) }
    dend_38 { pt3dadd( -39.7385, 80.9852, -47.2992, 0.28 ) }
    dend_38 { pt3dadd( -40.2777, 81.6102, -47.285, 0.55 ) }
    dend_38 { pt3dadd( -43.3645, 85.2743, -47.2686, 0.28 ) }
    dend_38 { pt3dadd( -43.7468, 85.7424, -47.2796, 1.38 ) }
    dend_38 { pt3dadd( -46.7675, 89.5125, -47.3326, 0.28 ) }
    dend_38 { pt3dadd( -49.2977, 92.724, -47.2834, 0.28 ) }
    dend_38 { pt3dadd( -50.7977, 94.6615, -47.1832, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -19.2639, 65.2284, -52.2242, 0.83 ) }
    dend_35 { pt3dadd( -19.4887, 65.7806, -52.7229, 0.83 ) }
    dend_35 { pt3dadd( -19.745, 66.4105, -53.2917, 0.28 ) }
    dend_35 { pt3dadd( -20.2064, 67.5442, -54.3156, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 15.2875, 2.95232, -9.40142, 1.11 ) }
    dend_29 { pt3dadd( 18.0685, 2.84221, -10.7182, 1.11 ) }
    dend_29 { pt3dadd( 20.4374, 2.58548, -11.8879, 1.11 ) }
    dend_29 { pt3dadd( 23.0101, 2.32745, -13.337, 1.11 ) }
    dend_29 { pt3dadd( 26.0079, 2.06782, -15.1565, 1.11 ) }
    dend_29 { pt3dadd( 30.1856, 1.69161, -17.7048, 1.11 ) }
    dend_29 { pt3dadd( 34.2248, 1.32789, -20.1685, 1.11 ) }
    dend_29 { pt3dadd( 38.1423, 1.1217, -22.7008, 0.83 ) }
    dend_29 { pt3dadd( 41.2308, 0.983362, -24.8241, 0.83 ) }
    dend_29 { pt3dadd( 43.4346, 0.843392, -26.396, 0.83 ) }
    dend_29 { pt3dadd( 47.6175, 0.546712, -29.4725, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 15.2875, 2.95232, -9.40142, 0.55 ) }
    dend_28 { pt3dadd( 18.2297, 3.44237, -8.96251, 0.55 ) }
    dend_28 { pt3dadd( 20.478, 3.81686, -8.6271, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -18.6762, 2.95561, -9.12682, 0.83 ) }
    dend_24 { pt3dadd( -22.4544, 2.6266, -10.5765, 0.83 ) }
    dend_24 { pt3dadd( -24.5885, 2.74059, -11.4435, 0.83 ) }
    dend_24 { pt3dadd( -26.5727, 2.72908, -12.276, 1.94 ) }
    dend_24 { pt3dadd( -29.8736, 2.46014, -15.0216, 0.55 ) }
    dend_24 { pt3dadd( -32.2991, 2.22684, -17.2418, 0.55 ) }
    dend_24 { pt3dadd( -35.5282, 2.01238, -20.2079, 0.83 ) }
    dend_24 { pt3dadd( -37.9044, 1.84926, -22.4193, 0.83 ) }
    dend_24 { pt3dadd( -40.3982, 1.81701, -24.8507, 0.83 ) }
    dend_24 { pt3dadd( -49.801, 2.08811, -34.1115, 1.38 ) }
    dend_24 { pt3dadd( -53.3981, 2.2978, -37.6151, 0.55 ) }
    dend_24 { pt3dadd( -56.4348, 2.48468, -40.6683, 0.55 ) }
    dend_24 { pt3dadd( -58.727, 2.60444, -42.9644, 1.11 ) }
    dend_24 { pt3dadd( -62.477, 2.9571, -46.4392, 0.28 ) }
    dend_24 { pt3dadd( -63.1804, 3.08842, -46.9637, 0.28 ) }
    dend_24 { pt3dadd( -64.3004, 3.38662, -47.4634, 0.83 ) }
    dend_24 { pt3dadd( -68.5939, 4.807, -49.1144, 0.28 ) }
    dend_24 { pt3dadd( -69.6617, 5.20932, -49.4604, 0.55 ) }
    dend_24 { pt3dadd( -72.9024, 6.62413, -50.4773, 0.28 ) }
    dend_24 { pt3dadd( -76.673, 8.22738, -51.8137, 1.11 ) }
    dend_24 { pt3dadd( -79.2787, 9.3824, -52.9284, 0.28 ) }
    dend_24 { pt3dadd( -81.1436, 10.2323, -53.8463, 0.83 ) }
    dend_24 { pt3dadd( -85.8842, 12.5642, -56.4442, 0.28 ) }
    dend_24 { pt3dadd( -87.8628, 13.6543, -57.7552, 0.83 ) }
    dend_24 { pt3dadd( -91.8244, 16.0093, -60.805, 0.55 ) }
    dend_24 { pt3dadd( -93.7058, 17.2263, -62.4077, 0.55 ) }
    dend_24 { pt3dadd( -95.2167, 18.2407, -63.7168, 0.83 ) }
    dend_24 { pt3dadd( -96.6296, 19.2733, -64.9948, 0.83 ) }
    dend_24 { pt3dadd( -100.546, 22.5979, -68.6093, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( -100.896, 22.9197, -68.9208, 0.83 ) }
    dend_24 { pt3dadd( -102.682, 24.834, -70.468, 0.28 ) }
    dend_24 { pt3dadd( -103.494, 25.7095, -71.1945, 0.55 ) }
    dend_24 { pt3dadd( -104.846, 27.1239, -72.3899, 0.28 ) }
    dend_24 { pt3dadd( -105.97, 28.1297, -73.3551, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -18.6762, 2.95561, -9.12682, 0.28 ) }
    dend_23 { pt3dadd( -19.9139, 1.50662, -9.02183, 0.28 ) }
    dend_23 { pt3dadd( -20.3128, 1.0311, -8.96617, 0.83 ) }
    dend_23 { pt3dadd( -21.4509, -0.483772, -8.94094, 0.28 ) }
    dend_23 { pt3dadd( -22.4047, -1.72634, -8.95458, 0.28 ) }
    dend_23 { pt3dadd( -22.7784, -2.19106, -8.97394, 0.55 ) }
    dend_23 { pt3dadd( -24.3006, -4.02716, -9.08577, 0.28 ) }
    dend_23 { pt3dadd( -25.2685, -5.18614, -9.16256, 1.11 ) }
    dend_23 { pt3dadd( -28.6963, -8.97853, -9.43307, 0.28 ) }
    dend_23 { pt3dadd( -29.4694, -9.78209, -9.49739, 0.55 ) }
    dend_23 { pt3dadd( -30.3157, -10.6277, -9.55597, 0.28 ) }
    dend_23 { pt3dadd( -31.4264, -11.6613, -9.62892, 0.28 ) }
    dend_23 { pt3dadd( -32.1583, -12.2695, -9.67468, 0.55 ) }
    dend_23 { pt3dadd( -33.7654, -13.5297, -9.57275, 0.28 ) }
    dend_23 { pt3dadd( -34.2072, -13.8634, -9.36073, 0.55 ) }
    dend_23 { pt3dadd( -35.5219, -14.9293, -8.38452, 0.28 ) }
    dend_23 { pt3dadd( -36.02, -15.3952, -7.87404, 0.55 ) }
    dend_23 { pt3dadd( -36.7603, -16.1236, -7.00592, 0.28 ) }
    dend_23 { pt3dadd( -37.9759, -17.338, -5.60348, 0.83 ) }
    dend_23 { pt3dadd( -40.7041, -20.2146, -2.46616, 0.28 ) }
    dend_23 { pt3dadd( -41.1482, -20.6901, -1.99055, 0.83 ) }
    dend_23 { pt3dadd( -42.7575, -22.5852, -0.373154, 0.28 ) }
    dend_23 { pt3dadd( -43.3641, -23.3419, 0.181043, 0.55 ) }
    dend_23 { pt3dadd( -45.3478, -25.9727, 1.77284, 0.28 ) }
    dend_23 { pt3dadd( -46.0977, -27.0349, 2.21031, 0.28 ) }
    dend_23 { pt3dadd( -46.7174, -27.9581, 2.44206, 0.55 ) }
    dend_23 { pt3dadd( -47.7185, -29.5344, 2.79861, 0.28 ) }
    dend_23 { pt3dadd( -48.0267, -30.0381, 2.88726, 1.11 ) }
    dend_23 { pt3dadd( -49.707, -33.2812, 3.48459, 0.28 ) }
    dend_23 { pt3dadd( -50.2514, -34.6678, 3.75034, 0.83 ) }
    dend_23 { pt3dadd( -55.1242, -42.1073, 7.56055, 0.83 ) }
    dend_23 { pt3dadd( -60.0442, -49.7009, 10.9864, 0.83 ) }
    dend_23 { pt3dadd( -63.7688, -58.3063, 13.3699, 0.83 ) }
    dend_23 { pt3dadd( -67.5771, -66.8544, 15.8263, 0.83 ) }
    dend_23 { pt3dadd( -72.8446, -74.9546, 16.323, 0.83 ) }
    dend_23 { pt3dadd( -77.238, -83.3077, 18.4516, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 5.51019, -38.2158, -28.6678, 0.83 ) }
    dend_21 { pt3dadd( 6.93503, -39.0634, -29.1964, 0.83 ) }
    dend_21 { pt3dadd( 8.5043, -39.9936, -29.7327, 0.28 ) }
    dend_21 { pt3dadd( 9.26282, -40.4458, -29.9809, 1.11 ) }
    dend_21 { pt3dadd( 10.9533, -41.5141, -30.5317, 0.55 ) }
    dend_21 { pt3dadd( 12.0762, -42.2057, -30.8754, 0.55 ) }
    dend_21 { pt3dadd( 14.6212, -43.7103, -31.6222, 1.38 ) }
    dend_21 { pt3dadd( 15.8017, -44.3269, -32.037, 0.28 ) }
    dend_21 { pt3dadd( 16.0708, -44.4629, -32.1458, 0.55 ) }
    dend_21 { pt3dadd( 16.811, -44.8253, -32.5457, 0.55 ) }
    dend_21 { pt3dadd( 18.2237, -45.4825, -33.4252, 0.55 ) }
    dend_21 { pt3dadd( 19.0973, -45.8863, -34.1223, 1.38 ) }
    dend_21 { pt3dadd( 21.469, -46.9802, -36.2917, 0.55 ) }
    dend_21 { pt3dadd( 22.1693, -47.3199, -36.9398, 1.11 ) }
    dend_21 { pt3dadd( 24.3698, -48.3999, -38.9733, 0.28 ) }
    dend_21 { pt3dadd( 25.268, -48.8452, -39.803, 1.11 ) }
    dend_21 { pt3dadd( 26.8221, -49.6848, -41.246, 0.55 ) }
    dend_21 { pt3dadd( 28.4974, -50.607, -42.6856, 0.28 ) }
    dend_21 { pt3dadd( 29.2158, -50.989, -43.1938, 1.11 ) }
    dend_21 { pt3dadd( 30.5857, -51.6301, -44.0375, 0.28 ) }
    dend_21 { pt3dadd( 30.7754, -51.7036, -44.1238, 0.55 ) }
    dend_21 { pt3dadd( 31.7085, -52.0131, -44.48, 0.28 ) }
    dend_21 { pt3dadd( 32.3312, -52.1772, -44.6418, 0.55 ) }
    dend_21 { pt3dadd( 33.4186, -52.4047, -44.8671, 0.28 ) }
    dend_21 { pt3dadd( 34.2724, -52.5945, -45.0341, 0.55 ) }
    dend_21 { pt3dadd( 35.3351, -52.8299, -45.1989, 0.28 ) }
    dend_21 { pt3dadd( 36.0565, -52.9977, -45.3423, 0.28 ) }
    dend_21 { pt3dadd( 36.4049, -53.0772, -45.4204, 0.55 ) }
    dend_21 { pt3dadd( 37.9272, -53.4938, -45.8402, 0.28 ) }
    dend_21 { pt3dadd( 38.4665, -53.6604, -46.0113, 0.55 ) }
    dend_21 { pt3dadd( 39.6728, -54.1562, -46.5685, 0.55 ) }
    dend_21 { pt3dadd( 40.6308, -54.6075, -47.1261, 0.28 ) }
    dend_21 { pt3dadd( 40.8871, -54.7324, -47.339, 0.55 ) }
    dend_21 { pt3dadd( 41.856, -55.2001, -48.1994, 0.28 ) }
    dend_21 { pt3dadd( 42.0233, -55.2768, -48.3507, 0.55 ) }
    dend_21 { pt3dadd( 43.971, -56.1173, -50.0943, 0.28 ) }
    dend_21 { pt3dadd( 44.3653, -56.2852, -50.4356, 0.83 ) }
    dend_21 { pt3dadd( 46.5421, -57.0625, -52.0974, 0.28 ) }
    dend_21 { pt3dadd( 48.0669, -57.5318, -53.156, 0.28 ) }
    dend_21 { pt3dadd( 48.8595, -57.7304, -53.6179, 0.55 ) }
    dend_21 { pt3dadd( 51.1271, -58.2058, -54.7179, 0.28 ) }
    dend_21 { pt3dadd( 52.0121, -58.3337, -55.0061, 0.83 ) }
    dend_21 { pt3dadd( 53.5507, -58.5342, -55.3446, 0.28 ) }
    dend_21 { pt3dadd( 53.9889, -58.5975, -55.3913, 0.28 ) }
    dend_21 { pt3dadd( 55.8943, -58.8527, -55.5149, 0.28 ) }
    dend_21 { pt3dadd( 56.2005, -58.8957, -55.5205, 0.83 ) }
    dend_21 { pt3dadd( 58.2389, -59.1854, -55.4298, 0.28 ) }
    dend_21 { pt3dadd( 59.8057, -59.4268, -55.3607, 0.55 ) }
    dend_21 { pt3dadd( 61.2037, -59.6798, -55.2915, 0.55 ) }
    dend_21 { pt3dadd( 62.5604, -59.9318, -55.217, 0.28 ) }
    dend_21 { pt3dadd( 63.0436, -60.0217, -55.1862, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.51019, -38.2158, -28.6678, 0.28 ) }
    dend_20 { pt3dadd( 4.30319, -40.9471, -29.5311, 0.28 ) }
    dend_20 { pt3dadd( 3.99578, -41.6427, -29.751, 0.55 ) }
    dend_20 { pt3dadd( 3.31369, -43.1862, -30.2389, 0.28 ) }
    dend_20 { pt3dadd( 2.88809, -44.1492, -30.5433, 0.83 ) }
    dend_20 { pt3dadd( 1.10613, -48.1816, -31.8179, 0.28 ) }
    dend_20 { pt3dadd( 0.807019, -48.8584, -32.0318, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 99/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.84636, -15.4029, 4.49846, 2.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( -1.84244, -19.6985, 5.84388, 2.22 ) }
    dend_6 { pt3dadd( -1.83827, -24.2736, 7.27683, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.84636, -15.4029, 4.49846, 0.55 ) }
    dend_1 { pt3dadd( -4.93912, -15.1341, 4.15095, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    axon_1 { pt3dadd( 7.83859, -54.1009, 1.42578, 1.11 ) }
    axon_1 { pt3dadd( 9.94324, -68.9525, 1.42578, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -20.2064, 67.5442, -54.3156, 0.28 ) }
    dend_37 { pt3dadd( -21.7536, 69.2853, -54.0987, 0.28 ) }
    dend_37 { pt3dadd( -22.4964, 70.2342, -54.1793, 1.11 ) }
    dend_37 { pt3dadd( -23.2158, 71.2078, -54.2793, 0.28 ) }
    dend_37 { pt3dadd( -23.9022, 72.1903, -54.4301, 0.55 ) }
    dend_37 { pt3dadd( -24.6228, 73.2936, -54.608, 0.28 ) }
    dend_37 { pt3dadd( -25.4521, 74.6583, -54.825, 1.38 ) }
    dend_37 { pt3dadd( -27.2757, 77.9163, -55.4038, 0.28 ) }
    dend_37 { pt3dadd( -27.7338, 78.8415, -55.6021, 0.55 ) }
    dend_37 { pt3dadd( -28.5772, 80.7445, -56.0473, 0.28 ) }
    dend_37 { pt3dadd( -29.0499, 82.0081, -56.4257, 0.83 ) }
    dend_37 { pt3dadd( -29.8696, 84.4305, -57.2415, 0.28 ) }
    dend_37 { pt3dadd( -30.0424, 84.9723, -57.4197, 0.55 ) }
    dend_37 { pt3dadd( -31.2454, 88.8075, -58.6749, 0.28 ) }
    dend_37 { pt3dadd( -31.4904, 89.5699, -58.9438, 0.55 ) }
    dend_37 { pt3dadd( -32.6412, 93.0891, -60.1862, 0.28 ) }
    dend_37 { pt3dadd( -33.0432, 94.3002, -60.6505, 0.55 ) }
    dend_37 { pt3dadd( -33.4345, 95.4847, -61.1324, 0.28 ) }
    dend_37 { pt3dadd( -33.5685, 95.8812, -61.2922, 1.11 ) }
    dend_37 { pt3dadd( -34.6914, 98.6271, -62.2991, 0.28 ) }
    dend_37 { pt3dadd( -35.0249, 99.3892, -62.5508, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -20.2064, 67.5442, -54.3156, 0.55 ) }
    dend_36 { pt3dadd( -17.4797, 67.2632, -54.7708, 0.55 ) }
    dend_36 { pt3dadd( -15.1883, 67.027, -55.1533, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 31/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 47.6175, 0.546712, -29.4725, 0.28 ) }
    dend_33 { pt3dadd( 50.9563, -0.463313, -34.4734, 0.28 ) }
    dend_33 { pt3dadd( 53.7851, -1.19008, -38.7367, 0.83 ) }
    dend_33 { pt3dadd( 58.0154, -2.0669, -44.8089, 0.28 ) }
    dend_33 { pt3dadd( 59.1038, -2.26509, -46.2553, 0.83 ) }
    dend_33 { pt3dadd( 62.3324, -2.72912, -50.2333, 0.28 ) }
    dend_33 { pt3dadd( 63.1795, -2.81799, -51.2194, 0.55 ) }
    dend_33 { pt3dadd( 64.5064, -2.77631, -52.5269, 0.28 ) }
    dend_33 { pt3dadd( 66.1916, -2.47614, -53.9212, 0.28 ) }
    dend_33 { pt3dadd( 68.0924, -1.96569, -55.0795, 0.83 ) }
    dend_33 { pt3dadd( 69.5923, -1.52974, -55.981, 0.83 ) }
    dend_33 { pt3dadd( 72.231, -0.740509, -57.4673, 0.28 ) }
    dend_33 { pt3dadd( 74.3443, -0.0536831, -58.764, 0.83 ) }
    dend_33 { pt3dadd( 77.3942, 1.0517, -60.6851, 0.28 ) }
    dend_33 { pt3dadd( 77.3942, 1.0517, -60.6851, 0.55 ) }
    dend_33 { pt3dadd( 80.3047, 2.32089, -62.6132, 0.28 ) }
    dend_33 { pt3dadd( 81.2115, 2.68887, -63.1895, 0.55 ) }
    dend_33 { pt3dadd( 83.5101, 3.61795, -64.9314, 0.28 ) }
    dend_33 { pt3dadd( 85.1306, 4.25964, -66.4839, 1.11 ) }
    dend_33 { pt3dadd( 87.4108, 5.05342, -69.4193, 0.28 ) }
    dend_33 { pt3dadd( 88.8772, 5.54988, -71.553, 0.55 ) }
    dend_33 { pt3dadd( 90.1295, 6.00163, -73.5704, 0.28 ) }
    dend_33 { pt3dadd( 93.5951, 7.37382, -79.6797, 0.55 ) }
    dend_33 { pt3dadd( 95.3339, 8.13625, -83.0222, 1.11 ) }
    dend_33 { pt3dadd( 98.6737, 9.80708, -89.9115, 0.28 ) }
    dend_33 { pt3dadd( 99.301, 10.2165, -91.3322, 0.55 ) }
    dend_33 { pt3dadd( 100.186, 10.9892, -93.4574, 0.28 ) }
    dend_33 { pt3dadd( 100.716, 11.6184, -94.7445, 0.55 ) }
    dend_33 { pt3dadd( 101.784, 13.1584, -97.0751, 0.28 ) }
    dend_33 { pt3dadd( 102.221, 14.0133, -98.2016, 1.38 ) }
    dend_33 { pt3dadd( 103.619, 17.6125, -102.428, 0.28 ) }
    dend_33 { pt3dadd( 103.928, 18.5753, -103.691, 0.83 ) }
    dend_33 { pt3dadd( 104.619, 21.0798, -107.259, 0.28 ) }
    dend_33 { pt3dadd( 104.759, 21.684, -108.188, 0.55 ) }
    dend_33 { pt3dadd( 105.16, 23.7885, -111.504, 0.28 ) }
    dend_33 { pt3dadd( 105.25, 24.318, -112.356, 0.55 ) }
    dend_33 { pt3dadd( 105.619, 26.698, -116.011, 0.28 ) }
    dend_33 { pt3dadd( 105.737, 27.3257, -116.915, 0.55 ) }
    dend_33 { pt3dadd( 106.152, 29.5029, -119.783, 0.28 ) }
    dend_33 { pt3dadd( 106.321, 30.2164, -120.585, 0.83 ) }
    dend_33 { pt3dadd( 106.877, 32.2027, -122.439, 0.28 ) }
    dend_33 { pt3dadd( 107.251, 33.3675, -123.335, 0.55 ) }
    dend_33 { pt3dadd( 108.689, 37.0262, -125.428, 0.28 ) }
    dend_33 { pt3dadd( 109.143, 38.0022, -125.83, 0.83 ) }
    dend_33 { pt3dadd( 110.927, 41.4144, -126.803, 0.28 ) }
    dend_33 { pt3dadd( 111.201, 41.8587, -126.897, 0.55 ) }
    dend_33 { pt3dadd( 113.086, 44.5791, -127.287, 0.28 ) }
    dend_33 { pt3dadd( 114.285, 46.2495, -127.449, 0.55 ) }
    dend_33 { pt3dadd( 116.986, 49.9149, -127.527, 0.28 ) }
    dend_33 { pt3dadd( 117.207, 50.2044, -127.532, 0.55 ) }
    dend_33 { pt3dadd( 120.355, 54.2628, -127.76, 0.28 ) }
    dend_33 { pt3dadd( 120.575, 54.5363, -127.776, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 83/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 47.6175, 0.546712, -29.4725, 0.83 ) }
    dend_30 { pt3dadd( 49.5072, 1.01633, -30.6006, 0.83 ) }
    dend_30 { pt3dadd( 50.4252, 1.24093, -31.1543, 0.55 ) }
    dend_30 { pt3dadd( 51.0976, 1.35602, -31.5382, 0.55 ) }
    dend_30 { pt3dadd( 52.674, 1.57203, -32.4165, 1.11 ) }
    dend_30 { pt3dadd( 55.6739, 1.82884, -34.2278, 0.28 ) }
    dend_30 { pt3dadd( 56.1211, 1.85867, -34.4953, 1.11 ) }
    dend_30 { pt3dadd( 58.0795, 1.90853, -35.727, 0.28 ) }
    dend_30 { pt3dadd( 59.4863, 1.93434, -36.5785, 0.28 ) }
    dend_30 { pt3dadd( 60.5684, 1.96111, -37.2067, 0.83 ) }
    dend_30 { pt3dadd( 62.7861, 2.05989, -38.4771, 0.28 ) }
    dend_30 { pt3dadd( 64.2492, 2.10765, -39.2003, 0.28 ) }
    dend_30 { pt3dadd( 65.0291, 2.14708, -39.5987, 1.11 ) }
    dend_30 { pt3dadd( 66.9222, 2.31182, -40.5951, 0.28 ) }
    dend_30 { pt3dadd( 67.5477, 2.42582, -40.9294, 0.55 ) }
    dend_30 { pt3dadd( 70.106, 3.01322, -42.1521, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 99/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -105.97, 28.1297, -73.3551, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -107.874, 29.9687, -73.9496, 0.28 ) }
    dend_26 { pt3dadd( -108.357, 30.4153, -74.2065, 0.55 ) }
    dend_26 { pt3dadd( -109.744, 31.6179, -75.0014, 0.28 ) }
    dend_26 { pt3dadd( -111.213, 32.8751, -75.977, 0.55 ) }
    dend_26 { pt3dadd( -112.848, 34.2939, -77.0591, 0.28 ) }
    dend_26 { pt3dadd( -113.199, 34.5982, -77.2902, 0.55 ) }
    dend_26 { pt3dadd( -115.564, 36.6248, -78.948, 0.28 ) }
    dend_26 { pt3dadd( -116.233, 37.2068, -79.4472, 0.83 ) }
    dend_26 { pt3dadd( -117.94, 38.7503, -80.9362, 0.28 ) }
    dend_26 { pt3dadd( -119.022, 39.8024, -81.9881, 0.83 ) }
    dend_26 { pt3dadd( -120.97, 41.898, -83.9494, 0.28 ) }
    dend_26 { pt3dadd( -121.137, 42.0982, -84.1142, 0.83 ) }
    dend_26 { pt3dadd( -122.662, 44.1535, -85.601, 0.28 ) }
    dend_26 { pt3dadd( -124.339, 46.7126, -87.4774, 0.83 ) }
    dend_26 { pt3dadd( -125.311, 48.3966, -88.6802, 0.28 ) }
    dend_26 { pt3dadd( -125.657, 49.131, -89.2493, 0.55 ) }
    dend_26 { pt3dadd( -126.129, 50.3956, -90.2538, 0.28 ) }
    dend_26 { pt3dadd( -126.389, 51.2381, -90.8685, 0.55 ) }
    dend_26 { pt3dadd( -126.919, 53.5011, -92.2804, 0.28 ) }
    dend_26 { pt3dadd( -127.037, 54.0799, -92.52, 0.83 ) }
    dend_26 { pt3dadd( -127.627, 57.0426, -93.5803, 0.28 ) }
    dend_26 { pt3dadd( -127.76, 57.7675, -93.8038, 0.55 ) }
    dend_26 { pt3dadd( -128.195, 60.1674, -94.4407, 0.28 ) }
    dend_26 { pt3dadd( -128.347, 61.0729, -94.6065, 0.83 ) }
    dend_26 { pt3dadd( -129.429, 67.7039, -95.5208, 0.28 ) }
    dend_26 { pt3dadd( -129.674, 69.3827, -95.6838, 0.55 ) }
    dend_26 { pt3dadd( -130.744, 77.5135, -96.2044, 0.28 ) }
    dend_26 { pt3dadd( -130.875, 78.49, -96.2603, 0.83 ) }
    dend_26 { pt3dadd( -132.333, 89.2469, -96.8898, 0.28 ) }
    dend_26 { pt3dadd( -132.545, 90.8317, -96.9689, 0.83 ) }
    dend_26 { pt3dadd( -133.067, 95.0314, -97.1013, 0.28 ) }
    dend_26 { pt3dadd( -134.036, 102.674, -97.255, 0.28 ) }
    dend_26 { pt3dadd( -134.385, 105.334, -97.2714, 0.28 ) }
    dend_26 { pt3dadd( -134.523, 106.323, -97.2959, 0.83 ) }
    dend_26 { pt3dadd( -134.849, 108.238, -97.3741, 0.28 ) }
    dend_26 { pt3dadd( -135.262, 110.421, -97.5299, 0.55 ) }
    dend_26 { pt3dadd( -135.65, 112.209, -97.7748, 0.28 ) }
    dend_26 { pt3dadd( -135.867, 113.157, -97.9267, 0.55 ) }
    dend_26 { pt3dadd( -136.269, 114.848, -98.2131, 0.28 ) }
    dend_26 { pt3dadd( -136.529, 115.74, -98.321, 0.55 ) }
    dend_26 { pt3dadd( -138.201, 120.552, -98.728, 0.28 ) }
    dend_26 { pt3dadd( -139.902, 124.585, -98.9412, 0.28 ) }
    dend_26 { pt3dadd( -140.659, 126.19, -98.981, 0.28 ) }
    dend_26 { pt3dadd( -141.189, 127.2, -98.9992, 1.11 ) }
    dend_26 { pt3dadd( -143.394, 131.024, -99.0385, 0.28 ) }
    dend_26 { pt3dadd( -143.996, 131.979, -99.0245, 0.55 ) }
    dend_26 { pt3dadd( -146.861, 135.984, -98.857, 0.28 ) }
    dend_26 { pt3dadd( -147.058, 136.247, -98.846, 0.55 ) }
    dend_26 { pt3dadd( -149.102, 139.201, -98.83, 0.28 ) }
    dend_26 { pt3dadd( -149.348, 139.577, -98.8431, 0.83 ) }
    dend_26 { pt3dadd( -152.061, 143.787, -99.1639, 0.28 ) }
    dend_26 { pt3dadd( -152.77, 144.914, -99.2373, 0.55 ) }
    dend_26 { pt3dadd( -154.665, 147.951, -99.3982, 0.28 ) }
    dend_26 { pt3dadd( -156.312, 150.634, -99.5593, 0.28 ) }
    dend_26 { pt3dadd( -158.541, 154.206, -99.7859, 0.28 ) }
    dend_26 { pt3dadd( -159.093, 155.058, -99.8449, 0.83 ) }
    dend_26 { pt3dadd( -160.931, 157.728, -100.055, 0.28 ) }
    dend_26 { pt3dadd( -161.355, 158.311, -100.068, 0.55 ) }
    dend_26 { pt3dadd( -164.48, 162.321, -99.9115, 0.28 ) }
    dend_26 { pt3dadd( -165.314, 163.308, -99.8189, 0.55 ) }
    dend_26 { pt3dadd( -166.507, 164.696, -99.62, 0.28 ) }
    dend_26 { pt3dadd( -166.966, 165.235, -99.5101, 0.55 ) }
    dend_26 { pt3dadd( -169.34, 167.921, -98.7648, 0.28 ) }
    dend_26 { pt3dadd( -170.026, 168.798, -98.5041, 0.55 ) }
    dend_26 { pt3dadd( -170.829, 169.902, -98.1488, 0.28 ) }
    dend_26 { pt3dadd( -171.339, 170.712, -97.9206, 0.55 ) }
    dend_26 { pt3dadd( -172.927, 173.526, -97.2507, 0.28 ) }
    dend_26 { pt3dadd( -173.053, 173.79, -97.2113, 0.55 ) }
    dend_26 { pt3dadd( -175.074, 178.645, -96.8726, 0.28 ) }
    dend_26 { pt3dadd( -175.46, 179.717, -96.8034, 0.55 ) }
    dend_26 { pt3dadd( -175.983, 181.332, -96.6832, 0.28 ) }
    dend_26 { pt3dadd( -176.303, 182.429, -96.5872, 0.55 ) }
    dend_26 { pt3dadd( -177.725, 188.505, -96.1314, 0.28 ) }
    dend_26 { pt3dadd( -177.938, 189.552, -96.0353, 0.55 ) }
    dend_26 { pt3dadd( -178.489, 192.679, -95.7234, 0.28 ) }
    dend_26 { pt3dadd( -178.715, 194.093, -95.5726, 0.83 ) }
    dend_26 { pt3dadd( -179.274, 197.759, -95.1475, 0.28 ) }
    dend_26 { pt3dadd( -180.018, 203.312, -94.3606, 0.28 ) }
    dend_26 { pt3dadd( -180.106, 204.104, -94.2024, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -105.97, 28.1297, -73.3551, 0.28 ) }
    dend_25 { pt3dadd( -107.637, 28.3834, -73.1432, 0.28 ) }
    dend_25 { pt3dadd( -108.357, 28.4929, -73.0518, 0.55 ) }
    dend_25 { pt3dadd( -110.389, 28.8023, -72.7934, 0.28 ) }
    dend_25 { pt3dadd( -111.024, 28.8989, -72.7127, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.83827, -24.2736, 7.27683, 1.66 ) }
    dend_10 { pt3dadd( -2.84185, -28.0179, 6.78941, 1.66 ) }
    dend_10 { pt3dadd( -3.98285, -32.2748, 6.23525, 1.66 ) }
    dend_10 { pt3dadd( -5.09941, -36.4406, 5.69295, 1.66 ) }
    dend_10 { pt3dadd( -6.18474, -40.4899, 5.16583, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.83827, -24.2736, 7.27683, 0.83 ) }
    dend_7 { pt3dadd( 3.13229, -26.5471, 12.0184, 0.83 ) }
    dend_7 { pt3dadd( 5.11721, -27.8009, 14.2117, 0.55 ) }
    dend_7 { pt3dadd( 7.01841, -29.2637, 16.7714, 1.11 ) }
    dend_7 { pt3dadd( 8.47123, -30.6839, 19.0493, 0.55 ) }
    dend_7 { pt3dadd( 9.77538, -31.9587, 21.0942, 0.55 ) }
    dend_7 { pt3dadd( 12.4035, -34.5277, 25.2149, 0.28 ) }
    dend_7 { pt3dadd( 13.3672, -35.9814, 27.1647, 0.83 ) }
    dend_7 { pt3dadd( 15.0247, -38.4141, 30.7112, 0.83 ) }
    dend_7 { pt3dadd( 16.0244, -40.2869, 33.4189, 0.55 ) }
    dend_7 { pt3dadd( 24.0878, -45.4793, 41.974, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 30.2602, -51.8752, 51.2563, 0.55 ) }
    dend_7 { pt3dadd( 36.2573, -60.4847, 58.6778, 0.55 ) }
    dend_7 { pt3dadd( 40.6208, -68.8053, 67.4469, 0.55 ) }
    dend_7 { pt3dadd( 44.1151, -76.8933, 76.8033, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.93912, -15.1341, 4.15095, 0.83 ) }
    dend_5 { pt3dadd( -5.34414, -15.1451, 4.13476, 0.83 ) }
    dend_5 { pt3dadd( -9.56759, -15.1334, 4.08082, 0.83 ) }
    dend_5 { pt3dadd( -13.7638, -15.0999, 4.05991, 0.83 ) }
    dend_5 { pt3dadd( -16.996, -14.953, 4.04994, 0.83 ) }
    dend_5 { pt3dadd( -18.2691, -14.8706, 4.04353, 0.83 ) }
    dend_5 { pt3dadd( -20.1185, -14.7078, 4.03954, 1.11 ) }
    dend_5 { pt3dadd( -23.9917, -14.342, 3.92243, 0.83 ) }
    dend_5 { pt3dadd( -26.3059, -14.0063, 3.76781, 0.83 ) }
    dend_5 { pt3dadd( -28.6789, -13.4939, 3.33949, 0.55 ) }
    dend_5 { pt3dadd( -30.0156, -13.1632, 2.867, 0.55 ) }
    dend_5 { pt3dadd( -31.3478, -12.8069, 2.22534, 0.55 ) }
    dend_5 { pt3dadd( -34.1848, -12.1454, 0.436149, 0.55 ) }
    dend_5 { pt3dadd( -35.8731, -11.9049, -0.822358, 0.55 ) }
    dend_5 { pt3dadd( -38.4153, -11.6185, -2.96526, 0.55 ) }
    dend_5 { pt3dadd( -41.8625, -11.3967, -5.93947, 0.55 ) }
    dend_5 { pt3dadd( -43.2878, -11.3423, -7.12518, 0.55 ) }
    dend_5 { pt3dadd( -45.2804, -11.3387, -8.78438, 0.28 ) }
    dend_5 { pt3dadd( -47.343, -11.413, -10.4387, 0.55 ) }
    dend_5 { pt3dadd( -49.1362, -11.5643, -11.8059, 0.28 ) }
    dend_5 { pt3dadd( -51.5498, -11.7517, -13.448, 0.83 ) }
    dend_5 { pt3dadd( -53.0853, -11.8978, -14.3543, 0.28 ) }
    dend_5 { pt3dadd( -55.8676, -12.2279, -15.8296, 0.55 ) }
    dend_5 { pt3dadd( -58.1854, -12.4641, -16.914, 0.55 ) }
    dend_5 { pt3dadd( -60.3614, -12.7481, -17.8296, 0.55 ) }
    dend_5 { pt3dadd( -62.0221, -13.0584, -18.4338, 0.83 ) }
    dend_5 { pt3dadd( -65.418, -13.8032, -19.6115, 0.55 ) }
    dend_5 { pt3dadd( -67.3272, -14.2244, -20.1723, 0.28 ) }
    dend_5 { pt3dadd( -67.9404, -14.3581, -20.3271, 0.83 ) }
    dend_5 { pt3dadd( -70.1468, -14.8539, -20.896, 0.83 ) }
    dend_5 { pt3dadd( -71.8337, -15.2829, -21.4043, 0.55 ) }
    dend_5 { pt3dadd( -73.5269, -15.7371, -22.0166, 0.28 ) }
    dend_5 { pt3dadd( -76.944, -16.6703, -23.2773, 0.55 ) }
    dend_5 { pt3dadd( -79.1689, -17.3327, -24.0646, 0.28 ) }
    dend_5 { pt3dadd( -80.1267, -17.6326, -24.3686, 0.55 ) }
    dend_5 { pt3dadd( -82.0459, -18.2281, -24.8811, 0.28 ) }
    dend_5 { pt3dadd( -82.624, -18.4081, -24.989, 0.83 ) }
    dend_5 { pt3dadd( -85.0683, -19.2794, -25.3124, 0.28 ) }
    dend_5 { pt3dadd( -85.6406, -19.5262, -25.4848, 0.55 ) }
    dend_5 { pt3dadd( -88.509, -20.9102, -26.4633, 0.28 ) }
    dend_5 { pt3dadd( -89.6313, -21.4989, -26.969, 0.55 ) }
    dend_5 { pt3dadd( -90.8952, -22.1689, -27.577, 0.28 ) }
    dend_5 { pt3dadd( -92.2586, -22.8732, -28.2795, 0.55 ) }
    dend_5 { pt3dadd( -97.7302, -25.4487, -31.6071, 0.28 ) }
    dend_5 { pt3dadd( -100.12, -26.4043, -33.036, 0.55 ) }
    dend_5 { pt3dadd( -103.144, -27.4998, -34.8098, 0.28 ) }
    dend_5 { pt3dadd( -104.526, -27.942, -35.6331, 0.55 ) }
    dend_5 { pt3dadd( -107.412, -28.763, -37.2591, 0.28 ) }
    dend_5 { pt3dadd( -109.644, -29.2223, -38.261, 0.55 ) }
    dend_5 { pt3dadd( -112.21, -29.5152, -39.0491, 0.28 ) }
    dend_5 { pt3dadd( -113.14, -29.5051, -39.3964, 0.55 ) }
    dend_5 { pt3dadd( -115.594, -29.1621, -40.2711, 0.28 ) }
    dend_5 { pt3dadd( -116.187, -28.9689, -40.6575, 0.55 ) }
    dend_5 { pt3dadd( -117.371, -28.2493, -41.7522, 0.28 ) }
    dend_5 { pt3dadd( -117.81, -27.9083, -42.1132, 0.83 ) }
    dend_5 { pt3dadd( -119.892, -25.8256, -43.7102, 0.28 ) }
    dend_5 { pt3dadd( -120.695, -24.8873, -44.1375, 0.83 ) }
    dend_5 { pt3dadd( -124.849, -19.2338, -45.1104, 0.28 ) }
    dend_5 { pt3dadd( -125.136, -18.7786, -45.1154, 0.83 ) }
    dend_5 { pt3dadd( -128.546, -12.5934, -44.1055, 0.28 ) }
    dend_5 { pt3dadd( -128.937, -11.8528, -43.8127, 1.11 ) }
    dend_5 { pt3dadd( -129.47, -10.8763, -42.8814, 0.28 ) }
    dend_5 { pt3dadd( -129.751, -10.3686, -42.2098, 0.55 ) }
    dend_5 { pt3dadd( -130.136, -9.72316, -41.1167, 0.28 ) }
    dend_5 { pt3dadd( -130.376, -9.28544, -40.4731, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.93912, -15.1341, 4.15095, 0.55 ) }
    dend_2 { pt3dadd( -6.93479, -15.4241, 4.10417, 0.55 ) }
    dend_2 { pt3dadd( -9.61118, -15.994, 4.15222, 0.55 ) }
    dend_2 { pt3dadd( -13.7785, -16.9373, 4.1651, 0.55 ) }
    dend_2 { pt3dadd( -16.4149, -17.4977, 4.12057, 0.55 ) }
    dend_2 { pt3dadd( -17.7403, -17.7794, 4.09818, 0.83 ) }
    dend_2 { pt3dadd( -20.6343, -18.3945, 4.0493, 0.83 ) }
    dend_2 { pt3dadd( -23.3681, -18.9477, 4.02707, 0.83 ) }
    dend_2 { pt3dadd( -25.1037, -19.4492, 4.04765, 0.55 ) }
    dend_2 { pt3dadd( -27.5586, -20.2489, 4.10707, 0.55 ) }
    dend_2 { pt3dadd( -38.6284, -23.2653, 5.29721, 0.55 ) }
    dend_2 { pt3dadd( -49.6834, -26.4788, 4.57719, 0.55 ) }
    dend_2 { pt3dadd( -61.0766, -28.2324, 4.99552, 0.55 ) }
    dend_2 { pt3dadd( -72.5417, -29.5005, 4.96297, 0.55 ) }
    dend_2 { pt3dadd( -83.9038, -30.8637, 6.41229, 0.55 ) }
    dend_2 { pt3dadd( -94.8139, -33.2141, 9.32793, 0.55 ) }
    dend_2 { pt3dadd( -105.771, -33.5709, 12.9166, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 70.106, 3.01322, -42.1521, 0.55 ) }
    dend_32 { pt3dadd( 71.9982, 3.30232, -41.8128, 0.55 ) }
    dend_32 { pt3dadd( 73.4664, 3.57766, -41.5511, 0.55 ) }
    dend_32 { pt3dadd( 75.6094, 3.99586, -41.1371, 0.28 ) }
    dend_32 { pt3dadd( 77.0503, 4.28338, -40.8516, 0.28 ) }
    dend_32 { pt3dadd( 77.7015, 4.40942, -40.7183, 0.55 ) }
    dend_32 { pt3dadd( 80.3606, 4.90874, -40.1726, 0.28 ) }
    dend_32 { pt3dadd( 81.7896, 5.18619, -39.8242, 0.83 ) }
    dend_32 { pt3dadd( 83.3912, 5.51889, -39.3741, 0.28 ) }
    dend_32 { pt3dadd( 84.0212, 5.61105, -39.1319, 0.55 ) }
    dend_32 { pt3dadd( 85.1954, 5.68441, -38.6119, 0.28 ) }
    dend_32 { pt3dadd( 86.0315, 5.72025, -38.2085, 0.55 ) }
    dend_32 { pt3dadd( 88.4376, 5.74659, -36.8893, 0.28 ) }
    dend_32 { pt3dadd( 89.7243, 5.69448, -36.1388, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 93.0011, 5.47099, -34.0917, 0.28 ) }
    dend_32 { pt3dadd( 94.2601, 5.34718, -33.2514, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 70.106, 3.01322, -42.1521, 0.55 ) }
    dend_31 { pt3dadd( 70.3253, 2.06077, -42.3584, 0.55 ) }
    dend_31 { pt3dadd( 70.756, 0.475402, -42.6484, 0.55 ) }
    dend_31 { pt3dadd( 70.9481, -0.178542, -42.5624, 0.83 ) }
    dend_31 { pt3dadd( 71.1006, -0.665037, -42.4424, 0.28 ) }
    dend_31 { pt3dadd( 71.1956, -0.969182, -42.3565, 0.55 ) }
    dend_31 { pt3dadd( 71.542, -2.12999, -42.0164, 0.28 ) }
    dend_31 { pt3dadd( 71.7125, -2.6701, -41.826, 0.83 ) }
    dend_31 { pt3dadd( 72.6047, -5.50106, -40.6566, 0.28 ) }
    dend_31 { pt3dadd( 72.7443, -5.91658, -40.4832, 0.55 ) }
    dend_31 { pt3dadd( 72.9514, -6.52991, -40.2426, 0.28 ) }
    dend_31 { pt3dadd( 73.0524, -6.86281, -40.123, 0.55 ) }
    dend_31 { pt3dadd( 73.3021, -7.86229, -39.8391, 0.28 ) }
    dend_31 { pt3dadd( 73.3323, -8.02846, -39.8138, 0.55 ) }
    dend_31 { pt3dadd( 73.4, -8.4981, -39.8462, 0.28 ) }
    dend_31 { pt3dadd( 73.4852, -8.9944, -39.8199, 0.55 ) }
    dend_31 { pt3dadd( 73.7481, -10.3068, -39.6698, 0.28 ) }
    dend_31 { pt3dadd( 73.821, -10.6698, -39.6206, 0.83 ) }
    dend_31 { pt3dadd( 74.0777, -12.0373, -39.3998, 0.28 ) }
    dend_31 { pt3dadd( 74.4042, -13.7805, -39.1075, 0.83 ) }
    dend_31 { pt3dadd( 74.9147, -16.3634, -38.6436, 0.28 ) }
    dend_31 { pt3dadd( 74.9669, -16.5871, -38.602, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.18474, -40.4899, 5.16583, 1.11 ) }
    dend_16 { pt3dadd( -6.17137, -43.699, 5.05718, 1.11 ) }
    dend_16 { pt3dadd( -6.12248, -45.5661, 5.05185, 1.11 ) }
    dend_16 { pt3dadd( -6.36911, -49.1339, 4.981, 1.11 ) }
    dend_16 { pt3dadd( -6.79496, -53.168, 4.85473, 1.11 ) }
    dend_16 { pt3dadd( -7.21199, -56.7107, 4.79262, 1.11 ) }
    dend_16 { pt3dadd( -7.68322, -60.3234, 4.75151, 1.11 ) }
    dend_16 { pt3dadd( -8.91772, -67.3437, 4.74326, 1.11 ) }
    dend_16 { pt3dadd( -10.365, -74.5549, 4.72627, 1.11 ) }
    dend_16 { pt3dadd( -11.3391, -79.012, 4.71516, 1.11 ) }
    dend_16 { pt3dadd( -12.2413, -82.9713, 4.71665, 1.11 ) }
    dend_16 { pt3dadd( -12.9072, -85.8372, 4.72357, 1.11 ) }
    dend_16 { pt3dadd( -13.5589, -88.8214, 4.76808, 1.11 ) }
    dend_16 { pt3dadd( -14.4078, -93.28, 4.85479, 1.11 ) }
    dend_16 { pt3dadd( -14.8692, -97.3954, 4.9935, 1.11 ) }
    dend_16 { pt3dadd( -15.2701, -102.357, 5.13622, 1.11 ) }
    dend_16 { pt3dadd( -15.3166, -105.384, 5.11958, 1.11 ) }
    dend_16 { pt3dadd( -15.1133, -109.399, 5.05351, 1.11 ) }
    dend_16 { pt3dadd( -14.7177, -112.274, 5.02224, 1.11 ) }
    dend_16 { pt3dadd( -14.1297, -115.137, 4.9861, 1.11 ) }
    dend_16 { pt3dadd( -13.3108, -118.435, 4.94193, 1.11 ) }
    dend_16 { pt3dadd( -11.9923, -123.052, 4.84453, 1.11 ) }
    dend_16 { pt3dadd( -9.54981, -130.992, 4.70586, 1.11 ) }
    dend_16 { pt3dadd( -7.7268, -136.146, 4.702, 1.11 ) }
    dend_16 { pt3dadd( -6.48876, -139.884, 4.7448, 0.83 ) }
    dend_16 { pt3dadd( -5.66658, -142.433, 4.82867, 0.83 ) }
    dend_16 { pt3dadd( -4.21811, -147.28, 5.12776, 0.83 ) }
    dend_16 { pt3dadd( -2.68463, -152.693, 5.70399, 0.83 ) }
    dend_16 { pt3dadd( -1.5367, -157.124, 6.24019, 0.83 ) }
    dend_16 { pt3dadd( -0.181092, -163.565, 7.06817, 0.83 ) }
    dend_16 { pt3dadd( 0.767843, -168.489, 7.788, 0.83 ) }
    dend_16 { pt3dadd( 1.51023, -173.05, 8.68783, 0.83 ) }
    dend_16 { pt3dadd( 2.37537, -180.184, 10.9506, 0.83 ) }
    dend_16 { pt3dadd( 2.68554, -182.966, 11.9529, 0.83 ) }
    dend_16 { pt3dadd( 2.87013, -185.157, 12.8349, 0.83 ) }
    dend_16 { pt3dadd( 3.10444, -187.302, 13.8908, 0.83 ) }
    dend_16 { pt3dadd( 3.45878, -193.814, 17.5374, 0.83 ) }
    dend_16 { pt3dadd( 3.67883, -199.967, 21.9627, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.18474, -40.4899, 5.16583, 0.83 ) }
    dend_11 { pt3dadd( -4.45314, -41.3939, 5.36308, 0.83 ) }
    dend_11 { pt3dadd( -2.62243, -42.3498, 5.57163, 0.83 ) }
    dend_11 { pt3dadd( 0.400304, -43.9279, 5.91596, 0.83 ) }
    dend_11 { pt3dadd( 0.768021, -44.1199, 5.95785, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 67/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 44.1151, -76.8933, 76.8033, 0.83 ) }
    dend_9 { pt3dadd( 47.7038, -81.3786, 83.0717, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 69/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 44.1151, -76.8933, 76.8033, 0.55 ) }
    dend_8 { pt3dadd( 47.3397, -81.5963, 83.955, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -105.771, -33.5709, 12.9166, 0.83 ) }
    dend_4 { pt3dadd( -112.196, -33.6876, 9.4715, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -105.771, -33.5709, 12.9166, 0.55 ) }
    dend_3 { pt3dadd( -109.119, -34.3834, 21.0826, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 75/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.67883, -199.967, 21.9627, 0.55 ) }
    dend_18 { pt3dadd( 2.1676, -202.374, 21.2611, 0.55 ) }
    dend_18 { pt3dadd( 0.487605, -205.456, 20.4027, 0.55 ) }
    dend_18 { pt3dadd( -0.799922, -207.973, 19.7128, 0.28 ) }
    dend_18 { pt3dadd( -1.90377, -210.456, 19.0089, 0.55 ) }
    dend_18 { pt3dadd( -2.71602, -212.491, 18.4468, 0.28 ) }
    dend_18 { pt3dadd( -2.98875, -213.219, 18.2509, 0.55 ) }
    dend_18 { pt3dadd( -4.40259, -217.608, 17.2446, 0.28 ) }
    dend_18 { pt3dadd( -4.56471, -218.162, 17.1356, 0.83 ) }
    dend_18 { pt3dadd( -5.64153, -221.829, 16.5375, 0.28 ) }
    dend_18 { pt3dadd( -6.23923, -223.802, 16.217, 0.28 ) }
    dend_18 { pt3dadd( -6.56993, -224.85, 16.0778, 0.55 ) }
    dend_18 { pt3dadd( -7.58857, -227.961, 15.7029, 0.28 ) }
    dend_18 { pt3dadd( -7.77229, -228.476, 15.6617, 0.55 ) }
    dend_18 { pt3dadd( -8.38045, -229.992, 15.5936, 0.28 ) }
    dend_18 { pt3dadd( -9.13666, -231.346, 15.6723, 0.83 ) }
    dend_18 { pt3dadd( -10.813, -240.047, 13.6723, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.67883, -199.967, 21.9627, 0.55 ) }
    dend_17 { pt3dadd( 4.60033, -202.51, 24.7972, 0.55 ) }
    dend_17 { pt3dadd( 5.27347, -203.935, 26.3139, 0.28 ) }
    dend_17 { pt3dadd( 5.63702, -204.556, 26.9566, 0.55 ) }
    dend_17 { pt3dadd( 6.87695, -206.374, 28.8268, 0.55 ) }
    dend_17 { pt3dadd( 8.00157, -208.002, 30.413, 0.55 ) }
    dend_17 { pt3dadd( 9.18227, -209.71, 32.0783, 0.55 ) }
    dend_17 { pt3dadd( 10.3893, -211.411, 33.4776, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 11.1267, -212.311, 34.2413, 0.28 ) }
    dend_17 { pt3dadd( 11.7082, -212.93, 34.772, 0.55 ) }
    dend_17 { pt3dadd( 13.829, -214.812, 36.2878, 0.28 ) }
    dend_17 { pt3dadd( 19.1105, -221.4, 43.8805, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.768021, -44.1199, 5.95785, 0.28 ) }
    dend_15 { pt3dadd( -0.083875, -41.2157, 4.7912, 0.28 ) }
    dend_15 { pt3dadd( -0.151415, -40.9252, 4.68966, 0.83 ) }
    dend_15 { pt3dadd( -0.480999, -39.2028, 4.15948, 0.28 ) }
    dend_15 { pt3dadd( -0.625226, -38.2999, 3.9681, 0.83 ) }
    dend_15 { pt3dadd( -1.07034, -34.5976, 3.44047, 0.28 ) }
    dend_15 { pt3dadd( -1.15151, -33.6945, 3.29049, 0.55 ) }
    dend_15 { pt3dadd( -1.30599, -31.9257, 2.97282, 0.28 ) }
    dend_15 { pt3dadd( -1.35639, -31.0183, 2.81239, 0.55 ) }
    dend_15 { pt3dadd( -1.37592, -29.202, 2.50715, 0.28 ) }
    dend_15 { pt3dadd( -1.35104, -27.6303, 2.32433, 0.55 ) }
    dend_15 { pt3dadd( -1.11553, -24.0658, 2.29662, 0.28 ) }
    dend_15 { pt3dadd( -1.05791, -23.092, 2.2153, 0.55 ) }
    dend_15 { pt3dadd( -2.2169, -11.8988, 2.38477, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 18/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.768021, -44.1199, 5.95785, 0.83 ) }
    dend_12 { pt3dadd( 0.830725, -45.8623, 6.08579, 0.83 ) }
    dend_12 { pt3dadd( 0.831894, -48.1115, 6.31679, 0.83 ) }
    dend_12 { pt3dadd( 0.811032, -49.3168, 6.4517, 0.83 ) }
    dend_12 { pt3dadd( 0.820985, -51.6585, 6.70848, 0.83 ) }
    dend_12 { pt3dadd( 0.989075, -54.7195, 6.99421, 0.83 ) }
    dend_12 { pt3dadd( 1.12806, -55.8968, 7.0835, 0.83 ) }
    dend_12 { pt3dadd( 1.37956, -57.3335, 7.192, 0.83 ) }
    dend_12 { pt3dadd( 1.80724, -59.2667, 7.2678, 0.83 ) }
    dend_12 { pt3dadd( 2.30349, -61.0694, 7.27903, 0.83 ) }
    dend_12 { pt3dadd( 2.9065, -62.9934, 7.20883, 0.83 ) }
    dend_12 { pt3dadd( 3.68672, -65.4501, 6.979, 0.83 ) }
    dend_12 { pt3dadd( 4.09352, -66.6575, 6.84052, 0.83 ) }
    dend_12 { pt3dadd( 5.51283, -70.5505, 6.33311, 0.83 ) }
    dend_12 { pt3dadd( 5.91039, -71.6326, 6.18916, 0.83 ) }
    dend_12 { pt3dadd( 6.97237, -74.6476, 5.79881, 0.83 ) }
    dend_12 { pt3dadd( 7.626, -76.6381, 5.6492, 0.83 ) }
    dend_12 { pt3dadd( 8.44997, -79.0941, 5.57481, 0.83 ) }
    dend_12 { pt3dadd( 8.83317, -80.2927, 5.5939, 0.55 ) }
    dend_12 { pt3dadd( 9.29508, -82.1188, 5.73349, 0.55 ) }
    dend_12 { pt3dadd( 9.54059, -83.3369, 5.89602, 0.83 ) }
    dend_12 { pt3dadd( 10.1161, -86.8224, 6.51494, 0.83 ) }
    dend_12 { pt3dadd( 10.3974, -88.9764, 6.95772, 0.55 ) }
    dend_12 { pt3dadd( 10.5993, -91.4842, 7.50971, 0.55 ) }
    dend_12 { pt3dadd( 10.727, -94.3628, 8.15608, 0.55 ) }
    dend_12 { pt3dadd( 10.7596, -96.3533, 8.60503, 0.55 ) }
    dend_12 { pt3dadd( 10.7392, -100.54, 9.46139, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.7392, -100.54, 9.46139, 0.55 ) }
    dend_14 { pt3dadd( 11.5903, -102.18, 9.18258, 0.55 ) }
    dend_14 { pt3dadd( 12.6191, -104.248, 8.66765, 0.55 ) }
    dend_14 { pt3dadd( 14.7415, -108.821, 7.42978, 0.55 ) }
    dend_14 { pt3dadd( 16.0555, -111.876, 6.57654, 0.55 ) }
    dend_14 { pt3dadd( 17.0832, -114.4, 5.87883, 0.55 ) }
    dend_14 { pt3dadd( 18.1107, -117.104, 4.97847, 0.55 ) }
    dend_14 { pt3dadd( 19.2954, -120.57, 3.62395, 0.55 ) }
    dend_14 { pt3dadd( 19.8421, -122.397, 2.8092, 0.55 ) }
    dend_14 { pt3dadd( 20.3923, -124.521, 1.81125, 0.55 ) }
    dend_14 { pt3dadd( 20.8942, -126.172, 1.0198, 0.83 ) }
    dend_14 { pt3dadd( 22.1799, -130.357, -0.800865, 0.55 ) }
    dend_14 { pt3dadd( 22.4603, -131.21, -1.12836, 0.55 ) }
    dend_14 { pt3dadd( 23.2057, -133.316, -1.81294, 0.55 ) }
    dend_14 { pt3dadd( 24.6162, -137.012, -2.91794, 0.55 ) }
    dend_14 { pt3dadd( 25.5438, -139.376, -3.50731, 0.55 ) }
    dend_14 { pt3dadd( 27.0591, -143.279, -4.2298, 0.55 ) }
    dend_14 { pt3dadd( 27.7388, -145.032, -4.40728, 0.83 ) }
    dend_14 { pt3dadd( 28.1631, -146.163, -4.52458, 0.28 ) }
    dend_14 { pt3dadd( 28.2798, -146.5, -4.56114, 0.55 ) }
    dend_14 { pt3dadd( 28.591, -147.554, -4.67432, 0.28 ) }
    dend_14 { pt3dadd( 28.8288, -148.325, -4.75279, 0.55 ) }
    dend_14 { pt3dadd( 29.4534, -149.882, -4.91901, 0.28 ) }
    dend_14 { pt3dadd( 30.6839, -152.242, -5.19924, 0.55 ) }
    dend_14 { pt3dadd( 32.2231, -154.65, -5.5437, 0.28 ) }
    dend_14 { pt3dadd( 32.6941, -155.262, -5.64331, 0.83 ) }
    dend_14 { pt3dadd( 34.7158, -157.476, -6.11342, 0.28 ) }
    dend_14 { pt3dadd( 35.7241, -158.44, -6.34988, 0.55 ) }
    dend_14 { pt3dadd( 37.2986, -159.755, -6.70814, 0.55 ) }
    dend_14 { pt3dadd( 38.7878, -160.835, -7.06673, 0.55 ) }
    dend_14 { pt3dadd( 40.4375, -161.919, -7.46707, 0.55 ) }
    dend_14 { pt3dadd( 42.1632, -163.057, -7.90034, 0.28 ) }
    dend_14 { pt3dadd( 42.6295, -163.392, -8.02699, 0.55 ) }
    dend_14 { pt3dadd( 43.8574, -164.436, -8.38281, 0.28 ) }
    dend_14 { pt3dadd( 44.1087, -164.689, -8.45861, 0.55 ) }
    dend_14 { pt3dadd( 45.3375, -166.035, -8.82141, 0.28 ) }
    dend_14 { pt3dadd( 45.6525, -166.429, -8.92998, 0.83 ) }
    dend_14 { pt3dadd( 48.1305, -169.721, -9.85918, 0.28 ) }
    dend_14 { pt3dadd( 48.2806, -169.934, -9.93949, 0.55 ) }
    dend_14 { pt3dadd( 49.7781, -172.079, -10.8984, 0.28 ) }
    dend_14 { pt3dadd( 50.2043, -172.707, -11.2131, 0.55 ) }
    dend_14 { pt3dadd( 51.3705, -174.48, -12.1605, 0.28 ) }
    dend_14 { pt3dadd( 51.5039, -174.681, -12.2657, 0.55 ) }
    dend_14 { pt3dadd( 53.6906, -177.891, -14.0119, 0.28 ) }
    dend_14 { pt3dadd( 54.091, -178.476, -14.3111, 0.55 ) }
    dend_14 { pt3dadd( 55.1444, -180.076, -15.0491, 0.28 ) }
    dend_14 { pt3dadd( 55.9505, -181.261, -15.5658, 0.83 ) }
    dend_14 { pt3dadd( 57.7739, -183.866, -16.5701, 0.28 ) }
    dend_14 { pt3dadd( 57.7739, -183.866, -16.5701, 0.55 ) }
    dend_14 { pt3dadd( 58.6561, -185.002, -17.0568, 0.55 ) }
    dend_14 { pt3dadd( 59.4339, -185.948, -17.4851, 0.55 ) }
    dend_14 { pt3dadd( 61.8841, -188.655, -18.7744, 0.28 ) }
    dend_14 { pt3dadd( 62.5995, -189.401, -19.1551, 0.55 ) }
    dend_14 { pt3dadd( 64.623, -191.316, -20.1853, 0.28 ) }
    dend_14 { pt3dadd( 65.6504, -192.244, -20.6702, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 67.2555, -193.573, -21.4635, 0.55 ) }
    dend_14 { pt3dadd( 67.7532, -193.961, -21.6982, 0.28 ) }
    dend_14 { pt3dadd( 68.0179, -194.174, -21.8125, 0.55 ) }
    dend_14 { pt3dadd( 69.3859, -195.331, -22.3997, 0.28 ) }
    dend_14 { pt3dadd( 69.9478, -195.8, -22.6924, 0.55 ) }
    dend_14 { pt3dadd( 73.2292, -198.524, -24.5845, 0.28 ) }
    dend_14 { pt3dadd( 74.2069, -199.356, -25.2978, 0.83 ) }
    dend_14 { pt3dadd( 75.0972, -200.148, -26.0323, 0.28 ) }
    dend_14 { pt3dadd( 75.4392, -200.458, -26.3306, 0.55 ) }
    dend_14 { pt3dadd( 78.4145, -203.243, -29.1686, 0.28 ) }
    dend_14 { pt3dadd( 79.5064, -204.224, -30.2472, 0.55 ) }
    dend_14 { pt3dadd( 81.6554, -206.174, -32.5822, 0.28 ) }
    dend_14 { pt3dadd( 81.9448, -206.421, -32.9448, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.7392, -100.54, 9.46139, 0.55 ) }
    dend_13 { pt3dadd( 10.7281, -102.41, 10.1134, 0.55 ) }
    dend_13 { pt3dadd( 10.7728, -103.98, 10.6552, 0.28 ) }
    dend_13 { pt3dadd( 10.7913, -104.923, 10.9699, 0.83 ) }
    dend_13 { pt3dadd( 10.8084, -106.696, 11.6159, 0.28 ) }
    dend_13 { pt3dadd( 10.8033, -107.143, 11.763, 0.83 ) }
    dend_13 { pt3dadd( 10.7178, -109.07, 12.4342, 0.28 ) }
    dend_13 { pt3dadd( 10.7034, -109.295, 12.5043, 0.55 ) }
    dend_13 { pt3dadd( 10.6082, -110.102, 12.744, 0.55 ) }
    dend_13 { pt3dadd( 10.414, -111.236, 13.0868, 0.28 ) }
    dend_13 { pt3dadd( 10.155, -112.632, 13.4775, 0.55 ) }
    dend_13 { pt3dadd( 9.64932, -115.196, 14.2768, 0.28 ) }
    dend_13 { pt3dadd( 9.41045, -116.407, 14.6891, 0.83 ) }
    dend_13 { pt3dadd( 9.0361, -118.281, 15.3543, 0.28 ) }
    dend_13 { pt3dadd( 8.68182, -120.094, 16.0398, 0.28 ) }
    dend_13 { pt3dadd( 8.27319, -121.996, 16.7923, 0.28 ) }
    dend_13 { pt3dadd( 7.8386, -123.817, 17.5991, 0.83 ) }
    dend_13 { pt3dadd( 7.48295, -125.227, 18.2099, 0.28 ) }
    dend_13 { pt3dadd( 7.10021, -126.709, 18.905, 0.83 ) }
    dend_13 { pt3dadd( 6.69072, -128.188, 19.594, 0.28 ) }
    dend_13 { pt3dadd( 6.51558, -128.811, 19.9017, 0.28 ) }
    dend_13 { pt3dadd( 5.97309, -130.213, 20.6125, 0.55 ) }
    dend_13 { pt3dadd( 5.3941, -131.644, 21.1704, 0.55 ) }
    dend_13 { pt3dadd( 3.30403, -139.245, 24.1255, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, axon_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, axon_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_5 = new SectionList()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_40 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_39 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_19 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_38 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_7 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_32 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 5
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 11
    dend_34 nseg = 5
    dend_19 nseg = 3
    dend_38 nseg = 3
    dend_24 nseg = 5
    dend_23 nseg = 5
    dend_21 nseg = 3
    dend_33 nseg = 7
    dend_26 nseg = 11
    dend_7 nseg = 5
    dend_5 nseg = 7
    dend_2 nseg = 5
    dend_16 nseg = 9
    dend_18 nseg = 3
    dend_12 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_NBC_3552e1f34a_0_0


