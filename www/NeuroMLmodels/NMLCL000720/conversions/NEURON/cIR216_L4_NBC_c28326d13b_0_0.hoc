// Cell: cIR216_L4_NBC_c28326d13b_0_0
/*
{
  "id" : "cIR216_L4_NBC_c28326d13b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.06688, 8.74128, -1.1272, 2.20257", "-0.937306, 7.82691, -0.999547, 3.85541", "-0.807729, 6.91254, -0.871898, 5.84624", "-0.678152, 5.99818, -0.744249, 7.26434", "-0.548576, 5.08381, -0.6166, 10.3712", "-0.418999, 4.16944, -0.488951, 11.2076", "-0.289422, 3.25508, -0.361302, 11.8779", "-0.159846, 2.34071, -0.233653, 11.9642", "-0.0302691, 1.42634, -0.106004, 11.5058", "0.0993075, 0.511976, 0.0216455, 11.0473", "0.228884, -0.402391, 0.149295, 10.6248", "0.358461, -1.31676, 0.276944, 10.1128", "0.488037, -2.23113, 0.404593, 9.57755", "0.617614, -3.14549, 0.532242, 9.04063", "0.747191, -4.05986, 0.659891, 8.48926", "0.876767, -4.97423, 0.78754, 7.85518", "1.00634, -5.88859, 0.915189, 7.19302", "1.13592, -6.80296, 1.04284, 6.47635", "1.2655, -7.71733, 1.17049, 5.43009", "1.39507, -8.63169, 1.29814, 3.7337", "1.52465, -9.54606, 1.42578, 2.56951" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.70824, 3.15765, -7.70142, 0.83", "-7.56906, 3.8573, -10.5152, 0.83", "-10.0512, 3.91571, -12.6011, 1.11", "-14.5115, 4.0247, -16.1502, 1.11", "-18.7369, 3.61082, -20.9365, 1.11", "-20.0569, 3.38973, -22.5067, 0.83", "-24.3174, 2.47052, -27.5448, 0.83", "-25.8357, 1.95482, -29.4973, 0.55", "-28.6751, 0.537262, -33.2056, 0.55", "-35.3406, -3.55416, -41.8873, 0.83", "-38.3614, -5.48963, -45.9277, 0.55", "-39.299, -6.03632, -47.4279, 0.83", "-40.3821, -6.60946, -49.5609, 0.55", "-41.2041, -7.04734, -51.2888, 1.11", "-43.3926, -8.15024, -56.0171, 1.11", "-46.1781, -9.12781, -61.6983, 0.83", "-49.0884, -9.97471, -68.3299, 0.83", "-51.7069, -10.4325, -74.2808, 0.28", "-52.1491, -10.4494, -75.2487, 0.55", "-53.2663, -10.3552, -77.6067, 0.28", "-54.4303, -10.0789, -79.8894, 0.55", "-55.5177, -9.63302, -81.7299, 0.28", "-56.6516, -9.17479, -83.172, 0.83", "-59.3601, -7.95481, -86.9169, 0.28", "-59.5427, -7.86582, -87.1988, 0.55", "-60.7879, -7.21909, -89.438, 0.28", "-61.98, -6.58509, -91.8514, 0.83", "-62.283, -6.45595, -92.5089, 0.83", "-65.7751, -5.33514, -100.382, 0.28", "-66.2707, -5.21013, -101.463, 0.55", "-68.3935, -4.81081, -105.873, 0.28", "-69.307, -4.70392, -107.771, 0.83", "-71.1232, -4.48642, -111.392, 0.28", "-72.049, -4.36689, -113.077, 0.55", "-73.0172, -4.25417, -114.61, 0.28", "-73.5301, -4.17942, -115.446, 0.55", "-78.4082, -3.15108, -123.175, 0.28", "-78.9903, -2.95669, -124.19, 0.55", "-79.5363, -2.71486, -125.223, 0.28", "-79.9886, -2.45259, -126.283, 0.83", "-81.5919, -1.29798, -130.924, 0.28", "-81.7733, -1.10959, -131.604, 0.83", "-82.4523, -0.050721, -134.884, 0.28", "-82.5719, 0.093072, -135.433, 0.83", "-83.3774, 1.01219, -139.113, 0.28", "-83.5095, 1.16009, -139.712, 0.83", "-84.4165, 2.16313, -143.718, 0.28", "-84.5825, 2.33853, -144.446, 0.83", "-87.0848, 4.70671, -154.653, 0.28", "-88.4869, 5.87225, -159.915, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-3.88824, 6.04565, -6.65142, 1.11", "-4.72578, 6.55765, -8.34288, 1.11", "-5.32385, 6.70686, -9.41222, 1.11", "-6.54123, 6.76476, -11.6499, 0.83", "-7.49291, 6.68814, -13.3907, 1.38", "-10.683, 6.12646, -19.3372, 0.83", "-12.182, 5.83466, -22.2618, 0.83", "-15.4097, 4.97489, -29.3689, 0.83", "-19.0746, 3.77155, -37.6589, 0.83", "-20.2509, 3.28292, -40.3186, 0.83", "-21.0254, 2.91185, -41.9953, 0.83", "-22.0748, 2.3451, -44.2149, 0.83", "-22.9077, 1.80005, -46.4721, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.44824, 6.91965, -3.11142, 0.83", "-4.03612, 9.10398, -3.18166, 0.55", "-4.97846, 10.4599, -3.21214, 0.55", "-5.75871, 11.6532, -3.31563, 1.11", "-6.84607, 13.3759, -3.50108, 0.83", "-8.91846, 17.1393, -3.97712, 0.83", "-10.3179, 19.9868, -4.35199, 0.83", "-11.7626, 23.2297, -4.78209, 0.83", "-12.7071, 25.7203, -4.99647, 0.83", "-13.3941, 28.1122, -5.11366, 1.38", "-14.0104, 31.4488, -5.07941, 0.55", "-14.1256, 33.8696, -4.87091, 0.55", "-14.1228, 35.5583, -4.58903, 0.55", "-14.121, 38.6983, -3.90136, 0.55", "-14.1356, 40.003, -3.56293, 0.55", "-14.2533, 42.4824, -2.91572, 0.55", "-14.7511, 47.1664, -1.83929, 0.55", "-15.0108, 49.1995, -1.4808, 0.28", "-15.3327, 51.4137, -1.24245, 0.28", "-15.5738, 53.2656, -1.15822, 0.55", "-15.7372, 55.1381, -1.18411, 0.28", "-15.946, 60.2538, -1.5768, 0.83", "-15.9036, 62.3258, -1.89068, 0.55", "-15.6967, 64.7107, -2.36418, 0.28", "-15.4815, 66.4277, -2.74483, 0.55", "-14.5825, 71.8312, -4.08997, 0.28", "-14.3741, 72.7484, -4.35284, 0.83", "-13.3865, 76.1018, -5.54252, 0.28", "-13.0678, 77.0733, -5.92464, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.69824, 5.97915, 3.79858, 1.11", "-5.2333, 10.0369, 3.95588, 1.11", "-7.52884, 15.6252, 4.28725, 1.11", "-8.9626, 19.2696, 4.43721, 1.11", "-10.9301, 24.0003, 4.677, 1.11", "-13.0539, 28.8721, 4.91712, 1.11", "-14.7492, 32.8873, 5.02178, 1.11", "-16.1122, 35.9604, 4.89964, 1.11", "-17.8232, 39.7286, 4.46713, 1.11", "-19.2063, 43.0399, 3.95407, 1.11", "-20.7066, 47.1316, 3.18347, 1.11", "-22.3687, 52.0519, 2.07533, 1.11", "-24.3682, 58.7405, 0.283175, 1.11", "-25.1286, 61.3972, -0.459722, 1.11", "-26.0405, 64.7491, -1.39494, 0.83", "-26.7221, 67.8135, -2.27844, 0.83", "-27.4173, 71.3107, -3.23431, 1.11", "-28.1797, 75.3489, -4.17327, 1.11", "-28.3801, 76.6515, -4.41519, 0.28", "-28.7689, 79.0563, -4.83119, 0.55", "-29.0924, 80.7387, -5.10169, 0.55", "-29.684, 83.389, -5.56393, 0.55", "-30.2468, 85.6684, -6.00579, 0.28", "-30.4565, 86.4666, -6.21994, 0.83", "-30.9557, 88.2203, -6.7443, 0.28", "-32.4113, 92.9377, -8.02195, 0.55", "-33.3575, 95.8594, -8.84332, 0.28", "-33.986, 97.9151, -9.44789, 1.11", "-35.1796, 102.165, -10.7584, 0.28", "-35.8745, 105.061, -11.6346, 1.11", "-36.5514, 108.527, -12.6746, 0.28", "-36.8237, 110.838, -13.3384, 0.55", "-36.9058, 113.351, -13.9081, 0.28", "-36.8378, 114.67, -14.1523, 0.28", "-36.6401, 116.104, -14.3528, 0.55", "-36.2688, 118.01, -14.671, 0.28", "-35.9504, 119.47, -14.9477, 0.83", "-35.4438, 121.789, -15.2562, 0.28", "-35.3182, 122.423, -15.3382, 0.83", "-34.8415, 125.081, -15.7083, 0.55", "-34.4854, 127.208, -16.0372, 0.28", "-34.3596, 128.029, -16.1552, 0.55", "-33.9522, 130.433, -16.5332, 0.28", "-33.8625, 131.011, -16.629, 0.55", "-33.5503, 132.865, -16.9369, 0.28", "-33.4354, 133.502, -17.0491, 0.55", "-33.1623, 135.545, -17.4024, 0.28", "-32.9568, 138.47, -17.9052, 0.83", "-32.9431, 140.254, -18.2058, 0.28", "-33.0463, 141.414, -18.4655, 0.83", "-33.3621, 143.456, -19.0166, 0.28", "-33.6597, 145.098, -19.5369, 0.55", "-33.9075, 146.301, -19.9552, 0.28", "-34.4275, 148.482, -20.761, 0.83", "-35.4253, 152.746, -22.3716, 0.28", "-35.6555, 153.748, -22.7462, 0.55", "-36.6841, 158.31, -24.4489, 0.55", "-36.7913, 158.858, -24.6583, 0.55", "-37.1363, 160.871, -25.4191, 0.28", "-37.307, 161.897, -25.7918, 0.55", "-37.4924, 163.178, -26.1359, 0.28", "-37.7672, 164.475, -26.4467, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.18176, 4.49715, -6.33142, 0.83", "4.44233, 6.0113, -8.6409, 0.83", "4.38542, 6.97737, -10.3967, 0.83", "4.32329, 7.7671, -11.7867, 1.94", "4.26151, 9.13599, -14.3071, 0.83", "4.22169, 9.99168, -15.8391, 1.11", "4.14158, 11.9761, -19.1063, 1.38", "3.96393, 12.9901, -20.7464, 0.28", "3.73088, 13.9336, -22.1551, 0.83", "3.15838, 15.9025, -24.6257, 0.28", "2.92597, 16.6806, -25.3679, 0.83", "2.5244, 18.0528, -26.3477, 0.83", "2.00085, 19.7127, -27.2816, 1.11", "1.01148, 22.4336, -28.7373, 0.28", "0.428344, 23.7464, -29.4148, 0.83", "-0.515092, 25.646, -30.3139, 0.55", "-1.21326, 26.9455, -30.9694, 0.83", "-2.13722, 28.5565, -31.8046, 0.28", "-3.34836, 30.6071, -32.8896, 0.83", "-4.48066, 32.5361, -33.7938, 0.55", "-5.31581, 33.9325, -34.4436, 0.83", "-6.86022, 36.3213, -35.5124, 0.28", "-7.24216, 36.9, -35.7531, 0.55", "-7.88164, 37.8609, -36.1142, 0.28", "-9.21391, 39.8135, -36.7968, 0.83", "-10.1983, 41.3341, -37.3075, 0.28", "-11.0386, 42.67, -37.7489, 0.83", "-11.3697, 43.2161, -37.9093, 0.28", "-12.1497, 44.5093, -38.2988, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.99176, 3.18615, -9.40142, 1.11", "9.68687, 2.99947, -9.40142, 1.11", "13.2204, 2.85898, -9.40142, 1.11", "18.1851, 2.66159, -9.40142, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.36824, 1.07715, 0.248578, 0.55", "-7.21816, 1.31385, -1.05468, 0.55", "-8.81305, 1.51791, -2.17827, 0.83", "-11.939, 1.91789, -4.38051, 0.83", "-17.5407, 2.63463, -8.32687, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.65176, -7.60585, -3.47142, 0.83", "2.91183, -8.78068, -3.99137, 0.83", "3.09397, -9.90309, -4.58879, 0.83", "3.26068, -11.3666, -5.58967, 1.11", "3.46137, -13.2918, -7.03998, 0.83", "3.68542, -15.3194, -8.67158, 0.83", "3.89625, -17.2199, -10.2688, 0.55", "3.9796, -18.0386, -11.0427, 0.83", "4.13749, -19.6827, -12.8073, 0.55", "4.17478, -20.1123, -13.3414, 0.55", "4.16371, -21.1275, -14.7703, 0.83", "4.07656, -21.925, -16.0307, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.14824, -9.45835, 4.18858, 2.22", "-0.517066, -10.5883, 4.25588, 2.22", "-0.957927, -11.9389, 4.33633, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000007819020027
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.52465, -9.54606, 1.42578, 1.11", "3.6293, -24.3977, 1.42578, 1.11", "5.73394, -39.2493, 1.42578, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-12.1497, 44.5093, -38.2988, 0.28", "-14.6388, 45.8556, -37.5804, 0.28", "-15.5403, 46.3298, -37.3295, 0.28", "-16.6845, 46.9382, -37.0282, 0.55", "-17.8663, 47.553, -36.7192, 0.28", "-18.8035, 48.0323, -36.4781, 0.55", "-20.6199, 48.9515, -36.0189, 0.28", "-22.1419, 49.7304, -35.5885, 0.28", "-23.6368, 50.557, -35.1587, 0.55", "-25.6991, 51.7431, -34.6086, 0.28", "-26.596, 52.2983, -34.4308, 0.28", "-27.271, 52.7535, -34.3231, 0.55", "-30.3554, 55.1214, -34.0243, 0.28", "-32.8024, 57.1267, -33.8709, 0.28", "-33.6709, 57.8914, -33.8579, 0.55", "-36.6285, 60.7315, -33.89, 0.28", "-37.2775, 61.3872, -33.9023, 0.55", "-40.9934, 65.2346, -34.0457, 0.28", "-41.4536, 65.7267, -34.078, 1.38", "-45.0959, 69.6921, -34.2943, 0.28", "-48.1562, 73.0709, -34.3683, 0.28", "-49.9771, 75.1097, -34.331, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.1497, 44.5093, -38.2988, 0.83", "-12.671, 45.6956, -39.3832, 0.83", "-13.2656, 47.0487, -40.6202, 0.28", "-14.3358, 49.4845, -42.8468, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "18.1851, 2.66159, -9.40142, 1.11", "20.3443, 2.57367, -10.4392, 1.11", "22.1818, 2.37914, -11.3632, 1.11", "24.1769, 2.18639, -12.5055, 1.11", "26.5015, 1.99446, -13.9379, 1.11", "29.7409, 1.71657, -15.944, 1.11", "32.8729, 1.4479, -17.8837, 1.11", "35.9115, 1.29823, -19.8737, 0.83", "38.3069, 1.20038, -21.5409, 0.83", "40.0154, 1.10105, -22.7755, 0.83", "43.2577, 0.891242, -25.1916, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "18.1851, 2.66159, -9.40142, 0.55", "21.3531, 3.07298, -8.94759, 0.55", "23.774, 3.38735, -8.60078, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-17.5407, 2.63463, -8.32687, 0.83", "-20.1098, 2.4798, -9.17427, 0.83", "-21.5455, 2.57183, -9.72227, 0.83", "-22.8876, 2.58128, -10.2343, 1.94", "-25.172, 2.26895, -11.9452, 0.55", "-26.8581, 1.99151, -13.3306, 0.55", "-29.0978, 1.68035, -15.1939, 0.83", "-30.7469, 1.44443, -16.5832, 0.83", "-32.473, 1.26876, -18.1311, 0.83", "-38.9617, 0.837632, -24.0782, 1.38", "-41.4369, 0.743312, -26.341, 0.55", "-43.5286, 0.657622, -28.315, 0.55", "-45.1085, 0.580832, -29.7968, 1.11", "-47.6765, 0.588142, -32.0564, 0.28", "-48.151, 0.646082, -32.4051, 0.28", "-48.8923, 0.836272, -32.752, 0.83", "-51.7113, 1.77067, -33.9437, 0.28", "-52.4078, 2.04167, -34.2041, 0.55", "-54.51, 2.98835, -34.9967, 0.28", "-56.9625, 4.04373, -36.0139, 1.11", "-58.66, 4.77785, -36.8478, 0.28", "-59.8768, 5.30231, -37.5263, 0.83", "-62.9679, 6.70801, -39.4458, 0.28", "-64.2577, 7.33811, -40.4101, 0.83", "-66.8423, 8.6523, -42.6407, 0.55", "-68.0685, 9.31783, -43.8135, 0.55", "-69.0517, 9.87238, -44.7744, 0.83", "-69.9679, 10.4361, -45.7189, 0.83", "-72.4836, 12.2758, -48.4422, 0.28", "-72.7068, 12.457, -48.6812, 0.83", "-73.829, 13.5554, -49.9072, 0.28", "-74.3396, 14.055, -50.4803, 0.55", "-75.1912, 14.8619, -51.4198, 0.28", "-75.9085, 15.431, -52.1607, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.5407, 2.63463, -8.32687, 0.28", "-18.9734, 1.12762, -8.11072, 0.28", "-19.4348, 0.633702, -8.01615, 0.83", "-20.7597, -0.949603, -7.88876, 0.28", "-21.8699, -2.24908, -7.82236, 0.28", "-22.3046, -2.73518, -7.81313, 0.55", "-24.0742, -4.65582, -7.81531, 0.28", "-25.1994, -5.86821, -7.82347, 1.11", "-29.1743, -9.82874, -7.86568, 0.28", "-30.0694, -10.6669, -7.88139, 0.55", "-31.0478, -11.5476, -7.88693, 0.28", "-32.3294, -12.622, -7.89343, 0.28", "-33.1716, -13.2521, -7.89859, 0.55", "-35.0137, -14.5473, -7.68624, 0.28", "-35.515, -14.8824, -7.42185, 0.55", "-37.0007, -15.9439, -6.24388, 0.28", "-37.5621, -16.4067, -5.6367, 0.55", "-38.3947, -17.1286, -4.60971, 0.28", "-39.7632, -18.3345, -2.94834, 0.83", "-42.8391, -21.2024, 0.77606, 0.28", "-43.3409, -21.6784, 1.34326, 0.83", "-45.1673, -23.5909, 3.28776, 0.28", "-45.8584, -24.3592, 3.96046, 0.55", "-48.1287, -27.0473, 5.92014, 0.28", "-48.9931, -28.1421, 6.47972, 0.28", "-49.712, -29.1006, 6.79859, 0.55", "-50.8765, -30.7402, 7.29776, 0.28", "-51.2361, -31.2654, 7.42859, 1.11", "-53.2092, -34.6549, 8.29369, 0.28", "-53.8569, -36.1087, 8.67111, 0.83", "-59.4663, -43.7582, 13.4194, 0.83", "-65.1431, -51.5863, 17.7445, 0.83", "-69.5338, -60.5692, 20.9195, 0.83", "-74.0149, -69.4858, 24.1754, 0.83", "-80.1706, -77.9607, 25.2437, 0.83", "-85.3112, -86.6656, 28.1361, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.07656, -21.925, -16.0307, 0.83", "5.4626, -22.6849, -16.5679, 0.83", "6.99002, -23.5186, -17.1149, 0.28", "7.72857, -23.9237, -17.3686, 1.11", "9.37549, -24.8827, -17.9313, 0.55", "10.4697, -25.5028, -18.2837, 0.55", "12.9492, -26.8503, -19.0514, 1.38", "14.0967, -27.4007, -19.4745, 0.28", "14.358, -27.522, -19.5848, 0.55", "15.0743, -27.8458, -19.986, 0.55", "16.4384, -28.4328, -20.8648, 0.55", "17.279, -28.7943, -21.5571, 1.38", "19.5552, -29.7758, -23.7054, 0.55", "20.2274, -30.081, -24.3468, 1.11", "22.3399, -31.0519, -26.3597, 0.28", "23.2023, -31.4522, -27.1811, 1.11", "24.6953, -32.2088, -28.6089, 0.55", "26.3073, -33.0394, -30.0353, 0.28", "27.0006, -33.3824, -30.5411, 1.11", "28.3237, -33.955, -31.3843, 0.28", "28.5073, -34.02, -31.4716, 0.55", "29.4109, -34.2911, -31.8346, 0.28", "30.015, -34.4324, -32.0033, 0.55", "31.0697, -34.6242, -32.2428, 0.28", "31.8984, -34.7851, -32.4211, 0.55", "32.9305, -34.9842, -32.6013, 0.28", "33.6307, -35.1269, -32.7542, 0.28", "33.9687, -35.1945, -32.8366, 0.55", "35.4448, -35.5543, -33.2726, 0.28", "35.9677, -35.6994, -33.4487, 0.55", "37.1355, -36.1389, -34.0113, 0.55", "38.0614, -36.5419, -34.5696, 0.28", "38.3079, -36.6539, -34.7807, 0.55", "39.2387, -37.0739, -35.6331, 0.28", "39.3993, -37.1427, -35.783, 0.55", "41.2685, -37.8951, -37.5107, 0.28", "41.6471, -38.0452, -37.8491, 0.83", "43.7393, -38.7346, -39.5024, 0.28", "45.2058, -39.1474, -40.5585, 0.28", "45.9692, -39.3195, -41.0219, 0.55", "48.1563, -39.7248, -42.1333, 0.28", "49.0117, -39.8288, -42.4304, 0.83", "50.502, -39.9882, -42.789, 0.28", "50.9275, -40.039, -42.8429, 0.28", "52.7791, -40.2409, -43.0, 0.28", "53.077, -40.275, -43.0114, 0.83", "55.0625, -40.5048, -42.9629, 0.28", "56.589, -40.6987, -42.9261, 0.55", "57.9517, -40.9064, -42.8857, 0.55", "59.2745, -41.1138, -42.8394, 0.28", "59.7457, -41.1878, -42.8187, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "4.07656, -21.925, -16.0307, 0.28", "2.97977, -24.21, -16.8292, 0.28", "2.70043, -24.792, -17.0326, 0.55", "2.08063, -26.0832, -17.4838, 0.28", "1.69389, -26.8889, -17.7654, 0.83", "0.0746416, -30.2624, -18.9443, 0.28", "-0.197156, -30.8286, -19.1422, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.957927, -11.9389, 4.33633, 2.22", "-0.996317, -16.2966, 5.60881, 2.22", "-1.0372, -20.9378, 6.96407, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.957927, -11.9389, 4.33633, 0.55", "-4.63069, -11.5824, 4.10769, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.73394, -39.2493, 1.42578, 1.11", "7.83859, -54.1009, 1.42578, 1.11", "9.94324, -68.9525, 1.42578, 1.11" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-14.3358, 49.4845, -42.8468, 0.28", "-16.4427, 51.9747, -42.4587, 0.28", "-17.4616, 53.3208, -42.5407, 1.11", "-18.4469, 54.6985, -42.6529, 0.28", "-19.3881, 56.085, -42.8408, 0.55", "-20.3735, 57.6385, -43.0678, 0.28", "-21.5028, 59.5559, -43.3489, 1.38", "-23.9792, 64.1216, -44.1189, 0.28", "-24.5992, 65.4135, -44.3908, 0.55", "-25.735, 68.063, -45.0111, 0.28", "-26.3698, 69.8145, -45.5485, 0.83", "-27.4694, 73.1646, -46.7154, 0.28", "-27.6999, 73.9132, -46.971, 0.55", "-29.3018, 79.2113, -48.773, 0.28", "-29.6301, 80.2645, -49.1588, 0.55", "-31.1743, 85.1274, -50.9392, 0.28", "-31.7171, 86.8004, -51.6044, 0.55", "-32.2473, 88.436, -52.2949, 0.28", "-32.4291, 88.9838, -52.5239, 1.11", "-33.9602, 92.7923, -53.9503, 0.28", "-34.4145, 93.8514, -54.3047, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.3358, 49.4845, -42.8468, 0.55", "-12.4206, 49.0389, -43.413, 0.55", "-10.8112, 48.6644, -43.8887, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "43.2577, 0.891242, -25.1916, 0.28", "45.2319, 0.625412, -28.3404, 0.28", "46.9125, 0.476332, -31.0112, 0.83", "49.4383, 0.341473, -34.8015, 0.28", "50.0898, 0.310348, -35.704, 0.83", "52.0295, 0.256115, -38.1806, 0.28", "52.5404, 0.254615, -38.7923, 0.55", "53.3516, 0.33064, -39.5895, 0.28", "54.3967, 0.540302, -40.4168, 0.28", "55.5858, 0.831632, -41.0829, 0.83", "56.5261, 1.0791, -41.5977, 0.83", "58.1816, 1.5168, -42.441, 0.28", "59.5109, 1.90953, -43.175, 0.83", "61.4365, 2.54648, -44.253, 0.28", "61.4365, 2.54648, -44.253, 0.55", "63.2873, 3.28616, -45.3173, 0.28", "63.8622, 3.49846, -45.637, 0.55", "65.3197, 4.06366, -46.617, 0.28", "66.3466, 4.48823, -47.5049, 1.11", "67.7857, 5.10141, -49.2178, 0.28", "68.7105, 5.51331, -50.4692, 0.55", "69.5022, 5.90113, -51.6526, 0.28", "71.7011, 7.09846, -55.233, 0.55", "72.8092, 7.77009, -57.1892, 1.11", "74.9508, 9.22628, -61.2088, 0.28", "75.359, 9.56738, -62.0306, 0.55", "75.9471, 10.1721, -63.2434, 0.28", "76.3092, 10.6306, -63.9617, 0.55", "77.0562, 11.682, -65.2235, 0.28", "77.3759, 12.2581, -65.8216, 1.38", "78.4519, 14.6578, -68.0241, 0.28", "78.7004, 15.3175, -68.6925, 0.83", "79.2782, 17.0701, -70.6001, 0.28", "79.4016, 17.5016, -71.1009, 0.55", "79.7781, 19.0186, -72.8941, 0.28", "79.8662, 19.4027, -73.3557, 0.55", "80.2407, 21.1138, -75.3253, 0.28", "80.352, 21.5575, -75.8089, 0.55", "80.7412, 23.0684, -77.3245, 0.28", "80.889, 23.5471, -77.7381, 0.83", "81.3509, 24.8354, -78.6631, 0.28", "81.6513, 25.5679, -79.0904, 0.55", "82.7533, 27.7775, -80.0012, 0.28", "83.0898, 28.3463, -80.1504, 0.83", "84.3862, 30.2776, -80.4136, 0.28", "84.58, 30.5232, -80.429, 0.55", "85.8946, 31.9938, -80.4109, 0.28", "86.727, 32.8861, -80.3533, 0.55", "88.5961, 34.811, -80.0608, 0.28", "88.7485, 34.9625, -80.0373, 0.55", "90.9138, 37.0986, -79.8006, 0.28", "91.0644, 37.2422, -79.7851, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "43.2577, 0.891242, -25.1916, 0.83", "45.0804, 1.31529, -26.2489, 0.83", "45.9656, 1.51855, -26.7681, 0.55", "46.612, 1.62088, -27.1313, 0.55", "48.1251, 1.81024, -27.9658, 1.11", "50.9976, 2.0423, -29.698, 0.28", "51.4254, 2.06902, -29.9544, 1.11", "53.2954, 2.11782, -31.1404, 0.28", "54.6383, 2.14108, -31.9613, 0.28", "55.6718, 2.16304, -32.5667, 0.83", "57.7916, 2.24645, -33.7882, 0.28", "59.1896, 2.27629, -34.4857, 0.28", "59.9354, 2.30591, -34.8688, 1.11", "61.7487, 2.44277, -35.822, 0.28", "62.3504, 2.54237, -36.1375, 0.55", "64.8168, 3.04768, -37.282, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-75.9085, 15.431, -52.1607, 0.28", "-76.7604, 16.2694, -52.5594, 0.28", "-76.9789, 16.4643, -52.7085, 0.55", "-77.6094, 16.984, -53.1571, 0.28", "-78.2802, 17.5159, -53.6933, 0.55", "-79.026, 18.1169, -54.2899, 0.28", "-79.1857, 18.2458, -54.4174, 0.55", "-80.2669, 19.096, -55.3215, 0.28", "-80.5729, 19.3378, -55.5919, 0.83", "-81.3555, 19.9627, -56.3869, 0.28", "-81.8512, 20.3824, -56.9467, 0.83", "-82.7382, 21.2216, -58.0012, 0.28", "-82.8137, 21.303, -58.0917, 0.83", "-83.4946, 22.1478, -58.926, 0.28", "-84.2377, 23.1892, -59.9788, 0.83", "-84.6643, 23.872, -60.6578, 0.28", "-84.8144, 24.1631, -60.9755, 0.55", "-85.0146, 24.6575, -61.5349, 0.28", "-85.1214, 24.9894, -61.8828, 0.55", "-85.3249, 25.8943, -62.7074, 0.28", "-85.3663, 26.1352, -62.8618, 0.83", "-85.5707, 27.382, -63.575, 0.28", "-85.6146, 27.6896, -63.7329, 0.55", "-85.7563, 28.7165, -64.2076, 0.28", "-85.803, 29.1097, -64.3521, 0.83", "-86.1235, 32.0132, -65.271, 0.28", "-86.1899, 32.7529, -65.4719, 0.55", "-86.4523, 36.3536, -66.3212, 0.28", "-86.4846, 36.7867, -66.4201, 0.83", "-86.8509, 41.557, -67.5157, 0.28", "-86.9029, 42.2608, -67.6708, 0.83", "-87.0217, 44.1308, -68.0462, 0.28", "-87.2455, 47.5418, -68.6884, 0.28", "-87.3283, 48.7328, -68.8946, 0.28", "-87.3631, 49.1744, -68.9797, 0.83", "-87.459, 50.0292, -69.1584, 0.28", "-87.589, 50.9993, -69.3927, 0.55", "-87.7207, 51.786, -69.6388, 0.28", "-87.7965, 52.2019, -69.7795, 0.55", "-87.9386, 52.9425, -70.0374, 0.28", "-88.0357, 53.3389, -70.153, 0.55", "-88.6827, 55.5015, -70.692, 0.28", "-89.3647, 57.336, -71.0813, 0.28", "-89.6733, 58.0731, -71.2145, 0.28", "-89.8925, 58.5396, -71.2947, 1.11", "-90.8158, 60.316, -71.5826, 0.28", "-91.07, 60.7632, -71.6428, 0.55", "-92.2963, 62.6626, -71.8419, 0.28", "-92.3808, 62.7874, -71.8549, 0.55", "-93.2544, 64.1764, -72.0525, 0.28", "-93.359, 64.3517, -72.0848, 0.83", "-94.5148, 66.2944, -72.5283, 0.28", "-94.8158, 66.8151, -72.6414, 0.55", "-95.6192, 68.2204, -72.9291, 0.28", "-96.3167, 69.4594, -73.1923, 0.28", "-97.2622, 71.109, -73.5481, 0.28", "-97.4974, 71.5028, -73.635, 0.83", "-98.2859, 72.7389, -73.9183, 0.28", "-98.4686, 73.0125, -73.9648, 0.55", "-99.8169, 74.923, -74.1668, 0.28", "-100.179, 75.4, -74.1907, 0.55", "-100.696, 76.0776, -74.1922, 0.28", "-100.894, 76.3435, -74.1777, 0.55", "-101.919, 77.6877, -74.0121, 0.28", "-102.212, 78.1247, -73.9507, 0.55", "-102.551, 78.6743, -73.8614, 0.28", "-102.763, 79.0723, -73.8119, 0.55", "-103.415, 80.4363, -73.6984, 0.28", "-103.465, 80.5616, -73.6989, 0.55", "-104.264, 82.8193, -73.8905, 0.28", "-104.412, 83.3146, -73.9359, 0.55", "-104.607, 84.0608, -73.9976, 0.28", "-104.723, 84.5673, -74.0331, 0.55", "-105.198, 87.3528, -74.2684, 0.28", "-105.265, 87.833, -74.301, 0.55", "-105.423, 89.266, -74.3877, 0.28", "-105.484, 89.9136, -74.4226, 0.83", "-105.627, 91.5957, -74.4975, 0.28", "-105.794, 94.1511, -74.5451, 0.28", "-105.808, 94.5184, -74.5306, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-75.9085, 15.431, -52.1607, 0.28", "-77.4648, 16.185, -52.028, 0.28", "-78.1366, 16.5104, -51.9707, 0.55", "-80.0339, 17.4296, -51.809, 0.28", "-80.6265, 17.7167, -51.7585, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.0372, -20.9378, 6.96407, 1.66", "-2.87165, -24.6081, 6.90771, 1.66", "-4.95727, -28.7809, 6.84362, 1.66", "-6.99822, -32.8643, 6.78091, 1.66", "-8.98209, -36.8335, 6.71995, 1.66" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-1.0372, -20.9378, 6.96407, 0.83", "4.46078, -23.7176, 9.21671, 0.83", "6.71704, -25.142, 10.3648, 0.55", "9.00307, -26.758, 11.8483, 1.11", "10.8234, -28.2711, 13.2495, 0.55", "12.4575, -29.6293, 14.5074, 0.55", "15.7505, -32.3665, 17.0422, 0.28", "17.0461, -33.8349, 18.3354, 0.83", "19.3483, -36.3137, 20.7231, 0.83", "20.8821, -38.1903, 22.6377, 0.55", "29.915, -44.0404, 27.0014, 0.55", "37.4706, -50.7561, 32.6167, 0.55", "43.9808, -59.2401, 36.6965, 0.55", "49.6189, -67.3754, 42.4804, 0.55", "54.7584, -75.2498, 49.0627, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.63069, -11.5824, 4.10769, 0.83", "-4.88474, -11.5723, 4.15757, 0.83", "-7.51084, -11.3975, 4.75411, 0.83", "-10.1142, -11.2122, 5.36797, 0.83", "-12.1125, -10.9967, 5.84962, 0.83", "-12.8987, -10.8968, 6.0388, 0.83", "-14.0378, -10.7261, 6.3187, 1.11", "-16.4382, -10.3479, 6.83852, 0.83", "-17.8789, -10.0468, 7.10147, 0.83", "-19.387, -9.62269, 7.2108, 0.55", "-20.2681, -9.34653, 7.13078, 0.55", "-21.1698, -9.04628, 6.94629, 0.55", "-23.1564, -8.44388, 6.2873, 0.55", "-24.3745, -8.16786, 5.76868, 0.55", "-26.2486, -7.78515, 4.83097, 0.55", "-28.8082, -7.36319, 3.51013, 0.55", "-29.862, -7.21354, 2.98976, 0.55", "-31.3391, -7.04797, 2.2583, 0.28", "-32.8628, -6.92691, 1.53714, 0.55", "-34.1814, -6.87768, 0.950574, 0.28", "-35.9266, -6.81181, 0.284554, 0.83", "-37.0181, -6.79328, -0.0544751, 0.28", "-38.9747, -6.80777, -0.567966, 0.55", "-40.5817, -6.80383, -0.904522, 0.55", "-42.0786, -6.84302, -1.15958, 0.55", "-43.212, -6.9343, -1.29937, 0.83", "-45.5265, -7.19046, -1.55414, 0.55", "-46.8132, -7.34119, -1.63461, 0.28", "-47.2227, -7.38989, -1.64469, 0.83", "-48.6985, -7.57363, -1.68902, 0.83", "-49.8401, -7.74045, -1.77044, 0.55", "-51.0019, -7.91694, -1.91642, 0.28", "-53.3512, -8.28166, -2.2272, 0.55", "-54.8787, -8.554, -2.41103, 0.28", "-55.5319, -8.68194, -2.46912, 0.55", "-56.8264, -8.93998, -2.52537, 0.28", "-57.2097, -9.02049, -2.51356, 0.83", "-58.8161, -9.43419, -2.3857, 0.28", "-59.2084, -9.55192, -2.41751, 0.55", "-61.1989, -10.2248, -2.65378, 0.28", "-61.998, -10.5102, -2.82428, 0.55", "-62.9039, -10.8339, -3.04056, 0.28", "-63.8869, -11.1696, -3.30189, 0.55", "-67.8936, -12.3388, -4.65572, 0.28", "-69.6315, -12.7486, -5.22478, 0.55", "-71.82, -13.2002, -5.91897, 0.28", "-72.819, -13.3708, -6.24161, 0.55", "-74.8862, -13.6697, -6.85349, 0.28", "-76.4391, -13.8081, -7.16091, 0.55", "-78.1601, -13.844, -7.279, 0.28", "-78.7866, -13.7836, -7.35538, 0.55", "-80.4185, -13.4356, -7.51767, 0.28", "-80.8329, -13.2759, -7.6608, 0.55", "-81.6906, -12.7388, -8.1332, 0.28", "-81.9979, -12.4972, -8.27757, 0.83", "-83.4171, -11.0763, -8.87128, 0.28", "-83.9302, -10.4565, -8.97769, 0.83", "-86.3646, -6.83139, -8.72797, 0.28", "-86.5201, -6.54515, -8.66957, 0.83", "-88.1776, -2.73033, -7.27961, 0.28", "-88.3405, -2.28306, -7.00916, 1.11", "-88.4864, -1.72083, -6.31202, 0.28", "-88.5371, -1.43802, -5.8329, 0.55", "-88.5842, -1.0897, -5.07122, 0.28", "-88.6175, -0.849257, -4.6183, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.63069, -11.5824, 4.10769, 0.55", "-6.35471, -11.7322, 4.38589, 0.55", "-8.65841, -12.087, 4.84687, 0.55", "-12.2585, -12.6828, 5.50977, 0.55", "-14.5425, -13.0274, 5.88555, 0.55", "-15.6909, -13.2006, 6.07447, 0.83", "-18.1982, -13.5789, 6.48698, 0.83", "-20.5613, -13.9143, 6.89809, 0.83", "-22.064, -14.2526, 7.18319, 0.55", "-24.1892, -14.8069, 7.609, 0.55", "-33.5916, -16.8616, 10.3371, 0.55", "-43.3018, -18.9941, 11.4265, 0.55", "-53.0382, -19.9604, 13.5957, 0.55", "-62.8832, -20.5036, 15.4099, 0.55", "-72.4049, -21.1958, 18.4674, 0.55", "-81.3557, -22.7861, 22.6649, 0.55", "-90.1313, -22.7626, 27.5167, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "64.8168, 3.04768, -37.282, 0.55", "66.1232, 3.44676, -37.0996, 0.55", "67.1321, 3.78984, -36.9671, 0.55", "68.6027, 4.30579, -36.7538, 0.28", "69.5908, 4.65786, -36.6064, 0.28", "70.0376, 4.81499, -36.5362, 0.55", "71.8637, 5.44669, -36.2463, 0.28", "72.8434, 5.79979, -36.0534, 0.83", "73.9383, 6.21811, -35.7991, 0.28", "74.3715, 6.36613, -35.6477, 0.55", "75.1872, 6.58661, -35.3025, 0.28", "75.769, 6.73736, -35.0312, 0.55", "77.4479, 7.14242, -34.1282, 0.28", "78.3513, 7.32161, -33.6038, 0.83", "80.6579, 7.73684, -32.1595, 0.28", "81.5469, 7.87878, -31.5614, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "64.8168, 3.04768, -37.282, 0.55", "65.1125, 1.47933, -37.7838, 0.55", "65.7189, -1.15032, -38.5284, 0.55", "65.9937, -2.27893, -38.4808, 0.83", "66.2148, -3.13122, -38.349, 0.28", "66.3526, -3.66626, -38.2477, 0.55", "66.8497, -5.70873, -37.8397, 0.28", "67.0971, -6.6668, -37.5947, 0.83", "68.3916, -11.7235, -36.0138, 0.28", "68.5966, -12.4671, -35.7791, 0.55", "68.9011, -13.5618, -35.4589, 0.28", "69.0465, -14.1523, -35.3039, 0.55", "69.3901, -15.903, -34.9669, 0.28", "69.4277, -16.1882, -34.9486, 0.55", "69.503, -16.9707, -35.0753, 0.28", "69.6064, -17.8118, -35.1051, 0.55", "69.9449, -20.0569, -35.0456, 0.28", "70.0389, -20.6796, -35.0158, 0.83", "70.3614, -23.0301, -34.8423, 0.28", "70.7715, -26.0286, -34.6024, 0.83", "71.4254, -30.481, -34.1942, 0.28", "71.496, -30.8678, -34.1566, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.98209, -36.8335, 6.71995, 1.11", "-9.68197, -39.4432, 6.57193, 1.11", "-10.0283, -40.976, 6.49307, 1.11", "-10.9267, -43.8554, 6.53031, 1.11", "-12.0575, -47.0862, 6.64185, 1.11", "-13.0445, -49.9267, 6.79708, 1.11", "-14.0636, -52.8217, 6.99882, 1.11", "-16.1837, -58.4223, 7.64325, 1.11", "-18.4711, -64.1529, 8.41819, 1.11", "-19.9316, -67.6856, 8.94916, 1.11", "-21.2432, -70.8213, 9.4519, 1.11", "-22.1964, -73.0906, 9.82773, 1.11", "-23.1408, -75.4646, 10.2137, 1.11", "-24.4665, -79.0295, 10.7202, 1.11", "-25.4652, -82.3671, 11.0104, 1.11", "-26.5947, -86.4055, 11.2434, 1.11", "-27.2344, -88.8744, 11.1936, 1.11", "-27.9571, -92.1729, 10.927, 1.11", "-28.3188, -94.5665, 10.5809, 1.11", "-28.5691, -96.9711, 10.1056, 1.11", "-28.7769, -99.758, 9.4633, 1.11", "-28.9905, -103.674, 8.4297, 1.11", "-29.2373, -110.432, 6.55401, 1.11", "-29.2044, -114.861, 5.23115, 1.11", "-29.2004, -118.071, 4.35415, 0.83", "-29.1757, -120.267, 3.80307, 0.83", "-29.1067, -124.452, 2.91363, 0.83", "-28.9242, -129.157, 2.11936, 0.83", "-28.796, -133.006, 1.57814, 0.83", "-28.7611, -138.574, 1.02632, 0.83", "-28.7298, -142.834, 0.713535, 0.83", "-28.6319, -146.805, 0.651938, 0.83", "-28.1057, -153.123, 1.25778, 0.83", "-27.8399, -155.603, 1.58305, 0.83", "-27.6062, -157.566, 1.93342, 0.83", "-27.2239, -159.526, 2.35524, 0.83", "-25.9894, -165.508, 4.13248, 0.83", "-24.2652, -171.311, 6.46833, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-8.98209, -36.8335, 6.71995, 0.83", "-6.71365, -38.1408, 7.21252, 0.83", "-4.31537, -39.523, 7.73328, 0.83", "-0.355497, -41.8051, 8.59312, 0.83", "0.126222, -42.0827, 8.69772, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "54.7584, -75.2498, 49.0627, 0.83", "60.3672, -80.7823, 52.8447, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "54.7584, -75.2498, 49.0627, 0.55", "60.2662, -81.1431, 55.0369, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-90.1313, -22.7626, 27.5167, 0.83", "-98.9532, -24.2827, 23.9531, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-90.1313, -22.7626, 27.5167, 0.55", "-93.1515, -22.2094, 39.2448, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-24.2652, -171.311, 6.46833, 0.55", "-26.5506, -173.364, 6.64059, 0.55", "-29.2284, -176.041, 6.74167, 0.55", "-31.3342, -178.243, 6.78273, 0.28", "-33.2787, -180.438, 6.70106, 0.55", "-34.782, -182.254, 6.59114, 0.28", "-35.301, -182.907, 6.54558, 0.55", "-38.1244, -186.914, 6.28694, 0.28", "-38.4559, -187.426, 6.2605, 0.83", "-40.5803, -190.831, 6.19807, 0.28", "-41.7388, -192.661, 6.17681, 0.28", "-42.3477, -193.637, 6.20133, 0.55", "-44.165, -196.533, 6.33106, 0.28", "-44.467, -197.013, 6.38039, 0.55", "-45.3838, -198.425, 6.61429, 0.28", "-46.3089, -199.677, 7.07788, 0.83", "-50.9155, -207.801, 5.87457, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-24.2652, -171.311, 6.46833, 0.55", "-23.1402, -173.749, 8.31447, 0.55", "-22.4064, -175.128, 9.24552, 0.28", "-22.0364, -175.736, 9.61589, 0.55", "-20.8183, -177.538, 10.6391, 0.55", "-19.741, -179.144, 11.4806, 0.55", "-18.61, -180.829, 12.3641, 0.55", "-17.5319, -182.483, 13.0283, 0.55", "-16.8772, -183.374, 13.3689, 0.28", "-16.3667, -183.997, 13.5856, 0.55", "-14.5642, -185.926, 14.062, 0.28", "-9.29882, -192.645, 18.1861, 0.28" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.126222, -42.0827, 8.69772, 0.28", "-0.5442, -39.5203, 7.58257, 0.28", "-0.593278, -39.265, 7.48277, 0.83", "-0.810841, -37.7553, 6.94821, 0.28", "-0.888128, -36.9629, 6.74367, 0.83", "-1.03988, -33.7169, 6.12244, 0.28", "-1.05457, -32.9285, 5.94818, 0.55", "-1.08228, -31.3862, 5.5845, 0.28", "-1.06991, -30.5976, 5.3968, 0.55", "-0.969087, -29.0263, 5.02588, 0.28", "-0.8337, -27.6671, 4.77423, 0.55", "-0.31545, -24.5852, 4.53569, 0.28", "-0.189158, -23.7458, 4.40393, 0.55", "-0.258254, -13.8737, 4.11602, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.126222, -42.0827, 8.69772, 0.83", "0.0261551, -44.4637, 9.0154, 0.83", "-0.219497, -47.5232, 9.51846, 0.83", "-0.382368, -49.1595, 9.80353, 0.83", "-0.625851, -52.3444, 10.351, 0.83", "-0.719331, -56.5286, 10.9988, 0.83", "-0.647596, -58.1477, 11.2201, 0.83", "-0.441892, -60.1325, 11.4918, 0.83", "-0.034833, -62.8187, 11.7583, 0.83", "0.48658, -65.339, 11.9236, 0.83", "1.15067, -68.0435, 11.9833, 0.83", "2.01631, -71.5095, 11.8571, 0.83", "2.47596, -73.2176, 11.7589, 0.83", "4.11466, -78.7417, 11.3571, 0.83", "4.5746, -80.2777, 11.2413, 0.83", "5.78994, -84.5517, 10.9328, 0.83", "6.52154, -87.3593, 10.8841, 0.83", "7.44714, -90.8165, 10.9837, 0.83", "7.87043, -92.4969, 11.1118, 0.55", "8.3371, -95.035, 11.4634, 0.55", "8.55661, -96.7155, 11.7965, 0.83", "8.99823, -101.498, 12.9686, 0.83", "9.16271, -104.44, 13.778, 0.55", "9.17214, -107.849, 14.7697, 0.55", "9.03247, -111.749, 15.9236, 0.55", "8.85554, -114.44, 16.723, 0.55", "8.35684, -120.098, 18.2748, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.35684, -120.098, 18.2748, 0.55", "9.0272, -121.582, 18.1221, 0.55", "9.83657, -123.457, 17.7798, 0.55", "11.4905, -127.599, 16.9282, 0.55", "12.5017, -130.361, 16.3322, 0.55", "13.2845, -132.638, 15.8447, 0.55", "14.0605, -135.081, 15.1813, 0.55", "14.9405, -138.213, 14.1448, 0.55", "15.3363, -139.865, 13.5046, 0.55", "15.7205, -141.781, 12.7116, 0.55", "16.0868, -143.277, 12.0832, 0.83", "17.0227, -147.059, 10.6592, 0.55", "17.229, -147.829, 10.4091, 0.55", "17.7832, -149.727, 9.90585, 0.55", "18.8459, -153.06, 9.1134, 0.55", "19.5458, -155.187, 8.71392, 0.55", "20.6798, -158.686, 8.28157, 0.55", "21.1844, -160.25, 8.22096, 0.83", "21.4972, -161.258, 8.17883, 0.28", "21.5816, -161.557, 8.16453, 0.55", "21.7967, -162.492, 8.11928, 0.28", "21.9633, -163.175, 8.09036, 0.55", "22.4306, -164.567, 8.02935, 0.28", "23.3973, -166.695, 7.91969, 0.55", "24.6426, -168.888, 7.76318, 0.28", "25.0318, -169.452, 7.71486, 0.83", "26.7311, -171.517, 7.44989, 0.28", "27.588, -172.426, 7.30954, 0.55", "28.9385, -173.682, 7.09163, 0.55", "30.2273, -174.729, 6.86009, 0.55", "31.6624, -175.793, 6.59571, 0.55", "33.1639, -176.91, 6.3061, 0.28", "33.568, -177.236, 6.22044, 0.55", "34.622, -178.235, 5.9819, 0.28", "34.8351, -178.474, 5.9322, 0.55", "35.87, -179.733, 5.70115, 0.28", "36.1325, -180.099, 5.63003, 0.83", "38.1861, -183.146, 5.01101, 0.28", "38.3103, -183.343, 4.95229, 0.55", "39.5515, -185.339, 4.22435, 0.28", "39.9047, -185.925, 3.98, 0.55", "40.8698, -187.578, 3.23552, 0.28", "40.9802, -187.765, 3.15309, 0.55", "42.7967, -190.764, 1.77937, 0.28", "43.1289, -191.309, 1.54633, 0.55", "43.9977, -192.795, 0.980742, 0.28", "44.6638, -193.896, 0.589805, 0.83", "46.1712, -196.312, -0.148592, 0.28", "46.1712, -196.312, -0.148592, 0.55", "46.9089, -197.373, -0.512214, 0.55", "47.563, -198.261, -0.834615, 0.55", "49.6399, -200.822, -1.80834, 0.28", "50.2494, -201.531, -2.09854, 0.55", "51.985, -203.368, -2.88594, 0.28", "52.8683, -204.26, -3.25308, 0.28", "54.2571, -205.552, -3.86459, 0.55", "54.6891, -205.931, -4.04513, 0.28", "54.9181, -206.138, -4.1312, 0.55", "56.0977, -207.256, -4.57056, 0.28", "56.584, -207.712, -4.79806, 0.55", "59.43, -210.373, -6.29358, 0.28", "60.2805, -211.191, -6.87409, 0.83", "61.055, -211.97, -7.47826, 0.28", "61.3526, -212.275, -7.72481, 0.55", "63.9417, -215.017, -10.0861, 0.28", "64.8956, -215.989, -10.9882, 0.55", "66.7773, -217.931, -12.9556, 0.28", "67.0331, -218.181, -13.265, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.35684, -120.098, 18.2748, 0.55", "8.05115, -122.593, 19.3033, 0.55", "7.87234, -124.692, 20.169, 0.28", "7.75507, -125.952, 20.6723, 0.83", "7.49944, -128.318, 21.6922, 0.28", "7.42436, -128.916, 21.9252, 0.83", "7.00435, -131.479, 22.9701, 0.28", "6.9506, -131.779, 23.0796, 0.55", "6.69788, -132.851, 23.4472, 0.55", "6.25594, -134.351, 23.9609, 0.28", "5.6893, -136.199, 24.5448, 0.55", "4.59093, -139.584, 25.7282, 0.28", "4.06564, -141.182, 26.3367, 0.83", "3.24123, -143.649, 27.3158, 0.28", "2.44708, -146.035, 28.3242, 0.28", "1.55532, -148.532, 29.4225, 0.28", "0.624019, -150.913, 30.5888, 0.83", "-0.121783, -152.756, 31.4684, 0.28", "-0.928077, -154.689, 32.4668, 0.83", "-1.77098, -156.615, 33.4513, 0.28", "-2.13293, -157.424, 33.8903, 0.28", "-3.16182, -159.234, 34.8766, 0.55", "-4.21704, -161.091, 35.6401, 0.55", "-8.42051, -171.034, 39.8695, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_39", "dend_34", "dend_27", "dend_22", "dend_19", "dend_0", "axon_0", "dend_38", "dend_35", "dend_29", "dend_28", "dend_24", "dend_23", "dend_21", "dend_20", "dend_6", "dend_1", "axon_1", "dend_37", "dend_36", "dend_33", "dend_30", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_2", "dend_32", "dend_31", "dend_16", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_17", "dend_15", "dend_12", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_1", "axon_1", "axon_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_8", "dend_4", "dend_3", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_NBC_c28326d13b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, axon_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, axon_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.45000007819020027)
    connect dend_41(0), soma_0(0.45000007819020027)
    connect dend_40(0), soma_0(0.45000007819020027)
    connect dend_39(0), soma_0(0.45000007819020027)
    connect dend_34(0), soma_0(0.45000007819020027)
    connect dend_27(0), soma_0(0.45000007819020027)
    connect dend_22(0), soma_0(0.45000007819020027)
    connect dend_19(0), soma_0(0.45000007819020027)
    connect dend_0(0), soma_0(0.45000007819020027)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.06688, 8.74128, -1.1272, 2.20257 ) }
    soma_0 { pt3dadd( -0.937306, 7.82691, -0.999547, 3.85541 ) }
    soma_0 { pt3dadd( -0.807729, 6.91254, -0.871898, 5.84624 ) }
    soma_0 { pt3dadd( -0.678152, 5.99818, -0.744249, 7.26434 ) }
    soma_0 { pt3dadd( -0.548576, 5.08381, -0.6166, 10.3712 ) }
    soma_0 { pt3dadd( -0.418999, 4.16944, -0.488951, 11.2076 ) }
    soma_0 { pt3dadd( -0.289422, 3.25508, -0.361302, 11.8779 ) }
    soma_0 { pt3dadd( -0.159846, 2.34071, -0.233653, 11.9642 ) }
    soma_0 { pt3dadd( -0.0302691, 1.42634, -0.106004, 11.5058 ) }
    soma_0 { pt3dadd( 0.0993075, 0.511976, 0.0216455, 11.0473 ) }
    soma_0 { pt3dadd( 0.228884, -0.402391, 0.149295, 10.6248 ) }
    soma_0 { pt3dadd( 0.358461, -1.31676, 0.276944, 10.1128 ) }
    soma_0 { pt3dadd( 0.488037, -2.23113, 0.404593, 9.57755 ) }
    soma_0 { pt3dadd( 0.617614, -3.14549, 0.532242, 9.04063 ) }
    soma_0 { pt3dadd( 0.747191, -4.05986, 0.659891, 8.48926 ) }
    soma_0 { pt3dadd( 0.876767, -4.97423, 0.78754, 7.85518 ) }
    soma_0 { pt3dadd( 1.00634, -5.88859, 0.915189, 7.19302 ) }
    soma_0 { pt3dadd( 1.13592, -6.80296, 1.04284, 6.47635 ) }
    soma_0 { pt3dadd( 1.2655, -7.71733, 1.17049, 5.43009 ) }
    soma_0 { pt3dadd( 1.39507, -8.63169, 1.29814, 3.7337 ) }
    soma_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 2.56951 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.70824, 3.15765, -7.70142, 0.83 ) }
    dend_42 { pt3dadd( -7.56906, 3.8573, -10.5152, 0.83 ) }
    dend_42 { pt3dadd( -10.0512, 3.91571, -12.6011, 1.11 ) }
    dend_42 { pt3dadd( -14.5115, 4.0247, -16.1502, 1.11 ) }
    dend_42 { pt3dadd( -18.7369, 3.61082, -20.9365, 1.11 ) }
    dend_42 { pt3dadd( -20.0569, 3.38973, -22.5067, 0.83 ) }
    dend_42 { pt3dadd( -24.3174, 2.47052, -27.5448, 0.83 ) }
    dend_42 { pt3dadd( -25.8357, 1.95482, -29.4973, 0.55 ) }
    dend_42 { pt3dadd( -28.6751, 0.537262, -33.2056, 0.55 ) }
    dend_42 { pt3dadd( -35.3406, -3.55416, -41.8873, 0.83 ) }
    dend_42 { pt3dadd( -38.3614, -5.48963, -45.9277, 0.55 ) }
    dend_42 { pt3dadd( -39.299, -6.03632, -47.4279, 0.83 ) }
    dend_42 { pt3dadd( -40.3821, -6.60946, -49.5609, 0.55 ) }
    dend_42 { pt3dadd( -41.2041, -7.04734, -51.2888, 1.11 ) }
    dend_42 { pt3dadd( -43.3926, -8.15024, -56.0171, 1.11 ) }
    dend_42 { pt3dadd( -46.1781, -9.12781, -61.6983, 0.83 ) }
    dend_42 { pt3dadd( -49.0884, -9.97471, -68.3299, 0.83 ) }
    dend_42 { pt3dadd( -51.7069, -10.4325, -74.2808, 0.28 ) }
    dend_42 { pt3dadd( -52.1491, -10.4494, -75.2487, 0.55 ) }
    dend_42 { pt3dadd( -53.2663, -10.3552, -77.6067, 0.28 ) }
    dend_42 { pt3dadd( -54.4303, -10.0789, -79.8894, 0.55 ) }
    dend_42 { pt3dadd( -55.5177, -9.63302, -81.7299, 0.28 ) }
    dend_42 { pt3dadd( -56.6516, -9.17479, -83.172, 0.83 ) }
    dend_42 { pt3dadd( -59.3601, -7.95481, -86.9169, 0.28 ) }
    dend_42 { pt3dadd( -59.5427, -7.86582, -87.1988, 0.55 ) }
    dend_42 { pt3dadd( -60.7879, -7.21909, -89.438, 0.28 ) }
    dend_42 { pt3dadd( -61.98, -6.58509, -91.8514, 0.83 ) }
    dend_42 { pt3dadd( -62.283, -6.45595, -92.5089, 0.83 ) }
    dend_42 { pt3dadd( -65.7751, -5.33514, -100.382, 0.28 ) }
    dend_42 { pt3dadd( -66.2707, -5.21013, -101.463, 0.55 ) }
    dend_42 { pt3dadd( -68.3935, -4.81081, -105.873, 0.28 ) }
    dend_42 { pt3dadd( -69.307, -4.70392, -107.771, 0.83 ) }
    dend_42 { pt3dadd( -71.1232, -4.48642, -111.392, 0.28 ) }
    dend_42 { pt3dadd( -72.049, -4.36689, -113.077, 0.55 ) }
    dend_42 { pt3dadd( -73.0172, -4.25417, -114.61, 0.28 ) }
    dend_42 { pt3dadd( -73.5301, -4.17942, -115.446, 0.55 ) }
    dend_42 { pt3dadd( -78.4082, -3.15108, -123.175, 0.28 ) }
    dend_42 { pt3dadd( -78.9903, -2.95669, -124.19, 0.55 ) }
    dend_42 { pt3dadd( -79.5363, -2.71486, -125.223, 0.28 ) }
    dend_42 { pt3dadd( -79.9886, -2.45259, -126.283, 0.83 ) }
    dend_42 { pt3dadd( -81.5919, -1.29798, -130.924, 0.28 ) }
    dend_42 { pt3dadd( -81.7733, -1.10959, -131.604, 0.83 ) }
    dend_42 { pt3dadd( -82.4523, -0.050721, -134.884, 0.28 ) }
    dend_42 { pt3dadd( -82.5719, 0.093072, -135.433, 0.83 ) }
    dend_42 { pt3dadd( -83.3774, 1.01219, -139.113, 0.28 ) }
    dend_42 { pt3dadd( -83.5095, 1.16009, -139.712, 0.83 ) }
    dend_42 { pt3dadd( -84.4165, 2.16313, -143.718, 0.28 ) }
    dend_42 { pt3dadd( -84.5825, 2.33853, -144.446, 0.83 ) }
    dend_42 { pt3dadd( -87.0848, 4.70671, -154.653, 0.28 ) }
    dend_42 { pt3dadd( -88.4869, 5.87225, -159.915, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 71/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -3.88824, 6.04565, -6.65142, 1.11 ) }
    dend_41 { pt3dadd( -4.72578, 6.55765, -8.34288, 1.11 ) }
    dend_41 { pt3dadd( -5.32385, 6.70686, -9.41222, 1.11 ) }
    dend_41 { pt3dadd( -6.54123, 6.76476, -11.6499, 0.83 ) }
    dend_41 { pt3dadd( -7.49291, 6.68814, -13.3907, 1.38 ) }
    dend_41 { pt3dadd( -10.683, 6.12646, -19.3372, 0.83 ) }
    dend_41 { pt3dadd( -12.182, 5.83466, -22.2618, 0.83 ) }
    dend_41 { pt3dadd( -15.4097, 4.97489, -29.3689, 0.83 ) }
    dend_41 { pt3dadd( -19.0746, 3.77155, -37.6589, 0.83 ) }
    dend_41 { pt3dadd( -20.2509, 3.28292, -40.3186, 0.83 ) }
    dend_41 { pt3dadd( -21.0254, 2.91185, -41.9953, 0.83 ) }
    dend_41 { pt3dadd( -22.0748, 2.3451, -44.2149, 0.83 ) }
    dend_41 { pt3dadd( -22.9077, 1.80005, -46.4721, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 84/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.44824, 6.91965, -3.11142, 0.83 ) }
    dend_40 { pt3dadd( -4.03612, 9.10398, -3.18166, 0.55 ) }
    dend_40 { pt3dadd( -4.97846, 10.4599, -3.21214, 0.55 ) }
    dend_40 { pt3dadd( -5.75871, 11.6532, -3.31563, 1.11 ) }
    dend_40 { pt3dadd( -6.84607, 13.3759, -3.50108, 0.83 ) }
    dend_40 { pt3dadd( -8.91846, 17.1393, -3.97712, 0.83 ) }
    dend_40 { pt3dadd( -10.3179, 19.9868, -4.35199, 0.83 ) }
    dend_40 { pt3dadd( -11.7626, 23.2297, -4.78209, 0.83 ) }
    dend_40 { pt3dadd( -12.7071, 25.7203, -4.99647, 0.83 ) }
    dend_40 { pt3dadd( -13.3941, 28.1122, -5.11366, 1.38 ) }
    dend_40 { pt3dadd( -14.0104, 31.4488, -5.07941, 0.55 ) }
    dend_40 { pt3dadd( -14.1256, 33.8696, -4.87091, 0.55 ) }
    dend_40 { pt3dadd( -14.1228, 35.5583, -4.58903, 0.55 ) }
    dend_40 { pt3dadd( -14.121, 38.6983, -3.90136, 0.55 ) }
    dend_40 { pt3dadd( -14.1356, 40.003, -3.56293, 0.55 ) }
    dend_40 { pt3dadd( -14.2533, 42.4824, -2.91572, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_40 { pt3dadd( -14.7511, 47.1664, -1.83929, 0.55 ) }
    dend_40 { pt3dadd( -15.0108, 49.1995, -1.4808, 0.28 ) }
    dend_40 { pt3dadd( -15.3327, 51.4137, -1.24245, 0.28 ) }
    dend_40 { pt3dadd( -15.5738, 53.2656, -1.15822, 0.55 ) }
    dend_40 { pt3dadd( -15.7372, 55.1381, -1.18411, 0.28 ) }
    dend_40 { pt3dadd( -15.946, 60.2538, -1.5768, 0.83 ) }
    dend_40 { pt3dadd( -15.9036, 62.3258, -1.89068, 0.55 ) }
    dend_40 { pt3dadd( -15.6967, 64.7107, -2.36418, 0.28 ) }
    dend_40 { pt3dadd( -15.4815, 66.4277, -2.74483, 0.55 ) }
    dend_40 { pt3dadd( -14.5825, 71.8312, -4.08997, 0.28 ) }
    dend_40 { pt3dadd( -14.3741, 72.7484, -4.35284, 0.83 ) }
    dend_40 { pt3dadd( -13.3865, 76.1018, -5.54252, 0.28 ) }
    dend_40 { pt3dadd( -13.0678, 77.0733, -5.92464, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.69824, 5.97915, 3.79858, 1.11 ) }
    dend_39 { pt3dadd( -5.2333, 10.0369, 3.95588, 1.11 ) }
    dend_39 { pt3dadd( -7.52884, 15.6252, 4.28725, 1.11 ) }
    dend_39 { pt3dadd( -8.9626, 19.2696, 4.43721, 1.11 ) }
    dend_39 { pt3dadd( -10.9301, 24.0003, 4.677, 1.11 ) }
    dend_39 { pt3dadd( -13.0539, 28.8721, 4.91712, 1.11 ) }
    dend_39 { pt3dadd( -14.7492, 32.8873, 5.02178, 1.11 ) }
    dend_39 { pt3dadd( -16.1122, 35.9604, 4.89964, 1.11 ) }
    dend_39 { pt3dadd( -17.8232, 39.7286, 4.46713, 1.11 ) }
    dend_39 { pt3dadd( -19.2063, 43.0399, 3.95407, 1.11 ) }
    dend_39 { pt3dadd( -20.7066, 47.1316, 3.18347, 1.11 ) }
    dend_39 { pt3dadd( -22.3687, 52.0519, 2.07533, 1.11 ) }
    dend_39 { pt3dadd( -24.3682, 58.7405, 0.283175, 1.11 ) }
    dend_39 { pt3dadd( -25.1286, 61.3972, -0.459722, 1.11 ) }
    dend_39 { pt3dadd( -26.0405, 64.7491, -1.39494, 0.83 ) }
    dend_39 { pt3dadd( -26.7221, 67.8135, -2.27844, 0.83 ) }
    dend_39 { pt3dadd( -27.4173, 71.3107, -3.23431, 1.11 ) }
    dend_39 { pt3dadd( -28.1797, 75.3489, -4.17327, 1.11 ) }
    dend_39 { pt3dadd( -28.3801, 76.6515, -4.41519, 0.28 ) }
    dend_39 { pt3dadd( -28.7689, 79.0563, -4.83119, 0.55 ) }
    dend_39 { pt3dadd( -29.0924, 80.7387, -5.10169, 0.55 ) }
    dend_39 { pt3dadd( -29.684, 83.389, -5.56393, 0.55 ) }
    dend_39 { pt3dadd( -30.2468, 85.6684, -6.00579, 0.28 ) }
    dend_39 { pt3dadd( -30.4565, 86.4666, -6.21994, 0.83 ) }
    dend_39 { pt3dadd( -30.9557, 88.2203, -6.7443, 0.28 ) }
    dend_39 { pt3dadd( -32.4113, 92.9377, -8.02195, 0.55 ) }
    dend_39 { pt3dadd( -33.3575, 95.8594, -8.84332, 0.28 ) }
    dend_39 { pt3dadd( -33.986, 97.9151, -9.44789, 1.11 ) }
    dend_39 { pt3dadd( -35.1796, 102.165, -10.7584, 0.28 ) }
    dend_39 { pt3dadd( -35.8745, 105.061, -11.6346, 1.11 ) }
    dend_39 { pt3dadd( -36.5514, 108.527, -12.6746, 0.28 ) }
    dend_39 { pt3dadd( -36.8237, 110.838, -13.3384, 0.55 ) }
    dend_39 { pt3dadd( -36.9058, 113.351, -13.9081, 0.28 ) }
    dend_39 { pt3dadd( -36.8378, 114.67, -14.1523, 0.28 ) }
    dend_39 { pt3dadd( -36.6401, 116.104, -14.3528, 0.55 ) }
    dend_39 { pt3dadd( -36.2688, 118.01, -14.671, 0.28 ) }
    dend_39 { pt3dadd( -35.9504, 119.47, -14.9477, 0.83 ) }
    dend_39 { pt3dadd( -35.4438, 121.789, -15.2562, 0.28 ) }
    dend_39 { pt3dadd( -35.3182, 122.423, -15.3382, 0.83 ) }
    dend_39 { pt3dadd( -34.8415, 125.081, -15.7083, 0.55 ) }
    dend_39 { pt3dadd( -34.4854, 127.208, -16.0372, 0.28 ) }
    dend_39 { pt3dadd( -34.3596, 128.029, -16.1552, 0.55 ) }
    dend_39 { pt3dadd( -33.9522, 130.433, -16.5332, 0.28 ) }
    dend_39 { pt3dadd( -33.8625, 131.011, -16.629, 0.55 ) }
    dend_39 { pt3dadd( -33.5503, 132.865, -16.9369, 0.28 ) }
    dend_39 { pt3dadd( -33.4354, 133.502, -17.0491, 0.55 ) }
    dend_39 { pt3dadd( -33.1623, 135.545, -17.4024, 0.28 ) }
    dend_39 { pt3dadd( -32.9568, 138.47, -17.9052, 0.83 ) }
    dend_39 { pt3dadd( -32.9431, 140.254, -18.2058, 0.28 ) }
    dend_39 { pt3dadd( -33.0463, 141.414, -18.4655, 0.83 ) }
    dend_39 { pt3dadd( -33.3621, 143.456, -19.0166, 0.28 ) }
    dend_39 { pt3dadd( -33.6597, 145.098, -19.5369, 0.55 ) }
    dend_39 { pt3dadd( -33.9075, 146.301, -19.9552, 0.28 ) }
    dend_39 { pt3dadd( -34.4275, 148.482, -20.761, 0.83 ) }
    dend_39 { pt3dadd( -35.4253, 152.746, -22.3716, 0.28 ) }
    dend_39 { pt3dadd( -35.6555, 153.748, -22.7462, 0.55 ) }
    dend_39 { pt3dadd( -36.6841, 158.31, -24.4489, 0.55 ) }
    dend_39 { pt3dadd( -36.7913, 158.858, -24.6583, 0.55 ) }
    dend_39 { pt3dadd( -37.1363, 160.871, -25.4191, 0.28 ) }
    dend_39 { pt3dadd( -37.307, 161.897, -25.7918, 0.55 ) }
    dend_39 { pt3dadd( -37.4924, 163.178, -26.1359, 0.28 ) }
    dend_39 { pt3dadd( -37.7672, 164.475, -26.4467, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.18176, 4.49715, -6.33142, 0.83 ) }
    dend_34 { pt3dadd( 4.44233, 6.0113, -8.6409, 0.83 ) }
    dend_34 { pt3dadd( 4.38542, 6.97737, -10.3967, 0.83 ) }
    dend_34 { pt3dadd( 4.32329, 7.7671, -11.7867, 1.94 ) }
    dend_34 { pt3dadd( 4.26151, 9.13599, -14.3071, 0.83 ) }
    dend_34 { pt3dadd( 4.22169, 9.99168, -15.8391, 1.11 ) }
    dend_34 { pt3dadd( 4.14158, 11.9761, -19.1063, 1.38 ) }
    dend_34 { pt3dadd( 3.96393, 12.9901, -20.7464, 0.28 ) }
    dend_34 { pt3dadd( 3.73088, 13.9336, -22.1551, 0.83 ) }
    dend_34 { pt3dadd( 3.15838, 15.9025, -24.6257, 0.28 ) }
    dend_34 { pt3dadd( 2.92597, 16.6806, -25.3679, 0.83 ) }
    dend_34 { pt3dadd( 2.5244, 18.0528, -26.3477, 0.83 ) }
    dend_34 { pt3dadd( 2.00085, 19.7127, -27.2816, 1.11 ) }
    dend_34 { pt3dadd( 1.01148, 22.4336, -28.7373, 0.28 ) }
    dend_34 { pt3dadd( 0.428344, 23.7464, -29.4148, 0.83 ) }
    dend_34 { pt3dadd( -0.515092, 25.646, -30.3139, 0.55 ) }
    dend_34 { pt3dadd( -1.21326, 26.9455, -30.9694, 0.83 ) }
    dend_34 { pt3dadd( -2.13722, 28.5565, -31.8046, 0.28 ) }
    dend_34 { pt3dadd( -3.34836, 30.6071, -32.8896, 0.83 ) }
    dend_34 { pt3dadd( -4.48066, 32.5361, -33.7938, 0.55 ) }
    dend_34 { pt3dadd( -5.31581, 33.9325, -34.4436, 0.83 ) }
    dend_34 { pt3dadd( -6.86022, 36.3213, -35.5124, 0.28 ) }
    dend_34 { pt3dadd( -7.24216, 36.9, -35.7531, 0.55 ) }
    dend_34 { pt3dadd( -7.88164, 37.8609, -36.1142, 0.28 ) }
    dend_34 { pt3dadd( -9.21391, 39.8135, -36.7968, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( -10.1983, 41.3341, -37.3075, 0.28 ) }
    dend_34 { pt3dadd( -11.0386, 42.67, -37.7489, 0.83 ) }
    dend_34 { pt3dadd( -11.3697, 43.2161, -37.9093, 0.28 ) }
    dend_34 { pt3dadd( -12.1497, 44.5093, -38.2988, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 4/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.99176, 3.18615, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 9.68687, 2.99947, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 13.2204, 2.85898, -9.40142, 1.11 ) }
    dend_27 { pt3dadd( 18.1851, 2.66159, -9.40142, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 8/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.36824, 1.07715, 0.248578, 0.55 ) }
    dend_22 { pt3dadd( -7.21816, 1.31385, -1.05468, 0.55 ) }
    dend_22 { pt3dadd( -8.81305, 1.51791, -2.17827, 0.83 ) }
    dend_22 { pt3dadd( -11.939, 1.91789, -4.38051, 0.83 ) }
    dend_22 { pt3dadd( -17.5407, 2.63463, -8.32687, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 13/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.65176, -7.60585, -3.47142, 0.83 ) }
    dend_19 { pt3dadd( 2.91183, -8.78068, -3.99137, 0.83 ) }
    dend_19 { pt3dadd( 3.09397, -9.90309, -4.58879, 0.83 ) }
    dend_19 { pt3dadd( 3.26068, -11.3666, -5.58967, 1.11 ) }
    dend_19 { pt3dadd( 3.46137, -13.2918, -7.03998, 0.83 ) }
    dend_19 { pt3dadd( 3.68542, -15.3194, -8.67158, 0.83 ) }
    dend_19 { pt3dadd( 3.89625, -17.2199, -10.2688, 0.55 ) }
    dend_19 { pt3dadd( 3.9796, -18.0386, -11.0427, 0.83 ) }
    dend_19 { pt3dadd( 4.13749, -19.6827, -12.8073, 0.55 ) }
    dend_19 { pt3dadd( 4.17478, -20.1123, -13.3414, 0.55 ) }
    dend_19 { pt3dadd( 4.16371, -21.1275, -14.7703, 0.83 ) }
    dend_19 { pt3dadd( 4.07656, -21.925, -16.0307, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 25/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.14824, -9.45835, 4.18858, 2.22 ) }
    dend_0 { pt3dadd( -0.517066, -10.5883, 4.25588, 2.22 ) }
    dend_0 { pt3dadd( -0.957927, -11.9389, 4.33633, 3.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 28/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.52465, -9.54606, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 3.6293, -24.3977, 1.42578, 1.11 ) }
    axon_0 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 31/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -12.1497, 44.5093, -38.2988, 0.28 ) }
    dend_38 { pt3dadd( -14.6388, 45.8556, -37.5804, 0.28 ) }
    dend_38 { pt3dadd( -15.5403, 46.3298, -37.3295, 0.28 ) }
    dend_38 { pt3dadd( -16.6845, 46.9382, -37.0282, 0.55 ) }
    dend_38 { pt3dadd( -17.8663, 47.553, -36.7192, 0.28 ) }
    dend_38 { pt3dadd( -18.8035, 48.0323, -36.4781, 0.55 ) }
    dend_38 { pt3dadd( -20.6199, 48.9515, -36.0189, 0.28 ) }
    dend_38 { pt3dadd( -22.1419, 49.7304, -35.5885, 0.28 ) }
    dend_38 { pt3dadd( -23.6368, 50.557, -35.1587, 0.55 ) }
    dend_38 { pt3dadd( -25.6991, 51.7431, -34.6086, 0.28 ) }
    dend_38 { pt3dadd( -26.596, 52.2983, -34.4308, 0.28 ) }
    dend_38 { pt3dadd( -27.271, 52.7535, -34.3231, 0.55 ) }
    dend_38 { pt3dadd( -30.3554, 55.1214, -34.0243, 0.28 ) }
    dend_38 { pt3dadd( -32.8024, 57.1267, -33.8709, 0.28 ) }
    dend_38 { pt3dadd( -33.6709, 57.8914, -33.8579, 0.55 ) }
    dend_38 { pt3dadd( -36.6285, 60.7315, -33.89, 0.28 ) }
    dend_38 { pt3dadd( -37.2775, 61.3872, -33.9023, 0.55 ) }
    dend_38 { pt3dadd( -40.9934, 65.2346, -34.0457, 0.28 ) }
    dend_38 { pt3dadd( -41.4536, 65.7267, -34.078, 1.38 ) }
    dend_38 { pt3dadd( -45.0959, 69.6921, -34.2943, 0.28 ) }
    dend_38 { pt3dadd( -48.1562, 73.0709, -34.3683, 0.28 ) }
    dend_38 { pt3dadd( -49.9771, 75.1097, -34.331, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 53/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.1497, 44.5093, -38.2988, 0.83 ) }
    dend_35 { pt3dadd( -12.671, 45.6956, -39.3832, 0.83 ) }
    dend_35 { pt3dadd( -13.2656, 47.0487, -40.6202, 0.28 ) }
    dend_35 { pt3dadd( -14.3358, 49.4845, -42.8468, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 18.1851, 2.66159, -9.40142, 1.11 ) }
    dend_29 { pt3dadd( 20.3443, 2.57367, -10.4392, 1.11 ) }
    dend_29 { pt3dadd( 22.1818, 2.37914, -11.3632, 1.11 ) }
    dend_29 { pt3dadd( 24.1769, 2.18639, -12.5055, 1.11 ) }
    dend_29 { pt3dadd( 26.5015, 1.99446, -13.9379, 1.11 ) }
    dend_29 { pt3dadd( 29.7409, 1.71657, -15.944, 1.11 ) }
    dend_29 { pt3dadd( 32.8729, 1.4479, -17.8837, 1.11 ) }
    dend_29 { pt3dadd( 35.9115, 1.29823, -19.8737, 0.83 ) }
    dend_29 { pt3dadd( 38.3069, 1.20038, -21.5409, 0.83 ) }
    dend_29 { pt3dadd( 40.0154, 1.10105, -22.7755, 0.83 ) }
    dend_29 { pt3dadd( 43.2577, 0.891242, -25.1916, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 18.1851, 2.66159, -9.40142, 0.55 ) }
    dend_28 { pt3dadd( 21.3531, 3.07298, -8.94759, 0.55 ) }
    dend_28 { pt3dadd( 23.774, 3.38735, -8.60078, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 71/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -17.5407, 2.63463, -8.32687, 0.83 ) }
    dend_24 { pt3dadd( -20.1098, 2.4798, -9.17427, 0.83 ) }
    dend_24 { pt3dadd( -21.5455, 2.57183, -9.72227, 0.83 ) }
    dend_24 { pt3dadd( -22.8876, 2.58128, -10.2343, 1.94 ) }
    dend_24 { pt3dadd( -25.172, 2.26895, -11.9452, 0.55 ) }
    dend_24 { pt3dadd( -26.8581, 1.99151, -13.3306, 0.55 ) }
    dend_24 { pt3dadd( -29.0978, 1.68035, -15.1939, 0.83 ) }
    dend_24 { pt3dadd( -30.7469, 1.44443, -16.5832, 0.83 ) }
    dend_24 { pt3dadd( -32.473, 1.26876, -18.1311, 0.83 ) }
    dend_24 { pt3dadd( -38.9617, 0.837632, -24.0782, 1.38 ) }
    dend_24 { pt3dadd( -41.4369, 0.743312, -26.341, 0.55 ) }
    dend_24 { pt3dadd( -43.5286, 0.657622, -28.315, 0.55 ) }
    dend_24 { pt3dadd( -45.1085, 0.580832, -29.7968, 1.11 ) }
    dend_24 { pt3dadd( -47.6765, 0.588142, -32.0564, 0.28 ) }
    dend_24 { pt3dadd( -48.151, 0.646082, -32.4051, 0.28 ) }
    dend_24 { pt3dadd( -48.8923, 0.836272, -32.752, 0.83 ) }
    dend_24 { pt3dadd( -51.7113, 1.77067, -33.9437, 0.28 ) }
    dend_24 { pt3dadd( -52.4078, 2.04167, -34.2041, 0.55 ) }
    dend_24 { pt3dadd( -54.51, 2.98835, -34.9967, 0.28 ) }
    dend_24 { pt3dadd( -56.9625, 4.04373, -36.0139, 1.11 ) }
    dend_24 { pt3dadd( -58.66, 4.77785, -36.8478, 0.28 ) }
    dend_24 { pt3dadd( -59.8768, 5.30231, -37.5263, 0.83 ) }
    dend_24 { pt3dadd( -62.9679, 6.70801, -39.4458, 0.28 ) }
    dend_24 { pt3dadd( -64.2577, 7.33811, -40.4101, 0.83 ) }
    dend_24 { pt3dadd( -66.8423, 8.6523, -42.6407, 0.55 ) }
    dend_24 { pt3dadd( -68.0685, 9.31783, -43.8135, 0.55 ) }
    dend_24 { pt3dadd( -69.0517, 9.87238, -44.7744, 0.83 ) }
    dend_24 { pt3dadd( -69.9679, 10.4361, -45.7189, 0.83 ) }
    dend_24 { pt3dadd( -72.4836, 12.2758, -48.4422, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( -72.7068, 12.457, -48.6812, 0.83 ) }
    dend_24 { pt3dadd( -73.829, 13.5554, -49.9072, 0.28 ) }
    dend_24 { pt3dadd( -74.3396, 14.055, -50.4803, 0.55 ) }
    dend_24 { pt3dadd( -75.1912, 14.8619, -51.4198, 0.28 ) }
    dend_24 { pt3dadd( -75.9085, 15.431, -52.1607, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 5/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.5407, 2.63463, -8.32687, 0.28 ) }
    dend_23 { pt3dadd( -18.9734, 1.12762, -8.11072, 0.28 ) }
    dend_23 { pt3dadd( -19.4348, 0.633702, -8.01615, 0.83 ) }
    dend_23 { pt3dadd( -20.7597, -0.949603, -7.88876, 0.28 ) }
    dend_23 { pt3dadd( -21.8699, -2.24908, -7.82236, 0.28 ) }
    dend_23 { pt3dadd( -22.3046, -2.73518, -7.81313, 0.55 ) }
    dend_23 { pt3dadd( -24.0742, -4.65582, -7.81531, 0.28 ) }
    dend_23 { pt3dadd( -25.1994, -5.86821, -7.82347, 1.11 ) }
    dend_23 { pt3dadd( -29.1743, -9.82874, -7.86568, 0.28 ) }
    dend_23 { pt3dadd( -30.0694, -10.6669, -7.88139, 0.55 ) }
    dend_23 { pt3dadd( -31.0478, -11.5476, -7.88693, 0.28 ) }
    dend_23 { pt3dadd( -32.3294, -12.622, -7.89343, 0.28 ) }
    dend_23 { pt3dadd( -33.1716, -13.2521, -7.89859, 0.55 ) }
    dend_23 { pt3dadd( -35.0137, -14.5473, -7.68624, 0.28 ) }
    dend_23 { pt3dadd( -35.515, -14.8824, -7.42185, 0.55 ) }
    dend_23 { pt3dadd( -37.0007, -15.9439, -6.24388, 0.28 ) }
    dend_23 { pt3dadd( -37.5621, -16.4067, -5.6367, 0.55 ) }
    dend_23 { pt3dadd( -38.3947, -17.1286, -4.60971, 0.28 ) }
    dend_23 { pt3dadd( -39.7632, -18.3345, -2.94834, 0.83 ) }
    dend_23 { pt3dadd( -42.8391, -21.2024, 0.77606, 0.28 ) }
    dend_23 { pt3dadd( -43.3409, -21.6784, 1.34326, 0.83 ) }
    dend_23 { pt3dadd( -45.1673, -23.5909, 3.28776, 0.28 ) }
    dend_23 { pt3dadd( -45.8584, -24.3592, 3.96046, 0.55 ) }
    dend_23 { pt3dadd( -48.1287, -27.0473, 5.92014, 0.28 ) }
    dend_23 { pt3dadd( -48.9931, -28.1421, 6.47972, 0.28 ) }
    dend_23 { pt3dadd( -49.712, -29.1006, 6.79859, 0.55 ) }
    dend_23 { pt3dadd( -50.8765, -30.7402, 7.29776, 0.28 ) }
    dend_23 { pt3dadd( -51.2361, -31.2654, 7.42859, 1.11 ) }
    dend_23 { pt3dadd( -53.2092, -34.6549, 8.29369, 0.28 ) }
    dend_23 { pt3dadd( -53.8569, -36.1087, 8.67111, 0.83 ) }
    dend_23 { pt3dadd( -59.4663, -43.7582, 13.4194, 0.83 ) }
    dend_23 { pt3dadd( -65.1431, -51.5863, 17.7445, 0.83 ) }
    dend_23 { pt3dadd( -69.5338, -60.5692, 20.9195, 0.83 ) }
    dend_23 { pt3dadd( -74.0149, -69.4858, 24.1754, 0.83 ) }
    dend_23 { pt3dadd( -80.1706, -77.9607, 25.2437, 0.83 ) }
    dend_23 { pt3dadd( -85.3112, -86.6656, 28.1361, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 41/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.07656, -21.925, -16.0307, 0.83 ) }
    dend_21 { pt3dadd( 5.4626, -22.6849, -16.5679, 0.83 ) }
    dend_21 { pt3dadd( 6.99002, -23.5186, -17.1149, 0.28 ) }
    dend_21 { pt3dadd( 7.72857, -23.9237, -17.3686, 1.11 ) }
    dend_21 { pt3dadd( 9.37549, -24.8827, -17.9313, 0.55 ) }
    dend_21 { pt3dadd( 10.4697, -25.5028, -18.2837, 0.55 ) }
    dend_21 { pt3dadd( 12.9492, -26.8503, -19.0514, 1.38 ) }
    dend_21 { pt3dadd( 14.0967, -27.4007, -19.4745, 0.28 ) }
    dend_21 { pt3dadd( 14.358, -27.522, -19.5848, 0.55 ) }
    dend_21 { pt3dadd( 15.0743, -27.8458, -19.986, 0.55 ) }
    dend_21 { pt3dadd( 16.4384, -28.4328, -20.8648, 0.55 ) }
    dend_21 { pt3dadd( 17.279, -28.7943, -21.5571, 1.38 ) }
    dend_21 { pt3dadd( 19.5552, -29.7758, -23.7054, 0.55 ) }
    dend_21 { pt3dadd( 20.2274, -30.081, -24.3468, 1.11 ) }
    dend_21 { pt3dadd( 22.3399, -31.0519, -26.3597, 0.28 ) }
    dend_21 { pt3dadd( 23.2023, -31.4522, -27.1811, 1.11 ) }
    dend_21 { pt3dadd( 24.6953, -32.2088, -28.6089, 0.55 ) }
    dend_21 { pt3dadd( 26.3073, -33.0394, -30.0353, 0.28 ) }
    dend_21 { pt3dadd( 27.0006, -33.3824, -30.5411, 1.11 ) }
    dend_21 { pt3dadd( 28.3237, -33.955, -31.3843, 0.28 ) }
    dend_21 { pt3dadd( 28.5073, -34.02, -31.4716, 0.55 ) }
    dend_21 { pt3dadd( 29.4109, -34.2911, -31.8346, 0.28 ) }
    dend_21 { pt3dadd( 30.015, -34.4324, -32.0033, 0.55 ) }
    dend_21 { pt3dadd( 31.0697, -34.6242, -32.2428, 0.28 ) }
    dend_21 { pt3dadd( 31.8984, -34.7851, -32.4211, 0.55 ) }
    dend_21 { pt3dadd( 32.9305, -34.9842, -32.6013, 0.28 ) }
    dend_21 { pt3dadd( 33.6307, -35.1269, -32.7542, 0.28 ) }
    dend_21 { pt3dadd( 33.9687, -35.1945, -32.8366, 0.55 ) }
    dend_21 { pt3dadd( 35.4448, -35.5543, -33.2726, 0.28 ) }
    dend_21 { pt3dadd( 35.9677, -35.6994, -33.4487, 0.55 ) }
    dend_21 { pt3dadd( 37.1355, -36.1389, -34.0113, 0.55 ) }
    dend_21 { pt3dadd( 38.0614, -36.5419, -34.5696, 0.28 ) }
    dend_21 { pt3dadd( 38.3079, -36.6539, -34.7807, 0.55 ) }
    dend_21 { pt3dadd( 39.2387, -37.0739, -35.6331, 0.28 ) }
    dend_21 { pt3dadd( 39.3993, -37.1427, -35.783, 0.55 ) }
    dend_21 { pt3dadd( 41.2685, -37.8951, -37.5107, 0.28 ) }
    dend_21 { pt3dadd( 41.6471, -38.0452, -37.8491, 0.83 ) }
    dend_21 { pt3dadd( 43.7393, -38.7346, -39.5024, 0.28 ) }
    dend_21 { pt3dadd( 45.2058, -39.1474, -40.5585, 0.28 ) }
    dend_21 { pt3dadd( 45.9692, -39.3195, -41.0219, 0.55 ) }
    dend_21 { pt3dadd( 48.1563, -39.7248, -42.1333, 0.28 ) }
    dend_21 { pt3dadd( 49.0117, -39.8288, -42.4304, 0.83 ) }
    dend_21 { pt3dadd( 50.502, -39.9882, -42.789, 0.28 ) }
    dend_21 { pt3dadd( 50.9275, -40.039, -42.8429, 0.28 ) }
    dend_21 { pt3dadd( 52.7791, -40.2409, -43.0, 0.28 ) }
    dend_21 { pt3dadd( 53.077, -40.275, -43.0114, 0.83 ) }
    dend_21 { pt3dadd( 55.0625, -40.5048, -42.9629, 0.28 ) }
    dend_21 { pt3dadd( 56.589, -40.6987, -42.9261, 0.55 ) }
    dend_21 { pt3dadd( 57.9517, -40.9064, -42.8857, 0.55 ) }
    dend_21 { pt3dadd( 59.2745, -41.1138, -42.8394, 0.28 ) }
    dend_21 { pt3dadd( 59.7457, -41.1878, -42.8187, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 92/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 4.07656, -21.925, -16.0307, 0.28 ) }
    dend_20 { pt3dadd( 2.97977, -24.21, -16.8292, 0.28 ) }
    dend_20 { pt3dadd( 2.70043, -24.792, -17.0326, 0.55 ) }
    dend_20 { pt3dadd( 2.08063, -26.0832, -17.4838, 0.28 ) }
    dend_20 { pt3dadd( 1.69389, -26.8889, -17.7654, 0.83 ) }
    dend_20 { pt3dadd( 0.0746416, -30.2624, -18.9443, 0.28 ) }
    dend_20 { pt3dadd( -0.197156, -30.8286, -19.1422, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 99/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.957927, -11.9389, 4.33633, 2.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_6 { pt3dadd( -0.996317, -16.2966, 5.60881, 2.22 ) }
    dend_6 { pt3dadd( -1.0372, -20.9378, 6.96407, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.957927, -11.9389, 4.33633, 0.55 ) }
    dend_1 { pt3dadd( -4.63069, -11.5824, 4.10769, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.73394, -39.2493, 1.42578, 1.11 ) }
    axon_1 { pt3dadd( 7.83859, -54.1009, 1.42578, 1.11 ) }
    axon_1 { pt3dadd( 9.94324, -68.9525, 1.42578, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -14.3358, 49.4845, -42.8468, 0.28 ) }
    dend_37 { pt3dadd( -16.4427, 51.9747, -42.4587, 0.28 ) }
    dend_37 { pt3dadd( -17.4616, 53.3208, -42.5407, 1.11 ) }
    dend_37 { pt3dadd( -18.4469, 54.6985, -42.6529, 0.28 ) }
    dend_37 { pt3dadd( -19.3881, 56.085, -42.8408, 0.55 ) }
    dend_37 { pt3dadd( -20.3735, 57.6385, -43.0678, 0.28 ) }
    dend_37 { pt3dadd( -21.5028, 59.5559, -43.3489, 1.38 ) }
    dend_37 { pt3dadd( -23.9792, 64.1216, -44.1189, 0.28 ) }
    dend_37 { pt3dadd( -24.5992, 65.4135, -44.3908, 0.55 ) }
    dend_37 { pt3dadd( -25.735, 68.063, -45.0111, 0.28 ) }
    dend_37 { pt3dadd( -26.3698, 69.8145, -45.5485, 0.83 ) }
    dend_37 { pt3dadd( -27.4694, 73.1646, -46.7154, 0.28 ) }
    dend_37 { pt3dadd( -27.6999, 73.9132, -46.971, 0.55 ) }
    dend_37 { pt3dadd( -29.3018, 79.2113, -48.773, 0.28 ) }
    dend_37 { pt3dadd( -29.6301, 80.2645, -49.1588, 0.55 ) }
    dend_37 { pt3dadd( -31.1743, 85.1274, -50.9392, 0.28 ) }
    dend_37 { pt3dadd( -31.7171, 86.8004, -51.6044, 0.55 ) }
    dend_37 { pt3dadd( -32.2473, 88.436, -52.2949, 0.28 ) }
    dend_37 { pt3dadd( -32.4291, 88.9838, -52.5239, 1.11 ) }
    dend_37 { pt3dadd( -33.9602, 92.7923, -53.9503, 0.28 ) }
    dend_37 { pt3dadd( -34.4145, 93.8514, -54.3047, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.3358, 49.4845, -42.8468, 0.55 ) }
    dend_36 { pt3dadd( -12.4206, 49.0389, -43.413, 0.55 ) }
    dend_36 { pt3dadd( -10.8112, 48.6644, -43.8887, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 31/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 43.2577, 0.891242, -25.1916, 0.28 ) }
    dend_33 { pt3dadd( 45.2319, 0.625412, -28.3404, 0.28 ) }
    dend_33 { pt3dadd( 46.9125, 0.476332, -31.0112, 0.83 ) }
    dend_33 { pt3dadd( 49.4383, 0.341473, -34.8015, 0.28 ) }
    dend_33 { pt3dadd( 50.0898, 0.310348, -35.704, 0.83 ) }
    dend_33 { pt3dadd( 52.0295, 0.256115, -38.1806, 0.28 ) }
    dend_33 { pt3dadd( 52.5404, 0.254615, -38.7923, 0.55 ) }
    dend_33 { pt3dadd( 53.3516, 0.33064, -39.5895, 0.28 ) }
    dend_33 { pt3dadd( 54.3967, 0.540302, -40.4168, 0.28 ) }
    dend_33 { pt3dadd( 55.5858, 0.831632, -41.0829, 0.83 ) }
    dend_33 { pt3dadd( 56.5261, 1.0791, -41.5977, 0.83 ) }
    dend_33 { pt3dadd( 58.1816, 1.5168, -42.441, 0.28 ) }
    dend_33 { pt3dadd( 59.5109, 1.90953, -43.175, 0.83 ) }
    dend_33 { pt3dadd( 61.4365, 2.54648, -44.253, 0.28 ) }
    dend_33 { pt3dadd( 61.4365, 2.54648, -44.253, 0.55 ) }
    dend_33 { pt3dadd( 63.2873, 3.28616, -45.3173, 0.28 ) }
    dend_33 { pt3dadd( 63.8622, 3.49846, -45.637, 0.55 ) }
    dend_33 { pt3dadd( 65.3197, 4.06366, -46.617, 0.28 ) }
    dend_33 { pt3dadd( 66.3466, 4.48823, -47.5049, 1.11 ) }
    dend_33 { pt3dadd( 67.7857, 5.10141, -49.2178, 0.28 ) }
    dend_33 { pt3dadd( 68.7105, 5.51331, -50.4692, 0.55 ) }
    dend_33 { pt3dadd( 69.5022, 5.90113, -51.6526, 0.28 ) }
    dend_33 { pt3dadd( 71.7011, 7.09846, -55.233, 0.55 ) }
    dend_33 { pt3dadd( 72.8092, 7.77009, -57.1892, 1.11 ) }
    dend_33 { pt3dadd( 74.9508, 9.22628, -61.2088, 0.28 ) }
    dend_33 { pt3dadd( 75.359, 9.56738, -62.0306, 0.55 ) }
    dend_33 { pt3dadd( 75.9471, 10.1721, -63.2434, 0.28 ) }
    dend_33 { pt3dadd( 76.3092, 10.6306, -63.9617, 0.55 ) }
    dend_33 { pt3dadd( 77.0562, 11.682, -65.2235, 0.28 ) }
    dend_33 { pt3dadd( 77.3759, 12.2581, -65.8216, 1.38 ) }
    dend_33 { pt3dadd( 78.4519, 14.6578, -68.0241, 0.28 ) }
    dend_33 { pt3dadd( 78.7004, 15.3175, -68.6925, 0.83 ) }
    dend_33 { pt3dadd( 79.2782, 17.0701, -70.6001, 0.28 ) }
    dend_33 { pt3dadd( 79.4016, 17.5016, -71.1009, 0.55 ) }
    dend_33 { pt3dadd( 79.7781, 19.0186, -72.8941, 0.28 ) }
    dend_33 { pt3dadd( 79.8662, 19.4027, -73.3557, 0.55 ) }
    dend_33 { pt3dadd( 80.2407, 21.1138, -75.3253, 0.28 ) }
    dend_33 { pt3dadd( 80.352, 21.5575, -75.8089, 0.55 ) }
    dend_33 { pt3dadd( 80.7412, 23.0684, -77.3245, 0.28 ) }
    dend_33 { pt3dadd( 80.889, 23.5471, -77.7381, 0.83 ) }
    dend_33 { pt3dadd( 81.3509, 24.8354, -78.6631, 0.28 ) }
    dend_33 { pt3dadd( 81.6513, 25.5679, -79.0904, 0.55 ) }
    dend_33 { pt3dadd( 82.7533, 27.7775, -80.0012, 0.28 ) }
    dend_33 { pt3dadd( 83.0898, 28.3463, -80.1504, 0.83 ) }
    dend_33 { pt3dadd( 84.3862, 30.2776, -80.4136, 0.28 ) }
    dend_33 { pt3dadd( 84.58, 30.5232, -80.429, 0.55 ) }
    dend_33 { pt3dadd( 85.8946, 31.9938, -80.4109, 0.28 ) }
    dend_33 { pt3dadd( 86.727, 32.8861, -80.3533, 0.55 ) }
    dend_33 { pt3dadd( 88.5961, 34.811, -80.0608, 0.28 ) }
    dend_33 { pt3dadd( 88.7485, 34.9625, -80.0373, 0.55 ) }
    dend_33 { pt3dadd( 90.9138, 37.0986, -79.8006, 0.28 ) }
    dend_33 { pt3dadd( 91.0644, 37.2422, -79.7851, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 83/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 43.2577, 0.891242, -25.1916, 0.83 ) }
    dend_30 { pt3dadd( 45.0804, 1.31529, -26.2489, 0.83 ) }
    dend_30 { pt3dadd( 45.9656, 1.51855, -26.7681, 0.55 ) }
    dend_30 { pt3dadd( 46.612, 1.62088, -27.1313, 0.55 ) }
    dend_30 { pt3dadd( 48.1251, 1.81024, -27.9658, 1.11 ) }
    dend_30 { pt3dadd( 50.9976, 2.0423, -29.698, 0.28 ) }
    dend_30 { pt3dadd( 51.4254, 2.06902, -29.9544, 1.11 ) }
    dend_30 { pt3dadd( 53.2954, 2.11782, -31.1404, 0.28 ) }
    dend_30 { pt3dadd( 54.6383, 2.14108, -31.9613, 0.28 ) }
    dend_30 { pt3dadd( 55.6718, 2.16304, -32.5667, 0.83 ) }
    dend_30 { pt3dadd( 57.7916, 2.24645, -33.7882, 0.28 ) }
    dend_30 { pt3dadd( 59.1896, 2.27629, -34.4857, 0.28 ) }
    dend_30 { pt3dadd( 59.9354, 2.30591, -34.8688, 1.11 ) }
    dend_30 { pt3dadd( 61.7487, 2.44277, -35.822, 0.28 ) }
    dend_30 { pt3dadd( 62.3504, 2.54237, -36.1375, 0.55 ) }
    dend_30 { pt3dadd( 64.8168, 3.04768, -37.282, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 99/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -75.9085, 15.431, -52.1607, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -76.7604, 16.2694, -52.5594, 0.28 ) }
    dend_26 { pt3dadd( -76.9789, 16.4643, -52.7085, 0.55 ) }
    dend_26 { pt3dadd( -77.6094, 16.984, -53.1571, 0.28 ) }
    dend_26 { pt3dadd( -78.2802, 17.5159, -53.6933, 0.55 ) }
    dend_26 { pt3dadd( -79.026, 18.1169, -54.2899, 0.28 ) }
    dend_26 { pt3dadd( -79.1857, 18.2458, -54.4174, 0.55 ) }
    dend_26 { pt3dadd( -80.2669, 19.096, -55.3215, 0.28 ) }
    dend_26 { pt3dadd( -80.5729, 19.3378, -55.5919, 0.83 ) }
    dend_26 { pt3dadd( -81.3555, 19.9627, -56.3869, 0.28 ) }
    dend_26 { pt3dadd( -81.8512, 20.3824, -56.9467, 0.83 ) }
    dend_26 { pt3dadd( -82.7382, 21.2216, -58.0012, 0.28 ) }
    dend_26 { pt3dadd( -82.8137, 21.303, -58.0917, 0.83 ) }
    dend_26 { pt3dadd( -83.4946, 22.1478, -58.926, 0.28 ) }
    dend_26 { pt3dadd( -84.2377, 23.1892, -59.9788, 0.83 ) }
    dend_26 { pt3dadd( -84.6643, 23.872, -60.6578, 0.28 ) }
    dend_26 { pt3dadd( -84.8144, 24.1631, -60.9755, 0.55 ) }
    dend_26 { pt3dadd( -85.0146, 24.6575, -61.5349, 0.28 ) }
    dend_26 { pt3dadd( -85.1214, 24.9894, -61.8828, 0.55 ) }
    dend_26 { pt3dadd( -85.3249, 25.8943, -62.7074, 0.28 ) }
    dend_26 { pt3dadd( -85.3663, 26.1352, -62.8618, 0.83 ) }
    dend_26 { pt3dadd( -85.5707, 27.382, -63.575, 0.28 ) }
    dend_26 { pt3dadd( -85.6146, 27.6896, -63.7329, 0.55 ) }
    dend_26 { pt3dadd( -85.7563, 28.7165, -64.2076, 0.28 ) }
    dend_26 { pt3dadd( -85.803, 29.1097, -64.3521, 0.83 ) }
    dend_26 { pt3dadd( -86.1235, 32.0132, -65.271, 0.28 ) }
    dend_26 { pt3dadd( -86.1899, 32.7529, -65.4719, 0.55 ) }
    dend_26 { pt3dadd( -86.4523, 36.3536, -66.3212, 0.28 ) }
    dend_26 { pt3dadd( -86.4846, 36.7867, -66.4201, 0.83 ) }
    dend_26 { pt3dadd( -86.8509, 41.557, -67.5157, 0.28 ) }
    dend_26 { pt3dadd( -86.9029, 42.2608, -67.6708, 0.83 ) }
    dend_26 { pt3dadd( -87.0217, 44.1308, -68.0462, 0.28 ) }
    dend_26 { pt3dadd( -87.2455, 47.5418, -68.6884, 0.28 ) }
    dend_26 { pt3dadd( -87.3283, 48.7328, -68.8946, 0.28 ) }
    dend_26 { pt3dadd( -87.3631, 49.1744, -68.9797, 0.83 ) }
    dend_26 { pt3dadd( -87.459, 50.0292, -69.1584, 0.28 ) }
    dend_26 { pt3dadd( -87.589, 50.9993, -69.3927, 0.55 ) }
    dend_26 { pt3dadd( -87.7207, 51.786, -69.6388, 0.28 ) }
    dend_26 { pt3dadd( -87.7965, 52.2019, -69.7795, 0.55 ) }
    dend_26 { pt3dadd( -87.9386, 52.9425, -70.0374, 0.28 ) }
    dend_26 { pt3dadd( -88.0357, 53.3389, -70.153, 0.55 ) }
    dend_26 { pt3dadd( -88.6827, 55.5015, -70.692, 0.28 ) }
    dend_26 { pt3dadd( -89.3647, 57.336, -71.0813, 0.28 ) }
    dend_26 { pt3dadd( -89.6733, 58.0731, -71.2145, 0.28 ) }
    dend_26 { pt3dadd( -89.8925, 58.5396, -71.2947, 1.11 ) }
    dend_26 { pt3dadd( -90.8158, 60.316, -71.5826, 0.28 ) }
    dend_26 { pt3dadd( -91.07, 60.7632, -71.6428, 0.55 ) }
    dend_26 { pt3dadd( -92.2963, 62.6626, -71.8419, 0.28 ) }
    dend_26 { pt3dadd( -92.3808, 62.7874, -71.8549, 0.55 ) }
    dend_26 { pt3dadd( -93.2544, 64.1764, -72.0525, 0.28 ) }
    dend_26 { pt3dadd( -93.359, 64.3517, -72.0848, 0.83 ) }
    dend_26 { pt3dadd( -94.5148, 66.2944, -72.5283, 0.28 ) }
    dend_26 { pt3dadd( -94.8158, 66.8151, -72.6414, 0.55 ) }
    dend_26 { pt3dadd( -95.6192, 68.2204, -72.9291, 0.28 ) }
    dend_26 { pt3dadd( -96.3167, 69.4594, -73.1923, 0.28 ) }
    dend_26 { pt3dadd( -97.2622, 71.109, -73.5481, 0.28 ) }
    dend_26 { pt3dadd( -97.4974, 71.5028, -73.635, 0.83 ) }
    dend_26 { pt3dadd( -98.2859, 72.7389, -73.9183, 0.28 ) }
    dend_26 { pt3dadd( -98.4686, 73.0125, -73.9648, 0.55 ) }
    dend_26 { pt3dadd( -99.8169, 74.923, -74.1668, 0.28 ) }
    dend_26 { pt3dadd( -100.179, 75.4, -74.1907, 0.55 ) }
    dend_26 { pt3dadd( -100.696, 76.0776, -74.1922, 0.28 ) }
    dend_26 { pt3dadd( -100.894, 76.3435, -74.1777, 0.55 ) }
    dend_26 { pt3dadd( -101.919, 77.6877, -74.0121, 0.28 ) }
    dend_26 { pt3dadd( -102.212, 78.1247, -73.9507, 0.55 ) }
    dend_26 { pt3dadd( -102.551, 78.6743, -73.8614, 0.28 ) }
    dend_26 { pt3dadd( -102.763, 79.0723, -73.8119, 0.55 ) }
    dend_26 { pt3dadd( -103.415, 80.4363, -73.6984, 0.28 ) }
    dend_26 { pt3dadd( -103.465, 80.5616, -73.6989, 0.55 ) }
    dend_26 { pt3dadd( -104.264, 82.8193, -73.8905, 0.28 ) }
    dend_26 { pt3dadd( -104.412, 83.3146, -73.9359, 0.55 ) }
    dend_26 { pt3dadd( -104.607, 84.0608, -73.9976, 0.28 ) }
    dend_26 { pt3dadd( -104.723, 84.5673, -74.0331, 0.55 ) }
    dend_26 { pt3dadd( -105.198, 87.3528, -74.2684, 0.28 ) }
    dend_26 { pt3dadd( -105.265, 87.833, -74.301, 0.55 ) }
    dend_26 { pt3dadd( -105.423, 89.266, -74.3877, 0.28 ) }
    dend_26 { pt3dadd( -105.484, 89.9136, -74.4226, 0.83 ) }
    dend_26 { pt3dadd( -105.627, 91.5957, -74.4975, 0.28 ) }
    dend_26 { pt3dadd( -105.794, 94.1511, -74.5451, 0.28 ) }
    dend_26 { pt3dadd( -105.808, 94.5184, -74.5306, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -75.9085, 15.431, -52.1607, 0.28 ) }
    dend_25 { pt3dadd( -77.4648, 16.185, -52.028, 0.28 ) }
    dend_25 { pt3dadd( -78.1366, 16.5104, -51.9707, 0.55 ) }
    dend_25 { pt3dadd( -80.0339, 17.4296, -51.809, 0.28 ) }
    dend_25 { pt3dadd( -80.6265, 17.7167, -51.7585, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.0372, -20.9378, 6.96407, 1.66 ) }
    dend_10 { pt3dadd( -2.87165, -24.6081, 6.90771, 1.66 ) }
    dend_10 { pt3dadd( -4.95727, -28.7809, 6.84362, 1.66 ) }
    dend_10 { pt3dadd( -6.99822, -32.8643, 6.78091, 1.66 ) }
    dend_10 { pt3dadd( -8.98209, -36.8335, 6.71995, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 89/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -1.0372, -20.9378, 6.96407, 0.83 ) }
    dend_7 { pt3dadd( 4.46078, -23.7176, 9.21671, 0.83 ) }
    dend_7 { pt3dadd( 6.71704, -25.142, 10.3648, 0.55 ) }
    dend_7 { pt3dadd( 9.00307, -26.758, 11.8483, 1.11 ) }
    dend_7 { pt3dadd( 10.8234, -28.2711, 13.2495, 0.55 ) }
    dend_7 { pt3dadd( 12.4575, -29.6293, 14.5074, 0.55 ) }
    dend_7 { pt3dadd( 15.7505, -32.3665, 17.0422, 0.28 ) }
    dend_7 { pt3dadd( 17.0461, -33.8349, 18.3354, 0.83 ) }
    dend_7 { pt3dadd( 19.3483, -36.3137, 20.7231, 0.83 ) }
    dend_7 { pt3dadd( 20.8821, -38.1903, 22.6377, 0.55 ) }
    dend_7 { pt3dadd( 29.915, -44.0404, 27.0014, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 37.4706, -50.7561, 32.6167, 0.55 ) }
    dend_7 { pt3dadd( 43.9808, -59.2401, 36.6965, 0.55 ) }
    dend_7 { pt3dadd( 49.6189, -67.3754, 42.4804, 0.55 ) }
    dend_7 { pt3dadd( 54.7584, -75.2498, 49.0627, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.63069, -11.5824, 4.10769, 0.83 ) }
    dend_5 { pt3dadd( -4.88474, -11.5723, 4.15757, 0.83 ) }
    dend_5 { pt3dadd( -7.51084, -11.3975, 4.75411, 0.83 ) }
    dend_5 { pt3dadd( -10.1142, -11.2122, 5.36797, 0.83 ) }
    dend_5 { pt3dadd( -12.1125, -10.9967, 5.84962, 0.83 ) }
    dend_5 { pt3dadd( -12.8987, -10.8968, 6.0388, 0.83 ) }
    dend_5 { pt3dadd( -14.0378, -10.7261, 6.3187, 1.11 ) }
    dend_5 { pt3dadd( -16.4382, -10.3479, 6.83852, 0.83 ) }
    dend_5 { pt3dadd( -17.8789, -10.0468, 7.10147, 0.83 ) }
    dend_5 { pt3dadd( -19.387, -9.62269, 7.2108, 0.55 ) }
    dend_5 { pt3dadd( -20.2681, -9.34653, 7.13078, 0.55 ) }
    dend_5 { pt3dadd( -21.1698, -9.04628, 6.94629, 0.55 ) }
    dend_5 { pt3dadd( -23.1564, -8.44388, 6.2873, 0.55 ) }
    dend_5 { pt3dadd( -24.3745, -8.16786, 5.76868, 0.55 ) }
    dend_5 { pt3dadd( -26.2486, -7.78515, 4.83097, 0.55 ) }
    dend_5 { pt3dadd( -28.8082, -7.36319, 3.51013, 0.55 ) }
    dend_5 { pt3dadd( -29.862, -7.21354, 2.98976, 0.55 ) }
    dend_5 { pt3dadd( -31.3391, -7.04797, 2.2583, 0.28 ) }
    dend_5 { pt3dadd( -32.8628, -6.92691, 1.53714, 0.55 ) }
    dend_5 { pt3dadd( -34.1814, -6.87768, 0.950574, 0.28 ) }
    dend_5 { pt3dadd( -35.9266, -6.81181, 0.284554, 0.83 ) }
    dend_5 { pt3dadd( -37.0181, -6.79328, -0.0544751, 0.28 ) }
    dend_5 { pt3dadd( -38.9747, -6.80777, -0.567966, 0.55 ) }
    dend_5 { pt3dadd( -40.5817, -6.80383, -0.904522, 0.55 ) }
    dend_5 { pt3dadd( -42.0786, -6.84302, -1.15958, 0.55 ) }
    dend_5 { pt3dadd( -43.212, -6.9343, -1.29937, 0.83 ) }
    dend_5 { pt3dadd( -45.5265, -7.19046, -1.55414, 0.55 ) }
    dend_5 { pt3dadd( -46.8132, -7.34119, -1.63461, 0.28 ) }
    dend_5 { pt3dadd( -47.2227, -7.38989, -1.64469, 0.83 ) }
    dend_5 { pt3dadd( -48.6985, -7.57363, -1.68902, 0.83 ) }
    dend_5 { pt3dadd( -49.8401, -7.74045, -1.77044, 0.55 ) }
    dend_5 { pt3dadd( -51.0019, -7.91694, -1.91642, 0.28 ) }
    dend_5 { pt3dadd( -53.3512, -8.28166, -2.2272, 0.55 ) }
    dend_5 { pt3dadd( -54.8787, -8.554, -2.41103, 0.28 ) }
    dend_5 { pt3dadd( -55.5319, -8.68194, -2.46912, 0.55 ) }
    dend_5 { pt3dadd( -56.8264, -8.93998, -2.52537, 0.28 ) }
    dend_5 { pt3dadd( -57.2097, -9.02049, -2.51356, 0.83 ) }
    dend_5 { pt3dadd( -58.8161, -9.43419, -2.3857, 0.28 ) }
    dend_5 { pt3dadd( -59.2084, -9.55192, -2.41751, 0.55 ) }
    dend_5 { pt3dadd( -61.1989, -10.2248, -2.65378, 0.28 ) }
    dend_5 { pt3dadd( -61.998, -10.5102, -2.82428, 0.55 ) }
    dend_5 { pt3dadd( -62.9039, -10.8339, -3.04056, 0.28 ) }
    dend_5 { pt3dadd( -63.8869, -11.1696, -3.30189, 0.55 ) }
    dend_5 { pt3dadd( -67.8936, -12.3388, -4.65572, 0.28 ) }
    dend_5 { pt3dadd( -69.6315, -12.7486, -5.22478, 0.55 ) }
    dend_5 { pt3dadd( -71.82, -13.2002, -5.91897, 0.28 ) }
    dend_5 { pt3dadd( -72.819, -13.3708, -6.24161, 0.55 ) }
    dend_5 { pt3dadd( -74.8862, -13.6697, -6.85349, 0.28 ) }
    dend_5 { pt3dadd( -76.4391, -13.8081, -7.16091, 0.55 ) }
    dend_5 { pt3dadd( -78.1601, -13.844, -7.279, 0.28 ) }
    dend_5 { pt3dadd( -78.7866, -13.7836, -7.35538, 0.55 ) }
    dend_5 { pt3dadd( -80.4185, -13.4356, -7.51767, 0.28 ) }
    dend_5 { pt3dadd( -80.8329, -13.2759, -7.6608, 0.55 ) }
    dend_5 { pt3dadd( -81.6906, -12.7388, -8.1332, 0.28 ) }
    dend_5 { pt3dadd( -81.9979, -12.4972, -8.27757, 0.83 ) }
    dend_5 { pt3dadd( -83.4171, -11.0763, -8.87128, 0.28 ) }
    dend_5 { pt3dadd( -83.9302, -10.4565, -8.97769, 0.83 ) }
    dend_5 { pt3dadd( -86.3646, -6.83139, -8.72797, 0.28 ) }
    dend_5 { pt3dadd( -86.5201, -6.54515, -8.66957, 0.83 ) }
    dend_5 { pt3dadd( -88.1776, -2.73033, -7.27961, 0.28 ) }
    dend_5 { pt3dadd( -88.3405, -2.28306, -7.00916, 1.11 ) }
    dend_5 { pt3dadd( -88.4864, -1.72083, -6.31202, 0.28 ) }
    dend_5 { pt3dadd( -88.5371, -1.43802, -5.8329, 0.55 ) }
    dend_5 { pt3dadd( -88.5842, -1.0897, -5.07122, 0.28 ) }
    dend_5 { pt3dadd( -88.6175, -0.849257, -4.6183, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.63069, -11.5824, 4.10769, 0.55 ) }
    dend_2 { pt3dadd( -6.35471, -11.7322, 4.38589, 0.55 ) }
    dend_2 { pt3dadd( -8.65841, -12.087, 4.84687, 0.55 ) }
    dend_2 { pt3dadd( -12.2585, -12.6828, 5.50977, 0.55 ) }
    dend_2 { pt3dadd( -14.5425, -13.0274, 5.88555, 0.55 ) }
    dend_2 { pt3dadd( -15.6909, -13.2006, 6.07447, 0.83 ) }
    dend_2 { pt3dadd( -18.1982, -13.5789, 6.48698, 0.83 ) }
    dend_2 { pt3dadd( -20.5613, -13.9143, 6.89809, 0.83 ) }
    dend_2 { pt3dadd( -22.064, -14.2526, 7.18319, 0.55 ) }
    dend_2 { pt3dadd( -24.1892, -14.8069, 7.609, 0.55 ) }
    dend_2 { pt3dadd( -33.5916, -16.8616, 10.3371, 0.55 ) }
    dend_2 { pt3dadd( -43.3018, -18.9941, 11.4265, 0.55 ) }
    dend_2 { pt3dadd( -53.0382, -19.9604, 13.5957, 0.55 ) }
    dend_2 { pt3dadd( -62.8832, -20.5036, 15.4099, 0.55 ) }
    dend_2 { pt3dadd( -72.4049, -21.1958, 18.4674, 0.55 ) }
    dend_2 { pt3dadd( -81.3557, -22.7861, 22.6649, 0.55 ) }
    dend_2 { pt3dadd( -90.1313, -22.7626, 27.5167, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 64.8168, 3.04768, -37.282, 0.55 ) }
    dend_32 { pt3dadd( 66.1232, 3.44676, -37.0996, 0.55 ) }
    dend_32 { pt3dadd( 67.1321, 3.78984, -36.9671, 0.55 ) }
    dend_32 { pt3dadd( 68.6027, 4.30579, -36.7538, 0.28 ) }
    dend_32 { pt3dadd( 69.5908, 4.65786, -36.6064, 0.28 ) }
    dend_32 { pt3dadd( 70.0376, 4.81499, -36.5362, 0.55 ) }
    dend_32 { pt3dadd( 71.8637, 5.44669, -36.2463, 0.28 ) }
    dend_32 { pt3dadd( 72.8434, 5.79979, -36.0534, 0.83 ) }
    dend_32 { pt3dadd( 73.9383, 6.21811, -35.7991, 0.28 ) }
    dend_32 { pt3dadd( 74.3715, 6.36613, -35.6477, 0.55 ) }
    dend_32 { pt3dadd( 75.1872, 6.58661, -35.3025, 0.28 ) }
    dend_32 { pt3dadd( 75.769, 6.73736, -35.0312, 0.55 ) }
    dend_32 { pt3dadd( 77.4479, 7.14242, -34.1282, 0.28 ) }
    dend_32 { pt3dadd( 78.3513, 7.32161, -33.6038, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 80.6579, 7.73684, -32.1595, 0.28 ) }
    dend_32 { pt3dadd( 81.5469, 7.87878, -31.5614, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 64.8168, 3.04768, -37.282, 0.55 ) }
    dend_31 { pt3dadd( 65.1125, 1.47933, -37.7838, 0.55 ) }
    dend_31 { pt3dadd( 65.7189, -1.15032, -38.5284, 0.55 ) }
    dend_31 { pt3dadd( 65.9937, -2.27893, -38.4808, 0.83 ) }
    dend_31 { pt3dadd( 66.2148, -3.13122, -38.349, 0.28 ) }
    dend_31 { pt3dadd( 66.3526, -3.66626, -38.2477, 0.55 ) }
    dend_31 { pt3dadd( 66.8497, -5.70873, -37.8397, 0.28 ) }
    dend_31 { pt3dadd( 67.0971, -6.6668, -37.5947, 0.83 ) }
    dend_31 { pt3dadd( 68.3916, -11.7235, -36.0138, 0.28 ) }
    dend_31 { pt3dadd( 68.5966, -12.4671, -35.7791, 0.55 ) }
    dend_31 { pt3dadd( 68.9011, -13.5618, -35.4589, 0.28 ) }
    dend_31 { pt3dadd( 69.0465, -14.1523, -35.3039, 0.55 ) }
    dend_31 { pt3dadd( 69.3901, -15.903, -34.9669, 0.28 ) }
    dend_31 { pt3dadd( 69.4277, -16.1882, -34.9486, 0.55 ) }
    dend_31 { pt3dadd( 69.503, -16.9707, -35.0753, 0.28 ) }
    dend_31 { pt3dadd( 69.6064, -17.8118, -35.1051, 0.55 ) }
    dend_31 { pt3dadd( 69.9449, -20.0569, -35.0456, 0.28 ) }
    dend_31 { pt3dadd( 70.0389, -20.6796, -35.0158, 0.83 ) }
    dend_31 { pt3dadd( 70.3614, -23.0301, -34.8423, 0.28 ) }
    dend_31 { pt3dadd( 70.7715, -26.0286, -34.6024, 0.83 ) }
    dend_31 { pt3dadd( 71.4254, -30.481, -34.1942, 0.28 ) }
    dend_31 { pt3dadd( 71.496, -30.8678, -34.1566, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.98209, -36.8335, 6.71995, 1.11 ) }
    dend_16 { pt3dadd( -9.68197, -39.4432, 6.57193, 1.11 ) }
    dend_16 { pt3dadd( -10.0283, -40.976, 6.49307, 1.11 ) }
    dend_16 { pt3dadd( -10.9267, -43.8554, 6.53031, 1.11 ) }
    dend_16 { pt3dadd( -12.0575, -47.0862, 6.64185, 1.11 ) }
    dend_16 { pt3dadd( -13.0445, -49.9267, 6.79708, 1.11 ) }
    dend_16 { pt3dadd( -14.0636, -52.8217, 6.99882, 1.11 ) }
    dend_16 { pt3dadd( -16.1837, -58.4223, 7.64325, 1.11 ) }
    dend_16 { pt3dadd( -18.4711, -64.1529, 8.41819, 1.11 ) }
    dend_16 { pt3dadd( -19.9316, -67.6856, 8.94916, 1.11 ) }
    dend_16 { pt3dadd( -21.2432, -70.8213, 9.4519, 1.11 ) }
    dend_16 { pt3dadd( -22.1964, -73.0906, 9.82773, 1.11 ) }
    dend_16 { pt3dadd( -23.1408, -75.4646, 10.2137, 1.11 ) }
    dend_16 { pt3dadd( -24.4665, -79.0295, 10.7202, 1.11 ) }
    dend_16 { pt3dadd( -25.4652, -82.3671, 11.0104, 1.11 ) }
    dend_16 { pt3dadd( -26.5947, -86.4055, 11.2434, 1.11 ) }
    dend_16 { pt3dadd( -27.2344, -88.8744, 11.1936, 1.11 ) }
    dend_16 { pt3dadd( -27.9571, -92.1729, 10.927, 1.11 ) }
    dend_16 { pt3dadd( -28.3188, -94.5665, 10.5809, 1.11 ) }
    dend_16 { pt3dadd( -28.5691, -96.9711, 10.1056, 1.11 ) }
    dend_16 { pt3dadd( -28.7769, -99.758, 9.4633, 1.11 ) }
    dend_16 { pt3dadd( -28.9905, -103.674, 8.4297, 1.11 ) }
    dend_16 { pt3dadd( -29.2373, -110.432, 6.55401, 1.11 ) }
    dend_16 { pt3dadd( -29.2044, -114.861, 5.23115, 1.11 ) }
    dend_16 { pt3dadd( -29.2004, -118.071, 4.35415, 0.83 ) }
    dend_16 { pt3dadd( -29.1757, -120.267, 3.80307, 0.83 ) }
    dend_16 { pt3dadd( -29.1067, -124.452, 2.91363, 0.83 ) }
    dend_16 { pt3dadd( -28.9242, -129.157, 2.11936, 0.83 ) }
    dend_16 { pt3dadd( -28.796, -133.006, 1.57814, 0.83 ) }
    dend_16 { pt3dadd( -28.7611, -138.574, 1.02632, 0.83 ) }
    dend_16 { pt3dadd( -28.7298, -142.834, 0.713535, 0.83 ) }
    dend_16 { pt3dadd( -28.6319, -146.805, 0.651938, 0.83 ) }
    dend_16 { pt3dadd( -28.1057, -153.123, 1.25778, 0.83 ) }
    dend_16 { pt3dadd( -27.8399, -155.603, 1.58305, 0.83 ) }
    dend_16 { pt3dadd( -27.6062, -157.566, 1.93342, 0.83 ) }
    dend_16 { pt3dadd( -27.2239, -159.526, 2.35524, 0.83 ) }
    dend_16 { pt3dadd( -25.9894, -165.508, 4.13248, 0.83 ) }
    dend_16 { pt3dadd( -24.2652, -171.311, 6.46833, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -8.98209, -36.8335, 6.71995, 0.83 ) }
    dend_11 { pt3dadd( -6.71365, -38.1408, 7.21252, 0.83 ) }
    dend_11 { pt3dadd( -4.31537, -39.523, 7.73328, 0.83 ) }
    dend_11 { pt3dadd( -0.355497, -41.8051, 8.59312, 0.83 ) }
    dend_11 { pt3dadd( 0.126222, -42.0827, 8.69772, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 67/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 54.7584, -75.2498, 49.0627, 0.83 ) }
    dend_9 { pt3dadd( 60.3672, -80.7823, 52.8447, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 69/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 54.7584, -75.2498, 49.0627, 0.55 ) }
    dend_8 { pt3dadd( 60.2662, -81.1431, 55.0369, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 71/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -90.1313, -22.7626, 27.5167, 0.83 ) }
    dend_4 { pt3dadd( -98.9532, -24.2827, 23.9531, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -90.1313, -22.7626, 27.5167, 0.55 ) }
    dend_3 { pt3dadd( -93.1515, -22.2094, 39.2448, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 75/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -24.2652, -171.311, 6.46833, 0.55 ) }
    dend_18 { pt3dadd( -26.5506, -173.364, 6.64059, 0.55 ) }
    dend_18 { pt3dadd( -29.2284, -176.041, 6.74167, 0.55 ) }
    dend_18 { pt3dadd( -31.3342, -178.243, 6.78273, 0.28 ) }
    dend_18 { pt3dadd( -33.2787, -180.438, 6.70106, 0.55 ) }
    dend_18 { pt3dadd( -34.782, -182.254, 6.59114, 0.28 ) }
    dend_18 { pt3dadd( -35.301, -182.907, 6.54558, 0.55 ) }
    dend_18 { pt3dadd( -38.1244, -186.914, 6.28694, 0.28 ) }
    dend_18 { pt3dadd( -38.4559, -187.426, 6.2605, 0.83 ) }
    dend_18 { pt3dadd( -40.5803, -190.831, 6.19807, 0.28 ) }
    dend_18 { pt3dadd( -41.7388, -192.661, 6.17681, 0.28 ) }
    dend_18 { pt3dadd( -42.3477, -193.637, 6.20133, 0.55 ) }
    dend_18 { pt3dadd( -44.165, -196.533, 6.33106, 0.28 ) }
    dend_18 { pt3dadd( -44.467, -197.013, 6.38039, 0.55 ) }
    dend_18 { pt3dadd( -45.3838, -198.425, 6.61429, 0.28 ) }
    dend_18 { pt3dadd( -46.3089, -199.677, 7.07788, 0.83 ) }
    dend_18 { pt3dadd( -50.9155, -207.801, 5.87457, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 92/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -24.2652, -171.311, 6.46833, 0.55 ) }
    dend_17 { pt3dadd( -23.1402, -173.749, 8.31447, 0.55 ) }
    dend_17 { pt3dadd( -22.4064, -175.128, 9.24552, 0.28 ) }
    dend_17 { pt3dadd( -22.0364, -175.736, 9.61589, 0.55 ) }
    dend_17 { pt3dadd( -20.8183, -177.538, 10.6391, 0.55 ) }
    dend_17 { pt3dadd( -19.741, -179.144, 11.4806, 0.55 ) }
    dend_17 { pt3dadd( -18.61, -180.829, 12.3641, 0.55 ) }
    dend_17 { pt3dadd( -17.5319, -182.483, 13.0283, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -16.8772, -183.374, 13.3689, 0.28 ) }
    dend_17 { pt3dadd( -16.3667, -183.997, 13.5856, 0.55 ) }
    dend_17 { pt3dadd( -14.5642, -185.926, 14.062, 0.28 ) }
    dend_17 { pt3dadd( -9.29882, -192.645, 18.1861, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.126222, -42.0827, 8.69772, 0.28 ) }
    dend_15 { pt3dadd( -0.5442, -39.5203, 7.58257, 0.28 ) }
    dend_15 { pt3dadd( -0.593278, -39.265, 7.48277, 0.83 ) }
    dend_15 { pt3dadd( -0.810841, -37.7553, 6.94821, 0.28 ) }
    dend_15 { pt3dadd( -0.888128, -36.9629, 6.74367, 0.83 ) }
    dend_15 { pt3dadd( -1.03988, -33.7169, 6.12244, 0.28 ) }
    dend_15 { pt3dadd( -1.05457, -32.9285, 5.94818, 0.55 ) }
    dend_15 { pt3dadd( -1.08228, -31.3862, 5.5845, 0.28 ) }
    dend_15 { pt3dadd( -1.06991, -30.5976, 5.3968, 0.55 ) }
    dend_15 { pt3dadd( -0.969087, -29.0263, 5.02588, 0.28 ) }
    dend_15 { pt3dadd( -0.8337, -27.6671, 4.77423, 0.55 ) }
    dend_15 { pt3dadd( -0.31545, -24.5852, 4.53569, 0.28 ) }
    dend_15 { pt3dadd( -0.189158, -23.7458, 4.40393, 0.55 ) }
    dend_15 { pt3dadd( -0.258254, -13.8737, 4.11602, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 18/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.126222, -42.0827, 8.69772, 0.83 ) }
    dend_12 { pt3dadd( 0.0261551, -44.4637, 9.0154, 0.83 ) }
    dend_12 { pt3dadd( -0.219497, -47.5232, 9.51846, 0.83 ) }
    dend_12 { pt3dadd( -0.382368, -49.1595, 9.80353, 0.83 ) }
    dend_12 { pt3dadd( -0.625851, -52.3444, 10.351, 0.83 ) }
    dend_12 { pt3dadd( -0.719331, -56.5286, 10.9988, 0.83 ) }
    dend_12 { pt3dadd( -0.647596, -58.1477, 11.2201, 0.83 ) }
    dend_12 { pt3dadd( -0.441892, -60.1325, 11.4918, 0.83 ) }
    dend_12 { pt3dadd( -0.034833, -62.8187, 11.7583, 0.83 ) }
    dend_12 { pt3dadd( 0.48658, -65.339, 11.9236, 0.83 ) }
    dend_12 { pt3dadd( 1.15067, -68.0435, 11.9833, 0.83 ) }
    dend_12 { pt3dadd( 2.01631, -71.5095, 11.8571, 0.83 ) }
    dend_12 { pt3dadd( 2.47596, -73.2176, 11.7589, 0.83 ) }
    dend_12 { pt3dadd( 4.11466, -78.7417, 11.3571, 0.83 ) }
    dend_12 { pt3dadd( 4.5746, -80.2777, 11.2413, 0.83 ) }
    dend_12 { pt3dadd( 5.78994, -84.5517, 10.9328, 0.83 ) }
    dend_12 { pt3dadd( 6.52154, -87.3593, 10.8841, 0.83 ) }
    dend_12 { pt3dadd( 7.44714, -90.8165, 10.9837, 0.83 ) }
    dend_12 { pt3dadd( 7.87043, -92.4969, 11.1118, 0.55 ) }
    dend_12 { pt3dadd( 8.3371, -95.035, 11.4634, 0.55 ) }
    dend_12 { pt3dadd( 8.55661, -96.7155, 11.7965, 0.83 ) }
    dend_12 { pt3dadd( 8.99823, -101.498, 12.9686, 0.83 ) }
    dend_12 { pt3dadd( 9.16271, -104.44, 13.778, 0.55 ) }
    dend_12 { pt3dadd( 9.17214, -107.849, 14.7697, 0.55 ) }
    dend_12 { pt3dadd( 9.03247, -111.749, 15.9236, 0.55 ) }
    dend_12 { pt3dadd( 8.85554, -114.44, 16.723, 0.55 ) }
    dend_12 { pt3dadd( 8.35684, -120.098, 18.2748, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 45/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.35684, -120.098, 18.2748, 0.55 ) }
    dend_14 { pt3dadd( 9.0272, -121.582, 18.1221, 0.55 ) }
    dend_14 { pt3dadd( 9.83657, -123.457, 17.7798, 0.55 ) }
    dend_14 { pt3dadd( 11.4905, -127.599, 16.9282, 0.55 ) }
    dend_14 { pt3dadd( 12.5017, -130.361, 16.3322, 0.55 ) }
    dend_14 { pt3dadd( 13.2845, -132.638, 15.8447, 0.55 ) }
    dend_14 { pt3dadd( 14.0605, -135.081, 15.1813, 0.55 ) }
    dend_14 { pt3dadd( 14.9405, -138.213, 14.1448, 0.55 ) }
    dend_14 { pt3dadd( 15.3363, -139.865, 13.5046, 0.55 ) }
    dend_14 { pt3dadd( 15.7205, -141.781, 12.7116, 0.55 ) }
    dend_14 { pt3dadd( 16.0868, -143.277, 12.0832, 0.83 ) }
    dend_14 { pt3dadd( 17.0227, -147.059, 10.6592, 0.55 ) }
    dend_14 { pt3dadd( 17.229, -147.829, 10.4091, 0.55 ) }
    dend_14 { pt3dadd( 17.7832, -149.727, 9.90585, 0.55 ) }
    dend_14 { pt3dadd( 18.8459, -153.06, 9.1134, 0.55 ) }
    dend_14 { pt3dadd( 19.5458, -155.187, 8.71392, 0.55 ) }
    dend_14 { pt3dadd( 20.6798, -158.686, 8.28157, 0.55 ) }
    dend_14 { pt3dadd( 21.1844, -160.25, 8.22096, 0.83 ) }
    dend_14 { pt3dadd( 21.4972, -161.258, 8.17883, 0.28 ) }
    dend_14 { pt3dadd( 21.5816, -161.557, 8.16453, 0.55 ) }
    dend_14 { pt3dadd( 21.7967, -162.492, 8.11928, 0.28 ) }
    dend_14 { pt3dadd( 21.9633, -163.175, 8.09036, 0.55 ) }
    dend_14 { pt3dadd( 22.4306, -164.567, 8.02935, 0.28 ) }
    dend_14 { pt3dadd( 23.3973, -166.695, 7.91969, 0.55 ) }
    dend_14 { pt3dadd( 24.6426, -168.888, 7.76318, 0.28 ) }
    dend_14 { pt3dadd( 25.0318, -169.452, 7.71486, 0.83 ) }
    dend_14 { pt3dadd( 26.7311, -171.517, 7.44989, 0.28 ) }
    dend_14 { pt3dadd( 27.588, -172.426, 7.30954, 0.55 ) }
    dend_14 { pt3dadd( 28.9385, -173.682, 7.09163, 0.55 ) }
    dend_14 { pt3dadd( 30.2273, -174.729, 6.86009, 0.55 ) }
    dend_14 { pt3dadd( 31.6624, -175.793, 6.59571, 0.55 ) }
    dend_14 { pt3dadd( 33.1639, -176.91, 6.3061, 0.28 ) }
    dend_14 { pt3dadd( 33.568, -177.236, 6.22044, 0.55 ) }
    dend_14 { pt3dadd( 34.622, -178.235, 5.9819, 0.28 ) }
    dend_14 { pt3dadd( 34.8351, -178.474, 5.9322, 0.55 ) }
    dend_14 { pt3dadd( 35.87, -179.733, 5.70115, 0.28 ) }
    dend_14 { pt3dadd( 36.1325, -180.099, 5.63003, 0.83 ) }
    dend_14 { pt3dadd( 38.1861, -183.146, 5.01101, 0.28 ) }
    dend_14 { pt3dadd( 38.3103, -183.343, 4.95229, 0.55 ) }
    dend_14 { pt3dadd( 39.5515, -185.339, 4.22435, 0.28 ) }
    dend_14 { pt3dadd( 39.9047, -185.925, 3.98, 0.55 ) }
    dend_14 { pt3dadd( 40.8698, -187.578, 3.23552, 0.28 ) }
    dend_14 { pt3dadd( 40.9802, -187.765, 3.15309, 0.55 ) }
    dend_14 { pt3dadd( 42.7967, -190.764, 1.77937, 0.28 ) }
    dend_14 { pt3dadd( 43.1289, -191.309, 1.54633, 0.55 ) }
    dend_14 { pt3dadd( 43.9977, -192.795, 0.980742, 0.28 ) }
    dend_14 { pt3dadd( 44.6638, -193.896, 0.589805, 0.83 ) }
    dend_14 { pt3dadd( 46.1712, -196.312, -0.148592, 0.28 ) }
    dend_14 { pt3dadd( 46.1712, -196.312, -0.148592, 0.55 ) }
    dend_14 { pt3dadd( 46.9089, -197.373, -0.512214, 0.55 ) }
    dend_14 { pt3dadd( 47.563, -198.261, -0.834615, 0.55 ) }
    dend_14 { pt3dadd( 49.6399, -200.822, -1.80834, 0.28 ) }
    dend_14 { pt3dadd( 50.2494, -201.531, -2.09854, 0.55 ) }
    dend_14 { pt3dadd( 51.985, -203.368, -2.88594, 0.28 ) }
    dend_14 { pt3dadd( 52.8683, -204.26, -3.25308, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 54.2571, -205.552, -3.86459, 0.55 ) }
    dend_14 { pt3dadd( 54.6891, -205.931, -4.04513, 0.28 ) }
    dend_14 { pt3dadd( 54.9181, -206.138, -4.1312, 0.55 ) }
    dend_14 { pt3dadd( 56.0977, -207.256, -4.57056, 0.28 ) }
    dend_14 { pt3dadd( 56.584, -207.712, -4.79806, 0.55 ) }
    dend_14 { pt3dadd( 59.43, -210.373, -6.29358, 0.28 ) }
    dend_14 { pt3dadd( 60.2805, -211.191, -6.87409, 0.83 ) }
    dend_14 { pt3dadd( 61.055, -211.97, -7.47826, 0.28 ) }
    dend_14 { pt3dadd( 61.3526, -212.275, -7.72481, 0.55 ) }
    dend_14 { pt3dadd( 63.9417, -215.017, -10.0861, 0.28 ) }
    dend_14 { pt3dadd( 64.8956, -215.989, -10.9882, 0.55 ) }
    dend_14 { pt3dadd( 66.7773, -217.931, -12.9556, 0.28 ) }
    dend_14 { pt3dadd( 67.0331, -218.181, -13.265, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.35684, -120.098, 18.2748, 0.55 ) }
    dend_13 { pt3dadd( 8.05115, -122.593, 19.3033, 0.55 ) }
    dend_13 { pt3dadd( 7.87234, -124.692, 20.169, 0.28 ) }
    dend_13 { pt3dadd( 7.75507, -125.952, 20.6723, 0.83 ) }
    dend_13 { pt3dadd( 7.49944, -128.318, 21.6922, 0.28 ) }
    dend_13 { pt3dadd( 7.42436, -128.916, 21.9252, 0.83 ) }
    dend_13 { pt3dadd( 7.00435, -131.479, 22.9701, 0.28 ) }
    dend_13 { pt3dadd( 6.9506, -131.779, 23.0796, 0.55 ) }
    dend_13 { pt3dadd( 6.69788, -132.851, 23.4472, 0.55 ) }
    dend_13 { pt3dadd( 6.25594, -134.351, 23.9609, 0.28 ) }
    dend_13 { pt3dadd( 5.6893, -136.199, 24.5448, 0.55 ) }
    dend_13 { pt3dadd( 4.59093, -139.584, 25.7282, 0.28 ) }
    dend_13 { pt3dadd( 4.06564, -141.182, 26.3367, 0.83 ) }
    dend_13 { pt3dadd( 3.24123, -143.649, 27.3158, 0.28 ) }
    dend_13 { pt3dadd( 2.44708, -146.035, 28.3242, 0.28 ) }
    dend_13 { pt3dadd( 1.55532, -148.532, 29.4225, 0.28 ) }
    dend_13 { pt3dadd( 0.624019, -150.913, 30.5888, 0.83 ) }
    dend_13 { pt3dadd( -0.121783, -152.756, 31.4684, 0.28 ) }
    dend_13 { pt3dadd( -0.928077, -154.689, 32.4668, 0.83 ) }
    dend_13 { pt3dadd( -1.77098, -156.615, 33.4513, 0.28 ) }
    dend_13 { pt3dadd( -2.13293, -157.424, 33.8903, 0.28 ) }
    dend_13 { pt3dadd( -3.16182, -159.234, 34.8766, 0.55 ) }
    dend_13 { pt3dadd( -4.21704, -161.091, 35.6401, 0.55 ) }
    dend_13 { pt3dadd( -8.42051, -171.034, 39.8695, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_42, dend_41, dend_40, dend_39, dend_34, dend_27, dend_22, dend_19, dend_0, axon_0, dend_38, dend_35, dend_29, dend_28, dend_24, dend_23, dend_21, dend_20, dend_6, dend_1, axon_1, dend_37, dend_36, dend_33, dend_30, dend_26, dend_25, dend_10, dend_7, dend_5, dend_2, dend_32, dend_31, dend_16, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_17, dend_15, dend_12, dend_14, dend_13]}
    ModelViewParmSubset_5 = new SectionList()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_40 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_39 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_38 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_7 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_28 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_19 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_15 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_32 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_1, axon_1, axon_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_9, dend_8, dend_4, dend_3, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 9
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 9
    dend_34 nseg = 3
    dend_38 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 7
    dend_21 nseg = 3
    dend_37 nseg = 3
    dend_33 nseg = 5
    dend_26 nseg = 5
    dend_7 nseg = 5
    dend_5 nseg = 5
    dend_2 nseg = 5
    dend_16 nseg = 7
    dend_18 nseg = 3
    dend_12 nseg = 5
    dend_14 nseg = 7
    dend_13 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_NBC_c28326d13b_0_0


