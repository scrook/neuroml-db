// Cell: cIR216_L4_NBC_f53cc303cc_0_0
/*
{
  "id" : "cIR216_L4_NBC_f53cc303cc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.0394349, -10.0153, -0.17743, 2.95112", "-0.0532529, -8.94556, -0.157727, 3.04845", "-0.067071, -7.87582, -0.138025, 3.53426", "-0.0808891, -6.80608, -0.118322, 4.26608", "-0.0947072, -5.73635, -0.0986193, 5.29686", "-0.108525, -4.66661, -0.0789167, 6.86463", "-0.122343, -3.59687, -0.0592141, 8.27645", "-0.136161, -2.52713, -0.0395115, 8.22963", "-0.14998, -1.45739, -0.0198089, 8.18256", "-0.163798, -0.387654, -1.06305E-4, 8.13086", "-0.177616, 0.682084, 0.0195963, 8.16843", "-0.191434, 1.75182, 0.0392989, 8.48334", "-0.205252, 2.82156, 0.0590015, 9.11876", "-0.21907, 3.8913, 0.0787041, 9.87", "-0.232888, 4.96104, 0.0984067, 10.1451", "-0.246706, 6.03077, 0.118109, 9.46254", "-0.260524, 7.10051, 0.137812, 8.70667", "-0.274342, 8.17025, 0.157515, 7.77276", "-0.28816, 9.23999, 0.177217, 6.5331", "-0.301978, 10.3097, 0.19692, 4.93174", "-0.315796, 11.3795, 0.216622, 2.75051" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.11174, 6.96407, -10.8018, 1.11", "-3.26543, 11.7914, -14.6795, 1.11", "-3.68816, 13.3186, -16.036, 0.28", "-4.24024, 15.3255, -17.7175, 1.11", "-6.08692, 21.2801, -22.8386, 0.55", "-7.1035, 24.1279, -25.2909, 0.28", "-7.76068, 25.7976, -26.8402, 0.83", "-8.84727, 28.1274, -29.2258, 0.28", "-9.95208, 30.311, -31.5396, 1.66", "-12.3696, 34.8193, -36.245, 0.28", "-13.0281, 36.0518, -37.3986, 0.83", "-15.2871, 40.6064, -41.5888, 0.28", "-16.5809, 43.2084, -43.9886, 0.55", "-18.0819, 45.8683, -46.4256, 0.28", "-19.1189, 47.4234, -47.9917, 1.66", "-21.2501, 50.2809, -50.9186, 0.28", "-21.5924, 50.6863, -51.4098, 0.55", "-23.2169, 52.3698, -53.7025, 0.28", "-24.7575, 53.7967, -55.977, 0.55", "-27.6221, 56.0545, -60.5253, 0.28", "-29.8024, 57.4014, -64.0251, 0.83", "-33.4188, 59.0553, -70.0424, 0.55", "-34.3815, 59.4176, -71.6753, 0.28", "-35.2131, 59.599, -73.1348, 0.55", "-38.7976, 59.8988, -79.347, 0.28", "-40.0447, 59.7231, -81.2632, 0.83", "-43.1471, 58.7764, -85.2471, 0.28", "-43.6278, 58.5941, -85.7639, 0.55", "-47.6219, 57.0476, -89.575, 0.28", "-49.7367, 56.2711, -91.3657, 0.83", "-51.935, 55.5477, -92.9469, 0.28", "-55.0753, 54.6248, -95.3269, 0.83", "-59.7364, 53.3889, -98.7236, 0.28", "-61.4478, 53.0416, -100.065, 0.83", "-62.6237, 52.894, -101.011, 0.28", "-64.5301, 52.968, -102.701, 0.83", "-69.78, 53.9762, -107.575, 0.28", "-71.0842, 54.3861, -108.796, 0.55", "-75.7651, 56.3166, -113.079, 0.28", "-76.5729, 56.6968, -113.791, 1.11", "-83.2906, 60.208, -119.379, 0.28", "-84.9332, 61.1862, -120.635, 0.83", "-87.3604, 62.8003, -122.182, 0.28", "-87.7817, 63.0936, -122.422, 0.55", "-90.0961, 64.6284, -123.426, 0.28", "-90.6663, 64.9662, -123.623, 0.55", "-92.8032, 66.0154, -124.065, 0.28", "-93.9144, 66.643, -124.211, 0.55", "-97.3344, 68.8821, -124.421, 0.28", "-99.4764, 70.3185, -124.529, 0.55", "-102.527, 72.4688, -124.636, 0.28", "-103.465, 73.1424, -124.622, 0.55", "-107.589, 76.1592, -124.263, 0.28", "-108.22, 76.6489, -124.178, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.67826, -0.144428, -8.93177, 0.55", "4.39468, -2.14702, -8.92405, 0.55", "5.32513, -5.02896, -8.9251, 0.55", "5.87652, -6.98496, -8.9244, 0.28", "6.42913, -9.18506, -8.93095, 1.11", "7.07393, -11.7521, -8.93858, 0.55", "7.55006, -13.6477, -8.94422, 0.28", "7.75772, -14.6735, -8.94963, 0.83", "8.04401, -16.7998, -8.97003, 0.28", "8.22931, -18.6842, -9.00229, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.18174, 6.62807, 19.5482, 0.83", "-3.5781, 7.40627, 19.5482, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "4.73826, 4.23407, -9.36177, 1.38", "7.112, 4.32392, -10.6404, 1.38", "10.3135, 4.7212, -12.0417, 1.66", "13.1794, 5.07683, -13.2961, 1.66", "17.969, 5.67118, -15.3924, 1.66", "23.5451, 6.36313, -17.833, 0.83", "25.1728, 6.56512, -18.5455, 0.28", "30.5773, 7.04734, -21.4264, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.93174, -7.00093, -2.10177, 1.11", "-4.89237, -8.6999, -5.33285, 1.11", "-6.69458, -11.4096, -10.3541, 0.83", "-7.85586, -12.9814, -13.1557, 1.66", "-12.4142, -18.3295, -22.2635, 1.94", "-15.6103, -21.9849, -27.9974, 0.83", "-16.6246, -23.1689, -29.7085, 0.83", "-18.3116, -24.9056, -32.1939, 0.55", "-19.5135, -25.9512, -33.4699, 0.83", "-22.4676, -28.1527, -35.5032, 0.55", "-24.695, -29.7504, -36.2856, 0.55", "-26.9932, -31.453, -36.8429, 0.28", "-29.9454, -33.6543, -37.6311, 0.55", "-32.31, -35.4778, -38.3739, 0.55", "-35.8953, -38.2075, -39.5741, 0.55", "-41.0077, -42.0003, -41.4557, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.23174, -11.9779, -1.27177, 3.6", "-1.2459, -13.454, -1.22072, 3.6", "-1.26998, -15.9645, -1.13389, 4.16" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999992531229967
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.315796, 11.3795, 0.216622, 0.83", "-0.509538, 26.3783, 0.216622, 0.83", "-0.70328, 41.377, 0.216622, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "8.22931, -18.6842, -9.00229, 0.28", "8.58791, -21.5389, -11.2762, 0.28", "8.59287, -22.3092, -12.0251, 0.28", "8.51226, -24.6362, -14.2141, 0.83", "8.34827, -26.408, -16.5404, 1.38", "7.89015, -29.6148, -20.9979, 0.55", "7.59475, -31.0931, -23.2356, 1.11", "6.72322, -34.1419, -28.4318, 0.55", "6.26809, -35.4003, -30.7678, 1.66", "4.02089, -40.9569, -41.3007, 0.28", "3.57914, -41.9902, -43.3994, 0.83", "2.55018, -44.5584, -48.7291, 0.28", "2.22938, -45.4269, -50.5422, 0.83", "1.33054, -48.0729, -55.7962, 0.28", "0.970292, -49.3007, -58.1667, 1.66", "0.156141, -53.6162, -65.0548, 0.28", "0.0955572, -54.1399, -65.8624, 0.55", "0.0419652, -54.9565, -66.9553, 0.28", "0.00251234, -55.5813, -67.7214, 0.83", "-0.369335, -59.7109, -72.0692, 0.28", "-0.590105, -61.0318, -73.3171, 0.83", "-1.13583, -63.5253, -75.1711, 0.28", "-1.53935, -64.9912, -76.1702, 0.55", "-2.44487, -67.8075, -77.8913, 0.28", "-3.15344, -69.7762, -78.8518, 1.11", "-4.72979, -73.7421, -80.2096, 0.28", "-5.24539, -74.997, -80.5936, 0.55", "-5.87176, -76.5647, -80.9622, 0.28", "-6.28161, -77.7009, -81.2337, 0.55", "-7.11077, -80.3043, -81.796, 0.28", "-7.5026, -81.7692, -82.1602, 0.83", "-8.05276, -84.3706, -82.8145, 0.28", "-8.36392, -86.1869, -83.3004, 1.11", "-8.89023, -89.7225, -84.2864, 0.28", "-9.03519, -90.697, -84.5607, 0.55", "-9.57465, -93.9551, -85.4224, 0.28", "-9.79329, -95.3257, -85.778, 0.83", "-10.3737, -99.0429, -86.6417, 0.28", "-10.4916, -99.7753, -86.8285, 0.55", "-11.0762, -103.009, -87.6401, 0.28", "-11.656, -106.107, -88.5279, 1.66", "-12.5184, -110.571, -89.9134, 0.28", "-12.8807, -112.502, -90.6664, 0.55", "-13.4715, -115.786, -92.1593, 0.28", "-13.6273, -116.612, -92.6109, 1.11", "-14.2242, -119.531, -94.4469, 0.28", "-14.4193, -120.417, -95.0432, 0.55", "-15.2663, -124.036, -97.32, 0.28", "-15.5572, -125.377, -98.0587, 0.83", "-16.264, -129.176, -99.8446, 0.28", "-16.5737, -131.09, -100.649, 0.83", "-16.862, -133.289, -101.499, 0.28", "-17.2132, -136.518, -102.624, 0.28", "-17.4498, -139.22, -103.379, 1.11", "-17.5845, -141.904, -104.074, 0.28", "-17.6387, -143.6, -104.448, 0.55", "-17.7936, -147.004, -105.227, 0.28", "-17.8837, -148.376, -105.543, 0.83", "-18.0315, -150.344, -106.204, 0.83", "-18.1658, -151.952, -106.827, 0.83", "-18.6624, -155.555, -108.489, 0.28", "-19.2742, -158.913, -110.198, 0.28", "-19.5756, -160.131, -110.892, 1.11", "-21.3754, -166.357, -114.738, 0.28", "-21.9257, -167.999, -115.858, 1.11", "-23.6796, -172.784, -119.339, 0.28", "-24.3079, -174.407, -120.599, 0.83", "-25.9628, -178.541, -123.85, 0.28", "-26.4115, -179.708, -124.717, 0.83", "-27.4981, -182.641, -126.632, 0.28", "-27.6991, -183.271, -127.06, 0.55", "-28.5665, -186.722, -129.281, 0.28", "-28.7557, -187.599, -129.907, 1.11", "-29.128, -189.503, -131.271, 0.28", "-29.2492, -190.036, -131.669, 0.55", "-30.2642, -194.231, -134.7, 0.28", "-30.7861, -196.02, -136.032, 0.83", "-32.5145, -201.179, -139.822, 0.28", "-33.0145, -202.466, -140.793, 0.83", "-34.1152, -204.957, -142.688, 0.28", "-35.0178, -206.703, -144.074, 0.83", "-36.9501, -209.806, -146.59, 0.28", "-37.8844, -210.909, -147.673, 0.55", "-38.9675, -211.804, -148.658, 0.28", "-39.4376, -212.086, -149.158, 0.55", "-41.7537, -213.127, -151.689, 0.28", "-42.448, -213.37, -152.457, 0.83", "-45.6964, -214.431, -156.263, 0.28", "-46.6373, -214.747, -157.409, 0.83", "-52.3419, -216.402, -164.386, 0.28", "-53.0093, -216.56, -165.198, 0.28", "-53.4356, -216.649, -165.705, 0.55", "-55.7982, -217.108, -168.394, 0.28", "-57.5437, -217.34, -170.158, 0.83", "-60.9351, -217.53, -173.123, 0.28", "-61.5527, -217.508, -173.519, 0.55", "-63.356, -217.337, -174.752, 0.28", "-64.5457, -217.155, -175.577, 0.55", "-67.162, -216.442, -177.53, 0.28", "-68.395, -215.999, -178.6, 0.28", "-69.1354, -215.7, -179.346, 0.83", "-71.5474, -214.455, -181.993, 0.28", "-71.7436, -214.33, -182.22, 0.55", "-73.9198, -212.812, -184.911, 0.28", "-74.3358, -212.529, -185.435, 0.55", "-75.6333, -211.699, -186.983, 0.28", "-76.253, -211.36, -187.62, 0.83", "-78.5042, -210.4, -189.437, 0.28", "-79.3518, -210.129, -190.015, 0.55", "-80.8444, -209.829, -190.811, 0.28", "-81.4382, -209.762, -191.084, 0.55", "-83.1126, -209.687, -191.67, 0.28", "-84.7143, -209.689, -192.165, 0.55", "-86.0551, -209.755, -192.456, 0.28", "-87.0891, -209.83, -192.62, 0.55", "-88.8552, -209.987, -192.793, 0.28", "-90.8584, -210.199, -192.925, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.22931, -18.6842, -9.00229, 0.55", "8.92347, -26.1592, -10.6429, 0.55", "9.2309, -28.5606, -10.8936, 0.55", "9.51853, -30.6172, -11.0046, 0.28", "9.64997, -31.6598, -11.0568, 0.55", "10.1723, -35.6476, -11.2542, 0.28", "10.2552, -36.4236, -11.3302, 0.55", "10.7579, -40.9077, -11.563, 0.28", "10.8175, -42.252, -11.8374, 0.55", "10.7811, -45.9375, -12.9113, 0.28", "10.7487, -46.6546, -13.1497, 0.55", "10.4177, -51.2535, -14.8432, 0.28", "10.3693, -52.2321, -15.1675, 0.55", "10.0653, -60.5741, -17.7504, 0.28", "10.103, -61.7886, -18.0236, 0.55", "10.4158, -65.5451, -18.5972, 0.28", "10.6189, -66.9512, -18.7298, 0.83", "11.9474, -73.1195, -18.9346, 0.28", "12.1513, -73.8707, -18.9225, 0.83", "14.6427, -81.364, -18.3472, 0.28", "15.2411, -83.0577, -18.1953, 0.83", "17.2925, -88.6418, -17.6285, 0.28", "18.2994, -91.4215, -17.3384, 0.83", "19.188, -93.8988, -17.0756, 0.28", "19.6447, -95.1874, -16.9156, 0.55", "20.7191, -98.251, -16.4608, 0.28", "21.4124, -100.245, -16.1269, 0.83", "22.6468, -103.881, -15.4994, 0.28", "22.8636, -104.539, -15.3976, 0.55", "23.8544, -107.603, -15.0466, 0.28", "24.2126, -108.651, -14.9417, 0.55", "25.0451, -110.929, -14.7874, 0.28", "26.4261, -114.392, -14.5046, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-3.5781, 7.40627, 19.5482, 0.83", "-6.24732, 9.11911, 20.4439, 0.83", "-7.8733, 10.4254, 21.1314, 0.83", "-9.9105, 12.0713, 22.0118, 1.38", "-12.628, 14.0515, 23.5567, 0.83", "-16.4065, 16.5021, 26.3685, 0.83", "-19.9157, 18.6887, 29.2992, 1.94", "-21.8075, 19.9826, 31.2601, 0.55", "-22.6843, 20.613, 32.2827, 0.55", "-26.2299, 23.1902, 36.7531, 0.55", "-29.207, 25.2402, 40.6081, 0.28", "-29.8036, 25.5564, 41.2573, 0.83", "-33.1494, 27.1695, 44.4119, 0.28", "-33.8839, 27.546, 45.0957, 0.55", "-34.9507, 28.2257, 45.9464, 0.28", "-35.9708, 29.0241, 46.3432, 0.55", "-38.9722, 31.319, 46.5889, 0.28", "-40.0026, 31.9788, 46.5555, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.5781, 7.40627, 19.5482, 0.83", "-2.21068, 6.20717, 19.6429, 0.83", "-0.491772, 4.69984, 19.762, 0.83", "1.71672, 2.7632, 19.9149, 0.83", "5.27881, -0.360419, 20.1617, 0.83", "7.97836, -2.72768, 20.3486, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "30.5773, 7.04734, -21.4264, 0.83", "34.1185, 7.90991, -21.929, 0.83", "36.9127, 8.99359, -22.522, 0.55", "40.0694, 10.3897, -23.5063, 0.55", "42.2934, 11.3568, -24.2591, 0.55", "44.5038, 12.2761, -25.0017, 0.83", "47.1898, 13.3933, -25.904, 0.55", "51.7686, 15.4117, -27.6097, 0.55", "55.3298, 17.0993, -29.0459, 0.55", "57.0852, 18.0566, -29.8011, 0.55", "61.1029, 20.2032, -31.7078, 1.66" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "30.5773, 7.04734, -21.4264, 0.28", "30.8844, 8.37718, -21.6745, 0.28", "31.1799, 9.74756, -21.8035, 0.55", "31.7343, 12.3601, -21.9653, 0.28", "32.0531, 13.8664, -22.0257, 0.83", "32.5448, 16.1226, -22.0916, 0.28", "32.8007, 17.4014, -22.1109, 0.55", "33.4271, 20.5115, -22.0828, 0.28", "33.5158, 21.0345, -22.0732, 0.55", "33.6647, 22.1266, -22.0674, 0.28", "33.7542, 22.7741, -22.0623, 0.55", "33.9898, 24.3856, -22.0832, 0.28", "34.2864, 26.139, -22.1801, 0.55", "35.1258, 30.1944, -22.5677, 0.28", "35.7127, 32.4179, -22.8206, 0.55", "36.2752, 34.1768, -23.051, 0.28", "36.5361, 34.7772, -23.1403, 0.55", "37.677, 36.8562, -23.4656, 0.28", "38.4062, 37.9468, -23.6262, 0.83", "40.2448, 40.2271, -23.9484, 0.28", "40.8113, 40.8237, -24.085, 0.55", "44.1224, 43.9277, -25.0179, 0.28", "44.5886, 44.3431, -25.1493, 0.83", "46.243, 45.6953, -25.6154, 0.28", "46.4215, 45.8335, -25.6686, 0.83", "50.518, 48.7571, -27.0768, 0.28", "51.2752, 49.259, -27.3907, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-41.0077, -42.0003, -41.4557, 0.28", "-42.4484, -42.9318, -41.4561, 0.28", "-42.8215, -43.1814, -41.4606, 0.55", "-44.7085, -44.4507, -41.4339, 0.28", "-45.8894, -45.2224, -41.4125, 0.55", "-48.4897, -46.8715, -41.483, 0.83", "-50.2819, -47.9869, -41.569, 0.28", "-52.387, -49.1542, -41.8718, 0.83", "-54.9761, -50.4475, -42.4156, 0.28", "-56.0198, -50.8667, -42.7979, 0.55", "-57.8212, -51.4766, -43.6333, 0.28", "-59.3716, -51.8519, -44.4362, 0.83", "-63.3718, -52.6017, -46.7874, 0.28", "-64.4104, -52.7369, -47.459, 0.55", "-69.6823, -53.1157, -50.9433, 0.28", "-70.9273, -53.1991, -51.7451, 0.55", "-72.3787, -53.3038, -52.5805, 0.28", "-73.6056, -53.3995, -53.2326, 0.28", "-75.3034, -53.6144, -53.952, 0.28", "-78.2535, -54.0745, -54.8512, 0.55", "-79.7132, -54.3757, -55.0772, 0.83", "-82.4155, -54.962, -55.4791, 0.28", "-82.699, -55.022, -55.5256, 0.55", "-84.1857, -55.2894, -55.7518, 0.28", "-85.5926, -55.4623, -55.9806, 0.83", "-88.4162, -55.6305, -56.4574, 0.28", "-89.7692, -55.5691, -56.7153, 0.83", "-93.4595, -55.089, -57.4979, 0.28", "-94.0621, -54.965, -57.6326, 0.83", "-95.9451, -54.411, -58.0589, 0.28", "-96.3103, -54.2693, -58.1216, 0.83", "-97.924, -53.4226, -58.2051, 0.28", "-98.6063, -52.9796, -58.1786, 0.83", "-99.9032, -51.9717, -57.9898, 0.28", "-100.407, -51.5688, -57.9056, 0.83", "-102.26, -50.0429, -57.499, 0.28", "-103.047, -49.3946, -57.301, 0.83", "-105.874, -47.0709, -56.3929, 0.28", "-106.411, -46.6284, -56.2165, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-41.0077, -42.0003, -41.4557, 0.28", "-41.6491, -44.2115, -42.7413, 0.28", "-41.8391, -44.849, -43.1057, 0.83", "-42.4339, -46.9102, -44.2701, 0.28", "-42.9945, -48.8266, -45.3634, 1.11", "-43.6242, -51.0425, -46.5813, 0.28", "-43.6799, -51.2509, -46.6931, 0.55", "-44.0798, -52.6682, -47.4751, 0.28", "-44.1558, -52.9637, -47.6328, 0.55", "-44.515, -54.6316, -48.4602, 0.28", "-44.8481, -56.4301, -49.2724, 1.38", "-45.1818, -58.701, -50.1346, 0.28", "-45.2138, -58.9306, -50.212, 0.55", "-45.4305, -60.5463, -50.6772, 0.28", "-45.4805, -60.8926, -50.7655, 0.55", "-45.7916, -63.1467, -51.2303, 0.28", "-45.8742, -63.6887, -51.3203, 0.55", "-46.1439, -64.875, -51.4587, 0.28", "-46.3008, -65.5295, -51.5407, 0.55", "-46.7385, -66.9201, -51.6625, 0.28", "-47.1276, -67.8592, -51.7371, 0.55", "-47.9827, -69.6397, -51.8917, 0.28", "-48.8123, -71.265, -51.9837, 0.28", "-49.8313, -73.1952, -52.048, 0.55", "-50.8878, -75.0909, -52.1644, 0.55", "-51.8007, -76.6619, -52.2819, 0.28", "-52.1568, -77.2752, -52.3724, 0.55", "-52.9085, -78.5794, -52.6636, 0.28", "-53.1791, -79.1757, -52.8437, 0.55", "-54.1255, -81.6883, -53.7546, 0.28", "-54.3466, -82.5527, -54.1788, 0.83", "-54.6378, -84.3438, -55.1463, 0.28", "-54.6709, -84.6311, -55.3197, 0.55", "-54.8968, -86.9842, -56.7829, 0.28", "-54.9285, -87.3978, -57.0266, 0.55", "-55.0981, -89.8768, -58.3689, 0.28", "-55.2193, -91.5731, -59.2699, 0.83", "-55.4072, -94.3582, -60.645, 0.28", "-55.4794, -95.959, -61.4888, 0.55", "-55.5421, -97.4686, -62.2974, 0.28", "-55.5525, -98.4149, -62.8006, 0.83", "-55.5199, -100.158, -63.6495, 0.28", "-55.4619, -101.9, -64.4762, 1.11", "-55.1767, -105.979, -66.2878, 0.28", "-55.0971, -106.858, -66.7456, 0.55", "-54.8977, -109.348, -68.1537, 0.28", "-54.8453, -110.357, -68.7615, 0.55", "-54.8504, -111.111, -69.2816, 0.28", "-54.9186, -111.986, -69.9068, 0.83", "-55.5156, -115.752, -72.5482, 0.28", "-55.6924, -116.745, -73.2529, 0.83", "-56.0129, -118.411, -74.4171, 0.28", "-56.4243, -120.681, -75.8843, 0.83", "-56.7378, -122.699, -77.0479, 0.28", "-56.8188, -123.183, -77.2948, 0.55", "-57.0328, -124.611, -77.8102, 0.28", "-57.1741, -125.769, -78.184, 0.83", "-57.4272, -129.577, -79.0722, 0.28", "-57.4497, -130.653, -79.2448, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.26998, -15.9645, -1.13389, 2.77", "0.0490456, -22.7493, -1.51794, 2.77" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.26998, -15.9645, -1.13389, 1.11", "-3.65375, -19.7877, -3.46437, 1.11", "-5.12211, -22.1427, -4.89991, 1.11", "-5.97392, -23.5089, -5.73268, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.70328, 41.377, 0.216622, 0.28", "-0.897022, 56.3757, 0.216622, 0.28", "-1.09076, 71.3745, 0.216622, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-40.0026, 31.9788, 46.5555, 0.28", "-42.751, 32.841, 46.295, 0.28", "-43.488, 33.288, 46.2435, 0.55", "-46.3854, 35.3455, 46.0471, 0.28", "-48.5528, 37.0351, 45.8663, 0.55", "-50.9425, 38.915, 45.6375, 0.55", "-51.9076, 39.7045, 45.5372, 0.83", "-56.6869, 44.0217, 45.0759, 0.28", "-57.2875, 44.6057, 45.0158, 0.83", "-61.8544, 49.5307, 44.4731, 0.28", "-62.4393, 50.1735, 44.4055, 0.55", "-63.6247, 51.474, 44.2706, 0.28", "-64.622, 52.5012, 44.1494, 0.55", "-74.0022, 57.9507, 42.615, 0.55", "-83.7857, 62.8691, 42.2526, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-40.0026, 31.9788, 46.5555, 0.83", "-39.8976, 34.1891, 46.4829, 0.83", "-39.7872, 36.5146, 46.4064, 0.28", "-39.7225, 37.8764, 46.3617, 0.55", "-38.6349, 48.5039, 43.9215, 0.55", "-37.6536, 59.2689, 42.0142, 0.55", "-36.4745, 69.8879, 39.57, 0.55", "-33.1775, 79.933, 36.5956, 0.55", "-31.9956, 90.6444, 34.5168, 0.55", "-31.3255, 101.465, 32.8049, 0.55", "-30.9141, 112.04, 30.0744, 0.55", "-30.2463, 122.951, 28.8885, 0.55", "-28.0424, 133.82, 28.9906, 0.55", "-25.2802, 144.344, 31.6243, 0.55", "-21.4411, 153.96, 36.0612, 0.55", "-15.9061, 162.433, 41.0763, 0.55", "-8.79016, 170.341, 44.7956, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "7.97836, -2.72768, 20.3486, 0.83", "4.41947, -1.48322, 20.6533, 0.83", "0.809854, 0.0278882, 21.3683, 0.83", "-0.762355, 0.68607, 21.6798, 0.55", "-2.07424, 1.23527, 21.9397, 0.55", "-4.05577, 2.0648, 22.3322, 0.55", "-6.17291, 2.95111, 22.7516, 0.55", "-7.85392, 3.81147, 23.3997, 0.55", "-16.0712, 6.07963, 23.7014, 0.55", "-24.0819, 9.04053, 23.3751, 0.55", "-32.1467, 11.6766, 22.4398, 0.55", "-40.5481, 13.0492, 22.3366, 0.55", "-48.9092, 13.9115, 23.6627, 0.55", "-57.2334, 15.6973, 23.9992, 0.55", "-65.2187, 18.1121, 25.8124, 0.55", "-73.0249, 19.6904, 28.8429, 0.55", "-80.2022, 22.1997, 32.7441, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "7.97836, -2.72768, 20.3486, 0.83", "8.25535, -5.56275, 19.9687, 0.83", "8.71767, -9.11848, 19.4875, 0.83", "9.1275, -11.9184, 19.1003, 0.83", "9.61063, -14.4953, 18.8069, 0.83", "10.463, -17.7835, 18.5873, 0.55", "11.0039, -19.3593, 18.5775, 0.55", "12.0223, -21.1939, 18.7662, 0.83", "13.1989, -22.6168, 19.118, 0.83", "14.7716, -24.0385, 19.6936, 0.83", "17.2323, -25.7304, 20.7224, 0.83", "19.161, -26.966, 21.6663, 0.83", "20.5774, -27.946, 22.4315, 0.55", "21.694, -28.7783, 23.0809, 0.28", "22.4956, -29.4971, 23.5454, 0.83", "24.1986, -31.4096, 24.4662, 0.55", "25.6623, -33.5943, 25.177, 0.55", "26.7082, -35.3798, 25.6156, 0.55", "27.8032, -37.4206, 25.9997, 0.55", "29.4239, -40.6408, 26.4912, 0.55", "30.3064, -42.4425, 26.6918, 0.55", "31.9004, -45.5849, 26.9072, 0.55", "33.2012, -47.7792, 26.9906, 0.55", "34.9945, -50.7079, 27.0374, 0.83", "36.2011, -52.6574, 27.0324, 0.83", "37.5146, -54.811, 27.0324, 0.55", "38.3042, -56.0581, 27.0375, 0.55", "39.7715, -57.9973, 27.1023, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "61.1029, 20.2032, -31.7078, 0.83", "63.6162, 17.9659, -31.3268, 0.83", "64.5758, 17.1962, -31.1398, 0.55", "65.7451, 16.2605, -30.8828, 0.55", "68.0839, 14.2843, -30.3363, 0.83", "69.5727, 12.97, -29.7919, 0.55", "71.7329, 10.9649, -28.8113, 1.11", "73.4634, 9.155, -27.6984, 0.55", "74.1917, 8.32968, -27.1194, 0.55", "75.2375, 7.07813, -26.1511, 0.83", "77.5088, 4.14279, -23.7327, 0.28", "77.8112, 3.66379, -23.3065, 0.55", "78.7118, 1.78843, -21.7147, 0.55", "79.3652, 0.299282, -20.5688, 0.28", "79.7698, -0.521596, -20.0211, 0.55", "80.5695, -2.05467, -19.2389, 0.55", "82.4255, -5.43059, -18.0626, 0.55", "83.963, -8.08092, -17.3016, 0.83", "84.8466, -9.55372, -16.9546, 0.83", "86.4097, -12.0199, -16.5738, 0.28", "87.6672, -13.8769, -16.3658, 0.55", "88.5649, -15.1233, -16.3061, 0.55", "90.4873, -17.6366, -16.3292, 0.28", "92.6437, -20.2969, -16.2679, 1.38", "95.1141, -23.3609, -16.1032, 0.28", "96.749, -25.3602, -15.8878, 0.55", "97.9446, -26.7736, -15.6771, 0.28", "99.9075, -29.0605, -15.3209, 0.55", "101.214, -30.5867, -15.0831, 0.28", "102.308, -31.8844, -14.8161, 0.55", "103.907, -33.8227, -14.0499, 0.28", "104.535, -34.61, -13.5839, 0.28", "104.777, -34.8818, -13.358, 0.55", "106.154, -36.1406, -12.0183, 0.28", "108.061, -37.5917, -10.2448, 1.11", "110.884, -39.3872, -7.72973, 0.28", "113.004, -40.6269, -5.96056, 0.83", "114.861, -41.6159, -4.35463, 0.55", "116.847, -42.6108, -2.69447, 0.55", "118.742, -43.5176, -1.18443, 0.55", "119.879, -44.0925, -0.405981, 0.55", "122.086, -45.3784, 0.855077, 0.28", "125.037, -47.4734, 2.27777, 0.55", "127.245, -49.3048, 3.28244, 0.28", "128.41, -50.3393, 3.75872, 0.83", "130.078, -51.8068, 4.33173, 0.28", "131.494, -53.0808, 4.7498, 0.55", "134.426, -55.7705, 5.46294, 0.28", "135.666, -56.9484, 5.70101, 0.55", "138.31, -59.4529, 6.26045, 0.28", "139.697, -60.7699, 6.60997, 0.55", "141.906, -62.9026, 7.27442, 0.28", "142.858, -63.8466, 7.59247, 0.55", "144.343, -65.3611, 8.16885, 0.28", "144.975, -66.0476, 8.41532, 0.55", "146.568, -67.883, 9.04571, 0.28", "146.843, -68.2081, 9.14229, 0.55", "148.488, -70.0158, 9.61852, 0.28", "148.805, -70.3347, 9.74159, 0.83", "150.524, -71.9357, 10.4982, 0.28", "152.376, -73.548, 11.3595, 0.55", "154.676, -75.2903, 12.4446, 0.28", "157.213, -76.8909, 13.7176, 0.55", "161.19, -78.9326, 15.713, 0.28", "162.312, -79.4266, 16.268, 0.28", "162.824, -79.6115, 16.5338, 0.55", "164.983, -80.2221, 17.6817, 0.28", "167.56, -80.7269, 19.0686, 0.83", "169.19, -80.9462, 19.8462, 0.28", "170.613, -81.0805, 20.2271, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "61.1029, 20.2032, -31.7078, 0.55", "61.9972, 20.6724, -31.7174, 0.55", "62.5429, 20.9529, -31.7424, 0.55", "63.0867, 21.2327, -31.8128, 0.55", "63.9355, 21.6603, -31.9777, 0.28", "64.1334, 21.7694, -32.0379, 1.11", "64.9691, 22.2335, -32.3333, 0.55", "65.4295, 22.4748, -32.5703, 0.55", "66.1128, 22.8382, -33.0044, 0.28", "66.3897, 22.9943, -33.2122, 0.83", "67.3222, 23.5394, -33.9855, 0.28", "67.6467, 23.7359, -34.2615, 0.55", "68.4434, 24.2345, -34.9167, 0.28", "68.907, 24.5416, -35.2437, 0.55", "69.5988, 25.0161, -35.6333, 0.28", "69.7754, 25.1347, -35.7102, 0.55", "70.7811, 25.7752, -36.0195, 0.28", "71.2517, 26.0798, -36.1245, 0.83", "72.4666, 26.862, -36.2692, 0.28", "72.8557, 27.1117, -36.2989, 0.83", "73.6513, 27.6103, -36.332, 0.28", "73.972, 27.8105, -36.3409, 0.28", "75.113, 28.4987, -36.3398, 0.55", "76.0406, 29.0327, -36.3741, 0.28", "76.465, 29.2576, -36.3919, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-57.4497, -130.653, -79.2448, 0.28", "-58.4132, -133.331, -81.0939, 0.28", "-58.6561, -134.395, -81.6929, 0.55", "-58.977, -136.876, -82.8895, 0.28", "-59.0822, -137.689, -83.2818, 0.83", "-59.4786, -140.754, -84.7601, 0.28", "-59.5858, -141.582, -85.1599, 0.55", "-59.9262, -144.957, -86.7231, 0.28", "-59.9285, -145.879, -87.0807, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-57.4497, -130.653, -79.2448, 0.28", "-51.5528, -134.783, -79.3569, 0.28", "-50.6942, -135.384, -79.3732, 0.83", "-48.809, -136.704, -79.409, 0.55", "-45.4854, -139.032, -79.4722, 0.28", "-43.9485, -140.108, -79.5014, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.0490456, -22.7493, -1.51794, 2.22", "-2.08056, -27.5811, -5.19271, 2.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "0.0490456, -22.7493, -1.51794, 0.83", "2.60214, -24.6728, -4.07829, 0.83", "3.81823, -25.4855, -5.24213, 0.55", "5.48388, -26.6004, -6.68478, 1.11", "8.71954, -28.7092, -9.25885, 0.83", "11.0268, -30.1199, -10.8816, 0.55", "14.4495, -32.0461, -12.9727, 0.55", "16.7107, -33.2287, -14.2769, 0.55", "18.6725, -34.1365, -15.2093, 0.28", "20.0438, -34.6175, -15.7603, 0.83", "22.458, -35.3056, -16.4834, 1.38", "24.6525, -35.8862, -17.0295, 0.28", "26.4247, -36.3924, -17.4639, 0.55", "29.4558, -37.2766, -18.4054, 0.28", "31.9026, -38.0524, -19.2467, 1.11", "33.9045, -38.8439, -19.9778, 0.55", "35.4292, -39.6419, -20.6594, 0.55", "36.9997, -40.6709, -21.4436, 0.55", "38.5169, -41.8503, -22.1783, 0.55", "40.2942, -43.6584, -22.916, 0.28", "41.0456, -44.5964, -23.1992, 0.55", "42.6698, -46.9387, -23.8941, 0.55", "43.2178, -47.7949, -24.1888, 0.55", "44.165, -49.1795, -24.7318, 0.28", "45.2356, -50.3938, -25.4439, 0.28", "46.303, -51.3074, -26.1062, 0.55", "47.8188, -52.2564, -26.9485, 0.55", "50.1539, -53.3137, -28.2163, 0.83", "51.7499, -53.8709, -29.1142, 0.83", "55.0558, -54.6854, -31.0192, 0.55", "56.7711, -54.9055, -32.081, 0.28", "57.59, -54.9929, -32.589, 0.55", "59.9977, -55.0981, -34.0387, 0.28", "61.2102, -55.1262, -34.8787, 0.28", "62.3845, -55.1949, -35.7585, 1.11", "65.7562, -55.4455, -38.5621, 0.55", "67.7428, -55.5927, -40.3178, 0.55", "69.9759, -55.7246, -42.4658, 0.55", "73.2748, -55.8997, -45.7924, 0.55", "74.2781, -55.98, -46.8376, 0.83", "77.0898, -56.326, -49.7467, 0.28", "78.1825, -56.5244, -50.8571, 1.11", "81.3025, -57.2584, -53.8834, 0.28", "81.9651, -57.4974, -54.4523, 0.55", "83.3054, -58.0066, -55.3146, 0.28", "84.1683, -58.3619, -55.7868, 0.55", "86.3554, -59.2558, -56.827, 0.28", "88.5737, -60.1356, -57.8203, 0.83", "90.5547, -60.7869, -58.6321, 0.28", "92.0973, -61.2156, -59.2981, 0.28", "94.249, -61.7207, -60.2324, 1.11", "98.1721, -62.5783, -61.8688, 0.28", "99.9155, -62.9818, -62.622, 1.11", "102.828, -63.7392, -63.9404, 0.28", "103.656, -63.9887, -64.2978, 0.55", "105.255, -64.5704, -64.9256, 0.28", "106.543, -65.1005, -65.3324, 1.11", "110.095, -66.8202, -66.1477, 0.28", "111.397, -67.5249, -66.4042, 1.11", "113.749, -68.966, -66.7664, 0.28", "116.256, -70.585, -67.1782, 1.11", "119.641, -72.7775, -67.7, 0.28", "120.999, -73.624, -67.8954, 0.55", "122.798, -74.698, -68.0922, 0.28", "124.783, -75.7902, -68.3173, 0.83", "127.848, -77.3147, -68.7673, 0.28", "129.208, -77.8163, -69.0956, 0.55", "130.838, -78.2501, -69.5613, 0.28", "131.683, -78.3718, -69.8244, 0.55", "133.798, -78.4966, -70.4683, 0.28", "136.326, -78.4898, -71.3069, 0.55", "139.4, -78.4422, -72.2572, 0.28", "141.11, -78.4542, -72.8614, 0.83", "143.251, -78.4735, -73.616, 0.28", "144.402, -78.5035, -74.0251, 0.55", "148.461, -78.6868, -75.4255, 0.28", "149.729, -78.7681, -75.8055, 1.11", "153.654, -79.0944, -76.9845, 0.28", "155.896, -79.3303, -77.7667, 0.28", "156.866, -79.4829, -78.1356, 0.55", "158.484, -79.7894, -78.7503, 0.28", "159.071, -79.9513, -78.9612, 0.55", "161.231, -80.6938, -79.7905, 0.28", "163.127, -81.7525, -80.6575, 0.83", "165.038, -83.155, -81.7028, 0.28", "165.759, -83.7937, -82.1279, 0.83", "167.313, -85.4261, -83.0976, 0.28", "167.636, -85.8446, -83.343, 1.11", "170.373, -90.0011, -85.681, 0.28", "170.918, -90.9936, -86.2055, 0.83", "171.517, -92.2319, -86.86, 0.28", "171.628, -92.4758, -86.9975, 0.55", "173.426, -96.9115, -89.5751, 0.28", "173.781, -97.773, -90.088, 0.83", "174.454, -99.4743, -91.1229, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.97392, -23.5089, -5.73268, 0.83", "-7.40466, -26.5446, -4.32055, 0.83", "-8.87362, -30.0565, -2.86686, 0.83", "-9.99194, -32.9359, -1.83141, 0.83", "-11.4302, -36.5669, -0.582922, 0.83", "-12.7227, -39.7247, 0.431774, 0.83", "-14.7409, -44.4412, 1.8512, 0.83", "-16.0123, -47.2875, 2.61276, 0.83", "-17.6028, -50.3867, 3.28699, 1.11", "-19.5156, -53.5789, 3.65944, 0.55", "-21.2487, -56.0606, 3.73836, 0.55", "-22.7193, -57.9089, 3.70209, 0.83", "-24.762, -60.0613, 3.50738, 0.83", "-27.8462, -63.0262, 2.86241, 0.83", "-31.0642, -65.6589, 1.9486, 0.83", "-33.2624, -67.0674, 1.05483, 0.83", "-34.6472, -67.8135, 0.352512, 0.83", "-36.367, -68.6956, -0.656582, 0.83", "-38.9945, -70.1353, -2.44654, 0.83", "-40.9779, -71.28, -3.82794, 0.83", "-44.9465, -73.5106, -6.29893, 0.83", "-46.8368, -74.6415, -7.35421, 0.83", "-48.6429, -75.9625, -8.36847, 1.11", "-50.3944, -77.5592, -9.44618, 0.55", "-52.5961, -79.9968, -10.8962, 0.55", "-54.6333, -82.6086, -12.3028, 0.55", "-56.7821, -85.7844, -13.8874, 1.11", "-59.1041, -89.2279, -15.6987, 0.55", "-60.6374, -91.5954, -17.0172, 0.83", "-61.4807, -92.9029, -17.8453, 0.55", "-62.0983, -93.9405, -18.5563, 0.55", "-63.6174, -96.5424, -20.3789, 0.83", "-65.3487, -99.1831, -22.2965, 0.83", "-66.8804, -101.287, -23.5624, 0.83", "-69.3036, -104.486, -25.1791, 0.28", "-70.2956, -105.756, -25.7517, 0.28", "-71.564, -107.399, -26.4179, 0.83", "-73.0987, -109.404, -27.0963, 0.83", "-74.7004, -111.661, -27.7418, 0.55", "-76.5668, -114.684, -28.4177, 1.11", "-77.7941, -117.22, -28.9231, 0.55", "-78.299, -118.584, -29.2401, 0.28", "-78.6945, -120.481, -29.7454, 0.83", "-78.7626, -121.367, -29.9977, 0.28", "-78.7371, -123.596, -30.6494, 1.11", "-78.555, -127.03, -31.6649, 0.28", "-78.37, -130.043, -32.5594, 0.55", "-78.1882, -133.614, -33.6162, 0.28", "-78.0937, -136.336, -34.4451, 1.11", "-78.078, -138.259, -35.0162, 0.28", "-78.1659, -140.036, -35.4336, 0.83", "-78.4245, -142.313, -35.8797, 0.28", "-78.5317, -142.921, -36.0003, 0.55", "-78.9671, -144.493, -36.2868, 0.28", "-79.4712, -146.001, -36.6873, 1.11", "-80.83, -149.548, -37.7958, 0.28", "-81.9707, -152.473, -38.6384, 0.55", "-83.1816, -155.314, -39.4591, 0.28", "-84.4411, -158.19, -40.1163, 0.55", "-86.1787, -162.227, -40.8298, 0.28", "-87.3308, -165.036, -41.182, 1.38", "-88.8796, -168.699, -41.2075, 0.28", "-89.8366, -170.96, -40.8966, 1.11", "-91.3609, -174.545, -39.8401, 0.28", "-91.9865, -175.981, -39.1987, 1.11", "-92.8361, -177.927, -38.0933, 0.28", "-94.5463, -182.111, -35.4808, 0.55", "-94.7829, -182.798, -35.0495, 0.55", "-95.4283, -185.397, -33.4882, 0.83", "-95.7758, -187.155, -32.5584, 0.28", "-96.0397, -189.195, -31.6361, 0.83", "-96.0245, -191.149, -30.9736, 0.55", "-95.5957, -194.107, -30.327, 0.55", "-95.3393, -195.502, -30.082, 0.28", "-95.1707, -196.286, -29.9739, 0.55", "-94.5672, -198.733, -29.5886, 0.55", "-94.1493, -200.462, -29.3279, 0.55", "-93.6672, -202.612, -29.0479, 0.28", "-93.3731, -203.984, -28.8389, 0.55", "-92.9485, -205.911, -28.5227, 0.28", "-92.6372, -207.373, -28.214, 0.55", "-92.4443, -208.512, -27.9292, 0.28", "-92.3235, -209.65, -27.7128, 0.55", "-92.2233, -210.875, -27.5616, 0.28", "-92.1558, -211.892, -27.4896, 0.83", "-92.0584, -214.43, -27.4362, 0.28", "-92.0457, -215.604, -27.4121, 1.11", "-92.0704, -218.49, -27.357, 0.28", "-92.0899, -219.938, -27.3934, 0.55", "-92.0995, -221.679, -27.5606, 0.28", "-92.0744, -222.552, -27.6961, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.97392, -23.5089, -5.73268, 0.55", "-8.21353, -22.3483, -5.46569, 0.55", "-9.76447, -21.7439, -4.99417, 0.55", "-13.4829, -20.7906, -3.68202, 0.83", "-16.8734, -20.4245, -2.34947, 0.55", "-19.3064, -20.407, -1.30279, 0.55", "-26.5464, -21.0483, 2.0122, 0.83", "-31.8152, -22.2654, 4.76534, 0.55", "-35.0019, -23.6184, 6.56022, 0.83", "-38.5813, -26.1072, 8.60576, 0.55", "-39.7604, -27.4331, 9.18747, 0.83", "-41.2804, -29.5973, 9.90484, 0.83", "-42.0478, -31.1159, 10.1599, 0.55", "-43.7667, -35.1693, 10.3641, 0.55", "-45.7845, -40.2289, 10.3387, 0.55", "-48.3523, -47.1127, 9.62558, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "39.7715, -57.9973, 27.1023, 0.55", "41.8954, -57.8435, 28.3385, 0.55", "43.1499, -57.762, 28.9502, 0.55", "44.652, -57.7572, 29.568, 0.55", "46.5392, -57.8449, 30.2651, 0.55", "48.8097, -57.9716, 31.0494, 0.55", "50.1991, -58.0467, 31.4926, 0.55", "52.5834, -58.2365, 32.0632, 0.55", "54.6781, -58.4598, 32.3822, 0.55", "55.5389, -58.5864, 32.4525, 0.55", "57.1171, -58.8367, 32.4812, 0.28", "58.1924, -59.0068, 32.481, 0.83", "59.9805, -59.381, 32.4459, 0.55", "61.1475, -59.6459, 32.3936, 0.55", "63.1546, -60.072, 32.2852, 0.55", "63.9901, -60.2321, 32.2453, 0.83", "65.431, -60.4787, 32.1911, 0.55", "66.6305, -60.6657, 32.1907, 0.55", "67.7977, -60.8001, 32.2416, 0.55", "68.653, -60.8539, 32.2653, 0.55", "69.7651, -60.8978, 32.2819, 0.83", "70.9319, -60.8744, 32.328, 0.28", "72.677, -60.8137, 32.4277, 0.28", "73.5002, -60.8071, 32.4768, 0.55", "75.2527, -60.9181, 32.551, 0.28", "76.8959, -61.1914, 32.6325, 0.55", "79.2389, -61.8222, 32.686, 0.28", "79.8443, -62.0368, 32.691, 0.28", "80.9307, -62.4282, 32.7008, 0.55", "82.0132, -62.8876, 32.7087, 0.28", "84.251, -64.0853, 32.7301, 0.83", "85.6999, -65.0791, 32.6832, 0.28", "86.7313, -65.931, 32.5991, 0.55", "93.815, -67.6057, 34.1444, 0.55", "100.611, -70.5179, 35.2478, 0.55", "107.814, -72.3141, 35.8224, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.7715, -57.9973, 27.1023, 0.55", "40.7647, -60.2265, 27.035, 0.55", "41.3269, -61.4089, 26.9701, 0.55", "42.0336, -62.7676, 26.8761, 0.83", "42.872, -64.1564, 26.7848, 0.55", "44.0154, -65.8549, 26.685, 0.83", "44.9999, -67.2592, 26.5983, 0.28", "45.2881, -67.6328, 26.5579, 0.55", "45.9067, -68.4771, 26.4631, 0.28", "46.9149, -70.0407, 26.2612, 0.55", "47.4196, -70.9503, 26.1256, 0.83", "48.3539, -72.9016, 25.8114, 0.83", "48.9943, -74.5616, 25.5337, 0.28", "49.6966, -76.7748, 25.1349, 0.55", "50.127, -78.6399, 24.8054, 0.55", "50.2325, -79.5022, 24.6409, 0.28", "50.2561, -80.1172, 24.4958, 0.55", "50.2178, -81.2404, 24.1323, 0.28", "50.0194, -83.693, 23.1267, 0.55", "49.8535, -85.3762, 22.3106, 0.28", "49.6311, -87.0991, 21.3538, 0.55", "49.3966, -89.1727, 20.0632, 0.83", "49.1903, -90.8448, 18.8758, 0.55", "49.1646, -91.1446, 18.6138, 0.55", "49.1808, -91.5891, 18.1274, 0.28", "49.2985, -92.0633, 17.5617, 0.55", "49.6937, -92.9963, 16.4685, 0.28", "50.2536, -94.1919, 15.2456, 0.55", "50.9235, -95.7465, 13.8925, 0.28", "51.7294, -97.7886, 12.2506, 0.28", "51.9245, -98.358, 11.8146, 0.55", "52.2335, -99.4211, 11.066, 0.28", "52.5743, -100.754, 10.2439, 0.83", "52.8, -101.653, 9.77606, 0.28", "52.8597, -102.076, 9.59983, 0.55", "52.9664, -103.5, 9.07742, 0.28", "53.019, -104.279, 8.77376, 0.55", "53.1316, -105.811, 8.15384, 0.28", "53.1793, -106.415, 7.87817, 0.55", "53.2454, -107.286, 7.49015, 0.28", "53.2787, -108.103, 7.1978, 0.55", "53.2889, -108.789, 7.01626, 0.28", "53.2837, -109.89, 6.79156, 0.55", "53.2636, -110.734, 6.67512, 0.28", "53.2419, -111.501, 6.58054, 0.83", "53.2009, -113.355, 6.39326, 0.28", "53.1486, -115.256, 6.23977, 0.83", "53.1194, -116.972, 6.14879, 0.28", "53.1174, -118.004, 6.11452, 0.55", "54.6496, -124.609, 2.70105, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.08056, -27.5811, -5.19271, 1.11", "-2.36679, -30.048, -4.93422, 1.11", "-2.60122, -32.0685, -4.72252, 1.11", "-3.08007, -36.1956, -4.29008, 0.83", "-3.92481, -43.4762, -3.52721, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.08056, -27.5811, -5.19271, 0.55", "-8.25816, -31.8146, -7.79478, 0.55", "-10.3618, -33.3186, -8.99368, 1.11", "-12.2421, -34.7995, -10.3613, 0.55", "-15.9675, -37.8242, -13.3255, 1.38", "-18.7106, -40.0202, -15.4234, 0.55", "-20.5935, -41.4852, -16.7729, 0.55", "-23.9469, -44.0706, -19.4092, 0.55", "-26.7037, -46.2937, -21.4895, 0.55", "-28.885, -48.1564, -22.9167, 0.55", "-32.1087, -51.0606, -24.5379, 0.83", "-35.5432, -54.3106, -25.8122, 0.55", "-37.2171, -55.8621, -26.1862, 0.55", "-38.9117, -57.3904, -26.3131, 0.83", "-41.3639, -59.6779, -26.1771, 0.28", "-43.2281, -61.6063, -25.9026, 0.55", "-44.1417, -62.6222, -25.7183, 0.55", "-46.5367, -65.3509, -25.066, 0.55", "-47.7913, -66.7398, -24.7253, 0.55", "-49.9977, -69.0156, -24.2995, 0.28", "-51.163, -70.1605, -24.2184, 0.55", "-52.6119, -71.5755, -24.1873, 0.28", "-53.961, -72.8919, -24.1725, 0.83", "-55.5332, -74.4231, -24.1901, 0.28", "-57.3948, -76.087, -24.4419, 0.83", "-59.5094, -77.8995, -24.9599, 0.55", "-60.3539, -78.677, -25.2963, 0.28", "-61.6284, -79.9458, -25.9154, 0.55", "-62.7207, -81.1657, -26.6869, 0.28", "-64.8986, -83.8445, -28.7724, 0.55", "-66.0581, -85.4017, -30.1039, 1.38", "-68.6101, -89.0468, -33.4065, 0.28", "-69.2461, -89.936, -34.3274, 0.83", "-71.627, -93.2257, -37.9688, 0.55", "-73.3535, -95.5565, -40.5894, 1.11", "-74.574, -97.0772, -42.3672, 0.28", "-75.7067, -98.3379, -43.8704, 0.83", "-78.7134, -101.193, -47.2242, 0.28", "-79.7035, -102.017, -48.1783, 0.55", "-81.0339, -102.889, -49.1707, 0.28", "-83.1952, -104.103, -50.489, 0.55", "-84.6734, -104.802, -51.2163, 0.28", "-85.8823, -105.297, -51.7736, 0.28", "-87.6471, -105.961, -52.4929, 0.55", "-91.828, -107.434, -54.3496, 0.28", "-93.2635, -107.917, -54.9831, 0.83", "-95.3166, -108.67, -55.7964, 1.11", "-99.935, -110.464, -57.3876, 0.28", "-100.898, -110.89, -57.674, 0.55", "-104.265, -112.607, -58.466, 0.28", "-105.736, -113.49, -58.6976, 1.11", "-108.202, -115.112, -59.0093, 0.28", "-110.429, -116.76, -59.1186, 0.83", "-112.229, -118.219, -58.9815, 0.28", "-112.766, -118.683, -58.9497, 0.55", "-114.205, -119.961, -58.941, 0.28", "-114.909, -120.548, -59.0408, 0.55", "-117.778, -122.866, -59.7137, 0.28", "-118.515, -123.431, -60.0621, 0.55", "-121.401, -125.525, -61.707, 0.28", "-123.434, -127.008, -62.8469, 0.83", "-126.203, -129.202, -64.799, 0.28", "-127.144, -130.006, -65.547, 0.83", "-131.958, -134.594, -70.2102, 0.28", "-132.906, -135.598, -71.2201, 0.55", "-135.142, -138.467, -73.7988, 0.83", "-139.363, -144.896, -78.7661, 0.28", "-140.021, -146.067, -79.5969, 0.83", "-142.542, -151.157, -82.8036, 0.28", "-142.897, -152.099, -83.2695, 0.83", "-144.051, -155.56, -84.9373, 0.28", "-144.323, -156.481, -85.3594, 0.55", "-144.973, -159.345, -86.1805, 0.28", "-145.396, -161.744, -86.7796, 0.55", "-145.979, -166.97, -87.6797, 0.28", "-146.058, -167.849, -87.8534, 0.55", "-146.292, -170.491, -88.3792, 0.28", "-146.385, -171.219, -88.5253, 0.55", "-146.833, -173.854, -88.9638, 0.28", "-147.099, -174.8, -89.1731, 0.55", "-147.954, -177.064, -89.6772, 0.28", "-148.497, -178.205, -89.9484, 0.83", "-150.985, -182.413, -90.9125, 0.28", "-151.935, -183.718, -91.2619, 0.55", "-154.724, -186.889, -92.101, 0.28", "-155.359, -187.498, -92.2611, 0.55", "-156.944, -188.798, -92.5805, 0.28", "-158.048, -189.574, -92.7448, 0.55", "-160.137, -190.598, -93.0562, 0.28", "-162.023, -191.342, -93.3736, 0.55", "-164.762, -192.243, -93.7074, 0.28", "-166.276, -192.715, -93.9304, 0.55", "-168.139, -193.271, -94.2731, 0.28", "-173.104, -194.669, -95.3091, 0.28", "-174.633, -195.051, -95.6385, 0.28", "-176.517, -195.406, -96.1708, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-48.3523, -47.1127, 9.62558, 0.55", "-48.0063, -49.3083, 8.65242, 0.55", "-47.5729, -52.0935, 7.59537, 0.55", "-46.9586, -55.4417, 6.36352, 0.83", "-46.3202, -58.7905, 5.19726, 0.83", "-46.0312, -60.4436, 4.65881, 0.28", "-45.8886, -61.4121, 4.3437, 0.83", "-45.5909, -63.3813, 3.70734, 0.83", "-45.1688, -66.5384, 2.67674, 0.28", "-45.1139, -67.4442, 2.45633, 0.28", "-45.1903, -68.9532, 2.1093, 0.55", "-45.4049, -71.395, 1.35987, 0.28", "-45.4737, -71.9454, 1.17941, 0.55", "-45.8393, -74.1851, 0.464031, 0.28", "-46.1075, -75.5268, 0.161169, 0.83", "-46.5484, -77.6192, -0.231064, 0.28", "-47.219, -80.2811, -0.551223, 0.55", "-47.8077, -82.2419, -0.622066, 0.55", "-48.3635, -83.5212, -0.593742, 0.55", "-49.7474, -85.6624, -0.311527, 0.83", "-50.7517, -86.9572, -0.0525828, 0.83", "-52.0199, -88.2768, 0.333828, 0.28", "-52.7026, -88.8997, 0.535473, 0.55", "-55.1935, -91.0002, 1.22253, 0.83", "-57.1939, -92.4977, 1.78264, 0.28", "-57.7392, -92.8751, 1.93449, 0.55", "-58.5263, -93.4481, 2.15502, 0.28", "-59.6118, -94.3049, 2.44996, 0.55", "-61.5251, -96.1164, 2.81543, 0.55", "-62.8118, -97.6025, 2.90188, 0.28", "-63.5137, -98.4947, 2.81044, 0.83", "-64.5937, -99.8992, 2.52199, 0.28", "-65.0248, -100.47, 2.37076, 0.28", "-67.0804, -103.034, 1.72051, 0.83", "-68.7023, -105.011, 1.19115, 0.28", "-70.0795, -106.765, 0.850848, 0.83", "-70.813, -107.708, 0.746827, 0.28", "-71.4896, -108.55, 0.69951, 0.83", "-73.6357, -111.049, 0.736227, 0.28", "-73.962, -111.396, 0.826285, 1.11", "-75.4987, -113.219, 1.64984, 0.55", "-76.3833, -114.271, 2.35798, 1.11", "-79.964, -121.73, 1.40759, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-48.3523, -47.1127, 9.62558, 0.55", "-49.6342, -49.9302, 13.4902, 0.55", "-50.4885, -52.2014, 16.1705, 0.55", "-52.0918, -56.5438, 20.6661, 0.55", "-53.2156, -59.5877, 23.8174, 0.55", "-54.0807, -61.9306, 26.243, 0.55", "-55.4647, -65.6791, 30.1237, 0.55", "-56.1608, -67.1692, 31.7503, 0.55", "-57.6428, -70.9972, 35.2559, 0.55", "-59.1364, -76.4376, 45.0874, 0.55", "-60.535, -83.323, 54.0852, 0.55", "-63.2049, -90.5014, 62.5734, 0.55", "-65.1759, -97.4081, 71.4491, 0.55", "-65.5958, -104.68, 80.2646, 0.55", "-67.5323, -111.026, 89.5176, 0.55", "-69.1768, -115.386, 99.7889, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "107.814, -72.3141, 35.8224, 0.55", "117.573, -74.8059, 36.2731, 0.55", "127.436, -75.7436, 38.0311, 0.55", "137.394, -75.0902, 39.3465, 0.55", "147.264, -74.2228, 41.132, 0.55", "156.929, -71.6131, 42.479, 0.55", "166.21, -67.679, 43.6158, 0.55", "174.283, -62.0301, 46.3338, 0.55", "182.658, -56.5911, 48.4658, 0.55", "190.346, -49.8963, 49.8084, 0.55", "198.571, -43.7855, 50.019, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "107.814, -72.3141, 35.8224, 0.55", "119.678, -75.3205, 36.1245, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "54.6496, -124.609, 2.70105, 0.55", "56.9764, -134.878, -1.03613, 0.55", "59.8708, -145.05, -4.62036, 0.55", "61.9968, -155.3, -8.52438, 0.55", "64.0009, -165.044, -13.5646, 0.55", "67.8312, -173.319, -19.8451, 0.55", "71.584, -181.294, -26.5193, 0.55", "76.6317, -188.114, -33.4971, 0.55", "81.1512, -195.079, -40.7064, 0.55", "87.9984, -201.41, -46.4367, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "54.6496, -124.609, 2.70105, 0.55", "55.3054, -133.487, 0.911798, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.92481, -43.4762, -3.52721, 0.83", "-3.75056, -47.25, -2.8531, 0.83", "-3.90521, -50.3891, -2.29306, 0.83", "-4.32953, -54.6302, -1.43947, 0.83", "-4.76291, -58.9598, -0.609456, 0.83", "-5.06219, -62.5093, 0.0272752, 0.83", "-5.29411, -66.1137, 0.597635, 0.83", "-5.56226, -71.1875, 1.25479, 0.83", "-5.81474, -75.3214, 1.70203, 0.83", "-6.2251, -80.8416, 2.08848, 0.83", "-6.36154, -83.2665, 2.15576, 0.55", "-6.39759, -86.068, 2.07632, 1.11", "-6.29615, -89.437, 1.85694, 0.55", "-5.963, -93.6984, 1.38448, 1.11", "-5.75461, -96.5138, 0.917678, 0.55", "-5.65715, -99.5261, 0.35507, 0.83", "-5.66738, -102.159, -0.154799, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.92481, -43.4762, -3.52721, 0.55", "-3.32804, -46.0684, -2.68167, 0.55", "-3.06107, -47.4989, -2.05873, 0.28", "-2.93289, -48.2725, -1.72702, 0.83", "-2.34933, -51.384, -0.206405, 0.55", "-1.78761, -54.91, 1.54799, 0.55", "-0.557761, -63.5266, 5.69508, 0.83", "-0.160333, -66.3078, 7.08158, 0.55", "0.535473, -70.8208, 9.33383, 0.55", "1.39894, -75.9954, 11.8767, 0.28", "1.96924, -79.2222, 13.4513, 0.55", "2.48525, -82.018, 14.7219, 0.55", "3.29389, -86.0379, 16.2054, 0.55", "3.69626, -87.6222, 16.7798, 0.28", "4.94379, -91.8293, 18.362, 0.83", "5.77706, -94.3063, 19.2228, 0.28", "6.71511, -96.7603, 20.0985, 0.83", "7.66207, -99.2982, 21.0192, 0.28", "8.04047, -100.391, 21.3969, 0.55", "9.04752, -103.589, 22.7313, 0.28", "9.56976, -105.369, 23.6347, 0.83", "10.0922, -107.209, 25.0527, 0.55", "11.0106, -110.603, 28.1492, 0.28", "11.3566, -112.065, 29.5343, 1.11", "12.4082, -116.63, 34.1492, 0.28", "12.9057, -118.883, 36.6121, 0.55", "14.3619, -125.237, 44.3068, 0.28", "14.7691, -126.843, 46.4906, 0.83", "15.3647, -129.138, 50.0325, 0.28", "16.4657, -141.135, 56.839, 0.28", "16.189, -154.35, 61.2717, 0.28", "14.4023, -167.213, 66.2546, 0.28", "11.8009, -179.354, 72.3863, 0.28", "9.63276, -190.361, 80.352, 0.28", "6.19548, -200.355, 89.0475, 0.28", "2.59628, -209.085, 98.8435, 0.28", "-0.180033, -218.15, 108.631, 0.28", "-1.56878, -228.033, 117.985, 0.28", "-3.23125, -236.785, 128.272, 0.28", "-5.27836, -246.104, 138.023, 0.28", "-5.80143, -255.507, 147.901, 0.28", "-3.93787, -264.058, 158.308, 0.28", "-2.22723, -274.556, 166.979, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.66738, -102.159, -0.154799, 0.55", "-4.61574, -104.107, -0.322457, 0.55", "-3.8921, -105.991, -0.582021, 0.28", "-3.56209, -107.252, -0.740921, 0.83", "-3.30651, -108.55, -0.881788, 0.28", "-2.53759, -112.841, -1.34407, 0.83", "-2.17619, -114.759, -1.56128, 0.55", "-1.71097, -117.402, -1.95003, 0.83", "-1.14131, -120.314, -2.44449, 0.83", "-0.758911, -122.115, -2.78279, 0.55", "-0.379217, -123.738, -3.09981, 0.55", "0.354205, -126.447, -3.69, 0.83", "1.16223, -129.272, -4.38032, 0.55", "2.39465, -133.481, -5.48547, 0.55", "2.79586, -135.05, -5.91778, 0.28", "3.22742, -137.357, -6.51125, 0.83", "3.51956, -139.926, -7.08651, 0.83", "3.61065, -142.048, -7.42327, 0.55", "3.5986, -143.975, -7.6047, 0.55", "3.4947, -147.955, -7.78009, 0.55", "3.48282, -149.878, -7.74711, 0.83", "3.52743, -152.331, -7.60118, 0.83", "3.75636, -155.946, -7.22888, 0.55", "4.02945, -158.316, -6.92385, 0.55", "4.29699, -159.889, -6.72548, 0.83", "4.8568, -162.412, -6.44417, 0.28", "4.99888, -162.974, -6.40904, 0.55", "5.6364, -165.511, -6.35518, 0.28", "5.95897, -166.79, -6.39892, 0.55", "6.32816, -168.29, -6.49053, 0.28", "6.98185, -171.161, -6.73393, 1.66", "7.75335, -174.836, -7.08778, 0.83", "8.00642, -176.119, -7.1898, 1.11", "8.31281, -177.781, -7.28928, 0.55", "8.70109, -179.51, -7.33028, 0.28", "8.96468, -180.528, -7.31082, 0.83", "9.3811, -181.889, -7.21405, 0.28", "9.73113, -182.876, -7.0651, 0.55", "10.2891, -184.339, -6.84915, 0.28", "11.2964, -186.679, -6.37599, 0.28", "12.5675, -189.539, -5.73999, 0.83", "13.135, -190.758, -5.42682, 0.55", "14.2896, -193.346, -4.73543, 0.55", "15.4611, -195.933, -4.06137, 0.83", "17.3474, -200.349, -2.90665, 0.55", "18.1405, -202.26, -2.38318, 0.55", "19.4002, -205.206, -1.50787, 0.55", "20.3755, -207.295, -0.817523, 0.55", "21.5751, -209.674, 0.0193892, 0.55", "22.7803, -211.867, 0.94724, 0.55", "23.8927, -213.782, 1.73717, 0.55", "25.0862, -215.744, 2.56588, 0.55", "27.4017, -219.455, 4.14817, 0.55", "27.9998, -220.361, 4.55503, 0.55", "29.3771, -222.54, 5.51346, 0.83", "30.2751, -223.969, 6.01751, 0.28", "31.0009, -225.314, 6.39292, 0.83", "31.9693, -227.27, 6.81322, 0.28", "32.3953, -228.301, 6.99056, 0.55", "33.1796, -230.205, 7.35441, 0.28", "33.76, -231.598, 7.62425, 0.83", "34.8031, -234.104, 8.21732, 0.28", "35.3617, -235.494, 8.56269, 0.55", "36.1612, -237.718, 9.11031, 0.55", "36.688, -239.394, 9.50149, 0.55", "37.2589, -241.212, 9.7981, 0.28", "37.6313, -242.328, 9.86965, 0.28", "38.4075, -244.482, 9.77073, 0.83", "39.0078, -246.104, 9.58179, 0.55", "40.2524, -249.336, 8.97742, 0.55", "41.5464, -252.51, 8.25459, 0.55", "42.5037, -254.789, 7.67988, 0.28", "43.2733, -256.698, 7.19088, 0.55", "44.1923, -259.266, 6.55945, 0.55", "45.0434, -262.306, 5.98995, 0.55", "45.3754, -263.949, 5.8209, 0.83", "45.5246, -265.553, 5.82377, 0.83", "45.5355, -267.671, 5.98231, 0.55", "45.3873, -269.428, 6.16684, 0.83", "44.9361, -272.424, 6.58682, 0.28", "44.8092, -273.178, 6.71278, 0.55", "44.6103, -274.699, 6.95807, 0.28", "44.5157, -276.122, 7.15096, 0.55", "44.5249, -278.657, 7.39727, 0.28", "44.5885, -279.347, 7.46458, 0.83", "44.9108, -281.904, 7.70067, 0.28", "45.0872, -283.21, 7.82292, 0.55", "45.3167, -285.127, 7.96675, 0.28", "45.4571, -286.192, 8.05856, 0.83", "46.0361, -290.746, 8.5056, 0.28", "46.2149, -292.898, 8.7003, 0.55", "46.242, -294.492, 8.85244, 0.55", "46.2374, -296.829, 9.10091, 0.55", "48.4085, -306.113, 8.30523, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.66738, -102.159, -0.154799, 0.83", "-5.61047, -105.166, -0.331689, 0.83", "-5.56882, -108.015, -0.547849, 0.28", "-5.56665, -109.854, -0.88693, 1.11", "-5.66102, -112.543, -1.33888, 0.28", "-5.73475, -113.286, -1.46447, 0.55", "-6.00409, -115.102, -1.74955, 0.28", "-6.08036, -115.496, -1.80173, 0.55", "-6.73637, -118.989, -2.23881, 0.28", "-7.40357, -121.766, -3.03041, 0.83", "-8.07499, -124.133, -3.94854, 0.28", "-8.54658, -125.714, -4.57213, 0.55", "-9.76361, -129.696, -6.13563, 0.28", "-10.2248, -131.169, -6.75364, 0.83", "-12.5947, -138.476, -10.1947, 0.28", "-12.9206, -139.487, -10.8428, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.9206, -139.487, -10.8428, 0.28", "-11.6273, -143.684, -8.69211, 0.28", "-11.3986, -144.426, -8.31184, 0.83", "-10.6849, -146.742, -7.12506, 0.28", "-10.5751, -147.098, -6.94248, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.9206, -139.487, -10.8428, 0.28", "-12.4697, -143.207, -9.16943, 0.28", "-12.2722, -145.202, -8.4728, 0.83", "-12.0253, -148.351, -7.59476, 0.28", "-11.9847, -149.009, -7.43804, 0.83", "-11.8582, -151.155, -6.97045, 0.28", "-11.7936, -152.449, -6.72684, 0.55", "-11.771, -154.971, -6.47035, 0.28", "-11.7826, -156.782, -6.23954, 0.83", "-11.804, -158.325, -6.03241, 0.28", "-11.8002, -159.019, -5.88991, 0.55", "-11.737, -162.243, -5.02212, 0.28", "-11.7219, -162.548, -4.91778, 0.55", "-11.4196, -165.945, -3.61772, 0.28", "-11.1542, -167.88, -2.71099, 0.83", "-10.568, -170.88, -1.11492, 0.28", "-10.3418, -171.836, -0.520662, 0.55", "-9.74433, -173.72, 0.598272, 0.28", "-9.27179, -175.009, 1.28202, 0.28", "-8.14222, -177.746, 2.49633, 0.55", "-7.11218, -180.219, 3.41201, 0.28", "-6.16592, -182.622, 4.04608, 0.55", "-4.40761, -187.565, 4.7653, 0.28", "-4.03486, -188.791, 4.8064, 0.55", "-3.60797, -190.359, 4.71418, 0.28", "-3.3273, -191.613, 4.50249, 0.55", "-2.87628, -194.107, 3.9049, 0.28", "-2.62644, -196.118, 3.39983, 0.55", "-2.55427, -198.411, 3.00336, 0.28", "-2.55389, -199.055, 2.91624, 0.55", "-2.55853, -200.573, 2.79921, 0.28", "-2.54304, -201.603, 2.75606, 0.83", "-2.50358, -204.383, 2.68232, 0.28", "-2.47683, -205.354, 2.69723, 0.55", "-2.39681, -208.346, 2.71806, 0.28", "-2.33831, -211.164, 2.81591, 0.28", "-2.30791, -212.256, 2.87864, 0.55", "0.39197, -222.419, 5.88405, 0.55", "1.71124, -232.554, 9.77674, 0.55", "3.20402, -242.475, 14.0836, 0.55", "4.9105, -251.112, 20.3689, 0.55", "7.14141, -259.939, 26.2354, 0.55", "8.09457, -268.773, 32.433, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_40", "dend_27", "dend_22", "dend_17", "dend_0", "dend_42", "dend_41", "dend_37", "dend_28", "dend_24", "dend_23", "dend_21", "dend_18", "dend_6", "dend_1", "dend_39", "dend_38", "dend_36", "dend_29", "dend_26", "dend_25", "dend_20", "dend_19", "dend_8", "dend_7", "dend_5", "dend_2", "dend_33", "dend_30", "dend_10", "dend_9", "dend_4", "dend_3", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_11", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_40", "dend_27", "dend_22", "dend_17", "dend_0", "dend_42", "dend_41", "dend_37", "dend_28", "dend_24", "dend_23", "dend_21", "dend_18", "dend_6", "dend_1", "dend_39", "dend_38", "dend_36", "dend_29", "dend_26", "dend_25", "dend_20", "dend_19", "dend_8", "dend_7", "dend_5", "dend_2", "dend_33", "dend_30", "dend_10", "dend_9", "dend_4", "dend_3", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_11", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_40", "dend_27", "dend_22", "dend_17", "dend_0", "axon_0", "dend_42", "dend_41", "dend_37", "dend_28", "dend_24", "dend_23", "dend_21", "dend_18", "dend_6", "dend_1", "axon_1", "dend_39", "dend_38", "dend_36", "dend_29", "dend_26", "dend_25", "dend_20", "dend_19", "dend_8", "dend_7", "dend_5", "dend_2", "dend_33", "dend_30", "dend_10", "dend_9", "dend_4", "dend_3", "dend_35", "dend_34", "dend_32", "dend_31", "dend_12", "dend_11", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "axon_0", "axon_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_NBC_f53cc303cc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, axon_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, axon_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_0, axon_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4999992531229967)
    connect dend_40(0), soma_0(0.4999992531229967)
    connect dend_27(0), soma_0(0.4999992531229967)
    connect dend_22(0), soma_0(0.4999992531229967)
    connect dend_17(0), soma_0(0.4999992531229967)
    connect dend_0(0), soma_0(0.4999992531229967)
    connect axon_0(0), soma_0(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.0394349, -10.0153, -0.17743, 2.95112 ) }
    soma_0 { pt3dadd( -0.0532529, -8.94556, -0.157727, 3.04845 ) }
    soma_0 { pt3dadd( -0.067071, -7.87582, -0.138025, 3.53426 ) }
    soma_0 { pt3dadd( -0.0808891, -6.80608, -0.118322, 4.26608 ) }
    soma_0 { pt3dadd( -0.0947072, -5.73635, -0.0986193, 5.29686 ) }
    soma_0 { pt3dadd( -0.108525, -4.66661, -0.0789167, 6.86463 ) }
    soma_0 { pt3dadd( -0.122343, -3.59687, -0.0592141, 8.27645 ) }
    soma_0 { pt3dadd( -0.136161, -2.52713, -0.0395115, 8.22963 ) }
    soma_0 { pt3dadd( -0.14998, -1.45739, -0.0198089, 8.18256 ) }
    soma_0 { pt3dadd( -0.163798, -0.387654, -1.06305E-4, 8.13086 ) }
    soma_0 { pt3dadd( -0.177616, 0.682084, 0.0195963, 8.16843 ) }
    soma_0 { pt3dadd( -0.191434, 1.75182, 0.0392989, 8.48334 ) }
    soma_0 { pt3dadd( -0.205252, 2.82156, 0.0590015, 9.11876 ) }
    soma_0 { pt3dadd( -0.21907, 3.8913, 0.0787041, 9.87 ) }
    soma_0 { pt3dadd( -0.232888, 4.96104, 0.0984067, 10.1451 ) }
    soma_0 { pt3dadd( -0.246706, 6.03077, 0.118109, 9.46254 ) }
    soma_0 { pt3dadd( -0.260524, 7.10051, 0.137812, 8.70667 ) }
    soma_0 { pt3dadd( -0.274342, 8.17025, 0.157515, 7.77276 ) }
    soma_0 { pt3dadd( -0.28816, 9.23999, 0.177217, 6.5331 ) }
    soma_0 { pt3dadd( -0.301978, 10.3097, 0.19692, 4.93174 ) }
    soma_0 { pt3dadd( -0.315796, 11.3795, 0.216622, 2.75051 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.11174, 6.96407, -10.8018, 1.11 ) }
    dend_43 { pt3dadd( -3.26543, 11.7914, -14.6795, 1.11 ) }
    dend_43 { pt3dadd( -3.68816, 13.3186, -16.036, 0.28 ) }
    dend_43 { pt3dadd( -4.24024, 15.3255, -17.7175, 1.11 ) }
    dend_43 { pt3dadd( -6.08692, 21.2801, -22.8386, 0.55 ) }
    dend_43 { pt3dadd( -7.1035, 24.1279, -25.2909, 0.28 ) }
    dend_43 { pt3dadd( -7.76068, 25.7976, -26.8402, 0.83 ) }
    dend_43 { pt3dadd( -8.84727, 28.1274, -29.2258, 0.28 ) }
    dend_43 { pt3dadd( -9.95208, 30.311, -31.5396, 1.66 ) }
    dend_43 { pt3dadd( -12.3696, 34.8193, -36.245, 0.28 ) }
    dend_43 { pt3dadd( -13.0281, 36.0518, -37.3986, 0.83 ) }
    dend_43 { pt3dadd( -15.2871, 40.6064, -41.5888, 0.28 ) }
    dend_43 { pt3dadd( -16.5809, 43.2084, -43.9886, 0.55 ) }
    dend_43 { pt3dadd( -18.0819, 45.8683, -46.4256, 0.28 ) }
    dend_43 { pt3dadd( -19.1189, 47.4234, -47.9917, 1.66 ) }
    dend_43 { pt3dadd( -21.2501, 50.2809, -50.9186, 0.28 ) }
    dend_43 { pt3dadd( -21.5924, 50.6863, -51.4098, 0.55 ) }
    dend_43 { pt3dadd( -23.2169, 52.3698, -53.7025, 0.28 ) }
    dend_43 { pt3dadd( -24.7575, 53.7967, -55.977, 0.55 ) }
    dend_43 { pt3dadd( -27.6221, 56.0545, -60.5253, 0.28 ) }
    dend_43 { pt3dadd( -29.8024, 57.4014, -64.0251, 0.83 ) }
    dend_43 { pt3dadd( -33.4188, 59.0553, -70.0424, 0.55 ) }
    dend_43 { pt3dadd( -34.3815, 59.4176, -71.6753, 0.28 ) }
    dend_43 { pt3dadd( -35.2131, 59.599, -73.1348, 0.55 ) }
    dend_43 { pt3dadd( -38.7976, 59.8988, -79.347, 0.28 ) }
    dend_43 { pt3dadd( -40.0447, 59.7231, -81.2632, 0.83 ) }
    dend_43 { pt3dadd( -43.1471, 58.7764, -85.2471, 0.28 ) }
    dend_43 { pt3dadd( -43.6278, 58.5941, -85.7639, 0.55 ) }
    dend_43 { pt3dadd( -47.6219, 57.0476, -89.575, 0.28 ) }
    dend_43 { pt3dadd( -49.7367, 56.2711, -91.3657, 0.83 ) }
    dend_43 { pt3dadd( -51.935, 55.5477, -92.9469, 0.28 ) }
    dend_43 { pt3dadd( -55.0753, 54.6248, -95.3269, 0.83 ) }
    dend_43 { pt3dadd( -59.7364, 53.3889, -98.7236, 0.28 ) }
    dend_43 { pt3dadd( -61.4478, 53.0416, -100.065, 0.83 ) }
    dend_43 { pt3dadd( -62.6237, 52.894, -101.011, 0.28 ) }
    dend_43 { pt3dadd( -64.5301, 52.968, -102.701, 0.83 ) }
    dend_43 { pt3dadd( -69.78, 53.9762, -107.575, 0.28 ) }
    dend_43 { pt3dadd( -71.0842, 54.3861, -108.796, 0.55 ) }
    dend_43 { pt3dadd( -75.7651, 56.3166, -113.079, 0.28 ) }
    dend_43 { pt3dadd( -76.5729, 56.6968, -113.791, 1.11 ) }
    dend_43 { pt3dadd( -83.2906, 60.208, -119.379, 0.28 ) }
    dend_43 { pt3dadd( -84.9332, 61.1862, -120.635, 0.83 ) }
    dend_43 { pt3dadd( -87.3604, 62.8003, -122.182, 0.28 ) }
    dend_43 { pt3dadd( -87.7817, 63.0936, -122.422, 0.55 ) }
    dend_43 { pt3dadd( -90.0961, 64.6284, -123.426, 0.28 ) }
    dend_43 { pt3dadd( -90.6663, 64.9662, -123.623, 0.55 ) }
    dend_43 { pt3dadd( -92.8032, 66.0154, -124.065, 0.28 ) }
    dend_43 { pt3dadd( -93.9144, 66.643, -124.211, 0.55 ) }
    dend_43 { pt3dadd( -97.3344, 68.8821, -124.421, 0.28 ) }
    dend_43 { pt3dadd( -99.4764, 70.3185, -124.529, 0.55 ) }
    dend_43 { pt3dadd( -102.527, 72.4688, -124.636, 0.28 ) }
    dend_43 { pt3dadd( -103.465, 73.1424, -124.622, 0.55 ) }
    dend_43 { pt3dadd( -107.589, 76.1592, -124.263, 0.28 ) }
    dend_43 { pt3dadd( -108.22, 76.6489, -124.178, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 75/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.67826, -0.144428, -8.93177, 0.55 ) }
    dend_40 { pt3dadd( 4.39468, -2.14702, -8.92405, 0.55 ) }
    dend_40 { pt3dadd( 5.32513, -5.02896, -8.9251, 0.55 ) }
    dend_40 { pt3dadd( 5.87652, -6.98496, -8.9244, 0.28 ) }
    dend_40 { pt3dadd( 6.42913, -9.18506, -8.93095, 1.11 ) }
    dend_40 { pt3dadd( 7.07393, -11.7521, -8.93858, 0.55 ) }
    dend_40 { pt3dadd( 7.55006, -13.6477, -8.94422, 0.28 ) }
    dend_40 { pt3dadd( 7.75772, -14.6735, -8.94963, 0.83 ) }
    dend_40 { pt3dadd( 8.04401, -16.7998, -8.97003, 0.28 ) }
    dend_40 { pt3dadd( 8.22931, -18.6842, -9.00229, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 85/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.18174, 6.62807, 19.5482, 0.83 ) }
    dend_27 { pt3dadd( -3.5781, 7.40627, 19.5482, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 87/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 4.73826, 4.23407, -9.36177, 1.38 ) }
    dend_22 { pt3dadd( 7.112, 4.32392, -10.6404, 1.38 ) }
    dend_22 { pt3dadd( 10.3135, 4.7212, -12.0417, 1.66 ) }
    dend_22 { pt3dadd( 13.1794, 5.07683, -13.2961, 1.66 ) }
    dend_22 { pt3dadd( 17.969, 5.67118, -15.3924, 1.66 ) }
    dend_22 { pt3dadd( 23.5451, 6.36313, -17.833, 0.83 ) }
    dend_22 { pt3dadd( 25.1728, 6.56512, -18.5455, 0.28 ) }
    dend_22 { pt3dadd( 30.5773, 7.04734, -21.4264, 1.94 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 95/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.93174, -7.00093, -2.10177, 1.11 ) }
    dend_17 { pt3dadd( -4.89237, -8.6999, -5.33285, 1.11 ) }
    dend_17 { pt3dadd( -6.69458, -11.4096, -10.3541, 0.83 ) }
    dend_17 { pt3dadd( -7.85586, -12.9814, -13.1557, 1.66 ) }
    dend_17 { pt3dadd( -12.4142, -18.3295, -22.2635, 1.94 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_17 { pt3dadd( -15.6103, -21.9849, -27.9974, 0.83 ) }
    dend_17 { pt3dadd( -16.6246, -23.1689, -29.7085, 0.83 ) }
    dend_17 { pt3dadd( -18.3116, -24.9056, -32.1939, 0.55 ) }
    dend_17 { pt3dadd( -19.5135, -25.9512, -33.4699, 0.83 ) }
    dend_17 { pt3dadd( -22.4676, -28.1527, -35.5032, 0.55 ) }
    dend_17 { pt3dadd( -24.695, -29.7504, -36.2856, 0.55 ) }
    dend_17 { pt3dadd( -26.9932, -31.453, -36.8429, 0.28 ) }
    dend_17 { pt3dadd( -29.9454, -33.6543, -37.6311, 0.55 ) }
    dend_17 { pt3dadd( -32.31, -35.4778, -38.3739, 0.55 ) }
    dend_17 { pt3dadd( -35.8953, -38.2075, -39.5741, 0.55 ) }
    dend_17 { pt3dadd( -41.0077, -42.0003, -41.4557, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 11/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.23174, -11.9779, -1.27177, 3.6 ) }
    dend_0 { pt3dadd( -1.2459, -13.454, -1.22072, 3.6 ) }
    dend_0 { pt3dadd( -1.26998, -15.9645, -1.13389, 4.16 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 14/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.315796, 11.3795, 0.216622, 0.83 ) }
    axon_0 { pt3dadd( -0.509538, 26.3783, 0.216622, 0.83 ) }
    axon_0 { pt3dadd( -0.70328, 41.377, 0.216622, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 17/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 8.22931, -18.6842, -9.00229, 0.28 ) }
    dend_42 { pt3dadd( 8.58791, -21.5389, -11.2762, 0.28 ) }
    dend_42 { pt3dadd( 8.59287, -22.3092, -12.0251, 0.28 ) }
    dend_42 { pt3dadd( 8.51226, -24.6362, -14.2141, 0.83 ) }
    dend_42 { pt3dadd( 8.34827, -26.408, -16.5404, 1.38 ) }
    dend_42 { pt3dadd( 7.89015, -29.6148, -20.9979, 0.55 ) }
    dend_42 { pt3dadd( 7.59475, -31.0931, -23.2356, 1.11 ) }
    dend_42 { pt3dadd( 6.72322, -34.1419, -28.4318, 0.55 ) }
    dend_42 { pt3dadd( 6.26809, -35.4003, -30.7678, 1.66 ) }
    dend_42 { pt3dadd( 4.02089, -40.9569, -41.3007, 0.28 ) }
    dend_42 { pt3dadd( 3.57914, -41.9902, -43.3994, 0.83 ) }
    dend_42 { pt3dadd( 2.55018, -44.5584, -48.7291, 0.28 ) }
    dend_42 { pt3dadd( 2.22938, -45.4269, -50.5422, 0.83 ) }
    dend_42 { pt3dadd( 1.33054, -48.0729, -55.7962, 0.28 ) }
    dend_42 { pt3dadd( 0.970292, -49.3007, -58.1667, 1.66 ) }
    dend_42 { pt3dadd( 0.156141, -53.6162, -65.0548, 0.28 ) }
    dend_42 { pt3dadd( 0.0955572, -54.1399, -65.8624, 0.55 ) }
    dend_42 { pt3dadd( 0.0419652, -54.9565, -66.9553, 0.28 ) }
    dend_42 { pt3dadd( 0.00251234, -55.5813, -67.7214, 0.83 ) }
    dend_42 { pt3dadd( -0.369335, -59.7109, -72.0692, 0.28 ) }
    dend_42 { pt3dadd( -0.590105, -61.0318, -73.3171, 0.83 ) }
    dend_42 { pt3dadd( -1.13583, -63.5253, -75.1711, 0.28 ) }
    dend_42 { pt3dadd( -1.53935, -64.9912, -76.1702, 0.55 ) }
    dend_42 { pt3dadd( -2.44487, -67.8075, -77.8913, 0.28 ) }
    dend_42 { pt3dadd( -3.15344, -69.7762, -78.8518, 1.11 ) }
    dend_42 { pt3dadd( -4.72979, -73.7421, -80.2096, 0.28 ) }
    dend_42 { pt3dadd( -5.24539, -74.997, -80.5936, 0.55 ) }
    dend_42 { pt3dadd( -5.87176, -76.5647, -80.9622, 0.28 ) }
    dend_42 { pt3dadd( -6.28161, -77.7009, -81.2337, 0.55 ) }
    dend_42 { pt3dadd( -7.11077, -80.3043, -81.796, 0.28 ) }
    dend_42 { pt3dadd( -7.5026, -81.7692, -82.1602, 0.83 ) }
    dend_42 { pt3dadd( -8.05276, -84.3706, -82.8145, 0.28 ) }
    dend_42 { pt3dadd( -8.36392, -86.1869, -83.3004, 1.11 ) }
    dend_42 { pt3dadd( -8.89023, -89.7225, -84.2864, 0.28 ) }
    dend_42 { pt3dadd( -9.03519, -90.697, -84.5607, 0.55 ) }
    dend_42 { pt3dadd( -9.57465, -93.9551, -85.4224, 0.28 ) }
    dend_42 { pt3dadd( -9.79329, -95.3257, -85.778, 0.83 ) }
    dend_42 { pt3dadd( -10.3737, -99.0429, -86.6417, 0.28 ) }
    dend_42 { pt3dadd( -10.4916, -99.7753, -86.8285, 0.55 ) }
    dend_42 { pt3dadd( -11.0762, -103.009, -87.6401, 0.28 ) }
    dend_42 { pt3dadd( -11.656, -106.107, -88.5279, 1.66 ) }
    dend_42 { pt3dadd( -12.5184, -110.571, -89.9134, 0.28 ) }
    dend_42 { pt3dadd( -12.8807, -112.502, -90.6664, 0.55 ) }
    dend_42 { pt3dadd( -13.4715, -115.786, -92.1593, 0.28 ) }
    dend_42 { pt3dadd( -13.6273, -116.612, -92.6109, 1.11 ) }
    dend_42 { pt3dadd( -14.2242, -119.531, -94.4469, 0.28 ) }
    dend_42 { pt3dadd( -14.4193, -120.417, -95.0432, 0.55 ) }
    dend_42 { pt3dadd( -15.2663, -124.036, -97.32, 0.28 ) }
    dend_42 { pt3dadd( -15.5572, -125.377, -98.0587, 0.83 ) }
    dend_42 { pt3dadd( -16.264, -129.176, -99.8446, 0.28 ) }
    dend_42 { pt3dadd( -16.5737, -131.09, -100.649, 0.83 ) }
    dend_42 { pt3dadd( -16.862, -133.289, -101.499, 0.28 ) }
    dend_42 { pt3dadd( -17.2132, -136.518, -102.624, 0.28 ) }
    dend_42 { pt3dadd( -17.4498, -139.22, -103.379, 1.11 ) }
    dend_42 { pt3dadd( -17.5845, -141.904, -104.074, 0.28 ) }
    dend_42 { pt3dadd( -17.6387, -143.6, -104.448, 0.55 ) }
    dend_42 { pt3dadd( -17.7936, -147.004, -105.227, 0.28 ) }
    dend_42 { pt3dadd( -17.8837, -148.376, -105.543, 0.83 ) }
    dend_42 { pt3dadd( -18.0315, -150.344, -106.204, 0.83 ) }
    dend_42 { pt3dadd( -18.1658, -151.952, -106.827, 0.83 ) }
    dend_42 { pt3dadd( -18.6624, -155.555, -108.489, 0.28 ) }
    dend_42 { pt3dadd( -19.2742, -158.913, -110.198, 0.28 ) }
    dend_42 { pt3dadd( -19.5756, -160.131, -110.892, 1.11 ) }
    dend_42 { pt3dadd( -21.3754, -166.357, -114.738, 0.28 ) }
    dend_42 { pt3dadd( -21.9257, -167.999, -115.858, 1.11 ) }
    dend_42 { pt3dadd( -23.6796, -172.784, -119.339, 0.28 ) }
    dend_42 { pt3dadd( -24.3079, -174.407, -120.599, 0.83 ) }
    dend_42 { pt3dadd( -25.9628, -178.541, -123.85, 0.28 ) }
    dend_42 { pt3dadd( -26.4115, -179.708, -124.717, 0.83 ) }
    dend_42 { pt3dadd( -27.4981, -182.641, -126.632, 0.28 ) }
    dend_42 { pt3dadd( -27.6991, -183.271, -127.06, 0.55 ) }
    dend_42 { pt3dadd( -28.5665, -186.722, -129.281, 0.28 ) }
    dend_42 { pt3dadd( -28.7557, -187.599, -129.907, 1.11 ) }
    dend_42 { pt3dadd( -29.128, -189.503, -131.271, 0.28 ) }
    dend_42 { pt3dadd( -29.2492, -190.036, -131.669, 0.55 ) }
    dend_42 { pt3dadd( -30.2642, -194.231, -134.7, 0.28 ) }
    dend_42 { pt3dadd( -30.7861, -196.02, -136.032, 0.83 ) }
    dend_42 { pt3dadd( -32.5145, -201.179, -139.822, 0.28 ) }
    dend_42 { pt3dadd( -33.0145, -202.466, -140.793, 0.83 ) }
    dend_42 { pt3dadd( -34.1152, -204.957, -142.688, 0.28 ) }
    dend_42 { pt3dadd( -35.0178, -206.703, -144.074, 0.83 ) }
    dend_42 { pt3dadd( -36.9501, -209.806, -146.59, 0.28 ) }
    dend_42 { pt3dadd( -37.8844, -210.909, -147.673, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_42 { pt3dadd( -38.9675, -211.804, -148.658, 0.28 ) }
    dend_42 { pt3dadd( -39.4376, -212.086, -149.158, 0.55 ) }
    dend_42 { pt3dadd( -41.7537, -213.127, -151.689, 0.28 ) }
    dend_42 { pt3dadd( -42.448, -213.37, -152.457, 0.83 ) }
    dend_42 { pt3dadd( -45.6964, -214.431, -156.263, 0.28 ) }
    dend_42 { pt3dadd( -46.6373, -214.747, -157.409, 0.83 ) }
    dend_42 { pt3dadd( -52.3419, -216.402, -164.386, 0.28 ) }
    dend_42 { pt3dadd( -53.0093, -216.56, -165.198, 0.28 ) }
    dend_42 { pt3dadd( -53.4356, -216.649, -165.705, 0.55 ) }
    dend_42 { pt3dadd( -55.7982, -217.108, -168.394, 0.28 ) }
    dend_42 { pt3dadd( -57.5437, -217.34, -170.158, 0.83 ) }
    dend_42 { pt3dadd( -60.9351, -217.53, -173.123, 0.28 ) }
    dend_42 { pt3dadd( -61.5527, -217.508, -173.519, 0.55 ) }
    dend_42 { pt3dadd( -63.356, -217.337, -174.752, 0.28 ) }
    dend_42 { pt3dadd( -64.5457, -217.155, -175.577, 0.55 ) }
    dend_42 { pt3dadd( -67.162, -216.442, -177.53, 0.28 ) }
    dend_42 { pt3dadd( -68.395, -215.999, -178.6, 0.28 ) }
    dend_42 { pt3dadd( -69.1354, -215.7, -179.346, 0.83 ) }
    dend_42 { pt3dadd( -71.5474, -214.455, -181.993, 0.28 ) }
    dend_42 { pt3dadd( -71.7436, -214.33, -182.22, 0.55 ) }
    dend_42 { pt3dadd( -73.9198, -212.812, -184.911, 0.28 ) }
    dend_42 { pt3dadd( -74.3358, -212.529, -185.435, 0.55 ) }
    dend_42 { pt3dadd( -75.6333, -211.699, -186.983, 0.28 ) }
    dend_42 { pt3dadd( -76.253, -211.36, -187.62, 0.83 ) }
    dend_42 { pt3dadd( -78.5042, -210.4, -189.437, 0.28 ) }
    dend_42 { pt3dadd( -79.3518, -210.129, -190.015, 0.55 ) }
    dend_42 { pt3dadd( -80.8444, -209.829, -190.811, 0.28 ) }
    dend_42 { pt3dadd( -81.4382, -209.762, -191.084, 0.55 ) }
    dend_42 { pt3dadd( -83.1126, -209.687, -191.67, 0.28 ) }
    dend_42 { pt3dadd( -84.7143, -209.689, -192.165, 0.55 ) }
    dend_42 { pt3dadd( -86.0551, -209.755, -192.456, 0.28 ) }
    dend_42 { pt3dadd( -87.0891, -209.83, -192.62, 0.55 ) }
    dend_42 { pt3dadd( -88.8552, -209.987, -192.793, 0.28 ) }
    dend_42 { pt3dadd( -90.8584, -210.199, -192.925, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.22931, -18.6842, -9.00229, 0.55 ) }
    dend_41 { pt3dadd( 8.92347, -26.1592, -10.6429, 0.55 ) }
    dend_41 { pt3dadd( 9.2309, -28.5606, -10.8936, 0.55 ) }
    dend_41 { pt3dadd( 9.51853, -30.6172, -11.0046, 0.28 ) }
    dend_41 { pt3dadd( 9.64997, -31.6598, -11.0568, 0.55 ) }
    dend_41 { pt3dadd( 10.1723, -35.6476, -11.2542, 0.28 ) }
    dend_41 { pt3dadd( 10.2552, -36.4236, -11.3302, 0.55 ) }
    dend_41 { pt3dadd( 10.7579, -40.9077, -11.563, 0.28 ) }
    dend_41 { pt3dadd( 10.8175, -42.252, -11.8374, 0.55 ) }
    dend_41 { pt3dadd( 10.7811, -45.9375, -12.9113, 0.28 ) }
    dend_41 { pt3dadd( 10.7487, -46.6546, -13.1497, 0.55 ) }
    dend_41 { pt3dadd( 10.4177, -51.2535, -14.8432, 0.28 ) }
    dend_41 { pt3dadd( 10.3693, -52.2321, -15.1675, 0.55 ) }
    dend_41 { pt3dadd( 10.0653, -60.5741, -17.7504, 0.28 ) }
    dend_41 { pt3dadd( 10.103, -61.7886, -18.0236, 0.55 ) }
    dend_41 { pt3dadd( 10.4158, -65.5451, -18.5972, 0.28 ) }
    dend_41 { pt3dadd( 10.6189, -66.9512, -18.7298, 0.83 ) }
    dend_41 { pt3dadd( 11.9474, -73.1195, -18.9346, 0.28 ) }
    dend_41 { pt3dadd( 12.1513, -73.8707, -18.9225, 0.83 ) }
    dend_41 { pt3dadd( 14.6427, -81.364, -18.3472, 0.28 ) }
    dend_41 { pt3dadd( 15.2411, -83.0577, -18.1953, 0.83 ) }
    dend_41 { pt3dadd( 17.2925, -88.6418, -17.6285, 0.28 ) }
    dend_41 { pt3dadd( 18.2994, -91.4215, -17.3384, 0.83 ) }
    dend_41 { pt3dadd( 19.188, -93.8988, -17.0756, 0.28 ) }
    dend_41 { pt3dadd( 19.6447, -95.1874, -16.9156, 0.55 ) }
    dend_41 { pt3dadd( 20.7191, -98.251, -16.4608, 0.28 ) }
    dend_41 { pt3dadd( 21.4124, -100.245, -16.1269, 0.83 ) }
    dend_41 { pt3dadd( 22.6468, -103.881, -15.4994, 0.28 ) }
    dend_41 { pt3dadd( 22.8636, -104.539, -15.3976, 0.55 ) }
    dend_41 { pt3dadd( 23.8544, -107.603, -15.0466, 0.28 ) }
    dend_41 { pt3dadd( 24.2126, -108.651, -14.9417, 0.55 ) }
    dend_41 { pt3dadd( 25.0451, -110.929, -14.7874, 0.28 ) }
    dend_41 { pt3dadd( 26.4261, -114.392, -14.5046, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -3.5781, 7.40627, 19.5482, 0.83 ) }
    dend_37 { pt3dadd( -6.24732, 9.11911, 20.4439, 0.83 ) }
    dend_37 { pt3dadd( -7.8733, 10.4254, 21.1314, 0.83 ) }
    dend_37 { pt3dadd( -9.9105, 12.0713, 22.0118, 1.38 ) }
    dend_37 { pt3dadd( -12.628, 14.0515, 23.5567, 0.83 ) }
    dend_37 { pt3dadd( -16.4065, 16.5021, 26.3685, 0.83 ) }
    dend_37 { pt3dadd( -19.9157, 18.6887, 29.2992, 1.94 ) }
    dend_37 { pt3dadd( -21.8075, 19.9826, 31.2601, 0.55 ) }
    dend_37 { pt3dadd( -22.6843, 20.613, 32.2827, 0.55 ) }
    dend_37 { pt3dadd( -26.2299, 23.1902, 36.7531, 0.55 ) }
    dend_37 { pt3dadd( -29.207, 25.2402, 40.6081, 0.28 ) }
    dend_37 { pt3dadd( -29.8036, 25.5564, 41.2573, 0.83 ) }
    dend_37 { pt3dadd( -33.1494, 27.1695, 44.4119, 0.28 ) }
    dend_37 { pt3dadd( -33.8839, 27.546, 45.0957, 0.55 ) }
    dend_37 { pt3dadd( -34.9507, 28.2257, 45.9464, 0.28 ) }
    dend_37 { pt3dadd( -35.9708, 29.0241, 46.3432, 0.55 ) }
    dend_37 { pt3dadd( -38.9722, 31.319, 46.5889, 0.28 ) }
    dend_37 { pt3dadd( -40.0026, 31.9788, 46.5555, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.5781, 7.40627, 19.5482, 0.83 ) }
    dend_28 { pt3dadd( -2.21068, 6.20717, 19.6429, 0.83 ) }
    dend_28 { pt3dadd( -0.491772, 4.69984, 19.762, 0.83 ) }
    dend_28 { pt3dadd( 1.71672, 2.7632, 19.9149, 0.83 ) }
    dend_28 { pt3dadd( 5.27881, -0.360419, 20.1617, 0.83 ) }
    dend_28 { pt3dadd( 7.97836, -2.72768, 20.3486, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 30.5773, 7.04734, -21.4264, 0.83 ) }
    dend_24 { pt3dadd( 34.1185, 7.90991, -21.929, 0.83 ) }
    dend_24 { pt3dadd( 36.9127, 8.99359, -22.522, 0.55 ) }
    dend_24 { pt3dadd( 40.0694, 10.3897, -23.5063, 0.55 ) }
    dend_24 { pt3dadd( 42.2934, 11.3568, -24.2591, 0.55 ) }
    dend_24 { pt3dadd( 44.5038, 12.2761, -25.0017, 0.83 ) }
    dend_24 { pt3dadd( 47.1898, 13.3933, -25.904, 0.55 ) }
    dend_24 { pt3dadd( 51.7686, 15.4117, -27.6097, 0.55 ) }
    dend_24 { pt3dadd( 55.3298, 17.0993, -29.0459, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 57.0852, 18.0566, -29.8011, 0.55 ) }
    dend_24 { pt3dadd( 61.1029, 20.2032, -31.7078, 1.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 30.5773, 7.04734, -21.4264, 0.28 ) }
    dend_23 { pt3dadd( 30.8844, 8.37718, -21.6745, 0.28 ) }
    dend_23 { pt3dadd( 31.1799, 9.74756, -21.8035, 0.55 ) }
    dend_23 { pt3dadd( 31.7343, 12.3601, -21.9653, 0.28 ) }
    dend_23 { pt3dadd( 32.0531, 13.8664, -22.0257, 0.83 ) }
    dend_23 { pt3dadd( 32.5448, 16.1226, -22.0916, 0.28 ) }
    dend_23 { pt3dadd( 32.8007, 17.4014, -22.1109, 0.55 ) }
    dend_23 { pt3dadd( 33.4271, 20.5115, -22.0828, 0.28 ) }
    dend_23 { pt3dadd( 33.5158, 21.0345, -22.0732, 0.55 ) }
    dend_23 { pt3dadd( 33.6647, 22.1266, -22.0674, 0.28 ) }
    dend_23 { pt3dadd( 33.7542, 22.7741, -22.0623, 0.55 ) }
    dend_23 { pt3dadd( 33.9898, 24.3856, -22.0832, 0.28 ) }
    dend_23 { pt3dadd( 34.2864, 26.139, -22.1801, 0.55 ) }
    dend_23 { pt3dadd( 35.1258, 30.1944, -22.5677, 0.28 ) }
    dend_23 { pt3dadd( 35.7127, 32.4179, -22.8206, 0.55 ) }
    dend_23 { pt3dadd( 36.2752, 34.1768, -23.051, 0.28 ) }
    dend_23 { pt3dadd( 36.5361, 34.7772, -23.1403, 0.55 ) }
    dend_23 { pt3dadd( 37.677, 36.8562, -23.4656, 0.28 ) }
    dend_23 { pt3dadd( 38.4062, 37.9468, -23.6262, 0.83 ) }
    dend_23 { pt3dadd( 40.2448, 40.2271, -23.9484, 0.28 ) }
    dend_23 { pt3dadd( 40.8113, 40.8237, -24.085, 0.55 ) }
    dend_23 { pt3dadd( 44.1224, 43.9277, -25.0179, 0.28 ) }
    dend_23 { pt3dadd( 44.5886, 44.3431, -25.1493, 0.83 ) }
    dend_23 { pt3dadd( 46.243, 45.6953, -25.6154, 0.28 ) }
    dend_23 { pt3dadd( 46.4215, 45.8335, -25.6686, 0.83 ) }
    dend_23 { pt3dadd( 50.518, 48.7571, -27.0768, 0.28 ) }
    dend_23 { pt3dadd( 51.2752, 49.259, -27.3907, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -41.0077, -42.0003, -41.4557, 0.28 ) }
    dend_21 { pt3dadd( -42.4484, -42.9318, -41.4561, 0.28 ) }
    dend_21 { pt3dadd( -42.8215, -43.1814, -41.4606, 0.55 ) }
    dend_21 { pt3dadd( -44.7085, -44.4507, -41.4339, 0.28 ) }
    dend_21 { pt3dadd( -45.8894, -45.2224, -41.4125, 0.55 ) }
    dend_21 { pt3dadd( -48.4897, -46.8715, -41.483, 0.83 ) }
    dend_21 { pt3dadd( -50.2819, -47.9869, -41.569, 0.28 ) }
    dend_21 { pt3dadd( -52.387, -49.1542, -41.8718, 0.83 ) }
    dend_21 { pt3dadd( -54.9761, -50.4475, -42.4156, 0.28 ) }
    dend_21 { pt3dadd( -56.0198, -50.8667, -42.7979, 0.55 ) }
    dend_21 { pt3dadd( -57.8212, -51.4766, -43.6333, 0.28 ) }
    dend_21 { pt3dadd( -59.3716, -51.8519, -44.4362, 0.83 ) }
    dend_21 { pt3dadd( -63.3718, -52.6017, -46.7874, 0.28 ) }
    dend_21 { pt3dadd( -64.4104, -52.7369, -47.459, 0.55 ) }
    dend_21 { pt3dadd( -69.6823, -53.1157, -50.9433, 0.28 ) }
    dend_21 { pt3dadd( -70.9273, -53.1991, -51.7451, 0.55 ) }
    dend_21 { pt3dadd( -72.3787, -53.3038, -52.5805, 0.28 ) }
    dend_21 { pt3dadd( -73.6056, -53.3995, -53.2326, 0.28 ) }
    dend_21 { pt3dadd( -75.3034, -53.6144, -53.952, 0.28 ) }
    dend_21 { pt3dadd( -78.2535, -54.0745, -54.8512, 0.55 ) }
    dend_21 { pt3dadd( -79.7132, -54.3757, -55.0772, 0.83 ) }
    dend_21 { pt3dadd( -82.4155, -54.962, -55.4791, 0.28 ) }
    dend_21 { pt3dadd( -82.699, -55.022, -55.5256, 0.55 ) }
    dend_21 { pt3dadd( -84.1857, -55.2894, -55.7518, 0.28 ) }
    dend_21 { pt3dadd( -85.5926, -55.4623, -55.9806, 0.83 ) }
    dend_21 { pt3dadd( -88.4162, -55.6305, -56.4574, 0.28 ) }
    dend_21 { pt3dadd( -89.7692, -55.5691, -56.7153, 0.83 ) }
    dend_21 { pt3dadd( -93.4595, -55.089, -57.4979, 0.28 ) }
    dend_21 { pt3dadd( -94.0621, -54.965, -57.6326, 0.83 ) }
    dend_21 { pt3dadd( -95.9451, -54.411, -58.0589, 0.28 ) }
    dend_21 { pt3dadd( -96.3103, -54.2693, -58.1216, 0.83 ) }
    dend_21 { pt3dadd( -97.924, -53.4226, -58.2051, 0.28 ) }
    dend_21 { pt3dadd( -98.6063, -52.9796, -58.1786, 0.83 ) }
    dend_21 { pt3dadd( -99.9032, -51.9717, -57.9898, 0.28 ) }
    dend_21 { pt3dadd( -100.407, -51.5688, -57.9056, 0.83 ) }
    dend_21 { pt3dadd( -102.26, -50.0429, -57.499, 0.28 ) }
    dend_21 { pt3dadd( -103.047, -49.3946, -57.301, 0.83 ) }
    dend_21 { pt3dadd( -105.874, -47.0709, -56.3929, 0.28 ) }
    dend_21 { pt3dadd( -106.411, -46.6284, -56.2165, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 68/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -41.0077, -42.0003, -41.4557, 0.28 ) }
    dend_18 { pt3dadd( -41.6491, -44.2115, -42.7413, 0.28 ) }
    dend_18 { pt3dadd( -41.8391, -44.849, -43.1057, 0.83 ) }
    dend_18 { pt3dadd( -42.4339, -46.9102, -44.2701, 0.28 ) }
    dend_18 { pt3dadd( -42.9945, -48.8266, -45.3634, 1.11 ) }
    dend_18 { pt3dadd( -43.6242, -51.0425, -46.5813, 0.28 ) }
    dend_18 { pt3dadd( -43.6799, -51.2509, -46.6931, 0.55 ) }
    dend_18 { pt3dadd( -44.0798, -52.6682, -47.4751, 0.28 ) }
    dend_18 { pt3dadd( -44.1558, -52.9637, -47.6328, 0.55 ) }
    dend_18 { pt3dadd( -44.515, -54.6316, -48.4602, 0.28 ) }
    dend_18 { pt3dadd( -44.8481, -56.4301, -49.2724, 1.38 ) }
    dend_18 { pt3dadd( -45.1818, -58.701, -50.1346, 0.28 ) }
    dend_18 { pt3dadd( -45.2138, -58.9306, -50.212, 0.55 ) }
    dend_18 { pt3dadd( -45.4305, -60.5463, -50.6772, 0.28 ) }
    dend_18 { pt3dadd( -45.4805, -60.8926, -50.7655, 0.55 ) }
    dend_18 { pt3dadd( -45.7916, -63.1467, -51.2303, 0.28 ) }
    dend_18 { pt3dadd( -45.8742, -63.6887, -51.3203, 0.55 ) }
    dend_18 { pt3dadd( -46.1439, -64.875, -51.4587, 0.28 ) }
    dend_18 { pt3dadd( -46.3008, -65.5295, -51.5407, 0.55 ) }
    dend_18 { pt3dadd( -46.7385, -66.9201, -51.6625, 0.28 ) }
    dend_18 { pt3dadd( -47.1276, -67.8592, -51.7371, 0.55 ) }
    dend_18 { pt3dadd( -47.9827, -69.6397, -51.8917, 0.28 ) }
    dend_18 { pt3dadd( -48.8123, -71.265, -51.9837, 0.28 ) }
    dend_18 { pt3dadd( -49.8313, -73.1952, -52.048, 0.55 ) }
    dend_18 { pt3dadd( -50.8878, -75.0909, -52.1644, 0.55 ) }
    dend_18 { pt3dadd( -51.8007, -76.6619, -52.2819, 0.28 ) }
    dend_18 { pt3dadd( -52.1568, -77.2752, -52.3724, 0.55 ) }
    dend_18 { pt3dadd( -52.9085, -78.5794, -52.6636, 0.28 ) }
    dend_18 { pt3dadd( -53.1791, -79.1757, -52.8437, 0.55 ) }
    dend_18 { pt3dadd( -54.1255, -81.6883, -53.7546, 0.28 ) }
    dend_18 { pt3dadd( -54.3466, -82.5527, -54.1788, 0.83 ) }
    dend_18 { pt3dadd( -54.6378, -84.3438, -55.1463, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_18 { pt3dadd( -54.6709, -84.6311, -55.3197, 0.55 ) }
    dend_18 { pt3dadd( -54.8968, -86.9842, -56.7829, 0.28 ) }
    dend_18 { pt3dadd( -54.9285, -87.3978, -57.0266, 0.55 ) }
    dend_18 { pt3dadd( -55.0981, -89.8768, -58.3689, 0.28 ) }
    dend_18 { pt3dadd( -55.2193, -91.5731, -59.2699, 0.83 ) }
    dend_18 { pt3dadd( -55.4072, -94.3582, -60.645, 0.28 ) }
    dend_18 { pt3dadd( -55.4794, -95.959, -61.4888, 0.55 ) }
    dend_18 { pt3dadd( -55.5421, -97.4686, -62.2974, 0.28 ) }
    dend_18 { pt3dadd( -55.5525, -98.4149, -62.8006, 0.83 ) }
    dend_18 { pt3dadd( -55.5199, -100.158, -63.6495, 0.28 ) }
    dend_18 { pt3dadd( -55.4619, -101.9, -64.4762, 1.11 ) }
    dend_18 { pt3dadd( -55.1767, -105.979, -66.2878, 0.28 ) }
    dend_18 { pt3dadd( -55.0971, -106.858, -66.7456, 0.55 ) }
    dend_18 { pt3dadd( -54.8977, -109.348, -68.1537, 0.28 ) }
    dend_18 { pt3dadd( -54.8453, -110.357, -68.7615, 0.55 ) }
    dend_18 { pt3dadd( -54.8504, -111.111, -69.2816, 0.28 ) }
    dend_18 { pt3dadd( -54.9186, -111.986, -69.9068, 0.83 ) }
    dend_18 { pt3dadd( -55.5156, -115.752, -72.5482, 0.28 ) }
    dend_18 { pt3dadd( -55.6924, -116.745, -73.2529, 0.83 ) }
    dend_18 { pt3dadd( -56.0129, -118.411, -74.4171, 0.28 ) }
    dend_18 { pt3dadd( -56.4243, -120.681, -75.8843, 0.83 ) }
    dend_18 { pt3dadd( -56.7378, -122.699, -77.0479, 0.28 ) }
    dend_18 { pt3dadd( -56.8188, -123.183, -77.2948, 0.55 ) }
    dend_18 { pt3dadd( -57.0328, -124.611, -77.8102, 0.28 ) }
    dend_18 { pt3dadd( -57.1741, -125.769, -78.184, 0.83 ) }
    dend_18 { pt3dadd( -57.4272, -129.577, -79.0722, 0.28 ) }
    dend_18 { pt3dadd( -57.4497, -130.653, -79.2448, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 27/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.26998, -15.9645, -1.13389, 2.77 ) }
    dend_6 { pt3dadd( 0.0490456, -22.7493, -1.51794, 2.77 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 29/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.26998, -15.9645, -1.13389, 1.11 ) }
    dend_1 { pt3dadd( -3.65375, -19.7877, -3.46437, 1.11 ) }
    dend_1 { pt3dadd( -5.12211, -22.1427, -4.89991, 1.11 ) }
    dend_1 { pt3dadd( -5.97392, -23.5089, -5.73268, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 33/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.70328, 41.377, 0.216622, 0.28 ) }
    axon_1 { pt3dadd( -0.897022, 56.3757, 0.216622, 0.28 ) }
    axon_1 { pt3dadd( -1.09076, 71.3745, 0.216622, 0.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -40.0026, 31.9788, 46.5555, 0.28 ) }
    dend_39 { pt3dadd( -42.751, 32.841, 46.295, 0.28 ) }
    dend_39 { pt3dadd( -43.488, 33.288, 46.2435, 0.55 ) }
    dend_39 { pt3dadd( -46.3854, 35.3455, 46.0471, 0.28 ) }
    dend_39 { pt3dadd( -48.5528, 37.0351, 45.8663, 0.55 ) }
    dend_39 { pt3dadd( -50.9425, 38.915, 45.6375, 0.55 ) }
    dend_39 { pt3dadd( -51.9076, 39.7045, 45.5372, 0.83 ) }
    dend_39 { pt3dadd( -56.6869, 44.0217, 45.0759, 0.28 ) }
    dend_39 { pt3dadd( -57.2875, 44.6057, 45.0158, 0.83 ) }
    dend_39 { pt3dadd( -61.8544, 49.5307, 44.4731, 0.28 ) }
    dend_39 { pt3dadd( -62.4393, 50.1735, 44.4055, 0.55 ) }
    dend_39 { pt3dadd( -63.6247, 51.474, 44.2706, 0.28 ) }
    dend_39 { pt3dadd( -64.622, 52.5012, 44.1494, 0.55 ) }
    dend_39 { pt3dadd( -74.0022, 57.9507, 42.615, 0.55 ) }
    dend_39 { pt3dadd( -83.7857, 62.8691, 42.2526, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 51/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -40.0026, 31.9788, 46.5555, 0.83 ) }
    dend_38 { pt3dadd( -39.8976, 34.1891, 46.4829, 0.83 ) }
    dend_38 { pt3dadd( -39.7872, 36.5146, 46.4064, 0.28 ) }
    dend_38 { pt3dadd( -39.7225, 37.8764, 46.3617, 0.55 ) }
    dend_38 { pt3dadd( -38.6349, 48.5039, 43.9215, 0.55 ) }
    dend_38 { pt3dadd( -37.6536, 59.2689, 42.0142, 0.55 ) }
    dend_38 { pt3dadd( -36.4745, 69.8879, 39.57, 0.55 ) }
    dend_38 { pt3dadd( -33.1775, 79.933, 36.5956, 0.55 ) }
    dend_38 { pt3dadd( -31.9956, 90.6444, 34.5168, 0.55 ) }
    dend_38 { pt3dadd( -31.3255, 101.465, 32.8049, 0.55 ) }
    dend_38 { pt3dadd( -30.9141, 112.04, 30.0744, 0.55 ) }
    dend_38 { pt3dadd( -30.2463, 122.951, 28.8885, 0.55 ) }
    dend_38 { pt3dadd( -28.0424, 133.82, 28.9906, 0.55 ) }
    dend_38 { pt3dadd( -25.2802, 144.344, 31.6243, 0.55 ) }
    dend_38 { pt3dadd( -21.4411, 153.96, 36.0612, 0.55 ) }
    dend_38 { pt3dadd( -15.9061, 162.433, 41.0763, 0.55 ) }
    dend_38 { pt3dadd( -8.79016, 170.341, 44.7956, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 68/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 7.97836, -2.72768, 20.3486, 0.83 ) }
    dend_36 { pt3dadd( 4.41947, -1.48322, 20.6533, 0.83 ) }
    dend_36 { pt3dadd( 0.809854, 0.0278882, 21.3683, 0.83 ) }
    dend_36 { pt3dadd( -0.762355, 0.68607, 21.6798, 0.55 ) }
    dend_36 { pt3dadd( -2.07424, 1.23527, 21.9397, 0.55 ) }
    dend_36 { pt3dadd( -4.05577, 2.0648, 22.3322, 0.55 ) }
    dend_36 { pt3dadd( -6.17291, 2.95111, 22.7516, 0.55 ) }
    dend_36 { pt3dadd( -7.85392, 3.81147, 23.3997, 0.55 ) }
    dend_36 { pt3dadd( -16.0712, 6.07963, 23.7014, 0.55 ) }
    dend_36 { pt3dadd( -24.0819, 9.04053, 23.3751, 0.55 ) }
    dend_36 { pt3dadd( -32.1467, 11.6766, 22.4398, 0.55 ) }
    dend_36 { pt3dadd( -40.5481, 13.0492, 22.3366, 0.55 ) }
    dend_36 { pt3dadd( -48.9092, 13.9115, 23.6627, 0.55 ) }
    dend_36 { pt3dadd( -57.2334, 15.6973, 23.9992, 0.55 ) }
    dend_36 { pt3dadd( -65.2187, 18.1121, 25.8124, 0.55 ) }
    dend_36 { pt3dadd( -73.0249, 19.6904, 28.8429, 0.55 ) }
    dend_36 { pt3dadd( -80.2022, 22.1997, 32.7441, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 85/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 7.97836, -2.72768, 20.3486, 0.83 ) }
    dend_29 { pt3dadd( 8.25535, -5.56275, 19.9687, 0.83 ) }
    dend_29 { pt3dadd( 8.71767, -9.11848, 19.4875, 0.83 ) }
    dend_29 { pt3dadd( 9.1275, -11.9184, 19.1003, 0.83 ) }
    dend_29 { pt3dadd( 9.61063, -14.4953, 18.8069, 0.83 ) }
    dend_29 { pt3dadd( 10.463, -17.7835, 18.5873, 0.55 ) }
    dend_29 { pt3dadd( 11.0039, -19.3593, 18.5775, 0.55 ) }
    dend_29 { pt3dadd( 12.0223, -21.1939, 18.7662, 0.83 ) }
    dend_29 { pt3dadd( 13.1989, -22.6168, 19.118, 0.83 ) }
    dend_29 { pt3dadd( 14.7716, -24.0385, 19.6936, 0.83 ) }
    dend_29 { pt3dadd( 17.2323, -25.7304, 20.7224, 0.83 ) }
    dend_29 { pt3dadd( 19.161, -26.966, 21.6663, 0.83 ) }
    dend_29 { pt3dadd( 20.5774, -27.946, 22.4315, 0.55 ) }
    dend_29 { pt3dadd( 21.694, -28.7783, 23.0809, 0.28 ) }
    dend_29 { pt3dadd( 22.4956, -29.4971, 23.5454, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( 24.1986, -31.4096, 24.4662, 0.55 ) }
    dend_29 { pt3dadd( 25.6623, -33.5943, 25.177, 0.55 ) }
    dend_29 { pt3dadd( 26.7082, -35.3798, 25.6156, 0.55 ) }
    dend_29 { pt3dadd( 27.8032, -37.4206, 25.9997, 0.55 ) }
    dend_29 { pt3dadd( 29.4239, -40.6408, 26.4912, 0.55 ) }
    dend_29 { pt3dadd( 30.3064, -42.4425, 26.6918, 0.55 ) }
    dend_29 { pt3dadd( 31.9004, -45.5849, 26.9072, 0.55 ) }
    dend_29 { pt3dadd( 33.2012, -47.7792, 26.9906, 0.55 ) }
    dend_29 { pt3dadd( 34.9945, -50.7079, 27.0374, 0.83 ) }
    dend_29 { pt3dadd( 36.2011, -52.6574, 27.0324, 0.83 ) }
    dend_29 { pt3dadd( 37.5146, -54.811, 27.0324, 0.55 ) }
    dend_29 { pt3dadd( 38.3042, -56.0581, 27.0375, 0.55 ) }
    dend_29 { pt3dadd( 39.7715, -57.9973, 27.1023, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 13/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 61.1029, 20.2032, -31.7078, 0.83 ) }
    dend_26 { pt3dadd( 63.6162, 17.9659, -31.3268, 0.83 ) }
    dend_26 { pt3dadd( 64.5758, 17.1962, -31.1398, 0.55 ) }
    dend_26 { pt3dadd( 65.7451, 16.2605, -30.8828, 0.55 ) }
    dend_26 { pt3dadd( 68.0839, 14.2843, -30.3363, 0.83 ) }
    dend_26 { pt3dadd( 69.5727, 12.97, -29.7919, 0.55 ) }
    dend_26 { pt3dadd( 71.7329, 10.9649, -28.8113, 1.11 ) }
    dend_26 { pt3dadd( 73.4634, 9.155, -27.6984, 0.55 ) }
    dend_26 { pt3dadd( 74.1917, 8.32968, -27.1194, 0.55 ) }
    dend_26 { pt3dadd( 75.2375, 7.07813, -26.1511, 0.83 ) }
    dend_26 { pt3dadd( 77.5088, 4.14279, -23.7327, 0.28 ) }
    dend_26 { pt3dadd( 77.8112, 3.66379, -23.3065, 0.55 ) }
    dend_26 { pt3dadd( 78.7118, 1.78843, -21.7147, 0.55 ) }
    dend_26 { pt3dadd( 79.3652, 0.299282, -20.5688, 0.28 ) }
    dend_26 { pt3dadd( 79.7698, -0.521596, -20.0211, 0.55 ) }
    dend_26 { pt3dadd( 80.5695, -2.05467, -19.2389, 0.55 ) }
    dend_26 { pt3dadd( 82.4255, -5.43059, -18.0626, 0.55 ) }
    dend_26 { pt3dadd( 83.963, -8.08092, -17.3016, 0.83 ) }
    dend_26 { pt3dadd( 84.8466, -9.55372, -16.9546, 0.83 ) }
    dend_26 { pt3dadd( 86.4097, -12.0199, -16.5738, 0.28 ) }
    dend_26 { pt3dadd( 87.6672, -13.8769, -16.3658, 0.55 ) }
    dend_26 { pt3dadd( 88.5649, -15.1233, -16.3061, 0.55 ) }
    dend_26 { pt3dadd( 90.4873, -17.6366, -16.3292, 0.28 ) }
    dend_26 { pt3dadd( 92.6437, -20.2969, -16.2679, 1.38 ) }
    dend_26 { pt3dadd( 95.1141, -23.3609, -16.1032, 0.28 ) }
    dend_26 { pt3dadd( 96.749, -25.3602, -15.8878, 0.55 ) }
    dend_26 { pt3dadd( 97.9446, -26.7736, -15.6771, 0.28 ) }
    dend_26 { pt3dadd( 99.9075, -29.0605, -15.3209, 0.55 ) }
    dend_26 { pt3dadd( 101.214, -30.5867, -15.0831, 0.28 ) }
    dend_26 { pt3dadd( 102.308, -31.8844, -14.8161, 0.55 ) }
    dend_26 { pt3dadd( 103.907, -33.8227, -14.0499, 0.28 ) }
    dend_26 { pt3dadd( 104.535, -34.61, -13.5839, 0.28 ) }
    dend_26 { pt3dadd( 104.777, -34.8818, -13.358, 0.55 ) }
    dend_26 { pt3dadd( 106.154, -36.1406, -12.0183, 0.28 ) }
    dend_26 { pt3dadd( 108.061, -37.5917, -10.2448, 1.11 ) }
    dend_26 { pt3dadd( 110.884, -39.3872, -7.72973, 0.28 ) }
    dend_26 { pt3dadd( 113.004, -40.6269, -5.96056, 0.83 ) }
    dend_26 { pt3dadd( 114.861, -41.6159, -4.35463, 0.55 ) }
    dend_26 { pt3dadd( 116.847, -42.6108, -2.69447, 0.55 ) }
    dend_26 { pt3dadd( 118.742, -43.5176, -1.18443, 0.55 ) }
    dend_26 { pt3dadd( 119.879, -44.0925, -0.405981, 0.55 ) }
    dend_26 { pt3dadd( 122.086, -45.3784, 0.855077, 0.28 ) }
    dend_26 { pt3dadd( 125.037, -47.4734, 2.27777, 0.55 ) }
    dend_26 { pt3dadd( 127.245, -49.3048, 3.28244, 0.28 ) }
    dend_26 { pt3dadd( 128.41, -50.3393, 3.75872, 0.83 ) }
    dend_26 { pt3dadd( 130.078, -51.8068, 4.33173, 0.28 ) }
    dend_26 { pt3dadd( 131.494, -53.0808, 4.7498, 0.55 ) }
    dend_26 { pt3dadd( 134.426, -55.7705, 5.46294, 0.28 ) }
    dend_26 { pt3dadd( 135.666, -56.9484, 5.70101, 0.55 ) }
    dend_26 { pt3dadd( 138.31, -59.4529, 6.26045, 0.28 ) }
    dend_26 { pt3dadd( 139.697, -60.7699, 6.60997, 0.55 ) }
    dend_26 { pt3dadd( 141.906, -62.9026, 7.27442, 0.28 ) }
    dend_26 { pt3dadd( 142.858, -63.8466, 7.59247, 0.55 ) }
    dend_26 { pt3dadd( 144.343, -65.3611, 8.16885, 0.28 ) }
    dend_26 { pt3dadd( 144.975, -66.0476, 8.41532, 0.55 ) }
    dend_26 { pt3dadd( 146.568, -67.883, 9.04571, 0.28 ) }
    dend_26 { pt3dadd( 146.843, -68.2081, 9.14229, 0.55 ) }
    dend_26 { pt3dadd( 148.488, -70.0158, 9.61852, 0.28 ) }
    dend_26 { pt3dadd( 148.805, -70.3347, 9.74159, 0.83 ) }
    dend_26 { pt3dadd( 150.524, -71.9357, 10.4982, 0.28 ) }
    dend_26 { pt3dadd( 152.376, -73.548, 11.3595, 0.55 ) }
    dend_26 { pt3dadd( 154.676, -75.2903, 12.4446, 0.28 ) }
    dend_26 { pt3dadd( 157.213, -76.8909, 13.7176, 0.55 ) }
    dend_26 { pt3dadd( 161.19, -78.9326, 15.713, 0.28 ) }
    dend_26 { pt3dadd( 162.312, -79.4266, 16.268, 0.28 ) }
    dend_26 { pt3dadd( 162.824, -79.6115, 16.5338, 0.55 ) }
    dend_26 { pt3dadd( 164.983, -80.2221, 17.6817, 0.28 ) }
    dend_26 { pt3dadd( 167.56, -80.7269, 19.0686, 0.83 ) }
    dend_26 { pt3dadd( 169.19, -80.9462, 19.8462, 0.28 ) }
    dend_26 { pt3dadd( 170.613, -81.0805, 20.2271, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 83/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 61.1029, 20.2032, -31.7078, 0.55 ) }
    dend_25 { pt3dadd( 61.9972, 20.6724, -31.7174, 0.55 ) }
    dend_25 { pt3dadd( 62.5429, 20.9529, -31.7424, 0.55 ) }
    dend_25 { pt3dadd( 63.0867, 21.2327, -31.8128, 0.55 ) }
    dend_25 { pt3dadd( 63.9355, 21.6603, -31.9777, 0.28 ) }
    dend_25 { pt3dadd( 64.1334, 21.7694, -32.0379, 1.11 ) }
    dend_25 { pt3dadd( 64.9691, 22.2335, -32.3333, 0.55 ) }
    dend_25 { pt3dadd( 65.4295, 22.4748, -32.5703, 0.55 ) }
    dend_25 { pt3dadd( 66.1128, 22.8382, -33.0044, 0.28 ) }
    dend_25 { pt3dadd( 66.3897, 22.9943, -33.2122, 0.83 ) }
    dend_25 { pt3dadd( 67.3222, 23.5394, -33.9855, 0.28 ) }
    dend_25 { pt3dadd( 67.6467, 23.7359, -34.2615, 0.55 ) }
    dend_25 { pt3dadd( 68.4434, 24.2345, -34.9167, 0.28 ) }
    dend_25 { pt3dadd( 68.907, 24.5416, -35.2437, 0.55 ) }
    dend_25 { pt3dadd( 69.5988, 25.0161, -35.6333, 0.28 ) }
    dend_25 { pt3dadd( 69.7754, 25.1347, -35.7102, 0.55 ) }
    dend_25 { pt3dadd( 70.7811, 25.7752, -36.0195, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_25 { pt3dadd( 71.2517, 26.0798, -36.1245, 0.83 ) }
    dend_25 { pt3dadd( 72.4666, 26.862, -36.2692, 0.28 ) }
    dend_25 { pt3dadd( 72.8557, 27.1117, -36.2989, 0.83 ) }
    dend_25 { pt3dadd( 73.6513, 27.6103, -36.332, 0.28 ) }
    dend_25 { pt3dadd( 73.972, 27.8105, -36.3409, 0.28 ) }
    dend_25 { pt3dadd( 75.113, 28.4987, -36.3398, 0.55 ) }
    dend_25 { pt3dadd( 76.0406, 29.0327, -36.3741, 0.28 ) }
    dend_25 { pt3dadd( 76.465, 29.2576, -36.3919, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 8/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -57.4497, -130.653, -79.2448, 0.28 ) }
    dend_20 { pt3dadd( -58.4132, -133.331, -81.0939, 0.28 ) }
    dend_20 { pt3dadd( -58.6561, -134.395, -81.6929, 0.55 ) }
    dend_20 { pt3dadd( -58.977, -136.876, -82.8895, 0.28 ) }
    dend_20 { pt3dadd( -59.0822, -137.689, -83.2818, 0.83 ) }
    dend_20 { pt3dadd( -59.4786, -140.754, -84.7601, 0.28 ) }
    dend_20 { pt3dadd( -59.5858, -141.582, -85.1599, 0.55 ) }
    dend_20 { pt3dadd( -59.9262, -144.957, -86.7231, 0.28 ) }
    dend_20 { pt3dadd( -59.9285, -145.879, -87.0807, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 17/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -57.4497, -130.653, -79.2448, 0.28 ) }
    dend_19 { pt3dadd( -51.5528, -134.783, -79.3569, 0.28 ) }
    dend_19 { pt3dadd( -50.6942, -135.384, -79.3732, 0.83 ) }
    dend_19 { pt3dadd( -48.809, -136.704, -79.409, 0.55 ) }
    dend_19 { pt3dadd( -45.4854, -139.032, -79.4722, 0.28 ) }
    dend_19 { pt3dadd( -43.9485, -140.108, -79.5014, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 23/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.0490456, -22.7493, -1.51794, 2.22 ) }
    dend_8 { pt3dadd( -2.08056, -27.5811, -5.19271, 2.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 25/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 0.0490456, -22.7493, -1.51794, 0.83 ) }
    dend_7 { pt3dadd( 2.60214, -24.6728, -4.07829, 0.83 ) }
    dend_7 { pt3dadd( 3.81823, -25.4855, -5.24213, 0.55 ) }
    dend_7 { pt3dadd( 5.48388, -26.6004, -6.68478, 1.11 ) }
    dend_7 { pt3dadd( 8.71954, -28.7092, -9.25885, 0.83 ) }
    dend_7 { pt3dadd( 11.0268, -30.1199, -10.8816, 0.55 ) }
    dend_7 { pt3dadd( 14.4495, -32.0461, -12.9727, 0.55 ) }
    dend_7 { pt3dadd( 16.7107, -33.2287, -14.2769, 0.55 ) }
    dend_7 { pt3dadd( 18.6725, -34.1365, -15.2093, 0.28 ) }
    dend_7 { pt3dadd( 20.0438, -34.6175, -15.7603, 0.83 ) }
    dend_7 { pt3dadd( 22.458, -35.3056, -16.4834, 1.38 ) }
    dend_7 { pt3dadd( 24.6525, -35.8862, -17.0295, 0.28 ) }
    dend_7 { pt3dadd( 26.4247, -36.3924, -17.4639, 0.55 ) }
    dend_7 { pt3dadd( 29.4558, -37.2766, -18.4054, 0.28 ) }
    dend_7 { pt3dadd( 31.9026, -38.0524, -19.2467, 1.11 ) }
    dend_7 { pt3dadd( 33.9045, -38.8439, -19.9778, 0.55 ) }
    dend_7 { pt3dadd( 35.4292, -39.6419, -20.6594, 0.55 ) }
    dend_7 { pt3dadd( 36.9997, -40.6709, -21.4436, 0.55 ) }
    dend_7 { pt3dadd( 38.5169, -41.8503, -22.1783, 0.55 ) }
    dend_7 { pt3dadd( 40.2942, -43.6584, -22.916, 0.28 ) }
    dend_7 { pt3dadd( 41.0456, -44.5964, -23.1992, 0.55 ) }
    dend_7 { pt3dadd( 42.6698, -46.9387, -23.8941, 0.55 ) }
    dend_7 { pt3dadd( 43.2178, -47.7949, -24.1888, 0.55 ) }
    dend_7 { pt3dadd( 44.165, -49.1795, -24.7318, 0.28 ) }
    dend_7 { pt3dadd( 45.2356, -50.3938, -25.4439, 0.28 ) }
    dend_7 { pt3dadd( 46.303, -51.3074, -26.1062, 0.55 ) }
    dend_7 { pt3dadd( 47.8188, -52.2564, -26.9485, 0.55 ) }
    dend_7 { pt3dadd( 50.1539, -53.3137, -28.2163, 0.83 ) }
    dend_7 { pt3dadd( 51.7499, -53.8709, -29.1142, 0.83 ) }
    dend_7 { pt3dadd( 55.0558, -54.6854, -31.0192, 0.55 ) }
    dend_7 { pt3dadd( 56.7711, -54.9055, -32.081, 0.28 ) }
    dend_7 { pt3dadd( 57.59, -54.9929, -32.589, 0.55 ) }
    dend_7 { pt3dadd( 59.9977, -55.0981, -34.0387, 0.28 ) }
    dend_7 { pt3dadd( 61.2102, -55.1262, -34.8787, 0.28 ) }
    dend_7 { pt3dadd( 62.3845, -55.1949, -35.7585, 1.11 ) }
    dend_7 { pt3dadd( 65.7562, -55.4455, -38.5621, 0.55 ) }
    dend_7 { pt3dadd( 67.7428, -55.5927, -40.3178, 0.55 ) }
    dend_7 { pt3dadd( 69.9759, -55.7246, -42.4658, 0.55 ) }
    dend_7 { pt3dadd( 73.2748, -55.8997, -45.7924, 0.55 ) }
    dend_7 { pt3dadd( 74.2781, -55.98, -46.8376, 0.83 ) }
    dend_7 { pt3dadd( 77.0898, -56.326, -49.7467, 0.28 ) }
    dend_7 { pt3dadd( 78.1825, -56.5244, -50.8571, 1.11 ) }
    dend_7 { pt3dadd( 81.3025, -57.2584, -53.8834, 0.28 ) }
    dend_7 { pt3dadd( 81.9651, -57.4974, -54.4523, 0.55 ) }
    dend_7 { pt3dadd( 83.3054, -58.0066, -55.3146, 0.28 ) }
    dend_7 { pt3dadd( 84.1683, -58.3619, -55.7868, 0.55 ) }
    dend_7 { pt3dadd( 86.3554, -59.2558, -56.827, 0.28 ) }
    dend_7 { pt3dadd( 88.5737, -60.1356, -57.8203, 0.83 ) }
    dend_7 { pt3dadd( 90.5547, -60.7869, -58.6321, 0.28 ) }
    dend_7 { pt3dadd( 92.0973, -61.2156, -59.2981, 0.28 ) }
    dend_7 { pt3dadd( 94.249, -61.7207, -60.2324, 1.11 ) }
    dend_7 { pt3dadd( 98.1721, -62.5783, -61.8688, 0.28 ) }
    dend_7 { pt3dadd( 99.9155, -62.9818, -62.622, 1.11 ) }
    dend_7 { pt3dadd( 102.828, -63.7392, -63.9404, 0.28 ) }
    dend_7 { pt3dadd( 103.656, -63.9887, -64.2978, 0.55 ) }
    dend_7 { pt3dadd( 105.255, -64.5704, -64.9256, 0.28 ) }
    dend_7 { pt3dadd( 106.543, -65.1005, -65.3324, 1.11 ) }
    dend_7 { pt3dadd( 110.095, -66.8202, -66.1477, 0.28 ) }
    dend_7 { pt3dadd( 111.397, -67.5249, -66.4042, 1.11 ) }
    dend_7 { pt3dadd( 113.749, -68.966, -66.7664, 0.28 ) }
    dend_7 { pt3dadd( 116.256, -70.585, -67.1782, 1.11 ) }
    dend_7 { pt3dadd( 119.641, -72.7775, -67.7, 0.28 ) }
    dend_7 { pt3dadd( 120.999, -73.624, -67.8954, 0.55 ) }
    dend_7 { pt3dadd( 122.798, -74.698, -68.0922, 0.28 ) }
    dend_7 { pt3dadd( 124.783, -75.7902, -68.3173, 0.83 ) }
    dend_7 { pt3dadd( 127.848, -77.3147, -68.7673, 0.28 ) }
    dend_7 { pt3dadd( 129.208, -77.8163, -69.0956, 0.55 ) }
    dend_7 { pt3dadd( 130.838, -78.2501, -69.5613, 0.28 ) }
    dend_7 { pt3dadd( 131.683, -78.3718, -69.8244, 0.55 ) }
    dend_7 { pt3dadd( 133.798, -78.4966, -70.4683, 0.28 ) }
    dend_7 { pt3dadd( 136.326, -78.4898, -71.3069, 0.55 ) }
    dend_7 { pt3dadd( 139.4, -78.4422, -72.2572, 0.28 ) }
    dend_7 { pt3dadd( 141.11, -78.4542, -72.8614, 0.83 ) }
    dend_7 { pt3dadd( 143.251, -78.4735, -73.616, 0.28 ) }
    dend_7 { pt3dadd( 144.402, -78.5035, -74.0251, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( 148.461, -78.6868, -75.4255, 0.28 ) }
    dend_7 { pt3dadd( 149.729, -78.7681, -75.8055, 1.11 ) }
    dend_7 { pt3dadd( 153.654, -79.0944, -76.9845, 0.28 ) }
    dend_7 { pt3dadd( 155.896, -79.3303, -77.7667, 0.28 ) }
    dend_7 { pt3dadd( 156.866, -79.4829, -78.1356, 0.55 ) }
    dend_7 { pt3dadd( 158.484, -79.7894, -78.7503, 0.28 ) }
    dend_7 { pt3dadd( 159.071, -79.9513, -78.9612, 0.55 ) }
    dend_7 { pt3dadd( 161.231, -80.6938, -79.7905, 0.28 ) }
    dend_7 { pt3dadd( 163.127, -81.7525, -80.6575, 0.83 ) }
    dend_7 { pt3dadd( 165.038, -83.155, -81.7028, 0.28 ) }
    dend_7 { pt3dadd( 165.759, -83.7937, -82.1279, 0.83 ) }
    dend_7 { pt3dadd( 167.313, -85.4261, -83.0976, 0.28 ) }
    dend_7 { pt3dadd( 167.636, -85.8446, -83.343, 1.11 ) }
    dend_7 { pt3dadd( 170.373, -90.0011, -85.681, 0.28 ) }
    dend_7 { pt3dadd( 170.918, -90.9936, -86.2055, 0.83 ) }
    dend_7 { pt3dadd( 171.517, -92.2319, -86.86, 0.28 ) }
    dend_7 { pt3dadd( 171.628, -92.4758, -86.9975, 0.55 ) }
    dend_7 { pt3dadd( 173.426, -96.9115, -89.5751, 0.28 ) }
    dend_7 { pt3dadd( 173.781, -97.773, -90.088, 0.83 ) }
    dend_7 { pt3dadd( 174.454, -99.4743, -91.1229, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 20/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.97392, -23.5089, -5.73268, 0.83 ) }
    dend_5 { pt3dadd( -7.40466, -26.5446, -4.32055, 0.83 ) }
    dend_5 { pt3dadd( -8.87362, -30.0565, -2.86686, 0.83 ) }
    dend_5 { pt3dadd( -9.99194, -32.9359, -1.83141, 0.83 ) }
    dend_5 { pt3dadd( -11.4302, -36.5669, -0.582922, 0.83 ) }
    dend_5 { pt3dadd( -12.7227, -39.7247, 0.431774, 0.83 ) }
    dend_5 { pt3dadd( -14.7409, -44.4412, 1.8512, 0.83 ) }
    dend_5 { pt3dadd( -16.0123, -47.2875, 2.61276, 0.83 ) }
    dend_5 { pt3dadd( -17.6028, -50.3867, 3.28699, 1.11 ) }
    dend_5 { pt3dadd( -19.5156, -53.5789, 3.65944, 0.55 ) }
    dend_5 { pt3dadd( -21.2487, -56.0606, 3.73836, 0.55 ) }
    dend_5 { pt3dadd( -22.7193, -57.9089, 3.70209, 0.83 ) }
    dend_5 { pt3dadd( -24.762, -60.0613, 3.50738, 0.83 ) }
    dend_5 { pt3dadd( -27.8462, -63.0262, 2.86241, 0.83 ) }
    dend_5 { pt3dadd( -31.0642, -65.6589, 1.9486, 0.83 ) }
    dend_5 { pt3dadd( -33.2624, -67.0674, 1.05483, 0.83 ) }
    dend_5 { pt3dadd( -34.6472, -67.8135, 0.352512, 0.83 ) }
    dend_5 { pt3dadd( -36.367, -68.6956, -0.656582, 0.83 ) }
    dend_5 { pt3dadd( -38.9945, -70.1353, -2.44654, 0.83 ) }
    dend_5 { pt3dadd( -40.9779, -71.28, -3.82794, 0.83 ) }
    dend_5 { pt3dadd( -44.9465, -73.5106, -6.29893, 0.83 ) }
    dend_5 { pt3dadd( -46.8368, -74.6415, -7.35421, 0.83 ) }
    dend_5 { pt3dadd( -48.6429, -75.9625, -8.36847, 1.11 ) }
    dend_5 { pt3dadd( -50.3944, -77.5592, -9.44618, 0.55 ) }
    dend_5 { pt3dadd( -52.5961, -79.9968, -10.8962, 0.55 ) }
    dend_5 { pt3dadd( -54.6333, -82.6086, -12.3028, 0.55 ) }
    dend_5 { pt3dadd( -56.7821, -85.7844, -13.8874, 1.11 ) }
    dend_5 { pt3dadd( -59.1041, -89.2279, -15.6987, 0.55 ) }
    dend_5 { pt3dadd( -60.6374, -91.5954, -17.0172, 0.83 ) }
    dend_5 { pt3dadd( -61.4807, -92.9029, -17.8453, 0.55 ) }
    dend_5 { pt3dadd( -62.0983, -93.9405, -18.5563, 0.55 ) }
    dend_5 { pt3dadd( -63.6174, -96.5424, -20.3789, 0.83 ) }
    dend_5 { pt3dadd( -65.3487, -99.1831, -22.2965, 0.83 ) }
    dend_5 { pt3dadd( -66.8804, -101.287, -23.5624, 0.83 ) }
    dend_5 { pt3dadd( -69.3036, -104.486, -25.1791, 0.28 ) }
    dend_5 { pt3dadd( -70.2956, -105.756, -25.7517, 0.28 ) }
    dend_5 { pt3dadd( -71.564, -107.399, -26.4179, 0.83 ) }
    dend_5 { pt3dadd( -73.0987, -109.404, -27.0963, 0.83 ) }
    dend_5 { pt3dadd( -74.7004, -111.661, -27.7418, 0.55 ) }
    dend_5 { pt3dadd( -76.5668, -114.684, -28.4177, 1.11 ) }
    dend_5 { pt3dadd( -77.7941, -117.22, -28.9231, 0.55 ) }
    dend_5 { pt3dadd( -78.299, -118.584, -29.2401, 0.28 ) }
    dend_5 { pt3dadd( -78.6945, -120.481, -29.7454, 0.83 ) }
    dend_5 { pt3dadd( -78.7626, -121.367, -29.9977, 0.28 ) }
    dend_5 { pt3dadd( -78.7371, -123.596, -30.6494, 1.11 ) }
    dend_5 { pt3dadd( -78.555, -127.03, -31.6649, 0.28 ) }
    dend_5 { pt3dadd( -78.37, -130.043, -32.5594, 0.55 ) }
    dend_5 { pt3dadd( -78.1882, -133.614, -33.6162, 0.28 ) }
    dend_5 { pt3dadd( -78.0937, -136.336, -34.4451, 1.11 ) }
    dend_5 { pt3dadd( -78.078, -138.259, -35.0162, 0.28 ) }
    dend_5 { pt3dadd( -78.1659, -140.036, -35.4336, 0.83 ) }
    dend_5 { pt3dadd( -78.4245, -142.313, -35.8797, 0.28 ) }
    dend_5 { pt3dadd( -78.5317, -142.921, -36.0003, 0.55 ) }
    dend_5 { pt3dadd( -78.9671, -144.493, -36.2868, 0.28 ) }
    dend_5 { pt3dadd( -79.4712, -146.001, -36.6873, 1.11 ) }
    dend_5 { pt3dadd( -80.83, -149.548, -37.7958, 0.28 ) }
    dend_5 { pt3dadd( -81.9707, -152.473, -38.6384, 0.55 ) }
    dend_5 { pt3dadd( -83.1816, -155.314, -39.4591, 0.28 ) }
    dend_5 { pt3dadd( -84.4411, -158.19, -40.1163, 0.55 ) }
    dend_5 { pt3dadd( -86.1787, -162.227, -40.8298, 0.28 ) }
    dend_5 { pt3dadd( -87.3308, -165.036, -41.182, 1.38 ) }
    dend_5 { pt3dadd( -88.8796, -168.699, -41.2075, 0.28 ) }
    dend_5 { pt3dadd( -89.8366, -170.96, -40.8966, 1.11 ) }
    dend_5 { pt3dadd( -91.3609, -174.545, -39.8401, 0.28 ) }
    dend_5 { pt3dadd( -91.9865, -175.981, -39.1987, 1.11 ) }
    dend_5 { pt3dadd( -92.8361, -177.927, -38.0933, 0.28 ) }
    dend_5 { pt3dadd( -94.5463, -182.111, -35.4808, 0.55 ) }
    dend_5 { pt3dadd( -94.7829, -182.798, -35.0495, 0.55 ) }
    dend_5 { pt3dadd( -95.4283, -185.397, -33.4882, 0.83 ) }
    dend_5 { pt3dadd( -95.7758, -187.155, -32.5584, 0.28 ) }
    dend_5 { pt3dadd( -96.0397, -189.195, -31.6361, 0.83 ) }
    dend_5 { pt3dadd( -96.0245, -191.149, -30.9736, 0.55 ) }
    dend_5 { pt3dadd( -95.5957, -194.107, -30.327, 0.55 ) }
    dend_5 { pt3dadd( -95.3393, -195.502, -30.082, 0.28 ) }
    dend_5 { pt3dadd( -95.1707, -196.286, -29.9739, 0.55 ) }
    dend_5 { pt3dadd( -94.5672, -198.733, -29.5886, 0.55 ) }
    dend_5 { pt3dadd( -94.1493, -200.462, -29.3279, 0.55 ) }
    dend_5 { pt3dadd( -93.6672, -202.612, -29.0479, 0.28 ) }
    dend_5 { pt3dadd( -93.3731, -203.984, -28.8389, 0.55 ) }
    dend_5 { pt3dadd( -92.9485, -205.911, -28.5227, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( -92.6372, -207.373, -28.214, 0.55 ) }
    dend_5 { pt3dadd( -92.4443, -208.512, -27.9292, 0.28 ) }
    dend_5 { pt3dadd( -92.3235, -209.65, -27.7128, 0.55 ) }
    dend_5 { pt3dadd( -92.2233, -210.875, -27.5616, 0.28 ) }
    dend_5 { pt3dadd( -92.1558, -211.892, -27.4896, 0.83 ) }
    dend_5 { pt3dadd( -92.0584, -214.43, -27.4362, 0.28 ) }
    dend_5 { pt3dadd( -92.0457, -215.604, -27.4121, 1.11 ) }
    dend_5 { pt3dadd( -92.0704, -218.49, -27.357, 0.28 ) }
    dend_5 { pt3dadd( -92.0899, -219.938, -27.3934, 0.55 ) }
    dend_5 { pt3dadd( -92.0995, -221.679, -27.5606, 0.28 ) }
    dend_5 { pt3dadd( -92.0744, -222.552, -27.6961, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.97392, -23.5089, -5.73268, 0.55 ) }
    dend_2 { pt3dadd( -8.21353, -22.3483, -5.46569, 0.55 ) }
    dend_2 { pt3dadd( -9.76447, -21.7439, -4.99417, 0.55 ) }
    dend_2 { pt3dadd( -13.4829, -20.7906, -3.68202, 0.83 ) }
    dend_2 { pt3dadd( -16.8734, -20.4245, -2.34947, 0.55 ) }
    dend_2 { pt3dadd( -19.3064, -20.407, -1.30279, 0.55 ) }
    dend_2 { pt3dadd( -26.5464, -21.0483, 2.0122, 0.83 ) }
    dend_2 { pt3dadd( -31.8152, -22.2654, 4.76534, 0.55 ) }
    dend_2 { pt3dadd( -35.0019, -23.6184, 6.56022, 0.83 ) }
    dend_2 { pt3dadd( -38.5813, -26.1072, 8.60576, 0.55 ) }
    dend_2 { pt3dadd( -39.7604, -27.4331, 9.18747, 0.83 ) }
    dend_2 { pt3dadd( -41.2804, -29.5973, 9.90484, 0.83 ) }
    dend_2 { pt3dadd( -42.0478, -31.1159, 10.1599, 0.55 ) }
    dend_2 { pt3dadd( -43.7667, -35.1693, 10.3641, 0.55 ) }
    dend_2 { pt3dadd( -45.7845, -40.2289, 10.3387, 0.55 ) }
    dend_2 { pt3dadd( -48.3523, -47.1127, 9.62558, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 39.7715, -57.9973, 27.1023, 0.55 ) }
    dend_33 { pt3dadd( 41.8954, -57.8435, 28.3385, 0.55 ) }
    dend_33 { pt3dadd( 43.1499, -57.762, 28.9502, 0.55 ) }
    dend_33 { pt3dadd( 44.652, -57.7572, 29.568, 0.55 ) }
    dend_33 { pt3dadd( 46.5392, -57.8449, 30.2651, 0.55 ) }
    dend_33 { pt3dadd( 48.8097, -57.9716, 31.0494, 0.55 ) }
    dend_33 { pt3dadd( 50.1991, -58.0467, 31.4926, 0.55 ) }
    dend_33 { pt3dadd( 52.5834, -58.2365, 32.0632, 0.55 ) }
    dend_33 { pt3dadd( 54.6781, -58.4598, 32.3822, 0.55 ) }
    dend_33 { pt3dadd( 55.5389, -58.5864, 32.4525, 0.55 ) }
    dend_33 { pt3dadd( 57.1171, -58.8367, 32.4812, 0.28 ) }
    dend_33 { pt3dadd( 58.1924, -59.0068, 32.481, 0.83 ) }
    dend_33 { pt3dadd( 59.9805, -59.381, 32.4459, 0.55 ) }
    dend_33 { pt3dadd( 61.1475, -59.6459, 32.3936, 0.55 ) }
    dend_33 { pt3dadd( 63.1546, -60.072, 32.2852, 0.55 ) }
    dend_33 { pt3dadd( 63.9901, -60.2321, 32.2453, 0.83 ) }
    dend_33 { pt3dadd( 65.431, -60.4787, 32.1911, 0.55 ) }
    dend_33 { pt3dadd( 66.6305, -60.6657, 32.1907, 0.55 ) }
    dend_33 { pt3dadd( 67.7977, -60.8001, 32.2416, 0.55 ) }
    dend_33 { pt3dadd( 68.653, -60.8539, 32.2653, 0.55 ) }
    dend_33 { pt3dadd( 69.7651, -60.8978, 32.2819, 0.83 ) }
    dend_33 { pt3dadd( 70.9319, -60.8744, 32.328, 0.28 ) }
    dend_33 { pt3dadd( 72.677, -60.8137, 32.4277, 0.28 ) }
    dend_33 { pt3dadd( 73.5002, -60.8071, 32.4768, 0.55 ) }
    dend_33 { pt3dadd( 75.2527, -60.9181, 32.551, 0.28 ) }
    dend_33 { pt3dadd( 76.8959, -61.1914, 32.6325, 0.55 ) }
    dend_33 { pt3dadd( 79.2389, -61.8222, 32.686, 0.28 ) }
    dend_33 { pt3dadd( 79.8443, -62.0368, 32.691, 0.28 ) }
    dend_33 { pt3dadd( 80.9307, -62.4282, 32.7008, 0.55 ) }
    dend_33 { pt3dadd( 82.0132, -62.8876, 32.7087, 0.28 ) }
    dend_33 { pt3dadd( 84.251, -64.0853, 32.7301, 0.83 ) }
    dend_33 { pt3dadd( 85.6999, -65.0791, 32.6832, 0.28 ) }
    dend_33 { pt3dadd( 86.7313, -65.931, 32.5991, 0.55 ) }
    dend_33 { pt3dadd( 93.815, -67.6057, 34.1444, 0.55 ) }
    dend_33 { pt3dadd( 100.611, -70.5179, 35.2478, 0.55 ) }
    dend_33 { pt3dadd( 107.814, -72.3141, 35.8224, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 63/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.7715, -57.9973, 27.1023, 0.55 ) }
    dend_30 { pt3dadd( 40.7647, -60.2265, 27.035, 0.55 ) }
    dend_30 { pt3dadd( 41.3269, -61.4089, 26.9701, 0.55 ) }
    dend_30 { pt3dadd( 42.0336, -62.7676, 26.8761, 0.83 ) }
    dend_30 { pt3dadd( 42.872, -64.1564, 26.7848, 0.55 ) }
    dend_30 { pt3dadd( 44.0154, -65.8549, 26.685, 0.83 ) }
    dend_30 { pt3dadd( 44.9999, -67.2592, 26.5983, 0.28 ) }
    dend_30 { pt3dadd( 45.2881, -67.6328, 26.5579, 0.55 ) }
    dend_30 { pt3dadd( 45.9067, -68.4771, 26.4631, 0.28 ) }
    dend_30 { pt3dadd( 46.9149, -70.0407, 26.2612, 0.55 ) }
    dend_30 { pt3dadd( 47.4196, -70.9503, 26.1256, 0.83 ) }
    dend_30 { pt3dadd( 48.3539, -72.9016, 25.8114, 0.83 ) }
    dend_30 { pt3dadd( 48.9943, -74.5616, 25.5337, 0.28 ) }
    dend_30 { pt3dadd( 49.6966, -76.7748, 25.1349, 0.55 ) }
    dend_30 { pt3dadd( 50.127, -78.6399, 24.8054, 0.55 ) }
    dend_30 { pt3dadd( 50.2325, -79.5022, 24.6409, 0.28 ) }
    dend_30 { pt3dadd( 50.2561, -80.1172, 24.4958, 0.55 ) }
    dend_30 { pt3dadd( 50.2178, -81.2404, 24.1323, 0.28 ) }
    dend_30 { pt3dadd( 50.0194, -83.693, 23.1267, 0.55 ) }
    dend_30 { pt3dadd( 49.8535, -85.3762, 22.3106, 0.28 ) }
    dend_30 { pt3dadd( 49.6311, -87.0991, 21.3538, 0.55 ) }
    dend_30 { pt3dadd( 49.3966, -89.1727, 20.0632, 0.83 ) }
    dend_30 { pt3dadd( 49.1903, -90.8448, 18.8758, 0.55 ) }
    dend_30 { pt3dadd( 49.1646, -91.1446, 18.6138, 0.55 ) }
    dend_30 { pt3dadd( 49.1808, -91.5891, 18.1274, 0.28 ) }
    dend_30 { pt3dadd( 49.2985, -92.0633, 17.5617, 0.55 ) }
    dend_30 { pt3dadd( 49.6937, -92.9963, 16.4685, 0.28 ) }
    dend_30 { pt3dadd( 50.2536, -94.1919, 15.2456, 0.55 ) }
    dend_30 { pt3dadd( 50.9235, -95.7465, 13.8925, 0.28 ) }
    dend_30 { pt3dadd( 51.7294, -97.7886, 12.2506, 0.28 ) }
    dend_30 { pt3dadd( 51.9245, -98.358, 11.8146, 0.55 ) }
    dend_30 { pt3dadd( 52.2335, -99.4211, 11.066, 0.28 ) }
    dend_30 { pt3dadd( 52.5743, -100.754, 10.2439, 0.83 ) }
    dend_30 { pt3dadd( 52.8, -101.653, 9.77606, 0.28 ) }
    dend_30 { pt3dadd( 52.8597, -102.076, 9.59983, 0.55 ) }
    dend_30 { pt3dadd( 52.9664, -103.5, 9.07742, 0.28 ) }
    dend_30 { pt3dadd( 53.019, -104.279, 8.77376, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_30 { pt3dadd( 53.1316, -105.811, 8.15384, 0.28 ) }
    dend_30 { pt3dadd( 53.1793, -106.415, 7.87817, 0.55 ) }
    dend_30 { pt3dadd( 53.2454, -107.286, 7.49015, 0.28 ) }
    dend_30 { pt3dadd( 53.2787, -108.103, 7.1978, 0.55 ) }
    dend_30 { pt3dadd( 53.2889, -108.789, 7.01626, 0.28 ) }
    dend_30 { pt3dadd( 53.2837, -109.89, 6.79156, 0.55 ) }
    dend_30 { pt3dadd( 53.2636, -110.734, 6.67512, 0.28 ) }
    dend_30 { pt3dadd( 53.2419, -111.501, 6.58054, 0.83 ) }
    dend_30 { pt3dadd( 53.2009, -113.355, 6.39326, 0.28 ) }
    dend_30 { pt3dadd( 53.1486, -115.256, 6.23977, 0.83 ) }
    dend_30 { pt3dadd( 53.1194, -116.972, 6.14879, 0.28 ) }
    dend_30 { pt3dadd( 53.1174, -118.004, 6.11452, 0.55 ) }
    dend_30 { pt3dadd( 54.6496, -124.609, 2.70105, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 13/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.08056, -27.5811, -5.19271, 1.11 ) }
    dend_10 { pt3dadd( -2.36679, -30.048, -4.93422, 1.11 ) }
    dend_10 { pt3dadd( -2.60122, -32.0685, -4.72252, 1.11 ) }
    dend_10 { pt3dadd( -3.08007, -36.1956, -4.29008, 0.83 ) }
    dend_10 { pt3dadd( -3.92481, -43.4762, -3.52721, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.08056, -27.5811, -5.19271, 0.55 ) }
    dend_9 { pt3dadd( -8.25816, -31.8146, -7.79478, 0.55 ) }
    dend_9 { pt3dadd( -10.3618, -33.3186, -8.99368, 1.11 ) }
    dend_9 { pt3dadd( -12.2421, -34.7995, -10.3613, 0.55 ) }
    dend_9 { pt3dadd( -15.9675, -37.8242, -13.3255, 1.38 ) }
    dend_9 { pt3dadd( -18.7106, -40.0202, -15.4234, 0.55 ) }
    dend_9 { pt3dadd( -20.5935, -41.4852, -16.7729, 0.55 ) }
    dend_9 { pt3dadd( -23.9469, -44.0706, -19.4092, 0.55 ) }
    dend_9 { pt3dadd( -26.7037, -46.2937, -21.4895, 0.55 ) }
    dend_9 { pt3dadd( -28.885, -48.1564, -22.9167, 0.55 ) }
    dend_9 { pt3dadd( -32.1087, -51.0606, -24.5379, 0.83 ) }
    dend_9 { pt3dadd( -35.5432, -54.3106, -25.8122, 0.55 ) }
    dend_9 { pt3dadd( -37.2171, -55.8621, -26.1862, 0.55 ) }
    dend_9 { pt3dadd( -38.9117, -57.3904, -26.3131, 0.83 ) }
    dend_9 { pt3dadd( -41.3639, -59.6779, -26.1771, 0.28 ) }
    dend_9 { pt3dadd( -43.2281, -61.6063, -25.9026, 0.55 ) }
    dend_9 { pt3dadd( -44.1417, -62.6222, -25.7183, 0.55 ) }
    dend_9 { pt3dadd( -46.5367, -65.3509, -25.066, 0.55 ) }
    dend_9 { pt3dadd( -47.7913, -66.7398, -24.7253, 0.55 ) }
    dend_9 { pt3dadd( -49.9977, -69.0156, -24.2995, 0.28 ) }
    dend_9 { pt3dadd( -51.163, -70.1605, -24.2184, 0.55 ) }
    dend_9 { pt3dadd( -52.6119, -71.5755, -24.1873, 0.28 ) }
    dend_9 { pt3dadd( -53.961, -72.8919, -24.1725, 0.83 ) }
    dend_9 { pt3dadd( -55.5332, -74.4231, -24.1901, 0.28 ) }
    dend_9 { pt3dadd( -57.3948, -76.087, -24.4419, 0.83 ) }
    dend_9 { pt3dadd( -59.5094, -77.8995, -24.9599, 0.55 ) }
    dend_9 { pt3dadd( -60.3539, -78.677, -25.2963, 0.28 ) }
    dend_9 { pt3dadd( -61.6284, -79.9458, -25.9154, 0.55 ) }
    dend_9 { pt3dadd( -62.7207, -81.1657, -26.6869, 0.28 ) }
    dend_9 { pt3dadd( -64.8986, -83.8445, -28.7724, 0.55 ) }
    dend_9 { pt3dadd( -66.0581, -85.4017, -30.1039, 1.38 ) }
    dend_9 { pt3dadd( -68.6101, -89.0468, -33.4065, 0.28 ) }
    dend_9 { pt3dadd( -69.2461, -89.936, -34.3274, 0.83 ) }
    dend_9 { pt3dadd( -71.627, -93.2257, -37.9688, 0.55 ) }
    dend_9 { pt3dadd( -73.3535, -95.5565, -40.5894, 1.11 ) }
    dend_9 { pt3dadd( -74.574, -97.0772, -42.3672, 0.28 ) }
    dend_9 { pt3dadd( -75.7067, -98.3379, -43.8704, 0.83 ) }
    dend_9 { pt3dadd( -78.7134, -101.193, -47.2242, 0.28 ) }
    dend_9 { pt3dadd( -79.7035, -102.017, -48.1783, 0.55 ) }
    dend_9 { pt3dadd( -81.0339, -102.889, -49.1707, 0.28 ) }
    dend_9 { pt3dadd( -83.1952, -104.103, -50.489, 0.55 ) }
    dend_9 { pt3dadd( -84.6734, -104.802, -51.2163, 0.28 ) }
    dend_9 { pt3dadd( -85.8823, -105.297, -51.7736, 0.28 ) }
    dend_9 { pt3dadd( -87.6471, -105.961, -52.4929, 0.55 ) }
    dend_9 { pt3dadd( -91.828, -107.434, -54.3496, 0.28 ) }
    dend_9 { pt3dadd( -93.2635, -107.917, -54.9831, 0.83 ) }
    dend_9 { pt3dadd( -95.3166, -108.67, -55.7964, 1.11 ) }
    dend_9 { pt3dadd( -99.935, -110.464, -57.3876, 0.28 ) }
    dend_9 { pt3dadd( -100.898, -110.89, -57.674, 0.55 ) }
    dend_9 { pt3dadd( -104.265, -112.607, -58.466, 0.28 ) }
    dend_9 { pt3dadd( -105.736, -113.49, -58.6976, 1.11 ) }
    dend_9 { pt3dadd( -108.202, -115.112, -59.0093, 0.28 ) }
    dend_9 { pt3dadd( -110.429, -116.76, -59.1186, 0.83 ) }
    dend_9 { pt3dadd( -112.229, -118.219, -58.9815, 0.28 ) }
    dend_9 { pt3dadd( -112.766, -118.683, -58.9497, 0.55 ) }
    dend_9 { pt3dadd( -114.205, -119.961, -58.941, 0.28 ) }
    dend_9 { pt3dadd( -114.909, -120.548, -59.0408, 0.55 ) }
    dend_9 { pt3dadd( -117.778, -122.866, -59.7137, 0.28 ) }
    dend_9 { pt3dadd( -118.515, -123.431, -60.0621, 0.55 ) }
    dend_9 { pt3dadd( -121.401, -125.525, -61.707, 0.28 ) }
    dend_9 { pt3dadd( -123.434, -127.008, -62.8469, 0.83 ) }
    dend_9 { pt3dadd( -126.203, -129.202, -64.799, 0.28 ) }
    dend_9 { pt3dadd( -127.144, -130.006, -65.547, 0.83 ) }
    dend_9 { pt3dadd( -131.958, -134.594, -70.2102, 0.28 ) }
    dend_9 { pt3dadd( -132.906, -135.598, -71.2201, 0.55 ) }
    dend_9 { pt3dadd( -135.142, -138.467, -73.7988, 0.83 ) }
    dend_9 { pt3dadd( -139.363, -144.896, -78.7661, 0.28 ) }
    dend_9 { pt3dadd( -140.021, -146.067, -79.5969, 0.83 ) }
    dend_9 { pt3dadd( -142.542, -151.157, -82.8036, 0.28 ) }
    dend_9 { pt3dadd( -142.897, -152.099, -83.2695, 0.83 ) }
    dend_9 { pt3dadd( -144.051, -155.56, -84.9373, 0.28 ) }
    dend_9 { pt3dadd( -144.323, -156.481, -85.3594, 0.55 ) }
    dend_9 { pt3dadd( -144.973, -159.345, -86.1805, 0.28 ) }
    dend_9 { pt3dadd( -145.396, -161.744, -86.7796, 0.55 ) }
    dend_9 { pt3dadd( -145.979, -166.97, -87.6797, 0.28 ) }
    dend_9 { pt3dadd( -146.058, -167.849, -87.8534, 0.55 ) }
    dend_9 { pt3dadd( -146.292, -170.491, -88.3792, 0.28 ) }
    dend_9 { pt3dadd( -146.385, -171.219, -88.5253, 0.55 ) }
    dend_9 { pt3dadd( -146.833, -173.854, -88.9638, 0.28 ) }
    dend_9 { pt3dadd( -147.099, -174.8, -89.1731, 0.55 ) }
    dend_9 { pt3dadd( -147.954, -177.064, -89.6772, 0.28 ) }
    dend_9 { pt3dadd( -148.497, -178.205, -89.9484, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_9 { pt3dadd( -150.985, -182.413, -90.9125, 0.28 ) }
    dend_9 { pt3dadd( -151.935, -183.718, -91.2619, 0.55 ) }
    dend_9 { pt3dadd( -154.724, -186.889, -92.101, 0.28 ) }
    dend_9 { pt3dadd( -155.359, -187.498, -92.2611, 0.55 ) }
    dend_9 { pt3dadd( -156.944, -188.798, -92.5805, 0.28 ) }
    dend_9 { pt3dadd( -158.048, -189.574, -92.7448, 0.55 ) }
    dend_9 { pt3dadd( -160.137, -190.598, -93.0562, 0.28 ) }
    dend_9 { pt3dadd( -162.023, -191.342, -93.3736, 0.55 ) }
    dend_9 { pt3dadd( -164.762, -192.243, -93.7074, 0.28 ) }
    dend_9 { pt3dadd( -166.276, -192.715, -93.9304, 0.55 ) }
    dend_9 { pt3dadd( -168.139, -193.271, -94.2731, 0.28 ) }
    dend_9 { pt3dadd( -173.104, -194.669, -95.3091, 0.28 ) }
    dend_9 { pt3dadd( -174.633, -195.051, -95.6385, 0.28 ) }
    dend_9 { pt3dadd( -176.517, -195.406, -96.1708, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -48.3523, -47.1127, 9.62558, 0.55 ) }
    dend_4 { pt3dadd( -48.0063, -49.3083, 8.65242, 0.55 ) }
    dend_4 { pt3dadd( -47.5729, -52.0935, 7.59537, 0.55 ) }
    dend_4 { pt3dadd( -46.9586, -55.4417, 6.36352, 0.83 ) }
    dend_4 { pt3dadd( -46.3202, -58.7905, 5.19726, 0.83 ) }
    dend_4 { pt3dadd( -46.0312, -60.4436, 4.65881, 0.28 ) }
    dend_4 { pt3dadd( -45.8886, -61.4121, 4.3437, 0.83 ) }
    dend_4 { pt3dadd( -45.5909, -63.3813, 3.70734, 0.83 ) }
    dend_4 { pt3dadd( -45.1688, -66.5384, 2.67674, 0.28 ) }
    dend_4 { pt3dadd( -45.1139, -67.4442, 2.45633, 0.28 ) }
    dend_4 { pt3dadd( -45.1903, -68.9532, 2.1093, 0.55 ) }
    dend_4 { pt3dadd( -45.4049, -71.395, 1.35987, 0.28 ) }
    dend_4 { pt3dadd( -45.4737, -71.9454, 1.17941, 0.55 ) }
    dend_4 { pt3dadd( -45.8393, -74.1851, 0.464031, 0.28 ) }
    dend_4 { pt3dadd( -46.1075, -75.5268, 0.161169, 0.83 ) }
    dend_4 { pt3dadd( -46.5484, -77.6192, -0.231064, 0.28 ) }
    dend_4 { pt3dadd( -47.219, -80.2811, -0.551223, 0.55 ) }
    dend_4 { pt3dadd( -47.8077, -82.2419, -0.622066, 0.55 ) }
    dend_4 { pt3dadd( -48.3635, -83.5212, -0.593742, 0.55 ) }
    dend_4 { pt3dadd( -49.7474, -85.6624, -0.311527, 0.83 ) }
    dend_4 { pt3dadd( -50.7517, -86.9572, -0.0525828, 0.83 ) }
    dend_4 { pt3dadd( -52.0199, -88.2768, 0.333828, 0.28 ) }
    dend_4 { pt3dadd( -52.7026, -88.8997, 0.535473, 0.55 ) }
    dend_4 { pt3dadd( -55.1935, -91.0002, 1.22253, 0.83 ) }
    dend_4 { pt3dadd( -57.1939, -92.4977, 1.78264, 0.28 ) }
    dend_4 { pt3dadd( -57.7392, -92.8751, 1.93449, 0.55 ) }
    dend_4 { pt3dadd( -58.5263, -93.4481, 2.15502, 0.28 ) }
    dend_4 { pt3dadd( -59.6118, -94.3049, 2.44996, 0.55 ) }
    dend_4 { pt3dadd( -61.5251, -96.1164, 2.81543, 0.55 ) }
    dend_4 { pt3dadd( -62.8118, -97.6025, 2.90188, 0.28 ) }
    dend_4 { pt3dadd( -63.5137, -98.4947, 2.81044, 0.83 ) }
    dend_4 { pt3dadd( -64.5937, -99.8992, 2.52199, 0.28 ) }
    dend_4 { pt3dadd( -65.0248, -100.47, 2.37076, 0.28 ) }
    dend_4 { pt3dadd( -67.0804, -103.034, 1.72051, 0.83 ) }
    dend_4 { pt3dadd( -68.7023, -105.011, 1.19115, 0.28 ) }
    dend_4 { pt3dadd( -70.0795, -106.765, 0.850848, 0.83 ) }
    dend_4 { pt3dadd( -70.813, -107.708, 0.746827, 0.28 ) }
    dend_4 { pt3dadd( -71.4896, -108.55, 0.69951, 0.83 ) }
    dend_4 { pt3dadd( -73.6357, -111.049, 0.736227, 0.28 ) }
    dend_4 { pt3dadd( -73.962, -111.396, 0.826285, 1.11 ) }
    dend_4 { pt3dadd( -75.4987, -113.219, 1.64984, 0.55 ) }
    dend_4 { pt3dadd( -76.3833, -114.271, 2.35798, 1.11 ) }
    dend_4 { pt3dadd( -79.964, -121.73, 1.40759, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 57/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -48.3523, -47.1127, 9.62558, 0.55 ) }
    dend_3 { pt3dadd( -49.6342, -49.9302, 13.4902, 0.55 ) }
    dend_3 { pt3dadd( -50.4885, -52.2014, 16.1705, 0.55 ) }
    dend_3 { pt3dadd( -52.0918, -56.5438, 20.6661, 0.55 ) }
    dend_3 { pt3dadd( -53.2156, -59.5877, 23.8174, 0.55 ) }
    dend_3 { pt3dadd( -54.0807, -61.9306, 26.243, 0.55 ) }
    dend_3 { pt3dadd( -55.4647, -65.6791, 30.1237, 0.55 ) }
    dend_3 { pt3dadd( -56.1608, -67.1692, 31.7503, 0.55 ) }
    dend_3 { pt3dadd( -57.6428, -70.9972, 35.2559, 0.55 ) }
    dend_3 { pt3dadd( -59.1364, -76.4376, 45.0874, 0.55 ) }
    dend_3 { pt3dadd( -60.535, -83.323, 54.0852, 0.55 ) }
    dend_3 { pt3dadd( -63.2049, -90.5014, 62.5734, 0.55 ) }
    dend_3 { pt3dadd( -65.1759, -97.4081, 71.4491, 0.55 ) }
    dend_3 { pt3dadd( -65.5958, -104.68, 80.2646, 0.55 ) }
    dend_3 { pt3dadd( -67.5323, -111.026, 89.5176, 0.55 ) }
    dend_3 { pt3dadd( -69.1768, -115.386, 99.7889, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 73/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 107.814, -72.3141, 35.8224, 0.55 ) }
    dend_35 { pt3dadd( 117.573, -74.8059, 36.2731, 0.55 ) }
    dend_35 { pt3dadd( 127.436, -75.7436, 38.0311, 0.55 ) }
    dend_35 { pt3dadd( 137.394, -75.0902, 39.3465, 0.55 ) }
    dend_35 { pt3dadd( 147.264, -74.2228, 41.132, 0.55 ) }
    dend_35 { pt3dadd( 156.929, -71.6131, 42.479, 0.55 ) }
    dend_35 { pt3dadd( 166.21, -67.679, 43.6158, 0.55 ) }
    dend_35 { pt3dadd( 174.283, -62.0301, 46.3338, 0.55 ) }
    dend_35 { pt3dadd( 182.658, -56.5911, 48.4658, 0.55 ) }
    dend_35 { pt3dadd( 190.346, -49.8963, 49.8084, 0.55 ) }
    dend_35 { pt3dadd( 198.571, -43.7855, 50.019, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 84/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 107.814, -72.3141, 35.8224, 0.55 ) }
    dend_34 { pt3dadd( 119.678, -75.3205, 36.1245, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 86/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 54.6496, -124.609, 2.70105, 0.55 ) }
    dend_32 { pt3dadd( 56.9764, -134.878, -1.03613, 0.55 ) }
    dend_32 { pt3dadd( 59.8708, -145.05, -4.62036, 0.55 ) }
    dend_32 { pt3dadd( 61.9968, -155.3, -8.52438, 0.55 ) }
    dend_32 { pt3dadd( 64.0009, -165.044, -13.5646, 0.55 ) }
    dend_32 { pt3dadd( 67.8312, -173.319, -19.8451, 0.55 ) }
    dend_32 { pt3dadd( 71.584, -181.294, -26.5193, 0.55 ) }
    dend_32 { pt3dadd( 76.6317, -188.114, -33.4971, 0.55 ) }
    dend_32 { pt3dadd( 81.1512, -195.079, -40.7064, 0.55 ) }
    dend_32 { pt3dadd( 87.9984, -201.41, -46.4367, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 96/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 54.6496, -124.609, 2.70105, 0.55 ) }
    dend_31 { pt3dadd( 55.3054, -133.487, 0.911798, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.92481, -43.4762, -3.52721, 0.83 ) }
    dend_12 { pt3dadd( -3.75056, -47.25, -2.8531, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -3.90521, -50.3891, -2.29306, 0.83 ) }
    dend_12 { pt3dadd( -4.32953, -54.6302, -1.43947, 0.83 ) }
    dend_12 { pt3dadd( -4.76291, -58.9598, -0.609456, 0.83 ) }
    dend_12 { pt3dadd( -5.06219, -62.5093, 0.0272752, 0.83 ) }
    dend_12 { pt3dadd( -5.29411, -66.1137, 0.597635, 0.83 ) }
    dend_12 { pt3dadd( -5.56226, -71.1875, 1.25479, 0.83 ) }
    dend_12 { pt3dadd( -5.81474, -75.3214, 1.70203, 0.83 ) }
    dend_12 { pt3dadd( -6.2251, -80.8416, 2.08848, 0.83 ) }
    dend_12 { pt3dadd( -6.36154, -83.2665, 2.15576, 0.55 ) }
    dend_12 { pt3dadd( -6.39759, -86.068, 2.07632, 1.11 ) }
    dend_12 { pt3dadd( -6.29615, -89.437, 1.85694, 0.55 ) }
    dend_12 { pt3dadd( -5.963, -93.6984, 1.38448, 1.11 ) }
    dend_12 { pt3dadd( -5.75461, -96.5138, 0.917678, 0.55 ) }
    dend_12 { pt3dadd( -5.65715, -99.5261, 0.35507, 0.83 ) }
    dend_12 { pt3dadd( -5.66738, -102.159, -0.154799, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.92481, -43.4762, -3.52721, 0.55 ) }
    dend_11 { pt3dadd( -3.32804, -46.0684, -2.68167, 0.55 ) }
    dend_11 { pt3dadd( -3.06107, -47.4989, -2.05873, 0.28 ) }
    dend_11 { pt3dadd( -2.93289, -48.2725, -1.72702, 0.83 ) }
    dend_11 { pt3dadd( -2.34933, -51.384, -0.206405, 0.55 ) }
    dend_11 { pt3dadd( -1.78761, -54.91, 1.54799, 0.55 ) }
    dend_11 { pt3dadd( -0.557761, -63.5266, 5.69508, 0.83 ) }
    dend_11 { pt3dadd( -0.160333, -66.3078, 7.08158, 0.55 ) }
    dend_11 { pt3dadd( 0.535473, -70.8208, 9.33383, 0.55 ) }
    dend_11 { pt3dadd( 1.39894, -75.9954, 11.8767, 0.28 ) }
    dend_11 { pt3dadd( 1.96924, -79.2222, 13.4513, 0.55 ) }
    dend_11 { pt3dadd( 2.48525, -82.018, 14.7219, 0.55 ) }
    dend_11 { pt3dadd( 3.29389, -86.0379, 16.2054, 0.55 ) }
    dend_11 { pt3dadd( 3.69626, -87.6222, 16.7798, 0.28 ) }
    dend_11 { pt3dadd( 4.94379, -91.8293, 18.362, 0.83 ) }
    dend_11 { pt3dadd( 5.77706, -94.3063, 19.2228, 0.28 ) }
    dend_11 { pt3dadd( 6.71511, -96.7603, 20.0985, 0.83 ) }
    dend_11 { pt3dadd( 7.66207, -99.2982, 21.0192, 0.28 ) }
    dend_11 { pt3dadd( 8.04047, -100.391, 21.3969, 0.55 ) }
    dend_11 { pt3dadd( 9.04752, -103.589, 22.7313, 0.28 ) }
    dend_11 { pt3dadd( 9.56976, -105.369, 23.6347, 0.83 ) }
    dend_11 { pt3dadd( 10.0922, -107.209, 25.0527, 0.55 ) }
    dend_11 { pt3dadd( 11.0106, -110.603, 28.1492, 0.28 ) }
    dend_11 { pt3dadd( 11.3566, -112.065, 29.5343, 1.11 ) }
    dend_11 { pt3dadd( 12.4082, -116.63, 34.1492, 0.28 ) }
    dend_11 { pt3dadd( 12.9057, -118.883, 36.6121, 0.55 ) }
    dend_11 { pt3dadd( 14.3619, -125.237, 44.3068, 0.28 ) }
    dend_11 { pt3dadd( 14.7691, -126.843, 46.4906, 0.83 ) }
    dend_11 { pt3dadd( 15.3647, -129.138, 50.0325, 0.28 ) }
    dend_11 { pt3dadd( 16.4657, -141.135, 56.839, 0.28 ) }
    dend_11 { pt3dadd( 16.189, -154.35, 61.2717, 0.28 ) }
    dend_11 { pt3dadd( 14.4023, -167.213, 66.2546, 0.28 ) }
    dend_11 { pt3dadd( 11.8009, -179.354, 72.3863, 0.28 ) }
    dend_11 { pt3dadd( 9.63276, -190.361, 80.352, 0.28 ) }
    dend_11 { pt3dadd( 6.19548, -200.355, 89.0475, 0.28 ) }
    dend_11 { pt3dadd( 2.59628, -209.085, 98.8435, 0.28 ) }
    dend_11 { pt3dadd( -0.180033, -218.15, 108.631, 0.28 ) }
    dend_11 { pt3dadd( -1.56878, -228.033, 117.985, 0.28 ) }
    dend_11 { pt3dadd( -3.23125, -236.785, 128.272, 0.28 ) }
    dend_11 { pt3dadd( -5.27836, -246.104, 138.023, 0.28 ) }
    dend_11 { pt3dadd( -5.80143, -255.507, 147.901, 0.28 ) }
    dend_11 { pt3dadd( -3.93787, -264.058, 158.308, 0.28 ) }
    dend_11 { pt3dadd( -2.22723, -274.556, 166.979, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 58/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.66738, -102.159, -0.154799, 0.55 ) }
    dend_16 { pt3dadd( -4.61574, -104.107, -0.322457, 0.55 ) }
    dend_16 { pt3dadd( -3.8921, -105.991, -0.582021, 0.28 ) }
    dend_16 { pt3dadd( -3.56209, -107.252, -0.740921, 0.83 ) }
    dend_16 { pt3dadd( -3.30651, -108.55, -0.881788, 0.28 ) }
    dend_16 { pt3dadd( -2.53759, -112.841, -1.34407, 0.83 ) }
    dend_16 { pt3dadd( -2.17619, -114.759, -1.56128, 0.55 ) }
    dend_16 { pt3dadd( -1.71097, -117.402, -1.95003, 0.83 ) }
    dend_16 { pt3dadd( -1.14131, -120.314, -2.44449, 0.83 ) }
    dend_16 { pt3dadd( -0.758911, -122.115, -2.78279, 0.55 ) }
    dend_16 { pt3dadd( -0.379217, -123.738, -3.09981, 0.55 ) }
    dend_16 { pt3dadd( 0.354205, -126.447, -3.69, 0.83 ) }
    dend_16 { pt3dadd( 1.16223, -129.272, -4.38032, 0.55 ) }
    dend_16 { pt3dadd( 2.39465, -133.481, -5.48547, 0.55 ) }
    dend_16 { pt3dadd( 2.79586, -135.05, -5.91778, 0.28 ) }
    dend_16 { pt3dadd( 3.22742, -137.357, -6.51125, 0.83 ) }
    dend_16 { pt3dadd( 3.51956, -139.926, -7.08651, 0.83 ) }
    dend_16 { pt3dadd( 3.61065, -142.048, -7.42327, 0.55 ) }
    dend_16 { pt3dadd( 3.5986, -143.975, -7.6047, 0.55 ) }
    dend_16 { pt3dadd( 3.4947, -147.955, -7.78009, 0.55 ) }
    dend_16 { pt3dadd( 3.48282, -149.878, -7.74711, 0.83 ) }
    dend_16 { pt3dadd( 3.52743, -152.331, -7.60118, 0.83 ) }
    dend_16 { pt3dadd( 3.75636, -155.946, -7.22888, 0.55 ) }
    dend_16 { pt3dadd( 4.02945, -158.316, -6.92385, 0.55 ) }
    dend_16 { pt3dadd( 4.29699, -159.889, -6.72548, 0.83 ) }
    dend_16 { pt3dadd( 4.8568, -162.412, -6.44417, 0.28 ) }
    dend_16 { pt3dadd( 4.99888, -162.974, -6.40904, 0.55 ) }
    dend_16 { pt3dadd( 5.6364, -165.511, -6.35518, 0.28 ) }
    dend_16 { pt3dadd( 5.95897, -166.79, -6.39892, 0.55 ) }
    dend_16 { pt3dadd( 6.32816, -168.29, -6.49053, 0.28 ) }
    dend_16 { pt3dadd( 6.98185, -171.161, -6.73393, 1.66 ) }
    dend_16 { pt3dadd( 7.75335, -174.836, -7.08778, 0.83 ) }
    dend_16 { pt3dadd( 8.00642, -176.119, -7.1898, 1.11 ) }
    dend_16 { pt3dadd( 8.31281, -177.781, -7.28928, 0.55 ) }
    dend_16 { pt3dadd( 8.70109, -179.51, -7.33028, 0.28 ) }
    dend_16 { pt3dadd( 8.96468, -180.528, -7.31082, 0.83 ) }
    dend_16 { pt3dadd( 9.3811, -181.889, -7.21405, 0.28 ) }
    dend_16 { pt3dadd( 9.73113, -182.876, -7.0651, 0.55 ) }
    dend_16 { pt3dadd( 10.2891, -184.339, -6.84915, 0.28 ) }
    dend_16 { pt3dadd( 11.2964, -186.679, -6.37599, 0.28 ) }
    dend_16 { pt3dadd( 12.5675, -189.539, -5.73999, 0.83 ) }
    dend_16 { pt3dadd( 13.135, -190.758, -5.42682, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( 14.2896, -193.346, -4.73543, 0.55 ) }
    dend_16 { pt3dadd( 15.4611, -195.933, -4.06137, 0.83 ) }
    dend_16 { pt3dadd( 17.3474, -200.349, -2.90665, 0.55 ) }
    dend_16 { pt3dadd( 18.1405, -202.26, -2.38318, 0.55 ) }
    dend_16 { pt3dadd( 19.4002, -205.206, -1.50787, 0.55 ) }
    dend_16 { pt3dadd( 20.3755, -207.295, -0.817523, 0.55 ) }
    dend_16 { pt3dadd( 21.5751, -209.674, 0.0193892, 0.55 ) }
    dend_16 { pt3dadd( 22.7803, -211.867, 0.94724, 0.55 ) }
    dend_16 { pt3dadd( 23.8927, -213.782, 1.73717, 0.55 ) }
    dend_16 { pt3dadd( 25.0862, -215.744, 2.56588, 0.55 ) }
    dend_16 { pt3dadd( 27.4017, -219.455, 4.14817, 0.55 ) }
    dend_16 { pt3dadd( 27.9998, -220.361, 4.55503, 0.55 ) }
    dend_16 { pt3dadd( 29.3771, -222.54, 5.51346, 0.83 ) }
    dend_16 { pt3dadd( 30.2751, -223.969, 6.01751, 0.28 ) }
    dend_16 { pt3dadd( 31.0009, -225.314, 6.39292, 0.83 ) }
    dend_16 { pt3dadd( 31.9693, -227.27, 6.81322, 0.28 ) }
    dend_16 { pt3dadd( 32.3953, -228.301, 6.99056, 0.55 ) }
    dend_16 { pt3dadd( 33.1796, -230.205, 7.35441, 0.28 ) }
    dend_16 { pt3dadd( 33.76, -231.598, 7.62425, 0.83 ) }
    dend_16 { pt3dadd( 34.8031, -234.104, 8.21732, 0.28 ) }
    dend_16 { pt3dadd( 35.3617, -235.494, 8.56269, 0.55 ) }
    dend_16 { pt3dadd( 36.1612, -237.718, 9.11031, 0.55 ) }
    dend_16 { pt3dadd( 36.688, -239.394, 9.50149, 0.55 ) }
    dend_16 { pt3dadd( 37.2589, -241.212, 9.7981, 0.28 ) }
    dend_16 { pt3dadd( 37.6313, -242.328, 9.86965, 0.28 ) }
    dend_16 { pt3dadd( 38.4075, -244.482, 9.77073, 0.83 ) }
    dend_16 { pt3dadd( 39.0078, -246.104, 9.58179, 0.55 ) }
    dend_16 { pt3dadd( 40.2524, -249.336, 8.97742, 0.55 ) }
    dend_16 { pt3dadd( 41.5464, -252.51, 8.25459, 0.55 ) }
    dend_16 { pt3dadd( 42.5037, -254.789, 7.67988, 0.28 ) }
    dend_16 { pt3dadd( 43.2733, -256.698, 7.19088, 0.55 ) }
    dend_16 { pt3dadd( 44.1923, -259.266, 6.55945, 0.55 ) }
    dend_16 { pt3dadd( 45.0434, -262.306, 5.98995, 0.55 ) }
    dend_16 { pt3dadd( 45.3754, -263.949, 5.8209, 0.83 ) }
    dend_16 { pt3dadd( 45.5246, -265.553, 5.82377, 0.83 ) }
    dend_16 { pt3dadd( 45.5355, -267.671, 5.98231, 0.55 ) }
    dend_16 { pt3dadd( 45.3873, -269.428, 6.16684, 0.83 ) }
    dend_16 { pt3dadd( 44.9361, -272.424, 6.58682, 0.28 ) }
    dend_16 { pt3dadd( 44.8092, -273.178, 6.71278, 0.55 ) }
    dend_16 { pt3dadd( 44.6103, -274.699, 6.95807, 0.28 ) }
    dend_16 { pt3dadd( 44.5157, -276.122, 7.15096, 0.55 ) }
    dend_16 { pt3dadd( 44.5249, -278.657, 7.39727, 0.28 ) }
    dend_16 { pt3dadd( 44.5885, -279.347, 7.46458, 0.83 ) }
    dend_16 { pt3dadd( 44.9108, -281.904, 7.70067, 0.28 ) }
    dend_16 { pt3dadd( 45.0872, -283.21, 7.82292, 0.55 ) }
    dend_16 { pt3dadd( 45.3167, -285.127, 7.96675, 0.28 ) }
    dend_16 { pt3dadd( 45.4571, -286.192, 8.05856, 0.83 ) }
    dend_16 { pt3dadd( 46.0361, -290.746, 8.5056, 0.28 ) }
    dend_16 { pt3dadd( 46.2149, -292.898, 8.7003, 0.55 ) }
    dend_16 { pt3dadd( 46.242, -294.492, 8.85244, 0.55 ) }
    dend_16 { pt3dadd( 46.2374, -296.829, 9.10091, 0.55 ) }
    dend_16 { pt3dadd( 48.4085, -306.113, 8.30523, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 52/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.66738, -102.159, -0.154799, 0.83 ) }
    dend_13 { pt3dadd( -5.61047, -105.166, -0.331689, 0.83 ) }
    dend_13 { pt3dadd( -5.56882, -108.015, -0.547849, 0.28 ) }
    dend_13 { pt3dadd( -5.56665, -109.854, -0.88693, 1.11 ) }
    dend_13 { pt3dadd( -5.66102, -112.543, -1.33888, 0.28 ) }
    dend_13 { pt3dadd( -5.73475, -113.286, -1.46447, 0.55 ) }
    dend_13 { pt3dadd( -6.00409, -115.102, -1.74955, 0.28 ) }
    dend_13 { pt3dadd( -6.08036, -115.496, -1.80173, 0.55 ) }
    dend_13 { pt3dadd( -6.73637, -118.989, -2.23881, 0.28 ) }
    dend_13 { pt3dadd( -7.40357, -121.766, -3.03041, 0.83 ) }
    dend_13 { pt3dadd( -8.07499, -124.133, -3.94854, 0.28 ) }
    dend_13 { pt3dadd( -8.54658, -125.714, -4.57213, 0.55 ) }
    dend_13 { pt3dadd( -9.76361, -129.696, -6.13563, 0.28 ) }
    dend_13 { pt3dadd( -10.2248, -131.169, -6.75364, 0.83 ) }
    dend_13 { pt3dadd( -12.5947, -138.476, -10.1947, 0.28 ) }
    dend_13 { pt3dadd( -12.9206, -139.487, -10.8428, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.9206, -139.487, -10.8428, 0.28 ) }
    dend_15 { pt3dadd( -11.6273, -143.684, -8.69211, 0.28 ) }
    dend_15 { pt3dadd( -11.3986, -144.426, -8.31184, 0.83 ) }
    dend_15 { pt3dadd( -10.6849, -146.742, -7.12506, 0.28 ) }
    dend_15 { pt3dadd( -10.5751, -147.098, -6.94248, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.9206, -139.487, -10.8428, 0.28 ) }
    dend_14 { pt3dadd( -12.4697, -143.207, -9.16943, 0.28 ) }
    dend_14 { pt3dadd( -12.2722, -145.202, -8.4728, 0.83 ) }
    dend_14 { pt3dadd( -12.0253, -148.351, -7.59476, 0.28 ) }
    dend_14 { pt3dadd( -11.9847, -149.009, -7.43804, 0.83 ) }
    dend_14 { pt3dadd( -11.8582, -151.155, -6.97045, 0.28 ) }
    dend_14 { pt3dadd( -11.7936, -152.449, -6.72684, 0.55 ) }
    dend_14 { pt3dadd( -11.771, -154.971, -6.47035, 0.28 ) }
    dend_14 { pt3dadd( -11.7826, -156.782, -6.23954, 0.83 ) }
    dend_14 { pt3dadd( -11.804, -158.325, -6.03241, 0.28 ) }
    dend_14 { pt3dadd( -11.8002, -159.019, -5.88991, 0.55 ) }
    dend_14 { pt3dadd( -11.737, -162.243, -5.02212, 0.28 ) }
    dend_14 { pt3dadd( -11.7219, -162.548, -4.91778, 0.55 ) }
    dend_14 { pt3dadd( -11.4196, -165.945, -3.61772, 0.28 ) }
    dend_14 { pt3dadd( -11.1542, -167.88, -2.71099, 0.83 ) }
    dend_14 { pt3dadd( -10.568, -170.88, -1.11492, 0.28 ) }
    dend_14 { pt3dadd( -10.3418, -171.836, -0.520662, 0.55 ) }
    dend_14 { pt3dadd( -9.74433, -173.72, 0.598272, 0.28 ) }
    dend_14 { pt3dadd( -9.27179, -175.009, 1.28202, 0.28 ) }
    dend_14 { pt3dadd( -8.14222, -177.746, 2.49633, 0.55 ) }
    dend_14 { pt3dadd( -7.11218, -180.219, 3.41201, 0.28 ) }
    dend_14 { pt3dadd( -6.16592, -182.622, 4.04608, 0.55 ) }
    dend_14 { pt3dadd( -4.40761, -187.565, 4.7653, 0.28 ) }
    dend_14 { pt3dadd( -4.03486, -188.791, 4.8064, 0.55 ) }
    dend_14 { pt3dadd( -3.60797, -190.359, 4.71418, 0.28 ) }
    dend_14 { pt3dadd( -3.3273, -191.613, 4.50249, 0.55 ) }
    dend_14 { pt3dadd( -2.87628, -194.107, 3.9049, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_14 { pt3dadd( -2.62644, -196.118, 3.39983, 0.55 ) }
    dend_14 { pt3dadd( -2.55427, -198.411, 3.00336, 0.28 ) }
    dend_14 { pt3dadd( -2.55389, -199.055, 2.91624, 0.55 ) }
    dend_14 { pt3dadd( -2.55853, -200.573, 2.79921, 0.28 ) }
    dend_14 { pt3dadd( -2.54304, -201.603, 2.75606, 0.83 ) }
    dend_14 { pt3dadd( -2.50358, -204.383, 2.68232, 0.28 ) }
    dend_14 { pt3dadd( -2.47683, -205.354, 2.69723, 0.55 ) }
    dend_14 { pt3dadd( -2.39681, -208.346, 2.71806, 0.28 ) }
    dend_14 { pt3dadd( -2.33831, -211.164, 2.81591, 0.28 ) }
    dend_14 { pt3dadd( -2.30791, -212.256, 2.87864, 0.55 ) }
    dend_14 { pt3dadd( 0.39197, -222.419, 5.88405, 0.55 ) }
    dend_14 { pt3dadd( 1.71124, -232.554, 9.77674, 0.55 ) }
    dend_14 { pt3dadd( 3.20402, -242.475, 14.0836, 0.55 ) }
    dend_14 { pt3dadd( 4.9105, -251.112, 20.3689, 0.55 ) }
    dend_14 { pt3dadd( 7.14141, -259.939, 26.2354, 0.55 ) }
    dend_14 { pt3dadd( 8.09457, -268.773, 32.433, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_40, dend_27, dend_22, dend_17, dend_0, axon_0, dend_42, dend_41, dend_37, dend_28, dend_24, dend_23, dend_21, dend_18, dend_6, dend_1, axon_1, dend_39, dend_38, dend_36, dend_29, dend_26, dend_25, dend_20, dend_19, dend_8, dend_7, dend_5, dend_2, dend_33, dend_30, dend_10, dend_9, dend_4, dend_3, dend_35, dend_34, dend_32, dend_31, dend_12, dend_11, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_17 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_42 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_41 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_23 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_21 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_39 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_7 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_2 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_33 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_30 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_32 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_13 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_14 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_8 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_28 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_22 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_10 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_25 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_34 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_31 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, axon_0, axon_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 9
    dend_17 nseg = 3
    dend_42 nseg = 17
    dend_41 nseg = 5
    dend_37 nseg = 3
    dend_23 nseg = 3
    dend_21 nseg = 3
    dend_18 nseg = 5
    dend_39 nseg = 3
    dend_38 nseg = 7
    dend_36 nseg = 5
    dend_29 nseg = 3
    dend_26 nseg = 9
    dend_7 nseg = 11
    dend_5 nseg = 13
    dend_2 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_9 nseg = 13
    dend_4 nseg = 5
    dend_3 nseg = 5
    dend_35 nseg = 5
    dend_32 nseg = 5
    dend_12 nseg = 3
    dend_11 nseg = 15
    dend_16 nseg = 11
    dend_13 nseg = 3
    dend_14 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_NBC_f53cc303cc_0_0


