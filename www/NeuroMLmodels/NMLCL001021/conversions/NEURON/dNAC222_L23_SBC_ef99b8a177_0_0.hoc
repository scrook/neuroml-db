// Cell: dNAC222_L23_SBC_ef99b8a177_0_0
/*
{
  "id" : "dNAC222_L23_SBC_ef99b8a177_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.8173, -9.30952, 0.0, 2.67108", "1.66324, -8.44848, 0.0, 4.20258", "1.50919, -7.58744, 0.0, 6.01675", "1.35513, -6.7264, 0.0, 7.40809", "1.20108, -5.86536, 0.0, 8.71492", "1.04703, -5.00432, 0.0, 9.55969", "0.892972, -4.14327, 0.0, 10.2583", "0.738918, -3.28223, 0.0, 10.8215", "0.584864, -2.42119, 0.0, 11.2306", "0.43081, -1.56015, 0.0, 11.6028", "0.276756, -0.699111, 0.0, 11.8693", "0.122702, 0.16193, 0.0, 12.1344", "-0.0313515, 1.02297, 0.0, 12.4742", "-0.185405, 1.88401, 0.0, 12.8808", "-0.339459, 2.74505, 0.0, 13.26", "-0.493513, 3.60609, 0.0, 13.39", "-0.647567, 4.46714, 0.0, 13.2837", "-0.801621, 5.32818, 0.0, 12.6158", "-0.955675, 6.18922, 0.0, 11.4457", "-1.10973, 7.05026, 0.0, 8.79114", "-1.26378, 7.9113, 0.0, 4.73701" ]
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.195487, -9.0264, -2.59, 2.72", "0.0972039, -9.86284, -2.5941, 2.72", "-0.038197, -11.0152, -2.59976, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.124513, 2.2216, -11.41, 0.91", "1.11869, 1.69201, -12.2738, 0.91", "3.0207, 1.19198, -13.2019, 0.91", "2.40893, 0.914151, -13.5113, 0.91", "2.17697, 0.790981, -13.6097, 0.91", "1.46477, 0.380351, -13.9249, 0.91", "0.304032, -0.257067, -14.393, 0.91", "-1.04855, -0.944278, -14.8789, 1.59", "-2.02925, -1.43286, -15.1808, 1.59", "-4.24891, -2.4787, -15.8512, 0.23", "-5.73709, -3.13747, -16.2771, 0.91", "-7.04272, -3.66623, -16.6525, 1.81", "-9.56051, -4.62287, -17.3462, 0.68", "-11.0164, -5.1534, -17.7836, 0.68", "-11.9069, -5.45826, -18.105, 1.36", "-13.4139, -5.88202, -18.7197, 0.45", "-14.7199, -6.18732, -19.2694, 2.27", "-15.5822, -6.33042, -19.6434, 2.27", "-18.1874, -6.51905, -20.7085, 0.23", "-19.9322, -6.49903, -21.3495, 0.23", "-21.6563, -6.36445, -21.8961, 1.81", "-22.515, -6.24021, -22.1575, 1.81", "-24.9201, -5.72631, -22.804, 0.23", "-26.8298, -5.17957, -23.2644, 1.59", "-28.5812, -4.58244, -23.5953, 0.23", "-30.35, -3.95535, -23.8648, 1.13", "-32.1756, -3.3194, -24.1594, 0.23", "-33.7617, -2.80664, -24.4113, 1.13", "-34.6539, -2.53509, -24.5473, 2.04", "-36.8791, -1.92063, -24.8732, 0.23", "-38.4001, -1.53591, -25.0881, 0.91", "-40.233, -1.08175, -25.3398, 0.23", "-41.6388, -0.676922, -25.5028, 1.13", "-42.1339, -0.516709, -25.591, 2.04", "-42.9701, -0.203523, -25.713, 2.04", "-45.3388, 0.809731, -26.0077, 0.23", "-46.8663, 1.53508, -26.161, 0.91", "-49.2821, 2.77423, -26.37, 0.23", "-51.013, 3.71397, -26.5041, 0.23", "-55.458, 6.28795, -27.0496, 0.23", "-56.0606, 6.66827, -27.1477, 0.23", "-57.9436, 7.95044, -27.5227, 0.91", "-59.7289, 9.27072, -27.9843, 0.23", "-61.6615, 10.8541, -28.6838, 1.13", "-64.1861, 13.1252, -29.8236, 0.23", "-65.7925, 14.7313, -30.8299, 0.23", "-66.4155, 15.3606, -31.2421, 0.68", "-67.6601, 16.5734, -32.1273, 2.04", "-69.168, 17.9776, -33.223, 0.23", "-69.4743, 18.2189, -33.4405, 0.91", "-70.5313, 18.8716, -34.049, 0.23", "-71.2625, 19.2237, -34.4142, 0.91", "-73.6831, 20.1308, -35.402, 0.23", "-74.295, 20.3221, -35.597, 0.91", "-76.4292, 20.9353, -36.0237, 0.23", "-78.1357, 21.4244, -36.3504, 0.91", "-79.8631, 21.916, -36.6498, 0.23", "-81.2651, 22.3246, -36.8342, 0.91", "-83.3736, 22.963, -36.9158, 0.23", "-86.3669, 23.8946, -36.8845, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "4.00549, -5.1599, -4.86, 0.68", "5.39518, -5.90009, -5.05844, 0.68", "7.17919, -6.99464, -5.49531, 0.68", "8.81734, -8.2267, -6.13881, 1.59", "10.25, -9.58609, -6.85911, 1.36", "11.3249, -10.8913, -7.54675, 1.36", "12.2126, -12.2597, -8.21531, 1.36", "12.9661, -13.7764, -8.97674, 1.81", "13.72, -15.7004, -9.93073, 1.81", "14.2442, -17.4086, -10.7898, 1.13", "14.728, -19.2542, -11.6644, 2.04", "15.4079, -21.7102, -12.8735, 0.68", "15.7511, -22.6978, -13.3723, 0.68", "16.2954, -23.9617, -14.1099, 1.36", "17.2116, -25.8904, -15.3843, 2.27", "17.4904, -26.4253, -15.7789, 2.27", "18.6694, -28.7092, -17.571, 0.23", "19.3573, -30.0675, -18.72, 2.27", "20.4128, -32.3481, -20.6696, 2.04", "21.077, -33.8961, -22.0043, 0.23", "21.6088, -35.19, -23.0623, 0.23", "22.0453, -36.4241, -24.0611, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "3.49549, -7.2404, -2.51, 1.36", "3.94067, -7.96446, -2.18517, 1.36", "4.66861, -9.11416, -1.67519, 1.36", "5.79439, -10.8372, -0.910312, 1.36", "6.68567, -12.1854, -0.331121, 1.59", "7.93094, -13.9942, 0.427209, 1.13", "9.0656, -15.5583, 1.07093, 1.13", "9.60655, -16.2785, 1.34868, 1.13", "10.4748, -17.4139, 1.72417, 1.13", "11.6689, -18.891, 2.11301, 0.91", "12.2292, -19.545, 2.24479, 0.91", "12.8029, -20.2163, 2.36143, 0.91", "13.773, -21.4182, 2.55137, 0.91", "15.2243, -23.4007, 2.85341, 0.45", "16.475, -25.2627, 3.11757, 1.36", "17.7503, -27.3016, 3.40249, 0.68", "18.5473, -28.6312, 3.59078, 0.68", "19.1271, -29.6521, 3.74241, 0.68", "19.6658, -30.6303, 3.90237, 0.23", "20.1751, -31.5436, 4.06964, 0.23", "20.6035, -32.4604, 4.22963, 0.23", "21.0123, -33.4567, 4.35624, 0.23", "25.3484, -41.8204, 6.27725, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.15549, -4.4854, -0.73, 0.91", "5.68756, -4.80579, -0.476311, 0.91", "6.51077, -5.38218, 0.0381819, 1.36", "8.12516, -6.62376, 1.05983, 0.91", "9.18848, -7.5062, 1.68492, 0.68", "10.0991, -8.26188, 2.22023, 0.91", "11.987, -9.82857, 3.33003, 0.45", "14.2349, -11.785, 4.75455, 0.23", "14.9996, -12.488, 5.2852, 0.23", "16.15, -13.5768, 6.14333, 0.68", "23.6525, -19.2386, 9.0055, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.96451, 1.2336, 1.3, 1.13", "-7.12161, 0.808951, 1.44702, 1.13", "-9.68998, -0.156842, 1.79351, 0.91", "-11.2262, -0.769217, 2.01101, 0.91", "-12.3027, -1.23274, 2.1623, 1.13", "-14.0719, -2.06397, 2.42593, 0.91", "-15.9839, -3.0235, 2.7732, 0.68", "-16.5622, -3.33669, 2.90764, 1.13", "-17.7802, -4.04361, 3.25618, 0.68", "-18.8771, -4.71273, 3.55093, 0.68", "-19.9278, -5.36957, 3.81266, 1.36", "-21.2112, -6.15247, 4.11196, 0.23", "-21.7775, -6.48662, 4.24137, 0.23", "-22.5673, -6.88174, 4.403, 0.68", "-24.1862, -7.61208, 4.70924, 0.23", "-24.977, -7.92401, 4.83803, 1.36", "-25.6672, -8.16311, 4.91077, 1.36", "-27.0183, -8.61666, 4.96155, 0.45", "-28.9683, -9.31764, 5.05018, 0.23", "-38.4305, -12.3795, 5.3307, 0.23", "-47.5415, -16.2777, 4.94116, 0.23", "-56.9606, -19.1632, 3.50729, 0.23", "-66.6093, -20.2964, 1.16658, 0.23", "-75.8675, -20.6043, -2.59928, 0.23", "-84.9107, -19.2584, -6.62574, 0.23", "-92.8393, -18.0898, -12.5944, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.30549, 3.8461, -5.67, 1.36", "5.09755, 5.07036, -5.20054, 1.13", "5.87902, 6.41118, -4.68343, 0.68", "7.15214, 8.56804, -3.8631, 1.36", "8.1814, 10.0849, -3.29467, 0.68", "8.85567, 10.8753, -2.99868, 0.68", "9.44553, 11.4552, -2.82099, 0.68", "10.3403, 12.1879, -2.64592, 0.68", "11.2231, 12.7636, -2.54905, 0.68", "12.9432, 13.5349, -2.48363, 0.68", "15.0905, 14.2798, -2.49439, 0.23", "17.1472, 14.912, -2.51506, 0.23", "17.7365, 15.083, -2.51747, 0.91", "19.0427, 15.4494, -2.51501, 0.23", "20.3378, 15.8444, -2.48179, 0.91", "21.6974, 16.3449, -2.40343, 0.23", "22.5127, 16.6764, -2.32094, 0.23", "23.1752, 16.9276, -2.21477, 0.23", "24.0618, 17.2645, -2.09406, 0.23", "24.7285, 17.5488, -2.04357, 0.23", "26.3435, 18.3793, -1.92819, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.554513, 3.8746, -7.34, 1.59", "-1.95181, 5.83381, -7.34, 1.59", "-2.07996, 6.0135, -7.34, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.37549, 4.2926, -6.86, 0.23", "3.00087, 5.5372, -6.90157, 0.23", "3.66763, 7.16967, -6.95014, 0.23", "4.19089, 8.45078, -6.98825, 0.68", "4.51297, 9.23932, -7.01171, 1.36", "5.03413, 10.5153, -7.04967, 0.23", "5.45641, 11.5492, -7.08042, 0.23", "6.15514, 13.4474, -7.14163, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.944509, 5.9171, 1.72, 0.91", "-1.15328, 7.1003, 2.15361, 0.91", "-1.22474, 8.89643, 2.72474, 0.91", "-1.22928, 10.2225, 3.10203, 0.91", "-1.20926, 11.5095, 3.41879, 0.91", "-1.17356, 12.3342, 3.61203, 0.91", "-1.0775, 13.405, 3.8628, 0.91", "-0.773932, 15.0001, 4.21945, 0.91", "-0.58792, 15.6672, 4.351, 0.91", "-0.134709, 17.2893, 4.60565, 0.68", "0.045892, 18.1633, 4.72535, 1.13", "0.226688, 19.2299, 4.87134, 0.45", "0.397451, 20.0306, 4.97242, 0.45", "0.458207, 20.2875, 5.00409, 0.45", "0.721163, 21.2965, 5.1237, 0.45", "1.10865, 22.7663, 5.2735, 0.91", "1.41997, 24.1559, 5.37426, 0.23", "1.8031, 26.2178, 5.48471, 0.23", "3.89035, 35.2364, 7.83464, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.35549, 4.9861, -1.23, 1.36", "6.08887, 5.79617, -0.900403, 1.36", "7.28915, 6.98827, -0.442353, 1.36", "8.2226, 7.76324, -0.160896, 0.91", "9.97495, 8.96886, 0.214374, 1.36", "11.6174, 10.0988, 0.566108, 1.13", "12.4729, 10.6874, 0.749314, 1.59", "14.0752, 11.7306, 1.05724, 2.04", "15.9043, 12.8899, 1.32212, 1.36", "18.1106, 14.1213, 1.56107, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.14451, 3.9981, 1.3, 0.91", "-6.5365, 5.42279, 0.990282, 0.91", "-7.08727, 7.0967, 0.629619, 0.91", "-7.6846, 8.72647, 0.285377, 0.91", "-8.05439, 9.60692, 0.104621, 1.36", "-8.67847, 10.9993, -0.1325, 1.36", "-9.29331, 12.249, -0.312508, 1.13", "-10.0956, 13.5653, -0.435589, 1.13", "-10.9652, 14.7009, -0.442725, 1.13", "-12.2987, 16.0732, -0.297518, 0.68", "-13.1145, 16.7276, -0.137871, 0.68", "-13.9082, 17.2331, 0.065489, 0.68", "-15.1505, 17.8894, 0.451892, 0.68", "-15.8088, 18.211, 0.67581, 0.68", "-16.7708, 18.671, 1.00228, 1.13", "-18.1152, 19.3756, 1.40042, 0.68", "-19.6108, 20.3019, 1.7371, 0.68", "-20.9169, 21.2693, 1.95982, 0.68", "-21.8762, 22.0654, 2.04584, 0.68", "-22.8062, 22.8851, 2.07836, 0.45", "-23.7115, 23.7037, 2.05967, 0.68", "-24.6009, 24.538, 2.00874, 0.68", "-25.5146, 25.3791, 1.90254, 1.13", "-26.9064, 26.6138, 1.64101, 0.45", "-27.8493, 27.4308, 1.4554, 0.45", "-29.2957, 28.6193, 1.1795, 0.45", "-35.0816, 36.2981, 0.0893908, 0.45" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999984002661,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.26378, 7.9113, 0.0, 0.696396", "-3.90557, 22.6768, 0.0, 0.696396", "-6.54736, 37.4424, 0.0, 0.696396" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.038197, -11.0152, -2.59976, 0.91", "-1.60057, -12.5091, -2.23712, 0.91", "-3.34125, -14.1735, -1.8331, 1.13", "-4.46158, -15.2447, -1.57306, 1.13", "-6.05436, -16.7676, -1.20337, 0.91", "-7.29341, -17.9524, -0.915777, 1.59", "-8.28876, -18.9041, -0.68475, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.038197, -11.0152, -2.59976, 1.59", "0.467218, -13.5696, -1.40763, 1.59", "0.870569, -15.6082, -0.456246, 1.59", "1.2499, -17.5254, 0.438485, 2.04", "1.60051, -19.2974, 1.26547, 2.04" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "22.0453, -36.4241, -24.0611, 0.23", "22.5102, -39.196, -24.2411, 0.23", "22.7663, -41.2238, -24.4039, 0.23", "22.9408, -43.7821, -24.6162, 1.81", "23.0195, -45.8746, -24.7854, 0.68", "23.0277, -46.8997, -24.8663, 1.36", "22.9718, -49.0079, -25.0261, 0.23", "22.8536, -50.087, -25.1051, 1.13", "22.4573, -52.4902, -25.2738, 0.23", "22.1702, -53.8999, -25.3489, 0.68", "21.7879, -55.4882, -25.3761, 0.23", "21.447, -56.8798, -25.3555, 1.13", "21.113, -58.4878, -25.2441, 0.23", "20.7689, -60.2429, -25.0794, 0.23", "20.5239, -61.591, -24.9239, 1.13", "20.1955, -63.4695, -24.6821, 0.23", "19.9922, -64.8736, -24.4977, 0.91", "19.7058, -67.2157, -24.2447, 0.23", "19.6145, -68.0593, -24.1727, 0.91", "19.4872, -69.4247, -24.0951, 0.23", "19.436, -70.2455, -24.0713, 1.13", "19.3524, -73.5769, -24.0901, 0.23", "19.3351, -75.8067, -24.1751, 0.23", "19.3394, -76.9641, -24.2684, 1.36", "19.4285, -79.5459, -24.5276, 0.23", "19.5003, -80.8519, -24.7069, 0.91", "19.6532, -82.3924, -25.0053, 0.23", "19.7361, -82.9194, -25.1415, 0.91", "19.9544, -84.0207, -25.4664, 0.23", "20.2085, -85.1203, -25.85, 0.68", "20.7408, -87.2684, -26.6982, 0.23", "21.0752, -88.6054, -27.2389, 0.68", "21.3781, -89.7741, -27.6602, 0.23", "21.3781, -89.7741, -27.6602, 0.91", "22.0142, -91.4977, -28.3422, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "22.0453, -36.4241, -24.0611, 0.23", "23.8249, -38.0138, -25.7023, 0.23", "25.0165, -39.0784, -26.9049, 1.81", "26.677, -40.5538, -28.5977, 0.23", "27.728, -41.4969, -29.6782, 2.04", "29.5245, -43.1397, -31.5402, 0.23", "30.8331, -44.3474, -32.8811, 1.36", "32.3581, -45.8336, -34.4178, 0.23", "32.7541, -46.2441, -34.863, 1.59", "33.961, -47.5587, -36.3742, 0.23", "34.3795, -48.0199, -36.926, 0.23", "35.0571, -48.7247, -37.7984, 0.91", "35.9455, -49.5672, -38.9724, 1.59", "37.2261, -50.697, -40.6491, 0.23", "37.9794, -51.2945, -41.6133, 0.23", "39.3335, -52.2439, -43.3625, 1.81", "40.7296, -53.1022, -45.0941, 0.23", "41.4416, -53.4878, -45.9775, 1.13", "42.2867, -53.8739, -46.9349, 0.23", "43.1664, -54.199, -47.9565, 0.91", "44.0825, -54.5024, -49.0874, 0.23", "44.7384, -54.6895, -49.9773, 2.04", "46.5124, -55.2471, -52.4528, 0.23", "47.2585, -55.4863, -53.5624, 1.36", "49.1289, -56.0561, -56.317, 0.23", "49.3317, -56.1181, -56.6101, 0.91", "51.1134, -56.7101, -58.9612, 0.23", "51.8767, -56.9948, -59.917, 0.91", "53.2805, -57.6556, -61.443, 0.23", "54.4302, -58.3547, -62.638, 0.91", "55.4077, -59.0971, -63.5196, 0.23", "56.445, -59.9997, -64.4435, 0.23", "57.1065, -60.6615, -64.9848, 0.68", "58.4073, -62.0836, -66.0179, 0.23", "59.624, -63.5837, -66.9604, 0.23", "60.3135, -64.5036, -67.5473, 1.59", "61.0763, -65.5628, -68.2008, 0.45", "61.9044, -66.7753, -68.941, 1.13", "63.3821, -69.0104, -70.3151, 0.23", "64.3779, -70.5532, -71.2517, 1.13", "65.3717, -72.1271, -72.1588, 0.23", "66.0774, -73.2128, -72.7887, 0.23", "66.8975, -74.4303, -73.4482, 1.13", "67.7559, -75.6522, -74.0887, 0.23", "68.1193, -76.0938, -74.2954, 1.13", "69.5159, -77.4989, -74.9013, 0.23", "70.5203, -78.3143, -75.2267, 0.91", "72.0913, -79.4189, -75.6685, 0.23", "73.1127, -80.0275, -75.9011, 1.13", "74.685, -80.84, -76.1969, 0.23", "75.5046, -81.2159, -76.341, 0.23", "76.7915, -81.7114, -76.5265, 0.91" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "25.3484, -41.8204, 6.27725, 0.23", "31.0179, -49.4066, 8.29916, 0.23", "35.9617, -57.6417, 8.94459, 0.23", "40.0947, -66.0135, 11.2377, 0.23", "45.0064, -73.5221, 14.8989, 0.23", "49.7253, -81.363, 17.999, 0.23", "54.5453, -89.5702, 19.4599, 0.23", "58.2516, -98.3297, 20.5753, 0.23", "60.9436, -107.455, 21.2743, 0.23", "63.6781, -116.513, 22.5372, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "25.3484, -41.8204, 6.27725, 0.23", "27.2935, -50.9604, 8.18785, 0.23", "30.4175, -59.9251, 9.28033, 0.23", "35.5701, -67.9901, 10.4549, 0.23", "39.2184, -76.4981, 13.0012, 0.23", "43.2378, -84.7473, 15.9069, 0.23", "46.211, -92.969, 19.9395, 0.23", "49.3527, -100.626, 24.9564, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.07996, 6.0135, -7.34, 1.36", "-0.988839, 6.98387, -8.28017, 1.36", "0.0628658, 8.12665, -9.18387, 1.36", "0.756245, 9.29232, -9.93192, 1.36", "1.05708, 10.138, -10.3568, 1.36", "1.23111, 10.8087, -10.6722, 1.81", "1.55088, 12.1631, -11.2973, 0.91", "1.67655, 13.3375, -11.7502, 0.91", "1.64392, 14.9839, -12.3573, 0.91", "1.58895, 16.004, -12.8225, 0.23", "2.03681, 16.1169, -13.367, 0.23", "2.34157, 16.2256, -13.7025, 0.23", "3.62835, 16.7712, -15.1585, 1.13", "5.06857, 17.4793, -16.6931, 1.13", "5.87791, 17.9106, -17.443, 1.59", "7.03544, 18.7019, -18.4431, 0.68", "7.89472, 19.5664, -19.1671, 0.23", "8.54272, 20.5053, -19.7238, 0.23", "9.25657, 21.9367, -20.3771, 1.59", "9.5082, 22.5525, -20.5925, 1.59", "9.92159, 23.6634, -20.9973, 0.23", "10.2104, 24.409, -21.2964, 0.23", "10.8573, 25.9534, -21.9317, 1.36", "11.3413, 27.0526, -22.3628, 0.23", "11.7802, 28.0213, -22.7357, 1.13", "12.6221, 29.7031, -23.3935, 0.45", "12.9009, 30.1923, -23.5851, 1.13", "13.7063, 31.3879, -24.0675, 0.23", "14.7224, 32.7345, -24.5987, 2.72", "16.8399, 35.3589, -25.6699, 0.23", "17.5074, 36.1473, -25.9961, 0.23", "18.2756, 37.0395, -26.3764, 1.81", "19.3832, 38.293, -26.9788, 0.23", "20.1432, 39.1135, -27.4037, 0.91", "20.8021, 39.8354, -27.8023, 0.23", "21.7442, 40.8975, -28.4115, 2.04", "23.5702, 43.0747, -29.698, 0.23", "24.4874, 44.2523, -30.3848, 0.23", "25.47, 45.5469, -31.1334, 1.81", "26.6481, 47.119, -32.0217, 0.23", "27.4096, 48.1479, -32.5539, 1.36", "28.2903, 49.4073, -33.1776, 0.23", "28.865, 50.311, -33.5467, 0.68", "29.6114, 51.5665, -33.9733, 0.23", "30.0342, 52.2803, -34.1969, 1.81", "30.6898, 53.3411, -34.4815, 0.23", "31.3669, 54.4434, -34.7768, 1.13", "32.3929, 56.0416, -35.2, 0.23", "32.9039, 56.8065, -35.4145, 0.91", "34.1412, 58.6232, -35.9089, 0.23", "34.7884, 59.5081, -36.2037, 1.36", "35.6739, 60.6413, -36.6351, 0.23", "36.3408, 61.4149, -36.948, 0.91", "36.4855, 61.5683, -37.0187, 0.23", "37.6964, 62.872, -37.6643, 1.13", "38.9045, 64.1959, -38.319, 0.23", "39.2694, 64.6259, -38.5231, 0.68", "40.1212, 65.6726, -38.9877, 0.23", "41.0391, 66.8895, -39.5794, 1.36", "42.2269, 68.5981, -40.4206, 0.23", "42.6606, 69.267, -40.7383, 1.59", "44.0617, 71.6358, -41.8231, 0.23", "44.2969, 72.0639, -42.0254, 1.13", "45.4309, 74.3548, -43.1277, 0.23", "45.7596, 75.0718, -43.4665, 0.23", "46.3997, 76.5778, -44.169, 1.36", "47.4678, 79.3712, -45.437, 0.23", "47.5807, 79.685, -45.5646, 0.45", "47.9396, 80.7434, -45.9695, 0.23", "48.1, 81.2371, -46.1319, 0.45", "48.6391, 82.8963, -46.6914, 0.23", "49.0077, 84.1508, -47.1015, 0.23", "49.63, 86.1115, -47.5434, 0.68" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.07996, 6.0135, -7.34, 0.91", "-2.96037, 8.57003, -7.72853, 0.91", "-3.62579, 10.3186, -8.21126, 0.91", "-4.84174, 12.8612, -9.09856, 0.91", "-5.50425, 13.9406, -9.53571, 0.91", "-6.36123, 15.0515, -10.0093, 1.36", "-7.41399, 16.1071, -10.4472, 0.68", "-8.70809, 16.9599, -10.9735, 0.68", "-10.1593, 17.5756, -11.5408, 0.68", "-11.599, 18.0398, -12.0497, 1.13", "-12.8608, 18.5335, -12.5435, 0.45", "-14.4749, 19.3568, -13.3006, 0.45", "-15.5185, 20.0567, -13.9015, 0.45", "-16.1972, 20.7009, -14.4209, 0.45", "-17.1093, 21.8612, -15.3851, 2.27", "-18.396, 23.8773, -17.0897, 0.23", "-18.8229, 24.6716, -17.7932, 1.13", "-19.037, 25.1342, -18.2192, 1.59", "-19.5504, 26.137, -19.1174, 0.68", "-20.2677, 27.3636, -20.1909, 1.13" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "18.1106, 14.1213, 1.56107, 0.91", "18.3245, 16.0216, 1.96972, 0.91", "18.5737, 18.2354, 2.44581, 1.36", "18.7028, 19.3825, 2.69249, 0.91", "18.7963, 20.2138, 2.87127, 1.36", "18.8891, 21.0379, 3.04849, 1.36", "19.0059, 22.0751, 3.27154, 1.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "18.1106, 14.1213, 1.56107, 0.68", "20.0863, 14.9223, 1.09326, 0.68", "21.2543, 15.371, 0.83105, 0.91", "22.8394, 15.9299, 0.503818, 0.91", "24.4716, 16.4426, 0.182141, 2.04", "26.5657, 17.0448, -0.202628, 0.23", "27.2725, 17.2185, -0.322286, 0.45", "28.1845, 17.4359, -0.470612, 0.23", "29.3152, 17.6607, -0.656249, 1.13", "30.7179, 17.8308, -0.847812, 0.23", "31.9722, 17.8984, -0.96152, 0.68", "33.3651, 17.893, -1.0467, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-35.0816, 36.2981, 0.0893908, 0.23", "-41.5684, 43.5247, -0.149264, 0.23", "-48.175, 50.6549, -0.287878, 0.23", "-54.5491, 57.9507, 0.338414, 0.23", "-61.9841, 64.2468, 1.23176, 0.23", "-69.4015, 70.3092, 3.29541, 0.23", "-77.2298, 74.9709, 7.12143, 0.23", "-85.1063, 79.9061, 10.4339, 0.23", "-91.1687, 86.2365, 14.7749, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-35.0816, 36.2981, 0.0893908, 0.23", "-41.5531, 43.5349, -0.212274, 0.23", "-48.2935, 50.274, -2.27272, 0.23", "-54.3139, 57.7195, -3.79925, 0.23", "-60.8802, 64.8372, -4.66422, 0.23", "-67.2494, 71.9274, -6.59601, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-6.54736, 37.4424, 0.0, 0.15", "-9.18915, 52.2079, 0.0, 0.15", "-11.8309, 66.9734, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-8.28876, -18.9041, -0.68475, 0.45", "-9.88404, -18.8767, -2.05482, 0.45", "-10.7465, -18.8862, -2.72154, 0.45", "-11.8773, -18.9672, -3.52697, 0.68", "-13.7744, -19.2672, -4.8362, 1.36", "-15.4682, -19.7132, -5.89717, 1.36", "-16.6019, -20.112, -6.52142, 1.36", "-18.3988, -20.9336, -7.27957, 0.23", "-19.5009, -21.5788, -7.67767, 0.91", "-20.6683, -22.404, -8.01504, 0.91", "-22.4764, -23.8789, -8.40565, 0.68", "-24.1413, -25.4248, -8.70374, 1.13", "-25.618, -27.0086, -9.02534, 2.27", "-26.6739, -28.2895, -9.3075, 0.91", "-27.8617, -29.7695, -9.72838, 0.91", "-28.5777, -30.6619, -10.0418, 0.91", "-29.2613, -31.5575, -10.4391, 1.36", "-30.2234, -32.9006, -11.1623, 0.91", "-31.1752, -34.2784, -11.9867, 0.23", "-31.9711, -35.4996, -12.7032, 0.45", "-32.3105, -36.0482, -13.0137, 1.36", "-32.9211, -37.0852, -13.5934, 0.68", "-33.5199, -38.1323, -14.1476, 2.04", "-34.6596, -40.2376, -15.1451, 0.23", "-35.5501, -42.0063, -15.9142, 2.27", "-35.8849, -42.7067, -16.1923, 2.72", "-37.2012, -45.5433, -17.3411, 0.23", "-37.6378, -46.504, -17.7291, 0.23", "-37.9918, -47.2186, -18.0233, 0.23", "-38.5484, -48.1854, -18.4868, 0.23", "-39.002, -48.8362, -18.8401, 0.23", "-40.2091, -50.2103, -19.7636, 1.36", "-40.7788, -50.7463, -20.1745, 0.45", "-41.8809, -51.7332, -21.0166, 1.13", "-43.2655, -52.9288, -22.1312, 0.23", "-43.9794, -53.5272, -22.7356, 1.59", "-45.3769, -54.5927, -23.8932, 0.45", "-46.2197, -55.0954, -24.4957, 1.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-8.28876, -18.9041, -0.68475, 0.45", "-9.91874, -20.1939, -1.14108, 0.45", "-10.7305, -20.8988, -1.35308, 0.45", "-11.4732, -21.567, -1.51664, 0.45", "-11.9521, -22.021, -1.59863, 0.45", "-12.4525, -22.5354, -1.65966, 0.45", "-13.0719, -23.1375, -1.74204, 0.45", "-13.4768, -23.511, -1.80173, 0.45", "-14.2354, -24.2588, -1.90539, 0.45", "-15.2891, -25.3644, -2.0599, 1.81", "-16.9027, -27.1157, -2.34752, 3.18", "-19.4345, -29.8681, -2.84511, 0.68", "-21.2111, -31.7582, -3.20667, 0.68", "-22.5744, -33.2041, -3.49933, 0.68", "-23.3441, -34.0315, -3.67951, 0.68", "-24.3092, -35.0757, -3.93075, 0.68", "-25.0087, -35.8548, -4.14038, 0.45" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.60051, -19.2974, 1.26547, 0.45", "3.11657, -19.9286, 2.07725, 0.45", "4.54248, -20.5223, 2.84075, 0.45", "5.87342, -21.0764, 3.55341, 1.36", "7.10623, -21.5897, 4.21352, 1.36", "8.13494, -22.018, 4.76434, 1.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.60051, -19.2974, 1.26547, 0.91", "-0.308599, -20.6532, 1.93262, 0.91", "-1.98124, -21.9733, 2.60675, 1.13", "-3.51895, -23.4434, 3.34993, 0.68", "-3.66984, -23.6454, 3.43998, 0.68", "-3.98833, -24.1532, 3.6473, 1.13", "-4.38458, -24.7814, 3.86224, 1.13", "-4.80129, -25.6185, 4.08338, 1.13", "-5.27677, -26.7059, 4.22218, 1.81", "-6.02466, -28.2363, 4.34198, 1.36", "-6.4794, -29.1599, 4.42725, 0.91", "-7.32887, -31.0458, 4.67258, 0.91", "-7.75757, -31.9054, 4.77835, 0.91", "-8.55005, -33.3653, 4.95668, 0.45", "-9.75787, -35.515, 5.25213, 0.45", "-10.5639, -37.0315, 5.51702, 0.68", "-11.3613, -39.0255, 5.94631, 0.23", "-16.8725, -46.4887, 8.75899, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-20.2677, 27.3636, -20.1909, 0.91", "-21.6131, 28.2576, -22.6964, 0.91", "-22.5721, 28.9796, -24.4311, 0.23", "-23.0253, 29.3092, -25.1488, 0.91", "-23.2526, 29.4651, -25.493, 0.91", "-23.96, 29.9237, -26.4543, 0.23", "-24.8087, 30.4126, -27.5036, 1.59", "-26.1895, 31.1517, -28.8958, 0.23", "-26.9906, 31.5355, -29.5911, 0.91", "-28.2227, 32.0551, -30.5902, 0.23", "-29.2567, 32.437, -31.4291, 0.91", "-30.961, 32.979, -32.69, 0.23", "-31.7169, 33.194, -33.2319, 1.59", "-32.4458, 33.414, -33.7374, 1.59", "-34.1396, 34.0583, -35.0996, 0.23", "-35.5192, 34.7079, -36.3034, 0.23", "-36.8597, 35.5289, -37.6551, 1.13", "-37.3685, 35.9517, -38.2536, 0.23", "-37.9942, 36.6063, -39.0687, 0.91", "-39.3569, 38.352, -41.0281, 0.23", "-39.6085, 38.7492, -41.405, 0.91", "-40.309, 39.9651, -42.5149, 0.23", "-41.0464, 41.4225, -43.9109, 0.23", "-41.5199, 42.3839, -44.8696, 1.36", "-42.1244, 43.5433, -46.0723, 0.23", "-42.6043, 44.3347, -46.9893, 0.91", "-43.5714, 45.5848, -48.8155, 0.68", "-44.2454, 46.195, -49.9453, 0.23", "-44.8668, 46.5957, -50.9327, 0.23", "-45.4646, 46.8977, -51.8437, 0.91", "-46.8902, 47.5329, -54.0282, 0.23", "-48.1545, 47.9917, -55.9066, 0.45", "-49.2589, 48.3237, -57.4166, 0.23", "-50.7563, 48.7028, -59.3874, 0.23", "-51.2827, 48.8328, -60.0895, 0.68", "-53.1926, 49.4225, -62.8658, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-20.2677, 27.3636, -20.1909, 0.23", "-21.3734, 28.6936, -21.2183, 0.23", "-22.2133, 29.6044, -21.918, 1.59", "-22.5909, 29.9789, -22.2018, 2.27", "-23.6883, 30.9855, -22.9166, 1.36", "-25.4907, 32.6008, -24.0322, 0.45", "-26.6921, 33.6444, -24.7109, 1.81", "-27.3411, 34.1726, -25.0148, 1.81", "-28.2014, 34.8773, -25.3898, 0.23", "-29.4063, 35.9241, -25.8637, 0.91", "-30.0276, 36.5534, -26.071, 0.23", "-31.0456, 37.8123, -26.3523, 1.13", "-31.9513, 39.1534, -26.6012, 0.23", "-32.4593, 40.065, -26.7548, 0.91", "-33.4778, 42.2425, -27.1457, 0.23", "-34.2525, 44.1765, -27.4987, 1.81", "-35.1853, 46.8033, -28.0087, 0.23", "-35.6032, 48.1496, -28.286, 0.23", "-36.3437, 50.7827, -28.9091, 1.36", "-36.7813, 52.5086, -29.3701, 0.45", "-37.0888, 53.9247, -29.7965, 1.13", "-37.4949, 55.8861, -30.453, 0.23", "-37.7251, 57.07, -30.8733, 0.68", "-38.1932, 59.438, -31.7655, 0.23", "-38.4497, 60.7619, -32.2837, 0.23", "-38.6249, 61.6426, -32.6148, 0.68", "-38.7748, 62.4245, -32.9301, 0.23", "-38.8866, 63.059, -33.1775, 0.68" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "19.0059, 22.0751, 3.27154, 0.45", "19.3386, 23.7813, 2.98493, 0.45", "19.6921, 26.0476, 2.65226, 0.45", "19.893, 27.4112, 2.47532, 0.68", "20.1947, 29.0198, 2.2845, 0.23", "20.4514, 30.0273, 2.14, 0.23", "20.7089, 30.818, 2.01528, 0.23", "21.0017, 31.5853, 1.90785, 0.23", "21.3255, 32.3655, 1.7899, 0.23", "21.8216, 33.4673, 1.63229, 0.23", "22.5742, 34.9878, 1.53348, 0.23", "23.0857, 35.9093, 1.47649, 0.23", "23.6799, 36.9331, 1.42391, 0.23", "24.1873, 37.8803, 1.39987, 0.23", "24.6771, 39.033, 1.43105, 0.68", "25.2359, 41.2808, 1.69378, 0.23", "27.4609, 50.3755, -0.15003, 0.23", "29.8978, 59.1017, -3.26253, 0.23", "34.1118, 66.5054, -7.90004, 0.23", "38.7107, 74.6732, -10.1203, 0.23" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "19.0059, 22.0751, 3.27154, 0.68", "20.098, 23.9135, 3.76896, 0.68", "21.0569, 25.5276, 4.20568, 1.13", "22.224, 27.4924, 4.73727, 0.45", "23.0595, 28.8987, 5.11777, 0.45", "23.7944, 30.1358, 5.4525, 0.45", "29.4376, 37.9188, 6.46964, 0.45" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-46.2197, -55.0954, -24.4957, 0.23", "-47.0755, -56.8067, -25.2922, 0.23", "-47.3238, -57.2586, -25.4772, 0.91", "-48.4475, -59.4668, -26.3015, 0.23", "-49.0495, -60.7405, -26.7472, 0.91", "-49.9688, -62.684, -27.4628, 0.45", "-50.4815, -63.7765, -27.8666, 0.45", "-51.1809, -65.2509, -28.3914, 2.27", "-52.7605, -68.4636, -29.632, 0.23", "-53.3608, -69.654, -30.1286, 1.13", "-54.899, -72.708, -31.5374, 0.23", "-55.2408, -73.3784, -31.8811, 0.23", "-55.834, -74.4753, -32.489, 1.59", "-57.3659, -76.976, -34.0538, 0.45", "-58.6739, -78.827, -35.3144, 0.45", "-59.9508, -80.4702, -36.4854, 1.36", "-61.0839, -81.7955, -37.4361, 0.23", "-61.922, -82.7322, -38.1296, 1.36", "-63.6567, -84.5654, -39.5071, 0.23", "-64.1122, -85.0269, -39.8204, 0.68", "-64.6073, -85.4633, -40.1223, 0.23", "-65.7535, -86.3448, -40.7476, 1.13" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-46.2197, -55.0954, -24.4957, 0.23", "-48.3527, -55.6829, -25.3138, 0.23", "-48.9725, -55.859, -25.5204, 0.91", "-51.5588, -56.5873, -26.2346, 0.23", "-52.5732, -56.869, -26.4915, 0.23", "-55.0303, -57.5274, -27.0565, 0.91", "-57.8938, -58.2528, -27.6565, 0.23", "-58.8136, -58.4803, -27.8038, 0.23", "-61.2614, -59.0368, -28.163, 1.13", "-62.5608, -59.2901, -28.3226, 0.23", "-64.2161, -59.561, -28.4958, 0.91", "-66.1038, -59.794, -28.7271, 0.23", "-67.2083, -59.8825, -28.9072, 0.91", "-68.4533, -59.9853, -29.2087, 0.23", "-69.1628, -60.035, -29.4054, 0.23", "-70.4632, -60.1216, -29.7973, 0.91", "-72.6867, -60.2818, -30.5796, 0.23", "-73.6601, -60.365, -30.9711, 1.81", "-76.3377, -60.6424, -32.1356, 0.23" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.13494, -22.018, 4.76434, 0.91", "9.06696, -22.9533, 4.6491, 0.91", "10.0694, -24.1537, 4.50948, 0.91", "11.3319, -25.9185, 4.30394, 0.91", "12.4217, -27.7374, 4.08456, 0.91", "13.0599, -28.9808, 3.94019, 0.91", "13.9466, -30.8001, 3.73637, 0.91", "14.6173, -32.3504, 3.59252, 0.68", "15.0404, -33.3746, 3.51831, 0.68", "15.6672, -34.9427, 3.4457, 1.13", "16.4787, -36.6038, 3.40297, 0.68", "17.0905, -37.5441, 3.39708, 0.68", "18.1527, -38.9067, 3.401, 1.59", "18.9815, -39.8291, 3.39973, 2.04", "19.6249, -40.4845, 3.39583, 2.5", "21.9272, -42.7036, 3.45697, 1.13", "23.3816, -44.2065, 3.4761, 0.68", "24.0035, -44.8856, 3.47604, 0.68", "24.6785, -45.6716, 3.45871, 0.68", "25.5451, -46.7461, 3.43927, 0.68", "26.6054, -48.1924, 3.42678, 1.13", "27.7301, -50.0774, 3.46439, 0.23", "33.3722, -57.8707, 2.53201, 0.23", "38.6715, -65.6543, 0.34415, 0.23", "43.0363, -73.4019, -3.45588, 0.23", "46.0869, -80.4389, -9.44114, 0.23", "47.8755, -88.5835, -14.2682, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.13494, -22.018, 4.76434, 0.91", "8.95763, -23.8704, 4.35758, 0.91", "9.35103, -25.1773, 4.0894, 0.91", "9.66786, -26.2298, 3.87342, 0.91", "10.1863, -27.9519, 3.52004, 0.91", "10.5926, -29.3015, 3.24309, 0.68", "11.1338, -31.0996, 2.87412, 1.81", "11.811, -32.9098, 2.27837, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-16.8725, -46.4887, 8.75899, 0.23", "-21.581, -52.9991, 14.3146, 0.23", "-27.4567, -57.8855, 20.5613, 0.23", "-32.283, -62.3307, 27.9647, 0.23", "-36.0053, -65.4702, 36.6379, 0.23" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-16.8725, -46.4887, 8.75899, 0.23", "-22.1991, -54.4143, 10.1823, 0.23", "-28.0677, -62.0438, 11.2129, 0.23", "-34.2704, -69.4696, 10.5594, 0.23", "-38.5354, -78.0201, 11.4532, 0.23", "-40.5673, -87.0735, 13.701, 0.23", "-44.9826, -95.158, 16.5445, 0.23", "-49.9336, -102.48, 20.5539, 0.23", "-53.6213, -110.341, 24.7884, 0.23", "-57.9844, -118.38, 27.8484, 0.23" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "29.4376, 37.9188, 6.46964, 0.23", "32.8313, 44.7738, 12.5042, 0.23", "37.3683, 50.5167, 19.0518, 0.23", "43.4843, 56.1279, 24.3156, 0.23", "50.4175, 59.7952, 30.4008, 0.23", "57.4292, 64.1251, 35.8838, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "29.4376, 37.9188, 6.46964, 0.23", "35.2396, 45.0426, 3.29056, 0.23", "40.4293, 53.018, 1.6816, 0.23", "44.1818, 61.6029, -0.381244, 0.23", "49.238, 69.7148, -1.61564, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "11.811, -32.9098, 2.27837, 0.23", "10.023, -34.1432, 3.28642, 0.23", "9.76793, -34.4602, 3.46763, 0.23", "9.48822, -35.0184, 3.68179, 0.23", "9.24599, -35.6626, 3.87138, 0.23", "9.0625, -36.2136, 3.9691, 0.23", "8.4572, -37.9654, 4.09979, 0.23", "8.16987, -38.9703, 4.07666, 0.68", "7.75665, -40.5575, 4.02165, 1.36", "7.50108, -41.6323, 3.96826, 0.45", "7.09849, -43.3885, 3.84466, 0.45", "6.46633, -45.8913, 3.61103, 0.45", "5.88302, -47.7098, 3.36029, 0.45", "1.46643, -56.0304, 5.30523, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "11.811, -32.9098, 2.27837, 0.23", "12.1954, -34.0224, 2.79175, 0.23", "12.6693, -35.3938, 3.42456, 0.23", "12.8828, -36.0116, 3.70965, 0.23", "13.1967, -36.92, 4.12883, 0.23", "13.6515, -38.2359, 4.73603, 0.23", "14.1354, -39.6363, 5.38225, 0.23", "17.8744, -47.3546, 9.85581, 0.23" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "1.46643, -56.0304, 5.30523, 0.23", "-2.47186, -64.4925, 7.57391, 0.23", "-7.24044, -72.5013, 10.062, 0.23", "-11.2854, -80.9963, 11.9792, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.46643, -56.0304, 5.30523, 0.23", "-2.33399, -64.8164, 5.45975, 0.23", "-4.18947, -74.0783, 6.68725, 0.23", "-4.9242, -83.2035, 9.36942, 0.23", "-6.32727, -91.6214, 13.7871, 0.23", "-5.89879, -100.664, 16.8219, 0.23", "-4.61275, -109.646, 19.8145, 0.23", "-5.26477, -119.049, 21.0775, 0.23", "-3.85418, -128.068, 23.8878, 0.23" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.8744, -47.3546, 9.85581, 0.23", "21.5407, -55.2732, 13.9885, 0.23", "25.3958, -63.2023, 17.9224, 0.23", "27.8689, -71.3035, 22.5228, 0.23", "29.8286, -80.2626, 25.2104, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "17.8744, -47.3546, 9.85581, 0.23", "20.8754, -55.4559, 14.1305, 0.23", "23.0873, -63.7306, 18.5167, 0.23", "24.6404, -71.374, 24.2486, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_27", "dend_26", "dend_23", "dend_20", "dend_19", "dend_18", "dend_17", "dend_12", "dend_11", "dend_10", "dend_3", "dend_0", "dend_41", "dend_28", "dend_25", "dend_24", "dend_22", "dend_21", "dend_16", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "dend_43", "dend_42", "dend_32", "dend_29", "dend_15", "dend_14", "dend_9", "dend_6", "dend_45", "dend_44", "dend_40", "dend_33", "dend_31", "dend_30", "dend_8", "dend_7", "dend_37", "dend_34", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_27", "dend_26", "dend_23", "dend_20", "dend_19", "dend_18", "dend_17", "dend_12", "dend_11", "dend_10", "dend_3", "dend_0", "dend_41", "dend_28", "dend_25", "dend_24", "dend_22", "dend_21", "dend_16", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "dend_43", "dend_42", "dend_32", "dend_29", "dend_15", "dend_14", "dend_9", "dend_6", "dend_45", "dend_44", "dend_40", "dend_33", "dend_31", "dend_30", "dend_8", "dend_7", "dend_37", "dend_34", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_SBC_ef99b8a177_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_27, dend_26, dend_23, dend_20, dend_19, dend_18, dend_17, dend_12, dend_11, dend_10, dend_3, dend_0, dend_41, dend_28, dend_25, dend_24, dend_22, dend_21, dend_16, dend_13, dend_5, dend_4, dend_2, dend_1, dend_43, dend_42, dend_32, dend_29, dend_15, dend_14, dend_9, dend_6, dend_45, dend_44, dend_40, dend_33, dend_31, dend_30, dend_8, dend_7, dend_37, dend_34, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_27, dend_26, dend_23, dend_20, dend_19, dend_18, dend_17, dend_12, dend_11, dend_10, dend_3, dend_0, dend_41, dend_28, dend_25, dend_24, dend_22, dend_21, dend_16, dend_13, dend_5, dend_4, dend_2, dend_1, dend_43, dend_42, dend_32, dend_29, dend_15, dend_14, dend_9, dend_6, dend_45, dend_44, dend_40, dend_33, dend_31, dend_30, dend_8, dend_7, dend_37, dend_34, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_27(0), soma_0(0.499999984002661)
    connect dend_26(0), soma_0(0.499999984002661)
    connect dend_23(0), soma_0(0.499999984002661)
    connect dend_20(0), soma_0(0.499999984002661)
    connect dend_19(0), soma_0(0.499999984002661)
    connect dend_18(0), soma_0(0.499999984002661)
    connect dend_17(0), soma_0(0.499999984002661)
    connect dend_12(0), soma_0(0.499999984002661)
    connect dend_11(0), soma_0(0.499999984002661)
    connect dend_10(0), soma_0(0.499999984002661)
    connect dend_3(0), soma_0(0.499999984002661)
    connect dend_0(0), soma_0(0.499999984002661)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.8173, -9.30952, 0.0, 2.67108 ) }
    soma_0 { pt3dadd( 1.66324, -8.44848, 0.0, 4.20258 ) }
    soma_0 { pt3dadd( 1.50919, -7.58744, 0.0, 6.01675 ) }
    soma_0 { pt3dadd( 1.35513, -6.7264, 0.0, 7.40809 ) }
    soma_0 { pt3dadd( 1.20108, -5.86536, 0.0, 8.71492 ) }
    soma_0 { pt3dadd( 1.04703, -5.00432, 0.0, 9.55969 ) }
    soma_0 { pt3dadd( 0.892972, -4.14327, 0.0, 10.2583 ) }
    soma_0 { pt3dadd( 0.738918, -3.28223, 0.0, 10.8215 ) }
    soma_0 { pt3dadd( 0.584864, -2.42119, 0.0, 11.2306 ) }
    soma_0 { pt3dadd( 0.43081, -1.56015, 0.0, 11.6028 ) }
    soma_0 { pt3dadd( 0.276756, -0.699111, 0.0, 11.8693 ) }
    soma_0 { pt3dadd( 0.122702, 0.16193, 0.0, 12.1344 ) }
    soma_0 { pt3dadd( -0.0313515, 1.02297, 0.0, 12.4742 ) }
    soma_0 { pt3dadd( -0.185405, 1.88401, 0.0, 12.8808 ) }
    soma_0 { pt3dadd( -0.339459, 2.74505, 0.0, 13.26 ) }
    soma_0 { pt3dadd( -0.493513, 3.60609, 0.0, 13.39 ) }
    soma_0 { pt3dadd( -0.647567, 4.46714, 0.0, 13.2837 ) }
    soma_0 { pt3dadd( -0.801621, 5.32818, 0.0, 12.6158 ) }
    soma_0 { pt3dadd( -0.955675, 6.18922, 0.0, 11.4457 ) }
    soma_0 { pt3dadd( -1.10973, 7.05026, 0.0, 8.79114 ) }
    soma_0 { pt3dadd( -1.26378, 7.9113, 0.0, 4.73701 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 21/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.195487, -9.0264, -2.59, 2.72 ) }
    dend_27 { pt3dadd( 0.0972039, -9.86284, -2.5941, 2.72 ) }
    dend_27 { pt3dadd( -0.038197, -11.0152, -2.59976, 2.72 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 24/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.124513, 2.2216, -11.41, 0.91 ) }
    dend_26 { pt3dadd( 1.11869, 1.69201, -12.2738, 0.91 ) }
    dend_26 { pt3dadd( 3.0207, 1.19198, -13.2019, 0.91 ) }
    dend_26 { pt3dadd( 2.40893, 0.914151, -13.5113, 0.91 ) }
    dend_26 { pt3dadd( 2.17697, 0.790981, -13.6097, 0.91 ) }
    dend_26 { pt3dadd( 1.46477, 0.380351, -13.9249, 0.91 ) }
    dend_26 { pt3dadd( 0.304032, -0.257067, -14.393, 0.91 ) }
    dend_26 { pt3dadd( -1.04855, -0.944278, -14.8789, 1.59 ) }
    dend_26 { pt3dadd( -2.02925, -1.43286, -15.1808, 1.59 ) }
    dend_26 { pt3dadd( -4.24891, -2.4787, -15.8512, 0.23 ) }
    dend_26 { pt3dadd( -5.73709, -3.13747, -16.2771, 0.91 ) }
    dend_26 { pt3dadd( -7.04272, -3.66623, -16.6525, 1.81 ) }
    dend_26 { pt3dadd( -9.56051, -4.62287, -17.3462, 0.68 ) }
    dend_26 { pt3dadd( -11.0164, -5.1534, -17.7836, 0.68 ) }
    dend_26 { pt3dadd( -11.9069, -5.45826, -18.105, 1.36 ) }
    dend_26 { pt3dadd( -13.4139, -5.88202, -18.7197, 0.45 ) }
    dend_26 { pt3dadd( -14.7199, -6.18732, -19.2694, 2.27 ) }
    dend_26 { pt3dadd( -15.5822, -6.33042, -19.6434, 2.27 ) }
    dend_26 { pt3dadd( -18.1874, -6.51905, -20.7085, 0.23 ) }
    dend_26 { pt3dadd( -19.9322, -6.49903, -21.3495, 0.23 ) }
    dend_26 { pt3dadd( -21.6563, -6.36445, -21.8961, 1.81 ) }
    dend_26 { pt3dadd( -22.515, -6.24021, -22.1575, 1.81 ) }
    dend_26 { pt3dadd( -24.9201, -5.72631, -22.804, 0.23 ) }
    dend_26 { pt3dadd( -26.8298, -5.17957, -23.2644, 1.59 ) }
    dend_26 { pt3dadd( -28.5812, -4.58244, -23.5953, 0.23 ) }
    dend_26 { pt3dadd( -30.35, -3.95535, -23.8648, 1.13 ) }
    dend_26 { pt3dadd( -32.1756, -3.3194, -24.1594, 0.23 ) }
    dend_26 { pt3dadd( -33.7617, -2.80664, -24.4113, 1.13 ) }
    dend_26 { pt3dadd( -34.6539, -2.53509, -24.5473, 2.04 ) }
    dend_26 { pt3dadd( -36.8791, -1.92063, -24.8732, 0.23 ) }
    dend_26 { pt3dadd( -38.4001, -1.53591, -25.0881, 0.91 ) }
    dend_26 { pt3dadd( -40.233, -1.08175, -25.3398, 0.23 ) }
    dend_26 { pt3dadd( -41.6388, -0.676922, -25.5028, 1.13 ) }
    dend_26 { pt3dadd( -42.1339, -0.516709, -25.591, 2.04 ) }
    dend_26 { pt3dadd( -42.9701, -0.203523, -25.713, 2.04 ) }
    dend_26 { pt3dadd( -45.3388, 0.809731, -26.0077, 0.23 ) }
    dend_26 { pt3dadd( -46.8663, 1.53508, -26.161, 0.91 ) }
    dend_26 { pt3dadd( -49.2821, 2.77423, -26.37, 0.23 ) }
    dend_26 { pt3dadd( -51.013, 3.71397, -26.5041, 0.23 ) }
    dend_26 { pt3dadd( -55.458, 6.28795, -27.0496, 0.23 ) }
    dend_26 { pt3dadd( -56.0606, 6.66827, -27.1477, 0.23 ) }
    dend_26 { pt3dadd( -57.9436, 7.95044, -27.5227, 0.91 ) }
    dend_26 { pt3dadd( -59.7289, 9.27072, -27.9843, 0.23 ) }
    dend_26 { pt3dadd( -61.6615, 10.8541, -28.6838, 1.13 ) }
    dend_26 { pt3dadd( -64.1861, 13.1252, -29.8236, 0.23 ) }
    dend_26 { pt3dadd( -65.7925, 14.7313, -30.8299, 0.23 ) }
    dend_26 { pt3dadd( -66.4155, 15.3606, -31.2421, 0.68 ) }
    dend_26 { pt3dadd( -67.6601, 16.5734, -32.1273, 2.04 ) }
    dend_26 { pt3dadd( -69.168, 17.9776, -33.223, 0.23 ) }
    dend_26 { pt3dadd( -69.4743, 18.2189, -33.4405, 0.91 ) }
    dend_26 { pt3dadd( -70.5313, 18.8716, -34.049, 0.23 ) }
    dend_26 { pt3dadd( -71.2625, 19.2237, -34.4142, 0.91 ) }
    dend_26 { pt3dadd( -73.6831, 20.1308, -35.402, 0.23 ) }
    dend_26 { pt3dadd( -74.295, 20.3221, -35.597, 0.91 ) }
    dend_26 { pt3dadd( -76.4292, 20.9353, -36.0237, 0.23 ) }
    dend_26 { pt3dadd( -78.1357, 21.4244, -36.3504, 0.91 ) }
    dend_26 { pt3dadd( -79.8631, 21.916, -36.6498, 0.23 ) }
    dend_26 { pt3dadd( -81.2651, 22.3246, -36.8342, 0.91 ) }
    dend_26 { pt3dadd( -83.3736, 22.963, -36.9158, 0.23 ) }
    dend_26 { pt3dadd( -86.3669, 23.8946, -36.8845, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 4.00549, -5.1599, -4.86, 0.68 ) }
    dend_23 { pt3dadd( 5.39518, -5.90009, -5.05844, 0.68 ) }
    dend_23 { pt3dadd( 7.17919, -6.99464, -5.49531, 0.68 ) }
    dend_23 { pt3dadd( 8.81734, -8.2267, -6.13881, 1.59 ) }
    dend_23 { pt3dadd( 10.25, -9.58609, -6.85911, 1.36 ) }
    dend_23 { pt3dadd( 11.3249, -10.8913, -7.54675, 1.36 ) }
    dend_23 { pt3dadd( 12.2126, -12.2597, -8.21531, 1.36 ) }
    dend_23 { pt3dadd( 12.9661, -13.7764, -8.97674, 1.81 ) }
    dend_23 { pt3dadd( 13.72, -15.7004, -9.93073, 1.81 ) }
    dend_23 { pt3dadd( 14.2442, -17.4086, -10.7898, 1.13 ) }
    dend_23 { pt3dadd( 14.728, -19.2542, -11.6644, 2.04 ) }
    dend_23 { pt3dadd( 15.4079, -21.7102, -12.8735, 0.68 ) }
    dend_23 { pt3dadd( 15.7511, -22.6978, -13.3723, 0.68 ) }
    dend_23 { pt3dadd( 16.2954, -23.9617, -14.1099, 1.36 ) }
    dend_23 { pt3dadd( 17.2116, -25.8904, -15.3843, 2.27 ) }
    dend_23 { pt3dadd( 17.4904, -26.4253, -15.7789, 2.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 18.6694, -28.7092, -17.571, 0.23 ) }
    dend_23 { pt3dadd( 19.3573, -30.0675, -18.72, 2.27 ) }
    dend_23 { pt3dadd( 20.4128, -32.3481, -20.6696, 2.04 ) }
    dend_23 { pt3dadd( 21.077, -33.8961, -22.0043, 0.23 ) }
    dend_23 { pt3dadd( 21.6088, -35.19, -23.0623, 0.23 ) }
    dend_23 { pt3dadd( 22.0453, -36.4241, -24.0611, 2.27 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 3.49549, -7.2404, -2.51, 1.36 ) }
    dend_20 { pt3dadd( 3.94067, -7.96446, -2.18517, 1.36 ) }
    dend_20 { pt3dadd( 4.66861, -9.11416, -1.67519, 1.36 ) }
    dend_20 { pt3dadd( 5.79439, -10.8372, -0.910312, 1.36 ) }
    dend_20 { pt3dadd( 6.68567, -12.1854, -0.331121, 1.59 ) }
    dend_20 { pt3dadd( 7.93094, -13.9942, 0.427209, 1.13 ) }
    dend_20 { pt3dadd( 9.0656, -15.5583, 1.07093, 1.13 ) }
    dend_20 { pt3dadd( 9.60655, -16.2785, 1.34868, 1.13 ) }
    dend_20 { pt3dadd( 10.4748, -17.4139, 1.72417, 1.13 ) }
    dend_20 { pt3dadd( 11.6689, -18.891, 2.11301, 0.91 ) }
    dend_20 { pt3dadd( 12.2292, -19.545, 2.24479, 0.91 ) }
    dend_20 { pt3dadd( 12.8029, -20.2163, 2.36143, 0.91 ) }
    dend_20 { pt3dadd( 13.773, -21.4182, 2.55137, 0.91 ) }
    dend_20 { pt3dadd( 15.2243, -23.4007, 2.85341, 0.45 ) }
    dend_20 { pt3dadd( 16.475, -25.2627, 3.11757, 1.36 ) }
    dend_20 { pt3dadd( 17.7503, -27.3016, 3.40249, 0.68 ) }
    dend_20 { pt3dadd( 18.5473, -28.6312, 3.59078, 0.68 ) }
    dend_20 { pt3dadd( 19.1271, -29.6521, 3.74241, 0.68 ) }
    dend_20 { pt3dadd( 19.6658, -30.6303, 3.90237, 0.23 ) }
    dend_20 { pt3dadd( 20.1751, -31.5436, 4.06964, 0.23 ) }
    dend_20 { pt3dadd( 20.6035, -32.4604, 4.22963, 0.23 ) }
    dend_20 { pt3dadd( 21.0123, -33.4567, 4.35624, 0.23 ) }
    dend_20 { pt3dadd( 25.3484, -41.8204, 6.27725, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.15549, -4.4854, -0.73, 0.91 ) }
    dend_19 { pt3dadd( 5.68756, -4.80579, -0.476311, 0.91 ) }
    dend_19 { pt3dadd( 6.51077, -5.38218, 0.0381819, 1.36 ) }
    dend_19 { pt3dadd( 8.12516, -6.62376, 1.05983, 0.91 ) }
    dend_19 { pt3dadd( 9.18848, -7.5062, 1.68492, 0.68 ) }
    dend_19 { pt3dadd( 10.0991, -8.26188, 2.22023, 0.91 ) }
    dend_19 { pt3dadd( 11.987, -9.82857, 3.33003, 0.45 ) }
    dend_19 { pt3dadd( 14.2349, -11.785, 4.75455, 0.23 ) }
    dend_19 { pt3dadd( 14.9996, -12.488, 5.2852, 0.23 ) }
    dend_19 { pt3dadd( 16.15, -13.5768, 6.14333, 0.68 ) }
    dend_19 { pt3dadd( 23.6525, -19.2386, 9.0055, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.96451, 1.2336, 1.3, 1.13 ) }
    dend_18 { pt3dadd( -7.12161, 0.808951, 1.44702, 1.13 ) }
    dend_18 { pt3dadd( -9.68998, -0.156842, 1.79351, 0.91 ) }
    dend_18 { pt3dadd( -11.2262, -0.769217, 2.01101, 0.91 ) }
    dend_18 { pt3dadd( -12.3027, -1.23274, 2.1623, 1.13 ) }
    dend_18 { pt3dadd( -14.0719, -2.06397, 2.42593, 0.91 ) }
    dend_18 { pt3dadd( -15.9839, -3.0235, 2.7732, 0.68 ) }
    dend_18 { pt3dadd( -16.5622, -3.33669, 2.90764, 1.13 ) }
    dend_18 { pt3dadd( -17.7802, -4.04361, 3.25618, 0.68 ) }
    dend_18 { pt3dadd( -18.8771, -4.71273, 3.55093, 0.68 ) }
    dend_18 { pt3dadd( -19.9278, -5.36957, 3.81266, 1.36 ) }
    dend_18 { pt3dadd( -21.2112, -6.15247, 4.11196, 0.23 ) }
    dend_18 { pt3dadd( -21.7775, -6.48662, 4.24137, 0.23 ) }
    dend_18 { pt3dadd( -22.5673, -6.88174, 4.403, 0.68 ) }
    dend_18 { pt3dadd( -24.1862, -7.61208, 4.70924, 0.23 ) }
    dend_18 { pt3dadd( -24.977, -7.92401, 4.83803, 1.36 ) }
    dend_18 { pt3dadd( -25.6672, -8.16311, 4.91077, 1.36 ) }
    dend_18 { pt3dadd( -27.0183, -8.61666, 4.96155, 0.45 ) }
    dend_18 { pt3dadd( -28.9683, -9.31764, 5.05018, 0.23 ) }
    dend_18 { pt3dadd( -38.4305, -12.3795, 5.3307, 0.23 ) }
    dend_18 { pt3dadd( -47.5415, -16.2777, 4.94116, 0.23 ) }
    dend_18 { pt3dadd( -56.9606, -19.1632, 3.50729, 0.23 ) }
    dend_18 { pt3dadd( -66.6093, -20.2964, 1.16658, 0.23 ) }
    dend_18 { pt3dadd( -75.8675, -20.6043, -2.59928, 0.23 ) }
    dend_18 { pt3dadd( -84.9107, -19.2584, -6.62574, 0.23 ) }
    dend_18 { pt3dadd( -92.8393, -18.0898, -12.5944, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.30549, 3.8461, -5.67, 1.36 ) }
    dend_17 { pt3dadd( 5.09755, 5.07036, -5.20054, 1.13 ) }
    dend_17 { pt3dadd( 5.87902, 6.41118, -4.68343, 0.68 ) }
    dend_17 { pt3dadd( 7.15214, 8.56804, -3.8631, 1.36 ) }
    dend_17 { pt3dadd( 8.1814, 10.0849, -3.29467, 0.68 ) }
    dend_17 { pt3dadd( 8.85567, 10.8753, -2.99868, 0.68 ) }
    dend_17 { pt3dadd( 9.44553, 11.4552, -2.82099, 0.68 ) }
    dend_17 { pt3dadd( 10.3403, 12.1879, -2.64592, 0.68 ) }
    dend_17 { pt3dadd( 11.2231, 12.7636, -2.54905, 0.68 ) }
    dend_17 { pt3dadd( 12.9432, 13.5349, -2.48363, 0.68 ) }
    dend_17 { pt3dadd( 15.0905, 14.2798, -2.49439, 0.23 ) }
    dend_17 { pt3dadd( 17.1472, 14.912, -2.51506, 0.23 ) }
    dend_17 { pt3dadd( 17.7365, 15.083, -2.51747, 0.91 ) }
    dend_17 { pt3dadd( 19.0427, 15.4494, -2.51501, 0.23 ) }
    dend_17 { pt3dadd( 20.3378, 15.8444, -2.48179, 0.91 ) }
    dend_17 { pt3dadd( 21.6974, 16.3449, -2.40343, 0.23 ) }
    dend_17 { pt3dadd( 22.5127, 16.6764, -2.32094, 0.23 ) }
    dend_17 { pt3dadd( 23.1752, 16.9276, -2.21477, 0.23 ) }
    dend_17 { pt3dadd( 24.0618, 17.2645, -2.09406, 0.23 ) }
    dend_17 { pt3dadd( 24.7285, 17.5488, -2.04357, 0.23 ) }
    dend_17 { pt3dadd( 26.3435, 18.3793, -1.92819, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 87/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.554513, 3.8746, -7.34, 1.59 ) }
    dend_12 { pt3dadd( -1.95181, 5.83381, -7.34, 1.59 ) }
    dend_12 { pt3dadd( -2.07996, 6.0135, -7.34, 1.59 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.37549, 4.2926, -6.86, 0.23 ) }
    dend_11 { pt3dadd( 3.00087, 5.5372, -6.90157, 0.23 ) }
    dend_11 { pt3dadd( 3.66763, 7.16967, -6.95014, 0.23 ) }
    dend_11 { pt3dadd( 4.19089, 8.45078, -6.98825, 0.68 ) }
    dend_11 { pt3dadd( 4.51297, 9.23932, -7.01171, 1.36 ) }
    dend_11 { pt3dadd( 5.03413, 10.5153, -7.04967, 0.23 ) }
    dend_11 { pt3dadd( 5.45641, 11.5492, -7.08042, 0.23 ) }
    dend_11 { pt3dadd( 6.15514, 13.4474, -7.14163, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 98/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.944509, 5.9171, 1.72, 0.91 ) }
    dend_10 { pt3dadd( -1.15328, 7.1003, 2.15361, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_10 { pt3dadd( -1.22474, 8.89643, 2.72474, 0.91 ) }
    dend_10 { pt3dadd( -1.22928, 10.2225, 3.10203, 0.91 ) }
    dend_10 { pt3dadd( -1.20926, 11.5095, 3.41879, 0.91 ) }
    dend_10 { pt3dadd( -1.17356, 12.3342, 3.61203, 0.91 ) }
    dend_10 { pt3dadd( -1.0775, 13.405, 3.8628, 0.91 ) }
    dend_10 { pt3dadd( -0.773932, 15.0001, 4.21945, 0.91 ) }
    dend_10 { pt3dadd( -0.58792, 15.6672, 4.351, 0.91 ) }
    dend_10 { pt3dadd( -0.134709, 17.2893, 4.60565, 0.68 ) }
    dend_10 { pt3dadd( 0.045892, 18.1633, 4.72535, 1.13 ) }
    dend_10 { pt3dadd( 0.226688, 19.2299, 4.87134, 0.45 ) }
    dend_10 { pt3dadd( 0.397451, 20.0306, 4.97242, 0.45 ) }
    dend_10 { pt3dadd( 0.458207, 20.2875, 5.00409, 0.45 ) }
    dend_10 { pt3dadd( 0.721163, 21.2965, 5.1237, 0.45 ) }
    dend_10 { pt3dadd( 1.10865, 22.7663, 5.2735, 0.91 ) }
    dend_10 { pt3dadd( 1.41997, 24.1559, 5.37426, 0.23 ) }
    dend_10 { pt3dadd( 1.8031, 26.2178, 5.48471, 0.23 ) }
    dend_10 { pt3dadd( 3.89035, 35.2364, 7.83464, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 17/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.35549, 4.9861, -1.23, 1.36 ) }
    dend_3 { pt3dadd( 6.08887, 5.79617, -0.900403, 1.36 ) }
    dend_3 { pt3dadd( 7.28915, 6.98827, -0.442353, 1.36 ) }
    dend_3 { pt3dadd( 8.2226, 7.76324, -0.160896, 0.91 ) }
    dend_3 { pt3dadd( 9.97495, 8.96886, 0.214374, 1.36 ) }
    dend_3 { pt3dadd( 11.6174, 10.0988, 0.566108, 1.13 ) }
    dend_3 { pt3dadd( 12.4729, 10.6874, 0.749314, 1.59 ) }
    dend_3 { pt3dadd( 14.0752, 11.7306, 1.05724, 2.04 ) }
    dend_3 { pt3dadd( 15.9043, 12.8899, 1.32212, 1.36 ) }
    dend_3 { pt3dadd( 18.1106, 14.1213, 1.56107, 2.27 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.14451, 3.9981, 1.3, 0.91 ) }
    dend_0 { pt3dadd( -6.5365, 5.42279, 0.990282, 0.91 ) }
    dend_0 { pt3dadd( -7.08727, 7.0967, 0.629619, 0.91 ) }
    dend_0 { pt3dadd( -7.6846, 8.72647, 0.285377, 0.91 ) }
    dend_0 { pt3dadd( -8.05439, 9.60692, 0.104621, 1.36 ) }
    dend_0 { pt3dadd( -8.67847, 10.9993, -0.1325, 1.36 ) }
    dend_0 { pt3dadd( -9.29331, 12.249, -0.312508, 1.13 ) }
    dend_0 { pt3dadd( -10.0956, 13.5653, -0.435589, 1.13 ) }
    dend_0 { pt3dadd( -10.9652, 14.7009, -0.442725, 1.13 ) }
    dend_0 { pt3dadd( -12.2987, 16.0732, -0.297518, 0.68 ) }
    dend_0 { pt3dadd( -13.1145, 16.7276, -0.137871, 0.68 ) }
    dend_0 { pt3dadd( -13.9082, 17.2331, 0.065489, 0.68 ) }
    dend_0 { pt3dadd( -15.1505, 17.8894, 0.451892, 0.68 ) }
    dend_0 { pt3dadd( -15.8088, 18.211, 0.67581, 0.68 ) }
    dend_0 { pt3dadd( -16.7708, 18.671, 1.00228, 1.13 ) }
    dend_0 { pt3dadd( -18.1152, 19.3756, 1.40042, 0.68 ) }
    dend_0 { pt3dadd( -19.6108, 20.3019, 1.7371, 0.68 ) }
    dend_0 { pt3dadd( -20.9169, 21.2693, 1.95982, 0.68 ) }
    dend_0 { pt3dadd( -21.8762, 22.0654, 2.04584, 0.68 ) }
    dend_0 { pt3dadd( -22.8062, 22.8851, 2.07836, 0.45 ) }
    dend_0 { pt3dadd( -23.7115, 23.7037, 2.05967, 0.68 ) }
    dend_0 { pt3dadd( -24.6009, 24.538, 2.00874, 0.68 ) }
    dend_0 { pt3dadd( -25.5146, 25.3791, 1.90254, 1.13 ) }
    dend_0 { pt3dadd( -26.9064, 26.6138, 1.64101, 0.45 ) }
    dend_0 { pt3dadd( -27.8493, 27.4308, 1.4554, 0.45 ) }
    dend_0 { pt3dadd( -29.2957, 28.6193, 1.1795, 0.45 ) }
    dend_0 { pt3dadd( -35.0816, 36.2981, 0.0893908, 0.45 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.26378, 7.9113, 0.0, 0.696396 ) }
    axon_0 { pt3dadd( -3.90557, 22.6768, 0.0, 0.696396 ) }
    axon_0 { pt3dadd( -6.54736, 37.4424, 0.0, 0.696396 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 57/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.038197, -11.0152, -2.59976, 0.91 ) }
    dend_41 { pt3dadd( -1.60057, -12.5091, -2.23712, 0.91 ) }
    dend_41 { pt3dadd( -3.34125, -14.1735, -1.8331, 1.13 ) }
    dend_41 { pt3dadd( -4.46158, -15.2447, -1.57306, 1.13 ) }
    dend_41 { pt3dadd( -6.05436, -16.7676, -1.20337, 0.91 ) }
    dend_41 { pt3dadd( -7.29341, -17.9524, -0.915777, 1.59 ) }
    dend_41 { pt3dadd( -8.28876, -18.9041, -0.68475, 2.5 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.038197, -11.0152, -2.59976, 1.59 ) }
    dend_28 { pt3dadd( 0.467218, -13.5696, -1.40763, 1.59 ) }
    dend_28 { pt3dadd( 0.870569, -15.6082, -0.456246, 1.59 ) }
    dend_28 { pt3dadd( 1.2499, -17.5254, 0.438485, 2.04 ) }
    dend_28 { pt3dadd( 1.60051, -19.2974, 1.26547, 2.04 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 22.0453, -36.4241, -24.0611, 0.23 ) }
    dend_25 { pt3dadd( 22.5102, -39.196, -24.2411, 0.23 ) }
    dend_25 { pt3dadd( 22.7663, -41.2238, -24.4039, 0.23 ) }
    dend_25 { pt3dadd( 22.9408, -43.7821, -24.6162, 1.81 ) }
    dend_25 { pt3dadd( 23.0195, -45.8746, -24.7854, 0.68 ) }
    dend_25 { pt3dadd( 23.0277, -46.8997, -24.8663, 1.36 ) }
    dend_25 { pt3dadd( 22.9718, -49.0079, -25.0261, 0.23 ) }
    dend_25 { pt3dadd( 22.8536, -50.087, -25.1051, 1.13 ) }
    dend_25 { pt3dadd( 22.4573, -52.4902, -25.2738, 0.23 ) }
    dend_25 { pt3dadd( 22.1702, -53.8999, -25.3489, 0.68 ) }
    dend_25 { pt3dadd( 21.7879, -55.4882, -25.3761, 0.23 ) }
    dend_25 { pt3dadd( 21.447, -56.8798, -25.3555, 1.13 ) }
    dend_25 { pt3dadd( 21.113, -58.4878, -25.2441, 0.23 ) }
    dend_25 { pt3dadd( 20.7689, -60.2429, -25.0794, 0.23 ) }
    dend_25 { pt3dadd( 20.5239, -61.591, -24.9239, 1.13 ) }
    dend_25 { pt3dadd( 20.1955, -63.4695, -24.6821, 0.23 ) }
    dend_25 { pt3dadd( 19.9922, -64.8736, -24.4977, 0.91 ) }
    dend_25 { pt3dadd( 19.7058, -67.2157, -24.2447, 0.23 ) }
    dend_25 { pt3dadd( 19.6145, -68.0593, -24.1727, 0.91 ) }
    dend_25 { pt3dadd( 19.4872, -69.4247, -24.0951, 0.23 ) }
    dend_25 { pt3dadd( 19.436, -70.2455, -24.0713, 1.13 ) }
    dend_25 { pt3dadd( 19.3524, -73.5769, -24.0901, 0.23 ) }
    dend_25 { pt3dadd( 19.3351, -75.8067, -24.1751, 0.23 ) }
    dend_25 { pt3dadd( 19.3394, -76.9641, -24.2684, 1.36 ) }
    dend_25 { pt3dadd( 19.4285, -79.5459, -24.5276, 0.23 ) }
    dend_25 { pt3dadd( 19.5003, -80.8519, -24.7069, 0.91 ) }
    dend_25 { pt3dadd( 19.6532, -82.3924, -25.0053, 0.23 ) }
    dend_25 { pt3dadd( 19.7361, -82.9194, -25.1415, 0.91 ) }
    dend_25 { pt3dadd( 19.9544, -84.0207, -25.4664, 0.23 ) }
    dend_25 { pt3dadd( 20.2085, -85.1203, -25.85, 0.68 ) }
    dend_25 { pt3dadd( 20.7408, -87.2684, -26.6982, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_25 { pt3dadd( 21.0752, -88.6054, -27.2389, 0.68 ) }
    dend_25 { pt3dadd( 21.3781, -89.7741, -27.6602, 0.23 ) }
    dend_25 { pt3dadd( 21.3781, -89.7741, -27.6602, 0.91 ) }
    dend_25 { pt3dadd( 22.0142, -91.4977, -28.3422, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 22.0453, -36.4241, -24.0611, 0.23 ) }
    dend_24 { pt3dadd( 23.8249, -38.0138, -25.7023, 0.23 ) }
    dend_24 { pt3dadd( 25.0165, -39.0784, -26.9049, 1.81 ) }
    dend_24 { pt3dadd( 26.677, -40.5538, -28.5977, 0.23 ) }
    dend_24 { pt3dadd( 27.728, -41.4969, -29.6782, 2.04 ) }
    dend_24 { pt3dadd( 29.5245, -43.1397, -31.5402, 0.23 ) }
    dend_24 { pt3dadd( 30.8331, -44.3474, -32.8811, 1.36 ) }
    dend_24 { pt3dadd( 32.3581, -45.8336, -34.4178, 0.23 ) }
    dend_24 { pt3dadd( 32.7541, -46.2441, -34.863, 1.59 ) }
    dend_24 { pt3dadd( 33.961, -47.5587, -36.3742, 0.23 ) }
    dend_24 { pt3dadd( 34.3795, -48.0199, -36.926, 0.23 ) }
    dend_24 { pt3dadd( 35.0571, -48.7247, -37.7984, 0.91 ) }
    dend_24 { pt3dadd( 35.9455, -49.5672, -38.9724, 1.59 ) }
    dend_24 { pt3dadd( 37.2261, -50.697, -40.6491, 0.23 ) }
    dend_24 { pt3dadd( 37.9794, -51.2945, -41.6133, 0.23 ) }
    dend_24 { pt3dadd( 39.3335, -52.2439, -43.3625, 1.81 ) }
    dend_24 { pt3dadd( 40.7296, -53.1022, -45.0941, 0.23 ) }
    dend_24 { pt3dadd( 41.4416, -53.4878, -45.9775, 1.13 ) }
    dend_24 { pt3dadd( 42.2867, -53.8739, -46.9349, 0.23 ) }
    dend_24 { pt3dadd( 43.1664, -54.199, -47.9565, 0.91 ) }
    dend_24 { pt3dadd( 44.0825, -54.5024, -49.0874, 0.23 ) }
    dend_24 { pt3dadd( 44.7384, -54.6895, -49.9773, 2.04 ) }
    dend_24 { pt3dadd( 46.5124, -55.2471, -52.4528, 0.23 ) }
    dend_24 { pt3dadd( 47.2585, -55.4863, -53.5624, 1.36 ) }
    dend_24 { pt3dadd( 49.1289, -56.0561, -56.317, 0.23 ) }
    dend_24 { pt3dadd( 49.3317, -56.1181, -56.6101, 0.91 ) }
    dend_24 { pt3dadd( 51.1134, -56.7101, -58.9612, 0.23 ) }
    dend_24 { pt3dadd( 51.8767, -56.9948, -59.917, 0.91 ) }
    dend_24 { pt3dadd( 53.2805, -57.6556, -61.443, 0.23 ) }
    dend_24 { pt3dadd( 54.4302, -58.3547, -62.638, 0.91 ) }
    dend_24 { pt3dadd( 55.4077, -59.0971, -63.5196, 0.23 ) }
    dend_24 { pt3dadd( 56.445, -59.9997, -64.4435, 0.23 ) }
    dend_24 { pt3dadd( 57.1065, -60.6615, -64.9848, 0.68 ) }
    dend_24 { pt3dadd( 58.4073, -62.0836, -66.0179, 0.23 ) }
    dend_24 { pt3dadd( 59.624, -63.5837, -66.9604, 0.23 ) }
    dend_24 { pt3dadd( 60.3135, -64.5036, -67.5473, 1.59 ) }
    dend_24 { pt3dadd( 61.0763, -65.5628, -68.2008, 0.45 ) }
    dend_24 { pt3dadd( 61.9044, -66.7753, -68.941, 1.13 ) }
    dend_24 { pt3dadd( 63.3821, -69.0104, -70.3151, 0.23 ) }
    dend_24 { pt3dadd( 64.3779, -70.5532, -71.2517, 1.13 ) }
    dend_24 { pt3dadd( 65.3717, -72.1271, -72.1588, 0.23 ) }
    dend_24 { pt3dadd( 66.0774, -73.2128, -72.7887, 0.23 ) }
    dend_24 { pt3dadd( 66.8975, -74.4303, -73.4482, 1.13 ) }
    dend_24 { pt3dadd( 67.7559, -75.6522, -74.0887, 0.23 ) }
    dend_24 { pt3dadd( 68.1193, -76.0938, -74.2954, 1.13 ) }
    dend_24 { pt3dadd( 69.5159, -77.4989, -74.9013, 0.23 ) }
    dend_24 { pt3dadd( 70.5203, -78.3143, -75.2267, 0.91 ) }
    dend_24 { pt3dadd( 72.0913, -79.4189, -75.6685, 0.23 ) }
    dend_24 { pt3dadd( 73.1127, -80.0275, -75.9011, 1.13 ) }
    dend_24 { pt3dadd( 74.685, -80.84, -76.1969, 0.23 ) }
    dend_24 { pt3dadd( 75.5046, -81.2159, -76.341, 0.23 ) }
    dend_24 { pt3dadd( 76.7915, -81.7114, -76.5265, 0.91 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 25.3484, -41.8204, 6.27725, 0.23 ) }
    dend_22 { pt3dadd( 31.0179, -49.4066, 8.29916, 0.23 ) }
    dend_22 { pt3dadd( 35.9617, -57.6417, 8.94459, 0.23 ) }
    dend_22 { pt3dadd( 40.0947, -66.0135, 11.2377, 0.23 ) }
    dend_22 { pt3dadd( 45.0064, -73.5221, 14.8989, 0.23 ) }
    dend_22 { pt3dadd( 49.7253, -81.363, 17.999, 0.23 ) }
    dend_22 { pt3dadd( 54.5453, -89.5702, 19.4599, 0.23 ) }
    dend_22 { pt3dadd( 58.2516, -98.3297, 20.5753, 0.23 ) }
    dend_22 { pt3dadd( 60.9436, -107.455, 21.2743, 0.23 ) }
    dend_22 { pt3dadd( 63.6781, -116.513, 22.5372, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 25.3484, -41.8204, 6.27725, 0.23 ) }
    dend_21 { pt3dadd( 27.2935, -50.9604, 8.18785, 0.23 ) }
    dend_21 { pt3dadd( 30.4175, -59.9251, 9.28033, 0.23 ) }
    dend_21 { pt3dadd( 35.5701, -67.9901, 10.4549, 0.23 ) }
    dend_21 { pt3dadd( 39.2184, -76.4981, 13.0012, 0.23 ) }
    dend_21 { pt3dadd( 43.2378, -84.7473, 15.9069, 0.23 ) }
    dend_21 { pt3dadd( 46.211, -92.969, 19.9395, 0.23 ) }
    dend_21 { pt3dadd( 49.3527, -100.626, 24.9564, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 74/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.07996, 6.0135, -7.34, 1.36 ) }
    dend_16 { pt3dadd( -0.988839, 6.98387, -8.28017, 1.36 ) }
    dend_16 { pt3dadd( 0.0628658, 8.12665, -9.18387, 1.36 ) }
    dend_16 { pt3dadd( 0.756245, 9.29232, -9.93192, 1.36 ) }
    dend_16 { pt3dadd( 1.05708, 10.138, -10.3568, 1.36 ) }
    dend_16 { pt3dadd( 1.23111, 10.8087, -10.6722, 1.81 ) }
    dend_16 { pt3dadd( 1.55088, 12.1631, -11.2973, 0.91 ) }
    dend_16 { pt3dadd( 1.67655, 13.3375, -11.7502, 0.91 ) }
    dend_16 { pt3dadd( 1.64392, 14.9839, -12.3573, 0.91 ) }
    dend_16 { pt3dadd( 1.58895, 16.004, -12.8225, 0.23 ) }
    dend_16 { pt3dadd( 2.03681, 16.1169, -13.367, 0.23 ) }
    dend_16 { pt3dadd( 2.34157, 16.2256, -13.7025, 0.23 ) }
    dend_16 { pt3dadd( 3.62835, 16.7712, -15.1585, 1.13 ) }
    dend_16 { pt3dadd( 5.06857, 17.4793, -16.6931, 1.13 ) }
    dend_16 { pt3dadd( 5.87791, 17.9106, -17.443, 1.59 ) }
    dend_16 { pt3dadd( 7.03544, 18.7019, -18.4431, 0.68 ) }
    dend_16 { pt3dadd( 7.89472, 19.5664, -19.1671, 0.23 ) }
    dend_16 { pt3dadd( 8.54272, 20.5053, -19.7238, 0.23 ) }
    dend_16 { pt3dadd( 9.25657, 21.9367, -20.3771, 1.59 ) }
    dend_16 { pt3dadd( 9.5082, 22.5525, -20.5925, 1.59 ) }
    dend_16 { pt3dadd( 9.92159, 23.6634, -20.9973, 0.23 ) }
    dend_16 { pt3dadd( 10.2104, 24.409, -21.2964, 0.23 ) }
    dend_16 { pt3dadd( 10.8573, 25.9534, -21.9317, 1.36 ) }
    dend_16 { pt3dadd( 11.3413, 27.0526, -22.3628, 0.23 ) }
    dend_16 { pt3dadd( 11.7802, 28.0213, -22.7357, 1.13 ) }
    dend_16 { pt3dadd( 12.6221, 29.7031, -23.3935, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 12.9009, 30.1923, -23.5851, 1.13 ) }
    dend_16 { pt3dadd( 13.7063, 31.3879, -24.0675, 0.23 ) }
    dend_16 { pt3dadd( 14.7224, 32.7345, -24.5987, 2.72 ) }
    dend_16 { pt3dadd( 16.8399, 35.3589, -25.6699, 0.23 ) }
    dend_16 { pt3dadd( 17.5074, 36.1473, -25.9961, 0.23 ) }
    dend_16 { pt3dadd( 18.2756, 37.0395, -26.3764, 1.81 ) }
    dend_16 { pt3dadd( 19.3832, 38.293, -26.9788, 0.23 ) }
    dend_16 { pt3dadd( 20.1432, 39.1135, -27.4037, 0.91 ) }
    dend_16 { pt3dadd( 20.8021, 39.8354, -27.8023, 0.23 ) }
    dend_16 { pt3dadd( 21.7442, 40.8975, -28.4115, 2.04 ) }
    dend_16 { pt3dadd( 23.5702, 43.0747, -29.698, 0.23 ) }
    dend_16 { pt3dadd( 24.4874, 44.2523, -30.3848, 0.23 ) }
    dend_16 { pt3dadd( 25.47, 45.5469, -31.1334, 1.81 ) }
    dend_16 { pt3dadd( 26.6481, 47.119, -32.0217, 0.23 ) }
    dend_16 { pt3dadd( 27.4096, 48.1479, -32.5539, 1.36 ) }
    dend_16 { pt3dadd( 28.2903, 49.4073, -33.1776, 0.23 ) }
    dend_16 { pt3dadd( 28.865, 50.311, -33.5467, 0.68 ) }
    dend_16 { pt3dadd( 29.6114, 51.5665, -33.9733, 0.23 ) }
    dend_16 { pt3dadd( 30.0342, 52.2803, -34.1969, 1.81 ) }
    dend_16 { pt3dadd( 30.6898, 53.3411, -34.4815, 0.23 ) }
    dend_16 { pt3dadd( 31.3669, 54.4434, -34.7768, 1.13 ) }
    dend_16 { pt3dadd( 32.3929, 56.0416, -35.2, 0.23 ) }
    dend_16 { pt3dadd( 32.9039, 56.8065, -35.4145, 0.91 ) }
    dend_16 { pt3dadd( 34.1412, 58.6232, -35.9089, 0.23 ) }
    dend_16 { pt3dadd( 34.7884, 59.5081, -36.2037, 1.36 ) }
    dend_16 { pt3dadd( 35.6739, 60.6413, -36.6351, 0.23 ) }
    dend_16 { pt3dadd( 36.3408, 61.4149, -36.948, 0.91 ) }
    dend_16 { pt3dadd( 36.4855, 61.5683, -37.0187, 0.23 ) }
    dend_16 { pt3dadd( 37.6964, 62.872, -37.6643, 1.13 ) }
    dend_16 { pt3dadd( 38.9045, 64.1959, -38.319, 0.23 ) }
    dend_16 { pt3dadd( 39.2694, 64.6259, -38.5231, 0.68 ) }
    dend_16 { pt3dadd( 40.1212, 65.6726, -38.9877, 0.23 ) }
    dend_16 { pt3dadd( 41.0391, 66.8895, -39.5794, 1.36 ) }
    dend_16 { pt3dadd( 42.2269, 68.5981, -40.4206, 0.23 ) }
    dend_16 { pt3dadd( 42.6606, 69.267, -40.7383, 1.59 ) }
    dend_16 { pt3dadd( 44.0617, 71.6358, -41.8231, 0.23 ) }
    dend_16 { pt3dadd( 44.2969, 72.0639, -42.0254, 1.13 ) }
    dend_16 { pt3dadd( 45.4309, 74.3548, -43.1277, 0.23 ) }
    dend_16 { pt3dadd( 45.7596, 75.0718, -43.4665, 0.23 ) }
    dend_16 { pt3dadd( 46.3997, 76.5778, -44.169, 1.36 ) }
    dend_16 { pt3dadd( 47.4678, 79.3712, -45.437, 0.23 ) }
    dend_16 { pt3dadd( 47.5807, 79.685, -45.5646, 0.45 ) }
    dend_16 { pt3dadd( 47.9396, 80.7434, -45.9695, 0.23 ) }
    dend_16 { pt3dadd( 48.1, 81.2371, -46.1319, 0.45 ) }
    dend_16 { pt3dadd( 48.6391, 82.8963, -46.6914, 0.23 ) }
    dend_16 { pt3dadd( 49.0077, 84.1508, -47.1015, 0.23 ) }
    dend_16 { pt3dadd( 49.63, 86.1115, -47.5434, 0.68 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.07996, 6.0135, -7.34, 0.91 ) }
    dend_13 { pt3dadd( -2.96037, 8.57003, -7.72853, 0.91 ) }
    dend_13 { pt3dadd( -3.62579, 10.3186, -8.21126, 0.91 ) }
    dend_13 { pt3dadd( -4.84174, 12.8612, -9.09856, 0.91 ) }
    dend_13 { pt3dadd( -5.50425, 13.9406, -9.53571, 0.91 ) }
    dend_13 { pt3dadd( -6.36123, 15.0515, -10.0093, 1.36 ) }
    dend_13 { pt3dadd( -7.41399, 16.1071, -10.4472, 0.68 ) }
    dend_13 { pt3dadd( -8.70809, 16.9599, -10.9735, 0.68 ) }
    dend_13 { pt3dadd( -10.1593, 17.5756, -11.5408, 0.68 ) }
    dend_13 { pt3dadd( -11.599, 18.0398, -12.0497, 1.13 ) }
    dend_13 { pt3dadd( -12.8608, 18.5335, -12.5435, 0.45 ) }
    dend_13 { pt3dadd( -14.4749, 19.3568, -13.3006, 0.45 ) }
    dend_13 { pt3dadd( -15.5185, 20.0567, -13.9015, 0.45 ) }
    dend_13 { pt3dadd( -16.1972, 20.7009, -14.4209, 0.45 ) }
    dend_13 { pt3dadd( -17.1093, 21.8612, -15.3851, 2.27 ) }
    dend_13 { pt3dadd( -18.396, 23.8773, -17.0897, 0.23 ) }
    dend_13 { pt3dadd( -18.8229, 24.6716, -17.7932, 1.13 ) }
    dend_13 { pt3dadd( -19.037, 25.1342, -18.2192, 1.59 ) }
    dend_13 { pt3dadd( -19.5504, 26.137, -19.1174, 0.68 ) }
    dend_13 { pt3dadd( -20.2677, 27.3636, -20.1909, 1.13 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 67/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 18.1106, 14.1213, 1.56107, 0.91 ) }
    dend_5 { pt3dadd( 18.3245, 16.0216, 1.96972, 0.91 ) }
    dend_5 { pt3dadd( 18.5737, 18.2354, 2.44581, 1.36 ) }
    dend_5 { pt3dadd( 18.7028, 19.3825, 2.69249, 0.91 ) }
    dend_5 { pt3dadd( 18.7963, 20.2138, 2.87127, 1.36 ) }
    dend_5 { pt3dadd( 18.8891, 21.0379, 3.04849, 1.36 ) }
    dend_5 { pt3dadd( 19.0059, 22.0751, 3.27154, 1.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 18.1106, 14.1213, 1.56107, 0.68 ) }
    dend_4 { pt3dadd( 20.0863, 14.9223, 1.09326, 0.68 ) }
    dend_4 { pt3dadd( 21.2543, 15.371, 0.83105, 0.91 ) }
    dend_4 { pt3dadd( 22.8394, 15.9299, 0.503818, 0.91 ) }
    dend_4 { pt3dadd( 24.4716, 16.4426, 0.182141, 2.04 ) }
    dend_4 { pt3dadd( 26.5657, 17.0448, -0.202628, 0.23 ) }
    dend_4 { pt3dadd( 27.2725, 17.2185, -0.322286, 0.45 ) }
    dend_4 { pt3dadd( 28.1845, 17.4359, -0.470612, 0.23 ) }
    dend_4 { pt3dadd( 29.3152, 17.6607, -0.656249, 1.13 ) }
    dend_4 { pt3dadd( 30.7179, 17.8308, -0.847812, 0.23 ) }
    dend_4 { pt3dadd( 31.9722, 17.8984, -0.96152, 0.68 ) }
    dend_4 { pt3dadd( 33.3651, 17.893, -1.0467, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -35.0816, 36.2981, 0.0893908, 0.23 ) }
    dend_2 { pt3dadd( -41.5684, 43.5247, -0.149264, 0.23 ) }
    dend_2 { pt3dadd( -48.175, 50.6549, -0.287878, 0.23 ) }
    dend_2 { pt3dadd( -54.5491, 57.9507, 0.338414, 0.23 ) }
    dend_2 { pt3dadd( -61.9841, 64.2468, 1.23176, 0.23 ) }
    dend_2 { pt3dadd( -69.4015, 70.3092, 3.29541, 0.23 ) }
    dend_2 { pt3dadd( -77.2298, 74.9709, 7.12143, 0.23 ) }
    dend_2 { pt3dadd( -85.1063, 79.9061, 10.4339, 0.23 ) }
    dend_2 { pt3dadd( -91.1687, 86.2365, 14.7749, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 95/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -35.0816, 36.2981, 0.0893908, 0.23 ) }
    dend_1 { pt3dadd( -41.5531, 43.5349, -0.212274, 0.23 ) }
    dend_1 { pt3dadd( -48.2935, 50.274, -2.27272, 0.23 ) }
    dend_1 { pt3dadd( -54.3139, 57.7195, -3.79925, 0.23 ) }
    dend_1 { pt3dadd( -60.8802, 64.8372, -4.66422, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -67.2494, 71.9274, -6.59601, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 1/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -6.54736, 37.4424, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.18915, 52.2079, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -11.8309, 66.9734, 0.0, 0.15 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -8.28876, -18.9041, -0.68475, 0.45 ) }
    dend_43 { pt3dadd( -9.88404, -18.8767, -2.05482, 0.45 ) }
    dend_43 { pt3dadd( -10.7465, -18.8862, -2.72154, 0.45 ) }
    dend_43 { pt3dadd( -11.8773, -18.9672, -3.52697, 0.68 ) }
    dend_43 { pt3dadd( -13.7744, -19.2672, -4.8362, 1.36 ) }
    dend_43 { pt3dadd( -15.4682, -19.7132, -5.89717, 1.36 ) }
    dend_43 { pt3dadd( -16.6019, -20.112, -6.52142, 1.36 ) }
    dend_43 { pt3dadd( -18.3988, -20.9336, -7.27957, 0.23 ) }
    dend_43 { pt3dadd( -19.5009, -21.5788, -7.67767, 0.91 ) }
    dend_43 { pt3dadd( -20.6683, -22.404, -8.01504, 0.91 ) }
    dend_43 { pt3dadd( -22.4764, -23.8789, -8.40565, 0.68 ) }
    dend_43 { pt3dadd( -24.1413, -25.4248, -8.70374, 1.13 ) }
    dend_43 { pt3dadd( -25.618, -27.0086, -9.02534, 2.27 ) }
    dend_43 { pt3dadd( -26.6739, -28.2895, -9.3075, 0.91 ) }
    dend_43 { pt3dadd( -27.8617, -29.7695, -9.72838, 0.91 ) }
    dend_43 { pt3dadd( -28.5777, -30.6619, -10.0418, 0.91 ) }
    dend_43 { pt3dadd( -29.2613, -31.5575, -10.4391, 1.36 ) }
    dend_43 { pt3dadd( -30.2234, -32.9006, -11.1623, 0.91 ) }
    dend_43 { pt3dadd( -31.1752, -34.2784, -11.9867, 0.23 ) }
    dend_43 { pt3dadd( -31.9711, -35.4996, -12.7032, 0.45 ) }
    dend_43 { pt3dadd( -32.3105, -36.0482, -13.0137, 1.36 ) }
    dend_43 { pt3dadd( -32.9211, -37.0852, -13.5934, 0.68 ) }
    dend_43 { pt3dadd( -33.5199, -38.1323, -14.1476, 2.04 ) }
    dend_43 { pt3dadd( -34.6596, -40.2376, -15.1451, 0.23 ) }
    dend_43 { pt3dadd( -35.5501, -42.0063, -15.9142, 2.27 ) }
    dend_43 { pt3dadd( -35.8849, -42.7067, -16.1923, 2.72 ) }
    dend_43 { pt3dadd( -37.2012, -45.5433, -17.3411, 0.23 ) }
    dend_43 { pt3dadd( -37.6378, -46.504, -17.7291, 0.23 ) }
    dend_43 { pt3dadd( -37.9918, -47.2186, -18.0233, 0.23 ) }
    dend_43 { pt3dadd( -38.5484, -48.1854, -18.4868, 0.23 ) }
    dend_43 { pt3dadd( -39.002, -48.8362, -18.8401, 0.23 ) }
    dend_43 { pt3dadd( -40.2091, -50.2103, -19.7636, 1.36 ) }
    dend_43 { pt3dadd( -40.7788, -50.7463, -20.1745, 0.45 ) }
    dend_43 { pt3dadd( -41.8809, -51.7332, -21.0166, 1.13 ) }
    dend_43 { pt3dadd( -43.2655, -52.9288, -22.1312, 0.23 ) }
    dend_43 { pt3dadd( -43.9794, -53.5272, -22.7356, 1.59 ) }
    dend_43 { pt3dadd( -45.3769, -54.5927, -23.8932, 0.45 ) }
    dend_43 { pt3dadd( -46.2197, -55.0954, -24.4957, 1.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 42/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -8.28876, -18.9041, -0.68475, 0.45 ) }
    dend_42 { pt3dadd( -9.91874, -20.1939, -1.14108, 0.45 ) }
    dend_42 { pt3dadd( -10.7305, -20.8988, -1.35308, 0.45 ) }
    dend_42 { pt3dadd( -11.4732, -21.567, -1.51664, 0.45 ) }
    dend_42 { pt3dadd( -11.9521, -22.021, -1.59863, 0.45 ) }
    dend_42 { pt3dadd( -12.4525, -22.5354, -1.65966, 0.45 ) }
    dend_42 { pt3dadd( -13.0719, -23.1375, -1.74204, 0.45 ) }
    dend_42 { pt3dadd( -13.4768, -23.511, -1.80173, 0.45 ) }
    dend_42 { pt3dadd( -14.2354, -24.2588, -1.90539, 0.45 ) }
    dend_42 { pt3dadd( -15.2891, -25.3644, -2.0599, 1.81 ) }
    dend_42 { pt3dadd( -16.9027, -27.1157, -2.34752, 3.18 ) }
    dend_42 { pt3dadd( -19.4345, -29.8681, -2.84511, 0.68 ) }
    dend_42 { pt3dadd( -21.2111, -31.7582, -3.20667, 0.68 ) }
    dend_42 { pt3dadd( -22.5744, -33.2041, -3.49933, 0.68 ) }
    dend_42 { pt3dadd( -23.3441, -34.0315, -3.67951, 0.68 ) }
    dend_42 { pt3dadd( -24.3092, -35.0757, -3.93075, 0.68 ) }
    dend_42 { pt3dadd( -25.0087, -35.8548, -4.14038, 0.45 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 59/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.60051, -19.2974, 1.26547, 0.45 ) }
    dend_32 { pt3dadd( 3.11657, -19.9286, 2.07725, 0.45 ) }
    dend_32 { pt3dadd( 4.54248, -20.5223, 2.84075, 0.45 ) }
    dend_32 { pt3dadd( 5.87342, -21.0764, 3.55341, 1.36 ) }
    dend_32 { pt3dadd( 7.10623, -21.5897, 4.21352, 1.36 ) }
    dend_32 { pt3dadd( 8.13494, -22.018, 4.76434, 1.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 65/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.60051, -19.2974, 1.26547, 0.91 ) }
    dend_29 { pt3dadd( -0.308599, -20.6532, 1.93262, 0.91 ) }
    dend_29 { pt3dadd( -1.98124, -21.9733, 2.60675, 1.13 ) }
    dend_29 { pt3dadd( -3.51895, -23.4434, 3.34993, 0.68 ) }
    dend_29 { pt3dadd( -3.66984, -23.6454, 3.43998, 0.68 ) }
    dend_29 { pt3dadd( -3.98833, -24.1532, 3.6473, 1.13 ) }
    dend_29 { pt3dadd( -4.38458, -24.7814, 3.86224, 1.13 ) }
    dend_29 { pt3dadd( -4.80129, -25.6185, 4.08338, 1.13 ) }
    dend_29 { pt3dadd( -5.27677, -26.7059, 4.22218, 1.81 ) }
    dend_29 { pt3dadd( -6.02466, -28.2363, 4.34198, 1.36 ) }
    dend_29 { pt3dadd( -6.4794, -29.1599, 4.42725, 0.91 ) }
    dend_29 { pt3dadd( -7.32887, -31.0458, 4.67258, 0.91 ) }
    dend_29 { pt3dadd( -7.75757, -31.9054, 4.77835, 0.91 ) }
    dend_29 { pt3dadd( -8.55005, -33.3653, 4.95668, 0.45 ) }
    dend_29 { pt3dadd( -9.75787, -35.515, 5.25213, 0.45 ) }
    dend_29 { pt3dadd( -10.5639, -37.0315, 5.51702, 0.68 ) }
    dend_29 { pt3dadd( -11.3613, -39.0255, 5.94631, 0.23 ) }
    dend_29 { pt3dadd( -16.8725, -46.4887, 8.75899, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -20.2677, 27.3636, -20.1909, 0.91 ) }
    dend_15 { pt3dadd( -21.6131, 28.2576, -22.6964, 0.91 ) }
    dend_15 { pt3dadd( -22.5721, 28.9796, -24.4311, 0.23 ) }
    dend_15 { pt3dadd( -23.0253, 29.3092, -25.1488, 0.91 ) }
    dend_15 { pt3dadd( -23.2526, 29.4651, -25.493, 0.91 ) }
    dend_15 { pt3dadd( -23.96, 29.9237, -26.4543, 0.23 ) }
    dend_15 { pt3dadd( -24.8087, 30.4126, -27.5036, 1.59 ) }
    dend_15 { pt3dadd( -26.1895, 31.1517, -28.8958, 0.23 ) }
    dend_15 { pt3dadd( -26.9906, 31.5355, -29.5911, 0.91 ) }
    dend_15 { pt3dadd( -28.2227, 32.0551, -30.5902, 0.23 ) }
    dend_15 { pt3dadd( -29.2567, 32.437, -31.4291, 0.91 ) }
    dend_15 { pt3dadd( -30.961, 32.979, -32.69, 0.23 ) }
    dend_15 { pt3dadd( -31.7169, 33.194, -33.2319, 1.59 ) }
    dend_15 { pt3dadd( -32.4458, 33.414, -33.7374, 1.59 ) }
    dend_15 { pt3dadd( -34.1396, 34.0583, -35.0996, 0.23 ) }
    dend_15 { pt3dadd( -35.5192, 34.7079, -36.3034, 0.23 ) }
    dend_15 { pt3dadd( -36.8597, 35.5289, -37.6551, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( -37.3685, 35.9517, -38.2536, 0.23 ) }
    dend_15 { pt3dadd( -37.9942, 36.6063, -39.0687, 0.91 ) }
    dend_15 { pt3dadd( -39.3569, 38.352, -41.0281, 0.23 ) }
    dend_15 { pt3dadd( -39.6085, 38.7492, -41.405, 0.91 ) }
    dend_15 { pt3dadd( -40.309, 39.9651, -42.5149, 0.23 ) }
    dend_15 { pt3dadd( -41.0464, 41.4225, -43.9109, 0.23 ) }
    dend_15 { pt3dadd( -41.5199, 42.3839, -44.8696, 1.36 ) }
    dend_15 { pt3dadd( -42.1244, 43.5433, -46.0723, 0.23 ) }
    dend_15 { pt3dadd( -42.6043, 44.3347, -46.9893, 0.91 ) }
    dend_15 { pt3dadd( -43.5714, 45.5848, -48.8155, 0.68 ) }
    dend_15 { pt3dadd( -44.2454, 46.195, -49.9453, 0.23 ) }
    dend_15 { pt3dadd( -44.8668, 46.5957, -50.9327, 0.23 ) }
    dend_15 { pt3dadd( -45.4646, 46.8977, -51.8437, 0.91 ) }
    dend_15 { pt3dadd( -46.8902, 47.5329, -54.0282, 0.23 ) }
    dend_15 { pt3dadd( -48.1545, 47.9917, -55.9066, 0.45 ) }
    dend_15 { pt3dadd( -49.2589, 48.3237, -57.4166, 0.23 ) }
    dend_15 { pt3dadd( -50.7563, 48.7028, -59.3874, 0.23 ) }
    dend_15 { pt3dadd( -51.2827, 48.8328, -60.0895, 0.68 ) }
    dend_15 { pt3dadd( -53.1926, 49.4225, -62.8658, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 19/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -20.2677, 27.3636, -20.1909, 0.23 ) }
    dend_14 { pt3dadd( -21.3734, 28.6936, -21.2183, 0.23 ) }
    dend_14 { pt3dadd( -22.2133, 29.6044, -21.918, 1.59 ) }
    dend_14 { pt3dadd( -22.5909, 29.9789, -22.2018, 2.27 ) }
    dend_14 { pt3dadd( -23.6883, 30.9855, -22.9166, 1.36 ) }
    dend_14 { pt3dadd( -25.4907, 32.6008, -24.0322, 0.45 ) }
    dend_14 { pt3dadd( -26.6921, 33.6444, -24.7109, 1.81 ) }
    dend_14 { pt3dadd( -27.3411, 34.1726, -25.0148, 1.81 ) }
    dend_14 { pt3dadd( -28.2014, 34.8773, -25.3898, 0.23 ) }
    dend_14 { pt3dadd( -29.4063, 35.9241, -25.8637, 0.91 ) }
    dend_14 { pt3dadd( -30.0276, 36.5534, -26.071, 0.23 ) }
    dend_14 { pt3dadd( -31.0456, 37.8123, -26.3523, 1.13 ) }
    dend_14 { pt3dadd( -31.9513, 39.1534, -26.6012, 0.23 ) }
    dend_14 { pt3dadd( -32.4593, 40.065, -26.7548, 0.91 ) }
    dend_14 { pt3dadd( -33.4778, 42.2425, -27.1457, 0.23 ) }
    dend_14 { pt3dadd( -34.2525, 44.1765, -27.4987, 1.81 ) }
    dend_14 { pt3dadd( -35.1853, 46.8033, -28.0087, 0.23 ) }
    dend_14 { pt3dadd( -35.6032, 48.1496, -28.286, 0.23 ) }
    dend_14 { pt3dadd( -36.3437, 50.7827, -28.9091, 1.36 ) }
    dend_14 { pt3dadd( -36.7813, 52.5086, -29.3701, 0.45 ) }
    dend_14 { pt3dadd( -37.0888, 53.9247, -29.7965, 1.13 ) }
    dend_14 { pt3dadd( -37.4949, 55.8861, -30.453, 0.23 ) }
    dend_14 { pt3dadd( -37.7251, 57.07, -30.8733, 0.68 ) }
    dend_14 { pt3dadd( -38.1932, 59.438, -31.7655, 0.23 ) }
    dend_14 { pt3dadd( -38.4497, 60.7619, -32.2837, 0.23 ) }
    dend_14 { pt3dadd( -38.6249, 61.6426, -32.6148, 0.68 ) }
    dend_14 { pt3dadd( -38.7748, 62.4245, -32.9301, 0.23 ) }
    dend_14 { pt3dadd( -38.8866, 63.059, -33.1775, 0.68 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 47/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 19.0059, 22.0751, 3.27154, 0.45 ) }
    dend_9 { pt3dadd( 19.3386, 23.7813, 2.98493, 0.45 ) }
    dend_9 { pt3dadd( 19.6921, 26.0476, 2.65226, 0.45 ) }
    dend_9 { pt3dadd( 19.893, 27.4112, 2.47532, 0.68 ) }
    dend_9 { pt3dadd( 20.1947, 29.0198, 2.2845, 0.23 ) }
    dend_9 { pt3dadd( 20.4514, 30.0273, 2.14, 0.23 ) }
    dend_9 { pt3dadd( 20.7089, 30.818, 2.01528, 0.23 ) }
    dend_9 { pt3dadd( 21.0017, 31.5853, 1.90785, 0.23 ) }
    dend_9 { pt3dadd( 21.3255, 32.3655, 1.7899, 0.23 ) }
    dend_9 { pt3dadd( 21.8216, 33.4673, 1.63229, 0.23 ) }
    dend_9 { pt3dadd( 22.5742, 34.9878, 1.53348, 0.23 ) }
    dend_9 { pt3dadd( 23.0857, 35.9093, 1.47649, 0.23 ) }
    dend_9 { pt3dadd( 23.6799, 36.9331, 1.42391, 0.23 ) }
    dend_9 { pt3dadd( 24.1873, 37.8803, 1.39987, 0.23 ) }
    dend_9 { pt3dadd( 24.6771, 39.033, 1.43105, 0.68 ) }
    dend_9 { pt3dadd( 25.2359, 41.2808, 1.69378, 0.23 ) }
    dend_9 { pt3dadd( 27.4609, 50.3755, -0.15003, 0.23 ) }
    dend_9 { pt3dadd( 29.8978, 59.1017, -3.26253, 0.23 ) }
    dend_9 { pt3dadd( 34.1118, 66.5054, -7.90004, 0.23 ) }
    dend_9 { pt3dadd( 38.7107, 74.6732, -10.1203, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 67/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 19.0059, 22.0751, 3.27154, 0.68 ) }
    dend_6 { pt3dadd( 20.098, 23.9135, 3.76896, 0.68 ) }
    dend_6 { pt3dadd( 21.0569, 25.5276, 4.20568, 1.13 ) }
    dend_6 { pt3dadd( 22.224, 27.4924, 4.73727, 0.45 ) }
    dend_6 { pt3dadd( 23.0595, 28.8987, 5.11777, 0.45 ) }
    dend_6 { pt3dadd( 23.7944, 30.1358, 5.4525, 0.45 ) }
    dend_6 { pt3dadd( 29.4376, 37.9188, 6.46964, 0.45 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 74/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -46.2197, -55.0954, -24.4957, 0.23 ) }
    dend_45 { pt3dadd( -47.0755, -56.8067, -25.2922, 0.23 ) }
    dend_45 { pt3dadd( -47.3238, -57.2586, -25.4772, 0.91 ) }
    dend_45 { pt3dadd( -48.4475, -59.4668, -26.3015, 0.23 ) }
    dend_45 { pt3dadd( -49.0495, -60.7405, -26.7472, 0.91 ) }
    dend_45 { pt3dadd( -49.9688, -62.684, -27.4628, 0.45 ) }
    dend_45 { pt3dadd( -50.4815, -63.7765, -27.8666, 0.45 ) }
    dend_45 { pt3dadd( -51.1809, -65.2509, -28.3914, 2.27 ) }
    dend_45 { pt3dadd( -52.7605, -68.4636, -29.632, 0.23 ) }
    dend_45 { pt3dadd( -53.3608, -69.654, -30.1286, 1.13 ) }
    dend_45 { pt3dadd( -54.899, -72.708, -31.5374, 0.23 ) }
    dend_45 { pt3dadd( -55.2408, -73.3784, -31.8811, 0.23 ) }
    dend_45 { pt3dadd( -55.834, -74.4753, -32.489, 1.59 ) }
    dend_45 { pt3dadd( -57.3659, -76.976, -34.0538, 0.45 ) }
    dend_45 { pt3dadd( -58.6739, -78.827, -35.3144, 0.45 ) }
    dend_45 { pt3dadd( -59.9508, -80.4702, -36.4854, 1.36 ) }
    dend_45 { pt3dadd( -61.0839, -81.7955, -37.4361, 0.23 ) }
    dend_45 { pt3dadd( -61.922, -82.7322, -38.1296, 1.36 ) }
    dend_45 { pt3dadd( -63.6567, -84.5654, -39.5071, 0.23 ) }
    dend_45 { pt3dadd( -64.1122, -85.0269, -39.8204, 0.68 ) }
    dend_45 { pt3dadd( -64.6073, -85.4633, -40.1223, 0.23 ) }
    dend_45 { pt3dadd( -65.7535, -86.3448, -40.7476, 1.13 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 96/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -46.2197, -55.0954, -24.4957, 0.23 ) }
    dend_44 { pt3dadd( -48.3527, -55.6829, -25.3138, 0.23 ) }
    dend_44 { pt3dadd( -48.9725, -55.859, -25.5204, 0.91 ) }
    dend_44 { pt3dadd( -51.5588, -56.5873, -26.2346, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( -52.5732, -56.869, -26.4915, 0.23 ) }
    dend_44 { pt3dadd( -55.0303, -57.5274, -27.0565, 0.91 ) }
    dend_44 { pt3dadd( -57.8938, -58.2528, -27.6565, 0.23 ) }
    dend_44 { pt3dadd( -58.8136, -58.4803, -27.8038, 0.23 ) }
    dend_44 { pt3dadd( -61.2614, -59.0368, -28.163, 1.13 ) }
    dend_44 { pt3dadd( -62.5608, -59.2901, -28.3226, 0.23 ) }
    dend_44 { pt3dadd( -64.2161, -59.561, -28.4958, 0.91 ) }
    dend_44 { pt3dadd( -66.1038, -59.794, -28.7271, 0.23 ) }
    dend_44 { pt3dadd( -67.2083, -59.8825, -28.9072, 0.91 ) }
    dend_44 { pt3dadd( -68.4533, -59.9853, -29.2087, 0.23 ) }
    dend_44 { pt3dadd( -69.1628, -60.035, -29.4054, 0.23 ) }
    dend_44 { pt3dadd( -70.4632, -60.1216, -29.7973, 0.91 ) }
    dend_44 { pt3dadd( -72.6867, -60.2818, -30.5796, 0.23 ) }
    dend_44 { pt3dadd( -73.6601, -60.365, -30.9711, 1.81 ) }
    dend_44 { pt3dadd( -76.3377, -60.6424, -32.1356, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 15/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.13494, -22.018, 4.76434, 0.91 ) }
    dend_40 { pt3dadd( 9.06696, -22.9533, 4.6491, 0.91 ) }
    dend_40 { pt3dadd( 10.0694, -24.1537, 4.50948, 0.91 ) }
    dend_40 { pt3dadd( 11.3319, -25.9185, 4.30394, 0.91 ) }
    dend_40 { pt3dadd( 12.4217, -27.7374, 4.08456, 0.91 ) }
    dend_40 { pt3dadd( 13.0599, -28.9808, 3.94019, 0.91 ) }
    dend_40 { pt3dadd( 13.9466, -30.8001, 3.73637, 0.91 ) }
    dend_40 { pt3dadd( 14.6173, -32.3504, 3.59252, 0.68 ) }
    dend_40 { pt3dadd( 15.0404, -33.3746, 3.51831, 0.68 ) }
    dend_40 { pt3dadd( 15.6672, -34.9427, 3.4457, 1.13 ) }
    dend_40 { pt3dadd( 16.4787, -36.6038, 3.40297, 0.68 ) }
    dend_40 { pt3dadd( 17.0905, -37.5441, 3.39708, 0.68 ) }
    dend_40 { pt3dadd( 18.1527, -38.9067, 3.401, 1.59 ) }
    dend_40 { pt3dadd( 18.9815, -39.8291, 3.39973, 2.04 ) }
    dend_40 { pt3dadd( 19.6249, -40.4845, 3.39583, 2.5 ) }
    dend_40 { pt3dadd( 21.9272, -42.7036, 3.45697, 1.13 ) }
    dend_40 { pt3dadd( 23.3816, -44.2065, 3.4761, 0.68 ) }
    dend_40 { pt3dadd( 24.0035, -44.8856, 3.47604, 0.68 ) }
    dend_40 { pt3dadd( 24.6785, -45.6716, 3.45871, 0.68 ) }
    dend_40 { pt3dadd( 25.5451, -46.7461, 3.43927, 0.68 ) }
    dend_40 { pt3dadd( 26.6054, -48.1924, 3.42678, 1.13 ) }
    dend_40 { pt3dadd( 27.7301, -50.0774, 3.46439, 0.23 ) }
    dend_40 { pt3dadd( 33.3722, -57.8707, 2.53201, 0.23 ) }
    dend_40 { pt3dadd( 38.6715, -65.6543, 0.34415, 0.23 ) }
    dend_40 { pt3dadd( 43.0363, -73.4019, -3.45588, 0.23 ) }
    dend_40 { pt3dadd( 46.0869, -80.4389, -9.44114, 0.23 ) }
    dend_40 { pt3dadd( 47.8755, -88.5835, -14.2682, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 42/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.13494, -22.018, 4.76434, 0.91 ) }
    dend_33 { pt3dadd( 8.95763, -23.8704, 4.35758, 0.91 ) }
    dend_33 { pt3dadd( 9.35103, -25.1773, 4.0894, 0.91 ) }
    dend_33 { pt3dadd( 9.66786, -26.2298, 3.87342, 0.91 ) }
    dend_33 { pt3dadd( 10.1863, -27.9519, 3.52004, 0.91 ) }
    dend_33 { pt3dadd( 10.5926, -29.3015, 3.24309, 0.68 ) }
    dend_33 { pt3dadd( 11.1338, -31.0996, 2.87412, 1.81 ) }
    dend_33 { pt3dadd( 11.811, -32.9098, 2.27837, 0.68 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 50/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -16.8725, -46.4887, 8.75899, 0.23 ) }
    dend_31 { pt3dadd( -21.581, -52.9991, 14.3146, 0.23 ) }
    dend_31 { pt3dadd( -27.4567, -57.8855, 20.5613, 0.23 ) }
    dend_31 { pt3dadd( -32.283, -62.3307, 27.9647, 0.23 ) }
    dend_31 { pt3dadd( -36.0053, -65.4702, 36.6379, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -16.8725, -46.4887, 8.75899, 0.23 ) }
    dend_30 { pt3dadd( -22.1991, -54.4143, 10.1823, 0.23 ) }
    dend_30 { pt3dadd( -28.0677, -62.0438, 11.2129, 0.23 ) }
    dend_30 { pt3dadd( -34.2704, -69.4696, 10.5594, 0.23 ) }
    dend_30 { pt3dadd( -38.5354, -78.0201, 11.4532, 0.23 ) }
    dend_30 { pt3dadd( -40.5673, -87.0735, 13.701, 0.23 ) }
    dend_30 { pt3dadd( -44.9826, -95.158, 16.5445, 0.23 ) }
    dend_30 { pt3dadd( -49.9336, -102.48, 20.5539, 0.23 ) }
    dend_30 { pt3dadd( -53.6213, -110.341, 24.7884, 0.23 ) }
    dend_30 { pt3dadd( -57.9844, -118.38, 27.8484, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 65/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 29.4376, 37.9188, 6.46964, 0.23 ) }
    dend_8 { pt3dadd( 32.8313, 44.7738, 12.5042, 0.23 ) }
    dend_8 { pt3dadd( 37.3683, 50.5167, 19.0518, 0.23 ) }
    dend_8 { pt3dadd( 43.4843, 56.1279, 24.3156, 0.23 ) }
    dend_8 { pt3dadd( 50.4175, 59.7952, 30.4008, 0.23 ) }
    dend_8 { pt3dadd( 57.4292, 64.1251, 35.8838, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 71/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 29.4376, 37.9188, 6.46964, 0.23 ) }
    dend_7 { pt3dadd( 35.2396, 45.0426, 3.29056, 0.23 ) }
    dend_7 { pt3dadd( 40.4293, 53.018, 1.6816, 0.23 ) }
    dend_7 { pt3dadd( 44.1818, 61.6029, -0.381244, 0.23 ) }
    dend_7 { pt3dadd( 49.238, 69.7148, -1.61564, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 11.811, -32.9098, 2.27837, 0.23 ) }
    dend_37 { pt3dadd( 10.023, -34.1432, 3.28642, 0.23 ) }
    dend_37 { pt3dadd( 9.76793, -34.4602, 3.46763, 0.23 ) }
    dend_37 { pt3dadd( 9.48822, -35.0184, 3.68179, 0.23 ) }
    dend_37 { pt3dadd( 9.24599, -35.6626, 3.87138, 0.23 ) }
    dend_37 { pt3dadd( 9.0625, -36.2136, 3.9691, 0.23 ) }
    dend_37 { pt3dadd( 8.4572, -37.9654, 4.09979, 0.23 ) }
    dend_37 { pt3dadd( 8.16987, -38.9703, 4.07666, 0.68 ) }
    dend_37 { pt3dadd( 7.75665, -40.5575, 4.02165, 1.36 ) }
    dend_37 { pt3dadd( 7.50108, -41.6323, 3.96826, 0.45 ) }
    dend_37 { pt3dadd( 7.09849, -43.3885, 3.84466, 0.45 ) }
    dend_37 { pt3dadd( 6.46633, -45.8913, 3.61103, 0.45 ) }
    dend_37 { pt3dadd( 5.88302, -47.7098, 3.36029, 0.45 ) }
    dend_37 { pt3dadd( 1.46643, -56.0304, 5.30523, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 11.811, -32.9098, 2.27837, 0.23 ) }
    dend_34 { pt3dadd( 12.1954, -34.0224, 2.79175, 0.23 ) }
    dend_34 { pt3dadd( 12.6693, -35.3938, 3.42456, 0.23 ) }
    dend_34 { pt3dadd( 12.8828, -36.0116, 3.70965, 0.23 ) }
    dend_34 { pt3dadd( 13.1967, -36.92, 4.12883, 0.23 ) }
    dend_34 { pt3dadd( 13.6515, -38.2359, 4.73603, 0.23 ) }
    dend_34 { pt3dadd( 14.1354, -39.6363, 5.38225, 0.23 ) }
    dend_34 { pt3dadd( 17.8744, -47.3546, 9.85581, 0.23 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 98/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 1.46643, -56.0304, 5.30523, 0.23 ) }
    dend_39 { pt3dadd( -2.47186, -64.4925, 7.57391, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_39 { pt3dadd( -7.24044, -72.5013, 10.062, 0.23 ) }
    dend_39 { pt3dadd( -11.2854, -80.9963, 11.9792, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 2/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.46643, -56.0304, 5.30523, 0.23 ) }
    dend_38 { pt3dadd( -2.33399, -64.8164, 5.45975, 0.23 ) }
    dend_38 { pt3dadd( -4.18947, -74.0783, 6.68725, 0.23 ) }
    dend_38 { pt3dadd( -4.9242, -83.2035, 9.36942, 0.23 ) }
    dend_38 { pt3dadd( -6.32727, -91.6214, 13.7871, 0.23 ) }
    dend_38 { pt3dadd( -5.89879, -100.664, 16.8219, 0.23 ) }
    dend_38 { pt3dadd( -4.61275, -109.646, 19.8145, 0.23 ) }
    dend_38 { pt3dadd( -5.26477, -119.049, 21.0775, 0.23 ) }
    dend_38 { pt3dadd( -3.85418, -128.068, 23.8878, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 11/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.8744, -47.3546, 9.85581, 0.23 ) }
    dend_36 { pt3dadd( 21.5407, -55.2732, 13.9885, 0.23 ) }
    dend_36 { pt3dadd( 25.3958, -63.2023, 17.9224, 0.23 ) }
    dend_36 { pt3dadd( 27.8689, -71.3035, 22.5228, 0.23 ) }
    dend_36 { pt3dadd( 29.8286, -80.2626, 25.2104, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 17.8744, -47.3546, 9.85581, 0.23 ) }
    dend_35 { pt3dadd( 20.8754, -55.4559, 14.1305, 0.23 ) }
    dend_35 { pt3dadd( 23.0873, -63.7306, 18.5167, 0.23 ) }
    dend_35 { pt3dadd( 24.6404, -71.374, 24.2486, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_27, dend_26, dend_23, dend_20, dend_19, dend_18, dend_17, dend_12, dend_11, dend_10, dend_3, dend_0, dend_41, dend_28, dend_25, dend_24, dend_22, dend_21, dend_16, dend_13, dend_5, dend_4, dend_2, dend_1, dend_43, dend_42, dend_32, dend_29, dend_15, dend_14, dend_9, dend_6, dend_45, dend_44, dend_40, dend_33, dend_31, dend_30, dend_8, dend_7, dend_37, dend_34, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_2 = new SectionList()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_27, dend_26, dend_23, dend_20, dend_19, dend_18, dend_17, dend_12, dend_11, dend_10, dend_3, dend_0, dend_41, dend_28, dend_25, dend_24, dend_22, dend_21, dend_16, dend_13, dend_5, dend_4, dend_2, dend_1, dend_43, dend_42, dend_32, dend_29, dend_15, dend_14, dend_9, dend_6, dend_45, dend_44, dend_40, dend_33, dend_31, dend_30, dend_8, dend_7, dend_37, dend_34, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_26 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_18 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_0 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_22 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_21 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_16 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_9 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_45 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_40 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_38 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_27 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_11 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_3 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_5 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_19 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_17 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_6 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_34 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_35 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_31 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_39 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 5
    dend_23 nseg = 3
    dend_20 nseg = 3
    dend_18 nseg = 5
    dend_0 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_16 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_43 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_9 nseg = 3
    dend_45 nseg = 3
    dend_40 nseg = 5
    dend_30 nseg = 5
    dend_8 nseg = 3
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_SBC_ef99b8a177_0_0


