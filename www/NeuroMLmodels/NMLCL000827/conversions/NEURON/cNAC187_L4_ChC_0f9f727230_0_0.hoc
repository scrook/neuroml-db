// Cell: cNAC187_L4_ChC_0f9f727230_0_0
/*
{
  "id" : "cNAC187_L4_ChC_0f9f727230_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -6.91316, -8.0337, 1.77", "-3.66144, -6.91316, -8.0337, 1.77", "-3.09245, -8.70554, -8.29973, 1.77", "-2.6591, -10.0398, -8.51165, 1.77", "-1.99677, -12.1312, -8.82439, 1.55", "-1.60775, -13.518, -9.07277, 1.69", "-1.34145, -14.5955, -9.2892, 1.77", "-1.10815, -15.6438, -9.55098, 1.77", "-0.811973, -17.0492, -9.99101, 1.25", "-0.331875, -19.205, -10.5842, 0.74", "-1.25475, -18.2657, -11.6005, 0.74", "-1.97443, -17.9336, -12.682, 0.74", "-3.23635, -17.4822, -14.6263, 1.18", "-3.91471, -17.3689, -15.7347, 1.18", "-4.93223, -17.1409, -17.267, 0.52", "-6.13631, -16.7261, -18.9131, 0.52", "-7.50501, -16.7862, -20.9936, 0.74", "-8.08179, -17.0882, -22.4088, 0.74", "-8.35696, -17.5537, -23.6438, 0.74", "-8.80105, -18.1535, -25.5077, 1.11", "-9.19748, -18.4666, -26.7008, 1.69", "-9.84629, -18.6821, -27.9054, 1.77", "-11.3244, -19.0968, -30.5675, 1.33", "-12.1111, -19.4679, -32.1903, 1.4", "-12.5745, -19.9622, -33.4091, 1.55", "-12.838, -20.7845, -34.6854, 1.33", "-12.8667, -22.2021, -36.3054, 0.74", "-12.6201, -23.3628, -37.2468, 1.03", "-12.2599, -24.3373, -37.8419, 1.47", "-11.8778, -24.9778, -38.2694, 1.62", "-11.2724, -25.7426, -38.8589, 1.62", "-10.5863, -26.3574, -39.4015, 0.52", "-9.7708, -26.9356, -40.0, 0.52", "-9.5679, -27.2378, -40.5145, 0.52", "-9.60915, -27.8563, -41.847, 0.66", "-9.87294, -28.4637, -43.2551, 0.74", "-10.3032, -28.7115, -44.2482, 0.44", "-11.0445, -28.7085, -45.299, 0.44", "-12.1371, -28.5809, -46.6352, 0.44", "-12.9139, -28.656, -47.824, 0.44", "-13.3458, -28.8039, -48.667, 0.44", "-14.1488, -29.298, -50.3053, 0.66", "-14.5408, -30.065, -51.9604, 1.11", "-14.7438, -30.3461, -52.5354, 0.96", "-15.274, -30.9388, -53.8532, 1.18", "-15.4803, -31.1925, -54.3684, 1.69", "-15.8157, -31.5829, -55.1151, 1.69", "-17.0936, -32.9651, -57.6138, 0.88", "-17.8741, -33.6226, -58.9185, 2.14", "-19.6445, -34.5114, -61.3294, 2.28", "-19.8932, -34.5756, -61.6054, 2.28", "-21.3294, -34.7017, -62.9451, 0.44", "-22.1493, -34.6392, -63.5477, 0.44", "-23.1178, -34.4515, -64.1032, 0.81", "-24.1115, -34.2113, -64.6966, 0.81", "-24.5644, -34.1522, -65.0212, 0.96", "-25.4643, -34.2291, -65.8123, 0.66", "-26.3692, -34.5214, -66.7414, 1.99", "-27.0469, -34.8712, -67.5253, 2.21", "-27.7087, -35.3323, -68.344, 2.5", "-29.5294, -36.9154, -70.771, 0.66", "-30.4733, -37.9482, -72.2043, 0.66", "-31.0563, -38.751, -73.189, 0.66", "-31.6567, -39.706, -74.2428, 1.55", "-31.9355, -40.1757, -74.7094, 2.21", "-32.2045, -40.6663, -75.1547, 2.21", "-32.9466, -42.2262, -76.4939, 0.29", "-33.3434, -43.2324, -77.4248, 0.29", "-33.603, -43.9271, -78.055, 1.55", "-33.9265, -44.7654, -78.7987, 1.99", "-34.2241, -45.5157, -79.48, 2.36", "-35.0607, -47.5566, -81.3901, 0.59", "-35.4767, -48.6028, -82.4354, 1.84", "-35.6403, -49.0883, -82.9798, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.62167, 2.1563, 1.92", "-6.50143, -1.62167, 2.1563, 1.92", "-7.02893, -2.50874, 2.11434, 1.92", "-7.92623, -4.26772, 2.02309, 1.92", "-8.85153, -5.87246, 1.93105, 2.14", "-9.56479, -6.95772, 1.85319, 2.36", "-10.5755, -8.27094, 1.74587, 2.28", "-11.6859, -9.4834, 1.62311, 2.36", "-12.9283, -10.6053, 1.46373, 2.36", "-14.8566, -11.8632, 1.23625, 1.77", "-15.9172, -12.2771, 1.15654, 1.77", "-17.5802, -12.6144, 1.11221, 1.99", "-19.0622, -12.753, 1.2063, 1.99", "-19.7954, -12.7781, 1.29683, 1.99", "-20.8884, -12.8285, 1.49184, 1.77", "-22.5802, -13.1086, 1.92952, 1.47", "-23.8013, -13.523, 2.275, 1.47", "-25.3404, -14.3672, 2.6639, 1.33", "-26.04, -14.8836, 2.79418, 1.99", "-27.2291, -15.9393, 2.92471, 1.99", "-28.5989, -17.3112, 2.9422, 1.77", "-30.1139, -18.9874, 2.80888, 1.92", "-31.515, -20.5805, 2.52303, 1.69", "-32.3765, -21.5054, 2.24598, 1.69", "-33.4559, -22.547, 1.83787, 1.84", "-34.4406, -23.4183, 1.46183, 1.84", "-35.7151, -24.5063, 0.994923, 1.69", "-37.1158, -25.7185, 0.55792, 1.55", "-38.5304, -27.0304, 0.227802, 1.4", "-39.6893, -28.1103, -0.00745461, 1.25", "-40.9019, -29.2914, -0.225903, 1.33", "-42.0503, -30.5192, -0.352973, 1.47", "-43.1254, -31.822, -0.301439, 1.62", "-43.8856, -33.0405, -0.0336802, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.29066, -4.9037, 3.61", "0.448551, -8.29066, -4.9037, 3.61", "0.63797, -9.56301, -4.84126, 2.95", "0.909455, -11.5375, -4.74731, 2.8", "1.06599, -12.8607, -4.65779, 2.8", "1.20234, -14.3403, -4.54499, 3.02", "1.26757, -15.3223, -4.46947, 3.02", "1.29487, -16.2856, -4.39143, 3.02", "1.26856, -17.7371, -4.27175, 3.02", "1.16186, -19.2726, -4.14013, 2.36", "0.875521, -21.9584, -3.99628, 2.36", "0.66881, -23.463, -3.98224, 2.43", "0.431011, -24.9193, -4.01809, 2.43", "0.120189, -26.6263, -4.11982, 2.43", "-0.363085, -28.9832, -4.32744, 2.28", "-0.883842, -31.4013, -4.59904, 2.14", "-1.61088, -34.6049, -5.02399, 2.06", "-2.11546, -36.8282, -5.35591, 2.43", "-2.43418, -38.2441, -5.59681, 2.58", "-2.77594, -39.7361, -5.88501, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.21333, -7.5337, 1.62", "-0.436911, 7.68924, -7.57179, 1.62", "-0.524684, 8.38939, -7.59393, 1.92", "-0.657053, 9.32468, -7.63223, 1.33", "-0.823993, 10.3314, -7.68864, 1.69", "-0.960919, 11.0763, -7.71735, 2.21", "-1.07829, 11.699, -7.71241, 2.21", "-1.2196, 12.3999, -7.67812, 1.99", "-1.35222, 12.996, -7.62606, 1.77", "-1.50969, 13.6591, -7.54952, 1.99", "-1.68048, 14.3609, -7.46542, 1.99", "-1.97242, 15.5938, -7.3428, 1.11", "-2.15263, 16.3646, -7.2902, 1.11", "-2.34574, 17.1401, -7.26932, 1.25", "-2.52985, 17.7913, -7.26573, 1.4", "-2.77085, 18.503, -7.30736, 0.81", "-3.05467, 19.1772, -7.41377, 0.74", "-3.28022, 19.618, -7.52706, 0.74", "-3.55826, 20.0961, -7.6803, 0.74", "-3.88136, 20.6169, -7.87515, 0.96", "-4.18598, 21.1071, -8.07194, 0.96", "-4.5038, 21.5993, -8.27434, 1.55", "-4.86278, 22.1512, -8.50948, 2.06", "-5.1665, 22.6536, -8.72878, 2.43", "-5.51482, 23.3303, -9.02648, 2.36", "-5.90919, 24.252, -9.42158, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 7.89733, 0.346303, 2.5", "-2.37362, 8.00674, 0.346896, 2.5", "-3.2009, 9.53951, 0.314927, 1.77", "-3.77833, 10.5754, 0.320837, 1.55", "-4.45558, 11.7543, 0.375989, 1.55", "-4.97161, 12.6539, 0.452926, 1.33", "-5.75897, 14.0492, 0.616639, 1.33", "-6.25134, 14.9016, 0.742604, 1.55", "-6.99422, 16.1644, 0.956682, 1.55", "-7.76574, 17.5378, 1.19414, 1.62", "-8.38171, 18.7617, 1.39357, 1.4", "-8.95601, 20.1088, 1.58834, 1.4", "-9.28271, 20.9364, 1.70932, 1.4", "-9.79072, 22.2671, 1.89321, 1.4", "-10.273, 23.5966, 2.02156, 1.4", "-10.8153, 25.2398, 2.10859, 1.77", "-11.2718, 26.714, 2.12486, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 3.96433, 1.3463, 2.58", "6.87949, 4.01155, 1.35093, 2.58", "7.52161, 4.62182, 1.41798, 2.58", "8.25017, 5.32146, 1.51659, 1.84", "8.78951, 5.82906, 1.60409, 2.06", "9.48587, 6.48262, 1.73492, 2.06", "9.94605, 6.90447, 1.85113, 2.58", "10.4567, 7.36954, 2.00962, 2.58", "10.7944, 7.68205, 2.13767, 2.58", "11.3936, 8.21172, 2.39366, 2.58", "11.8151, 8.5579, 2.58375, 2.43", "12.6982, 9.24101, 3.01638, 2.21", "13.3423, 9.71052, 3.34504, 1.99", "13.8593, 10.0653, 3.59283, 1.99", "14.5297, 10.4578, 3.88241, 1.69", "15.0901, 10.6823, 4.09497, 1.69", "16.0825, 10.8115, 4.42117, 2.06", "16.7054, 10.7081, 4.59078, 2.06", "18.1771, 10.0988, 4.98455, 1.69", "19.1894, 9.5713, 5.24037, 1.92", "20.7719, 8.54943, 5.61206, 1.92", "22.2789, 7.37336, 5.93334, 2.06", "23.0515, 6.64054, 6.0787, 2.28", "23.6309, 5.97288, 6.19553, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.835316", "4.36343, 23.5449, 1.13455, 0.835316", "6.95552, 38.3192, 1.13455, 0.835316" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-35.6403, -49.0883, -82.9798, 0.96", "-34.378, -51.1886, -88.8518, 0.96", "-34.1354, -51.6821, -89.9595, 0.96", "-33.8241, -52.3694, -91.2795, 0.96", "-33.3908, -53.3479, -92.9852, 1.55", "-33.0462, -54.1872, -94.2916, 0.22", "-32.6703, -55.1829, -95.5972, 0.22", "-32.4685, -55.8594, -96.1422, 1.11", "-32.2895, -56.503, -96.59, 1.4", "-32.0022, -57.3765, -97.1166, 1.4", "-31.2983, -59.2577, -98.1213, 0.22", "-30.449, -61.1697, -99.0985, 0.22", "-30.133, -61.7924, -99.4113, 0.74", "-29.9523, -62.1249, -99.5674, 0.74", "-28.9569, -63.8979, -100.339, 0.15", "-28.7943, -64.1727, -100.446, 0.37", "-27.8044, -65.6574, -100.981, 0.22", "-27.2077, -66.473, -101.31, 0.22", "-26.7329, -67.1241, -101.57, 0.74", "-26.287, -67.7948, -101.811, 0.88", "-26.1714, -68.0298, -101.88, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-35.6403, -49.0883, -82.9798, 2.87", "-36.7023, -49.5721, -83.0706, 2.87", "-40.0306, -51.367, -83.5282, 0.22", "-42.9953, -53.38, -84.0551, 0.22", "-44.4169, -54.4367, -84.3242, 1.69", "-44.8611, -54.7878, -84.4111, 2.21", "-45.5804, -55.3802, -84.5539, 2.21", "-48.1842, -57.822, -85.0809, 0.22", "-50.4241, -60.3529, -85.6428, 0.22", "-51.1108, -61.198, -85.8379, 1.25", "-51.6708, -61.895, -85.9994, 1.25", "-52.4167, -62.81, -86.225, 1.25", "-53.9534, -64.5687, -86.6743, 0.15", "-54.8297, -65.5299, -86.9166, 0.15", "-55.5312, -66.2161, -87.1112, 0.96", "-56.3404, -66.9281, -87.3559, 1.18", "-56.7175, -67.2185, -87.4709, 1.18", "-59.1983, -68.8606, -88.3431, 0.22", "-59.8753, -69.1991, -88.5992, 0.52", "-60.4966, -69.4714, -88.836, 0.52", "-62.1014, -70.1224, -89.4306, 0.22", "-63.1002, -70.5156, -89.8102, 1.25", "-64.5578, -71.1469, -90.3514, 1.4", "-67.3407, -72.6143, -91.4977, 0.22", "-69.2073, -73.855, -92.3146, 0.22", "-69.8992, -74.434, -92.6424, 0.74", "-70.759, -75.357, -93.0845, 0.88", "-71.896, -77.1509, -93.975, 0.22", "-72.689, -79.4005, -94.9467, 0.22", "-72.9294, -80.8432, -95.5247, 1.99", "-72.9825, -81.7191, -95.8382, 2.36", "-72.998, -82.5746, -96.1465, 2.36", "-72.8651, -87.3486, -97.8764, 0.15", "-72.6454, -90.2914, -99.0196, 0.15", "-72.5635, -91.0564, -99.2876, 0.44", "-72.3552, -92.5258, -99.7691, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-43.8856, -33.0405, -0.0336802, 0.96", "-44.8905, -33.3587, -0.360402, 0.96", "-45.848, -33.6921, -0.680909, 1.25", "-47.2272, -34.1727, -1.13681, 1.25", "-49.6256, -34.9435, -1.85907, 1.18", "-51.2541, -35.4062, -2.29152, 1.11", "-52.5075, -35.736, -2.60918, 0.88", "-54.16, -36.1772, -3.05331, 0.96", "-55.1066, -36.4289, -3.31569, 0.96", "-56.4967, -36.8072, -3.71024, 0.96", "-57.8614, -37.1928, -4.02449, 0.96", "-59.0171, -37.516, -4.22477, 1.18", "-60.4338, -37.8992, -4.4081, 1.03", "-61.1298, -38.0752, -4.42632, 1.03", "-62.5737, -38.408, -4.29974, 1.18", "-63.4411, -38.5846, -4.08888, 1.18", "-65.3656, -38.9024, -3.21386, 0.96", "-66.0663, -38.9833, -2.81689, 1.11", "-67.4247, -39.1193, -1.96689, 1.11", "-68.5126, -39.258, -1.27458, 1.11", "-69.7924, -39.4713, -0.465159, 1.11", "-71.503, -39.8992, 0.581109, 1.55", "-72.7317, -40.34, 1.26438, 1.03", "-74.2035, -41.0494, 2.04063, 0.88", "-75.4624, -41.8328, 2.64063, 0.74", "-76.1852, -42.4023, 2.94763, 0.74", "-77.1237, -43.3134, 3.24869, 0.74", "-78.0618, -44.4008, 3.43433, 0.66", "-78.9039, -45.5181, 3.54106, 0.88", "-79.4562, -46.3286, 3.56401, 1.03", "-80.0333, -47.2799, 3.55294, 1.03", "-80.7722, -48.5036, 3.51753, 0.88", "-81.696, -49.9396, 3.46026, 0.88", "-82.2208, -50.6581, 3.42406, 0.88", "-83.0012, -51.541, 3.3908, 0.88", "-84.5246, -52.956, 3.366, 0.88", "-85.4175, -53.5974, 3.3726, 0.88", "-86.6992, -54.2714, 3.41034, 0.88", "-87.5641, -54.581, 3.44635, 0.96", "-88.5857, -54.8483, 3.46911, 0.96", "-89.5146, -55.0218, 3.49995, 0.96", "-90.5543, -55.1855, 3.54719, 0.52", "-91.2625, -55.4151, 3.58255, 0.52", "-91.7907, -55.8304, 3.63535, 0.52", "-92.2924, -56.616, 3.77868, 0.81", "-92.668, -57.4523, 3.96828, 0.96", "-92.9288, -58.4199, 4.19003, 0.96", "-93.1949, -60.1545, 4.58127, 0.81", "-93.2712, -61.0042, 4.77797, 0.81", "-93.3182, -62.085, 5.07066, 1.11", "-93.3806, -62.7017, 5.28784, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-43.8856, -33.0405, -0.0336802, 1.33", "-44.4705, -33.037, 0.264118, 1.33", "-45.0245, -33.067, 0.507933, 1.18", "-46.0567, -33.116, 0.931311, 0.88", "-46.549, -33.1307, 1.10618, 0.74", "-47.2594, -33.1396, 1.31049, 0.74", "-47.9794, -33.1146, 1.50237, 0.74", "-48.5178, -33.0904, 1.62571, 0.59", "-49.1484, -33.0355, 1.7559, 0.59", "-49.644, -32.9653, 1.85056, 0.52", "-50.1502, -32.8348, 1.9617, 0.52", "-51.1158, -32.4653, 2.19959, 0.74", "-51.7353, -32.1728, 2.37117, 0.59", "-52.3095, -31.8919, 2.54071, 0.44", "-52.9338, -31.6119, 2.74739, 0.37", "-53.4371, -31.4285, 2.93311, 0.66", "-53.8783, -31.3387, 3.07351, 0.66", "-54.1552, -31.3353, 3.12838, 0.66", "-54.5179, -31.356, 3.19028, 0.44", "-54.9354, -31.4106, 3.2538, 0.44", "-55.6762, -31.5174, 3.35239, 0.44", "-56.7006, -31.6841, 3.49868, 0.74", "-57.3081, -31.8023, 3.59007, 0.74", "-58.1444, -31.9622, 3.70451, 0.52", "-58.924, -32.1055, 3.80044, 0.59", "-59.5905, -32.2283, 3.87147, 0.44", "-60.5182, -32.4315, 3.98158, 0.37", "-61.1888, -32.6279, 4.08216, 0.37", "-61.9184, -32.9348, 4.20778, 0.29", "-62.2654, -33.1449, 4.28169, 0.29", "-62.6845, -33.4593, 4.42352, 0.29", "-63.0498, -33.7529, 4.58089, 0.37", "-63.4718, -34.0862, 4.79583, 0.37", "-63.9067, -34.395, 5.03682, 0.37", "-64.3841, -34.7528, 5.34073, 0.66", "-64.8628, -35.0942, 5.65168, 0.81", "-65.2313, -35.3222, 5.88097, 0.81", "-65.7633, -35.5832, 6.16943, 0.22", "-66.4119, -35.8361, 6.48616, 0.22", "-72.4371, -35.9217, 7.80603, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.77594, -39.7361, -5.88501, 1.55", "-2.36524, -40.9083, -5.84733, 1.55", "-1.95683, -42.1023, -5.80685, 1.55", "-1.61119, -43.1516, -5.7755, 1.55", "-1.23218, -44.3423, -5.73395, 1.69", "-0.961208, -45.2562, -5.69684, 1.69", "-0.781617, -45.94, -5.66846, 1.69", "-0.539285, -47.0756, -5.6195, 1.55", "-0.281517, -48.5624, -5.55843, 1.47", "-0.137396, -49.8023, -5.49604, 1.33", "-0.0825201, -50.992, -5.42563, 1.33", "-0.125488, -52.5735, -5.32492, 1.33", "-0.252173, -53.7345, -5.23513, 1.11", "-0.399578, -54.4666, -5.16736, 1.11", "-0.844529, -56.0633, -4.99918, 1.25", "-1.20574, -57.1244, -4.88018, 1.25", "-1.57208, -58.0797, -4.76996, 1.25", "-2.1166, -59.4069, -4.62704, 1.4", "-2.67387, -60.7161, -4.50161, 1.4", "-3.11323, -61.7785, -4.42548, 1.55", "-3.39251, -62.5612, -4.40527, 1.55", "-3.72743, -63.7203, -4.41559, 1.33", "-4.05138, -65.1692, -4.48886, 0.96", "-4.14372, -65.7438, -4.54506, 0.81", "-4.21587, -66.3906, -4.61469, 0.81", "-4.32343, -67.8855, -4.76876, 0.96", "-4.36031, -68.9209, -4.85973, 1.33", "-4.38174, -70.0635, -4.93891, 1.69", "-4.40264, -70.756, -4.96955, 1.84", "-4.44389, -71.5411, -4.98045, 1.99", "-4.53907, -72.47, -4.96051, 2.06", "-4.63516, -73.2642, -4.92221, 2.06", "-4.73293, -74.0724, -4.84991, 1.84", "-4.82576, -74.9348, -4.73221, 1.62", "-4.91628, -75.971, -4.55445, 1.18", "-4.96652, -76.8008, -4.40082, 0.88", "-5.02158, -77.935, -4.17156, 0.88", "-5.05265, -78.7153, -3.98491, 1.03", "-5.08671, -79.5181, -3.76757, 1.11", "-5.12549, -80.0896, -3.60475, 1.11", "-5.29672, -81.5155, -3.19618, 1.03", "-5.4557, -82.446, -2.9306, 1.18", "-5.60508, -83.2055, -2.72688, 1.25", "-5.84911, -84.3612, -2.44767, 1.18", "-6.09023, -85.4093, -2.22779, 1.03", "-6.36002, -86.4554, -2.04146, 0.96", "-6.68427, -87.5881, -1.88304, 0.88", "-6.92807, -88.3446, -1.81709, 0.88", "-7.35705, -89.4835, -1.81988, 1.25", "-7.83682, -90.6194, -1.90389, 1.55", "-8.21183, -91.4881, -2.00863, 1.62", "-8.49289, -92.1837, -2.10864, 1.62", "-8.82254, -93.0946, -2.2453, 1.4", "-9.23285, -94.3849, -2.42088, 1.11", "-9.57291, -95.7153, -2.57331, 1.11", "-9.86119, -97.1849, -2.68321, 1.11", "-10.1108, -98.7526, -2.76163, 1.11", "-10.2717, -99.8996, -2.79485, 1.4", "-10.421, -101.088, -2.81048, 1.4", "-10.6385, -102.941, -2.80572, 1.25", "-10.8613, -104.839, -2.80683, 1.25", "-11.0192, -106.088, -2.81019, 1.62", "-11.1746, -107.181, -2.82503, 1.77", "-11.384, -108.644, -2.86931, 1.33", "-11.567, -109.97, -2.91848, 0.88", "-11.7381, -111.447, -2.99024, 1.25", "-11.8085, -112.18, -3.03648, 1.84", "-11.8635, -112.999, -3.10156, 2.28", "-11.8971, -113.849, -3.18773, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.77594, -39.7361, -5.88501, 2.14", "-2.69598, -40.3208, -6.12381, 2.14", "-2.52254, -41.2455, -6.47147, 2.14", "-2.22595, -42.8267, -7.06595, 1.69", "-1.97744, -44.1517, -7.56408, 1.84", "-1.73601, -45.4388, -8.048, 1.99", "-1.54071, -46.48, -8.43947, 2.36", "-1.3678, -47.2438, -8.70248, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.90919, 24.252, -9.42158, 1.25", "-5.56947, 25.2517, -9.62712, 1.25", "-5.28324, 25.9237, -9.74837, 1.03", "-4.90257, 26.7229, -9.87605, 0.81", "-4.47679, 27.618, -10.0022, 0.81", "-4.10455, 28.5114, -10.1156, 1.11", "-3.87167, 29.1598, -10.1898, 1.11", "-3.62545, 29.9187, -10.2374, 0.96", "-3.33888, 30.9347, -10.2715, 0.66", "-3.16711, 31.6379, -10.2917, 0.52", "-2.96975, 32.5611, -10.3095, 0.52", "-2.84807, 33.2472, -10.3208, 0.52", "-2.58366, 34.7153, -10.3691, 1.18", "-2.4427, 35.4667, -10.4021, 1.62", "-2.33244, 36.0058, -10.4317, 1.69", "-2.11806, 36.899, -10.5069, 1.33", "-1.97994, 37.3412, -10.5611, 0.74", "-1.723, 38.0196, -10.6703, 0.59", "-1.28112, 39.093, -10.9054, 0.66", "-1.05175, 39.6735, -11.0489, 0.44", "-0.904796, 40.1075, -11.1579, 0.44", "-0.674587, 40.9034, -11.3619, 0.37", "-0.47791, 41.5733, -11.5272, 0.37", "-0.314083, 42.0603, -11.6319, 0.37", "0.00864459, 42.8271, -11.8098, 0.37", "0.324241, 43.5105, -11.9812, 0.44", "0.60281, 44.176, -12.1744, 0.44", "0.979172, 45.2533, -12.5272, 0.81", "1.2167, 46.0148, -12.7884, 1.03", "1.44115, 46.7029, -13.035, 1.03", "1.64749, 47.3292, -13.2849, 0.81", "1.93031, 48.2439, -13.6931, 0.29", "2.05229, 48.6989, -13.9082, 0.29", "2.28907, 49.7993, -14.4249, 1.77", "2.36067, 50.1657, -14.593, 2.36", "2.46524, 50.6732, -14.8045, 2.36", "2.68494, 51.6389, -15.1763, 2.28", "2.98384, 52.7975, -15.5759, 0.66", "3.15453, 53.4313, -15.7941, 0.88", "3.33038, 54.0912, -16.0247, 0.88", "3.52759, 54.8316, -16.2654, 0.37", "3.66163, 55.3316, -16.4201, 0.37", "3.92916, 56.3738, -16.7195, 0.37", "4.11951, 57.1596, -16.9338, 1.11", "4.25865, 57.7874, -17.098, 1.47", "4.34443, 58.2363, -17.2078, 1.69", "4.46164, 58.9949, -17.3785, 1.33", "4.56027, 59.8282, -17.5461, 0.44", "4.59891, 60.7139, -17.7022, 0.29", "4.60136, 61.4091, -17.8216, 0.52", "4.58827, 61.9286, -17.9095, 0.52", "4.54737, 62.801, -18.0785, 0.29", "4.5198, 63.6992, -18.2566, 0.29", "4.50696, 65.2834, -18.5964, 1.18", "4.51151, 65.8791, -18.7239, 1.62", "4.5157, 66.5134, -18.8482, 1.84", "4.52289, 67.3143, -18.99, 1.33", "4.53745, 69.5991, -19.3742, 0.22", "4.55317, 71.0617, -19.6049, 0.22", "4.56591, 72.3834, -19.7921, 0.22", "4.55899, 73.7799, -19.963, 0.74", "4.54684, 74.5409, -20.0492, 1.03", "4.53429, 74.8997, -20.0855, 1.03", "4.44089, 76.0434, -20.2295, 0.15", "4.3965, 76.4823, -20.3066, 0.15", "4.34257, 76.9851, -20.4317, 0.44", "4.2934, 77.464, -20.5738, 0.66", "4.24904, 77.9053, -20.7061, 0.66", "4.16122, 79.1781, -21.0787, 1.55", "4.12505, 80.1143, -21.3388, 2.58", "4.11823, 80.9296, -21.562, 2.58", "4.18814, 82.7402, -22.0166, 0.29", "4.30757, 83.9502, -22.2592, 0.29", "4.57193, 85.6852, -22.5124, 0.29", "4.80131, 86.7748, -22.6119, 0.96", "4.94369, 87.3341, -22.6335, 0.96", "5.49601, 89.1559, -22.6155, 0.22", "6.153, 91.0954, -22.5075, 0.22", "6.59469, 92.3131, -22.3974, 1.77", "6.77747, 92.7892, -22.3392, 2.36", "7.00505, 93.3709, -22.2626, 2.5", "7.7396, 95.2498, -22.0012, 0.15", "8.10566, 96.1954, -21.8766, 0.29", "8.34647, 96.8286, -21.8061, 0.29", "8.65113, 97.6385, -21.7589, 0.15", "8.95018, 98.4683, -21.7635, 1.18", "9.13731, 98.9835, -21.7938, 1.55", "9.34593, 99.5556, -21.8503, 1.18", "9.49868, 99.9688, -21.9036, 0.74", "9.93288, 101.25, -22.0806, 0.22", "10.2464, 102.249, -22.2233, 0.22", "10.7421, 103.998, -22.4389, 0.22", "10.9869, 104.938, -22.5357, 0.81", "11.0763, 105.315, -22.567, 0.81", "11.5771, 107.673, -22.6913, 0.22", "11.7911, 108.858, -22.6884, 0.22", "11.9455, 109.928, -22.6756, 1.25", "11.9657, 110.212, -22.6721, 1.69", "11.972, 110.532, -22.6675, 1.69", "11.9606, 111.214, -22.6538, 1.33", "11.9237, 111.811, -22.6509, 0.59", "11.8254, 113.052, -22.679, 0.22", "11.7072, 114.822, -22.7753, 0.22", "11.636, 115.912, -22.8479, 1.03", "11.6047, 116.371, -22.8815, 1.03", "11.5875, 116.852, -22.9158, 1.03", "11.5895, 117.565, -22.9587, 0.52", "11.6564, 119.163, -23.0184, 0.22", "11.7503, 119.933, -23.0422, 0.59", "11.8415, 120.427, -23.0527, 0.59", "12.3468, 122.599, -23.0745, 0.22", "12.5409, 123.273, -23.0714, 0.66", "12.7129, 123.755, -23.0662, 0.66", "13.1564, 124.874, -23.0611, 0.15", "13.4147, 125.496, -23.0671, 0.81", "13.5918, 125.925, -23.0791, 0.81", "13.8451, 126.556, -23.1138, 0.81", "14.2919, 127.762, -23.2032, 0.22", "14.7263, 128.986, -23.327, 1.33", "14.8997, 129.5, -23.3895, 1.55", "15.0023, 129.8, -23.4277, 1.55", "15.1116, 130.118, -23.4733, 1.03", "15.6351, 131.567, -23.7032, 0.22", "16.1379, 132.857, -23.9245, 0.22", "16.4277, 133.535, -24.0568, 0.22", "16.7679, 134.336, -24.2157, 1.25", "16.9736, 134.853, -24.3229, 1.77", "17.1438, 135.322, -24.4254, 1.77", "17.2782, 135.717, -24.5215, 1.18", "17.4774, 136.343, -24.6824, 0.66", "18.0824, 138.25, -25.2177, 0.22", "18.4944, 139.524, -25.6152, 0.22", "18.7834, 140.393, -25.8845, 1.11", "18.9891, 140.952, -26.0508, 1.4", "19.1938, 141.448, -26.1957, 1.4", "19.462, 142.024, -26.3796, 0.96", "20.2937, 143.654, -26.9444, 0.22", "21.2304, 145.348, -27.5342, 0.22", "21.9787, 146.647, -27.9753, 1.77", "22.2479, 147.105, -28.1231, 2.65", "22.679, 147.821, -28.3401, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.90919, 24.252, -9.42158, 0.66", "-7.98296, 25.2584, -9.4949, 0.66", "-8.80999, 25.6233, -9.52029, 0.66", "-9.77976, 26.0158, -9.5409, 0.66", "-10.8887, 26.4187, -9.5653, 1.11", "-11.5778, 26.6381, -9.58436, 1.33", "-12.6171, 26.9569, -9.61593, 1.33", "-13.7462, 27.2695, -9.64745, 0.96", "-14.5222, 27.4904, -9.64382, 0.88", "-15.4459, 27.7553, -9.60968, 0.88", "-16.5378, 28.0674, -9.51491, 0.37", "-17.0979, 28.2232, -9.4407, 0.37", "-18.0507, 28.4883, -9.27832, 0.81", "-18.8717, 28.7271, -9.11451, 0.88", "-19.6305, 28.9545, -8.95146, 0.81", "-20.4299, 29.1998, -8.76695, 0.29", "-20.9409, 29.3494, -8.65541, 0.29", "-21.8352, 29.5533, -8.50048, 0.74", "-22.5052, 29.6855, -8.41363, 0.74", "-22.8882, 29.7769, -8.35973, 0.74", "-23.3269, 29.9163, -8.26607, 0.74", "-23.8611, 30.1114, -8.11902, 0.59", "-24.3777, 30.295, -7.94076, 0.59", "-24.827, 30.4414, -7.74468, 0.37", "-26.0421, 30.7696, -7.18469, 0.37", "-26.8996, 30.9465, -6.77966, 0.37", "-27.3589, 31.0153, -6.5615, 0.22", "-28.1352, 31.0922, -6.20208, 0.22", "-28.5576, 31.1082, -6.02923, 0.22", "-29.809, 31.1264, -5.58217, 1.03", "-30.4335, 31.1475, -5.39884, 1.4", "-30.8076, 31.1795, -5.29726, 1.4", "-31.7169, 31.3119, -5.0674, 0.81", "-32.8833, 31.5305, -4.81143, 0.22", "-33.5146, 31.6572, -4.68543, 0.22", "-34.7917, 31.9301, -4.46165, 1.11", "-35.4457, 32.0773, -4.36374, 1.4", "-35.9114, 32.1833, -4.30328, 1.4", "-37.0007, 32.4284, -4.18418, 0.66", "-38.0266, 32.6469, -4.08357, 0.52", "-39.271, 32.877, -3.97618, 0.74", "-40.0803, 33.0208, -3.91607, 0.88", "-41.2294, 33.2377, -3.84107, 0.66", "-42.0453, 33.4, -3.79381, 0.66", "-42.7146, 33.5406, -3.7625, 0.66", "-43.9729, 33.8279, -3.70007, 0.29", "-44.9779, 34.0772, -3.62448, 1.03", "-45.8287, 34.3011, -3.53237, 1.25", "-46.0969, 34.3843, -3.4821, 1.25", "-46.7801, 34.6402, -3.30479, 0.81", "-47.5929, 34.9803, -3.03586, 0.29", "-48.1129, 35.2182, -2.82171, 0.52", "-48.457, 35.3909, -2.66801, 0.66", "-49.7096, 36.0491, -2.11284, 0.22", "-50.4203, 36.4297, -1.81867, 0.22", "-51.0062, 36.7422, -1.60501, 0.22", "-51.7999, 37.1672, -1.37921, 0.22", "-52.8747, 37.7451, -1.12743, 0.59", "-53.4928, 38.0814, -1.01235, 0.81", "-54.0717, 38.4145, -0.954058, 0.81", "-54.9605, 38.9664, -0.90626, 0.52", "-56.1575, 39.7616, -0.890981, 1.03", "-56.875, 40.257, -0.90547, 1.18", "-57.4076, 40.6412, -0.931905, 1.25", "-58.5941, 41.534, -1.01851, 0.29", "-59.6674, 42.3651, -1.11777, 0.74", "-60.0707, 42.6816, -1.16254, 0.96", "-60.425, 42.9569, -1.21134, 0.96", "-61.608, 43.8432, -1.39438, 0.22", "-62.079, 44.1766, -1.46918, 0.22", "-62.7258, 44.6034, -1.56307, 0.66", "-63.1681, 44.8822, -1.63637, 0.88", "-63.6936, 45.1978, -1.72205, 0.44", "-64.3791, 45.6002, -1.82675, 0.37", "-64.7926, 45.838, -1.88003, 0.44", "-65.3428, 46.1666, -1.94993, 0.44", "-65.7386, 46.4061, -2.00059, 0.44", "-66.5, 46.8769, -2.08985, 0.22", "-66.9955, 47.1944, -2.13292, 0.22", "-67.5803, 47.6022, -2.17182, 0.29", "-67.9212, 47.8577, -2.18199, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-11.2718, 26.714, 2.12486, 1.47", "-11.0008, 27.216, 2.14031, 1.47", "-10.7549, 27.7638, 2.15811, 0.81", "-10.6012, 28.1652, 2.17265, 0.81", "-10.4373, 28.7277, 2.1937, 0.81", "-10.268, 29.4128, 2.22079, 0.81", "-10.1093, 30.1694, 2.25237, 0.81", "-10.0036, 30.9254, 2.28156, 1.03", "-9.9349, 31.6059, 2.30862, 1.03", "-9.84916, 32.648, 2.34662, 1.18", "-9.79989, 33.2935, 2.37331, 1.18", "-9.77016, 34.4165, 2.4121, 1.18", "-9.77798, 35.2159, 2.43493, 1.4", "-9.77756, 35.7824, 2.44976, 1.4", "-9.78093, 36.1858, 2.45791, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-11.2718, 26.714, 2.12486, 0.96", "-13.4347, 28.1327, 0.556193, 0.96", "-14.2193, 28.6636, 0.0204973, 0.96", "-15.3074, 29.4116, -0.718835, 0.96", "-16.4339, 30.2147, -1.49747, 0.81", "-17.4041, 30.9277, -2.16211, 0.81", "-18.749, 31.9313, -3.05772, 1.03", "-19.6585, 32.6601, -3.65323, 1.03", "-20.4996, 33.4417, -4.18752, 1.03", "-21.5399, 34.5458, -4.82859, 0.81", "-22.3007, 35.3864, -5.28998, 0.81", "-23.1406, 36.3356, -5.77782, 0.81", "-24.126, 37.5177, -6.3421, 0.52", "-25.0334, 38.7089, -6.83088, 0.52", "-25.5505, 39.4309, -7.07302, 0.52", "-26.2981, 40.5344, -7.38124, 0.52", "-27.2292, 41.955, -7.74157, 0.52", "-27.721, 42.7302, -7.91426, 0.52", "-28.226, 43.5318, -8.06253, 0.52", "-28.826, 44.4857, -8.20696, 0.66", "-29.3855, 45.4288, -8.31156, 0.88", "-29.9298, 46.4373, -8.38481, 0.88", "-30.5318, 47.6224, -8.45632, 0.59", "-31.1383, 48.8008, -8.54565, 0.88", "-31.5732, 49.6502, -8.62096, 0.88", "-31.9241, 50.408, -8.68253, 0.96", "-32.2285, 51.1026, -8.74665, 0.96", "-32.5014, 51.7114, -8.81944, 0.96", "-32.9916, 52.7098, -8.98149, 0.74", "-33.7713, 54.1833, -9.27923, 1.25", "-34.3137, 55.1658, -9.50257, 1.25", "-34.9324, 56.2627, -9.76214, 0.29", "-35.3463, 56.9919, -9.92683, 0.29", "-35.7685, 57.7301, -10.0787, 0.66", "-36.1548, 58.3959, -10.1965, 0.81", "-36.4825, 58.9584, -10.2747, 0.81", "-37.0351, 59.9534, -10.3534, 0.37", "-37.5405, 61.0566, -10.4299, 0.37", "-37.8218, 61.7804, -10.4883, 1.03", "-38.0538, 62.4232, -10.5545, 1.25", "-38.35, 63.2126, -10.6658, 1.25", "-38.6071, 63.8417, -10.7872, 0.81", "-39.1686, 65.0934, -11.0806, 0.59", "-39.5081, 65.808, -11.2644, 0.44", "-39.9916, 66.8126, -11.4894, 0.88", "-40.3711, 67.5842, -11.6335, 0.88", "-41.0416, 68.9268, -11.8067, 0.59", "-41.478, 69.8192, -11.8939, 0.59", "-42.1633, 71.2611, -11.9755, 0.44", "-42.9099, 72.9208, -12.0342, 1.03", "-43.5103, 74.3289, -12.0362, 1.55", "-43.8524, 75.1996, -11.9954, 1.62", "-44.3168, 76.4711, -11.8892, 1.11", "-44.7937, 77.8644, -11.7373, 0.59", "-45.1105, 78.8244, -11.6009, 0.59", "-45.6212, 80.4244, -11.3295, 0.59", "-46.1369, 82.0157, -11.0335, 0.52", "-46.4888, 83.0539, -10.8184, 0.52", "-46.9555, 84.3417, -10.5059, 0.52", "-47.4619, 85.6842, -10.1745, 0.52", "-48.0472, 87.1555, -9.83465, 0.37", "-48.9163, 89.1149, -9.44026, 1.55", "-49.2432, 89.7621, -9.33744, 1.92", "-49.5793, 90.3523, -9.2726, 1.92", "-49.8941, 90.8576, -9.24945, 1.92", "-50.5663, 91.8186, -9.27622, 0.88", "-51.4667, 93.0402, -9.37317, 0.44", "-52.1451, 93.946, -9.46895, 0.44", "-52.8677, 94.9291, -9.59104, 0.44", "-53.8687, 96.3295, -9.76144, 0.37", "-54.4007, 97.0917, -9.851, 0.37", "-55.494, 98.7259, -10.0236, 0.74", "-55.9307, 99.397, -10.0808, 0.74", "-56.4697, 100.259, -10.1424, 0.52", "-57.1762, 101.453, -10.2362, 1.25", "-57.6563, 102.294, -10.3318, 1.47", "-57.9705, 102.867, -10.4133, 1.47", "-58.3929, 103.582, -10.5804, 0.81", "-58.9609, 104.48, -10.8561, 0.59", "-59.5205, 105.315, -11.1901, 0.88", "-59.9876, 105.99, -11.5022, 1.18", "-60.2764, 106.406, -11.7073, 1.18", "-60.993, 107.459, -12.1779, 0.96", "-61.7701, 108.649, -12.6123, 0.52", "-62.2371, 109.384, -12.7852, 0.37", "-62.9369, 110.515, -12.9091, 0.37", "-63.6241, 111.683, -12.921, 0.37", "-64.2674, 112.846, -12.8427, 0.37", "-64.7214, 113.742, -12.7092, 0.81", "-65.3792, 115.177, -12.4282, 1.84", "-65.641, 115.757, -12.3119, 1.92", "-65.8364, 116.177, -12.2427, 1.92", "-66.1826, 116.96, -12.1375, 1.62", "-66.6389, 118.076, -12.0495, 0.88", "-67.0871, 119.282, -11.9854, 0.29", "-67.7608, 121.165, -11.9207, 0.29", "-68.2733, 122.52, -11.8869, 0.29", "-68.616, 123.31, -11.874, 0.29", "-68.8018, 123.677, -11.8737, 0.29", "-69.2887, 124.484, -11.8947, 0.66", "-69.9181, 125.37, -11.9458, 0.81", "-70.3786, 125.956, -11.9942, 0.81", "-71.2602, 127.062, -12.0947, 0.37", "-71.9554, 127.912, -12.1796, 0.37", "-72.6131, 128.726, -12.2584, 0.81", "-73.0776, 129.305, -12.3085, 0.81", "-73.7382, 130.137, -12.3669, 0.37", "-74.3961, 130.911, -12.4298, 0.37", "-75.0727, 131.634, -12.5011, 0.88", "-75.907, 132.482, -12.5934, 1.47", "-76.5337, 133.117, -12.6675, 1.69", "-77.0395, 133.636, -12.7328, 1.69", "-78.4144, 135.029, -12.9264, 0.37", "-78.885, 135.515, -12.9938, 0.37", "-79.7582, 136.485, -13.1205, 0.37", "-80.7524, 137.687, -13.2638, 0.81", "-81.3845, 138.566, -13.346, 1.33", "-81.7603, 139.15, -13.3939, 1.33", "-82.2578, 139.974, -13.4592, 0.81", "-83.2576, 141.593, -13.6189, 0.52", "-84.0902, 142.849, -13.7841, 0.52", "-85.0261, 144.242, -13.9883, 0.52", "-85.5411, 145.011, -14.1069, 0.52", "-86.2004, 146.008, -14.2651, 0.52", "-86.9361, 147.127, -14.454, 0.52", "-88.1856, 149.013, -14.7937, 0.52", "-88.6382, 149.695, -14.9188, 0.52", "-89.7663, 151.363, -15.23, 1.25", "-90.0861, 151.835, -15.3148, 1.47", "-90.5041, 152.45, -15.4335, 1.47", "-91.1172, 153.306, -15.6243, 0.88", "-91.8668, 154.258, -15.8772, 0.29", "-92.1819, 154.613, -15.9872, 0.29", "-92.8417, 155.289, -16.2156, 0.44", "-93.3718, 155.805, -16.3884, 0.44", "-93.8771, 156.275, -16.5406, 0.44", "-94.1686, 156.564, -16.6391, 0.44", "-94.5889, 156.993, -16.7537, 0.29", "-95.1396, 157.686, -16.8344, 0.29", "-95.3347, 157.949, -16.8383, 0.44", "-95.5785, 158.278, -16.8251, 0.44", "-96.2303, 159.124, -16.7766, 0.37", "-97.1192, 160.223, -16.7087, 0.44", "-98.5314, 161.985, -16.7067, 2.28", "-99.0846, 162.691, -16.7424, 2.5", "-99.4979, 163.254, -16.7943, 2.5", "-100.151, 164.187, -16.9191, 1.92", "-100.776, 165.141, -17.1054, 0.81", "-101.518, 166.47, -17.4842, 0.52", "-101.806, 167.084, -17.6733, 0.52", "-102.388, 168.505, -18.1061, 0.88", "-102.698, 169.382, -18.3532, 0.88", "-103.029, 170.44, -18.6203, 0.66", "-103.276, 171.309, -18.8184, 0.44", "-103.613, 172.567, -19.0525, 0.29", "-103.958, 174.019, -19.3175, 0.29", "-104.286, 175.679, -19.6242, 0.29", "-104.425, 176.504, -19.7807, 0.29", "-104.639, 178.041, -20.1312, 0.52", "-104.778, 179.102, -20.4236, 0.88", "-104.884, 179.98, -20.7257, 0.88", "-105.02, 180.951, -21.1227, 0.44", "-105.356, 182.501, -21.8883, 1.11", "-105.788, 183.853, -22.6641, 2.43", "-106.202, 184.772, -23.272, 2.43", "-106.526, 185.307, -23.6764, 2.43", "-107.037, 185.941, -24.1901, 1.69", "-107.818, 186.742, -24.8857, 0.59", "-108.74, 187.505, -25.5894, 0.74", "-109.07, 187.736, -25.7954, 0.74", "-109.633, 188.104, -26.1311, 0.52", "-110.515, 188.669, -26.6141, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.6309, 5.97288, 6.19553, 1.99", "25.6852, 6.02618, 6.30967, 1.99", "26.9042, 6.35583, 6.4085, 1.99", "27.7804, 6.90207, 6.46744, 1.69", "29.0122, 7.66997, 6.5503, 1.69", "29.531, 7.9934, 6.5852, 1.69", "30.3929, 8.53078, 6.64319, 1.69", "30.9613, 9.08526, 6.61415, 1.92", "31.8159, 10.2771, 6.60606, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "23.6309, 5.97288, 6.19553, 0.74", "24.2933, 7.55508, 6.42415, 0.74", "24.5413, 8.24018, 6.51036, 0.74", "24.8848, 9.31448, 6.62732, 0.74", "25.1532, 10.2388, 6.71778, 0.44", "25.3591, 11.0222, 6.79598, 0.44", "25.6355, 12.1838, 6.91245, 0.66", "25.7396, 12.7429, 6.9573, 0.88", "25.8732, 13.5561, 7.04282, 0.88", "25.9827, 14.3078, 7.15134, 1.03", "26.1512, 15.3868, 7.33707, 0.96", "26.2833, 16.1521, 7.48227, 0.52", "26.4097, 16.7676, 7.60582, 0.52", "26.554, 17.5861, 7.77314, 0.88", "26.672, 18.2533, 7.91252, 0.66", "26.8072, 19.0004, 8.07566, 0.88", "26.9266, 19.6675, 8.2259, 0.88", "27.0913, 20.6529, 8.45893, 0.29", "27.2045, 21.4491, 8.6432, 0.29", "27.2756, 21.9973, 8.76087, 0.29", "27.3955, 22.932, 8.9671, 0.44", "27.4803, 23.4903, 9.10556, 0.74", "27.6086, 24.1623, 9.27998, 0.88", "27.7026, 24.5691, 9.39266, 1.11", "27.7865, 24.8907, 9.48044, 1.11", "27.9468, 25.6212, 9.65573, 0.29", "28.1196, 26.3409, 9.79459, 0.29", "28.3169, 27.0206, 9.90829, 0.29", "30.1254, 34.4249, 12.852, 0.29", "32.9858, 41.683, 15.3287, 0.29", "34.9809, 49.3951, 17.0046, 0.29", "36.2338, 57.3256, 18.2023, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-93.3806, -62.7017, 5.28784, 0.44", "-94.5071, -63.3132, 5.86309, 0.44", "-95.0804, -63.664, 6.13526, 0.29", "-95.6915, -64.0586, 6.39211, 0.29", "-96.0521, -64.2958, 6.53316, 0.29", "-96.8228, -64.7881, 6.81721, 0.37", "-97.1737, -65.0035, 6.95227, 0.37", "-97.7203, -65.3051, 7.11769, 0.29", "-98.2417, -65.6351, 7.27574, 0.29", "-98.6395, -65.9208, 7.39358, 0.29", "-98.9162, -66.1286, 7.47209, 0.29", "-99.3479, -66.4434, 7.59417, 0.29", "-99.775, -66.7153, 7.71679, 0.44", "-100.364, -67.0526, 7.89446, 0.44", "-100.672, -67.2451, 8.00035, 0.44", "-101.117, -67.5663, 8.17088, 0.66", "-101.555, -67.9547, 8.35855, 0.66", "-101.775, -68.2128, 8.46918, 0.52", "-102.128, -68.8404, 8.72186, 0.44", "-102.247, -69.2821, 8.88078, 0.66", "-102.289, -69.7439, 9.03502, 0.66", "-102.295, -70.2774, 9.20472, 0.52", "-102.296, -70.9863, 9.43491, 0.52", "-102.278, -71.6319, 9.63433, 0.44", "-102.247, -72.1972, 9.80262, 0.37", "-102.229, -73.0754, 10.0679, 0.37", "-102.245, -73.7702, 10.2946, 0.29", "-102.316, -74.4803, 10.5683, 0.29", "-106.625, -78.9715, 11.4826, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-93.3806, -62.7017, 5.28784, 1.11", "-94.4374, -63.1752, 5.5457, 1.11", "-95.2623, -63.6148, 5.71605, 1.11", "-96.9336, -64.5667, 6.05951, 0.88", "-98.2079, -65.2548, 6.32517, 0.88", "-100.147, -66.2221, 6.73582, 0.88", "-102.172, -67.1412, 7.15872, 0.88", "-103.283, -67.6377, 7.38842, 0.88", "-104.318, -68.0829, 7.57588, 0.81", "-105.487, -68.5598, 7.75776, 0.81", "-106.332, -68.8698, 7.88809, 0.81", "-107.833, -69.3686, 8.12985, 0.96", "-108.618, -69.6525, 8.24603, 0.96", "-109.422, -70.0218, 8.33183, 0.96", "-110.188, -70.4884, 8.36625, 0.96", "-111.187, -71.2165, 8.37652, 0.96", "-111.521, -71.4701, 8.37017, 0.96", "-112.546, -72.2229, 8.32483, 0.88", "-113.837, -73.0457, 8.25014, 0.88", "-114.763, -73.6084, 8.18843, 1.11", "-115.697, -74.1777, 8.12162, 1.11", "-116.78, -74.8587, 8.01939, 0.96", "-117.693, -75.493, 7.95046, 0.96", "-118.942, -76.4611, 7.88487, 0.88", "-120.376, -77.6789, 7.77907, 0.88", "-121.488, -78.6561, 7.6372, 0.96", "-122.383, -79.4438, 7.48021, 0.96", "-123.664, -80.5227, 7.22206, 0.88", "-124.276, -80.9992, 7.07398, 0.74", "-125.657, -81.9848, 6.69871, 0.96", "-126.881, -82.7626, 6.36623, 1.11", "-127.877, -83.3633, 6.11592, 1.25", "-128.738, -83.8905, 5.92253, 1.25", "-130.123, -84.7674, 5.63883, 1.03", "-131.979, -86.0506, 5.34599, 0.88", "-133.316, -87.0863, 5.18632, 0.88", "-134.661, -88.2109, 5.04078, 0.88", "-135.783, -89.1616, 4.91495, 0.88", "-136.867, -90.0411, 4.80032, 1.33", "-137.718, -90.6668, 4.73057, 1.33", "-138.734, -91.359, 4.64937, 1.18", "-139.45, -91.8158, 4.5899, 0.96", "-140.739, -92.5787, 4.5041, 0.96", "-141.924, -93.2042, 4.45698, 0.96", "-143.515, -93.9353, 4.46332, 0.88", "-144.887, -94.4408, 4.55202, 0.81", "-145.653, -94.6576, 4.65617, 0.81", "-146.544, -94.8799, 4.80968, 0.74", "-147.201, -95.0686, 4.93205, 0.74", "-148.039, -95.3831, 5.08662, 0.74", "-149.237, -95.9913, 5.28923, 0.74", "-149.905, -96.4689, 5.37165, 1.11", "-150.927, -97.4789, 5.42547, 1.11", "-152.183, -98.983, 5.40999, 0.88", "-152.999, -100.099, 5.3627, 0.88", "-153.625, -101.036, 5.30315, 0.88", "-154.486, -102.34, 5.20833, 0.81", "-155.682, -104.017, 5.04174, 0.81", "-156.3, -104.8, 4.94662, 1.18", "-156.986, -105.632, 4.80942, 1.33", "-157.734, -106.468, 4.64657, 1.33", "-158.966, -107.718, 4.37646, 0.88", "-160.195, -108.849, 4.08928, 0.81", "-161.485, -109.942, 3.79762, 0.81", "-163.021, -111.173, 3.43931, 0.81", "-164.189, -112.06, 3.14055, 0.81", "-165.292, -112.87, 2.85252, 1.11", "-165.962, -113.353, 2.67012, 1.25", "-166.764, -113.929, 2.45361, 2.14", "-167.54, -114.514, 2.21457, 2.5", "-168.603, -115.303, 1.88878, 1.92", "-170.143, -116.603, 1.32342, 1.11", "-170.804, -117.235, 1.04235, 0.96", "-171.712, -118.184, 0.628649, 1.4", "-172.882, -119.459, 0.028297, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-11.8971, -113.849, -3.18773, 0.37", "-11.1721, -116.379, -1.9488, 0.37", "-10.9545, -117.034, -1.6521, 0.52", "-10.6731, -117.836, -1.32073, 0.66", "-10.353, -118.751, -0.966104, 0.37", "-10.1099, -119.428, -0.712453, 0.44", "-9.82223, -120.215, -0.429015, 0.44", "-9.44956, -121.156, -0.185476, 0.29", "-9.06781, -122.04, 0.0533349, 0.29", "-8.68511, -122.782, 0.266596, 0.59", "-8.28717, -123.422, 0.448167, 0.59", "-7.79046, -124.091, 0.63584, 0.37", "-7.24427, -124.723, 0.805792, 0.66", "-6.70354, -125.257, 0.948921, 0.52", "-5.86808, -125.973, 1.13242, 0.37", "-5.22172, -126.476, 1.24919, 0.37", "-4.24225, -127.22, 1.39534, 0.37", "-3.28361, -127.935, 1.51228, 1.03", "-2.58336, -128.459, 1.57896, 1.18", "-1.91962, -128.962, 1.62027, 0.81", "-1.39404, -129.369, 1.63777, 0.52", "-0.410537, -130.134, 1.66922, 0.52", "0.522597, -130.889, 1.69571, 0.59", "1.33871, -131.602, 1.68827, 0.59", "2.00327, -132.243, 1.66122, 0.81", "2.54294, -132.8, 1.62894, 0.81", "3.13544, -133.447, 1.58085, 0.66", "3.5623, -133.94, 1.53531, 0.29", "4.53683, -135.14, 1.4126, 0.52", "5.36609, -136.186, 1.30095, 1.03", "5.66323, -136.569, 1.25507, 1.47", "6.20829, -137.237, 1.16917, 1.62", "6.94621, -138.049, 1.05673, 1.03", "7.6642, -138.749, 0.972263, 0.29", "8.36302, -139.359, 0.917469, 0.29", "9.18423, -140.015, 0.855725, 0.37", "10.0399, -140.69, 0.792294, 0.66", "10.481, -141.035, 0.76529, 0.81", "11.1787, -141.562, 0.741236, 0.96", "11.7053, -141.954, 0.735826, 0.44", "12.1229, -142.26, 0.744652, 0.29", "12.9301, -142.839, 0.792922, 0.29", "13.536, -143.324, 0.838756, 0.59", "14.1122, -143.846, 0.891149, 0.74", "14.5701, -144.309, 0.937804, 0.74", "15.1791, -144.999, 1.00215, 0.74", "15.6632, -145.603, 1.04773, 0.44", "16.3022, -146.469, 1.10119, 0.29", "16.6781, -147.013, 1.12488, 0.66", "17.1455, -147.705, 1.14246, 0.88", "17.5824, -148.344, 1.15302, 0.96", "18.212, -149.239, 1.17729, 0.66", "18.8611, -150.157, 1.2096, 0.37", "19.6321, -151.192, 1.25685, 0.74", "20.0628, -151.752, 1.28567, 0.81", "20.5593, -152.407, 1.32383, 0.37", "21.2199, -153.323, 1.38024, 0.37", "21.7846, -154.143, 1.43118, 0.37", "22.2521, -154.847, 1.47153, 0.37", "22.6261, -155.437, 1.50006, 0.52", "23.0733, -156.133, 1.52394, 0.52", "23.5372, -156.843, 1.53519, 0.37", "24.0147, -157.589, 1.52927, 0.37", "24.5757, -158.44, 1.52231, 0.81", "24.9181, -158.907, 1.52, 0.88", "25.5077, -159.622, 1.51805, 0.59", "26.0221, -160.193, 1.51977, 0.37", "26.5513, -160.734, 1.52364, 0.37", "27.2303, -161.386, 1.53581, 0.44", "28.6289, -162.634, 1.5737, 0.44", "29.5497, -163.363, 1.60507, 1.18", "30.2457, -163.873, 1.6345, 1.47", "31.0191, -164.407, 1.65752, 1.47", "32.1606, -165.186, 1.67449, 1.18", "33.0478, -165.829, 1.66409, 0.29", "33.6003, -166.266, 1.63915, 0.29", "34.0215, -166.621, 1.5988, 0.29", "34.7777, -167.318, 1.46339, 0.59", "35.5101, -168.074, 1.27357, 0.66", "35.9132, -168.547, 1.13015, 0.74", "36.3253, -169.098, 0.960088, 0.59", "36.7751, -169.776, 0.758427, 0.44", "37.3103, -170.643, 0.499856, 0.29", "37.6199, -171.227, 0.335897, 0.37", "38.0675, -172.208, 0.071202, 0.52", "38.3609, -172.958, -0.0988573, 1.03", "38.642, -173.743, -0.276002, 1.55", "38.8845, -174.423, -0.419159, 1.55", "39.4855, -176.137, -0.775041, 0.44", "39.9011, -177.256, -1.01914, 0.37", "40.9784, -179.757, -1.63148, 0.29", "41.2572, -180.288, -1.77359, 0.29", "42.1509, -181.66, -2.16061, 1.47", "42.5233, -182.107, -2.2995, 1.92", "43.296, -182.825, -2.56635, 2.06", "44.4934, -183.713, -3.00758, 0.81", "46.0864, -184.657, -3.65871, 0.29", "47.0989, -185.214, -4.10093, 0.29", "48.4256, -185.919, -4.66854, 0.44", "49.0745, -186.27, -4.91919, 0.52", "50.6039, -187.137, -5.42683, 0.29", "51.7175, -187.81, -5.7068, 0.88", "52.355, -188.223, -5.78978, 0.74", "53.8178, -189.288, -5.73463, 0.29", "54.8189, -190.069, -5.53049, 0.29", "55.7794, -190.852, -5.22423, 0.59", "56.3904, -191.372, -4.96984, 0.66", "57.5387, -192.383, -4.44335, 0.29", "58.6839, -193.444, -3.92262, 0.29", "59.4348, -194.208, -3.62691, 0.29", "60.1225, -194.999, -3.39376, 1.03", "60.6236, -195.62, -3.26064, 1.47", "61.0808, -196.22, -3.18134, 1.18", "61.9252, -197.39, -3.11267, 0.22", "62.6836, -198.471, -3.08788, 0.22", "63.6567, -199.867, -3.09573, 0.22", "64.0738, -200.441, -3.10119, 0.52", "64.7966, -201.402, -3.11398, 0.29", "65.4847, -202.289, -3.13565, 0.29", "65.9256, -202.825, -3.1624, 0.88", "66.5277, -203.544, -3.17416, 0.88", "67.4105, -204.631, -3.16808, 0.29", "67.8087, -205.133, -3.1439, 0.29", "68.4957, -205.999, -3.03305, 0.96", "68.9688, -206.57, -2.89575, 1.4", "69.4632, -207.148, -2.7051, 1.77", "69.7703, -207.488, -2.56386, 1.77", "70.9738, -208.743, -1.9838, 0.22", "72.2051, -209.945, -1.34904, 0.22", "73.1798, -210.814, -0.856252, 0.88", "73.6236, -211.189, -0.646936, 1.33", "74.0854, -211.561, -0.459208, 1.33", "75.1485, -212.385, -0.0650833, 0.22", "76.4795, -213.378, 0.363795, 0.22", "77.9085, -214.449, 0.73857, 0.22", "79.218, -215.47, 1.00584, 0.22", "79.9838, -216.093, 1.13419, 0.74", "80.398, -216.451, 1.18857, 0.88", "80.8848, -216.907, 1.22715, 0.52", "81.7428, -217.828, 1.23332, 0.22", "82.172, -218.353, 1.21952, 0.88", "82.6377, -218.974, 1.20917, 1.33", "83.0021, -219.489, 1.21031, 1.33", "83.8392, -220.749, 1.23571, 0.29", "84.7952, -222.292, 1.30745, 0.29", "85.2479, -223.059, 1.37074, 0.44", "85.6343, -223.732, 1.45132, 0.59", "85.9811, -224.348, 1.546, 0.59", "86.5287, -225.334, 1.72851, 0.22", "87.0789, -226.346, 1.93355, 0.22", "87.4213, -226.964, 2.06045, 0.74", "87.63, -227.332, 2.1296, 0.88", "87.9145, -227.803, 2.20113, 0.88", "88.4867, -228.724, 2.33821, 0.22", "89.5122, -230.286, 2.54942, 0.22", "89.9771, -230.972, 2.61966, 0.52", "90.2825, -231.419, 2.65007, 0.66", "90.7642, -232.115, 2.68232, 0.44", "98.3513, -239.25, 1.54093, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.8971, -113.849, -3.18773, 2.28", "-12.7625, -115.471, -2.92465, 2.28", "-13.5835, -116.857, -2.62243, 1.62", "-14.6332, -118.502, -2.25401, 1.33", "-15.6817, -120.047, -1.93255, 0.88", "-16.1936, -120.758, -1.79778, 0.88", "-17.0035, -121.801, -1.61721, 1.03", "-18.6137, -123.66, -1.33235, 1.03", "-19.9985, -125.077, -1.15179, 0.96", "-21.0932, -126.098, -1.07416, 0.88", "-22.0245, -126.968, -1.07073, 1.11", "-23.0362, -128.022, -1.15476, 1.33", "-23.822, -129.031, -1.30685, 1.55", "-24.4407, -130.065, -1.52259, 1.25", "-24.8793, -131.113, -1.76907, 0.96", "-25.2415, -132.56, -2.11184, 0.88", "-25.4907, -134.362, -2.54742, 0.88", "-25.6252, -136.291, -3.00007, 0.88", "-25.6816, -137.99, -3.38144, 1.03", "-25.6922, -139.578, -3.7159, 1.03", "-25.6862, -141.448, -4.06843, 1.03", "-25.6686, -143.154, -4.34849, 1.25", "-25.6223, -145.121, -4.60634, 1.55", "-25.5518, -146.626, -4.7494, 1.55", "-25.3884, -148.702, -4.88272, 1.33", "-25.2179, -150.399, -4.95466, 1.33", "-25.0705, -151.914, -4.99908, 1.11", "-24.9089, -153.535, -4.97201, 1.11", "-24.7723, -155.316, -4.88409, 0.96", "-24.7215, -156.64, -4.78678, 0.96", "-24.7284, -158.555, -4.57899, 0.88", "-24.8194, -161.079, -4.2459, 0.88", "-24.9582, -163.267, -3.90377, 1.03", "-25.1261, -165.214, -3.55861, 1.25", "-25.3261, -167.064, -3.20536, 1.33", "-25.5086, -168.52, -2.91378, 1.62", "-25.6848, -170.016, -2.59315, 2.5", "-25.7508, -170.829, -2.41932, 2.8", "-25.8062, -171.836, -2.25175, 3.02", "-25.8155, -172.781, -2.08451, 3.02", "-25.8142, -173.414, -1.9752, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.3678, -47.2438, -8.70248, 0.81", "-1.67038, -48.6879, -8.65032, 0.81", "-1.94999, -49.6602, -8.56553, 0.66", "-2.33595, -50.7466, -8.44653, 0.66", "-2.78703, -51.8842, -8.3142, 0.52", "-2.97453, -52.3386, -8.2614, 0.52", "-3.47196, -53.5357, -8.12622, 0.74", "-3.96339, -54.7542, -7.93486, 0.74", "-4.40122, -55.7616, -7.78343, 0.88", "-4.91739, -56.8528, -7.64218, 0.59", "-5.26078, -57.5631, -7.57936, 1.03", "-5.57453, -58.2604, -7.5277, 1.25", "-5.88036, -59.0806, -7.4766, 1.03", "-6.198, -60.1404, -7.42378, 0.66", "-6.43474, -61.0049, -7.38721, 0.66", "-6.67875, -61.8967, -7.36399, 0.81", "-6.95013, -62.9401, -7.36957, 0.81", "-7.14567, -63.8128, -7.4174, 0.66", "-7.30069, -64.7367, -7.5169, 0.52", "-7.37077, -65.2846, -7.6138, 0.52", "-7.4499, -65.9557, -7.75284, 0.52", "-7.57054, -66.9115, -7.97616, 0.66", "-7.69727, -67.779, -8.18689, 0.66", "-7.85355, -68.6953, -8.41665, 0.59", "-8.04993, -69.6999, -8.65712, 1.18", "-8.21253, -70.5751, -8.85813, 1.55", "-8.38582, -71.4123, -9.03084, 1.99", "-8.67036, -72.4252, -9.20938, 2.73", "-8.9377, -73.1735, -9.31907, 2.87", "-9.23079, -73.8707, -9.41864, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.3678, -47.2438, -8.70248, 0.52", "-1.02305, -48.9208, -10.6306, 0.52", "-0.941099, -49.3177, -11.0392, 0.52", "-0.634562, -50.6274, -12.4024, 0.52", "-0.357826, -51.5957, -13.4407, 0.66", "-0.151027, -52.1873, -14.0657, 0.66", "0.0576489, -52.6855, -14.5946, 0.44", "0.291061, -53.3761, -15.2988, 0.88", "0.508671, -54.027, -15.9058, 1.33", "0.769805, -54.729, -16.5148, 1.47", "1.03493, -55.5397, -17.3109, 1.03", "1.23016, -56.8036, -18.6456, 0.44", "1.06778, -57.58, -19.5341, 0.44", "0.544158, -58.4724, -20.7342, 0.37", "0.00477459, -59.119, -21.7334, 0.37", "-0.762275, -59.9432, -23.2421, 0.37", "-1.2783, -60.4773, -24.4034, 0.74", "-1.60326, -60.8364, -25.2986, 0.96", "-1.94456, -61.3323, -26.5599, 0.96", "-2.43456, -62.2317, -28.7967, 0.44", "-2.65925, -62.8514, -30.2406, 1.33", "-2.8568, -63.7061, -32.0773, 1.55", "-3.00703, -64.4953, -33.6831, 1.33", "-3.15448, -65.5778, -35.706, 0.81", "-3.18219, -66.0439, -36.495, 1.25", "-3.15503, -66.624, -37.3706, 0.88", "-3.10314, -67.2805, -38.2206, 0.37", "-3.03552, -67.8633, -38.8503, 0.81", "-2.95864, -68.491, -39.4479, 1.03", "-2.88819, -68.8693, -39.7761, 1.03", "-2.57836, -70.1802, -40.8857, 0.29", "-2.39223, -70.8462, -41.4256, 0.29", "-2.09213, -71.7086, -42.0967, 1.84", "-1.78024, -72.4326, -42.6822, 2.14", "-0.876268, -74.2118, -44.2387, 0.29", "-0.388427, -75.0237, -44.9974, 0.81", "0.127659, -75.7495, -45.7181, 0.81", "0.676253, -76.4217, -46.4497, 0.52", "1.42583, -77.2442, -47.4632, 1.25", "1.91232, -77.7408, -48.141, 1.4", "3.16301, -78.9651, -49.8834, 0.22", "3.94657, -79.7107, -50.9204, 0.22", "4.84753, -80.565, -52.0525, 1.4", "5.41913, -81.1366, -52.736, 2.21", "5.68699, -81.4223, -53.0297, 2.21", "7.46154, -83.4535, -54.8183, 0.22", "7.94166, -84.0281, -55.284, 0.74", "8.3636, -84.5622, -55.7049, 1.03", "9.04081, -85.4905, -56.3995, 0.59", "10.6156, -87.7883, -58.0452, 0.22", "12.5941, -90.7775, -60.1858, 0.22", "13.2698, -91.8401, -60.9771, 0.81", "13.7659, -92.6249, -61.5799, 0.96", "15.3562, -95.1817, -63.5959, 0.22", "16.332, -96.7577, -64.9132, 0.22", "16.8534, -97.6272, -65.6925, 0.88", "17.35, -98.4684, -66.5122, 0.88", "18.7303, -100.816, -68.8795, 0.15", "19.7986, -102.53, -70.5886, 0.15", "20.4278, -103.497, -71.5768, 0.15", "21.0032, -104.378, -72.4632, 1.62", "21.3648, -104.948, -73.0059, 1.92", "21.661, -105.407, -73.4081, 1.92", "23.6138, -108.466, -75.9078, 0.22", "24.0424, -109.121, -76.411, 0.66", "24.3711, -109.63, -76.7843, 0.88", "24.7078, -110.15, -77.1693, 0.88", "25.7345, -111.844, -78.5567, 0.15", "26.4176, -113.216, -79.8136, 0.15", "26.7281, -114.054, -80.6388, 0.81", "26.8858, -114.655, -81.226, 1.03", "26.9755, -115.202, -81.7522, 1.03", "27.0786, -117.048, -83.5136, 0.22", "26.9553, -119.062, -85.4293, 0.22", "26.856, -119.881, -86.2479, 0.22", "26.6733, -121.067, -87.4902, 1.03", "26.5793, -121.683, -88.1424, 1.62", "26.4745, -122.304, -88.8361, 1.62", "26.2977, -123.348, -90.0838, 1.03", "25.9488, -125.481, -92.7734, 0.22", "25.7412, -126.475, -94.1582, 0.44", "25.6342, -127.02, -94.964, 0.44", "25.4116, -128.219, -96.7598, 0.66", "25.3208, -128.823, -97.6457, 0.96", "25.24, -129.521, -98.6557, 0.37", "25.075, -131.757, -101.796, 0.66", "25.0662, -132.215, -102.431, 0.66", "25.0702, -133.879, -104.769, 0.22", "25.1283, -134.756, -105.969, 0.22", "25.219, -135.537, -107.027, 0.81", "25.366, -136.236, -107.97, 0.96", "25.5448, -136.692, -108.467, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "22.679, 147.821, -28.3401, 0.37", "24.2822, 147.054, -26.3638, 0.37", "24.6093, 146.897, -25.9606, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.679, 147.821, -28.3401, 0.22", "23.5616, 149.608, -28.5192, 0.22", "24.0055, 150.581, -28.6557, 0.22", "24.3424, 151.352, -28.7802, 0.74", "24.4606, 151.638, -28.8283, 0.74", "25.0082, 152.964, -29.051, 0.15", "25.3625, 153.821, -29.1951, 0.15", "25.6086, 154.441, -29.3729, 0.66", "25.7336, 154.825, -29.4643, 0.88", "25.8697, 155.264, -29.5415, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.78093, 36.1858, 2.45791, 0.66", "-10.1256, 38.147, 2.28279, 0.66", "-10.1985, 38.8873, 2.25764, 0.96", "-10.2818, 39.7551, 2.24529, 0.96", "-10.3895, 40.9401, 2.24499, 0.59", "-10.4736, 41.9896, 2.25513, 0.59", "-10.5542, 43.2301, 2.27739, 0.59", "-10.6358, 45.0301, 2.37529, 0.59", "-10.6475, 45.8789, 2.42927, 0.52", "-10.6379, 47.1463, 2.51978, 0.88", "-10.6306, 48.0652, 2.57826, 1.11", "-10.6428, 49.1624, 2.6301, 1.11", "-10.6754, 50.4261, 2.68821, 0.74", "-10.7403, 51.7511, 2.74586, 0.74", "-10.842, 53.4467, 2.8226, 0.74", "-10.9351, 54.6169, 2.86485, 0.52", "-11.0592, 55.8693, 2.88709, 0.52", "-11.1589, 56.7719, 2.88904, 0.96", "-11.3058, 58.1059, 2.86123, 1.11", "-11.5252, 60.0856, 2.78343, 1.11", "-11.6654, 61.3871, 2.71433, 1.11", "-11.7851, 62.6838, 2.65869, 0.81", "-11.8707, 63.823, 2.62106, 0.74", "-11.9337, 65.0094, 2.59775, 0.74", "-11.964, 66.1207, 2.59848, 0.44", "-11.9845, 67.0598, 2.62061, 0.44", "-12.0303, 68.6032, 2.70138, 0.74", "-12.0644, 69.6676, 2.78041, 0.74", "-12.0946, 70.7987, 2.8757, 0.37", "-12.0918, 71.9722, 2.98702, 0.74", "-12.0685, 72.9984, 3.04571, 0.96", "-12.024, 74.1773, 3.06509, 0.96", "-11.9571, 75.4776, 3.01728, 0.81", "-11.8772, 76.6998, 2.93423, 0.52", "-11.7719, 77.9782, 2.8174, 0.52", "-11.5847, 79.6563, 2.64218, 1.03", "-11.4645, 80.5484, 2.54235, 1.55", "-11.3463, 81.355, 2.44519, 1.69", "-11.2683, 81.8805, 2.38244, 1.69", "-11.0718, 83.179, 2.25214, 0.37", "-10.9063, 84.2633, 2.18676, 0.44", "-10.8023, 84.8258, 2.19285, 0.44", "-10.6643, 85.4724, 2.22291, 0.44", "-10.416, 86.5412, 2.30201, 0.29", "-10.2944, 86.9953, 2.3407, 0.59", "-10.052, 87.7651, 2.41424, 0.44", "-9.65583, 88.9754, 2.53688, 0.29", "-9.30837, 90.0977, 2.65222, 1.18", "-9.13344, 90.7017, 2.71535, 1.18", "-8.87802, 91.6089, 2.8069, 0.52", "-8.6347, 92.4792, 2.89434, 0.29", "-8.35354, 93.4712, 3.02501, 0.29", "-8.12348, 94.3676, 3.19231, 0.29", "-7.99722, 94.9531, 3.32727, 0.29", "-7.79213, 96.1183, 3.63263, 0.81", "-7.63524, 97.1387, 3.92532, 0.44", "-7.46535, 98.1164, 4.20134, 0.22", "-7.24575, 99.1025, 4.47308, 0.44", "-7.15323, 99.4802, 4.5823, 0.44", "-6.96168, 100.29, 4.81985, 0.29", "-6.80694, 101.022, 5.03742, 0.29", "-6.58835, 102.023, 5.31216, 0.29", "-6.43998, 102.663, 5.46381, 0.29", "-6.24119, 103.487, 5.64953, 0.66", "-6.08535, 104.157, 5.8068, 0.66", "-5.89106, 105.005, 5.98173, 0.74", "-5.72168, 105.929, 6.17095, 0.37", "-5.614, 106.653, 6.31904, 0.37", "-5.46494, 107.666, 6.49254, 0.52", "-5.34394, 108.433, 6.59283, 0.59", "-5.15465, 109.599, 6.72861, 0.44", "-5.01621, 110.422, 6.8164, 0.29", "-4.91201, 110.998, 6.88191, 0.29", "-4.68648, 112.272, 7.04272, 1.11", "-4.56099, 113.001, 7.14356, 1.25", "-4.47366, 113.521, 7.2215, 1.25", "-4.27172, 114.613, 7.38847, 0.66", "-4.12382, 115.264, 7.47067, 0.29", "-3.85746, 116.278, 7.59042, 0.29", "-3.59106, 117.183, 7.69229, 0.29", "-3.3242, 118.002, 7.78113, 0.29", "-2.89345, 119.226, 7.90633, 0.96", "-2.70345, 119.757, 7.95116, 1.47", "-2.55305, 120.212, 7.97978, 1.47", "-2.47376, 120.481, 7.9908, 1.47", "-2.27442, 121.268, 8.01896, 0.74", "-2.06957, 122.172, 8.05525, 0.29", "-1.8897, 123.099, 8.09577, 0.52", "-1.72333, 123.955, 8.13899, 0.74", "-1.48521, 125.041, 8.20686, 0.44", "-1.27195, 125.905, 8.26982, 0.29", "-1.10415, 126.511, 8.3192, 0.29", "-0.838102, 127.341, 8.39719, 0.66", "-0.627332, 127.934, 8.45511, 0.74", "-0.318327, 128.77, 8.53678, 0.74", "0.0193403, 129.706, 8.63438, 0.29", "0.302622, 130.544, 8.72437, 0.29", "0.830894, 132.23, 8.90769, 0.29", "1.14428, 133.38, 9.08757, 0.52", "1.30819, 134.074, 9.22077, 1.18", "1.42673, 134.675, 9.35232, 1.4", "1.58074, 135.654, 9.58613, 1.4", "1.6728, 136.423, 9.77932, 0.66", "1.86305, 138.224, 10.2342, 0.29", "2.00173, 139.36, 10.4982, 0.29", "2.11381, 140.046, 10.6208, 0.37", "2.29988, 140.972, 10.7374, 0.37", "2.52734, 141.929, 10.8198, 0.37", "2.9958, 143.624, 10.8996, 0.37", "3.58579, 145.466, 10.8967, 0.37", "4.21144, 147.253, 10.8798, 1.33", "4.54631, 148.11, 10.8578, 1.99", "4.83019, 148.789, 10.8314, 1.99", "4.95188, 149.077, 10.8168, 1.99", "5.17886, 149.609, 10.7907, 1.99", "5.6539, 150.716, 10.7583, 0.59", "6.20839, 151.999, 10.7707, 0.29", "6.59895, 152.894, 10.8322, 0.59", "6.90289, 153.585, 10.9029, 0.59", "7.54139, 155.03, 11.0956, 0.37", "7.88229, 155.832, 11.2248, 0.37", "8.40169, 157.131, 11.4693, 0.37", "8.97649, 158.694, 11.7995, 0.74", "9.18239, 159.338, 11.9315, 0.74", "9.35732, 160.005, 12.0697, 0.88", "9.55083, 160.976, 12.2675, 0.44", "9.80158, 162.658, 12.559, 0.29", "9.893, 163.563, 12.6561, 0.52", "10.0075, 165.249, 12.7201, 1.25", "10.0398, 165.97, 12.7236, 1.62", "10.0585, 166.444, 12.7009, 1.62", "10.0951, 167.421, 12.6078, 0.96", "10.1655, 168.88, 12.3991, 0.29", "10.2316, 169.72, 12.2629, 0.29", "10.3428, 170.74, 12.1089, 0.29", "10.4609, 171.807, 11.9825, 0.74", "10.5055, 172.29, 11.948, 0.96", "10.5482, 172.85, 11.9354, 0.96", "10.642, 174.266, 11.9401, 0.52", "10.7687, 176.221, 11.9355, 0.37", "10.8508, 177.562, 11.9361, 0.29", "10.9116, 178.828, 11.9272, 0.66", "10.9473, 179.678, 11.9028, 0.66", "10.9998, 181.274, 11.8226, 0.29", "11.0256, 182.066, 11.7761, 0.29", "11.1037, 184.155, 11.649, 0.29", "11.22, 186.427, 11.5238, 1.99", "11.2473, 186.943, 11.5036, 2.28", "11.2771, 187.671, 11.4918, 1.55", "11.2985, 188.468, 11.5183, 0.88", "11.3066, 189.765, 11.6356, 0.22", "11.2963, 190.371, 11.7176, 0.22", "11.2612, 191.475, 11.9079, 0.66", "11.2386, 192.174, 12.0282, 0.66", "11.2111, 193.357, 12.2205, 0.29", "11.1799, 195.252, 12.4886, 0.22", "11.1902, 196.212, 12.6147, 0.22", "11.2298, 197.229, 12.7344, 0.52", "11.3458, 198.502, 12.8649, 0.44", "11.5015, 199.61, 12.9629, 0.44", "11.7368, 200.89, 13.0511, 0.44", "12.1981, 202.873, 13.1728, 0.22", "12.5822, 204.349, 13.2609, 0.66", "12.9285, 205.543, 13.3313, 1.77", "13.1293, 206.174, 13.3692, 1.77", "13.3265, 206.739, 13.4052, 1.77", "13.6552, 207.566, 13.465, 0.88", "14.0477, 208.482, 13.5741, 0.29", "14.3203, 209.103, 13.6741, 0.52", "15.0043, 210.706, 13.97, 0.22", "15.3968, 211.621, 14.1339, 0.52", "15.8445, 212.652, 14.3051, 0.52", "16.8173, 214.92, 14.649, 0.22", "17.5574, 216.656, 14.8827, 0.37", "18.0368, 217.799, 15.0307, 0.37", "18.5559, 219.073, 15.182, 1.92", "18.7851, 219.659, 15.2402, 2.21", "19.007, 220.268, 15.2744, 2.21", "19.2655, 220.991, 15.2233, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.78093, 36.1858, 2.45791, 0.66", "-9.47561, 37.1446, 2.63729, 0.66", "-9.28848, 37.7286, 2.74143, 0.81", "-9.15241, 38.1628, 2.83134, 0.37", "-8.99913, 38.6858, 2.94274, 0.29", "-8.73816, 39.5626, 3.12315, 0.29", "-8.57177, 40.0759, 3.22852, 0.29", "-8.3821, 40.5696, 3.31603, 0.29", "-8.0862, 41.2203, 3.44186, 0.29", "-7.8218, 41.754, 3.54824, 0.29", "-7.55828, 42.2856, 3.65389, 0.74", "-7.37534, 42.6428, 3.7293, 0.74", "-7.02863, 43.2476, 3.85897, 0.29", "-6.82305, 43.5948, 3.9376, 0.37", "-6.35155, 44.403, 4.1132, 0.37", "-6.10202, 44.86, 4.21568, 0.37", "-5.84609, 45.3998, 4.33587, 0.37", "-5.74293, 45.6485, 4.39073, 0.37", "-5.57865, 46.1024, 4.49309, 0.22", "-5.43164, 46.543, 4.59238, 0.22", "-5.30254, 46.8907, 4.66687, 0.66", "-5.16023, 47.3097, 4.73616, 0.96", "-3.61103, 52.3245, 5.15285, 0.96", "-0.875031, 56.6972, 6.47901, 0.96", "1.29831, 61.1303, 8.46022, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "31.8159, 10.2771, 6.60606, 0.66", "32.675, 8.54589, 6.65238, 0.66", "32.9155, 7.99417, 6.63108, 0.66", "33.3132, 7.14643, 6.62492, 0.88", "34.0385, 5.78066, 6.67041, 0.88", "34.5641, 4.9116, 6.73705, 0.88", "35.0754, 4.18988, 6.8194, 1.03", "35.6789, 3.40876, 6.91982, 1.03", "36.5731, 2.8017, 7.16979, 0.88", "37.3005, 2.65318, 7.40369, 0.88", "37.9295, 2.59927, 7.62445, 0.88", "38.9247, 2.48505, 8.0057, 0.81", "40.0645, 2.21027, 8.48399, 0.81", "40.7837, 1.89726, 8.77835, 0.81", "41.6892, 1.28232, 9.09037, 0.74", "42.6493, 0.481629, 9.38151, 0.88", "43.4985, -0.324591, 9.59769, 0.88", "44.4049, -1.30411, 9.78742, 0.52", "44.8601, -1.81167, 9.84223, 0.52", "45.4237, -2.35187, 9.83672, 0.52", "46.158, -2.90859, 9.77088, 0.52", "47.0091, -3.39178, 9.64857, 0.74", "47.8802, -3.79396, 9.49548, 0.74", "48.9907, -4.23216, 9.28083, 0.74", "50.4613, -4.75328, 8.9997, 0.74", "51.4828, -5.08728, 8.7959, 0.74", "52.2937, -5.31206, 8.63783, 0.74", "53.1788, -5.47015, 8.47302, 0.74", "53.6986, -5.52324, 8.39616, 0.88", "55.171, -5.56307, 8.20304, 0.88", "56.4274, -5.55624, 8.06091, 0.88", "57.9822, -5.55929, 7.90346, 0.66", "59.118, -5.58171, 7.81596, 0.66", "62.0383, -5.66065, 7.66513, 0.59", "63.0503, -5.69524, 7.6314, 0.52", "64.5829, -5.71394, 7.60407, 0.52", "65.5075, -5.6768, 7.6008, 0.52", "66.5159, -5.54704, 7.59747, 0.52", "67.7238, -5.3174, 7.5963, 0.52", "68.5315, -5.14534, 7.6049, 0.52", "69.8484, -4.91763, 7.63587, 0.52", "71.2768, -4.66996, 7.67955, 0.52", "72.6144, -4.4771, 7.73159, 0.52", "73.8559, -4.39317, 7.79623, 0.52", "75.2647, -4.45817, 7.89779, 0.52", "76.2276, -4.65199, 8.00161, 0.52", "77.1184, -4.93507, 8.1633, 0.52", "77.7159, -5.14207, 8.31016, 0.52", "78.4699, -5.38389, 8.5283, 0.52", "79.9996, -5.77764, 9.05399, 0.29", "82.7402, -6.26655, 10.1051, 0.29", "85.2313, -6.5393, 11.1187, 0.29", "86.5052, -6.57983, 11.6705, 0.29", "87.4212, -6.56579, 12.0807, 0.44", "88.3938, -6.47414, 12.5464, 0.59", "89.0066, -6.33375, 12.8972, 0.59", "90.0134, -5.74794, 13.6154, 0.59", "90.5537, -5.20229, 14.0178, 0.59", "100.8, -8.49594, 16.2979, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "31.8159, 10.2771, 6.60606, 1.11", "33.2933, 9.82396, 7.14226, 1.11", "34.184, 9.43846, 7.52719, 1.11", "35.2304, 8.97616, 7.8622, 1.25", "36.0642, 8.66561, 8.05214, 1.47", "37.2297, 8.33401, 8.22794, 1.4", "38.2896, 8.11159, 8.32428, 1.4", "39.5044, 7.87139, 8.35997, 1.18", "41.2192, 7.74875, 8.20436, 1.18", "42.4464, 7.83088, 7.9405, 1.18", "43.5142, 7.95961, 7.65277, 1.18", "44.1498, 8.04011, 7.47825, 0.88", "44.7745, 8.07888, 7.34176, 0.88", "45.7197, 7.99893, 7.24863, 0.88", "47.1005, 7.63958, 7.31904, 1.11", "48.1219, 7.24602, 7.45316, 1.11", "49.1421, 6.78218, 7.62721, 1.11", "50.2831, 6.20771, 7.85988, 1.25", "51.4345, 5.57689, 8.13378, 1.33", "51.9615, 5.26933, 8.27823, 1.47", "52.8302, 4.78393, 8.52825, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-172.882, -119.459, 0.028297, 0.59", "-172.881, -120.833, -0.486097, 0.59", "-172.87, -121.419, -0.678814, 0.59", "-172.842, -121.934, -0.832873, 0.52", "-172.8, -122.533, -0.994135, 0.52", "-172.77, -123.183, -1.1563, 0.88", "-172.74, -123.905, -1.32769, 1.03", "-172.724, -124.345, -1.3957, 1.03", "-172.671, -125.122, -1.50566, 1.03", "-172.604, -125.792, -1.59399, 0.29", "-172.559, -126.27, -1.65347, 0.29", "-172.534, -126.665, -1.69888, 0.29", "-172.527, -127.412, -1.78338, 0.59", "-172.552, -128.03, -1.82071, 0.74", "-172.593, -128.474, -1.82698, 0.88", "-172.649, -128.905, -1.82184, 0.88", "-172.71, -129.307, -1.80376, 0.88", "-172.823, -129.846, -1.76492, 0.81", "-173.112, -131.008, -1.66951, 0.37", "-173.266, -131.637, -1.61266, 1.03", "-173.419, -132.266, -1.52979, 1.33", "-173.562, -132.844, -1.43694, 1.33", "-173.761, -133.584, -1.30282, 1.03", "-173.941, -134.207, -1.18492, 0.74", "-174.111, -134.743, -1.0982, 0.37", "-174.34, -135.456, -0.943376, 0.74", "-174.478, -135.869, -0.842319, 0.74", "-174.637, -136.368, -0.754264, 0.59", "-174.742, -136.744, -0.71568, 0.37", "-174.876, -137.283, -0.714947, 0.37", "-175.1, -138.151, -0.82444, 0.66", "-175.276, -138.753, -0.97075, 0.74", "-175.615, -139.76, -1.28382, 0.52", "-175.763, -140.176, -1.43475, 0.52", "-175.972, -140.667, -1.62409, 1.33", "-176.248, -141.275, -1.87571, 1.55", "-176.613, -142.076, -2.18805, 1.99", "-176.843, -142.562, -2.33981, 2.21", "-177.152, -143.172, -2.48578, 1.99", "-177.544, -143.909, -2.65519, 1.11", "-177.964, -144.752, -2.85946, 0.37", "-178.279, -145.472, -3.03964, 1.11", "-178.424, -145.837, -3.13579, 1.25", "-178.607, -146.307, -3.26019, 1.25", "-179.022, -147.338, -3.56124, 0.29", "-179.292, -147.992, -3.76789, 0.29", "-179.567, -148.59, -3.95759, 0.44", "-179.865, -149.208, -4.15803, 0.59", "-180.223, -149.94, -4.38544, 0.88", "-180.524, -150.549, -4.56322, 0.96", "-180.85, -151.138, -4.71477, 0.66", "-181.29, -151.843, -4.85581, 0.37", "-181.626, -152.348, -4.94375, 0.29", "-181.994, -152.878, -5.00507, 0.29", "-182.311, -153.347, -5.03607, 0.29", "-182.748, -153.983, -5.04811, 0.29", "-183.405, -154.855, -5.05312, 0.74", "-183.914, -155.463, -5.0202, 1.03", "-184.546, -156.172, -4.9471, 2.28", "-185.044, -156.69, -4.87109, 2.8", "-185.522, -157.18, -4.79605, 3.09", "-186.293, -157.995, -4.68377, 1.84", "-187.187, -158.929, -4.5592, 0.29", "-187.624, -159.411, -4.49819, 0.29", "-188.196, -160.098, -4.4334, 0.29", "-188.769, -160.852, -4.3708, 0.29", "-189.155, -161.479, -4.32962, 0.88", "-189.45, -162.042, -4.30378, 1.11", "-189.681, -162.525, -4.30333, 0.81", "-189.866, -162.942, -4.30412, 0.52", "-190.146, -163.644, -4.30784, 0.29", "-190.456, -164.478, -4.30801, 0.29", "-190.702, -165.192, -4.30886, 0.29", "-190.841, -165.578, -4.3093, 0.29", "-191.104, -166.346, -4.31057, 0.81", "-191.325, -167.06, -4.31314, 1.11", "-191.48, -167.62, -4.31692, 0.88", "-191.698, -168.415, -4.32465, 0.29", "-191.958, -169.385, -4.3326, 0.29", "-192.221, -170.247, -4.36721, 0.29", "-192.324, -170.561, -4.38725, 0.29", "-192.57, -171.306, -4.45391, 0.74", "-192.75, -171.837, -4.51445, 0.74", "-192.995, -172.585, -4.61307, 0.44", "-193.271, -173.453, -4.74114, 0.29", "-193.414, -173.883, -4.8085, 0.29", "-193.601, -174.486, -4.88006, 0.29", "-193.784, -175.217, -4.93588, 0.29", "-193.87, -175.642, -4.94374, 0.74", "-193.941, -176.039, -4.92809, 0.74", "-194.059, -176.761, -4.85253, 0.44", "-194.206, -177.579, -4.74999, 0.29", "-194.341, -178.289, -4.63396, 0.74", "-194.44, -178.788, -4.54592, 1.11", "-194.539, -179.209, -4.47189, 1.69", "-194.627, -179.561, -4.41381, 1.92", "-194.757, -180.069, -4.34278, 1.92", "-194.946, -180.831, -4.2711, 1.62", "-195.176, -181.751, -4.20381, 0.29", "-195.355, -182.486, -4.1656, 0.22", "-195.517, -183.092, -4.14098, 0.22", "-195.749, -183.909, -4.12314, 0.59", "-195.958, -184.585, -4.12158, 0.74", "-196.12, -185.055, -4.12349, 0.74", "-196.348, -185.659, -4.11712, 0.44", "-196.568, -186.172, -4.10574, 0.29", "-196.83, -186.685, -4.06829, 0.29", "-197.451, -187.717, -3.93019, 0.44", "-197.819, -188.247, -3.85149, 0.59", "-198.191, -188.738, -3.77772, 0.59", "-198.636, -189.297, -3.71231, 0.52", "-199.323, -190.128, -3.64283, 1.33", "-199.895, -190.795, -3.61197, 2.06", "-200.434, -191.436, -3.61268, 2.21", "-200.828, -191.946, -3.64243, 2.21", "-201.402, -192.774, -3.73474, 0.81", "-201.753, -193.369, -3.8399, 0.29", "-202.022, -193.907, -3.96932, 0.44", "-202.189, -194.316, -4.07596, 0.44", "-202.4, -194.919, -4.22913, 0.29", "-202.558, -195.369, -4.35507, 0.29", "-202.758, -195.927, -4.51063, 0.29", "-202.907, -196.291, -4.60833, 0.74", "-203.064, -196.623, -4.68053, 0.88", "-203.268, -197.016, -4.74512, 0.88", "-203.598, -197.66, -4.81069, 0.29", "-203.925, -198.311, -4.82485, 0.29", "-204.223, -198.98, -4.78071, 0.29", "-204.544, -199.794, -4.68975, 0.52", "-204.685, -200.179, -4.63265, 0.52", "-204.919, -200.887, -4.4988, 0.29", "-205.049, -201.381, -4.37709, 0.29", "-205.246, -202.392, -4.08715, 0.59", "-205.336, -202.969, -3.89726, 0.29", "-205.397, -203.351, -3.75106, 0.29", "-205.506, -203.88, -3.5167, 0.74", "-205.732, -204.576, -3.15646, 0.88", "-205.98, -205.095, -2.85926, 0.29", "-206.284, -205.567, -2.55963, 0.29", "-206.731, -206.152, -2.19146, 0.96", "-207.11, -206.607, -1.93496, 1.11", "-207.604, -207.171, -1.68885, 1.11", "-208.139, -207.806, -1.48824, 0.29", "-208.487, -208.276, -1.38236, 0.22", "-208.766, -208.741, -1.32625, 0.44", "-209.033, -209.287, -1.30782, 0.44", "-209.4, -210.199, -1.3535, 0.22", "-209.605, -210.765, -1.41906, 0.22", "-209.746, -211.182, -1.49445, 0.22", "-209.908, -211.653, -1.59768, 0.59", "-210.023, -211.991, -1.675, 0.74", "-210.378, -212.984, -1.93032, 0.29", "-210.57, -213.509, -2.07594, 0.29", "-210.816, -214.162, -2.26351, 0.44", "-211.041, -214.787, -2.4443, 0.44", "-211.322, -215.619, -2.67167, 0.52", "-211.481, -216.095, -2.79201, 0.96", "-211.643, -216.573, -2.89617, 1.4", "-211.825, -217.055, -2.99941, 1.4", "-212.292, -218.179, -3.16437, 0.29", "-212.779, -219.279, -3.25336, 0.22", "-213.03, -219.819, -3.25691, 0.37", "-213.443, -220.683, -3.20107, 0.37", "-213.865, -221.535, -3.096, 0.29", "-214.45, -222.65, -2.89579, 0.74", "-214.774, -223.221, -2.76013, 1.11", "-215.151, -223.823, -2.60062, 1.25", "-215.554, -224.414, -2.4461, 1.11", "-215.946, -224.952, -2.31524, 0.59", "-216.467, -225.639, -2.18216, 0.29", "-216.785, -226.047, -2.15334, 0.29", "-217.384, -226.82, -2.13763, 0.22", "-217.783, -227.347, -2.1453, 0.22", "-218.005, -227.648, -2.1534, 0.66", "-218.347, -228.119, -2.16713, 0.66", "-219.039, -229.105, -2.17611, 0.29", "-219.458, -229.7, -2.17018, 0.29", "-219.899, -230.294, -2.15385, 0.29", "-220.362, -230.879, -2.13358, 0.66", "-220.736, -231.323, -2.11769, 0.66", "-221.338, -232.005, -2.09493, 0.22", "-221.755, -232.46, -2.084, 0.22", "-222.456, -233.223, -2.07704, 0.22", "-223.685, -234.568, -2.10639, 0.22", "-224.055, -235.0, -2.13813, 0.22", "-224.439, -235.492, -2.19799, 1.11", "-224.647, -235.796, -2.25507, 1.11", "-224.745, -235.972, -2.29478, 1.11", "-224.939, -236.436, -2.41145, 0.66", "-225.179, -237.205, -2.62704, 0.22", "-225.294, -237.679, -2.75962, 0.52", "-225.475, -238.772, -3.06154, 0.22", "-225.616, -239.662, -3.29967, 0.22", "-225.676, -240.044, -3.3974, 0.59", "-225.751, -240.529, -3.51379, 0.59", "-225.858, -241.232, -3.68368, 0.52", "-226.005, -242.268, -3.93991, 0.22", "-226.078, -242.875, -4.09382, 0.22", "-226.108, -243.237, -4.18684, 0.22", "-226.133, -243.649, -4.29429, 0.66", "-226.138, -244.249, -4.41375, 0.81", "-226.082, -244.919, -4.4938, 0.59", "-225.859, -245.899, -4.49777, 1.25", "-225.655, -246.428, -4.45154, 1.69", "-225.505, -246.693, -4.40508, 1.92", "-224.834, -247.561, -4.17566, 1.18", "-224.152, -248.23, -3.9213, 0.22", "-223.328, -248.857, -3.62435, 0.22", "-222.759, -249.211, -3.43031, 0.22", "-222.039, -249.611, -3.21624, 0.22", "-221.518, -249.885, -3.08818, 0.66", "-221.132, -250.085, -3.02438, 0.66", "-220.087, -250.624, -2.90168, 0.22", "-219.69, -250.835, -2.87146, 0.37", "-219.29, -251.089, -2.84745, 0.37", "-218.969, -251.337, -2.82571, 0.22", "-218.487, -251.766, -2.79362, 0.22", "-221.662, -258.752, -2.96686, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-172.882, -119.459, 0.028297, 0.37", "-174.479, -119.072, 0.067724, 0.37", "-175.15, -118.944, 0.0602671, 0.37", "-176.583, -118.738, -0.040778, 0.29", "-177.673, -118.626, -0.14952, 0.44", "-178.726, -118.556, -0.273837, 0.66", "-179.33, -118.535, -0.359891, 0.81", "-179.854, -118.543, -0.460755, 0.81", "-181.474, -118.63, -0.838465, 0.22", "-181.981, -118.675, -0.981742, 0.22", "-182.892, -118.762, -1.2403, 0.74", "-183.639, -118.831, -1.4591, 0.88", "-184.878, -118.961, -1.85785, 0.22", "-185.384, -119.014, -2.06754, 0.22", "-185.85, -119.075, -2.30159, 0.22", "-186.377, -119.159, -2.59916, 0.74", "-186.932, -119.287, -2.9512, 0.88", "-187.532, -119.511, -3.40904, 0.88", "-188.835, -120.233, -4.59435, 0.22", "-189.292, -120.539, -5.05157, 0.22", "-189.665, -120.813, -5.45665, 0.74", "-190.121, -121.211, -6.04593, 0.74", "-191.081, -122.037, -7.17933, 0.29", "-191.385, -122.29, -7.50585, 0.29", "-191.887, -122.695, -7.99351, 0.88", "-192.492, -123.132, -8.54553, 1.03", "-194.332, -124.288, -10.1299, 0.22", "-196.092, -125.288, -11.5426, 0.22", "-196.811, -125.646, -12.0588, 0.22", "-197.24, -125.847, -12.3498, 1.11", "-197.761, -126.087, -12.6783, 1.11", "-198.326, -126.323, -12.973, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-25.8142, -173.414, -1.9752, 0.81", "-24.4685, -174.118, -2.39921, 0.81", "-23.3824, -174.622, -2.75803, 0.52", "-21.8369, -175.283, -3.28906, 0.52", "-21.1632, -175.581, -3.52746, 0.37", "-19.8191, -176.196, -4.01109, 0.37", "-19.2857, -176.449, -4.2045, 0.66", "-18.8137, -176.675, -4.39374, 0.88", "-18.4206, -176.868, -4.54719, 0.88", "-17.4179, -177.464, -4.94297, 0.59", "-16.5303, -178.11, -5.29638, 0.66", "-15.6473, -178.851, -5.64629, 0.74", "-15.1069, -179.302, -5.85864, 0.74", "-14.6864, -179.624, -6.02149, 0.52", "-13.9997, -180.091, -6.28754, 0.29", "-13.2612, -180.487, -6.55702, 0.96", "-12.586, -180.791, -6.78854, 1.03", "-12.1379, -180.974, -6.92972, 1.03", "-11.1129, -181.37, -7.22466, 0.66", "-10.6827, -181.541, -7.35048, 0.52", "-9.69543, -181.949, -7.64245, 0.59", "-8.71891, -182.41, -7.93553, 0.59", "-7.82381, -182.893, -8.21346, 0.52", "-7.08634, -183.345, -8.45291, 0.52", "-6.31715, -183.867, -8.7145, 0.96", "-5.84108, -184.2, -8.89218, 1.18", "-5.05786, -184.737, -9.21103, 0.66", "-4.13481, -185.318, -9.59429, 0.37", "-3.55748, -185.645, -9.83734, 0.37", "-2.36197, -186.252, -10.3454, 0.88", "-1.29569, -186.767, -10.765, 1.03", "-0.481498, -187.16, -11.0705, 0.81", "0.273798, -187.523, -11.3337, 0.52", "1.16629, -187.952, -11.6197, 0.52", "1.86944, -188.304, -11.8228, 0.52", "2.84435, -188.863, -12.0773, 0.52", "3.66948, -189.394, -12.2724, 1.33", "4.18553, -189.763, -12.3892, 1.69", "4.77765, -190.241, -12.5187, 1.69", "5.74253, -191.093, -12.809, 1.11", "6.76852, -192.035, -13.2009, 0.44", "7.41649, -192.618, -13.5186, 0.44", "7.9319, -193.069, -13.8117, 0.29", "8.50652, -193.561, -14.1982, 0.29", "9.78821, -194.611, -15.1635, 1.03", "10.1557, -194.898, -15.4698, 1.4", "10.5455, -195.21, -15.8279, 1.4", "11.7679, -196.307, -17.0447, 0.22", "12.4126, -196.921, -17.6966, 0.52", "12.7313, -197.238, -18.0113, 0.52", "13.2819, -197.84, -18.5316, 0.29", "14.0494, -198.712, -19.2672, 0.29", "14.5223, -199.254, -19.7066, 0.29", "14.998, -199.832, -20.1564, 0.66", "15.3548, -200.267, -20.4606, 0.81", "15.6166, -200.585, -20.6719, 0.81", "16.0649, -201.081, -20.9933, 0.59", "16.5803, -201.587, -21.3401, 0.29", "17.0782, -202.091, -21.6417, 0.29", "17.6427, -202.752, -21.9485, 0.66", "18.0773, -203.34, -22.1346, 0.66", "18.6576, -204.249, -22.3046, 0.29", "18.9851, -204.839, -22.3479, 0.29", "19.5328, -205.923, -22.342, 0.66", "19.9113, -206.695, -22.2841, 0.66", "20.378, -207.706, -22.1459, 0.44", "20.8145, -208.74, -21.9566, 1.47", "21.1339, -209.574, -21.7788, 1.84", "21.3082, -210.064, -21.6715, 1.84", "21.4092, -210.368, -21.6185, 1.84", "21.6725, -211.143, -21.4995, 1.33", "22.012, -212.076, -21.384, 0.52", "22.1992, -212.568, -21.3318, 0.52", "22.457, -213.235, -21.263, 0.52", "22.8718, -214.3, -21.1438, 0.29", "23.0938, -214.852, -21.0769, 0.29", "23.4326, -215.638, -20.9682, 0.29", "23.7672, -216.362, -20.8585, 0.44", "24.2735, -217.335, -20.7189, 0.44", "24.7461, -218.126, -20.6344, 0.44", "25.1132, -218.676, -20.6064, 1.33", "25.538, -219.306, -20.6177, 1.84", "25.9527, -219.862, -20.6635, 1.84", "26.6556, -220.721, -20.7748, 0.96", "27.5825, -221.768, -20.9587, 0.22", "28.3746, -222.613, -21.1397, 0.22", "29.4989, -223.748, -21.4276, 0.22", "30.1805, -224.384, -21.6124, 0.22", "30.959, -225.035, -21.8315, 0.22", "31.6478, -225.556, -22.0415, 0.44", "32.4686, -226.124, -22.3184, 0.88", "33.2544, -226.646, -22.6186, 1.03", "33.7667, -226.984, -22.8272, 1.03", "34.3611, -227.407, -23.0792, 0.88", "34.9545, -227.806, -23.3381, 0.29", "35.3862, -228.075, -23.5119, 0.29", "36.0591, -228.452, -23.7389, 0.29", "36.9186, -228.887, -23.9816, 0.37", "37.5764, -229.187, -24.1281, 0.37", "38.1609, -229.424, -24.2306, 0.29", "39.2952, -229.822, -24.3836, 0.29", "40.1859, -230.109, -24.4995, 0.81", "40.6846, -230.268, -24.5705, 0.81", "41.6417, -230.627, -24.7076, 0.59", "42.3383, -230.965, -24.7945, 0.29", "42.9347, -231.312, -24.856, 0.29", "43.5592, -231.723, -24.9058, 0.66", "44.0206, -232.046, -24.9226, 0.66", "45.3977, -233.038, -24.9083, 0.29", "46.274, -233.664, -24.8438, 0.29", "47.1862, -234.315, -24.7033, 0.29", "47.8797, -234.817, -24.5436, 0.29", "48.5699, -235.308, -24.3335, 0.88", "48.8816, -235.527, -24.2331, 0.88", "49.7148, -236.115, -23.9309, 0.66", "50.8617, -236.912, -23.4634, 0.29", "51.4532, -237.33, -23.1941, 0.29", "52.1512, -237.843, -22.8706, 0.66", "52.7335, -238.291, -22.6284, 0.44", "60.8609, -245.025, -22.7733, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-25.8142, -173.414, -1.9752, 2.14", "-26.4294, -174.839, -2.19599, 2.14", "-26.9332, -176.14, -2.3747, 1.33", "-27.384, -177.421, -2.52693, 1.03", "-27.6763, -178.396, -2.62407, 1.03", "-27.8588, -179.06, -2.68509, 1.25", "-28.0294, -179.71, -2.74054, 1.25", "-28.28, -180.939, -2.82621, 0.96", "-28.4562, -181.935, -2.86925, 0.96", "-28.776, -183.683, -2.92562, 0.88", "-28.9659, -184.713, -2.93495, 0.88", "-29.1184, -185.69, -2.93014, 0.96", "-29.2561, -186.806, -2.91074, 0.96", "-29.3505, -187.759, -2.87437, 0.74", "-29.424, -188.678, -2.82347, 0.52", "-29.4735, -189.442, -2.76522, 0.52", "-29.5239, -190.38, -2.67784, 0.37", "-29.5602, -191.128, -2.6058, 0.74", "-29.6157, -191.94, -2.52345, 0.74", "-29.6869, -192.855, -2.41762, 1.03", "-29.7421, -193.437, -2.34518, 1.18", "-29.8315, -194.241, -2.24992, 1.33", "-29.9138, -194.848, -2.17377, 1.33", "-29.9871, -195.495, -2.0608, 1.18", "-30.0765, -196.44, -1.79496, 0.96", "-30.1326, -197.165, -1.51156, 0.81", "-30.1715, -197.898, -1.16925, 0.81", "-30.18, -198.704, -0.754828, 0.81", "-30.1733, -199.41, -0.383367, 0.59", "-30.1476, -200.575, 0.20229, 0.66", "-30.1594, -201.071, 0.428587, 0.66", "-30.2543, -201.958, 0.754577, 1.18", "-30.4905, -202.868, 0.958471, 1.47", "-30.8236, -203.648, 1.02251, 1.55", "-31.1696, -204.212, 1.00574, 1.55", "-31.7686, -204.969, 0.926206, 1.4", "-32.6179, -205.842, 0.828917, 1.18", "-33.6419, -206.762, 0.733311, 0.66", "-34.498, -207.482, 0.676397, 0.74", "-35.6128, -208.387, 0.635974, 1.18", "-36.5347, -209.114, 0.645361, 1.25", "-37.4997, -209.863, 0.712378, 1.25", "-38.3148, -210.484, 0.830844, 1.25", "-39.1404, -211.063, 0.999533, 1.33", "-39.6148, -211.355, 1.12652, 1.33", "-40.3748, -211.754, 1.40152, 1.03", "-41.0249, -212.04, 1.69579, 0.74", "-41.5414, -212.234, 1.95713, 0.59", "-42.2187, -212.492, 2.32397, 0.59", "-42.8931, -212.789, 2.70382, 0.88", "-43.5603, -213.192, 3.11112, 1.18", "-44.1747, -213.684, 3.53806, 1.18", "-44.7089, -214.21, 3.95033, 1.18", "-45.207, -214.794, 4.34768, 1.18", "-45.5901, -215.304, 4.65046, 1.18", "-46.122, -216.086, 5.06232, 0.81", "-46.4424, -216.603, 5.30001, 0.59", "-46.7392, -217.142, 5.50713, 0.52", "-47.3133, -218.291, 5.87241, 0.96", "-47.6479, -219.06, 6.06068, 1.18", "-47.9312, -219.776, 6.19294, 1.18", "-48.3018, -220.751, 6.32074, 0.88", "-48.6659, -221.733, 6.41531, 0.59", "-48.9667, -222.616, 6.48388, 0.59", "-49.2956, -223.645, 6.55698, 0.59", "-49.6019, -224.606, 6.62654, 0.74", "-49.9589, -225.68, 6.71008, 1.33", "-50.28, -226.613, 6.78656, 1.69", "-50.6919, -227.766, 6.88534, 1.77", "-50.9281, -228.443, 6.94027, 1.77", "-51.2233, -229.297, 6.98584, 1.77", "-51.4719, -230.117, 6.99651, 1.47", "-51.711, -231.028, 6.97117, 1.03", "-51.9328, -231.923, 6.91893, 1.03", "-52.1937, -232.968, 6.83104, 1.03", "-52.4508, -234.051, 6.73439, 1.11", "-52.6763, -235.072, 6.64871, 1.33", "-52.8431, -236.004, 6.58003, 1.03", "-53.0015, -237.267, 6.5003, 0.81", "-53.0733, -238.153, 6.45696, 1.03", "-53.1184, -239.267, 6.41993, 0.81", "-53.1241, -239.876, 6.4108, 0.81", "-53.1028, -241.523, 6.38885, 0.74", "-53.0471, -243.179, 6.36875, 0.74", "-52.9725, -244.511, 6.34902, 0.74", "-52.8671, -246.456, 6.32167, 0.74", "-52.8283, -247.797, 6.30055, 0.74", "-52.8393, -248.668, 6.29326, 1.18", "-52.9187, -249.561, 6.30832, 1.4", "-53.1031, -250.486, 6.36216, 1.4", "-53.3979, -251.362, 6.45949, 1.47", "-53.9055, -252.326, 6.62688, 1.55", "-54.3148, -252.9, 6.75491, 1.55", "-55.0955, -253.793, 6.99958, 1.11", "-56.1342, -254.793, 7.33219, 0.88", "-56.8924, -255.441, 7.60215, 0.88", "-57.7616, -256.105, 7.93777, 1.03", "-58.3629, -256.537, 8.1759, 1.03", "-58.8389, -256.888, 8.37131, 1.03", "-59.5294, -257.481, 8.69256, 0.81", "-60.3176, -258.323, 9.09335, 0.59", "-61.1723, -259.482, 9.55597, 0.59", "-61.7049, -260.384, 9.86345, 0.88", "-62.098, -261.222, 10.1113, 0.88", "-62.5951, -262.538, 10.4387, 0.74", "-62.8658, -263.444, 10.6244, 0.96", "-63.0848, -264.337, 10.7545, 1.11", "-63.2121, -264.979, 10.8273, 1.11", "-63.3394, -265.654, 10.8782, 0.88", "-63.5375, -266.58, 10.8966, 0.66", "-63.6959, -267.23, 10.8908, 0.66", "-63.9594, -268.322, 10.8832, 0.96", "-64.1538, -269.158, 10.8725, 0.96", "-64.3929, -270.227, 10.8515, 0.66", "-64.6113, -271.202, 10.8305, 0.74", "-64.9479, -272.768, 10.8129, 0.96", "-65.13, -273.673, 10.8282, 0.96", "-65.3131, -274.617, 10.8486, 0.96", "-65.5367, -275.698, 10.8561, 0.66", "-65.8782, -277.293, 10.8378, 0.66", "-66.176, -278.816, 10.7667, 0.66", "-66.3393, -279.725, 10.6909, 0.81", "-66.5988, -281.314, 10.5153, 0.74", "-66.7815, -282.573, 10.3411, 0.74", "-66.9391, -283.901, 10.1245, 0.96", "-67.0463, -285.015, 9.92162, 0.96", "-67.114, -285.755, 9.79352, 1.62", "-67.1691, -286.162, 9.74581, 1.62", "-67.2651, -286.698, 9.73719, 1.62", "-67.4312, -287.483, 9.77603, 1.4", "-67.6383, -288.304, 9.85422, 0.88", "-67.9148, -289.355, 9.98205, 0.59", "-68.2788, -290.785, 10.1717, 0.81", "-68.5705, -291.937, 10.3346, 0.96", "-68.7951, -292.866, 10.4571, 0.96", "-69.0484, -293.988, 10.5804, 1.11", "-69.2165, -294.722, 10.6512, 1.11", "-69.3602, -295.288, 10.7, 1.33", "-69.5127, -295.84, 10.7448, 1.33", "-69.8194, -296.736, 10.8473, 1.03", "-70.1932, -297.62, 10.9849, 0.66", "-70.5059, -298.279, 11.1063, 0.37", "-70.7426, -298.76, 11.1996, 0.37", "-71.0295, -299.391, 11.3183, 0.37", "-71.2866, -299.99, 11.4298, 1.03", "-71.5645, -300.657, 11.5518, 1.25", "-71.7437, -301.153, 11.6362, 1.25", "-72.0272, -302.081, 11.7743, 0.96", "-72.3398, -303.248, 11.925, 0.52", "-72.6085, -304.298, 12.0456, 0.52", "-72.9593, -305.762, 12.1902, 0.52", "-73.208, -306.955, 12.2893, 0.81", "-73.3814, -307.825, 12.3621, 1.03", "-73.5445, -308.611, 12.432, 1.03", "-73.6767, -309.217, 12.4874, 0.81", "-73.8528, -309.947, 12.555, 0.81", "-74.1402, -310.971, 12.6506, 0.59", "-74.5161, -312.044, 12.7582, 0.44", "-75.109, -313.392, 12.9321, 0.88", "-75.4166, -313.969, 13.0247, 0.88", "-75.8824, -314.714, 13.1664, 0.59", "-76.3794, -315.348, 13.3228, 0.59", "-77.1797, -316.14, 13.5668, 0.59", "-78.0525, -316.831, 13.821, 0.81", "-78.5536, -317.16, 13.9665, 0.81", "-78.9593, -317.396, 14.0837, 0.81", "-79.8798, -317.851, 14.3438, 0.59", "-80.8944, -318.256, 14.6272, 0.88", "-81.9067, -318.578, 14.9035, 1.03", "-82.8762, -318.836, 15.161, 1.03", "-83.6776, -319.007, 15.3781, 0.59", "-84.3979, -319.141, 15.5835, 0.59", "-85.0074, -319.256, 15.7662, 0.59", "-85.5263, -319.353, 15.9398, 0.59", "-86.0765, -319.481, 16.1313, 0.59", "-86.7922, -319.685, 16.3926, 0.44", "-87.8584, -320.065, 16.7969, 0.81", "-88.7422, -320.449, 17.1484, 1.11", "-89.6986, -320.944, 17.5505, 0.81", "-90.6498, -321.521, 17.9654, 0.66", "-91.0837, -321.822, 18.158, 0.66", "-91.6038, -322.235, 18.3915, 0.52", "-92.1949, -322.753, 18.6651, 0.52", "-92.79, -323.342, 18.946, 0.52", "-93.3851, -323.976, 19.2318, 0.52", "-93.7424, -324.397, 19.4067, 1.11", "-94.5348, -325.423, 19.786, 1.4", "-94.9631, -326.039, 19.986, 1.84", "-95.4361, -326.785, 20.1894, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.23079, -73.8707, -9.41864, 0.66", "-9.32212, -75.8234, -9.40717, 0.66", "-9.39964, -77.0266, -9.40478, 0.37", "-9.44527, -77.8298, -9.43338, 0.81", "-9.48487, -78.8674, -9.49316, 1.03", "-9.52027, -79.7691, -9.55246, 1.11", "-9.5653, -80.7309, -9.63193, 0.88", "-9.62224, -81.8374, -9.76552, 0.59", "-9.65819, -83.1242, -9.9658, 0.29", "-9.65646, -84.0565, -10.1397, 0.29", "-9.63456, -84.4834, -10.231, 0.29", "-9.51346, -85.4442, -10.4788, 0.74", "-9.32196, -86.3375, -10.7456, 1.11", "-9.16079, -86.9009, -10.9233, 1.11", "-8.89529, -87.7302, -11.1889, 1.11", "-8.55874, -88.6932, -11.4581, 0.81", "-7.99758, -90.2851, -11.8246, 0.44", "-7.48718, -91.8, -12.0942, 0.59", "-7.21564, -92.7136, -12.2172, 0.88", "-6.98123, -93.6768, -12.3008, 0.88", "-6.72174, -95.0578, -12.3634, 0.81", "-6.54408, -96.4155, -12.3573, 0.44", "-6.46232, -97.4882, -12.2955, 1.03", "-6.42714, -98.3868, -12.2252, 0.74", "-6.40638, -99.5128, -12.1444, 0.52", "-6.40218, -100.384, -12.0969, 0.88", "-6.41757, -101.182, -12.1053, 1.18", "-6.43311, -101.874, -12.1268, 1.18", "-6.461, -102.666, -12.1605, 0.88", "-6.51629, -104.042, -12.2356, 0.29", "-6.56725, -105.082, -12.3067, 0.29", "-6.65361, -106.57, -12.4426, 1.03", "-6.70569, -107.558, -12.5509, 1.47", "-6.73989, -108.181, -12.6203, 1.47", "-6.77244, -108.867, -12.6979, 1.47", "-6.79543, -109.89, -12.813, 1.25", "-6.80252, -111.142, -12.9395, 0.44", "-6.78263, -112.176, -13.027, 0.44", "-6.75237, -113.186, -13.1194, 0.44", "-6.72929, -113.705, -13.1696, 0.59", "-6.67158, -114.924, -13.2892, 0.59", "-6.61004, -115.853, -13.3864, 0.37", "-6.55671, -116.629, -13.4674, 0.81", "-6.50804, -117.339, -13.5315, 1.03", "-6.47495, -117.859, -13.569, 1.03", "-6.44872, -118.504, -13.5997, 0.59", "-6.39992, -119.557, -13.6315, 0.22", "-6.34503, -120.216, -13.6485, 0.22", "-6.25786, -120.995, -13.6677, 0.22", "-6.14764, -121.833, -13.6878, 0.66", "-5.99897, -122.835, -13.7169, 0.88", "-5.74769, -124.296, -13.7674, 0.88", "-5.44195, -125.995, -13.8317, 0.96", "-5.20935, -127.274, -13.9024, 1.18", "-5.04084, -128.31, -13.9805, 0.66", "-4.91132, -129.16, -14.0489, 0.52", "-4.7008, -130.781, -14.1929, 0.52", "-4.56738, -132.033, -14.3129, 0.81", "-4.44864, -133.296, -14.445, 0.52", "-4.35839, -134.241, -14.5408, 0.52", "-4.2455, -135.358, -14.6781, 1.47", "-4.11877, -136.499, -14.8477, 1.77", "-4.00972, -137.379, -15.017, 1.77", "-3.93112, -137.885, -15.1295, 1.77", "-3.77252, -138.721, -15.3247, 1.25", "-3.56752, -139.69, -15.5549, 0.81", "-3.32527, -140.866, -15.8394, 0.44", "-3.01264, -142.341, -16.1896, 0.37", "-2.8201, -143.248, -16.3979, 0.52", "-2.57024, -144.345, -16.6423, 0.52", "-2.36891, -145.167, -16.8201, 0.66", "-2.0809, -146.248, -17.0565, 0.66", "-1.69533, -147.628, -17.4143, 0.88", "-1.3484, -148.785, -17.7589, 1.25", "-1.14277, -149.436, -17.9886, 1.25", "-0.950469, -149.994, -18.2121, 1.25", "-0.549299, -151.089, -18.6963, 1.11", "-0.18065, -152.054, -19.1562, 0.74", "0.152147, -152.9, -19.5862, 0.29", "0.346361, -153.401, -19.8524, 0.29", "0.802502, -154.622, -20.4845, 0.44", "1.05213, -155.324, -20.8167, 0.88", "1.25305, -155.964, -21.0734, 1.33", "1.4663, -156.723, -21.3224, 1.47", "1.6703, -157.55, -21.5411, 1.47", "1.8391, -158.287, -21.6997, 1.25", "2.0578, -159.295, -21.8779, 0.44", "2.3763, -160.777, -22.0429, 0.29", "2.61406, -161.955, -22.0989, 0.29", "2.83498, -163.159, -22.0923, 0.29", "2.9896, -164.121, -22.0436, 0.74", "3.07696, -164.802, -21.9827, 0.88", "3.1866, -166.188, -21.8055, 0.96", "3.20373, -167.373, -21.6296, 1.03", "3.15153, -168.266, -21.5062, 1.03", "3.04858, -169.156, -21.3808, 0.59", "2.9159, -170.106, -21.2551, 0.22", "2.83011, -170.704, -21.1949, 0.22", "2.63919, -172.079, -21.1357, 0.96", "2.5271, -172.893, -21.1254, 1.11", "2.42023, -173.789, -21.0929, 1.11", "2.34844, -174.646, -21.0326, 0.59", "2.30655, -175.518, -20.9516, 0.29", "2.29613, -176.263, -20.8625, 0.29", "2.29273, -176.885, -20.7694, 0.29", "2.29544, -178.234, -20.5405, 0.44", "2.30247, -179.378, -20.3154, 0.66", "2.31325, -180.587, -20.0654, 0.66", "2.3307, -181.46, -19.8934, 0.81", "2.35507, -182.43, -19.7258, 0.81", "2.38186, -183.357, -19.5843, 0.52", "2.38541, -184.533, -19.4374, 0.66", "2.37297, -185.404, -19.3346, 0.66", "2.29864, -186.869, -19.2345, 0.37", "2.19461, -188.165, -19.2125, 0.37", "2.07875, -189.198, -19.2429, 1.03", "1.93203, -190.234, -19.35, 1.47", "1.75125, -191.249, -19.5236, 1.62", "1.35449, -193.057, -19.9466, 0.88", "1.00898, -194.23, -20.319, 0.59", "0.668513, -195.12, -20.6751, 0.37", "-0.0154273, -196.551, -21.3241, 0.29", "-0.253008, -196.973, -21.5114, 0.29", "-0.641811, -197.577, -21.7566, 0.29", "-1.38377, -198.701, -22.1293, 0.29", "-2.12038, -199.763, -22.4788, 0.59", "-2.88606, -200.888, -22.8273, 0.59", "-3.36641, -201.586, -23.0355, 0.44", "-3.96512, -202.421, -23.3, 0.44", "-4.37015, -202.929, -23.5088, 0.29", "-4.97125, -203.65, -23.8746, 1.4", "-5.87289, -204.468, -24.4707, 1.62", "-6.72227, -205.023, -25.0127, 1.4", "-7.55725, -205.417, -25.513, 1.11", "-8.95625, -205.938, -26.2905, 0.81", "-9.73285, -206.204, -26.7153, 0.59", "-10.5889, -206.527, -27.2134, 0.74", "-11.411, -206.922, -27.7243, 0.81", "-12.0518, -207.433, -28.1631, 0.52", "-12.5239, -207.955, -28.5244, 0.52", "-12.9539, -208.541, -28.8488, 0.74", "-13.5449, -209.374, -29.3284, 0.74", "-13.853, -209.893, -29.5932, 0.74", "-14.167, -210.479, -29.9054, 0.52", "-14.6278, -211.405, -30.3466, 0.52", "-14.8778, -211.913, -30.5702, 0.52", "-15.3493, -212.914, -30.9416, 1.69", "-15.6315, -213.578, -31.1338, 2.14", "-16.138, -214.984, -31.4514, 1.55", "-16.5976, -216.463, -31.7083, 0.29", "-16.837, -217.328, -31.8241, 0.29", "-17.1455, -218.52, -31.9481, 0.44", "-17.4294, -219.657, -32.0236, 0.59", "-17.678, -220.667, -32.0646, 0.59", "-17.9258, -221.698, -32.0646, 0.29", "-18.0605, -222.252, -32.0656, 0.29", "-18.2457, -223.025, -32.0673, 0.96", "-18.3961, -223.703, -32.0704, 1.03", "-18.579, -224.646, -32.0833, 0.52", "-18.7746, -225.875, -32.1124, 0.29", "-18.8635, -226.574, -32.1323, 0.81", "-18.9495, -227.386, -32.1547, 0.96", "-19.0096, -228.011, -32.1738, 0.96", "-19.1132, -229.109, -32.2102, 0.29", "-19.2532, -230.361, -32.2467, 0.29", "-19.4225, -231.67, -32.3208, 1.47", "-19.5455, -232.586, -32.3914, 1.92", "-19.6012, -233.032, -32.4316, 1.92", "-19.7351, -234.14, -32.5243, 1.33", "-19.87, -235.373, -32.635, 0.29", "-19.9998, -236.629, -32.7591, 0.29", "-20.094, -237.632, -32.8732, 0.29", "-20.2902, -239.811, -33.1414, 0.29", "-20.4084, -241.294, -33.3156, 1.4", "-20.4678, -242.198, -33.4147, 2.14", "-20.4886, -242.592, -33.4548, 2.28", "-20.5128, -243.237, -33.5071, 2.28", "-20.5393, -243.903, -33.5397, 1.92", "-20.5837, -244.871, -33.5052, 0.88", "-20.6501, -246.351, -33.3599, 0.29", "-20.6865, -247.256, -33.2219, 0.29", "-20.721, -248.27, -33.0336, 0.29", "-20.77, -249.858, -32.7026, 0.29", "-20.8126, -251.484, -32.3622, 0.96", "-20.8337, -252.573, -32.1469, 1.62", "-20.8429, -253.189, -32.0299, 1.62", "-20.8525, -253.769, -31.9334, 1.62", "-20.8825, -255.018, -31.7789, 1.11", "-20.9328, -256.547, -31.7389, 0.29", "-20.9933, -257.684, -31.7866, 0.29", "-21.0556, -258.585, -31.8514, 0.59", "-21.0966, -259.032, -31.893, 0.66", "-21.1578, -259.572, -31.9495, 0.66", "-21.3632, -261.057, -32.1124, 0.29", "-21.6623, -262.777, -32.3342, 0.29", "-21.9355, -264.109, -32.5163, 0.96", "-22.1939, -265.158, -32.6527, 1.4", "-22.407, -265.944, -32.7421, 1.4", "-22.637, -266.757, -32.8189, 1.4", "-22.9503, -267.832, -32.8914, 0.88", "-23.339, -269.148, -32.9704, 0.29", "-23.6876, -270.35, -33.0244, 0.29", "-24.0543, -271.565, -33.0679, 0.44", "-24.3039, -272.334, -33.0826, 0.66", "-24.5155, -272.953, -33.0779, 0.66", "-24.8958, -274.055, -33.0217, 0.29", "-25.1205, -274.717, -32.9827, 0.29", "-25.4138, -275.562, -32.9701, 0.29", "-25.8461, -276.718, -33.0311, 0.29", "-26.1102, -277.377, -33.1117, 0.52", "-26.4722, -278.29, -33.2745, 0.66", "-26.7628, -279.201, -33.4247, 0.66", "-27.0798, -280.618, -33.6472, 1.4", "-27.2169, -281.86, -33.8534, 2.28", "-27.2379, -283.097, -34.0712, 2.5", "-27.1813, -283.792, -34.1794, 2.5", "-26.684, -286.225, -34.4908, 0.22", "-26.3662, -287.207, -34.5732, 0.22", "-25.7961, -288.453, -34.6182, 0.37", "-25.3615, -289.19, -34.6112, 0.44", "-24.5472, -290.275, -34.6967, 0.29", "-23.6556, -291.272, -34.9419, 0.88", "-23.1474, -291.737, -35.2257, 1.4", "-22.768, -292.067, -35.5224, 1.4", "-22.2782, -292.538, -36.0304, 1.11", "-20.8236, -294.155, -37.9632, 0.29", "-20.3857, -294.739, -38.6815, 0.29", "-19.7523, -295.761, -39.9025, 0.81", "-19.4558, -296.431, -40.5735, 0.81", "-19.0139, -297.86, -41.7611, 0.22", "-18.8875, -298.462, -42.1696, 0.22", "-18.7643, -299.398, -42.6241, 0.44", "-18.7168, -299.927, -42.8342, 0.59", "-18.5822, -302.151, -43.5467, 0.22", "-18.5503, -302.929, -43.7809, 0.74", "-18.5327, -303.62, -43.9749, 1.03", "-18.5038, -304.36, -44.1676, 1.03", "-18.4713, -305.084, -44.344, 0.74", "-18.4359, -305.757, -44.5056, 0.37", "-18.3253, -307.467, -44.925, 0.22", "-18.2335, -309.167, -45.3475, 0.22", "-18.1833, -310.448, -45.6576, 0.88", "-18.1571, -311.393, -45.8839, 1.62", "-18.1501, -311.914, -46.0074, 1.84", "-18.1566, -312.541, -46.1521, 1.84", "-18.2054, -313.833, -46.433, 0.52", "-18.2957, -314.925, -46.6615, 0.22", "-18.4117, -315.8, -46.8434, 0.22", "-18.5454, -316.553, -46.9961, 0.37", "-18.6099, -316.847, -47.0455, 0.37", "-18.809, -317.572, -47.1609, 0.22", "-18.9993, -318.161, -47.2479, 0.74", "-19.2321, -318.831, -47.3498, 0.74", "-19.455, -319.438, -47.4342, 0.59", "-19.9661, -320.75, -47.5998, 0.22", "-20.222, -321.357, -47.661, 0.22", "-20.6007, -322.169, -47.6913, 0.59", "-20.8983, -322.755, -47.6677, 0.59", "-21.2108, -323.359, -47.5791, 0.29", "-21.551, -323.976, -47.4497, 0.22", "-22.0869, -324.828, -47.2806, 0.37", "-22.8074, -325.849, -47.0839, 0.44", "-23.4942, -326.571, -47.0073, 0.59", "-24.4174, -327.303, -47.0317, 0.37", "-25.0107, -327.62, -47.1177, 0.22", "-26.5558, -328.102, -47.4982, 2.21", "-27.1602, -328.148, -47.7048, 2.5", "-29.569, -327.764, -48.6966, 0.22", "-30.321, -327.507, -49.0399, 0.22", "-31.3515, -326.947, -49.5957, 0.66", "-31.8496, -326.59, -49.9003, 0.66", "-32.5614, -325.98, -50.3743, 0.37", "-33.5608, -325.082, -51.0992, 1.92", "-33.9155, -324.764, -51.3676, 1.92", "-35.7398, -323.407, -52.8183, 0.44", "-36.5504, -322.92, -53.4717, 0.59", "-37.0362, -322.708, -53.8285, 0.37", "-37.783, -322.526, -54.2874, 0.37", "-38.5531, -322.423, -54.7327, 0.22", "-40.3805, -322.362, -55.6348, 0.29", "-41.0099, -322.441, -55.8478, 0.22", "-42.0358, -322.622, -56.1275, 0.22", "-43.4485, -322.865, -56.4709, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.23079, -73.8707, -9.41864, 0.74", "-10.4344, -74.6605, -9.45256, 0.74", "-10.911, -74.9415, -9.46607, 0.74", "-11.5985, -75.2916, -9.50528, 0.74", "-12.079, -75.4947, -9.54488, 0.52", "-12.5774, -75.6368, -9.61333, 0.52", "-13.0542, -75.7261, -9.70255, 0.88", "-13.4512, -75.6891, -9.84512, 0.88", "-14.0816, -75.5219, -10.1467, 0.59", "-14.4732, -75.3822, -10.3632, 0.37", "-15.0745, -75.1876, -10.7358, 0.37", "-15.4375, -75.1139, -10.9967, 1.11", "-15.7413, -75.1274, -11.2429, 1.47", "-16.0357, -75.1966, -11.4825, 1.47", "-16.2519, -75.2702, -11.6476, 1.47", "-16.7493, -75.4439, -12.0086, 0.96", "-17.1948, -75.5639, -12.3103, 0.59", "-17.6073, -75.6255, -12.5519, 0.59", "-18.0391, -75.6543, -12.7503, 0.59", "-18.4964, -75.6817, -12.9431, 0.81", "-18.9324, -75.7088, -13.1147, 0.81", "-19.2752, -75.7291, -13.2247, 0.81", "-19.6827, -75.7687, -13.3412, 0.81", "-20.1227, -75.9586, -13.5317, 0.22", "-20.3992, -76.4116, -13.7884, 0.22", "-20.5679, -76.776, -14.0026, 0.66", "-20.656, -76.9935, -14.1369, 0.88", "-20.7805, -77.3094, -14.3477, 0.88", "-20.9571, -77.6769, -14.6847, 0.44", "-21.2291, -78.0356, -15.1464, 1.4", "-21.4918, -78.2239, -15.5442, 2.14", "-21.6102, -78.2687, -15.7199, 2.58", "-21.8619, -78.2973, -16.0744, 2.36", "-22.5463, -78.2719, -17.0314, 1.69", "-22.9091, -78.2244, -17.5208, 0.37", "-23.3618, -78.1386, -18.0638, 0.37", "-23.7385, -78.064, -18.4711, 0.37", "-24.5113, -77.9447, -19.2281, 1.92", "-24.8344, -77.9164, -19.5204, 2.14", "-25.162, -77.922, -19.7921, 2.5", "-26.1258, -78.0524, -20.6158, 0.44", "-26.4249, -78.1251, -20.8783, 0.44", "-26.879, -78.2493, -21.3053, 0.44", "-27.2874, -78.3473, -21.7216, 0.44", "-27.7038, -78.4139, -22.166, 1.4", "-28.1547, -78.4638, -22.669, 2.06", "-28.552, -78.5021, -23.1528, 2.06", "-29.0327, -78.5137, -23.7713, 0.66", "-29.4025, -78.5062, -24.2955, 0.81", "-29.7909, -78.4966, -24.9048, 0.52", "-30.0919, -78.514, -25.4802, 1.77", "-30.2778, -78.5604, -25.9374, 2.28", "-30.7368, -78.8496, -27.4939, 1.33", "-30.8547, -79.0233, -28.1083, 1.77", "-30.9043, -79.1496, -28.5024, 1.77", "-30.9748, -79.4058, -29.2623, 0.74", "-31.0216, -79.6153, -29.8665, 0.52", "-31.1027, -79.9507, -30.7417, 0.52", "-31.1916, -80.3534, -31.6249, 0.88", "-31.3249, -80.7407, -32.432, 1.47", "-31.4953, -81.1251, -33.1882, 0.22", "-31.5956, -81.3251, -33.5511, 0.22", "-31.7341, -81.5989, -33.9855, 0.81", "-31.8737, -81.8983, -34.3784, 0.96", "-32.0538, -82.2991, -34.8355, 1.55", "-32.2239, -82.7008, -35.2243, 1.55", "-32.4107, -83.1388, -35.6287, 0.37", "-32.5456, -83.4497, -35.9221, 0.74", "-32.7195, -83.8332, -36.3116, 0.81", "-32.9346, -84.3371, -36.8505, 0.29", "-33.0218, -84.5795, -37.1096, 0.96", "-33.1273, -84.9352, -37.4835, 1.33", "-33.2352, -85.4348, -38.0024, 0.74", "-33.2848, -85.8526, -38.4204, 0.59", "-33.291, -86.5153, -39.0438, 0.29", "-33.2396, -86.946, -39.3997, 0.29", "-33.147, -87.3446, -39.7061, 0.29", "-33.0412, -87.6516, -39.9093, 1.18", "-32.9083, -87.9402, -40.0822, 1.69", "-32.6699, -88.3598, -40.3081, 1.33", "-32.2918, -88.9501, -40.6161, 0.22", "-32.1144, -89.22, -40.7615, 0.22", "-31.9011, -89.5696, -40.952, 0.96", "-31.7697, -89.8167, -41.0872, 1.11", "-31.5472, -90.2909, -41.3412, 0.52", "-31.2305, -91.056, -41.7394, 0.22", "-31.095, -91.4195, -41.926, 0.22", "-30.9627, -91.8177, -42.1317, 0.88", "-30.8757, -92.1078, -42.2963, 1.03", "-30.7358, -92.6087, -42.6059, 0.22", "-30.6705, -92.8394, -42.7563, 0.22", "-30.5666, -93.1759, -42.9835, 0.66", "-30.4412, -93.5503, -43.2338, 0.74", "-30.1335, -94.4206, -43.7915, 0.22", "-29.9187, -95.0552, -44.154, 0.22", "-29.6951, -95.8644, -44.5611, 0.96", "-29.627, -96.1715, -44.6979, 1.25", "-29.5736, -96.5842, -44.8515, 1.25", "-29.5424, -97.1977, -45.0297, 0.66", "-29.5744, -97.9549, -45.2032, 0.15", "-29.681, -98.6027, -45.341, 0.37", "-29.7623, -98.9039, -45.4125, 0.37", "-30.1366, -100.001, -45.7069, 0.22", "-30.2065, -100.17, -45.762, 0.74", "-30.3717, -100.53, -45.9004, 0.88", "-30.9334, -101.67, -46.3848, 0.22", "-31.1504, -102.099, -46.5696, 0.74", "-31.3675, -102.514, -46.7464, 0.74", "-31.8427, -103.417, -47.1385, 0.22", "-32.239, -104.175, -47.4569, 0.22", "-32.6846, -105.048, -47.776, 0.22", "-33.0886, -105.876, -48.0245, 0.22", "-33.3013, -106.328, -48.1307, 0.88", "-33.461, -106.686, -48.1932, 1.11", "-33.6045, -107.052, -48.2283, 1.11", "-33.9114, -107.948, -48.2665, 0.15", "-34.1212, -108.676, -48.2779, 0.15", "-34.2242, -109.08, -48.2778, 0.81", "-34.3067, -109.433, -48.2755, 0.96", "-34.5799, -110.754, -48.4204, 0.22", "-34.6965, -111.374, -48.5047, 0.22", "-34.8118, -112.059, -48.6409, 0.22", "-34.854, -112.334, -48.7094, 1.18", "-34.8913, -112.596, -48.7924, 1.18", "-35.1567, -114.522, -49.6885, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "24.6093, 146.897, -25.9606, 0.37", "24.8967, 146.43, -25.6353, 0.37", "25.1331, 146.081, -25.4001, 0.52", "25.4695, 145.608, -25.0821, 0.74", "25.7435, 145.234, -24.8383, 1.11", "25.9041, 145.023, -24.6981, 1.11", "26.1369, 144.718, -24.4922, 0.81", "26.6658, 144.061, -23.9891, 0.22", "26.9195, 143.739, -23.7462, 0.22", "27.079, 143.522, -23.6021, 0.66", "27.2411, 143.279, -23.4562, 0.66", "27.3972, 143.025, -23.3152, 0.66", "27.6839, 142.516, -23.036, 0.44", "27.941, 142.01, -22.7637, 0.22", "28.2049, 141.446, -22.4788, 0.22", "28.324, 141.172, -22.3478, 0.44", "28.4004, 140.982, -22.2725, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "24.6093, 146.897, -25.9606, 0.22", "26.35, 146.912, -26.5138, 0.22", "26.7447, 146.942, -26.6549, 0.44", "28.556, 147.186, -27.3125, 0.22", "29.3283, 147.317, -27.617, 0.59", "29.9113, 147.43, -27.8784, 0.59", "32.4118, 147.911, -28.9994, 0.22", "35.2781, 148.518, -30.3627, 0.22", "36.2976, 148.766, -30.872, 0.66", "37.0867, 149.0, -31.3008, 0.81", "38.2689, 149.382, -31.9834, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "19.2655, 220.991, 15.2233, 0.59", "20.4718, 222.057, 14.6404, 0.59", "20.8667, 222.416, 14.4667, 0.44", "21.6801, 223.203, 14.0863, 0.22", "22.3772, 223.931, 13.7653, 0.81", "22.7412, 224.333, 13.584, 0.96", "22.9074, 224.523, 13.4951, 0.96", "23.413, 225.188, 13.2084, 0.22", "24.0915, 226.263, 12.7136, 0.22", "24.6113, 227.271, 12.2347, 1.11", "24.8549, 227.833, 11.9741, 1.47", "24.9482, 228.11, 11.8392, 1.47", "25.2388, 229.324, 11.2611, 0.22", "25.397, 230.436, 10.7382, 0.22", "25.441, 231.09, 10.4398, 0.66", "25.4474, 231.416, 10.2875, 0.66", "25.3926, 232.968, 9.59306, 0.22", "25.2794, 234.381, 8.9855, 0.22", "25.1749, 235.185, 8.64323, 0.22", "25.0255, 236.12, 8.2544, 1.47", "24.9187, 236.651, 8.04763, 1.47", "24.4862, 238.443, 7.43313, 0.22", "24.3182, 239.023, 7.25699, 0.81", "24.1497, 239.509, 7.12888, 0.81", "23.6782, 240.692, 6.87518, 0.22", "23.2615, 241.627, 6.70513, 0.22", "22.7923, 242.597, 6.5529, 1.47", "22.5809, 242.999, 6.48174, 1.84", "21.7807, 244.458, 6.22109, 0.22", "21.1402, 245.574, 6.03067, 0.22", "20.8987, 245.961, 5.96361, 0.22", "20.2356, 246.973, 5.7519, 1.55", "19.8086, 247.584, 5.60382, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "19.2655, 220.991, 15.2233, 0.22", "20.3061, 224.278, 14.8512, 0.22", "20.9092, 226.062, 14.6646, 0.22", "21.392, 227.443, 14.5295, 0.96", "21.6052, 228.044, 14.4767, 1.18", "21.8284, 228.664, 14.4276, 1.18", "22.1905, 229.676, 14.3576, 0.22", "22.4671, 230.396, 14.3284, 0.44", "22.5974, 230.764, 14.3121, 0.44", "22.9417, 231.824, 14.2688, 0.22", "23.2324, 232.755, 14.2347, 0.44", "23.5492, 233.788, 14.1994, 0.44", "24.467, 236.946, 14.1146, 0.22", "25.2175, 239.608, 14.0248, 0.22", "25.4973, 240.609, 13.978, 0.66", "25.6494, 241.158, 13.9448, 0.74", "25.8917, 242.036, 13.8636, 0.22", "26.4949, 244.185, 13.6098, 0.22", "26.8446, 245.45, 13.441, 1.03", "27.0744, 246.29, 13.3183, 1.25", "27.2459, 246.924, 13.2207, 1.25", "27.8183, 249.063, 12.8784, 0.22", "28.7666, 252.58, 12.2965, 0.22", "29.0927, 253.765, 12.0993, 0.74", "29.2789, 254.447, 12.0045, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.29831, 61.1303, 8.46022, 0.37", "5.32123, 69.499, 12.3521, 0.37", "10.242, 77.3795, 16.3455, 0.37", "13.7416, 84.7575, 22.3636, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.29831, 61.1303, 8.46022, 0.22", "4.18329, 72.2563, 5.13101, 0.37", "6.75229, 82.8873, 0.135324, 0.37", "9.38034, 93.1478, -5.63707, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "100.8, -8.49594, 16.2979, 0.37", "109.262, -10.6106, 17.0053, 0.37", "117.97, -11.4033, 17.7188, 0.37", "126.607, -11.3251, 19.279, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "100.8, -8.49594, 16.2979, 0.22", "107.127, -10.1589, 16.8765, 0.37", "113.684, -10.706, 17.1578, 0.37", "120.169, -11.6227, 17.8078, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "52.8302, 4.78393, 8.52825, 0.52", "53.5765, 4.93933, 8.80248, 0.52", "53.864, 4.98907, 8.9182, 0.52", "54.1581, 5.0426, 9.06178, 0.52", "54.7181, 5.14701, 9.35751, 0.52", "55.0503, 5.20561, 9.54546, 0.88", "55.5577, 5.28404, 9.83404, 0.88", "55.9342, 5.33784, 10.0437, 0.88", "56.3262, 5.35369, 10.2936, 0.81", "56.5694, 5.30604, 10.468, 0.81", "56.9193, 5.14114, 10.7578, 0.59", "57.1886, 4.93636, 10.9993, 0.59", "57.4721, 4.65179, 11.2492, 0.59", "57.7529, 4.32901, 11.474, 0.74", "58.1858, 3.75855, 11.8127, 0.66", "58.3596, 3.50191, 11.9556, 0.66", "58.6161, 3.08098, 12.1819, 0.52", "58.7893, 2.78895, 12.3346, 0.52", "59.0162, 2.42201, 12.5196, 0.81", "59.2993, 1.96303, 12.7442, 0.81", "59.4829, 1.64904, 12.9037, 0.81", "59.6975, 1.23769, 13.1086, 0.81", "59.9427, 0.698203, 13.3782, 0.88", "60.1277, 0.225672, 13.6159, 1.11", "60.2368, -0.084537, 13.7692, 1.11", "60.425, -0.704073, 14.0764, 0.88", "60.5351, -1.18482, 14.3313, 0.96", "60.5876, -1.54544, 14.5447, 0.96", "60.6089, -1.83539, 14.7355, 0.96", "60.618, -2.09387, 14.9179, 0.66", "60.6294, -2.48999, 15.2315, 0.66", "60.6607, -2.99288, 15.6799, 0.81", "60.7259, -3.38285, 16.0614, 1.11", "60.8456, -3.81321, 16.5188, 0.96", "60.973, -4.12563, 16.8472, 0.81", "61.1944, -4.52989, 17.2657, 0.81", "61.5006, -4.96209, 17.6976, 0.59", "61.7839, -5.3007, 18.0148, 0.37", "62.0577, -5.60148, 18.2757, 0.37", "62.4724, -6.0504, 18.6329, 0.59", "62.7022, -6.31195, 18.8116, 0.88", "62.8297, -6.47073, 18.9023, 1.11", "62.9892, -6.69015, 19.0251, 1.11", "63.1948, -6.98995, 19.2051, 0.74", "63.3627, -7.22007, 19.3443, 0.74", "63.5275, -7.45684, 19.4815, 0.74", "63.7772, -7.84365, 19.6784, 0.74", "64.0298, -8.26339, 19.8625, 0.74", "64.2606, -8.64929, 20.021, 0.66", "64.4816, -9.01532, 20.1606, 0.66", "64.7771, -9.50322, 20.3317, 0.96", "65.1246, -10.1014, 20.5192, 1.4", "65.2983, -10.4337, 20.6076, 1.62", "65.4733, -10.805, 20.6913, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "52.8302, 4.78393, 8.52825, 0.88", "53.8888, 5.65672, 8.73523, 0.88", "54.8337, 6.35321, 8.96395, 0.88", "55.8918, 7.01, 9.25033, 0.88", "57.0361, 7.60296, 9.57075, 0.88", "58.3874, 8.20469, 9.97405, 0.74", "59.2409, 8.56005, 10.2439, 0.74", "60.4411, 8.98355, 10.6706, 0.88", "61.516, 9.29601, 11.0677, 0.88", "62.4052, 9.51487, 11.3884, 0.88", "63.2697, 9.71494, 11.6905, 0.66", "63.8802, 9.87976, 11.8859, 0.66", "64.7128, 10.1947, 12.0883, 0.88", "65.2193, 10.4494, 12.1763, 0.88", "65.7096, 10.739, 12.2377, 0.88", "66.2098, 11.0459, 12.2894, 0.88", "67.1402, 11.6022, 12.3882, 0.59", "67.7946, 11.981, 12.5009, 0.59", "68.2916, 12.2893, 12.6217, 0.81", "68.941, 12.742, 12.8136, 0.81", "69.4376, 13.1402, 12.9782, 0.81", "69.9987, 13.6296, 13.1758, 0.66", "70.803, 14.3577, 13.4712, 0.59", "71.6645, 15.2723, 13.7748, 0.59", "72.1353, 15.8407, 13.9158, 0.59", "72.6808, 16.5554, 14.0353, 0.44", "73.0276, 17.0069, 14.0791, 0.44", "73.4051, 17.4788, 14.0956, 0.44", "74.3509, 18.6061, 14.0881, 0.44", "75.0986, 19.4485, 14.079, 0.66", "75.7227, 20.1344, 14.0696, 0.66", "76.4948, 20.972, 14.0521, 0.74", "77.098, 21.6247, 14.0341, 0.96", "77.5613, 22.1094, 14.0205, 0.96", "78.2409, 22.7478, 14.0087, 0.66", "78.9052, 23.3414, 14.0015, 0.66", "79.9585, 24.2631, 13.9917, 0.59", "80.9322, 25.1446, 14.0022, 0.59", "81.5603, 25.7293, 14.0214, 0.81", "82.0363, 26.1885, 14.0429, 0.81", "82.8469, 26.9422, 14.0938, 0.52", "83.4705, 27.472, 14.1437, 0.52", "84.2943, 28.1281, 14.2279, 0.52", "84.9867, 28.6656, 14.3032, 0.52", "85.6502, 29.1681, 14.3734, 0.37", "86.833, 30.0388, 14.4927, 0.37", "87.6121, 30.5986, 14.5625, 0.59", "88.1092, 30.9285, 14.5998, 0.59", "89.1668, 31.5948, 14.6524, 0.74", "89.7192, 31.9467, 14.6786, 0.74", "90.1892, 32.2618, 14.7041, 0.74", "90.8614, 32.7777, 14.7491, 0.74", "91.3187, 33.1419, 14.7436, 0.44", "91.9826, 33.6323, 14.6582, 0.44", "92.5578, 34.0069, 14.5406, 0.81", "93.5271, 34.5726, 14.2967, 0.81", "94.2416, 34.9381, 14.0808, 0.66", "95.4892, 35.5269, 13.6755, 0.52", "96.4473, 35.9742, 13.3154, 0.44", "97.084, 36.2477, 13.0397, 0.44", "97.644, 36.4766, 12.7676, 0.44", "98.0845, 36.6406, 12.5273, 0.44", "98.8168, 36.8889, 12.144, 0.74", "99.437, 37.1224, 11.9407, 0.59", "99.8552, 37.3219, 11.8278, 0.59", "107.265, 43.7374, 13.6327, 0.59", "114.902, 49.9195, 15.3853, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-95.4361, -326.785, 20.1894, 0.52", "-96.0734, -328.296, 20.2861, 0.52", "-96.3367, -328.908, 20.3356, 0.29", "-96.7028, -329.707, 20.4054, 0.44", "-97.0502, -330.449, 20.4684, 0.44", "-97.3277, -331.024, 20.5179, 0.29", "-97.7559, -331.859, 20.587, 0.29", "-98.1995, -332.652, 20.6574, 0.81", "-98.5467, -333.258, 20.6886, 1.18", "-98.7334, -333.589, 20.6956, 1.4", "-99.0311, -334.137, 20.6961, 1.4", "-99.2963, -334.665, 20.6854, 1.11", "-99.8267, -335.808, 20.6496, 0.52", "-100.186, -336.706, 20.6109, 0.44", "-100.436, -337.429, 20.5744, 0.74", "-100.72, -338.301, 20.5342, 0.81", "-100.923, -338.958, 20.5021, 0.81", "-101.12, -339.654, 20.4612, 0.74", "-101.346, -340.581, 20.4365, 0.22", "-101.442, -341.009, 20.429, 0.22", "-101.597, -341.764, 20.4051, 0.22", "-101.699, -342.419, 20.3908, 0.66", "-101.773, -343.106, 20.3929, 0.81", "-101.845, -344.214, 20.4197, 0.66", "-101.857, -345.226, 20.4678, 0.22", "-101.811, -346.132, 20.5229, 0.22", "-101.735, -346.795, 20.5697, 0.22", "-101.635, -347.44, 20.642, 0.96", "-101.586, -347.772, 20.6887, 1.18", "-101.517, -348.266, 20.7597, 1.18", "-101.452, -348.674, 20.8419, 1.18", "-101.36, -349.45, 20.9998, 0.74", "-101.287, -350.623, 21.2288, 0.22", "-101.28, -351.009, 21.3044, 0.22", "-101.282, -351.459, 21.395, 0.44", "-101.292, -351.847, 21.4662, 0.44", "-101.319, -352.862, 21.6247, 0.22", "-101.337, -353.498, 21.7002, 0.96", "-101.343, -353.983, 21.7314, 1.18", "-101.343, -354.447, 21.7517, 1.25", "-101.343, -355.33, 21.7796, 0.96", "-101.382, -356.597, 21.8206, 0.29", "-101.442, -357.593, 21.8511, 0.22", "-101.552, -358.715, 21.8804, 0.22", "-101.632, -359.292, 21.8985, 0.81", "-101.724, -359.761, 21.9176, 0.96", "-102.139, -361.39, 22.0168, 0.22", "-102.3, -361.899, 22.0591, 0.22", "-102.579, -362.709, 22.1428, 0.59", "-102.795, -363.302, 22.2154, 0.59", "-103.107, -364.193, 22.3242, 0.52", "-103.343, -364.927, 22.4124, 0.52", "-103.627, -365.926, 22.5411, 0.52", "-103.732, -366.319, 22.5952, 0.96", "-103.9, -366.993, 22.6891, 0.96", "-104.077, -367.752, 22.7956, 0.59", "-104.359, -369.038, 23.0124, 0.22", "-104.636, -370.366, 23.2395, 0.22", "-104.762, -370.989, 23.35, 0.22", "-104.881, -371.542, 23.456, 0.96", "-104.962, -371.92, 23.5345, 1.18", "-105.127, -372.673, 23.7123, 0.52", "-105.974, -381.75, 22.9438, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-95.4361, -326.785, 20.1894, 0.29", "-96.917, -326.299, 21.219, 0.29", "-97.7204, -326.275, 21.732, 0.37", "-98.0911, -326.371, 21.95, 0.37", "-98.9308, -326.738, 22.4627, 0.37", "-99.7758, -327.138, 22.8604, 0.52", "-100.53, -327.5, 23.1624, 0.59", "-101.578, -328.102, 23.4862, 0.59", "-102.526, -328.667, 23.728, 0.37", "-103.411, -329.198, 23.9188, 0.37", "-105.006, -330.151, 24.1949, 0.37", "-105.746, -330.548, 24.3086, 0.37", "-106.433, -330.886, 24.4101, 0.29", "-106.979, -331.133, 24.4974, 0.29", "-107.591, -331.406, 24.6116, 0.81", "-108.075, -331.646, 24.7205, 0.81", "-108.707, -332.057, 24.9497, 0.81", "-109.76, -332.863, 25.3697, 0.29", "-110.253, -333.297, 25.5841, 0.66", "-110.612, -333.65, 25.7623, 0.66", "-110.939, -334.003, 25.9409, 0.66", "-112.097, -335.353, 26.6192, 0.29", "-112.612, -335.979, 26.9156, 0.44", "-113.058, -336.52, 27.1701, 0.29", "-113.598, -337.142, 27.4608, 0.74", "-114.005, -337.561, 27.6479, 0.74", "-114.694, -338.163, 27.9175, 0.52", "-115.942, -339.076, 28.3288, 0.29", "-116.694, -339.565, 28.552, 0.52", "-117.214, -339.866, 28.6755, 0.52", "-118.332, -340.444, 28.861, 0.29", "-119.172, -340.831, 28.9794, 0.29", "-119.687, -341.032, 29.0421, 0.59", "-120.305, -341.239, 29.096, 0.59", "-121.428, -341.594, 29.1683, 0.22", "-122.055, -341.785, 29.2202, 0.29", "-122.988, -342.081, 29.3288, 0.29", "-123.427, -342.229, 29.383, 0.29", "-124.548, -342.655, 29.5264, 0.37", "-125.368, -343.074, 29.7026, 0.37", "-126.178, -343.607, 29.9685, 0.52", "-127.083, -344.343, 30.3337, 1.55", "-127.615, -344.855, 30.5719, 1.92", "-128.113, -345.393, 30.821, 1.92", "-129.232, -346.737, 31.4703, 0.29", "-129.956, -347.685, 31.9112, 0.29", "-130.527, -348.506, 32.2861, 0.29", "-130.975, -349.171, 32.5983, 0.74", "-131.197, -349.504, 32.7548, 0.96", "-131.397, -349.788, 32.8892, 1.11", "-131.978, -350.626, 33.2719, 0.52", "-132.328, -351.191, 33.5452, 0.29", "-132.827, -352.01, 33.9795, 0.22", "-133.166, -352.544, 34.2861, 0.44", "-133.457, -352.98, 34.5529, 0.44", "-134.257, -354.174, 35.3078, 0.22", "-134.738, -354.884, 35.7771, 0.22", "-135.203, -355.542, 36.2262, 1.25", "-135.626, -356.138, 36.6529, 1.55", "-135.831, -356.409, 36.8546, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "65.4733, -10.805, 20.6913, 0.74", "66.2792, -11.2702, 22.1536, 0.74", "66.5197, -11.4249, 22.5577, 0.74", "66.9442, -11.7359, 23.2087, 0.59", "67.4611, -12.1656, 23.9163, 0.59", "67.9548, -12.6195, 24.5297, 0.59", "68.2055, -12.8592, 24.8245, 0.59", "68.7146, -13.3967, 25.3528, 0.59", "69.1571, -13.8831, 25.7766, 0.81", "69.7461, -14.5233, 26.3347, 0.81", "70.236, -15.0295, 26.7898, 0.37", "70.7468, -15.5174, 27.262, 0.37", "71.3416, -16.078, 27.8218, 0.37", "71.9375, -16.6473, 28.4197, 0.37", "72.5015, -17.1617, 29.0124, 0.37", "73.3389, -17.888, 29.9364, 0.22", "74.226, -18.6321, 30.9421, 0.22", "78.9544, -24.3013, 35.9419, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "65.4733, -10.805, 20.6913, 0.37", "65.2331, -11.9372, 21.2251, 0.37", "65.1357, -12.6299, 21.6037, 0.37", "65.0864, -13.2664, 21.9781, 0.37", "65.0811, -13.8834, 22.4187, 0.37", "65.1048, -14.4058, 22.8172, 0.37", "65.1615, -15.0051, 23.3042, 0.29", "65.3233, -15.8722, 23.9894, 0.22", "65.5321, -16.8309, 24.688, 0.22", "65.8373, -18.0757, 25.519, 0.22", "65.9563, -18.5563, 25.8084, 1.18", "66.0357, -18.981, 26.0118, 1.4", "66.1095, -20.3908, 26.4844, 1.4", "65.9939, -21.6086, 26.739, 0.44", "65.9002, -22.0258, 26.8054, 0.44", "65.6926, -22.6587, 26.8863, 0.29", "65.2706, -23.6622, 27.0503, 0.29", "64.6748, -24.8912, 27.2787, 0.22", "64.1615, -25.7529, 27.5184, 0.22", "63.8088, -26.2515, 27.666, 1.03", "63.6214, -26.494, 27.7491, 1.33", "63.3489, -26.8144, 27.8812, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-135.831, -356.409, 36.8546, 0.29", "-136.48, -355.673, 37.5628, 0.29", "-136.627, -355.509, 37.7151, 0.52", "-136.859, -355.25, 37.9437, 0.59", "-138.245, -353.76, 39.1545, 0.22", "-138.644, -353.345, 39.4798, 0.22", "-139.204, -352.781, 39.9118, 0.66", "-139.518, -352.473, 40.1211, 0.66", "-140.878, -351.207, 40.96, 0.22", "-141.45, -350.706, 41.2885, 0.22", "-141.98, -350.285, 41.5792, 0.52", "-142.358, -350.008, 41.7835, 0.66", "-143.396, -349.304, 42.3392, 0.22", "-145.454, -347.941, 43.4421, 0.22", "-146.78, -347.106, 44.1548, 0.22", "-147.991, -346.346, 44.8408, 1.18", "-148.331, -346.137, 45.0326, 1.4", "-148.852, -345.826, 45.3301, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-135.831, -356.409, 36.8546, 0.22", "-136.538, -357.638, 37.2014, 0.22", "-137.075, -358.652, 37.5307, 0.22", "-137.298, -359.109, 37.6801, 0.44", "-137.392, -359.31, 37.7459, 0.44", "-138.253, -361.234, 38.3573, 0.22", "-138.656, -362.135, 38.6435, 0.44", "-138.993, -362.892, 38.894, 0.22", "-139.195, -363.404, 39.0623, 0.59", "-139.361, -363.848, 39.211, 0.66", "-139.476, -364.19, 39.3272, 0.44", "-141.455, -372.115, 41.9163, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_ChC_0f9f727230_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.09245, -8.70554, -8.29973, 1.77 ) }
    dend_49 { pt3dadd( -2.6591, -10.0398, -8.51165, 1.77 ) }
    dend_49 { pt3dadd( -1.99677, -12.1312, -8.82439, 1.55 ) }
    dend_49 { pt3dadd( -1.60775, -13.518, -9.07277, 1.69 ) }
    dend_49 { pt3dadd( -1.34145, -14.5955, -9.2892, 1.77 ) }
    dend_49 { pt3dadd( -1.10815, -15.6438, -9.55098, 1.77 ) }
    dend_49 { pt3dadd( -0.811973, -17.0492, -9.99101, 1.25 ) }
    dend_49 { pt3dadd( -0.331875, -19.205, -10.5842, 0.74 ) }
    dend_49 { pt3dadd( -1.25475, -18.2657, -11.6005, 0.74 ) }
    dend_49 { pt3dadd( -1.97443, -17.9336, -12.682, 0.74 ) }
    dend_49 { pt3dadd( -3.23635, -17.4822, -14.6263, 1.18 ) }
    dend_49 { pt3dadd( -3.91471, -17.3689, -15.7347, 1.18 ) }
    dend_49 { pt3dadd( -4.93223, -17.1409, -17.267, 0.52 ) }
    dend_49 { pt3dadd( -6.13631, -16.7261, -18.9131, 0.52 ) }
    dend_49 { pt3dadd( -7.50501, -16.7862, -20.9936, 0.74 ) }
    dend_49 { pt3dadd( -8.08179, -17.0882, -22.4088, 0.74 ) }
    dend_49 { pt3dadd( -8.35696, -17.5537, -23.6438, 0.74 ) }
    dend_49 { pt3dadd( -8.80105, -18.1535, -25.5077, 1.11 ) }
    dend_49 { pt3dadd( -9.19748, -18.4666, -26.7008, 1.69 ) }
    dend_49 { pt3dadd( -9.84629, -18.6821, -27.9054, 1.77 ) }
    dend_49 { pt3dadd( -11.3244, -19.0968, -30.5675, 1.33 ) }
    dend_49 { pt3dadd( -12.1111, -19.4679, -32.1903, 1.4 ) }
    dend_49 { pt3dadd( -12.5745, -19.9622, -33.4091, 1.55 ) }
    dend_49 { pt3dadd( -12.838, -20.7845, -34.6854, 1.33 ) }
    dend_49 { pt3dadd( -12.8667, -22.2021, -36.3054, 0.74 ) }
    dend_49 { pt3dadd( -12.6201, -23.3628, -37.2468, 1.03 ) }
    dend_49 { pt3dadd( -12.2599, -24.3373, -37.8419, 1.47 ) }
    dend_49 { pt3dadd( -11.8778, -24.9778, -38.2694, 1.62 ) }
    dend_49 { pt3dadd( -11.2724, -25.7426, -38.8589, 1.62 ) }
    dend_49 { pt3dadd( -10.5863, -26.3574, -39.4015, 0.52 ) }
    dend_49 { pt3dadd( -9.7708, -26.9356, -40.0, 0.52 ) }
    dend_49 { pt3dadd( -9.5679, -27.2378, -40.5145, 0.52 ) }
    dend_49 { pt3dadd( -9.60915, -27.8563, -41.847, 0.66 ) }
    dend_49 { pt3dadd( -9.87294, -28.4637, -43.2551, 0.74 ) }
    dend_49 { pt3dadd( -10.3032, -28.7115, -44.2482, 0.44 ) }
    dend_49 { pt3dadd( -11.0445, -28.7085, -45.299, 0.44 ) }
    dend_49 { pt3dadd( -12.1371, -28.5809, -46.6352, 0.44 ) }
    dend_49 { pt3dadd( -12.9139, -28.656, -47.824, 0.44 ) }
    dend_49 { pt3dadd( -13.3458, -28.8039, -48.667, 0.44 ) }
    dend_49 { pt3dadd( -14.1488, -29.298, -50.3053, 0.66 ) }
    dend_49 { pt3dadd( -14.5408, -30.065, -51.9604, 1.11 ) }
    dend_49 { pt3dadd( -14.7438, -30.3461, -52.5354, 0.96 ) }
    dend_49 { pt3dadd( -15.274, -30.9388, -53.8532, 1.18 ) }
    dend_49 { pt3dadd( -15.4803, -31.1925, -54.3684, 1.69 ) }
    dend_49 { pt3dadd( -15.8157, -31.5829, -55.1151, 1.69 ) }
    dend_49 { pt3dadd( -17.0936, -32.9651, -57.6138, 0.88 ) }
    dend_49 { pt3dadd( -17.8741, -33.6226, -58.9185, 2.14 ) }
    dend_49 { pt3dadd( -19.6445, -34.5114, -61.3294, 2.28 ) }
    dend_49 { pt3dadd( -19.8932, -34.5756, -61.6054, 2.28 ) }
    dend_49 { pt3dadd( -21.3294, -34.7017, -62.9451, 0.44 ) }
    dend_49 { pt3dadd( -22.1493, -34.6392, -63.5477, 0.44 ) }
    dend_49 { pt3dadd( -23.1178, -34.4515, -64.1032, 0.81 ) }
    dend_49 { pt3dadd( -24.1115, -34.2113, -64.6966, 0.81 ) }
    dend_49 { pt3dadd( -24.5644, -34.1522, -65.0212, 0.96 ) }
    dend_49 { pt3dadd( -25.4643, -34.2291, -65.8123, 0.66 ) }
    dend_49 { pt3dadd( -26.3692, -34.5214, -66.7414, 1.99 ) }
    dend_49 { pt3dadd( -27.0469, -34.8712, -67.5253, 2.21 ) }
    dend_49 { pt3dadd( -27.7087, -35.3323, -68.344, 2.5 ) }
    dend_49 { pt3dadd( -29.5294, -36.9154, -70.771, 0.66 ) }
    dend_49 { pt3dadd( -30.4733, -37.9482, -72.2043, 0.66 ) }
    dend_49 { pt3dadd( -31.0563, -38.751, -73.189, 0.66 ) }
    dend_49 { pt3dadd( -31.6567, -39.706, -74.2428, 1.55 ) }
    dend_49 { pt3dadd( -31.9355, -40.1757, -74.7094, 2.21 ) }
    dend_49 { pt3dadd( -32.2045, -40.6663, -75.1547, 2.21 ) }
    dend_49 { pt3dadd( -32.9466, -42.2262, -76.4939, 0.29 ) }
    dend_49 { pt3dadd( -33.3434, -43.2324, -77.4248, 0.29 ) }
    dend_49 { pt3dadd( -33.603, -43.9271, -78.055, 1.55 ) }
    dend_49 { pt3dadd( -33.9265, -44.7654, -78.7987, 1.99 ) }
    dend_49 { pt3dadd( -34.2241, -45.5157, -79.48, 2.36 ) }
    dend_49 { pt3dadd( -35.0607, -47.5566, -81.3901, 0.59 ) }
    dend_49 { pt3dadd( -35.4767, -48.6028, -82.4354, 1.84 ) }
    dend_49 { pt3dadd( -35.6403, -49.0883, -82.9798, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -7.02893, -2.50874, 2.11434, 1.92 ) }
    dend_42 { pt3dadd( -7.92623, -4.26772, 2.02309, 1.92 ) }
    dend_42 { pt3dadd( -8.85153, -5.87246, 1.93105, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.56479, -6.95772, 1.85319, 2.36 ) }
    dend_42 { pt3dadd( -10.5755, -8.27094, 1.74587, 2.28 ) }
    dend_42 { pt3dadd( -11.6859, -9.4834, 1.62311, 2.36 ) }
    dend_42 { pt3dadd( -12.9283, -10.6053, 1.46373, 2.36 ) }
    dend_42 { pt3dadd( -14.8566, -11.8632, 1.23625, 1.77 ) }
    dend_42 { pt3dadd( -15.9172, -12.2771, 1.15654, 1.77 ) }
    dend_42 { pt3dadd( -17.5802, -12.6144, 1.11221, 1.99 ) }
    dend_42 { pt3dadd( -19.0622, -12.753, 1.2063, 1.99 ) }
    dend_42 { pt3dadd( -19.7954, -12.7781, 1.29683, 1.99 ) }
    dend_42 { pt3dadd( -20.8884, -12.8285, 1.49184, 1.77 ) }
    dend_42 { pt3dadd( -22.5802, -13.1086, 1.92952, 1.47 ) }
    dend_42 { pt3dadd( -23.8013, -13.523, 2.275, 1.47 ) }
    dend_42 { pt3dadd( -25.3404, -14.3672, 2.6639, 1.33 ) }
    dend_42 { pt3dadd( -26.04, -14.8836, 2.79418, 1.99 ) }
    dend_42 { pt3dadd( -27.2291, -15.9393, 2.92471, 1.99 ) }
    dend_42 { pt3dadd( -28.5989, -17.3112, 2.9422, 1.77 ) }
    dend_42 { pt3dadd( -30.1139, -18.9874, 2.80888, 1.92 ) }
    dend_42 { pt3dadd( -31.515, -20.5805, 2.52303, 1.69 ) }
    dend_42 { pt3dadd( -32.3765, -21.5054, 2.24598, 1.69 ) }
    dend_42 { pt3dadd( -33.4559, -22.547, 1.83787, 1.84 ) }
    dend_42 { pt3dadd( -34.4406, -23.4183, 1.46183, 1.84 ) }
    dend_42 { pt3dadd( -35.7151, -24.5063, 0.994923, 1.69 ) }
    dend_42 { pt3dadd( -37.1158, -25.7185, 0.55792, 1.55 ) }
    dend_42 { pt3dadd( -38.5304, -27.0304, 0.227802, 1.4 ) }
    dend_42 { pt3dadd( -39.6893, -28.1103, -0.00745461, 1.25 ) }
    dend_42 { pt3dadd( -40.9019, -29.2914, -0.225903, 1.33 ) }
    dend_42 { pt3dadd( -42.0503, -30.5192, -0.352973, 1.47 ) }
    dend_42 { pt3dadd( -43.1254, -31.822, -0.301439, 1.62 ) }
    dend_42 { pt3dadd( -43.8856, -33.0405, -0.0336802, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.63797, -9.56301, -4.84126, 2.95 ) }
    dend_27 { pt3dadd( 0.909455, -11.5375, -4.74731, 2.8 ) }
    dend_27 { pt3dadd( 1.06599, -12.8607, -4.65779, 2.8 ) }
    dend_27 { pt3dadd( 1.20234, -14.3403, -4.54499, 3.02 ) }
    dend_27 { pt3dadd( 1.26757, -15.3223, -4.46947, 3.02 ) }
    dend_27 { pt3dadd( 1.29487, -16.2856, -4.39143, 3.02 ) }
    dend_27 { pt3dadd( 1.26856, -17.7371, -4.27175, 3.02 ) }
    dend_27 { pt3dadd( 1.16186, -19.2726, -4.14013, 2.36 ) }
    dend_27 { pt3dadd( 0.875521, -21.9584, -3.99628, 2.36 ) }
    dend_27 { pt3dadd( 0.66881, -23.463, -3.98224, 2.43 ) }
    dend_27 { pt3dadd( 0.431011, -24.9193, -4.01809, 2.43 ) }
    dend_27 { pt3dadd( 0.120189, -26.6263, -4.11982, 2.43 ) }
    dend_27 { pt3dadd( -0.363085, -28.9832, -4.32744, 2.28 ) }
    dend_27 { pt3dadd( -0.883842, -31.4013, -4.59904, 2.14 ) }
    dend_27 { pt3dadd( -1.61088, -34.6049, -5.02399, 2.06 ) }
    dend_27 { pt3dadd( -2.11546, -36.8282, -5.35591, 2.43 ) }
    dend_27 { pt3dadd( -2.43418, -38.2441, -5.59681, 2.58 ) }
    dend_27 { pt3dadd( -2.77594, -39.7361, -5.88501, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.21333, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.436911, 7.68924, -7.57179, 1.62 ) }
    dend_20 { pt3dadd( -0.524684, 8.38939, -7.59393, 1.92 ) }
    dend_20 { pt3dadd( -0.657053, 9.32468, -7.63223, 1.33 ) }
    dend_20 { pt3dadd( -0.823993, 10.3314, -7.68864, 1.69 ) }
    dend_20 { pt3dadd( -0.960919, 11.0763, -7.71735, 2.21 ) }
    dend_20 { pt3dadd( -1.07829, 11.699, -7.71241, 2.21 ) }
    dend_20 { pt3dadd( -1.2196, 12.3999, -7.67812, 1.99 ) }
    dend_20 { pt3dadd( -1.35222, 12.996, -7.62606, 1.77 ) }
    dend_20 { pt3dadd( -1.50969, 13.6591, -7.54952, 1.99 ) }
    dend_20 { pt3dadd( -1.68048, 14.3609, -7.46542, 1.99 ) }
    dend_20 { pt3dadd( -1.97242, 15.5938, -7.3428, 1.11 ) }
    dend_20 { pt3dadd( -2.15263, 16.3646, -7.2902, 1.11 ) }
    dend_20 { pt3dadd( -2.34574, 17.1401, -7.26932, 1.25 ) }
    dend_20 { pt3dadd( -2.52985, 17.7913, -7.26573, 1.4 ) }
    dend_20 { pt3dadd( -2.77085, 18.503, -7.30736, 0.81 ) }
    dend_20 { pt3dadd( -3.05467, 19.1772, -7.41377, 0.74 ) }
    dend_20 { pt3dadd( -3.28022, 19.618, -7.52706, 0.74 ) }
    dend_20 { pt3dadd( -3.55826, 20.0961, -7.6803, 0.74 ) }
    dend_20 { pt3dadd( -3.88136, 20.6169, -7.87515, 0.96 ) }
    dend_20 { pt3dadd( -4.18598, 21.1071, -8.07194, 0.96 ) }
    dend_20 { pt3dadd( -4.5038, 21.5993, -8.27434, 1.55 ) }
    dend_20 { pt3dadd( -4.86278, 22.1512, -8.50948, 2.06 ) }
    dend_20 { pt3dadd( -5.1665, 22.6536, -8.72878, 2.43 ) }
    dend_20 { pt3dadd( -5.51482, 23.3303, -9.02648, 2.36 ) }
    dend_20 { pt3dadd( -5.90919, 24.252, -9.42158, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 7.89733, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.37362, 8.00674, 0.346896, 2.5 ) }
    dend_11 { pt3dadd( -3.2009, 9.53951, 0.314927, 1.77 ) }
    dend_11 { pt3dadd( -3.77833, 10.5754, 0.320837, 1.55 ) }
    dend_11 { pt3dadd( -4.45558, 11.7543, 0.375989, 1.55 ) }
    dend_11 { pt3dadd( -4.97161, 12.6539, 0.452926, 1.33 ) }
    dend_11 { pt3dadd( -5.75897, 14.0492, 0.616639, 1.33 ) }
    dend_11 { pt3dadd( -6.25134, 14.9016, 0.742604, 1.55 ) }
    dend_11 { pt3dadd( -6.99422, 16.1644, 0.956682, 1.55 ) }
    dend_11 { pt3dadd( -7.76574, 17.5378, 1.19414, 1.62 ) }
    dend_11 { pt3dadd( -8.38171, 18.7617, 1.39357, 1.4 ) }
    dend_11 { pt3dadd( -8.95601, 20.1088, 1.58834, 1.4 ) }
    dend_11 { pt3dadd( -9.28271, 20.9364, 1.70932, 1.4 ) }
    dend_11 { pt3dadd( -9.79072, 22.2671, 1.89321, 1.4 ) }
    dend_11 { pt3dadd( -10.273, 23.5966, 2.02156, 1.4 ) }
    dend_11 { pt3dadd( -10.8153, 25.2398, 2.10859, 1.77 ) }
    dend_11 { pt3dadd( -11.2718, 26.714, 2.12486, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 3.96433, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.87949, 4.01155, 1.35093, 2.58 ) }
    dend_0 { pt3dadd( 7.52161, 4.62182, 1.41798, 2.58 ) }
    dend_0 { pt3dadd( 8.25017, 5.32146, 1.51659, 1.84 ) }
    dend_0 { pt3dadd( 8.78951, 5.82906, 1.60409, 2.06 ) }
    dend_0 { pt3dadd( 9.48587, 6.48262, 1.73492, 2.06 ) }
    dend_0 { pt3dadd( 9.94605, 6.90447, 1.85113, 2.58 ) }
    dend_0 { pt3dadd( 10.4567, 7.36954, 2.00962, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.7944, 7.68205, 2.13767, 2.58 ) }
    dend_0 { pt3dadd( 11.3936, 8.21172, 2.39366, 2.58 ) }
    dend_0 { pt3dadd( 11.8151, 8.5579, 2.58375, 2.43 ) }
    dend_0 { pt3dadd( 12.6982, 9.24101, 3.01638, 2.21 ) }
    dend_0 { pt3dadd( 13.3423, 9.71052, 3.34504, 1.99 ) }
    dend_0 { pt3dadd( 13.8593, 10.0653, 3.59283, 1.99 ) }
    dend_0 { pt3dadd( 14.5297, 10.4578, 3.88241, 1.69 ) }
    dend_0 { pt3dadd( 15.0901, 10.6823, 4.09497, 1.69 ) }
    dend_0 { pt3dadd( 16.0825, 10.8115, 4.42117, 2.06 ) }
    dend_0 { pt3dadd( 16.7054, 10.7081, 4.59078, 2.06 ) }
    dend_0 { pt3dadd( 18.1771, 10.0988, 4.98455, 1.69 ) }
    dend_0 { pt3dadd( 19.1894, 9.5713, 5.24037, 1.92 ) }
    dend_0 { pt3dadd( 20.7719, 8.54943, 5.61206, 1.92 ) }
    dend_0 { pt3dadd( 22.2789, 7.37336, 5.93334, 2.06 ) }
    dend_0 { pt3dadd( 23.0515, 6.64054, 6.0787, 2.28 ) }
    dend_0 { pt3dadd( 23.6309, 5.97288, 6.19553, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.835316 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -35.6403, -49.0883, -82.9798, 0.96 ) }
    dend_51 { pt3dadd( -34.378, -51.1886, -88.8518, 0.96 ) }
    dend_51 { pt3dadd( -34.1354, -51.6821, -89.9595, 0.96 ) }
    dend_51 { pt3dadd( -33.8241, -52.3694, -91.2795, 0.96 ) }
    dend_51 { pt3dadd( -33.3908, -53.3479, -92.9852, 1.55 ) }
    dend_51 { pt3dadd( -33.0462, -54.1872, -94.2916, 0.22 ) }
    dend_51 { pt3dadd( -32.6703, -55.1829, -95.5972, 0.22 ) }
    dend_51 { pt3dadd( -32.4685, -55.8594, -96.1422, 1.11 ) }
    dend_51 { pt3dadd( -32.2895, -56.503, -96.59, 1.4 ) }
    dend_51 { pt3dadd( -32.0022, -57.3765, -97.1166, 1.4 ) }
    dend_51 { pt3dadd( -31.2983, -59.2577, -98.1213, 0.22 ) }
    dend_51 { pt3dadd( -30.449, -61.1697, -99.0985, 0.22 ) }
    dend_51 { pt3dadd( -30.133, -61.7924, -99.4113, 0.74 ) }
    dend_51 { pt3dadd( -29.9523, -62.1249, -99.5674, 0.74 ) }
    dend_51 { pt3dadd( -28.9569, -63.8979, -100.339, 0.15 ) }
    dend_51 { pt3dadd( -28.7943, -64.1727, -100.446, 0.37 ) }
    dend_51 { pt3dadd( -27.8044, -65.6574, -100.981, 0.22 ) }
    dend_51 { pt3dadd( -27.2077, -66.473, -101.31, 0.22 ) }
    dend_51 { pt3dadd( -26.7329, -67.1241, -101.57, 0.74 ) }
    dend_51 { pt3dadd( -26.287, -67.7948, -101.811, 0.88 ) }
    dend_51 { pt3dadd( -26.1714, -68.0298, -101.88, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -35.6403, -49.0883, -82.9798, 2.87 ) }
    dend_50 { pt3dadd( -36.7023, -49.5721, -83.0706, 2.87 ) }
    dend_50 { pt3dadd( -40.0306, -51.367, -83.5282, 0.22 ) }
    dend_50 { pt3dadd( -42.9953, -53.38, -84.0551, 0.22 ) }
    dend_50 { pt3dadd( -44.4169, -54.4367, -84.3242, 1.69 ) }
    dend_50 { pt3dadd( -44.8611, -54.7878, -84.4111, 2.21 ) }
    dend_50 { pt3dadd( -45.5804, -55.3802, -84.5539, 2.21 ) }
    dend_50 { pt3dadd( -48.1842, -57.822, -85.0809, 0.22 ) }
    dend_50 { pt3dadd( -50.4241, -60.3529, -85.6428, 0.22 ) }
    dend_50 { pt3dadd( -51.1108, -61.198, -85.8379, 1.25 ) }
    dend_50 { pt3dadd( -51.6708, -61.895, -85.9994, 1.25 ) }
    dend_50 { pt3dadd( -52.4167, -62.81, -86.225, 1.25 ) }
    dend_50 { pt3dadd( -53.9534, -64.5687, -86.6743, 0.15 ) }
    dend_50 { pt3dadd( -54.8297, -65.5299, -86.9166, 0.15 ) }
    dend_50 { pt3dadd( -55.5312, -66.2161, -87.1112, 0.96 ) }
    dend_50 { pt3dadd( -56.3404, -66.9281, -87.3559, 1.18 ) }
    dend_50 { pt3dadd( -56.7175, -67.2185, -87.4709, 1.18 ) }
    dend_50 { pt3dadd( -59.1983, -68.8606, -88.3431, 0.22 ) }
    dend_50 { pt3dadd( -59.8753, -69.1991, -88.5992, 0.52 ) }
    dend_50 { pt3dadd( -60.4966, -69.4714, -88.836, 0.52 ) }
    dend_50 { pt3dadd( -62.1014, -70.1224, -89.4306, 0.22 ) }
    dend_50 { pt3dadd( -63.1002, -70.5156, -89.8102, 1.25 ) }
    dend_50 { pt3dadd( -64.5578, -71.1469, -90.3514, 1.4 ) }
    dend_50 { pt3dadd( -67.3407, -72.6143, -91.4977, 0.22 ) }
    dend_50 { pt3dadd( -69.2073, -73.855, -92.3146, 0.22 ) }
    dend_50 { pt3dadd( -69.8992, -74.434, -92.6424, 0.74 ) }
    dend_50 { pt3dadd( -70.759, -75.357, -93.0845, 0.88 ) }
    dend_50 { pt3dadd( -71.896, -77.1509, -93.975, 0.22 ) }
    dend_50 { pt3dadd( -72.689, -79.4005, -94.9467, 0.22 ) }
    dend_50 { pt3dadd( -72.9294, -80.8432, -95.5247, 1.99 ) }
    dend_50 { pt3dadd( -72.9825, -81.7191, -95.8382, 2.36 ) }
    dend_50 { pt3dadd( -72.998, -82.5746, -96.1465, 2.36 ) }
    dend_50 { pt3dadd( -72.8651, -87.3486, -97.8764, 0.15 ) }
    dend_50 { pt3dadd( -72.6454, -90.2914, -99.0196, 0.15 ) }
    dend_50 { pt3dadd( -72.5635, -91.0564, -99.2876, 0.44 ) }
    dend_50 { pt3dadd( -72.3552, -92.5258, -99.7691, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -43.8856, -33.0405, -0.0336802, 0.96 ) }
    dend_44 { pt3dadd( -44.8905, -33.3587, -0.360402, 0.96 ) }
    dend_44 { pt3dadd( -45.848, -33.6921, -0.680909, 1.25 ) }
    dend_44 { pt3dadd( -47.2272, -34.1727, -1.13681, 1.25 ) }
    dend_44 { pt3dadd( -49.6256, -34.9435, -1.85907, 1.18 ) }
    dend_44 { pt3dadd( -51.2541, -35.4062, -2.29152, 1.11 ) }
    dend_44 { pt3dadd( -52.5075, -35.736, -2.60918, 0.88 ) }
    dend_44 { pt3dadd( -54.16, -36.1772, -3.05331, 0.96 ) }
    dend_44 { pt3dadd( -55.1066, -36.4289, -3.31569, 0.96 ) }
    dend_44 { pt3dadd( -56.4967, -36.8072, -3.71024, 0.96 ) }
    dend_44 { pt3dadd( -57.8614, -37.1928, -4.02449, 0.96 ) }
    dend_44 { pt3dadd( -59.0171, -37.516, -4.22477, 1.18 ) }
    dend_44 { pt3dadd( -60.4338, -37.8992, -4.4081, 1.03 ) }
    dend_44 { pt3dadd( -61.1298, -38.0752, -4.42632, 1.03 ) }
    dend_44 { pt3dadd( -62.5737, -38.408, -4.29974, 1.18 ) }
    dend_44 { pt3dadd( -63.4411, -38.5846, -4.08888, 1.18 ) }
    dend_44 { pt3dadd( -65.3656, -38.9024, -3.21386, 0.96 ) }
    dend_44 { pt3dadd( -66.0663, -38.9833, -2.81689, 1.11 ) }
    dend_44 { pt3dadd( -67.4247, -39.1193, -1.96689, 1.11 ) }
    dend_44 { pt3dadd( -68.5126, -39.258, -1.27458, 1.11 ) }
    dend_44 { pt3dadd( -69.7924, -39.4713, -0.465159, 1.11 ) }
    dend_44 { pt3dadd( -71.503, -39.8992, 0.581109, 1.55 ) }
    dend_44 { pt3dadd( -72.7317, -40.34, 1.26438, 1.03 ) }
    dend_44 { pt3dadd( -74.2035, -41.0494, 2.04063, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -75.4624, -41.8328, 2.64063, 0.74 ) }
    dend_44 { pt3dadd( -76.1852, -42.4023, 2.94763, 0.74 ) }
    dend_44 { pt3dadd( -77.1237, -43.3134, 3.24869, 0.74 ) }
    dend_44 { pt3dadd( -78.0618, -44.4008, 3.43433, 0.66 ) }
    dend_44 { pt3dadd( -78.9039, -45.5181, 3.54106, 0.88 ) }
    dend_44 { pt3dadd( -79.4562, -46.3286, 3.56401, 1.03 ) }
    dend_44 { pt3dadd( -80.0333, -47.2799, 3.55294, 1.03 ) }
    dend_44 { pt3dadd( -80.7722, -48.5036, 3.51753, 0.88 ) }
    dend_44 { pt3dadd( -81.696, -49.9396, 3.46026, 0.88 ) }
    dend_44 { pt3dadd( -82.2208, -50.6581, 3.42406, 0.88 ) }
    dend_44 { pt3dadd( -83.0012, -51.541, 3.3908, 0.88 ) }
    dend_44 { pt3dadd( -84.5246, -52.956, 3.366, 0.88 ) }
    dend_44 { pt3dadd( -85.4175, -53.5974, 3.3726, 0.88 ) }
    dend_44 { pt3dadd( -86.6992, -54.2714, 3.41034, 0.88 ) }
    dend_44 { pt3dadd( -87.5641, -54.581, 3.44635, 0.96 ) }
    dend_44 { pt3dadd( -88.5857, -54.8483, 3.46911, 0.96 ) }
    dend_44 { pt3dadd( -89.5146, -55.0218, 3.49995, 0.96 ) }
    dend_44 { pt3dadd( -90.5543, -55.1855, 3.54719, 0.52 ) }
    dend_44 { pt3dadd( -91.2625, -55.4151, 3.58255, 0.52 ) }
    dend_44 { pt3dadd( -91.7907, -55.8304, 3.63535, 0.52 ) }
    dend_44 { pt3dadd( -92.2924, -56.616, 3.77868, 0.81 ) }
    dend_44 { pt3dadd( -92.668, -57.4523, 3.96828, 0.96 ) }
    dend_44 { pt3dadd( -92.9288, -58.4199, 4.19003, 0.96 ) }
    dend_44 { pt3dadd( -93.1949, -60.1545, 4.58127, 0.81 ) }
    dend_44 { pt3dadd( -93.2712, -61.0042, 4.77797, 0.81 ) }
    dend_44 { pt3dadd( -93.3182, -62.085, 5.07066, 1.11 ) }
    dend_44 { pt3dadd( -93.3806, -62.7017, 5.28784, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -43.8856, -33.0405, -0.0336802, 1.33 ) }
    dend_43 { pt3dadd( -44.4705, -33.037, 0.264118, 1.33 ) }
    dend_43 { pt3dadd( -45.0245, -33.067, 0.507933, 1.18 ) }
    dend_43 { pt3dadd( -46.0567, -33.116, 0.931311, 0.88 ) }
    dend_43 { pt3dadd( -46.549, -33.1307, 1.10618, 0.74 ) }
    dend_43 { pt3dadd( -47.2594, -33.1396, 1.31049, 0.74 ) }
    dend_43 { pt3dadd( -47.9794, -33.1146, 1.50237, 0.74 ) }
    dend_43 { pt3dadd( -48.5178, -33.0904, 1.62571, 0.59 ) }
    dend_43 { pt3dadd( -49.1484, -33.0355, 1.7559, 0.59 ) }
    dend_43 { pt3dadd( -49.644, -32.9653, 1.85056, 0.52 ) }
    dend_43 { pt3dadd( -50.1502, -32.8348, 1.9617, 0.52 ) }
    dend_43 { pt3dadd( -51.1158, -32.4653, 2.19959, 0.74 ) }
    dend_43 { pt3dadd( -51.7353, -32.1728, 2.37117, 0.59 ) }
    dend_43 { pt3dadd( -52.3095, -31.8919, 2.54071, 0.44 ) }
    dend_43 { pt3dadd( -52.9338, -31.6119, 2.74739, 0.37 ) }
    dend_43 { pt3dadd( -53.4371, -31.4285, 2.93311, 0.66 ) }
    dend_43 { pt3dadd( -53.8783, -31.3387, 3.07351, 0.66 ) }
    dend_43 { pt3dadd( -54.1552, -31.3353, 3.12838, 0.66 ) }
    dend_43 { pt3dadd( -54.5179, -31.356, 3.19028, 0.44 ) }
    dend_43 { pt3dadd( -54.9354, -31.4106, 3.2538, 0.44 ) }
    dend_43 { pt3dadd( -55.6762, -31.5174, 3.35239, 0.44 ) }
    dend_43 { pt3dadd( -56.7006, -31.6841, 3.49868, 0.74 ) }
    dend_43 { pt3dadd( -57.3081, -31.8023, 3.59007, 0.74 ) }
    dend_43 { pt3dadd( -58.1444, -31.9622, 3.70451, 0.52 ) }
    dend_43 { pt3dadd( -58.924, -32.1055, 3.80044, 0.59 ) }
    dend_43 { pt3dadd( -59.5905, -32.2283, 3.87147, 0.44 ) }
    dend_43 { pt3dadd( -60.5182, -32.4315, 3.98158, 0.37 ) }
    dend_43 { pt3dadd( -61.1888, -32.6279, 4.08216, 0.37 ) }
    dend_43 { pt3dadd( -61.9184, -32.9348, 4.20778, 0.29 ) }
    dend_43 { pt3dadd( -62.2654, -33.1449, 4.28169, 0.29 ) }
    dend_43 { pt3dadd( -62.6845, -33.4593, 4.42352, 0.29 ) }
    dend_43 { pt3dadd( -63.0498, -33.7529, 4.58089, 0.37 ) }
    dend_43 { pt3dadd( -63.4718, -34.0862, 4.79583, 0.37 ) }
    dend_43 { pt3dadd( -63.9067, -34.395, 5.03682, 0.37 ) }
    dend_43 { pt3dadd( -64.3841, -34.7528, 5.34073, 0.66 ) }
    dend_43 { pt3dadd( -64.8628, -35.0942, 5.65168, 0.81 ) }
    dend_43 { pt3dadd( -65.2313, -35.3222, 5.88097, 0.81 ) }
    dend_43 { pt3dadd( -65.7633, -35.5832, 6.16943, 0.22 ) }
    dend_43 { pt3dadd( -66.4119, -35.8361, 6.48616, 0.22 ) }
    dend_43 { pt3dadd( -72.4371, -35.9217, 7.80603, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.77594, -39.7361, -5.88501, 1.55 ) }
    dend_33 { pt3dadd( -2.36524, -40.9083, -5.84733, 1.55 ) }
    dend_33 { pt3dadd( -1.95683, -42.1023, -5.80685, 1.55 ) }
    dend_33 { pt3dadd( -1.61119, -43.1516, -5.7755, 1.55 ) }
    dend_33 { pt3dadd( -1.23218, -44.3423, -5.73395, 1.69 ) }
    dend_33 { pt3dadd( -0.961208, -45.2562, -5.69684, 1.69 ) }
    dend_33 { pt3dadd( -0.781617, -45.94, -5.66846, 1.69 ) }
    dend_33 { pt3dadd( -0.539285, -47.0756, -5.6195, 1.55 ) }
    dend_33 { pt3dadd( -0.281517, -48.5624, -5.55843, 1.47 ) }
    dend_33 { pt3dadd( -0.137396, -49.8023, -5.49604, 1.33 ) }
    dend_33 { pt3dadd( -0.0825201, -50.992, -5.42563, 1.33 ) }
    dend_33 { pt3dadd( -0.125488, -52.5735, -5.32492, 1.33 ) }
    dend_33 { pt3dadd( -0.252173, -53.7345, -5.23513, 1.11 ) }
    dend_33 { pt3dadd( -0.399578, -54.4666, -5.16736, 1.11 ) }
    dend_33 { pt3dadd( -0.844529, -56.0633, -4.99918, 1.25 ) }
    dend_33 { pt3dadd( -1.20574, -57.1244, -4.88018, 1.25 ) }
    dend_33 { pt3dadd( -1.57208, -58.0797, -4.76996, 1.25 ) }
    dend_33 { pt3dadd( -2.1166, -59.4069, -4.62704, 1.4 ) }
    dend_33 { pt3dadd( -2.67387, -60.7161, -4.50161, 1.4 ) }
    dend_33 { pt3dadd( -3.11323, -61.7785, -4.42548, 1.55 ) }
    dend_33 { pt3dadd( -3.39251, -62.5612, -4.40527, 1.55 ) }
    dend_33 { pt3dadd( -3.72743, -63.7203, -4.41559, 1.33 ) }
    dend_33 { pt3dadd( -4.05138, -65.1692, -4.48886, 0.96 ) }
    dend_33 { pt3dadd( -4.14372, -65.7438, -4.54506, 0.81 ) }
    dend_33 { pt3dadd( -4.21587, -66.3906, -4.61469, 0.81 ) }
    dend_33 { pt3dadd( -4.32343, -67.8855, -4.76876, 0.96 ) }
    dend_33 { pt3dadd( -4.36031, -68.9209, -4.85973, 1.33 ) }
    dend_33 { pt3dadd( -4.38174, -70.0635, -4.93891, 1.69 ) }
    dend_33 { pt3dadd( -4.40264, -70.756, -4.96955, 1.84 ) }
    dend_33 { pt3dadd( -4.44389, -71.5411, -4.98045, 1.99 ) }
    dend_33 { pt3dadd( -4.53907, -72.47, -4.96051, 2.06 ) }
    dend_33 { pt3dadd( -4.63516, -73.2642, -4.92221, 2.06 ) }
    dend_33 { pt3dadd( -4.73293, -74.0724, -4.84991, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -4.82576, -74.9348, -4.73221, 1.62 ) }
    dend_33 { pt3dadd( -4.91628, -75.971, -4.55445, 1.18 ) }
    dend_33 { pt3dadd( -4.96652, -76.8008, -4.40082, 0.88 ) }
    dend_33 { pt3dadd( -5.02158, -77.935, -4.17156, 0.88 ) }
    dend_33 { pt3dadd( -5.05265, -78.7153, -3.98491, 1.03 ) }
    dend_33 { pt3dadd( -5.08671, -79.5181, -3.76757, 1.11 ) }
    dend_33 { pt3dadd( -5.12549, -80.0896, -3.60475, 1.11 ) }
    dend_33 { pt3dadd( -5.29672, -81.5155, -3.19618, 1.03 ) }
    dend_33 { pt3dadd( -5.4557, -82.446, -2.9306, 1.18 ) }
    dend_33 { pt3dadd( -5.60508, -83.2055, -2.72688, 1.25 ) }
    dend_33 { pt3dadd( -5.84911, -84.3612, -2.44767, 1.18 ) }
    dend_33 { pt3dadd( -6.09023, -85.4093, -2.22779, 1.03 ) }
    dend_33 { pt3dadd( -6.36002, -86.4554, -2.04146, 0.96 ) }
    dend_33 { pt3dadd( -6.68427, -87.5881, -1.88304, 0.88 ) }
    dend_33 { pt3dadd( -6.92807, -88.3446, -1.81709, 0.88 ) }
    dend_33 { pt3dadd( -7.35705, -89.4835, -1.81988, 1.25 ) }
    dend_33 { pt3dadd( -7.83682, -90.6194, -1.90389, 1.55 ) }
    dend_33 { pt3dadd( -8.21183, -91.4881, -2.00863, 1.62 ) }
    dend_33 { pt3dadd( -8.49289, -92.1837, -2.10864, 1.62 ) }
    dend_33 { pt3dadd( -8.82254, -93.0946, -2.2453, 1.4 ) }
    dend_33 { pt3dadd( -9.23285, -94.3849, -2.42088, 1.11 ) }
    dend_33 { pt3dadd( -9.57291, -95.7153, -2.57331, 1.11 ) }
    dend_33 { pt3dadd( -9.86119, -97.1849, -2.68321, 1.11 ) }
    dend_33 { pt3dadd( -10.1108, -98.7526, -2.76163, 1.11 ) }
    dend_33 { pt3dadd( -10.2717, -99.8996, -2.79485, 1.4 ) }
    dend_33 { pt3dadd( -10.421, -101.088, -2.81048, 1.4 ) }
    dend_33 { pt3dadd( -10.6385, -102.941, -2.80572, 1.25 ) }
    dend_33 { pt3dadd( -10.8613, -104.839, -2.80683, 1.25 ) }
    dend_33 { pt3dadd( -11.0192, -106.088, -2.81019, 1.62 ) }
    dend_33 { pt3dadd( -11.1746, -107.181, -2.82503, 1.77 ) }
    dend_33 { pt3dadd( -11.384, -108.644, -2.86931, 1.33 ) }
    dend_33 { pt3dadd( -11.567, -109.97, -2.91848, 0.88 ) }
    dend_33 { pt3dadd( -11.7381, -111.447, -2.99024, 1.25 ) }
    dend_33 { pt3dadd( -11.8085, -112.18, -3.03648, 1.84 ) }
    dend_33 { pt3dadd( -11.8635, -112.999, -3.10156, 2.28 ) }
    dend_33 { pt3dadd( -11.8971, -113.849, -3.18773, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.77594, -39.7361, -5.88501, 2.14 ) }
    dend_28 { pt3dadd( -2.69598, -40.3208, -6.12381, 2.14 ) }
    dend_28 { pt3dadd( -2.52254, -41.2455, -6.47147, 2.14 ) }
    dend_28 { pt3dadd( -2.22595, -42.8267, -7.06595, 1.69 ) }
    dend_28 { pt3dadd( -1.97744, -44.1517, -7.56408, 1.84 ) }
    dend_28 { pt3dadd( -1.73601, -45.4388, -8.048, 1.99 ) }
    dend_28 { pt3dadd( -1.54071, -46.48, -8.43947, 2.36 ) }
    dend_28 { pt3dadd( -1.3678, -47.2438, -8.70248, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.90919, 24.252, -9.42158, 1.25 ) }
    dend_22 { pt3dadd( -5.56947, 25.2517, -9.62712, 1.25 ) }
    dend_22 { pt3dadd( -5.28324, 25.9237, -9.74837, 1.03 ) }
    dend_22 { pt3dadd( -4.90257, 26.7229, -9.87605, 0.81 ) }
    dend_22 { pt3dadd( -4.47679, 27.618, -10.0022, 0.81 ) }
    dend_22 { pt3dadd( -4.10455, 28.5114, -10.1156, 1.11 ) }
    dend_22 { pt3dadd( -3.87167, 29.1598, -10.1898, 1.11 ) }
    dend_22 { pt3dadd( -3.62545, 29.9187, -10.2374, 0.96 ) }
    dend_22 { pt3dadd( -3.33888, 30.9347, -10.2715, 0.66 ) }
    dend_22 { pt3dadd( -3.16711, 31.6379, -10.2917, 0.52 ) }
    dend_22 { pt3dadd( -2.96975, 32.5611, -10.3095, 0.52 ) }
    dend_22 { pt3dadd( -2.84807, 33.2472, -10.3208, 0.52 ) }
    dend_22 { pt3dadd( -2.58366, 34.7153, -10.3691, 1.18 ) }
    dend_22 { pt3dadd( -2.4427, 35.4667, -10.4021, 1.62 ) }
    dend_22 { pt3dadd( -2.33244, 36.0058, -10.4317, 1.69 ) }
    dend_22 { pt3dadd( -2.11806, 36.899, -10.5069, 1.33 ) }
    dend_22 { pt3dadd( -1.97994, 37.3412, -10.5611, 0.74 ) }
    dend_22 { pt3dadd( -1.723, 38.0196, -10.6703, 0.59 ) }
    dend_22 { pt3dadd( -1.28112, 39.093, -10.9054, 0.66 ) }
    dend_22 { pt3dadd( -1.05175, 39.6735, -11.0489, 0.44 ) }
    dend_22 { pt3dadd( -0.904796, 40.1075, -11.1579, 0.44 ) }
    dend_22 { pt3dadd( -0.674587, 40.9034, -11.3619, 0.37 ) }
    dend_22 { pt3dadd( -0.47791, 41.5733, -11.5272, 0.37 ) }
    dend_22 { pt3dadd( -0.314083, 42.0603, -11.6319, 0.37 ) }
    dend_22 { pt3dadd( 0.00864459, 42.8271, -11.8098, 0.37 ) }
    dend_22 { pt3dadd( 0.324241, 43.5105, -11.9812, 0.44 ) }
    dend_22 { pt3dadd( 0.60281, 44.176, -12.1744, 0.44 ) }
    dend_22 { pt3dadd( 0.979172, 45.2533, -12.5272, 0.81 ) }
    dend_22 { pt3dadd( 1.2167, 46.0148, -12.7884, 1.03 ) }
    dend_22 { pt3dadd( 1.44115, 46.7029, -13.035, 1.03 ) }
    dend_22 { pt3dadd( 1.64749, 47.3292, -13.2849, 0.81 ) }
    dend_22 { pt3dadd( 1.93031, 48.2439, -13.6931, 0.29 ) }
    dend_22 { pt3dadd( 2.05229, 48.6989, -13.9082, 0.29 ) }
    dend_22 { pt3dadd( 2.28907, 49.7993, -14.4249, 1.77 ) }
    dend_22 { pt3dadd( 2.36067, 50.1657, -14.593, 2.36 ) }
    dend_22 { pt3dadd( 2.46524, 50.6732, -14.8045, 2.36 ) }
    dend_22 { pt3dadd( 2.68494, 51.6389, -15.1763, 2.28 ) }
    dend_22 { pt3dadd( 2.98384, 52.7975, -15.5759, 0.66 ) }
    dend_22 { pt3dadd( 3.15453, 53.4313, -15.7941, 0.88 ) }
    dend_22 { pt3dadd( 3.33038, 54.0912, -16.0247, 0.88 ) }
    dend_22 { pt3dadd( 3.52759, 54.8316, -16.2654, 0.37 ) }
    dend_22 { pt3dadd( 3.66163, 55.3316, -16.4201, 0.37 ) }
    dend_22 { pt3dadd( 3.92916, 56.3738, -16.7195, 0.37 ) }
    dend_22 { pt3dadd( 4.11951, 57.1596, -16.9338, 1.11 ) }
    dend_22 { pt3dadd( 4.25865, 57.7874, -17.098, 1.47 ) }
    dend_22 { pt3dadd( 4.34443, 58.2363, -17.2078, 1.69 ) }
    dend_22 { pt3dadd( 4.46164, 58.9949, -17.3785, 1.33 ) }
    dend_22 { pt3dadd( 4.56027, 59.8282, -17.5461, 0.44 ) }
    dend_22 { pt3dadd( 4.59891, 60.7139, -17.7022, 0.29 ) }
    dend_22 { pt3dadd( 4.60136, 61.4091, -17.8216, 0.52 ) }
    dend_22 { pt3dadd( 4.58827, 61.9286, -17.9095, 0.52 ) }
    dend_22 { pt3dadd( 4.54737, 62.801, -18.0785, 0.29 ) }
    dend_22 { pt3dadd( 4.5198, 63.6992, -18.2566, 0.29 ) }
    dend_22 { pt3dadd( 4.50696, 65.2834, -18.5964, 1.18 ) }
    dend_22 { pt3dadd( 4.51151, 65.8791, -18.7239, 1.62 ) }
    dend_22 { pt3dadd( 4.5157, 66.5134, -18.8482, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 4.52289, 67.3143, -18.99, 1.33 ) }
    dend_22 { pt3dadd( 4.53745, 69.5991, -19.3742, 0.22 ) }
    dend_22 { pt3dadd( 4.55317, 71.0617, -19.6049, 0.22 ) }
    dend_22 { pt3dadd( 4.56591, 72.3834, -19.7921, 0.22 ) }
    dend_22 { pt3dadd( 4.55899, 73.7799, -19.963, 0.74 ) }
    dend_22 { pt3dadd( 4.54684, 74.5409, -20.0492, 1.03 ) }
    dend_22 { pt3dadd( 4.53429, 74.8997, -20.0855, 1.03 ) }
    dend_22 { pt3dadd( 4.44089, 76.0434, -20.2295, 0.15 ) }
    dend_22 { pt3dadd( 4.3965, 76.4823, -20.3066, 0.15 ) }
    dend_22 { pt3dadd( 4.34257, 76.9851, -20.4317, 0.44 ) }
    dend_22 { pt3dadd( 4.2934, 77.464, -20.5738, 0.66 ) }
    dend_22 { pt3dadd( 4.24904, 77.9053, -20.7061, 0.66 ) }
    dend_22 { pt3dadd( 4.16122, 79.1781, -21.0787, 1.55 ) }
    dend_22 { pt3dadd( 4.12505, 80.1143, -21.3388, 2.58 ) }
    dend_22 { pt3dadd( 4.11823, 80.9296, -21.562, 2.58 ) }
    dend_22 { pt3dadd( 4.18814, 82.7402, -22.0166, 0.29 ) }
    dend_22 { pt3dadd( 4.30757, 83.9502, -22.2592, 0.29 ) }
    dend_22 { pt3dadd( 4.57193, 85.6852, -22.5124, 0.29 ) }
    dend_22 { pt3dadd( 4.80131, 86.7748, -22.6119, 0.96 ) }
    dend_22 { pt3dadd( 4.94369, 87.3341, -22.6335, 0.96 ) }
    dend_22 { pt3dadd( 5.49601, 89.1559, -22.6155, 0.22 ) }
    dend_22 { pt3dadd( 6.153, 91.0954, -22.5075, 0.22 ) }
    dend_22 { pt3dadd( 6.59469, 92.3131, -22.3974, 1.77 ) }
    dend_22 { pt3dadd( 6.77747, 92.7892, -22.3392, 2.36 ) }
    dend_22 { pt3dadd( 7.00505, 93.3709, -22.2626, 2.5 ) }
    dend_22 { pt3dadd( 7.7396, 95.2498, -22.0012, 0.15 ) }
    dend_22 { pt3dadd( 8.10566, 96.1954, -21.8766, 0.29 ) }
    dend_22 { pt3dadd( 8.34647, 96.8286, -21.8061, 0.29 ) }
    dend_22 { pt3dadd( 8.65113, 97.6385, -21.7589, 0.15 ) }
    dend_22 { pt3dadd( 8.95018, 98.4683, -21.7635, 1.18 ) }
    dend_22 { pt3dadd( 9.13731, 98.9835, -21.7938, 1.55 ) }
    dend_22 { pt3dadd( 9.34593, 99.5556, -21.8503, 1.18 ) }
    dend_22 { pt3dadd( 9.49868, 99.9688, -21.9036, 0.74 ) }
    dend_22 { pt3dadd( 9.93288, 101.25, -22.0806, 0.22 ) }
    dend_22 { pt3dadd( 10.2464, 102.249, -22.2233, 0.22 ) }
    dend_22 { pt3dadd( 10.7421, 103.998, -22.4389, 0.22 ) }
    dend_22 { pt3dadd( 10.9869, 104.938, -22.5357, 0.81 ) }
    dend_22 { pt3dadd( 11.0763, 105.315, -22.567, 0.81 ) }
    dend_22 { pt3dadd( 11.5771, 107.673, -22.6913, 0.22 ) }
    dend_22 { pt3dadd( 11.7911, 108.858, -22.6884, 0.22 ) }
    dend_22 { pt3dadd( 11.9455, 109.928, -22.6756, 1.25 ) }
    dend_22 { pt3dadd( 11.9657, 110.212, -22.6721, 1.69 ) }
    dend_22 { pt3dadd( 11.972, 110.532, -22.6675, 1.69 ) }
    dend_22 { pt3dadd( 11.9606, 111.214, -22.6538, 1.33 ) }
    dend_22 { pt3dadd( 11.9237, 111.811, -22.6509, 0.59 ) }
    dend_22 { pt3dadd( 11.8254, 113.052, -22.679, 0.22 ) }
    dend_22 { pt3dadd( 11.7072, 114.822, -22.7753, 0.22 ) }
    dend_22 { pt3dadd( 11.636, 115.912, -22.8479, 1.03 ) }
    dend_22 { pt3dadd( 11.6047, 116.371, -22.8815, 1.03 ) }
    dend_22 { pt3dadd( 11.5875, 116.852, -22.9158, 1.03 ) }
    dend_22 { pt3dadd( 11.5895, 117.565, -22.9587, 0.52 ) }
    dend_22 { pt3dadd( 11.6564, 119.163, -23.0184, 0.22 ) }
    dend_22 { pt3dadd( 11.7503, 119.933, -23.0422, 0.59 ) }
    dend_22 { pt3dadd( 11.8415, 120.427, -23.0527, 0.59 ) }
    dend_22 { pt3dadd( 12.3468, 122.599, -23.0745, 0.22 ) }
    dend_22 { pt3dadd( 12.5409, 123.273, -23.0714, 0.66 ) }
    dend_22 { pt3dadd( 12.7129, 123.755, -23.0662, 0.66 ) }
    dend_22 { pt3dadd( 13.1564, 124.874, -23.0611, 0.15 ) }
    dend_22 { pt3dadd( 13.4147, 125.496, -23.0671, 0.81 ) }
    dend_22 { pt3dadd( 13.5918, 125.925, -23.0791, 0.81 ) }
    dend_22 { pt3dadd( 13.8451, 126.556, -23.1138, 0.81 ) }
    dend_22 { pt3dadd( 14.2919, 127.762, -23.2032, 0.22 ) }
    dend_22 { pt3dadd( 14.7263, 128.986, -23.327, 1.33 ) }
    dend_22 { pt3dadd( 14.8997, 129.5, -23.3895, 1.55 ) }
    dend_22 { pt3dadd( 15.0023, 129.8, -23.4277, 1.55 ) }
    dend_22 { pt3dadd( 15.1116, 130.118, -23.4733, 1.03 ) }
    dend_22 { pt3dadd( 15.6351, 131.567, -23.7032, 0.22 ) }
    dend_22 { pt3dadd( 16.1379, 132.857, -23.9245, 0.22 ) }
    dend_22 { pt3dadd( 16.4277, 133.535, -24.0568, 0.22 ) }
    dend_22 { pt3dadd( 16.7679, 134.336, -24.2157, 1.25 ) }
    dend_22 { pt3dadd( 16.9736, 134.853, -24.3229, 1.77 ) }
    dend_22 { pt3dadd( 17.1438, 135.322, -24.4254, 1.77 ) }
    dend_22 { pt3dadd( 17.2782, 135.717, -24.5215, 1.18 ) }
    dend_22 { pt3dadd( 17.4774, 136.343, -24.6824, 0.66 ) }
    dend_22 { pt3dadd( 18.0824, 138.25, -25.2177, 0.22 ) }
    dend_22 { pt3dadd( 18.4944, 139.524, -25.6152, 0.22 ) }
    dend_22 { pt3dadd( 18.7834, 140.393, -25.8845, 1.11 ) }
    dend_22 { pt3dadd( 18.9891, 140.952, -26.0508, 1.4 ) }
    dend_22 { pt3dadd( 19.1938, 141.448, -26.1957, 1.4 ) }
    dend_22 { pt3dadd( 19.462, 142.024, -26.3796, 0.96 ) }
    dend_22 { pt3dadd( 20.2937, 143.654, -26.9444, 0.22 ) }
    dend_22 { pt3dadd( 21.2304, 145.348, -27.5342, 0.22 ) }
    dend_22 { pt3dadd( 21.9787, 146.647, -27.9753, 1.77 ) }
    dend_22 { pt3dadd( 22.2479, 147.105, -28.1231, 2.65 ) }
    dend_22 { pt3dadd( 22.679, 147.821, -28.3401, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.90919, 24.252, -9.42158, 0.66 ) }
    dend_21 { pt3dadd( -7.98296, 25.2584, -9.4949, 0.66 ) }
    dend_21 { pt3dadd( -8.80999, 25.6233, -9.52029, 0.66 ) }
    dend_21 { pt3dadd( -9.77976, 26.0158, -9.5409, 0.66 ) }
    dend_21 { pt3dadd( -10.8887, 26.4187, -9.5653, 1.11 ) }
    dend_21 { pt3dadd( -11.5778, 26.6381, -9.58436, 1.33 ) }
    dend_21 { pt3dadd( -12.6171, 26.9569, -9.61593, 1.33 ) }
    dend_21 { pt3dadd( -13.7462, 27.2695, -9.64745, 0.96 ) }
    dend_21 { pt3dadd( -14.5222, 27.4904, -9.64382, 0.88 ) }
    dend_21 { pt3dadd( -15.4459, 27.7553, -9.60968, 0.88 ) }
    dend_21 { pt3dadd( -16.5378, 28.0674, -9.51491, 0.37 ) }
    dend_21 { pt3dadd( -17.0979, 28.2232, -9.4407, 0.37 ) }
    dend_21 { pt3dadd( -18.0507, 28.4883, -9.27832, 0.81 ) }
    dend_21 { pt3dadd( -18.8717, 28.7271, -9.11451, 0.88 ) }
    dend_21 { pt3dadd( -19.6305, 28.9545, -8.95146, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -20.4299, 29.1998, -8.76695, 0.29 ) }
    dend_21 { pt3dadd( -20.9409, 29.3494, -8.65541, 0.29 ) }
    dend_21 { pt3dadd( -21.8352, 29.5533, -8.50048, 0.74 ) }
    dend_21 { pt3dadd( -22.5052, 29.6855, -8.41363, 0.74 ) }
    dend_21 { pt3dadd( -22.8882, 29.7769, -8.35973, 0.74 ) }
    dend_21 { pt3dadd( -23.3269, 29.9163, -8.26607, 0.74 ) }
    dend_21 { pt3dadd( -23.8611, 30.1114, -8.11902, 0.59 ) }
    dend_21 { pt3dadd( -24.3777, 30.295, -7.94076, 0.59 ) }
    dend_21 { pt3dadd( -24.827, 30.4414, -7.74468, 0.37 ) }
    dend_21 { pt3dadd( -26.0421, 30.7696, -7.18469, 0.37 ) }
    dend_21 { pt3dadd( -26.8996, 30.9465, -6.77966, 0.37 ) }
    dend_21 { pt3dadd( -27.3589, 31.0153, -6.5615, 0.22 ) }
    dend_21 { pt3dadd( -28.1352, 31.0922, -6.20208, 0.22 ) }
    dend_21 { pt3dadd( -28.5576, 31.1082, -6.02923, 0.22 ) }
    dend_21 { pt3dadd( -29.809, 31.1264, -5.58217, 1.03 ) }
    dend_21 { pt3dadd( -30.4335, 31.1475, -5.39884, 1.4 ) }
    dend_21 { pt3dadd( -30.8076, 31.1795, -5.29726, 1.4 ) }
    dend_21 { pt3dadd( -31.7169, 31.3119, -5.0674, 0.81 ) }
    dend_21 { pt3dadd( -32.8833, 31.5305, -4.81143, 0.22 ) }
    dend_21 { pt3dadd( -33.5146, 31.6572, -4.68543, 0.22 ) }
    dend_21 { pt3dadd( -34.7917, 31.9301, -4.46165, 1.11 ) }
    dend_21 { pt3dadd( -35.4457, 32.0773, -4.36374, 1.4 ) }
    dend_21 { pt3dadd( -35.9114, 32.1833, -4.30328, 1.4 ) }
    dend_21 { pt3dadd( -37.0007, 32.4284, -4.18418, 0.66 ) }
    dend_21 { pt3dadd( -38.0266, 32.6469, -4.08357, 0.52 ) }
    dend_21 { pt3dadd( -39.271, 32.877, -3.97618, 0.74 ) }
    dend_21 { pt3dadd( -40.0803, 33.0208, -3.91607, 0.88 ) }
    dend_21 { pt3dadd( -41.2294, 33.2377, -3.84107, 0.66 ) }
    dend_21 { pt3dadd( -42.0453, 33.4, -3.79381, 0.66 ) }
    dend_21 { pt3dadd( -42.7146, 33.5406, -3.7625, 0.66 ) }
    dend_21 { pt3dadd( -43.9729, 33.8279, -3.70007, 0.29 ) }
    dend_21 { pt3dadd( -44.9779, 34.0772, -3.62448, 1.03 ) }
    dend_21 { pt3dadd( -45.8287, 34.3011, -3.53237, 1.25 ) }
    dend_21 { pt3dadd( -46.0969, 34.3843, -3.4821, 1.25 ) }
    dend_21 { pt3dadd( -46.7801, 34.6402, -3.30479, 0.81 ) }
    dend_21 { pt3dadd( -47.5929, 34.9803, -3.03586, 0.29 ) }
    dend_21 { pt3dadd( -48.1129, 35.2182, -2.82171, 0.52 ) }
    dend_21 { pt3dadd( -48.457, 35.3909, -2.66801, 0.66 ) }
    dend_21 { pt3dadd( -49.7096, 36.0491, -2.11284, 0.22 ) }
    dend_21 { pt3dadd( -50.4203, 36.4297, -1.81867, 0.22 ) }
    dend_21 { pt3dadd( -51.0062, 36.7422, -1.60501, 0.22 ) }
    dend_21 { pt3dadd( -51.7999, 37.1672, -1.37921, 0.22 ) }
    dend_21 { pt3dadd( -52.8747, 37.7451, -1.12743, 0.59 ) }
    dend_21 { pt3dadd( -53.4928, 38.0814, -1.01235, 0.81 ) }
    dend_21 { pt3dadd( -54.0717, 38.4145, -0.954058, 0.81 ) }
    dend_21 { pt3dadd( -54.9605, 38.9664, -0.90626, 0.52 ) }
    dend_21 { pt3dadd( -56.1575, 39.7616, -0.890981, 1.03 ) }
    dend_21 { pt3dadd( -56.875, 40.257, -0.90547, 1.18 ) }
    dend_21 { pt3dadd( -57.4076, 40.6412, -0.931905, 1.25 ) }
    dend_21 { pt3dadd( -58.5941, 41.534, -1.01851, 0.29 ) }
    dend_21 { pt3dadd( -59.6674, 42.3651, -1.11777, 0.74 ) }
    dend_21 { pt3dadd( -60.0707, 42.6816, -1.16254, 0.96 ) }
    dend_21 { pt3dadd( -60.425, 42.9569, -1.21134, 0.96 ) }
    dend_21 { pt3dadd( -61.608, 43.8432, -1.39438, 0.22 ) }
    dend_21 { pt3dadd( -62.079, 44.1766, -1.46918, 0.22 ) }
    dend_21 { pt3dadd( -62.7258, 44.6034, -1.56307, 0.66 ) }
    dend_21 { pt3dadd( -63.1681, 44.8822, -1.63637, 0.88 ) }
    dend_21 { pt3dadd( -63.6936, 45.1978, -1.72205, 0.44 ) }
    dend_21 { pt3dadd( -64.3791, 45.6002, -1.82675, 0.37 ) }
    dend_21 { pt3dadd( -64.7926, 45.838, -1.88003, 0.44 ) }
    dend_21 { pt3dadd( -65.3428, 46.1666, -1.94993, 0.44 ) }
    dend_21 { pt3dadd( -65.7386, 46.4061, -2.00059, 0.44 ) }
    dend_21 { pt3dadd( -66.5, 46.8769, -2.08985, 0.22 ) }
    dend_21 { pt3dadd( -66.9955, 47.1944, -2.13292, 0.22 ) }
    dend_21 { pt3dadd( -67.5803, 47.6022, -2.17182, 0.29 ) }
    dend_21 { pt3dadd( -67.9212, 47.8577, -2.18199, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -11.2718, 26.714, 2.12486, 1.47 ) }
    dend_13 { pt3dadd( -11.0008, 27.216, 2.14031, 1.47 ) }
    dend_13 { pt3dadd( -10.7549, 27.7638, 2.15811, 0.81 ) }
    dend_13 { pt3dadd( -10.6012, 28.1652, 2.17265, 0.81 ) }
    dend_13 { pt3dadd( -10.4373, 28.7277, 2.1937, 0.81 ) }
    dend_13 { pt3dadd( -10.268, 29.4128, 2.22079, 0.81 ) }
    dend_13 { pt3dadd( -10.1093, 30.1694, 2.25237, 0.81 ) }
    dend_13 { pt3dadd( -10.0036, 30.9254, 2.28156, 1.03 ) }
    dend_13 { pt3dadd( -9.9349, 31.6059, 2.30862, 1.03 ) }
    dend_13 { pt3dadd( -9.84916, 32.648, 2.34662, 1.18 ) }
    dend_13 { pt3dadd( -9.79989, 33.2935, 2.37331, 1.18 ) }
    dend_13 { pt3dadd( -9.77016, 34.4165, 2.4121, 1.18 ) }
    dend_13 { pt3dadd( -9.77798, 35.2159, 2.43493, 1.4 ) }
    dend_13 { pt3dadd( -9.77756, 35.7824, 2.44976, 1.4 ) }
    dend_13 { pt3dadd( -9.78093, 36.1858, 2.45791, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -11.2718, 26.714, 2.12486, 0.96 ) }
    dend_12 { pt3dadd( -13.4347, 28.1327, 0.556193, 0.96 ) }
    dend_12 { pt3dadd( -14.2193, 28.6636, 0.0204973, 0.96 ) }
    dend_12 { pt3dadd( -15.3074, 29.4116, -0.718835, 0.96 ) }
    dend_12 { pt3dadd( -16.4339, 30.2147, -1.49747, 0.81 ) }
    dend_12 { pt3dadd( -17.4041, 30.9277, -2.16211, 0.81 ) }
    dend_12 { pt3dadd( -18.749, 31.9313, -3.05772, 1.03 ) }
    dend_12 { pt3dadd( -19.6585, 32.6601, -3.65323, 1.03 ) }
    dend_12 { pt3dadd( -20.4996, 33.4417, -4.18752, 1.03 ) }
    dend_12 { pt3dadd( -21.5399, 34.5458, -4.82859, 0.81 ) }
    dend_12 { pt3dadd( -22.3007, 35.3864, -5.28998, 0.81 ) }
    dend_12 { pt3dadd( -23.1406, 36.3356, -5.77782, 0.81 ) }
    dend_12 { pt3dadd( -24.126, 37.5177, -6.3421, 0.52 ) }
    dend_12 { pt3dadd( -25.0334, 38.7089, -6.83088, 0.52 ) }
    dend_12 { pt3dadd( -25.5505, 39.4309, -7.07302, 0.52 ) }
    dend_12 { pt3dadd( -26.2981, 40.5344, -7.38124, 0.52 ) }
    dend_12 { pt3dadd( -27.2292, 41.955, -7.74157, 0.52 ) }
    dend_12 { pt3dadd( -27.721, 42.7302, -7.91426, 0.52 ) }
    dend_12 { pt3dadd( -28.226, 43.5318, -8.06253, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -28.826, 44.4857, -8.20696, 0.66 ) }
    dend_12 { pt3dadd( -29.3855, 45.4288, -8.31156, 0.88 ) }
    dend_12 { pt3dadd( -29.9298, 46.4373, -8.38481, 0.88 ) }
    dend_12 { pt3dadd( -30.5318, 47.6224, -8.45632, 0.59 ) }
    dend_12 { pt3dadd( -31.1383, 48.8008, -8.54565, 0.88 ) }
    dend_12 { pt3dadd( -31.5732, 49.6502, -8.62096, 0.88 ) }
    dend_12 { pt3dadd( -31.9241, 50.408, -8.68253, 0.96 ) }
    dend_12 { pt3dadd( -32.2285, 51.1026, -8.74665, 0.96 ) }
    dend_12 { pt3dadd( -32.5014, 51.7114, -8.81944, 0.96 ) }
    dend_12 { pt3dadd( -32.9916, 52.7098, -8.98149, 0.74 ) }
    dend_12 { pt3dadd( -33.7713, 54.1833, -9.27923, 1.25 ) }
    dend_12 { pt3dadd( -34.3137, 55.1658, -9.50257, 1.25 ) }
    dend_12 { pt3dadd( -34.9324, 56.2627, -9.76214, 0.29 ) }
    dend_12 { pt3dadd( -35.3463, 56.9919, -9.92683, 0.29 ) }
    dend_12 { pt3dadd( -35.7685, 57.7301, -10.0787, 0.66 ) }
    dend_12 { pt3dadd( -36.1548, 58.3959, -10.1965, 0.81 ) }
    dend_12 { pt3dadd( -36.4825, 58.9584, -10.2747, 0.81 ) }
    dend_12 { pt3dadd( -37.0351, 59.9534, -10.3534, 0.37 ) }
    dend_12 { pt3dadd( -37.5405, 61.0566, -10.4299, 0.37 ) }
    dend_12 { pt3dadd( -37.8218, 61.7804, -10.4883, 1.03 ) }
    dend_12 { pt3dadd( -38.0538, 62.4232, -10.5545, 1.25 ) }
    dend_12 { pt3dadd( -38.35, 63.2126, -10.6658, 1.25 ) }
    dend_12 { pt3dadd( -38.6071, 63.8417, -10.7872, 0.81 ) }
    dend_12 { pt3dadd( -39.1686, 65.0934, -11.0806, 0.59 ) }
    dend_12 { pt3dadd( -39.5081, 65.808, -11.2644, 0.44 ) }
    dend_12 { pt3dadd( -39.9916, 66.8126, -11.4894, 0.88 ) }
    dend_12 { pt3dadd( -40.3711, 67.5842, -11.6335, 0.88 ) }
    dend_12 { pt3dadd( -41.0416, 68.9268, -11.8067, 0.59 ) }
    dend_12 { pt3dadd( -41.478, 69.8192, -11.8939, 0.59 ) }
    dend_12 { pt3dadd( -42.1633, 71.2611, -11.9755, 0.44 ) }
    dend_12 { pt3dadd( -42.9099, 72.9208, -12.0342, 1.03 ) }
    dend_12 { pt3dadd( -43.5103, 74.3289, -12.0362, 1.55 ) }
    dend_12 { pt3dadd( -43.8524, 75.1996, -11.9954, 1.62 ) }
    dend_12 { pt3dadd( -44.3168, 76.4711, -11.8892, 1.11 ) }
    dend_12 { pt3dadd( -44.7937, 77.8644, -11.7373, 0.59 ) }
    dend_12 { pt3dadd( -45.1105, 78.8244, -11.6009, 0.59 ) }
    dend_12 { pt3dadd( -45.6212, 80.4244, -11.3295, 0.59 ) }
    dend_12 { pt3dadd( -46.1369, 82.0157, -11.0335, 0.52 ) }
    dend_12 { pt3dadd( -46.4888, 83.0539, -10.8184, 0.52 ) }
    dend_12 { pt3dadd( -46.9555, 84.3417, -10.5059, 0.52 ) }
    dend_12 { pt3dadd( -47.4619, 85.6842, -10.1745, 0.52 ) }
    dend_12 { pt3dadd( -48.0472, 87.1555, -9.83465, 0.37 ) }
    dend_12 { pt3dadd( -48.9163, 89.1149, -9.44026, 1.55 ) }
    dend_12 { pt3dadd( -49.2432, 89.7621, -9.33744, 1.92 ) }
    dend_12 { pt3dadd( -49.5793, 90.3523, -9.2726, 1.92 ) }
    dend_12 { pt3dadd( -49.8941, 90.8576, -9.24945, 1.92 ) }
    dend_12 { pt3dadd( -50.5663, 91.8186, -9.27622, 0.88 ) }
    dend_12 { pt3dadd( -51.4667, 93.0402, -9.37317, 0.44 ) }
    dend_12 { pt3dadd( -52.1451, 93.946, -9.46895, 0.44 ) }
    dend_12 { pt3dadd( -52.8677, 94.9291, -9.59104, 0.44 ) }
    dend_12 { pt3dadd( -53.8687, 96.3295, -9.76144, 0.37 ) }
    dend_12 { pt3dadd( -54.4007, 97.0917, -9.851, 0.37 ) }
    dend_12 { pt3dadd( -55.494, 98.7259, -10.0236, 0.74 ) }
    dend_12 { pt3dadd( -55.9307, 99.397, -10.0808, 0.74 ) }
    dend_12 { pt3dadd( -56.4697, 100.259, -10.1424, 0.52 ) }
    dend_12 { pt3dadd( -57.1762, 101.453, -10.2362, 1.25 ) }
    dend_12 { pt3dadd( -57.6563, 102.294, -10.3318, 1.47 ) }
    dend_12 { pt3dadd( -57.9705, 102.867, -10.4133, 1.47 ) }
    dend_12 { pt3dadd( -58.3929, 103.582, -10.5804, 0.81 ) }
    dend_12 { pt3dadd( -58.9609, 104.48, -10.8561, 0.59 ) }
    dend_12 { pt3dadd( -59.5205, 105.315, -11.1901, 0.88 ) }
    dend_12 { pt3dadd( -59.9876, 105.99, -11.5022, 1.18 ) }
    dend_12 { pt3dadd( -60.2764, 106.406, -11.7073, 1.18 ) }
    dend_12 { pt3dadd( -60.993, 107.459, -12.1779, 0.96 ) }
    dend_12 { pt3dadd( -61.7701, 108.649, -12.6123, 0.52 ) }
    dend_12 { pt3dadd( -62.2371, 109.384, -12.7852, 0.37 ) }
    dend_12 { pt3dadd( -62.9369, 110.515, -12.9091, 0.37 ) }
    dend_12 { pt3dadd( -63.6241, 111.683, -12.921, 0.37 ) }
    dend_12 { pt3dadd( -64.2674, 112.846, -12.8427, 0.37 ) }
    dend_12 { pt3dadd( -64.7214, 113.742, -12.7092, 0.81 ) }
    dend_12 { pt3dadd( -65.3792, 115.177, -12.4282, 1.84 ) }
    dend_12 { pt3dadd( -65.641, 115.757, -12.3119, 1.92 ) }
    dend_12 { pt3dadd( -65.8364, 116.177, -12.2427, 1.92 ) }
    dend_12 { pt3dadd( -66.1826, 116.96, -12.1375, 1.62 ) }
    dend_12 { pt3dadd( -66.6389, 118.076, -12.0495, 0.88 ) }
    dend_12 { pt3dadd( -67.0871, 119.282, -11.9854, 0.29 ) }
    dend_12 { pt3dadd( -67.7608, 121.165, -11.9207, 0.29 ) }
    dend_12 { pt3dadd( -68.2733, 122.52, -11.8869, 0.29 ) }
    dend_12 { pt3dadd( -68.616, 123.31, -11.874, 0.29 ) }
    dend_12 { pt3dadd( -68.8018, 123.677, -11.8737, 0.29 ) }
    dend_12 { pt3dadd( -69.2887, 124.484, -11.8947, 0.66 ) }
    dend_12 { pt3dadd( -69.9181, 125.37, -11.9458, 0.81 ) }
    dend_12 { pt3dadd( -70.3786, 125.956, -11.9942, 0.81 ) }
    dend_12 { pt3dadd( -71.2602, 127.062, -12.0947, 0.37 ) }
    dend_12 { pt3dadd( -71.9554, 127.912, -12.1796, 0.37 ) }
    dend_12 { pt3dadd( -72.6131, 128.726, -12.2584, 0.81 ) }
    dend_12 { pt3dadd( -73.0776, 129.305, -12.3085, 0.81 ) }
    dend_12 { pt3dadd( -73.7382, 130.137, -12.3669, 0.37 ) }
    dend_12 { pt3dadd( -74.3961, 130.911, -12.4298, 0.37 ) }
    dend_12 { pt3dadd( -75.0727, 131.634, -12.5011, 0.88 ) }
    dend_12 { pt3dadd( -75.907, 132.482, -12.5934, 1.47 ) }
    dend_12 { pt3dadd( -76.5337, 133.117, -12.6675, 1.69 ) }
    dend_12 { pt3dadd( -77.0395, 133.636, -12.7328, 1.69 ) }
    dend_12 { pt3dadd( -78.4144, 135.029, -12.9264, 0.37 ) }
    dend_12 { pt3dadd( -78.885, 135.515, -12.9938, 0.37 ) }
    dend_12 { pt3dadd( -79.7582, 136.485, -13.1205, 0.37 ) }
    dend_12 { pt3dadd( -80.7524, 137.687, -13.2638, 0.81 ) }
    dend_12 { pt3dadd( -81.3845, 138.566, -13.346, 1.33 ) }
    dend_12 { pt3dadd( -81.7603, 139.15, -13.3939, 1.33 ) }
    dend_12 { pt3dadd( -82.2578, 139.974, -13.4592, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -83.2576, 141.593, -13.6189, 0.52 ) }
    dend_12 { pt3dadd( -84.0902, 142.849, -13.7841, 0.52 ) }
    dend_12 { pt3dadd( -85.0261, 144.242, -13.9883, 0.52 ) }
    dend_12 { pt3dadd( -85.5411, 145.011, -14.1069, 0.52 ) }
    dend_12 { pt3dadd( -86.2004, 146.008, -14.2651, 0.52 ) }
    dend_12 { pt3dadd( -86.9361, 147.127, -14.454, 0.52 ) }
    dend_12 { pt3dadd( -88.1856, 149.013, -14.7937, 0.52 ) }
    dend_12 { pt3dadd( -88.6382, 149.695, -14.9188, 0.52 ) }
    dend_12 { pt3dadd( -89.7663, 151.363, -15.23, 1.25 ) }
    dend_12 { pt3dadd( -90.0861, 151.835, -15.3148, 1.47 ) }
    dend_12 { pt3dadd( -90.5041, 152.45, -15.4335, 1.47 ) }
    dend_12 { pt3dadd( -91.1172, 153.306, -15.6243, 0.88 ) }
    dend_12 { pt3dadd( -91.8668, 154.258, -15.8772, 0.29 ) }
    dend_12 { pt3dadd( -92.1819, 154.613, -15.9872, 0.29 ) }
    dend_12 { pt3dadd( -92.8417, 155.289, -16.2156, 0.44 ) }
    dend_12 { pt3dadd( -93.3718, 155.805, -16.3884, 0.44 ) }
    dend_12 { pt3dadd( -93.8771, 156.275, -16.5406, 0.44 ) }
    dend_12 { pt3dadd( -94.1686, 156.564, -16.6391, 0.44 ) }
    dend_12 { pt3dadd( -94.5889, 156.993, -16.7537, 0.29 ) }
    dend_12 { pt3dadd( -95.1396, 157.686, -16.8344, 0.29 ) }
    dend_12 { pt3dadd( -95.3347, 157.949, -16.8383, 0.44 ) }
    dend_12 { pt3dadd( -95.5785, 158.278, -16.8251, 0.44 ) }
    dend_12 { pt3dadd( -96.2303, 159.124, -16.7766, 0.37 ) }
    dend_12 { pt3dadd( -97.1192, 160.223, -16.7087, 0.44 ) }
    dend_12 { pt3dadd( -98.5314, 161.985, -16.7067, 2.28 ) }
    dend_12 { pt3dadd( -99.0846, 162.691, -16.7424, 2.5 ) }
    dend_12 { pt3dadd( -99.4979, 163.254, -16.7943, 2.5 ) }
    dend_12 { pt3dadd( -100.151, 164.187, -16.9191, 1.92 ) }
    dend_12 { pt3dadd( -100.776, 165.141, -17.1054, 0.81 ) }
    dend_12 { pt3dadd( -101.518, 166.47, -17.4842, 0.52 ) }
    dend_12 { pt3dadd( -101.806, 167.084, -17.6733, 0.52 ) }
    dend_12 { pt3dadd( -102.388, 168.505, -18.1061, 0.88 ) }
    dend_12 { pt3dadd( -102.698, 169.382, -18.3532, 0.88 ) }
    dend_12 { pt3dadd( -103.029, 170.44, -18.6203, 0.66 ) }
    dend_12 { pt3dadd( -103.276, 171.309, -18.8184, 0.44 ) }
    dend_12 { pt3dadd( -103.613, 172.567, -19.0525, 0.29 ) }
    dend_12 { pt3dadd( -103.958, 174.019, -19.3175, 0.29 ) }
    dend_12 { pt3dadd( -104.286, 175.679, -19.6242, 0.29 ) }
    dend_12 { pt3dadd( -104.425, 176.504, -19.7807, 0.29 ) }
    dend_12 { pt3dadd( -104.639, 178.041, -20.1312, 0.52 ) }
    dend_12 { pt3dadd( -104.778, 179.102, -20.4236, 0.88 ) }
    dend_12 { pt3dadd( -104.884, 179.98, -20.7257, 0.88 ) }
    dend_12 { pt3dadd( -105.02, 180.951, -21.1227, 0.44 ) }
    dend_12 { pt3dadd( -105.356, 182.501, -21.8883, 1.11 ) }
    dend_12 { pt3dadd( -105.788, 183.853, -22.6641, 2.43 ) }
    dend_12 { pt3dadd( -106.202, 184.772, -23.272, 2.43 ) }
    dend_12 { pt3dadd( -106.526, 185.307, -23.6764, 2.43 ) }
    dend_12 { pt3dadd( -107.037, 185.941, -24.1901, 1.69 ) }
    dend_12 { pt3dadd( -107.818, 186.742, -24.8857, 0.59 ) }
    dend_12 { pt3dadd( -108.74, 187.505, -25.5894, 0.74 ) }
    dend_12 { pt3dadd( -109.07, 187.736, -25.7954, 0.74 ) }
    dend_12 { pt3dadd( -109.633, 188.104, -26.1311, 0.52 ) }
    dend_12 { pt3dadd( -110.515, 188.669, -26.6141, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.6309, 5.97288, 6.19553, 1.99 ) }
    dend_2 { pt3dadd( 25.6852, 6.02618, 6.30967, 1.99 ) }
    dend_2 { pt3dadd( 26.9042, 6.35583, 6.4085, 1.99 ) }
    dend_2 { pt3dadd( 27.7804, 6.90207, 6.46744, 1.69 ) }
    dend_2 { pt3dadd( 29.0122, 7.66997, 6.5503, 1.69 ) }
    dend_2 { pt3dadd( 29.531, 7.9934, 6.5852, 1.69 ) }
    dend_2 { pt3dadd( 30.3929, 8.53078, 6.64319, 1.69 ) }
    dend_2 { pt3dadd( 30.9613, 9.08526, 6.61415, 1.92 ) }
    dend_2 { pt3dadd( 31.8159, 10.2771, 6.60606, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 23.6309, 5.97288, 6.19553, 0.74 ) }
    dend_1 { pt3dadd( 24.2933, 7.55508, 6.42415, 0.74 ) }
    dend_1 { pt3dadd( 24.5413, 8.24018, 6.51036, 0.74 ) }
    dend_1 { pt3dadd( 24.8848, 9.31448, 6.62732, 0.74 ) }
    dend_1 { pt3dadd( 25.1532, 10.2388, 6.71778, 0.44 ) }
    dend_1 { pt3dadd( 25.3591, 11.0222, 6.79598, 0.44 ) }
    dend_1 { pt3dadd( 25.6355, 12.1838, 6.91245, 0.66 ) }
    dend_1 { pt3dadd( 25.7396, 12.7429, 6.9573, 0.88 ) }
    dend_1 { pt3dadd( 25.8732, 13.5561, 7.04282, 0.88 ) }
    dend_1 { pt3dadd( 25.9827, 14.3078, 7.15134, 1.03 ) }
    dend_1 { pt3dadd( 26.1512, 15.3868, 7.33707, 0.96 ) }
    dend_1 { pt3dadd( 26.2833, 16.1521, 7.48227, 0.52 ) }
    dend_1 { pt3dadd( 26.4097, 16.7676, 7.60582, 0.52 ) }
    dend_1 { pt3dadd( 26.554, 17.5861, 7.77314, 0.88 ) }
    dend_1 { pt3dadd( 26.672, 18.2533, 7.91252, 0.66 ) }
    dend_1 { pt3dadd( 26.8072, 19.0004, 8.07566, 0.88 ) }
    dend_1 { pt3dadd( 26.9266, 19.6675, 8.2259, 0.88 ) }
    dend_1 { pt3dadd( 27.0913, 20.6529, 8.45893, 0.29 ) }
    dend_1 { pt3dadd( 27.2045, 21.4491, 8.6432, 0.29 ) }
    dend_1 { pt3dadd( 27.2756, 21.9973, 8.76087, 0.29 ) }
    dend_1 { pt3dadd( 27.3955, 22.932, 8.9671, 0.44 ) }
    dend_1 { pt3dadd( 27.4803, 23.4903, 9.10556, 0.74 ) }
    dend_1 { pt3dadd( 27.6086, 24.1623, 9.27998, 0.88 ) }
    dend_1 { pt3dadd( 27.7026, 24.5691, 9.39266, 1.11 ) }
    dend_1 { pt3dadd( 27.7865, 24.8907, 9.48044, 1.11 ) }
    dend_1 { pt3dadd( 27.9468, 25.6212, 9.65573, 0.29 ) }
    dend_1 { pt3dadd( 28.1196, 26.3409, 9.79459, 0.29 ) }
    dend_1 { pt3dadd( 28.3169, 27.0206, 9.90829, 0.29 ) }
    dend_1 { pt3dadd( 30.1254, 34.4249, 12.852, 0.29 ) }
    dend_1 { pt3dadd( 32.9858, 41.683, 15.3287, 0.29 ) }
    dend_1 { pt3dadd( 34.9809, 49.3951, 17.0046, 0.29 ) }
    dend_1 { pt3dadd( 36.2338, 57.3256, 18.2023, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -93.3806, -62.7017, 5.28784, 0.44 ) }
    dend_48 { pt3dadd( -94.5071, -63.3132, 5.86309, 0.44 ) }
    dend_48 { pt3dadd( -95.0804, -63.664, 6.13526, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -95.6915, -64.0586, 6.39211, 0.29 ) }
    dend_48 { pt3dadd( -96.0521, -64.2958, 6.53316, 0.29 ) }
    dend_48 { pt3dadd( -96.8228, -64.7881, 6.81721, 0.37 ) }
    dend_48 { pt3dadd( -97.1737, -65.0035, 6.95227, 0.37 ) }
    dend_48 { pt3dadd( -97.7203, -65.3051, 7.11769, 0.29 ) }
    dend_48 { pt3dadd( -98.2417, -65.6351, 7.27574, 0.29 ) }
    dend_48 { pt3dadd( -98.6395, -65.9208, 7.39358, 0.29 ) }
    dend_48 { pt3dadd( -98.9162, -66.1286, 7.47209, 0.29 ) }
    dend_48 { pt3dadd( -99.3479, -66.4434, 7.59417, 0.29 ) }
    dend_48 { pt3dadd( -99.775, -66.7153, 7.71679, 0.44 ) }
    dend_48 { pt3dadd( -100.364, -67.0526, 7.89446, 0.44 ) }
    dend_48 { pt3dadd( -100.672, -67.2451, 8.00035, 0.44 ) }
    dend_48 { pt3dadd( -101.117, -67.5663, 8.17088, 0.66 ) }
    dend_48 { pt3dadd( -101.555, -67.9547, 8.35855, 0.66 ) }
    dend_48 { pt3dadd( -101.775, -68.2128, 8.46918, 0.52 ) }
    dend_48 { pt3dadd( -102.128, -68.8404, 8.72186, 0.44 ) }
    dend_48 { pt3dadd( -102.247, -69.2821, 8.88078, 0.66 ) }
    dend_48 { pt3dadd( -102.289, -69.7439, 9.03502, 0.66 ) }
    dend_48 { pt3dadd( -102.295, -70.2774, 9.20472, 0.52 ) }
    dend_48 { pt3dadd( -102.296, -70.9863, 9.43491, 0.52 ) }
    dend_48 { pt3dadd( -102.278, -71.6319, 9.63433, 0.44 ) }
    dend_48 { pt3dadd( -102.247, -72.1972, 9.80262, 0.37 ) }
    dend_48 { pt3dadd( -102.229, -73.0754, 10.0679, 0.37 ) }
    dend_48 { pt3dadd( -102.245, -73.7702, 10.2946, 0.29 ) }
    dend_48 { pt3dadd( -102.316, -74.4803, 10.5683, 0.29 ) }
    dend_48 { pt3dadd( -106.625, -78.9715, 11.4826, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -93.3806, -62.7017, 5.28784, 1.11 ) }
    dend_45 { pt3dadd( -94.4374, -63.1752, 5.5457, 1.11 ) }
    dend_45 { pt3dadd( -95.2623, -63.6148, 5.71605, 1.11 ) }
    dend_45 { pt3dadd( -96.9336, -64.5667, 6.05951, 0.88 ) }
    dend_45 { pt3dadd( -98.2079, -65.2548, 6.32517, 0.88 ) }
    dend_45 { pt3dadd( -100.147, -66.2221, 6.73582, 0.88 ) }
    dend_45 { pt3dadd( -102.172, -67.1412, 7.15872, 0.88 ) }
    dend_45 { pt3dadd( -103.283, -67.6377, 7.38842, 0.88 ) }
    dend_45 { pt3dadd( -104.318, -68.0829, 7.57588, 0.81 ) }
    dend_45 { pt3dadd( -105.487, -68.5598, 7.75776, 0.81 ) }
    dend_45 { pt3dadd( -106.332, -68.8698, 7.88809, 0.81 ) }
    dend_45 { pt3dadd( -107.833, -69.3686, 8.12985, 0.96 ) }
    dend_45 { pt3dadd( -108.618, -69.6525, 8.24603, 0.96 ) }
    dend_45 { pt3dadd( -109.422, -70.0218, 8.33183, 0.96 ) }
    dend_45 { pt3dadd( -110.188, -70.4884, 8.36625, 0.96 ) }
    dend_45 { pt3dadd( -111.187, -71.2165, 8.37652, 0.96 ) }
    dend_45 { pt3dadd( -111.521, -71.4701, 8.37017, 0.96 ) }
    dend_45 { pt3dadd( -112.546, -72.2229, 8.32483, 0.88 ) }
    dend_45 { pt3dadd( -113.837, -73.0457, 8.25014, 0.88 ) }
    dend_45 { pt3dadd( -114.763, -73.6084, 8.18843, 1.11 ) }
    dend_45 { pt3dadd( -115.697, -74.1777, 8.12162, 1.11 ) }
    dend_45 { pt3dadd( -116.78, -74.8587, 8.01939, 0.96 ) }
    dend_45 { pt3dadd( -117.693, -75.493, 7.95046, 0.96 ) }
    dend_45 { pt3dadd( -118.942, -76.4611, 7.88487, 0.88 ) }
    dend_45 { pt3dadd( -120.376, -77.6789, 7.77907, 0.88 ) }
    dend_45 { pt3dadd( -121.488, -78.6561, 7.6372, 0.96 ) }
    dend_45 { pt3dadd( -122.383, -79.4438, 7.48021, 0.96 ) }
    dend_45 { pt3dadd( -123.664, -80.5227, 7.22206, 0.88 ) }
    dend_45 { pt3dadd( -124.276, -80.9992, 7.07398, 0.74 ) }
    dend_45 { pt3dadd( -125.657, -81.9848, 6.69871, 0.96 ) }
    dend_45 { pt3dadd( -126.881, -82.7626, 6.36623, 1.11 ) }
    dend_45 { pt3dadd( -127.877, -83.3633, 6.11592, 1.25 ) }
    dend_45 { pt3dadd( -128.738, -83.8905, 5.92253, 1.25 ) }
    dend_45 { pt3dadd( -130.123, -84.7674, 5.63883, 1.03 ) }
    dend_45 { pt3dadd( -131.979, -86.0506, 5.34599, 0.88 ) }
    dend_45 { pt3dadd( -133.316, -87.0863, 5.18632, 0.88 ) }
    dend_45 { pt3dadd( -134.661, -88.2109, 5.04078, 0.88 ) }
    dend_45 { pt3dadd( -135.783, -89.1616, 4.91495, 0.88 ) }
    dend_45 { pt3dadd( -136.867, -90.0411, 4.80032, 1.33 ) }
    dend_45 { pt3dadd( -137.718, -90.6668, 4.73057, 1.33 ) }
    dend_45 { pt3dadd( -138.734, -91.359, 4.64937, 1.18 ) }
    dend_45 { pt3dadd( -139.45, -91.8158, 4.5899, 0.96 ) }
    dend_45 { pt3dadd( -140.739, -92.5787, 4.5041, 0.96 ) }
    dend_45 { pt3dadd( -141.924, -93.2042, 4.45698, 0.96 ) }
    dend_45 { pt3dadd( -143.515, -93.9353, 4.46332, 0.88 ) }
    dend_45 { pt3dadd( -144.887, -94.4408, 4.55202, 0.81 ) }
    dend_45 { pt3dadd( -145.653, -94.6576, 4.65617, 0.81 ) }
    dend_45 { pt3dadd( -146.544, -94.8799, 4.80968, 0.74 ) }
    dend_45 { pt3dadd( -147.201, -95.0686, 4.93205, 0.74 ) }
    dend_45 { pt3dadd( -148.039, -95.3831, 5.08662, 0.74 ) }
    dend_45 { pt3dadd( -149.237, -95.9913, 5.28923, 0.74 ) }
    dend_45 { pt3dadd( -149.905, -96.4689, 5.37165, 1.11 ) }
    dend_45 { pt3dadd( -150.927, -97.4789, 5.42547, 1.11 ) }
    dend_45 { pt3dadd( -152.183, -98.983, 5.40999, 0.88 ) }
    dend_45 { pt3dadd( -152.999, -100.099, 5.3627, 0.88 ) }
    dend_45 { pt3dadd( -153.625, -101.036, 5.30315, 0.88 ) }
    dend_45 { pt3dadd( -154.486, -102.34, 5.20833, 0.81 ) }
    dend_45 { pt3dadd( -155.682, -104.017, 5.04174, 0.81 ) }
    dend_45 { pt3dadd( -156.3, -104.8, 4.94662, 1.18 ) }
    dend_45 { pt3dadd( -156.986, -105.632, 4.80942, 1.33 ) }
    dend_45 { pt3dadd( -157.734, -106.468, 4.64657, 1.33 ) }
    dend_45 { pt3dadd( -158.966, -107.718, 4.37646, 0.88 ) }
    dend_45 { pt3dadd( -160.195, -108.849, 4.08928, 0.81 ) }
    dend_45 { pt3dadd( -161.485, -109.942, 3.79762, 0.81 ) }
    dend_45 { pt3dadd( -163.021, -111.173, 3.43931, 0.81 ) }
    dend_45 { pt3dadd( -164.189, -112.06, 3.14055, 0.81 ) }
    dend_45 { pt3dadd( -165.292, -112.87, 2.85252, 1.11 ) }
    dend_45 { pt3dadd( -165.962, -113.353, 2.67012, 1.25 ) }
    dend_45 { pt3dadd( -166.764, -113.929, 2.45361, 2.14 ) }
    dend_45 { pt3dadd( -167.54, -114.514, 2.21457, 2.5 ) }
    dend_45 { pt3dadd( -168.603, -115.303, 1.88878, 1.92 ) }
    dend_45 { pt3dadd( -170.143, -116.603, 1.32342, 1.11 ) }
    dend_45 { pt3dadd( -170.804, -117.235, 1.04235, 0.96 ) }
    dend_45 { pt3dadd( -171.712, -118.184, 0.628649, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -172.882, -119.459, 0.028297, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -11.8971, -113.849, -3.18773, 0.37 ) }
    dend_41 { pt3dadd( -11.1721, -116.379, -1.9488, 0.37 ) }
    dend_41 { pt3dadd( -10.9545, -117.034, -1.6521, 0.52 ) }
    dend_41 { pt3dadd( -10.6731, -117.836, -1.32073, 0.66 ) }
    dend_41 { pt3dadd( -10.353, -118.751, -0.966104, 0.37 ) }
    dend_41 { pt3dadd( -10.1099, -119.428, -0.712453, 0.44 ) }
    dend_41 { pt3dadd( -9.82223, -120.215, -0.429015, 0.44 ) }
    dend_41 { pt3dadd( -9.44956, -121.156, -0.185476, 0.29 ) }
    dend_41 { pt3dadd( -9.06781, -122.04, 0.0533349, 0.29 ) }
    dend_41 { pt3dadd( -8.68511, -122.782, 0.266596, 0.59 ) }
    dend_41 { pt3dadd( -8.28717, -123.422, 0.448167, 0.59 ) }
    dend_41 { pt3dadd( -7.79046, -124.091, 0.63584, 0.37 ) }
    dend_41 { pt3dadd( -7.24427, -124.723, 0.805792, 0.66 ) }
    dend_41 { pt3dadd( -6.70354, -125.257, 0.948921, 0.52 ) }
    dend_41 { pt3dadd( -5.86808, -125.973, 1.13242, 0.37 ) }
    dend_41 { pt3dadd( -5.22172, -126.476, 1.24919, 0.37 ) }
    dend_41 { pt3dadd( -4.24225, -127.22, 1.39534, 0.37 ) }
    dend_41 { pt3dadd( -3.28361, -127.935, 1.51228, 1.03 ) }
    dend_41 { pt3dadd( -2.58336, -128.459, 1.57896, 1.18 ) }
    dend_41 { pt3dadd( -1.91962, -128.962, 1.62027, 0.81 ) }
    dend_41 { pt3dadd( -1.39404, -129.369, 1.63777, 0.52 ) }
    dend_41 { pt3dadd( -0.410537, -130.134, 1.66922, 0.52 ) }
    dend_41 { pt3dadd( 0.522597, -130.889, 1.69571, 0.59 ) }
    dend_41 { pt3dadd( 1.33871, -131.602, 1.68827, 0.59 ) }
    dend_41 { pt3dadd( 2.00327, -132.243, 1.66122, 0.81 ) }
    dend_41 { pt3dadd( 2.54294, -132.8, 1.62894, 0.81 ) }
    dend_41 { pt3dadd( 3.13544, -133.447, 1.58085, 0.66 ) }
    dend_41 { pt3dadd( 3.5623, -133.94, 1.53531, 0.29 ) }
    dend_41 { pt3dadd( 4.53683, -135.14, 1.4126, 0.52 ) }
    dend_41 { pt3dadd( 5.36609, -136.186, 1.30095, 1.03 ) }
    dend_41 { pt3dadd( 5.66323, -136.569, 1.25507, 1.47 ) }
    dend_41 { pt3dadd( 6.20829, -137.237, 1.16917, 1.62 ) }
    dend_41 { pt3dadd( 6.94621, -138.049, 1.05673, 1.03 ) }
    dend_41 { pt3dadd( 7.6642, -138.749, 0.972263, 0.29 ) }
    dend_41 { pt3dadd( 8.36302, -139.359, 0.917469, 0.29 ) }
    dend_41 { pt3dadd( 9.18423, -140.015, 0.855725, 0.37 ) }
    dend_41 { pt3dadd( 10.0399, -140.69, 0.792294, 0.66 ) }
    dend_41 { pt3dadd( 10.481, -141.035, 0.76529, 0.81 ) }
    dend_41 { pt3dadd( 11.1787, -141.562, 0.741236, 0.96 ) }
    dend_41 { pt3dadd( 11.7053, -141.954, 0.735826, 0.44 ) }
    dend_41 { pt3dadd( 12.1229, -142.26, 0.744652, 0.29 ) }
    dend_41 { pt3dadd( 12.9301, -142.839, 0.792922, 0.29 ) }
    dend_41 { pt3dadd( 13.536, -143.324, 0.838756, 0.59 ) }
    dend_41 { pt3dadd( 14.1122, -143.846, 0.891149, 0.74 ) }
    dend_41 { pt3dadd( 14.5701, -144.309, 0.937804, 0.74 ) }
    dend_41 { pt3dadd( 15.1791, -144.999, 1.00215, 0.74 ) }
    dend_41 { pt3dadd( 15.6632, -145.603, 1.04773, 0.44 ) }
    dend_41 { pt3dadd( 16.3022, -146.469, 1.10119, 0.29 ) }
    dend_41 { pt3dadd( 16.6781, -147.013, 1.12488, 0.66 ) }
    dend_41 { pt3dadd( 17.1455, -147.705, 1.14246, 0.88 ) }
    dend_41 { pt3dadd( 17.5824, -148.344, 1.15302, 0.96 ) }
    dend_41 { pt3dadd( 18.212, -149.239, 1.17729, 0.66 ) }
    dend_41 { pt3dadd( 18.8611, -150.157, 1.2096, 0.37 ) }
    dend_41 { pt3dadd( 19.6321, -151.192, 1.25685, 0.74 ) }
    dend_41 { pt3dadd( 20.0628, -151.752, 1.28567, 0.81 ) }
    dend_41 { pt3dadd( 20.5593, -152.407, 1.32383, 0.37 ) }
    dend_41 { pt3dadd( 21.2199, -153.323, 1.38024, 0.37 ) }
    dend_41 { pt3dadd( 21.7846, -154.143, 1.43118, 0.37 ) }
    dend_41 { pt3dadd( 22.2521, -154.847, 1.47153, 0.37 ) }
    dend_41 { pt3dadd( 22.6261, -155.437, 1.50006, 0.52 ) }
    dend_41 { pt3dadd( 23.0733, -156.133, 1.52394, 0.52 ) }
    dend_41 { pt3dadd( 23.5372, -156.843, 1.53519, 0.37 ) }
    dend_41 { pt3dadd( 24.0147, -157.589, 1.52927, 0.37 ) }
    dend_41 { pt3dadd( 24.5757, -158.44, 1.52231, 0.81 ) }
    dend_41 { pt3dadd( 24.9181, -158.907, 1.52, 0.88 ) }
    dend_41 { pt3dadd( 25.5077, -159.622, 1.51805, 0.59 ) }
    dend_41 { pt3dadd( 26.0221, -160.193, 1.51977, 0.37 ) }
    dend_41 { pt3dadd( 26.5513, -160.734, 1.52364, 0.37 ) }
    dend_41 { pt3dadd( 27.2303, -161.386, 1.53581, 0.44 ) }
    dend_41 { pt3dadd( 28.6289, -162.634, 1.5737, 0.44 ) }
    dend_41 { pt3dadd( 29.5497, -163.363, 1.60507, 1.18 ) }
    dend_41 { pt3dadd( 30.2457, -163.873, 1.6345, 1.47 ) }
    dend_41 { pt3dadd( 31.0191, -164.407, 1.65752, 1.47 ) }
    dend_41 { pt3dadd( 32.1606, -165.186, 1.67449, 1.18 ) }
    dend_41 { pt3dadd( 33.0478, -165.829, 1.66409, 0.29 ) }
    dend_41 { pt3dadd( 33.6003, -166.266, 1.63915, 0.29 ) }
    dend_41 { pt3dadd( 34.0215, -166.621, 1.5988, 0.29 ) }
    dend_41 { pt3dadd( 34.7777, -167.318, 1.46339, 0.59 ) }
    dend_41 { pt3dadd( 35.5101, -168.074, 1.27357, 0.66 ) }
    dend_41 { pt3dadd( 35.9132, -168.547, 1.13015, 0.74 ) }
    dend_41 { pt3dadd( 36.3253, -169.098, 0.960088, 0.59 ) }
    dend_41 { pt3dadd( 36.7751, -169.776, 0.758427, 0.44 ) }
    dend_41 { pt3dadd( 37.3103, -170.643, 0.499856, 0.29 ) }
    dend_41 { pt3dadd( 37.6199, -171.227, 0.335897, 0.37 ) }
    dend_41 { pt3dadd( 38.0675, -172.208, 0.071202, 0.52 ) }
    dend_41 { pt3dadd( 38.3609, -172.958, -0.0988573, 1.03 ) }
    dend_41 { pt3dadd( 38.642, -173.743, -0.276002, 1.55 ) }
    dend_41 { pt3dadd( 38.8845, -174.423, -0.419159, 1.55 ) }
    dend_41 { pt3dadd( 39.4855, -176.137, -0.775041, 0.44 ) }
    dend_41 { pt3dadd( 39.9011, -177.256, -1.01914, 0.37 ) }
    dend_41 { pt3dadd( 40.9784, -179.757, -1.63148, 0.29 ) }
    dend_41 { pt3dadd( 41.2572, -180.288, -1.77359, 0.29 ) }
    dend_41 { pt3dadd( 42.1509, -181.66, -2.16061, 1.47 ) }
    dend_41 { pt3dadd( 42.5233, -182.107, -2.2995, 1.92 ) }
    dend_41 { pt3dadd( 43.296, -182.825, -2.56635, 2.06 ) }
    dend_41 { pt3dadd( 44.4934, -183.713, -3.00758, 0.81 ) }
    dend_41 { pt3dadd( 46.0864, -184.657, -3.65871, 0.29 ) }
    dend_41 { pt3dadd( 47.0989, -185.214, -4.10093, 0.29 ) }
    dend_41 { pt3dadd( 48.4256, -185.919, -4.66854, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 49.0745, -186.27, -4.91919, 0.52 ) }
    dend_41 { pt3dadd( 50.6039, -187.137, -5.42683, 0.29 ) }
    dend_41 { pt3dadd( 51.7175, -187.81, -5.7068, 0.88 ) }
    dend_41 { pt3dadd( 52.355, -188.223, -5.78978, 0.74 ) }
    dend_41 { pt3dadd( 53.8178, -189.288, -5.73463, 0.29 ) }
    dend_41 { pt3dadd( 54.8189, -190.069, -5.53049, 0.29 ) }
    dend_41 { pt3dadd( 55.7794, -190.852, -5.22423, 0.59 ) }
    dend_41 { pt3dadd( 56.3904, -191.372, -4.96984, 0.66 ) }
    dend_41 { pt3dadd( 57.5387, -192.383, -4.44335, 0.29 ) }
    dend_41 { pt3dadd( 58.6839, -193.444, -3.92262, 0.29 ) }
    dend_41 { pt3dadd( 59.4348, -194.208, -3.62691, 0.29 ) }
    dend_41 { pt3dadd( 60.1225, -194.999, -3.39376, 1.03 ) }
    dend_41 { pt3dadd( 60.6236, -195.62, -3.26064, 1.47 ) }
    dend_41 { pt3dadd( 61.0808, -196.22, -3.18134, 1.18 ) }
    dend_41 { pt3dadd( 61.9252, -197.39, -3.11267, 0.22 ) }
    dend_41 { pt3dadd( 62.6836, -198.471, -3.08788, 0.22 ) }
    dend_41 { pt3dadd( 63.6567, -199.867, -3.09573, 0.22 ) }
    dend_41 { pt3dadd( 64.0738, -200.441, -3.10119, 0.52 ) }
    dend_41 { pt3dadd( 64.7966, -201.402, -3.11398, 0.29 ) }
    dend_41 { pt3dadd( 65.4847, -202.289, -3.13565, 0.29 ) }
    dend_41 { pt3dadd( 65.9256, -202.825, -3.1624, 0.88 ) }
    dend_41 { pt3dadd( 66.5277, -203.544, -3.17416, 0.88 ) }
    dend_41 { pt3dadd( 67.4105, -204.631, -3.16808, 0.29 ) }
    dend_41 { pt3dadd( 67.8087, -205.133, -3.1439, 0.29 ) }
    dend_41 { pt3dadd( 68.4957, -205.999, -3.03305, 0.96 ) }
    dend_41 { pt3dadd( 68.9688, -206.57, -2.89575, 1.4 ) }
    dend_41 { pt3dadd( 69.4632, -207.148, -2.7051, 1.77 ) }
    dend_41 { pt3dadd( 69.7703, -207.488, -2.56386, 1.77 ) }
    dend_41 { pt3dadd( 70.9738, -208.743, -1.9838, 0.22 ) }
    dend_41 { pt3dadd( 72.2051, -209.945, -1.34904, 0.22 ) }
    dend_41 { pt3dadd( 73.1798, -210.814, -0.856252, 0.88 ) }
    dend_41 { pt3dadd( 73.6236, -211.189, -0.646936, 1.33 ) }
    dend_41 { pt3dadd( 74.0854, -211.561, -0.459208, 1.33 ) }
    dend_41 { pt3dadd( 75.1485, -212.385, -0.0650833, 0.22 ) }
    dend_41 { pt3dadd( 76.4795, -213.378, 0.363795, 0.22 ) }
    dend_41 { pt3dadd( 77.9085, -214.449, 0.73857, 0.22 ) }
    dend_41 { pt3dadd( 79.218, -215.47, 1.00584, 0.22 ) }
    dend_41 { pt3dadd( 79.9838, -216.093, 1.13419, 0.74 ) }
    dend_41 { pt3dadd( 80.398, -216.451, 1.18857, 0.88 ) }
    dend_41 { pt3dadd( 80.8848, -216.907, 1.22715, 0.52 ) }
    dend_41 { pt3dadd( 81.7428, -217.828, 1.23332, 0.22 ) }
    dend_41 { pt3dadd( 82.172, -218.353, 1.21952, 0.88 ) }
    dend_41 { pt3dadd( 82.6377, -218.974, 1.20917, 1.33 ) }
    dend_41 { pt3dadd( 83.0021, -219.489, 1.21031, 1.33 ) }
    dend_41 { pt3dadd( 83.8392, -220.749, 1.23571, 0.29 ) }
    dend_41 { pt3dadd( 84.7952, -222.292, 1.30745, 0.29 ) }
    dend_41 { pt3dadd( 85.2479, -223.059, 1.37074, 0.44 ) }
    dend_41 { pt3dadd( 85.6343, -223.732, 1.45132, 0.59 ) }
    dend_41 { pt3dadd( 85.9811, -224.348, 1.546, 0.59 ) }
    dend_41 { pt3dadd( 86.5287, -225.334, 1.72851, 0.22 ) }
    dend_41 { pt3dadd( 87.0789, -226.346, 1.93355, 0.22 ) }
    dend_41 { pt3dadd( 87.4213, -226.964, 2.06045, 0.74 ) }
    dend_41 { pt3dadd( 87.63, -227.332, 2.1296, 0.88 ) }
    dend_41 { pt3dadd( 87.9145, -227.803, 2.20113, 0.88 ) }
    dend_41 { pt3dadd( 88.4867, -228.724, 2.33821, 0.22 ) }
    dend_41 { pt3dadd( 89.5122, -230.286, 2.54942, 0.22 ) }
    dend_41 { pt3dadd( 89.9771, -230.972, 2.61966, 0.52 ) }
    dend_41 { pt3dadd( 90.2825, -231.419, 2.65007, 0.66 ) }
    dend_41 { pt3dadd( 90.7642, -232.115, 2.68232, 0.44 ) }
    dend_41 { pt3dadd( 98.3513, -239.25, 1.54093, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.8971, -113.849, -3.18773, 2.28 ) }
    dend_34 { pt3dadd( -12.7625, -115.471, -2.92465, 2.28 ) }
    dend_34 { pt3dadd( -13.5835, -116.857, -2.62243, 1.62 ) }
    dend_34 { pt3dadd( -14.6332, -118.502, -2.25401, 1.33 ) }
    dend_34 { pt3dadd( -15.6817, -120.047, -1.93255, 0.88 ) }
    dend_34 { pt3dadd( -16.1936, -120.758, -1.79778, 0.88 ) }
    dend_34 { pt3dadd( -17.0035, -121.801, -1.61721, 1.03 ) }
    dend_34 { pt3dadd( -18.6137, -123.66, -1.33235, 1.03 ) }
    dend_34 { pt3dadd( -19.9985, -125.077, -1.15179, 0.96 ) }
    dend_34 { pt3dadd( -21.0932, -126.098, -1.07416, 0.88 ) }
    dend_34 { pt3dadd( -22.0245, -126.968, -1.07073, 1.11 ) }
    dend_34 { pt3dadd( -23.0362, -128.022, -1.15476, 1.33 ) }
    dend_34 { pt3dadd( -23.822, -129.031, -1.30685, 1.55 ) }
    dend_34 { pt3dadd( -24.4407, -130.065, -1.52259, 1.25 ) }
    dend_34 { pt3dadd( -24.8793, -131.113, -1.76907, 0.96 ) }
    dend_34 { pt3dadd( -25.2415, -132.56, -2.11184, 0.88 ) }
    dend_34 { pt3dadd( -25.4907, -134.362, -2.54742, 0.88 ) }
    dend_34 { pt3dadd( -25.6252, -136.291, -3.00007, 0.88 ) }
    dend_34 { pt3dadd( -25.6816, -137.99, -3.38144, 1.03 ) }
    dend_34 { pt3dadd( -25.6922, -139.578, -3.7159, 1.03 ) }
    dend_34 { pt3dadd( -25.6862, -141.448, -4.06843, 1.03 ) }
    dend_34 { pt3dadd( -25.6686, -143.154, -4.34849, 1.25 ) }
    dend_34 { pt3dadd( -25.6223, -145.121, -4.60634, 1.55 ) }
    dend_34 { pt3dadd( -25.5518, -146.626, -4.7494, 1.55 ) }
    dend_34 { pt3dadd( -25.3884, -148.702, -4.88272, 1.33 ) }
    dend_34 { pt3dadd( -25.2179, -150.399, -4.95466, 1.33 ) }
    dend_34 { pt3dadd( -25.0705, -151.914, -4.99908, 1.11 ) }
    dend_34 { pt3dadd( -24.9089, -153.535, -4.97201, 1.11 ) }
    dend_34 { pt3dadd( -24.7723, -155.316, -4.88409, 0.96 ) }
    dend_34 { pt3dadd( -24.7215, -156.64, -4.78678, 0.96 ) }
    dend_34 { pt3dadd( -24.7284, -158.555, -4.57899, 0.88 ) }
    dend_34 { pt3dadd( -24.8194, -161.079, -4.2459, 0.88 ) }
    dend_34 { pt3dadd( -24.9582, -163.267, -3.90377, 1.03 ) }
    dend_34 { pt3dadd( -25.1261, -165.214, -3.55861, 1.25 ) }
    dend_34 { pt3dadd( -25.3261, -167.064, -3.20536, 1.33 ) }
    dend_34 { pt3dadd( -25.5086, -168.52, -2.91378, 1.62 ) }
    dend_34 { pt3dadd( -25.6848, -170.016, -2.59315, 2.5 ) }
    dend_34 { pt3dadd( -25.7508, -170.829, -2.41932, 2.8 ) }
    dend_34 { pt3dadd( -25.8062, -171.836, -2.25175, 3.02 ) }
    dend_34 { pt3dadd( -25.8155, -172.781, -2.08451, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -25.8142, -173.414, -1.9752, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.3678, -47.2438, -8.70248, 0.81 ) }
    dend_30 { pt3dadd( -1.67038, -48.6879, -8.65032, 0.81 ) }
    dend_30 { pt3dadd( -1.94999, -49.6602, -8.56553, 0.66 ) }
    dend_30 { pt3dadd( -2.33595, -50.7466, -8.44653, 0.66 ) }
    dend_30 { pt3dadd( -2.78703, -51.8842, -8.3142, 0.52 ) }
    dend_30 { pt3dadd( -2.97453, -52.3386, -8.2614, 0.52 ) }
    dend_30 { pt3dadd( -3.47196, -53.5357, -8.12622, 0.74 ) }
    dend_30 { pt3dadd( -3.96339, -54.7542, -7.93486, 0.74 ) }
    dend_30 { pt3dadd( -4.40122, -55.7616, -7.78343, 0.88 ) }
    dend_30 { pt3dadd( -4.91739, -56.8528, -7.64218, 0.59 ) }
    dend_30 { pt3dadd( -5.26078, -57.5631, -7.57936, 1.03 ) }
    dend_30 { pt3dadd( -5.57453, -58.2604, -7.5277, 1.25 ) }
    dend_30 { pt3dadd( -5.88036, -59.0806, -7.4766, 1.03 ) }
    dend_30 { pt3dadd( -6.198, -60.1404, -7.42378, 0.66 ) }
    dend_30 { pt3dadd( -6.43474, -61.0049, -7.38721, 0.66 ) }
    dend_30 { pt3dadd( -6.67875, -61.8967, -7.36399, 0.81 ) }
    dend_30 { pt3dadd( -6.95013, -62.9401, -7.36957, 0.81 ) }
    dend_30 { pt3dadd( -7.14567, -63.8128, -7.4174, 0.66 ) }
    dend_30 { pt3dadd( -7.30069, -64.7367, -7.5169, 0.52 ) }
    dend_30 { pt3dadd( -7.37077, -65.2846, -7.6138, 0.52 ) }
    dend_30 { pt3dadd( -7.4499, -65.9557, -7.75284, 0.52 ) }
    dend_30 { pt3dadd( -7.57054, -66.9115, -7.97616, 0.66 ) }
    dend_30 { pt3dadd( -7.69727, -67.779, -8.18689, 0.66 ) }
    dend_30 { pt3dadd( -7.85355, -68.6953, -8.41665, 0.59 ) }
    dend_30 { pt3dadd( -8.04993, -69.6999, -8.65712, 1.18 ) }
    dend_30 { pt3dadd( -8.21253, -70.5751, -8.85813, 1.55 ) }
    dend_30 { pt3dadd( -8.38582, -71.4123, -9.03084, 1.99 ) }
    dend_30 { pt3dadd( -8.67036, -72.4252, -9.20938, 2.73 ) }
    dend_30 { pt3dadd( -8.9377, -73.1735, -9.31907, 2.87 ) }
    dend_30 { pt3dadd( -9.23079, -73.8707, -9.41864, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.3678, -47.2438, -8.70248, 0.52 ) }
    dend_29 { pt3dadd( -1.02305, -48.9208, -10.6306, 0.52 ) }
    dend_29 { pt3dadd( -0.941099, -49.3177, -11.0392, 0.52 ) }
    dend_29 { pt3dadd( -0.634562, -50.6274, -12.4024, 0.52 ) }
    dend_29 { pt3dadd( -0.357826, -51.5957, -13.4407, 0.66 ) }
    dend_29 { pt3dadd( -0.151027, -52.1873, -14.0657, 0.66 ) }
    dend_29 { pt3dadd( 0.0576489, -52.6855, -14.5946, 0.44 ) }
    dend_29 { pt3dadd( 0.291061, -53.3761, -15.2988, 0.88 ) }
    dend_29 { pt3dadd( 0.508671, -54.027, -15.9058, 1.33 ) }
    dend_29 { pt3dadd( 0.769805, -54.729, -16.5148, 1.47 ) }
    dend_29 { pt3dadd( 1.03493, -55.5397, -17.3109, 1.03 ) }
    dend_29 { pt3dadd( 1.23016, -56.8036, -18.6456, 0.44 ) }
    dend_29 { pt3dadd( 1.06778, -57.58, -19.5341, 0.44 ) }
    dend_29 { pt3dadd( 0.544158, -58.4724, -20.7342, 0.37 ) }
    dend_29 { pt3dadd( 0.00477459, -59.119, -21.7334, 0.37 ) }
    dend_29 { pt3dadd( -0.762275, -59.9432, -23.2421, 0.37 ) }
    dend_29 { pt3dadd( -1.2783, -60.4773, -24.4034, 0.74 ) }
    dend_29 { pt3dadd( -1.60326, -60.8364, -25.2986, 0.96 ) }
    dend_29 { pt3dadd( -1.94456, -61.3323, -26.5599, 0.96 ) }
    dend_29 { pt3dadd( -2.43456, -62.2317, -28.7967, 0.44 ) }
    dend_29 { pt3dadd( -2.65925, -62.8514, -30.2406, 1.33 ) }
    dend_29 { pt3dadd( -2.8568, -63.7061, -32.0773, 1.55 ) }
    dend_29 { pt3dadd( -3.00703, -64.4953, -33.6831, 1.33 ) }
    dend_29 { pt3dadd( -3.15448, -65.5778, -35.706, 0.81 ) }
    dend_29 { pt3dadd( -3.18219, -66.0439, -36.495, 1.25 ) }
    dend_29 { pt3dadd( -3.15503, -66.624, -37.3706, 0.88 ) }
    dend_29 { pt3dadd( -3.10314, -67.2805, -38.2206, 0.37 ) }
    dend_29 { pt3dadd( -3.03552, -67.8633, -38.8503, 0.81 ) }
    dend_29 { pt3dadd( -2.95864, -68.491, -39.4479, 1.03 ) }
    dend_29 { pt3dadd( -2.88819, -68.8693, -39.7761, 1.03 ) }
    dend_29 { pt3dadd( -2.57836, -70.1802, -40.8857, 0.29 ) }
    dend_29 { pt3dadd( -2.39223, -70.8462, -41.4256, 0.29 ) }
    dend_29 { pt3dadd( -2.09213, -71.7086, -42.0967, 1.84 ) }
    dend_29 { pt3dadd( -1.78024, -72.4326, -42.6822, 2.14 ) }
    dend_29 { pt3dadd( -0.876268, -74.2118, -44.2387, 0.29 ) }
    dend_29 { pt3dadd( -0.388427, -75.0237, -44.9974, 0.81 ) }
    dend_29 { pt3dadd( 0.127659, -75.7495, -45.7181, 0.81 ) }
    dend_29 { pt3dadd( 0.676253, -76.4217, -46.4497, 0.52 ) }
    dend_29 { pt3dadd( 1.42583, -77.2442, -47.4632, 1.25 ) }
    dend_29 { pt3dadd( 1.91232, -77.7408, -48.141, 1.4 ) }
    dend_29 { pt3dadd( 3.16301, -78.9651, -49.8834, 0.22 ) }
    dend_29 { pt3dadd( 3.94657, -79.7107, -50.9204, 0.22 ) }
    dend_29 { pt3dadd( 4.84753, -80.565, -52.0525, 1.4 ) }
    dend_29 { pt3dadd( 5.41913, -81.1366, -52.736, 2.21 ) }
    dend_29 { pt3dadd( 5.68699, -81.4223, -53.0297, 2.21 ) }
    dend_29 { pt3dadd( 7.46154, -83.4535, -54.8183, 0.22 ) }
    dend_29 { pt3dadd( 7.94166, -84.0281, -55.284, 0.74 ) }
    dend_29 { pt3dadd( 8.3636, -84.5622, -55.7049, 1.03 ) }
    dend_29 { pt3dadd( 9.04081, -85.4905, -56.3995, 0.59 ) }
    dend_29 { pt3dadd( 10.6156, -87.7883, -58.0452, 0.22 ) }
    dend_29 { pt3dadd( 12.5941, -90.7775, -60.1858, 0.22 ) }
    dend_29 { pt3dadd( 13.2698, -91.8401, -60.9771, 0.81 ) }
    dend_29 { pt3dadd( 13.7659, -92.6249, -61.5799, 0.96 ) }
    dend_29 { pt3dadd( 15.3562, -95.1817, -63.5959, 0.22 ) }
    dend_29 { pt3dadd( 16.332, -96.7577, -64.9132, 0.22 ) }
    dend_29 { pt3dadd( 16.8534, -97.6272, -65.6925, 0.88 ) }
    dend_29 { pt3dadd( 17.35, -98.4684, -66.5122, 0.88 ) }
    dend_29 { pt3dadd( 18.7303, -100.816, -68.8795, 0.15 ) }
    dend_29 { pt3dadd( 19.7986, -102.53, -70.5886, 0.15 ) }
    dend_29 { pt3dadd( 20.4278, -103.497, -71.5768, 0.15 ) }
    dend_29 { pt3dadd( 21.0032, -104.378, -72.4632, 1.62 ) }
    dend_29 { pt3dadd( 21.3648, -104.948, -73.0059, 1.92 ) }
    dend_29 { pt3dadd( 21.661, -105.407, -73.4081, 1.92 ) }
    dend_29 { pt3dadd( 23.6138, -108.466, -75.9078, 0.22 ) }
    dend_29 { pt3dadd( 24.0424, -109.121, -76.411, 0.66 ) }
    dend_29 { pt3dadd( 24.3711, -109.63, -76.7843, 0.88 ) }
    dend_29 { pt3dadd( 24.7078, -110.15, -77.1693, 0.88 ) }
    dend_29 { pt3dadd( 25.7345, -111.844, -78.5567, 0.15 ) }
    dend_29 { pt3dadd( 26.4176, -113.216, -79.8136, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 26.7281, -114.054, -80.6388, 0.81 ) }
    dend_29 { pt3dadd( 26.8858, -114.655, -81.226, 1.03 ) }
    dend_29 { pt3dadd( 26.9755, -115.202, -81.7522, 1.03 ) }
    dend_29 { pt3dadd( 27.0786, -117.048, -83.5136, 0.22 ) }
    dend_29 { pt3dadd( 26.9553, -119.062, -85.4293, 0.22 ) }
    dend_29 { pt3dadd( 26.856, -119.881, -86.2479, 0.22 ) }
    dend_29 { pt3dadd( 26.6733, -121.067, -87.4902, 1.03 ) }
    dend_29 { pt3dadd( 26.5793, -121.683, -88.1424, 1.62 ) }
    dend_29 { pt3dadd( 26.4745, -122.304, -88.8361, 1.62 ) }
    dend_29 { pt3dadd( 26.2977, -123.348, -90.0838, 1.03 ) }
    dend_29 { pt3dadd( 25.9488, -125.481, -92.7734, 0.22 ) }
    dend_29 { pt3dadd( 25.7412, -126.475, -94.1582, 0.44 ) }
    dend_29 { pt3dadd( 25.6342, -127.02, -94.964, 0.44 ) }
    dend_29 { pt3dadd( 25.4116, -128.219, -96.7598, 0.66 ) }
    dend_29 { pt3dadd( 25.3208, -128.823, -97.6457, 0.96 ) }
    dend_29 { pt3dadd( 25.24, -129.521, -98.6557, 0.37 ) }
    dend_29 { pt3dadd( 25.075, -131.757, -101.796, 0.66 ) }
    dend_29 { pt3dadd( 25.0662, -132.215, -102.431, 0.66 ) }
    dend_29 { pt3dadd( 25.0702, -133.879, -104.769, 0.22 ) }
    dend_29 { pt3dadd( 25.1283, -134.756, -105.969, 0.22 ) }
    dend_29 { pt3dadd( 25.219, -135.537, -107.027, 0.81 ) }
    dend_29 { pt3dadd( 25.366, -136.236, -107.97, 0.96 ) }
    dend_29 { pt3dadd( 25.5448, -136.692, -108.467, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 22.679, 147.821, -28.3401, 0.37 ) }
    dend_24 { pt3dadd( 24.2822, 147.054, -26.3638, 0.37 ) }
    dend_24 { pt3dadd( 24.6093, 146.897, -25.9606, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.679, 147.821, -28.3401, 0.22 ) }
    dend_23 { pt3dadd( 23.5616, 149.608, -28.5192, 0.22 ) }
    dend_23 { pt3dadd( 24.0055, 150.581, -28.6557, 0.22 ) }
    dend_23 { pt3dadd( 24.3424, 151.352, -28.7802, 0.74 ) }
    dend_23 { pt3dadd( 24.4606, 151.638, -28.8283, 0.74 ) }
    dend_23 { pt3dadd( 25.0082, 152.964, -29.051, 0.15 ) }
    dend_23 { pt3dadd( 25.3625, 153.821, -29.1951, 0.15 ) }
    dend_23 { pt3dadd( 25.6086, 154.441, -29.3729, 0.66 ) }
    dend_23 { pt3dadd( 25.7336, 154.825, -29.4643, 0.88 ) }
    dend_23 { pt3dadd( 25.8697, 155.264, -29.5415, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.78093, 36.1858, 2.45791, 0.66 ) }
    dend_17 { pt3dadd( -10.1256, 38.147, 2.28279, 0.66 ) }
    dend_17 { pt3dadd( -10.1985, 38.8873, 2.25764, 0.96 ) }
    dend_17 { pt3dadd( -10.2818, 39.7551, 2.24529, 0.96 ) }
    dend_17 { pt3dadd( -10.3895, 40.9401, 2.24499, 0.59 ) }
    dend_17 { pt3dadd( -10.4736, 41.9896, 2.25513, 0.59 ) }
    dend_17 { pt3dadd( -10.5542, 43.2301, 2.27739, 0.59 ) }
    dend_17 { pt3dadd( -10.6358, 45.0301, 2.37529, 0.59 ) }
    dend_17 { pt3dadd( -10.6475, 45.8789, 2.42927, 0.52 ) }
    dend_17 { pt3dadd( -10.6379, 47.1463, 2.51978, 0.88 ) }
    dend_17 { pt3dadd( -10.6306, 48.0652, 2.57826, 1.11 ) }
    dend_17 { pt3dadd( -10.6428, 49.1624, 2.6301, 1.11 ) }
    dend_17 { pt3dadd( -10.6754, 50.4261, 2.68821, 0.74 ) }
    dend_17 { pt3dadd( -10.7403, 51.7511, 2.74586, 0.74 ) }
    dend_17 { pt3dadd( -10.842, 53.4467, 2.8226, 0.74 ) }
    dend_17 { pt3dadd( -10.9351, 54.6169, 2.86485, 0.52 ) }
    dend_17 { pt3dadd( -11.0592, 55.8693, 2.88709, 0.52 ) }
    dend_17 { pt3dadd( -11.1589, 56.7719, 2.88904, 0.96 ) }
    dend_17 { pt3dadd( -11.3058, 58.1059, 2.86123, 1.11 ) }
    dend_17 { pt3dadd( -11.5252, 60.0856, 2.78343, 1.11 ) }
    dend_17 { pt3dadd( -11.6654, 61.3871, 2.71433, 1.11 ) }
    dend_17 { pt3dadd( -11.7851, 62.6838, 2.65869, 0.81 ) }
    dend_17 { pt3dadd( -11.8707, 63.823, 2.62106, 0.74 ) }
    dend_17 { pt3dadd( -11.9337, 65.0094, 2.59775, 0.74 ) }
    dend_17 { pt3dadd( -11.964, 66.1207, 2.59848, 0.44 ) }
    dend_17 { pt3dadd( -11.9845, 67.0598, 2.62061, 0.44 ) }
    dend_17 { pt3dadd( -12.0303, 68.6032, 2.70138, 0.74 ) }
    dend_17 { pt3dadd( -12.0644, 69.6676, 2.78041, 0.74 ) }
    dend_17 { pt3dadd( -12.0946, 70.7987, 2.8757, 0.37 ) }
    dend_17 { pt3dadd( -12.0918, 71.9722, 2.98702, 0.74 ) }
    dend_17 { pt3dadd( -12.0685, 72.9984, 3.04571, 0.96 ) }
    dend_17 { pt3dadd( -12.024, 74.1773, 3.06509, 0.96 ) }
    dend_17 { pt3dadd( -11.9571, 75.4776, 3.01728, 0.81 ) }
    dend_17 { pt3dadd( -11.8772, 76.6998, 2.93423, 0.52 ) }
    dend_17 { pt3dadd( -11.7719, 77.9782, 2.8174, 0.52 ) }
    dend_17 { pt3dadd( -11.5847, 79.6563, 2.64218, 1.03 ) }
    dend_17 { pt3dadd( -11.4645, 80.5484, 2.54235, 1.55 ) }
    dend_17 { pt3dadd( -11.3463, 81.355, 2.44519, 1.69 ) }
    dend_17 { pt3dadd( -11.2683, 81.8805, 2.38244, 1.69 ) }
    dend_17 { pt3dadd( -11.0718, 83.179, 2.25214, 0.37 ) }
    dend_17 { pt3dadd( -10.9063, 84.2633, 2.18676, 0.44 ) }
    dend_17 { pt3dadd( -10.8023, 84.8258, 2.19285, 0.44 ) }
    dend_17 { pt3dadd( -10.6643, 85.4724, 2.22291, 0.44 ) }
    dend_17 { pt3dadd( -10.416, 86.5412, 2.30201, 0.29 ) }
    dend_17 { pt3dadd( -10.2944, 86.9953, 2.3407, 0.59 ) }
    dend_17 { pt3dadd( -10.052, 87.7651, 2.41424, 0.44 ) }
    dend_17 { pt3dadd( -9.65583, 88.9754, 2.53688, 0.29 ) }
    dend_17 { pt3dadd( -9.30837, 90.0977, 2.65222, 1.18 ) }
    dend_17 { pt3dadd( -9.13344, 90.7017, 2.71535, 1.18 ) }
    dend_17 { pt3dadd( -8.87802, 91.6089, 2.8069, 0.52 ) }
    dend_17 { pt3dadd( -8.6347, 92.4792, 2.89434, 0.29 ) }
    dend_17 { pt3dadd( -8.35354, 93.4712, 3.02501, 0.29 ) }
    dend_17 { pt3dadd( -8.12348, 94.3676, 3.19231, 0.29 ) }
    dend_17 { pt3dadd( -7.99722, 94.9531, 3.32727, 0.29 ) }
    dend_17 { pt3dadd( -7.79213, 96.1183, 3.63263, 0.81 ) }
    dend_17 { pt3dadd( -7.63524, 97.1387, 3.92532, 0.44 ) }
    dend_17 { pt3dadd( -7.46535, 98.1164, 4.20134, 0.22 ) }
    dend_17 { pt3dadd( -7.24575, 99.1025, 4.47308, 0.44 ) }
    dend_17 { pt3dadd( -7.15323, 99.4802, 4.5823, 0.44 ) }
    dend_17 { pt3dadd( -6.96168, 100.29, 4.81985, 0.29 ) }
    dend_17 { pt3dadd( -6.80694, 101.022, 5.03742, 0.29 ) }
    dend_17 { pt3dadd( -6.58835, 102.023, 5.31216, 0.29 ) }
    dend_17 { pt3dadd( -6.43998, 102.663, 5.46381, 0.29 ) }
    dend_17 { pt3dadd( -6.24119, 103.487, 5.64953, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -6.08535, 104.157, 5.8068, 0.66 ) }
    dend_17 { pt3dadd( -5.89106, 105.005, 5.98173, 0.74 ) }
    dend_17 { pt3dadd( -5.72168, 105.929, 6.17095, 0.37 ) }
    dend_17 { pt3dadd( -5.614, 106.653, 6.31904, 0.37 ) }
    dend_17 { pt3dadd( -5.46494, 107.666, 6.49254, 0.52 ) }
    dend_17 { pt3dadd( -5.34394, 108.433, 6.59283, 0.59 ) }
    dend_17 { pt3dadd( -5.15465, 109.599, 6.72861, 0.44 ) }
    dend_17 { pt3dadd( -5.01621, 110.422, 6.8164, 0.29 ) }
    dend_17 { pt3dadd( -4.91201, 110.998, 6.88191, 0.29 ) }
    dend_17 { pt3dadd( -4.68648, 112.272, 7.04272, 1.11 ) }
    dend_17 { pt3dadd( -4.56099, 113.001, 7.14356, 1.25 ) }
    dend_17 { pt3dadd( -4.47366, 113.521, 7.2215, 1.25 ) }
    dend_17 { pt3dadd( -4.27172, 114.613, 7.38847, 0.66 ) }
    dend_17 { pt3dadd( -4.12382, 115.264, 7.47067, 0.29 ) }
    dend_17 { pt3dadd( -3.85746, 116.278, 7.59042, 0.29 ) }
    dend_17 { pt3dadd( -3.59106, 117.183, 7.69229, 0.29 ) }
    dend_17 { pt3dadd( -3.3242, 118.002, 7.78113, 0.29 ) }
    dend_17 { pt3dadd( -2.89345, 119.226, 7.90633, 0.96 ) }
    dend_17 { pt3dadd( -2.70345, 119.757, 7.95116, 1.47 ) }
    dend_17 { pt3dadd( -2.55305, 120.212, 7.97978, 1.47 ) }
    dend_17 { pt3dadd( -2.47376, 120.481, 7.9908, 1.47 ) }
    dend_17 { pt3dadd( -2.27442, 121.268, 8.01896, 0.74 ) }
    dend_17 { pt3dadd( -2.06957, 122.172, 8.05525, 0.29 ) }
    dend_17 { pt3dadd( -1.8897, 123.099, 8.09577, 0.52 ) }
    dend_17 { pt3dadd( -1.72333, 123.955, 8.13899, 0.74 ) }
    dend_17 { pt3dadd( -1.48521, 125.041, 8.20686, 0.44 ) }
    dend_17 { pt3dadd( -1.27195, 125.905, 8.26982, 0.29 ) }
    dend_17 { pt3dadd( -1.10415, 126.511, 8.3192, 0.29 ) }
    dend_17 { pt3dadd( -0.838102, 127.341, 8.39719, 0.66 ) }
    dend_17 { pt3dadd( -0.627332, 127.934, 8.45511, 0.74 ) }
    dend_17 { pt3dadd( -0.318327, 128.77, 8.53678, 0.74 ) }
    dend_17 { pt3dadd( 0.0193403, 129.706, 8.63438, 0.29 ) }
    dend_17 { pt3dadd( 0.302622, 130.544, 8.72437, 0.29 ) }
    dend_17 { pt3dadd( 0.830894, 132.23, 8.90769, 0.29 ) }
    dend_17 { pt3dadd( 1.14428, 133.38, 9.08757, 0.52 ) }
    dend_17 { pt3dadd( 1.30819, 134.074, 9.22077, 1.18 ) }
    dend_17 { pt3dadd( 1.42673, 134.675, 9.35232, 1.4 ) }
    dend_17 { pt3dadd( 1.58074, 135.654, 9.58613, 1.4 ) }
    dend_17 { pt3dadd( 1.6728, 136.423, 9.77932, 0.66 ) }
    dend_17 { pt3dadd( 1.86305, 138.224, 10.2342, 0.29 ) }
    dend_17 { pt3dadd( 2.00173, 139.36, 10.4982, 0.29 ) }
    dend_17 { pt3dadd( 2.11381, 140.046, 10.6208, 0.37 ) }
    dend_17 { pt3dadd( 2.29988, 140.972, 10.7374, 0.37 ) }
    dend_17 { pt3dadd( 2.52734, 141.929, 10.8198, 0.37 ) }
    dend_17 { pt3dadd( 2.9958, 143.624, 10.8996, 0.37 ) }
    dend_17 { pt3dadd( 3.58579, 145.466, 10.8967, 0.37 ) }
    dend_17 { pt3dadd( 4.21144, 147.253, 10.8798, 1.33 ) }
    dend_17 { pt3dadd( 4.54631, 148.11, 10.8578, 1.99 ) }
    dend_17 { pt3dadd( 4.83019, 148.789, 10.8314, 1.99 ) }
    dend_17 { pt3dadd( 4.95188, 149.077, 10.8168, 1.99 ) }
    dend_17 { pt3dadd( 5.17886, 149.609, 10.7907, 1.99 ) }
    dend_17 { pt3dadd( 5.6539, 150.716, 10.7583, 0.59 ) }
    dend_17 { pt3dadd( 6.20839, 151.999, 10.7707, 0.29 ) }
    dend_17 { pt3dadd( 6.59895, 152.894, 10.8322, 0.59 ) }
    dend_17 { pt3dadd( 6.90289, 153.585, 10.9029, 0.59 ) }
    dend_17 { pt3dadd( 7.54139, 155.03, 11.0956, 0.37 ) }
    dend_17 { pt3dadd( 7.88229, 155.832, 11.2248, 0.37 ) }
    dend_17 { pt3dadd( 8.40169, 157.131, 11.4693, 0.37 ) }
    dend_17 { pt3dadd( 8.97649, 158.694, 11.7995, 0.74 ) }
    dend_17 { pt3dadd( 9.18239, 159.338, 11.9315, 0.74 ) }
    dend_17 { pt3dadd( 9.35732, 160.005, 12.0697, 0.88 ) }
    dend_17 { pt3dadd( 9.55083, 160.976, 12.2675, 0.44 ) }
    dend_17 { pt3dadd( 9.80158, 162.658, 12.559, 0.29 ) }
    dend_17 { pt3dadd( 9.893, 163.563, 12.6561, 0.52 ) }
    dend_17 { pt3dadd( 10.0075, 165.249, 12.7201, 1.25 ) }
    dend_17 { pt3dadd( 10.0398, 165.97, 12.7236, 1.62 ) }
    dend_17 { pt3dadd( 10.0585, 166.444, 12.7009, 1.62 ) }
    dend_17 { pt3dadd( 10.0951, 167.421, 12.6078, 0.96 ) }
    dend_17 { pt3dadd( 10.1655, 168.88, 12.3991, 0.29 ) }
    dend_17 { pt3dadd( 10.2316, 169.72, 12.2629, 0.29 ) }
    dend_17 { pt3dadd( 10.3428, 170.74, 12.1089, 0.29 ) }
    dend_17 { pt3dadd( 10.4609, 171.807, 11.9825, 0.74 ) }
    dend_17 { pt3dadd( 10.5055, 172.29, 11.948, 0.96 ) }
    dend_17 { pt3dadd( 10.5482, 172.85, 11.9354, 0.96 ) }
    dend_17 { pt3dadd( 10.642, 174.266, 11.9401, 0.52 ) }
    dend_17 { pt3dadd( 10.7687, 176.221, 11.9355, 0.37 ) }
    dend_17 { pt3dadd( 10.8508, 177.562, 11.9361, 0.29 ) }
    dend_17 { pt3dadd( 10.9116, 178.828, 11.9272, 0.66 ) }
    dend_17 { pt3dadd( 10.9473, 179.678, 11.9028, 0.66 ) }
    dend_17 { pt3dadd( 10.9998, 181.274, 11.8226, 0.29 ) }
    dend_17 { pt3dadd( 11.0256, 182.066, 11.7761, 0.29 ) }
    dend_17 { pt3dadd( 11.1037, 184.155, 11.649, 0.29 ) }
    dend_17 { pt3dadd( 11.22, 186.427, 11.5238, 1.99 ) }
    dend_17 { pt3dadd( 11.2473, 186.943, 11.5036, 2.28 ) }
    dend_17 { pt3dadd( 11.2771, 187.671, 11.4918, 1.55 ) }
    dend_17 { pt3dadd( 11.2985, 188.468, 11.5183, 0.88 ) }
    dend_17 { pt3dadd( 11.3066, 189.765, 11.6356, 0.22 ) }
    dend_17 { pt3dadd( 11.2963, 190.371, 11.7176, 0.22 ) }
    dend_17 { pt3dadd( 11.2612, 191.475, 11.9079, 0.66 ) }
    dend_17 { pt3dadd( 11.2386, 192.174, 12.0282, 0.66 ) }
    dend_17 { pt3dadd( 11.2111, 193.357, 12.2205, 0.29 ) }
    dend_17 { pt3dadd( 11.1799, 195.252, 12.4886, 0.22 ) }
    dend_17 { pt3dadd( 11.1902, 196.212, 12.6147, 0.22 ) }
    dend_17 { pt3dadd( 11.2298, 197.229, 12.7344, 0.52 ) }
    dend_17 { pt3dadd( 11.3458, 198.502, 12.8649, 0.44 ) }
    dend_17 { pt3dadd( 11.5015, 199.61, 12.9629, 0.44 ) }
    dend_17 { pt3dadd( 11.7368, 200.89, 13.0511, 0.44 ) }
    dend_17 { pt3dadd( 12.1981, 202.873, 13.1728, 0.22 ) }
    dend_17 { pt3dadd( 12.5822, 204.349, 13.2609, 0.66 ) }
    dend_17 { pt3dadd( 12.9285, 205.543, 13.3313, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 13.1293, 206.174, 13.3692, 1.77 ) }
    dend_17 { pt3dadd( 13.3265, 206.739, 13.4052, 1.77 ) }
    dend_17 { pt3dadd( 13.6552, 207.566, 13.465, 0.88 ) }
    dend_17 { pt3dadd( 14.0477, 208.482, 13.5741, 0.29 ) }
    dend_17 { pt3dadd( 14.3203, 209.103, 13.6741, 0.52 ) }
    dend_17 { pt3dadd( 15.0043, 210.706, 13.97, 0.22 ) }
    dend_17 { pt3dadd( 15.3968, 211.621, 14.1339, 0.52 ) }
    dend_17 { pt3dadd( 15.8445, 212.652, 14.3051, 0.52 ) }
    dend_17 { pt3dadd( 16.8173, 214.92, 14.649, 0.22 ) }
    dend_17 { pt3dadd( 17.5574, 216.656, 14.8827, 0.37 ) }
    dend_17 { pt3dadd( 18.0368, 217.799, 15.0307, 0.37 ) }
    dend_17 { pt3dadd( 18.5559, 219.073, 15.182, 1.92 ) }
    dend_17 { pt3dadd( 18.7851, 219.659, 15.2402, 2.21 ) }
    dend_17 { pt3dadd( 19.007, 220.268, 15.2744, 2.21 ) }
    dend_17 { pt3dadd( 19.2655, 220.991, 15.2233, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.78093, 36.1858, 2.45791, 0.66 ) }
    dend_14 { pt3dadd( -9.47561, 37.1446, 2.63729, 0.66 ) }
    dend_14 { pt3dadd( -9.28848, 37.7286, 2.74143, 0.81 ) }
    dend_14 { pt3dadd( -9.15241, 38.1628, 2.83134, 0.37 ) }
    dend_14 { pt3dadd( -8.99913, 38.6858, 2.94274, 0.29 ) }
    dend_14 { pt3dadd( -8.73816, 39.5626, 3.12315, 0.29 ) }
    dend_14 { pt3dadd( -8.57177, 40.0759, 3.22852, 0.29 ) }
    dend_14 { pt3dadd( -8.3821, 40.5696, 3.31603, 0.29 ) }
    dend_14 { pt3dadd( -8.0862, 41.2203, 3.44186, 0.29 ) }
    dend_14 { pt3dadd( -7.8218, 41.754, 3.54824, 0.29 ) }
    dend_14 { pt3dadd( -7.55828, 42.2856, 3.65389, 0.74 ) }
    dend_14 { pt3dadd( -7.37534, 42.6428, 3.7293, 0.74 ) }
    dend_14 { pt3dadd( -7.02863, 43.2476, 3.85897, 0.29 ) }
    dend_14 { pt3dadd( -6.82305, 43.5948, 3.9376, 0.37 ) }
    dend_14 { pt3dadd( -6.35155, 44.403, 4.1132, 0.37 ) }
    dend_14 { pt3dadd( -6.10202, 44.86, 4.21568, 0.37 ) }
    dend_14 { pt3dadd( -5.84609, 45.3998, 4.33587, 0.37 ) }
    dend_14 { pt3dadd( -5.74293, 45.6485, 4.39073, 0.37 ) }
    dend_14 { pt3dadd( -5.57865, 46.1024, 4.49309, 0.22 ) }
    dend_14 { pt3dadd( -5.43164, 46.543, 4.59238, 0.22 ) }
    dend_14 { pt3dadd( -5.30254, 46.8907, 4.66687, 0.66 ) }
    dend_14 { pt3dadd( -5.16023, 47.3097, 4.73616, 0.96 ) }
    dend_14 { pt3dadd( -3.61103, 52.3245, 5.15285, 0.96 ) }
    dend_14 { pt3dadd( -0.875031, 56.6972, 6.47901, 0.96 ) }
    dend_14 { pt3dadd( 1.29831, 61.1303, 8.46022, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 31.8159, 10.2771, 6.60606, 0.66 ) }
    dend_8 { pt3dadd( 32.675, 8.54589, 6.65238, 0.66 ) }
    dend_8 { pt3dadd( 32.9155, 7.99417, 6.63108, 0.66 ) }
    dend_8 { pt3dadd( 33.3132, 7.14643, 6.62492, 0.88 ) }
    dend_8 { pt3dadd( 34.0385, 5.78066, 6.67041, 0.88 ) }
    dend_8 { pt3dadd( 34.5641, 4.9116, 6.73705, 0.88 ) }
    dend_8 { pt3dadd( 35.0754, 4.18988, 6.8194, 1.03 ) }
    dend_8 { pt3dadd( 35.6789, 3.40876, 6.91982, 1.03 ) }
    dend_8 { pt3dadd( 36.5731, 2.8017, 7.16979, 0.88 ) }
    dend_8 { pt3dadd( 37.3005, 2.65318, 7.40369, 0.88 ) }
    dend_8 { pt3dadd( 37.9295, 2.59927, 7.62445, 0.88 ) }
    dend_8 { pt3dadd( 38.9247, 2.48505, 8.0057, 0.81 ) }
    dend_8 { pt3dadd( 40.0645, 2.21027, 8.48399, 0.81 ) }
    dend_8 { pt3dadd( 40.7837, 1.89726, 8.77835, 0.81 ) }
    dend_8 { pt3dadd( 41.6892, 1.28232, 9.09037, 0.74 ) }
    dend_8 { pt3dadd( 42.6493, 0.481629, 9.38151, 0.88 ) }
    dend_8 { pt3dadd( 43.4985, -0.324591, 9.59769, 0.88 ) }
    dend_8 { pt3dadd( 44.4049, -1.30411, 9.78742, 0.52 ) }
    dend_8 { pt3dadd( 44.8601, -1.81167, 9.84223, 0.52 ) }
    dend_8 { pt3dadd( 45.4237, -2.35187, 9.83672, 0.52 ) }
    dend_8 { pt3dadd( 46.158, -2.90859, 9.77088, 0.52 ) }
    dend_8 { pt3dadd( 47.0091, -3.39178, 9.64857, 0.74 ) }
    dend_8 { pt3dadd( 47.8802, -3.79396, 9.49548, 0.74 ) }
    dend_8 { pt3dadd( 48.9907, -4.23216, 9.28083, 0.74 ) }
    dend_8 { pt3dadd( 50.4613, -4.75328, 8.9997, 0.74 ) }
    dend_8 { pt3dadd( 51.4828, -5.08728, 8.7959, 0.74 ) }
    dend_8 { pt3dadd( 52.2937, -5.31206, 8.63783, 0.74 ) }
    dend_8 { pt3dadd( 53.1788, -5.47015, 8.47302, 0.74 ) }
    dend_8 { pt3dadd( 53.6986, -5.52324, 8.39616, 0.88 ) }
    dend_8 { pt3dadd( 55.171, -5.56307, 8.20304, 0.88 ) }
    dend_8 { pt3dadd( 56.4274, -5.55624, 8.06091, 0.88 ) }
    dend_8 { pt3dadd( 57.9822, -5.55929, 7.90346, 0.66 ) }
    dend_8 { pt3dadd( 59.118, -5.58171, 7.81596, 0.66 ) }
    dend_8 { pt3dadd( 62.0383, -5.66065, 7.66513, 0.59 ) }
    dend_8 { pt3dadd( 63.0503, -5.69524, 7.6314, 0.52 ) }
    dend_8 { pt3dadd( 64.5829, -5.71394, 7.60407, 0.52 ) }
    dend_8 { pt3dadd( 65.5075, -5.6768, 7.6008, 0.52 ) }
    dend_8 { pt3dadd( 66.5159, -5.54704, 7.59747, 0.52 ) }
    dend_8 { pt3dadd( 67.7238, -5.3174, 7.5963, 0.52 ) }
    dend_8 { pt3dadd( 68.5315, -5.14534, 7.6049, 0.52 ) }
    dend_8 { pt3dadd( 69.8484, -4.91763, 7.63587, 0.52 ) }
    dend_8 { pt3dadd( 71.2768, -4.66996, 7.67955, 0.52 ) }
    dend_8 { pt3dadd( 72.6144, -4.4771, 7.73159, 0.52 ) }
    dend_8 { pt3dadd( 73.8559, -4.39317, 7.79623, 0.52 ) }
    dend_8 { pt3dadd( 75.2647, -4.45817, 7.89779, 0.52 ) }
    dend_8 { pt3dadd( 76.2276, -4.65199, 8.00161, 0.52 ) }
    dend_8 { pt3dadd( 77.1184, -4.93507, 8.1633, 0.52 ) }
    dend_8 { pt3dadd( 77.7159, -5.14207, 8.31016, 0.52 ) }
    dend_8 { pt3dadd( 78.4699, -5.38389, 8.5283, 0.52 ) }
    dend_8 { pt3dadd( 79.9996, -5.77764, 9.05399, 0.29 ) }
    dend_8 { pt3dadd( 82.7402, -6.26655, 10.1051, 0.29 ) }
    dend_8 { pt3dadd( 85.2313, -6.5393, 11.1187, 0.29 ) }
    dend_8 { pt3dadd( 86.5052, -6.57983, 11.6705, 0.29 ) }
    dend_8 { pt3dadd( 87.4212, -6.56579, 12.0807, 0.44 ) }
    dend_8 { pt3dadd( 88.3938, -6.47414, 12.5464, 0.59 ) }
    dend_8 { pt3dadd( 89.0066, -6.33375, 12.8972, 0.59 ) }
    dend_8 { pt3dadd( 90.0134, -5.74794, 13.6154, 0.59 ) }
    dend_8 { pt3dadd( 90.5537, -5.20229, 14.0178, 0.59 ) }
    dend_8 { pt3dadd( 100.8, -8.49594, 16.2979, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 31.8159, 10.2771, 6.60606, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 33.2933, 9.82396, 7.14226, 1.11 ) }
    dend_3 { pt3dadd( 34.184, 9.43846, 7.52719, 1.11 ) }
    dend_3 { pt3dadd( 35.2304, 8.97616, 7.8622, 1.25 ) }
    dend_3 { pt3dadd( 36.0642, 8.66561, 8.05214, 1.47 ) }
    dend_3 { pt3dadd( 37.2297, 8.33401, 8.22794, 1.4 ) }
    dend_3 { pt3dadd( 38.2896, 8.11159, 8.32428, 1.4 ) }
    dend_3 { pt3dadd( 39.5044, 7.87139, 8.35997, 1.18 ) }
    dend_3 { pt3dadd( 41.2192, 7.74875, 8.20436, 1.18 ) }
    dend_3 { pt3dadd( 42.4464, 7.83088, 7.9405, 1.18 ) }
    dend_3 { pt3dadd( 43.5142, 7.95961, 7.65277, 1.18 ) }
    dend_3 { pt3dadd( 44.1498, 8.04011, 7.47825, 0.88 ) }
    dend_3 { pt3dadd( 44.7745, 8.07888, 7.34176, 0.88 ) }
    dend_3 { pt3dadd( 45.7197, 7.99893, 7.24863, 0.88 ) }
    dend_3 { pt3dadd( 47.1005, 7.63958, 7.31904, 1.11 ) }
    dend_3 { pt3dadd( 48.1219, 7.24602, 7.45316, 1.11 ) }
    dend_3 { pt3dadd( 49.1421, 6.78218, 7.62721, 1.11 ) }
    dend_3 { pt3dadd( 50.2831, 6.20771, 7.85988, 1.25 ) }
    dend_3 { pt3dadd( 51.4345, 5.57689, 8.13378, 1.33 ) }
    dend_3 { pt3dadd( 51.9615, 5.26933, 8.27823, 1.47 ) }
    dend_3 { pt3dadd( 52.8302, 4.78393, 8.52825, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -172.882, -119.459, 0.028297, 0.59 ) }
    dend_47 { pt3dadd( -172.881, -120.833, -0.486097, 0.59 ) }
    dend_47 { pt3dadd( -172.87, -121.419, -0.678814, 0.59 ) }
    dend_47 { pt3dadd( -172.842, -121.934, -0.832873, 0.52 ) }
    dend_47 { pt3dadd( -172.8, -122.533, -0.994135, 0.52 ) }
    dend_47 { pt3dadd( -172.77, -123.183, -1.1563, 0.88 ) }
    dend_47 { pt3dadd( -172.74, -123.905, -1.32769, 1.03 ) }
    dend_47 { pt3dadd( -172.724, -124.345, -1.3957, 1.03 ) }
    dend_47 { pt3dadd( -172.671, -125.122, -1.50566, 1.03 ) }
    dend_47 { pt3dadd( -172.604, -125.792, -1.59399, 0.29 ) }
    dend_47 { pt3dadd( -172.559, -126.27, -1.65347, 0.29 ) }
    dend_47 { pt3dadd( -172.534, -126.665, -1.69888, 0.29 ) }
    dend_47 { pt3dadd( -172.527, -127.412, -1.78338, 0.59 ) }
    dend_47 { pt3dadd( -172.552, -128.03, -1.82071, 0.74 ) }
    dend_47 { pt3dadd( -172.593, -128.474, -1.82698, 0.88 ) }
    dend_47 { pt3dadd( -172.649, -128.905, -1.82184, 0.88 ) }
    dend_47 { pt3dadd( -172.71, -129.307, -1.80376, 0.88 ) }
    dend_47 { pt3dadd( -172.823, -129.846, -1.76492, 0.81 ) }
    dend_47 { pt3dadd( -173.112, -131.008, -1.66951, 0.37 ) }
    dend_47 { pt3dadd( -173.266, -131.637, -1.61266, 1.03 ) }
    dend_47 { pt3dadd( -173.419, -132.266, -1.52979, 1.33 ) }
    dend_47 { pt3dadd( -173.562, -132.844, -1.43694, 1.33 ) }
    dend_47 { pt3dadd( -173.761, -133.584, -1.30282, 1.03 ) }
    dend_47 { pt3dadd( -173.941, -134.207, -1.18492, 0.74 ) }
    dend_47 { pt3dadd( -174.111, -134.743, -1.0982, 0.37 ) }
    dend_47 { pt3dadd( -174.34, -135.456, -0.943376, 0.74 ) }
    dend_47 { pt3dadd( -174.478, -135.869, -0.842319, 0.74 ) }
    dend_47 { pt3dadd( -174.637, -136.368, -0.754264, 0.59 ) }
    dend_47 { pt3dadd( -174.742, -136.744, -0.71568, 0.37 ) }
    dend_47 { pt3dadd( -174.876, -137.283, -0.714947, 0.37 ) }
    dend_47 { pt3dadd( -175.1, -138.151, -0.82444, 0.66 ) }
    dend_47 { pt3dadd( -175.276, -138.753, -0.97075, 0.74 ) }
    dend_47 { pt3dadd( -175.615, -139.76, -1.28382, 0.52 ) }
    dend_47 { pt3dadd( -175.763, -140.176, -1.43475, 0.52 ) }
    dend_47 { pt3dadd( -175.972, -140.667, -1.62409, 1.33 ) }
    dend_47 { pt3dadd( -176.248, -141.275, -1.87571, 1.55 ) }
    dend_47 { pt3dadd( -176.613, -142.076, -2.18805, 1.99 ) }
    dend_47 { pt3dadd( -176.843, -142.562, -2.33981, 2.21 ) }
    dend_47 { pt3dadd( -177.152, -143.172, -2.48578, 1.99 ) }
    dend_47 { pt3dadd( -177.544, -143.909, -2.65519, 1.11 ) }
    dend_47 { pt3dadd( -177.964, -144.752, -2.85946, 0.37 ) }
    dend_47 { pt3dadd( -178.279, -145.472, -3.03964, 1.11 ) }
    dend_47 { pt3dadd( -178.424, -145.837, -3.13579, 1.25 ) }
    dend_47 { pt3dadd( -178.607, -146.307, -3.26019, 1.25 ) }
    dend_47 { pt3dadd( -179.022, -147.338, -3.56124, 0.29 ) }
    dend_47 { pt3dadd( -179.292, -147.992, -3.76789, 0.29 ) }
    dend_47 { pt3dadd( -179.567, -148.59, -3.95759, 0.44 ) }
    dend_47 { pt3dadd( -179.865, -149.208, -4.15803, 0.59 ) }
    dend_47 { pt3dadd( -180.223, -149.94, -4.38544, 0.88 ) }
    dend_47 { pt3dadd( -180.524, -150.549, -4.56322, 0.96 ) }
    dend_47 { pt3dadd( -180.85, -151.138, -4.71477, 0.66 ) }
    dend_47 { pt3dadd( -181.29, -151.843, -4.85581, 0.37 ) }
    dend_47 { pt3dadd( -181.626, -152.348, -4.94375, 0.29 ) }
    dend_47 { pt3dadd( -181.994, -152.878, -5.00507, 0.29 ) }
    dend_47 { pt3dadd( -182.311, -153.347, -5.03607, 0.29 ) }
    dend_47 { pt3dadd( -182.748, -153.983, -5.04811, 0.29 ) }
    dend_47 { pt3dadd( -183.405, -154.855, -5.05312, 0.74 ) }
    dend_47 { pt3dadd( -183.914, -155.463, -5.0202, 1.03 ) }
    dend_47 { pt3dadd( -184.546, -156.172, -4.9471, 2.28 ) }
    dend_47 { pt3dadd( -185.044, -156.69, -4.87109, 2.8 ) }
    dend_47 { pt3dadd( -185.522, -157.18, -4.79605, 3.09 ) }
    dend_47 { pt3dadd( -186.293, -157.995, -4.68377, 1.84 ) }
    dend_47 { pt3dadd( -187.187, -158.929, -4.5592, 0.29 ) }
    dend_47 { pt3dadd( -187.624, -159.411, -4.49819, 0.29 ) }
    dend_47 { pt3dadd( -188.196, -160.098, -4.4334, 0.29 ) }
    dend_47 { pt3dadd( -188.769, -160.852, -4.3708, 0.29 ) }
    dend_47 { pt3dadd( -189.155, -161.479, -4.32962, 0.88 ) }
    dend_47 { pt3dadd( -189.45, -162.042, -4.30378, 1.11 ) }
    dend_47 { pt3dadd( -189.681, -162.525, -4.30333, 0.81 ) }
    dend_47 { pt3dadd( -189.866, -162.942, -4.30412, 0.52 ) }
    dend_47 { pt3dadd( -190.146, -163.644, -4.30784, 0.29 ) }
    dend_47 { pt3dadd( -190.456, -164.478, -4.30801, 0.29 ) }
    dend_47 { pt3dadd( -190.702, -165.192, -4.30886, 0.29 ) }
    dend_47 { pt3dadd( -190.841, -165.578, -4.3093, 0.29 ) }
    dend_47 { pt3dadd( -191.104, -166.346, -4.31057, 0.81 ) }
    dend_47 { pt3dadd( -191.325, -167.06, -4.31314, 1.11 ) }
    dend_47 { pt3dadd( -191.48, -167.62, -4.31692, 0.88 ) }
    dend_47 { pt3dadd( -191.698, -168.415, -4.32465, 0.29 ) }
    dend_47 { pt3dadd( -191.958, -169.385, -4.3326, 0.29 ) }
    dend_47 { pt3dadd( -192.221, -170.247, -4.36721, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -192.324, -170.561, -4.38725, 0.29 ) }
    dend_47 { pt3dadd( -192.57, -171.306, -4.45391, 0.74 ) }
    dend_47 { pt3dadd( -192.75, -171.837, -4.51445, 0.74 ) }
    dend_47 { pt3dadd( -192.995, -172.585, -4.61307, 0.44 ) }
    dend_47 { pt3dadd( -193.271, -173.453, -4.74114, 0.29 ) }
    dend_47 { pt3dadd( -193.414, -173.883, -4.8085, 0.29 ) }
    dend_47 { pt3dadd( -193.601, -174.486, -4.88006, 0.29 ) }
    dend_47 { pt3dadd( -193.784, -175.217, -4.93588, 0.29 ) }
    dend_47 { pt3dadd( -193.87, -175.642, -4.94374, 0.74 ) }
    dend_47 { pt3dadd( -193.941, -176.039, -4.92809, 0.74 ) }
    dend_47 { pt3dadd( -194.059, -176.761, -4.85253, 0.44 ) }
    dend_47 { pt3dadd( -194.206, -177.579, -4.74999, 0.29 ) }
    dend_47 { pt3dadd( -194.341, -178.289, -4.63396, 0.74 ) }
    dend_47 { pt3dadd( -194.44, -178.788, -4.54592, 1.11 ) }
    dend_47 { pt3dadd( -194.539, -179.209, -4.47189, 1.69 ) }
    dend_47 { pt3dadd( -194.627, -179.561, -4.41381, 1.92 ) }
    dend_47 { pt3dadd( -194.757, -180.069, -4.34278, 1.92 ) }
    dend_47 { pt3dadd( -194.946, -180.831, -4.2711, 1.62 ) }
    dend_47 { pt3dadd( -195.176, -181.751, -4.20381, 0.29 ) }
    dend_47 { pt3dadd( -195.355, -182.486, -4.1656, 0.22 ) }
    dend_47 { pt3dadd( -195.517, -183.092, -4.14098, 0.22 ) }
    dend_47 { pt3dadd( -195.749, -183.909, -4.12314, 0.59 ) }
    dend_47 { pt3dadd( -195.958, -184.585, -4.12158, 0.74 ) }
    dend_47 { pt3dadd( -196.12, -185.055, -4.12349, 0.74 ) }
    dend_47 { pt3dadd( -196.348, -185.659, -4.11712, 0.44 ) }
    dend_47 { pt3dadd( -196.568, -186.172, -4.10574, 0.29 ) }
    dend_47 { pt3dadd( -196.83, -186.685, -4.06829, 0.29 ) }
    dend_47 { pt3dadd( -197.451, -187.717, -3.93019, 0.44 ) }
    dend_47 { pt3dadd( -197.819, -188.247, -3.85149, 0.59 ) }
    dend_47 { pt3dadd( -198.191, -188.738, -3.77772, 0.59 ) }
    dend_47 { pt3dadd( -198.636, -189.297, -3.71231, 0.52 ) }
    dend_47 { pt3dadd( -199.323, -190.128, -3.64283, 1.33 ) }
    dend_47 { pt3dadd( -199.895, -190.795, -3.61197, 2.06 ) }
    dend_47 { pt3dadd( -200.434, -191.436, -3.61268, 2.21 ) }
    dend_47 { pt3dadd( -200.828, -191.946, -3.64243, 2.21 ) }
    dend_47 { pt3dadd( -201.402, -192.774, -3.73474, 0.81 ) }
    dend_47 { pt3dadd( -201.753, -193.369, -3.8399, 0.29 ) }
    dend_47 { pt3dadd( -202.022, -193.907, -3.96932, 0.44 ) }
    dend_47 { pt3dadd( -202.189, -194.316, -4.07596, 0.44 ) }
    dend_47 { pt3dadd( -202.4, -194.919, -4.22913, 0.29 ) }
    dend_47 { pt3dadd( -202.558, -195.369, -4.35507, 0.29 ) }
    dend_47 { pt3dadd( -202.758, -195.927, -4.51063, 0.29 ) }
    dend_47 { pt3dadd( -202.907, -196.291, -4.60833, 0.74 ) }
    dend_47 { pt3dadd( -203.064, -196.623, -4.68053, 0.88 ) }
    dend_47 { pt3dadd( -203.268, -197.016, -4.74512, 0.88 ) }
    dend_47 { pt3dadd( -203.598, -197.66, -4.81069, 0.29 ) }
    dend_47 { pt3dadd( -203.925, -198.311, -4.82485, 0.29 ) }
    dend_47 { pt3dadd( -204.223, -198.98, -4.78071, 0.29 ) }
    dend_47 { pt3dadd( -204.544, -199.794, -4.68975, 0.52 ) }
    dend_47 { pt3dadd( -204.685, -200.179, -4.63265, 0.52 ) }
    dend_47 { pt3dadd( -204.919, -200.887, -4.4988, 0.29 ) }
    dend_47 { pt3dadd( -205.049, -201.381, -4.37709, 0.29 ) }
    dend_47 { pt3dadd( -205.246, -202.392, -4.08715, 0.59 ) }
    dend_47 { pt3dadd( -205.336, -202.969, -3.89726, 0.29 ) }
    dend_47 { pt3dadd( -205.397, -203.351, -3.75106, 0.29 ) }
    dend_47 { pt3dadd( -205.506, -203.88, -3.5167, 0.74 ) }
    dend_47 { pt3dadd( -205.732, -204.576, -3.15646, 0.88 ) }
    dend_47 { pt3dadd( -205.98, -205.095, -2.85926, 0.29 ) }
    dend_47 { pt3dadd( -206.284, -205.567, -2.55963, 0.29 ) }
    dend_47 { pt3dadd( -206.731, -206.152, -2.19146, 0.96 ) }
    dend_47 { pt3dadd( -207.11, -206.607, -1.93496, 1.11 ) }
    dend_47 { pt3dadd( -207.604, -207.171, -1.68885, 1.11 ) }
    dend_47 { pt3dadd( -208.139, -207.806, -1.48824, 0.29 ) }
    dend_47 { pt3dadd( -208.487, -208.276, -1.38236, 0.22 ) }
    dend_47 { pt3dadd( -208.766, -208.741, -1.32625, 0.44 ) }
    dend_47 { pt3dadd( -209.033, -209.287, -1.30782, 0.44 ) }
    dend_47 { pt3dadd( -209.4, -210.199, -1.3535, 0.22 ) }
    dend_47 { pt3dadd( -209.605, -210.765, -1.41906, 0.22 ) }
    dend_47 { pt3dadd( -209.746, -211.182, -1.49445, 0.22 ) }
    dend_47 { pt3dadd( -209.908, -211.653, -1.59768, 0.59 ) }
    dend_47 { pt3dadd( -210.023, -211.991, -1.675, 0.74 ) }
    dend_47 { pt3dadd( -210.378, -212.984, -1.93032, 0.29 ) }
    dend_47 { pt3dadd( -210.57, -213.509, -2.07594, 0.29 ) }
    dend_47 { pt3dadd( -210.816, -214.162, -2.26351, 0.44 ) }
    dend_47 { pt3dadd( -211.041, -214.787, -2.4443, 0.44 ) }
    dend_47 { pt3dadd( -211.322, -215.619, -2.67167, 0.52 ) }
    dend_47 { pt3dadd( -211.481, -216.095, -2.79201, 0.96 ) }
    dend_47 { pt3dadd( -211.643, -216.573, -2.89617, 1.4 ) }
    dend_47 { pt3dadd( -211.825, -217.055, -2.99941, 1.4 ) }
    dend_47 { pt3dadd( -212.292, -218.179, -3.16437, 0.29 ) }
    dend_47 { pt3dadd( -212.779, -219.279, -3.25336, 0.22 ) }
    dend_47 { pt3dadd( -213.03, -219.819, -3.25691, 0.37 ) }
    dend_47 { pt3dadd( -213.443, -220.683, -3.20107, 0.37 ) }
    dend_47 { pt3dadd( -213.865, -221.535, -3.096, 0.29 ) }
    dend_47 { pt3dadd( -214.45, -222.65, -2.89579, 0.74 ) }
    dend_47 { pt3dadd( -214.774, -223.221, -2.76013, 1.11 ) }
    dend_47 { pt3dadd( -215.151, -223.823, -2.60062, 1.25 ) }
    dend_47 { pt3dadd( -215.554, -224.414, -2.4461, 1.11 ) }
    dend_47 { pt3dadd( -215.946, -224.952, -2.31524, 0.59 ) }
    dend_47 { pt3dadd( -216.467, -225.639, -2.18216, 0.29 ) }
    dend_47 { pt3dadd( -216.785, -226.047, -2.15334, 0.29 ) }
    dend_47 { pt3dadd( -217.384, -226.82, -2.13763, 0.22 ) }
    dend_47 { pt3dadd( -217.783, -227.347, -2.1453, 0.22 ) }
    dend_47 { pt3dadd( -218.005, -227.648, -2.1534, 0.66 ) }
    dend_47 { pt3dadd( -218.347, -228.119, -2.16713, 0.66 ) }
    dend_47 { pt3dadd( -219.039, -229.105, -2.17611, 0.29 ) }
    dend_47 { pt3dadd( -219.458, -229.7, -2.17018, 0.29 ) }
    dend_47 { pt3dadd( -219.899, -230.294, -2.15385, 0.29 ) }
    dend_47 { pt3dadd( -220.362, -230.879, -2.13358, 0.66 ) }
    dend_47 { pt3dadd( -220.736, -231.323, -2.11769, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -221.338, -232.005, -2.09493, 0.22 ) }
    dend_47 { pt3dadd( -221.755, -232.46, -2.084, 0.22 ) }
    dend_47 { pt3dadd( -222.456, -233.223, -2.07704, 0.22 ) }
    dend_47 { pt3dadd( -223.685, -234.568, -2.10639, 0.22 ) }
    dend_47 { pt3dadd( -224.055, -235.0, -2.13813, 0.22 ) }
    dend_47 { pt3dadd( -224.439, -235.492, -2.19799, 1.11 ) }
    dend_47 { pt3dadd( -224.647, -235.796, -2.25507, 1.11 ) }
    dend_47 { pt3dadd( -224.745, -235.972, -2.29478, 1.11 ) }
    dend_47 { pt3dadd( -224.939, -236.436, -2.41145, 0.66 ) }
    dend_47 { pt3dadd( -225.179, -237.205, -2.62704, 0.22 ) }
    dend_47 { pt3dadd( -225.294, -237.679, -2.75962, 0.52 ) }
    dend_47 { pt3dadd( -225.475, -238.772, -3.06154, 0.22 ) }
    dend_47 { pt3dadd( -225.616, -239.662, -3.29967, 0.22 ) }
    dend_47 { pt3dadd( -225.676, -240.044, -3.3974, 0.59 ) }
    dend_47 { pt3dadd( -225.751, -240.529, -3.51379, 0.59 ) }
    dend_47 { pt3dadd( -225.858, -241.232, -3.68368, 0.52 ) }
    dend_47 { pt3dadd( -226.005, -242.268, -3.93991, 0.22 ) }
    dend_47 { pt3dadd( -226.078, -242.875, -4.09382, 0.22 ) }
    dend_47 { pt3dadd( -226.108, -243.237, -4.18684, 0.22 ) }
    dend_47 { pt3dadd( -226.133, -243.649, -4.29429, 0.66 ) }
    dend_47 { pt3dadd( -226.138, -244.249, -4.41375, 0.81 ) }
    dend_47 { pt3dadd( -226.082, -244.919, -4.4938, 0.59 ) }
    dend_47 { pt3dadd( -225.859, -245.899, -4.49777, 1.25 ) }
    dend_47 { pt3dadd( -225.655, -246.428, -4.45154, 1.69 ) }
    dend_47 { pt3dadd( -225.505, -246.693, -4.40508, 1.92 ) }
    dend_47 { pt3dadd( -224.834, -247.561, -4.17566, 1.18 ) }
    dend_47 { pt3dadd( -224.152, -248.23, -3.9213, 0.22 ) }
    dend_47 { pt3dadd( -223.328, -248.857, -3.62435, 0.22 ) }
    dend_47 { pt3dadd( -222.759, -249.211, -3.43031, 0.22 ) }
    dend_47 { pt3dadd( -222.039, -249.611, -3.21624, 0.22 ) }
    dend_47 { pt3dadd( -221.518, -249.885, -3.08818, 0.66 ) }
    dend_47 { pt3dadd( -221.132, -250.085, -3.02438, 0.66 ) }
    dend_47 { pt3dadd( -220.087, -250.624, -2.90168, 0.22 ) }
    dend_47 { pt3dadd( -219.69, -250.835, -2.87146, 0.37 ) }
    dend_47 { pt3dadd( -219.29, -251.089, -2.84745, 0.37 ) }
    dend_47 { pt3dadd( -218.969, -251.337, -2.82571, 0.22 ) }
    dend_47 { pt3dadd( -218.487, -251.766, -2.79362, 0.22 ) }
    dend_47 { pt3dadd( -221.662, -258.752, -2.96686, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -172.882, -119.459, 0.028297, 0.37 ) }
    dend_46 { pt3dadd( -174.479, -119.072, 0.067724, 0.37 ) }
    dend_46 { pt3dadd( -175.15, -118.944, 0.0602671, 0.37 ) }
    dend_46 { pt3dadd( -176.583, -118.738, -0.040778, 0.29 ) }
    dend_46 { pt3dadd( -177.673, -118.626, -0.14952, 0.44 ) }
    dend_46 { pt3dadd( -178.726, -118.556, -0.273837, 0.66 ) }
    dend_46 { pt3dadd( -179.33, -118.535, -0.359891, 0.81 ) }
    dend_46 { pt3dadd( -179.854, -118.543, -0.460755, 0.81 ) }
    dend_46 { pt3dadd( -181.474, -118.63, -0.838465, 0.22 ) }
    dend_46 { pt3dadd( -181.981, -118.675, -0.981742, 0.22 ) }
    dend_46 { pt3dadd( -182.892, -118.762, -1.2403, 0.74 ) }
    dend_46 { pt3dadd( -183.639, -118.831, -1.4591, 0.88 ) }
    dend_46 { pt3dadd( -184.878, -118.961, -1.85785, 0.22 ) }
    dend_46 { pt3dadd( -185.384, -119.014, -2.06754, 0.22 ) }
    dend_46 { pt3dadd( -185.85, -119.075, -2.30159, 0.22 ) }
    dend_46 { pt3dadd( -186.377, -119.159, -2.59916, 0.74 ) }
    dend_46 { pt3dadd( -186.932, -119.287, -2.9512, 0.88 ) }
    dend_46 { pt3dadd( -187.532, -119.511, -3.40904, 0.88 ) }
    dend_46 { pt3dadd( -188.835, -120.233, -4.59435, 0.22 ) }
    dend_46 { pt3dadd( -189.292, -120.539, -5.05157, 0.22 ) }
    dend_46 { pt3dadd( -189.665, -120.813, -5.45665, 0.74 ) }
    dend_46 { pt3dadd( -190.121, -121.211, -6.04593, 0.74 ) }
    dend_46 { pt3dadd( -191.081, -122.037, -7.17933, 0.29 ) }
    dend_46 { pt3dadd( -191.385, -122.29, -7.50585, 0.29 ) }
    dend_46 { pt3dadd( -191.887, -122.695, -7.99351, 0.88 ) }
    dend_46 { pt3dadd( -192.492, -123.132, -8.54553, 1.03 ) }
    dend_46 { pt3dadd( -194.332, -124.288, -10.1299, 0.22 ) }
    dend_46 { pt3dadd( -196.092, -125.288, -11.5426, 0.22 ) }
    dend_46 { pt3dadd( -196.811, -125.646, -12.0588, 0.22 ) }
    dend_46 { pt3dadd( -197.24, -125.847, -12.3498, 1.11 ) }
    dend_46 { pt3dadd( -197.761, -126.087, -12.6783, 1.11 ) }
    dend_46 { pt3dadd( -198.326, -126.323, -12.973, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -25.8142, -173.414, -1.9752, 0.81 ) }
    dend_40 { pt3dadd( -24.4685, -174.118, -2.39921, 0.81 ) }
    dend_40 { pt3dadd( -23.3824, -174.622, -2.75803, 0.52 ) }
    dend_40 { pt3dadd( -21.8369, -175.283, -3.28906, 0.52 ) }
    dend_40 { pt3dadd( -21.1632, -175.581, -3.52746, 0.37 ) }
    dend_40 { pt3dadd( -19.8191, -176.196, -4.01109, 0.37 ) }
    dend_40 { pt3dadd( -19.2857, -176.449, -4.2045, 0.66 ) }
    dend_40 { pt3dadd( -18.8137, -176.675, -4.39374, 0.88 ) }
    dend_40 { pt3dadd( -18.4206, -176.868, -4.54719, 0.88 ) }
    dend_40 { pt3dadd( -17.4179, -177.464, -4.94297, 0.59 ) }
    dend_40 { pt3dadd( -16.5303, -178.11, -5.29638, 0.66 ) }
    dend_40 { pt3dadd( -15.6473, -178.851, -5.64629, 0.74 ) }
    dend_40 { pt3dadd( -15.1069, -179.302, -5.85864, 0.74 ) }
    dend_40 { pt3dadd( -14.6864, -179.624, -6.02149, 0.52 ) }
    dend_40 { pt3dadd( -13.9997, -180.091, -6.28754, 0.29 ) }
    dend_40 { pt3dadd( -13.2612, -180.487, -6.55702, 0.96 ) }
    dend_40 { pt3dadd( -12.586, -180.791, -6.78854, 1.03 ) }
    dend_40 { pt3dadd( -12.1379, -180.974, -6.92972, 1.03 ) }
    dend_40 { pt3dadd( -11.1129, -181.37, -7.22466, 0.66 ) }
    dend_40 { pt3dadd( -10.6827, -181.541, -7.35048, 0.52 ) }
    dend_40 { pt3dadd( -9.69543, -181.949, -7.64245, 0.59 ) }
    dend_40 { pt3dadd( -8.71891, -182.41, -7.93553, 0.59 ) }
    dend_40 { pt3dadd( -7.82381, -182.893, -8.21346, 0.52 ) }
    dend_40 { pt3dadd( -7.08634, -183.345, -8.45291, 0.52 ) }
    dend_40 { pt3dadd( -6.31715, -183.867, -8.7145, 0.96 ) }
    dend_40 { pt3dadd( -5.84108, -184.2, -8.89218, 1.18 ) }
    dend_40 { pt3dadd( -5.05786, -184.737, -9.21103, 0.66 ) }
    dend_40 { pt3dadd( -4.13481, -185.318, -9.59429, 0.37 ) }
    dend_40 { pt3dadd( -3.55748, -185.645, -9.83734, 0.37 ) }
    dend_40 { pt3dadd( -2.36197, -186.252, -10.3454, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( -1.29569, -186.767, -10.765, 1.03 ) }
    dend_40 { pt3dadd( -0.481498, -187.16, -11.0705, 0.81 ) }
    dend_40 { pt3dadd( 0.273798, -187.523, -11.3337, 0.52 ) }
    dend_40 { pt3dadd( 1.16629, -187.952, -11.6197, 0.52 ) }
    dend_40 { pt3dadd( 1.86944, -188.304, -11.8228, 0.52 ) }
    dend_40 { pt3dadd( 2.84435, -188.863, -12.0773, 0.52 ) }
    dend_40 { pt3dadd( 3.66948, -189.394, -12.2724, 1.33 ) }
    dend_40 { pt3dadd( 4.18553, -189.763, -12.3892, 1.69 ) }
    dend_40 { pt3dadd( 4.77765, -190.241, -12.5187, 1.69 ) }
    dend_40 { pt3dadd( 5.74253, -191.093, -12.809, 1.11 ) }
    dend_40 { pt3dadd( 6.76852, -192.035, -13.2009, 0.44 ) }
    dend_40 { pt3dadd( 7.41649, -192.618, -13.5186, 0.44 ) }
    dend_40 { pt3dadd( 7.9319, -193.069, -13.8117, 0.29 ) }
    dend_40 { pt3dadd( 8.50652, -193.561, -14.1982, 0.29 ) }
    dend_40 { pt3dadd( 9.78821, -194.611, -15.1635, 1.03 ) }
    dend_40 { pt3dadd( 10.1557, -194.898, -15.4698, 1.4 ) }
    dend_40 { pt3dadd( 10.5455, -195.21, -15.8279, 1.4 ) }
    dend_40 { pt3dadd( 11.7679, -196.307, -17.0447, 0.22 ) }
    dend_40 { pt3dadd( 12.4126, -196.921, -17.6966, 0.52 ) }
    dend_40 { pt3dadd( 12.7313, -197.238, -18.0113, 0.52 ) }
    dend_40 { pt3dadd( 13.2819, -197.84, -18.5316, 0.29 ) }
    dend_40 { pt3dadd( 14.0494, -198.712, -19.2672, 0.29 ) }
    dend_40 { pt3dadd( 14.5223, -199.254, -19.7066, 0.29 ) }
    dend_40 { pt3dadd( 14.998, -199.832, -20.1564, 0.66 ) }
    dend_40 { pt3dadd( 15.3548, -200.267, -20.4606, 0.81 ) }
    dend_40 { pt3dadd( 15.6166, -200.585, -20.6719, 0.81 ) }
    dend_40 { pt3dadd( 16.0649, -201.081, -20.9933, 0.59 ) }
    dend_40 { pt3dadd( 16.5803, -201.587, -21.3401, 0.29 ) }
    dend_40 { pt3dadd( 17.0782, -202.091, -21.6417, 0.29 ) }
    dend_40 { pt3dadd( 17.6427, -202.752, -21.9485, 0.66 ) }
    dend_40 { pt3dadd( 18.0773, -203.34, -22.1346, 0.66 ) }
    dend_40 { pt3dadd( 18.6576, -204.249, -22.3046, 0.29 ) }
    dend_40 { pt3dadd( 18.9851, -204.839, -22.3479, 0.29 ) }
    dend_40 { pt3dadd( 19.5328, -205.923, -22.342, 0.66 ) }
    dend_40 { pt3dadd( 19.9113, -206.695, -22.2841, 0.66 ) }
    dend_40 { pt3dadd( 20.378, -207.706, -22.1459, 0.44 ) }
    dend_40 { pt3dadd( 20.8145, -208.74, -21.9566, 1.47 ) }
    dend_40 { pt3dadd( 21.1339, -209.574, -21.7788, 1.84 ) }
    dend_40 { pt3dadd( 21.3082, -210.064, -21.6715, 1.84 ) }
    dend_40 { pt3dadd( 21.4092, -210.368, -21.6185, 1.84 ) }
    dend_40 { pt3dadd( 21.6725, -211.143, -21.4995, 1.33 ) }
    dend_40 { pt3dadd( 22.012, -212.076, -21.384, 0.52 ) }
    dend_40 { pt3dadd( 22.1992, -212.568, -21.3318, 0.52 ) }
    dend_40 { pt3dadd( 22.457, -213.235, -21.263, 0.52 ) }
    dend_40 { pt3dadd( 22.8718, -214.3, -21.1438, 0.29 ) }
    dend_40 { pt3dadd( 23.0938, -214.852, -21.0769, 0.29 ) }
    dend_40 { pt3dadd( 23.4326, -215.638, -20.9682, 0.29 ) }
    dend_40 { pt3dadd( 23.7672, -216.362, -20.8585, 0.44 ) }
    dend_40 { pt3dadd( 24.2735, -217.335, -20.7189, 0.44 ) }
    dend_40 { pt3dadd( 24.7461, -218.126, -20.6344, 0.44 ) }
    dend_40 { pt3dadd( 25.1132, -218.676, -20.6064, 1.33 ) }
    dend_40 { pt3dadd( 25.538, -219.306, -20.6177, 1.84 ) }
    dend_40 { pt3dadd( 25.9527, -219.862, -20.6635, 1.84 ) }
    dend_40 { pt3dadd( 26.6556, -220.721, -20.7748, 0.96 ) }
    dend_40 { pt3dadd( 27.5825, -221.768, -20.9587, 0.22 ) }
    dend_40 { pt3dadd( 28.3746, -222.613, -21.1397, 0.22 ) }
    dend_40 { pt3dadd( 29.4989, -223.748, -21.4276, 0.22 ) }
    dend_40 { pt3dadd( 30.1805, -224.384, -21.6124, 0.22 ) }
    dend_40 { pt3dadd( 30.959, -225.035, -21.8315, 0.22 ) }
    dend_40 { pt3dadd( 31.6478, -225.556, -22.0415, 0.44 ) }
    dend_40 { pt3dadd( 32.4686, -226.124, -22.3184, 0.88 ) }
    dend_40 { pt3dadd( 33.2544, -226.646, -22.6186, 1.03 ) }
    dend_40 { pt3dadd( 33.7667, -226.984, -22.8272, 1.03 ) }
    dend_40 { pt3dadd( 34.3611, -227.407, -23.0792, 0.88 ) }
    dend_40 { pt3dadd( 34.9545, -227.806, -23.3381, 0.29 ) }
    dend_40 { pt3dadd( 35.3862, -228.075, -23.5119, 0.29 ) }
    dend_40 { pt3dadd( 36.0591, -228.452, -23.7389, 0.29 ) }
    dend_40 { pt3dadd( 36.9186, -228.887, -23.9816, 0.37 ) }
    dend_40 { pt3dadd( 37.5764, -229.187, -24.1281, 0.37 ) }
    dend_40 { pt3dadd( 38.1609, -229.424, -24.2306, 0.29 ) }
    dend_40 { pt3dadd( 39.2952, -229.822, -24.3836, 0.29 ) }
    dend_40 { pt3dadd( 40.1859, -230.109, -24.4995, 0.81 ) }
    dend_40 { pt3dadd( 40.6846, -230.268, -24.5705, 0.81 ) }
    dend_40 { pt3dadd( 41.6417, -230.627, -24.7076, 0.59 ) }
    dend_40 { pt3dadd( 42.3383, -230.965, -24.7945, 0.29 ) }
    dend_40 { pt3dadd( 42.9347, -231.312, -24.856, 0.29 ) }
    dend_40 { pt3dadd( 43.5592, -231.723, -24.9058, 0.66 ) }
    dend_40 { pt3dadd( 44.0206, -232.046, -24.9226, 0.66 ) }
    dend_40 { pt3dadd( 45.3977, -233.038, -24.9083, 0.29 ) }
    dend_40 { pt3dadd( 46.274, -233.664, -24.8438, 0.29 ) }
    dend_40 { pt3dadd( 47.1862, -234.315, -24.7033, 0.29 ) }
    dend_40 { pt3dadd( 47.8797, -234.817, -24.5436, 0.29 ) }
    dend_40 { pt3dadd( 48.5699, -235.308, -24.3335, 0.88 ) }
    dend_40 { pt3dadd( 48.8816, -235.527, -24.2331, 0.88 ) }
    dend_40 { pt3dadd( 49.7148, -236.115, -23.9309, 0.66 ) }
    dend_40 { pt3dadd( 50.8617, -236.912, -23.4634, 0.29 ) }
    dend_40 { pt3dadd( 51.4532, -237.33, -23.1941, 0.29 ) }
    dend_40 { pt3dadd( 52.1512, -237.843, -22.8706, 0.66 ) }
    dend_40 { pt3dadd( 52.7335, -238.291, -22.6284, 0.44 ) }
    dend_40 { pt3dadd( 60.8609, -245.025, -22.7733, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -25.8142, -173.414, -1.9752, 2.14 ) }
    dend_35 { pt3dadd( -26.4294, -174.839, -2.19599, 2.14 ) }
    dend_35 { pt3dadd( -26.9332, -176.14, -2.3747, 1.33 ) }
    dend_35 { pt3dadd( -27.384, -177.421, -2.52693, 1.03 ) }
    dend_35 { pt3dadd( -27.6763, -178.396, -2.62407, 1.03 ) }
    dend_35 { pt3dadd( -27.8588, -179.06, -2.68509, 1.25 ) }
    dend_35 { pt3dadd( -28.0294, -179.71, -2.74054, 1.25 ) }
    dend_35 { pt3dadd( -28.28, -180.939, -2.82621, 0.96 ) }
    dend_35 { pt3dadd( -28.4562, -181.935, -2.86925, 0.96 ) }
    dend_35 { pt3dadd( -28.776, -183.683, -2.92562, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -28.9659, -184.713, -2.93495, 0.88 ) }
    dend_35 { pt3dadd( -29.1184, -185.69, -2.93014, 0.96 ) }
    dend_35 { pt3dadd( -29.2561, -186.806, -2.91074, 0.96 ) }
    dend_35 { pt3dadd( -29.3505, -187.759, -2.87437, 0.74 ) }
    dend_35 { pt3dadd( -29.424, -188.678, -2.82347, 0.52 ) }
    dend_35 { pt3dadd( -29.4735, -189.442, -2.76522, 0.52 ) }
    dend_35 { pt3dadd( -29.5239, -190.38, -2.67784, 0.37 ) }
    dend_35 { pt3dadd( -29.5602, -191.128, -2.6058, 0.74 ) }
    dend_35 { pt3dadd( -29.6157, -191.94, -2.52345, 0.74 ) }
    dend_35 { pt3dadd( -29.6869, -192.855, -2.41762, 1.03 ) }
    dend_35 { pt3dadd( -29.7421, -193.437, -2.34518, 1.18 ) }
    dend_35 { pt3dadd( -29.8315, -194.241, -2.24992, 1.33 ) }
    dend_35 { pt3dadd( -29.9138, -194.848, -2.17377, 1.33 ) }
    dend_35 { pt3dadd( -29.9871, -195.495, -2.0608, 1.18 ) }
    dend_35 { pt3dadd( -30.0765, -196.44, -1.79496, 0.96 ) }
    dend_35 { pt3dadd( -30.1326, -197.165, -1.51156, 0.81 ) }
    dend_35 { pt3dadd( -30.1715, -197.898, -1.16925, 0.81 ) }
    dend_35 { pt3dadd( -30.18, -198.704, -0.754828, 0.81 ) }
    dend_35 { pt3dadd( -30.1733, -199.41, -0.383367, 0.59 ) }
    dend_35 { pt3dadd( -30.1476, -200.575, 0.20229, 0.66 ) }
    dend_35 { pt3dadd( -30.1594, -201.071, 0.428587, 0.66 ) }
    dend_35 { pt3dadd( -30.2543, -201.958, 0.754577, 1.18 ) }
    dend_35 { pt3dadd( -30.4905, -202.868, 0.958471, 1.47 ) }
    dend_35 { pt3dadd( -30.8236, -203.648, 1.02251, 1.55 ) }
    dend_35 { pt3dadd( -31.1696, -204.212, 1.00574, 1.55 ) }
    dend_35 { pt3dadd( -31.7686, -204.969, 0.926206, 1.4 ) }
    dend_35 { pt3dadd( -32.6179, -205.842, 0.828917, 1.18 ) }
    dend_35 { pt3dadd( -33.6419, -206.762, 0.733311, 0.66 ) }
    dend_35 { pt3dadd( -34.498, -207.482, 0.676397, 0.74 ) }
    dend_35 { pt3dadd( -35.6128, -208.387, 0.635974, 1.18 ) }
    dend_35 { pt3dadd( -36.5347, -209.114, 0.645361, 1.25 ) }
    dend_35 { pt3dadd( -37.4997, -209.863, 0.712378, 1.25 ) }
    dend_35 { pt3dadd( -38.3148, -210.484, 0.830844, 1.25 ) }
    dend_35 { pt3dadd( -39.1404, -211.063, 0.999533, 1.33 ) }
    dend_35 { pt3dadd( -39.6148, -211.355, 1.12652, 1.33 ) }
    dend_35 { pt3dadd( -40.3748, -211.754, 1.40152, 1.03 ) }
    dend_35 { pt3dadd( -41.0249, -212.04, 1.69579, 0.74 ) }
    dend_35 { pt3dadd( -41.5414, -212.234, 1.95713, 0.59 ) }
    dend_35 { pt3dadd( -42.2187, -212.492, 2.32397, 0.59 ) }
    dend_35 { pt3dadd( -42.8931, -212.789, 2.70382, 0.88 ) }
    dend_35 { pt3dadd( -43.5603, -213.192, 3.11112, 1.18 ) }
    dend_35 { pt3dadd( -44.1747, -213.684, 3.53806, 1.18 ) }
    dend_35 { pt3dadd( -44.7089, -214.21, 3.95033, 1.18 ) }
    dend_35 { pt3dadd( -45.207, -214.794, 4.34768, 1.18 ) }
    dend_35 { pt3dadd( -45.5901, -215.304, 4.65046, 1.18 ) }
    dend_35 { pt3dadd( -46.122, -216.086, 5.06232, 0.81 ) }
    dend_35 { pt3dadd( -46.4424, -216.603, 5.30001, 0.59 ) }
    dend_35 { pt3dadd( -46.7392, -217.142, 5.50713, 0.52 ) }
    dend_35 { pt3dadd( -47.3133, -218.291, 5.87241, 0.96 ) }
    dend_35 { pt3dadd( -47.6479, -219.06, 6.06068, 1.18 ) }
    dend_35 { pt3dadd( -47.9312, -219.776, 6.19294, 1.18 ) }
    dend_35 { pt3dadd( -48.3018, -220.751, 6.32074, 0.88 ) }
    dend_35 { pt3dadd( -48.6659, -221.733, 6.41531, 0.59 ) }
    dend_35 { pt3dadd( -48.9667, -222.616, 6.48388, 0.59 ) }
    dend_35 { pt3dadd( -49.2956, -223.645, 6.55698, 0.59 ) }
    dend_35 { pt3dadd( -49.6019, -224.606, 6.62654, 0.74 ) }
    dend_35 { pt3dadd( -49.9589, -225.68, 6.71008, 1.33 ) }
    dend_35 { pt3dadd( -50.28, -226.613, 6.78656, 1.69 ) }
    dend_35 { pt3dadd( -50.6919, -227.766, 6.88534, 1.77 ) }
    dend_35 { pt3dadd( -50.9281, -228.443, 6.94027, 1.77 ) }
    dend_35 { pt3dadd( -51.2233, -229.297, 6.98584, 1.77 ) }
    dend_35 { pt3dadd( -51.4719, -230.117, 6.99651, 1.47 ) }
    dend_35 { pt3dadd( -51.711, -231.028, 6.97117, 1.03 ) }
    dend_35 { pt3dadd( -51.9328, -231.923, 6.91893, 1.03 ) }
    dend_35 { pt3dadd( -52.1937, -232.968, 6.83104, 1.03 ) }
    dend_35 { pt3dadd( -52.4508, -234.051, 6.73439, 1.11 ) }
    dend_35 { pt3dadd( -52.6763, -235.072, 6.64871, 1.33 ) }
    dend_35 { pt3dadd( -52.8431, -236.004, 6.58003, 1.03 ) }
    dend_35 { pt3dadd( -53.0015, -237.267, 6.5003, 0.81 ) }
    dend_35 { pt3dadd( -53.0733, -238.153, 6.45696, 1.03 ) }
    dend_35 { pt3dadd( -53.1184, -239.267, 6.41993, 0.81 ) }
    dend_35 { pt3dadd( -53.1241, -239.876, 6.4108, 0.81 ) }
    dend_35 { pt3dadd( -53.1028, -241.523, 6.38885, 0.74 ) }
    dend_35 { pt3dadd( -53.0471, -243.179, 6.36875, 0.74 ) }
    dend_35 { pt3dadd( -52.9725, -244.511, 6.34902, 0.74 ) }
    dend_35 { pt3dadd( -52.8671, -246.456, 6.32167, 0.74 ) }
    dend_35 { pt3dadd( -52.8283, -247.797, 6.30055, 0.74 ) }
    dend_35 { pt3dadd( -52.8393, -248.668, 6.29326, 1.18 ) }
    dend_35 { pt3dadd( -52.9187, -249.561, 6.30832, 1.4 ) }
    dend_35 { pt3dadd( -53.1031, -250.486, 6.36216, 1.4 ) }
    dend_35 { pt3dadd( -53.3979, -251.362, 6.45949, 1.47 ) }
    dend_35 { pt3dadd( -53.9055, -252.326, 6.62688, 1.55 ) }
    dend_35 { pt3dadd( -54.3148, -252.9, 6.75491, 1.55 ) }
    dend_35 { pt3dadd( -55.0955, -253.793, 6.99958, 1.11 ) }
    dend_35 { pt3dadd( -56.1342, -254.793, 7.33219, 0.88 ) }
    dend_35 { pt3dadd( -56.8924, -255.441, 7.60215, 0.88 ) }
    dend_35 { pt3dadd( -57.7616, -256.105, 7.93777, 1.03 ) }
    dend_35 { pt3dadd( -58.3629, -256.537, 8.1759, 1.03 ) }
    dend_35 { pt3dadd( -58.8389, -256.888, 8.37131, 1.03 ) }
    dend_35 { pt3dadd( -59.5294, -257.481, 8.69256, 0.81 ) }
    dend_35 { pt3dadd( -60.3176, -258.323, 9.09335, 0.59 ) }
    dend_35 { pt3dadd( -61.1723, -259.482, 9.55597, 0.59 ) }
    dend_35 { pt3dadd( -61.7049, -260.384, 9.86345, 0.88 ) }
    dend_35 { pt3dadd( -62.098, -261.222, 10.1113, 0.88 ) }
    dend_35 { pt3dadd( -62.5951, -262.538, 10.4387, 0.74 ) }
    dend_35 { pt3dadd( -62.8658, -263.444, 10.6244, 0.96 ) }
    dend_35 { pt3dadd( -63.0848, -264.337, 10.7545, 1.11 ) }
    dend_35 { pt3dadd( -63.2121, -264.979, 10.8273, 1.11 ) }
    dend_35 { pt3dadd( -63.3394, -265.654, 10.8782, 0.88 ) }
    dend_35 { pt3dadd( -63.5375, -266.58, 10.8966, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -63.6959, -267.23, 10.8908, 0.66 ) }
    dend_35 { pt3dadd( -63.9594, -268.322, 10.8832, 0.96 ) }
    dend_35 { pt3dadd( -64.1538, -269.158, 10.8725, 0.96 ) }
    dend_35 { pt3dadd( -64.3929, -270.227, 10.8515, 0.66 ) }
    dend_35 { pt3dadd( -64.6113, -271.202, 10.8305, 0.74 ) }
    dend_35 { pt3dadd( -64.9479, -272.768, 10.8129, 0.96 ) }
    dend_35 { pt3dadd( -65.13, -273.673, 10.8282, 0.96 ) }
    dend_35 { pt3dadd( -65.3131, -274.617, 10.8486, 0.96 ) }
    dend_35 { pt3dadd( -65.5367, -275.698, 10.8561, 0.66 ) }
    dend_35 { pt3dadd( -65.8782, -277.293, 10.8378, 0.66 ) }
    dend_35 { pt3dadd( -66.176, -278.816, 10.7667, 0.66 ) }
    dend_35 { pt3dadd( -66.3393, -279.725, 10.6909, 0.81 ) }
    dend_35 { pt3dadd( -66.5988, -281.314, 10.5153, 0.74 ) }
    dend_35 { pt3dadd( -66.7815, -282.573, 10.3411, 0.74 ) }
    dend_35 { pt3dadd( -66.9391, -283.901, 10.1245, 0.96 ) }
    dend_35 { pt3dadd( -67.0463, -285.015, 9.92162, 0.96 ) }
    dend_35 { pt3dadd( -67.114, -285.755, 9.79352, 1.62 ) }
    dend_35 { pt3dadd( -67.1691, -286.162, 9.74581, 1.62 ) }
    dend_35 { pt3dadd( -67.2651, -286.698, 9.73719, 1.62 ) }
    dend_35 { pt3dadd( -67.4312, -287.483, 9.77603, 1.4 ) }
    dend_35 { pt3dadd( -67.6383, -288.304, 9.85422, 0.88 ) }
    dend_35 { pt3dadd( -67.9148, -289.355, 9.98205, 0.59 ) }
    dend_35 { pt3dadd( -68.2788, -290.785, 10.1717, 0.81 ) }
    dend_35 { pt3dadd( -68.5705, -291.937, 10.3346, 0.96 ) }
    dend_35 { pt3dadd( -68.7951, -292.866, 10.4571, 0.96 ) }
    dend_35 { pt3dadd( -69.0484, -293.988, 10.5804, 1.11 ) }
    dend_35 { pt3dadd( -69.2165, -294.722, 10.6512, 1.11 ) }
    dend_35 { pt3dadd( -69.3602, -295.288, 10.7, 1.33 ) }
    dend_35 { pt3dadd( -69.5127, -295.84, 10.7448, 1.33 ) }
    dend_35 { pt3dadd( -69.8194, -296.736, 10.8473, 1.03 ) }
    dend_35 { pt3dadd( -70.1932, -297.62, 10.9849, 0.66 ) }
    dend_35 { pt3dadd( -70.5059, -298.279, 11.1063, 0.37 ) }
    dend_35 { pt3dadd( -70.7426, -298.76, 11.1996, 0.37 ) }
    dend_35 { pt3dadd( -71.0295, -299.391, 11.3183, 0.37 ) }
    dend_35 { pt3dadd( -71.2866, -299.99, 11.4298, 1.03 ) }
    dend_35 { pt3dadd( -71.5645, -300.657, 11.5518, 1.25 ) }
    dend_35 { pt3dadd( -71.7437, -301.153, 11.6362, 1.25 ) }
    dend_35 { pt3dadd( -72.0272, -302.081, 11.7743, 0.96 ) }
    dend_35 { pt3dadd( -72.3398, -303.248, 11.925, 0.52 ) }
    dend_35 { pt3dadd( -72.6085, -304.298, 12.0456, 0.52 ) }
    dend_35 { pt3dadd( -72.9593, -305.762, 12.1902, 0.52 ) }
    dend_35 { pt3dadd( -73.208, -306.955, 12.2893, 0.81 ) }
    dend_35 { pt3dadd( -73.3814, -307.825, 12.3621, 1.03 ) }
    dend_35 { pt3dadd( -73.5445, -308.611, 12.432, 1.03 ) }
    dend_35 { pt3dadd( -73.6767, -309.217, 12.4874, 0.81 ) }
    dend_35 { pt3dadd( -73.8528, -309.947, 12.555, 0.81 ) }
    dend_35 { pt3dadd( -74.1402, -310.971, 12.6506, 0.59 ) }
    dend_35 { pt3dadd( -74.5161, -312.044, 12.7582, 0.44 ) }
    dend_35 { pt3dadd( -75.109, -313.392, 12.9321, 0.88 ) }
    dend_35 { pt3dadd( -75.4166, -313.969, 13.0247, 0.88 ) }
    dend_35 { pt3dadd( -75.8824, -314.714, 13.1664, 0.59 ) }
    dend_35 { pt3dadd( -76.3794, -315.348, 13.3228, 0.59 ) }
    dend_35 { pt3dadd( -77.1797, -316.14, 13.5668, 0.59 ) }
    dend_35 { pt3dadd( -78.0525, -316.831, 13.821, 0.81 ) }
    dend_35 { pt3dadd( -78.5536, -317.16, 13.9665, 0.81 ) }
    dend_35 { pt3dadd( -78.9593, -317.396, 14.0837, 0.81 ) }
    dend_35 { pt3dadd( -79.8798, -317.851, 14.3438, 0.59 ) }
    dend_35 { pt3dadd( -80.8944, -318.256, 14.6272, 0.88 ) }
    dend_35 { pt3dadd( -81.9067, -318.578, 14.9035, 1.03 ) }
    dend_35 { pt3dadd( -82.8762, -318.836, 15.161, 1.03 ) }
    dend_35 { pt3dadd( -83.6776, -319.007, 15.3781, 0.59 ) }
    dend_35 { pt3dadd( -84.3979, -319.141, 15.5835, 0.59 ) }
    dend_35 { pt3dadd( -85.0074, -319.256, 15.7662, 0.59 ) }
    dend_35 { pt3dadd( -85.5263, -319.353, 15.9398, 0.59 ) }
    dend_35 { pt3dadd( -86.0765, -319.481, 16.1313, 0.59 ) }
    dend_35 { pt3dadd( -86.7922, -319.685, 16.3926, 0.44 ) }
    dend_35 { pt3dadd( -87.8584, -320.065, 16.7969, 0.81 ) }
    dend_35 { pt3dadd( -88.7422, -320.449, 17.1484, 1.11 ) }
    dend_35 { pt3dadd( -89.6986, -320.944, 17.5505, 0.81 ) }
    dend_35 { pt3dadd( -90.6498, -321.521, 17.9654, 0.66 ) }
    dend_35 { pt3dadd( -91.0837, -321.822, 18.158, 0.66 ) }
    dend_35 { pt3dadd( -91.6038, -322.235, 18.3915, 0.52 ) }
    dend_35 { pt3dadd( -92.1949, -322.753, 18.6651, 0.52 ) }
    dend_35 { pt3dadd( -92.79, -323.342, 18.946, 0.52 ) }
    dend_35 { pt3dadd( -93.3851, -323.976, 19.2318, 0.52 ) }
    dend_35 { pt3dadd( -93.7424, -324.397, 19.4067, 1.11 ) }
    dend_35 { pt3dadd( -94.5348, -325.423, 19.786, 1.4 ) }
    dend_35 { pt3dadd( -94.9631, -326.039, 19.986, 1.84 ) }
    dend_35 { pt3dadd( -95.4361, -326.785, 20.1894, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.23079, -73.8707, -9.41864, 0.66 ) }
    dend_32 { pt3dadd( -9.32212, -75.8234, -9.40717, 0.66 ) }
    dend_32 { pt3dadd( -9.39964, -77.0266, -9.40478, 0.37 ) }
    dend_32 { pt3dadd( -9.44527, -77.8298, -9.43338, 0.81 ) }
    dend_32 { pt3dadd( -9.48487, -78.8674, -9.49316, 1.03 ) }
    dend_32 { pt3dadd( -9.52027, -79.7691, -9.55246, 1.11 ) }
    dend_32 { pt3dadd( -9.5653, -80.7309, -9.63193, 0.88 ) }
    dend_32 { pt3dadd( -9.62224, -81.8374, -9.76552, 0.59 ) }
    dend_32 { pt3dadd( -9.65819, -83.1242, -9.9658, 0.29 ) }
    dend_32 { pt3dadd( -9.65646, -84.0565, -10.1397, 0.29 ) }
    dend_32 { pt3dadd( -9.63456, -84.4834, -10.231, 0.29 ) }
    dend_32 { pt3dadd( -9.51346, -85.4442, -10.4788, 0.74 ) }
    dend_32 { pt3dadd( -9.32196, -86.3375, -10.7456, 1.11 ) }
    dend_32 { pt3dadd( -9.16079, -86.9009, -10.9233, 1.11 ) }
    dend_32 { pt3dadd( -8.89529, -87.7302, -11.1889, 1.11 ) }
    dend_32 { pt3dadd( -8.55874, -88.6932, -11.4581, 0.81 ) }
    dend_32 { pt3dadd( -7.99758, -90.2851, -11.8246, 0.44 ) }
    dend_32 { pt3dadd( -7.48718, -91.8, -12.0942, 0.59 ) }
    dend_32 { pt3dadd( -7.21564, -92.7136, -12.2172, 0.88 ) }
    dend_32 { pt3dadd( -6.98123, -93.6768, -12.3008, 0.88 ) }
    dend_32 { pt3dadd( -6.72174, -95.0578, -12.3634, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -6.54408, -96.4155, -12.3573, 0.44 ) }
    dend_32 { pt3dadd( -6.46232, -97.4882, -12.2955, 1.03 ) }
    dend_32 { pt3dadd( -6.42714, -98.3868, -12.2252, 0.74 ) }
    dend_32 { pt3dadd( -6.40638, -99.5128, -12.1444, 0.52 ) }
    dend_32 { pt3dadd( -6.40218, -100.384, -12.0969, 0.88 ) }
    dend_32 { pt3dadd( -6.41757, -101.182, -12.1053, 1.18 ) }
    dend_32 { pt3dadd( -6.43311, -101.874, -12.1268, 1.18 ) }
    dend_32 { pt3dadd( -6.461, -102.666, -12.1605, 0.88 ) }
    dend_32 { pt3dadd( -6.51629, -104.042, -12.2356, 0.29 ) }
    dend_32 { pt3dadd( -6.56725, -105.082, -12.3067, 0.29 ) }
    dend_32 { pt3dadd( -6.65361, -106.57, -12.4426, 1.03 ) }
    dend_32 { pt3dadd( -6.70569, -107.558, -12.5509, 1.47 ) }
    dend_32 { pt3dadd( -6.73989, -108.181, -12.6203, 1.47 ) }
    dend_32 { pt3dadd( -6.77244, -108.867, -12.6979, 1.47 ) }
    dend_32 { pt3dadd( -6.79543, -109.89, -12.813, 1.25 ) }
    dend_32 { pt3dadd( -6.80252, -111.142, -12.9395, 0.44 ) }
    dend_32 { pt3dadd( -6.78263, -112.176, -13.027, 0.44 ) }
    dend_32 { pt3dadd( -6.75237, -113.186, -13.1194, 0.44 ) }
    dend_32 { pt3dadd( -6.72929, -113.705, -13.1696, 0.59 ) }
    dend_32 { pt3dadd( -6.67158, -114.924, -13.2892, 0.59 ) }
    dend_32 { pt3dadd( -6.61004, -115.853, -13.3864, 0.37 ) }
    dend_32 { pt3dadd( -6.55671, -116.629, -13.4674, 0.81 ) }
    dend_32 { pt3dadd( -6.50804, -117.339, -13.5315, 1.03 ) }
    dend_32 { pt3dadd( -6.47495, -117.859, -13.569, 1.03 ) }
    dend_32 { pt3dadd( -6.44872, -118.504, -13.5997, 0.59 ) }
    dend_32 { pt3dadd( -6.39992, -119.557, -13.6315, 0.22 ) }
    dend_32 { pt3dadd( -6.34503, -120.216, -13.6485, 0.22 ) }
    dend_32 { pt3dadd( -6.25786, -120.995, -13.6677, 0.22 ) }
    dend_32 { pt3dadd( -6.14764, -121.833, -13.6878, 0.66 ) }
    dend_32 { pt3dadd( -5.99897, -122.835, -13.7169, 0.88 ) }
    dend_32 { pt3dadd( -5.74769, -124.296, -13.7674, 0.88 ) }
    dend_32 { pt3dadd( -5.44195, -125.995, -13.8317, 0.96 ) }
    dend_32 { pt3dadd( -5.20935, -127.274, -13.9024, 1.18 ) }
    dend_32 { pt3dadd( -5.04084, -128.31, -13.9805, 0.66 ) }
    dend_32 { pt3dadd( -4.91132, -129.16, -14.0489, 0.52 ) }
    dend_32 { pt3dadd( -4.7008, -130.781, -14.1929, 0.52 ) }
    dend_32 { pt3dadd( -4.56738, -132.033, -14.3129, 0.81 ) }
    dend_32 { pt3dadd( -4.44864, -133.296, -14.445, 0.52 ) }
    dend_32 { pt3dadd( -4.35839, -134.241, -14.5408, 0.52 ) }
    dend_32 { pt3dadd( -4.2455, -135.358, -14.6781, 1.47 ) }
    dend_32 { pt3dadd( -4.11877, -136.499, -14.8477, 1.77 ) }
    dend_32 { pt3dadd( -4.00972, -137.379, -15.017, 1.77 ) }
    dend_32 { pt3dadd( -3.93112, -137.885, -15.1295, 1.77 ) }
    dend_32 { pt3dadd( -3.77252, -138.721, -15.3247, 1.25 ) }
    dend_32 { pt3dadd( -3.56752, -139.69, -15.5549, 0.81 ) }
    dend_32 { pt3dadd( -3.32527, -140.866, -15.8394, 0.44 ) }
    dend_32 { pt3dadd( -3.01264, -142.341, -16.1896, 0.37 ) }
    dend_32 { pt3dadd( -2.8201, -143.248, -16.3979, 0.52 ) }
    dend_32 { pt3dadd( -2.57024, -144.345, -16.6423, 0.52 ) }
    dend_32 { pt3dadd( -2.36891, -145.167, -16.8201, 0.66 ) }
    dend_32 { pt3dadd( -2.0809, -146.248, -17.0565, 0.66 ) }
    dend_32 { pt3dadd( -1.69533, -147.628, -17.4143, 0.88 ) }
    dend_32 { pt3dadd( -1.3484, -148.785, -17.7589, 1.25 ) }
    dend_32 { pt3dadd( -1.14277, -149.436, -17.9886, 1.25 ) }
    dend_32 { pt3dadd( -0.950469, -149.994, -18.2121, 1.25 ) }
    dend_32 { pt3dadd( -0.549299, -151.089, -18.6963, 1.11 ) }
    dend_32 { pt3dadd( -0.18065, -152.054, -19.1562, 0.74 ) }
    dend_32 { pt3dadd( 0.152147, -152.9, -19.5862, 0.29 ) }
    dend_32 { pt3dadd( 0.346361, -153.401, -19.8524, 0.29 ) }
    dend_32 { pt3dadd( 0.802502, -154.622, -20.4845, 0.44 ) }
    dend_32 { pt3dadd( 1.05213, -155.324, -20.8167, 0.88 ) }
    dend_32 { pt3dadd( 1.25305, -155.964, -21.0734, 1.33 ) }
    dend_32 { pt3dadd( 1.4663, -156.723, -21.3224, 1.47 ) }
    dend_32 { pt3dadd( 1.6703, -157.55, -21.5411, 1.47 ) }
    dend_32 { pt3dadd( 1.8391, -158.287, -21.6997, 1.25 ) }
    dend_32 { pt3dadd( 2.0578, -159.295, -21.8779, 0.44 ) }
    dend_32 { pt3dadd( 2.3763, -160.777, -22.0429, 0.29 ) }
    dend_32 { pt3dadd( 2.61406, -161.955, -22.0989, 0.29 ) }
    dend_32 { pt3dadd( 2.83498, -163.159, -22.0923, 0.29 ) }
    dend_32 { pt3dadd( 2.9896, -164.121, -22.0436, 0.74 ) }
    dend_32 { pt3dadd( 3.07696, -164.802, -21.9827, 0.88 ) }
    dend_32 { pt3dadd( 3.1866, -166.188, -21.8055, 0.96 ) }
    dend_32 { pt3dadd( 3.20373, -167.373, -21.6296, 1.03 ) }
    dend_32 { pt3dadd( 3.15153, -168.266, -21.5062, 1.03 ) }
    dend_32 { pt3dadd( 3.04858, -169.156, -21.3808, 0.59 ) }
    dend_32 { pt3dadd( 2.9159, -170.106, -21.2551, 0.22 ) }
    dend_32 { pt3dadd( 2.83011, -170.704, -21.1949, 0.22 ) }
    dend_32 { pt3dadd( 2.63919, -172.079, -21.1357, 0.96 ) }
    dend_32 { pt3dadd( 2.5271, -172.893, -21.1254, 1.11 ) }
    dend_32 { pt3dadd( 2.42023, -173.789, -21.0929, 1.11 ) }
    dend_32 { pt3dadd( 2.34844, -174.646, -21.0326, 0.59 ) }
    dend_32 { pt3dadd( 2.30655, -175.518, -20.9516, 0.29 ) }
    dend_32 { pt3dadd( 2.29613, -176.263, -20.8625, 0.29 ) }
    dend_32 { pt3dadd( 2.29273, -176.885, -20.7694, 0.29 ) }
    dend_32 { pt3dadd( 2.29544, -178.234, -20.5405, 0.44 ) }
    dend_32 { pt3dadd( 2.30247, -179.378, -20.3154, 0.66 ) }
    dend_32 { pt3dadd( 2.31325, -180.587, -20.0654, 0.66 ) }
    dend_32 { pt3dadd( 2.3307, -181.46, -19.8934, 0.81 ) }
    dend_32 { pt3dadd( 2.35507, -182.43, -19.7258, 0.81 ) }
    dend_32 { pt3dadd( 2.38186, -183.357, -19.5843, 0.52 ) }
    dend_32 { pt3dadd( 2.38541, -184.533, -19.4374, 0.66 ) }
    dend_32 { pt3dadd( 2.37297, -185.404, -19.3346, 0.66 ) }
    dend_32 { pt3dadd( 2.29864, -186.869, -19.2345, 0.37 ) }
    dend_32 { pt3dadd( 2.19461, -188.165, -19.2125, 0.37 ) }
    dend_32 { pt3dadd( 2.07875, -189.198, -19.2429, 1.03 ) }
    dend_32 { pt3dadd( 1.93203, -190.234, -19.35, 1.47 ) }
    dend_32 { pt3dadd( 1.75125, -191.249, -19.5236, 1.62 ) }
    dend_32 { pt3dadd( 1.35449, -193.057, -19.9466, 0.88 ) }
    dend_32 { pt3dadd( 1.00898, -194.23, -20.319, 0.59 ) }
    dend_32 { pt3dadd( 0.668513, -195.12, -20.6751, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -0.0154273, -196.551, -21.3241, 0.29 ) }
    dend_32 { pt3dadd( -0.253008, -196.973, -21.5114, 0.29 ) }
    dend_32 { pt3dadd( -0.641811, -197.577, -21.7566, 0.29 ) }
    dend_32 { pt3dadd( -1.38377, -198.701, -22.1293, 0.29 ) }
    dend_32 { pt3dadd( -2.12038, -199.763, -22.4788, 0.59 ) }
    dend_32 { pt3dadd( -2.88606, -200.888, -22.8273, 0.59 ) }
    dend_32 { pt3dadd( -3.36641, -201.586, -23.0355, 0.44 ) }
    dend_32 { pt3dadd( -3.96512, -202.421, -23.3, 0.44 ) }
    dend_32 { pt3dadd( -4.37015, -202.929, -23.5088, 0.29 ) }
    dend_32 { pt3dadd( -4.97125, -203.65, -23.8746, 1.4 ) }
    dend_32 { pt3dadd( -5.87289, -204.468, -24.4707, 1.62 ) }
    dend_32 { pt3dadd( -6.72227, -205.023, -25.0127, 1.4 ) }
    dend_32 { pt3dadd( -7.55725, -205.417, -25.513, 1.11 ) }
    dend_32 { pt3dadd( -8.95625, -205.938, -26.2905, 0.81 ) }
    dend_32 { pt3dadd( -9.73285, -206.204, -26.7153, 0.59 ) }
    dend_32 { pt3dadd( -10.5889, -206.527, -27.2134, 0.74 ) }
    dend_32 { pt3dadd( -11.411, -206.922, -27.7243, 0.81 ) }
    dend_32 { pt3dadd( -12.0518, -207.433, -28.1631, 0.52 ) }
    dend_32 { pt3dadd( -12.5239, -207.955, -28.5244, 0.52 ) }
    dend_32 { pt3dadd( -12.9539, -208.541, -28.8488, 0.74 ) }
    dend_32 { pt3dadd( -13.5449, -209.374, -29.3284, 0.74 ) }
    dend_32 { pt3dadd( -13.853, -209.893, -29.5932, 0.74 ) }
    dend_32 { pt3dadd( -14.167, -210.479, -29.9054, 0.52 ) }
    dend_32 { pt3dadd( -14.6278, -211.405, -30.3466, 0.52 ) }
    dend_32 { pt3dadd( -14.8778, -211.913, -30.5702, 0.52 ) }
    dend_32 { pt3dadd( -15.3493, -212.914, -30.9416, 1.69 ) }
    dend_32 { pt3dadd( -15.6315, -213.578, -31.1338, 2.14 ) }
    dend_32 { pt3dadd( -16.138, -214.984, -31.4514, 1.55 ) }
    dend_32 { pt3dadd( -16.5976, -216.463, -31.7083, 0.29 ) }
    dend_32 { pt3dadd( -16.837, -217.328, -31.8241, 0.29 ) }
    dend_32 { pt3dadd( -17.1455, -218.52, -31.9481, 0.44 ) }
    dend_32 { pt3dadd( -17.4294, -219.657, -32.0236, 0.59 ) }
    dend_32 { pt3dadd( -17.678, -220.667, -32.0646, 0.59 ) }
    dend_32 { pt3dadd( -17.9258, -221.698, -32.0646, 0.29 ) }
    dend_32 { pt3dadd( -18.0605, -222.252, -32.0656, 0.29 ) }
    dend_32 { pt3dadd( -18.2457, -223.025, -32.0673, 0.96 ) }
    dend_32 { pt3dadd( -18.3961, -223.703, -32.0704, 1.03 ) }
    dend_32 { pt3dadd( -18.579, -224.646, -32.0833, 0.52 ) }
    dend_32 { pt3dadd( -18.7746, -225.875, -32.1124, 0.29 ) }
    dend_32 { pt3dadd( -18.8635, -226.574, -32.1323, 0.81 ) }
    dend_32 { pt3dadd( -18.9495, -227.386, -32.1547, 0.96 ) }
    dend_32 { pt3dadd( -19.0096, -228.011, -32.1738, 0.96 ) }
    dend_32 { pt3dadd( -19.1132, -229.109, -32.2102, 0.29 ) }
    dend_32 { pt3dadd( -19.2532, -230.361, -32.2467, 0.29 ) }
    dend_32 { pt3dadd( -19.4225, -231.67, -32.3208, 1.47 ) }
    dend_32 { pt3dadd( -19.5455, -232.586, -32.3914, 1.92 ) }
    dend_32 { pt3dadd( -19.6012, -233.032, -32.4316, 1.92 ) }
    dend_32 { pt3dadd( -19.7351, -234.14, -32.5243, 1.33 ) }
    dend_32 { pt3dadd( -19.87, -235.373, -32.635, 0.29 ) }
    dend_32 { pt3dadd( -19.9998, -236.629, -32.7591, 0.29 ) }
    dend_32 { pt3dadd( -20.094, -237.632, -32.8732, 0.29 ) }
    dend_32 { pt3dadd( -20.2902, -239.811, -33.1414, 0.29 ) }
    dend_32 { pt3dadd( -20.4084, -241.294, -33.3156, 1.4 ) }
    dend_32 { pt3dadd( -20.4678, -242.198, -33.4147, 2.14 ) }
    dend_32 { pt3dadd( -20.4886, -242.592, -33.4548, 2.28 ) }
    dend_32 { pt3dadd( -20.5128, -243.237, -33.5071, 2.28 ) }
    dend_32 { pt3dadd( -20.5393, -243.903, -33.5397, 1.92 ) }
    dend_32 { pt3dadd( -20.5837, -244.871, -33.5052, 0.88 ) }
    dend_32 { pt3dadd( -20.6501, -246.351, -33.3599, 0.29 ) }
    dend_32 { pt3dadd( -20.6865, -247.256, -33.2219, 0.29 ) }
    dend_32 { pt3dadd( -20.721, -248.27, -33.0336, 0.29 ) }
    dend_32 { pt3dadd( -20.77, -249.858, -32.7026, 0.29 ) }
    dend_32 { pt3dadd( -20.8126, -251.484, -32.3622, 0.96 ) }
    dend_32 { pt3dadd( -20.8337, -252.573, -32.1469, 1.62 ) }
    dend_32 { pt3dadd( -20.8429, -253.189, -32.0299, 1.62 ) }
    dend_32 { pt3dadd( -20.8525, -253.769, -31.9334, 1.62 ) }
    dend_32 { pt3dadd( -20.8825, -255.018, -31.7789, 1.11 ) }
    dend_32 { pt3dadd( -20.9328, -256.547, -31.7389, 0.29 ) }
    dend_32 { pt3dadd( -20.9933, -257.684, -31.7866, 0.29 ) }
    dend_32 { pt3dadd( -21.0556, -258.585, -31.8514, 0.59 ) }
    dend_32 { pt3dadd( -21.0966, -259.032, -31.893, 0.66 ) }
    dend_32 { pt3dadd( -21.1578, -259.572, -31.9495, 0.66 ) }
    dend_32 { pt3dadd( -21.3632, -261.057, -32.1124, 0.29 ) }
    dend_32 { pt3dadd( -21.6623, -262.777, -32.3342, 0.29 ) }
    dend_32 { pt3dadd( -21.9355, -264.109, -32.5163, 0.96 ) }
    dend_32 { pt3dadd( -22.1939, -265.158, -32.6527, 1.4 ) }
    dend_32 { pt3dadd( -22.407, -265.944, -32.7421, 1.4 ) }
    dend_32 { pt3dadd( -22.637, -266.757, -32.8189, 1.4 ) }
    dend_32 { pt3dadd( -22.9503, -267.832, -32.8914, 0.88 ) }
    dend_32 { pt3dadd( -23.339, -269.148, -32.9704, 0.29 ) }
    dend_32 { pt3dadd( -23.6876, -270.35, -33.0244, 0.29 ) }
    dend_32 { pt3dadd( -24.0543, -271.565, -33.0679, 0.44 ) }
    dend_32 { pt3dadd( -24.3039, -272.334, -33.0826, 0.66 ) }
    dend_32 { pt3dadd( -24.5155, -272.953, -33.0779, 0.66 ) }
    dend_32 { pt3dadd( -24.8958, -274.055, -33.0217, 0.29 ) }
    dend_32 { pt3dadd( -25.1205, -274.717, -32.9827, 0.29 ) }
    dend_32 { pt3dadd( -25.4138, -275.562, -32.9701, 0.29 ) }
    dend_32 { pt3dadd( -25.8461, -276.718, -33.0311, 0.29 ) }
    dend_32 { pt3dadd( -26.1102, -277.377, -33.1117, 0.52 ) }
    dend_32 { pt3dadd( -26.4722, -278.29, -33.2745, 0.66 ) }
    dend_32 { pt3dadd( -26.7628, -279.201, -33.4247, 0.66 ) }
    dend_32 { pt3dadd( -27.0798, -280.618, -33.6472, 1.4 ) }
    dend_32 { pt3dadd( -27.2169, -281.86, -33.8534, 2.28 ) }
    dend_32 { pt3dadd( -27.2379, -283.097, -34.0712, 2.5 ) }
    dend_32 { pt3dadd( -27.1813, -283.792, -34.1794, 2.5 ) }
    dend_32 { pt3dadd( -26.684, -286.225, -34.4908, 0.22 ) }
    dend_32 { pt3dadd( -26.3662, -287.207, -34.5732, 0.22 ) }
    dend_32 { pt3dadd( -25.7961, -288.453, -34.6182, 0.37 ) }
    dend_32 { pt3dadd( -25.3615, -289.19, -34.6112, 0.44 ) }
    dend_32 { pt3dadd( -24.5472, -290.275, -34.6967, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -23.6556, -291.272, -34.9419, 0.88 ) }
    dend_32 { pt3dadd( -23.1474, -291.737, -35.2257, 1.4 ) }
    dend_32 { pt3dadd( -22.768, -292.067, -35.5224, 1.4 ) }
    dend_32 { pt3dadd( -22.2782, -292.538, -36.0304, 1.11 ) }
    dend_32 { pt3dadd( -20.8236, -294.155, -37.9632, 0.29 ) }
    dend_32 { pt3dadd( -20.3857, -294.739, -38.6815, 0.29 ) }
    dend_32 { pt3dadd( -19.7523, -295.761, -39.9025, 0.81 ) }
    dend_32 { pt3dadd( -19.4558, -296.431, -40.5735, 0.81 ) }
    dend_32 { pt3dadd( -19.0139, -297.86, -41.7611, 0.22 ) }
    dend_32 { pt3dadd( -18.8875, -298.462, -42.1696, 0.22 ) }
    dend_32 { pt3dadd( -18.7643, -299.398, -42.6241, 0.44 ) }
    dend_32 { pt3dadd( -18.7168, -299.927, -42.8342, 0.59 ) }
    dend_32 { pt3dadd( -18.5822, -302.151, -43.5467, 0.22 ) }
    dend_32 { pt3dadd( -18.5503, -302.929, -43.7809, 0.74 ) }
    dend_32 { pt3dadd( -18.5327, -303.62, -43.9749, 1.03 ) }
    dend_32 { pt3dadd( -18.5038, -304.36, -44.1676, 1.03 ) }
    dend_32 { pt3dadd( -18.4713, -305.084, -44.344, 0.74 ) }
    dend_32 { pt3dadd( -18.4359, -305.757, -44.5056, 0.37 ) }
    dend_32 { pt3dadd( -18.3253, -307.467, -44.925, 0.22 ) }
    dend_32 { pt3dadd( -18.2335, -309.167, -45.3475, 0.22 ) }
    dend_32 { pt3dadd( -18.1833, -310.448, -45.6576, 0.88 ) }
    dend_32 { pt3dadd( -18.1571, -311.393, -45.8839, 1.62 ) }
    dend_32 { pt3dadd( -18.1501, -311.914, -46.0074, 1.84 ) }
    dend_32 { pt3dadd( -18.1566, -312.541, -46.1521, 1.84 ) }
    dend_32 { pt3dadd( -18.2054, -313.833, -46.433, 0.52 ) }
    dend_32 { pt3dadd( -18.2957, -314.925, -46.6615, 0.22 ) }
    dend_32 { pt3dadd( -18.4117, -315.8, -46.8434, 0.22 ) }
    dend_32 { pt3dadd( -18.5454, -316.553, -46.9961, 0.37 ) }
    dend_32 { pt3dadd( -18.6099, -316.847, -47.0455, 0.37 ) }
    dend_32 { pt3dadd( -18.809, -317.572, -47.1609, 0.22 ) }
    dend_32 { pt3dadd( -18.9993, -318.161, -47.2479, 0.74 ) }
    dend_32 { pt3dadd( -19.2321, -318.831, -47.3498, 0.74 ) }
    dend_32 { pt3dadd( -19.455, -319.438, -47.4342, 0.59 ) }
    dend_32 { pt3dadd( -19.9661, -320.75, -47.5998, 0.22 ) }
    dend_32 { pt3dadd( -20.222, -321.357, -47.661, 0.22 ) }
    dend_32 { pt3dadd( -20.6007, -322.169, -47.6913, 0.59 ) }
    dend_32 { pt3dadd( -20.8983, -322.755, -47.6677, 0.59 ) }
    dend_32 { pt3dadd( -21.2108, -323.359, -47.5791, 0.29 ) }
    dend_32 { pt3dadd( -21.551, -323.976, -47.4497, 0.22 ) }
    dend_32 { pt3dadd( -22.0869, -324.828, -47.2806, 0.37 ) }
    dend_32 { pt3dadd( -22.8074, -325.849, -47.0839, 0.44 ) }
    dend_32 { pt3dadd( -23.4942, -326.571, -47.0073, 0.59 ) }
    dend_32 { pt3dadd( -24.4174, -327.303, -47.0317, 0.37 ) }
    dend_32 { pt3dadd( -25.0107, -327.62, -47.1177, 0.22 ) }
    dend_32 { pt3dadd( -26.5558, -328.102, -47.4982, 2.21 ) }
    dend_32 { pt3dadd( -27.1602, -328.148, -47.7048, 2.5 ) }
    dend_32 { pt3dadd( -29.569, -327.764, -48.6966, 0.22 ) }
    dend_32 { pt3dadd( -30.321, -327.507, -49.0399, 0.22 ) }
    dend_32 { pt3dadd( -31.3515, -326.947, -49.5957, 0.66 ) }
    dend_32 { pt3dadd( -31.8496, -326.59, -49.9003, 0.66 ) }
    dend_32 { pt3dadd( -32.5614, -325.98, -50.3743, 0.37 ) }
    dend_32 { pt3dadd( -33.5608, -325.082, -51.0992, 1.92 ) }
    dend_32 { pt3dadd( -33.9155, -324.764, -51.3676, 1.92 ) }
    dend_32 { pt3dadd( -35.7398, -323.407, -52.8183, 0.44 ) }
    dend_32 { pt3dadd( -36.5504, -322.92, -53.4717, 0.59 ) }
    dend_32 { pt3dadd( -37.0362, -322.708, -53.8285, 0.37 ) }
    dend_32 { pt3dadd( -37.783, -322.526, -54.2874, 0.37 ) }
    dend_32 { pt3dadd( -38.5531, -322.423, -54.7327, 0.22 ) }
    dend_32 { pt3dadd( -40.3805, -322.362, -55.6348, 0.29 ) }
    dend_32 { pt3dadd( -41.0099, -322.441, -55.8478, 0.22 ) }
    dend_32 { pt3dadd( -42.0358, -322.622, -56.1275, 0.22 ) }
    dend_32 { pt3dadd( -43.4485, -322.865, -56.4709, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.23079, -73.8707, -9.41864, 0.74 ) }
    dend_31 { pt3dadd( -10.4344, -74.6605, -9.45256, 0.74 ) }
    dend_31 { pt3dadd( -10.911, -74.9415, -9.46607, 0.74 ) }
    dend_31 { pt3dadd( -11.5985, -75.2916, -9.50528, 0.74 ) }
    dend_31 { pt3dadd( -12.079, -75.4947, -9.54488, 0.52 ) }
    dend_31 { pt3dadd( -12.5774, -75.6368, -9.61333, 0.52 ) }
    dend_31 { pt3dadd( -13.0542, -75.7261, -9.70255, 0.88 ) }
    dend_31 { pt3dadd( -13.4512, -75.6891, -9.84512, 0.88 ) }
    dend_31 { pt3dadd( -14.0816, -75.5219, -10.1467, 0.59 ) }
    dend_31 { pt3dadd( -14.4732, -75.3822, -10.3632, 0.37 ) }
    dend_31 { pt3dadd( -15.0745, -75.1876, -10.7358, 0.37 ) }
    dend_31 { pt3dadd( -15.4375, -75.1139, -10.9967, 1.11 ) }
    dend_31 { pt3dadd( -15.7413, -75.1274, -11.2429, 1.47 ) }
    dend_31 { pt3dadd( -16.0357, -75.1966, -11.4825, 1.47 ) }
    dend_31 { pt3dadd( -16.2519, -75.2702, -11.6476, 1.47 ) }
    dend_31 { pt3dadd( -16.7493, -75.4439, -12.0086, 0.96 ) }
    dend_31 { pt3dadd( -17.1948, -75.5639, -12.3103, 0.59 ) }
    dend_31 { pt3dadd( -17.6073, -75.6255, -12.5519, 0.59 ) }
    dend_31 { pt3dadd( -18.0391, -75.6543, -12.7503, 0.59 ) }
    dend_31 { pt3dadd( -18.4964, -75.6817, -12.9431, 0.81 ) }
    dend_31 { pt3dadd( -18.9324, -75.7088, -13.1147, 0.81 ) }
    dend_31 { pt3dadd( -19.2752, -75.7291, -13.2247, 0.81 ) }
    dend_31 { pt3dadd( -19.6827, -75.7687, -13.3412, 0.81 ) }
    dend_31 { pt3dadd( -20.1227, -75.9586, -13.5317, 0.22 ) }
    dend_31 { pt3dadd( -20.3992, -76.4116, -13.7884, 0.22 ) }
    dend_31 { pt3dadd( -20.5679, -76.776, -14.0026, 0.66 ) }
    dend_31 { pt3dadd( -20.656, -76.9935, -14.1369, 0.88 ) }
    dend_31 { pt3dadd( -20.7805, -77.3094, -14.3477, 0.88 ) }
    dend_31 { pt3dadd( -20.9571, -77.6769, -14.6847, 0.44 ) }
    dend_31 { pt3dadd( -21.2291, -78.0356, -15.1464, 1.4 ) }
    dend_31 { pt3dadd( -21.4918, -78.2239, -15.5442, 2.14 ) }
    dend_31 { pt3dadd( -21.6102, -78.2687, -15.7199, 2.58 ) }
    dend_31 { pt3dadd( -21.8619, -78.2973, -16.0744, 2.36 ) }
    dend_31 { pt3dadd( -22.5463, -78.2719, -17.0314, 1.69 ) }
    dend_31 { pt3dadd( -22.9091, -78.2244, -17.5208, 0.37 ) }
    dend_31 { pt3dadd( -23.3618, -78.1386, -18.0638, 0.37 ) }
    dend_31 { pt3dadd( -23.7385, -78.064, -18.4711, 0.37 ) }
    dend_31 { pt3dadd( -24.5113, -77.9447, -19.2281, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -24.8344, -77.9164, -19.5204, 2.14 ) }
    dend_31 { pt3dadd( -25.162, -77.922, -19.7921, 2.5 ) }
    dend_31 { pt3dadd( -26.1258, -78.0524, -20.6158, 0.44 ) }
    dend_31 { pt3dadd( -26.4249, -78.1251, -20.8783, 0.44 ) }
    dend_31 { pt3dadd( -26.879, -78.2493, -21.3053, 0.44 ) }
    dend_31 { pt3dadd( -27.2874, -78.3473, -21.7216, 0.44 ) }
    dend_31 { pt3dadd( -27.7038, -78.4139, -22.166, 1.4 ) }
    dend_31 { pt3dadd( -28.1547, -78.4638, -22.669, 2.06 ) }
    dend_31 { pt3dadd( -28.552, -78.5021, -23.1528, 2.06 ) }
    dend_31 { pt3dadd( -29.0327, -78.5137, -23.7713, 0.66 ) }
    dend_31 { pt3dadd( -29.4025, -78.5062, -24.2955, 0.81 ) }
    dend_31 { pt3dadd( -29.7909, -78.4966, -24.9048, 0.52 ) }
    dend_31 { pt3dadd( -30.0919, -78.514, -25.4802, 1.77 ) }
    dend_31 { pt3dadd( -30.2778, -78.5604, -25.9374, 2.28 ) }
    dend_31 { pt3dadd( -30.7368, -78.8496, -27.4939, 1.33 ) }
    dend_31 { pt3dadd( -30.8547, -79.0233, -28.1083, 1.77 ) }
    dend_31 { pt3dadd( -30.9043, -79.1496, -28.5024, 1.77 ) }
    dend_31 { pt3dadd( -30.9748, -79.4058, -29.2623, 0.74 ) }
    dend_31 { pt3dadd( -31.0216, -79.6153, -29.8665, 0.52 ) }
    dend_31 { pt3dadd( -31.1027, -79.9507, -30.7417, 0.52 ) }
    dend_31 { pt3dadd( -31.1916, -80.3534, -31.6249, 0.88 ) }
    dend_31 { pt3dadd( -31.3249, -80.7407, -32.432, 1.47 ) }
    dend_31 { pt3dadd( -31.4953, -81.1251, -33.1882, 0.22 ) }
    dend_31 { pt3dadd( -31.5956, -81.3251, -33.5511, 0.22 ) }
    dend_31 { pt3dadd( -31.7341, -81.5989, -33.9855, 0.81 ) }
    dend_31 { pt3dadd( -31.8737, -81.8983, -34.3784, 0.96 ) }
    dend_31 { pt3dadd( -32.0538, -82.2991, -34.8355, 1.55 ) }
    dend_31 { pt3dadd( -32.2239, -82.7008, -35.2243, 1.55 ) }
    dend_31 { pt3dadd( -32.4107, -83.1388, -35.6287, 0.37 ) }
    dend_31 { pt3dadd( -32.5456, -83.4497, -35.9221, 0.74 ) }
    dend_31 { pt3dadd( -32.7195, -83.8332, -36.3116, 0.81 ) }
    dend_31 { pt3dadd( -32.9346, -84.3371, -36.8505, 0.29 ) }
    dend_31 { pt3dadd( -33.0218, -84.5795, -37.1096, 0.96 ) }
    dend_31 { pt3dadd( -33.1273, -84.9352, -37.4835, 1.33 ) }
    dend_31 { pt3dadd( -33.2352, -85.4348, -38.0024, 0.74 ) }
    dend_31 { pt3dadd( -33.2848, -85.8526, -38.4204, 0.59 ) }
    dend_31 { pt3dadd( -33.291, -86.5153, -39.0438, 0.29 ) }
    dend_31 { pt3dadd( -33.2396, -86.946, -39.3997, 0.29 ) }
    dend_31 { pt3dadd( -33.147, -87.3446, -39.7061, 0.29 ) }
    dend_31 { pt3dadd( -33.0412, -87.6516, -39.9093, 1.18 ) }
    dend_31 { pt3dadd( -32.9083, -87.9402, -40.0822, 1.69 ) }
    dend_31 { pt3dadd( -32.6699, -88.3598, -40.3081, 1.33 ) }
    dend_31 { pt3dadd( -32.2918, -88.9501, -40.6161, 0.22 ) }
    dend_31 { pt3dadd( -32.1144, -89.22, -40.7615, 0.22 ) }
    dend_31 { pt3dadd( -31.9011, -89.5696, -40.952, 0.96 ) }
    dend_31 { pt3dadd( -31.7697, -89.8167, -41.0872, 1.11 ) }
    dend_31 { pt3dadd( -31.5472, -90.2909, -41.3412, 0.52 ) }
    dend_31 { pt3dadd( -31.2305, -91.056, -41.7394, 0.22 ) }
    dend_31 { pt3dadd( -31.095, -91.4195, -41.926, 0.22 ) }
    dend_31 { pt3dadd( -30.9627, -91.8177, -42.1317, 0.88 ) }
    dend_31 { pt3dadd( -30.8757, -92.1078, -42.2963, 1.03 ) }
    dend_31 { pt3dadd( -30.7358, -92.6087, -42.6059, 0.22 ) }
    dend_31 { pt3dadd( -30.6705, -92.8394, -42.7563, 0.22 ) }
    dend_31 { pt3dadd( -30.5666, -93.1759, -42.9835, 0.66 ) }
    dend_31 { pt3dadd( -30.4412, -93.5503, -43.2338, 0.74 ) }
    dend_31 { pt3dadd( -30.1335, -94.4206, -43.7915, 0.22 ) }
    dend_31 { pt3dadd( -29.9187, -95.0552, -44.154, 0.22 ) }
    dend_31 { pt3dadd( -29.6951, -95.8644, -44.5611, 0.96 ) }
    dend_31 { pt3dadd( -29.627, -96.1715, -44.6979, 1.25 ) }
    dend_31 { pt3dadd( -29.5736, -96.5842, -44.8515, 1.25 ) }
    dend_31 { pt3dadd( -29.5424, -97.1977, -45.0297, 0.66 ) }
    dend_31 { pt3dadd( -29.5744, -97.9549, -45.2032, 0.15 ) }
    dend_31 { pt3dadd( -29.681, -98.6027, -45.341, 0.37 ) }
    dend_31 { pt3dadd( -29.7623, -98.9039, -45.4125, 0.37 ) }
    dend_31 { pt3dadd( -30.1366, -100.001, -45.7069, 0.22 ) }
    dend_31 { pt3dadd( -30.2065, -100.17, -45.762, 0.74 ) }
    dend_31 { pt3dadd( -30.3717, -100.53, -45.9004, 0.88 ) }
    dend_31 { pt3dadd( -30.9334, -101.67, -46.3848, 0.22 ) }
    dend_31 { pt3dadd( -31.1504, -102.099, -46.5696, 0.74 ) }
    dend_31 { pt3dadd( -31.3675, -102.514, -46.7464, 0.74 ) }
    dend_31 { pt3dadd( -31.8427, -103.417, -47.1385, 0.22 ) }
    dend_31 { pt3dadd( -32.239, -104.175, -47.4569, 0.22 ) }
    dend_31 { pt3dadd( -32.6846, -105.048, -47.776, 0.22 ) }
    dend_31 { pt3dadd( -33.0886, -105.876, -48.0245, 0.22 ) }
    dend_31 { pt3dadd( -33.3013, -106.328, -48.1307, 0.88 ) }
    dend_31 { pt3dadd( -33.461, -106.686, -48.1932, 1.11 ) }
    dend_31 { pt3dadd( -33.6045, -107.052, -48.2283, 1.11 ) }
    dend_31 { pt3dadd( -33.9114, -107.948, -48.2665, 0.15 ) }
    dend_31 { pt3dadd( -34.1212, -108.676, -48.2779, 0.15 ) }
    dend_31 { pt3dadd( -34.2242, -109.08, -48.2778, 0.81 ) }
    dend_31 { pt3dadd( -34.3067, -109.433, -48.2755, 0.96 ) }
    dend_31 { pt3dadd( -34.5799, -110.754, -48.4204, 0.22 ) }
    dend_31 { pt3dadd( -34.6965, -111.374, -48.5047, 0.22 ) }
    dend_31 { pt3dadd( -34.8118, -112.059, -48.6409, 0.22 ) }
    dend_31 { pt3dadd( -34.854, -112.334, -48.7094, 1.18 ) }
    dend_31 { pt3dadd( -34.8913, -112.596, -48.7924, 1.18 ) }
    dend_31 { pt3dadd( -35.1567, -114.522, -49.6885, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 24.6093, 146.897, -25.9606, 0.37 ) }
    dend_26 { pt3dadd( 24.8967, 146.43, -25.6353, 0.37 ) }
    dend_26 { pt3dadd( 25.1331, 146.081, -25.4001, 0.52 ) }
    dend_26 { pt3dadd( 25.4695, 145.608, -25.0821, 0.74 ) }
    dend_26 { pt3dadd( 25.7435, 145.234, -24.8383, 1.11 ) }
    dend_26 { pt3dadd( 25.9041, 145.023, -24.6981, 1.11 ) }
    dend_26 { pt3dadd( 26.1369, 144.718, -24.4922, 0.81 ) }
    dend_26 { pt3dadd( 26.6658, 144.061, -23.9891, 0.22 ) }
    dend_26 { pt3dadd( 26.9195, 143.739, -23.7462, 0.22 ) }
    dend_26 { pt3dadd( 27.079, 143.522, -23.6021, 0.66 ) }
    dend_26 { pt3dadd( 27.2411, 143.279, -23.4562, 0.66 ) }
    dend_26 { pt3dadd( 27.3972, 143.025, -23.3152, 0.66 ) }
    dend_26 { pt3dadd( 27.6839, 142.516, -23.036, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 27.941, 142.01, -22.7637, 0.22 ) }
    dend_26 { pt3dadd( 28.2049, 141.446, -22.4788, 0.22 ) }
    dend_26 { pt3dadd( 28.324, 141.172, -22.3478, 0.44 ) }
    dend_26 { pt3dadd( 28.4004, 140.982, -22.2725, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 24.6093, 146.897, -25.9606, 0.22 ) }
    dend_25 { pt3dadd( 26.35, 146.912, -26.5138, 0.22 ) }
    dend_25 { pt3dadd( 26.7447, 146.942, -26.6549, 0.44 ) }
    dend_25 { pt3dadd( 28.556, 147.186, -27.3125, 0.22 ) }
    dend_25 { pt3dadd( 29.3283, 147.317, -27.617, 0.59 ) }
    dend_25 { pt3dadd( 29.9113, 147.43, -27.8784, 0.59 ) }
    dend_25 { pt3dadd( 32.4118, 147.911, -28.9994, 0.22 ) }
    dend_25 { pt3dadd( 35.2781, 148.518, -30.3627, 0.22 ) }
    dend_25 { pt3dadd( 36.2976, 148.766, -30.872, 0.66 ) }
    dend_25 { pt3dadd( 37.0867, 149.0, -31.3008, 0.81 ) }
    dend_25 { pt3dadd( 38.2689, 149.382, -31.9834, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 19.2655, 220.991, 15.2233, 0.59 ) }
    dend_19 { pt3dadd( 20.4718, 222.057, 14.6404, 0.59 ) }
    dend_19 { pt3dadd( 20.8667, 222.416, 14.4667, 0.44 ) }
    dend_19 { pt3dadd( 21.6801, 223.203, 14.0863, 0.22 ) }
    dend_19 { pt3dadd( 22.3772, 223.931, 13.7653, 0.81 ) }
    dend_19 { pt3dadd( 22.7412, 224.333, 13.584, 0.96 ) }
    dend_19 { pt3dadd( 22.9074, 224.523, 13.4951, 0.96 ) }
    dend_19 { pt3dadd( 23.413, 225.188, 13.2084, 0.22 ) }
    dend_19 { pt3dadd( 24.0915, 226.263, 12.7136, 0.22 ) }
    dend_19 { pt3dadd( 24.6113, 227.271, 12.2347, 1.11 ) }
    dend_19 { pt3dadd( 24.8549, 227.833, 11.9741, 1.47 ) }
    dend_19 { pt3dadd( 24.9482, 228.11, 11.8392, 1.47 ) }
    dend_19 { pt3dadd( 25.2388, 229.324, 11.2611, 0.22 ) }
    dend_19 { pt3dadd( 25.397, 230.436, 10.7382, 0.22 ) }
    dend_19 { pt3dadd( 25.441, 231.09, 10.4398, 0.66 ) }
    dend_19 { pt3dadd( 25.4474, 231.416, 10.2875, 0.66 ) }
    dend_19 { pt3dadd( 25.3926, 232.968, 9.59306, 0.22 ) }
    dend_19 { pt3dadd( 25.2794, 234.381, 8.9855, 0.22 ) }
    dend_19 { pt3dadd( 25.1749, 235.185, 8.64323, 0.22 ) }
    dend_19 { pt3dadd( 25.0255, 236.12, 8.2544, 1.47 ) }
    dend_19 { pt3dadd( 24.9187, 236.651, 8.04763, 1.47 ) }
    dend_19 { pt3dadd( 24.4862, 238.443, 7.43313, 0.22 ) }
    dend_19 { pt3dadd( 24.3182, 239.023, 7.25699, 0.81 ) }
    dend_19 { pt3dadd( 24.1497, 239.509, 7.12888, 0.81 ) }
    dend_19 { pt3dadd( 23.6782, 240.692, 6.87518, 0.22 ) }
    dend_19 { pt3dadd( 23.2615, 241.627, 6.70513, 0.22 ) }
    dend_19 { pt3dadd( 22.7923, 242.597, 6.5529, 1.47 ) }
    dend_19 { pt3dadd( 22.5809, 242.999, 6.48174, 1.84 ) }
    dend_19 { pt3dadd( 21.7807, 244.458, 6.22109, 0.22 ) }
    dend_19 { pt3dadd( 21.1402, 245.574, 6.03067, 0.22 ) }
    dend_19 { pt3dadd( 20.8987, 245.961, 5.96361, 0.22 ) }
    dend_19 { pt3dadd( 20.2356, 246.973, 5.7519, 1.55 ) }
    dend_19 { pt3dadd( 19.8086, 247.584, 5.60382, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 19.2655, 220.991, 15.2233, 0.22 ) }
    dend_18 { pt3dadd( 20.3061, 224.278, 14.8512, 0.22 ) }
    dend_18 { pt3dadd( 20.9092, 226.062, 14.6646, 0.22 ) }
    dend_18 { pt3dadd( 21.392, 227.443, 14.5295, 0.96 ) }
    dend_18 { pt3dadd( 21.6052, 228.044, 14.4767, 1.18 ) }
    dend_18 { pt3dadd( 21.8284, 228.664, 14.4276, 1.18 ) }
    dend_18 { pt3dadd( 22.1905, 229.676, 14.3576, 0.22 ) }
    dend_18 { pt3dadd( 22.4671, 230.396, 14.3284, 0.44 ) }
    dend_18 { pt3dadd( 22.5974, 230.764, 14.3121, 0.44 ) }
    dend_18 { pt3dadd( 22.9417, 231.824, 14.2688, 0.22 ) }
    dend_18 { pt3dadd( 23.2324, 232.755, 14.2347, 0.44 ) }
    dend_18 { pt3dadd( 23.5492, 233.788, 14.1994, 0.44 ) }
    dend_18 { pt3dadd( 24.467, 236.946, 14.1146, 0.22 ) }
    dend_18 { pt3dadd( 25.2175, 239.608, 14.0248, 0.22 ) }
    dend_18 { pt3dadd( 25.4973, 240.609, 13.978, 0.66 ) }
    dend_18 { pt3dadd( 25.6494, 241.158, 13.9448, 0.74 ) }
    dend_18 { pt3dadd( 25.8917, 242.036, 13.8636, 0.22 ) }
    dend_18 { pt3dadd( 26.4949, 244.185, 13.6098, 0.22 ) }
    dend_18 { pt3dadd( 26.8446, 245.45, 13.441, 1.03 ) }
    dend_18 { pt3dadd( 27.0744, 246.29, 13.3183, 1.25 ) }
    dend_18 { pt3dadd( 27.2459, 246.924, 13.2207, 1.25 ) }
    dend_18 { pt3dadd( 27.8183, 249.063, 12.8784, 0.22 ) }
    dend_18 { pt3dadd( 28.7666, 252.58, 12.2965, 0.22 ) }
    dend_18 { pt3dadd( 29.0927, 253.765, 12.0993, 0.74 ) }
    dend_18 { pt3dadd( 29.2789, 254.447, 12.0045, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.29831, 61.1303, 8.46022, 0.37 ) }
    dend_16 { pt3dadd( 5.32123, 69.499, 12.3521, 0.37 ) }
    dend_16 { pt3dadd( 10.242, 77.3795, 16.3455, 0.37 ) }
    dend_16 { pt3dadd( 13.7416, 84.7575, 22.3636, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.29831, 61.1303, 8.46022, 0.22 ) }
    dend_15 { pt3dadd( 4.18329, 72.2563, 5.13101, 0.37 ) }
    dend_15 { pt3dadd( 6.75229, 82.8873, 0.135324, 0.37 ) }
    dend_15 { pt3dadd( 9.38034, 93.1478, -5.63707, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 100.8, -8.49594, 16.2979, 0.37 ) }
    dend_10 { pt3dadd( 109.262, -10.6106, 17.0053, 0.37 ) }
    dend_10 { pt3dadd( 117.97, -11.4033, 17.7188, 0.37 ) }
    dend_10 { pt3dadd( 126.607, -11.3251, 19.279, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 100.8, -8.49594, 16.2979, 0.22 ) }
    dend_9 { pt3dadd( 107.127, -10.1589, 16.8765, 0.37 ) }
    dend_9 { pt3dadd( 113.684, -10.706, 17.1578, 0.37 ) }
    dend_9 { pt3dadd( 120.169, -11.6227, 17.8078, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 52.8302, 4.78393, 8.52825, 0.52 ) }
    dend_5 { pt3dadd( 53.5765, 4.93933, 8.80248, 0.52 ) }
    dend_5 { pt3dadd( 53.864, 4.98907, 8.9182, 0.52 ) }
    dend_5 { pt3dadd( 54.1581, 5.0426, 9.06178, 0.52 ) }
    dend_5 { pt3dadd( 54.7181, 5.14701, 9.35751, 0.52 ) }
    dend_5 { pt3dadd( 55.0503, 5.20561, 9.54546, 0.88 ) }
    dend_5 { pt3dadd( 55.5577, 5.28404, 9.83404, 0.88 ) }
    dend_5 { pt3dadd( 55.9342, 5.33784, 10.0437, 0.88 ) }
    dend_5 { pt3dadd( 56.3262, 5.35369, 10.2936, 0.81 ) }
    dend_5 { pt3dadd( 56.5694, 5.30604, 10.468, 0.81 ) }
    dend_5 { pt3dadd( 56.9193, 5.14114, 10.7578, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 57.1886, 4.93636, 10.9993, 0.59 ) }
    dend_5 { pt3dadd( 57.4721, 4.65179, 11.2492, 0.59 ) }
    dend_5 { pt3dadd( 57.7529, 4.32901, 11.474, 0.74 ) }
    dend_5 { pt3dadd( 58.1858, 3.75855, 11.8127, 0.66 ) }
    dend_5 { pt3dadd( 58.3596, 3.50191, 11.9556, 0.66 ) }
    dend_5 { pt3dadd( 58.6161, 3.08098, 12.1819, 0.52 ) }
    dend_5 { pt3dadd( 58.7893, 2.78895, 12.3346, 0.52 ) }
    dend_5 { pt3dadd( 59.0162, 2.42201, 12.5196, 0.81 ) }
    dend_5 { pt3dadd( 59.2993, 1.96303, 12.7442, 0.81 ) }
    dend_5 { pt3dadd( 59.4829, 1.64904, 12.9037, 0.81 ) }
    dend_5 { pt3dadd( 59.6975, 1.23769, 13.1086, 0.81 ) }
    dend_5 { pt3dadd( 59.9427, 0.698203, 13.3782, 0.88 ) }
    dend_5 { pt3dadd( 60.1277, 0.225672, 13.6159, 1.11 ) }
    dend_5 { pt3dadd( 60.2368, -0.084537, 13.7692, 1.11 ) }
    dend_5 { pt3dadd( 60.425, -0.704073, 14.0764, 0.88 ) }
    dend_5 { pt3dadd( 60.5351, -1.18482, 14.3313, 0.96 ) }
    dend_5 { pt3dadd( 60.5876, -1.54544, 14.5447, 0.96 ) }
    dend_5 { pt3dadd( 60.6089, -1.83539, 14.7355, 0.96 ) }
    dend_5 { pt3dadd( 60.618, -2.09387, 14.9179, 0.66 ) }
    dend_5 { pt3dadd( 60.6294, -2.48999, 15.2315, 0.66 ) }
    dend_5 { pt3dadd( 60.6607, -2.99288, 15.6799, 0.81 ) }
    dend_5 { pt3dadd( 60.7259, -3.38285, 16.0614, 1.11 ) }
    dend_5 { pt3dadd( 60.8456, -3.81321, 16.5188, 0.96 ) }
    dend_5 { pt3dadd( 60.973, -4.12563, 16.8472, 0.81 ) }
    dend_5 { pt3dadd( 61.1944, -4.52989, 17.2657, 0.81 ) }
    dend_5 { pt3dadd( 61.5006, -4.96209, 17.6976, 0.59 ) }
    dend_5 { pt3dadd( 61.7839, -5.3007, 18.0148, 0.37 ) }
    dend_5 { pt3dadd( 62.0577, -5.60148, 18.2757, 0.37 ) }
    dend_5 { pt3dadd( 62.4724, -6.0504, 18.6329, 0.59 ) }
    dend_5 { pt3dadd( 62.7022, -6.31195, 18.8116, 0.88 ) }
    dend_5 { pt3dadd( 62.8297, -6.47073, 18.9023, 1.11 ) }
    dend_5 { pt3dadd( 62.9892, -6.69015, 19.0251, 1.11 ) }
    dend_5 { pt3dadd( 63.1948, -6.98995, 19.2051, 0.74 ) }
    dend_5 { pt3dadd( 63.3627, -7.22007, 19.3443, 0.74 ) }
    dend_5 { pt3dadd( 63.5275, -7.45684, 19.4815, 0.74 ) }
    dend_5 { pt3dadd( 63.7772, -7.84365, 19.6784, 0.74 ) }
    dend_5 { pt3dadd( 64.0298, -8.26339, 19.8625, 0.74 ) }
    dend_5 { pt3dadd( 64.2606, -8.64929, 20.021, 0.66 ) }
    dend_5 { pt3dadd( 64.4816, -9.01532, 20.1606, 0.66 ) }
    dend_5 { pt3dadd( 64.7771, -9.50322, 20.3317, 0.96 ) }
    dend_5 { pt3dadd( 65.1246, -10.1014, 20.5192, 1.4 ) }
    dend_5 { pt3dadd( 65.2983, -10.4337, 20.6076, 1.62 ) }
    dend_5 { pt3dadd( 65.4733, -10.805, 20.6913, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 52.8302, 4.78393, 8.52825, 0.88 ) }
    dend_4 { pt3dadd( 53.8888, 5.65672, 8.73523, 0.88 ) }
    dend_4 { pt3dadd( 54.8337, 6.35321, 8.96395, 0.88 ) }
    dend_4 { pt3dadd( 55.8918, 7.01, 9.25033, 0.88 ) }
    dend_4 { pt3dadd( 57.0361, 7.60296, 9.57075, 0.88 ) }
    dend_4 { pt3dadd( 58.3874, 8.20469, 9.97405, 0.74 ) }
    dend_4 { pt3dadd( 59.2409, 8.56005, 10.2439, 0.74 ) }
    dend_4 { pt3dadd( 60.4411, 8.98355, 10.6706, 0.88 ) }
    dend_4 { pt3dadd( 61.516, 9.29601, 11.0677, 0.88 ) }
    dend_4 { pt3dadd( 62.4052, 9.51487, 11.3884, 0.88 ) }
    dend_4 { pt3dadd( 63.2697, 9.71494, 11.6905, 0.66 ) }
    dend_4 { pt3dadd( 63.8802, 9.87976, 11.8859, 0.66 ) }
    dend_4 { pt3dadd( 64.7128, 10.1947, 12.0883, 0.88 ) }
    dend_4 { pt3dadd( 65.2193, 10.4494, 12.1763, 0.88 ) }
    dend_4 { pt3dadd( 65.7096, 10.739, 12.2377, 0.88 ) }
    dend_4 { pt3dadd( 66.2098, 11.0459, 12.2894, 0.88 ) }
    dend_4 { pt3dadd( 67.1402, 11.6022, 12.3882, 0.59 ) }
    dend_4 { pt3dadd( 67.7946, 11.981, 12.5009, 0.59 ) }
    dend_4 { pt3dadd( 68.2916, 12.2893, 12.6217, 0.81 ) }
    dend_4 { pt3dadd( 68.941, 12.742, 12.8136, 0.81 ) }
    dend_4 { pt3dadd( 69.4376, 13.1402, 12.9782, 0.81 ) }
    dend_4 { pt3dadd( 69.9987, 13.6296, 13.1758, 0.66 ) }
    dend_4 { pt3dadd( 70.803, 14.3577, 13.4712, 0.59 ) }
    dend_4 { pt3dadd( 71.6645, 15.2723, 13.7748, 0.59 ) }
    dend_4 { pt3dadd( 72.1353, 15.8407, 13.9158, 0.59 ) }
    dend_4 { pt3dadd( 72.6808, 16.5554, 14.0353, 0.44 ) }
    dend_4 { pt3dadd( 73.0276, 17.0069, 14.0791, 0.44 ) }
    dend_4 { pt3dadd( 73.4051, 17.4788, 14.0956, 0.44 ) }
    dend_4 { pt3dadd( 74.3509, 18.6061, 14.0881, 0.44 ) }
    dend_4 { pt3dadd( 75.0986, 19.4485, 14.079, 0.66 ) }
    dend_4 { pt3dadd( 75.7227, 20.1344, 14.0696, 0.66 ) }
    dend_4 { pt3dadd( 76.4948, 20.972, 14.0521, 0.74 ) }
    dend_4 { pt3dadd( 77.098, 21.6247, 14.0341, 0.96 ) }
    dend_4 { pt3dadd( 77.5613, 22.1094, 14.0205, 0.96 ) }
    dend_4 { pt3dadd( 78.2409, 22.7478, 14.0087, 0.66 ) }
    dend_4 { pt3dadd( 78.9052, 23.3414, 14.0015, 0.66 ) }
    dend_4 { pt3dadd( 79.9585, 24.2631, 13.9917, 0.59 ) }
    dend_4 { pt3dadd( 80.9322, 25.1446, 14.0022, 0.59 ) }
    dend_4 { pt3dadd( 81.5603, 25.7293, 14.0214, 0.81 ) }
    dend_4 { pt3dadd( 82.0363, 26.1885, 14.0429, 0.81 ) }
    dend_4 { pt3dadd( 82.8469, 26.9422, 14.0938, 0.52 ) }
    dend_4 { pt3dadd( 83.4705, 27.472, 14.1437, 0.52 ) }
    dend_4 { pt3dadd( 84.2943, 28.1281, 14.2279, 0.52 ) }
    dend_4 { pt3dadd( 84.9867, 28.6656, 14.3032, 0.52 ) }
    dend_4 { pt3dadd( 85.6502, 29.1681, 14.3734, 0.37 ) }
    dend_4 { pt3dadd( 86.833, 30.0388, 14.4927, 0.37 ) }
    dend_4 { pt3dadd( 87.6121, 30.5986, 14.5625, 0.59 ) }
    dend_4 { pt3dadd( 88.1092, 30.9285, 14.5998, 0.59 ) }
    dend_4 { pt3dadd( 89.1668, 31.5948, 14.6524, 0.74 ) }
    dend_4 { pt3dadd( 89.7192, 31.9467, 14.6786, 0.74 ) }
    dend_4 { pt3dadd( 90.1892, 32.2618, 14.7041, 0.74 ) }
    dend_4 { pt3dadd( 90.8614, 32.7777, 14.7491, 0.74 ) }
    dend_4 { pt3dadd( 91.3187, 33.1419, 14.7436, 0.44 ) }
    dend_4 { pt3dadd( 91.9826, 33.6323, 14.6582, 0.44 ) }
    dend_4 { pt3dadd( 92.5578, 34.0069, 14.5406, 0.81 ) }
    dend_4 { pt3dadd( 93.5271, 34.5726, 14.2967, 0.81 ) }
    dend_4 { pt3dadd( 94.2416, 34.9381, 14.0808, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 95.4892, 35.5269, 13.6755, 0.52 ) }
    dend_4 { pt3dadd( 96.4473, 35.9742, 13.3154, 0.44 ) }
    dend_4 { pt3dadd( 97.084, 36.2477, 13.0397, 0.44 ) }
    dend_4 { pt3dadd( 97.644, 36.4766, 12.7676, 0.44 ) }
    dend_4 { pt3dadd( 98.0845, 36.6406, 12.5273, 0.44 ) }
    dend_4 { pt3dadd( 98.8168, 36.8889, 12.144, 0.74 ) }
    dend_4 { pt3dadd( 99.437, 37.1224, 11.9407, 0.59 ) }
    dend_4 { pt3dadd( 99.8552, 37.3219, 11.8278, 0.59 ) }
    dend_4 { pt3dadd( 107.265, 43.7374, 13.6327, 0.59 ) }
    dend_4 { pt3dadd( 114.902, 49.9195, 15.3853, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -95.4361, -326.785, 20.1894, 0.52 ) }
    dend_39 { pt3dadd( -96.0734, -328.296, 20.2861, 0.52 ) }
    dend_39 { pt3dadd( -96.3367, -328.908, 20.3356, 0.29 ) }
    dend_39 { pt3dadd( -96.7028, -329.707, 20.4054, 0.44 ) }
    dend_39 { pt3dadd( -97.0502, -330.449, 20.4684, 0.44 ) }
    dend_39 { pt3dadd( -97.3277, -331.024, 20.5179, 0.29 ) }
    dend_39 { pt3dadd( -97.7559, -331.859, 20.587, 0.29 ) }
    dend_39 { pt3dadd( -98.1995, -332.652, 20.6574, 0.81 ) }
    dend_39 { pt3dadd( -98.5467, -333.258, 20.6886, 1.18 ) }
    dend_39 { pt3dadd( -98.7334, -333.589, 20.6956, 1.4 ) }
    dend_39 { pt3dadd( -99.0311, -334.137, 20.6961, 1.4 ) }
    dend_39 { pt3dadd( -99.2963, -334.665, 20.6854, 1.11 ) }
    dend_39 { pt3dadd( -99.8267, -335.808, 20.6496, 0.52 ) }
    dend_39 { pt3dadd( -100.186, -336.706, 20.6109, 0.44 ) }
    dend_39 { pt3dadd( -100.436, -337.429, 20.5744, 0.74 ) }
    dend_39 { pt3dadd( -100.72, -338.301, 20.5342, 0.81 ) }
    dend_39 { pt3dadd( -100.923, -338.958, 20.5021, 0.81 ) }
    dend_39 { pt3dadd( -101.12, -339.654, 20.4612, 0.74 ) }
    dend_39 { pt3dadd( -101.346, -340.581, 20.4365, 0.22 ) }
    dend_39 { pt3dadd( -101.442, -341.009, 20.429, 0.22 ) }
    dend_39 { pt3dadd( -101.597, -341.764, 20.4051, 0.22 ) }
    dend_39 { pt3dadd( -101.699, -342.419, 20.3908, 0.66 ) }
    dend_39 { pt3dadd( -101.773, -343.106, 20.3929, 0.81 ) }
    dend_39 { pt3dadd( -101.845, -344.214, 20.4197, 0.66 ) }
    dend_39 { pt3dadd( -101.857, -345.226, 20.4678, 0.22 ) }
    dend_39 { pt3dadd( -101.811, -346.132, 20.5229, 0.22 ) }
    dend_39 { pt3dadd( -101.735, -346.795, 20.5697, 0.22 ) }
    dend_39 { pt3dadd( -101.635, -347.44, 20.642, 0.96 ) }
    dend_39 { pt3dadd( -101.586, -347.772, 20.6887, 1.18 ) }
    dend_39 { pt3dadd( -101.517, -348.266, 20.7597, 1.18 ) }
    dend_39 { pt3dadd( -101.452, -348.674, 20.8419, 1.18 ) }
    dend_39 { pt3dadd( -101.36, -349.45, 20.9998, 0.74 ) }
    dend_39 { pt3dadd( -101.287, -350.623, 21.2288, 0.22 ) }
    dend_39 { pt3dadd( -101.28, -351.009, 21.3044, 0.22 ) }
    dend_39 { pt3dadd( -101.282, -351.459, 21.395, 0.44 ) }
    dend_39 { pt3dadd( -101.292, -351.847, 21.4662, 0.44 ) }
    dend_39 { pt3dadd( -101.319, -352.862, 21.6247, 0.22 ) }
    dend_39 { pt3dadd( -101.337, -353.498, 21.7002, 0.96 ) }
    dend_39 { pt3dadd( -101.343, -353.983, 21.7314, 1.18 ) }
    dend_39 { pt3dadd( -101.343, -354.447, 21.7517, 1.25 ) }
    dend_39 { pt3dadd( -101.343, -355.33, 21.7796, 0.96 ) }
    dend_39 { pt3dadd( -101.382, -356.597, 21.8206, 0.29 ) }
    dend_39 { pt3dadd( -101.442, -357.593, 21.8511, 0.22 ) }
    dend_39 { pt3dadd( -101.552, -358.715, 21.8804, 0.22 ) }
    dend_39 { pt3dadd( -101.632, -359.292, 21.8985, 0.81 ) }
    dend_39 { pt3dadd( -101.724, -359.761, 21.9176, 0.96 ) }
    dend_39 { pt3dadd( -102.139, -361.39, 22.0168, 0.22 ) }
    dend_39 { pt3dadd( -102.3, -361.899, 22.0591, 0.22 ) }
    dend_39 { pt3dadd( -102.579, -362.709, 22.1428, 0.59 ) }
    dend_39 { pt3dadd( -102.795, -363.302, 22.2154, 0.59 ) }
    dend_39 { pt3dadd( -103.107, -364.193, 22.3242, 0.52 ) }
    dend_39 { pt3dadd( -103.343, -364.927, 22.4124, 0.52 ) }
    dend_39 { pt3dadd( -103.627, -365.926, 22.5411, 0.52 ) }
    dend_39 { pt3dadd( -103.732, -366.319, 22.5952, 0.96 ) }
    dend_39 { pt3dadd( -103.9, -366.993, 22.6891, 0.96 ) }
    dend_39 { pt3dadd( -104.077, -367.752, 22.7956, 0.59 ) }
    dend_39 { pt3dadd( -104.359, -369.038, 23.0124, 0.22 ) }
    dend_39 { pt3dadd( -104.636, -370.366, 23.2395, 0.22 ) }
    dend_39 { pt3dadd( -104.762, -370.989, 23.35, 0.22 ) }
    dend_39 { pt3dadd( -104.881, -371.542, 23.456, 0.96 ) }
    dend_39 { pt3dadd( -104.962, -371.92, 23.5345, 1.18 ) }
    dend_39 { pt3dadd( -105.127, -372.673, 23.7123, 0.52 ) }
    dend_39 { pt3dadd( -105.974, -381.75, 22.9438, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -95.4361, -326.785, 20.1894, 0.29 ) }
    dend_36 { pt3dadd( -96.917, -326.299, 21.219, 0.29 ) }
    dend_36 { pt3dadd( -97.7204, -326.275, 21.732, 0.37 ) }
    dend_36 { pt3dadd( -98.0911, -326.371, 21.95, 0.37 ) }
    dend_36 { pt3dadd( -98.9308, -326.738, 22.4627, 0.37 ) }
    dend_36 { pt3dadd( -99.7758, -327.138, 22.8604, 0.52 ) }
    dend_36 { pt3dadd( -100.53, -327.5, 23.1624, 0.59 ) }
    dend_36 { pt3dadd( -101.578, -328.102, 23.4862, 0.59 ) }
    dend_36 { pt3dadd( -102.526, -328.667, 23.728, 0.37 ) }
    dend_36 { pt3dadd( -103.411, -329.198, 23.9188, 0.37 ) }
    dend_36 { pt3dadd( -105.006, -330.151, 24.1949, 0.37 ) }
    dend_36 { pt3dadd( -105.746, -330.548, 24.3086, 0.37 ) }
    dend_36 { pt3dadd( -106.433, -330.886, 24.4101, 0.29 ) }
    dend_36 { pt3dadd( -106.979, -331.133, 24.4974, 0.29 ) }
    dend_36 { pt3dadd( -107.591, -331.406, 24.6116, 0.81 ) }
    dend_36 { pt3dadd( -108.075, -331.646, 24.7205, 0.81 ) }
    dend_36 { pt3dadd( -108.707, -332.057, 24.9497, 0.81 ) }
    dend_36 { pt3dadd( -109.76, -332.863, 25.3697, 0.29 ) }
    dend_36 { pt3dadd( -110.253, -333.297, 25.5841, 0.66 ) }
    dend_36 { pt3dadd( -110.612, -333.65, 25.7623, 0.66 ) }
    dend_36 { pt3dadd( -110.939, -334.003, 25.9409, 0.66 ) }
    dend_36 { pt3dadd( -112.097, -335.353, 26.6192, 0.29 ) }
    dend_36 { pt3dadd( -112.612, -335.979, 26.9156, 0.44 ) }
    dend_36 { pt3dadd( -113.058, -336.52, 27.1701, 0.29 ) }
    dend_36 { pt3dadd( -113.598, -337.142, 27.4608, 0.74 ) }
    dend_36 { pt3dadd( -114.005, -337.561, 27.6479, 0.74 ) }
    dend_36 { pt3dadd( -114.694, -338.163, 27.9175, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -115.942, -339.076, 28.3288, 0.29 ) }
    dend_36 { pt3dadd( -116.694, -339.565, 28.552, 0.52 ) }
    dend_36 { pt3dadd( -117.214, -339.866, 28.6755, 0.52 ) }
    dend_36 { pt3dadd( -118.332, -340.444, 28.861, 0.29 ) }
    dend_36 { pt3dadd( -119.172, -340.831, 28.9794, 0.29 ) }
    dend_36 { pt3dadd( -119.687, -341.032, 29.0421, 0.59 ) }
    dend_36 { pt3dadd( -120.305, -341.239, 29.096, 0.59 ) }
    dend_36 { pt3dadd( -121.428, -341.594, 29.1683, 0.22 ) }
    dend_36 { pt3dadd( -122.055, -341.785, 29.2202, 0.29 ) }
    dend_36 { pt3dadd( -122.988, -342.081, 29.3288, 0.29 ) }
    dend_36 { pt3dadd( -123.427, -342.229, 29.383, 0.29 ) }
    dend_36 { pt3dadd( -124.548, -342.655, 29.5264, 0.37 ) }
    dend_36 { pt3dadd( -125.368, -343.074, 29.7026, 0.37 ) }
    dend_36 { pt3dadd( -126.178, -343.607, 29.9685, 0.52 ) }
    dend_36 { pt3dadd( -127.083, -344.343, 30.3337, 1.55 ) }
    dend_36 { pt3dadd( -127.615, -344.855, 30.5719, 1.92 ) }
    dend_36 { pt3dadd( -128.113, -345.393, 30.821, 1.92 ) }
    dend_36 { pt3dadd( -129.232, -346.737, 31.4703, 0.29 ) }
    dend_36 { pt3dadd( -129.956, -347.685, 31.9112, 0.29 ) }
    dend_36 { pt3dadd( -130.527, -348.506, 32.2861, 0.29 ) }
    dend_36 { pt3dadd( -130.975, -349.171, 32.5983, 0.74 ) }
    dend_36 { pt3dadd( -131.197, -349.504, 32.7548, 0.96 ) }
    dend_36 { pt3dadd( -131.397, -349.788, 32.8892, 1.11 ) }
    dend_36 { pt3dadd( -131.978, -350.626, 33.2719, 0.52 ) }
    dend_36 { pt3dadd( -132.328, -351.191, 33.5452, 0.29 ) }
    dend_36 { pt3dadd( -132.827, -352.01, 33.9795, 0.22 ) }
    dend_36 { pt3dadd( -133.166, -352.544, 34.2861, 0.44 ) }
    dend_36 { pt3dadd( -133.457, -352.98, 34.5529, 0.44 ) }
    dend_36 { pt3dadd( -134.257, -354.174, 35.3078, 0.22 ) }
    dend_36 { pt3dadd( -134.738, -354.884, 35.7771, 0.22 ) }
    dend_36 { pt3dadd( -135.203, -355.542, 36.2262, 1.25 ) }
    dend_36 { pt3dadd( -135.626, -356.138, 36.6529, 1.55 ) }
    dend_36 { pt3dadd( -135.831, -356.409, 36.8546, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 65.4733, -10.805, 20.6913, 0.74 ) }
    dend_7 { pt3dadd( 66.2792, -11.2702, 22.1536, 0.74 ) }
    dend_7 { pt3dadd( 66.5197, -11.4249, 22.5577, 0.74 ) }
    dend_7 { pt3dadd( 66.9442, -11.7359, 23.2087, 0.59 ) }
    dend_7 { pt3dadd( 67.4611, -12.1656, 23.9163, 0.59 ) }
    dend_7 { pt3dadd( 67.9548, -12.6195, 24.5297, 0.59 ) }
    dend_7 { pt3dadd( 68.2055, -12.8592, 24.8245, 0.59 ) }
    dend_7 { pt3dadd( 68.7146, -13.3967, 25.3528, 0.59 ) }
    dend_7 { pt3dadd( 69.1571, -13.8831, 25.7766, 0.81 ) }
    dend_7 { pt3dadd( 69.7461, -14.5233, 26.3347, 0.81 ) }
    dend_7 { pt3dadd( 70.236, -15.0295, 26.7898, 0.37 ) }
    dend_7 { pt3dadd( 70.7468, -15.5174, 27.262, 0.37 ) }
    dend_7 { pt3dadd( 71.3416, -16.078, 27.8218, 0.37 ) }
    dend_7 { pt3dadd( 71.9375, -16.6473, 28.4197, 0.37 ) }
    dend_7 { pt3dadd( 72.5015, -17.1617, 29.0124, 0.37 ) }
    dend_7 { pt3dadd( 73.3389, -17.888, 29.9364, 0.22 ) }
    dend_7 { pt3dadd( 74.226, -18.6321, 30.9421, 0.22 ) }
    dend_7 { pt3dadd( 78.9544, -24.3013, 35.9419, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 65.4733, -10.805, 20.6913, 0.37 ) }
    dend_6 { pt3dadd( 65.2331, -11.9372, 21.2251, 0.37 ) }
    dend_6 { pt3dadd( 65.1357, -12.6299, 21.6037, 0.37 ) }
    dend_6 { pt3dadd( 65.0864, -13.2664, 21.9781, 0.37 ) }
    dend_6 { pt3dadd( 65.0811, -13.8834, 22.4187, 0.37 ) }
    dend_6 { pt3dadd( 65.1048, -14.4058, 22.8172, 0.37 ) }
    dend_6 { pt3dadd( 65.1615, -15.0051, 23.3042, 0.29 ) }
    dend_6 { pt3dadd( 65.3233, -15.8722, 23.9894, 0.22 ) }
    dend_6 { pt3dadd( 65.5321, -16.8309, 24.688, 0.22 ) }
    dend_6 { pt3dadd( 65.8373, -18.0757, 25.519, 0.22 ) }
    dend_6 { pt3dadd( 65.9563, -18.5563, 25.8084, 1.18 ) }
    dend_6 { pt3dadd( 66.0357, -18.981, 26.0118, 1.4 ) }
    dend_6 { pt3dadd( 66.1095, -20.3908, 26.4844, 1.4 ) }
    dend_6 { pt3dadd( 65.9939, -21.6086, 26.739, 0.44 ) }
    dend_6 { pt3dadd( 65.9002, -22.0258, 26.8054, 0.44 ) }
    dend_6 { pt3dadd( 65.6926, -22.6587, 26.8863, 0.29 ) }
    dend_6 { pt3dadd( 65.2706, -23.6622, 27.0503, 0.29 ) }
    dend_6 { pt3dadd( 64.6748, -24.8912, 27.2787, 0.22 ) }
    dend_6 { pt3dadd( 64.1615, -25.7529, 27.5184, 0.22 ) }
    dend_6 { pt3dadd( 63.8088, -26.2515, 27.666, 1.03 ) }
    dend_6 { pt3dadd( 63.6214, -26.494, 27.7491, 1.33 ) }
    dend_6 { pt3dadd( 63.3489, -26.8144, 27.8812, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -135.831, -356.409, 36.8546, 0.29 ) }
    dend_38 { pt3dadd( -136.48, -355.673, 37.5628, 0.29 ) }
    dend_38 { pt3dadd( -136.627, -355.509, 37.7151, 0.52 ) }
    dend_38 { pt3dadd( -136.859, -355.25, 37.9437, 0.59 ) }
    dend_38 { pt3dadd( -138.245, -353.76, 39.1545, 0.22 ) }
    dend_38 { pt3dadd( -138.644, -353.345, 39.4798, 0.22 ) }
    dend_38 { pt3dadd( -139.204, -352.781, 39.9118, 0.66 ) }
    dend_38 { pt3dadd( -139.518, -352.473, 40.1211, 0.66 ) }
    dend_38 { pt3dadd( -140.878, -351.207, 40.96, 0.22 ) }
    dend_38 { pt3dadd( -141.45, -350.706, 41.2885, 0.22 ) }
    dend_38 { pt3dadd( -141.98, -350.285, 41.5792, 0.52 ) }
    dend_38 { pt3dadd( -142.358, -350.008, 41.7835, 0.66 ) }
    dend_38 { pt3dadd( -143.396, -349.304, 42.3392, 0.22 ) }
    dend_38 { pt3dadd( -145.454, -347.941, 43.4421, 0.22 ) }
    dend_38 { pt3dadd( -146.78, -347.106, 44.1548, 0.22 ) }
    dend_38 { pt3dadd( -147.991, -346.346, 44.8408, 1.18 ) }
    dend_38 { pt3dadd( -148.331, -346.137, 45.0326, 1.4 ) }
    dend_38 { pt3dadd( -148.852, -345.826, 45.3301, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -135.831, -356.409, 36.8546, 0.22 ) }
    dend_37 { pt3dadd( -136.538, -357.638, 37.2014, 0.22 ) }
    dend_37 { pt3dadd( -137.075, -358.652, 37.5307, 0.22 ) }
    dend_37 { pt3dadd( -137.298, -359.109, 37.6801, 0.44 ) }
    dend_37 { pt3dadd( -137.392, -359.31, 37.7459, 0.44 ) }
    dend_37 { pt3dadd( -138.253, -361.234, 38.3573, 0.22 ) }
    dend_37 { pt3dadd( -138.656, -362.135, 38.6435, 0.44 ) }
    dend_37 { pt3dadd( -138.993, -362.892, 38.894, 0.22 ) }
    dend_37 { pt3dadd( -139.195, -363.404, 39.0623, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -139.361, -363.848, 39.211, 0.66 ) }
    dend_37 { pt3dadd( -139.476, -364.19, 39.3272, 0.44 ) }
    dend_37 { pt3dadd( -141.455, -372.115, 41.9163, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 5
    dend_42 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 9
    dend_1 nseg = 3
    dend_45 nseg = 5
    dend_41 nseg = 9
    dend_34 nseg = 3
    dend_29 nseg = 7
    dend_17 nseg = 9
    dend_8 nseg = 3
    dend_47 nseg = 9
    dend_40 nseg = 7
    dend_35 nseg = 9
    dend_32 nseg = 15
    dend_31 nseg = 3
    dend_4 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_ChC_0f9f727230_0_0


