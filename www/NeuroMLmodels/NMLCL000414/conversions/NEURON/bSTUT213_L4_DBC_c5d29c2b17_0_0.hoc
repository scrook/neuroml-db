// Cell: bSTUT213_L4_DBC_c5d29c2b17_0_0
/*
{
  "id" : "bSTUT213_L4_DBC_c5d29c2b17_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.60907, -17.6726, 3.85", "4.01134, -5.98102, -16.8327, 3.85", "4.98262, -5.32869, -15.9603, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -13.0871, -2.03262, 2.64", "-0.521983, -14.32, -1.1479, 1.92", "-0.420238, -15.2466, -0.562699, 1.8", "-0.321506, -15.9864, -0.179051, 1.92", "-0.0185512, -17.9587, 0.650584, 1.32", "0.145137, -18.8517, 0.954549, 1.56", "0.335798, -19.7358, 1.19335, 1.8", "0.51918, -20.4472, 1.26768, 2.04", "0.846085, -21.5501, 1.24712, 2.16", "1.07277, -22.2643, 1.14064, 1.32", "1.32541, -23.0738, 0.96812, 1.44", "1.61292, -24.1315, 0.78868, 1.44", "1.79051, -24.9616, 0.691941, 1.8", "1.87013, -25.5405, 0.647874, 2.04", "1.89896, -26.3638, 0.622033, 1.68", "1.82368, -27.5959, 0.600949, 1.44", "1.72558, -28.2096, 0.59744, 1.8", "1.60335, -28.7133, 0.602991, 2.04", "1.40297, -29.4011, 0.625552, 1.92", "1.18746, -30.0353, 0.644111, 1.56", "0.903716, -30.8119, 0.630138, 1.56", "0.712748, -31.3306, 0.554738, 0.72", "0.578785, -31.7198, 0.489057, 0.48", "0.47657, -32.0276, 0.447769, 0.48", "0.240627, -32.7566, 0.379664, 1.32", "0.0456073, -33.3685, 0.325647, 1.68", "-0.31538, -34.5069, 0.191116, 1.56", "-0.518721, -35.1471, 0.116777, 1.92", "-0.813239, -36.0986, 0.0122525, 2.64", "-1.01734, -36.8059, -0.0436026, 2.76", "-1.16921, -37.4346, -0.063516, 2.76", "-1.33437, -38.3255, -0.0369587, 1.68", "-1.40056, -38.898, 0.00277666, 0.96", "-1.43475, -39.6528, 0.0478181, 0.96", "-1.41469, -40.6263, 0.0973587, 1.32", "-1.32836, -42.0262, 0.185085, 1.8", "-1.278, -42.6372, 0.231649, 2.16", "-1.21503, -43.3386, 0.280231, 2.28", "-1.13868, -44.199, 0.31994, 0.84", "-1.10313, -44.763, 0.329902, 0.84", "-1.08241, -45.5975, 0.310224, 1.08", "-1.13891, -46.4722, 0.262729, 1.68", "-1.26205, -47.1514, 0.220663, 2.52", "-1.34497, -47.43, 0.188072, 3.0", "-1.46237, -47.7307, 0.138332, 2.88", "-1.53871, -47.8962, 0.109225, 2.88", "-1.859, -48.5234, -0.00875074, 2.16", "-2.383, -49.4933, -0.106188, 0.96", "-2.78472, -50.2308, -0.159302, 0.48", "-2.92547, -50.4854, -0.176762, 0.48", "-3.41912, -51.3689, -0.230719, 1.92", "-3.8988, -52.2066, -0.269352, 3.12", "-4.43913, -53.1619, -0.276001, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 11.2669, 0.167383, 2.16", "3.25335, 13.7096, 1.03031, 1.44", "3.87117, 16.0529, 1.8156, 2.16", "4.56456, 18.6099, 2.61513, 3.25", "5.05252, 20.3401, 3.13627, 3.49", "5.61772, 22.2944, 3.81692, 3.25", "6.01426, 23.6655, 4.29445, 2.88", "6.31959, 24.7061, 4.70611, 2.88", "6.64945, 25.7786, 5.08959, 2.52", "7.27581, 27.6716, 5.7947, 2.16", "8.17979, 30.2441, 6.77999, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.781102", "-2.81746, -27.7426, -0.718029, 0.781102", "-4.56437, -42.6406, -0.718029, 0.781102" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.98262, -5.32869, -15.9603, 1.56", "2.05747, -2.44147, -17.5315, 1.56", "0.891731, -1.1852, -18.2081, 1.2", "0.120319, -0.266824, -18.7076, 0.96", "-0.727536, 0.870474, -19.2604, 0.96", "-2.12592, 2.9306, -20.237, 1.32", "-3.60709, 5.36002, -21.1933, 1.32", "-4.67103, 7.44235, -21.7554, 1.44", "-5.45735, 9.29977, -22.1748, 1.44", "-6.1651, 11.3498, -22.5335, 1.44", "-6.66268, 13.0081, -22.7206, 1.68", "-7.54468, 16.0634, -22.8674, 2.88", "-7.94394, 17.3655, -22.8426, 3.73", "-8.68264, 19.3872, -22.7457, 3.73", "-9.82827, 21.9466, -22.6027, 2.88", "-11.3199, 24.7401, -22.4983, 1.68", "-12.1024, 25.999, -22.4634, 1.2", "-12.8785, 27.1161, -22.4936, 0.96", "-13.9503, 28.5248, -22.5211, 1.68", "-15.2431, 30.0354, -22.5378, 2.88", "-15.88, 30.6638, -22.5417, 3.49", "-16.6898, 31.3338, -22.5642, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.98262, -5.32869, -15.9603, 1.32", "6.93197, -6.51559, -15.8335, 1.32", "7.72598, -6.97364, -15.9022, 0.84", "8.88266, -7.66466, -16.1113, 1.2", "10.1455, -8.50421, -16.4688, 1.44", "11.4004, -9.5491, -17.0032, 1.32", "12.3757, -10.6086, -17.5498, 1.56", "13.2731, -12.1012, -18.4288, 1.2", "13.5146, -12.6487, -18.7798, 1.2", "13.7468, -13.5833, -19.4159, 1.2", "13.8551, -15.1716, -20.4889, 2.64", "13.7619, -16.4974, -21.2822, 4.45", "13.6316, -17.5504, -21.7249, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.43913, -53.1619, -0.276001, 3.0", "-5.39672, -54.1126, -0.260476, 3.0", "-5.94297, -54.7373, -0.241871, 2.76", "-6.80364, -55.8448, -0.141895, 1.92", "-7.08491, -56.2693, -0.0805465, 1.92", "-7.63464, -57.2603, 0.0898845, 0.6", "-7.95196, -57.9531, 0.206259, 0.48", "-8.0211, -58.227, 0.252045, 0.48", "-8.12046, -58.9461, 0.369261, 0.48", "-8.14532, -59.8209, 0.495707, 0.84", "-8.08043, -60.8138, 0.636649, 1.08", "-7.93744, -61.7906, 0.811732, 1.32", "-7.7217, -62.7519, 0.983825, 0.96", "-7.52244, -63.4267, 1.11044, 0.72", "-7.27177, -64.1263, 1.23955, 0.6", "-6.80346, -65.2216, 1.49942, 0.48", "-6.27607, -66.2356, 1.74071, 0.48", "-5.70073, -67.193, 1.97421, 1.44", "-5.05229, -68.1798, 2.20907, 1.92", "-4.55837, -68.9056, 2.40221, 2.04", "-3.91934, -69.8905, 2.67088, 1.44", "-3.15634, -71.1231, 2.97911, 0.84", "-2.95341, -71.5054, 3.10326, 0.12", "-2.73765, -72.051, 3.33839, 0.12", "-2.54912, -72.9549, 3.85659, 1.32", "-2.48524, -73.9221, 4.49774, 1.68", "-2.48987, -74.3806, 4.81428, 1.8", "-2.53535, -76.2724, 6.16141, 1.2", "-2.57418, -77.0847, 6.71563, 1.68", "-2.61725, -78.4267, 7.63735, 1.2", "-2.65854, -79.279, 8.23055, 0.24", "-2.70727, -79.8509, 8.6424, 0.24", "-2.82324, -80.8683, 9.3407, 1.92", "-2.94495, -81.5615, 9.74445, 1.8", "-3.64009, -83.7094, 10.9075, 0.72", "-4.14523, -84.7979, 11.4378, 0.72", "-4.59777, -85.5177, 11.7614, 0.48", "-5.00361, -86.0158, 11.9863, 0.36", "-5.71399, -86.7659, 12.2869, 0.36", "-6.11778, -87.238, 12.4324, 0.36", "-6.94191, -88.4035, 12.8754, 0.6", "-7.14649, -88.837, 13.0923, 0.6", "-7.39018, -89.3819, 13.4827, 0.36", "-7.58899, -89.7845, 13.8283, 0.36", "-7.81846, -90.2785, 14.2844, 0.36", "-8.53889, -91.696, 15.6543, 0.36", "-8.71639, -91.9714, 15.9237, 0.36", "-9.33766, -92.8563, 16.8904, 1.44", "-9.58726, -93.1951, 17.298, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.43913, -53.1619, -0.276001, 0.12", "-4.62205, -54.7886, -0.534631, 0.12", "-4.69097, -55.3757, -0.709645, 0.12", "-4.75428, -55.9195, -0.901507, 0.96", "-4.80799, -56.5468, -1.12595, 1.32", "-4.83059, -57.027, -1.29745, 1.32", "-4.83921, -58.0752, -1.6611, 0.6", "-4.80483, -58.8616, -2.01998, 0.36", "-4.7778, -59.0681, -2.12106, 0.36", "-4.65575, -59.5737, -2.35692, 0.36", "-4.56186, -59.8961, -2.47539, 0.36", "-4.47777, -60.2297, -2.569, 0.36", "-4.38986, -60.851, -2.69742, 0.36", "-4.38421, -61.2653, -2.76268, 0.36", "-4.38976, -61.8609, -2.92308, 0.36", "-4.43019, -62.5403, -3.12704, 1.08", "-4.52321, -63.4531, -3.41191, 1.68", "-4.61189, -64.1178, -3.62304, 1.8", "-4.75482, -64.9802, -3.88221, 1.56", "-4.92937, -66.2602, -4.29611, 1.2", "-4.98423, -66.8493, -4.48428, 0.36", "-5.00137, -67.1684, -4.56148, 0.36", "-5.02314, -67.5348, -4.58882, 0.36", "-5.06664, -68.4111, -4.55525, 1.56", "-5.09118, -69.0825, -4.48203, 1.92", "-5.12344, -69.9157, -4.33125, 1.92", "-5.12771, -71.0556, -4.11521, 1.08", "-5.11137, -72.0237, -3.89031, 0.36", "-5.09406, -72.8095, -3.68322, 0.36", "-5.1053, -73.353, -3.47371, 0.36", "-5.11873, -73.5652, -3.38051, 0.36", "-5.16093, -74.0966, -3.1465, 0.96", "-5.21947, -74.6636, -2.88481, 1.8", "-5.28222, -75.3068, -2.62475, 2.16", "-5.49067, -77.177, -1.91927, 1.92", "-5.59933, -78.0957, -1.63133, 1.8", "-5.68662, -78.8868, -1.46555, 1.8", "-5.75381, -79.8387, -1.4563, 1.2", "-5.74344, -81.2193, -1.81368, 0.12", "-5.72833, -81.4312, -1.90634, 0.12", "-5.66246, -82.0129, -2.22991, 0.12", "-5.58022, -82.7143, -2.62307, 0.84", "-5.42041, -83.8797, -3.28754, 1.08", "-5.26688, -84.9254, -3.85946, 1.92", "-5.15856, -85.755, -4.23523, 2.88", "-5.09931, -86.2794, -4.4505, 2.88", "-5.02922, -86.9511, -4.7138, 1.92", "-4.95734, -87.908, -5.0594, 0.36", "-4.94817, -88.3587, -5.1911, 0.36", "-4.9602, -88.9267, -5.3146, 1.08", "-4.9914, -89.637, -5.46242, 1.2", "-5.05864, -90.7001, -5.64945, 0.48", "-5.12225, -91.6158, -5.7886, 0.48", "-5.19375, -92.4168, -5.89086, 0.48", "-5.31437, -93.5769, -6.04634, 1.92", "-5.41727, -94.3688, -6.15528, 2.4", "-5.51993, -95.0438, -6.24222, 2.64", "-5.6832, -95.9633, -6.34233, 2.64", "-5.81014, -96.6196, -6.43393, 2.04", "-6.00122, -97.4707, -6.58363, 0.72", "-6.11003, -97.8702, -6.65519, 0.72", "-6.27578, -98.4352, -6.72046, 0.72", "-6.42481, -98.9846, -6.76986, 0.72", "-6.59863, -99.7036, -6.8065, 0.24", "-6.7518, -100.342, -6.76087, 0.12", "-6.82505, -100.696, -6.69175, 0.12", "-6.93006, -101.358, -6.50039, 0.12", "-6.97504, -102.017, -6.25346, 1.2", "-6.96764, -102.594, -6.01379, 2.28", "-6.84618, -104.26, -5.30521, 1.8", "-6.73923, -105.164, -4.93548, 0.36", "-6.67113, -105.629, -4.7881, 0.36", "-6.55068, -106.584, -4.59934, 0.36", "-6.46988, -107.5, -4.53461, 0.36", "-6.41685, -108.088, -4.58792, 0.36", "-6.35242, -109.004, -4.82857, 0.36", "-6.36626, -110.138, -5.21436, 1.56", "-6.42761, -111.007, -5.5367, 2.4", "-6.4823, -111.489, -5.7215, 2.4", "-6.57367, -112.317, -6.01591, 2.4", "-6.68027, -113.587, -6.38839, 0.48", "-6.71268, -114.094, -6.49803, 0.48", "-6.73125, -114.894, -6.58613, 0.6", "-6.70789, -115.582, -6.62139, 0.36", "-6.65346, -116.393, -6.63901, 0.36", "-6.59231, -117.172, -6.63223, 0.48", "-6.52596, -117.74, -6.63596, 0.36", "-6.42718, -118.431, -6.67237, 0.36", "-6.33521, -119.108, -6.74998, 0.36", "-6.29176, -119.544, -6.8442, 0.48", "-6.24919, -120.195, -7.05948, 0.48", "-6.24518, -120.98, -7.3551, 0.36", "-6.25878, -121.536, -7.57201, 0.84", "-6.31334, -122.437, -7.89284, 1.32", "-6.42245, -123.611, -8.26802, 2.16", "-6.5356, -124.504, -8.53769, 2.64", "-6.67757, -125.423, -8.79557, 2.28", "-6.87947, -126.45, -9.02412, 1.8", "-7.09428, -127.508, -9.21577, 1.2", "-7.23399, -128.113, -9.23847, 0.48", "-7.46395, -129.114, -9.15848, 0.36", "-7.61938, -129.795, -9.04682, 0.36", "-7.76447, -130.489, -8.88824, 1.08", "-7.8898, -131.183, -8.67014, 1.08", "-8.12941, -133.157, -7.95802, 1.44", "-8.20426, -134.269, -7.5357, 1.44", "-8.24066, -135.039, -7.20594, 1.32", "-8.26306, -135.79, -6.91222, 0.48", "-8.26527, -136.413, -6.72158, 0.48", "-8.27049, -136.793, -6.62779, 1.08", "-8.27762, -137.511, -6.51076, 1.68", "-8.34882, -138.685, -6.29873, 2.28", "-8.43209, -139.489, -6.19251, 2.4", "-8.57087, -140.523, -6.13216, 1.32", "-8.69749, -141.222, -6.13063, 0.6", "-8.78459, -141.681, -6.18934, 0.48", "-8.92889, -142.407, -6.42749, 0.48", "-9.05226, -143.057, -6.74467, 0.48", "-9.13681, -143.784, -7.22676, 1.08", "-9.16041, -144.409, -7.66765, 1.92", "-9.11157, -145.745, -8.67113, 1.92", "-9.01251, -146.842, -9.50731, 2.28", "-8.9172, -147.567, -10.0528, 2.76", "-8.65792, -149.328, -11.3039, 2.76", "-8.46539, -150.685, -12.1685, 0.72", "-8.32532, -151.727, -12.7395, 0.72", "-8.24267, -152.534, -13.0836, 0.96", "-8.20692, -153.205, -13.3135, 1.56", "-8.22312, -154.01, -13.5394, 1.8", "-8.29481, -154.723, -13.6594, 1.44", "-8.36504, -155.552, -13.7646, 0.48", "-8.37008, -155.88, -13.7829, 0.6", "-8.32992, -156.757, -13.8038, 0.6", "-8.30089, -157.168, -13.7985, 0.48", "-8.23419, -158.115, -13.7685, 0.48", "-8.19989, -158.853, -13.7416, 0.48", "-8.20181, -159.763, -13.684, 0.48", "-8.23794, -160.666, -13.643, 0.84", "-8.33972, -161.837, -13.6106, 1.68", "-8.50811, -163.108, -13.5958, 2.4", "-8.63781, -163.936, -13.5911, 2.4", "-8.81044, -165.091, -13.5933, 0.6", "-8.89912, -165.893, -13.5861, 0.6", "-8.92154, -166.938, -13.5793, 0.6", "-8.84577, -167.863, -13.5596, 0.6", "-8.71428, -168.625, -13.5085, 1.08", "-8.53873, -169.371, -13.428, 1.44", "-8.35728, -170.032, -13.3377, 0.84", "-8.16329, -170.766, -13.2045, 0.96", "-7.9746, -171.607, -13.0476, 0.96", "-7.87657, -172.232, -12.9428, 0.72", "-7.83532, -172.701, -12.8771, 0.48", "-7.82313, -173.123, -12.8262, 0.48", "-7.85062, -173.707, -12.7622, 1.32", "-7.96572, -174.668, -12.6685, 1.8", "-8.06776, -175.37, -12.6488, 2.04", "-8.21736, -176.317, -12.6808, 1.92", "-8.33053, -177.024, -12.733, 1.44", "-8.4617, -177.905, -12.842, 0.48", "-8.55934, -178.656, -12.9873, 0.48", "-8.6852, -179.868, -13.2828, 1.44", "-8.78046, -180.922, -13.5564, 2.52", "-8.84825, -181.837, -13.7968, 3.25", "-8.90607, -183.147, -14.1359, 2.28", "-8.90915, -184.056, -14.3459, 1.8", "-8.86711, -185.081, -14.5347, 0.96", "-8.77662, -186.457, -14.7208, 0.96", "-8.67936, -187.489, -14.8452, 0.96", "-8.54039, -188.814, -14.9813, 2.52", "-8.44354, -189.793, -15.0338, 2.52", "-8.29316, -191.427, -15.0528, 1.44", "-8.22074, -192.231, -15.0417, 0.96", "-8.1303, -193.168, -15.0251, 0.72", "-8.09082, -193.647, -15.0141, 0.72", "-8.03086, -194.573, -15.0305, 0.72", "-8.00888, -195.268, -15.0917, 0.72", "-7.968, -196.054, -15.2585, 1.08", "-7.84411, -196.829, -15.562, 1.44", "-7.77158, -197.115, -15.7045, 1.44", "-7.39753, -198.299, -16.4086, 0.36", "-7.03084, -199.306, -17.0703, 0.36", "-6.5685, -200.492, -17.8478, 1.32", "-6.01737, -201.855, -18.6865, 0.48", "-5.79094, -202.416, -18.9947, 0.48", "-5.32664, -203.574, -19.5597, 1.92", "-5.19258, -203.932, -19.7048, 2.76", "-4.92147, -204.775, -19.9796, 2.4", "-4.76832, -205.57, -20.1211, 1.32", "-4.71402, -206.029, -20.2285, 0.12", "-4.68153, -206.476, -20.3947, 0.12", "-4.68197, -206.7, -20.507, 0.12", "-4.6926, -207.384, -20.936, 1.08", "-4.68372, -207.852, -21.2734, 1.08", "-4.49202, -209.837, -22.8809, 0.24", "-4.43029, -210.118, -23.105, 0.24", "-4.25079, -210.645, -23.4805, 0.24", "-3.95296, -211.275, -23.809, 0.24", "-3.54056, -211.956, -24.0203, 0.24", "-2.9562, -212.818, -24.2175, 1.08", "-2.44776, -213.571, -24.2995, 2.04", "-1.99729, -214.269, -24.3954, 2.04", "-1.46931, -215.137, -24.5333, 1.44", "-1.25857, -215.575, -24.6059, 0.96", "-0.681331, -217.214, -24.856, 0.72", "-0.51697, -217.888, -24.9316, 0.36", "-0.412468, -218.688, -25.0377, 0.36", "-0.405876, -219.045, -25.0726, 0.36", "-0.477908, -219.916, -25.0936, 1.32", "-0.576052, -220.645, -25.0535, 2.04", "-0.63414, -220.996, -25.0078, 2.4", "-0.725694, -221.503, -24.9404, 2.4", "-0.965453, -222.835, -24.7633, 0.48", "-1.08551, -223.517, -24.6781, 0.36", "-1.27702, -224.757, -24.5575, 0.36", "-1.3775, -225.455, -24.4951, 0.36", "-1.48327, -226.223, -24.4368, 1.68", "-1.54125, -226.795, -24.3973, 2.16", "-1.55844, -227.162, -24.3769, 2.16", "-1.56557, -228.127, -24.3037, 0.96", "-1.53615, -228.702, -24.2731, 0.36", "-1.49532, -229.049, -24.2857, 0.36", "-1.3387, -229.906, -24.403, 0.36", "-1.16238, -230.747, -24.5748, 0.36", "-1.03571, -231.335, -24.7017, 0.36", "-0.848963, -232.267, -24.9057, 1.44", "-0.651157, -233.548, -25.1766, 2.4", "-0.582885, -234.216, -25.2977, 2.52", "-0.572559, -234.534, -25.3466, 2.52", "-0.612298, -235.678, -25.472, 0.48", "-0.65802, -236.387, -25.5183, 0.36", "-0.806396, -237.645, -25.4784, 0.36", "-0.897134, -238.209, -25.4062, 1.32", "-1.02781, -238.914, -25.2934, 1.92", "-1.134, -239.516, -25.2028, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.17979, 30.2441, 6.77999, 1.92", "8.18364, 32.8042, 6.78411, 1.92", "8.16163, 34.0401, 6.8038, 2.28", "8.13641, 35.1736, 6.86249, 1.8", "8.11372, 36.501, 6.95258, 1.8", "8.09873, 38.3051, 7.08882, 1.68", "8.10321, 40.4079, 7.25481, 2.4", "8.12546, 42.0082, 7.48699, 2.88", "8.14655, 42.8553, 7.59628, 2.76", "8.18529, 43.6291, 7.70938, 2.76", "8.23934, 44.2138, 7.82597, 2.76", "8.34053, 44.8767, 7.98665, 2.52", "8.64999, 46.2857, 8.36076, 1.68", "8.85186, 47.1054, 8.58745, 1.44", "9.08765, 48.0352, 8.83665, 1.68", "9.52446, 49.7276, 9.32551, 2.64", "9.79656, 50.7583, 9.64066, 2.88", "9.9599, 51.3421, 9.82667, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.17979, 30.2441, 6.77999, 0.84", "7.5556, 30.0606, 6.8691, 0.84", "6.56887, 29.9772, 6.99746, 0.84", "5.88842, 30.0979, 7.16516, 0.84", "5.68702, 30.1882, 7.25322, 0.84", "5.21538, 30.5745, 7.54167, 0.72", "4.87011, 31.0337, 7.97119, 0.72", "4.7274, 31.3508, 8.32065, 0.72", "4.66183, 31.9414, 9.00873, 0.96", "4.74191, 32.3825, 9.58216, 1.44", "4.93271, 32.8418, 10.1986, 1.56", "5.4385, 33.628, 11.3334, 1.32", "5.83596, 34.0972, 12.0651, 0.48", "6.21132, 34.4515, 12.6222, 0.6", "7.00472, 35.0377, 13.5738, 0.6", "7.51918, 35.3261, 14.0402, 1.68", "8.50074, 35.6797, 14.5694, 1.92", "9.31354, 35.8354, 14.5628, 1.56", "11.8463, 35.7858, 13.1113, 0.48", "12.3595, 35.706, 12.5918, 0.48", "12.7657, 35.6215, 12.107, 0.84", "12.9913, 35.5446, 11.7523, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.460629", "-6.31129, -57.5385, -0.718029, 0.460629", "-8.0582, -72.4364, -0.718029, 0.460629" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.6898, 31.3338, -22.5642, 0.96", "-16.4318, 33.3615, -23.5718, 0.96", "-16.3437, 34.5391, -24.0596, 0.6", "-16.3248, 35.6808, -24.4773, 0.6", "-16.3502, 36.2994, -24.6827, 1.32", "-16.403, 36.8556, -24.8311, 1.56", "-16.5707, 37.9288, -25.0535, 0.96", "-16.919, 39.2295, -25.1206, 0.6", "-17.1309, 39.8355, -25.1153, 0.48", "-17.3379, 40.3575, -25.1025, 0.48", "-17.7657, 41.4185, -25.084, 0.72", "-18.2708, 42.6932, -25.1054, 1.8", "-18.6987, 43.8621, -25.174, 2.04", "-18.9993, 44.8206, -25.2708, 2.64", "-19.2893, 45.8981, -25.4582, 3.25", "-19.5196, 46.8732, -25.6884, 3.25", "-19.7229, 47.859, -25.982, 2.88", "-19.9525, 49.1696, -26.4021, 0.84", "-20.0394, 49.7051, -26.5731, 0.6", "-20.2764, 51.076, -26.9897, 2.4", "-20.4602, 52.0396, -27.2605, 3.25", "-20.646, 52.9547, -27.4857, 2.88", "-20.9602, 54.4748, -27.8122, 0.96", "-21.2951, 56.0899, -28.1664, 0.84", "-21.5011, 57.0838, -28.3917, 0.48", "-21.6373, 57.7627, -28.5429, 0.48", "-21.9066, 59.0708, -28.8531, 0.48", "-22.1249, 60.092, -29.1155, 1.92", "-22.3744, 61.3075, -29.4715, 3.37", "-22.5141, 62.1058, -29.7429, 3.49", "-22.6363, 63.0666, -30.1083, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-16.6898, 31.3338, -22.5642, 0.84", "-19.3003, 31.1195, -23.4372, 0.84", "-20.0004, 31.2252, -23.7925, 0.72", "-20.5148, 31.4134, -24.1154, 0.72", "-21.0475, 31.769, -24.589, 0.72", "-21.8821, 32.5016, -25.6769, 0.84", "-22.8521, 33.4056, -27.1222, 0.72", "-23.419, 34.1332, -28.2065, 0.48", "-23.9262, 34.8335, -29.2484, 0.48", "-24.8077, 36.0554, -31.0826, 0.72", "-25.7822, 37.2828, -33.0121, 0.48", "-26.0518, 37.5617, -33.5382, 0.48", "-26.323, 37.7708, -33.9821, 0.48", "-26.8738, 38.0988, -34.7685, 1.32", "-27.4634, 38.3776, -35.5425, 2.04", "-28.3286, 38.7226, -36.5378, 1.56", "-30.1862, 39.5159, -38.5991, 0.36", "-30.6141, 39.7108, -39.1134, 0.36", "-32.1988, 40.452, -41.197, 2.4", "-32.8403, 40.7669, -42.1456, 3.25", "-33.2322, 40.971, -42.7917, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "13.6316, -17.5504, -21.7249, 0.24", "12.8936, -19.4011, -22.2345, 0.24", "12.6703, -20.0608, -22.4408, 0.24", "12.3232, -21.3134, -22.8139, 1.92", "12.04, -22.3084, -23.0892, 2.52", "11.7903, -23.1113, -23.2974, 2.4", "11.5176, -23.9367, -23.5029, 1.8", "11.1833, -25.0171, -23.7598, 0.24", "10.7601, -26.2928, -24.0135, 0.24", "10.3137, -27.5642, -24.2055, 0.24", "9.98701, -28.44, -24.3044, 0.24", "9.66798, -29.2435, -24.4038, 1.68", "9.13017, -30.513, -24.5592, 1.92", "8.50006, -31.9166, -24.7451, 2.28", "7.98451, -33.0056, -24.912, 3.12", "7.44038, -34.1158, -25.0965, 3.12", "6.41609, -36.0864, -25.405, 0.24", "5.99126, -36.8361, -25.5097, 0.24", "5.88852, -36.9983, -25.5301, 0.48", "5.44062, -37.6238, -25.5895, 0.48", "4.78233, -38.4501, -25.6209, 0.48", "4.3413, -39.0124, -25.5893, 0.48", "4.13998, -39.3073, -25.5273, 0.12", "3.82735, -39.9506, -25.4049, 0.12", "3.69199, -40.308, -25.3428, 0.12", "3.54384, -40.8364, -25.2666, 0.72", "3.30993, -41.8995, -25.1543, 0.96", "3.17286, -42.571, -25.1267, 0.24", "2.9025, -43.8928, -25.122, 0.24", "2.78516, -44.4686, -25.1057, 0.96", "2.64453, -45.1325, -25.0778, 1.44", "2.45339, -45.9438, -25.0403, 1.56", "2.15518, -47.0465, -24.9921, 0.48", "1.94866, -47.7621, -24.9663, 0.24", "1.56365, -49.0783, -24.9118, 1.68", "1.32062, -50.0071, -24.892, 2.88", "1.005, -51.3575, -24.8445, 2.88", "0.650946, -53.1422, -24.7699, 0.24", "0.413503, -54.635, -24.6907, 0.24", "0.343598, -55.1958, -24.6645, 0.24", "0.182924, -56.9339, -24.6278, 0.24", "0.11773, -58.0418, -24.604, 1.8", "0.091911, -59.2607, -24.5665, 2.76", "0.107879, -60.9308, -24.5048, 0.48", "0.113777, -61.8788, -24.4675, 0.48", "0.0928772, -62.6199, -24.4401, 0.6", "0.0348613, -63.4435, -24.3892, 0.6", "-0.0356535, -64.0796, -24.3654, 0.36", "-0.13548, -64.7579, -24.3391, 0.36", "-0.371138, -65.8526, -24.3716, 0.48", "-0.740675, -67.296, -24.4718, 0.48", "-1.02408, -68.2626, -24.5667, 1.44", "-1.39748, -69.4842, -24.7651, 2.76", "-1.689, -70.5054, -24.9867, 3.0", "-2.23578, -72.632, -25.6322, 0.12", "-2.38505, -73.2576, -25.8657, 0.12", "-2.59086, -74.1424, -26.2456, 0.12", "-2.81427, -75.1576, -26.713, 1.32", "-3.0202, -76.1363, -27.1525, 2.4", "-3.46247, -78.0791, -27.967, 0.12", "-3.69487, -79.026, -28.305, 0.12", "-3.86104, -79.5863, -28.4872, 0.84", "-4.0738, -80.2006, -28.6614, 0.96", "-4.61974, -81.6411, -28.9713, 0.12", "-5.04132, -82.7147, -29.16, 0.12", "-5.35523, -83.5618, -29.2598, 1.32", "-5.62938, -84.3677, -29.3493, 1.8", "-5.97105, -85.4581, -29.4524, 0.12", "-6.40913, -86.8918, -29.56, 0.12", "-6.631, -87.6712, -29.6012, 1.56", "-6.85323, -88.6029, -29.6419, 2.52", "-7.02193, -89.4198, -29.6697, 2.64", "-7.33719, -91.1753, -29.7105, 1.32", "-7.4775, -91.9683, -29.7192, 0.12", "-7.50499, -92.1144, -29.7207, 0.24", "-7.71053, -93.1384, -29.7512, 0.24", "-7.95436, -94.3361, -29.8067, 0.24", "-8.11915, -95.1363, -29.9071, 0.24", "-8.23163, -95.6887, -30.0137, 0.24", "-8.34276, -96.2286, -30.1384, 1.56", "-8.5344, -97.0717, -30.3496, 2.28", "-8.72549, -97.8436, -30.5722, 2.28", "-9.15468, -99.5804, -31.1156, 0.48", "-9.40892, -100.585, -31.434, 0.48", "-9.44149, -100.713, -31.4725, 0.72", "-9.68591, -101.604, -31.7233, 0.96", "-9.90669, -102.351, -31.8993, 0.48", "-10.0408, -102.74, -31.9923, 0.48", "-10.2779, -103.374, -32.0977, 0.48", "-10.6019, -104.213, -32.225, 0.6", "-10.7086, -104.498, -32.2626, 0.24", "-11.0191, -105.398, -32.3689, 0.24", "-11.4146, -106.717, -32.4937, 1.56", "-11.7002, -107.782, -32.5924, 2.4", "-11.932, -108.738, -32.6773, 2.52", "-12.0522, -109.272, -32.7207, 2.52", "-12.433, -111.012, -32.8174, 0.24", "-12.8429, -113.149, -32.8762, 0.24", "-12.9344, -113.713, -32.8787, 0.96", "-13.0462, -114.529, -32.8886, 1.44", "-13.1029, -115.081, -32.8881, 1.68", "-13.1888, -116.278, -32.8969, 0.24", "-13.245, -118.354, -32.92, 0.24", "-13.2315, -119.451, -32.9479, 1.56", "-13.2099, -120.138, -32.9794, 2.16", "-13.1787, -120.879, -33.0331, 1.8", "-13.1622, -122.145, -33.1696, 0.12", "-13.1884, -122.864, -33.2828, 0.12", "-13.2089, -122.997, -33.3062, 0.6", "-13.3495, -123.549, -33.3987, 0.12", "-13.4862, -123.956, -33.4593, 0.12", "-13.8681, -124.941, -33.5758, 0.12", "-14.0465, -125.4, -33.6064, 0.6", "-14.3225, -126.178, -33.5738, 0.6", "-14.4876, -126.703, -33.5087, 0.12", "-14.6729, -127.34, -33.3937, 0.12", "-14.8327, -127.871, -33.286, 0.6", "-15.0481, -128.646, -33.1168, 0.6", "-15.4362, -130.122, -32.7929, 0.12", "-15.6795, -131.104, -32.585, 0.12", "-15.9112, -132.093, -32.3951, 1.44", "-16.1377, -133.117, -32.2298, 2.4", "-16.237, -133.598, -32.172, 2.52", "-16.386, -134.372, -32.1244, 2.16", "-16.4949, -135.328, -32.1408, 0.12", "-16.5311, -136.15, -32.1115, 0.36", "-16.5289, -136.686, -32.0687, 0.12", "-16.5174, -137.094, -32.0204, 0.12", "-16.4943, -137.692, -31.9478, 0.12", "-16.4396, -138.753, -31.8167, 0.12", "-16.3542, -139.978, -31.6765, 0.12", "-16.3444, -140.251, -31.6546, 0.12", "-16.3699, -141.077, -31.6214, 0.12", "-16.4579, -142.032, -31.655, 1.8", "-16.5103, -142.438, -31.695, 2.28", "-16.6554, -143.246, -31.7515, 1.92", "-16.8971, -144.575, -31.7787, 0.36", "-17.0918, -145.59, -31.7549, 0.36", "-17.2658, -146.529, -31.6995, 1.2", "-17.3968, -147.363, -31.5589, 0.72", "-17.5535, -149.077, -31.2829, 0.12", "-17.644, -150.628, -31.0425, 0.12", "-17.6753, -151.646, -30.8936, 1.68", "-17.7025, -152.437, -30.7798, 1.8", "-17.8029, -154.536, -30.4545, 1.44", "-17.934, -156.65, -30.2174, 0.24", "-18.0414, -158.681, -30.0233, 0.12", "-18.0897, -159.621, -29.91, 0.12", "-18.1977, -161.238, -29.6674, 0.12", "-18.2631, -162.023, -29.5596, 1.2", "-18.3481, -163.101, -29.4433, 2.52", "-18.4561, -164.786, -29.0832, 0.48", "-18.4599, -165.176, -28.9948, 0.48", "-18.4345, -166.14, -28.7753, 0.48", "-18.3693, -167.192, -28.5602, 0.72", "-18.2776, -168.556, -28.3039, 0.24", "-18.1965, -169.995, -27.9465, 0.12", "-18.1033, -171.078, -27.6857, 0.12", "-18.0193, -171.671, -27.5585, 1.08", "-17.8935, -172.326, -27.3999, 1.32", "-17.7657, -172.862, -27.2787, 1.08", "-17.4065, -174.258, -26.999, 0.36", "-16.8422, -176.348, -26.7111, 0.36", "-16.4528, -177.756, -26.5087, 1.56", "-16.1167, -178.984, -26.3403, 2.16", "-15.8059, -179.967, -26.2232, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "13.6316, -17.5504, -21.7249, 0.36", "15.3843, -19.2378, -22.1891, 0.36", "16.0076, -19.5187, -22.5081, 0.36", "16.3609, -19.5709, -22.7499, 0.36", "16.6846, -19.5961, -22.976, 0.36", "17.4681, -19.6605, -23.5075, 0.72", "18.6653, -19.8016, -24.3079, 0.96", "19.4324, -19.8109, -24.8724, 0.96", "20.5104, -19.8502, -25.6736, 0.48", "21.5002, -19.9687, -26.3987, 0.36", "21.9952, -20.1407, -26.7508, 0.36", "22.3684, -20.5122, -26.9686, 0.36", "22.4737, -20.7616, -27.0026, 0.36", "22.7264, -21.6076, -27.0415, 0.36", "22.9642, -22.4049, -27.0356, 1.56", "23.3037, -23.3731, -27.0114, 2.52", "23.686, -24.2359, -27.0337, 2.4", "24.5776, -25.776, -27.1411, 0.36", "24.9297, -26.2585, -27.2043, 0.36", "25.6862, -27.1299, -27.365, 0.36", "26.4327, -27.8796, -27.5517, 0.36", "27.4838, -28.8434, -27.8217, 1.44", "28.6164, -29.8049, -28.1255, 3.25", "29.8963, -30.8206, -28.4884, 4.69", "30.1326, -31.015, -28.562, 4.93", "31.5139, -32.2767, -29.0546, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.134, -239.516, -25.2028, 0.12", "-1.24936, -240.577, -26.2043, 0.12", "-1.28062, -241.058, -26.6531, 0.12", "-1.28237, -241.197, -26.8218, 0.12", "-1.30346, -241.354, -27.0187, 0.36", "-1.48621, -242.214, -28.0767, 0.12", "-1.53944, -242.468, -28.428, 0.12", "-1.53944, -242.468, -28.428, 0.36", "-1.70986, -243.391, -29.7698, 0.36", "-1.80455, -243.991, -30.6022, 2.52", "-1.83434, -244.227, -30.9064, 2.88", "-2.12574, -246.352, -33.3959, 0.24", "-2.16584, -246.651, -33.72, 0.12", "-2.19441, -246.938, -33.9903, 0.12", "-2.21114, -247.317, -34.2622, 0.48", "-2.19952, -247.735, -34.5088, 0.48", "-2.18664, -248.165, -34.7099, 0.12", "-2.18049, -248.926, -34.8682, 0.12", "-2.1604, -249.376, -35.0021, 0.12", "-2.12871, -249.892, -35.175, 0.84", "-2.1224, -250.226, -35.2808, 0.84", "-2.1033, -251.485, -35.6474, 0.12", "-2.092, -252.034, -35.7833, 0.12", "-2.11411, -253.453, -36.108, 2.64", "-2.14783, -253.899, -36.2038, 2.28", "-2.35276, -255.13, -36.352, 0.12", "-2.47204, -255.562, -36.352, 0.12", "-2.82408, -256.363, -36.235, 0.12", "-3.18982, -256.911, -36.1109, 1.2", "-3.2613, -256.989, -36.0833, 1.44", "-4.38243, -258.02, -35.646, 0.12", "-4.75859, -258.288, -35.4879, 0.12", "-5.12491, -258.493, -35.3276, 0.12", "-5.64095, -258.706, -35.0695, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.134, -239.516, -25.2028, 0.6", "-0.414144, -240.47, -26.3058, 0.6", "-0.331026, -240.589, -26.4629, 0.6", "0.00777344, -241.101, -27.1375, 1.32", "0.352597, -241.66, -27.8401, 2.28", "0.740264, -242.289, -28.6301, 2.04", "2.0146, -244.356, -31.2268, 0.96", "2.32248, -244.847, -31.9247, 0.48", "2.48365, -245.103, -32.3117, 0.48", "2.65123, -245.377, -32.7668, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.9599, 51.3421, 9.82667, 1.2", "10.052, 52.8074, 9.56715, 1.2", "10.1308, 54.1811, 9.45512, 1.32", "10.1777, 54.9977, 9.42232, 1.44", "10.2467, 56.0452, 9.41763, 0.96", "10.3744, 57.4545, 9.43393, 1.08", "10.6038, 59.3486, 9.47188, 1.56", "10.9206, 60.9786, 9.57826, 0.96", "11.1634, 61.8852, 9.6661, 0.6", "11.4578, 62.7479, 9.7646, 1.2", "11.7878, 63.5559, 9.86851, 2.04", "12.0755, 64.1832, 9.95266, 2.16", "12.6719, 65.4482, 10.1382, 1.2", "13.0712, 66.3626, 10.2649, 0.84", "13.4162, 67.3332, 10.3502, 0.48", "13.5994, 68.0175, 10.3795, 0.48", "13.8579, 69.5644, 10.3739, 0.48", "13.9615, 70.7056, 10.3257, 0.84", "14.01, 71.9954, 10.2224, 1.92", "14.0544, 73.6158, 10.0347, 2.52", "14.0868, 74.4431, 9.91587, 2.28", "14.1869, 75.8047, 9.73023, 0.6", "14.244, 76.2716, 9.67933, 0.6", "14.3425, 76.9443, 9.63576, 0.48", "14.5224, 78.0861, 9.6304, 0.48", "14.67, 78.9479, 9.68867, 0.96", "14.8105, 79.7164, 9.76012, 1.8", "15.0268, 80.8042, 9.90325, 2.04", "15.2403, 81.9522, 10.0608, 2.04", "15.4873, 83.6081, 10.2954, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.9599, 51.3421, 9.82667, 1.32", "11.0443, 52.8674, 10.0632, 1.32", "11.5131, 53.5259, 10.074, 0.96", "12.3395, 54.599, 9.99276, 1.32", "12.8603, 55.179, 9.88029, 1.68", "13.5418, 55.8314, 9.69957, 1.2", "14.384, 56.5564, 9.45259, 0.84", "15.301, 57.2517, 9.10538, 0.72", "15.8292, 57.6232, 8.91414, 0.84", "16.7527, 58.1413, 8.55562, 0.6", "17.3548, 58.4085, 8.32384, 0.6", "17.8569, 58.5625, 8.14598, 1.32", "19.157, 58.8711, 7.90936, 1.8", "19.9562, 59.1969, 7.98583, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-22.6363, 63.0666, -30.1083, 0.48", "-22.8599, 65.064, -30.2236, 0.48", "-23.0284, 66.2444, -30.2532, 0.48", "-23.1562, 67.0421, -30.248, 0.48", "-23.4018, 68.4574, -30.2389, 0.72", "-23.5599, 69.3041, -30.2373, 0.48", "-23.7605, 70.3166, -30.2398, 0.48", "-24.1494, 71.747, -30.2316, 0.48", "-24.5185, 73.0294, -30.2175, 1.8", "-24.6987, 73.6903, -30.2198, 2.64", "-24.8849, 74.4484, -30.2432, 2.88", "-25.0749, 75.3335, -30.2709, 2.88", "-25.2756, 76.3454, -30.3074, 2.04", "-25.5149, 77.6308, -30.3685, 0.48", "-25.6039, 78.1456, -30.3925, 0.36", "-25.9196, 80.0516, -30.4877, 0.36", "-26.1143, 81.2759, -30.5605, 1.44", "-26.2544, 82.4165, -30.6636, 2.52", "-26.353, 83.5467, -30.802, 2.64", "-26.4004, 84.3541, -30.9263, 2.52", "-26.4765, 86.1359, -31.2516, 0.48", "-26.5058, 86.8844, -31.4085, 0.36", "-26.5799, 88.3246, -31.7264, 0.36", "-26.6178, 89.006, -31.8658, 0.36", "-26.6996, 90.1343, -32.0912, 0.36", "-26.8135, 91.3962, -32.3311, 1.44", "-26.9139, 92.1549, -32.4619, 1.56", "-27.0965, 93.1275, -32.6158, 0.24", "-27.3829, 94.2423, -32.7668, 0.24", "-27.6494, 95.2031, -32.8734, 0.72", "-27.7826, 95.6897, -32.9199, 0.72", "-27.9308, 96.257, -32.9671, 0.48", "-28.0159, 96.6344, -32.998, 0.36", "-28.1174, 97.2614, -33.0346, 0.36", "-28.1827, 98.0336, -33.0472, 0.84", "-28.2051, 99.3124, -33.0593, 2.4", "-28.2077, 99.8294, -33.0744, 3.0", "-28.2052, 100.852, -33.1168, 3.0", "-28.22, 102.129, -33.189, 1.68", "-28.2544, 103.399, -33.2774, 0.36", "-28.3109, 104.43, -33.3673, 0.36", "-28.4519, 105.746, -33.4882, 0.36", "-28.624, 106.763, -33.5916, 1.68", "-28.7768, 107.434, -33.6703, 2.52", "-28.9232, 107.949, -33.7415, 2.64", "-29.1282, 108.603, -33.8352, 2.28", "-29.4532, 109.662, -33.9857, 0.48", "-29.8428, 111.135, -34.2537, 0.48", "-30.097, 112.241, -34.497, 0.48", "-30.1892, 112.741, -34.6185, 0.96", "-30.3224, 113.61, -34.8368, 1.56", "-30.3962, 114.245, -34.9977, 1.56", "-30.5036, 115.501, -35.3091, 0.48", "-30.5343, 115.886, -35.4097, 0.12", "-30.6331, 116.997, -35.7014, 0.12", "-30.7582, 118.24, -36.0197, 2.16", "-30.83, 118.867, -36.172, 2.88", "-30.8952, 119.369, -36.2784, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-22.6363, 63.0666, -30.1083, 0.48", "-23.7684, 65.2155, -32.4927, 0.48", "-23.9469, 65.5214, -32.8332, 0.48", "-24.3379, 66.1622, -33.6101, 0.72", "-24.5951, 66.6003, -34.1829, 0.72", "-25.0585, 67.4353, -35.2616, 0.24", "-25.2613, 67.8114, -35.7505, 0.12", "-25.5478, 68.3485, -36.4141, 0.84", "-25.8845, 69.0557, -37.3379, 0.12", "-26.2166, 69.8343, -38.3578, 0.12", "-26.3955, 70.2916, -38.9059, 1.68", "-26.6092, 70.863, -39.49, 2.4", "-26.9811, 71.8599, -40.4777, 1.8", "-27.3398, 72.8176, -41.4112, 0.12", "-27.5259, 73.2448, -41.816, 0.12", "-27.9532, 74.0616, -42.6237, 1.92", "-28.2568, 74.5933, -43.2127, 2.4", "-29.0647, 75.9624, -44.8438, 0.6", "-29.4586, 76.5787, -45.6217, 0.48", "-29.7836, 77.0695, -46.2487, 0.48", "-30.2472, 77.7897, -47.1769, 1.2", "-30.7549, 78.6033, -48.2834, 0.48", "-30.9352, 78.9205, -48.6913, 0.12", "-31.2718, 79.6142, -49.3904, 0.12", "-31.4597, 80.07, -49.7791, 0.72", "-31.6154, 80.5374, -50.2075, 0.72", "-32.0047, 81.6226, -51.2372, 0.12", "-32.0989, 81.8633, -51.4853, 0.12", "-32.3666, 82.5845, -52.2737, 2.28", "-32.4895, 82.9658, -52.7531, 2.52", "-32.9709, 84.6314, -55.0492, 0.12", "-33.1316, 85.3293, -55.9998, 0.12", "-33.2645, 86.0577, -56.9619, 1.44", "-33.3305, 86.4669, -57.5071, 1.8", "-33.4587, 87.347, -58.7121, 1.32", "-33.5562, 87.8485, -59.3933, 0.12", "-33.7331, 88.6377, -60.3496, 0.12", "-34.004, 89.7238, -61.6215, 1.56", "-34.1155, 90.0806, -62.0231, 1.92", "-34.5535, 91.2124, -63.2921, 0.12", "-34.849, 91.8972, -64.038, 0.12", "-35.0386, 92.3145, -64.5012, 0.96", "-35.1096, 92.4679, -64.6793, 0.96", "-35.3798, 93.1266, -65.504, 0.12", "-35.5772, 93.6372, -66.1919, 0.12", "-35.8749, 94.37, -67.2394, 1.32", "-36.0156, 94.7088, -67.7317, 1.8", "-36.2138, 95.1453, -68.3582, 1.32", "-36.7884, 96.3899, -70.0577, 0.12", "-36.8516, 96.5321, -70.2825, 0.12", "-37.0611, 97.0421, -71.1274, 0.36", "-37.2604, 97.4629, -71.8327, 0.36", "-37.5067, 98.044, -72.8236, 1.92", "-37.678, 98.5522, -73.6449, 2.76", "-38.3448, 100.932, -77.1667, 0.36", "-38.3945, 101.134, -77.4688, 0.36", "-38.5586, 101.9, -78.6192, 0.36", "-38.7165, 102.664, -79.7635, 0.36", "-38.7954, 103.101, -80.4003, 0.36", "-38.8974, 103.876, -81.4669, 0.72", "-38.9416, 104.848, -82.6858, 0.12", "-38.9447, 105.081, -82.9941, 0.12", "-38.9319, 105.508, -83.5935, 1.92", "-38.9836, 106.329, -84.8171, 2.52", "-39.0116, 107.187, -86.2539, 1.44", "-38.9254, 107.722, -87.2377, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-33.2322, 40.971, -42.7917, 0.12", "-35.0734, 43.6295, -44.321, 0.12", "-35.8885, 44.7749, -45.0168, 0.6", "-36.4889, 45.662, -45.5572, 0.12", "-36.7569, 46.0701, -45.7947, 0.12", "-37.1187, 46.6271, -46.0949, 0.12", "-37.5481, 47.3024, -46.4312, 0.24", "-37.9385, 47.9333, -46.7627, 0.12", "-38.2561, 48.4669, -47.1419, 0.12", "-38.7616, 49.3466, -47.8437, 0.12", "-39.236, 50.2093, -48.5855, 1.32", "-39.5199, 50.8111, -49.1011, 1.8", "-40.2362, 52.5585, -50.54, 0.84", "-40.619, 53.6239, -51.6074, 0.12", "-40.7103, 53.9667, -51.9763, 0.12", "-40.9206, 55.0821, -53.1479, 1.8", "-41.0221, 55.7691, -53.8278, 2.16", "-41.0902, 56.4213, -54.4525, 1.8", "-41.2452, 59.4912, -57.5697, 0.24", "-41.2536, 60.7373, -58.9098, 0.24", "-41.2475, 61.9912, -60.2812, 0.24", "-41.2426, 62.5442, -60.9089, 0.24", "-41.2442, 64.334, -63.0539, 2.28", "-41.2573, 66.7897, -66.0819, 0.24", "-41.2624, 67.1875, -66.5488, 0.24", "-41.2886, 68.3483, -68.0066, 0.24", "-41.2989, 69.6001, -69.5997, 1.44", "-41.3336, 70.6442, -70.842, 1.8", "-41.4575, 71.9999, -72.1955, 0.12", "-41.6094, 73.0729, -73.081, 0.12", "-41.6956, 73.6344, -73.5481, 0.96", "-41.7618, 74.113, -73.9312, 1.2", "-41.9473, 75.3545, -74.814, 0.12", "-42.0906, 76.3379, -75.4812, 0.12", "-42.1649, 76.9122, -75.8936, 0.36", "-42.3281, 78.0907, -76.9147, 0.12", "-42.4347, 78.6522, -77.4218, 0.12", "-42.6558, 79.6135, -78.3071, 0.48", "-42.9747, 80.8594, -79.5094, 0.48", "-43.341, 82.1549, -80.7742, 2.28", "-43.9801, 84.2784, -82.7858, 0.12", "-44.3466, 85.3704, -83.7727, 0.12", "-44.5672, 85.9644, -84.3251, 0.12", "-45.0298, 87.0734, -85.3432, 1.08", "-45.3144, 87.6376, -85.8974, 1.2", "-45.8991, 88.5002, -87.0609, 0.12", "-46.423, 89.0861, -88.0723, 0.12", "-47.2348, 89.929, -89.7455, 1.44", "-47.5233, 90.2151, -90.3397, 2.04", "-48.0802, 90.7214, -91.4194, 1.68", "-49.8458, 92.2002, -94.7655, 0.24", "-50.4536, 92.6623, -95.8842, 0.24", "-51.1105, 93.1433, -97.0799, 0.12", "-51.7569, 93.6053, -98.141, 0.72", "-52.0603, 93.8412, -98.6175, 0.72", "-52.355, 94.066, -99.0092, 0.12", "-53.3752, 94.8467, -100.131, 0.12", "-53.8748, 95.1461, -100.693, 0.12", "-54.9157, 95.5898, -101.759, 1.68", "-55.1447, 95.6799, -101.992, 1.68", "-57.0154, 96.5262, -104.062, 0.12", "-57.6515, 96.8694, -104.779, 0.12", "-58.1914, 97.2442, -105.471, 0.24", "-58.7367, 97.6956, -106.229, 0.24", "-59.5766, 98.5051, -107.459, 0.24", "-60.4138, 99.402, -108.594, 1.56", "-60.8982, 100.017, -109.234, 2.04", "-62.2164, 101.811, -110.899, 0.36", "-62.5972, 102.383, -111.376, 0.48", "-63.1512, 103.275, -112.128, 0.48", "-63.792, 104.237, -112.915, 0.48", "-64.1428, 104.716, -113.316, 0.24", "-64.56, 105.227, -113.837, 0.24", "-65.178, 105.916, -114.653, 0.24", "-66.0626, 106.796, -115.98, 1.08", "-66.4834, 107.133, -116.646, 1.08", "-67.1408, 107.435, -117.755, 0.36", "-67.9733, 107.617, -119.085, 0.36", "-68.2546, 107.625, -119.505, 0.36", "-68.5719, 107.596, -119.931, 0.36", "-69.0014, 107.536, -120.473, 0.36", "-70.8691, 107.269, -122.77, 1.68", "-71.2211, 107.22, -123.166, 2.4", "-71.4806, 107.191, -123.437, 2.64", "-74.2482, 106.906, -126.198, 0.6", "-74.5955, 106.86, -126.52, 0.12", "-75.0619, 106.792, -126.891, 0.12", "-75.6297, 106.687, -127.263, 0.6", "-76.213, 106.565, -127.645, 0.12", "-76.8615, 106.419, -127.997, 0.12", "-77.8932, 106.123, -128.344, 1.44", "-78.75, 105.878, -128.623, 1.08", "-80.9451, 105.341, -129.281, 0.12", "-81.8761, 105.188, -129.503, 0.12", "-83.0277, 105.083, -129.697, 0.84", "-83.4972, 105.067, -129.779, 0.84", "-83.8306, 105.067, -129.83, 0.12", "-84.5807, 105.043, -129.902, 0.12", "-85.6451, 104.992, -129.916, 1.44", "-86.0139, 104.96, -129.932, 1.56", "-87.5065, 104.825, -130.064, 0.12", "-88.6411, 104.737, -130.166, 0.12", "-89.334, 104.677, -130.226, 1.08", "-90.1623, 104.575, -130.336, 1.92", "-90.8355, 104.47, -130.468, 1.56", "-92.091, 104.27, -130.784, 0.12", "-92.5951, 104.184, -130.932, 0.12", "-92.9072, 104.131, -131.046, 0.48", "-94.2351, 103.914, -131.627, 0.48", "-94.8199, 103.831, -131.895, 0.12", "-95.743, 103.79, -132.15, 0.12", "-96.179, 103.847, -132.422, 0.84", "-96.5959, 103.912, -132.75, 1.2", "-97.2896, 104.033, -133.203, 0.12", "-98.2675, 104.136, -133.322, 0.12", "-100.475, 103.934, -131.783, 2.88", "-104.555, 103.072, -126.761, 0.96", "-105.185, 102.853, -125.561, 0.96", "-108.002, 101.412, -118.011, 0.12", "-108.291, 101.215, -117.011, 0.12", "-108.47, 101.045, -116.189, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-33.2322, 40.971, -42.7917, 0.48", "-34.5885, 40.4085, -43.3641, 0.48", "-35.1999, 40.1936, -43.8724, 0.48", "-36.0201, 40.0096, -44.8713, 0.48", "-36.4459, 39.9514, -45.4147, 2.16", "-36.6591, 39.9353, -45.6945, 2.52", "-36.9584, 39.9266, -46.0928, 2.52", "-38.1835, 39.9795, -48.0575, 1.44", "-38.9541, 40.0019, -49.3594, 0.36", "-39.2301, 39.9914, -49.8348, 0.48", "-39.7341, 39.927, -50.7185, 0.6", "-40.2304, 39.7702, -51.7955, 0.6", "-40.8147, 39.5074, -53.2735, 0.6", "-41.0598, 39.375, -53.9142, 1.92", "-41.2642, 39.2447, -54.4621, 2.64", "-41.4633, 39.1074, -55.005, 2.64", "-43.2562, 37.8013, -59.8682, 1.68", "-44.0599, 37.2222, -61.9752, 0.72", "-44.2208, 37.1171, -62.3665, 1.56", "-44.569, 36.9092, -63.1685, 1.92", "-44.733, 36.8202, -63.5109, 2.28", "-44.8793, 36.75, -63.773, 2.28", "-46.4824, 36.1276, -65.5327, 0.24", "-46.7499, 36.0172, -65.8118, 0.12", "-46.9324, 35.9289, -66.044, 0.12", "-47.2475, 35.7606, -66.4898, 0.12", "-47.811, 35.4292, -67.3208, 1.32", "-48.0676, 35.26, -67.7182, 2.16", "-48.4713, 34.9599, -68.347, 2.4", "-49.5953, 34.0269, -70.1457, 0.72", "-49.8969, 33.7478, -70.639, 0.84", "-50.0776, 33.5568, -70.9485, 1.08", "-50.611, 32.9362, -71.8331, 0.48", "-50.7424, 32.7765, -72.0404, 0.12", "-50.9984, 32.4518, -72.4066, 0.48", "-51.0916, 32.3278, -72.5115, 0.48", "-51.4912, 31.7528, -72.9681, 0.12", "-51.6345, 31.5326, -73.1315, 0.12", "-51.8143, 31.2343, -73.3576, 0.12", "-51.9205, 31.0538, -73.5628, 0.12", "-52.0356, 30.8612, -73.8341, 0.12", "-52.1466, 30.6858, -74.0731, 0.48", "-52.1939, 30.6046, -74.1744, 0.48", "-52.5151, 29.9354, -74.9192, 0.48", "-52.6873, 29.4859, -75.3471, 0.12", "-52.7541, 29.3287, -75.4843, 0.12", "-52.916, 28.9243, -75.7829, 0.12", "-53.1882, 28.2017, -76.3037, 1.8", "-53.3885, 27.7317, -76.6131, 2.76", "-53.5137, 27.437, -76.7748, 2.76", "-53.7344, 26.882, -77.0538, 1.92", "-53.9484, 26.2773, -77.3534, 1.92", "-54.3767, 24.7986, -78.1399, 0.12", "-54.5255, 24.1794, -78.4644, 0.12", "-54.5883, 23.8421, -78.666, 0.12", "-54.64, 23.4937, -78.8685, 0.48", "-54.6755, 23.1607, -79.0609, 0.6", "-54.7615, 22.4833, -79.4524, 0.12", "-54.7762, 22.2098, -79.5858, 0.12", "-54.7922, 20.897, -80.2747, 2.4", "-54.8387, 20.2324, -80.6614, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-15.8059, -179.967, -26.2232, 0.12", "-16.0755, -181.065, -26.5155, 0.12", "-16.2227, -181.412, -26.5796, 0.12", "-16.4412, -181.8, -26.5985, 0.36", "-16.8153, -182.396, -26.5837, 0.48", "-17.0026, -182.685, -26.5676, 0.12", "-17.2698, -183.126, -26.5385, 0.12", "-17.7064, -183.798, -26.4243, 0.36", "-18.022, -184.226, -26.2166, 0.12", "-18.3217, -184.547, -25.9813, 0.12", "-18.5819, -184.753, -25.7953, 0.12", "-18.9908, -185.068, -25.4818, 0.12", "-19.6217, -185.528, -24.9706, 0.36", "-20.62, -186.188, -24.1611, 0.12", "-21.3138, -186.587, -23.6172, 0.12", "-22.3894, -187.057, -22.7716, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-15.8059, -179.967, -26.2232, 0.12", "-15.2638, -180.305, -26.5166, 0.12", "-14.8296, -180.562, -26.7825, 0.12", "-14.3552, -180.845, -27.0761, 0.48", "-13.9985, -181.059, -27.2975, 0.12", "-13.2967, -181.48, -27.733, 0.12", "-12.5661, -181.918, -28.1863, 0.12", "-11.7421, -182.38, -28.7603, 2.52", "-11.5553, -182.481, -28.8988, 2.28", "-11.5321, -182.494, -28.9157, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "31.5139, -32.2767, -29.0546, 0.48", "31.0555, -34.106, -30.8095, 0.48", "30.9924, -34.4006, -31.0471, 0.36", "30.9323, -34.7194, -31.2765, 0.36", "30.8678, -35.0845, -31.5156, 0.84", "30.7733, -35.6662, -31.8704, 1.32", "30.6864, -36.4492, -32.3058, 0.48", "30.6789, -37.09, -32.5235, 0.36", "30.6896, -37.3826, -32.6157, 0.36", "30.7237, -37.7601, -32.7371, 0.48", "30.7757, -38.1559, -32.862, 0.36", "30.9, -38.9093, -33.1045, 0.36", "30.973, -39.3312, -33.2451, 0.36", "31.0019, -39.7039, -33.3816, 0.48", "31.0113, -40.1615, -33.5593, 0.36", "30.9936, -40.6234, -33.7445, 0.36", "30.9773, -40.8075, -33.8189, 0.36", "30.7648, -42.4177, -34.471, 3.49", "30.5297, -43.9493, -35.0637, 0.12", "30.4853, -44.2187, -35.1638, 0.12", "30.4122, -44.6347, -35.3068, 0.36", "30.3854, -44.7772, -35.3542, 0.12", "30.2768, -45.2758, -35.5068, 0.12", "30.1308, -45.7524, -35.6236, 0.6", "30.0373, -46.0403, -35.6783, 0.6", "29.8605, -46.5076, -35.7732, 0.36", "29.7855, -46.6876, -35.8168, 0.24", "29.6538, -46.9693, -35.8943, 0.24", "29.489, -47.2748, -35.9866, 1.08", "29.1116, -47.9616, -36.2039, 1.8", "28.8212, -48.4923, -36.3486, 1.56", "28.5678, -48.9774, -36.44, 0.96", "28.4044, -49.3507, -36.4942, 0.24", "28.1217, -50.0899, -36.5869, 0.24", "27.9925, -50.4696, -36.628, 0.24", "27.7681, -51.1959, -36.6965, 0.24", "27.3458, -52.6717, -36.8209, 3.25", "26.9917, -54.045, -36.9337, 0.24", "26.9239, -54.341, -36.9603, 0.24", "26.7287, -55.3121, -37.0643, 0.24", "26.6421, -55.7906, -37.1284, 0.48", "26.6147, -55.985, -37.1639, 0.12", "26.4934, -57.3446, -37.4457, 0.12", "26.4846, -57.4826, -37.4736, 0.84", "26.4627, -57.9758, -37.5734, 1.08", "26.442, -58.5446, -37.6909, 0.12", "26.4032, -59.5396, -37.8965, 0.12", "26.353, -60.6437, -38.1249, 2.4", "26.2863, -61.8228, -38.3692, 0.24", "26.2508, -62.2998, -38.4767, 0.24", "26.1913, -62.8786, -38.6164, 0.36", "26.1489, -63.1806, -38.6969, 0.24", "26.1164, -63.3696, -38.7519, 0.24", "26.0611, -63.6376, -38.8503, 0.24", "25.9463, -64.1454, -39.0789, 0.24", "25.8893, -64.4679, -39.2262, 0.84", "25.85, -64.7877, -39.3687, 0.84", "25.8219, -65.0804, -39.4819, 0.84", "25.7893, -65.513, -39.617, 0.12", "25.7695, -65.7349, -39.6761, 0.12", "25.7186, -66.3814, -39.8185, 0.12", "25.696, -66.6945, -39.8839, 1.32", "25.6378, -67.3714, -40.0493, 1.68", "25.5547, -68.2328, -40.2764, 1.2", "25.5109, -68.7363, -40.4657, 0.12", "25.4921, -68.9242, -40.552, 0.12", "25.4261, -69.4512, -40.8253, 0.12", "25.3136, -70.2054, -41.2423, 1.32", "25.2297, -70.7085, -41.536, 2.04", "25.0145, -72.0668, -42.3219, 0.36", "24.8997, -72.8454, -42.7438, 0.36", "24.7967, -73.4615, -43.0344, 0.36", "24.7419, -73.7918, -43.165, 0.36", "24.6767, -74.1608, -43.2755, 0.36", "24.5325, -74.9355, -43.4497, 1.92", "24.4227, -75.519, -43.5259, 2.52", "24.2397, -76.6074, -43.6595, 0.24", "24.1537, -77.1369, -43.6822, 0.24", "24.0692, -77.6625, -43.6812, 0.84", "23.9732, -78.2522, -43.6598, 1.08", "23.8661, -78.8613, -43.5949, 0.36", "23.7491, -79.6368, -43.4722, 0.36", "23.5899, -80.9854, -43.2106, 1.44", "23.5306, -81.5813, -43.0798, 1.92", "23.5002, -82.014, -42.9837, 1.56", "23.4367, -83.007, -42.7191, 0.12", "23.4089, -83.4848, -42.5883, 0.12", "23.3855, -83.9668, -42.4649, 0.12", "23.3801, -84.1044, -42.4375, 0.48", "23.3502, -84.8802, -42.2776, 0.84", "23.2773, -86.3743, -42.008, 0.12", "23.2481, -86.9888, -41.923, 0.12", "23.2301, -87.275, -41.8799, 0.24", "23.2058, -87.6796, -41.8177, 0.24", "23.1867, -87.9907, -41.7757, 0.24", "23.161, -88.3774, -41.7351, 0.48", "23.1438, -88.5995, -41.7325, 0.6", "23.1086, -88.9705, -41.7246, 0.12", "23.0787, -89.276, -41.7145, 0.12", "23.0469, -89.5729, -41.7016, 0.12", "22.9261, -90.6169, -41.6509, 2.4", "22.8555, -91.2097, -41.6225, 2.88", "22.7766, -91.8021, -41.6044, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "31.5139, -32.2767, -29.0546, 0.12", "31.9693, -33.0953, -27.7547, 0.12", "32.1798, -33.3767, -27.2383, 0.12", "32.5401, -33.7397, -26.499, 0.72", "33.3685, -34.3776, -25.0428, 0.72", "33.7705, -34.6024, -24.4715, 0.12", "34.1149, -34.7578, -24.0697, 0.12", "34.718, -34.9325, -23.4173, 1.68", "35.1514, -35.0221, -23.0257, 2.28", "35.945, -35.1425, -22.4675, 1.92", "36.8803, -35.3354, -21.8075, 0.36", "37.6354, -35.5791, -21.2007, 0.36", "38.1632, -35.8852, -20.61, 0.6", "38.3511, -36.0814, -20.2448, 0.36", "38.4951, -36.2913, -19.8672, 0.36", "39.1563, -37.4785, -17.7838, 0.36", "39.264, -37.7023, -17.4019, 1.2", "39.5835, -38.4704, -16.08, 1.92", "40.054, -39.6572, -14.0701, 0.24", "40.2931, -40.2563, -13.0375, 2.16", "40.3922, -40.4721, -12.6648, 3.0", "40.5735, -40.7037, -12.2578, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.65123, -245.377, -32.7668, 0.12", "3.11015, -245.32, -33.0534, 0.12", "3.32317, -245.309, -33.1673, 0.12", "3.44116, -245.309, -33.2245, 0.12", "3.81624, -245.316, -33.3939, 0.6", "3.9788, -245.319, -33.4673, 0.6", "4.27532, -245.324, -33.6012, 0.12", "4.73333, -245.354, -33.7683, 0.12", "4.88449, -245.37, -33.8257, 0.84", "5.0065, -245.388, -33.8708, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "2.65123, -245.377, -32.7668, 1.56", "2.75081, -245.836, -32.7363, 1.56", "2.88881, -246.471, -32.694, 2.28", "2.97023, -246.846, -32.669, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.4873, 83.6081, 10.2954, 0.48", "16.362, 86.6533, 11.132, 0.48", "16.6194, 87.7314, 11.3555, 0.36", "16.8301, 88.8398, 11.5327, 0.36", "16.9844, 89.9886, 11.676, 0.36", "17.0645, 90.9686, 11.7833, 0.36", "17.0822, 91.531, 11.8358, 0.72", "17.0286, 92.1171, 11.7944, 0.72", "16.9362, 92.8277, 11.7506, 0.36", "16.7946, 93.7089, 11.7085, 0.36", "16.6845, 94.4919, 11.6848, 1.2", "16.5882, 95.3844, 11.675, 1.8", "16.4836, 96.6234, 11.7051, 1.8", "16.3777, 98.3374, 11.8004, 0.36", "16.3564, 98.8976, 11.8051, 0.36", "16.3478, 100.066, 11.8036, 0.72", "16.3617, 100.639, 11.7985, 0.84", "16.4108, 101.89, 11.7981, 0.36", "16.4515, 102.889, 11.8108, 1.08", "16.5227, 105.0, 11.7729, 2.64", "16.5633, 106.372, 11.7114, 3.61", "16.5737, 107.009, 11.6468, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.4873, 83.6081, 10.2954, 0.6", "15.308, 84.4862, 10.2516, 0.6", "15.2451, 85.082, 10.1795, 0.6", "15.2031, 85.907, 10.0015, 0.6", "15.1885, 86.2705, 9.86295, 0.6", "15.1552, 86.7982, 9.63863, 1.68", "15.1081, 87.3184, 9.40868, 2.04", "15.0922, 87.6517, 9.21992, 1.8", "15.0381, 88.058, 8.93514, 2.04", "14.7904, 88.7302, 8.39077, 0.48", "14.592, 89.0414, 8.15466, 0.48", "14.4899, 89.1528, 8.08459, 0.72", "14.2375, 89.4017, 7.95681, 0.96", "13.8972, 89.7351, 7.8005, 0.72", "13.6216, 90.0252, 7.68652, 1.32", "13.3909, 90.3132, 7.58825, 1.8", "13.0841, 90.7787, 7.42835, 1.8", "12.866, 91.1756, 7.30679, 0.96", "12.6549, 91.6231, 7.16504, 0.72", "12.5069, 91.9582, 7.05091, 0.84", "12.2267, 92.5754, 6.79849, 1.56", "12.0762, 92.8961, 6.64482, 2.52", "11.9414, 93.1696, 6.50252, 2.52", "11.5458, 93.8958, 6.11186, 2.4", "11.1936, 94.495, 5.77404, 1.56", "10.9182, 94.9416, 5.50101, 0.84", "10.7126, 95.2631, 5.29658, 0.48", "10.6323, 95.3922, 5.21016, 0.24", "10.4127, 95.7465, 4.97895, 0.24", "10.2433, 96.0335, 4.72533, 0.48", "10.1495, 96.2118, 4.52463, 0.12", "10.0758, 96.3803, 4.32163, 0.12", "9.89712, 96.8131, 3.78332, 1.2", "9.80243, 97.0538, 3.48668, 1.56", "9.3525, 98.23, 2.06342, 0.36", "9.21349, 98.6104, 1.64665, 0.12", "8.97485, 99.2801, 1.02227, 2.64", "8.90415, 99.4899, 0.867387, 3.0", "8.7845, 99.8445, 0.75153, 2.76", "8.36535, 100.97, 0.78686, 0.48", "7.51053, 103.107, 1.32621, 0.48", "7.33862, 103.567, 1.37705, 0.48", "7.26725, 103.868, 1.26559, 0.48", "7.24531, 104.205, 1.00256, 0.36", "7.2801, 104.805, 0.373218, 0.36", "7.38822, 105.394, -0.343075, 0.36", "7.59299, 106.205, -1.31546, 2.16", "7.70028, 106.504, -1.67543, 3.0", "7.75827, 106.638, -1.82718, 3.12", "8.06009, 107.223, -2.44818, 3.0", "8.5472, 108.095, -3.29785, 0.12", "8.77474, 108.508, -3.65982, 0.12", "8.83986, 108.633, -3.75625, 0.12", "9.13511, 109.176, -4.19575, 2.52", "9.2578, 109.398, -4.36552, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "19.9562, 59.1969, 7.98583, 0.6", "19.2374, 59.6175, 9.41939, 0.6", "18.9582, 59.7809, 9.97632, 0.6", "18.5633, 60.012, 10.7639, 0.24", "18.2937, 60.1697, 11.3015, 0.24", "18.0092, 60.3362, 11.8689, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.9562, 59.1969, 7.98583, 0.6", "20.6482, 60.2777, 8.38029, 0.6", "21.4442, 61.6156, 8.87499, 0.72", "21.9739, 62.5848, 9.20518, 1.08", "22.2551, 63.1464, 9.36042, 1.44", "22.5887, 63.8324, 9.55626, 1.56", "23.1123, 64.9327, 9.8536, 1.44", "23.8, 66.4833, 10.2518, 1.56", "24.2119, 67.5067, 10.5047, 1.68", "24.5566, 68.39, 10.7838, 1.68", "24.9134, 69.3124, 11.1246, 1.68", "25.4412, 70.7173, 11.6955, 0.6", "25.8176, 71.7857, 12.1537, 0.36", "26.1052, 72.6215, 12.4431, 0.36", "26.4913, 73.7319, 12.7751, 1.44", "26.7038, 74.3143, 12.9161, 1.56", "27.038, 75.2467, 13.04, 1.56", "27.2017, 75.7032, 13.0548, 1.44", "27.8056, 77.3004, 13.0501, 0.72", "28.0614, 77.8956, 13.0448, 0.6", "28.5188, 78.8525, 13.0419, 1.2", "28.7519, 79.2901, 13.0602, 1.32", "29.3354, 80.2622, 13.1276, 0.84", "30.373, 81.752, 13.3402, 1.08", "31.1202, 82.6959, 13.5402, 0.96", "31.7631, 83.4309, 13.6711, 0.48", "32.2893, 84.008, 13.7522, 0.48", "32.903, 84.6498, 13.8136, 0.6", "33.8349, 85.6026, 13.8463, 0.96", "34.1401, 85.9232, 13.8438, 0.96", "35.2447, 87.1774, 13.8518, 1.68", "36.2704, 88.4507, 13.8596, 2.28", "37.1101, 89.6123, 13.8806, 2.16", "37.6318, 90.4767, 13.9095, 1.92", "38.2108, 91.7173, 13.9245, 0.6", "38.6823, 93.1135, 13.9312, 0.6", "38.9171, 93.9898, 13.9448, 0.6", "39.0887, 94.9203, 13.9461, 0.48", "39.2249, 96.5109, 13.94, 0.48", "39.2212, 98.0264, 13.8925, 0.48", "39.0659, 99.3768, 13.7406, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-30.8952, 119.369, -36.2784, 0.48", "-31.2162, 121.275, -36.1207, 0.48", "-31.2842, 121.903, -36.0442, 0.12", "-31.4054, 123.161, -35.8759, 0.36", "-31.4868, 124.106, -35.753, 0.48", "-31.531, 124.794, -35.6728, 0.48", "-31.5736, 125.653, -35.5886, 0.48", "-31.5724, 127.11, -35.5137, 1.68", "-31.5565, 127.536, -35.5241, 2.16", "-31.5245, 128.101, -35.5907, 2.4", "-31.4761, 128.773, -35.7014, 2.4", "-31.4035, 129.589, -35.8285, 1.92", "-31.2882, 130.815, -36.0232, 0.12", "-31.2337, 131.3, -36.1093, 0.24", "-31.1803, 131.74, -36.1717, 0.24", "-31.0652, 132.697, -36.2713, 0.48", "-30.9145, 133.912, -36.3509, 0.48", "-30.8626, 134.311, -36.3627, 1.32", "-30.7625, 134.994, -36.3699, 1.68", "-30.6649, 135.664, -36.4159, 1.8", "-30.5793, 136.271, -36.4957, 1.92", "-30.5314, 136.642, -36.5755, 1.92", "-30.437, 137.566, -36.8381, 0.48", "-30.3454, 138.687, -37.2208, 0.48", "-30.2907, 139.667, -37.5721, 0.72", "-30.2443, 140.733, -37.937, 0.72", "-30.2381, 141.745, -38.406, 0.36", "-30.2638, 142.469, -38.8128, 0.36", "-30.3452, 143.373, -39.3807, 0.72", "-30.4556, 144.277, -39.9024, 1.08", "-30.5693, 145.165, -40.3536, 1.32", "-30.9726, 148.026, -41.5705, 0.48", "-31.0885, 148.811, -41.822, 0.36", "-31.3034, 150.266, -42.1528, 0.36", "-31.6146, 152.252, -42.5172, 0.36", "-31.7175, 152.929, -42.6375, 1.92", "-31.8197, 153.892, -42.7842, 3.0", "-31.8487, 154.569, -42.8534, 3.25", "-31.8566, 155.655, -43.0509, 3.25", "-31.8265, 157.739, -43.5937, 0.36", "-31.8184, 158.505, -43.8445, 0.48", "-31.8064, 160.091, -44.3639, 0.48", "-31.8123, 161.324, -44.7585, 0.48", "-31.8654, 162.482, -45.1069, 0.48", "-31.9176, 163.014, -45.2496, 0.96", "-31.9903, 163.556, -45.3686, 1.2", "-32.1545, 164.532, -45.5646, 0.84", "-32.3777, 165.737, -45.7879, 0.48", "-32.5755, 166.968, -46.0004, 0.36", "-32.6668, 167.92, -46.1587, 0.36", "-32.6869, 169.194, -46.3932, 0.36", "-32.6458, 169.987, -46.5649, 1.32", "-32.535, 171.128, -46.8361, 2.28", "-32.4478, 171.834, -47.0142, 2.76", "-32.3289, 172.793, -47.2631, 2.4", "-32.1638, 174.683, -47.755, 1.08", "-32.1146, 176.028, -48.0944, 0.36", "-32.1326, 177.094, -48.3456, 0.36", "-32.2027, 178.193, -48.6124, 1.68", "-32.2713, 178.864, -48.7773, 2.28", "-32.4137, 179.937, -49.0042, 2.4", "-32.6747, 181.593, -49.2991, 1.68", "-32.9993, 183.6, -49.5925, 1.08", "-33.1614, 184.577, -49.7278, 0.6", "-33.3092, 185.388, -49.8357, 0.6", "-33.5511, 186.741, -50.0159, 1.44", "-33.6681, 187.406, -50.1113, 1.8", "-33.811, 188.214, -50.2426, 1.8", "-33.98, 189.316, -50.4388, 0.48", "-34.1892, 190.93, -50.7324, 0.48", "-34.3739, 192.356, -51.0757, 1.2", "-34.5672, 193.979, -51.5463, 1.68", "-34.6707, 195.102, -51.8893, 2.28", "-34.8019, 196.715, -52.3732, 2.52", "-34.9721, 198.865, -52.9534, 1.2", "-35.096, 200.307, -53.2572, 0.6", "-35.2007, 201.211, -53.3828, 0.48", "-35.4059, 202.548, -53.4444, 0.48", "-35.6007, 203.634, -53.3705, 0.48", "-35.8115, 204.734, -53.1738, 0.48", "-36.0439, 206.032, -52.8241, 0.48", "-36.1599, 206.817, -52.587, 0.48", "-36.2658, 207.627, -52.443, 0.48", "-36.3758, 208.753, -52.4455, 1.08", "-36.4231, 209.783, -52.6506, 1.68", "-36.4446, 210.6, -52.9322, 2.04", "-36.4528, 211.36, -53.2621, 2.04", "-36.4591, 213.467, -54.2413, 0.96", "-36.47, 214.248, -54.6206, 0.48", "-36.4894, 214.989, -54.9908, 0.48", "-36.526, 216.116, -55.5116, 1.56", "-36.5506, 216.549, -55.682, 2.16", "-36.6214, 217.429, -56.0733, 2.64", "-36.679, 218.048, -56.3464, 2.64", "-36.7541, 218.837, -56.7388, 3.12", "-36.8172, 219.547, -57.1369, 3.12", "-36.9153, 220.885, -57.9248, 0.6", "-37.0272, 223.198, -59.2706, 0.48", "-37.0412, 224.074, -59.7603, 0.36", "-37.0355, 224.615, -60.0353, 0.36", "-37.0144, 225.585, -60.4147, 0.96", "-36.9592, 226.836, -60.7652, 0.96", "-36.899, 228.05, -60.9646, 0.72", "-36.8916, 229.043, -61.0392, 0.48", "-36.9484, 230.301, -61.1658, 0.48", "-37.1222, 232.199, -61.3988, 1.2", "-37.2462, 233.149, -61.5376, 1.68", "-37.4405, 234.352, -61.7402, 2.04", "-37.6673, 235.654, -61.9895, 1.8", "-37.9475, 237.277, -62.3417, 0.6", "-38.1232, 238.348, -62.6056, 0.48", "-38.3219, 239.674, -62.9783, 0.48", "-38.4812, 240.992, -63.3515, 0.48", "-38.5386, 241.76, -63.5599, 0.48", "-38.5511, 242.446, -63.7221, 1.08", "-38.5385, 243.397, -63.8988, 1.32", "-38.5191, 243.94, -64.0001, 1.32", "-38.4518, 244.926, -64.1673, 0.72", "-38.3984, 245.54, -64.2791, 0.48", "-38.3274, 246.413, -64.4423, 0.72", "-38.2527, 247.368, -64.6449, 1.08", "-38.1863, 248.39, -64.898, 1.32", "-38.1327, 249.609, -65.2425, 0.48", "-38.1258, 250.657, -65.6121, 0.48", "-38.132, 251.676, -66.0325, 0.48", "-38.1445, 252.797, -66.532, 1.44", "-38.1593, 253.782, -66.9732, 2.28", "-38.1821, 254.979, -67.4949, 1.92", "-38.2129, 256.691, -68.2078, 0.48", "-38.2203, 258.019, -68.6921, 0.48", "-38.2177, 258.984, -68.9777, 0.72", "-38.2218, 259.712, -69.1264, 0.48", "-38.2489, 260.453, -69.2008, 0.36", "-38.3883, 261.568, -69.3292, 0.36", "-38.637, 262.63, -69.5108, 0.36", "-39.0242, 263.761, -69.8138, 1.8", "-39.48, 264.853, -70.1963, 3.0", "-39.9861, 265.904, -70.6316, 3.25", "-41.4003, 268.412, -71.8833, 1.8", "-42.0406, 269.439, -72.47, 0.48", "-42.4318, 270.044, -72.8507, 0.48", "-42.6912, 270.468, -73.126, 0.72", "-42.991, 271.046, -73.4607, 0.48", "-43.4124, 272.24, -73.9746, 0.36", "-43.5919, 273.297, -74.2057, 0.36", "-43.6466, 273.992, -74.3205, 0.72", "-43.6823, 275.249, -74.476, 1.08", "-43.6854, 276.284, -74.569, 1.2", "-43.6566, 277.892, -74.6332, 0.72", "-43.6124, 279.42, -74.6275, 0.36", "-43.5896, 280.426, -74.6116, 0.36", "-43.5843, 281.776, -74.5559, 0.36", "-43.6052, 283.015, -74.4821, 0.36", "-43.6793, 284.411, -74.4331, 1.92", "-43.7594, 285.249, -74.415, 2.76", "-43.7938, 285.513, -74.4154, 3.12", "-43.9794, 286.821, -74.4487, 2.76", "-44.0431, 287.254, -74.4779, 2.76", "-44.2801, 288.873, -74.624, 0.48", "-44.4701, 290.085, -74.7697, 0.48", "-44.5821, 290.757, -74.8511, 0.96", "-44.6911, 291.384, -74.9298, 0.6", "-44.8377, 292.183, -75.036, 0.48", "-44.9592, 292.869, -75.1093, 0.36", "-45.2015, 294.505, -75.1874, 0.36", "-45.2902, 295.194, -75.2146, 0.48", "-45.3658, 295.881, -75.2528, 0.36", "-45.432, 296.697, -75.297, 0.36", "-45.472, 297.304, -75.3222, 0.36", "-45.5411, 298.386, -75.4129, 1.2", "-45.6005, 299.059, -75.5007, 2.04", "-45.6851, 299.847, -75.5939, 2.16", "-45.8194, 300.834, -75.7032, 1.68", "-45.9999, 301.918, -75.82, 0.48", "-46.2221, 303.16, -75.9595, 0.36", "-46.6721, 305.579, -76.2256, 0.36", "-46.8719, 306.684, -76.3345, 1.2", "-46.9675, 307.244, -76.3951, 0.84", "-47.094, 308.047, -76.4997, 0.48", "-47.281, 309.497, -76.7395, 0.36", "-47.351, 310.112, -76.8905, 0.36", "-47.4189, 310.803, -77.1609, 1.44", "-47.5239, 311.779, -77.6169, 1.92", "-47.5891, 312.388, -77.9109, 2.04", "-47.6968, 313.412, -78.4034, 2.04", "-47.8558, 314.912, -79.0254, 0.48", "-48.0425, 316.604, -79.5996, 0.48", "-48.1112, 317.26, -79.7698, 0.6", "-48.1583, 317.697, -79.8496, 0.48", "-48.298, 318.981, -80.0259, 0.48", "-48.5097, 320.778, -80.1541, 2.64", "-48.6492, 321.9, -80.1636, 3.49", "-48.7179, 322.385, -80.1591, 3.49", "-48.821, 323.083, -80.1527, 3.49", "-49.1236, 325.025, -80.1513, 0.48", "-49.3258, 326.296, -80.1551, 0.72", "-49.4618, 327.202, -80.1767, 0.48", "-49.5469, 327.894, -80.1945, 0.48", "-49.6411, 328.793, -80.2231, 1.32", "-49.6709, 329.352, -80.2506, 1.56", "-49.6578, 330.18, -80.3073, 1.56", "-49.6016, 331.002, -80.4069, 0.48", "-49.513, 331.981, -80.5611, 0.48", "-49.4464, 332.703, -80.6698, 0.6", "-49.3655, 333.795, -80.8206, 0.6", "-49.3169, 334.693, -80.9354, 0.36", "-49.297, 335.421, -81.034, 0.36", "-49.3243, 336.378, -81.1675, 0.36", "-49.4075, 337.13, -81.2884, 1.32", "-49.5304, 337.806, -81.3943, 1.56", "-49.6668, 338.338, -81.4674, 1.32", "-49.856, 338.99, -81.5497, 0.36", "-50.1045, 339.949, -81.6655, 0.36", "-50.2648, 340.728, -81.7666, 1.2", "-50.3832, 341.557, -81.8974, 1.2", "-50.4845, 342.534, -82.0713, 0.36", "-50.5508, 343.482, -82.2516, 0.36", "-50.5868, 344.461, -82.4425, 0.48", "-50.5996, 345.191, -82.615, 0.48", "-50.6205, 346.205, -82.8882, 0.48", "-50.6286, 346.47, -82.9738, 0.48", "-50.6469, 347.126, -83.1984, 0.72", "-50.6725, 348.054, -83.5063, 0.72", "-50.6892, 348.554, -83.651, 0.48", "-50.7052, 349.372, -83.8514, 0.48", "-50.7114, 350.348, -84.0488, 1.08", "-50.6971, 351.201, -84.1862, 1.68", "-50.672, 351.99, -84.2987, 1.68", "-50.6504, 352.856, -84.4217, 0.84", "-50.6376, 353.407, -84.5179, 0.72", "-50.6358, 354.471, -84.8127, 0.72", "-50.6551, 355.616, -85.2247, 1.32", "-50.6771, 356.279, -85.5038, 2.4", "-50.7243, 357.234, -85.9508, 2.76", "-50.7881, 358.18, -86.4132, 2.04", "-50.9199, 359.827, -87.2139, 0.48", "-50.989, 360.603, -87.5845, 0.48", "-51.0516, 361.243, -87.8732, 0.6", "-51.0827, 361.618, -88.0174, 0.48", "-51.1842, 363.194, -88.4907, 0.48", "-51.2242, 363.872, -88.6353, 0.72", "-51.2378, 364.572, -88.7304, 1.08", "-51.2367, 365.127, -88.7996, 0.72", "-51.2158, 365.868, -88.8698, 0.48", "-51.1983, 366.558, -88.9456, 0.24", "-51.1771, 367.286, -89.0369, 0.24", "-51.16, 369.098, -89.3173, 3.12", "-51.1584, 369.631, -89.4122, 3.37", "-51.1629, 370.596, -89.601, 3.0", "-51.2389, 372.389, -89.9668, 0.48", "-51.3482, 373.659, -90.2338, 0.48", "-51.4811, 374.815, -90.4648, 0.84", "-51.5828, 375.602, -90.6127, 0.48", "-51.7051, 376.839, -90.7801, 0.48", "-51.801, 378.312, -90.9017, 0.48", "-51.8137, 378.907, -90.9049, 0.48", "-51.8165, 380.0, -90.8661, 0.48", "-51.7947, 380.668, -90.8226, 0.96", "-51.7245, 381.947, -90.7805, 1.56", "-51.6691, 382.442, -90.7704, 1.56", "-51.5314, 383.355, -90.8449, 0.48", "-51.5016, 383.624, -90.9007, 0.36", "-51.4993, 384.451, -91.1489, 0.36", "-51.5658, 385.684, -91.5697, 1.8", "-51.6383, 386.523, -91.8756, 2.64", "-51.7889, 388.102, -92.4255, 1.56", "-51.8927, 389.249, -92.7913, 0.36", "-52.0006, 390.542, -93.1812, 0.48", "-52.1241, 392.152, -93.5745, 0.48", "-52.1691, 392.695, -93.7031, 0.48", "-52.2167, 393.513, -93.8955, 1.32", "-52.2142, 393.954, -93.9777, 1.68", "-52.1647, 394.555, -94.0526, 1.92", "-52.0066, 396.1, -94.2204, 0.84", "-51.9212, 397.635, -94.3494, 0.48", "-51.9015, 398.902, -94.4123, 0.48", "-51.9217, 399.587, -94.4304, 0.48", "-52.0369, 401.075, -94.4519, 0.48", "-52.2087, 402.519, -94.4066, 0.72", "-52.3531, 403.474, -94.3468, 1.32", "-52.5162, 404.416, -94.2525, 0.84", "-52.6494, 405.093, -94.171, 0.36", "-52.7977, 405.905, -94.0797, 0.36", "-52.9404, 406.969, -93.9825, 0.84", "-52.9643, 407.547, -93.9226, 0.36", "-52.9374, 408.781, -93.7763, 0.36", "-52.8386, 410.217, -93.6182, 0.84", "-52.7737, 410.827, -93.5493, 0.84", "-52.6866, 411.52, -93.4968, 0.36", "-52.4975, 412.973, -93.4632, 0.36", "-52.4076, 413.838, -93.4734, 1.2", "-52.3456, 414.83, -93.5324, 2.16", "-52.3454, 415.137, -93.5712, 2.28", "-52.3866, 416.725, -93.8135, 0.6", "-52.4151, 417.443, -93.9263, 0.36", "-52.4402, 418.296, -94.0599, 0.36", "-52.4337, 418.789, -94.1412, 0.36", "-52.4043, 419.324, -94.2155, 0.36", "-52.2678, 420.794, -94.3859, 0.36", "-52.1462, 421.819, -94.4894, 1.08", "-52.003, 422.917, -94.6079, 1.56", "-51.8253, 424.188, -94.7649, 0.72", "-51.7759, 424.633, -94.8279, 0.48", "-51.7144, 425.615, -94.9807, 0.48", "-51.7194, 426.721, -95.1681, 1.68", "-51.7501, 427.544, -95.3443, 2.52", "-51.8049, 428.503, -95.6082, 1.92", "-51.8772, 429.816, -96.0317, 0.72", "-51.9, 430.581, -96.3198, 0.6", "-51.9038, 431.716, -96.8167, 0.6", "-51.8527, 433.186, -97.5134, 0.6", "-51.7829, 434.563, -98.1877, 1.44", "-51.7438, 435.172, -98.4885, 1.92", "-51.6582, 436.365, -99.0451, 0.96", "-51.6021, 437.231, -99.4081, 0.36", "-51.5626, 438.24, -99.7323, 0.36", "-51.5517, 439.086, -99.9089, 0.36", "-51.5398, 439.91, -100.007, 0.72", "-51.5369, 440.917, -100.193, 0.36", "-51.5284, 441.768, -100.395, 0.24", "-51.4852, 443.133, -100.801, 2.04", "-51.4723, 443.39, -100.9, 2.04", "-51.3906, 444.475, -101.376, 1.92", "-51.1695, 446.769, -102.488, 0.48", "-51.0676, 447.689, -102.96, 0.48", "-50.9637, 448.606, -103.437, 0.72", "-50.8302, 449.906, -104.097, 0.84", "-50.7149, 451.464, -104.844, 0.36", "-50.6874, 452.073, -105.105, 0.24", "-50.6805, 453.017, -105.42, 1.2", "-50.6952, 453.311, -105.515, 1.68", "-50.8076, 454.353, -105.834, 1.56", "-50.9758, 455.419, -106.13, 0.36", "-51.1364, 456.2, -106.322, 0.36", "-51.4639, 457.669, -106.632, 0.36", "-51.6142, 458.326, -106.758, 1.32", "-51.7651, 458.998, -106.873, 1.8", "-51.8793, 459.54, -106.954, 1.68", "-52.1168, 460.743, -107.103, 0.48", "-52.4119, 462.36, -107.307, 0.48", "-52.5696, 463.298, -107.43, 1.8", "-52.719, 464.097, -107.531, 2.4", "-52.8344, 464.655, -107.575, 1.92", "-53.1279, 465.985, -107.59, 0.6", "-53.2101, 466.355, -107.563, 0.6", "-53.4838, 467.547, -107.4, 0.6", "-53.7326, 468.674, -107.204, 0.6", "-54.0801, 470.22, -106.94, 0.6", "-54.4539, 471.83, -106.702, 0.6", "-54.7653, 473.163, -106.556, 1.56", "-54.9578, 473.971, -106.528, 2.04", "-55.1678, 474.825, -106.578, 1.68", "-55.459, 475.993, -106.758, 0.84", "-55.7302, 476.969, -107.011, 0.48", "-56.2233, 478.473, -107.476, 0.48", "-56.7358, 479.927, -107.949, 0.6", "-57.1338, 481.017, -108.28, 1.32", "-57.4617, 481.886, -108.519, 1.44", "-57.87, 482.959, -108.772, 0.48", "-58.6118, 484.952, -109.195, 0.48", "-58.8375, 485.596, -109.321, 1.32", "-59.168, 486.637, -109.495, 2.04", "-59.3928, 487.426, -109.628, 1.68", "-59.6761, 488.532, -109.828, 0.6", "-59.9294, 489.656, -110.05, 0.48", "-60.1667, 490.868, -110.324, 0.48", "-60.3214, 491.652, -110.508, 0.48", "-60.5373, 492.768, -110.776, 0.72", "-60.6874, 493.552, -110.962, 0.72", "-60.7976, 494.19, -111.103, 0.36", "-60.9695, 495.122, -111.298, 0.36", "-61.085, 495.918, -111.457, 1.8", "-61.1378, 496.721, -111.611, 2.4", "-61.1529, 497.809, -111.798, 2.4", "-61.1403, 499.092, -112.036, 0.48", "-61.1357, 499.396, -112.094, 0.48", "-61.1364, 500.528, -112.371, 0.48", "-61.1542, 501.563, -112.681, 0.48", "-61.2317, 502.618, -113.075, 0.48", "-61.3275, 503.211, -113.332, 1.08", "-61.4909, 503.753, -113.58, 1.92", "-61.8584, 504.665, -113.973, 2.16", "-62.089, 505.157, -114.158, 2.16", "-62.6304, 506.314, -114.538, 0.72", "-62.8495, 506.863, -114.68, 0.48", "-63.2178, 507.967, -114.89, 0.48", "-63.5065, 509.021, -115.053, 0.48", "-63.8563, 510.651, -115.212, 0.48", "-63.9608, 511.336, -115.265, 0.48", "-64.0555, 512.331, -115.319, 1.32", "-64.1104, 513.296, -115.37, 1.92", "-64.1382, 514.451, -115.382, 1.56", "-64.1582, 515.441, -115.355, 0.36", "-64.1812, 516.738, -115.258, 0.36", "-64.1947, 517.729, -115.16, 0.6", "-64.1946, 518.677, -115.037, 0.6", "-64.1702, 520.001, -114.837, 0.24", "-64.1301, 520.82, -114.715, 0.24", "-64.0415, 521.999, -114.588, 1.92", "-63.9781, 522.61, -114.526, 2.4", "-63.8125, 523.943, -114.431, 1.92", "-63.6683, 525.202, -114.391, 0.48", "-63.5646, 526.377, -114.403, 0.48", "-63.4901, 527.796, -114.433, 0.48", "-63.4832, 529.071, -114.482, 1.44", "-63.5201, 530.458, -114.548, 2.04", "-63.5944, 531.828, -114.635, 1.08", "-63.6507, 532.798, -114.7, 0.6", "-63.7093, 533.892, -114.791, 0.48", "-63.7317, 535.118, -114.931, 0.48", "-63.7188, 535.844, -115.043, 0.48", "-63.6874, 536.568, -115.159, 0.96", "-63.6332, 537.633, -115.333, 1.44", "-63.5867, 538.842, -115.535, 0.84", "-63.569, 539.714, -115.679, 0.48", "-63.5851, 541.212, -115.919, 0.48", "-63.6486, 542.306, -116.065, 0.6", "-63.7829, 543.534, -116.201, 0.72", "-63.8961, 544.217, -116.26, 0.12", "-63.9485, 544.489, -116.255, 0.12", "-64.1446, 545.432, -116.169, 1.56", "-64.3538, 546.445, -116.032, 2.28", "-64.5167, 547.237, -115.908, 2.52", "-64.6581, 547.905, -115.798, 2.52", "-65.1849, 550.235, -115.438, 0.72", "-65.6686, 552.24, -115.263, 0.72", "-65.9221, 553.313, -115.186, 0.96", "-66.0729, 553.989, -115.139, 0.6", "-66.2144, 554.67, -115.081, 0.48", "-66.5202, 556.152, -114.97, 0.48", "-66.9325, 558.251, -114.9, 0.48", "-67.1831, 559.798, -114.844, 0.48", "-67.3464, 561.109, -114.815, 1.92", "-67.5057, 562.79, -114.851, 0.96", "-67.5899, 564.206, -114.938, 0.48", "-67.6696, 566.798, -115.231, 0.48", "-67.6843, 568.522, -115.495, 0.48", "-67.6881, 570.131, -115.861, 0.48", "-67.6644, 571.621, -116.275, 1.2", "-67.6243, 572.55, -116.563, 1.92", "-67.5263, 573.954, -117.018, 1.44", "-67.4722, 574.863, -117.313, 1.08", "-67.4572, 575.528, -117.511, 0.48", "-67.4722, 576.475, -117.754, 0.96", "-67.5108, 577.451, -117.954, 0.96", "-67.5544, 578.173, -118.092, 0.48", "-67.6671, 580.351, -118.447, 0.48", "-67.7065, 581.182, -118.578, 0.6", "-67.7268, 581.719, -118.653, 0.48", "-67.7674, 582.976, -118.788, 0.48", "-67.8398, 584.768, -118.92, 0.48", "-67.9044, 585.813, -118.973, 0.96", "-67.9716, 586.641, -118.991, 1.2", "-68.0772, 587.603, -118.996, 0.6", "-68.1972, 588.35, -119.007, 0.36", "-68.5907, 590.083, -119.048, 0.36", "-68.9284, 591.191, -119.098, 0.72", "-69.2451, 592.033, -119.174, 1.44", "-69.6134, 592.935, -119.267, 2.4", "-70.2001, 594.345, -119.436, 1.56", "-70.5319, 595.149, -119.534, 0.48", "-71.3488, 597.213, -119.763, 0.48", "-71.693, 598.24, -119.828, 0.6", "-71.8477, 598.821, -119.831, 0.48", "-72.0659, 600.055, -119.737, 0.48", "-72.1119, 600.845, -119.63, 0.48", "-72.0633, 601.755, -119.461, 0.84", "-71.7934, 603.601, -119.042, 0.96", "-71.549, 604.82, -118.759, 0.48", "-71.3252, 605.771, -118.536, 0.36", "-70.9155, 607.356, -118.18, 0.36", "-70.5602, 608.739, -117.919, 0.96", "-70.4881, 609.022, -117.863, 1.08", "-70.2615, 609.969, -117.674, 0.48", "-69.9843, 611.181, -117.346, 0.48", "-69.7414, 612.323, -116.975, 0.48", "-69.5441, 613.328, -116.608, 0.48", "-69.2909, 614.778, -116.136, 0.48", "-69.0346, 616.456, -115.652, 0.48", "-68.8057, 618.487, -115.155, 1.68", "-68.7438, 619.203, -115.016, 2.4", "-68.7024, 619.812, -114.927, 2.64", "-68.6537, 621.676, -114.852, 0.24", "-68.7644, 623.038, -114.993, 0.24", "-69.0159, 624.254, -115.238, 0.24", "-69.0511, 624.384, -115.272, 0.72", "-69.3247, 625.28, -115.513, 0.84", "-69.7228, 626.443, -115.827, 0.24", "-70.4453, 628.291, -116.326, 0.24", "-71.0683, 629.798, -116.77, 0.24", "-71.2237, 630.166, -116.883, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 27
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-30.8952, 119.369, -36.2784, 0.12", "-31.6852, 119.431, -36.7272, 0.12", "-31.8305, 119.444, -36.8074, 0.12", "-32.2863, 119.491, -37.0399, 1.2", "-32.7056, 119.528, -37.2427, 1.44", "-35.0122, 119.74, -38.2815, 0.36", "-35.5065, 119.801, -38.493, 0.36", "-35.7838, 119.843, -38.6178, 1.8", "-36.1761, 119.921, -38.7872, 2.16", "-37.7108, 120.33, -39.4135, 0.36", "-38.231, 120.497, -39.6262, 0.36", "-38.7658, 120.723, -39.8152, 1.32", "-39.2971, 120.946, -40.0491, 0.24", "-39.6127, 121.088, -40.2094, 0.24", "-40.4177, 121.482, -40.6346, 0.6", "-41.4162, 122.046, -41.1437, 1.68", "-41.7129, 122.216, -41.2836, 2.04", "-43.0283, 122.943, -41.8483, 0.36", "-43.4983, 123.217, -42.0208, 0.36", "-44.0195, 123.559, -42.1762, 1.56", "-44.4763, 123.907, -42.2817, 0.36", "-44.9578, 124.321, -42.3509, 0.6", "-45.2402, 124.57, -42.3827, 0.12", "-45.6504, 124.972, -42.3926, 0.12", "-45.8663, 125.186, -42.4173, 0.48", "-46.5297, 125.865, -42.6016, 0.12", "-46.7415, 126.092, -42.6795, 0.12", "-46.9131, 126.292, -42.7509, 0.12", "-47.1423, 126.579, -42.8458, 1.68", "-47.3999, 126.947, -42.9574, 2.04", "-47.8734, 127.742, -43.1713, 0.24", "-48.0521, 128.095, -43.2468, 0.24", "-48.1907, 128.368, -43.3133, 0.48", "-48.3543, 128.668, -43.4052, 0.12", "-48.8134, 129.488, -43.671, 0.12", "-49.2288, 130.234, -43.9124, 0.12", "-49.491, 130.721, -44.0602, 0.12", "-49.8647, 131.431, -44.2676, 1.68", "-50.3146, 132.299, -44.4933, 0.12", "-50.6625, 132.987, -44.6491, 0.12", "-50.8311, 133.329, -44.7165, 1.32", "-51.0144, 133.762, -44.7811, 1.68", "-51.2244, 134.37, -44.8471, 0.12", "-51.3703, 134.959, -44.8788, 0.12", "-51.4062, 135.184, -44.8907, 0.36", "-51.4449, 135.488, -44.9189, 0.12", "-51.527, 136.237, -45.0099, 0.12", "-51.5702, 136.687, -45.0777, 1.56", "-51.6313, 137.358, -45.1944, 0.12", "-51.7288, 138.561, -45.4145, 0.12", "-51.7488, 138.797, -45.4577, 0.48", "-51.7687, 139.015, -45.4968, 0.12", "-51.8484, 139.828, -45.65, 0.12", "-51.9012, 140.342, -45.7514, 1.2", "-51.942, 140.712, -45.8286, 1.2", "-51.9854, 141.085, -45.9091, 0.12", "-52.0392, 141.669, -46.0487, 0.12", "-52.0679, 142.06, -46.1491, 1.32", "-52.0874, 142.426, -46.2499, 1.68", "-52.1259, 143.307, -46.4951, 0.12", "-52.1517, 143.959, -46.6789, 0.12", "-52.1782, 144.61, -46.8572, 0.12", "-52.1884, 144.842, -46.9188, 0.12", "-52.2117, 145.286, -47.0262, 0.12", "-52.2323, 145.591, -47.0949, 1.2", "-52.274, 146.118, -47.2046, 0.12", "-52.3361, 146.779, -47.3431, 0.12", "-52.3611, 147.008, -47.3899, 0.36", "-52.3853, 147.245, -47.4408, 0.12", "-52.4494, 147.982, -47.6092, 0.12", "-52.4704, 148.307, -47.6889, 0.96", "-52.4834, 148.637, -47.7736, 0.12", "-52.4648, 149.376, -47.9409, 0.12", "-52.4485, 149.749, -48.0222, 0.84", "-52.4264, 150.122, -48.1007, 0.36", "-52.4088, 150.357, -48.1479, 0.12", "-52.2857, 151.846, -48.4582, 0.12", "-52.2089, 152.651, -48.6357, 0.24", "-52.1769, 152.977, -48.7141, 0.48", "-52.1571, 153.209, -48.7734, 0.12", "-52.1253, 153.899, -48.9604, 0.12", "-52.1371, 154.353, -49.0848, 0.84", "-52.1675, 154.587, -49.1531, 0.12", "-52.2868, 155.301, -49.3844, 0.12", "-52.3067, 155.411, -49.4149, 0.6", "-52.4176, 155.753, -49.5048, 0.12", "-52.617, 156.181, -49.6015, 0.12", "-52.8338, 156.581, -49.6809, 1.08", "-53.1213, 157.029, -49.7856, 1.32", "-53.3953, 157.39, -49.8707, 1.68", "-53.9197, 158.051, -50.0171, 0.12", "-54.2647, 158.439, -50.115, 0.12", "-54.423, 158.596, -50.1523, 0.48", "-54.7294, 158.882, -50.1992, 0.12", "-55.1557, 159.281, -50.2351, 0.12", "-55.3979, 159.518, -50.241, 0.48", "-55.822, 159.937, -50.2078, 0.12", "-56.2495, 160.334, -50.137, 0.12", "-56.6518, 160.723, -50.0413, 0.12", "-56.8351, 160.915, -49.9836, 0.84", "-57.087, 161.183, -49.896, 0.84", "-57.2374, 161.343, -49.8314, 0.12", "-57.6091, 161.743, -49.6282, 0.12", "-57.8589, 161.989, -49.4901, 0.12", "-57.909, 162.036, -49.4596, 0.48", "-58.1022, 162.212, -49.3312, 0.12", "-58.3262, 162.405, -49.1735, 0.12", "-58.6081, 162.632, -48.9363, 1.32", "-58.7152, 162.704, -48.8306, 1.56", "-59.0717, 162.914, -48.4435, 0.12", "-59.3107, 163.047, -48.1782, 0.12", "-59.4544, 163.136, -47.9696, 0.48", "-59.6298, 163.252, -47.656, 0.12", "-59.7295, 163.327, -47.4705, 0.12", "-59.8515, 163.424, -47.2563, 0.12", "-59.9632, 163.536, -47.0385, 0.72", "-60.3107, 163.95, -46.3662, 0.12", "-60.4681, 164.154, -46.086, 0.12", "-60.7098, 164.5, -45.6521, 1.8", "-60.8608, 164.743, -45.3577, 2.04", "-61.2086, 165.333, -44.6623, 0.24", "-61.3416, 165.565, -44.4022, 0.24", "-61.5261, 165.876, -44.0874, 0.24", "-61.7961, 166.36, -43.6312, 0.24", "-61.9643, 166.675, -43.3443, 0.96", "-62.0683, 166.863, -43.1856, 1.32", "-62.2531, 167.176, -42.9453, 0.12", "-62.4584, 167.518, -42.6852, 0.12", "-62.7791, 168.018, -42.3287, 0.12", "-62.9133, 168.22, -42.2135, 0.96", "-63.0301, 168.41, -42.1287, 0.96", "-63.1742, 168.663, -42.0341, 0.24", "-63.3543, 168.982, -41.9375, 0.24", "-63.4728, 169.199, -41.8868, 0.12", "-63.7971, 169.801, -41.7835, 0.12", "-64.0478, 170.264, -41.7246, 0.12", "-64.1994, 170.547, -41.6961, 0.96", "-64.3542, 170.782, -41.6934, 0.12", "-64.6019, 171.098, -41.7074, 0.12", "-64.715, 171.223, -41.7152, 0.12", "-64.8327, 171.334, -41.7317, 1.2", "-65.0309, 171.516, -41.7694, 1.2", "-65.7607, 172.223, -41.9337, 0.12", "-66.066, 172.497, -42.0303, 0.12", "-66.3719, 172.78, -42.1518, 0.12", "-66.6658, 173.064, -42.2816, 0.12", "-66.87, 173.265, -42.3854, 0.72", "-67.0884, 173.498, -42.4945, 0.84", "-67.709, 174.249, -42.7953, 0.12", "-68.1264, 174.73, -43.0142, 0.12", "-68.1917, 174.803, -43.0448, 0.24", "-68.4783, 175.103, -43.157, 0.12", "-69.1085, 175.722, -43.3984, 0.12", "-69.2152, 175.822, -43.4339, 1.2", "-69.7237, 176.276, -43.5708, 0.12", "-70.2262, 176.654, -43.7083, 0.12", "-70.6076, 176.928, -43.8211, 0.72", "-71.013, 177.178, -43.947, 0.12", "-71.3065, 177.318, -44.0374, 0.12", "-71.8019, 177.519, -44.1637, 0.12", "-72.1827, 177.653, -44.249, 1.08", "-72.4684, 177.734, -44.3172, 1.08", "-73.1603, 177.911, -44.46, 0.12", "-73.6686, 178.023, -44.5428, 0.12", "-73.8132, 178.048, -44.5681, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-38.9254, 107.722, -87.2377, 0.12", "-39.0017, 109.281, -87.7939, 0.12", "-39.1017, 111.06, -88.461, 2.64", "-39.1543, 111.769, -88.7472, 2.16", "-39.3288, 113.264, -89.3914, 0.24", "-39.5263, 114.575, -89.947, 0.24", "-39.7012, 115.553, -90.3538, 0.24", "-40.0492, 117.006, -90.9018, 0.96", "-40.3302, 117.975, -91.2619, 0.12", "-40.7393, 119.16, -91.6228, 0.12", "-41.1037, 120.084, -91.8191, 0.24", "-41.3423, 120.634, -91.8935, 0.24", "-41.8612, 121.783, -91.9558, 1.68", "-42.2614, 122.658, -91.9814, 2.52", "-42.8845, 124.137, -92.0663, 1.56", "-43.1382, 124.762, -92.1338, 0.48", "-43.9577, 126.724, -92.4853, 0.48", "-44.4294, 127.831, -92.7443, 1.32", "-44.967, 129.087, -93.1505, 0.96", "-45.3686, 130.037, -93.5262, 0.12", "-45.7581, 130.977, -93.9658, 0.12", "-46.235, 132.132, -94.534, 1.8", "-46.5585, 132.922, -94.9304, 1.92", "-47.0687, 134.117, -95.4773, 0.12", "-47.5116, 135.08, -95.8087, 0.12", "-47.6528, 135.362, -95.8877, 0.48", "-47.9742, 135.989, -96.0364, 0.12", "-48.3351, 136.66, -96.1603, 0.12", "-48.9668, 137.697, -96.2927, 0.72", "-49.5407, 138.553, -96.3432, 0.12", "-50.1918, 139.455, -96.4103, 0.12", "-50.4646, 139.828, -96.4429, 0.48", "-50.7283, 140.185, -96.485, 0.12", "-51.3788, 141.076, -96.6484, 0.12", "-51.6498, 141.454, -96.7461, 1.2", "-52.137, 142.155, -96.9527, 1.32", "-52.6252, 142.921, -97.1348, 0.84", "-52.8348, 143.267, -97.2017, 0.12", "-53.3012, 144.059, -97.3167, 0.12", "-53.447, 144.33, -97.3399, 0.6", "-53.7343, 144.914, -97.3711, 0.12", "-54.323, 146.243, -97.397, 0.12", "-54.5545, 146.822, -97.4029, 0.6", "-54.7051, 147.294, -97.4775, 0.12", "-54.8864, 148.022, -97.6588, 0.12", "-55.1748, 149.247, -98.0456, 1.56", "-55.2798, 149.692, -98.2117, 2.04", "-55.5054, 150.612, -98.5892, 1.68", "-56.0829, 153.219, -99.7441, 0.12", "-56.3383, 154.462, -100.355, 0.12", "-56.4993, 155.253, -100.798, 0.12", "-56.6347, 155.895, -101.196, 1.08", "-56.7443, 156.391, -101.516, 1.56", "-56.9895, 157.576, -102.354, 0.12", "-57.2537, 159.044, -103.383, 0.12", "-57.3401, 159.99, -104.122, 0.48", "-57.3467, 160.927, -104.916, 0.48", "-57.3145, 161.407, -105.333, 0.48", "-57.1293, 162.661, -106.53, 1.44", "-57.0255, 163.206, -107.05, 1.92", "-56.811, 164.049, -107.813, 1.44", "-56.4721, 165.1, -108.774, 0.48", "-56.0238, 166.356, -109.914, 0.36", "-55.4272, 167.943, -111.314, 0.12", "-55.0873, 168.852, -112.059, 1.56", "-54.8165, 169.566, -112.647, 1.2", "-54.1224, 171.448, -114.075, 0.12", "-53.8897, 172.029, -114.486, 0.12", "-53.7296, 172.388, -114.727, 0.6", "-53.5356, 172.838, -114.97, 0.6", "-53.1353, 173.728, -115.47, 0.36", "-52.8673, 174.355, -115.779, 0.36", "-52.4521, 175.457, -116.17, 0.12", "-52.2203, 176.154, -116.369, 0.12", "-51.8899, 177.29, -116.646, 0.12", "-51.5007, 178.781, -117.007, 1.56", "-51.2724, 179.754, -117.22, 2.16", "-50.9836, 181.219, -117.542, 0.24", "-50.657, 183.281, -118.092, 0.24", "-50.5645, 184.185, -118.389, 0.12", "-50.4689, 185.783, -118.989, 1.68", "-50.4639, 186.285, -119.217, 2.28", "-50.4863, 186.837, -119.521, 2.28", "-50.6382, 188.784, -120.852, 0.12", "-50.7955, 189.986, -121.814, 0.12", "-50.8594, 190.338, -122.121, 0.6", "-51.1249, 191.507, -123.276, 0.24", "-51.2812, 192.1, -123.956, 0.24", "-51.4852, 192.838, -124.845, 0.24", "-51.647, 193.329, -125.469, 0.96", "-51.8797, 193.965, -126.365, 1.44", "-52.3523, 195.086, -127.998, 0.12", "-52.8725, 196.124, -129.42, 0.12", "-53.1062, 196.557, -129.99, 0.12", "-53.1932, 196.697, -130.157, 0.48", "-53.385, 197.0, -130.482, 0.48", "-53.4799, 197.144, -130.615, 0.48", "-54.1073, 198.011, -131.272, 0.48", "-54.8111, 198.961, -131.931, 1.32", "-55.1729, 199.45, -132.267, 1.8", "-55.6905, 200.218, -132.739, 0.96", "-56.1554, 200.938, -133.132, 0.12", "-56.8195, 202.013, -133.693, 0.12", "-57.194, 202.622, -133.988, 1.2", "-57.4648, 203.127, -134.216, 1.56", "-57.7714, 203.854, -134.586, 0.12", "-58.1969, 205.037, -135.214, 0.12", "-58.5203, 206.144, -135.812, 0.12", "-58.7224, 207.281, -136.557, 0.12", "-58.9514, 209.166, -137.914, 0.12", "-59.0551, 210.75, -139.185, 0.12", "-59.0751, 211.371, -139.705, 0.84", "-59.0798, 211.796, -140.066, 0.96", "-59.1258, 213.926, -141.882, 0.12", "-59.1785, 214.833, -142.678, 0.12", "-59.3755, 215.679, -143.411, 0.12", "-59.6839, 216.517, -144.091, 0.12", "-59.9941, 217.216, -144.689, 0.36", "-60.0604, 217.323, -144.776, 0.12", "-60.5684, 217.766, -144.948, 0.12", "-61.2208, 218.143, -145.094, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-38.9254, 107.722, -87.2377, 0.12", "-41.3151, 107.91, -91.8878, 0.12", "-41.8207, 107.981, -92.7399, 0.12", "-42.5612, 108.108, -93.7408, 0.12", "-43.0788, 108.21, -94.3435, 0.84", "-44.2414, 108.456, -95.5557, 1.8", "-44.6606, 108.551, -95.9502, 1.92", "-45.7083, 108.87, -96.5608, 0.12", "-47.0044, 109.358, -97.2428, 0.12", "-47.8766, 109.731, -97.6216, 0.96", "-48.3033, 109.934, -97.7821, 1.2", "-49.3158, 110.469, -98.0837, 0.12", "-49.9864, 110.861, -98.3097, 0.12", "-51.2931, 111.78, -98.7908, 0.12", "-51.7526, 112.153, -98.9818, 1.2", "-52.0367, 112.4, -99.0986, 1.44", "-52.6405, 112.942, -99.3995, 0.6", "-53.3938, 113.611, -99.8163, 0.12", "-54.0795, 114.155, -100.214, 0.12", "-54.5905, 114.484, -100.547, 0.96", "-54.9587, 114.692, -100.795, 1.32", "-55.9952, 115.178, -101.456, 0.12", "-56.5577, 115.383, -101.785, 0.12", "-57.2366, 115.562, -102.176, 0.12", "-58.4661, 115.783, -102.897, 0.12", "-59.2037, 115.896, -103.331, 1.08", "-59.738, 115.965, -103.627, 1.8", "-60.4371, 116.023, -104.034, 1.2", "-61.5256, 116.097, -104.715, 0.12", "-62.0405, 116.129, -105.039, 0.12", "-62.4644, 116.148, -105.293, 0.12", "-62.9647, 116.154, -105.649, 0.12", "-64.7719, 116.12, -107.016, 0.12", "-65.1664, 116.107, -107.313, 1.44", "-65.626, 116.076, -107.718, 2.04", "-66.3439, 115.991, -108.4, 1.32", "-67.9151, 115.732, -109.861, 0.12", "-68.4282, 115.628, -110.32, 0.12", "-68.8988, 115.505, -110.691, 0.96", "-70.9297, 114.844, -112.217, 0.12", "-71.6972, 114.552, -112.729, 0.12", "-72.5382, 114.196, -113.23, 1.56", "-72.9001, 114.028, -113.398, 1.8", "-73.8933, 113.559, -113.855, 0.12", "-74.1656, 113.434, -113.965, 0.12", "-74.7713, 113.17, -114.164, 0.48", "-76.0252, 112.634, -114.677, 0.12", "-76.8554, 112.288, -115.063, 0.12", "-77.5449, 112.009, -115.358, 1.32", "-78.0373, 111.8, -115.537, 1.56", "-79.0693, 111.284, -115.789, 0.12", "-79.544, 110.981, -115.835, 0.12", "-79.7621, 110.816, -115.819, 0.48", "-80.4222, 110.234, -115.733, 0.12", "-81.0545, 109.633, -115.614, 0.12", "-81.8715, 108.82, -115.409, 0.12", "-82.6043, 108.069, -115.18, 0.12", "-82.8982, 107.766, -115.092, 0.72", "-83.1656, 107.504, -114.981, 0.12", "-83.8777, 106.872, -114.642, 0.12", "-84.3538, 106.509, -114.391, 0.12", "-84.8729, 106.165, -114.105, 1.44", "-85.4425, 105.826, -113.79, 1.8", "-87.1465, 104.86, -112.864, 0.12", "-87.6882, 104.571, -112.561, 0.12", "-89.1331, 103.854, -111.761, 0.12", "-89.4552, 103.709, -111.601, 0.24", "-89.7123, 103.611, -111.468, 0.12", "-90.0764, 103.48, -111.274, 0.12", "-91.1011, 103.166, -110.788, 1.32", "-91.2193, 103.138, -110.725, 1.56", "-92.0492, 103.008, -110.244, 1.56", "-93.2756, 102.87, -109.584, 0.24", "-93.5293, 102.855, -109.462, 0.12", "-94.3494, 102.843, -109.15, 0.12", "-95.0658, 102.845, -108.971, 0.12", "-95.3606, 102.846, -108.908, 0.48", "-95.8499, 102.86, -108.837, 0.48", "-96.1242, 102.871, -108.831, 0.12", "-97.2548, 102.917, -108.815, 0.12", "-98.0885, 102.899, -108.796, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-54.8387, 20.2324, -80.6614, 0.12", "-54.7343, 18.8228, -81.6568, 0.12", "-54.6968, 18.0289, -82.3251, 0.12", "-54.6592, 17.0356, -83.1579, 0.12", "-54.6516, 16.8053, -83.3468, 1.56", "-54.6356, 16.2864, -83.7524, 1.56", "-54.6254, 15.7599, -84.1365, 0.96", "-54.6516, 14.8076, -84.806, 0.12", "-54.678, 14.2286, -85.2471, 0.12", "-54.6877, 14.0478, -85.3653, 0.12", "-54.7022, 13.6685, -85.5741, 0.12", "-54.7025, 13.1874, -85.8253, 0.6", "-54.6929, 12.8707, -85.9741, 0.72", "-54.6108, 11.5272, -86.5008, 0.12", "-54.551, 10.9242, -86.8482, 0.12", "-54.4285, 10.054, -87.3937, 2.04", "-54.1667, 8.57364, -88.4154, 0.12", "-54.0377, 7.91534, -88.8881, 0.12", "-53.9014, 7.20237, -89.4388, 2.28", "-53.4789, 4.89706, -91.2214, 0.12", "-53.3627, 4.17151, -91.8331, 0.12", "-53.3092, 3.64044, -92.4205, 0.12", "-53.3009, 3.42318, -92.691, 0.12", "-53.3235, 2.64834, -93.6949, 0.12", "-53.3826, 2.17267, -94.3195, 1.92", "-53.4453, 1.86609, -94.6842, 2.28", "-54.046, -0.701048, -97.8024, 0.12", "-54.1124, -0.977088, -98.1155, 0.12", "-54.2699, -1.68401, -98.8804, 1.8", "-54.3318, -1.98698, -99.1798, 1.8", "-54.4195, -2.47406, -99.6256, 1.2", "-54.5168, -3.44759, -100.311, 0.12", "-54.5361, -3.99176, -100.453, 0.12", "-54.5346, -4.18457, -100.515, 0.6", "-54.4862, -4.69059, -100.687, 0.12", "-54.3705, -5.43423, -100.944, 0.12", "-54.3414, -5.60963, -101.002, 0.36", "-54.2666, -6.00456, -101.169, 0.36", "-54.2075, -6.27627, -101.315, 0.12", "-54.026, -7.11058, -101.757, 0.12", "-53.854, -7.8412, -102.284, 0.12", "-53.7853, -8.1114, -102.495, 0.96", "-53.4509, -9.31659, -103.438, 0.12", "-53.3064, -9.79281, -103.899, 0.12", "-53.0652, -10.5417, -104.684, 2.76", "-52.4387, -12.3909, -106.887, 0.12", "-52.2269, -12.9836, -107.614, 0.12", "-52.1333, -13.218, -107.911, 0.96", "-51.3452, -14.8899, -110.166, 0.12", "-51.1454, -15.2346, -110.713, 0.12", "-50.6796, -15.861, -111.847, 0.12", "-50.5225, -16.0203, -112.152, 1.2", "-50.2385, -16.2576, -112.64, 2.28", "-49.4607, -16.8059, -113.729, 1.68", "-48.7345, -17.201, -114.392, 0.12", "-48.3414, -17.3689, -114.746, 0.12", "-48.1159, -17.454, -114.933, 0.12", "-47.8179, -17.5654, -115.223, 0.12", "-47.5073, -17.6929, -115.52, 0.6", "-47.2856, -17.7883, -115.703, 0.6", "-46.5413, -18.2003, -116.533, 0.24", "-46.3959, -18.3085, -116.757, 0.24", "-45.9635, -18.7014, -117.575, 0.12", "-45.5129, -19.1819, -118.461, 2.4", "-45.4341, -19.273, -118.611, 2.4", "-44.5042, -20.5202, -120.669, 0.12", "-43.8986, -21.4183, -122.077, 0.12", "-43.5406, -21.9807, -122.946, 0.12", "-43.2182, -22.5267, -123.787, 3.12", "-43.0857, -22.7769, -124.169, 3.12", "-41.9698, -25.055, -127.364, 0.12", "-41.8137, -25.3995, -127.802, 0.12", "-41.738, -25.5779, -128.017, 0.48", "-41.5722, -25.9785, -128.482, 0.12", "-41.4512, -26.302, -128.864, 0.12", "-41.3908, -26.5458, -129.162, 0.48", "-41.3208, -27.003, -129.672, 0.12", "-41.2744, -27.3997, -130.123, 0.12", "-41.1301, -28.4861, -131.29, 2.76", "-41.0971, -28.7005, -131.505, 2.76", "-40.6889, -31.0924, -133.82, 0.12", "-40.6167, -31.4476, -134.14, 0.12", "-40.5123, -31.9004, -134.527, 0.12", "-40.3448, -32.5688, -135.082, 0.12", "-40.1345, -33.345, -135.695, 1.8", "-39.9611, -33.8636, -136.096, 2.16", "-39.7653, -34.3802, -136.442, 1.92", "-39.3177, -35.6915, -137.453, 0.12", "-39.2366, -35.9877, -137.696, 0.72", "-39.1528, -36.5697, -138.187, 0.72", "-39.131, -36.9007, -138.436, 0.12", "-39.1239, -37.5324, -138.851, 0.12", "-39.1414, -38.1943, -139.225, 0.12", "-39.159, -38.8698, -139.513, 2.4", "-39.1825, -40.44, -140.098, 0.12", "-39.1796, -41.4279, -140.421, 0.12", "-39.1596, -41.8396, -140.537, 0.6", "-39.132, -42.1337, -140.624, 0.12", "-39.0639, -42.7167, -140.786, 0.12", "-39.0379, -42.9029, -140.837, 0.48", "-38.9409, -43.4436, -141.037, 0.12", "-38.7016, -44.6931, -141.624, 0.12", "-38.514, -45.645, -142.11, 1.68", "-38.4401, -46.0158, -142.309, 2.16", "-38.3726, -46.3193, -142.472, 2.16", "-37.9576, -47.9884, -143.372, 0.12", "-37.8251, -48.4959, -143.635, 0.12", "-37.7588, -48.7527, -143.775, 0.48", "-37.7383, -48.8389, -143.815, 0.12", "-37.5752, -49.633, -144.142, 0.12", "-37.4714, -50.3849, -144.371, 0.12", "-37.4463, -50.9064, -144.527, 1.68", "-37.4525, -51.2687, -144.666, 1.92", "-37.5102, -52.0124, -144.98, 0.12", "-37.5779, -52.4856, -145.188, 0.12", "-37.7052, -53.0454, -145.43, 1.32", "-38.0776, -54.504, -146.08, 0.12", "-38.2186, -55.04, -146.34, 0.12", "-38.318, -55.4031, -146.551, 0.48", "-38.3959, -55.6495, -146.712, 0.12", "-38.5998, -56.2204, -147.148, 0.12", "-38.8937, -56.953, -147.722, 0.12", "-38.9742, -57.1144, -147.852, 0.96", "-39.4175, -57.8425, -148.458, 0.12", "-39.6034, -58.1171, -148.684, 0.12", "-40.0526, -58.7192, -149.164, 1.44", "-40.452, -59.2138, -149.523, 1.8", "-41.0949, -59.9631, -149.962, 0.12", "-41.9105, -60.8885, -150.404, 0.12", "-42.1116, -61.1088, -150.482, 0.48", "-42.245, -61.251, -150.525, 0.12", "-42.6092, -61.6445, -150.607, 0.12", "-42.874, -61.9338, -150.657, 1.08", "-43.1961, -62.2984, -150.689, 1.68", "-43.7996, -62.9829, -150.716, 0.12", "-44.0597, -63.2808, -150.722, 0.12", "-44.229, -63.4931, -150.723, 0.48", "-44.3468, -63.6549, -150.719, 0.12", "-44.7821, -64.3479, -150.755, 0.12", "-45.2032, -65.1945, -150.834, 1.68", "-45.4392, -65.8807, -150.952, 0.12", "-45.6073, -66.567, -151.134, 0.12", "-45.6921, -67.0759, -151.302, 0.6", "-45.7988, -68.1941, -151.723, 0.12", "-45.8081, -68.9545, -152.035, 0.12", "-45.7742, -70.0027, -152.532, 0.12", "-45.7581, -70.373, -152.707, 0.12", "-45.7464, -70.7599, -152.887, 1.68", "-45.7397, -71.1413, -153.043, 2.28", "-45.7617, -71.8412, -153.259, 1.56", "-45.8461, -72.7908, -153.5, 0.12", "-45.8992, -73.2704, -153.557, 0.12", "-45.9465, -73.6929, -153.601, 0.12", "-45.9998, -74.1734, -153.65, 1.32", "-46.0432, -74.5704, -153.684, 1.56", "-46.1101, -75.1689, -153.73, 0.12", "-46.2745, -76.7534, -153.807, 0.12", "-46.3712, -77.7201, -153.864, 1.8", "-46.3946, -78.0627, -153.886, 2.52", "-46.4145, -78.3423, -153.905, 2.52", "-46.4754, -79.242, -153.982, 0.12", "-46.5495, -80.415, -154.098, 0.12", "-46.5823, -80.9794, -154.147, 1.56", "-46.6093, -81.6789, -154.185, 2.04", "-46.6269, -82.4568, -154.227, 2.04", "-46.6331, -83.5539, -154.282, 0.12", "-46.6197, -84.2348, -154.303, 0.12", "-46.5899, -84.6629, -154.314, 0.72", "-46.5629, -84.8796, -154.307, 0.12", "-46.4781, -85.3891, -154.256, 0.12", "-46.4278, -85.5992, -154.221, 0.48", "-46.3494, -85.8868, -154.18, 0.12", "-46.0306, -86.9157, -154.114, 0.12", "-45.7963, -87.5996, -154.108, 1.56", "-45.6754, -87.9291, -154.12, 1.8", "-45.5199, -88.3133, -154.151, 1.8", "-44.9998, -89.5419, -154.3, 0.12", "-44.651, -90.3369, -154.435, 0.12", "-44.651, -90.3369, -154.435, 0.48", "-44.5688, -90.5049, -154.492, 0.12", "-44.3014, -90.9854, -154.694, 0.12", "-44.1938, -91.1543, -154.78, 0.48", "-44.0916, -91.3109, -154.86, 0.12", "-43.6361, -92.0258, -155.344, 0.12", "-43.0691, -92.9487, -155.997, 0.48", "-42.9107, -93.2202, -156.168, 0.12", "-42.5703, -93.8104, -156.514, 1.56", "-42.264, -94.3475, -156.8, 1.92", "-41.8035, -95.162, -157.182, 1.56", "-41.579, -95.5596, -157.367, 0.12", "-40.6034, -97.3927, -158.08, 0.12", "-40.4707, -97.6465, -158.173, 0.84", "-40.3324, -97.9142, -158.268, 0.12", "-40.1124, -98.3269, -158.415, 0.12", "-39.4251, -99.5756, -158.813, 0.12", "-38.7899, -100.706, -159.273, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-54.8387, 20.2324, -80.6614, 0.12", "-55.8076, 20.5372, -81.9276, 0.12", "-56.494, 20.7748, -82.8262, 0.12", "-57.655, 21.2394, -84.2169, 2.4", "-59.5728, 22.0579, -86.523, 0.24", "-59.9647, 22.2311, -86.9795, 0.24", "-60.3691, 22.4199, -87.432, 1.44", "-61.1947, 22.8262, -88.3386, 0.12", "-62.1221, 23.3475, -89.3564, 0.12", "-62.9257, 23.853, -90.1276, 0.12", "-63.7121, 24.3526, -90.8314, 2.28", "-64.6705, 24.9574, -91.738, 0.12", "-65.4536, 25.4361, -92.4674, 0.12", "-66.4962, 26.0691, -93.4053, 0.12", "-67.655, 26.7606, -94.4262, 2.76", "-69.0721, 27.5917, -95.653, 0.24", "-69.0721, 27.5917, -95.653, 0.12", "-69.8917, 28.0846, -96.3424, 0.12", "-70.2809, 28.3197, -96.6707, 0.96", "-70.7812, 28.6246, -97.0382, 0.96", "-71.8767, 29.3182, -97.8144, 0.12", "-72.9041, 30.0595, -98.5866, 0.12", "-73.2568, 30.3401, -98.8766, 0.72", "-73.8268, 30.82, -99.4239, 0.12", "-74.4169, 31.3269, -100.007, 0.12", "-75.0582, 31.8864, -100.6, 2.16", "-76.2435, 32.9101, -101.775, 0.12", "-76.5905, 33.2045, -102.155, 0.12", "-77.3583, 33.8497, -103.032, 0.12", "-77.86, 34.2719, -103.594, 0.12", "-78.4713, 34.7819, -104.354, 1.44", "-79.8796, 36.0008, -106.175, 0.12", "-80.356, 36.4093, -106.753, 0.12", "-80.7115, 36.7268, -107.189, 1.56", "-81.1139, 37.1096, -107.679, 1.56", "-81.9982, 37.9579, -108.777, 0.12", "-82.382, 38.337, -109.256, 0.12", "-82.7214, 38.6739, -109.596, 0.12", "-82.9168, 38.8476, -109.807, 0.12", "-83.6924, 39.4558, -110.602, 0.12", "-84.0289, 39.683, -110.942, 0.12", "-84.6084, 40.0105, -111.468, 1.92", "-85.0089, 40.2075, -111.855, 2.16", "-86.3885, 40.795, -113.166, 0.12", "-86.9314, 40.9909, -113.644, 0.12", "-87.3716, 41.127, -114.019, 1.08", "-87.888, 41.2443, -114.456, 1.32", "-88.7745, 41.3685, -115.182, 0.12", "-89.3887, 41.4028, -115.675, 0.12", "-89.8457, 41.3853, -116.033, 0.48", "-90.2918, 41.3275, -116.4, 0.12", "-91.2908, 41.174, -117.224, 0.12", "-91.9131, 41.0803, -117.744, 1.44", "-92.2715, 41.0411, -118.044, 1.68", "-93.3914, 41.0128, -119.015, 0.12", "-94.2323, 41.053, -119.712, 0.12", "-94.9295, 41.1461, -120.245, 1.8", "-95.621, 41.3109, -120.725, 2.16", "-96.7073, 41.6155, -121.404, 0.12", "-97.376, 41.8021, -121.849, 0.12", "-97.8907, 41.9284, -122.169, 0.48", "-97.9821, 41.9466, -122.223, 0.12", "-98.5165, 41.9973, -122.56, 0.12", "-99.3586, 42.0084, -123.152, 1.68", "-101.052, 41.9346, -124.427, 0.12", "-101.722, 41.8893, -124.954, 0.12", "-102.136, 41.8804, -125.289, 0.48", "-102.894, 41.906, -125.877, 0.12", "-103.406, 41.9518, -126.272, 0.12", "-104.018, 42.0498, -126.739, 1.56", "-104.533, 42.1502, -127.094, 2.28", "-105.749, 42.4254, -127.87, 0.12", "-106.312, 42.5448, -128.206, 0.12", "-106.702, 42.6168, -128.393, 0.48", "-107.381, 42.7219, -128.674, 0.12", "-107.867, 42.7791, -128.868, 0.12", "-109.041, 42.852, -129.296, 2.16", "-110.61, 42.8335, -129.755, 0.12", "-111.688, 42.7685, -130.023, 0.12", "-112.294, 42.7104, -130.18, 0.6", "-112.691, 42.658, -130.287, 0.12", "-113.474, 42.5329, -130.496, 0.12", "-114.405, 42.3661, -130.736, 2.4", "-114.859, 42.2914, -130.824, 2.4", "-116.514, 42.0356, -131.121, 0.12", "-117.886, 41.8486, -131.314, 0.12", "-118.777, 41.7427, -131.406, 1.68", "-119.455, 41.6656, -131.454, 2.16", "-120.842, 41.5087, -131.469, 0.12", "-121.674, 41.4167, -131.421, 0.12", "-122.334, 41.3409, -131.323, 0.6", "-122.563, 41.3125, -131.286, 0.12", "-123.837, 41.1439, -131.13, 0.12", "-124.366, 41.0736, -131.03, 0.84", "-124.87, 41.0104, -130.9, 1.08", "-125.123, 40.9869, -130.839, 1.08", "-125.51, 40.9666, -130.757, 0.12", "-126.237, 40.9663, -130.607, 0.12", "-127.129, 41.0007, -130.427, 1.44", "-127.83, 41.0215, -130.301, 1.68", "-128.589, 41.0421, -130.163, 0.12", "-129.698, 41.0679, -129.982, 0.12", "-129.966, 41.0699, -129.944, 1.32", "-130.577, 41.0551, -129.888, 0.12", "-131.045, 41.0324, -129.857, 0.12", "-131.304, 41.0063, -129.83, 0.36", "-131.715, 40.9224, -129.771, 0.12", "-132.272, 40.7673, -129.684, 0.12", "-132.714, 40.6307, -129.612, 0.48", "-133.369, 40.4094, -129.519, 0.12", "-134.242, 40.0918, -129.41, 0.12", "-134.902, 39.8365, -129.336, 1.8", "-135.361, 39.6479, -129.291, 2.64", "-135.682, 39.5098, -129.268, 2.64", "-136.763, 39.0155, -129.227, 0.12", "-137.708, 38.5529, -129.229, 0.12", "-138.13, 38.3497, -129.233, 0.12", "-138.47, 38.1891, -129.237, 0.48", "-138.681, 38.0895, -129.233, 0.12", "-139.123, 37.8975, -129.211, 0.12", "-139.561, 37.7375, -129.169, 0.6", "-139.967, 37.6322, -129.127, 0.12", "-140.54, 37.5252, -129.07, 0.12", "-141.026, 37.4588, -128.992, 0.72", "-141.543, 37.4071, -128.893, 0.96", "-142.167, 37.3815, -128.799, 0.12", "-142.915, 37.3809, -128.719, 0.12", "-143.395, 37.3889, -128.677, 1.2", "-144.289, 37.4349, -128.62, 1.56", "-144.919, 37.4913, -128.615, 1.68", "-146.08, 37.6657, -128.66, 0.12", "-147.114, 37.8623, -128.731, 0.12", "-147.645, 37.9718, -128.866, 1.56", "-148.263, 38.1117, -129.053, 1.56", "-148.994, 38.2908, -129.318, 0.12", "-151.337, 38.9069, -130.249, 0.12", "-151.634, 38.9889, -130.378, 0.48", "-154.311, 39.7961, -131.85, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-22.3894, -187.057, -22.7716, 3.37", "-21.8823, -187.586, -21.3111, 3.37", "-20.3598, -188.96, -17.2579, 0.12", "-20.2331, -189.04, -16.9918, 0.12", "-19.8401, -189.243, -16.2751, 0.12", "-19.5653, -189.355, -15.8441, 0.72", "-19.2092, -189.471, -15.3616, 0.72", "-18.979, -189.504, -15.1639, 0.12", "-17.3314, -189.503, -14.3648, 0.12", "-17.1628, -189.522, -14.2432, 0.96", "-16.6912, -189.692, -13.7047, 0.96", "-16.2305, -190.053, -12.703, 0.12", "-16.1754, -190.145, -12.4516, 0.12", "-16.1544, -190.308, -11.9864, 0.84", "-16.343, -191.247, -9.39085, 0.24", "-16.5055, -191.799, -7.9553, 1.92", "-16.8404, -192.673, -5.87363, 0.24", "-17.0177, -193.068, -5.0176, 1.68", "-17.5413, -194.197, -2.79438, 1.68", "-17.7023, -194.528, -2.22839, 0.12", "-17.9026, -194.943, -1.71645, 0.12", "-18.0626, -195.334, -1.37809, 0.6", "-18.2388, -195.927, -1.06119, 1.08", "-18.4304, -196.694, -0.764445, 1.08", "-18.7261, -197.828, -0.51726, 0.12", "-18.8979, -198.49, -0.375654, 0.12", "-19.0548, -199.162, -0.248423, 0.12", "-19.1892, -199.839, -0.143311, 0.12", "-19.2836, -200.517, -0.0694239, 0.12", "-19.3367, -201.091, -0.0461981, 0.96", "-19.3816, -201.796, -0.0477736, 0.12", "-19.4455, -202.668, -0.0492871, 0.12", "-19.5014, -203.169, -0.032871, 1.32", "-19.5561, -203.476, -0.0131173, 1.32", "-19.753, -204.379, 0.0697479, 0.12", "-19.971, -205.184, 0.161489, 0.12", "-20.0249, -205.372, 0.185097, 0.48", "-20.1956, -205.989, 0.272005, 0.12", "-20.2555, -206.293, 0.314068, 0.12", "-20.3002, -206.695, 0.367279, 0.12", "-20.2621, -206.984, 0.478007, 0.48", "-20.1627, -207.513, 0.785717, 0.36", "-20.1112, -207.902, 0.960332, 0.36", "-20.0736, -208.275, 1.08065, 1.2", "-20.0394, -208.679, 1.18638, 1.2", "-19.8824, -210.754, 1.84542, 0.12", "-19.8129, -211.522, 2.0962, 0.12", "-19.7084, -213.19, 2.64727, 0.12", "-19.678, -214.021, 2.90895, 0.12", "-19.6765, -214.576, 3.06049, 0.12", "-19.7106, -215.84, 3.28902, 1.32", "-19.7294, -216.838, 3.24325, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-22.3894, -187.057, -22.7716, 0.12", "-24.4535, -188.215, -22.5129, 0.12", "-25.8232, -188.983, -22.3412, 0.12", "-26.2566, -189.226, -22.2869, 0.96", "-26.7674, -189.513, -22.2229, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-11.5321, -182.494, -28.9157, 0.12", "-11.0872, -183.351, -28.8505, 0.12", "-10.7807, -184.068, -28.7939, 0.12", "-10.496, -184.741, -28.7462, 0.72", "-10.1281, -185.612, -28.7058, 0.84", "-9.91908, -186.088, -28.6695, 0.48", "-9.77184, -186.413, -28.6406, 0.12", "-9.44681, -187.115, -28.5675, 0.12", "-9.23645, -187.568, -28.505, 0.12", "-9.02994, -187.981, -28.4508, 0.84", "-8.64944, -188.794, -28.4368, 0.36", "-8.47108, -189.19, -28.4477, 0.12", "-8.04634, -190.137, -28.5078, 0.12", "-7.68232, -190.957, -28.5892, 1.8", "-7.40639, -191.682, -28.6789, 1.56", "-6.97605, -192.96, -28.8781, 0.12", "-6.90972, -193.191, -28.9282, 0.12", "-6.87939, -193.308, -28.9546, 0.36", "-6.78807, -193.722, -29.0525, 0.12", "-6.67692, -194.455, -29.1978, 0.12", "-6.64818, -194.698, -29.2277, 0.12", "-6.5981, -195.081, -29.2495, 0.72", "-6.52937, -195.693, -29.2832, 0.96", "-6.48173, -196.174, -29.307, 0.12", "-6.35636, -197.643, -29.3735, 0.12", "-6.32146, -198.125, -29.3937, 0.84", "-6.29492, -198.633, -29.4217, 0.12", "-6.28477, -199.239, -29.456, 0.12", "-6.28643, -199.635, -29.479, 0.96", "-6.28911, -200.133, -29.5115, 0.12", "-6.30165, -200.985, -29.5791, 0.12", "-6.32176, -201.805, -29.6534, 1.68", "-6.33911, -202.152, -29.6901, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-11.5321, -182.494, -28.9157, 0.6", "-11.1787, -181.917, -25.332, 0.6", "-11.0156, -182.239, -25.8163, 0.6", "-10.4678, -183.169, -26.9178, 0.12", "-10.2385, -183.545, -27.3086, 0.12", "-9.95193, -184.014, -27.797, 0.96", "-9.66429, -184.484, -28.2873, 0.96", "-9.0315, -185.58, -29.6107, 0.12", "-8.78068, -186.051, -30.1843, 0.12", "-8.64528, -186.296, -30.4584, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "22.7766, -91.8021, -41.6044, 0.12", "23.1698, -92.8026, -40.0855, 0.12", "23.2645, -93.0249, -39.756, 0.12", "23.3114, -93.1287, -39.6101, 0.6", "23.4538, -93.4132, -39.2122, 0.12", "23.7311, -93.9149, -38.5157, 0.12", "23.8099, -94.0518, -38.3241, 0.12", "23.8803, -94.1455, -38.2071, 0.12", "23.9801, -94.2777, -38.0484, 0.12", "24.2197, -94.5995, -37.6692, 0.12", "24.2984, -94.7055, -37.5579, 0.6", "24.4699, -94.9566, -37.3676, 0.12", "24.6374, -95.2176, -37.1633, 0.12", "24.8608, -95.546, -36.8932, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "22.7766, -91.8021, -41.6044, 0.24", "22.7573, -93.437, -42.3334, 0.24", "22.6564, -94.8945, -43.0269, 0.24", "22.5854, -95.5672, -43.3479, 0.96", "22.439, -96.7321, -43.9017, 1.8", "22.3253, -97.8718, -44.5108, 0.84", "22.2568, -98.5998, -44.9466, 0.12", "22.1676, -99.6976, -45.7356, 0.12", "22.1075, -100.263, -46.1757, 0.72", "22.0894, -100.396, -46.2703, 0.72", "21.9328, -101.791, -47.1565, 0.24", "21.8954, -102.398, -47.4478, 0.24", "21.8737, -103.418, -47.8078, 0.24", "21.8643, -104.487, -48.0588, 0.24", "21.8242, -105.481, -48.2032, 0.24", "21.7299, -106.618, -48.3022, 0.24", "21.5818, -107.75, -48.2908, 1.44", "21.3997, -108.983, -48.224, 1.92", "21.1805, -110.193, -48.1321, 1.92", "20.9338, -111.413, -48.046, 1.2", "20.6648, -112.666, -47.99, 0.48", "20.3793, -113.883, -47.957, 0.12", "20.1724, -114.761, -47.9144, 0.12", "20.0512, -115.303, -47.8918, 0.6", "19.9146, -115.985, -47.8876, 0.12", "19.6725, -117.407, -47.8669, 0.12", "19.5836, -118.124, -47.8664, 0.12", "19.3604, -120.661, -48.0286, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "40.5735, -40.7037, -12.2578, 0.96", "38.1016, -39.4124, -3.36554, 0.96", "37.834, -39.1925, -2.40959, 0.72", "37.6857, -39.0095, -1.87625, 0.24", "37.5583, -38.753, -1.3459, 0.24", "37.4445, -38.3011, -0.664153, 0.24", "37.37, -37.6695, 0.147806, 0.84", "37.536, -36.6605, 0.743088, 1.2", "37.7167, -35.7668, 1.34505, 0.48", "37.9571, -34.6632, 2.24841, 0.24", "38.252, -33.5713, 3.26363, 0.24", "38.68, -32.2604, 4.65901, 1.68", "38.9175, -31.6146, 5.38593, 2.28", "39.0999, -31.1494, 5.93183, 2.4", "39.6879, -29.6413, 7.72518, 0.36", "39.9037, -29.0449, 8.42264, 0.36", "40.187, -28.2085, 9.34158, 0.84", "40.5709, -26.9899, 10.5707, 0.84", "40.9277, -25.7341, 11.7763, 0.6", "41.2532, -24.5508, 12.8615, 0.6", "41.4667, -23.7849, 13.5058, 0.96", "41.6082, -23.1722, 14.003, 0.96", "41.8265, -22.003, 14.8875, 0.12", "41.9029, -21.4131, 15.3074, 0.12", "41.9609, -20.8981, 15.631, 0.12", "42.0236, -20.3273, 15.9518, 0.12", "42.0892, -19.7532, 16.277, 0.6", "42.1619, -19.2909, 16.5142, 0.96", "42.2998, -18.4968, 16.7504, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "40.5735, -40.7037, -12.2578, 0.12", "41.9483, -41.329, -11.6718, 0.12", "42.355, -41.502, -11.4959, 0.12", "42.8656, -41.7082, -11.2718, 0.6", "43.4963, -41.9363, -11.0013, 0.6", "44.4132, -42.2389, -10.6293, 0.12", "45.2739, -42.4793, -10.3042, 0.12", "45.3851, -42.4974, -10.2664, 0.36", "45.7489, -42.5325, -10.1525, 0.12", "46.25, -42.552, -9.97489, 0.12", "46.7012, -42.5215, -9.80959, 0.48", "47.3645, -42.4543, -9.58528, 0.6", "47.8219, -42.4105, -9.41824, 0.48", "48.2266, -42.3944, -9.2757, 0.48", "49.1621, -42.3989, -8.79002, 0.12", "50.0875, -42.4818, -8.21578, 2.04", "50.6093, -42.577, -7.86378, 3.25", "51.0851, -42.7281, -7.54141, 3.37", "51.6796, -42.989, -7.1556, 2.88", "53.5331, -44.0126, -6.01166, 0.24", "54.3085, -44.5286, -5.57357, 0.24", "54.7936, -44.9128, -5.30513, 0.72", "55.6502, -45.6182, -4.88365, 0.96", "56.2034, -46.0892, -4.66673, 0.24", "56.3872, -46.238, -4.63384, 0.24", "56.6653, -46.4276, -4.65537, 0.24", "57.32, -46.7297, -4.71896, 0.24", "57.8983, -46.8848, -4.76304, 1.2", "58.3668, -46.9546, -4.72163, 1.92", "59.3282, -47.0401, -4.53078, 1.92", "60.2946, -47.0948, -4.26872, 0.36", "60.8939, -47.1167, -4.0278, 0.36", "62.0721, -47.1387, -3.4578, 0.36", "63.9154, -47.1751, -2.46976, 1.68", "64.4803, -47.1934, -2.16802, 2.52", "65.3454, -47.2448, -1.70328, 2.64", "67.25, -47.4314, -0.79302, 0.24", "68.0834, -47.5448, -0.45783, 0.24", "68.6582, -47.6325, -0.292987, 0.36", "69.6676, -47.7961, -0.17333, 1.08", "70.1887, -47.8838, -0.115124, 1.08", "71.1182, -48.0239, -0.0419402, 0.48", "71.5909, -48.0759, -0.0355263, 0.24", "72.2508, -48.1008, 0.0503874, 0.24", "72.8248, -48.0665, 0.205394, 0.6", "73.9563, -47.9189, 0.667873, 0.36", "74.4934, -47.8652, 0.905739, 0.36", "74.9221, -47.8683, 1.14448, 0.36", "75.2222, -47.9151, 1.33151, 0.48", "75.4436, -47.9798, 1.46342, 0.24", "75.8461, -48.1273, 1.7011, 0.24", "76.5784, -48.4141, 2.04954, 0.24", "77.6361, -48.824, 2.49507, 0.24", "78.0791, -48.9923, 2.66107, 1.2", "78.8535, -49.2444, 2.91128, 2.16", "79.9841, -49.5429, 3.27686, 1.8", "80.8869, -49.7247, 3.55362, 0.36", "82.2011, -49.8905, 4.08398, 0.36", "82.7836, -49.9339, 4.34687, 0.36", "83.7367, -49.9707, 4.83829, 0.36", "84.6419, -49.9841, 5.44283, 1.56", "85.3249, -49.9823, 5.97576, 2.04", "87.1824, -49.9756, 7.65878, 0.24", "87.7104, -49.9845, 8.19488, 0.24", "87.9728, -49.9999, 8.4639, 0.24", "89.1589, -50.1663, 9.67388, 1.68", "89.5146, -50.2376, 10.0035, 2.04", "89.7807, -50.303, 10.2608, 2.04", "90.9598, -50.5809, 11.3128, 0.24", "91.4717, -50.6675, 11.8019, 0.24", "91.8995, -50.6969, 12.2226, 1.2", "92.249, -50.6554, 12.5651, 1.2", "93.5764, -50.2337, 13.9763, 0.12", "94.0741, -49.9432, 14.5229, 0.12", "94.3681, -49.6758, 14.8197, 0.24", "94.5705, -49.4551, 15.055, 0.24", "94.9669, -49.0392, 15.4766, 0.24", "95.1894, -48.8304, 15.688, 0.24", "95.6186, -48.5215, 15.9744, 0.24", "96.3074, -48.1687, 16.3784, 0.24", "97.5679, -47.6345, 17.1192, 0.12", "98.4116, -47.3448, 17.6101, 0.12", "98.6446, -47.2832, 17.7446, 1.44", "99.5304, -47.0794, 18.2443, 2.52", "100.498, -46.8515, 18.7676, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.97023, -246.846, -32.669, 0.12", "3.85474, -248.56, -32.6659, 0.12", "4.30948, -249.43, -32.66, 0.12", "4.51923, -249.831, -32.6586, 0.48", "4.88344, -250.523, -32.6322, 0.48", "5.27465, -251.246, -32.5904, 0.48", "5.50105, -251.621, -32.6029, 0.48", "5.72604, -251.929, -32.6473, 0.48", "6.25846, -252.535, -32.8042, 1.68", "6.8294, -253.091, -33.0027, 2.28", "7.37897, -253.571, -33.2096, 2.4", "8.96344, -254.819, -33.857, 0.48", "10.0545, -255.635, -34.3411, 0.36", "10.7217, -256.098, -34.6653, 0.12", "11.0865, -256.321, -34.8596, 0.12", "11.3631, -256.473, -35.026, 0.12", "11.7927, -256.677, -35.2879, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.97023, -246.846, -32.669, 0.12", "2.94811, -247.335, -32.6594, 0.12", "2.94844, -247.459, -32.6641, 0.12", "2.9555, -247.585, -32.6728, 0.12", "2.96886, -247.795, -32.7057, 0.12", "2.97328, -247.9, -32.726, 0.48", "2.97531, -248.093, -32.7663, 0.48", "2.97616, -248.165, -32.7879, 0.12", "2.93899, -248.385, -32.884, 0.12", "2.87526, -248.596, -32.992, 0.12", "2.83245, -248.718, -33.0544, 1.68", "2.79809, -248.811, -33.1075, 1.8", "2.73704, -248.969, -33.2056, 1.8", "2.55294, -249.461, -33.5008, 0.12", "2.50619, -249.593, -33.5797, 0.12", "2.43082, -249.865, -33.725, 0.12", "2.39203, -250.072, -33.8385, 0.48", "2.38452, -250.143, -33.8755, 0.48", "2.3847, -250.314, -33.949, 0.48", "2.38654, -250.367, -33.9684, 0.12", "2.38231, -250.514, -34.0298, 0.12", "2.36573, -250.724, -34.1175, 0.12", "2.35481, -250.827, -34.1571, 0.96", "2.32364, -251.048, -34.2437, 1.44", "2.24823, -251.461, -34.4312, 0.12", "2.19525, -251.708, -34.5421, 0.12", "2.17093, -251.815, -34.5895, 0.12", "2.15213, -251.893, -34.6208, 0.6", "2.11687, -252.02, -34.6786, 0.6", "2.04034, -252.235, -34.8112, 0.12", "1.96083, -252.428, -34.9455, 0.12", "1.94827, -252.458, -34.9685, 0.48", "1.91473, -252.548, -35.03, 0.48", "1.83921, -252.815, -35.173, 0.48", "1.77367, -253.112, -35.2972, 0.24", "1.75658, -253.211, -35.3549, 0.12", "1.72469, -253.512, -35.5347, 0.12", "1.70755, -253.708, -35.6608, 1.44", "1.69883, -253.872, -35.7673, 2.16", "1.69394, -254.091, -35.9033, 2.28", "1.68576, -254.895, -36.3871, 0.12", "1.68914, -255.332, -36.6607, 0.12", "1.69568, -255.573, -36.8174, 0.84", "1.70268, -255.742, -36.9269, 1.44", "1.71042, -255.883, -37.0158, 0.96", "1.72247, -256.03, -37.0847, 0.12", "1.73333, -256.17, -37.1171, 0.12", "1.73799, -256.324, -37.15, 0.12", "1.73777, -256.412, -37.1649, 0.36", "1.74352, -256.634, -36.9483, 0.12", "1.75288, -256.983, -36.4779, 0.12", "1.75597, -257.063, -36.335, 1.08", "1.76049, -257.147, -36.1442, 1.8", "1.76415, -257.19, -36.0274, 2.04", "1.84892, -257.87, -33.8035, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "16.5737, 107.009, 11.6468, 0.48", "17.1527, 109.245, 11.9278, 0.48", "17.3735, 110.211, 12.0245, 0.48", "17.4917, 110.75, 12.0676, 0.48", "17.6256, 111.427, 12.0934, 0.48", "17.8692, 112.896, 12.1019, 0.48", "18.0592, 114.378, 12.0881, 0.48", "18.0769, 114.691, 12.0652, 0.72", "18.1184, 115.291, 12.0533, 0.96", "18.2068, 116.288, 12.0766, 0.96", "18.3363, 117.139, 12.1961, 0.36", "18.6261, 118.427, 12.4878, 0.36", "18.8392, 119.232, 12.716, 0.36", "19.312, 120.949, 13.2538, 1.56", "19.5311, 121.73, 13.5165, 2.16", "20.1225, 123.787, 14.2559, 0.48", "20.5207, 125.336, 14.7369, 0.48", "20.7203, 126.243, 14.985, 0.48", "20.7954, 126.769, 15.0984, 0.48", "20.8105, 127.708, 15.2206, 1.68", "20.7654, 128.269, 15.2699, 1.92", "20.5169, 130.077, 15.29, 1.08", "20.3927, 131.044, 15.3016, 0.48", "20.3345, 131.74, 15.3046, 0.36", "20.3285, 133.023, 15.2959, 0.36", "20.4232, 133.876, 15.3137, 0.36", "20.752, 135.423, 15.3348, 0.72", "20.937, 136.013, 15.3392, 0.36", "21.1672, 136.7, 15.3142, 0.36", "21.5425, 137.696, 15.2641, 0.36", "22.052, 138.961, 15.1908, 0.84", "22.6736, 140.292, 15.3095, 1.92", "23.0047, 141.209, 15.311, 2.28", "23.1816, 141.881, 15.2578, 2.64", "23.2791, 142.429, 15.1702, 2.76", "23.3533, 143.212, 14.9832, 2.76", "23.5465, 146.41, 13.9381, 1.56", "23.8176, 150.654, 12.2896, 0.12", "23.8497, 151.05, 12.124, 0.12", "23.8855, 151.402, 11.9911, 0.12", "23.9262, 151.978, 11.7947, 0.72", "23.9621, 152.808, 11.5519, 0.96", "23.9588, 153.797, 11.2742, 0.48", "24.0493, 154.637, 11.2483, 0.36", "24.2157, 156.529, 11.212, 0.36", "24.2689, 157.138, 11.2538, 0.36", "24.3023, 157.609, 11.31, 0.12", "24.3876, 158.821, 11.5479, 0.96", "24.4608, 159.666, 11.763, 1.32", "24.5167, 160.202, 11.8592, 1.2", "24.8114, 161.858, 12.3185, 0.48", "25.0659, 163.041, 12.6767, 0.24", "25.273, 163.921, 12.9439, 1.2", "25.4666, 164.673, 13.1677, 1.68", "25.9021, 166.226, 13.6279, 1.68", "26.6691, 168.827, 14.3771, 1.8", "26.9726, 169.829, 14.6219, 0.96", "27.352, 170.865, 14.9618, 1.08", "27.6701, 171.674, 15.2284, 0.36", "28.3357, 173.381, 15.717, 0.36", "28.7008, 174.406, 15.9562, 0.36", "28.9322, 175.131, 16.0297, 1.08", "29.517, 177.04, 16.2031, 1.2", "29.9677, 178.633, 16.2987, 0.96", "30.3746, 180.284, 16.3226, 0.36", "30.6579, 181.75, 16.1816, 0.24", "30.7966, 182.682, 16.0259, 0.6", "30.879, 183.301, 15.9158, 0.12", "30.9584, 183.831, 15.8074, 0.24", "31.249, 185.418, 15.5152, 0.24", "31.5038, 186.741, 15.2773, 0.24", "31.6687, 187.807, 15.0, 1.68", "31.866, 189.389, 14.5602, 2.52", "31.9819, 190.723, 14.2103, 0.48", "32.0639, 192.011, 13.8879, 0.48", "32.1025, 193.263, 13.6187, 0.72", "32.0896, 194.642, 13.4103, 1.08", "32.036, 195.572, 13.3169, 1.68", "31.8887, 196.788, 13.2387, 1.2", "31.7314, 197.806, 13.2617, 0.36", "31.522, 199.135, 13.371, 0.36", "31.3952, 200.034, 13.5161, 0.36", "31.2547, 201.051, 13.7272, 0.36", "31.0835, 202.302, 13.9802, 2.04", "31.0214, 202.851, 14.0964, 2.4", "30.9163, 204.153, 14.3033, 2.4", "30.8599, 206.136, 14.4252, 0.36", "30.8968, 207.358, 14.3873, 0.36", "30.9949, 208.444, 14.3322, 1.44", "31.1279, 209.287, 14.2745, 2.16", "31.492, 211.232, 14.1413, 0.48", "31.7199, 212.348, 14.0772, 0.12", "31.8794, 213.117, 14.0158, 0.6", "32.2725, 214.91, 13.989, 0.36", "32.4554, 215.781, 14.0514, 0.24", "32.6308, 216.786, 14.2252, 0.24", "32.6945, 217.345, 14.3564, 0.24", "32.7549, 218.38, 14.551, 0.36", "32.7934, 219.535, 14.6655, 0.36", "32.8574, 220.386, 14.6881, 0.36", "32.9598, 221.065, 14.7066, 0.36", "33.2195, 222.231, 14.6966, 1.68", "33.4206, 223.066, 14.6056, 2.4", "33.5585, 223.645, 14.4905, 2.4", "33.9858, 225.198, 14.1676, 0.24", "34.206, 225.938, 14.0201, 0.24", "34.344, 226.403, 13.9382, 0.48", "34.7899, 228.004, 13.7489, 0.24", "34.9797, 228.968, 13.6819, 0.24", "35.0829, 229.999, 13.6217, 0.24", "35.1009, 230.832, 13.6289, 0.72", "35.1142, 231.556, 13.6918, 0.84", "35.1264, 232.055, 13.7551, 0.36", "35.1525, 233.009, 13.8598, 0.36", "35.1595, 234.04, 13.8585, 0.48", "35.151, 235.547, 13.6867, 0.36", "35.1751, 236.383, 13.5156, 0.36", "35.2216, 236.957, 13.3957, 0.96", "35.3777, 238.306, 13.0261, 0.96", "35.5044, 238.928, 12.8751, 0.36", "35.6335, 239.447, 12.7874, 0.36", "35.9909, 240.887, 12.6158, 2.4", "36.3713, 242.42, 12.5611, 3.25", "36.7044, 243.837, 12.6296, 2.16", "37.1283, 245.836, 12.8185, 0.24", "37.3983, 247.305, 12.9611, 0.12", "37.5838, 248.538, 13.0627, 0.24", "37.6202, 248.958, 13.0914, 0.36", "37.6355, 250.051, 13.0877, 0.36", "37.5894, 251.425, 13.0365, 1.32", "37.5392, 252.274, 12.9492, 0.48", "37.5383, 252.766, 12.8956, 0.12", "37.5837, 253.617, 12.7937, 0.12", "37.6718, 254.596, 12.6929, 0.12", "37.7548, 255.2, 12.6421, 0.84", "38.0314, 256.881, 12.5613, 1.56", "38.1566, 257.555, 12.5363, 1.68", "38.4323, 258.778, 12.5008, 0.12", "38.7347, 259.824, 12.4472, 0.12", "38.9999, 260.329, 12.5387, 0.24", "39.1792, 260.522, 12.6303, 0.12", "39.7349, 260.836, 12.9481, 0.12", "40.1228, 260.985, 13.1941, 0.12", "41.5262, 261.327, 14.1644, 3.25", "45.6145, 261.872, 17.1504, 0.12", "45.9949, 261.895, 17.4455, 0.12", "46.323, 261.891, 17.712, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "16.5737, 107.009, 11.6468, 0.12", "15.2922, 107.416, 11.8901, 0.12", "14.9851, 107.514, 11.9587, 0.12", "14.7535, 107.59, 11.9899, 0.96", "14.1708, 107.768, 12.0386, 0.12", "13.7688, 107.883, 12.0327, 0.12", "13.5333, 107.951, 12.0214, 0.12", "13.1911, 108.054, 11.9885, 1.08", "12.485, 108.253, 11.9572, 0.36", "11.8012, 108.438, 11.9323, 0.36", "10.9646, 108.685, 11.9916, 0.36", "10.5893, 108.789, 12.0266, 0.36", "9.91859, 108.945, 12.2514, 0.36", "9.56583, 109.0, 12.4633, 0.36", "9.20796, 109.019, 12.7886, 0.36", "8.46937, 109.015, 13.6344, 1.92", "8.08431, 108.984, 14.1744, 1.92", "6.95815, 108.78, 15.9326, 0.12", "6.7194, 108.71, 16.3549, 0.12", "6.59193, 108.657, 16.6223, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "9.2578, 109.398, -4.36552, 0.12", "8.72505, 110.539, -5.35043, 0.12", "8.64635, 110.755, -5.49937, 0.12", "8.53849, 111.163, -5.71682, 0.24", "8.31147, 112.529, -6.42808, 0.24", "8.26131, 113.038, -6.67512, 0.24", "8.24023, 113.397, -6.83964, 0.24", "8.28917, 114.158, -7.12888, 1.68", "8.34687, 114.685, -7.35527, 1.68", "8.60358, 116.255, -8.06163, 0.12", "8.72752, 116.878, -8.33387, 0.12", "8.77275, 117.085, -8.44194, 0.6", "8.86722, 117.486, -8.68156, 0.48", "9.11489, 118.455, -9.33407, 0.12", "9.25438, 118.954, -9.69911, 0.12", "9.29499, 119.078, -9.77812, 0.12", "9.38482, 119.362, -9.95203, 0.96", "9.48023, 119.656, -10.1161, 0.96", "9.58314, 119.985, -10.2925, 0.48", "9.83319, 120.771, -10.6505, 0.12", "10.1728, 121.848, -11.1419, 0.12", "10.3828, 122.523, -11.4575, 1.8", "10.4912, 122.878, -11.6235, 2.16", "10.8355, 123.973, -12.1134, 0.12", "11.1007, 124.769, -12.4515, 0.12", "11.2076, 125.077, -12.5663, 0.96", "11.377, 125.559, -12.7421, 0.24", "11.5391, 126.018, -12.9032, 0.24", "11.7967, 126.704, -13.1493, 1.68", "12.0105, 127.213, -13.326, 0.12", "12.2097, 127.624, -13.4743, 0.12", "12.4841, 128.139, -13.7398, 0.6", "12.7072, 128.52, -13.9706, 0.12", "13.1941, 129.314, -14.5176, 0.12", "13.2912, 129.466, -14.6313, 0.12", "13.681, 130.087, -15.1015, 1.92", "14.6213, 131.582, -16.2002, 0.12", "15.0856, 132.335, -16.7165, 0.12", "15.2244, 132.569, -16.8475, 0.84", "15.3735, 132.847, -16.9684, 0.12", "15.7208, 133.593, -17.2006, 0.12", "15.9658, 134.182, -17.2468, 1.68", "16.1238, 134.567, -17.1724, 1.2", "16.406, 135.235, -16.9855, 0.12", "16.6737, 135.818, -16.7673, 0.12", "16.8739, 136.215, -16.5846, 0.6", "17.4468, 137.234, -16.0395, 0.48", "17.732, 137.734, -15.7727, 0.48", "17.952, 138.104, -15.5755, 0.48", "18.1984, 138.529, -15.3832, 0.12", "18.3592, 138.817, -15.2806, 0.12", "18.6288, 139.384, -15.1721, 1.44", "18.7592, 139.745, -15.1531, 1.68", "18.977, 140.469, -15.1393, 0.12", "19.218, 141.413, -15.1472, 0.12", "19.4054, 142.25, -15.1795, 1.92", "19.605, 143.231, -15.2247, 0.12", "19.8058, 144.266, -15.285, 0.12", "19.8802, 144.647, -15.3129, 0.6", "19.915, 144.836, -15.33, 0.12", "20.0639, 145.701, -15.4053, 0.12", "20.1455, 146.29, -15.4963, 1.08", "20.1828, 146.586, -15.5567, 0.72", "20.2036, 146.791, -15.6139, 0.12", "20.2676, 147.517, -15.8544, 0.12", "20.3206, 148.2, -16.1044, 1.44", "20.3797, 149.399, -16.662, 0.12", "20.4006, 149.739, -16.8301, 0.12", "20.4081, 149.824, -16.8727, 0.48", "20.4312, 150.018, -16.9629, 0.12", "20.5403, 150.631, -17.2122, 0.48", "20.7305, 151.382, -17.4294, 0.12", "21.0103, 152.337, -17.6866, 0.12", "21.0629, 152.515, -17.7409, 0.72", "21.2413, 153.134, -17.9321, 1.44", "21.379, 153.607, -18.076, 1.8", "21.5644, 154.192, -18.25, 1.68", "21.9547, 155.422, -18.5832, 0.12", "22.0819, 155.869, -18.7364, 0.12", "22.1966, 156.306, -18.9033, 0.12", "22.3036, 156.807, -19.1275, 1.32", "22.3702, 157.165, -19.2971, 1.32", "22.4085, 157.423, -19.42, 1.32", "22.4938, 158.15, -19.7188, 0.12", "22.5369, 158.792, -20.0485, 0.12", "22.5274, 159.434, -20.4555, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.2578, 109.398, -4.36552, 0.12", "13.4212, 109.284, 12.9584, 0.12", "13.5858, 109.281, 13.6219, 0.12", "13.6911, 109.279, 14.0326, 0.12", "14.0591, 109.272, 15.4204, 0.84", "14.1828, 109.27, 15.8878, 0.84", "14.4279, 109.255, 16.9589, 0.36", "14.6627, 109.342, 16.5452, 0.36", "14.8558, 109.446, 16.1138, 0.36", "15.0635, 109.571, 15.5987, 0.36", "15.5367, 109.868, 14.4005, 0.36", "16.5139, 110.528, 11.8635, 0.36", "17.045, 110.9, 10.5402, 2.04", "17.8782, 111.479, 8.54652, 1.56", "18.2671, 111.743, 7.71072, 0.12", "18.4628, 111.87, 7.34723, 0.12", "19.0813, 112.196, 6.47809, 1.2", "19.6275, 112.396, 5.95434, 0.48", "19.9445, 112.485, 5.71301, 0.12", "20.8508, 112.721, 5.16731, 0.12", "21.7767, 112.974, 4.53179, 1.32", "22.1925, 113.093, 4.21397, 1.68", "23.4047, 113.496, 3.15878, 0.12", "23.7636, 113.64, 2.76655, 0.12", "24.2782, 113.875, 2.07207, 0.6", "25.2107, 114.302, 0.627967, 0.12", "25.5261, 114.433, 0.122432, 0.12", "26.3965, 114.771, -1.33344, 1.8", "27.3034, 115.096, -2.83139, 1.8", "28.2222, 115.364, -4.44122, 0.48", "28.5516, 115.43, -4.99673, 0.48", "28.8945, 115.468, -5.49338, 0.48", "29.5963, 115.512, -6.44854, 1.44", "30.0229, 115.52, -6.9827, 1.68", "31.5988, 115.601, -8.84625, 0.36", "32.2974, 115.717, -9.67785, 0.36", "32.8892, 115.92, -10.5601, 1.68", "33.4128, 116.181, -11.4521, 1.2", "34.1054, 116.646, -12.7889, 0.36", "34.55, 117.025, -13.7321, 0.36", "35.1018, 117.648, -15.053, 1.68", "36.0345, 118.945, -17.6206, 0.24", "36.2313, 119.252, -18.1866, 0.24", "36.4767, 119.619, -18.8204, 0.84", "36.6826, 119.89, -19.2795, 0.96", "37.2367, 120.431, -20.2768, 0.24", "37.6027, 120.669, -20.7794, 0.24", "38.3635, 120.968, -21.6059, 1.44", "38.6982, 121.04, -22.0401, 1.68", "39.2484, 121.06, -23.0124, 0.36", "39.5026, 121.024, -23.549, 0.36", "39.6818, 120.965, -23.9878, 0.36", "40.3884, 120.65, -25.887, 0.96", "41.1681, 120.232, -28.0791, 1.68", "42.0949, 119.693, -30.709, 0.6", "42.273, 119.575, -31.2081, 0.48", "42.9422, 119.078, -33.0228, 2.04", "43.1785, 118.874, -33.6182, 2.52", "43.9219, 118.172, -35.1846, 0.36", "44.1528, 117.963, -35.5577, 0.36", "44.5666, 117.651, -36.0512, 0.48", "45.4764, 117.006, -37.031, 0.36", "45.8135, 116.756, -37.3524, 0.36", "46.005, 116.606, -37.5306, 0.36", "46.9815, 115.838, -38.3162, 0.36", "47.8, 115.209, -38.906, 1.08", "48.3733, 114.8, -39.2426, 1.8", "49.1281, 114.302, -39.5694, 1.2", "49.7797, 113.924, -39.8223, 0.36", "50.6912, 113.456, -40.0635, 0.36", "51.6342, 113.032, -40.2135, 0.36", "52.3776, 112.756, -40.2784, 1.2", "53.3021, 112.491, -40.3514, 1.8", "54.5253, 112.227, -40.4622, 0.12", "56.2569, 111.936, -40.6626, 0.12", "57.2039, 111.794, -40.8037, 1.44", "57.7431, 111.694, -40.9043, 2.16", "58.7014, 111.451, -41.1021, 2.4", "59.9485, 111.032, -41.3573, 0.24", "60.4438, 110.801, -41.4554, 0.24", "60.9034, 110.509, -41.5722, 0.24", "61.7046, 109.887, -41.7207, 0.48", "62.2282, 109.426, -41.7934, 0.12", "62.8502, 108.888, -41.8246, 0.12", "63.2927, 108.55, -41.7922, 0.12", "63.7569, 108.267, -41.7469, 0.12", "64.3559, 107.989, -41.614, 0.36", "64.7536, 107.856, -41.5014, 0.12", "65.9944, 107.491, -41.1301, 0.12", "67.0771, 107.204, -40.7848, 1.44", "67.3551, 107.135, -40.6945, 1.56", "68.9552, 106.731, -40.1502, 0.36", "69.4724, 106.57, -39.8904, 0.36", "69.7816, 106.448, -39.6852, 0.36", "70.1509, 106.235, -39.3724, 0.36", "70.4238, 106.038, -39.1684, 0.36", "70.6192, 105.877, -39.004, 0.36", "71.9313, 104.667, -37.9124, 0.12", "72.1858, 104.432, -37.701, 0.12", "72.4735, 104.177, -37.4496, 0.12", "73.4534, 103.363, -36.6214, 2.4", "75.1301, 102.069, -35.3539, 0.12", "75.6032, 101.716, -35.0457, 0.12", "76.2037, 101.283, -34.6781, 0.36", "76.7894, 100.864, -34.2842, 0.12", "77.274, 100.519, -33.9392, 0.12", "77.7339, 100.181, -33.5927, 1.08", "78.1285, 99.889, -33.298, 1.08", "79.4778, 98.8416, -32.187, 0.36", "79.8266, 98.5348, -31.8999, 0.36", "80.1023, 98.2746, -31.7091, 0.12", "80.2693, 98.1128, -31.571, 0.12", "81.1947, 97.2164, -30.7603, 0.12", "81.6142, 96.828, -30.417, 1.32", "82.2535, 96.2677, -29.9399, 2.04", "83.002, 95.6741, -29.3869, 1.32", "84.6869, 94.4616, -28.1417, 0.12", "84.9149, 94.3207, -27.9832, 0.12", "85.3123, 94.1434, -27.6313, 0.24", "85.9107, 93.9235, -27.0475, 0.24", "86.3712, 93.7984, -26.5492, 0.24", "87.008, 93.68, -25.7903, 0.24", "87.3303, 93.6482, -25.4251, 0.84", "89.6203, 93.5119, -22.5141, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "39.0659, 99.3768, 13.7406, 0.72", "38.4231, 98.915, 12.7902, 0.72", "37.4806, 98.3721, 11.5847, 0.6", "36.8676, 98.019, 10.8006, 0.36", "36.6397, 97.8877, 10.5091, 0.48", "36.0707, 97.5599, 9.78127, 0.36", "35.3759, 97.1597, 8.89253, 0.12", "35.1142, 97.0551, 8.60059, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "39.0659, 99.3768, 13.7406, 0.48", "39.0287, 100.481, 13.9172, 0.48", "39.0015, 101.427, 14.1267, 0.48", "38.9161, 102.426, 14.3833, 0.6", "38.8163, 103.225, 14.6221, 0.48", "38.6544, 104.424, 14.9965, 0.48", "38.4734, 105.779, 15.4227, 2.04", "38.3656, 106.896, 15.7644, 1.92", "38.2262, 108.202, 16.0956, 1.44", "38.1007, 109.24, 16.3134, 1.08", "37.9998, 110.164, 16.4748, 0.96", "37.9602, 110.64, 16.5119, 0.72", "37.9055, 111.765, 16.4533, 1.08", "37.9395, 113.626, 16.2673, 0.48", "38.0013, 114.408, 16.1783, 0.48", "38.1455, 115.702, 16.0413, 1.32", "38.2628, 116.845, 15.9249, 1.92", "38.4329, 118.353, 15.8575, 1.08", "38.5864, 119.407, 15.8809, 0.72", "38.6976, 119.958, 15.9505, 0.24", "39.0293, 121.218, 16.0976, 0.24", "39.2672, 122.148, 16.2132, 0.72", "39.5175, 123.22, 16.4192, 0.12", "39.764, 124.15, 16.6114, 0.12", "40.1009, 125.462, 16.8558, 1.8", "40.511, 127.125, 17.1787, 2.76", "40.773, 128.199, 17.4215, 2.64", "41.2114, 129.987, 17.8556, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "19.3604, -120.661, -48.0286, 0.12", "20.08, -121.535, -47.9595, 0.12", "20.6772, -122.26, -47.9021, 0.12", "21.281, -122.994, -47.8441, 0.6", "21.5979, -123.379, -47.8137, 0.12", "22.3577, -124.301, -47.7407, 0.12", "22.7558, -124.785, -47.7025, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "19.3604, -120.661, -48.0286, 0.12", "19.031, -121.978, -48.0921, 0.12", "18.7865, -122.797, -48.0081, 0.12", "18.6199, -123.404, -47.905, 0.96", "18.4706, -124.003, -47.7985, 1.56", "18.2636, -124.95, -47.6376, 0.12", "18.1733, -125.448, -47.5586, 0.12", "17.9552, -127.012, -47.2022, 1.08", "17.8862, -127.689, -47.0345, 0.72", "17.8508, -128.219, -46.9106, 0.12", "17.8, -128.854, -46.7153, 0.12", "17.7404, -129.43, -46.5226, 0.12", "17.6303, -130.337, -46.2509, 1.44", "17.5694, -130.82, -46.134, 1.68", "17.5039, -131.195, -46.0413, 1.68", "17.195, -132.765, -45.6905, 0.12", "17.0225, -133.476, -45.554, 0.12", "16.8065, -134.225, -45.4574, 0.12", "16.7259, -134.481, -45.4457, 0.96", "16.5265, -135.07, -45.446, 0.96", "16.3491, -135.608, -45.4746, 0.12", "15.8774, -137.041, -45.6809, 0.12", "15.6269, -137.769, -45.7908, 0.96", "15.3927, -138.427, -45.9085, 1.68", "15.2331, -138.89, -45.998, 1.92", "15.0754, -139.373, -46.1126, 1.92", "14.7063, -140.566, -46.448, 0.12", "14.5686, -141.014, -46.6145, 0.12", "14.2456, -142.002, -47.033, 0.12", "14.0943, -142.435, -47.2743, 0.6", "13.8669, -142.992, -47.6472, 0.12", "13.6043, -143.547, -48.0683, 0.12", "13.3231, -144.114, -48.5332, 1.2", "12.9145, -144.897, -49.1972, 1.68", "12.2909, -146.017, -50.1442, 0.12", "11.9894, -146.582, -50.6121, 0.12", "11.7979, -146.993, -50.9158, 0.12", "11.6162, -147.487, -51.2668, 0.12", "11.5341, -147.79, -51.4622, 1.2", "11.4013, -148.461, -51.8549, 1.56", "11.2336, -149.667, -52.4861, 0.24", "11.1525, -150.561, -52.9587, 0.24", "11.0746, -151.454, -53.4462, 0.72", "11.0268, -151.891, -53.6888, 0.84", "10.9677, -152.358, -53.9433, 0.12", "10.9179, -152.681, -54.1227, 0.12", "10.807, -153.206, -54.4385, 0.12", "10.7217, -153.58, -54.6839, 0.12", "10.5765, -154.06, -54.7813, 0.12", "10.4994, -154.296, -54.7812, 0.12", "10.1935, -155.144, -54.6765, 1.32", "9.81078, -156.07, -54.5031, 0.12", "9.47367, -156.904, -54.2534, 0.12", "8.00341, -160.611, -52.6823, 0.6", "7.41505, -162.0, -51.8458, 1.32", "7.23737, -162.377, -51.5335, 2.04", "7.01991, -162.778, -51.0642, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "100.498, -46.8515, 18.7676, 0.24", "101.618, -47.162, 19.5194, 0.24", "102.112, -47.2886, 19.8531, 0.24", "103.919, -47.7388, 21.0593, 0.24", "104.456, -47.855, 21.3981, 0.96", "105.486, -48.034, 21.9597, 1.56", "106.388, -48.1819, 22.468, 0.36", "108.14, -48.4289, 23.4267, 0.12", "108.539, -48.475, 23.6397, 1.2", "109.803, -48.5614, 24.2458, 2.16", "111.375, -48.5949, 25.0532, 0.12", "113.004, -48.5243, 25.9189, 0.12", "113.294, -48.4832, 26.0758, 0.84", "113.865, -48.3275, 26.3786, 0.96", "114.63, -48.0663, 26.8145, 0.12", "115.33, -47.7222, 27.2838, 0.12", "115.56, -47.5399, 27.4678, 0.6", "116.125, -46.9309, 27.7881, 0.12", "116.5, -46.4258, 28.0459, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "100.498, -46.8515, 18.7676, 0.6", "100.63, -45.5081, 18.8207, 0.6", "100.674, -45.1378, 18.8363, 0.6", "100.81, -44.3574, 18.8453, 0.84", "101.068, -43.3106, 18.835, 0.12", "101.361, -42.1202, 18.8049, 0.12", "101.463, -41.7157, 18.7898, 0.96", "101.734, -40.8443, 18.7531, 1.2", "102.087, -39.8659, 18.6883, 0.12", "102.527, -38.7853, 18.5892, 0.12", "102.905, -37.9497, 18.4663, 0.12", "103.38, -37.0285, 18.2856, 0.12", "103.609, -36.6203, 18.2028, 0.12", "104.164, -35.7125, 18.0162, 1.68", "104.372, -35.4306, 17.892, 1.92", "105.21, -34.5053, 17.2534, 0.12", "105.961, -33.8029, 16.5807, 0.12", "106.289, -33.4951, 16.2243, 1.32", "106.558, -33.2182, 15.8295, 1.68", "108.14, -31.5989, 12.8463, 0.36", "108.33, -31.4272, 12.4547, 0.36", "108.586, -31.2142, 11.862, 0.12", "108.961, -30.9145, 10.8827, 0.12", "109.672, -30.3202, 8.82726, 0.48", "110.085, -29.9205, 7.48308, 1.44", "110.376, -29.4973, 6.40204, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "11.7927, -256.677, -35.2879, 0.24", "12.0192, -256.345, -35.4749, 0.24", "12.3065, -255.922, -35.7122, 0.24", "12.6541, -255.411, -35.9992, 0.6", "13.0053, -254.895, -36.2892, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "11.7927, -256.677, -35.2879, 0.12", "12.3924, -257.007, -34.9253, 0.12", "12.7787, -257.183, -34.6884, 0.12", "13.1105, -257.297, -34.5268, 0.12", "13.5337, -257.4, -34.379, 0.12", "13.765, -257.438, -34.3179, 0.12", "15.6265, -257.631, -33.9477, 0.12", "16.4074, -257.613, -33.8687, 2.04", "17.2364, -257.53, -33.8033, 1.56", "18.1056, -257.39, -33.765, 0.36", "18.577, -257.286, -33.7306, 0.36", "19.1102, -257.148, -33.695, 0.36", "20.1712, -256.843, -33.6741, 0.36", "20.6029, -256.716, -33.6069, 0.6", "20.9042, -256.629, -33.5224, 0.6", "22.2249, -256.228, -33.0485, 0.36", "22.5175, -256.14, -32.9386, 0.6", "22.9287, -256.022, -32.8108, 0.6", "23.6695, -255.831, -32.6564, 0.12", "23.9706, -255.777, -32.6504, 0.12", "24.5097, -255.73, -32.7373, 0.12", "25.0032, -255.751, -32.958, 1.08", "25.9278, -255.915, -33.4799, 0.12", "26.122, -255.985, -33.6073, 0.12", "26.6455, -256.24, -33.9749, 0.12", "26.9746, -256.437, -34.2075, 0.48", "27.5037, -256.806, -34.584, 0.12", "27.8176, -257.046, -34.7988, 0.12", "28.369, -257.476, -35.1113, 0.12", "28.7578, -257.781, -35.343, 0.12", "29.0822, -258.028, -35.5473, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "7.01991, -162.778, -51.0642, 0.48", "7.02509, -164.339, -55.2233, 0.48", "7.01093, -164.595, -55.8727, 0.48", "6.95597, -165.212, -57.2483, 0.12", "6.93305, -165.524, -57.8815, 0.12", "6.90128, -165.956, -58.7589, 1.2", "6.86127, -166.501, -59.8639, 0.12", "6.83225, -166.649, -60.0833, 0.12", "6.74305, -167.111, -60.7855, 0.72", "6.66926, -167.392, -61.1173, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "7.01991, -162.778, -51.0642, 0.12", "5.50505, -164.33, -52.8601, 0.12", "4.91899, -165.047, -53.3581, 0.12", "4.75121, -165.258, -53.4783, 0.6", "4.27299, -165.848, -53.7691, 0.24", "4.09225, -166.072, -53.8351, 0.24", "3.60634, -166.659, -53.9453, 0.24", "3.23761, -167.102, -53.8797, 0.6", "2.66825, -167.665, -53.7661, 0.12", "2.17496, -168.077, -53.6804, 0.12", "1.13677, -168.777, -53.5388, 0.84", "0.889184, -168.927, -53.4964, 0.84", "0.423278, -169.174, -53.3861, 0.12", "0.167768, -169.291, -53.3077, 0.12", "-0.491479, -169.544, -53.0451, 0.84", "-0.760106, -169.618, -52.9618, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_DBC_c5d29c2b17_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.60907, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 4.01134, -5.98102, -16.8327, 3.85 ) }
    dend_26 { pt3dadd( 4.98262, -5.32869, -15.9603, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -13.0871, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.521983, -14.32, -1.1479, 1.92 ) }
    dend_15 { pt3dadd( -0.420238, -15.2466, -0.562699, 1.8 ) }
    dend_15 { pt3dadd( -0.321506, -15.9864, -0.179051, 1.92 ) }
    dend_15 { pt3dadd( -0.0185512, -17.9587, 0.650584, 1.32 ) }
    dend_15 { pt3dadd( 0.145137, -18.8517, 0.954549, 1.56 ) }
    dend_15 { pt3dadd( 0.335798, -19.7358, 1.19335, 1.8 ) }
    dend_15 { pt3dadd( 0.51918, -20.4472, 1.26768, 2.04 ) }
    dend_15 { pt3dadd( 0.846085, -21.5501, 1.24712, 2.16 ) }
    dend_15 { pt3dadd( 1.07277, -22.2643, 1.14064, 1.32 ) }
    dend_15 { pt3dadd( 1.32541, -23.0738, 0.96812, 1.44 ) }
    dend_15 { pt3dadd( 1.61292, -24.1315, 0.78868, 1.44 ) }
    dend_15 { pt3dadd( 1.79051, -24.9616, 0.691941, 1.8 ) }
    dend_15 { pt3dadd( 1.87013, -25.5405, 0.647874, 2.04 ) }
    dend_15 { pt3dadd( 1.89896, -26.3638, 0.622033, 1.68 ) }
    dend_15 { pt3dadd( 1.82368, -27.5959, 0.600949, 1.44 ) }
    dend_15 { pt3dadd( 1.72558, -28.2096, 0.59744, 1.8 ) }
    dend_15 { pt3dadd( 1.60335, -28.7133, 0.602991, 2.04 ) }
    dend_15 { pt3dadd( 1.40297, -29.4011, 0.625552, 1.92 ) }
    dend_15 { pt3dadd( 1.18746, -30.0353, 0.644111, 1.56 ) }
    dend_15 { pt3dadd( 0.903716, -30.8119, 0.630138, 1.56 ) }
    dend_15 { pt3dadd( 0.712748, -31.3306, 0.554738, 0.72 ) }
    dend_15 { pt3dadd( 0.578785, -31.7198, 0.489057, 0.48 ) }
    dend_15 { pt3dadd( 0.47657, -32.0276, 0.447769, 0.48 ) }
    dend_15 { pt3dadd( 0.240627, -32.7566, 0.379664, 1.32 ) }
    dend_15 { pt3dadd( 0.0456073, -33.3685, 0.325647, 1.68 ) }
    dend_15 { pt3dadd( -0.31538, -34.5069, 0.191116, 1.56 ) }
    dend_15 { pt3dadd( -0.518721, -35.1471, 0.116777, 1.92 ) }
    dend_15 { pt3dadd( -0.813239, -36.0986, 0.0122525, 2.64 ) }
    dend_15 { pt3dadd( -1.01734, -36.8059, -0.0436026, 2.76 ) }
    dend_15 { pt3dadd( -1.16921, -37.4346, -0.063516, 2.76 ) }
    dend_15 { pt3dadd( -1.33437, -38.3255, -0.0369587, 1.68 ) }
    dend_15 { pt3dadd( -1.40056, -38.898, 0.00277666, 0.96 ) }
    dend_15 { pt3dadd( -1.43475, -39.6528, 0.0478181, 0.96 ) }
    dend_15 { pt3dadd( -1.41469, -40.6263, 0.0973587, 1.32 ) }
    dend_15 { pt3dadd( -1.32836, -42.0262, 0.185085, 1.8 ) }
    dend_15 { pt3dadd( -1.278, -42.6372, 0.231649, 2.16 ) }
    dend_15 { pt3dadd( -1.21503, -43.3386, 0.280231, 2.28 ) }
    dend_15 { pt3dadd( -1.13868, -44.199, 0.31994, 0.84 ) }
    dend_15 { pt3dadd( -1.10313, -44.763, 0.329902, 0.84 ) }
    dend_15 { pt3dadd( -1.08241, -45.5975, 0.310224, 1.08 ) }
    dend_15 { pt3dadd( -1.13891, -46.4722, 0.262729, 1.68 ) }
    dend_15 { pt3dadd( -1.26205, -47.1514, 0.220663, 2.52 ) }
    dend_15 { pt3dadd( -1.34497, -47.43, 0.188072, 3.0 ) }
    dend_15 { pt3dadd( -1.46237, -47.7307, 0.138332, 2.88 ) }
    dend_15 { pt3dadd( -1.53871, -47.8962, 0.109225, 2.88 ) }
    dend_15 { pt3dadd( -1.859, -48.5234, -0.00875074, 2.16 ) }
    dend_15 { pt3dadd( -2.383, -49.4933, -0.106188, 0.96 ) }
    dend_15 { pt3dadd( -2.78472, -50.2308, -0.159302, 0.48 ) }
    dend_15 { pt3dadd( -2.92547, -50.4854, -0.176762, 0.48 ) }
    dend_15 { pt3dadd( -3.41912, -51.3689, -0.230719, 1.92 ) }
    dend_15 { pt3dadd( -3.8988, -52.2066, -0.269352, 3.12 ) }
    dend_15 { pt3dadd( -4.43913, -53.1619, -0.276001, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 11.2669, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.25335, 13.7096, 1.03031, 1.44 ) }
    dend_0 { pt3dadd( 3.87117, 16.0529, 1.8156, 2.16 ) }
    dend_0 { pt3dadd( 4.56456, 18.6099, 2.61513, 3.25 ) }
    dend_0 { pt3dadd( 5.05252, 20.3401, 3.13627, 3.49 ) }
    dend_0 { pt3dadd( 5.61772, 22.2944, 3.81692, 3.25 ) }
    dend_0 { pt3dadd( 6.01426, 23.6655, 4.29445, 2.88 ) }
    dend_0 { pt3dadd( 6.31959, 24.7061, 4.70611, 2.88 ) }
    dend_0 { pt3dadd( 6.64945, 25.7786, 5.08959, 2.52 ) }
    dend_0 { pt3dadd( 7.27581, 27.6716, 5.7947, 2.16 ) }
    dend_0 { pt3dadd( 8.17979, 30.2441, 6.77999, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.781102 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.781102 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.781102 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.98262, -5.32869, -15.9603, 1.56 ) }
    dend_48 { pt3dadd( 2.05747, -2.44147, -17.5315, 1.56 ) }
    dend_48 { pt3dadd( 0.891731, -1.1852, -18.2081, 1.2 ) }
    dend_48 { pt3dadd( 0.120319, -0.266824, -18.7076, 0.96 ) }
    dend_48 { pt3dadd( -0.727536, 0.870474, -19.2604, 0.96 ) }
    dend_48 { pt3dadd( -2.12592, 2.9306, -20.237, 1.32 ) }
    dend_48 { pt3dadd( -3.60709, 5.36002, -21.1933, 1.32 ) }
    dend_48 { pt3dadd( -4.67103, 7.44235, -21.7554, 1.44 ) }
    dend_48 { pt3dadd( -5.45735, 9.29977, -22.1748, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( -6.1651, 11.3498, -22.5335, 1.44 ) }
    dend_48 { pt3dadd( -6.66268, 13.0081, -22.7206, 1.68 ) }
    dend_48 { pt3dadd( -7.54468, 16.0634, -22.8674, 2.88 ) }
    dend_48 { pt3dadd( -7.94394, 17.3655, -22.8426, 3.73 ) }
    dend_48 { pt3dadd( -8.68264, 19.3872, -22.7457, 3.73 ) }
    dend_48 { pt3dadd( -9.82827, 21.9466, -22.6027, 2.88 ) }
    dend_48 { pt3dadd( -11.3199, 24.7401, -22.4983, 1.68 ) }
    dend_48 { pt3dadd( -12.1024, 25.999, -22.4634, 1.2 ) }
    dend_48 { pt3dadd( -12.8785, 27.1161, -22.4936, 0.96 ) }
    dend_48 { pt3dadd( -13.9503, 28.5248, -22.5211, 1.68 ) }
    dend_48 { pt3dadd( -15.2431, 30.0354, -22.5378, 2.88 ) }
    dend_48 { pt3dadd( -15.88, 30.6638, -22.5417, 3.49 ) }
    dend_48 { pt3dadd( -16.6898, 31.3338, -22.5642, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.98262, -5.32869, -15.9603, 1.32 ) }
    dend_27 { pt3dadd( 6.93197, -6.51559, -15.8335, 1.32 ) }
    dend_27 { pt3dadd( 7.72598, -6.97364, -15.9022, 0.84 ) }
    dend_27 { pt3dadd( 8.88266, -7.66466, -16.1113, 1.2 ) }
    dend_27 { pt3dadd( 10.1455, -8.50421, -16.4688, 1.44 ) }
    dend_27 { pt3dadd( 11.4004, -9.5491, -17.0032, 1.32 ) }
    dend_27 { pt3dadd( 12.3757, -10.6086, -17.5498, 1.56 ) }
    dend_27 { pt3dadd( 13.2731, -12.1012, -18.4288, 1.2 ) }
    dend_27 { pt3dadd( 13.5146, -12.6487, -18.7798, 1.2 ) }
    dend_27 { pt3dadd( 13.7468, -13.5833, -19.4159, 1.2 ) }
    dend_27 { pt3dadd( 13.8551, -15.1716, -20.4889, 2.64 ) }
    dend_27 { pt3dadd( 13.7619, -16.4974, -21.2822, 4.45 ) }
    dend_27 { pt3dadd( 13.6316, -17.5504, -21.7249, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.43913, -53.1619, -0.276001, 3.0 ) }
    dend_25 { pt3dadd( -5.39672, -54.1126, -0.260476, 3.0 ) }
    dend_25 { pt3dadd( -5.94297, -54.7373, -0.241871, 2.76 ) }
    dend_25 { pt3dadd( -6.80364, -55.8448, -0.141895, 1.92 ) }
    dend_25 { pt3dadd( -7.08491, -56.2693, -0.0805465, 1.92 ) }
    dend_25 { pt3dadd( -7.63464, -57.2603, 0.0898845, 0.6 ) }
    dend_25 { pt3dadd( -7.95196, -57.9531, 0.206259, 0.48 ) }
    dend_25 { pt3dadd( -8.0211, -58.227, 0.252045, 0.48 ) }
    dend_25 { pt3dadd( -8.12046, -58.9461, 0.369261, 0.48 ) }
    dend_25 { pt3dadd( -8.14532, -59.8209, 0.495707, 0.84 ) }
    dend_25 { pt3dadd( -8.08043, -60.8138, 0.636649, 1.08 ) }
    dend_25 { pt3dadd( -7.93744, -61.7906, 0.811732, 1.32 ) }
    dend_25 { pt3dadd( -7.7217, -62.7519, 0.983825, 0.96 ) }
    dend_25 { pt3dadd( -7.52244, -63.4267, 1.11044, 0.72 ) }
    dend_25 { pt3dadd( -7.27177, -64.1263, 1.23955, 0.6 ) }
    dend_25 { pt3dadd( -6.80346, -65.2216, 1.49942, 0.48 ) }
    dend_25 { pt3dadd( -6.27607, -66.2356, 1.74071, 0.48 ) }
    dend_25 { pt3dadd( -5.70073, -67.193, 1.97421, 1.44 ) }
    dend_25 { pt3dadd( -5.05229, -68.1798, 2.20907, 1.92 ) }
    dend_25 { pt3dadd( -4.55837, -68.9056, 2.40221, 2.04 ) }
    dend_25 { pt3dadd( -3.91934, -69.8905, 2.67088, 1.44 ) }
    dend_25 { pt3dadd( -3.15634, -71.1231, 2.97911, 0.84 ) }
    dend_25 { pt3dadd( -2.95341, -71.5054, 3.10326, 0.12 ) }
    dend_25 { pt3dadd( -2.73765, -72.051, 3.33839, 0.12 ) }
    dend_25 { pt3dadd( -2.54912, -72.9549, 3.85659, 1.32 ) }
    dend_25 { pt3dadd( -2.48524, -73.9221, 4.49774, 1.68 ) }
    dend_25 { pt3dadd( -2.48987, -74.3806, 4.81428, 1.8 ) }
    dend_25 { pt3dadd( -2.53535, -76.2724, 6.16141, 1.2 ) }
    dend_25 { pt3dadd( -2.57418, -77.0847, 6.71563, 1.68 ) }
    dend_25 { pt3dadd( -2.61725, -78.4267, 7.63735, 1.2 ) }
    dend_25 { pt3dadd( -2.65854, -79.279, 8.23055, 0.24 ) }
    dend_25 { pt3dadd( -2.70727, -79.8509, 8.6424, 0.24 ) }
    dend_25 { pt3dadd( -2.82324, -80.8683, 9.3407, 1.92 ) }
    dend_25 { pt3dadd( -2.94495, -81.5615, 9.74445, 1.8 ) }
    dend_25 { pt3dadd( -3.64009, -83.7094, 10.9075, 0.72 ) }
    dend_25 { pt3dadd( -4.14523, -84.7979, 11.4378, 0.72 ) }
    dend_25 { pt3dadd( -4.59777, -85.5177, 11.7614, 0.48 ) }
    dend_25 { pt3dadd( -5.00361, -86.0158, 11.9863, 0.36 ) }
    dend_25 { pt3dadd( -5.71399, -86.7659, 12.2869, 0.36 ) }
    dend_25 { pt3dadd( -6.11778, -87.238, 12.4324, 0.36 ) }
    dend_25 { pt3dadd( -6.94191, -88.4035, 12.8754, 0.6 ) }
    dend_25 { pt3dadd( -7.14649, -88.837, 13.0923, 0.6 ) }
    dend_25 { pt3dadd( -7.39018, -89.3819, 13.4827, 0.36 ) }
    dend_25 { pt3dadd( -7.58899, -89.7845, 13.8283, 0.36 ) }
    dend_25 { pt3dadd( -7.81846, -90.2785, 14.2844, 0.36 ) }
    dend_25 { pt3dadd( -8.53889, -91.696, 15.6543, 0.36 ) }
    dend_25 { pt3dadd( -8.71639, -91.9714, 15.9237, 0.36 ) }
    dend_25 { pt3dadd( -9.33766, -92.8563, 16.8904, 1.44 ) }
    dend_25 { pt3dadd( -9.58726, -93.1951, 17.298, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.43913, -53.1619, -0.276001, 0.12 ) }
    dend_16 { pt3dadd( -4.62205, -54.7886, -0.534631, 0.12 ) }
    dend_16 { pt3dadd( -4.69097, -55.3757, -0.709645, 0.12 ) }
    dend_16 { pt3dadd( -4.75428, -55.9195, -0.901507, 0.96 ) }
    dend_16 { pt3dadd( -4.80799, -56.5468, -1.12595, 1.32 ) }
    dend_16 { pt3dadd( -4.83059, -57.027, -1.29745, 1.32 ) }
    dend_16 { pt3dadd( -4.83921, -58.0752, -1.6611, 0.6 ) }
    dend_16 { pt3dadd( -4.80483, -58.8616, -2.01998, 0.36 ) }
    dend_16 { pt3dadd( -4.7778, -59.0681, -2.12106, 0.36 ) }
    dend_16 { pt3dadd( -4.65575, -59.5737, -2.35692, 0.36 ) }
    dend_16 { pt3dadd( -4.56186, -59.8961, -2.47539, 0.36 ) }
    dend_16 { pt3dadd( -4.47777, -60.2297, -2.569, 0.36 ) }
    dend_16 { pt3dadd( -4.38986, -60.851, -2.69742, 0.36 ) }
    dend_16 { pt3dadd( -4.38421, -61.2653, -2.76268, 0.36 ) }
    dend_16 { pt3dadd( -4.38976, -61.8609, -2.92308, 0.36 ) }
    dend_16 { pt3dadd( -4.43019, -62.5403, -3.12704, 1.08 ) }
    dend_16 { pt3dadd( -4.52321, -63.4531, -3.41191, 1.68 ) }
    dend_16 { pt3dadd( -4.61189, -64.1178, -3.62304, 1.8 ) }
    dend_16 { pt3dadd( -4.75482, -64.9802, -3.88221, 1.56 ) }
    dend_16 { pt3dadd( -4.92937, -66.2602, -4.29611, 1.2 ) }
    dend_16 { pt3dadd( -4.98423, -66.8493, -4.48428, 0.36 ) }
    dend_16 { pt3dadd( -5.00137, -67.1684, -4.56148, 0.36 ) }
    dend_16 { pt3dadd( -5.02314, -67.5348, -4.58882, 0.36 ) }
    dend_16 { pt3dadd( -5.06664, -68.4111, -4.55525, 1.56 ) }
    dend_16 { pt3dadd( -5.09118, -69.0825, -4.48203, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -5.12344, -69.9157, -4.33125, 1.92 ) }
    dend_16 { pt3dadd( -5.12771, -71.0556, -4.11521, 1.08 ) }
    dend_16 { pt3dadd( -5.11137, -72.0237, -3.89031, 0.36 ) }
    dend_16 { pt3dadd( -5.09406, -72.8095, -3.68322, 0.36 ) }
    dend_16 { pt3dadd( -5.1053, -73.353, -3.47371, 0.36 ) }
    dend_16 { pt3dadd( -5.11873, -73.5652, -3.38051, 0.36 ) }
    dend_16 { pt3dadd( -5.16093, -74.0966, -3.1465, 0.96 ) }
    dend_16 { pt3dadd( -5.21947, -74.6636, -2.88481, 1.8 ) }
    dend_16 { pt3dadd( -5.28222, -75.3068, -2.62475, 2.16 ) }
    dend_16 { pt3dadd( -5.49067, -77.177, -1.91927, 1.92 ) }
    dend_16 { pt3dadd( -5.59933, -78.0957, -1.63133, 1.8 ) }
    dend_16 { pt3dadd( -5.68662, -78.8868, -1.46555, 1.8 ) }
    dend_16 { pt3dadd( -5.75381, -79.8387, -1.4563, 1.2 ) }
    dend_16 { pt3dadd( -5.74344, -81.2193, -1.81368, 0.12 ) }
    dend_16 { pt3dadd( -5.72833, -81.4312, -1.90634, 0.12 ) }
    dend_16 { pt3dadd( -5.66246, -82.0129, -2.22991, 0.12 ) }
    dend_16 { pt3dadd( -5.58022, -82.7143, -2.62307, 0.84 ) }
    dend_16 { pt3dadd( -5.42041, -83.8797, -3.28754, 1.08 ) }
    dend_16 { pt3dadd( -5.26688, -84.9254, -3.85946, 1.92 ) }
    dend_16 { pt3dadd( -5.15856, -85.755, -4.23523, 2.88 ) }
    dend_16 { pt3dadd( -5.09931, -86.2794, -4.4505, 2.88 ) }
    dend_16 { pt3dadd( -5.02922, -86.9511, -4.7138, 1.92 ) }
    dend_16 { pt3dadd( -4.95734, -87.908, -5.0594, 0.36 ) }
    dend_16 { pt3dadd( -4.94817, -88.3587, -5.1911, 0.36 ) }
    dend_16 { pt3dadd( -4.9602, -88.9267, -5.3146, 1.08 ) }
    dend_16 { pt3dadd( -4.9914, -89.637, -5.46242, 1.2 ) }
    dend_16 { pt3dadd( -5.05864, -90.7001, -5.64945, 0.48 ) }
    dend_16 { pt3dadd( -5.12225, -91.6158, -5.7886, 0.48 ) }
    dend_16 { pt3dadd( -5.19375, -92.4168, -5.89086, 0.48 ) }
    dend_16 { pt3dadd( -5.31437, -93.5769, -6.04634, 1.92 ) }
    dend_16 { pt3dadd( -5.41727, -94.3688, -6.15528, 2.4 ) }
    dend_16 { pt3dadd( -5.51993, -95.0438, -6.24222, 2.64 ) }
    dend_16 { pt3dadd( -5.6832, -95.9633, -6.34233, 2.64 ) }
    dend_16 { pt3dadd( -5.81014, -96.6196, -6.43393, 2.04 ) }
    dend_16 { pt3dadd( -6.00122, -97.4707, -6.58363, 0.72 ) }
    dend_16 { pt3dadd( -6.11003, -97.8702, -6.65519, 0.72 ) }
    dend_16 { pt3dadd( -6.27578, -98.4352, -6.72046, 0.72 ) }
    dend_16 { pt3dadd( -6.42481, -98.9846, -6.76986, 0.72 ) }
    dend_16 { pt3dadd( -6.59863, -99.7036, -6.8065, 0.24 ) }
    dend_16 { pt3dadd( -6.7518, -100.342, -6.76087, 0.12 ) }
    dend_16 { pt3dadd( -6.82505, -100.696, -6.69175, 0.12 ) }
    dend_16 { pt3dadd( -6.93006, -101.358, -6.50039, 0.12 ) }
    dend_16 { pt3dadd( -6.97504, -102.017, -6.25346, 1.2 ) }
    dend_16 { pt3dadd( -6.96764, -102.594, -6.01379, 2.28 ) }
    dend_16 { pt3dadd( -6.84618, -104.26, -5.30521, 1.8 ) }
    dend_16 { pt3dadd( -6.73923, -105.164, -4.93548, 0.36 ) }
    dend_16 { pt3dadd( -6.67113, -105.629, -4.7881, 0.36 ) }
    dend_16 { pt3dadd( -6.55068, -106.584, -4.59934, 0.36 ) }
    dend_16 { pt3dadd( -6.46988, -107.5, -4.53461, 0.36 ) }
    dend_16 { pt3dadd( -6.41685, -108.088, -4.58792, 0.36 ) }
    dend_16 { pt3dadd( -6.35242, -109.004, -4.82857, 0.36 ) }
    dend_16 { pt3dadd( -6.36626, -110.138, -5.21436, 1.56 ) }
    dend_16 { pt3dadd( -6.42761, -111.007, -5.5367, 2.4 ) }
    dend_16 { pt3dadd( -6.4823, -111.489, -5.7215, 2.4 ) }
    dend_16 { pt3dadd( -6.57367, -112.317, -6.01591, 2.4 ) }
    dend_16 { pt3dadd( -6.68027, -113.587, -6.38839, 0.48 ) }
    dend_16 { pt3dadd( -6.71268, -114.094, -6.49803, 0.48 ) }
    dend_16 { pt3dadd( -6.73125, -114.894, -6.58613, 0.6 ) }
    dend_16 { pt3dadd( -6.70789, -115.582, -6.62139, 0.36 ) }
    dend_16 { pt3dadd( -6.65346, -116.393, -6.63901, 0.36 ) }
    dend_16 { pt3dadd( -6.59231, -117.172, -6.63223, 0.48 ) }
    dend_16 { pt3dadd( -6.52596, -117.74, -6.63596, 0.36 ) }
    dend_16 { pt3dadd( -6.42718, -118.431, -6.67237, 0.36 ) }
    dend_16 { pt3dadd( -6.33521, -119.108, -6.74998, 0.36 ) }
    dend_16 { pt3dadd( -6.29176, -119.544, -6.8442, 0.48 ) }
    dend_16 { pt3dadd( -6.24919, -120.195, -7.05948, 0.48 ) }
    dend_16 { pt3dadd( -6.24518, -120.98, -7.3551, 0.36 ) }
    dend_16 { pt3dadd( -6.25878, -121.536, -7.57201, 0.84 ) }
    dend_16 { pt3dadd( -6.31334, -122.437, -7.89284, 1.32 ) }
    dend_16 { pt3dadd( -6.42245, -123.611, -8.26802, 2.16 ) }
    dend_16 { pt3dadd( -6.5356, -124.504, -8.53769, 2.64 ) }
    dend_16 { pt3dadd( -6.67757, -125.423, -8.79557, 2.28 ) }
    dend_16 { pt3dadd( -6.87947, -126.45, -9.02412, 1.8 ) }
    dend_16 { pt3dadd( -7.09428, -127.508, -9.21577, 1.2 ) }
    dend_16 { pt3dadd( -7.23399, -128.113, -9.23847, 0.48 ) }
    dend_16 { pt3dadd( -7.46395, -129.114, -9.15848, 0.36 ) }
    dend_16 { pt3dadd( -7.61938, -129.795, -9.04682, 0.36 ) }
    dend_16 { pt3dadd( -7.76447, -130.489, -8.88824, 1.08 ) }
    dend_16 { pt3dadd( -7.8898, -131.183, -8.67014, 1.08 ) }
    dend_16 { pt3dadd( -8.12941, -133.157, -7.95802, 1.44 ) }
    dend_16 { pt3dadd( -8.20426, -134.269, -7.5357, 1.44 ) }
    dend_16 { pt3dadd( -8.24066, -135.039, -7.20594, 1.32 ) }
    dend_16 { pt3dadd( -8.26306, -135.79, -6.91222, 0.48 ) }
    dend_16 { pt3dadd( -8.26527, -136.413, -6.72158, 0.48 ) }
    dend_16 { pt3dadd( -8.27049, -136.793, -6.62779, 1.08 ) }
    dend_16 { pt3dadd( -8.27762, -137.511, -6.51076, 1.68 ) }
    dend_16 { pt3dadd( -8.34882, -138.685, -6.29873, 2.28 ) }
    dend_16 { pt3dadd( -8.43209, -139.489, -6.19251, 2.4 ) }
    dend_16 { pt3dadd( -8.57087, -140.523, -6.13216, 1.32 ) }
    dend_16 { pt3dadd( -8.69749, -141.222, -6.13063, 0.6 ) }
    dend_16 { pt3dadd( -8.78459, -141.681, -6.18934, 0.48 ) }
    dend_16 { pt3dadd( -8.92889, -142.407, -6.42749, 0.48 ) }
    dend_16 { pt3dadd( -9.05226, -143.057, -6.74467, 0.48 ) }
    dend_16 { pt3dadd( -9.13681, -143.784, -7.22676, 1.08 ) }
    dend_16 { pt3dadd( -9.16041, -144.409, -7.66765, 1.92 ) }
    dend_16 { pt3dadd( -9.11157, -145.745, -8.67113, 1.92 ) }
    dend_16 { pt3dadd( -9.01251, -146.842, -9.50731, 2.28 ) }
    dend_16 { pt3dadd( -8.9172, -147.567, -10.0528, 2.76 ) }
    dend_16 { pt3dadd( -8.65792, -149.328, -11.3039, 2.76 ) }
    dend_16 { pt3dadd( -8.46539, -150.685, -12.1685, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -8.32532, -151.727, -12.7395, 0.72 ) }
    dend_16 { pt3dadd( -8.24267, -152.534, -13.0836, 0.96 ) }
    dend_16 { pt3dadd( -8.20692, -153.205, -13.3135, 1.56 ) }
    dend_16 { pt3dadd( -8.22312, -154.01, -13.5394, 1.8 ) }
    dend_16 { pt3dadd( -8.29481, -154.723, -13.6594, 1.44 ) }
    dend_16 { pt3dadd( -8.36504, -155.552, -13.7646, 0.48 ) }
    dend_16 { pt3dadd( -8.37008, -155.88, -13.7829, 0.6 ) }
    dend_16 { pt3dadd( -8.32992, -156.757, -13.8038, 0.6 ) }
    dend_16 { pt3dadd( -8.30089, -157.168, -13.7985, 0.48 ) }
    dend_16 { pt3dadd( -8.23419, -158.115, -13.7685, 0.48 ) }
    dend_16 { pt3dadd( -8.19989, -158.853, -13.7416, 0.48 ) }
    dend_16 { pt3dadd( -8.20181, -159.763, -13.684, 0.48 ) }
    dend_16 { pt3dadd( -8.23794, -160.666, -13.643, 0.84 ) }
    dend_16 { pt3dadd( -8.33972, -161.837, -13.6106, 1.68 ) }
    dend_16 { pt3dadd( -8.50811, -163.108, -13.5958, 2.4 ) }
    dend_16 { pt3dadd( -8.63781, -163.936, -13.5911, 2.4 ) }
    dend_16 { pt3dadd( -8.81044, -165.091, -13.5933, 0.6 ) }
    dend_16 { pt3dadd( -8.89912, -165.893, -13.5861, 0.6 ) }
    dend_16 { pt3dadd( -8.92154, -166.938, -13.5793, 0.6 ) }
    dend_16 { pt3dadd( -8.84577, -167.863, -13.5596, 0.6 ) }
    dend_16 { pt3dadd( -8.71428, -168.625, -13.5085, 1.08 ) }
    dend_16 { pt3dadd( -8.53873, -169.371, -13.428, 1.44 ) }
    dend_16 { pt3dadd( -8.35728, -170.032, -13.3377, 0.84 ) }
    dend_16 { pt3dadd( -8.16329, -170.766, -13.2045, 0.96 ) }
    dend_16 { pt3dadd( -7.9746, -171.607, -13.0476, 0.96 ) }
    dend_16 { pt3dadd( -7.87657, -172.232, -12.9428, 0.72 ) }
    dend_16 { pt3dadd( -7.83532, -172.701, -12.8771, 0.48 ) }
    dend_16 { pt3dadd( -7.82313, -173.123, -12.8262, 0.48 ) }
    dend_16 { pt3dadd( -7.85062, -173.707, -12.7622, 1.32 ) }
    dend_16 { pt3dadd( -7.96572, -174.668, -12.6685, 1.8 ) }
    dend_16 { pt3dadd( -8.06776, -175.37, -12.6488, 2.04 ) }
    dend_16 { pt3dadd( -8.21736, -176.317, -12.6808, 1.92 ) }
    dend_16 { pt3dadd( -8.33053, -177.024, -12.733, 1.44 ) }
    dend_16 { pt3dadd( -8.4617, -177.905, -12.842, 0.48 ) }
    dend_16 { pt3dadd( -8.55934, -178.656, -12.9873, 0.48 ) }
    dend_16 { pt3dadd( -8.6852, -179.868, -13.2828, 1.44 ) }
    dend_16 { pt3dadd( -8.78046, -180.922, -13.5564, 2.52 ) }
    dend_16 { pt3dadd( -8.84825, -181.837, -13.7968, 3.25 ) }
    dend_16 { pt3dadd( -8.90607, -183.147, -14.1359, 2.28 ) }
    dend_16 { pt3dadd( -8.90915, -184.056, -14.3459, 1.8 ) }
    dend_16 { pt3dadd( -8.86711, -185.081, -14.5347, 0.96 ) }
    dend_16 { pt3dadd( -8.77662, -186.457, -14.7208, 0.96 ) }
    dend_16 { pt3dadd( -8.67936, -187.489, -14.8452, 0.96 ) }
    dend_16 { pt3dadd( -8.54039, -188.814, -14.9813, 2.52 ) }
    dend_16 { pt3dadd( -8.44354, -189.793, -15.0338, 2.52 ) }
    dend_16 { pt3dadd( -8.29316, -191.427, -15.0528, 1.44 ) }
    dend_16 { pt3dadd( -8.22074, -192.231, -15.0417, 0.96 ) }
    dend_16 { pt3dadd( -8.1303, -193.168, -15.0251, 0.72 ) }
    dend_16 { pt3dadd( -8.09082, -193.647, -15.0141, 0.72 ) }
    dend_16 { pt3dadd( -8.03086, -194.573, -15.0305, 0.72 ) }
    dend_16 { pt3dadd( -8.00888, -195.268, -15.0917, 0.72 ) }
    dend_16 { pt3dadd( -7.968, -196.054, -15.2585, 1.08 ) }
    dend_16 { pt3dadd( -7.84411, -196.829, -15.562, 1.44 ) }
    dend_16 { pt3dadd( -7.77158, -197.115, -15.7045, 1.44 ) }
    dend_16 { pt3dadd( -7.39753, -198.299, -16.4086, 0.36 ) }
    dend_16 { pt3dadd( -7.03084, -199.306, -17.0703, 0.36 ) }
    dend_16 { pt3dadd( -6.5685, -200.492, -17.8478, 1.32 ) }
    dend_16 { pt3dadd( -6.01737, -201.855, -18.6865, 0.48 ) }
    dend_16 { pt3dadd( -5.79094, -202.416, -18.9947, 0.48 ) }
    dend_16 { pt3dadd( -5.32664, -203.574, -19.5597, 1.92 ) }
    dend_16 { pt3dadd( -5.19258, -203.932, -19.7048, 2.76 ) }
    dend_16 { pt3dadd( -4.92147, -204.775, -19.9796, 2.4 ) }
    dend_16 { pt3dadd( -4.76832, -205.57, -20.1211, 1.32 ) }
    dend_16 { pt3dadd( -4.71402, -206.029, -20.2285, 0.12 ) }
    dend_16 { pt3dadd( -4.68153, -206.476, -20.3947, 0.12 ) }
    dend_16 { pt3dadd( -4.68197, -206.7, -20.507, 0.12 ) }
    dend_16 { pt3dadd( -4.6926, -207.384, -20.936, 1.08 ) }
    dend_16 { pt3dadd( -4.68372, -207.852, -21.2734, 1.08 ) }
    dend_16 { pt3dadd( -4.49202, -209.837, -22.8809, 0.24 ) }
    dend_16 { pt3dadd( -4.43029, -210.118, -23.105, 0.24 ) }
    dend_16 { pt3dadd( -4.25079, -210.645, -23.4805, 0.24 ) }
    dend_16 { pt3dadd( -3.95296, -211.275, -23.809, 0.24 ) }
    dend_16 { pt3dadd( -3.54056, -211.956, -24.0203, 0.24 ) }
    dend_16 { pt3dadd( -2.9562, -212.818, -24.2175, 1.08 ) }
    dend_16 { pt3dadd( -2.44776, -213.571, -24.2995, 2.04 ) }
    dend_16 { pt3dadd( -1.99729, -214.269, -24.3954, 2.04 ) }
    dend_16 { pt3dadd( -1.46931, -215.137, -24.5333, 1.44 ) }
    dend_16 { pt3dadd( -1.25857, -215.575, -24.6059, 0.96 ) }
    dend_16 { pt3dadd( -0.681331, -217.214, -24.856, 0.72 ) }
    dend_16 { pt3dadd( -0.51697, -217.888, -24.9316, 0.36 ) }
    dend_16 { pt3dadd( -0.412468, -218.688, -25.0377, 0.36 ) }
    dend_16 { pt3dadd( -0.405876, -219.045, -25.0726, 0.36 ) }
    dend_16 { pt3dadd( -0.477908, -219.916, -25.0936, 1.32 ) }
    dend_16 { pt3dadd( -0.576052, -220.645, -25.0535, 2.04 ) }
    dend_16 { pt3dadd( -0.63414, -220.996, -25.0078, 2.4 ) }
    dend_16 { pt3dadd( -0.725694, -221.503, -24.9404, 2.4 ) }
    dend_16 { pt3dadd( -0.965453, -222.835, -24.7633, 0.48 ) }
    dend_16 { pt3dadd( -1.08551, -223.517, -24.6781, 0.36 ) }
    dend_16 { pt3dadd( -1.27702, -224.757, -24.5575, 0.36 ) }
    dend_16 { pt3dadd( -1.3775, -225.455, -24.4951, 0.36 ) }
    dend_16 { pt3dadd( -1.48327, -226.223, -24.4368, 1.68 ) }
    dend_16 { pt3dadd( -1.54125, -226.795, -24.3973, 2.16 ) }
    dend_16 { pt3dadd( -1.55844, -227.162, -24.3769, 2.16 ) }
    dend_16 { pt3dadd( -1.56557, -228.127, -24.3037, 0.96 ) }
    dend_16 { pt3dadd( -1.53615, -228.702, -24.2731, 0.36 ) }
    dend_16 { pt3dadd( -1.49532, -229.049, -24.2857, 0.36 ) }
    dend_16 { pt3dadd( -1.3387, -229.906, -24.403, 0.36 ) }
    dend_16 { pt3dadd( -1.16238, -230.747, -24.5748, 0.36 ) }
    dend_16 { pt3dadd( -1.03571, -231.335, -24.7017, 0.36 ) }
    dend_16 { pt3dadd( -0.848963, -232.267, -24.9057, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -0.651157, -233.548, -25.1766, 2.4 ) }
    dend_16 { pt3dadd( -0.582885, -234.216, -25.2977, 2.52 ) }
    dend_16 { pt3dadd( -0.572559, -234.534, -25.3466, 2.52 ) }
    dend_16 { pt3dadd( -0.612298, -235.678, -25.472, 0.48 ) }
    dend_16 { pt3dadd( -0.65802, -236.387, -25.5183, 0.36 ) }
    dend_16 { pt3dadd( -0.806396, -237.645, -25.4784, 0.36 ) }
    dend_16 { pt3dadd( -0.897134, -238.209, -25.4062, 1.32 ) }
    dend_16 { pt3dadd( -1.02781, -238.914, -25.2934, 1.92 ) }
    dend_16 { pt3dadd( -1.134, -239.516, -25.2028, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.17979, 30.2441, 6.77999, 1.92 ) }
    dend_2 { pt3dadd( 8.18364, 32.8042, 6.78411, 1.92 ) }
    dend_2 { pt3dadd( 8.16163, 34.0401, 6.8038, 2.28 ) }
    dend_2 { pt3dadd( 8.13641, 35.1736, 6.86249, 1.8 ) }
    dend_2 { pt3dadd( 8.11372, 36.501, 6.95258, 1.8 ) }
    dend_2 { pt3dadd( 8.09873, 38.3051, 7.08882, 1.68 ) }
    dend_2 { pt3dadd( 8.10321, 40.4079, 7.25481, 2.4 ) }
    dend_2 { pt3dadd( 8.12546, 42.0082, 7.48699, 2.88 ) }
    dend_2 { pt3dadd( 8.14655, 42.8553, 7.59628, 2.76 ) }
    dend_2 { pt3dadd( 8.18529, 43.6291, 7.70938, 2.76 ) }
    dend_2 { pt3dadd( 8.23934, 44.2138, 7.82597, 2.76 ) }
    dend_2 { pt3dadd( 8.34053, 44.8767, 7.98665, 2.52 ) }
    dend_2 { pt3dadd( 8.64999, 46.2857, 8.36076, 1.68 ) }
    dend_2 { pt3dadd( 8.85186, 47.1054, 8.58745, 1.44 ) }
    dend_2 { pt3dadd( 9.08765, 48.0352, 8.83665, 1.68 ) }
    dend_2 { pt3dadd( 9.52446, 49.7276, 9.32551, 2.64 ) }
    dend_2 { pt3dadd( 9.79656, 50.7583, 9.64066, 2.88 ) }
    dend_2 { pt3dadd( 9.9599, 51.3421, 9.82667, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.17979, 30.2441, 6.77999, 0.84 ) }
    dend_1 { pt3dadd( 7.5556, 30.0606, 6.8691, 0.84 ) }
    dend_1 { pt3dadd( 6.56887, 29.9772, 6.99746, 0.84 ) }
    dend_1 { pt3dadd( 5.88842, 30.0979, 7.16516, 0.84 ) }
    dend_1 { pt3dadd( 5.68702, 30.1882, 7.25322, 0.84 ) }
    dend_1 { pt3dadd( 5.21538, 30.5745, 7.54167, 0.72 ) }
    dend_1 { pt3dadd( 4.87011, 31.0337, 7.97119, 0.72 ) }
    dend_1 { pt3dadd( 4.7274, 31.3508, 8.32065, 0.72 ) }
    dend_1 { pt3dadd( 4.66183, 31.9414, 9.00873, 0.96 ) }
    dend_1 { pt3dadd( 4.74191, 32.3825, 9.58216, 1.44 ) }
    dend_1 { pt3dadd( 4.93271, 32.8418, 10.1986, 1.56 ) }
    dend_1 { pt3dadd( 5.4385, 33.628, 11.3334, 1.32 ) }
    dend_1 { pt3dadd( 5.83596, 34.0972, 12.0651, 0.48 ) }
    dend_1 { pt3dadd( 6.21132, 34.4515, 12.6222, 0.6 ) }
    dend_1 { pt3dadd( 7.00472, 35.0377, 13.5738, 0.6 ) }
    dend_1 { pt3dadd( 7.51918, 35.3261, 14.0402, 1.68 ) }
    dend_1 { pt3dadd( 8.50074, 35.6797, 14.5694, 1.92 ) }
    dend_1 { pt3dadd( 9.31354, 35.8354, 14.5628, 1.56 ) }
    dend_1 { pt3dadd( 11.8463, 35.7858, 13.1113, 0.48 ) }
    dend_1 { pt3dadd( 12.3595, 35.706, 12.5918, 0.48 ) }
    dend_1 { pt3dadd( 12.7657, 35.6215, 12.107, 0.84 ) }
    dend_1 { pt3dadd( 12.9913, 35.5446, 11.7523, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.460629 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.460629 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.460629 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.6898, 31.3338, -22.5642, 0.96 ) }
    dend_54 { pt3dadd( -16.4318, 33.3615, -23.5718, 0.96 ) }
    dend_54 { pt3dadd( -16.3437, 34.5391, -24.0596, 0.6 ) }
    dend_54 { pt3dadd( -16.3248, 35.6808, -24.4773, 0.6 ) }
    dend_54 { pt3dadd( -16.3502, 36.2994, -24.6827, 1.32 ) }
    dend_54 { pt3dadd( -16.403, 36.8556, -24.8311, 1.56 ) }
    dend_54 { pt3dadd( -16.5707, 37.9288, -25.0535, 0.96 ) }
    dend_54 { pt3dadd( -16.919, 39.2295, -25.1206, 0.6 ) }
    dend_54 { pt3dadd( -17.1309, 39.8355, -25.1153, 0.48 ) }
    dend_54 { pt3dadd( -17.3379, 40.3575, -25.1025, 0.48 ) }
    dend_54 { pt3dadd( -17.7657, 41.4185, -25.084, 0.72 ) }
    dend_54 { pt3dadd( -18.2708, 42.6932, -25.1054, 1.8 ) }
    dend_54 { pt3dadd( -18.6987, 43.8621, -25.174, 2.04 ) }
    dend_54 { pt3dadd( -18.9993, 44.8206, -25.2708, 2.64 ) }
    dend_54 { pt3dadd( -19.2893, 45.8981, -25.4582, 3.25 ) }
    dend_54 { pt3dadd( -19.5196, 46.8732, -25.6884, 3.25 ) }
    dend_54 { pt3dadd( -19.7229, 47.859, -25.982, 2.88 ) }
    dend_54 { pt3dadd( -19.9525, 49.1696, -26.4021, 0.84 ) }
    dend_54 { pt3dadd( -20.0394, 49.7051, -26.5731, 0.6 ) }
    dend_54 { pt3dadd( -20.2764, 51.076, -26.9897, 2.4 ) }
    dend_54 { pt3dadd( -20.4602, 52.0396, -27.2605, 3.25 ) }
    dend_54 { pt3dadd( -20.646, 52.9547, -27.4857, 2.88 ) }
    dend_54 { pt3dadd( -20.9602, 54.4748, -27.8122, 0.96 ) }
    dend_54 { pt3dadd( -21.2951, 56.0899, -28.1664, 0.84 ) }
    dend_54 { pt3dadd( -21.5011, 57.0838, -28.3917, 0.48 ) }
    dend_54 { pt3dadd( -21.6373, 57.7627, -28.5429, 0.48 ) }
    dend_54 { pt3dadd( -21.9066, 59.0708, -28.8531, 0.48 ) }
    dend_54 { pt3dadd( -22.1249, 60.092, -29.1155, 1.92 ) }
    dend_54 { pt3dadd( -22.3744, 61.3075, -29.4715, 3.37 ) }
    dend_54 { pt3dadd( -22.5141, 62.1058, -29.7429, 3.49 ) }
    dend_54 { pt3dadd( -22.6363, 63.0666, -30.1083, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -16.6898, 31.3338, -22.5642, 0.84 ) }
    dend_49 { pt3dadd( -19.3003, 31.1195, -23.4372, 0.84 ) }
    dend_49 { pt3dadd( -20.0004, 31.2252, -23.7925, 0.72 ) }
    dend_49 { pt3dadd( -20.5148, 31.4134, -24.1154, 0.72 ) }
    dend_49 { pt3dadd( -21.0475, 31.769, -24.589, 0.72 ) }
    dend_49 { pt3dadd( -21.8821, 32.5016, -25.6769, 0.84 ) }
    dend_49 { pt3dadd( -22.8521, 33.4056, -27.1222, 0.72 ) }
    dend_49 { pt3dadd( -23.419, 34.1332, -28.2065, 0.48 ) }
    dend_49 { pt3dadd( -23.9262, 34.8335, -29.2484, 0.48 ) }
    dend_49 { pt3dadd( -24.8077, 36.0554, -31.0826, 0.72 ) }
    dend_49 { pt3dadd( -25.7822, 37.2828, -33.0121, 0.48 ) }
    dend_49 { pt3dadd( -26.0518, 37.5617, -33.5382, 0.48 ) }
    dend_49 { pt3dadd( -26.323, 37.7708, -33.9821, 0.48 ) }
    dend_49 { pt3dadd( -26.8738, 38.0988, -34.7685, 1.32 ) }
    dend_49 { pt3dadd( -27.4634, 38.3776, -35.5425, 2.04 ) }
    dend_49 { pt3dadd( -28.3286, 38.7226, -36.5378, 1.56 ) }
    dend_49 { pt3dadd( -30.1862, 39.5159, -38.5991, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -30.6141, 39.7108, -39.1134, 0.36 ) }
    dend_49 { pt3dadd( -32.1988, 40.452, -41.197, 2.4 ) }
    dend_49 { pt3dadd( -32.8403, 40.7669, -42.1456, 3.25 ) }
    dend_49 { pt3dadd( -33.2322, 40.971, -42.7917, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 13.6316, -17.5504, -21.7249, 0.24 ) }
    dend_41 { pt3dadd( 12.8936, -19.4011, -22.2345, 0.24 ) }
    dend_41 { pt3dadd( 12.6703, -20.0608, -22.4408, 0.24 ) }
    dend_41 { pt3dadd( 12.3232, -21.3134, -22.8139, 1.92 ) }
    dend_41 { pt3dadd( 12.04, -22.3084, -23.0892, 2.52 ) }
    dend_41 { pt3dadd( 11.7903, -23.1113, -23.2974, 2.4 ) }
    dend_41 { pt3dadd( 11.5176, -23.9367, -23.5029, 1.8 ) }
    dend_41 { pt3dadd( 11.1833, -25.0171, -23.7598, 0.24 ) }
    dend_41 { pt3dadd( 10.7601, -26.2928, -24.0135, 0.24 ) }
    dend_41 { pt3dadd( 10.3137, -27.5642, -24.2055, 0.24 ) }
    dend_41 { pt3dadd( 9.98701, -28.44, -24.3044, 0.24 ) }
    dend_41 { pt3dadd( 9.66798, -29.2435, -24.4038, 1.68 ) }
    dend_41 { pt3dadd( 9.13017, -30.513, -24.5592, 1.92 ) }
    dend_41 { pt3dadd( 8.50006, -31.9166, -24.7451, 2.28 ) }
    dend_41 { pt3dadd( 7.98451, -33.0056, -24.912, 3.12 ) }
    dend_41 { pt3dadd( 7.44038, -34.1158, -25.0965, 3.12 ) }
    dend_41 { pt3dadd( 6.41609, -36.0864, -25.405, 0.24 ) }
    dend_41 { pt3dadd( 5.99126, -36.8361, -25.5097, 0.24 ) }
    dend_41 { pt3dadd( 5.88852, -36.9983, -25.5301, 0.48 ) }
    dend_41 { pt3dadd( 5.44062, -37.6238, -25.5895, 0.48 ) }
    dend_41 { pt3dadd( 4.78233, -38.4501, -25.6209, 0.48 ) }
    dend_41 { pt3dadd( 4.3413, -39.0124, -25.5893, 0.48 ) }
    dend_41 { pt3dadd( 4.13998, -39.3073, -25.5273, 0.12 ) }
    dend_41 { pt3dadd( 3.82735, -39.9506, -25.4049, 0.12 ) }
    dend_41 { pt3dadd( 3.69199, -40.308, -25.3428, 0.12 ) }
    dend_41 { pt3dadd( 3.54384, -40.8364, -25.2666, 0.72 ) }
    dend_41 { pt3dadd( 3.30993, -41.8995, -25.1543, 0.96 ) }
    dend_41 { pt3dadd( 3.17286, -42.571, -25.1267, 0.24 ) }
    dend_41 { pt3dadd( 2.9025, -43.8928, -25.122, 0.24 ) }
    dend_41 { pt3dadd( 2.78516, -44.4686, -25.1057, 0.96 ) }
    dend_41 { pt3dadd( 2.64453, -45.1325, -25.0778, 1.44 ) }
    dend_41 { pt3dadd( 2.45339, -45.9438, -25.0403, 1.56 ) }
    dend_41 { pt3dadd( 2.15518, -47.0465, -24.9921, 0.48 ) }
    dend_41 { pt3dadd( 1.94866, -47.7621, -24.9663, 0.24 ) }
    dend_41 { pt3dadd( 1.56365, -49.0783, -24.9118, 1.68 ) }
    dend_41 { pt3dadd( 1.32062, -50.0071, -24.892, 2.88 ) }
    dend_41 { pt3dadd( 1.005, -51.3575, -24.8445, 2.88 ) }
    dend_41 { pt3dadd( 0.650946, -53.1422, -24.7699, 0.24 ) }
    dend_41 { pt3dadd( 0.413503, -54.635, -24.6907, 0.24 ) }
    dend_41 { pt3dadd( 0.343598, -55.1958, -24.6645, 0.24 ) }
    dend_41 { pt3dadd( 0.182924, -56.9339, -24.6278, 0.24 ) }
    dend_41 { pt3dadd( 0.11773, -58.0418, -24.604, 1.8 ) }
    dend_41 { pt3dadd( 0.091911, -59.2607, -24.5665, 2.76 ) }
    dend_41 { pt3dadd( 0.107879, -60.9308, -24.5048, 0.48 ) }
    dend_41 { pt3dadd( 0.113777, -61.8788, -24.4675, 0.48 ) }
    dend_41 { pt3dadd( 0.0928772, -62.6199, -24.4401, 0.6 ) }
    dend_41 { pt3dadd( 0.0348613, -63.4435, -24.3892, 0.6 ) }
    dend_41 { pt3dadd( -0.0356535, -64.0796, -24.3654, 0.36 ) }
    dend_41 { pt3dadd( -0.13548, -64.7579, -24.3391, 0.36 ) }
    dend_41 { pt3dadd( -0.371138, -65.8526, -24.3716, 0.48 ) }
    dend_41 { pt3dadd( -0.740675, -67.296, -24.4718, 0.48 ) }
    dend_41 { pt3dadd( -1.02408, -68.2626, -24.5667, 1.44 ) }
    dend_41 { pt3dadd( -1.39748, -69.4842, -24.7651, 2.76 ) }
    dend_41 { pt3dadd( -1.689, -70.5054, -24.9867, 3.0 ) }
    dend_41 { pt3dadd( -2.23578, -72.632, -25.6322, 0.12 ) }
    dend_41 { pt3dadd( -2.38505, -73.2576, -25.8657, 0.12 ) }
    dend_41 { pt3dadd( -2.59086, -74.1424, -26.2456, 0.12 ) }
    dend_41 { pt3dadd( -2.81427, -75.1576, -26.713, 1.32 ) }
    dend_41 { pt3dadd( -3.0202, -76.1363, -27.1525, 2.4 ) }
    dend_41 { pt3dadd( -3.46247, -78.0791, -27.967, 0.12 ) }
    dend_41 { pt3dadd( -3.69487, -79.026, -28.305, 0.12 ) }
    dend_41 { pt3dadd( -3.86104, -79.5863, -28.4872, 0.84 ) }
    dend_41 { pt3dadd( -4.0738, -80.2006, -28.6614, 0.96 ) }
    dend_41 { pt3dadd( -4.61974, -81.6411, -28.9713, 0.12 ) }
    dend_41 { pt3dadd( -5.04132, -82.7147, -29.16, 0.12 ) }
    dend_41 { pt3dadd( -5.35523, -83.5618, -29.2598, 1.32 ) }
    dend_41 { pt3dadd( -5.62938, -84.3677, -29.3493, 1.8 ) }
    dend_41 { pt3dadd( -5.97105, -85.4581, -29.4524, 0.12 ) }
    dend_41 { pt3dadd( -6.40913, -86.8918, -29.56, 0.12 ) }
    dend_41 { pt3dadd( -6.631, -87.6712, -29.6012, 1.56 ) }
    dend_41 { pt3dadd( -6.85323, -88.6029, -29.6419, 2.52 ) }
    dend_41 { pt3dadd( -7.02193, -89.4198, -29.6697, 2.64 ) }
    dend_41 { pt3dadd( -7.33719, -91.1753, -29.7105, 1.32 ) }
    dend_41 { pt3dadd( -7.4775, -91.9683, -29.7192, 0.12 ) }
    dend_41 { pt3dadd( -7.50499, -92.1144, -29.7207, 0.24 ) }
    dend_41 { pt3dadd( -7.71053, -93.1384, -29.7512, 0.24 ) }
    dend_41 { pt3dadd( -7.95436, -94.3361, -29.8067, 0.24 ) }
    dend_41 { pt3dadd( -8.11915, -95.1363, -29.9071, 0.24 ) }
    dend_41 { pt3dadd( -8.23163, -95.6887, -30.0137, 0.24 ) }
    dend_41 { pt3dadd( -8.34276, -96.2286, -30.1384, 1.56 ) }
    dend_41 { pt3dadd( -8.5344, -97.0717, -30.3496, 2.28 ) }
    dend_41 { pt3dadd( -8.72549, -97.8436, -30.5722, 2.28 ) }
    dend_41 { pt3dadd( -9.15468, -99.5804, -31.1156, 0.48 ) }
    dend_41 { pt3dadd( -9.40892, -100.585, -31.434, 0.48 ) }
    dend_41 { pt3dadd( -9.44149, -100.713, -31.4725, 0.72 ) }
    dend_41 { pt3dadd( -9.68591, -101.604, -31.7233, 0.96 ) }
    dend_41 { pt3dadd( -9.90669, -102.351, -31.8993, 0.48 ) }
    dend_41 { pt3dadd( -10.0408, -102.74, -31.9923, 0.48 ) }
    dend_41 { pt3dadd( -10.2779, -103.374, -32.0977, 0.48 ) }
    dend_41 { pt3dadd( -10.6019, -104.213, -32.225, 0.6 ) }
    dend_41 { pt3dadd( -10.7086, -104.498, -32.2626, 0.24 ) }
    dend_41 { pt3dadd( -11.0191, -105.398, -32.3689, 0.24 ) }
    dend_41 { pt3dadd( -11.4146, -106.717, -32.4937, 1.56 ) }
    dend_41 { pt3dadd( -11.7002, -107.782, -32.5924, 2.4 ) }
    dend_41 { pt3dadd( -11.932, -108.738, -32.6773, 2.52 ) }
    dend_41 { pt3dadd( -12.0522, -109.272, -32.7207, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -12.433, -111.012, -32.8174, 0.24 ) }
    dend_41 { pt3dadd( -12.8429, -113.149, -32.8762, 0.24 ) }
    dend_41 { pt3dadd( -12.9344, -113.713, -32.8787, 0.96 ) }
    dend_41 { pt3dadd( -13.0462, -114.529, -32.8886, 1.44 ) }
    dend_41 { pt3dadd( -13.1029, -115.081, -32.8881, 1.68 ) }
    dend_41 { pt3dadd( -13.1888, -116.278, -32.8969, 0.24 ) }
    dend_41 { pt3dadd( -13.245, -118.354, -32.92, 0.24 ) }
    dend_41 { pt3dadd( -13.2315, -119.451, -32.9479, 1.56 ) }
    dend_41 { pt3dadd( -13.2099, -120.138, -32.9794, 2.16 ) }
    dend_41 { pt3dadd( -13.1787, -120.879, -33.0331, 1.8 ) }
    dend_41 { pt3dadd( -13.1622, -122.145, -33.1696, 0.12 ) }
    dend_41 { pt3dadd( -13.1884, -122.864, -33.2828, 0.12 ) }
    dend_41 { pt3dadd( -13.2089, -122.997, -33.3062, 0.6 ) }
    dend_41 { pt3dadd( -13.3495, -123.549, -33.3987, 0.12 ) }
    dend_41 { pt3dadd( -13.4862, -123.956, -33.4593, 0.12 ) }
    dend_41 { pt3dadd( -13.8681, -124.941, -33.5758, 0.12 ) }
    dend_41 { pt3dadd( -14.0465, -125.4, -33.6064, 0.6 ) }
    dend_41 { pt3dadd( -14.3225, -126.178, -33.5738, 0.6 ) }
    dend_41 { pt3dadd( -14.4876, -126.703, -33.5087, 0.12 ) }
    dend_41 { pt3dadd( -14.6729, -127.34, -33.3937, 0.12 ) }
    dend_41 { pt3dadd( -14.8327, -127.871, -33.286, 0.6 ) }
    dend_41 { pt3dadd( -15.0481, -128.646, -33.1168, 0.6 ) }
    dend_41 { pt3dadd( -15.4362, -130.122, -32.7929, 0.12 ) }
    dend_41 { pt3dadd( -15.6795, -131.104, -32.585, 0.12 ) }
    dend_41 { pt3dadd( -15.9112, -132.093, -32.3951, 1.44 ) }
    dend_41 { pt3dadd( -16.1377, -133.117, -32.2298, 2.4 ) }
    dend_41 { pt3dadd( -16.237, -133.598, -32.172, 2.52 ) }
    dend_41 { pt3dadd( -16.386, -134.372, -32.1244, 2.16 ) }
    dend_41 { pt3dadd( -16.4949, -135.328, -32.1408, 0.12 ) }
    dend_41 { pt3dadd( -16.5311, -136.15, -32.1115, 0.36 ) }
    dend_41 { pt3dadd( -16.5289, -136.686, -32.0687, 0.12 ) }
    dend_41 { pt3dadd( -16.5174, -137.094, -32.0204, 0.12 ) }
    dend_41 { pt3dadd( -16.4943, -137.692, -31.9478, 0.12 ) }
    dend_41 { pt3dadd( -16.4396, -138.753, -31.8167, 0.12 ) }
    dend_41 { pt3dadd( -16.3542, -139.978, -31.6765, 0.12 ) }
    dend_41 { pt3dadd( -16.3444, -140.251, -31.6546, 0.12 ) }
    dend_41 { pt3dadd( -16.3699, -141.077, -31.6214, 0.12 ) }
    dend_41 { pt3dadd( -16.4579, -142.032, -31.655, 1.8 ) }
    dend_41 { pt3dadd( -16.5103, -142.438, -31.695, 2.28 ) }
    dend_41 { pt3dadd( -16.6554, -143.246, -31.7515, 1.92 ) }
    dend_41 { pt3dadd( -16.8971, -144.575, -31.7787, 0.36 ) }
    dend_41 { pt3dadd( -17.0918, -145.59, -31.7549, 0.36 ) }
    dend_41 { pt3dadd( -17.2658, -146.529, -31.6995, 1.2 ) }
    dend_41 { pt3dadd( -17.3968, -147.363, -31.5589, 0.72 ) }
    dend_41 { pt3dadd( -17.5535, -149.077, -31.2829, 0.12 ) }
    dend_41 { pt3dadd( -17.644, -150.628, -31.0425, 0.12 ) }
    dend_41 { pt3dadd( -17.6753, -151.646, -30.8936, 1.68 ) }
    dend_41 { pt3dadd( -17.7025, -152.437, -30.7798, 1.8 ) }
    dend_41 { pt3dadd( -17.8029, -154.536, -30.4545, 1.44 ) }
    dend_41 { pt3dadd( -17.934, -156.65, -30.2174, 0.24 ) }
    dend_41 { pt3dadd( -18.0414, -158.681, -30.0233, 0.12 ) }
    dend_41 { pt3dadd( -18.0897, -159.621, -29.91, 0.12 ) }
    dend_41 { pt3dadd( -18.1977, -161.238, -29.6674, 0.12 ) }
    dend_41 { pt3dadd( -18.2631, -162.023, -29.5596, 1.2 ) }
    dend_41 { pt3dadd( -18.3481, -163.101, -29.4433, 2.52 ) }
    dend_41 { pt3dadd( -18.4561, -164.786, -29.0832, 0.48 ) }
    dend_41 { pt3dadd( -18.4599, -165.176, -28.9948, 0.48 ) }
    dend_41 { pt3dadd( -18.4345, -166.14, -28.7753, 0.48 ) }
    dend_41 { pt3dadd( -18.3693, -167.192, -28.5602, 0.72 ) }
    dend_41 { pt3dadd( -18.2776, -168.556, -28.3039, 0.24 ) }
    dend_41 { pt3dadd( -18.1965, -169.995, -27.9465, 0.12 ) }
    dend_41 { pt3dadd( -18.1033, -171.078, -27.6857, 0.12 ) }
    dend_41 { pt3dadd( -18.0193, -171.671, -27.5585, 1.08 ) }
    dend_41 { pt3dadd( -17.8935, -172.326, -27.3999, 1.32 ) }
    dend_41 { pt3dadd( -17.7657, -172.862, -27.2787, 1.08 ) }
    dend_41 { pt3dadd( -17.4065, -174.258, -26.999, 0.36 ) }
    dend_41 { pt3dadd( -16.8422, -176.348, -26.7111, 0.36 ) }
    dend_41 { pt3dadd( -16.4528, -177.756, -26.5087, 1.56 ) }
    dend_41 { pt3dadd( -16.1167, -178.984, -26.3403, 2.16 ) }
    dend_41 { pt3dadd( -15.8059, -179.967, -26.2232, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 13.6316, -17.5504, -21.7249, 0.36 ) }
    dend_28 { pt3dadd( 15.3843, -19.2378, -22.1891, 0.36 ) }
    dend_28 { pt3dadd( 16.0076, -19.5187, -22.5081, 0.36 ) }
    dend_28 { pt3dadd( 16.3609, -19.5709, -22.7499, 0.36 ) }
    dend_28 { pt3dadd( 16.6846, -19.5961, -22.976, 0.36 ) }
    dend_28 { pt3dadd( 17.4681, -19.6605, -23.5075, 0.72 ) }
    dend_28 { pt3dadd( 18.6653, -19.8016, -24.3079, 0.96 ) }
    dend_28 { pt3dadd( 19.4324, -19.8109, -24.8724, 0.96 ) }
    dend_28 { pt3dadd( 20.5104, -19.8502, -25.6736, 0.48 ) }
    dend_28 { pt3dadd( 21.5002, -19.9687, -26.3987, 0.36 ) }
    dend_28 { pt3dadd( 21.9952, -20.1407, -26.7508, 0.36 ) }
    dend_28 { pt3dadd( 22.3684, -20.5122, -26.9686, 0.36 ) }
    dend_28 { pt3dadd( 22.4737, -20.7616, -27.0026, 0.36 ) }
    dend_28 { pt3dadd( 22.7264, -21.6076, -27.0415, 0.36 ) }
    dend_28 { pt3dadd( 22.9642, -22.4049, -27.0356, 1.56 ) }
    dend_28 { pt3dadd( 23.3037, -23.3731, -27.0114, 2.52 ) }
    dend_28 { pt3dadd( 23.686, -24.2359, -27.0337, 2.4 ) }
    dend_28 { pt3dadd( 24.5776, -25.776, -27.1411, 0.36 ) }
    dend_28 { pt3dadd( 24.9297, -26.2585, -27.2043, 0.36 ) }
    dend_28 { pt3dadd( 25.6862, -27.1299, -27.365, 0.36 ) }
    dend_28 { pt3dadd( 26.4327, -27.8796, -27.5517, 0.36 ) }
    dend_28 { pt3dadd( 27.4838, -28.8434, -27.8217, 1.44 ) }
    dend_28 { pt3dadd( 28.6164, -29.8049, -28.1255, 3.25 ) }
    dend_28 { pt3dadd( 29.8963, -30.8206, -28.4884, 4.69 ) }
    dend_28 { pt3dadd( 30.1326, -31.015, -28.562, 4.93 ) }
    dend_28 { pt3dadd( 31.5139, -32.2767, -29.0546, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.134, -239.516, -25.2028, 0.12 ) }
    dend_24 { pt3dadd( -1.24936, -240.577, -26.2043, 0.12 ) }
    dend_24 { pt3dadd( -1.28062, -241.058, -26.6531, 0.12 ) }
    dend_24 { pt3dadd( -1.28237, -241.197, -26.8218, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -1.30346, -241.354, -27.0187, 0.36 ) }
    dend_24 { pt3dadd( -1.48621, -242.214, -28.0767, 0.12 ) }
    dend_24 { pt3dadd( -1.53944, -242.468, -28.428, 0.12 ) }
    dend_24 { pt3dadd( -1.53944, -242.468, -28.428, 0.36 ) }
    dend_24 { pt3dadd( -1.70986, -243.391, -29.7698, 0.36 ) }
    dend_24 { pt3dadd( -1.80455, -243.991, -30.6022, 2.52 ) }
    dend_24 { pt3dadd( -1.83434, -244.227, -30.9064, 2.88 ) }
    dend_24 { pt3dadd( -2.12574, -246.352, -33.3959, 0.24 ) }
    dend_24 { pt3dadd( -2.16584, -246.651, -33.72, 0.12 ) }
    dend_24 { pt3dadd( -2.19441, -246.938, -33.9903, 0.12 ) }
    dend_24 { pt3dadd( -2.21114, -247.317, -34.2622, 0.48 ) }
    dend_24 { pt3dadd( -2.19952, -247.735, -34.5088, 0.48 ) }
    dend_24 { pt3dadd( -2.18664, -248.165, -34.7099, 0.12 ) }
    dend_24 { pt3dadd( -2.18049, -248.926, -34.8682, 0.12 ) }
    dend_24 { pt3dadd( -2.1604, -249.376, -35.0021, 0.12 ) }
    dend_24 { pt3dadd( -2.12871, -249.892, -35.175, 0.84 ) }
    dend_24 { pt3dadd( -2.1224, -250.226, -35.2808, 0.84 ) }
    dend_24 { pt3dadd( -2.1033, -251.485, -35.6474, 0.12 ) }
    dend_24 { pt3dadd( -2.092, -252.034, -35.7833, 0.12 ) }
    dend_24 { pt3dadd( -2.11411, -253.453, -36.108, 2.64 ) }
    dend_24 { pt3dadd( -2.14783, -253.899, -36.2038, 2.28 ) }
    dend_24 { pt3dadd( -2.35276, -255.13, -36.352, 0.12 ) }
    dend_24 { pt3dadd( -2.47204, -255.562, -36.352, 0.12 ) }
    dend_24 { pt3dadd( -2.82408, -256.363, -36.235, 0.12 ) }
    dend_24 { pt3dadd( -3.18982, -256.911, -36.1109, 1.2 ) }
    dend_24 { pt3dadd( -3.2613, -256.989, -36.0833, 1.44 ) }
    dend_24 { pt3dadd( -4.38243, -258.02, -35.646, 0.12 ) }
    dend_24 { pt3dadd( -4.75859, -258.288, -35.4879, 0.12 ) }
    dend_24 { pt3dadd( -5.12491, -258.493, -35.3276, 0.12 ) }
    dend_24 { pt3dadd( -5.64095, -258.706, -35.0695, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.134, -239.516, -25.2028, 0.6 ) }
    dend_17 { pt3dadd( -0.414144, -240.47, -26.3058, 0.6 ) }
    dend_17 { pt3dadd( -0.331026, -240.589, -26.4629, 0.6 ) }
    dend_17 { pt3dadd( 0.00777344, -241.101, -27.1375, 1.32 ) }
    dend_17 { pt3dadd( 0.352597, -241.66, -27.8401, 2.28 ) }
    dend_17 { pt3dadd( 0.740264, -242.289, -28.6301, 2.04 ) }
    dend_17 { pt3dadd( 2.0146, -244.356, -31.2268, 0.96 ) }
    dend_17 { pt3dadd( 2.32248, -244.847, -31.9247, 0.48 ) }
    dend_17 { pt3dadd( 2.48365, -245.103, -32.3117, 0.48 ) }
    dend_17 { pt3dadd( 2.65123, -245.377, -32.7668, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.9599, 51.3421, 9.82667, 1.2 ) }
    dend_8 { pt3dadd( 10.052, 52.8074, 9.56715, 1.2 ) }
    dend_8 { pt3dadd( 10.1308, 54.1811, 9.45512, 1.32 ) }
    dend_8 { pt3dadd( 10.1777, 54.9977, 9.42232, 1.44 ) }
    dend_8 { pt3dadd( 10.2467, 56.0452, 9.41763, 0.96 ) }
    dend_8 { pt3dadd( 10.3744, 57.4545, 9.43393, 1.08 ) }
    dend_8 { pt3dadd( 10.6038, 59.3486, 9.47188, 1.56 ) }
    dend_8 { pt3dadd( 10.9206, 60.9786, 9.57826, 0.96 ) }
    dend_8 { pt3dadd( 11.1634, 61.8852, 9.6661, 0.6 ) }
    dend_8 { pt3dadd( 11.4578, 62.7479, 9.7646, 1.2 ) }
    dend_8 { pt3dadd( 11.7878, 63.5559, 9.86851, 2.04 ) }
    dend_8 { pt3dadd( 12.0755, 64.1832, 9.95266, 2.16 ) }
    dend_8 { pt3dadd( 12.6719, 65.4482, 10.1382, 1.2 ) }
    dend_8 { pt3dadd( 13.0712, 66.3626, 10.2649, 0.84 ) }
    dend_8 { pt3dadd( 13.4162, 67.3332, 10.3502, 0.48 ) }
    dend_8 { pt3dadd( 13.5994, 68.0175, 10.3795, 0.48 ) }
    dend_8 { pt3dadd( 13.8579, 69.5644, 10.3739, 0.48 ) }
    dend_8 { pt3dadd( 13.9615, 70.7056, 10.3257, 0.84 ) }
    dend_8 { pt3dadd( 14.01, 71.9954, 10.2224, 1.92 ) }
    dend_8 { pt3dadd( 14.0544, 73.6158, 10.0347, 2.52 ) }
    dend_8 { pt3dadd( 14.0868, 74.4431, 9.91587, 2.28 ) }
    dend_8 { pt3dadd( 14.1869, 75.8047, 9.73023, 0.6 ) }
    dend_8 { pt3dadd( 14.244, 76.2716, 9.67933, 0.6 ) }
    dend_8 { pt3dadd( 14.3425, 76.9443, 9.63576, 0.48 ) }
    dend_8 { pt3dadd( 14.5224, 78.0861, 9.6304, 0.48 ) }
    dend_8 { pt3dadd( 14.67, 78.9479, 9.68867, 0.96 ) }
    dend_8 { pt3dadd( 14.8105, 79.7164, 9.76012, 1.8 ) }
    dend_8 { pt3dadd( 15.0268, 80.8042, 9.90325, 2.04 ) }
    dend_8 { pt3dadd( 15.2403, 81.9522, 10.0608, 2.04 ) }
    dend_8 { pt3dadd( 15.4873, 83.6081, 10.2954, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.9599, 51.3421, 9.82667, 1.32 ) }
    dend_3 { pt3dadd( 11.0443, 52.8674, 10.0632, 1.32 ) }
    dend_3 { pt3dadd( 11.5131, 53.5259, 10.074, 0.96 ) }
    dend_3 { pt3dadd( 12.3395, 54.599, 9.99276, 1.32 ) }
    dend_3 { pt3dadd( 12.8603, 55.179, 9.88029, 1.68 ) }
    dend_3 { pt3dadd( 13.5418, 55.8314, 9.69957, 1.2 ) }
    dend_3 { pt3dadd( 14.384, 56.5564, 9.45259, 0.84 ) }
    dend_3 { pt3dadd( 15.301, 57.2517, 9.10538, 0.72 ) }
    dend_3 { pt3dadd( 15.8292, 57.6232, 8.91414, 0.84 ) }
    dend_3 { pt3dadd( 16.7527, 58.1413, 8.55562, 0.6 ) }
    dend_3 { pt3dadd( 17.3548, 58.4085, 8.32384, 0.6 ) }
    dend_3 { pt3dadd( 17.8569, 58.5625, 8.14598, 1.32 ) }
    dend_3 { pt3dadd( 19.157, 58.8711, 7.90936, 1.8 ) }
    dend_3 { pt3dadd( 19.9562, 59.1969, 7.98583, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -22.6363, 63.0666, -30.1083, 0.48 ) }
    dend_58 { pt3dadd( -22.8599, 65.064, -30.2236, 0.48 ) }
    dend_58 { pt3dadd( -23.0284, 66.2444, -30.2532, 0.48 ) }
    dend_58 { pt3dadd( -23.1562, 67.0421, -30.248, 0.48 ) }
    dend_58 { pt3dadd( -23.4018, 68.4574, -30.2389, 0.72 ) }
    dend_58 { pt3dadd( -23.5599, 69.3041, -30.2373, 0.48 ) }
    dend_58 { pt3dadd( -23.7605, 70.3166, -30.2398, 0.48 ) }
    dend_58 { pt3dadd( -24.1494, 71.747, -30.2316, 0.48 ) }
    dend_58 { pt3dadd( -24.5185, 73.0294, -30.2175, 1.8 ) }
    dend_58 { pt3dadd( -24.6987, 73.6903, -30.2198, 2.64 ) }
    dend_58 { pt3dadd( -24.8849, 74.4484, -30.2432, 2.88 ) }
    dend_58 { pt3dadd( -25.0749, 75.3335, -30.2709, 2.88 ) }
    dend_58 { pt3dadd( -25.2756, 76.3454, -30.3074, 2.04 ) }
    dend_58 { pt3dadd( -25.5149, 77.6308, -30.3685, 0.48 ) }
    dend_58 { pt3dadd( -25.6039, 78.1456, -30.3925, 0.36 ) }
    dend_58 { pt3dadd( -25.9196, 80.0516, -30.4877, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( -26.1143, 81.2759, -30.5605, 1.44 ) }
    dend_58 { pt3dadd( -26.2544, 82.4165, -30.6636, 2.52 ) }
    dend_58 { pt3dadd( -26.353, 83.5467, -30.802, 2.64 ) }
    dend_58 { pt3dadd( -26.4004, 84.3541, -30.9263, 2.52 ) }
    dend_58 { pt3dadd( -26.4765, 86.1359, -31.2516, 0.48 ) }
    dend_58 { pt3dadd( -26.5058, 86.8844, -31.4085, 0.36 ) }
    dend_58 { pt3dadd( -26.5799, 88.3246, -31.7264, 0.36 ) }
    dend_58 { pt3dadd( -26.6178, 89.006, -31.8658, 0.36 ) }
    dend_58 { pt3dadd( -26.6996, 90.1343, -32.0912, 0.36 ) }
    dend_58 { pt3dadd( -26.8135, 91.3962, -32.3311, 1.44 ) }
    dend_58 { pt3dadd( -26.9139, 92.1549, -32.4619, 1.56 ) }
    dend_58 { pt3dadd( -27.0965, 93.1275, -32.6158, 0.24 ) }
    dend_58 { pt3dadd( -27.3829, 94.2423, -32.7668, 0.24 ) }
    dend_58 { pt3dadd( -27.6494, 95.2031, -32.8734, 0.72 ) }
    dend_58 { pt3dadd( -27.7826, 95.6897, -32.9199, 0.72 ) }
    dend_58 { pt3dadd( -27.9308, 96.257, -32.9671, 0.48 ) }
    dend_58 { pt3dadd( -28.0159, 96.6344, -32.998, 0.36 ) }
    dend_58 { pt3dadd( -28.1174, 97.2614, -33.0346, 0.36 ) }
    dend_58 { pt3dadd( -28.1827, 98.0336, -33.0472, 0.84 ) }
    dend_58 { pt3dadd( -28.2051, 99.3124, -33.0593, 2.4 ) }
    dend_58 { pt3dadd( -28.2077, 99.8294, -33.0744, 3.0 ) }
    dend_58 { pt3dadd( -28.2052, 100.852, -33.1168, 3.0 ) }
    dend_58 { pt3dadd( -28.22, 102.129, -33.189, 1.68 ) }
    dend_58 { pt3dadd( -28.2544, 103.399, -33.2774, 0.36 ) }
    dend_58 { pt3dadd( -28.3109, 104.43, -33.3673, 0.36 ) }
    dend_58 { pt3dadd( -28.4519, 105.746, -33.4882, 0.36 ) }
    dend_58 { pt3dadd( -28.624, 106.763, -33.5916, 1.68 ) }
    dend_58 { pt3dadd( -28.7768, 107.434, -33.6703, 2.52 ) }
    dend_58 { pt3dadd( -28.9232, 107.949, -33.7415, 2.64 ) }
    dend_58 { pt3dadd( -29.1282, 108.603, -33.8352, 2.28 ) }
    dend_58 { pt3dadd( -29.4532, 109.662, -33.9857, 0.48 ) }
    dend_58 { pt3dadd( -29.8428, 111.135, -34.2537, 0.48 ) }
    dend_58 { pt3dadd( -30.097, 112.241, -34.497, 0.48 ) }
    dend_58 { pt3dadd( -30.1892, 112.741, -34.6185, 0.96 ) }
    dend_58 { pt3dadd( -30.3224, 113.61, -34.8368, 1.56 ) }
    dend_58 { pt3dadd( -30.3962, 114.245, -34.9977, 1.56 ) }
    dend_58 { pt3dadd( -30.5036, 115.501, -35.3091, 0.48 ) }
    dend_58 { pt3dadd( -30.5343, 115.886, -35.4097, 0.12 ) }
    dend_58 { pt3dadd( -30.6331, 116.997, -35.7014, 0.12 ) }
    dend_58 { pt3dadd( -30.7582, 118.24, -36.0197, 2.16 ) }
    dend_58 { pt3dadd( -30.83, 118.867, -36.172, 2.88 ) }
    dend_58 { pt3dadd( -30.8952, 119.369, -36.2784, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -22.6363, 63.0666, -30.1083, 0.48 ) }
    dend_55 { pt3dadd( -23.7684, 65.2155, -32.4927, 0.48 ) }
    dend_55 { pt3dadd( -23.9469, 65.5214, -32.8332, 0.48 ) }
    dend_55 { pt3dadd( -24.3379, 66.1622, -33.6101, 0.72 ) }
    dend_55 { pt3dadd( -24.5951, 66.6003, -34.1829, 0.72 ) }
    dend_55 { pt3dadd( -25.0585, 67.4353, -35.2616, 0.24 ) }
    dend_55 { pt3dadd( -25.2613, 67.8114, -35.7505, 0.12 ) }
    dend_55 { pt3dadd( -25.5478, 68.3485, -36.4141, 0.84 ) }
    dend_55 { pt3dadd( -25.8845, 69.0557, -37.3379, 0.12 ) }
    dend_55 { pt3dadd( -26.2166, 69.8343, -38.3578, 0.12 ) }
    dend_55 { pt3dadd( -26.3955, 70.2916, -38.9059, 1.68 ) }
    dend_55 { pt3dadd( -26.6092, 70.863, -39.49, 2.4 ) }
    dend_55 { pt3dadd( -26.9811, 71.8599, -40.4777, 1.8 ) }
    dend_55 { pt3dadd( -27.3398, 72.8176, -41.4112, 0.12 ) }
    dend_55 { pt3dadd( -27.5259, 73.2448, -41.816, 0.12 ) }
    dend_55 { pt3dadd( -27.9532, 74.0616, -42.6237, 1.92 ) }
    dend_55 { pt3dadd( -28.2568, 74.5933, -43.2127, 2.4 ) }
    dend_55 { pt3dadd( -29.0647, 75.9624, -44.8438, 0.6 ) }
    dend_55 { pt3dadd( -29.4586, 76.5787, -45.6217, 0.48 ) }
    dend_55 { pt3dadd( -29.7836, 77.0695, -46.2487, 0.48 ) }
    dend_55 { pt3dadd( -30.2472, 77.7897, -47.1769, 1.2 ) }
    dend_55 { pt3dadd( -30.7549, 78.6033, -48.2834, 0.48 ) }
    dend_55 { pt3dadd( -30.9352, 78.9205, -48.6913, 0.12 ) }
    dend_55 { pt3dadd( -31.2718, 79.6142, -49.3904, 0.12 ) }
    dend_55 { pt3dadd( -31.4597, 80.07, -49.7791, 0.72 ) }
    dend_55 { pt3dadd( -31.6154, 80.5374, -50.2075, 0.72 ) }
    dend_55 { pt3dadd( -32.0047, 81.6226, -51.2372, 0.12 ) }
    dend_55 { pt3dadd( -32.0989, 81.8633, -51.4853, 0.12 ) }
    dend_55 { pt3dadd( -32.3666, 82.5845, -52.2737, 2.28 ) }
    dend_55 { pt3dadd( -32.4895, 82.9658, -52.7531, 2.52 ) }
    dend_55 { pt3dadd( -32.9709, 84.6314, -55.0492, 0.12 ) }
    dend_55 { pt3dadd( -33.1316, 85.3293, -55.9998, 0.12 ) }
    dend_55 { pt3dadd( -33.2645, 86.0577, -56.9619, 1.44 ) }
    dend_55 { pt3dadd( -33.3305, 86.4669, -57.5071, 1.8 ) }
    dend_55 { pt3dadd( -33.4587, 87.347, -58.7121, 1.32 ) }
    dend_55 { pt3dadd( -33.5562, 87.8485, -59.3933, 0.12 ) }
    dend_55 { pt3dadd( -33.7331, 88.6377, -60.3496, 0.12 ) }
    dend_55 { pt3dadd( -34.004, 89.7238, -61.6215, 1.56 ) }
    dend_55 { pt3dadd( -34.1155, 90.0806, -62.0231, 1.92 ) }
    dend_55 { pt3dadd( -34.5535, 91.2124, -63.2921, 0.12 ) }
    dend_55 { pt3dadd( -34.849, 91.8972, -64.038, 0.12 ) }
    dend_55 { pt3dadd( -35.0386, 92.3145, -64.5012, 0.96 ) }
    dend_55 { pt3dadd( -35.1096, 92.4679, -64.6793, 0.96 ) }
    dend_55 { pt3dadd( -35.3798, 93.1266, -65.504, 0.12 ) }
    dend_55 { pt3dadd( -35.5772, 93.6372, -66.1919, 0.12 ) }
    dend_55 { pt3dadd( -35.8749, 94.37, -67.2394, 1.32 ) }
    dend_55 { pt3dadd( -36.0156, 94.7088, -67.7317, 1.8 ) }
    dend_55 { pt3dadd( -36.2138, 95.1453, -68.3582, 1.32 ) }
    dend_55 { pt3dadd( -36.7884, 96.3899, -70.0577, 0.12 ) }
    dend_55 { pt3dadd( -36.8516, 96.5321, -70.2825, 0.12 ) }
    dend_55 { pt3dadd( -37.0611, 97.0421, -71.1274, 0.36 ) }
    dend_55 { pt3dadd( -37.2604, 97.4629, -71.8327, 0.36 ) }
    dend_55 { pt3dadd( -37.5067, 98.044, -72.8236, 1.92 ) }
    dend_55 { pt3dadd( -37.678, 98.5522, -73.6449, 2.76 ) }
    dend_55 { pt3dadd( -38.3448, 100.932, -77.1667, 0.36 ) }
    dend_55 { pt3dadd( -38.3945, 101.134, -77.4688, 0.36 ) }
    dend_55 { pt3dadd( -38.5586, 101.9, -78.6192, 0.36 ) }
    dend_55 { pt3dadd( -38.7165, 102.664, -79.7635, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( -38.7954, 103.101, -80.4003, 0.36 ) }
    dend_55 { pt3dadd( -38.8974, 103.876, -81.4669, 0.72 ) }
    dend_55 { pt3dadd( -38.9416, 104.848, -82.6858, 0.12 ) }
    dend_55 { pt3dadd( -38.9447, 105.081, -82.9941, 0.12 ) }
    dend_55 { pt3dadd( -38.9319, 105.508, -83.5935, 1.92 ) }
    dend_55 { pt3dadd( -38.9836, 106.329, -84.8171, 2.52 ) }
    dend_55 { pt3dadd( -39.0116, 107.187, -86.2539, 1.44 ) }
    dend_55 { pt3dadd( -38.9254, 107.722, -87.2377, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -33.2322, 40.971, -42.7917, 0.12 ) }
    dend_53 { pt3dadd( -35.0734, 43.6295, -44.321, 0.12 ) }
    dend_53 { pt3dadd( -35.8885, 44.7749, -45.0168, 0.6 ) }
    dend_53 { pt3dadd( -36.4889, 45.662, -45.5572, 0.12 ) }
    dend_53 { pt3dadd( -36.7569, 46.0701, -45.7947, 0.12 ) }
    dend_53 { pt3dadd( -37.1187, 46.6271, -46.0949, 0.12 ) }
    dend_53 { pt3dadd( -37.5481, 47.3024, -46.4312, 0.24 ) }
    dend_53 { pt3dadd( -37.9385, 47.9333, -46.7627, 0.12 ) }
    dend_53 { pt3dadd( -38.2561, 48.4669, -47.1419, 0.12 ) }
    dend_53 { pt3dadd( -38.7616, 49.3466, -47.8437, 0.12 ) }
    dend_53 { pt3dadd( -39.236, 50.2093, -48.5855, 1.32 ) }
    dend_53 { pt3dadd( -39.5199, 50.8111, -49.1011, 1.8 ) }
    dend_53 { pt3dadd( -40.2362, 52.5585, -50.54, 0.84 ) }
    dend_53 { pt3dadd( -40.619, 53.6239, -51.6074, 0.12 ) }
    dend_53 { pt3dadd( -40.7103, 53.9667, -51.9763, 0.12 ) }
    dend_53 { pt3dadd( -40.9206, 55.0821, -53.1479, 1.8 ) }
    dend_53 { pt3dadd( -41.0221, 55.7691, -53.8278, 2.16 ) }
    dend_53 { pt3dadd( -41.0902, 56.4213, -54.4525, 1.8 ) }
    dend_53 { pt3dadd( -41.2452, 59.4912, -57.5697, 0.24 ) }
    dend_53 { pt3dadd( -41.2536, 60.7373, -58.9098, 0.24 ) }
    dend_53 { pt3dadd( -41.2475, 61.9912, -60.2812, 0.24 ) }
    dend_53 { pt3dadd( -41.2426, 62.5442, -60.9089, 0.24 ) }
    dend_53 { pt3dadd( -41.2442, 64.334, -63.0539, 2.28 ) }
    dend_53 { pt3dadd( -41.2573, 66.7897, -66.0819, 0.24 ) }
    dend_53 { pt3dadd( -41.2624, 67.1875, -66.5488, 0.24 ) }
    dend_53 { pt3dadd( -41.2886, 68.3483, -68.0066, 0.24 ) }
    dend_53 { pt3dadd( -41.2989, 69.6001, -69.5997, 1.44 ) }
    dend_53 { pt3dadd( -41.3336, 70.6442, -70.842, 1.8 ) }
    dend_53 { pt3dadd( -41.4575, 71.9999, -72.1955, 0.12 ) }
    dend_53 { pt3dadd( -41.6094, 73.0729, -73.081, 0.12 ) }
    dend_53 { pt3dadd( -41.6956, 73.6344, -73.5481, 0.96 ) }
    dend_53 { pt3dadd( -41.7618, 74.113, -73.9312, 1.2 ) }
    dend_53 { pt3dadd( -41.9473, 75.3545, -74.814, 0.12 ) }
    dend_53 { pt3dadd( -42.0906, 76.3379, -75.4812, 0.12 ) }
    dend_53 { pt3dadd( -42.1649, 76.9122, -75.8936, 0.36 ) }
    dend_53 { pt3dadd( -42.3281, 78.0907, -76.9147, 0.12 ) }
    dend_53 { pt3dadd( -42.4347, 78.6522, -77.4218, 0.12 ) }
    dend_53 { pt3dadd( -42.6558, 79.6135, -78.3071, 0.48 ) }
    dend_53 { pt3dadd( -42.9747, 80.8594, -79.5094, 0.48 ) }
    dend_53 { pt3dadd( -43.341, 82.1549, -80.7742, 2.28 ) }
    dend_53 { pt3dadd( -43.9801, 84.2784, -82.7858, 0.12 ) }
    dend_53 { pt3dadd( -44.3466, 85.3704, -83.7727, 0.12 ) }
    dend_53 { pt3dadd( -44.5672, 85.9644, -84.3251, 0.12 ) }
    dend_53 { pt3dadd( -45.0298, 87.0734, -85.3432, 1.08 ) }
    dend_53 { pt3dadd( -45.3144, 87.6376, -85.8974, 1.2 ) }
    dend_53 { pt3dadd( -45.8991, 88.5002, -87.0609, 0.12 ) }
    dend_53 { pt3dadd( -46.423, 89.0861, -88.0723, 0.12 ) }
    dend_53 { pt3dadd( -47.2348, 89.929, -89.7455, 1.44 ) }
    dend_53 { pt3dadd( -47.5233, 90.2151, -90.3397, 2.04 ) }
    dend_53 { pt3dadd( -48.0802, 90.7214, -91.4194, 1.68 ) }
    dend_53 { pt3dadd( -49.8458, 92.2002, -94.7655, 0.24 ) }
    dend_53 { pt3dadd( -50.4536, 92.6623, -95.8842, 0.24 ) }
    dend_53 { pt3dadd( -51.1105, 93.1433, -97.0799, 0.12 ) }
    dend_53 { pt3dadd( -51.7569, 93.6053, -98.141, 0.72 ) }
    dend_53 { pt3dadd( -52.0603, 93.8412, -98.6175, 0.72 ) }
    dend_53 { pt3dadd( -52.355, 94.066, -99.0092, 0.12 ) }
    dend_53 { pt3dadd( -53.3752, 94.8467, -100.131, 0.12 ) }
    dend_53 { pt3dadd( -53.8748, 95.1461, -100.693, 0.12 ) }
    dend_53 { pt3dadd( -54.9157, 95.5898, -101.759, 1.68 ) }
    dend_53 { pt3dadd( -55.1447, 95.6799, -101.992, 1.68 ) }
    dend_53 { pt3dadd( -57.0154, 96.5262, -104.062, 0.12 ) }
    dend_53 { pt3dadd( -57.6515, 96.8694, -104.779, 0.12 ) }
    dend_53 { pt3dadd( -58.1914, 97.2442, -105.471, 0.24 ) }
    dend_53 { pt3dadd( -58.7367, 97.6956, -106.229, 0.24 ) }
    dend_53 { pt3dadd( -59.5766, 98.5051, -107.459, 0.24 ) }
    dend_53 { pt3dadd( -60.4138, 99.402, -108.594, 1.56 ) }
    dend_53 { pt3dadd( -60.8982, 100.017, -109.234, 2.04 ) }
    dend_53 { pt3dadd( -62.2164, 101.811, -110.899, 0.36 ) }
    dend_53 { pt3dadd( -62.5972, 102.383, -111.376, 0.48 ) }
    dend_53 { pt3dadd( -63.1512, 103.275, -112.128, 0.48 ) }
    dend_53 { pt3dadd( -63.792, 104.237, -112.915, 0.48 ) }
    dend_53 { pt3dadd( -64.1428, 104.716, -113.316, 0.24 ) }
    dend_53 { pt3dadd( -64.56, 105.227, -113.837, 0.24 ) }
    dend_53 { pt3dadd( -65.178, 105.916, -114.653, 0.24 ) }
    dend_53 { pt3dadd( -66.0626, 106.796, -115.98, 1.08 ) }
    dend_53 { pt3dadd( -66.4834, 107.133, -116.646, 1.08 ) }
    dend_53 { pt3dadd( -67.1408, 107.435, -117.755, 0.36 ) }
    dend_53 { pt3dadd( -67.9733, 107.617, -119.085, 0.36 ) }
    dend_53 { pt3dadd( -68.2546, 107.625, -119.505, 0.36 ) }
    dend_53 { pt3dadd( -68.5719, 107.596, -119.931, 0.36 ) }
    dend_53 { pt3dadd( -69.0014, 107.536, -120.473, 0.36 ) }
    dend_53 { pt3dadd( -70.8691, 107.269, -122.77, 1.68 ) }
    dend_53 { pt3dadd( -71.2211, 107.22, -123.166, 2.4 ) }
    dend_53 { pt3dadd( -71.4806, 107.191, -123.437, 2.64 ) }
    dend_53 { pt3dadd( -74.2482, 106.906, -126.198, 0.6 ) }
    dend_53 { pt3dadd( -74.5955, 106.86, -126.52, 0.12 ) }
    dend_53 { pt3dadd( -75.0619, 106.792, -126.891, 0.12 ) }
    dend_53 { pt3dadd( -75.6297, 106.687, -127.263, 0.6 ) }
    dend_53 { pt3dadd( -76.213, 106.565, -127.645, 0.12 ) }
    dend_53 { pt3dadd( -76.8615, 106.419, -127.997, 0.12 ) }
    dend_53 { pt3dadd( -77.8932, 106.123, -128.344, 1.44 ) }
    dend_53 { pt3dadd( -78.75, 105.878, -128.623, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -80.9451, 105.341, -129.281, 0.12 ) }
    dend_53 { pt3dadd( -81.8761, 105.188, -129.503, 0.12 ) }
    dend_53 { pt3dadd( -83.0277, 105.083, -129.697, 0.84 ) }
    dend_53 { pt3dadd( -83.4972, 105.067, -129.779, 0.84 ) }
    dend_53 { pt3dadd( -83.8306, 105.067, -129.83, 0.12 ) }
    dend_53 { pt3dadd( -84.5807, 105.043, -129.902, 0.12 ) }
    dend_53 { pt3dadd( -85.6451, 104.992, -129.916, 1.44 ) }
    dend_53 { pt3dadd( -86.0139, 104.96, -129.932, 1.56 ) }
    dend_53 { pt3dadd( -87.5065, 104.825, -130.064, 0.12 ) }
    dend_53 { pt3dadd( -88.6411, 104.737, -130.166, 0.12 ) }
    dend_53 { pt3dadd( -89.334, 104.677, -130.226, 1.08 ) }
    dend_53 { pt3dadd( -90.1623, 104.575, -130.336, 1.92 ) }
    dend_53 { pt3dadd( -90.8355, 104.47, -130.468, 1.56 ) }
    dend_53 { pt3dadd( -92.091, 104.27, -130.784, 0.12 ) }
    dend_53 { pt3dadd( -92.5951, 104.184, -130.932, 0.12 ) }
    dend_53 { pt3dadd( -92.9072, 104.131, -131.046, 0.48 ) }
    dend_53 { pt3dadd( -94.2351, 103.914, -131.627, 0.48 ) }
    dend_53 { pt3dadd( -94.8199, 103.831, -131.895, 0.12 ) }
    dend_53 { pt3dadd( -95.743, 103.79, -132.15, 0.12 ) }
    dend_53 { pt3dadd( -96.179, 103.847, -132.422, 0.84 ) }
    dend_53 { pt3dadd( -96.5959, 103.912, -132.75, 1.2 ) }
    dend_53 { pt3dadd( -97.2896, 104.033, -133.203, 0.12 ) }
    dend_53 { pt3dadd( -98.2675, 104.136, -133.322, 0.12 ) }
    dend_53 { pt3dadd( -100.475, 103.934, -131.783, 2.88 ) }
    dend_53 { pt3dadd( -104.555, 103.072, -126.761, 0.96 ) }
    dend_53 { pt3dadd( -105.185, 102.853, -125.561, 0.96 ) }
    dend_53 { pt3dadd( -108.002, 101.412, -118.011, 0.12 ) }
    dend_53 { pt3dadd( -108.291, 101.215, -117.011, 0.12 ) }
    dend_53 { pt3dadd( -108.47, 101.045, -116.189, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -33.2322, 40.971, -42.7917, 0.48 ) }
    dend_50 { pt3dadd( -34.5885, 40.4085, -43.3641, 0.48 ) }
    dend_50 { pt3dadd( -35.1999, 40.1936, -43.8724, 0.48 ) }
    dend_50 { pt3dadd( -36.0201, 40.0096, -44.8713, 0.48 ) }
    dend_50 { pt3dadd( -36.4459, 39.9514, -45.4147, 2.16 ) }
    dend_50 { pt3dadd( -36.6591, 39.9353, -45.6945, 2.52 ) }
    dend_50 { pt3dadd( -36.9584, 39.9266, -46.0928, 2.52 ) }
    dend_50 { pt3dadd( -38.1835, 39.9795, -48.0575, 1.44 ) }
    dend_50 { pt3dadd( -38.9541, 40.0019, -49.3594, 0.36 ) }
    dend_50 { pt3dadd( -39.2301, 39.9914, -49.8348, 0.48 ) }
    dend_50 { pt3dadd( -39.7341, 39.927, -50.7185, 0.6 ) }
    dend_50 { pt3dadd( -40.2304, 39.7702, -51.7955, 0.6 ) }
    dend_50 { pt3dadd( -40.8147, 39.5074, -53.2735, 0.6 ) }
    dend_50 { pt3dadd( -41.0598, 39.375, -53.9142, 1.92 ) }
    dend_50 { pt3dadd( -41.2642, 39.2447, -54.4621, 2.64 ) }
    dend_50 { pt3dadd( -41.4633, 39.1074, -55.005, 2.64 ) }
    dend_50 { pt3dadd( -43.2562, 37.8013, -59.8682, 1.68 ) }
    dend_50 { pt3dadd( -44.0599, 37.2222, -61.9752, 0.72 ) }
    dend_50 { pt3dadd( -44.2208, 37.1171, -62.3665, 1.56 ) }
    dend_50 { pt3dadd( -44.569, 36.9092, -63.1685, 1.92 ) }
    dend_50 { pt3dadd( -44.733, 36.8202, -63.5109, 2.28 ) }
    dend_50 { pt3dadd( -44.8793, 36.75, -63.773, 2.28 ) }
    dend_50 { pt3dadd( -46.4824, 36.1276, -65.5327, 0.24 ) }
    dend_50 { pt3dadd( -46.7499, 36.0172, -65.8118, 0.12 ) }
    dend_50 { pt3dadd( -46.9324, 35.9289, -66.044, 0.12 ) }
    dend_50 { pt3dadd( -47.2475, 35.7606, -66.4898, 0.12 ) }
    dend_50 { pt3dadd( -47.811, 35.4292, -67.3208, 1.32 ) }
    dend_50 { pt3dadd( -48.0676, 35.26, -67.7182, 2.16 ) }
    dend_50 { pt3dadd( -48.4713, 34.9599, -68.347, 2.4 ) }
    dend_50 { pt3dadd( -49.5953, 34.0269, -70.1457, 0.72 ) }
    dend_50 { pt3dadd( -49.8969, 33.7478, -70.639, 0.84 ) }
    dend_50 { pt3dadd( -50.0776, 33.5568, -70.9485, 1.08 ) }
    dend_50 { pt3dadd( -50.611, 32.9362, -71.8331, 0.48 ) }
    dend_50 { pt3dadd( -50.7424, 32.7765, -72.0404, 0.12 ) }
    dend_50 { pt3dadd( -50.9984, 32.4518, -72.4066, 0.48 ) }
    dend_50 { pt3dadd( -51.0916, 32.3278, -72.5115, 0.48 ) }
    dend_50 { pt3dadd( -51.4912, 31.7528, -72.9681, 0.12 ) }
    dend_50 { pt3dadd( -51.6345, 31.5326, -73.1315, 0.12 ) }
    dend_50 { pt3dadd( -51.8143, 31.2343, -73.3576, 0.12 ) }
    dend_50 { pt3dadd( -51.9205, 31.0538, -73.5628, 0.12 ) }
    dend_50 { pt3dadd( -52.0356, 30.8612, -73.8341, 0.12 ) }
    dend_50 { pt3dadd( -52.1466, 30.6858, -74.0731, 0.48 ) }
    dend_50 { pt3dadd( -52.1939, 30.6046, -74.1744, 0.48 ) }
    dend_50 { pt3dadd( -52.5151, 29.9354, -74.9192, 0.48 ) }
    dend_50 { pt3dadd( -52.6873, 29.4859, -75.3471, 0.12 ) }
    dend_50 { pt3dadd( -52.7541, 29.3287, -75.4843, 0.12 ) }
    dend_50 { pt3dadd( -52.916, 28.9243, -75.7829, 0.12 ) }
    dend_50 { pt3dadd( -53.1882, 28.2017, -76.3037, 1.8 ) }
    dend_50 { pt3dadd( -53.3885, 27.7317, -76.6131, 2.76 ) }
    dend_50 { pt3dadd( -53.5137, 27.437, -76.7748, 2.76 ) }
    dend_50 { pt3dadd( -53.7344, 26.882, -77.0538, 1.92 ) }
    dend_50 { pt3dadd( -53.9484, 26.2773, -77.3534, 1.92 ) }
    dend_50 { pt3dadd( -54.3767, 24.7986, -78.1399, 0.12 ) }
    dend_50 { pt3dadd( -54.5255, 24.1794, -78.4644, 0.12 ) }
    dend_50 { pt3dadd( -54.5883, 23.8421, -78.666, 0.12 ) }
    dend_50 { pt3dadd( -54.64, 23.4937, -78.8685, 0.48 ) }
    dend_50 { pt3dadd( -54.6755, 23.1607, -79.0609, 0.6 ) }
    dend_50 { pt3dadd( -54.7615, 22.4833, -79.4524, 0.12 ) }
    dend_50 { pt3dadd( -54.7762, 22.2098, -79.5858, 0.12 ) }
    dend_50 { pt3dadd( -54.7922, 20.897, -80.2747, 2.4 ) }
    dend_50 { pt3dadd( -54.8387, 20.2324, -80.6614, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -15.8059, -179.967, -26.2232, 0.12 ) }
    dend_45 { pt3dadd( -16.0755, -181.065, -26.5155, 0.12 ) }
    dend_45 { pt3dadd( -16.2227, -181.412, -26.5796, 0.12 ) }
    dend_45 { pt3dadd( -16.4412, -181.8, -26.5985, 0.36 ) }
    dend_45 { pt3dadd( -16.8153, -182.396, -26.5837, 0.48 ) }
    dend_45 { pt3dadd( -17.0026, -182.685, -26.5676, 0.12 ) }
    dend_45 { pt3dadd( -17.2698, -183.126, -26.5385, 0.12 ) }
    dend_45 { pt3dadd( -17.7064, -183.798, -26.4243, 0.36 ) }
    dend_45 { pt3dadd( -18.022, -184.226, -26.2166, 0.12 ) }
    dend_45 { pt3dadd( -18.3217, -184.547, -25.9813, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( -18.5819, -184.753, -25.7953, 0.12 ) }
    dend_45 { pt3dadd( -18.9908, -185.068, -25.4818, 0.12 ) }
    dend_45 { pt3dadd( -19.6217, -185.528, -24.9706, 0.36 ) }
    dend_45 { pt3dadd( -20.62, -186.188, -24.1611, 0.12 ) }
    dend_45 { pt3dadd( -21.3138, -186.587, -23.6172, 0.12 ) }
    dend_45 { pt3dadd( -22.3894, -187.057, -22.7716, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -15.8059, -179.967, -26.2232, 0.12 ) }
    dend_42 { pt3dadd( -15.2638, -180.305, -26.5166, 0.12 ) }
    dend_42 { pt3dadd( -14.8296, -180.562, -26.7825, 0.12 ) }
    dend_42 { pt3dadd( -14.3552, -180.845, -27.0761, 0.48 ) }
    dend_42 { pt3dadd( -13.9985, -181.059, -27.2975, 0.12 ) }
    dend_42 { pt3dadd( -13.2967, -181.48, -27.733, 0.12 ) }
    dend_42 { pt3dadd( -12.5661, -181.918, -28.1863, 0.12 ) }
    dend_42 { pt3dadd( -11.7421, -182.38, -28.7603, 2.52 ) }
    dend_42 { pt3dadd( -11.5553, -182.481, -28.8988, 2.28 ) }
    dend_42 { pt3dadd( -11.5321, -182.494, -28.9157, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 31.5139, -32.2767, -29.0546, 0.48 ) }
    dend_34 { pt3dadd( 31.0555, -34.106, -30.8095, 0.48 ) }
    dend_34 { pt3dadd( 30.9924, -34.4006, -31.0471, 0.36 ) }
    dend_34 { pt3dadd( 30.9323, -34.7194, -31.2765, 0.36 ) }
    dend_34 { pt3dadd( 30.8678, -35.0845, -31.5156, 0.84 ) }
    dend_34 { pt3dadd( 30.7733, -35.6662, -31.8704, 1.32 ) }
    dend_34 { pt3dadd( 30.6864, -36.4492, -32.3058, 0.48 ) }
    dend_34 { pt3dadd( 30.6789, -37.09, -32.5235, 0.36 ) }
    dend_34 { pt3dadd( 30.6896, -37.3826, -32.6157, 0.36 ) }
    dend_34 { pt3dadd( 30.7237, -37.7601, -32.7371, 0.48 ) }
    dend_34 { pt3dadd( 30.7757, -38.1559, -32.862, 0.36 ) }
    dend_34 { pt3dadd( 30.9, -38.9093, -33.1045, 0.36 ) }
    dend_34 { pt3dadd( 30.973, -39.3312, -33.2451, 0.36 ) }
    dend_34 { pt3dadd( 31.0019, -39.7039, -33.3816, 0.48 ) }
    dend_34 { pt3dadd( 31.0113, -40.1615, -33.5593, 0.36 ) }
    dend_34 { pt3dadd( 30.9936, -40.6234, -33.7445, 0.36 ) }
    dend_34 { pt3dadd( 30.9773, -40.8075, -33.8189, 0.36 ) }
    dend_34 { pt3dadd( 30.7648, -42.4177, -34.471, 3.49 ) }
    dend_34 { pt3dadd( 30.5297, -43.9493, -35.0637, 0.12 ) }
    dend_34 { pt3dadd( 30.4853, -44.2187, -35.1638, 0.12 ) }
    dend_34 { pt3dadd( 30.4122, -44.6347, -35.3068, 0.36 ) }
    dend_34 { pt3dadd( 30.3854, -44.7772, -35.3542, 0.12 ) }
    dend_34 { pt3dadd( 30.2768, -45.2758, -35.5068, 0.12 ) }
    dend_34 { pt3dadd( 30.1308, -45.7524, -35.6236, 0.6 ) }
    dend_34 { pt3dadd( 30.0373, -46.0403, -35.6783, 0.6 ) }
    dend_34 { pt3dadd( 29.8605, -46.5076, -35.7732, 0.36 ) }
    dend_34 { pt3dadd( 29.7855, -46.6876, -35.8168, 0.24 ) }
    dend_34 { pt3dadd( 29.6538, -46.9693, -35.8943, 0.24 ) }
    dend_34 { pt3dadd( 29.489, -47.2748, -35.9866, 1.08 ) }
    dend_34 { pt3dadd( 29.1116, -47.9616, -36.2039, 1.8 ) }
    dend_34 { pt3dadd( 28.8212, -48.4923, -36.3486, 1.56 ) }
    dend_34 { pt3dadd( 28.5678, -48.9774, -36.44, 0.96 ) }
    dend_34 { pt3dadd( 28.4044, -49.3507, -36.4942, 0.24 ) }
    dend_34 { pt3dadd( 28.1217, -50.0899, -36.5869, 0.24 ) }
    dend_34 { pt3dadd( 27.9925, -50.4696, -36.628, 0.24 ) }
    dend_34 { pt3dadd( 27.7681, -51.1959, -36.6965, 0.24 ) }
    dend_34 { pt3dadd( 27.3458, -52.6717, -36.8209, 3.25 ) }
    dend_34 { pt3dadd( 26.9917, -54.045, -36.9337, 0.24 ) }
    dend_34 { pt3dadd( 26.9239, -54.341, -36.9603, 0.24 ) }
    dend_34 { pt3dadd( 26.7287, -55.3121, -37.0643, 0.24 ) }
    dend_34 { pt3dadd( 26.6421, -55.7906, -37.1284, 0.48 ) }
    dend_34 { pt3dadd( 26.6147, -55.985, -37.1639, 0.12 ) }
    dend_34 { pt3dadd( 26.4934, -57.3446, -37.4457, 0.12 ) }
    dend_34 { pt3dadd( 26.4846, -57.4826, -37.4736, 0.84 ) }
    dend_34 { pt3dadd( 26.4627, -57.9758, -37.5734, 1.08 ) }
    dend_34 { pt3dadd( 26.442, -58.5446, -37.6909, 0.12 ) }
    dend_34 { pt3dadd( 26.4032, -59.5396, -37.8965, 0.12 ) }
    dend_34 { pt3dadd( 26.353, -60.6437, -38.1249, 2.4 ) }
    dend_34 { pt3dadd( 26.2863, -61.8228, -38.3692, 0.24 ) }
    dend_34 { pt3dadd( 26.2508, -62.2998, -38.4767, 0.24 ) }
    dend_34 { pt3dadd( 26.1913, -62.8786, -38.6164, 0.36 ) }
    dend_34 { pt3dadd( 26.1489, -63.1806, -38.6969, 0.24 ) }
    dend_34 { pt3dadd( 26.1164, -63.3696, -38.7519, 0.24 ) }
    dend_34 { pt3dadd( 26.0611, -63.6376, -38.8503, 0.24 ) }
    dend_34 { pt3dadd( 25.9463, -64.1454, -39.0789, 0.24 ) }
    dend_34 { pt3dadd( 25.8893, -64.4679, -39.2262, 0.84 ) }
    dend_34 { pt3dadd( 25.85, -64.7877, -39.3687, 0.84 ) }
    dend_34 { pt3dadd( 25.8219, -65.0804, -39.4819, 0.84 ) }
    dend_34 { pt3dadd( 25.7893, -65.513, -39.617, 0.12 ) }
    dend_34 { pt3dadd( 25.7695, -65.7349, -39.6761, 0.12 ) }
    dend_34 { pt3dadd( 25.7186, -66.3814, -39.8185, 0.12 ) }
    dend_34 { pt3dadd( 25.696, -66.6945, -39.8839, 1.32 ) }
    dend_34 { pt3dadd( 25.6378, -67.3714, -40.0493, 1.68 ) }
    dend_34 { pt3dadd( 25.5547, -68.2328, -40.2764, 1.2 ) }
    dend_34 { pt3dadd( 25.5109, -68.7363, -40.4657, 0.12 ) }
    dend_34 { pt3dadd( 25.4921, -68.9242, -40.552, 0.12 ) }
    dend_34 { pt3dadd( 25.4261, -69.4512, -40.8253, 0.12 ) }
    dend_34 { pt3dadd( 25.3136, -70.2054, -41.2423, 1.32 ) }
    dend_34 { pt3dadd( 25.2297, -70.7085, -41.536, 2.04 ) }
    dend_34 { pt3dadd( 25.0145, -72.0668, -42.3219, 0.36 ) }
    dend_34 { pt3dadd( 24.8997, -72.8454, -42.7438, 0.36 ) }
    dend_34 { pt3dadd( 24.7967, -73.4615, -43.0344, 0.36 ) }
    dend_34 { pt3dadd( 24.7419, -73.7918, -43.165, 0.36 ) }
    dend_34 { pt3dadd( 24.6767, -74.1608, -43.2755, 0.36 ) }
    dend_34 { pt3dadd( 24.5325, -74.9355, -43.4497, 1.92 ) }
    dend_34 { pt3dadd( 24.4227, -75.519, -43.5259, 2.52 ) }
    dend_34 { pt3dadd( 24.2397, -76.6074, -43.6595, 0.24 ) }
    dend_34 { pt3dadd( 24.1537, -77.1369, -43.6822, 0.24 ) }
    dend_34 { pt3dadd( 24.0692, -77.6625, -43.6812, 0.84 ) }
    dend_34 { pt3dadd( 23.9732, -78.2522, -43.6598, 1.08 ) }
    dend_34 { pt3dadd( 23.8661, -78.8613, -43.5949, 0.36 ) }
    dend_34 { pt3dadd( 23.7491, -79.6368, -43.4722, 0.36 ) }
    dend_34 { pt3dadd( 23.5899, -80.9854, -43.2106, 1.44 ) }
    dend_34 { pt3dadd( 23.5306, -81.5813, -43.0798, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 23.5002, -82.014, -42.9837, 1.56 ) }
    dend_34 { pt3dadd( 23.4367, -83.007, -42.7191, 0.12 ) }
    dend_34 { pt3dadd( 23.4089, -83.4848, -42.5883, 0.12 ) }
    dend_34 { pt3dadd( 23.3855, -83.9668, -42.4649, 0.12 ) }
    dend_34 { pt3dadd( 23.3801, -84.1044, -42.4375, 0.48 ) }
    dend_34 { pt3dadd( 23.3502, -84.8802, -42.2776, 0.84 ) }
    dend_34 { pt3dadd( 23.2773, -86.3743, -42.008, 0.12 ) }
    dend_34 { pt3dadd( 23.2481, -86.9888, -41.923, 0.12 ) }
    dend_34 { pt3dadd( 23.2301, -87.275, -41.8799, 0.24 ) }
    dend_34 { pt3dadd( 23.2058, -87.6796, -41.8177, 0.24 ) }
    dend_34 { pt3dadd( 23.1867, -87.9907, -41.7757, 0.24 ) }
    dend_34 { pt3dadd( 23.161, -88.3774, -41.7351, 0.48 ) }
    dend_34 { pt3dadd( 23.1438, -88.5995, -41.7325, 0.6 ) }
    dend_34 { pt3dadd( 23.1086, -88.9705, -41.7246, 0.12 ) }
    dend_34 { pt3dadd( 23.0787, -89.276, -41.7145, 0.12 ) }
    dend_34 { pt3dadd( 23.0469, -89.5729, -41.7016, 0.12 ) }
    dend_34 { pt3dadd( 22.9261, -90.6169, -41.6509, 2.4 ) }
    dend_34 { pt3dadd( 22.8555, -91.2097, -41.6225, 2.88 ) }
    dend_34 { pt3dadd( 22.7766, -91.8021, -41.6044, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 31.5139, -32.2767, -29.0546, 0.12 ) }
    dend_29 { pt3dadd( 31.9693, -33.0953, -27.7547, 0.12 ) }
    dend_29 { pt3dadd( 32.1798, -33.3767, -27.2383, 0.12 ) }
    dend_29 { pt3dadd( 32.5401, -33.7397, -26.499, 0.72 ) }
    dend_29 { pt3dadd( 33.3685, -34.3776, -25.0428, 0.72 ) }
    dend_29 { pt3dadd( 33.7705, -34.6024, -24.4715, 0.12 ) }
    dend_29 { pt3dadd( 34.1149, -34.7578, -24.0697, 0.12 ) }
    dend_29 { pt3dadd( 34.718, -34.9325, -23.4173, 1.68 ) }
    dend_29 { pt3dadd( 35.1514, -35.0221, -23.0257, 2.28 ) }
    dend_29 { pt3dadd( 35.945, -35.1425, -22.4675, 1.92 ) }
    dend_29 { pt3dadd( 36.8803, -35.3354, -21.8075, 0.36 ) }
    dend_29 { pt3dadd( 37.6354, -35.5791, -21.2007, 0.36 ) }
    dend_29 { pt3dadd( 38.1632, -35.8852, -20.61, 0.6 ) }
    dend_29 { pt3dadd( 38.3511, -36.0814, -20.2448, 0.36 ) }
    dend_29 { pt3dadd( 38.4951, -36.2913, -19.8672, 0.36 ) }
    dend_29 { pt3dadd( 39.1563, -37.4785, -17.7838, 0.36 ) }
    dend_29 { pt3dadd( 39.264, -37.7023, -17.4019, 1.2 ) }
    dend_29 { pt3dadd( 39.5835, -38.4704, -16.08, 1.92 ) }
    dend_29 { pt3dadd( 40.054, -39.6572, -14.0701, 0.24 ) }
    dend_29 { pt3dadd( 40.2931, -40.2563, -13.0375, 2.16 ) }
    dend_29 { pt3dadd( 40.3922, -40.4721, -12.6648, 3.0 ) }
    dend_29 { pt3dadd( 40.5735, -40.7037, -12.2578, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.65123, -245.377, -32.7668, 0.12 ) }
    dend_23 { pt3dadd( 3.11015, -245.32, -33.0534, 0.12 ) }
    dend_23 { pt3dadd( 3.32317, -245.309, -33.1673, 0.12 ) }
    dend_23 { pt3dadd( 3.44116, -245.309, -33.2245, 0.12 ) }
    dend_23 { pt3dadd( 3.81624, -245.316, -33.3939, 0.6 ) }
    dend_23 { pt3dadd( 3.9788, -245.319, -33.4673, 0.6 ) }
    dend_23 { pt3dadd( 4.27532, -245.324, -33.6012, 0.12 ) }
    dend_23 { pt3dadd( 4.73333, -245.354, -33.7683, 0.12 ) }
    dend_23 { pt3dadd( 4.88449, -245.37, -33.8257, 0.84 ) }
    dend_23 { pt3dadd( 5.0065, -245.388, -33.8708, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 2.65123, -245.377, -32.7668, 1.56 ) }
    dend_18 { pt3dadd( 2.75081, -245.836, -32.7363, 1.56 ) }
    dend_18 { pt3dadd( 2.88881, -246.471, -32.694, 2.28 ) }
    dend_18 { pt3dadd( 2.97023, -246.846, -32.669, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.4873, 83.6081, 10.2954, 0.48 ) }
    dend_12 { pt3dadd( 16.362, 86.6533, 11.132, 0.48 ) }
    dend_12 { pt3dadd( 16.6194, 87.7314, 11.3555, 0.36 ) }
    dend_12 { pt3dadd( 16.8301, 88.8398, 11.5327, 0.36 ) }
    dend_12 { pt3dadd( 16.9844, 89.9886, 11.676, 0.36 ) }
    dend_12 { pt3dadd( 17.0645, 90.9686, 11.7833, 0.36 ) }
    dend_12 { pt3dadd( 17.0822, 91.531, 11.8358, 0.72 ) }
    dend_12 { pt3dadd( 17.0286, 92.1171, 11.7944, 0.72 ) }
    dend_12 { pt3dadd( 16.9362, 92.8277, 11.7506, 0.36 ) }
    dend_12 { pt3dadd( 16.7946, 93.7089, 11.7085, 0.36 ) }
    dend_12 { pt3dadd( 16.6845, 94.4919, 11.6848, 1.2 ) }
    dend_12 { pt3dadd( 16.5882, 95.3844, 11.675, 1.8 ) }
    dend_12 { pt3dadd( 16.4836, 96.6234, 11.7051, 1.8 ) }
    dend_12 { pt3dadd( 16.3777, 98.3374, 11.8004, 0.36 ) }
    dend_12 { pt3dadd( 16.3564, 98.8976, 11.8051, 0.36 ) }
    dend_12 { pt3dadd( 16.3478, 100.066, 11.8036, 0.72 ) }
    dend_12 { pt3dadd( 16.3617, 100.639, 11.7985, 0.84 ) }
    dend_12 { pt3dadd( 16.4108, 101.89, 11.7981, 0.36 ) }
    dend_12 { pt3dadd( 16.4515, 102.889, 11.8108, 1.08 ) }
    dend_12 { pt3dadd( 16.5227, 105.0, 11.7729, 2.64 ) }
    dend_12 { pt3dadd( 16.5633, 106.372, 11.7114, 3.61 ) }
    dend_12 { pt3dadd( 16.5737, 107.009, 11.6468, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.4873, 83.6081, 10.2954, 0.6 ) }
    dend_9 { pt3dadd( 15.308, 84.4862, 10.2516, 0.6 ) }
    dend_9 { pt3dadd( 15.2451, 85.082, 10.1795, 0.6 ) }
    dend_9 { pt3dadd( 15.2031, 85.907, 10.0015, 0.6 ) }
    dend_9 { pt3dadd( 15.1885, 86.2705, 9.86295, 0.6 ) }
    dend_9 { pt3dadd( 15.1552, 86.7982, 9.63863, 1.68 ) }
    dend_9 { pt3dadd( 15.1081, 87.3184, 9.40868, 2.04 ) }
    dend_9 { pt3dadd( 15.0922, 87.6517, 9.21992, 1.8 ) }
    dend_9 { pt3dadd( 15.0381, 88.058, 8.93514, 2.04 ) }
    dend_9 { pt3dadd( 14.7904, 88.7302, 8.39077, 0.48 ) }
    dend_9 { pt3dadd( 14.592, 89.0414, 8.15466, 0.48 ) }
    dend_9 { pt3dadd( 14.4899, 89.1528, 8.08459, 0.72 ) }
    dend_9 { pt3dadd( 14.2375, 89.4017, 7.95681, 0.96 ) }
    dend_9 { pt3dadd( 13.8972, 89.7351, 7.8005, 0.72 ) }
    dend_9 { pt3dadd( 13.6216, 90.0252, 7.68652, 1.32 ) }
    dend_9 { pt3dadd( 13.3909, 90.3132, 7.58825, 1.8 ) }
    dend_9 { pt3dadd( 13.0841, 90.7787, 7.42835, 1.8 ) }
    dend_9 { pt3dadd( 12.866, 91.1756, 7.30679, 0.96 ) }
    dend_9 { pt3dadd( 12.6549, 91.6231, 7.16504, 0.72 ) }
    dend_9 { pt3dadd( 12.5069, 91.9582, 7.05091, 0.84 ) }
    dend_9 { pt3dadd( 12.2267, 92.5754, 6.79849, 1.56 ) }
    dend_9 { pt3dadd( 12.0762, 92.8961, 6.64482, 2.52 ) }
    dend_9 { pt3dadd( 11.9414, 93.1696, 6.50252, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 11.5458, 93.8958, 6.11186, 2.4 ) }
    dend_9 { pt3dadd( 11.1936, 94.495, 5.77404, 1.56 ) }
    dend_9 { pt3dadd( 10.9182, 94.9416, 5.50101, 0.84 ) }
    dend_9 { pt3dadd( 10.7126, 95.2631, 5.29658, 0.48 ) }
    dend_9 { pt3dadd( 10.6323, 95.3922, 5.21016, 0.24 ) }
    dend_9 { pt3dadd( 10.4127, 95.7465, 4.97895, 0.24 ) }
    dend_9 { pt3dadd( 10.2433, 96.0335, 4.72533, 0.48 ) }
    dend_9 { pt3dadd( 10.1495, 96.2118, 4.52463, 0.12 ) }
    dend_9 { pt3dadd( 10.0758, 96.3803, 4.32163, 0.12 ) }
    dend_9 { pt3dadd( 9.89712, 96.8131, 3.78332, 1.2 ) }
    dend_9 { pt3dadd( 9.80243, 97.0538, 3.48668, 1.56 ) }
    dend_9 { pt3dadd( 9.3525, 98.23, 2.06342, 0.36 ) }
    dend_9 { pt3dadd( 9.21349, 98.6104, 1.64665, 0.12 ) }
    dend_9 { pt3dadd( 8.97485, 99.2801, 1.02227, 2.64 ) }
    dend_9 { pt3dadd( 8.90415, 99.4899, 0.867387, 3.0 ) }
    dend_9 { pt3dadd( 8.7845, 99.8445, 0.75153, 2.76 ) }
    dend_9 { pt3dadd( 8.36535, 100.97, 0.78686, 0.48 ) }
    dend_9 { pt3dadd( 7.51053, 103.107, 1.32621, 0.48 ) }
    dend_9 { pt3dadd( 7.33862, 103.567, 1.37705, 0.48 ) }
    dend_9 { pt3dadd( 7.26725, 103.868, 1.26559, 0.48 ) }
    dend_9 { pt3dadd( 7.24531, 104.205, 1.00256, 0.36 ) }
    dend_9 { pt3dadd( 7.2801, 104.805, 0.373218, 0.36 ) }
    dend_9 { pt3dadd( 7.38822, 105.394, -0.343075, 0.36 ) }
    dend_9 { pt3dadd( 7.59299, 106.205, -1.31546, 2.16 ) }
    dend_9 { pt3dadd( 7.70028, 106.504, -1.67543, 3.0 ) }
    dend_9 { pt3dadd( 7.75827, 106.638, -1.82718, 3.12 ) }
    dend_9 { pt3dadd( 8.06009, 107.223, -2.44818, 3.0 ) }
    dend_9 { pt3dadd( 8.5472, 108.095, -3.29785, 0.12 ) }
    dend_9 { pt3dadd( 8.77474, 108.508, -3.65982, 0.12 ) }
    dend_9 { pt3dadd( 8.83986, 108.633, -3.75625, 0.12 ) }
    dend_9 { pt3dadd( 9.13511, 109.176, -4.19575, 2.52 ) }
    dend_9 { pt3dadd( 9.2578, 109.398, -4.36552, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 19.9562, 59.1969, 7.98583, 0.6 ) }
    dend_7 { pt3dadd( 19.2374, 59.6175, 9.41939, 0.6 ) }
    dend_7 { pt3dadd( 18.9582, 59.7809, 9.97632, 0.6 ) }
    dend_7 { pt3dadd( 18.5633, 60.012, 10.7639, 0.24 ) }
    dend_7 { pt3dadd( 18.2937, 60.1697, 11.3015, 0.24 ) }
    dend_7 { pt3dadd( 18.0092, 60.3362, 11.8689, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.9562, 59.1969, 7.98583, 0.6 ) }
    dend_4 { pt3dadd( 20.6482, 60.2777, 8.38029, 0.6 ) }
    dend_4 { pt3dadd( 21.4442, 61.6156, 8.87499, 0.72 ) }
    dend_4 { pt3dadd( 21.9739, 62.5848, 9.20518, 1.08 ) }
    dend_4 { pt3dadd( 22.2551, 63.1464, 9.36042, 1.44 ) }
    dend_4 { pt3dadd( 22.5887, 63.8324, 9.55626, 1.56 ) }
    dend_4 { pt3dadd( 23.1123, 64.9327, 9.8536, 1.44 ) }
    dend_4 { pt3dadd( 23.8, 66.4833, 10.2518, 1.56 ) }
    dend_4 { pt3dadd( 24.2119, 67.5067, 10.5047, 1.68 ) }
    dend_4 { pt3dadd( 24.5566, 68.39, 10.7838, 1.68 ) }
    dend_4 { pt3dadd( 24.9134, 69.3124, 11.1246, 1.68 ) }
    dend_4 { pt3dadd( 25.4412, 70.7173, 11.6955, 0.6 ) }
    dend_4 { pt3dadd( 25.8176, 71.7857, 12.1537, 0.36 ) }
    dend_4 { pt3dadd( 26.1052, 72.6215, 12.4431, 0.36 ) }
    dend_4 { pt3dadd( 26.4913, 73.7319, 12.7751, 1.44 ) }
    dend_4 { pt3dadd( 26.7038, 74.3143, 12.9161, 1.56 ) }
    dend_4 { pt3dadd( 27.038, 75.2467, 13.04, 1.56 ) }
    dend_4 { pt3dadd( 27.2017, 75.7032, 13.0548, 1.44 ) }
    dend_4 { pt3dadd( 27.8056, 77.3004, 13.0501, 0.72 ) }
    dend_4 { pt3dadd( 28.0614, 77.8956, 13.0448, 0.6 ) }
    dend_4 { pt3dadd( 28.5188, 78.8525, 13.0419, 1.2 ) }
    dend_4 { pt3dadd( 28.7519, 79.2901, 13.0602, 1.32 ) }
    dend_4 { pt3dadd( 29.3354, 80.2622, 13.1276, 0.84 ) }
    dend_4 { pt3dadd( 30.373, 81.752, 13.3402, 1.08 ) }
    dend_4 { pt3dadd( 31.1202, 82.6959, 13.5402, 0.96 ) }
    dend_4 { pt3dadd( 31.7631, 83.4309, 13.6711, 0.48 ) }
    dend_4 { pt3dadd( 32.2893, 84.008, 13.7522, 0.48 ) }
    dend_4 { pt3dadd( 32.903, 84.6498, 13.8136, 0.6 ) }
    dend_4 { pt3dadd( 33.8349, 85.6026, 13.8463, 0.96 ) }
    dend_4 { pt3dadd( 34.1401, 85.9232, 13.8438, 0.96 ) }
    dend_4 { pt3dadd( 35.2447, 87.1774, 13.8518, 1.68 ) }
    dend_4 { pt3dadd( 36.2704, 88.4507, 13.8596, 2.28 ) }
    dend_4 { pt3dadd( 37.1101, 89.6123, 13.8806, 2.16 ) }
    dend_4 { pt3dadd( 37.6318, 90.4767, 13.9095, 1.92 ) }
    dend_4 { pt3dadd( 38.2108, 91.7173, 13.9245, 0.6 ) }
    dend_4 { pt3dadd( 38.6823, 93.1135, 13.9312, 0.6 ) }
    dend_4 { pt3dadd( 38.9171, 93.9898, 13.9448, 0.6 ) }
    dend_4 { pt3dadd( 39.0887, 94.9203, 13.9461, 0.48 ) }
    dend_4 { pt3dadd( 39.2249, 96.5109, 13.94, 0.48 ) }
    dend_4 { pt3dadd( 39.2212, 98.0264, 13.8925, 0.48 ) }
    dend_4 { pt3dadd( 39.0659, 99.3768, 13.7406, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -30.8952, 119.369, -36.2784, 0.48 ) }
    dend_60 { pt3dadd( -31.2162, 121.275, -36.1207, 0.48 ) }
    dend_60 { pt3dadd( -31.2842, 121.903, -36.0442, 0.12 ) }
    dend_60 { pt3dadd( -31.4054, 123.161, -35.8759, 0.36 ) }
    dend_60 { pt3dadd( -31.4868, 124.106, -35.753, 0.48 ) }
    dend_60 { pt3dadd( -31.531, 124.794, -35.6728, 0.48 ) }
    dend_60 { pt3dadd( -31.5736, 125.653, -35.5886, 0.48 ) }
    dend_60 { pt3dadd( -31.5724, 127.11, -35.5137, 1.68 ) }
    dend_60 { pt3dadd( -31.5565, 127.536, -35.5241, 2.16 ) }
    dend_60 { pt3dadd( -31.5245, 128.101, -35.5907, 2.4 ) }
    dend_60 { pt3dadd( -31.4761, 128.773, -35.7014, 2.4 ) }
    dend_60 { pt3dadd( -31.4035, 129.589, -35.8285, 1.92 ) }
    dend_60 { pt3dadd( -31.2882, 130.815, -36.0232, 0.12 ) }
    dend_60 { pt3dadd( -31.2337, 131.3, -36.1093, 0.24 ) }
    dend_60 { pt3dadd( -31.1803, 131.74, -36.1717, 0.24 ) }
    dend_60 { pt3dadd( -31.0652, 132.697, -36.2713, 0.48 ) }
    dend_60 { pt3dadd( -30.9145, 133.912, -36.3509, 0.48 ) }
    dend_60 { pt3dadd( -30.8626, 134.311, -36.3627, 1.32 ) }
    dend_60 { pt3dadd( -30.7625, 134.994, -36.3699, 1.68 ) }
    dend_60 { pt3dadd( -30.6649, 135.664, -36.4159, 1.8 ) }
    dend_60 { pt3dadd( -30.5793, 136.271, -36.4957, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( -30.5314, 136.642, -36.5755, 1.92 ) }
    dend_60 { pt3dadd( -30.437, 137.566, -36.8381, 0.48 ) }
    dend_60 { pt3dadd( -30.3454, 138.687, -37.2208, 0.48 ) }
    dend_60 { pt3dadd( -30.2907, 139.667, -37.5721, 0.72 ) }
    dend_60 { pt3dadd( -30.2443, 140.733, -37.937, 0.72 ) }
    dend_60 { pt3dadd( -30.2381, 141.745, -38.406, 0.36 ) }
    dend_60 { pt3dadd( -30.2638, 142.469, -38.8128, 0.36 ) }
    dend_60 { pt3dadd( -30.3452, 143.373, -39.3807, 0.72 ) }
    dend_60 { pt3dadd( -30.4556, 144.277, -39.9024, 1.08 ) }
    dend_60 { pt3dadd( -30.5693, 145.165, -40.3536, 1.32 ) }
    dend_60 { pt3dadd( -30.9726, 148.026, -41.5705, 0.48 ) }
    dend_60 { pt3dadd( -31.0885, 148.811, -41.822, 0.36 ) }
    dend_60 { pt3dadd( -31.3034, 150.266, -42.1528, 0.36 ) }
    dend_60 { pt3dadd( -31.6146, 152.252, -42.5172, 0.36 ) }
    dend_60 { pt3dadd( -31.7175, 152.929, -42.6375, 1.92 ) }
    dend_60 { pt3dadd( -31.8197, 153.892, -42.7842, 3.0 ) }
    dend_60 { pt3dadd( -31.8487, 154.569, -42.8534, 3.25 ) }
    dend_60 { pt3dadd( -31.8566, 155.655, -43.0509, 3.25 ) }
    dend_60 { pt3dadd( -31.8265, 157.739, -43.5937, 0.36 ) }
    dend_60 { pt3dadd( -31.8184, 158.505, -43.8445, 0.48 ) }
    dend_60 { pt3dadd( -31.8064, 160.091, -44.3639, 0.48 ) }
    dend_60 { pt3dadd( -31.8123, 161.324, -44.7585, 0.48 ) }
    dend_60 { pt3dadd( -31.8654, 162.482, -45.1069, 0.48 ) }
    dend_60 { pt3dadd( -31.9176, 163.014, -45.2496, 0.96 ) }
    dend_60 { pt3dadd( -31.9903, 163.556, -45.3686, 1.2 ) }
    dend_60 { pt3dadd( -32.1545, 164.532, -45.5646, 0.84 ) }
    dend_60 { pt3dadd( -32.3777, 165.737, -45.7879, 0.48 ) }
    dend_60 { pt3dadd( -32.5755, 166.968, -46.0004, 0.36 ) }
    dend_60 { pt3dadd( -32.6668, 167.92, -46.1587, 0.36 ) }
    dend_60 { pt3dadd( -32.6869, 169.194, -46.3932, 0.36 ) }
    dend_60 { pt3dadd( -32.6458, 169.987, -46.5649, 1.32 ) }
    dend_60 { pt3dadd( -32.535, 171.128, -46.8361, 2.28 ) }
    dend_60 { pt3dadd( -32.4478, 171.834, -47.0142, 2.76 ) }
    dend_60 { pt3dadd( -32.3289, 172.793, -47.2631, 2.4 ) }
    dend_60 { pt3dadd( -32.1638, 174.683, -47.755, 1.08 ) }
    dend_60 { pt3dadd( -32.1146, 176.028, -48.0944, 0.36 ) }
    dend_60 { pt3dadd( -32.1326, 177.094, -48.3456, 0.36 ) }
    dend_60 { pt3dadd( -32.2027, 178.193, -48.6124, 1.68 ) }
    dend_60 { pt3dadd( -32.2713, 178.864, -48.7773, 2.28 ) }
    dend_60 { pt3dadd( -32.4137, 179.937, -49.0042, 2.4 ) }
    dend_60 { pt3dadd( -32.6747, 181.593, -49.2991, 1.68 ) }
    dend_60 { pt3dadd( -32.9993, 183.6, -49.5925, 1.08 ) }
    dend_60 { pt3dadd( -33.1614, 184.577, -49.7278, 0.6 ) }
    dend_60 { pt3dadd( -33.3092, 185.388, -49.8357, 0.6 ) }
    dend_60 { pt3dadd( -33.5511, 186.741, -50.0159, 1.44 ) }
    dend_60 { pt3dadd( -33.6681, 187.406, -50.1113, 1.8 ) }
    dend_60 { pt3dadd( -33.811, 188.214, -50.2426, 1.8 ) }
    dend_60 { pt3dadd( -33.98, 189.316, -50.4388, 0.48 ) }
    dend_60 { pt3dadd( -34.1892, 190.93, -50.7324, 0.48 ) }
    dend_60 { pt3dadd( -34.3739, 192.356, -51.0757, 1.2 ) }
    dend_60 { pt3dadd( -34.5672, 193.979, -51.5463, 1.68 ) }
    dend_60 { pt3dadd( -34.6707, 195.102, -51.8893, 2.28 ) }
    dend_60 { pt3dadd( -34.8019, 196.715, -52.3732, 2.52 ) }
    dend_60 { pt3dadd( -34.9721, 198.865, -52.9534, 1.2 ) }
    dend_60 { pt3dadd( -35.096, 200.307, -53.2572, 0.6 ) }
    dend_60 { pt3dadd( -35.2007, 201.211, -53.3828, 0.48 ) }
    dend_60 { pt3dadd( -35.4059, 202.548, -53.4444, 0.48 ) }
    dend_60 { pt3dadd( -35.6007, 203.634, -53.3705, 0.48 ) }
    dend_60 { pt3dadd( -35.8115, 204.734, -53.1738, 0.48 ) }
    dend_60 { pt3dadd( -36.0439, 206.032, -52.8241, 0.48 ) }
    dend_60 { pt3dadd( -36.1599, 206.817, -52.587, 0.48 ) }
    dend_60 { pt3dadd( -36.2658, 207.627, -52.443, 0.48 ) }
    dend_60 { pt3dadd( -36.3758, 208.753, -52.4455, 1.08 ) }
    dend_60 { pt3dadd( -36.4231, 209.783, -52.6506, 1.68 ) }
    dend_60 { pt3dadd( -36.4446, 210.6, -52.9322, 2.04 ) }
    dend_60 { pt3dadd( -36.4528, 211.36, -53.2621, 2.04 ) }
    dend_60 { pt3dadd( -36.4591, 213.467, -54.2413, 0.96 ) }
    dend_60 { pt3dadd( -36.47, 214.248, -54.6206, 0.48 ) }
    dend_60 { pt3dadd( -36.4894, 214.989, -54.9908, 0.48 ) }
    dend_60 { pt3dadd( -36.526, 216.116, -55.5116, 1.56 ) }
    dend_60 { pt3dadd( -36.5506, 216.549, -55.682, 2.16 ) }
    dend_60 { pt3dadd( -36.6214, 217.429, -56.0733, 2.64 ) }
    dend_60 { pt3dadd( -36.679, 218.048, -56.3464, 2.64 ) }
    dend_60 { pt3dadd( -36.7541, 218.837, -56.7388, 3.12 ) }
    dend_60 { pt3dadd( -36.8172, 219.547, -57.1369, 3.12 ) }
    dend_60 { pt3dadd( -36.9153, 220.885, -57.9248, 0.6 ) }
    dend_60 { pt3dadd( -37.0272, 223.198, -59.2706, 0.48 ) }
    dend_60 { pt3dadd( -37.0412, 224.074, -59.7603, 0.36 ) }
    dend_60 { pt3dadd( -37.0355, 224.615, -60.0353, 0.36 ) }
    dend_60 { pt3dadd( -37.0144, 225.585, -60.4147, 0.96 ) }
    dend_60 { pt3dadd( -36.9592, 226.836, -60.7652, 0.96 ) }
    dend_60 { pt3dadd( -36.899, 228.05, -60.9646, 0.72 ) }
    dend_60 { pt3dadd( -36.8916, 229.043, -61.0392, 0.48 ) }
    dend_60 { pt3dadd( -36.9484, 230.301, -61.1658, 0.48 ) }
    dend_60 { pt3dadd( -37.1222, 232.199, -61.3988, 1.2 ) }
    dend_60 { pt3dadd( -37.2462, 233.149, -61.5376, 1.68 ) }
    dend_60 { pt3dadd( -37.4405, 234.352, -61.7402, 2.04 ) }
    dend_60 { pt3dadd( -37.6673, 235.654, -61.9895, 1.8 ) }
    dend_60 { pt3dadd( -37.9475, 237.277, -62.3417, 0.6 ) }
    dend_60 { pt3dadd( -38.1232, 238.348, -62.6056, 0.48 ) }
    dend_60 { pt3dadd( -38.3219, 239.674, -62.9783, 0.48 ) }
    dend_60 { pt3dadd( -38.4812, 240.992, -63.3515, 0.48 ) }
    dend_60 { pt3dadd( -38.5386, 241.76, -63.5599, 0.48 ) }
    dend_60 { pt3dadd( -38.5511, 242.446, -63.7221, 1.08 ) }
    dend_60 { pt3dadd( -38.5385, 243.397, -63.8988, 1.32 ) }
    dend_60 { pt3dadd( -38.5191, 243.94, -64.0001, 1.32 ) }
    dend_60 { pt3dadd( -38.4518, 244.926, -64.1673, 0.72 ) }
    dend_60 { pt3dadd( -38.3984, 245.54, -64.2791, 0.48 ) }
    dend_60 { pt3dadd( -38.3274, 246.413, -64.4423, 0.72 ) }
    dend_60 { pt3dadd( -38.2527, 247.368, -64.6449, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( -38.1863, 248.39, -64.898, 1.32 ) }
    dend_60 { pt3dadd( -38.1327, 249.609, -65.2425, 0.48 ) }
    dend_60 { pt3dadd( -38.1258, 250.657, -65.6121, 0.48 ) }
    dend_60 { pt3dadd( -38.132, 251.676, -66.0325, 0.48 ) }
    dend_60 { pt3dadd( -38.1445, 252.797, -66.532, 1.44 ) }
    dend_60 { pt3dadd( -38.1593, 253.782, -66.9732, 2.28 ) }
    dend_60 { pt3dadd( -38.1821, 254.979, -67.4949, 1.92 ) }
    dend_60 { pt3dadd( -38.2129, 256.691, -68.2078, 0.48 ) }
    dend_60 { pt3dadd( -38.2203, 258.019, -68.6921, 0.48 ) }
    dend_60 { pt3dadd( -38.2177, 258.984, -68.9777, 0.72 ) }
    dend_60 { pt3dadd( -38.2218, 259.712, -69.1264, 0.48 ) }
    dend_60 { pt3dadd( -38.2489, 260.453, -69.2008, 0.36 ) }
    dend_60 { pt3dadd( -38.3883, 261.568, -69.3292, 0.36 ) }
    dend_60 { pt3dadd( -38.637, 262.63, -69.5108, 0.36 ) }
    dend_60 { pt3dadd( -39.0242, 263.761, -69.8138, 1.8 ) }
    dend_60 { pt3dadd( -39.48, 264.853, -70.1963, 3.0 ) }
    dend_60 { pt3dadd( -39.9861, 265.904, -70.6316, 3.25 ) }
    dend_60 { pt3dadd( -41.4003, 268.412, -71.8833, 1.8 ) }
    dend_60 { pt3dadd( -42.0406, 269.439, -72.47, 0.48 ) }
    dend_60 { pt3dadd( -42.4318, 270.044, -72.8507, 0.48 ) }
    dend_60 { pt3dadd( -42.6912, 270.468, -73.126, 0.72 ) }
    dend_60 { pt3dadd( -42.991, 271.046, -73.4607, 0.48 ) }
    dend_60 { pt3dadd( -43.4124, 272.24, -73.9746, 0.36 ) }
    dend_60 { pt3dadd( -43.5919, 273.297, -74.2057, 0.36 ) }
    dend_60 { pt3dadd( -43.6466, 273.992, -74.3205, 0.72 ) }
    dend_60 { pt3dadd( -43.6823, 275.249, -74.476, 1.08 ) }
    dend_60 { pt3dadd( -43.6854, 276.284, -74.569, 1.2 ) }
    dend_60 { pt3dadd( -43.6566, 277.892, -74.6332, 0.72 ) }
    dend_60 { pt3dadd( -43.6124, 279.42, -74.6275, 0.36 ) }
    dend_60 { pt3dadd( -43.5896, 280.426, -74.6116, 0.36 ) }
    dend_60 { pt3dadd( -43.5843, 281.776, -74.5559, 0.36 ) }
    dend_60 { pt3dadd( -43.6052, 283.015, -74.4821, 0.36 ) }
    dend_60 { pt3dadd( -43.6793, 284.411, -74.4331, 1.92 ) }
    dend_60 { pt3dadd( -43.7594, 285.249, -74.415, 2.76 ) }
    dend_60 { pt3dadd( -43.7938, 285.513, -74.4154, 3.12 ) }
    dend_60 { pt3dadd( -43.9794, 286.821, -74.4487, 2.76 ) }
    dend_60 { pt3dadd( -44.0431, 287.254, -74.4779, 2.76 ) }
    dend_60 { pt3dadd( -44.2801, 288.873, -74.624, 0.48 ) }
    dend_60 { pt3dadd( -44.4701, 290.085, -74.7697, 0.48 ) }
    dend_60 { pt3dadd( -44.5821, 290.757, -74.8511, 0.96 ) }
    dend_60 { pt3dadd( -44.6911, 291.384, -74.9298, 0.6 ) }
    dend_60 { pt3dadd( -44.8377, 292.183, -75.036, 0.48 ) }
    dend_60 { pt3dadd( -44.9592, 292.869, -75.1093, 0.36 ) }
    dend_60 { pt3dadd( -45.2015, 294.505, -75.1874, 0.36 ) }
    dend_60 { pt3dadd( -45.2902, 295.194, -75.2146, 0.48 ) }
    dend_60 { pt3dadd( -45.3658, 295.881, -75.2528, 0.36 ) }
    dend_60 { pt3dadd( -45.432, 296.697, -75.297, 0.36 ) }
    dend_60 { pt3dadd( -45.472, 297.304, -75.3222, 0.36 ) }
    dend_60 { pt3dadd( -45.5411, 298.386, -75.4129, 1.2 ) }
    dend_60 { pt3dadd( -45.6005, 299.059, -75.5007, 2.04 ) }
    dend_60 { pt3dadd( -45.6851, 299.847, -75.5939, 2.16 ) }
    dend_60 { pt3dadd( -45.8194, 300.834, -75.7032, 1.68 ) }
    dend_60 { pt3dadd( -45.9999, 301.918, -75.82, 0.48 ) }
    dend_60 { pt3dadd( -46.2221, 303.16, -75.9595, 0.36 ) }
    dend_60 { pt3dadd( -46.6721, 305.579, -76.2256, 0.36 ) }
    dend_60 { pt3dadd( -46.8719, 306.684, -76.3345, 1.2 ) }
    dend_60 { pt3dadd( -46.9675, 307.244, -76.3951, 0.84 ) }
    dend_60 { pt3dadd( -47.094, 308.047, -76.4997, 0.48 ) }
    dend_60 { pt3dadd( -47.281, 309.497, -76.7395, 0.36 ) }
    dend_60 { pt3dadd( -47.351, 310.112, -76.8905, 0.36 ) }
    dend_60 { pt3dadd( -47.4189, 310.803, -77.1609, 1.44 ) }
    dend_60 { pt3dadd( -47.5239, 311.779, -77.6169, 1.92 ) }
    dend_60 { pt3dadd( -47.5891, 312.388, -77.9109, 2.04 ) }
    dend_60 { pt3dadd( -47.6968, 313.412, -78.4034, 2.04 ) }
    dend_60 { pt3dadd( -47.8558, 314.912, -79.0254, 0.48 ) }
    dend_60 { pt3dadd( -48.0425, 316.604, -79.5996, 0.48 ) }
    dend_60 { pt3dadd( -48.1112, 317.26, -79.7698, 0.6 ) }
    dend_60 { pt3dadd( -48.1583, 317.697, -79.8496, 0.48 ) }
    dend_60 { pt3dadd( -48.298, 318.981, -80.0259, 0.48 ) }
    dend_60 { pt3dadd( -48.5097, 320.778, -80.1541, 2.64 ) }
    dend_60 { pt3dadd( -48.6492, 321.9, -80.1636, 3.49 ) }
    dend_60 { pt3dadd( -48.7179, 322.385, -80.1591, 3.49 ) }
    dend_60 { pt3dadd( -48.821, 323.083, -80.1527, 3.49 ) }
    dend_60 { pt3dadd( -49.1236, 325.025, -80.1513, 0.48 ) }
    dend_60 { pt3dadd( -49.3258, 326.296, -80.1551, 0.72 ) }
    dend_60 { pt3dadd( -49.4618, 327.202, -80.1767, 0.48 ) }
    dend_60 { pt3dadd( -49.5469, 327.894, -80.1945, 0.48 ) }
    dend_60 { pt3dadd( -49.6411, 328.793, -80.2231, 1.32 ) }
    dend_60 { pt3dadd( -49.6709, 329.352, -80.2506, 1.56 ) }
    dend_60 { pt3dadd( -49.6578, 330.18, -80.3073, 1.56 ) }
    dend_60 { pt3dadd( -49.6016, 331.002, -80.4069, 0.48 ) }
    dend_60 { pt3dadd( -49.513, 331.981, -80.5611, 0.48 ) }
    dend_60 { pt3dadd( -49.4464, 332.703, -80.6698, 0.6 ) }
    dend_60 { pt3dadd( -49.3655, 333.795, -80.8206, 0.6 ) }
    dend_60 { pt3dadd( -49.3169, 334.693, -80.9354, 0.36 ) }
    dend_60 { pt3dadd( -49.297, 335.421, -81.034, 0.36 ) }
    dend_60 { pt3dadd( -49.3243, 336.378, -81.1675, 0.36 ) }
    dend_60 { pt3dadd( -49.4075, 337.13, -81.2884, 1.32 ) }
    dend_60 { pt3dadd( -49.5304, 337.806, -81.3943, 1.56 ) }
    dend_60 { pt3dadd( -49.6668, 338.338, -81.4674, 1.32 ) }
    dend_60 { pt3dadd( -49.856, 338.99, -81.5497, 0.36 ) }
    dend_60 { pt3dadd( -50.1045, 339.949, -81.6655, 0.36 ) }
    dend_60 { pt3dadd( -50.2648, 340.728, -81.7666, 1.2 ) }
    dend_60 { pt3dadd( -50.3832, 341.557, -81.8974, 1.2 ) }
    dend_60 { pt3dadd( -50.4845, 342.534, -82.0713, 0.36 ) }
    dend_60 { pt3dadd( -50.5508, 343.482, -82.2516, 0.36 ) }
    dend_60 { pt3dadd( -50.5868, 344.461, -82.4425, 0.48 ) }
    dend_60 { pt3dadd( -50.5996, 345.191, -82.615, 0.48 ) }
    dend_60 { pt3dadd( -50.6205, 346.205, -82.8882, 0.48 ) }
    dend_60 { pt3dadd( -50.6286, 346.47, -82.9738, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -50.6469, 347.126, -83.1984, 0.72 ) }
    dend_60 { pt3dadd( -50.6725, 348.054, -83.5063, 0.72 ) }
    dend_60 { pt3dadd( -50.6892, 348.554, -83.651, 0.48 ) }
    dend_60 { pt3dadd( -50.7052, 349.372, -83.8514, 0.48 ) }
    dend_60 { pt3dadd( -50.7114, 350.348, -84.0488, 1.08 ) }
    dend_60 { pt3dadd( -50.6971, 351.201, -84.1862, 1.68 ) }
    dend_60 { pt3dadd( -50.672, 351.99, -84.2987, 1.68 ) }
    dend_60 { pt3dadd( -50.6504, 352.856, -84.4217, 0.84 ) }
    dend_60 { pt3dadd( -50.6376, 353.407, -84.5179, 0.72 ) }
    dend_60 { pt3dadd( -50.6358, 354.471, -84.8127, 0.72 ) }
    dend_60 { pt3dadd( -50.6551, 355.616, -85.2247, 1.32 ) }
    dend_60 { pt3dadd( -50.6771, 356.279, -85.5038, 2.4 ) }
    dend_60 { pt3dadd( -50.7243, 357.234, -85.9508, 2.76 ) }
    dend_60 { pt3dadd( -50.7881, 358.18, -86.4132, 2.04 ) }
    dend_60 { pt3dadd( -50.9199, 359.827, -87.2139, 0.48 ) }
    dend_60 { pt3dadd( -50.989, 360.603, -87.5845, 0.48 ) }
    dend_60 { pt3dadd( -51.0516, 361.243, -87.8732, 0.6 ) }
    dend_60 { pt3dadd( -51.0827, 361.618, -88.0174, 0.48 ) }
    dend_60 { pt3dadd( -51.1842, 363.194, -88.4907, 0.48 ) }
    dend_60 { pt3dadd( -51.2242, 363.872, -88.6353, 0.72 ) }
    dend_60 { pt3dadd( -51.2378, 364.572, -88.7304, 1.08 ) }
    dend_60 { pt3dadd( -51.2367, 365.127, -88.7996, 0.72 ) }
    dend_60 { pt3dadd( -51.2158, 365.868, -88.8698, 0.48 ) }
    dend_60 { pt3dadd( -51.1983, 366.558, -88.9456, 0.24 ) }
    dend_60 { pt3dadd( -51.1771, 367.286, -89.0369, 0.24 ) }
    dend_60 { pt3dadd( -51.16, 369.098, -89.3173, 3.12 ) }
    dend_60 { pt3dadd( -51.1584, 369.631, -89.4122, 3.37 ) }
    dend_60 { pt3dadd( -51.1629, 370.596, -89.601, 3.0 ) }
    dend_60 { pt3dadd( -51.2389, 372.389, -89.9668, 0.48 ) }
    dend_60 { pt3dadd( -51.3482, 373.659, -90.2338, 0.48 ) }
    dend_60 { pt3dadd( -51.4811, 374.815, -90.4648, 0.84 ) }
    dend_60 { pt3dadd( -51.5828, 375.602, -90.6127, 0.48 ) }
    dend_60 { pt3dadd( -51.7051, 376.839, -90.7801, 0.48 ) }
    dend_60 { pt3dadd( -51.801, 378.312, -90.9017, 0.48 ) }
    dend_60 { pt3dadd( -51.8137, 378.907, -90.9049, 0.48 ) }
    dend_60 { pt3dadd( -51.8165, 380.0, -90.8661, 0.48 ) }
    dend_60 { pt3dadd( -51.7947, 380.668, -90.8226, 0.96 ) }
    dend_60 { pt3dadd( -51.7245, 381.947, -90.7805, 1.56 ) }
    dend_60 { pt3dadd( -51.6691, 382.442, -90.7704, 1.56 ) }
    dend_60 { pt3dadd( -51.5314, 383.355, -90.8449, 0.48 ) }
    dend_60 { pt3dadd( -51.5016, 383.624, -90.9007, 0.36 ) }
    dend_60 { pt3dadd( -51.4993, 384.451, -91.1489, 0.36 ) }
    dend_60 { pt3dadd( -51.5658, 385.684, -91.5697, 1.8 ) }
    dend_60 { pt3dadd( -51.6383, 386.523, -91.8756, 2.64 ) }
    dend_60 { pt3dadd( -51.7889, 388.102, -92.4255, 1.56 ) }
    dend_60 { pt3dadd( -51.8927, 389.249, -92.7913, 0.36 ) }
    dend_60 { pt3dadd( -52.0006, 390.542, -93.1812, 0.48 ) }
    dend_60 { pt3dadd( -52.1241, 392.152, -93.5745, 0.48 ) }
    dend_60 { pt3dadd( -52.1691, 392.695, -93.7031, 0.48 ) }
    dend_60 { pt3dadd( -52.2167, 393.513, -93.8955, 1.32 ) }
    dend_60 { pt3dadd( -52.2142, 393.954, -93.9777, 1.68 ) }
    dend_60 { pt3dadd( -52.1647, 394.555, -94.0526, 1.92 ) }
    dend_60 { pt3dadd( -52.0066, 396.1, -94.2204, 0.84 ) }
    dend_60 { pt3dadd( -51.9212, 397.635, -94.3494, 0.48 ) }
    dend_60 { pt3dadd( -51.9015, 398.902, -94.4123, 0.48 ) }
    dend_60 { pt3dadd( -51.9217, 399.587, -94.4304, 0.48 ) }
    dend_60 { pt3dadd( -52.0369, 401.075, -94.4519, 0.48 ) }
    dend_60 { pt3dadd( -52.2087, 402.519, -94.4066, 0.72 ) }
    dend_60 { pt3dadd( -52.3531, 403.474, -94.3468, 1.32 ) }
    dend_60 { pt3dadd( -52.5162, 404.416, -94.2525, 0.84 ) }
    dend_60 { pt3dadd( -52.6494, 405.093, -94.171, 0.36 ) }
    dend_60 { pt3dadd( -52.7977, 405.905, -94.0797, 0.36 ) }
    dend_60 { pt3dadd( -52.9404, 406.969, -93.9825, 0.84 ) }
    dend_60 { pt3dadd( -52.9643, 407.547, -93.9226, 0.36 ) }
    dend_60 { pt3dadd( -52.9374, 408.781, -93.7763, 0.36 ) }
    dend_60 { pt3dadd( -52.8386, 410.217, -93.6182, 0.84 ) }
    dend_60 { pt3dadd( -52.7737, 410.827, -93.5493, 0.84 ) }
    dend_60 { pt3dadd( -52.6866, 411.52, -93.4968, 0.36 ) }
    dend_60 { pt3dadd( -52.4975, 412.973, -93.4632, 0.36 ) }
    dend_60 { pt3dadd( -52.4076, 413.838, -93.4734, 1.2 ) }
    dend_60 { pt3dadd( -52.3456, 414.83, -93.5324, 2.16 ) }
    dend_60 { pt3dadd( -52.3454, 415.137, -93.5712, 2.28 ) }
    dend_60 { pt3dadd( -52.3866, 416.725, -93.8135, 0.6 ) }
    dend_60 { pt3dadd( -52.4151, 417.443, -93.9263, 0.36 ) }
    dend_60 { pt3dadd( -52.4402, 418.296, -94.0599, 0.36 ) }
    dend_60 { pt3dadd( -52.4337, 418.789, -94.1412, 0.36 ) }
    dend_60 { pt3dadd( -52.4043, 419.324, -94.2155, 0.36 ) }
    dend_60 { pt3dadd( -52.2678, 420.794, -94.3859, 0.36 ) }
    dend_60 { pt3dadd( -52.1462, 421.819, -94.4894, 1.08 ) }
    dend_60 { pt3dadd( -52.003, 422.917, -94.6079, 1.56 ) }
    dend_60 { pt3dadd( -51.8253, 424.188, -94.7649, 0.72 ) }
    dend_60 { pt3dadd( -51.7759, 424.633, -94.8279, 0.48 ) }
    dend_60 { pt3dadd( -51.7144, 425.615, -94.9807, 0.48 ) }
    dend_60 { pt3dadd( -51.7194, 426.721, -95.1681, 1.68 ) }
    dend_60 { pt3dadd( -51.7501, 427.544, -95.3443, 2.52 ) }
    dend_60 { pt3dadd( -51.8049, 428.503, -95.6082, 1.92 ) }
    dend_60 { pt3dadd( -51.8772, 429.816, -96.0317, 0.72 ) }
    dend_60 { pt3dadd( -51.9, 430.581, -96.3198, 0.6 ) }
    dend_60 { pt3dadd( -51.9038, 431.716, -96.8167, 0.6 ) }
    dend_60 { pt3dadd( -51.8527, 433.186, -97.5134, 0.6 ) }
    dend_60 { pt3dadd( -51.7829, 434.563, -98.1877, 1.44 ) }
    dend_60 { pt3dadd( -51.7438, 435.172, -98.4885, 1.92 ) }
    dend_60 { pt3dadd( -51.6582, 436.365, -99.0451, 0.96 ) }
    dend_60 { pt3dadd( -51.6021, 437.231, -99.4081, 0.36 ) }
    dend_60 { pt3dadd( -51.5626, 438.24, -99.7323, 0.36 ) }
    dend_60 { pt3dadd( -51.5517, 439.086, -99.9089, 0.36 ) }
    dend_60 { pt3dadd( -51.5398, 439.91, -100.007, 0.72 ) }
    dend_60 { pt3dadd( -51.5369, 440.917, -100.193, 0.36 ) }
    dend_60 { pt3dadd( -51.5284, 441.768, -100.395, 0.24 ) }
    dend_60 { pt3dadd( -51.4852, 443.133, -100.801, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( -51.4723, 443.39, -100.9, 2.04 ) }
    dend_60 { pt3dadd( -51.3906, 444.475, -101.376, 1.92 ) }
    dend_60 { pt3dadd( -51.1695, 446.769, -102.488, 0.48 ) }
    dend_60 { pt3dadd( -51.0676, 447.689, -102.96, 0.48 ) }
    dend_60 { pt3dadd( -50.9637, 448.606, -103.437, 0.72 ) }
    dend_60 { pt3dadd( -50.8302, 449.906, -104.097, 0.84 ) }
    dend_60 { pt3dadd( -50.7149, 451.464, -104.844, 0.36 ) }
    dend_60 { pt3dadd( -50.6874, 452.073, -105.105, 0.24 ) }
    dend_60 { pt3dadd( -50.6805, 453.017, -105.42, 1.2 ) }
    dend_60 { pt3dadd( -50.6952, 453.311, -105.515, 1.68 ) }
    dend_60 { pt3dadd( -50.8076, 454.353, -105.834, 1.56 ) }
    dend_60 { pt3dadd( -50.9758, 455.419, -106.13, 0.36 ) }
    dend_60 { pt3dadd( -51.1364, 456.2, -106.322, 0.36 ) }
    dend_60 { pt3dadd( -51.4639, 457.669, -106.632, 0.36 ) }
    dend_60 { pt3dadd( -51.6142, 458.326, -106.758, 1.32 ) }
    dend_60 { pt3dadd( -51.7651, 458.998, -106.873, 1.8 ) }
    dend_60 { pt3dadd( -51.8793, 459.54, -106.954, 1.68 ) }
    dend_60 { pt3dadd( -52.1168, 460.743, -107.103, 0.48 ) }
    dend_60 { pt3dadd( -52.4119, 462.36, -107.307, 0.48 ) }
    dend_60 { pt3dadd( -52.5696, 463.298, -107.43, 1.8 ) }
    dend_60 { pt3dadd( -52.719, 464.097, -107.531, 2.4 ) }
    dend_60 { pt3dadd( -52.8344, 464.655, -107.575, 1.92 ) }
    dend_60 { pt3dadd( -53.1279, 465.985, -107.59, 0.6 ) }
    dend_60 { pt3dadd( -53.2101, 466.355, -107.563, 0.6 ) }
    dend_60 { pt3dadd( -53.4838, 467.547, -107.4, 0.6 ) }
    dend_60 { pt3dadd( -53.7326, 468.674, -107.204, 0.6 ) }
    dend_60 { pt3dadd( -54.0801, 470.22, -106.94, 0.6 ) }
    dend_60 { pt3dadd( -54.4539, 471.83, -106.702, 0.6 ) }
    dend_60 { pt3dadd( -54.7653, 473.163, -106.556, 1.56 ) }
    dend_60 { pt3dadd( -54.9578, 473.971, -106.528, 2.04 ) }
    dend_60 { pt3dadd( -55.1678, 474.825, -106.578, 1.68 ) }
    dend_60 { pt3dadd( -55.459, 475.993, -106.758, 0.84 ) }
    dend_60 { pt3dadd( -55.7302, 476.969, -107.011, 0.48 ) }
    dend_60 { pt3dadd( -56.2233, 478.473, -107.476, 0.48 ) }
    dend_60 { pt3dadd( -56.7358, 479.927, -107.949, 0.6 ) }
    dend_60 { pt3dadd( -57.1338, 481.017, -108.28, 1.32 ) }
    dend_60 { pt3dadd( -57.4617, 481.886, -108.519, 1.44 ) }
    dend_60 { pt3dadd( -57.87, 482.959, -108.772, 0.48 ) }
    dend_60 { pt3dadd( -58.6118, 484.952, -109.195, 0.48 ) }
    dend_60 { pt3dadd( -58.8375, 485.596, -109.321, 1.32 ) }
    dend_60 { pt3dadd( -59.168, 486.637, -109.495, 2.04 ) }
    dend_60 { pt3dadd( -59.3928, 487.426, -109.628, 1.68 ) }
    dend_60 { pt3dadd( -59.6761, 488.532, -109.828, 0.6 ) }
    dend_60 { pt3dadd( -59.9294, 489.656, -110.05, 0.48 ) }
    dend_60 { pt3dadd( -60.1667, 490.868, -110.324, 0.48 ) }
    dend_60 { pt3dadd( -60.3214, 491.652, -110.508, 0.48 ) }
    dend_60 { pt3dadd( -60.5373, 492.768, -110.776, 0.72 ) }
    dend_60 { pt3dadd( -60.6874, 493.552, -110.962, 0.72 ) }
    dend_60 { pt3dadd( -60.7976, 494.19, -111.103, 0.36 ) }
    dend_60 { pt3dadd( -60.9695, 495.122, -111.298, 0.36 ) }
    dend_60 { pt3dadd( -61.085, 495.918, -111.457, 1.8 ) }
    dend_60 { pt3dadd( -61.1378, 496.721, -111.611, 2.4 ) }
    dend_60 { pt3dadd( -61.1529, 497.809, -111.798, 2.4 ) }
    dend_60 { pt3dadd( -61.1403, 499.092, -112.036, 0.48 ) }
    dend_60 { pt3dadd( -61.1357, 499.396, -112.094, 0.48 ) }
    dend_60 { pt3dadd( -61.1364, 500.528, -112.371, 0.48 ) }
    dend_60 { pt3dadd( -61.1542, 501.563, -112.681, 0.48 ) }
    dend_60 { pt3dadd( -61.2317, 502.618, -113.075, 0.48 ) }
    dend_60 { pt3dadd( -61.3275, 503.211, -113.332, 1.08 ) }
    dend_60 { pt3dadd( -61.4909, 503.753, -113.58, 1.92 ) }
    dend_60 { pt3dadd( -61.8584, 504.665, -113.973, 2.16 ) }
    dend_60 { pt3dadd( -62.089, 505.157, -114.158, 2.16 ) }
    dend_60 { pt3dadd( -62.6304, 506.314, -114.538, 0.72 ) }
    dend_60 { pt3dadd( -62.8495, 506.863, -114.68, 0.48 ) }
    dend_60 { pt3dadd( -63.2178, 507.967, -114.89, 0.48 ) }
    dend_60 { pt3dadd( -63.5065, 509.021, -115.053, 0.48 ) }
    dend_60 { pt3dadd( -63.8563, 510.651, -115.212, 0.48 ) }
    dend_60 { pt3dadd( -63.9608, 511.336, -115.265, 0.48 ) }
    dend_60 { pt3dadd( -64.0555, 512.331, -115.319, 1.32 ) }
    dend_60 { pt3dadd( -64.1104, 513.296, -115.37, 1.92 ) }
    dend_60 { pt3dadd( -64.1382, 514.451, -115.382, 1.56 ) }
    dend_60 { pt3dadd( -64.1582, 515.441, -115.355, 0.36 ) }
    dend_60 { pt3dadd( -64.1812, 516.738, -115.258, 0.36 ) }
    dend_60 { pt3dadd( -64.1947, 517.729, -115.16, 0.6 ) }
    dend_60 { pt3dadd( -64.1946, 518.677, -115.037, 0.6 ) }
    dend_60 { pt3dadd( -64.1702, 520.001, -114.837, 0.24 ) }
    dend_60 { pt3dadd( -64.1301, 520.82, -114.715, 0.24 ) }
    dend_60 { pt3dadd( -64.0415, 521.999, -114.588, 1.92 ) }
    dend_60 { pt3dadd( -63.9781, 522.61, -114.526, 2.4 ) }
    dend_60 { pt3dadd( -63.8125, 523.943, -114.431, 1.92 ) }
    dend_60 { pt3dadd( -63.6683, 525.202, -114.391, 0.48 ) }
    dend_60 { pt3dadd( -63.5646, 526.377, -114.403, 0.48 ) }
    dend_60 { pt3dadd( -63.4901, 527.796, -114.433, 0.48 ) }
    dend_60 { pt3dadd( -63.4832, 529.071, -114.482, 1.44 ) }
    dend_60 { pt3dadd( -63.5201, 530.458, -114.548, 2.04 ) }
    dend_60 { pt3dadd( -63.5944, 531.828, -114.635, 1.08 ) }
    dend_60 { pt3dadd( -63.6507, 532.798, -114.7, 0.6 ) }
    dend_60 { pt3dadd( -63.7093, 533.892, -114.791, 0.48 ) }
    dend_60 { pt3dadd( -63.7317, 535.118, -114.931, 0.48 ) }
    dend_60 { pt3dadd( -63.7188, 535.844, -115.043, 0.48 ) }
    dend_60 { pt3dadd( -63.6874, 536.568, -115.159, 0.96 ) }
    dend_60 { pt3dadd( -63.6332, 537.633, -115.333, 1.44 ) }
    dend_60 { pt3dadd( -63.5867, 538.842, -115.535, 0.84 ) }
    dend_60 { pt3dadd( -63.569, 539.714, -115.679, 0.48 ) }
    dend_60 { pt3dadd( -63.5851, 541.212, -115.919, 0.48 ) }
    dend_60 { pt3dadd( -63.6486, 542.306, -116.065, 0.6 ) }
    dend_60 { pt3dadd( -63.7829, 543.534, -116.201, 0.72 ) }
    dend_60 { pt3dadd( -63.8961, 544.217, -116.26, 0.12 ) }
    dend_60 { pt3dadd( -63.9485, 544.489, -116.255, 0.12 ) }
    dend_60 { pt3dadd( -64.1446, 545.432, -116.169, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( -64.3538, 546.445, -116.032, 2.28 ) }
    dend_60 { pt3dadd( -64.5167, 547.237, -115.908, 2.52 ) }
    dend_60 { pt3dadd( -64.6581, 547.905, -115.798, 2.52 ) }
    dend_60 { pt3dadd( -65.1849, 550.235, -115.438, 0.72 ) }
    dend_60 { pt3dadd( -65.6686, 552.24, -115.263, 0.72 ) }
    dend_60 { pt3dadd( -65.9221, 553.313, -115.186, 0.96 ) }
    dend_60 { pt3dadd( -66.0729, 553.989, -115.139, 0.6 ) }
    dend_60 { pt3dadd( -66.2144, 554.67, -115.081, 0.48 ) }
    dend_60 { pt3dadd( -66.5202, 556.152, -114.97, 0.48 ) }
    dend_60 { pt3dadd( -66.9325, 558.251, -114.9, 0.48 ) }
    dend_60 { pt3dadd( -67.1831, 559.798, -114.844, 0.48 ) }
    dend_60 { pt3dadd( -67.3464, 561.109, -114.815, 1.92 ) }
    dend_60 { pt3dadd( -67.5057, 562.79, -114.851, 0.96 ) }
    dend_60 { pt3dadd( -67.5899, 564.206, -114.938, 0.48 ) }
    dend_60 { pt3dadd( -67.6696, 566.798, -115.231, 0.48 ) }
    dend_60 { pt3dadd( -67.6843, 568.522, -115.495, 0.48 ) }
    dend_60 { pt3dadd( -67.6881, 570.131, -115.861, 0.48 ) }
    dend_60 { pt3dadd( -67.6644, 571.621, -116.275, 1.2 ) }
    dend_60 { pt3dadd( -67.6243, 572.55, -116.563, 1.92 ) }
    dend_60 { pt3dadd( -67.5263, 573.954, -117.018, 1.44 ) }
    dend_60 { pt3dadd( -67.4722, 574.863, -117.313, 1.08 ) }
    dend_60 { pt3dadd( -67.4572, 575.528, -117.511, 0.48 ) }
    dend_60 { pt3dadd( -67.4722, 576.475, -117.754, 0.96 ) }
    dend_60 { pt3dadd( -67.5108, 577.451, -117.954, 0.96 ) }
    dend_60 { pt3dadd( -67.5544, 578.173, -118.092, 0.48 ) }
    dend_60 { pt3dadd( -67.6671, 580.351, -118.447, 0.48 ) }
    dend_60 { pt3dadd( -67.7065, 581.182, -118.578, 0.6 ) }
    dend_60 { pt3dadd( -67.7268, 581.719, -118.653, 0.48 ) }
    dend_60 { pt3dadd( -67.7674, 582.976, -118.788, 0.48 ) }
    dend_60 { pt3dadd( -67.8398, 584.768, -118.92, 0.48 ) }
    dend_60 { pt3dadd( -67.9044, 585.813, -118.973, 0.96 ) }
    dend_60 { pt3dadd( -67.9716, 586.641, -118.991, 1.2 ) }
    dend_60 { pt3dadd( -68.0772, 587.603, -118.996, 0.6 ) }
    dend_60 { pt3dadd( -68.1972, 588.35, -119.007, 0.36 ) }
    dend_60 { pt3dadd( -68.5907, 590.083, -119.048, 0.36 ) }
    dend_60 { pt3dadd( -68.9284, 591.191, -119.098, 0.72 ) }
    dend_60 { pt3dadd( -69.2451, 592.033, -119.174, 1.44 ) }
    dend_60 { pt3dadd( -69.6134, 592.935, -119.267, 2.4 ) }
    dend_60 { pt3dadd( -70.2001, 594.345, -119.436, 1.56 ) }
    dend_60 { pt3dadd( -70.5319, 595.149, -119.534, 0.48 ) }
    dend_60 { pt3dadd( -71.3488, 597.213, -119.763, 0.48 ) }
    dend_60 { pt3dadd( -71.693, 598.24, -119.828, 0.6 ) }
    dend_60 { pt3dadd( -71.8477, 598.821, -119.831, 0.48 ) }
    dend_60 { pt3dadd( -72.0659, 600.055, -119.737, 0.48 ) }
    dend_60 { pt3dadd( -72.1119, 600.845, -119.63, 0.48 ) }
    dend_60 { pt3dadd( -72.0633, 601.755, -119.461, 0.84 ) }
    dend_60 { pt3dadd( -71.7934, 603.601, -119.042, 0.96 ) }
    dend_60 { pt3dadd( -71.549, 604.82, -118.759, 0.48 ) }
    dend_60 { pt3dadd( -71.3252, 605.771, -118.536, 0.36 ) }
    dend_60 { pt3dadd( -70.9155, 607.356, -118.18, 0.36 ) }
    dend_60 { pt3dadd( -70.5602, 608.739, -117.919, 0.96 ) }
    dend_60 { pt3dadd( -70.4881, 609.022, -117.863, 1.08 ) }
    dend_60 { pt3dadd( -70.2615, 609.969, -117.674, 0.48 ) }
    dend_60 { pt3dadd( -69.9843, 611.181, -117.346, 0.48 ) }
    dend_60 { pt3dadd( -69.7414, 612.323, -116.975, 0.48 ) }
    dend_60 { pt3dadd( -69.5441, 613.328, -116.608, 0.48 ) }
    dend_60 { pt3dadd( -69.2909, 614.778, -116.136, 0.48 ) }
    dend_60 { pt3dadd( -69.0346, 616.456, -115.652, 0.48 ) }
    dend_60 { pt3dadd( -68.8057, 618.487, -115.155, 1.68 ) }
    dend_60 { pt3dadd( -68.7438, 619.203, -115.016, 2.4 ) }
    dend_60 { pt3dadd( -68.7024, 619.812, -114.927, 2.64 ) }
    dend_60 { pt3dadd( -68.6537, 621.676, -114.852, 0.24 ) }
    dend_60 { pt3dadd( -68.7644, 623.038, -114.993, 0.24 ) }
    dend_60 { pt3dadd( -69.0159, 624.254, -115.238, 0.24 ) }
    dend_60 { pt3dadd( -69.0511, 624.384, -115.272, 0.72 ) }
    dend_60 { pt3dadd( -69.3247, 625.28, -115.513, 0.84 ) }
    dend_60 { pt3dadd( -69.7228, 626.443, -115.827, 0.24 ) }
    dend_60 { pt3dadd( -70.4453, 628.291, -116.326, 0.24 ) }
    dend_60 { pt3dadd( -71.0683, 629.798, -116.77, 0.24 ) }
    dend_60 { pt3dadd( -71.2237, 630.166, -116.883, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -30.8952, 119.369, -36.2784, 0.12 ) }
    dend_59 { pt3dadd( -31.6852, 119.431, -36.7272, 0.12 ) }
    dend_59 { pt3dadd( -31.8305, 119.444, -36.8074, 0.12 ) }
    dend_59 { pt3dadd( -32.2863, 119.491, -37.0399, 1.2 ) }
    dend_59 { pt3dadd( -32.7056, 119.528, -37.2427, 1.44 ) }
    dend_59 { pt3dadd( -35.0122, 119.74, -38.2815, 0.36 ) }
    dend_59 { pt3dadd( -35.5065, 119.801, -38.493, 0.36 ) }
    dend_59 { pt3dadd( -35.7838, 119.843, -38.6178, 1.8 ) }
    dend_59 { pt3dadd( -36.1761, 119.921, -38.7872, 2.16 ) }
    dend_59 { pt3dadd( -37.7108, 120.33, -39.4135, 0.36 ) }
    dend_59 { pt3dadd( -38.231, 120.497, -39.6262, 0.36 ) }
    dend_59 { pt3dadd( -38.7658, 120.723, -39.8152, 1.32 ) }
    dend_59 { pt3dadd( -39.2971, 120.946, -40.0491, 0.24 ) }
    dend_59 { pt3dadd( -39.6127, 121.088, -40.2094, 0.24 ) }
    dend_59 { pt3dadd( -40.4177, 121.482, -40.6346, 0.6 ) }
    dend_59 { pt3dadd( -41.4162, 122.046, -41.1437, 1.68 ) }
    dend_59 { pt3dadd( -41.7129, 122.216, -41.2836, 2.04 ) }
    dend_59 { pt3dadd( -43.0283, 122.943, -41.8483, 0.36 ) }
    dend_59 { pt3dadd( -43.4983, 123.217, -42.0208, 0.36 ) }
    dend_59 { pt3dadd( -44.0195, 123.559, -42.1762, 1.56 ) }
    dend_59 { pt3dadd( -44.4763, 123.907, -42.2817, 0.36 ) }
    dend_59 { pt3dadd( -44.9578, 124.321, -42.3509, 0.6 ) }
    dend_59 { pt3dadd( -45.2402, 124.57, -42.3827, 0.12 ) }
    dend_59 { pt3dadd( -45.6504, 124.972, -42.3926, 0.12 ) }
    dend_59 { pt3dadd( -45.8663, 125.186, -42.4173, 0.48 ) }
    dend_59 { pt3dadd( -46.5297, 125.865, -42.6016, 0.12 ) }
    dend_59 { pt3dadd( -46.7415, 126.092, -42.6795, 0.12 ) }
    dend_59 { pt3dadd( -46.9131, 126.292, -42.7509, 0.12 ) }
    dend_59 { pt3dadd( -47.1423, 126.579, -42.8458, 1.68 ) }
    dend_59 { pt3dadd( -47.3999, 126.947, -42.9574, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -47.8734, 127.742, -43.1713, 0.24 ) }
    dend_59 { pt3dadd( -48.0521, 128.095, -43.2468, 0.24 ) }
    dend_59 { pt3dadd( -48.1907, 128.368, -43.3133, 0.48 ) }
    dend_59 { pt3dadd( -48.3543, 128.668, -43.4052, 0.12 ) }
    dend_59 { pt3dadd( -48.8134, 129.488, -43.671, 0.12 ) }
    dend_59 { pt3dadd( -49.2288, 130.234, -43.9124, 0.12 ) }
    dend_59 { pt3dadd( -49.491, 130.721, -44.0602, 0.12 ) }
    dend_59 { pt3dadd( -49.8647, 131.431, -44.2676, 1.68 ) }
    dend_59 { pt3dadd( -50.3146, 132.299, -44.4933, 0.12 ) }
    dend_59 { pt3dadd( -50.6625, 132.987, -44.6491, 0.12 ) }
    dend_59 { pt3dadd( -50.8311, 133.329, -44.7165, 1.32 ) }
    dend_59 { pt3dadd( -51.0144, 133.762, -44.7811, 1.68 ) }
    dend_59 { pt3dadd( -51.2244, 134.37, -44.8471, 0.12 ) }
    dend_59 { pt3dadd( -51.3703, 134.959, -44.8788, 0.12 ) }
    dend_59 { pt3dadd( -51.4062, 135.184, -44.8907, 0.36 ) }
    dend_59 { pt3dadd( -51.4449, 135.488, -44.9189, 0.12 ) }
    dend_59 { pt3dadd( -51.527, 136.237, -45.0099, 0.12 ) }
    dend_59 { pt3dadd( -51.5702, 136.687, -45.0777, 1.56 ) }
    dend_59 { pt3dadd( -51.6313, 137.358, -45.1944, 0.12 ) }
    dend_59 { pt3dadd( -51.7288, 138.561, -45.4145, 0.12 ) }
    dend_59 { pt3dadd( -51.7488, 138.797, -45.4577, 0.48 ) }
    dend_59 { pt3dadd( -51.7687, 139.015, -45.4968, 0.12 ) }
    dend_59 { pt3dadd( -51.8484, 139.828, -45.65, 0.12 ) }
    dend_59 { pt3dadd( -51.9012, 140.342, -45.7514, 1.2 ) }
    dend_59 { pt3dadd( -51.942, 140.712, -45.8286, 1.2 ) }
    dend_59 { pt3dadd( -51.9854, 141.085, -45.9091, 0.12 ) }
    dend_59 { pt3dadd( -52.0392, 141.669, -46.0487, 0.12 ) }
    dend_59 { pt3dadd( -52.0679, 142.06, -46.1491, 1.32 ) }
    dend_59 { pt3dadd( -52.0874, 142.426, -46.2499, 1.68 ) }
    dend_59 { pt3dadd( -52.1259, 143.307, -46.4951, 0.12 ) }
    dend_59 { pt3dadd( -52.1517, 143.959, -46.6789, 0.12 ) }
    dend_59 { pt3dadd( -52.1782, 144.61, -46.8572, 0.12 ) }
    dend_59 { pt3dadd( -52.1884, 144.842, -46.9188, 0.12 ) }
    dend_59 { pt3dadd( -52.2117, 145.286, -47.0262, 0.12 ) }
    dend_59 { pt3dadd( -52.2323, 145.591, -47.0949, 1.2 ) }
    dend_59 { pt3dadd( -52.274, 146.118, -47.2046, 0.12 ) }
    dend_59 { pt3dadd( -52.3361, 146.779, -47.3431, 0.12 ) }
    dend_59 { pt3dadd( -52.3611, 147.008, -47.3899, 0.36 ) }
    dend_59 { pt3dadd( -52.3853, 147.245, -47.4408, 0.12 ) }
    dend_59 { pt3dadd( -52.4494, 147.982, -47.6092, 0.12 ) }
    dend_59 { pt3dadd( -52.4704, 148.307, -47.6889, 0.96 ) }
    dend_59 { pt3dadd( -52.4834, 148.637, -47.7736, 0.12 ) }
    dend_59 { pt3dadd( -52.4648, 149.376, -47.9409, 0.12 ) }
    dend_59 { pt3dadd( -52.4485, 149.749, -48.0222, 0.84 ) }
    dend_59 { pt3dadd( -52.4264, 150.122, -48.1007, 0.36 ) }
    dend_59 { pt3dadd( -52.4088, 150.357, -48.1479, 0.12 ) }
    dend_59 { pt3dadd( -52.2857, 151.846, -48.4582, 0.12 ) }
    dend_59 { pt3dadd( -52.2089, 152.651, -48.6357, 0.24 ) }
    dend_59 { pt3dadd( -52.1769, 152.977, -48.7141, 0.48 ) }
    dend_59 { pt3dadd( -52.1571, 153.209, -48.7734, 0.12 ) }
    dend_59 { pt3dadd( -52.1253, 153.899, -48.9604, 0.12 ) }
    dend_59 { pt3dadd( -52.1371, 154.353, -49.0848, 0.84 ) }
    dend_59 { pt3dadd( -52.1675, 154.587, -49.1531, 0.12 ) }
    dend_59 { pt3dadd( -52.2868, 155.301, -49.3844, 0.12 ) }
    dend_59 { pt3dadd( -52.3067, 155.411, -49.4149, 0.6 ) }
    dend_59 { pt3dadd( -52.4176, 155.753, -49.5048, 0.12 ) }
    dend_59 { pt3dadd( -52.617, 156.181, -49.6015, 0.12 ) }
    dend_59 { pt3dadd( -52.8338, 156.581, -49.6809, 1.08 ) }
    dend_59 { pt3dadd( -53.1213, 157.029, -49.7856, 1.32 ) }
    dend_59 { pt3dadd( -53.3953, 157.39, -49.8707, 1.68 ) }
    dend_59 { pt3dadd( -53.9197, 158.051, -50.0171, 0.12 ) }
    dend_59 { pt3dadd( -54.2647, 158.439, -50.115, 0.12 ) }
    dend_59 { pt3dadd( -54.423, 158.596, -50.1523, 0.48 ) }
    dend_59 { pt3dadd( -54.7294, 158.882, -50.1992, 0.12 ) }
    dend_59 { pt3dadd( -55.1557, 159.281, -50.2351, 0.12 ) }
    dend_59 { pt3dadd( -55.3979, 159.518, -50.241, 0.48 ) }
    dend_59 { pt3dadd( -55.822, 159.937, -50.2078, 0.12 ) }
    dend_59 { pt3dadd( -56.2495, 160.334, -50.137, 0.12 ) }
    dend_59 { pt3dadd( -56.6518, 160.723, -50.0413, 0.12 ) }
    dend_59 { pt3dadd( -56.8351, 160.915, -49.9836, 0.84 ) }
    dend_59 { pt3dadd( -57.087, 161.183, -49.896, 0.84 ) }
    dend_59 { pt3dadd( -57.2374, 161.343, -49.8314, 0.12 ) }
    dend_59 { pt3dadd( -57.6091, 161.743, -49.6282, 0.12 ) }
    dend_59 { pt3dadd( -57.8589, 161.989, -49.4901, 0.12 ) }
    dend_59 { pt3dadd( -57.909, 162.036, -49.4596, 0.48 ) }
    dend_59 { pt3dadd( -58.1022, 162.212, -49.3312, 0.12 ) }
    dend_59 { pt3dadd( -58.3262, 162.405, -49.1735, 0.12 ) }
    dend_59 { pt3dadd( -58.6081, 162.632, -48.9363, 1.32 ) }
    dend_59 { pt3dadd( -58.7152, 162.704, -48.8306, 1.56 ) }
    dend_59 { pt3dadd( -59.0717, 162.914, -48.4435, 0.12 ) }
    dend_59 { pt3dadd( -59.3107, 163.047, -48.1782, 0.12 ) }
    dend_59 { pt3dadd( -59.4544, 163.136, -47.9696, 0.48 ) }
    dend_59 { pt3dadd( -59.6298, 163.252, -47.656, 0.12 ) }
    dend_59 { pt3dadd( -59.7295, 163.327, -47.4705, 0.12 ) }
    dend_59 { pt3dadd( -59.8515, 163.424, -47.2563, 0.12 ) }
    dend_59 { pt3dadd( -59.9632, 163.536, -47.0385, 0.72 ) }
    dend_59 { pt3dadd( -60.3107, 163.95, -46.3662, 0.12 ) }
    dend_59 { pt3dadd( -60.4681, 164.154, -46.086, 0.12 ) }
    dend_59 { pt3dadd( -60.7098, 164.5, -45.6521, 1.8 ) }
    dend_59 { pt3dadd( -60.8608, 164.743, -45.3577, 2.04 ) }
    dend_59 { pt3dadd( -61.2086, 165.333, -44.6623, 0.24 ) }
    dend_59 { pt3dadd( -61.3416, 165.565, -44.4022, 0.24 ) }
    dend_59 { pt3dadd( -61.5261, 165.876, -44.0874, 0.24 ) }
    dend_59 { pt3dadd( -61.7961, 166.36, -43.6312, 0.24 ) }
    dend_59 { pt3dadd( -61.9643, 166.675, -43.3443, 0.96 ) }
    dend_59 { pt3dadd( -62.0683, 166.863, -43.1856, 1.32 ) }
    dend_59 { pt3dadd( -62.2531, 167.176, -42.9453, 0.12 ) }
    dend_59 { pt3dadd( -62.4584, 167.518, -42.6852, 0.12 ) }
    dend_59 { pt3dadd( -62.7791, 168.018, -42.3287, 0.12 ) }
    dend_59 { pt3dadd( -62.9133, 168.22, -42.2135, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( -63.0301, 168.41, -42.1287, 0.96 ) }
    dend_59 { pt3dadd( -63.1742, 168.663, -42.0341, 0.24 ) }
    dend_59 { pt3dadd( -63.3543, 168.982, -41.9375, 0.24 ) }
    dend_59 { pt3dadd( -63.4728, 169.199, -41.8868, 0.12 ) }
    dend_59 { pt3dadd( -63.7971, 169.801, -41.7835, 0.12 ) }
    dend_59 { pt3dadd( -64.0478, 170.264, -41.7246, 0.12 ) }
    dend_59 { pt3dadd( -64.1994, 170.547, -41.6961, 0.96 ) }
    dend_59 { pt3dadd( -64.3542, 170.782, -41.6934, 0.12 ) }
    dend_59 { pt3dadd( -64.6019, 171.098, -41.7074, 0.12 ) }
    dend_59 { pt3dadd( -64.715, 171.223, -41.7152, 0.12 ) }
    dend_59 { pt3dadd( -64.8327, 171.334, -41.7317, 1.2 ) }
    dend_59 { pt3dadd( -65.0309, 171.516, -41.7694, 1.2 ) }
    dend_59 { pt3dadd( -65.7607, 172.223, -41.9337, 0.12 ) }
    dend_59 { pt3dadd( -66.066, 172.497, -42.0303, 0.12 ) }
    dend_59 { pt3dadd( -66.3719, 172.78, -42.1518, 0.12 ) }
    dend_59 { pt3dadd( -66.6658, 173.064, -42.2816, 0.12 ) }
    dend_59 { pt3dadd( -66.87, 173.265, -42.3854, 0.72 ) }
    dend_59 { pt3dadd( -67.0884, 173.498, -42.4945, 0.84 ) }
    dend_59 { pt3dadd( -67.709, 174.249, -42.7953, 0.12 ) }
    dend_59 { pt3dadd( -68.1264, 174.73, -43.0142, 0.12 ) }
    dend_59 { pt3dadd( -68.1917, 174.803, -43.0448, 0.24 ) }
    dend_59 { pt3dadd( -68.4783, 175.103, -43.157, 0.12 ) }
    dend_59 { pt3dadd( -69.1085, 175.722, -43.3984, 0.12 ) }
    dend_59 { pt3dadd( -69.2152, 175.822, -43.4339, 1.2 ) }
    dend_59 { pt3dadd( -69.7237, 176.276, -43.5708, 0.12 ) }
    dend_59 { pt3dadd( -70.2262, 176.654, -43.7083, 0.12 ) }
    dend_59 { pt3dadd( -70.6076, 176.928, -43.8211, 0.72 ) }
    dend_59 { pt3dadd( -71.013, 177.178, -43.947, 0.12 ) }
    dend_59 { pt3dadd( -71.3065, 177.318, -44.0374, 0.12 ) }
    dend_59 { pt3dadd( -71.8019, 177.519, -44.1637, 0.12 ) }
    dend_59 { pt3dadd( -72.1827, 177.653, -44.249, 1.08 ) }
    dend_59 { pt3dadd( -72.4684, 177.734, -44.3172, 1.08 ) }
    dend_59 { pt3dadd( -73.1603, 177.911, -44.46, 0.12 ) }
    dend_59 { pt3dadd( -73.6686, 178.023, -44.5428, 0.12 ) }
    dend_59 { pt3dadd( -73.8132, 178.048, -44.5681, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -38.9254, 107.722, -87.2377, 0.12 ) }
    dend_57 { pt3dadd( -39.0017, 109.281, -87.7939, 0.12 ) }
    dend_57 { pt3dadd( -39.1017, 111.06, -88.461, 2.64 ) }
    dend_57 { pt3dadd( -39.1543, 111.769, -88.7472, 2.16 ) }
    dend_57 { pt3dadd( -39.3288, 113.264, -89.3914, 0.24 ) }
    dend_57 { pt3dadd( -39.5263, 114.575, -89.947, 0.24 ) }
    dend_57 { pt3dadd( -39.7012, 115.553, -90.3538, 0.24 ) }
    dend_57 { pt3dadd( -40.0492, 117.006, -90.9018, 0.96 ) }
    dend_57 { pt3dadd( -40.3302, 117.975, -91.2619, 0.12 ) }
    dend_57 { pt3dadd( -40.7393, 119.16, -91.6228, 0.12 ) }
    dend_57 { pt3dadd( -41.1037, 120.084, -91.8191, 0.24 ) }
    dend_57 { pt3dadd( -41.3423, 120.634, -91.8935, 0.24 ) }
    dend_57 { pt3dadd( -41.8612, 121.783, -91.9558, 1.68 ) }
    dend_57 { pt3dadd( -42.2614, 122.658, -91.9814, 2.52 ) }
    dend_57 { pt3dadd( -42.8845, 124.137, -92.0663, 1.56 ) }
    dend_57 { pt3dadd( -43.1382, 124.762, -92.1338, 0.48 ) }
    dend_57 { pt3dadd( -43.9577, 126.724, -92.4853, 0.48 ) }
    dend_57 { pt3dadd( -44.4294, 127.831, -92.7443, 1.32 ) }
    dend_57 { pt3dadd( -44.967, 129.087, -93.1505, 0.96 ) }
    dend_57 { pt3dadd( -45.3686, 130.037, -93.5262, 0.12 ) }
    dend_57 { pt3dadd( -45.7581, 130.977, -93.9658, 0.12 ) }
    dend_57 { pt3dadd( -46.235, 132.132, -94.534, 1.8 ) }
    dend_57 { pt3dadd( -46.5585, 132.922, -94.9304, 1.92 ) }
    dend_57 { pt3dadd( -47.0687, 134.117, -95.4773, 0.12 ) }
    dend_57 { pt3dadd( -47.5116, 135.08, -95.8087, 0.12 ) }
    dend_57 { pt3dadd( -47.6528, 135.362, -95.8877, 0.48 ) }
    dend_57 { pt3dadd( -47.9742, 135.989, -96.0364, 0.12 ) }
    dend_57 { pt3dadd( -48.3351, 136.66, -96.1603, 0.12 ) }
    dend_57 { pt3dadd( -48.9668, 137.697, -96.2927, 0.72 ) }
    dend_57 { pt3dadd( -49.5407, 138.553, -96.3432, 0.12 ) }
    dend_57 { pt3dadd( -50.1918, 139.455, -96.4103, 0.12 ) }
    dend_57 { pt3dadd( -50.4646, 139.828, -96.4429, 0.48 ) }
    dend_57 { pt3dadd( -50.7283, 140.185, -96.485, 0.12 ) }
    dend_57 { pt3dadd( -51.3788, 141.076, -96.6484, 0.12 ) }
    dend_57 { pt3dadd( -51.6498, 141.454, -96.7461, 1.2 ) }
    dend_57 { pt3dadd( -52.137, 142.155, -96.9527, 1.32 ) }
    dend_57 { pt3dadd( -52.6252, 142.921, -97.1348, 0.84 ) }
    dend_57 { pt3dadd( -52.8348, 143.267, -97.2017, 0.12 ) }
    dend_57 { pt3dadd( -53.3012, 144.059, -97.3167, 0.12 ) }
    dend_57 { pt3dadd( -53.447, 144.33, -97.3399, 0.6 ) }
    dend_57 { pt3dadd( -53.7343, 144.914, -97.3711, 0.12 ) }
    dend_57 { pt3dadd( -54.323, 146.243, -97.397, 0.12 ) }
    dend_57 { pt3dadd( -54.5545, 146.822, -97.4029, 0.6 ) }
    dend_57 { pt3dadd( -54.7051, 147.294, -97.4775, 0.12 ) }
    dend_57 { pt3dadd( -54.8864, 148.022, -97.6588, 0.12 ) }
    dend_57 { pt3dadd( -55.1748, 149.247, -98.0456, 1.56 ) }
    dend_57 { pt3dadd( -55.2798, 149.692, -98.2117, 2.04 ) }
    dend_57 { pt3dadd( -55.5054, 150.612, -98.5892, 1.68 ) }
    dend_57 { pt3dadd( -56.0829, 153.219, -99.7441, 0.12 ) }
    dend_57 { pt3dadd( -56.3383, 154.462, -100.355, 0.12 ) }
    dend_57 { pt3dadd( -56.4993, 155.253, -100.798, 0.12 ) }
    dend_57 { pt3dadd( -56.6347, 155.895, -101.196, 1.08 ) }
    dend_57 { pt3dadd( -56.7443, 156.391, -101.516, 1.56 ) }
    dend_57 { pt3dadd( -56.9895, 157.576, -102.354, 0.12 ) }
    dend_57 { pt3dadd( -57.2537, 159.044, -103.383, 0.12 ) }
    dend_57 { pt3dadd( -57.3401, 159.99, -104.122, 0.48 ) }
    dend_57 { pt3dadd( -57.3467, 160.927, -104.916, 0.48 ) }
    dend_57 { pt3dadd( -57.3145, 161.407, -105.333, 0.48 ) }
    dend_57 { pt3dadd( -57.1293, 162.661, -106.53, 1.44 ) }
    dend_57 { pt3dadd( -57.0255, 163.206, -107.05, 1.92 ) }
    dend_57 { pt3dadd( -56.811, 164.049, -107.813, 1.44 ) }
    dend_57 { pt3dadd( -56.4721, 165.1, -108.774, 0.48 ) }
    dend_57 { pt3dadd( -56.0238, 166.356, -109.914, 0.36 ) }
    dend_57 { pt3dadd( -55.4272, 167.943, -111.314, 0.12 ) }
    dend_57 { pt3dadd( -55.0873, 168.852, -112.059, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( -54.8165, 169.566, -112.647, 1.2 ) }
    dend_57 { pt3dadd( -54.1224, 171.448, -114.075, 0.12 ) }
    dend_57 { pt3dadd( -53.8897, 172.029, -114.486, 0.12 ) }
    dend_57 { pt3dadd( -53.7296, 172.388, -114.727, 0.6 ) }
    dend_57 { pt3dadd( -53.5356, 172.838, -114.97, 0.6 ) }
    dend_57 { pt3dadd( -53.1353, 173.728, -115.47, 0.36 ) }
    dend_57 { pt3dadd( -52.8673, 174.355, -115.779, 0.36 ) }
    dend_57 { pt3dadd( -52.4521, 175.457, -116.17, 0.12 ) }
    dend_57 { pt3dadd( -52.2203, 176.154, -116.369, 0.12 ) }
    dend_57 { pt3dadd( -51.8899, 177.29, -116.646, 0.12 ) }
    dend_57 { pt3dadd( -51.5007, 178.781, -117.007, 1.56 ) }
    dend_57 { pt3dadd( -51.2724, 179.754, -117.22, 2.16 ) }
    dend_57 { pt3dadd( -50.9836, 181.219, -117.542, 0.24 ) }
    dend_57 { pt3dadd( -50.657, 183.281, -118.092, 0.24 ) }
    dend_57 { pt3dadd( -50.5645, 184.185, -118.389, 0.12 ) }
    dend_57 { pt3dadd( -50.4689, 185.783, -118.989, 1.68 ) }
    dend_57 { pt3dadd( -50.4639, 186.285, -119.217, 2.28 ) }
    dend_57 { pt3dadd( -50.4863, 186.837, -119.521, 2.28 ) }
    dend_57 { pt3dadd( -50.6382, 188.784, -120.852, 0.12 ) }
    dend_57 { pt3dadd( -50.7955, 189.986, -121.814, 0.12 ) }
    dend_57 { pt3dadd( -50.8594, 190.338, -122.121, 0.6 ) }
    dend_57 { pt3dadd( -51.1249, 191.507, -123.276, 0.24 ) }
    dend_57 { pt3dadd( -51.2812, 192.1, -123.956, 0.24 ) }
    dend_57 { pt3dadd( -51.4852, 192.838, -124.845, 0.24 ) }
    dend_57 { pt3dadd( -51.647, 193.329, -125.469, 0.96 ) }
    dend_57 { pt3dadd( -51.8797, 193.965, -126.365, 1.44 ) }
    dend_57 { pt3dadd( -52.3523, 195.086, -127.998, 0.12 ) }
    dend_57 { pt3dadd( -52.8725, 196.124, -129.42, 0.12 ) }
    dend_57 { pt3dadd( -53.1062, 196.557, -129.99, 0.12 ) }
    dend_57 { pt3dadd( -53.1932, 196.697, -130.157, 0.48 ) }
    dend_57 { pt3dadd( -53.385, 197.0, -130.482, 0.48 ) }
    dend_57 { pt3dadd( -53.4799, 197.144, -130.615, 0.48 ) }
    dend_57 { pt3dadd( -54.1073, 198.011, -131.272, 0.48 ) }
    dend_57 { pt3dadd( -54.8111, 198.961, -131.931, 1.32 ) }
    dend_57 { pt3dadd( -55.1729, 199.45, -132.267, 1.8 ) }
    dend_57 { pt3dadd( -55.6905, 200.218, -132.739, 0.96 ) }
    dend_57 { pt3dadd( -56.1554, 200.938, -133.132, 0.12 ) }
    dend_57 { pt3dadd( -56.8195, 202.013, -133.693, 0.12 ) }
    dend_57 { pt3dadd( -57.194, 202.622, -133.988, 1.2 ) }
    dend_57 { pt3dadd( -57.4648, 203.127, -134.216, 1.56 ) }
    dend_57 { pt3dadd( -57.7714, 203.854, -134.586, 0.12 ) }
    dend_57 { pt3dadd( -58.1969, 205.037, -135.214, 0.12 ) }
    dend_57 { pt3dadd( -58.5203, 206.144, -135.812, 0.12 ) }
    dend_57 { pt3dadd( -58.7224, 207.281, -136.557, 0.12 ) }
    dend_57 { pt3dadd( -58.9514, 209.166, -137.914, 0.12 ) }
    dend_57 { pt3dadd( -59.0551, 210.75, -139.185, 0.12 ) }
    dend_57 { pt3dadd( -59.0751, 211.371, -139.705, 0.84 ) }
    dend_57 { pt3dadd( -59.0798, 211.796, -140.066, 0.96 ) }
    dend_57 { pt3dadd( -59.1258, 213.926, -141.882, 0.12 ) }
    dend_57 { pt3dadd( -59.1785, 214.833, -142.678, 0.12 ) }
    dend_57 { pt3dadd( -59.3755, 215.679, -143.411, 0.12 ) }
    dend_57 { pt3dadd( -59.6839, 216.517, -144.091, 0.12 ) }
    dend_57 { pt3dadd( -59.9941, 217.216, -144.689, 0.36 ) }
    dend_57 { pt3dadd( -60.0604, 217.323, -144.776, 0.12 ) }
    dend_57 { pt3dadd( -60.5684, 217.766, -144.948, 0.12 ) }
    dend_57 { pt3dadd( -61.2208, 218.143, -145.094, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -38.9254, 107.722, -87.2377, 0.12 ) }
    dend_56 { pt3dadd( -41.3151, 107.91, -91.8878, 0.12 ) }
    dend_56 { pt3dadd( -41.8207, 107.981, -92.7399, 0.12 ) }
    dend_56 { pt3dadd( -42.5612, 108.108, -93.7408, 0.12 ) }
    dend_56 { pt3dadd( -43.0788, 108.21, -94.3435, 0.84 ) }
    dend_56 { pt3dadd( -44.2414, 108.456, -95.5557, 1.8 ) }
    dend_56 { pt3dadd( -44.6606, 108.551, -95.9502, 1.92 ) }
    dend_56 { pt3dadd( -45.7083, 108.87, -96.5608, 0.12 ) }
    dend_56 { pt3dadd( -47.0044, 109.358, -97.2428, 0.12 ) }
    dend_56 { pt3dadd( -47.8766, 109.731, -97.6216, 0.96 ) }
    dend_56 { pt3dadd( -48.3033, 109.934, -97.7821, 1.2 ) }
    dend_56 { pt3dadd( -49.3158, 110.469, -98.0837, 0.12 ) }
    dend_56 { pt3dadd( -49.9864, 110.861, -98.3097, 0.12 ) }
    dend_56 { pt3dadd( -51.2931, 111.78, -98.7908, 0.12 ) }
    dend_56 { pt3dadd( -51.7526, 112.153, -98.9818, 1.2 ) }
    dend_56 { pt3dadd( -52.0367, 112.4, -99.0986, 1.44 ) }
    dend_56 { pt3dadd( -52.6405, 112.942, -99.3995, 0.6 ) }
    dend_56 { pt3dadd( -53.3938, 113.611, -99.8163, 0.12 ) }
    dend_56 { pt3dadd( -54.0795, 114.155, -100.214, 0.12 ) }
    dend_56 { pt3dadd( -54.5905, 114.484, -100.547, 0.96 ) }
    dend_56 { pt3dadd( -54.9587, 114.692, -100.795, 1.32 ) }
    dend_56 { pt3dadd( -55.9952, 115.178, -101.456, 0.12 ) }
    dend_56 { pt3dadd( -56.5577, 115.383, -101.785, 0.12 ) }
    dend_56 { pt3dadd( -57.2366, 115.562, -102.176, 0.12 ) }
    dend_56 { pt3dadd( -58.4661, 115.783, -102.897, 0.12 ) }
    dend_56 { pt3dadd( -59.2037, 115.896, -103.331, 1.08 ) }
    dend_56 { pt3dadd( -59.738, 115.965, -103.627, 1.8 ) }
    dend_56 { pt3dadd( -60.4371, 116.023, -104.034, 1.2 ) }
    dend_56 { pt3dadd( -61.5256, 116.097, -104.715, 0.12 ) }
    dend_56 { pt3dadd( -62.0405, 116.129, -105.039, 0.12 ) }
    dend_56 { pt3dadd( -62.4644, 116.148, -105.293, 0.12 ) }
    dend_56 { pt3dadd( -62.9647, 116.154, -105.649, 0.12 ) }
    dend_56 { pt3dadd( -64.7719, 116.12, -107.016, 0.12 ) }
    dend_56 { pt3dadd( -65.1664, 116.107, -107.313, 1.44 ) }
    dend_56 { pt3dadd( -65.626, 116.076, -107.718, 2.04 ) }
    dend_56 { pt3dadd( -66.3439, 115.991, -108.4, 1.32 ) }
    dend_56 { pt3dadd( -67.9151, 115.732, -109.861, 0.12 ) }
    dend_56 { pt3dadd( -68.4282, 115.628, -110.32, 0.12 ) }
    dend_56 { pt3dadd( -68.8988, 115.505, -110.691, 0.96 ) }
    dend_56 { pt3dadd( -70.9297, 114.844, -112.217, 0.12 ) }
    dend_56 { pt3dadd( -71.6972, 114.552, -112.729, 0.12 ) }
    dend_56 { pt3dadd( -72.5382, 114.196, -113.23, 1.56 ) }
    dend_56 { pt3dadd( -72.9001, 114.028, -113.398, 1.8 ) }
    dend_56 { pt3dadd( -73.8933, 113.559, -113.855, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( -74.1656, 113.434, -113.965, 0.12 ) }
    dend_56 { pt3dadd( -74.7713, 113.17, -114.164, 0.48 ) }
    dend_56 { pt3dadd( -76.0252, 112.634, -114.677, 0.12 ) }
    dend_56 { pt3dadd( -76.8554, 112.288, -115.063, 0.12 ) }
    dend_56 { pt3dadd( -77.5449, 112.009, -115.358, 1.32 ) }
    dend_56 { pt3dadd( -78.0373, 111.8, -115.537, 1.56 ) }
    dend_56 { pt3dadd( -79.0693, 111.284, -115.789, 0.12 ) }
    dend_56 { pt3dadd( -79.544, 110.981, -115.835, 0.12 ) }
    dend_56 { pt3dadd( -79.7621, 110.816, -115.819, 0.48 ) }
    dend_56 { pt3dadd( -80.4222, 110.234, -115.733, 0.12 ) }
    dend_56 { pt3dadd( -81.0545, 109.633, -115.614, 0.12 ) }
    dend_56 { pt3dadd( -81.8715, 108.82, -115.409, 0.12 ) }
    dend_56 { pt3dadd( -82.6043, 108.069, -115.18, 0.12 ) }
    dend_56 { pt3dadd( -82.8982, 107.766, -115.092, 0.72 ) }
    dend_56 { pt3dadd( -83.1656, 107.504, -114.981, 0.12 ) }
    dend_56 { pt3dadd( -83.8777, 106.872, -114.642, 0.12 ) }
    dend_56 { pt3dadd( -84.3538, 106.509, -114.391, 0.12 ) }
    dend_56 { pt3dadd( -84.8729, 106.165, -114.105, 1.44 ) }
    dend_56 { pt3dadd( -85.4425, 105.826, -113.79, 1.8 ) }
    dend_56 { pt3dadd( -87.1465, 104.86, -112.864, 0.12 ) }
    dend_56 { pt3dadd( -87.6882, 104.571, -112.561, 0.12 ) }
    dend_56 { pt3dadd( -89.1331, 103.854, -111.761, 0.12 ) }
    dend_56 { pt3dadd( -89.4552, 103.709, -111.601, 0.24 ) }
    dend_56 { pt3dadd( -89.7123, 103.611, -111.468, 0.12 ) }
    dend_56 { pt3dadd( -90.0764, 103.48, -111.274, 0.12 ) }
    dend_56 { pt3dadd( -91.1011, 103.166, -110.788, 1.32 ) }
    dend_56 { pt3dadd( -91.2193, 103.138, -110.725, 1.56 ) }
    dend_56 { pt3dadd( -92.0492, 103.008, -110.244, 1.56 ) }
    dend_56 { pt3dadd( -93.2756, 102.87, -109.584, 0.24 ) }
    dend_56 { pt3dadd( -93.5293, 102.855, -109.462, 0.12 ) }
    dend_56 { pt3dadd( -94.3494, 102.843, -109.15, 0.12 ) }
    dend_56 { pt3dadd( -95.0658, 102.845, -108.971, 0.12 ) }
    dend_56 { pt3dadd( -95.3606, 102.846, -108.908, 0.48 ) }
    dend_56 { pt3dadd( -95.8499, 102.86, -108.837, 0.48 ) }
    dend_56 { pt3dadd( -96.1242, 102.871, -108.831, 0.12 ) }
    dend_56 { pt3dadd( -97.2548, 102.917, -108.815, 0.12 ) }
    dend_56 { pt3dadd( -98.0885, 102.899, -108.796, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -54.8387, 20.2324, -80.6614, 0.12 ) }
    dend_52 { pt3dadd( -54.7343, 18.8228, -81.6568, 0.12 ) }
    dend_52 { pt3dadd( -54.6968, 18.0289, -82.3251, 0.12 ) }
    dend_52 { pt3dadd( -54.6592, 17.0356, -83.1579, 0.12 ) }
    dend_52 { pt3dadd( -54.6516, 16.8053, -83.3468, 1.56 ) }
    dend_52 { pt3dadd( -54.6356, 16.2864, -83.7524, 1.56 ) }
    dend_52 { pt3dadd( -54.6254, 15.7599, -84.1365, 0.96 ) }
    dend_52 { pt3dadd( -54.6516, 14.8076, -84.806, 0.12 ) }
    dend_52 { pt3dadd( -54.678, 14.2286, -85.2471, 0.12 ) }
    dend_52 { pt3dadd( -54.6877, 14.0478, -85.3653, 0.12 ) }
    dend_52 { pt3dadd( -54.7022, 13.6685, -85.5741, 0.12 ) }
    dend_52 { pt3dadd( -54.7025, 13.1874, -85.8253, 0.6 ) }
    dend_52 { pt3dadd( -54.6929, 12.8707, -85.9741, 0.72 ) }
    dend_52 { pt3dadd( -54.6108, 11.5272, -86.5008, 0.12 ) }
    dend_52 { pt3dadd( -54.551, 10.9242, -86.8482, 0.12 ) }
    dend_52 { pt3dadd( -54.4285, 10.054, -87.3937, 2.04 ) }
    dend_52 { pt3dadd( -54.1667, 8.57364, -88.4154, 0.12 ) }
    dend_52 { pt3dadd( -54.0377, 7.91534, -88.8881, 0.12 ) }
    dend_52 { pt3dadd( -53.9014, 7.20237, -89.4388, 2.28 ) }
    dend_52 { pt3dadd( -53.4789, 4.89706, -91.2214, 0.12 ) }
    dend_52 { pt3dadd( -53.3627, 4.17151, -91.8331, 0.12 ) }
    dend_52 { pt3dadd( -53.3092, 3.64044, -92.4205, 0.12 ) }
    dend_52 { pt3dadd( -53.3009, 3.42318, -92.691, 0.12 ) }
    dend_52 { pt3dadd( -53.3235, 2.64834, -93.6949, 0.12 ) }
    dend_52 { pt3dadd( -53.3826, 2.17267, -94.3195, 1.92 ) }
    dend_52 { pt3dadd( -53.4453, 1.86609, -94.6842, 2.28 ) }
    dend_52 { pt3dadd( -54.046, -0.701048, -97.8024, 0.12 ) }
    dend_52 { pt3dadd( -54.1124, -0.977088, -98.1155, 0.12 ) }
    dend_52 { pt3dadd( -54.2699, -1.68401, -98.8804, 1.8 ) }
    dend_52 { pt3dadd( -54.3318, -1.98698, -99.1798, 1.8 ) }
    dend_52 { pt3dadd( -54.4195, -2.47406, -99.6256, 1.2 ) }
    dend_52 { pt3dadd( -54.5168, -3.44759, -100.311, 0.12 ) }
    dend_52 { pt3dadd( -54.5361, -3.99176, -100.453, 0.12 ) }
    dend_52 { pt3dadd( -54.5346, -4.18457, -100.515, 0.6 ) }
    dend_52 { pt3dadd( -54.4862, -4.69059, -100.687, 0.12 ) }
    dend_52 { pt3dadd( -54.3705, -5.43423, -100.944, 0.12 ) }
    dend_52 { pt3dadd( -54.3414, -5.60963, -101.002, 0.36 ) }
    dend_52 { pt3dadd( -54.2666, -6.00456, -101.169, 0.36 ) }
    dend_52 { pt3dadd( -54.2075, -6.27627, -101.315, 0.12 ) }
    dend_52 { pt3dadd( -54.026, -7.11058, -101.757, 0.12 ) }
    dend_52 { pt3dadd( -53.854, -7.8412, -102.284, 0.12 ) }
    dend_52 { pt3dadd( -53.7853, -8.1114, -102.495, 0.96 ) }
    dend_52 { pt3dadd( -53.4509, -9.31659, -103.438, 0.12 ) }
    dend_52 { pt3dadd( -53.3064, -9.79281, -103.899, 0.12 ) }
    dend_52 { pt3dadd( -53.0652, -10.5417, -104.684, 2.76 ) }
    dend_52 { pt3dadd( -52.4387, -12.3909, -106.887, 0.12 ) }
    dend_52 { pt3dadd( -52.2269, -12.9836, -107.614, 0.12 ) }
    dend_52 { pt3dadd( -52.1333, -13.218, -107.911, 0.96 ) }
    dend_52 { pt3dadd( -51.3452, -14.8899, -110.166, 0.12 ) }
    dend_52 { pt3dadd( -51.1454, -15.2346, -110.713, 0.12 ) }
    dend_52 { pt3dadd( -50.6796, -15.861, -111.847, 0.12 ) }
    dend_52 { pt3dadd( -50.5225, -16.0203, -112.152, 1.2 ) }
    dend_52 { pt3dadd( -50.2385, -16.2576, -112.64, 2.28 ) }
    dend_52 { pt3dadd( -49.4607, -16.8059, -113.729, 1.68 ) }
    dend_52 { pt3dadd( -48.7345, -17.201, -114.392, 0.12 ) }
    dend_52 { pt3dadd( -48.3414, -17.3689, -114.746, 0.12 ) }
    dend_52 { pt3dadd( -48.1159, -17.454, -114.933, 0.12 ) }
    dend_52 { pt3dadd( -47.8179, -17.5654, -115.223, 0.12 ) }
    dend_52 { pt3dadd( -47.5073, -17.6929, -115.52, 0.6 ) }
    dend_52 { pt3dadd( -47.2856, -17.7883, -115.703, 0.6 ) }
    dend_52 { pt3dadd( -46.5413, -18.2003, -116.533, 0.24 ) }
    dend_52 { pt3dadd( -46.3959, -18.3085, -116.757, 0.24 ) }
    dend_52 { pt3dadd( -45.9635, -18.7014, -117.575, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( -45.5129, -19.1819, -118.461, 2.4 ) }
    dend_52 { pt3dadd( -45.4341, -19.273, -118.611, 2.4 ) }
    dend_52 { pt3dadd( -44.5042, -20.5202, -120.669, 0.12 ) }
    dend_52 { pt3dadd( -43.8986, -21.4183, -122.077, 0.12 ) }
    dend_52 { pt3dadd( -43.5406, -21.9807, -122.946, 0.12 ) }
    dend_52 { pt3dadd( -43.2182, -22.5267, -123.787, 3.12 ) }
    dend_52 { pt3dadd( -43.0857, -22.7769, -124.169, 3.12 ) }
    dend_52 { pt3dadd( -41.9698, -25.055, -127.364, 0.12 ) }
    dend_52 { pt3dadd( -41.8137, -25.3995, -127.802, 0.12 ) }
    dend_52 { pt3dadd( -41.738, -25.5779, -128.017, 0.48 ) }
    dend_52 { pt3dadd( -41.5722, -25.9785, -128.482, 0.12 ) }
    dend_52 { pt3dadd( -41.4512, -26.302, -128.864, 0.12 ) }
    dend_52 { pt3dadd( -41.3908, -26.5458, -129.162, 0.48 ) }
    dend_52 { pt3dadd( -41.3208, -27.003, -129.672, 0.12 ) }
    dend_52 { pt3dadd( -41.2744, -27.3997, -130.123, 0.12 ) }
    dend_52 { pt3dadd( -41.1301, -28.4861, -131.29, 2.76 ) }
    dend_52 { pt3dadd( -41.0971, -28.7005, -131.505, 2.76 ) }
    dend_52 { pt3dadd( -40.6889, -31.0924, -133.82, 0.12 ) }
    dend_52 { pt3dadd( -40.6167, -31.4476, -134.14, 0.12 ) }
    dend_52 { pt3dadd( -40.5123, -31.9004, -134.527, 0.12 ) }
    dend_52 { pt3dadd( -40.3448, -32.5688, -135.082, 0.12 ) }
    dend_52 { pt3dadd( -40.1345, -33.345, -135.695, 1.8 ) }
    dend_52 { pt3dadd( -39.9611, -33.8636, -136.096, 2.16 ) }
    dend_52 { pt3dadd( -39.7653, -34.3802, -136.442, 1.92 ) }
    dend_52 { pt3dadd( -39.3177, -35.6915, -137.453, 0.12 ) }
    dend_52 { pt3dadd( -39.2366, -35.9877, -137.696, 0.72 ) }
    dend_52 { pt3dadd( -39.1528, -36.5697, -138.187, 0.72 ) }
    dend_52 { pt3dadd( -39.131, -36.9007, -138.436, 0.12 ) }
    dend_52 { pt3dadd( -39.1239, -37.5324, -138.851, 0.12 ) }
    dend_52 { pt3dadd( -39.1414, -38.1943, -139.225, 0.12 ) }
    dend_52 { pt3dadd( -39.159, -38.8698, -139.513, 2.4 ) }
    dend_52 { pt3dadd( -39.1825, -40.44, -140.098, 0.12 ) }
    dend_52 { pt3dadd( -39.1796, -41.4279, -140.421, 0.12 ) }
    dend_52 { pt3dadd( -39.1596, -41.8396, -140.537, 0.6 ) }
    dend_52 { pt3dadd( -39.132, -42.1337, -140.624, 0.12 ) }
    dend_52 { pt3dadd( -39.0639, -42.7167, -140.786, 0.12 ) }
    dend_52 { pt3dadd( -39.0379, -42.9029, -140.837, 0.48 ) }
    dend_52 { pt3dadd( -38.9409, -43.4436, -141.037, 0.12 ) }
    dend_52 { pt3dadd( -38.7016, -44.6931, -141.624, 0.12 ) }
    dend_52 { pt3dadd( -38.514, -45.645, -142.11, 1.68 ) }
    dend_52 { pt3dadd( -38.4401, -46.0158, -142.309, 2.16 ) }
    dend_52 { pt3dadd( -38.3726, -46.3193, -142.472, 2.16 ) }
    dend_52 { pt3dadd( -37.9576, -47.9884, -143.372, 0.12 ) }
    dend_52 { pt3dadd( -37.8251, -48.4959, -143.635, 0.12 ) }
    dend_52 { pt3dadd( -37.7588, -48.7527, -143.775, 0.48 ) }
    dend_52 { pt3dadd( -37.7383, -48.8389, -143.815, 0.12 ) }
    dend_52 { pt3dadd( -37.5752, -49.633, -144.142, 0.12 ) }
    dend_52 { pt3dadd( -37.4714, -50.3849, -144.371, 0.12 ) }
    dend_52 { pt3dadd( -37.4463, -50.9064, -144.527, 1.68 ) }
    dend_52 { pt3dadd( -37.4525, -51.2687, -144.666, 1.92 ) }
    dend_52 { pt3dadd( -37.5102, -52.0124, -144.98, 0.12 ) }
    dend_52 { pt3dadd( -37.5779, -52.4856, -145.188, 0.12 ) }
    dend_52 { pt3dadd( -37.7052, -53.0454, -145.43, 1.32 ) }
    dend_52 { pt3dadd( -38.0776, -54.504, -146.08, 0.12 ) }
    dend_52 { pt3dadd( -38.2186, -55.04, -146.34, 0.12 ) }
    dend_52 { pt3dadd( -38.318, -55.4031, -146.551, 0.48 ) }
    dend_52 { pt3dadd( -38.3959, -55.6495, -146.712, 0.12 ) }
    dend_52 { pt3dadd( -38.5998, -56.2204, -147.148, 0.12 ) }
    dend_52 { pt3dadd( -38.8937, -56.953, -147.722, 0.12 ) }
    dend_52 { pt3dadd( -38.9742, -57.1144, -147.852, 0.96 ) }
    dend_52 { pt3dadd( -39.4175, -57.8425, -148.458, 0.12 ) }
    dend_52 { pt3dadd( -39.6034, -58.1171, -148.684, 0.12 ) }
    dend_52 { pt3dadd( -40.0526, -58.7192, -149.164, 1.44 ) }
    dend_52 { pt3dadd( -40.452, -59.2138, -149.523, 1.8 ) }
    dend_52 { pt3dadd( -41.0949, -59.9631, -149.962, 0.12 ) }
    dend_52 { pt3dadd( -41.9105, -60.8885, -150.404, 0.12 ) }
    dend_52 { pt3dadd( -42.1116, -61.1088, -150.482, 0.48 ) }
    dend_52 { pt3dadd( -42.245, -61.251, -150.525, 0.12 ) }
    dend_52 { pt3dadd( -42.6092, -61.6445, -150.607, 0.12 ) }
    dend_52 { pt3dadd( -42.874, -61.9338, -150.657, 1.08 ) }
    dend_52 { pt3dadd( -43.1961, -62.2984, -150.689, 1.68 ) }
    dend_52 { pt3dadd( -43.7996, -62.9829, -150.716, 0.12 ) }
    dend_52 { pt3dadd( -44.0597, -63.2808, -150.722, 0.12 ) }
    dend_52 { pt3dadd( -44.229, -63.4931, -150.723, 0.48 ) }
    dend_52 { pt3dadd( -44.3468, -63.6549, -150.719, 0.12 ) }
    dend_52 { pt3dadd( -44.7821, -64.3479, -150.755, 0.12 ) }
    dend_52 { pt3dadd( -45.2032, -65.1945, -150.834, 1.68 ) }
    dend_52 { pt3dadd( -45.4392, -65.8807, -150.952, 0.12 ) }
    dend_52 { pt3dadd( -45.6073, -66.567, -151.134, 0.12 ) }
    dend_52 { pt3dadd( -45.6921, -67.0759, -151.302, 0.6 ) }
    dend_52 { pt3dadd( -45.7988, -68.1941, -151.723, 0.12 ) }
    dend_52 { pt3dadd( -45.8081, -68.9545, -152.035, 0.12 ) }
    dend_52 { pt3dadd( -45.7742, -70.0027, -152.532, 0.12 ) }
    dend_52 { pt3dadd( -45.7581, -70.373, -152.707, 0.12 ) }
    dend_52 { pt3dadd( -45.7464, -70.7599, -152.887, 1.68 ) }
    dend_52 { pt3dadd( -45.7397, -71.1413, -153.043, 2.28 ) }
    dend_52 { pt3dadd( -45.7617, -71.8412, -153.259, 1.56 ) }
    dend_52 { pt3dadd( -45.8461, -72.7908, -153.5, 0.12 ) }
    dend_52 { pt3dadd( -45.8992, -73.2704, -153.557, 0.12 ) }
    dend_52 { pt3dadd( -45.9465, -73.6929, -153.601, 0.12 ) }
    dend_52 { pt3dadd( -45.9998, -74.1734, -153.65, 1.32 ) }
    dend_52 { pt3dadd( -46.0432, -74.5704, -153.684, 1.56 ) }
    dend_52 { pt3dadd( -46.1101, -75.1689, -153.73, 0.12 ) }
    dend_52 { pt3dadd( -46.2745, -76.7534, -153.807, 0.12 ) }
    dend_52 { pt3dadd( -46.3712, -77.7201, -153.864, 1.8 ) }
    dend_52 { pt3dadd( -46.3946, -78.0627, -153.886, 2.52 ) }
    dend_52 { pt3dadd( -46.4145, -78.3423, -153.905, 2.52 ) }
    dend_52 { pt3dadd( -46.4754, -79.242, -153.982, 0.12 ) }
    dend_52 { pt3dadd( -46.5495, -80.415, -154.098, 0.12 ) }
    dend_52 { pt3dadd( -46.5823, -80.9794, -154.147, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( -46.6093, -81.6789, -154.185, 2.04 ) }
    dend_52 { pt3dadd( -46.6269, -82.4568, -154.227, 2.04 ) }
    dend_52 { pt3dadd( -46.6331, -83.5539, -154.282, 0.12 ) }
    dend_52 { pt3dadd( -46.6197, -84.2348, -154.303, 0.12 ) }
    dend_52 { pt3dadd( -46.5899, -84.6629, -154.314, 0.72 ) }
    dend_52 { pt3dadd( -46.5629, -84.8796, -154.307, 0.12 ) }
    dend_52 { pt3dadd( -46.4781, -85.3891, -154.256, 0.12 ) }
    dend_52 { pt3dadd( -46.4278, -85.5992, -154.221, 0.48 ) }
    dend_52 { pt3dadd( -46.3494, -85.8868, -154.18, 0.12 ) }
    dend_52 { pt3dadd( -46.0306, -86.9157, -154.114, 0.12 ) }
    dend_52 { pt3dadd( -45.7963, -87.5996, -154.108, 1.56 ) }
    dend_52 { pt3dadd( -45.6754, -87.9291, -154.12, 1.8 ) }
    dend_52 { pt3dadd( -45.5199, -88.3133, -154.151, 1.8 ) }
    dend_52 { pt3dadd( -44.9998, -89.5419, -154.3, 0.12 ) }
    dend_52 { pt3dadd( -44.651, -90.3369, -154.435, 0.12 ) }
    dend_52 { pt3dadd( -44.651, -90.3369, -154.435, 0.48 ) }
    dend_52 { pt3dadd( -44.5688, -90.5049, -154.492, 0.12 ) }
    dend_52 { pt3dadd( -44.3014, -90.9854, -154.694, 0.12 ) }
    dend_52 { pt3dadd( -44.1938, -91.1543, -154.78, 0.48 ) }
    dend_52 { pt3dadd( -44.0916, -91.3109, -154.86, 0.12 ) }
    dend_52 { pt3dadd( -43.6361, -92.0258, -155.344, 0.12 ) }
    dend_52 { pt3dadd( -43.0691, -92.9487, -155.997, 0.48 ) }
    dend_52 { pt3dadd( -42.9107, -93.2202, -156.168, 0.12 ) }
    dend_52 { pt3dadd( -42.5703, -93.8104, -156.514, 1.56 ) }
    dend_52 { pt3dadd( -42.264, -94.3475, -156.8, 1.92 ) }
    dend_52 { pt3dadd( -41.8035, -95.162, -157.182, 1.56 ) }
    dend_52 { pt3dadd( -41.579, -95.5596, -157.367, 0.12 ) }
    dend_52 { pt3dadd( -40.6034, -97.3927, -158.08, 0.12 ) }
    dend_52 { pt3dadd( -40.4707, -97.6465, -158.173, 0.84 ) }
    dend_52 { pt3dadd( -40.3324, -97.9142, -158.268, 0.12 ) }
    dend_52 { pt3dadd( -40.1124, -98.3269, -158.415, 0.12 ) }
    dend_52 { pt3dadd( -39.4251, -99.5756, -158.813, 0.12 ) }
    dend_52 { pt3dadd( -38.7899, -100.706, -159.273, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -54.8387, 20.2324, -80.6614, 0.12 ) }
    dend_51 { pt3dadd( -55.8076, 20.5372, -81.9276, 0.12 ) }
    dend_51 { pt3dadd( -56.494, 20.7748, -82.8262, 0.12 ) }
    dend_51 { pt3dadd( -57.655, 21.2394, -84.2169, 2.4 ) }
    dend_51 { pt3dadd( -59.5728, 22.0579, -86.523, 0.24 ) }
    dend_51 { pt3dadd( -59.9647, 22.2311, -86.9795, 0.24 ) }
    dend_51 { pt3dadd( -60.3691, 22.4199, -87.432, 1.44 ) }
    dend_51 { pt3dadd( -61.1947, 22.8262, -88.3386, 0.12 ) }
    dend_51 { pt3dadd( -62.1221, 23.3475, -89.3564, 0.12 ) }
    dend_51 { pt3dadd( -62.9257, 23.853, -90.1276, 0.12 ) }
    dend_51 { pt3dadd( -63.7121, 24.3526, -90.8314, 2.28 ) }
    dend_51 { pt3dadd( -64.6705, 24.9574, -91.738, 0.12 ) }
    dend_51 { pt3dadd( -65.4536, 25.4361, -92.4674, 0.12 ) }
    dend_51 { pt3dadd( -66.4962, 26.0691, -93.4053, 0.12 ) }
    dend_51 { pt3dadd( -67.655, 26.7606, -94.4262, 2.76 ) }
    dend_51 { pt3dadd( -69.0721, 27.5917, -95.653, 0.24 ) }
    dend_51 { pt3dadd( -69.0721, 27.5917, -95.653, 0.12 ) }
    dend_51 { pt3dadd( -69.8917, 28.0846, -96.3424, 0.12 ) }
    dend_51 { pt3dadd( -70.2809, 28.3197, -96.6707, 0.96 ) }
    dend_51 { pt3dadd( -70.7812, 28.6246, -97.0382, 0.96 ) }
    dend_51 { pt3dadd( -71.8767, 29.3182, -97.8144, 0.12 ) }
    dend_51 { pt3dadd( -72.9041, 30.0595, -98.5866, 0.12 ) }
    dend_51 { pt3dadd( -73.2568, 30.3401, -98.8766, 0.72 ) }
    dend_51 { pt3dadd( -73.8268, 30.82, -99.4239, 0.12 ) }
    dend_51 { pt3dadd( -74.4169, 31.3269, -100.007, 0.12 ) }
    dend_51 { pt3dadd( -75.0582, 31.8864, -100.6, 2.16 ) }
    dend_51 { pt3dadd( -76.2435, 32.9101, -101.775, 0.12 ) }
    dend_51 { pt3dadd( -76.5905, 33.2045, -102.155, 0.12 ) }
    dend_51 { pt3dadd( -77.3583, 33.8497, -103.032, 0.12 ) }
    dend_51 { pt3dadd( -77.86, 34.2719, -103.594, 0.12 ) }
    dend_51 { pt3dadd( -78.4713, 34.7819, -104.354, 1.44 ) }
    dend_51 { pt3dadd( -79.8796, 36.0008, -106.175, 0.12 ) }
    dend_51 { pt3dadd( -80.356, 36.4093, -106.753, 0.12 ) }
    dend_51 { pt3dadd( -80.7115, 36.7268, -107.189, 1.56 ) }
    dend_51 { pt3dadd( -81.1139, 37.1096, -107.679, 1.56 ) }
    dend_51 { pt3dadd( -81.9982, 37.9579, -108.777, 0.12 ) }
    dend_51 { pt3dadd( -82.382, 38.337, -109.256, 0.12 ) }
    dend_51 { pt3dadd( -82.7214, 38.6739, -109.596, 0.12 ) }
    dend_51 { pt3dadd( -82.9168, 38.8476, -109.807, 0.12 ) }
    dend_51 { pt3dadd( -83.6924, 39.4558, -110.602, 0.12 ) }
    dend_51 { pt3dadd( -84.0289, 39.683, -110.942, 0.12 ) }
    dend_51 { pt3dadd( -84.6084, 40.0105, -111.468, 1.92 ) }
    dend_51 { pt3dadd( -85.0089, 40.2075, -111.855, 2.16 ) }
    dend_51 { pt3dadd( -86.3885, 40.795, -113.166, 0.12 ) }
    dend_51 { pt3dadd( -86.9314, 40.9909, -113.644, 0.12 ) }
    dend_51 { pt3dadd( -87.3716, 41.127, -114.019, 1.08 ) }
    dend_51 { pt3dadd( -87.888, 41.2443, -114.456, 1.32 ) }
    dend_51 { pt3dadd( -88.7745, 41.3685, -115.182, 0.12 ) }
    dend_51 { pt3dadd( -89.3887, 41.4028, -115.675, 0.12 ) }
    dend_51 { pt3dadd( -89.8457, 41.3853, -116.033, 0.48 ) }
    dend_51 { pt3dadd( -90.2918, 41.3275, -116.4, 0.12 ) }
    dend_51 { pt3dadd( -91.2908, 41.174, -117.224, 0.12 ) }
    dend_51 { pt3dadd( -91.9131, 41.0803, -117.744, 1.44 ) }
    dend_51 { pt3dadd( -92.2715, 41.0411, -118.044, 1.68 ) }
    dend_51 { pt3dadd( -93.3914, 41.0128, -119.015, 0.12 ) }
    dend_51 { pt3dadd( -94.2323, 41.053, -119.712, 0.12 ) }
    dend_51 { pt3dadd( -94.9295, 41.1461, -120.245, 1.8 ) }
    dend_51 { pt3dadd( -95.621, 41.3109, -120.725, 2.16 ) }
    dend_51 { pt3dadd( -96.7073, 41.6155, -121.404, 0.12 ) }
    dend_51 { pt3dadd( -97.376, 41.8021, -121.849, 0.12 ) }
    dend_51 { pt3dadd( -97.8907, 41.9284, -122.169, 0.48 ) }
    dend_51 { pt3dadd( -97.9821, 41.9466, -122.223, 0.12 ) }
    dend_51 { pt3dadd( -98.5165, 41.9973, -122.56, 0.12 ) }
    dend_51 { pt3dadd( -99.3586, 42.0084, -123.152, 1.68 ) }
    dend_51 { pt3dadd( -101.052, 41.9346, -124.427, 0.12 ) }
    dend_51 { pt3dadd( -101.722, 41.8893, -124.954, 0.12 ) }
    dend_51 { pt3dadd( -102.136, 41.8804, -125.289, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -102.894, 41.906, -125.877, 0.12 ) }
    dend_51 { pt3dadd( -103.406, 41.9518, -126.272, 0.12 ) }
    dend_51 { pt3dadd( -104.018, 42.0498, -126.739, 1.56 ) }
    dend_51 { pt3dadd( -104.533, 42.1502, -127.094, 2.28 ) }
    dend_51 { pt3dadd( -105.749, 42.4254, -127.87, 0.12 ) }
    dend_51 { pt3dadd( -106.312, 42.5448, -128.206, 0.12 ) }
    dend_51 { pt3dadd( -106.702, 42.6168, -128.393, 0.48 ) }
    dend_51 { pt3dadd( -107.381, 42.7219, -128.674, 0.12 ) }
    dend_51 { pt3dadd( -107.867, 42.7791, -128.868, 0.12 ) }
    dend_51 { pt3dadd( -109.041, 42.852, -129.296, 2.16 ) }
    dend_51 { pt3dadd( -110.61, 42.8335, -129.755, 0.12 ) }
    dend_51 { pt3dadd( -111.688, 42.7685, -130.023, 0.12 ) }
    dend_51 { pt3dadd( -112.294, 42.7104, -130.18, 0.6 ) }
    dend_51 { pt3dadd( -112.691, 42.658, -130.287, 0.12 ) }
    dend_51 { pt3dadd( -113.474, 42.5329, -130.496, 0.12 ) }
    dend_51 { pt3dadd( -114.405, 42.3661, -130.736, 2.4 ) }
    dend_51 { pt3dadd( -114.859, 42.2914, -130.824, 2.4 ) }
    dend_51 { pt3dadd( -116.514, 42.0356, -131.121, 0.12 ) }
    dend_51 { pt3dadd( -117.886, 41.8486, -131.314, 0.12 ) }
    dend_51 { pt3dadd( -118.777, 41.7427, -131.406, 1.68 ) }
    dend_51 { pt3dadd( -119.455, 41.6656, -131.454, 2.16 ) }
    dend_51 { pt3dadd( -120.842, 41.5087, -131.469, 0.12 ) }
    dend_51 { pt3dadd( -121.674, 41.4167, -131.421, 0.12 ) }
    dend_51 { pt3dadd( -122.334, 41.3409, -131.323, 0.6 ) }
    dend_51 { pt3dadd( -122.563, 41.3125, -131.286, 0.12 ) }
    dend_51 { pt3dadd( -123.837, 41.1439, -131.13, 0.12 ) }
    dend_51 { pt3dadd( -124.366, 41.0736, -131.03, 0.84 ) }
    dend_51 { pt3dadd( -124.87, 41.0104, -130.9, 1.08 ) }
    dend_51 { pt3dadd( -125.123, 40.9869, -130.839, 1.08 ) }
    dend_51 { pt3dadd( -125.51, 40.9666, -130.757, 0.12 ) }
    dend_51 { pt3dadd( -126.237, 40.9663, -130.607, 0.12 ) }
    dend_51 { pt3dadd( -127.129, 41.0007, -130.427, 1.44 ) }
    dend_51 { pt3dadd( -127.83, 41.0215, -130.301, 1.68 ) }
    dend_51 { pt3dadd( -128.589, 41.0421, -130.163, 0.12 ) }
    dend_51 { pt3dadd( -129.698, 41.0679, -129.982, 0.12 ) }
    dend_51 { pt3dadd( -129.966, 41.0699, -129.944, 1.32 ) }
    dend_51 { pt3dadd( -130.577, 41.0551, -129.888, 0.12 ) }
    dend_51 { pt3dadd( -131.045, 41.0324, -129.857, 0.12 ) }
    dend_51 { pt3dadd( -131.304, 41.0063, -129.83, 0.36 ) }
    dend_51 { pt3dadd( -131.715, 40.9224, -129.771, 0.12 ) }
    dend_51 { pt3dadd( -132.272, 40.7673, -129.684, 0.12 ) }
    dend_51 { pt3dadd( -132.714, 40.6307, -129.612, 0.48 ) }
    dend_51 { pt3dadd( -133.369, 40.4094, -129.519, 0.12 ) }
    dend_51 { pt3dadd( -134.242, 40.0918, -129.41, 0.12 ) }
    dend_51 { pt3dadd( -134.902, 39.8365, -129.336, 1.8 ) }
    dend_51 { pt3dadd( -135.361, 39.6479, -129.291, 2.64 ) }
    dend_51 { pt3dadd( -135.682, 39.5098, -129.268, 2.64 ) }
    dend_51 { pt3dadd( -136.763, 39.0155, -129.227, 0.12 ) }
    dend_51 { pt3dadd( -137.708, 38.5529, -129.229, 0.12 ) }
    dend_51 { pt3dadd( -138.13, 38.3497, -129.233, 0.12 ) }
    dend_51 { pt3dadd( -138.47, 38.1891, -129.237, 0.48 ) }
    dend_51 { pt3dadd( -138.681, 38.0895, -129.233, 0.12 ) }
    dend_51 { pt3dadd( -139.123, 37.8975, -129.211, 0.12 ) }
    dend_51 { pt3dadd( -139.561, 37.7375, -129.169, 0.6 ) }
    dend_51 { pt3dadd( -139.967, 37.6322, -129.127, 0.12 ) }
    dend_51 { pt3dadd( -140.54, 37.5252, -129.07, 0.12 ) }
    dend_51 { pt3dadd( -141.026, 37.4588, -128.992, 0.72 ) }
    dend_51 { pt3dadd( -141.543, 37.4071, -128.893, 0.96 ) }
    dend_51 { pt3dadd( -142.167, 37.3815, -128.799, 0.12 ) }
    dend_51 { pt3dadd( -142.915, 37.3809, -128.719, 0.12 ) }
    dend_51 { pt3dadd( -143.395, 37.3889, -128.677, 1.2 ) }
    dend_51 { pt3dadd( -144.289, 37.4349, -128.62, 1.56 ) }
    dend_51 { pt3dadd( -144.919, 37.4913, -128.615, 1.68 ) }
    dend_51 { pt3dadd( -146.08, 37.6657, -128.66, 0.12 ) }
    dend_51 { pt3dadd( -147.114, 37.8623, -128.731, 0.12 ) }
    dend_51 { pt3dadd( -147.645, 37.9718, -128.866, 1.56 ) }
    dend_51 { pt3dadd( -148.263, 38.1117, -129.053, 1.56 ) }
    dend_51 { pt3dadd( -148.994, 38.2908, -129.318, 0.12 ) }
    dend_51 { pt3dadd( -151.337, 38.9069, -130.249, 0.12 ) }
    dend_51 { pt3dadd( -151.634, 38.9889, -130.378, 0.48 ) }
    dend_51 { pt3dadd( -154.311, 39.7961, -131.85, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -22.3894, -187.057, -22.7716, 3.37 ) }
    dend_47 { pt3dadd( -21.8823, -187.586, -21.3111, 3.37 ) }
    dend_47 { pt3dadd( -20.3598, -188.96, -17.2579, 0.12 ) }
    dend_47 { pt3dadd( -20.2331, -189.04, -16.9918, 0.12 ) }
    dend_47 { pt3dadd( -19.8401, -189.243, -16.2751, 0.12 ) }
    dend_47 { pt3dadd( -19.5653, -189.355, -15.8441, 0.72 ) }
    dend_47 { pt3dadd( -19.2092, -189.471, -15.3616, 0.72 ) }
    dend_47 { pt3dadd( -18.979, -189.504, -15.1639, 0.12 ) }
    dend_47 { pt3dadd( -17.3314, -189.503, -14.3648, 0.12 ) }
    dend_47 { pt3dadd( -17.1628, -189.522, -14.2432, 0.96 ) }
    dend_47 { pt3dadd( -16.6912, -189.692, -13.7047, 0.96 ) }
    dend_47 { pt3dadd( -16.2305, -190.053, -12.703, 0.12 ) }
    dend_47 { pt3dadd( -16.1754, -190.145, -12.4516, 0.12 ) }
    dend_47 { pt3dadd( -16.1544, -190.308, -11.9864, 0.84 ) }
    dend_47 { pt3dadd( -16.343, -191.247, -9.39085, 0.24 ) }
    dend_47 { pt3dadd( -16.5055, -191.799, -7.9553, 1.92 ) }
    dend_47 { pt3dadd( -16.8404, -192.673, -5.87363, 0.24 ) }
    dend_47 { pt3dadd( -17.0177, -193.068, -5.0176, 1.68 ) }
    dend_47 { pt3dadd( -17.5413, -194.197, -2.79438, 1.68 ) }
    dend_47 { pt3dadd( -17.7023, -194.528, -2.22839, 0.12 ) }
    dend_47 { pt3dadd( -17.9026, -194.943, -1.71645, 0.12 ) }
    dend_47 { pt3dadd( -18.0626, -195.334, -1.37809, 0.6 ) }
    dend_47 { pt3dadd( -18.2388, -195.927, -1.06119, 1.08 ) }
    dend_47 { pt3dadd( -18.4304, -196.694, -0.764445, 1.08 ) }
    dend_47 { pt3dadd( -18.7261, -197.828, -0.51726, 0.12 ) }
    dend_47 { pt3dadd( -18.8979, -198.49, -0.375654, 0.12 ) }
    dend_47 { pt3dadd( -19.0548, -199.162, -0.248423, 0.12 ) }
    dend_47 { pt3dadd( -19.1892, -199.839, -0.143311, 0.12 ) }
    dend_47 { pt3dadd( -19.2836, -200.517, -0.0694239, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( -19.3367, -201.091, -0.0461981, 0.96 ) }
    dend_47 { pt3dadd( -19.3816, -201.796, -0.0477736, 0.12 ) }
    dend_47 { pt3dadd( -19.4455, -202.668, -0.0492871, 0.12 ) }
    dend_47 { pt3dadd( -19.5014, -203.169, -0.032871, 1.32 ) }
    dend_47 { pt3dadd( -19.5561, -203.476, -0.0131173, 1.32 ) }
    dend_47 { pt3dadd( -19.753, -204.379, 0.0697479, 0.12 ) }
    dend_47 { pt3dadd( -19.971, -205.184, 0.161489, 0.12 ) }
    dend_47 { pt3dadd( -20.0249, -205.372, 0.185097, 0.48 ) }
    dend_47 { pt3dadd( -20.1956, -205.989, 0.272005, 0.12 ) }
    dend_47 { pt3dadd( -20.2555, -206.293, 0.314068, 0.12 ) }
    dend_47 { pt3dadd( -20.3002, -206.695, 0.367279, 0.12 ) }
    dend_47 { pt3dadd( -20.2621, -206.984, 0.478007, 0.48 ) }
    dend_47 { pt3dadd( -20.1627, -207.513, 0.785717, 0.36 ) }
    dend_47 { pt3dadd( -20.1112, -207.902, 0.960332, 0.36 ) }
    dend_47 { pt3dadd( -20.0736, -208.275, 1.08065, 1.2 ) }
    dend_47 { pt3dadd( -20.0394, -208.679, 1.18638, 1.2 ) }
    dend_47 { pt3dadd( -19.8824, -210.754, 1.84542, 0.12 ) }
    dend_47 { pt3dadd( -19.8129, -211.522, 2.0962, 0.12 ) }
    dend_47 { pt3dadd( -19.7084, -213.19, 2.64727, 0.12 ) }
    dend_47 { pt3dadd( -19.678, -214.021, 2.90895, 0.12 ) }
    dend_47 { pt3dadd( -19.6765, -214.576, 3.06049, 0.12 ) }
    dend_47 { pt3dadd( -19.7106, -215.84, 3.28902, 1.32 ) }
    dend_47 { pt3dadd( -19.7294, -216.838, 3.24325, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -22.3894, -187.057, -22.7716, 0.12 ) }
    dend_46 { pt3dadd( -24.4535, -188.215, -22.5129, 0.12 ) }
    dend_46 { pt3dadd( -25.8232, -188.983, -22.3412, 0.12 ) }
    dend_46 { pt3dadd( -26.2566, -189.226, -22.2869, 0.96 ) }
    dend_46 { pt3dadd( -26.7674, -189.513, -22.2229, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -11.5321, -182.494, -28.9157, 0.12 ) }
    dend_44 { pt3dadd( -11.0872, -183.351, -28.8505, 0.12 ) }
    dend_44 { pt3dadd( -10.7807, -184.068, -28.7939, 0.12 ) }
    dend_44 { pt3dadd( -10.496, -184.741, -28.7462, 0.72 ) }
    dend_44 { pt3dadd( -10.1281, -185.612, -28.7058, 0.84 ) }
    dend_44 { pt3dadd( -9.91908, -186.088, -28.6695, 0.48 ) }
    dend_44 { pt3dadd( -9.77184, -186.413, -28.6406, 0.12 ) }
    dend_44 { pt3dadd( -9.44681, -187.115, -28.5675, 0.12 ) }
    dend_44 { pt3dadd( -9.23645, -187.568, -28.505, 0.12 ) }
    dend_44 { pt3dadd( -9.02994, -187.981, -28.4508, 0.84 ) }
    dend_44 { pt3dadd( -8.64944, -188.794, -28.4368, 0.36 ) }
    dend_44 { pt3dadd( -8.47108, -189.19, -28.4477, 0.12 ) }
    dend_44 { pt3dadd( -8.04634, -190.137, -28.5078, 0.12 ) }
    dend_44 { pt3dadd( -7.68232, -190.957, -28.5892, 1.8 ) }
    dend_44 { pt3dadd( -7.40639, -191.682, -28.6789, 1.56 ) }
    dend_44 { pt3dadd( -6.97605, -192.96, -28.8781, 0.12 ) }
    dend_44 { pt3dadd( -6.90972, -193.191, -28.9282, 0.12 ) }
    dend_44 { pt3dadd( -6.87939, -193.308, -28.9546, 0.36 ) }
    dend_44 { pt3dadd( -6.78807, -193.722, -29.0525, 0.12 ) }
    dend_44 { pt3dadd( -6.67692, -194.455, -29.1978, 0.12 ) }
    dend_44 { pt3dadd( -6.64818, -194.698, -29.2277, 0.12 ) }
    dend_44 { pt3dadd( -6.5981, -195.081, -29.2495, 0.72 ) }
    dend_44 { pt3dadd( -6.52937, -195.693, -29.2832, 0.96 ) }
    dend_44 { pt3dadd( -6.48173, -196.174, -29.307, 0.12 ) }
    dend_44 { pt3dadd( -6.35636, -197.643, -29.3735, 0.12 ) }
    dend_44 { pt3dadd( -6.32146, -198.125, -29.3937, 0.84 ) }
    dend_44 { pt3dadd( -6.29492, -198.633, -29.4217, 0.12 ) }
    dend_44 { pt3dadd( -6.28477, -199.239, -29.456, 0.12 ) }
    dend_44 { pt3dadd( -6.28643, -199.635, -29.479, 0.96 ) }
    dend_44 { pt3dadd( -6.28911, -200.133, -29.5115, 0.12 ) }
    dend_44 { pt3dadd( -6.30165, -200.985, -29.5791, 0.12 ) }
    dend_44 { pt3dadd( -6.32176, -201.805, -29.6534, 1.68 ) }
    dend_44 { pt3dadd( -6.33911, -202.152, -29.6901, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -11.5321, -182.494, -28.9157, 0.6 ) }
    dend_43 { pt3dadd( -11.1787, -181.917, -25.332, 0.6 ) }
    dend_43 { pt3dadd( -11.0156, -182.239, -25.8163, 0.6 ) }
    dend_43 { pt3dadd( -10.4678, -183.169, -26.9178, 0.12 ) }
    dend_43 { pt3dadd( -10.2385, -183.545, -27.3086, 0.12 ) }
    dend_43 { pt3dadd( -9.95193, -184.014, -27.797, 0.96 ) }
    dend_43 { pt3dadd( -9.66429, -184.484, -28.2873, 0.96 ) }
    dend_43 { pt3dadd( -9.0315, -185.58, -29.6107, 0.12 ) }
    dend_43 { pt3dadd( -8.78068, -186.051, -30.1843, 0.12 ) }
    dend_43 { pt3dadd( -8.64528, -186.296, -30.4584, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 22.7766, -91.8021, -41.6044, 0.12 ) }
    dend_40 { pt3dadd( 23.1698, -92.8026, -40.0855, 0.12 ) }
    dend_40 { pt3dadd( 23.2645, -93.0249, -39.756, 0.12 ) }
    dend_40 { pt3dadd( 23.3114, -93.1287, -39.6101, 0.6 ) }
    dend_40 { pt3dadd( 23.4538, -93.4132, -39.2122, 0.12 ) }
    dend_40 { pt3dadd( 23.7311, -93.9149, -38.5157, 0.12 ) }
    dend_40 { pt3dadd( 23.8099, -94.0518, -38.3241, 0.12 ) }
    dend_40 { pt3dadd( 23.8803, -94.1455, -38.2071, 0.12 ) }
    dend_40 { pt3dadd( 23.9801, -94.2777, -38.0484, 0.12 ) }
    dend_40 { pt3dadd( 24.2197, -94.5995, -37.6692, 0.12 ) }
    dend_40 { pt3dadd( 24.2984, -94.7055, -37.5579, 0.6 ) }
    dend_40 { pt3dadd( 24.4699, -94.9566, -37.3676, 0.12 ) }
    dend_40 { pt3dadd( 24.6374, -95.2176, -37.1633, 0.12 ) }
    dend_40 { pt3dadd( 24.8608, -95.546, -36.8932, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 22.7766, -91.8021, -41.6044, 0.24 ) }
    dend_35 { pt3dadd( 22.7573, -93.437, -42.3334, 0.24 ) }
    dend_35 { pt3dadd( 22.6564, -94.8945, -43.0269, 0.24 ) }
    dend_35 { pt3dadd( 22.5854, -95.5672, -43.3479, 0.96 ) }
    dend_35 { pt3dadd( 22.439, -96.7321, -43.9017, 1.8 ) }
    dend_35 { pt3dadd( 22.3253, -97.8718, -44.5108, 0.84 ) }
    dend_35 { pt3dadd( 22.2568, -98.5998, -44.9466, 0.12 ) }
    dend_35 { pt3dadd( 22.1676, -99.6976, -45.7356, 0.12 ) }
    dend_35 { pt3dadd( 22.1075, -100.263, -46.1757, 0.72 ) }
    dend_35 { pt3dadd( 22.0894, -100.396, -46.2703, 0.72 ) }
    dend_35 { pt3dadd( 21.9328, -101.791, -47.1565, 0.24 ) }
    dend_35 { pt3dadd( 21.8954, -102.398, -47.4478, 0.24 ) }
    dend_35 { pt3dadd( 21.8737, -103.418, -47.8078, 0.24 ) }
    dend_35 { pt3dadd( 21.8643, -104.487, -48.0588, 0.24 ) }
    dend_35 { pt3dadd( 21.8242, -105.481, -48.2032, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 21.7299, -106.618, -48.3022, 0.24 ) }
    dend_35 { pt3dadd( 21.5818, -107.75, -48.2908, 1.44 ) }
    dend_35 { pt3dadd( 21.3997, -108.983, -48.224, 1.92 ) }
    dend_35 { pt3dadd( 21.1805, -110.193, -48.1321, 1.92 ) }
    dend_35 { pt3dadd( 20.9338, -111.413, -48.046, 1.2 ) }
    dend_35 { pt3dadd( 20.6648, -112.666, -47.99, 0.48 ) }
    dend_35 { pt3dadd( 20.3793, -113.883, -47.957, 0.12 ) }
    dend_35 { pt3dadd( 20.1724, -114.761, -47.9144, 0.12 ) }
    dend_35 { pt3dadd( 20.0512, -115.303, -47.8918, 0.6 ) }
    dend_35 { pt3dadd( 19.9146, -115.985, -47.8876, 0.12 ) }
    dend_35 { pt3dadd( 19.6725, -117.407, -47.8669, 0.12 ) }
    dend_35 { pt3dadd( 19.5836, -118.124, -47.8664, 0.12 ) }
    dend_35 { pt3dadd( 19.3604, -120.661, -48.0286, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 40.5735, -40.7037, -12.2578, 0.96 ) }
    dend_33 { pt3dadd( 38.1016, -39.4124, -3.36554, 0.96 ) }
    dend_33 { pt3dadd( 37.834, -39.1925, -2.40959, 0.72 ) }
    dend_33 { pt3dadd( 37.6857, -39.0095, -1.87625, 0.24 ) }
    dend_33 { pt3dadd( 37.5583, -38.753, -1.3459, 0.24 ) }
    dend_33 { pt3dadd( 37.4445, -38.3011, -0.664153, 0.24 ) }
    dend_33 { pt3dadd( 37.37, -37.6695, 0.147806, 0.84 ) }
    dend_33 { pt3dadd( 37.536, -36.6605, 0.743088, 1.2 ) }
    dend_33 { pt3dadd( 37.7167, -35.7668, 1.34505, 0.48 ) }
    dend_33 { pt3dadd( 37.9571, -34.6632, 2.24841, 0.24 ) }
    dend_33 { pt3dadd( 38.252, -33.5713, 3.26363, 0.24 ) }
    dend_33 { pt3dadd( 38.68, -32.2604, 4.65901, 1.68 ) }
    dend_33 { pt3dadd( 38.9175, -31.6146, 5.38593, 2.28 ) }
    dend_33 { pt3dadd( 39.0999, -31.1494, 5.93183, 2.4 ) }
    dend_33 { pt3dadd( 39.6879, -29.6413, 7.72518, 0.36 ) }
    dend_33 { pt3dadd( 39.9037, -29.0449, 8.42264, 0.36 ) }
    dend_33 { pt3dadd( 40.187, -28.2085, 9.34158, 0.84 ) }
    dend_33 { pt3dadd( 40.5709, -26.9899, 10.5707, 0.84 ) }
    dend_33 { pt3dadd( 40.9277, -25.7341, 11.7763, 0.6 ) }
    dend_33 { pt3dadd( 41.2532, -24.5508, 12.8615, 0.6 ) }
    dend_33 { pt3dadd( 41.4667, -23.7849, 13.5058, 0.96 ) }
    dend_33 { pt3dadd( 41.6082, -23.1722, 14.003, 0.96 ) }
    dend_33 { pt3dadd( 41.8265, -22.003, 14.8875, 0.12 ) }
    dend_33 { pt3dadd( 41.9029, -21.4131, 15.3074, 0.12 ) }
    dend_33 { pt3dadd( 41.9609, -20.8981, 15.631, 0.12 ) }
    dend_33 { pt3dadd( 42.0236, -20.3273, 15.9518, 0.12 ) }
    dend_33 { pt3dadd( 42.0892, -19.7532, 16.277, 0.6 ) }
    dend_33 { pt3dadd( 42.1619, -19.2909, 16.5142, 0.96 ) }
    dend_33 { pt3dadd( 42.2998, -18.4968, 16.7504, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 40.5735, -40.7037, -12.2578, 0.12 ) }
    dend_30 { pt3dadd( 41.9483, -41.329, -11.6718, 0.12 ) }
    dend_30 { pt3dadd( 42.355, -41.502, -11.4959, 0.12 ) }
    dend_30 { pt3dadd( 42.8656, -41.7082, -11.2718, 0.6 ) }
    dend_30 { pt3dadd( 43.4963, -41.9363, -11.0013, 0.6 ) }
    dend_30 { pt3dadd( 44.4132, -42.2389, -10.6293, 0.12 ) }
    dend_30 { pt3dadd( 45.2739, -42.4793, -10.3042, 0.12 ) }
    dend_30 { pt3dadd( 45.3851, -42.4974, -10.2664, 0.36 ) }
    dend_30 { pt3dadd( 45.7489, -42.5325, -10.1525, 0.12 ) }
    dend_30 { pt3dadd( 46.25, -42.552, -9.97489, 0.12 ) }
    dend_30 { pt3dadd( 46.7012, -42.5215, -9.80959, 0.48 ) }
    dend_30 { pt3dadd( 47.3645, -42.4543, -9.58528, 0.6 ) }
    dend_30 { pt3dadd( 47.8219, -42.4105, -9.41824, 0.48 ) }
    dend_30 { pt3dadd( 48.2266, -42.3944, -9.2757, 0.48 ) }
    dend_30 { pt3dadd( 49.1621, -42.3989, -8.79002, 0.12 ) }
    dend_30 { pt3dadd( 50.0875, -42.4818, -8.21578, 2.04 ) }
    dend_30 { pt3dadd( 50.6093, -42.577, -7.86378, 3.25 ) }
    dend_30 { pt3dadd( 51.0851, -42.7281, -7.54141, 3.37 ) }
    dend_30 { pt3dadd( 51.6796, -42.989, -7.1556, 2.88 ) }
    dend_30 { pt3dadd( 53.5331, -44.0126, -6.01166, 0.24 ) }
    dend_30 { pt3dadd( 54.3085, -44.5286, -5.57357, 0.24 ) }
    dend_30 { pt3dadd( 54.7936, -44.9128, -5.30513, 0.72 ) }
    dend_30 { pt3dadd( 55.6502, -45.6182, -4.88365, 0.96 ) }
    dend_30 { pt3dadd( 56.2034, -46.0892, -4.66673, 0.24 ) }
    dend_30 { pt3dadd( 56.3872, -46.238, -4.63384, 0.24 ) }
    dend_30 { pt3dadd( 56.6653, -46.4276, -4.65537, 0.24 ) }
    dend_30 { pt3dadd( 57.32, -46.7297, -4.71896, 0.24 ) }
    dend_30 { pt3dadd( 57.8983, -46.8848, -4.76304, 1.2 ) }
    dend_30 { pt3dadd( 58.3668, -46.9546, -4.72163, 1.92 ) }
    dend_30 { pt3dadd( 59.3282, -47.0401, -4.53078, 1.92 ) }
    dend_30 { pt3dadd( 60.2946, -47.0948, -4.26872, 0.36 ) }
    dend_30 { pt3dadd( 60.8939, -47.1167, -4.0278, 0.36 ) }
    dend_30 { pt3dadd( 62.0721, -47.1387, -3.4578, 0.36 ) }
    dend_30 { pt3dadd( 63.9154, -47.1751, -2.46976, 1.68 ) }
    dend_30 { pt3dadd( 64.4803, -47.1934, -2.16802, 2.52 ) }
    dend_30 { pt3dadd( 65.3454, -47.2448, -1.70328, 2.64 ) }
    dend_30 { pt3dadd( 67.25, -47.4314, -0.79302, 0.24 ) }
    dend_30 { pt3dadd( 68.0834, -47.5448, -0.45783, 0.24 ) }
    dend_30 { pt3dadd( 68.6582, -47.6325, -0.292987, 0.36 ) }
    dend_30 { pt3dadd( 69.6676, -47.7961, -0.17333, 1.08 ) }
    dend_30 { pt3dadd( 70.1887, -47.8838, -0.115124, 1.08 ) }
    dend_30 { pt3dadd( 71.1182, -48.0239, -0.0419402, 0.48 ) }
    dend_30 { pt3dadd( 71.5909, -48.0759, -0.0355263, 0.24 ) }
    dend_30 { pt3dadd( 72.2508, -48.1008, 0.0503874, 0.24 ) }
    dend_30 { pt3dadd( 72.8248, -48.0665, 0.205394, 0.6 ) }
    dend_30 { pt3dadd( 73.9563, -47.9189, 0.667873, 0.36 ) }
    dend_30 { pt3dadd( 74.4934, -47.8652, 0.905739, 0.36 ) }
    dend_30 { pt3dadd( 74.9221, -47.8683, 1.14448, 0.36 ) }
    dend_30 { pt3dadd( 75.2222, -47.9151, 1.33151, 0.48 ) }
    dend_30 { pt3dadd( 75.4436, -47.9798, 1.46342, 0.24 ) }
    dend_30 { pt3dadd( 75.8461, -48.1273, 1.7011, 0.24 ) }
    dend_30 { pt3dadd( 76.5784, -48.4141, 2.04954, 0.24 ) }
    dend_30 { pt3dadd( 77.6361, -48.824, 2.49507, 0.24 ) }
    dend_30 { pt3dadd( 78.0791, -48.9923, 2.66107, 1.2 ) }
    dend_30 { pt3dadd( 78.8535, -49.2444, 2.91128, 2.16 ) }
    dend_30 { pt3dadd( 79.9841, -49.5429, 3.27686, 1.8 ) }
    dend_30 { pt3dadd( 80.8869, -49.7247, 3.55362, 0.36 ) }
    dend_30 { pt3dadd( 82.2011, -49.8905, 4.08398, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 82.7836, -49.9339, 4.34687, 0.36 ) }
    dend_30 { pt3dadd( 83.7367, -49.9707, 4.83829, 0.36 ) }
    dend_30 { pt3dadd( 84.6419, -49.9841, 5.44283, 1.56 ) }
    dend_30 { pt3dadd( 85.3249, -49.9823, 5.97576, 2.04 ) }
    dend_30 { pt3dadd( 87.1824, -49.9756, 7.65878, 0.24 ) }
    dend_30 { pt3dadd( 87.7104, -49.9845, 8.19488, 0.24 ) }
    dend_30 { pt3dadd( 87.9728, -49.9999, 8.4639, 0.24 ) }
    dend_30 { pt3dadd( 89.1589, -50.1663, 9.67388, 1.68 ) }
    dend_30 { pt3dadd( 89.5146, -50.2376, 10.0035, 2.04 ) }
    dend_30 { pt3dadd( 89.7807, -50.303, 10.2608, 2.04 ) }
    dend_30 { pt3dadd( 90.9598, -50.5809, 11.3128, 0.24 ) }
    dend_30 { pt3dadd( 91.4717, -50.6675, 11.8019, 0.24 ) }
    dend_30 { pt3dadd( 91.8995, -50.6969, 12.2226, 1.2 ) }
    dend_30 { pt3dadd( 92.249, -50.6554, 12.5651, 1.2 ) }
    dend_30 { pt3dadd( 93.5764, -50.2337, 13.9763, 0.12 ) }
    dend_30 { pt3dadd( 94.0741, -49.9432, 14.5229, 0.12 ) }
    dend_30 { pt3dadd( 94.3681, -49.6758, 14.8197, 0.24 ) }
    dend_30 { pt3dadd( 94.5705, -49.4551, 15.055, 0.24 ) }
    dend_30 { pt3dadd( 94.9669, -49.0392, 15.4766, 0.24 ) }
    dend_30 { pt3dadd( 95.1894, -48.8304, 15.688, 0.24 ) }
    dend_30 { pt3dadd( 95.6186, -48.5215, 15.9744, 0.24 ) }
    dend_30 { pt3dadd( 96.3074, -48.1687, 16.3784, 0.24 ) }
    dend_30 { pt3dadd( 97.5679, -47.6345, 17.1192, 0.12 ) }
    dend_30 { pt3dadd( 98.4116, -47.3448, 17.6101, 0.12 ) }
    dend_30 { pt3dadd( 98.6446, -47.2832, 17.7446, 1.44 ) }
    dend_30 { pt3dadd( 99.5304, -47.0794, 18.2443, 2.52 ) }
    dend_30 { pt3dadd( 100.498, -46.8515, 18.7676, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.97023, -246.846, -32.669, 0.12 ) }
    dend_20 { pt3dadd( 3.85474, -248.56, -32.6659, 0.12 ) }
    dend_20 { pt3dadd( 4.30948, -249.43, -32.66, 0.12 ) }
    dend_20 { pt3dadd( 4.51923, -249.831, -32.6586, 0.48 ) }
    dend_20 { pt3dadd( 4.88344, -250.523, -32.6322, 0.48 ) }
    dend_20 { pt3dadd( 5.27465, -251.246, -32.5904, 0.48 ) }
    dend_20 { pt3dadd( 5.50105, -251.621, -32.6029, 0.48 ) }
    dend_20 { pt3dadd( 5.72604, -251.929, -32.6473, 0.48 ) }
    dend_20 { pt3dadd( 6.25846, -252.535, -32.8042, 1.68 ) }
    dend_20 { pt3dadd( 6.8294, -253.091, -33.0027, 2.28 ) }
    dend_20 { pt3dadd( 7.37897, -253.571, -33.2096, 2.4 ) }
    dend_20 { pt3dadd( 8.96344, -254.819, -33.857, 0.48 ) }
    dend_20 { pt3dadd( 10.0545, -255.635, -34.3411, 0.36 ) }
    dend_20 { pt3dadd( 10.7217, -256.098, -34.6653, 0.12 ) }
    dend_20 { pt3dadd( 11.0865, -256.321, -34.8596, 0.12 ) }
    dend_20 { pt3dadd( 11.3631, -256.473, -35.026, 0.12 ) }
    dend_20 { pt3dadd( 11.7927, -256.677, -35.2879, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.97023, -246.846, -32.669, 0.12 ) }
    dend_19 { pt3dadd( 2.94811, -247.335, -32.6594, 0.12 ) }
    dend_19 { pt3dadd( 2.94844, -247.459, -32.6641, 0.12 ) }
    dend_19 { pt3dadd( 2.9555, -247.585, -32.6728, 0.12 ) }
    dend_19 { pt3dadd( 2.96886, -247.795, -32.7057, 0.12 ) }
    dend_19 { pt3dadd( 2.97328, -247.9, -32.726, 0.48 ) }
    dend_19 { pt3dadd( 2.97531, -248.093, -32.7663, 0.48 ) }
    dend_19 { pt3dadd( 2.97616, -248.165, -32.7879, 0.12 ) }
    dend_19 { pt3dadd( 2.93899, -248.385, -32.884, 0.12 ) }
    dend_19 { pt3dadd( 2.87526, -248.596, -32.992, 0.12 ) }
    dend_19 { pt3dadd( 2.83245, -248.718, -33.0544, 1.68 ) }
    dend_19 { pt3dadd( 2.79809, -248.811, -33.1075, 1.8 ) }
    dend_19 { pt3dadd( 2.73704, -248.969, -33.2056, 1.8 ) }
    dend_19 { pt3dadd( 2.55294, -249.461, -33.5008, 0.12 ) }
    dend_19 { pt3dadd( 2.50619, -249.593, -33.5797, 0.12 ) }
    dend_19 { pt3dadd( 2.43082, -249.865, -33.725, 0.12 ) }
    dend_19 { pt3dadd( 2.39203, -250.072, -33.8385, 0.48 ) }
    dend_19 { pt3dadd( 2.38452, -250.143, -33.8755, 0.48 ) }
    dend_19 { pt3dadd( 2.3847, -250.314, -33.949, 0.48 ) }
    dend_19 { pt3dadd( 2.38654, -250.367, -33.9684, 0.12 ) }
    dend_19 { pt3dadd( 2.38231, -250.514, -34.0298, 0.12 ) }
    dend_19 { pt3dadd( 2.36573, -250.724, -34.1175, 0.12 ) }
    dend_19 { pt3dadd( 2.35481, -250.827, -34.1571, 0.96 ) }
    dend_19 { pt3dadd( 2.32364, -251.048, -34.2437, 1.44 ) }
    dend_19 { pt3dadd( 2.24823, -251.461, -34.4312, 0.12 ) }
    dend_19 { pt3dadd( 2.19525, -251.708, -34.5421, 0.12 ) }
    dend_19 { pt3dadd( 2.17093, -251.815, -34.5895, 0.12 ) }
    dend_19 { pt3dadd( 2.15213, -251.893, -34.6208, 0.6 ) }
    dend_19 { pt3dadd( 2.11687, -252.02, -34.6786, 0.6 ) }
    dend_19 { pt3dadd( 2.04034, -252.235, -34.8112, 0.12 ) }
    dend_19 { pt3dadd( 1.96083, -252.428, -34.9455, 0.12 ) }
    dend_19 { pt3dadd( 1.94827, -252.458, -34.9685, 0.48 ) }
    dend_19 { pt3dadd( 1.91473, -252.548, -35.03, 0.48 ) }
    dend_19 { pt3dadd( 1.83921, -252.815, -35.173, 0.48 ) }
    dend_19 { pt3dadd( 1.77367, -253.112, -35.2972, 0.24 ) }
    dend_19 { pt3dadd( 1.75658, -253.211, -35.3549, 0.12 ) }
    dend_19 { pt3dadd( 1.72469, -253.512, -35.5347, 0.12 ) }
    dend_19 { pt3dadd( 1.70755, -253.708, -35.6608, 1.44 ) }
    dend_19 { pt3dadd( 1.69883, -253.872, -35.7673, 2.16 ) }
    dend_19 { pt3dadd( 1.69394, -254.091, -35.9033, 2.28 ) }
    dend_19 { pt3dadd( 1.68576, -254.895, -36.3871, 0.12 ) }
    dend_19 { pt3dadd( 1.68914, -255.332, -36.6607, 0.12 ) }
    dend_19 { pt3dadd( 1.69568, -255.573, -36.8174, 0.84 ) }
    dend_19 { pt3dadd( 1.70268, -255.742, -36.9269, 1.44 ) }
    dend_19 { pt3dadd( 1.71042, -255.883, -37.0158, 0.96 ) }
    dend_19 { pt3dadd( 1.72247, -256.03, -37.0847, 0.12 ) }
    dend_19 { pt3dadd( 1.73333, -256.17, -37.1171, 0.12 ) }
    dend_19 { pt3dadd( 1.73799, -256.324, -37.15, 0.12 ) }
    dend_19 { pt3dadd( 1.73777, -256.412, -37.1649, 0.36 ) }
    dend_19 { pt3dadd( 1.74352, -256.634, -36.9483, 0.12 ) }
    dend_19 { pt3dadd( 1.75288, -256.983, -36.4779, 0.12 ) }
    dend_19 { pt3dadd( 1.75597, -257.063, -36.335, 1.08 ) }
    dend_19 { pt3dadd( 1.76049, -257.147, -36.1442, 1.8 ) }
    dend_19 { pt3dadd( 1.76415, -257.19, -36.0274, 2.04 ) }
    dend_19 { pt3dadd( 1.84892, -257.87, -33.8035, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 16.5737, 107.009, 11.6468, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 17.1527, 109.245, 11.9278, 0.48 ) }
    dend_14 { pt3dadd( 17.3735, 110.211, 12.0245, 0.48 ) }
    dend_14 { pt3dadd( 17.4917, 110.75, 12.0676, 0.48 ) }
    dend_14 { pt3dadd( 17.6256, 111.427, 12.0934, 0.48 ) }
    dend_14 { pt3dadd( 17.8692, 112.896, 12.1019, 0.48 ) }
    dend_14 { pt3dadd( 18.0592, 114.378, 12.0881, 0.48 ) }
    dend_14 { pt3dadd( 18.0769, 114.691, 12.0652, 0.72 ) }
    dend_14 { pt3dadd( 18.1184, 115.291, 12.0533, 0.96 ) }
    dend_14 { pt3dadd( 18.2068, 116.288, 12.0766, 0.96 ) }
    dend_14 { pt3dadd( 18.3363, 117.139, 12.1961, 0.36 ) }
    dend_14 { pt3dadd( 18.6261, 118.427, 12.4878, 0.36 ) }
    dend_14 { pt3dadd( 18.8392, 119.232, 12.716, 0.36 ) }
    dend_14 { pt3dadd( 19.312, 120.949, 13.2538, 1.56 ) }
    dend_14 { pt3dadd( 19.5311, 121.73, 13.5165, 2.16 ) }
    dend_14 { pt3dadd( 20.1225, 123.787, 14.2559, 0.48 ) }
    dend_14 { pt3dadd( 20.5207, 125.336, 14.7369, 0.48 ) }
    dend_14 { pt3dadd( 20.7203, 126.243, 14.985, 0.48 ) }
    dend_14 { pt3dadd( 20.7954, 126.769, 15.0984, 0.48 ) }
    dend_14 { pt3dadd( 20.8105, 127.708, 15.2206, 1.68 ) }
    dend_14 { pt3dadd( 20.7654, 128.269, 15.2699, 1.92 ) }
    dend_14 { pt3dadd( 20.5169, 130.077, 15.29, 1.08 ) }
    dend_14 { pt3dadd( 20.3927, 131.044, 15.3016, 0.48 ) }
    dend_14 { pt3dadd( 20.3345, 131.74, 15.3046, 0.36 ) }
    dend_14 { pt3dadd( 20.3285, 133.023, 15.2959, 0.36 ) }
    dend_14 { pt3dadd( 20.4232, 133.876, 15.3137, 0.36 ) }
    dend_14 { pt3dadd( 20.752, 135.423, 15.3348, 0.72 ) }
    dend_14 { pt3dadd( 20.937, 136.013, 15.3392, 0.36 ) }
    dend_14 { pt3dadd( 21.1672, 136.7, 15.3142, 0.36 ) }
    dend_14 { pt3dadd( 21.5425, 137.696, 15.2641, 0.36 ) }
    dend_14 { pt3dadd( 22.052, 138.961, 15.1908, 0.84 ) }
    dend_14 { pt3dadd( 22.6736, 140.292, 15.3095, 1.92 ) }
    dend_14 { pt3dadd( 23.0047, 141.209, 15.311, 2.28 ) }
    dend_14 { pt3dadd( 23.1816, 141.881, 15.2578, 2.64 ) }
    dend_14 { pt3dadd( 23.2791, 142.429, 15.1702, 2.76 ) }
    dend_14 { pt3dadd( 23.3533, 143.212, 14.9832, 2.76 ) }
    dend_14 { pt3dadd( 23.5465, 146.41, 13.9381, 1.56 ) }
    dend_14 { pt3dadd( 23.8176, 150.654, 12.2896, 0.12 ) }
    dend_14 { pt3dadd( 23.8497, 151.05, 12.124, 0.12 ) }
    dend_14 { pt3dadd( 23.8855, 151.402, 11.9911, 0.12 ) }
    dend_14 { pt3dadd( 23.9262, 151.978, 11.7947, 0.72 ) }
    dend_14 { pt3dadd( 23.9621, 152.808, 11.5519, 0.96 ) }
    dend_14 { pt3dadd( 23.9588, 153.797, 11.2742, 0.48 ) }
    dend_14 { pt3dadd( 24.0493, 154.637, 11.2483, 0.36 ) }
    dend_14 { pt3dadd( 24.2157, 156.529, 11.212, 0.36 ) }
    dend_14 { pt3dadd( 24.2689, 157.138, 11.2538, 0.36 ) }
    dend_14 { pt3dadd( 24.3023, 157.609, 11.31, 0.12 ) }
    dend_14 { pt3dadd( 24.3876, 158.821, 11.5479, 0.96 ) }
    dend_14 { pt3dadd( 24.4608, 159.666, 11.763, 1.32 ) }
    dend_14 { pt3dadd( 24.5167, 160.202, 11.8592, 1.2 ) }
    dend_14 { pt3dadd( 24.8114, 161.858, 12.3185, 0.48 ) }
    dend_14 { pt3dadd( 25.0659, 163.041, 12.6767, 0.24 ) }
    dend_14 { pt3dadd( 25.273, 163.921, 12.9439, 1.2 ) }
    dend_14 { pt3dadd( 25.4666, 164.673, 13.1677, 1.68 ) }
    dend_14 { pt3dadd( 25.9021, 166.226, 13.6279, 1.68 ) }
    dend_14 { pt3dadd( 26.6691, 168.827, 14.3771, 1.8 ) }
    dend_14 { pt3dadd( 26.9726, 169.829, 14.6219, 0.96 ) }
    dend_14 { pt3dadd( 27.352, 170.865, 14.9618, 1.08 ) }
    dend_14 { pt3dadd( 27.6701, 171.674, 15.2284, 0.36 ) }
    dend_14 { pt3dadd( 28.3357, 173.381, 15.717, 0.36 ) }
    dend_14 { pt3dadd( 28.7008, 174.406, 15.9562, 0.36 ) }
    dend_14 { pt3dadd( 28.9322, 175.131, 16.0297, 1.08 ) }
    dend_14 { pt3dadd( 29.517, 177.04, 16.2031, 1.2 ) }
    dend_14 { pt3dadd( 29.9677, 178.633, 16.2987, 0.96 ) }
    dend_14 { pt3dadd( 30.3746, 180.284, 16.3226, 0.36 ) }
    dend_14 { pt3dadd( 30.6579, 181.75, 16.1816, 0.24 ) }
    dend_14 { pt3dadd( 30.7966, 182.682, 16.0259, 0.6 ) }
    dend_14 { pt3dadd( 30.879, 183.301, 15.9158, 0.12 ) }
    dend_14 { pt3dadd( 30.9584, 183.831, 15.8074, 0.24 ) }
    dend_14 { pt3dadd( 31.249, 185.418, 15.5152, 0.24 ) }
    dend_14 { pt3dadd( 31.5038, 186.741, 15.2773, 0.24 ) }
    dend_14 { pt3dadd( 31.6687, 187.807, 15.0, 1.68 ) }
    dend_14 { pt3dadd( 31.866, 189.389, 14.5602, 2.52 ) }
    dend_14 { pt3dadd( 31.9819, 190.723, 14.2103, 0.48 ) }
    dend_14 { pt3dadd( 32.0639, 192.011, 13.8879, 0.48 ) }
    dend_14 { pt3dadd( 32.1025, 193.263, 13.6187, 0.72 ) }
    dend_14 { pt3dadd( 32.0896, 194.642, 13.4103, 1.08 ) }
    dend_14 { pt3dadd( 32.036, 195.572, 13.3169, 1.68 ) }
    dend_14 { pt3dadd( 31.8887, 196.788, 13.2387, 1.2 ) }
    dend_14 { pt3dadd( 31.7314, 197.806, 13.2617, 0.36 ) }
    dend_14 { pt3dadd( 31.522, 199.135, 13.371, 0.36 ) }
    dend_14 { pt3dadd( 31.3952, 200.034, 13.5161, 0.36 ) }
    dend_14 { pt3dadd( 31.2547, 201.051, 13.7272, 0.36 ) }
    dend_14 { pt3dadd( 31.0835, 202.302, 13.9802, 2.04 ) }
    dend_14 { pt3dadd( 31.0214, 202.851, 14.0964, 2.4 ) }
    dend_14 { pt3dadd( 30.9163, 204.153, 14.3033, 2.4 ) }
    dend_14 { pt3dadd( 30.8599, 206.136, 14.4252, 0.36 ) }
    dend_14 { pt3dadd( 30.8968, 207.358, 14.3873, 0.36 ) }
    dend_14 { pt3dadd( 30.9949, 208.444, 14.3322, 1.44 ) }
    dend_14 { pt3dadd( 31.1279, 209.287, 14.2745, 2.16 ) }
    dend_14 { pt3dadd( 31.492, 211.232, 14.1413, 0.48 ) }
    dend_14 { pt3dadd( 31.7199, 212.348, 14.0772, 0.12 ) }
    dend_14 { pt3dadd( 31.8794, 213.117, 14.0158, 0.6 ) }
    dend_14 { pt3dadd( 32.2725, 214.91, 13.989, 0.36 ) }
    dend_14 { pt3dadd( 32.4554, 215.781, 14.0514, 0.24 ) }
    dend_14 { pt3dadd( 32.6308, 216.786, 14.2252, 0.24 ) }
    dend_14 { pt3dadd( 32.6945, 217.345, 14.3564, 0.24 ) }
    dend_14 { pt3dadd( 32.7549, 218.38, 14.551, 0.36 ) }
    dend_14 { pt3dadd( 32.7934, 219.535, 14.6655, 0.36 ) }
    dend_14 { pt3dadd( 32.8574, 220.386, 14.6881, 0.36 ) }
    dend_14 { pt3dadd( 32.9598, 221.065, 14.7066, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 33.2195, 222.231, 14.6966, 1.68 ) }
    dend_14 { pt3dadd( 33.4206, 223.066, 14.6056, 2.4 ) }
    dend_14 { pt3dadd( 33.5585, 223.645, 14.4905, 2.4 ) }
    dend_14 { pt3dadd( 33.9858, 225.198, 14.1676, 0.24 ) }
    dend_14 { pt3dadd( 34.206, 225.938, 14.0201, 0.24 ) }
    dend_14 { pt3dadd( 34.344, 226.403, 13.9382, 0.48 ) }
    dend_14 { pt3dadd( 34.7899, 228.004, 13.7489, 0.24 ) }
    dend_14 { pt3dadd( 34.9797, 228.968, 13.6819, 0.24 ) }
    dend_14 { pt3dadd( 35.0829, 229.999, 13.6217, 0.24 ) }
    dend_14 { pt3dadd( 35.1009, 230.832, 13.6289, 0.72 ) }
    dend_14 { pt3dadd( 35.1142, 231.556, 13.6918, 0.84 ) }
    dend_14 { pt3dadd( 35.1264, 232.055, 13.7551, 0.36 ) }
    dend_14 { pt3dadd( 35.1525, 233.009, 13.8598, 0.36 ) }
    dend_14 { pt3dadd( 35.1595, 234.04, 13.8585, 0.48 ) }
    dend_14 { pt3dadd( 35.151, 235.547, 13.6867, 0.36 ) }
    dend_14 { pt3dadd( 35.1751, 236.383, 13.5156, 0.36 ) }
    dend_14 { pt3dadd( 35.2216, 236.957, 13.3957, 0.96 ) }
    dend_14 { pt3dadd( 35.3777, 238.306, 13.0261, 0.96 ) }
    dend_14 { pt3dadd( 35.5044, 238.928, 12.8751, 0.36 ) }
    dend_14 { pt3dadd( 35.6335, 239.447, 12.7874, 0.36 ) }
    dend_14 { pt3dadd( 35.9909, 240.887, 12.6158, 2.4 ) }
    dend_14 { pt3dadd( 36.3713, 242.42, 12.5611, 3.25 ) }
    dend_14 { pt3dadd( 36.7044, 243.837, 12.6296, 2.16 ) }
    dend_14 { pt3dadd( 37.1283, 245.836, 12.8185, 0.24 ) }
    dend_14 { pt3dadd( 37.3983, 247.305, 12.9611, 0.12 ) }
    dend_14 { pt3dadd( 37.5838, 248.538, 13.0627, 0.24 ) }
    dend_14 { pt3dadd( 37.6202, 248.958, 13.0914, 0.36 ) }
    dend_14 { pt3dadd( 37.6355, 250.051, 13.0877, 0.36 ) }
    dend_14 { pt3dadd( 37.5894, 251.425, 13.0365, 1.32 ) }
    dend_14 { pt3dadd( 37.5392, 252.274, 12.9492, 0.48 ) }
    dend_14 { pt3dadd( 37.5383, 252.766, 12.8956, 0.12 ) }
    dend_14 { pt3dadd( 37.5837, 253.617, 12.7937, 0.12 ) }
    dend_14 { pt3dadd( 37.6718, 254.596, 12.6929, 0.12 ) }
    dend_14 { pt3dadd( 37.7548, 255.2, 12.6421, 0.84 ) }
    dend_14 { pt3dadd( 38.0314, 256.881, 12.5613, 1.56 ) }
    dend_14 { pt3dadd( 38.1566, 257.555, 12.5363, 1.68 ) }
    dend_14 { pt3dadd( 38.4323, 258.778, 12.5008, 0.12 ) }
    dend_14 { pt3dadd( 38.7347, 259.824, 12.4472, 0.12 ) }
    dend_14 { pt3dadd( 38.9999, 260.329, 12.5387, 0.24 ) }
    dend_14 { pt3dadd( 39.1792, 260.522, 12.6303, 0.12 ) }
    dend_14 { pt3dadd( 39.7349, 260.836, 12.9481, 0.12 ) }
    dend_14 { pt3dadd( 40.1228, 260.985, 13.1941, 0.12 ) }
    dend_14 { pt3dadd( 41.5262, 261.327, 14.1644, 3.25 ) }
    dend_14 { pt3dadd( 45.6145, 261.872, 17.1504, 0.12 ) }
    dend_14 { pt3dadd( 45.9949, 261.895, 17.4455, 0.12 ) }
    dend_14 { pt3dadd( 46.323, 261.891, 17.712, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 16.5737, 107.009, 11.6468, 0.12 ) }
    dend_13 { pt3dadd( 15.2922, 107.416, 11.8901, 0.12 ) }
    dend_13 { pt3dadd( 14.9851, 107.514, 11.9587, 0.12 ) }
    dend_13 { pt3dadd( 14.7535, 107.59, 11.9899, 0.96 ) }
    dend_13 { pt3dadd( 14.1708, 107.768, 12.0386, 0.12 ) }
    dend_13 { pt3dadd( 13.7688, 107.883, 12.0327, 0.12 ) }
    dend_13 { pt3dadd( 13.5333, 107.951, 12.0214, 0.12 ) }
    dend_13 { pt3dadd( 13.1911, 108.054, 11.9885, 1.08 ) }
    dend_13 { pt3dadd( 12.485, 108.253, 11.9572, 0.36 ) }
    dend_13 { pt3dadd( 11.8012, 108.438, 11.9323, 0.36 ) }
    dend_13 { pt3dadd( 10.9646, 108.685, 11.9916, 0.36 ) }
    dend_13 { pt3dadd( 10.5893, 108.789, 12.0266, 0.36 ) }
    dend_13 { pt3dadd( 9.91859, 108.945, 12.2514, 0.36 ) }
    dend_13 { pt3dadd( 9.56583, 109.0, 12.4633, 0.36 ) }
    dend_13 { pt3dadd( 9.20796, 109.019, 12.7886, 0.36 ) }
    dend_13 { pt3dadd( 8.46937, 109.015, 13.6344, 1.92 ) }
    dend_13 { pt3dadd( 8.08431, 108.984, 14.1744, 1.92 ) }
    dend_13 { pt3dadd( 6.95815, 108.78, 15.9326, 0.12 ) }
    dend_13 { pt3dadd( 6.7194, 108.71, 16.3549, 0.12 ) }
    dend_13 { pt3dadd( 6.59193, 108.657, 16.6223, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 9.2578, 109.398, -4.36552, 0.12 ) }
    dend_11 { pt3dadd( 8.72505, 110.539, -5.35043, 0.12 ) }
    dend_11 { pt3dadd( 8.64635, 110.755, -5.49937, 0.12 ) }
    dend_11 { pt3dadd( 8.53849, 111.163, -5.71682, 0.24 ) }
    dend_11 { pt3dadd( 8.31147, 112.529, -6.42808, 0.24 ) }
    dend_11 { pt3dadd( 8.26131, 113.038, -6.67512, 0.24 ) }
    dend_11 { pt3dadd( 8.24023, 113.397, -6.83964, 0.24 ) }
    dend_11 { pt3dadd( 8.28917, 114.158, -7.12888, 1.68 ) }
    dend_11 { pt3dadd( 8.34687, 114.685, -7.35527, 1.68 ) }
    dend_11 { pt3dadd( 8.60358, 116.255, -8.06163, 0.12 ) }
    dend_11 { pt3dadd( 8.72752, 116.878, -8.33387, 0.12 ) }
    dend_11 { pt3dadd( 8.77275, 117.085, -8.44194, 0.6 ) }
    dend_11 { pt3dadd( 8.86722, 117.486, -8.68156, 0.48 ) }
    dend_11 { pt3dadd( 9.11489, 118.455, -9.33407, 0.12 ) }
    dend_11 { pt3dadd( 9.25438, 118.954, -9.69911, 0.12 ) }
    dend_11 { pt3dadd( 9.29499, 119.078, -9.77812, 0.12 ) }
    dend_11 { pt3dadd( 9.38482, 119.362, -9.95203, 0.96 ) }
    dend_11 { pt3dadd( 9.48023, 119.656, -10.1161, 0.96 ) }
    dend_11 { pt3dadd( 9.58314, 119.985, -10.2925, 0.48 ) }
    dend_11 { pt3dadd( 9.83319, 120.771, -10.6505, 0.12 ) }
    dend_11 { pt3dadd( 10.1728, 121.848, -11.1419, 0.12 ) }
    dend_11 { pt3dadd( 10.3828, 122.523, -11.4575, 1.8 ) }
    dend_11 { pt3dadd( 10.4912, 122.878, -11.6235, 2.16 ) }
    dend_11 { pt3dadd( 10.8355, 123.973, -12.1134, 0.12 ) }
    dend_11 { pt3dadd( 11.1007, 124.769, -12.4515, 0.12 ) }
    dend_11 { pt3dadd( 11.2076, 125.077, -12.5663, 0.96 ) }
    dend_11 { pt3dadd( 11.377, 125.559, -12.7421, 0.24 ) }
    dend_11 { pt3dadd( 11.5391, 126.018, -12.9032, 0.24 ) }
    dend_11 { pt3dadd( 11.7967, 126.704, -13.1493, 1.68 ) }
    dend_11 { pt3dadd( 12.0105, 127.213, -13.326, 0.12 ) }
    dend_11 { pt3dadd( 12.2097, 127.624, -13.4743, 0.12 ) }
    dend_11 { pt3dadd( 12.4841, 128.139, -13.7398, 0.6 ) }
    dend_11 { pt3dadd( 12.7072, 128.52, -13.9706, 0.12 ) }
    dend_11 { pt3dadd( 13.1941, 129.314, -14.5176, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( 13.2912, 129.466, -14.6313, 0.12 ) }
    dend_11 { pt3dadd( 13.681, 130.087, -15.1015, 1.92 ) }
    dend_11 { pt3dadd( 14.6213, 131.582, -16.2002, 0.12 ) }
    dend_11 { pt3dadd( 15.0856, 132.335, -16.7165, 0.12 ) }
    dend_11 { pt3dadd( 15.2244, 132.569, -16.8475, 0.84 ) }
    dend_11 { pt3dadd( 15.3735, 132.847, -16.9684, 0.12 ) }
    dend_11 { pt3dadd( 15.7208, 133.593, -17.2006, 0.12 ) }
    dend_11 { pt3dadd( 15.9658, 134.182, -17.2468, 1.68 ) }
    dend_11 { pt3dadd( 16.1238, 134.567, -17.1724, 1.2 ) }
    dend_11 { pt3dadd( 16.406, 135.235, -16.9855, 0.12 ) }
    dend_11 { pt3dadd( 16.6737, 135.818, -16.7673, 0.12 ) }
    dend_11 { pt3dadd( 16.8739, 136.215, -16.5846, 0.6 ) }
    dend_11 { pt3dadd( 17.4468, 137.234, -16.0395, 0.48 ) }
    dend_11 { pt3dadd( 17.732, 137.734, -15.7727, 0.48 ) }
    dend_11 { pt3dadd( 17.952, 138.104, -15.5755, 0.48 ) }
    dend_11 { pt3dadd( 18.1984, 138.529, -15.3832, 0.12 ) }
    dend_11 { pt3dadd( 18.3592, 138.817, -15.2806, 0.12 ) }
    dend_11 { pt3dadd( 18.6288, 139.384, -15.1721, 1.44 ) }
    dend_11 { pt3dadd( 18.7592, 139.745, -15.1531, 1.68 ) }
    dend_11 { pt3dadd( 18.977, 140.469, -15.1393, 0.12 ) }
    dend_11 { pt3dadd( 19.218, 141.413, -15.1472, 0.12 ) }
    dend_11 { pt3dadd( 19.4054, 142.25, -15.1795, 1.92 ) }
    dend_11 { pt3dadd( 19.605, 143.231, -15.2247, 0.12 ) }
    dend_11 { pt3dadd( 19.8058, 144.266, -15.285, 0.12 ) }
    dend_11 { pt3dadd( 19.8802, 144.647, -15.3129, 0.6 ) }
    dend_11 { pt3dadd( 19.915, 144.836, -15.33, 0.12 ) }
    dend_11 { pt3dadd( 20.0639, 145.701, -15.4053, 0.12 ) }
    dend_11 { pt3dadd( 20.1455, 146.29, -15.4963, 1.08 ) }
    dend_11 { pt3dadd( 20.1828, 146.586, -15.5567, 0.72 ) }
    dend_11 { pt3dadd( 20.2036, 146.791, -15.6139, 0.12 ) }
    dend_11 { pt3dadd( 20.2676, 147.517, -15.8544, 0.12 ) }
    dend_11 { pt3dadd( 20.3206, 148.2, -16.1044, 1.44 ) }
    dend_11 { pt3dadd( 20.3797, 149.399, -16.662, 0.12 ) }
    dend_11 { pt3dadd( 20.4006, 149.739, -16.8301, 0.12 ) }
    dend_11 { pt3dadd( 20.4081, 149.824, -16.8727, 0.48 ) }
    dend_11 { pt3dadd( 20.4312, 150.018, -16.9629, 0.12 ) }
    dend_11 { pt3dadd( 20.5403, 150.631, -17.2122, 0.48 ) }
    dend_11 { pt3dadd( 20.7305, 151.382, -17.4294, 0.12 ) }
    dend_11 { pt3dadd( 21.0103, 152.337, -17.6866, 0.12 ) }
    dend_11 { pt3dadd( 21.0629, 152.515, -17.7409, 0.72 ) }
    dend_11 { pt3dadd( 21.2413, 153.134, -17.9321, 1.44 ) }
    dend_11 { pt3dadd( 21.379, 153.607, -18.076, 1.8 ) }
    dend_11 { pt3dadd( 21.5644, 154.192, -18.25, 1.68 ) }
    dend_11 { pt3dadd( 21.9547, 155.422, -18.5832, 0.12 ) }
    dend_11 { pt3dadd( 22.0819, 155.869, -18.7364, 0.12 ) }
    dend_11 { pt3dadd( 22.1966, 156.306, -18.9033, 0.12 ) }
    dend_11 { pt3dadd( 22.3036, 156.807, -19.1275, 1.32 ) }
    dend_11 { pt3dadd( 22.3702, 157.165, -19.2971, 1.32 ) }
    dend_11 { pt3dadd( 22.4085, 157.423, -19.42, 1.32 ) }
    dend_11 { pt3dadd( 22.4938, 158.15, -19.7188, 0.12 ) }
    dend_11 { pt3dadd( 22.5369, 158.792, -20.0485, 0.12 ) }
    dend_11 { pt3dadd( 22.5274, 159.434, -20.4555, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.2578, 109.398, -4.36552, 0.12 ) }
    dend_10 { pt3dadd( 13.4212, 109.284, 12.9584, 0.12 ) }
    dend_10 { pt3dadd( 13.5858, 109.281, 13.6219, 0.12 ) }
    dend_10 { pt3dadd( 13.6911, 109.279, 14.0326, 0.12 ) }
    dend_10 { pt3dadd( 14.0591, 109.272, 15.4204, 0.84 ) }
    dend_10 { pt3dadd( 14.1828, 109.27, 15.8878, 0.84 ) }
    dend_10 { pt3dadd( 14.4279, 109.255, 16.9589, 0.36 ) }
    dend_10 { pt3dadd( 14.6627, 109.342, 16.5452, 0.36 ) }
    dend_10 { pt3dadd( 14.8558, 109.446, 16.1138, 0.36 ) }
    dend_10 { pt3dadd( 15.0635, 109.571, 15.5987, 0.36 ) }
    dend_10 { pt3dadd( 15.5367, 109.868, 14.4005, 0.36 ) }
    dend_10 { pt3dadd( 16.5139, 110.528, 11.8635, 0.36 ) }
    dend_10 { pt3dadd( 17.045, 110.9, 10.5402, 2.04 ) }
    dend_10 { pt3dadd( 17.8782, 111.479, 8.54652, 1.56 ) }
    dend_10 { pt3dadd( 18.2671, 111.743, 7.71072, 0.12 ) }
    dend_10 { pt3dadd( 18.4628, 111.87, 7.34723, 0.12 ) }
    dend_10 { pt3dadd( 19.0813, 112.196, 6.47809, 1.2 ) }
    dend_10 { pt3dadd( 19.6275, 112.396, 5.95434, 0.48 ) }
    dend_10 { pt3dadd( 19.9445, 112.485, 5.71301, 0.12 ) }
    dend_10 { pt3dadd( 20.8508, 112.721, 5.16731, 0.12 ) }
    dend_10 { pt3dadd( 21.7767, 112.974, 4.53179, 1.32 ) }
    dend_10 { pt3dadd( 22.1925, 113.093, 4.21397, 1.68 ) }
    dend_10 { pt3dadd( 23.4047, 113.496, 3.15878, 0.12 ) }
    dend_10 { pt3dadd( 23.7636, 113.64, 2.76655, 0.12 ) }
    dend_10 { pt3dadd( 24.2782, 113.875, 2.07207, 0.6 ) }
    dend_10 { pt3dadd( 25.2107, 114.302, 0.627967, 0.12 ) }
    dend_10 { pt3dadd( 25.5261, 114.433, 0.122432, 0.12 ) }
    dend_10 { pt3dadd( 26.3965, 114.771, -1.33344, 1.8 ) }
    dend_10 { pt3dadd( 27.3034, 115.096, -2.83139, 1.8 ) }
    dend_10 { pt3dadd( 28.2222, 115.364, -4.44122, 0.48 ) }
    dend_10 { pt3dadd( 28.5516, 115.43, -4.99673, 0.48 ) }
    dend_10 { pt3dadd( 28.8945, 115.468, -5.49338, 0.48 ) }
    dend_10 { pt3dadd( 29.5963, 115.512, -6.44854, 1.44 ) }
    dend_10 { pt3dadd( 30.0229, 115.52, -6.9827, 1.68 ) }
    dend_10 { pt3dadd( 31.5988, 115.601, -8.84625, 0.36 ) }
    dend_10 { pt3dadd( 32.2974, 115.717, -9.67785, 0.36 ) }
    dend_10 { pt3dadd( 32.8892, 115.92, -10.5601, 1.68 ) }
    dend_10 { pt3dadd( 33.4128, 116.181, -11.4521, 1.2 ) }
    dend_10 { pt3dadd( 34.1054, 116.646, -12.7889, 0.36 ) }
    dend_10 { pt3dadd( 34.55, 117.025, -13.7321, 0.36 ) }
    dend_10 { pt3dadd( 35.1018, 117.648, -15.053, 1.68 ) }
    dend_10 { pt3dadd( 36.0345, 118.945, -17.6206, 0.24 ) }
    dend_10 { pt3dadd( 36.2313, 119.252, -18.1866, 0.24 ) }
    dend_10 { pt3dadd( 36.4767, 119.619, -18.8204, 0.84 ) }
    dend_10 { pt3dadd( 36.6826, 119.89, -19.2795, 0.96 ) }
    dend_10 { pt3dadd( 37.2367, 120.431, -20.2768, 0.24 ) }
    dend_10 { pt3dadd( 37.6027, 120.669, -20.7794, 0.24 ) }
    dend_10 { pt3dadd( 38.3635, 120.968, -21.6059, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 38.6982, 121.04, -22.0401, 1.68 ) }
    dend_10 { pt3dadd( 39.2484, 121.06, -23.0124, 0.36 ) }
    dend_10 { pt3dadd( 39.5026, 121.024, -23.549, 0.36 ) }
    dend_10 { pt3dadd( 39.6818, 120.965, -23.9878, 0.36 ) }
    dend_10 { pt3dadd( 40.3884, 120.65, -25.887, 0.96 ) }
    dend_10 { pt3dadd( 41.1681, 120.232, -28.0791, 1.68 ) }
    dend_10 { pt3dadd( 42.0949, 119.693, -30.709, 0.6 ) }
    dend_10 { pt3dadd( 42.273, 119.575, -31.2081, 0.48 ) }
    dend_10 { pt3dadd( 42.9422, 119.078, -33.0228, 2.04 ) }
    dend_10 { pt3dadd( 43.1785, 118.874, -33.6182, 2.52 ) }
    dend_10 { pt3dadd( 43.9219, 118.172, -35.1846, 0.36 ) }
    dend_10 { pt3dadd( 44.1528, 117.963, -35.5577, 0.36 ) }
    dend_10 { pt3dadd( 44.5666, 117.651, -36.0512, 0.48 ) }
    dend_10 { pt3dadd( 45.4764, 117.006, -37.031, 0.36 ) }
    dend_10 { pt3dadd( 45.8135, 116.756, -37.3524, 0.36 ) }
    dend_10 { pt3dadd( 46.005, 116.606, -37.5306, 0.36 ) }
    dend_10 { pt3dadd( 46.9815, 115.838, -38.3162, 0.36 ) }
    dend_10 { pt3dadd( 47.8, 115.209, -38.906, 1.08 ) }
    dend_10 { pt3dadd( 48.3733, 114.8, -39.2426, 1.8 ) }
    dend_10 { pt3dadd( 49.1281, 114.302, -39.5694, 1.2 ) }
    dend_10 { pt3dadd( 49.7797, 113.924, -39.8223, 0.36 ) }
    dend_10 { pt3dadd( 50.6912, 113.456, -40.0635, 0.36 ) }
    dend_10 { pt3dadd( 51.6342, 113.032, -40.2135, 0.36 ) }
    dend_10 { pt3dadd( 52.3776, 112.756, -40.2784, 1.2 ) }
    dend_10 { pt3dadd( 53.3021, 112.491, -40.3514, 1.8 ) }
    dend_10 { pt3dadd( 54.5253, 112.227, -40.4622, 0.12 ) }
    dend_10 { pt3dadd( 56.2569, 111.936, -40.6626, 0.12 ) }
    dend_10 { pt3dadd( 57.2039, 111.794, -40.8037, 1.44 ) }
    dend_10 { pt3dadd( 57.7431, 111.694, -40.9043, 2.16 ) }
    dend_10 { pt3dadd( 58.7014, 111.451, -41.1021, 2.4 ) }
    dend_10 { pt3dadd( 59.9485, 111.032, -41.3573, 0.24 ) }
    dend_10 { pt3dadd( 60.4438, 110.801, -41.4554, 0.24 ) }
    dend_10 { pt3dadd( 60.9034, 110.509, -41.5722, 0.24 ) }
    dend_10 { pt3dadd( 61.7046, 109.887, -41.7207, 0.48 ) }
    dend_10 { pt3dadd( 62.2282, 109.426, -41.7934, 0.12 ) }
    dend_10 { pt3dadd( 62.8502, 108.888, -41.8246, 0.12 ) }
    dend_10 { pt3dadd( 63.2927, 108.55, -41.7922, 0.12 ) }
    dend_10 { pt3dadd( 63.7569, 108.267, -41.7469, 0.12 ) }
    dend_10 { pt3dadd( 64.3559, 107.989, -41.614, 0.36 ) }
    dend_10 { pt3dadd( 64.7536, 107.856, -41.5014, 0.12 ) }
    dend_10 { pt3dadd( 65.9944, 107.491, -41.1301, 0.12 ) }
    dend_10 { pt3dadd( 67.0771, 107.204, -40.7848, 1.44 ) }
    dend_10 { pt3dadd( 67.3551, 107.135, -40.6945, 1.56 ) }
    dend_10 { pt3dadd( 68.9552, 106.731, -40.1502, 0.36 ) }
    dend_10 { pt3dadd( 69.4724, 106.57, -39.8904, 0.36 ) }
    dend_10 { pt3dadd( 69.7816, 106.448, -39.6852, 0.36 ) }
    dend_10 { pt3dadd( 70.1509, 106.235, -39.3724, 0.36 ) }
    dend_10 { pt3dadd( 70.4238, 106.038, -39.1684, 0.36 ) }
    dend_10 { pt3dadd( 70.6192, 105.877, -39.004, 0.36 ) }
    dend_10 { pt3dadd( 71.9313, 104.667, -37.9124, 0.12 ) }
    dend_10 { pt3dadd( 72.1858, 104.432, -37.701, 0.12 ) }
    dend_10 { pt3dadd( 72.4735, 104.177, -37.4496, 0.12 ) }
    dend_10 { pt3dadd( 73.4534, 103.363, -36.6214, 2.4 ) }
    dend_10 { pt3dadd( 75.1301, 102.069, -35.3539, 0.12 ) }
    dend_10 { pt3dadd( 75.6032, 101.716, -35.0457, 0.12 ) }
    dend_10 { pt3dadd( 76.2037, 101.283, -34.6781, 0.36 ) }
    dend_10 { pt3dadd( 76.7894, 100.864, -34.2842, 0.12 ) }
    dend_10 { pt3dadd( 77.274, 100.519, -33.9392, 0.12 ) }
    dend_10 { pt3dadd( 77.7339, 100.181, -33.5927, 1.08 ) }
    dend_10 { pt3dadd( 78.1285, 99.889, -33.298, 1.08 ) }
    dend_10 { pt3dadd( 79.4778, 98.8416, -32.187, 0.36 ) }
    dend_10 { pt3dadd( 79.8266, 98.5348, -31.8999, 0.36 ) }
    dend_10 { pt3dadd( 80.1023, 98.2746, -31.7091, 0.12 ) }
    dend_10 { pt3dadd( 80.2693, 98.1128, -31.571, 0.12 ) }
    dend_10 { pt3dadd( 81.1947, 97.2164, -30.7603, 0.12 ) }
    dend_10 { pt3dadd( 81.6142, 96.828, -30.417, 1.32 ) }
    dend_10 { pt3dadd( 82.2535, 96.2677, -29.9399, 2.04 ) }
    dend_10 { pt3dadd( 83.002, 95.6741, -29.3869, 1.32 ) }
    dend_10 { pt3dadd( 84.6869, 94.4616, -28.1417, 0.12 ) }
    dend_10 { pt3dadd( 84.9149, 94.3207, -27.9832, 0.12 ) }
    dend_10 { pt3dadd( 85.3123, 94.1434, -27.6313, 0.24 ) }
    dend_10 { pt3dadd( 85.9107, 93.9235, -27.0475, 0.24 ) }
    dend_10 { pt3dadd( 86.3712, 93.7984, -26.5492, 0.24 ) }
    dend_10 { pt3dadd( 87.008, 93.68, -25.7903, 0.24 ) }
    dend_10 { pt3dadd( 87.3303, 93.6482, -25.4251, 0.84 ) }
    dend_10 { pt3dadd( 89.6203, 93.5119, -22.5141, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 39.0659, 99.3768, 13.7406, 0.72 ) }
    dend_6 { pt3dadd( 38.4231, 98.915, 12.7902, 0.72 ) }
    dend_6 { pt3dadd( 37.4806, 98.3721, 11.5847, 0.6 ) }
    dend_6 { pt3dadd( 36.8676, 98.019, 10.8006, 0.36 ) }
    dend_6 { pt3dadd( 36.6397, 97.8877, 10.5091, 0.48 ) }
    dend_6 { pt3dadd( 36.0707, 97.5599, 9.78127, 0.36 ) }
    dend_6 { pt3dadd( 35.3759, 97.1597, 8.89253, 0.12 ) }
    dend_6 { pt3dadd( 35.1142, 97.0551, 8.60059, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 39.0659, 99.3768, 13.7406, 0.48 ) }
    dend_5 { pt3dadd( 39.0287, 100.481, 13.9172, 0.48 ) }
    dend_5 { pt3dadd( 39.0015, 101.427, 14.1267, 0.48 ) }
    dend_5 { pt3dadd( 38.9161, 102.426, 14.3833, 0.6 ) }
    dend_5 { pt3dadd( 38.8163, 103.225, 14.6221, 0.48 ) }
    dend_5 { pt3dadd( 38.6544, 104.424, 14.9965, 0.48 ) }
    dend_5 { pt3dadd( 38.4734, 105.779, 15.4227, 2.04 ) }
    dend_5 { pt3dadd( 38.3656, 106.896, 15.7644, 1.92 ) }
    dend_5 { pt3dadd( 38.2262, 108.202, 16.0956, 1.44 ) }
    dend_5 { pt3dadd( 38.1007, 109.24, 16.3134, 1.08 ) }
    dend_5 { pt3dadd( 37.9998, 110.164, 16.4748, 0.96 ) }
    dend_5 { pt3dadd( 37.9602, 110.64, 16.5119, 0.72 ) }
    dend_5 { pt3dadd( 37.9055, 111.765, 16.4533, 1.08 ) }
    dend_5 { pt3dadd( 37.9395, 113.626, 16.2673, 0.48 ) }
    dend_5 { pt3dadd( 38.0013, 114.408, 16.1783, 0.48 ) }
    dend_5 { pt3dadd( 38.1455, 115.702, 16.0413, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 38.2628, 116.845, 15.9249, 1.92 ) }
    dend_5 { pt3dadd( 38.4329, 118.353, 15.8575, 1.08 ) }
    dend_5 { pt3dadd( 38.5864, 119.407, 15.8809, 0.72 ) }
    dend_5 { pt3dadd( 38.6976, 119.958, 15.9505, 0.24 ) }
    dend_5 { pt3dadd( 39.0293, 121.218, 16.0976, 0.24 ) }
    dend_5 { pt3dadd( 39.2672, 122.148, 16.2132, 0.72 ) }
    dend_5 { pt3dadd( 39.5175, 123.22, 16.4192, 0.12 ) }
    dend_5 { pt3dadd( 39.764, 124.15, 16.6114, 0.12 ) }
    dend_5 { pt3dadd( 40.1009, 125.462, 16.8558, 1.8 ) }
    dend_5 { pt3dadd( 40.511, 127.125, 17.1787, 2.76 ) }
    dend_5 { pt3dadd( 40.773, 128.199, 17.4215, 2.64 ) }
    dend_5 { pt3dadd( 41.2114, 129.987, 17.8556, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 19.3604, -120.661, -48.0286, 0.12 ) }
    dend_39 { pt3dadd( 20.08, -121.535, -47.9595, 0.12 ) }
    dend_39 { pt3dadd( 20.6772, -122.26, -47.9021, 0.12 ) }
    dend_39 { pt3dadd( 21.281, -122.994, -47.8441, 0.6 ) }
    dend_39 { pt3dadd( 21.5979, -123.379, -47.8137, 0.12 ) }
    dend_39 { pt3dadd( 22.3577, -124.301, -47.7407, 0.12 ) }
    dend_39 { pt3dadd( 22.7558, -124.785, -47.7025, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 19.3604, -120.661, -48.0286, 0.12 ) }
    dend_36 { pt3dadd( 19.031, -121.978, -48.0921, 0.12 ) }
    dend_36 { pt3dadd( 18.7865, -122.797, -48.0081, 0.12 ) }
    dend_36 { pt3dadd( 18.6199, -123.404, -47.905, 0.96 ) }
    dend_36 { pt3dadd( 18.4706, -124.003, -47.7985, 1.56 ) }
    dend_36 { pt3dadd( 18.2636, -124.95, -47.6376, 0.12 ) }
    dend_36 { pt3dadd( 18.1733, -125.448, -47.5586, 0.12 ) }
    dend_36 { pt3dadd( 17.9552, -127.012, -47.2022, 1.08 ) }
    dend_36 { pt3dadd( 17.8862, -127.689, -47.0345, 0.72 ) }
    dend_36 { pt3dadd( 17.8508, -128.219, -46.9106, 0.12 ) }
    dend_36 { pt3dadd( 17.8, -128.854, -46.7153, 0.12 ) }
    dend_36 { pt3dadd( 17.7404, -129.43, -46.5226, 0.12 ) }
    dend_36 { pt3dadd( 17.6303, -130.337, -46.2509, 1.44 ) }
    dend_36 { pt3dadd( 17.5694, -130.82, -46.134, 1.68 ) }
    dend_36 { pt3dadd( 17.5039, -131.195, -46.0413, 1.68 ) }
    dend_36 { pt3dadd( 17.195, -132.765, -45.6905, 0.12 ) }
    dend_36 { pt3dadd( 17.0225, -133.476, -45.554, 0.12 ) }
    dend_36 { pt3dadd( 16.8065, -134.225, -45.4574, 0.12 ) }
    dend_36 { pt3dadd( 16.7259, -134.481, -45.4457, 0.96 ) }
    dend_36 { pt3dadd( 16.5265, -135.07, -45.446, 0.96 ) }
    dend_36 { pt3dadd( 16.3491, -135.608, -45.4746, 0.12 ) }
    dend_36 { pt3dadd( 15.8774, -137.041, -45.6809, 0.12 ) }
    dend_36 { pt3dadd( 15.6269, -137.769, -45.7908, 0.96 ) }
    dend_36 { pt3dadd( 15.3927, -138.427, -45.9085, 1.68 ) }
    dend_36 { pt3dadd( 15.2331, -138.89, -45.998, 1.92 ) }
    dend_36 { pt3dadd( 15.0754, -139.373, -46.1126, 1.92 ) }
    dend_36 { pt3dadd( 14.7063, -140.566, -46.448, 0.12 ) }
    dend_36 { pt3dadd( 14.5686, -141.014, -46.6145, 0.12 ) }
    dend_36 { pt3dadd( 14.2456, -142.002, -47.033, 0.12 ) }
    dend_36 { pt3dadd( 14.0943, -142.435, -47.2743, 0.6 ) }
    dend_36 { pt3dadd( 13.8669, -142.992, -47.6472, 0.12 ) }
    dend_36 { pt3dadd( 13.6043, -143.547, -48.0683, 0.12 ) }
    dend_36 { pt3dadd( 13.3231, -144.114, -48.5332, 1.2 ) }
    dend_36 { pt3dadd( 12.9145, -144.897, -49.1972, 1.68 ) }
    dend_36 { pt3dadd( 12.2909, -146.017, -50.1442, 0.12 ) }
    dend_36 { pt3dadd( 11.9894, -146.582, -50.6121, 0.12 ) }
    dend_36 { pt3dadd( 11.7979, -146.993, -50.9158, 0.12 ) }
    dend_36 { pt3dadd( 11.6162, -147.487, -51.2668, 0.12 ) }
    dend_36 { pt3dadd( 11.5341, -147.79, -51.4622, 1.2 ) }
    dend_36 { pt3dadd( 11.4013, -148.461, -51.8549, 1.56 ) }
    dend_36 { pt3dadd( 11.2336, -149.667, -52.4861, 0.24 ) }
    dend_36 { pt3dadd( 11.1525, -150.561, -52.9587, 0.24 ) }
    dend_36 { pt3dadd( 11.0746, -151.454, -53.4462, 0.72 ) }
    dend_36 { pt3dadd( 11.0268, -151.891, -53.6888, 0.84 ) }
    dend_36 { pt3dadd( 10.9677, -152.358, -53.9433, 0.12 ) }
    dend_36 { pt3dadd( 10.9179, -152.681, -54.1227, 0.12 ) }
    dend_36 { pt3dadd( 10.807, -153.206, -54.4385, 0.12 ) }
    dend_36 { pt3dadd( 10.7217, -153.58, -54.6839, 0.12 ) }
    dend_36 { pt3dadd( 10.5765, -154.06, -54.7813, 0.12 ) }
    dend_36 { pt3dadd( 10.4994, -154.296, -54.7812, 0.12 ) }
    dend_36 { pt3dadd( 10.1935, -155.144, -54.6765, 1.32 ) }
    dend_36 { pt3dadd( 9.81078, -156.07, -54.5031, 0.12 ) }
    dend_36 { pt3dadd( 9.47367, -156.904, -54.2534, 0.12 ) }
    dend_36 { pt3dadd( 8.00341, -160.611, -52.6823, 0.6 ) }
    dend_36 { pt3dadd( 7.41505, -162.0, -51.8458, 1.32 ) }
    dend_36 { pt3dadd( 7.23737, -162.377, -51.5335, 2.04 ) }
    dend_36 { pt3dadd( 7.01991, -162.778, -51.0642, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 100.498, -46.8515, 18.7676, 0.24 ) }
    dend_32 { pt3dadd( 101.618, -47.162, 19.5194, 0.24 ) }
    dend_32 { pt3dadd( 102.112, -47.2886, 19.8531, 0.24 ) }
    dend_32 { pt3dadd( 103.919, -47.7388, 21.0593, 0.24 ) }
    dend_32 { pt3dadd( 104.456, -47.855, 21.3981, 0.96 ) }
    dend_32 { pt3dadd( 105.486, -48.034, 21.9597, 1.56 ) }
    dend_32 { pt3dadd( 106.388, -48.1819, 22.468, 0.36 ) }
    dend_32 { pt3dadd( 108.14, -48.4289, 23.4267, 0.12 ) }
    dend_32 { pt3dadd( 108.539, -48.475, 23.6397, 1.2 ) }
    dend_32 { pt3dadd( 109.803, -48.5614, 24.2458, 2.16 ) }
    dend_32 { pt3dadd( 111.375, -48.5949, 25.0532, 0.12 ) }
    dend_32 { pt3dadd( 113.004, -48.5243, 25.9189, 0.12 ) }
    dend_32 { pt3dadd( 113.294, -48.4832, 26.0758, 0.84 ) }
    dend_32 { pt3dadd( 113.865, -48.3275, 26.3786, 0.96 ) }
    dend_32 { pt3dadd( 114.63, -48.0663, 26.8145, 0.12 ) }
    dend_32 { pt3dadd( 115.33, -47.7222, 27.2838, 0.12 ) }
    dend_32 { pt3dadd( 115.56, -47.5399, 27.4678, 0.6 ) }
    dend_32 { pt3dadd( 116.125, -46.9309, 27.7881, 0.12 ) }
    dend_32 { pt3dadd( 116.5, -46.4258, 28.0459, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 100.498, -46.8515, 18.7676, 0.6 ) }
    dend_31 { pt3dadd( 100.63, -45.5081, 18.8207, 0.6 ) }
    dend_31 { pt3dadd( 100.674, -45.1378, 18.8363, 0.6 ) }
    dend_31 { pt3dadd( 100.81, -44.3574, 18.8453, 0.84 ) }
    dend_31 { pt3dadd( 101.068, -43.3106, 18.835, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 101.361, -42.1202, 18.8049, 0.12 ) }
    dend_31 { pt3dadd( 101.463, -41.7157, 18.7898, 0.96 ) }
    dend_31 { pt3dadd( 101.734, -40.8443, 18.7531, 1.2 ) }
    dend_31 { pt3dadd( 102.087, -39.8659, 18.6883, 0.12 ) }
    dend_31 { pt3dadd( 102.527, -38.7853, 18.5892, 0.12 ) }
    dend_31 { pt3dadd( 102.905, -37.9497, 18.4663, 0.12 ) }
    dend_31 { pt3dadd( 103.38, -37.0285, 18.2856, 0.12 ) }
    dend_31 { pt3dadd( 103.609, -36.6203, 18.2028, 0.12 ) }
    dend_31 { pt3dadd( 104.164, -35.7125, 18.0162, 1.68 ) }
    dend_31 { pt3dadd( 104.372, -35.4306, 17.892, 1.92 ) }
    dend_31 { pt3dadd( 105.21, -34.5053, 17.2534, 0.12 ) }
    dend_31 { pt3dadd( 105.961, -33.8029, 16.5807, 0.12 ) }
    dend_31 { pt3dadd( 106.289, -33.4951, 16.2243, 1.32 ) }
    dend_31 { pt3dadd( 106.558, -33.2182, 15.8295, 1.68 ) }
    dend_31 { pt3dadd( 108.14, -31.5989, 12.8463, 0.36 ) }
    dend_31 { pt3dadd( 108.33, -31.4272, 12.4547, 0.36 ) }
    dend_31 { pt3dadd( 108.586, -31.2142, 11.862, 0.12 ) }
    dend_31 { pt3dadd( 108.961, -30.9145, 10.8827, 0.12 ) }
    dend_31 { pt3dadd( 109.672, -30.3202, 8.82726, 0.48 ) }
    dend_31 { pt3dadd( 110.085, -29.9205, 7.48308, 1.44 ) }
    dend_31 { pt3dadd( 110.376, -29.4973, 6.40204, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 11.7927, -256.677, -35.2879, 0.24 ) }
    dend_22 { pt3dadd( 12.0192, -256.345, -35.4749, 0.24 ) }
    dend_22 { pt3dadd( 12.3065, -255.922, -35.7122, 0.24 ) }
    dend_22 { pt3dadd( 12.6541, -255.411, -35.9992, 0.6 ) }
    dend_22 { pt3dadd( 13.0053, -254.895, -36.2892, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 11.7927, -256.677, -35.2879, 0.12 ) }
    dend_21 { pt3dadd( 12.3924, -257.007, -34.9253, 0.12 ) }
    dend_21 { pt3dadd( 12.7787, -257.183, -34.6884, 0.12 ) }
    dend_21 { pt3dadd( 13.1105, -257.297, -34.5268, 0.12 ) }
    dend_21 { pt3dadd( 13.5337, -257.4, -34.379, 0.12 ) }
    dend_21 { pt3dadd( 13.765, -257.438, -34.3179, 0.12 ) }
    dend_21 { pt3dadd( 15.6265, -257.631, -33.9477, 0.12 ) }
    dend_21 { pt3dadd( 16.4074, -257.613, -33.8687, 2.04 ) }
    dend_21 { pt3dadd( 17.2364, -257.53, -33.8033, 1.56 ) }
    dend_21 { pt3dadd( 18.1056, -257.39, -33.765, 0.36 ) }
    dend_21 { pt3dadd( 18.577, -257.286, -33.7306, 0.36 ) }
    dend_21 { pt3dadd( 19.1102, -257.148, -33.695, 0.36 ) }
    dend_21 { pt3dadd( 20.1712, -256.843, -33.6741, 0.36 ) }
    dend_21 { pt3dadd( 20.6029, -256.716, -33.6069, 0.6 ) }
    dend_21 { pt3dadd( 20.9042, -256.629, -33.5224, 0.6 ) }
    dend_21 { pt3dadd( 22.2249, -256.228, -33.0485, 0.36 ) }
    dend_21 { pt3dadd( 22.5175, -256.14, -32.9386, 0.6 ) }
    dend_21 { pt3dadd( 22.9287, -256.022, -32.8108, 0.6 ) }
    dend_21 { pt3dadd( 23.6695, -255.831, -32.6564, 0.12 ) }
    dend_21 { pt3dadd( 23.9706, -255.777, -32.6504, 0.12 ) }
    dend_21 { pt3dadd( 24.5097, -255.73, -32.7373, 0.12 ) }
    dend_21 { pt3dadd( 25.0032, -255.751, -32.958, 1.08 ) }
    dend_21 { pt3dadd( 25.9278, -255.915, -33.4799, 0.12 ) }
    dend_21 { pt3dadd( 26.122, -255.985, -33.6073, 0.12 ) }
    dend_21 { pt3dadd( 26.6455, -256.24, -33.9749, 0.12 ) }
    dend_21 { pt3dadd( 26.9746, -256.437, -34.2075, 0.48 ) }
    dend_21 { pt3dadd( 27.5037, -256.806, -34.584, 0.12 ) }
    dend_21 { pt3dadd( 27.8176, -257.046, -34.7988, 0.12 ) }
    dend_21 { pt3dadd( 28.369, -257.476, -35.1113, 0.12 ) }
    dend_21 { pt3dadd( 28.7578, -257.781, -35.343, 0.12 ) }
    dend_21 { pt3dadd( 29.0822, -258.028, -35.5473, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 7.01991, -162.778, -51.0642, 0.48 ) }
    dend_38 { pt3dadd( 7.02509, -164.339, -55.2233, 0.48 ) }
    dend_38 { pt3dadd( 7.01093, -164.595, -55.8727, 0.48 ) }
    dend_38 { pt3dadd( 6.95597, -165.212, -57.2483, 0.12 ) }
    dend_38 { pt3dadd( 6.93305, -165.524, -57.8815, 0.12 ) }
    dend_38 { pt3dadd( 6.90128, -165.956, -58.7589, 1.2 ) }
    dend_38 { pt3dadd( 6.86127, -166.501, -59.8639, 0.12 ) }
    dend_38 { pt3dadd( 6.83225, -166.649, -60.0833, 0.12 ) }
    dend_38 { pt3dadd( 6.74305, -167.111, -60.7855, 0.72 ) }
    dend_38 { pt3dadd( 6.66926, -167.392, -61.1173, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 7.01991, -162.778, -51.0642, 0.12 ) }
    dend_37 { pt3dadd( 5.50505, -164.33, -52.8601, 0.12 ) }
    dend_37 { pt3dadd( 4.91899, -165.047, -53.3581, 0.12 ) }
    dend_37 { pt3dadd( 4.75121, -165.258, -53.4783, 0.6 ) }
    dend_37 { pt3dadd( 4.27299, -165.848, -53.7691, 0.24 ) }
    dend_37 { pt3dadd( 4.09225, -166.072, -53.8351, 0.24 ) }
    dend_37 { pt3dadd( 3.60634, -166.659, -53.9453, 0.24 ) }
    dend_37 { pt3dadd( 3.23761, -167.102, -53.8797, 0.6 ) }
    dend_37 { pt3dadd( 2.66825, -167.665, -53.7661, 0.12 ) }
    dend_37 { pt3dadd( 2.17496, -168.077, -53.6804, 0.12 ) }
    dend_37 { pt3dadd( 1.13677, -168.777, -53.5388, 0.84 ) }
    dend_37 { pt3dadd( 0.889184, -168.927, -53.4964, 0.84 ) }
    dend_37 { pt3dadd( 0.423278, -169.174, -53.3861, 0.12 ) }
    dend_37 { pt3dadd( 0.167768, -169.291, -53.3077, 0.12 ) }
    dend_37 { pt3dadd( -0.491479, -169.544, -53.0451, 0.84 ) }
    dend_37 { pt3dadd( -0.760106, -169.618, -52.9618, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_48 nseg = 3
    dend_25 nseg = 3
    dend_16 nseg = 9
    dend_41 nseg = 9
    dend_58 nseg = 3
    dend_55 nseg = 3
    dend_53 nseg = 9
    dend_50 nseg = 3
    dend_34 nseg = 3
    dend_4 nseg = 3
    dend_60 nseg = 27
    dend_59 nseg = 5
    dend_57 nseg = 7
    dend_56 nseg = 3
    dend_52 nseg = 7
    dend_51 nseg = 7
    dend_47 nseg = 3
    dend_30 nseg = 3
    dend_14 nseg = 9
    dend_11 nseg = 3
    dend_10 nseg = 7
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_DBC_c5d29c2b17_0_0


