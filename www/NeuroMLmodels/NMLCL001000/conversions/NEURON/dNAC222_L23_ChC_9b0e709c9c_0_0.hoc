// Cell: dNAC222_L23_ChC_9b0e709c9c_0_0
/*
{
  "id" : "dNAC222_L23_ChC_9b0e709c9c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.247476, -12.3185, -1.01707, 2.36383", "0.272374, -11.1472, -0.92957, 3.66321", "0.297273, -9.97598, -0.842075, 5.22974", "0.322171, -8.80474, -0.75458, 6.26105", "0.34707, -7.63351, -0.667085, 6.92536", "0.371968, -6.46227, -0.57959, 7.55364", "0.396866, -5.29103, -0.492094, 8.36178", "0.421765, -4.1198, -0.404599, 9.09467", "0.446663, -2.94856, -0.317104, 9.82452", "0.471562, -1.77733, -0.229609, 10.5969", "0.49646, -0.606089, -0.142114, 10.9527", "0.521359, 0.565147, -0.0546186, 11.1935", "0.546257, 1.73638, 0.0328765, 11.3346", "0.571156, 2.90762, 0.120372, 11.3156", "0.596054, 4.07886, 0.207867, 11.2804", "0.620953, 5.25009, 0.295362, 11.0098", "0.645851, 6.42133, 0.382857, 10.6994", "0.67075, 7.59256, 0.470352, 10.2417", "0.695648, 8.7638, 0.557847, 9.96532", "0.720546, 9.93504, 0.645343, 4.49434", "0.745445, 11.1063, 0.732838, 2.79989" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "5.17534, 7.39835, -4.88165, 0.29", "5.67345, 7.87445, -4.6937, 0.29", "6.20438, 8.39887, -4.51577, 0.37", "6.77107, 8.97668, -4.34852, 0.52", "7.10063, 9.32309, -4.26215, 0.52", "7.5627, 9.80529, -4.15984, 0.81", "7.83535, 10.1054, -4.10425, 0.81", "8.14618, 10.4836, -4.02926, 0.29", "8.43677, 10.8969, -3.95062, 0.59", "8.6825, 11.2919, -3.88693, 0.59", "8.94629, 11.7433, -3.80826, 0.59", "9.29751, 12.3552, -3.69544, 0.29", "9.80063, 13.2291, -3.53943, 0.29", "10.1228, 13.7668, -3.44998, 0.81", "10.3335, 14.0987, -3.40112, 0.81", "10.6243, 14.5355, -3.34947, 0.52", "11.0581, 15.1138, -3.30732, 0.29", "11.6574, 15.8468, -3.28212, 0.22", "12.0066, 16.2437, -3.29118, 0.29", "12.381, 16.6503, -3.30441, 0.29", "13.1518, 17.4689, -3.33503, 0.22", "13.8902, 18.2286, -3.3689, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.00466, -9.84165, 5.49835, 1.11", "-1.00466, -9.84165, 5.49835, 1.11", "-1.58119, -10.6345, 5.48752, 1.11", "-2.30599, -11.744, 5.50741, 0.88", "-2.82969, -12.6243, 5.59137, 0.88", "-3.57479, -14.0415, 5.83857, 1.18", "-4.04608, -15.0984, 6.12936, 1.18", "-4.56995, -16.7417, 6.74889, 0.81", "-4.6843, -17.4946, 7.11167, 1.11", "-4.59412, -18.6513, 7.75236, 1.11", "-4.32399, -19.623, 8.37013, 0.96", "-3.78, -20.8794, 9.24048, 1.11", "-3.33936, -21.7528, 9.85624, 1.25", "-2.96603, -22.4324, 10.3224, 0.96", "-2.40535, -23.6709, 11.0392, 1.03", "-2.08648, -24.6695, 11.4766, 1.03", "-2.00143, -25.3107, 11.6992, 0.59", "-2.05726, -26.1756, 11.9887, 0.88", "-2.16636, -26.5779, 12.1422, 0.88", "-2.7241, -27.8046, 12.6553, 0.66", "-3.06838, -28.3176, 12.9138, 0.74", "-3.6338, -29.0907, 13.3206, 0.66", "-4.31679, -30.098, 13.8715, 0.88", "-4.77115, -30.8877, 14.2867, 0.81", "-5.05031, -31.4919, 14.5975, 0.44", "-5.47079, -32.7268, 15.2177, 0.81", "-5.7578, -33.8665, 15.7222, 0.81", "-5.94922, -35.0948, 16.1443, 0.59", "-6.03123, -36.2122, 16.4303, 1.11", "-6.03045, -37.1448, 16.5962, 1.33", "-5.987, -37.9441, 16.7083, 1.11", "-5.87481, -39.0358, 16.837, 0.81", "-5.74674, -40.0528, 17.0221, 0.66", "-5.61956, -40.734, 17.2414, 1.18", "-5.32145, -41.8129, 17.7845, 0.96", "-5.0766, -42.5445, 18.2528, 0.74", "-4.73921, -43.4679, 18.96, 0.66", "-4.36391, -44.4748, 19.8254, 0.88", "-3.96669, -45.6701, 20.9715, 1.18", "-3.71277, -46.6691, 21.9711, 0.66", "-3.6232, -47.3337, 22.6231, 0.59", "-3.61015, -47.9546, 23.133, 0.74", "-3.66631, -48.6658, 23.5963, 0.44", "-3.83854, -49.7069, 24.0705, 0.44", "-3.99273, -50.3542, 24.2362, 0.44", "-4.25904, -51.352, 24.3347, 0.37", "-4.46703, -52.3489, 24.5565, 0.37", "-4.59719, -53.0301, 24.8431, 0.96", "-4.68449, -53.4825, 25.1135, 0.96", "-4.87644, -54.3356, 25.7853, 0.44", "-5.1153, -55.1458, 26.535, 0.81", "-5.97374, -57.8042, 29.1684, 0.88", "-6.29612, -58.7911, 30.1572, 0.88", "-6.41728, -59.2334, 30.573, 0.88", "-6.58971, -60.0633, 31.2684, 0.66", "-6.77698, -61.2924, 32.1705, 0.52", "-6.85803, -62.1806, 32.6291, 0.59", "-6.87556, -63.069, 32.8461, 0.59", "-6.77431, -64.1779, 33.1024, 0.74", "-6.68353, -64.8247, 33.2658, 0.74", "-6.42616, -66.4599, 33.7429, 0.74", "-6.24865, -67.4854, 34.1496, 0.52", "-6.13323, -68.1355, 34.4563, 0.66", "-6.00026, -68.8077, 34.7851, 0.66", "-5.76704, -69.6971, 35.2323, 0.37", "-5.55719, -70.2909, 35.4874, 0.37", "-5.22825, -71.0564, 35.7158, 0.37", "-4.87271, -71.9032, 35.9234, 0.37", "-4.5876, -72.6041, 36.0645, 0.37", "-4.08932, -73.7287, 36.2595, 0.37", "-3.78566, -74.3304, 36.3714, 0.52", "-3.56992, -74.7615, 36.4482, 0.66", "-3.27921, -75.4119, 36.5675, 0.52", "-2.94056, -76.2837, 36.7459, 0.52", "-2.61271, -77.1696, 36.9431, 0.74", "-2.33513, -77.9227, 37.0903, 0.88", "-2.03768, -78.7111, 37.2542, 0.96", "-1.85193, -79.1954, 37.3589, 0.96", "-1.66138, -79.6879, 37.4677, 0.81", "-1.36235, -80.5707, 37.6502, 1.18", "-1.20043, -81.1985, 37.7795, 1.4", "-1.09169, -81.6967, 37.8673, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.87466, -11.5316, -0.261648, 2.87", "-2.87466, -11.5316, -0.261648, 2.87", "-3.56157, -12.2289, -0.196817, 2.87", "-4.88278, -13.592, -0.099211, 2.21", "-6.03673, -14.7825, -0.0139624, 2.21", "-6.87366, -15.6459, 0.0478664, 2.21", "-7.93513, -16.741, 0.126282, 2.21", "-9.03961, -17.8733, 0.19979, 2.21", "-10.1757, -19.0215, 0.256553, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.71466, 9.58839, 3.05835, 3.83", "-4.11608, 10.1938, 3.43813, 3.83", "-5.05597, 11.6115, 4.32735, 3.32", "-5.85335, 12.8142, 5.08174, 3.32", "-6.57053, 13.8959, 5.76025, 3.39", "-7.55058, 15.3742, 6.68747, 3.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.19534, 8.05835, -4.07165, 1.99", "4.19534, 8.05835, -4.07165, 1.99", "4.31414, 8.71034, -3.75388, 1.03", "4.4096, 9.30439, -3.42913, 1.03", "4.52264, 10.1373, -2.94112, 1.03", "4.58573, 10.6791, -2.61934, 1.03", "4.64824, 11.3008, -2.25729, 1.03", "4.72414, 12.2123, -1.7332, 1.11", "4.75692, 12.7207, -1.41902, 1.33", "4.78424, 13.322, -1.04173, 1.33", "4.80001, 13.6322, -0.853655, 1.47", "4.83458, 14.0126, -0.633193, 1.47", "4.90892, 14.6259, -0.318771, 1.25", "5.05945, 15.5745, 0.0879944, 1.25", "5.15786, 16.0512, 0.263625, 1.4", "5.34507, 16.7632, 0.498947, 1.4", "5.59318, 17.6187, 0.717592, 1.18", "5.79638, 18.3148, 0.823421, 1.25", "5.96255, 18.9133, 0.853952, 1.11", "6.17259, 19.7662, 0.78883, 0.88", "6.34018, 20.55, 0.676376, 0.88", "6.51754, 21.6246, 0.469247, 0.88", "6.62807, 22.6721, 0.229809, 1.4", "6.6773, 23.5458, 0.0204974, 1.55", "6.68627, 24.7111, -0.236382, 1.84", "6.67112, 25.1884, -0.329072, 1.84", "6.6344, 26.0781, -0.470032, 1.33", "6.61124, 27.1198, -0.572878, 0.96", "6.63361, 28.0014, -0.622342, 0.96", "6.7417, 29.1895, -0.652953, 1.03", "6.84724, 29.7536, -0.645369, 1.25", "7.09176, 30.5708, -0.62291, 1.47", "7.3309, 31.115, -0.603046, 1.47", "7.77729, 31.8712, -0.570676, 1.03", "8.18418, 32.4198, -0.559941, 1.03", "8.70733, 33.0255, -0.552669, 1.47", "9.20867, 33.5639, -0.532094, 1.25", "9.54276, 33.9038, -0.503727, 1.55", "10.186, 34.5436, -0.440483, 0.81", "10.7905, 35.1409, -0.368559, 0.81", "11.2606, 35.6096, -0.300372, 1.25", "11.6802, 36.0422, -0.223082, 1.47", "12.0748, 36.4682, -0.130115, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.745445, 11.1063, 0.732838, 0.885543", "1.06425, 26.1029, 0.732838, 0.885543", "1.38305, 41.0995, 0.732838, 0.885543" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.1757, -19.0215, 0.256553, 0.96", "-10.1992, -19.5945, 0.752401, 0.96", "-10.3083, -20.9557, 1.8927, 0.74", "-10.5568, -23.3966, 3.82779, 1.11", "-10.7546, -24.8271, 4.88878, 0.81", "-10.9234, -25.7455, 5.50897, 0.66", "-11.0913, -26.4745, 5.95529, 0.44", "-11.3293, -27.2648, 6.40554, 0.66", "-11.5509, -27.7927, 6.63876, 1.03", "-11.9331, -28.5763, 6.75865, 1.03", "-12.4805, -29.6545, 6.77672, 0.81", "-12.8898, -30.5621, 6.72775, 0.81", "-13.2123, -31.4316, 6.62294, 0.96", "-13.6435, -32.9852, 6.34974, 0.74", "-14.0458, -35.0204, 5.92332, 0.52", "-14.1543, -35.8721, 5.69931, 0.88", "-14.2578, -37.2111, 5.24565, 0.74", "-14.3198, -38.8612, 4.56961, 0.59", "-14.3305, -40.3637, 3.86068, 0.74", "-14.3131, -41.862, 3.13236, 0.59", "-14.3251, -43.794, 2.20244, 0.74", "-14.4156, -45.3908, 1.4605, 0.81", "-14.5598, -46.6801, 0.902298, 0.52", "-14.7186, -47.7222, 0.502485, 0.66", "-14.9582, -49.0353, 0.0826683, 0.59", "-15.2427, -50.4649, -0.230913, 0.74", "-15.4992, -51.6101, -0.341758, 0.74", "-15.8513, -52.982, -0.345919, 0.52", "-16.1747, -54.0401, -0.299509, 0.96", "-16.3824, -54.6952, -0.267359, 1.11", "-16.6242, -55.5427, -0.249348, 1.25", "-16.858, -56.4196, -0.242616, 0.96", "-17.1448, -57.5089, -0.255008, 0.96", "-17.5367, -58.9146, -0.32546, 0.52", "-17.8352, -60.0651, -0.428003, 0.59", "-18.0975, -61.2267, -0.568384, 0.81", "-18.2993, -62.3329, -0.773326, 0.96", "-18.4245, -63.3552, -1.03381, 0.96", "-18.5378, -64.7858, -1.49839, 0.74", "-18.624, -66.3483, -2.08271, 0.74", "-18.6986, -67.3808, -2.5036, 1.03", "-18.8244, -68.7675, -3.09417, 1.25", "-18.9286, -69.9688, -3.65054, 0.66", "-18.9886, -70.8029, -3.99087, 0.52", "-19.0533, -71.7413, -4.30207, 0.74", "-19.1363, -72.9487, -4.58953, 0.74", "-19.1806, -74.0882, -4.72182, 0.66", "-19.1938, -75.2781, -4.73232, 0.66", "-19.1332, -77.6651, -4.58455, 0.66", "-19.0385, -78.9425, -4.45413, 0.74", "-18.8477, -80.66, -4.24716, 0.74", "-18.5977, -82.6221, -3.95549, 0.88", "-18.475, -83.8012, -3.7586, 1.11", "-18.377, -85.1886, -3.51502, 1.11", "-18.2861, -86.8498, -3.27439, 0.88", "-18.1999, -88.451, -3.01379, 0.74", "-18.0966, -90.3201, -2.76467, 0.59", "-17.9809, -91.859, -2.68336, 0.44", "-17.9143, -92.4416, -2.69436, 0.74", "-17.7284, -93.5523, -2.79248, 0.88", "-17.4436, -94.6616, -2.91549, 0.88", "-16.8765, -96.3905, -3.11754, 0.66", "-16.4624, -97.4931, -3.21394, 0.81", "-16.1017, -98.5188, -3.22351, 0.81", "-15.8716, -99.5279, -3.16257, 0.59", "-15.7287, -101.179, -3.01047, 0.74", "-15.7739, -102.178, -2.93199, 0.96", "-15.9211, -103.137, -2.91025, 0.96", "-16.2361, -104.428, -3.02951, 0.66", "-16.7014, -106.001, -3.365, 0.44", "-17.0838, -107.184, -3.75798, 0.81", "-17.5088, -108.555, -4.33222, 0.81", "-17.9984, -110.356, -5.16174, 0.37", "-18.2641, -111.487, -5.71803, 0.81", "-18.4443, -112.479, -6.20815, 1.03", "-18.5494, -113.468, -6.64541, 0.52", "-18.566, -114.67, -7.05457, 0.29", "-18.5199, -115.27, -7.21078, 0.88", "-18.4633, -115.722, -7.29887, 1.11", "-18.367, -116.359, -7.43805, 1.18", "-18.225, -117.32, -7.67051, 0.81", "-18.0443, -118.745, -8.0428, 0.44", "-17.9594, -119.662, -8.33368, 0.29", "-17.9043, -120.54, -8.61347, 0.29", "-17.894, -121.509, -8.91101, 0.59", "-17.9095, -121.88, -9.01469, 0.88", "-17.9646, -122.472, -9.1442, 0.88", "-18.0624, -123.236, -9.22588, 0.59", "-18.1738, -124.328, -9.19743, 0.29", "-18.2296, -124.972, -9.12531, 0.66", "-18.282, -125.713, -8.9763, 0.81", "-18.3302, -126.526, -8.79297, 1.03", "-18.3805, -127.187, -8.63995, 1.18", "-18.4695, -127.933, -8.4611, 1.18", "-18.542, -128.383, -8.36398, 1.25", "-18.7457, -129.395, -8.19018, 0.96", "-18.9745, -130.352, -8.07425, 0.59", "-19.2662, -131.522, -7.99923, 0.37", "-19.512, -132.479, -7.99627, 0.22", "-19.6519, -133.012, -8.0221, 0.29", "-19.9206, -134.067, -8.11445, 0.44", "-20.0911, -134.734, -8.1978, 1.03", "-20.3068, -135.664, -8.32515, 1.18", "-20.4514, -136.353, -8.43419, 1.18", "-20.7192, -137.653, -8.64882, 0.59", "-20.9379, -138.634, -8.77061, 0.59", "-21.1563, -139.538, -8.85594, 0.59", "-21.517, -140.963, -9.01377, 0.81", "-21.696, -141.651, -9.09875, 0.88", "-22.0958, -143.153, -9.28806, 0.52", "-22.5093, -144.764, -9.49802, 0.52", "-22.8604, -146.253, -9.67014, 0.59", "-23.1144, -147.415, -9.81963, 0.29", "-23.2576, -148.148, -9.93654, 0.29", "-23.3867, -148.913, -10.0762, 0.88", "-23.6126, -150.397, -10.4, 0.29", "-23.788, -151.493, -10.67, 1.03", "-23.973, -152.504, -10.9478, 1.25", "-24.173, -153.486, -11.257, 1.03", "-24.4957, -155.037, -11.858, 0.44", "-24.7256, -156.068, -12.3494, 0.44", "-25.0222, -157.176, -12.955, 0.44", "-25.47, -158.588, -13.8063, 0.44", "-25.9372, -159.961, -14.6355, 0.66", "-26.3602, -161.155, -15.3963, 1.55", "-26.7317, -162.167, -16.0694, 1.92", "-27.1792, -163.438, -16.8714, 0.66", "-27.6936, -164.887, -17.6901, 0.59", "-28.074, -165.913, -18.1665, 0.29", "-28.5573, -167.157, -18.619, 0.29", "-28.9682, -168.213, -18.9087, 0.29", "-29.631, -169.974, -19.2602, 0.29", "-30.0308, -171.083, -19.4199, 1.25", "-30.4185, -172.256, -19.537, 1.33", "-30.9249, -173.886, -19.676, 0.52", "-31.1193, -174.601, -19.726, 0.52", "-31.3251, -175.59, -19.8151, 0.66", "-31.4674, -176.562, -19.9189, 0.37", "-31.5217, -177.425, -20.0239, 0.29", "-31.5078, -178.179, -20.1214, 0.81", "-31.4277, -179.019, -20.232, 0.96", "-31.2855, -180.035, -20.3592, 0.59", "-31.1329, -180.88, -20.4321, 0.44", "-31.0976, -181.054, -20.4413, 0.37", "-30.7978, -182.588, -20.4851, 0.22", "-30.6602, -183.262, -20.4918, 0.52", "-30.6076, -183.519, -20.4904, 0.52", "-30.1775, -185.57, -20.4384, 0.22", "-30.0824, -185.996, -20.4191, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.1757, -19.0215, 0.256553, 1.62", "-11.5399, -19.826, 0.901541, 1.62", "-12.5503, -20.4219, 1.37928, 1.62", "-13.3277, -20.8803, 1.74683, 1.84", "-14.0389, -21.2997, 2.08306, 2.06", "-14.7534, -21.7211, 2.4209, 2.36", "-15.2243, -21.9988, 2.64354, 2.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.55058, 15.3742, 6.68747, 1.25", "-7.97007, 17.0624, 6.74337, 1.25", "-8.19379, 18.0252, 6.96343, 1.4", "-8.35964, 18.7706, 7.21091, 1.4", "-8.57467, 19.818, 7.61552, 1.47", "-8.65746, 20.2212, 7.77129, 1.69", "-8.78683, 20.8513, 8.01471, 1.69", "-8.99666, 21.9868, 8.69683, 1.62", "-9.09781, 22.6602, 9.19998, 1.55", "-9.18564, 23.2737, 9.72218, 1.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.55058, 15.3742, 6.68747, 1.77", "-9.37801, 16.4375, 8.89811, 1.77", "-11.1297, 17.4567, 11.0172, 1.62", "-12.2189, 18.0904, 12.3349, 1.55", "-13.2401, 18.6846, 13.5702, 1.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.0748, 36.4682, -0.130115, 0.59", "12.3221, 38.2805, -0.483865, 0.59", "12.4632, 38.9952, -0.627577, 0.59", "12.6694, 39.6866, -0.796033, 0.74", "12.9386, 40.3226, -0.988123, 0.74", "13.261, 40.9461, -1.22115, 0.88", "13.5349, 41.4359, -1.4191, 1.03", "14.0384, 42.2165, -1.73519, 0.59", "14.4813, 42.922, -2.01109, 0.88", "14.8915, 43.666, -2.29385, 0.88", "15.2319, 44.4229, -2.57359, 0.66", "15.4436, 45.2013, -2.85124, 0.52", "15.3945, 45.8757, -3.12539, 0.52", "15.1155, 46.794, -3.58857, 0.52", "14.6778, 47.7, -4.08327, 0.96", "14.3813, 48.1596, -4.34058, 1.18", "14.0099, 48.636, -4.60832, 1.18", "12.6251, 50.1794, -5.49764, 0.81", "12.0073, 50.8736, -5.8897, 0.59", "11.2859, 51.7607, -6.39535, 0.74", "10.8739, 52.3753, -6.71927, 0.66", "10.6122, 52.9221, -6.97075, 0.66", "10.4087, 53.6606, -7.31816, 0.66", "10.3165, 54.7598, -7.82057, 0.81", "10.3282, 55.8179, -8.36613, 1.03", "10.4056, 56.5385, -8.78481, 0.96", "10.5149, 57.3148, -9.25354, 0.81", "10.729, 58.8816, -10.1656, 0.81", "10.797, 59.4528, -10.4486, 1.03", "10.8423, 60.2013, -10.7259, 1.03", "10.852, 60.8375, -10.8707, 1.11", "10.824, 61.6437, -10.9718, 1.11", "10.7685, 62.4996, -10.989, 0.81", "10.6872, 63.8256, -10.8865, 0.74", "10.6413, 64.7859, -10.7996, 0.88", "10.6216, 65.6174, -10.7339, 0.88", "10.634, 66.2013, -10.7079, 0.52", "10.7127, 67.1547, -10.7047, 0.37", "10.7522, 67.4271, -10.7197, 0.37", "10.8942, 68.201, -10.82, 0.37", "11.1647, 69.3288, -11.0317, 0.74", "11.3409, 70.0161, -11.1648, 0.96", "11.4717, 70.6169, -11.2701, 1.18", "11.5252, 70.9868, -11.3174, 1.18", "11.5567, 71.9147, -11.3426, 0.88", "11.4946, 72.7896, -11.2755, 0.29", "11.3285, 73.882, -11.0876, 0.88", "11.14, 74.6906, -10.8929, 0.88", "10.8945, 75.5295, -10.6404, 0.88", "10.5208, 76.629, -10.2823, 0.59", "10.2718, 77.3175, -10.0434, 0.59", "10.0527, 77.9678, -9.83575, 0.96", "9.80374, 78.9334, -9.58799, 0.88", "9.65694, 79.7954, -9.46762, 0.52", "9.56311, 80.9268, -9.44253, 0.52", "9.53784, 81.8302, -9.53806, 0.52", "9.55714, 82.8544, -9.73283, 0.81", "9.61301, 83.6767, -9.9329, 0.81", "9.77323, 84.9504, -10.3155, 0.81", "9.87117, 85.6457, -10.5354, 0.59", "9.99058, 86.6641, -10.8428, 0.74", "10.0137, 87.3205, -11.0308, 0.88", "9.94189, 88.3395, -11.2744, 0.37", "9.82342, 89.271, -11.4455, 0.37", "9.74301, 89.9343, -11.5326, 0.37", "9.6607, 90.6756, -11.6481, 0.37", "9.62594, 91.206, -11.7646, 0.37", "9.61315, 91.8956, -11.9902, 0.52", "9.64693, 92.4318, -12.2082, 0.81", "9.73606, 93.0295, -12.4516, 0.81", "9.84851, 93.5405, -12.6531, 0.81", "10.0206, 94.283, -12.9132, 0.74", "10.1575, 94.9222, -13.0906, 0.59", "10.2634, 95.606, -13.2264, 0.52", "10.309, 96.2027, -13.306, 0.88", "10.3067, 96.9087, -13.3595, 0.88", "10.2475, 97.7911, -13.3888, 0.44", "10.1466, 98.57, -13.4111, 0.44", "10.0248, 99.2555, -13.4579, 0.44", "9.84723, 100.079, -13.5786, 0.81", "9.67135, 100.867, -13.7448, 0.81", "9.50657, 101.652, -13.9489, 0.59", "9.33274, 102.585, -14.2239, 0.59", "9.2443, 103.154, -14.4006, 0.88", "9.14016, 103.989, -14.6606, 0.88", "9.04157, 104.867, -14.9013, 0.88", "8.97797, 105.405, -15.0009, 0.96", "8.89611, 105.958, -15.032, 0.96", "8.76648, 106.623, -14.9626, 0.44", "8.58746, 107.339, -14.8095, 0.44", "8.46708, 107.824, -14.6777, 0.44", "8.23946, 108.727, -14.4519, 0.81", "8.07812, 109.421, -14.3106, 0.81", "7.86191, 110.4, -14.1345, 1.11", "7.76556, 110.878, -14.054, 1.11", "7.59201, 111.84, -13.8931, 0.37", "7.48541, 112.53, -13.7917, 0.37", "7.32074, 113.647, -13.6334, 0.52", "7.22066, 114.339, -13.5287, 0.52", "7.07519, 115.34, -13.4152, 0.88", "6.97686, 115.982, -13.3772, 0.88", "6.83948, 116.909, -13.3698, 0.88", "6.78804, 117.434, -13.4089, 0.96", "6.74821, 118.412, -13.6391, 0.66", "6.74254, 119.75, -14.1415, 0.66", "6.73591, 120.599, -14.5534, 0.66", "6.70885, 121.186, -14.8714, 0.59", "6.63005, 121.954, -15.3142, 0.74", "6.49572, 122.812, -15.8098, 0.59", "6.36062, 123.521, -16.2093, 0.88", "6.20483, 124.252, -16.5773, 0.88", "6.05592, 124.987, -16.9613, 0.88", "5.99799, 125.337, -17.1548, 0.88", "5.93819, 126.224, -17.6318, 0.37", "5.99113, 126.868, -17.9629, 0.81", "6.09496, 127.294, -18.1949, 0.81", "6.4651, 128.272, -18.7021, 0.37", "6.72664, 128.853, -18.9706, 0.37", "7.0108, 129.453, -19.193, 0.81", "7.26415, 130.043, -19.3503, 0.81", "7.42327, 130.526, -19.4273, 0.81", "7.56051, 131.171, -19.5009, 0.52", "7.5979, 131.63, -19.5392, 0.59", "7.58352, 132.306, -19.6297, 0.44", "7.53094, 133.032, -19.761, 0.59", "7.46283, 133.742, -19.9093, 0.66", "7.33799, 134.89, -20.1497, 0.44", "7.23378, 135.845, -20.3467, 1.33", "7.18136, 136.406, -20.4519, 1.33", "7.10118, 137.39, -20.597, 0.37", "7.06949, 138.198, -20.6784, 0.29", "7.06044, 138.924, -20.7149, 0.52", "7.05948, 139.304, -20.6968, 0.74", "7.01796, 140.037, -20.5969, 0.44", "6.92309, 140.623, -20.4512, 0.74", "6.76509, 141.079, -20.2822, 0.74", "6.47172, 141.661, -20.0197, 0.44", "6.09557, 142.237, -19.7736, 0.74", "5.71094, 142.728, -19.5829, 0.74", "5.39826, 143.072, -19.4888, 0.88", "4.87112, 143.629, -19.3998, 0.59", "4.47252, 144.057, -19.3692, 0.44", "3.90175, 144.735, -19.3809, 0.74", "3.56718, 145.206, -19.4128, 0.59", "2.95031, 146.217, -19.476, 1.25", "2.76239, 146.558, -19.4881, 1.4", "2.44434, 147.16, -19.4726, 0.88", "2.05965, 147.84, -19.3847, 0.59", "1.70864, 148.416, -19.2428, 0.59", "1.28716, 149.035, -19.0249, 0.66", "0.869961, 149.524, -18.7582, 0.52", "0.401495, 149.991, -18.4617, 0.37", "-0.092329, 150.444, -18.152, 0.52", "-0.347265, 150.668, -17.9946, 0.66", "-0.628729, 150.928, -17.8366, 0.66", "-1.09762, 151.564, -17.6752, 0.29", "-1.41598, 152.237, -17.7382, 0.29", "-1.69381, 152.872, -17.9285, 0.66", "-1.92162, 153.304, -18.124, 0.66", "-2.2678, 153.749, -18.3863, 0.52", "-2.90715, 154.25, -18.7698, 0.66", "-3.63457, 154.582, -19.0929, 0.81", "-4.25994, 154.76, -19.2756, 0.96", "-4.95495, 154.907, -19.4064, 0.96", "-5.88833, 155.088, -19.4956, 0.81", "-6.81916, 155.274, -19.5033, 0.74", "-7.64244, 155.508, -19.4282, 0.52", "-8.25796, 155.777, -19.3052, 0.66", "-8.65941, 156.033, -19.1758, 0.66", "-9.3322, 156.61, -18.864, 0.37", "-9.74631, 157.053, -18.6274, 0.37", "-10.5188, 158.006, -18.162, 0.29", "-10.881, 158.496, -17.9647, 0.52", "-11.1659, 158.907, -17.8403, 0.52", "-11.5514, 159.481, -17.7094, 0.29", "-11.871, 159.95, -17.6191, 0.29", "-12.4141, 160.704, -17.5145, 0.59", "-12.9389, 161.352, -17.4815, 0.52", "-13.4049, 161.94, -17.5018, 0.74", "-13.6064, 162.209, -17.5332, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "12.0748, 36.4682, -0.130115, 0.96", "12.5963, 38.108, 0.473612, 0.96", "12.8374, 38.862, 0.69654, 0.96", "13.0225, 39.4504, 0.80772, 0.81", "13.3527, 40.6752, 0.914827, 0.88", "13.5437, 41.5454, 0.916188, 0.88", "13.6786, 42.3911, 0.88435, 0.81", "13.7414, 43.4013, 0.74968, 0.96", "13.7502, 44.4619, 0.587459, 0.74", "13.7342, 45.5337, 0.397737, 0.88", "13.6635, 46.4961, 0.23346, 0.88", "13.5145, 47.631, 0.0916034, 0.88", "13.3082, 48.6713, 0.0275755, 1.03", "13.0196, 49.6727, 0.0604224, 1.03", "12.7175, 50.4825, 0.185335, 0.88", "12.1884, 51.5814, 0.473648, 0.96", "11.8004, 52.2229, 0.69037, 1.11", "11.3516, 52.8613, 0.928793, 1.11", "10.7306, 53.6885, 1.25206, 1.11", "10.1231, 54.4819, 1.56646, 1.11", "9.31219, 55.5856, 1.98178, 1.03", "8.72454, 56.4982, 2.27724, 1.03", "8.11987, 57.5908, 2.58221, 0.96", "7.61235, 58.7282, 2.79876, 1.03", "7.2514, 59.7795, 2.89528, 0.88", "7.05884, 60.5473, 2.90462, 0.88", "6.90152, 61.5236, 2.85718, 1.11", "6.8336, 62.1256, 2.80111, 1.11", "6.72104, 63.802, 2.67992, 1.03", "6.65754, 65.1168, 2.63487, 0.88", "6.60561, 66.3153, 2.67392, 0.88", "6.54471, 67.5921, 2.84391, 0.88", "6.47934, 68.6633, 3.10617, 1.03", "6.36026, 70.2522, 3.65721, 0.88", "6.28665, 71.2627, 4.1245, 0.96", "6.23439, 72.1567, 4.58528, 1.03", "6.19474, 73.0622, 5.02255, 1.33", "6.18256, 74.0437, 5.42598, 0.74", "6.19953, 74.6494, 5.58187, 0.74", "6.24719, 75.4456, 5.63611, 0.88", "6.37891, 76.4644, 5.58774, 0.88", "6.608, 77.6885, 5.41735, 0.81", "6.82538, 78.5994, 5.23718, 0.88", "7.15266, 79.7637, 4.95131, 0.74", "7.39438, 80.542, 4.74532, 0.74", "7.71467, 81.5643, 4.47379, 0.81", "7.99457, 82.4783, 4.22739, 0.81", "8.1921, 83.1621, 4.06282, 0.81", "8.41421, 84.1436, 3.83129, 0.81", "8.53509, 85.0278, 3.64987, 0.96", "8.56823, 85.9331, 3.49005, 0.96", "8.54004, 86.8607, 3.36105, 1.03", "8.46356, 88.0139, 3.19077, 0.96", "8.39353, 89.1381, 3.00831, 0.96", "8.32252, 90.4856, 2.79687, 0.96", "8.26529, 91.6264, 2.59663, 0.96", "8.2219, 92.8428, 2.368, 0.88", "8.17019, 94.3614, 2.08672, 0.81", "8.12361, 95.3064, 1.91518, 0.81", "8.05256, 96.2698, 1.75862, 0.74", "7.88419, 97.3729, 1.61434, 1.03", "7.6712, 98.2401, 1.54634, 1.03", "7.29245, 99.3471, 1.55463, 1.03", "6.90952, 100.332, 1.64881, 1.11", "6.64153, 100.983, 1.73254, 1.11", "6.14825, 102.251, 1.94053, 0.96", "5.80181, 103.261, 2.13178, 0.96", "5.48914, 104.379, 2.34411, 0.96", "5.17726, 105.835, 2.61297, 0.88", "5.00371, 106.928, 2.80412, 1.18", "4.83825, 108.183, 3.02601, 0.96", "4.70677, 109.217, 3.21683, 0.88", "4.5743, 110.279, 3.4325, 0.88", "4.44695, 111.36, 3.67758, 0.88", "4.35168, 112.208, 3.88411, 0.96", "4.23374, 113.292, 4.15425, 0.96", "4.11018, 114.377, 4.41398, 0.96", "3.98961, 115.565, 4.66674, 1.03", "3.9164, 116.574, 4.8473, 0.96", "3.8879, 117.818, 5.00838, 0.88", "3.93121, 118.93, 5.09325, 0.81", "4.02696, 119.929, 5.11712, 0.96", "4.20531, 121.389, 5.09438, 0.81", "4.28401, 122.05, 5.07625, 0.81", "4.36009, 122.816, 5.07657, 0.81", "4.41654, 123.946, 5.14713, 0.88", "4.4031, 124.746, 5.25657, 0.88", "4.31092, 125.506, 5.43388, 0.88", "4.13056, 126.235, 5.67705, 0.74", "3.77541, 127.248, 6.06342, 0.88", "3.2593, 128.485, 6.59596, 1.33", "2.97235, 129.138, 6.88375, 1.33", "2.62306, 130.009, 7.24213, 1.11", "2.36521, 130.768, 7.50076, 0.96", "2.18126, 131.455, 7.67727, 0.96", "1.95622, 132.624, 7.90693, 0.74", "1.8461, 133.496, 8.02286, 0.74", "1.76538, 134.415, 8.09345, 0.74", "1.69748, 135.399, 8.12629, 0.74", "1.61648, 136.568, 8.12589, 1.03", "1.53526, 137.463, 8.09053, 1.03", "1.42848, 138.362, 8.03157, 1.03", "1.30524, 139.149, 7.98069, 0.88", "1.11053, 140.207, 7.91606, 0.88", "0.932824, 141.151, 7.86501, 1.03", "0.751182, 142.198, 7.77629, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.38305, 41.0995, 0.732838, 0.66", "1.70185, 56.0961, 0.732838, 0.66", "2.02065, 71.0928, 0.732838, 0.66" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.2243, -21.9988, 2.64354, 0.96", "-16.2467, -23.511, 3.08159, 0.96", "-17.1314, -24.684, 3.40138, 0.96", "-17.861, -25.5734, 3.62324, 1.11", "-18.3665, -26.1689, 3.69416, 1.25", "-18.8045, -26.6843, 3.69497, 1.25", "-19.6266, -27.6847, 3.62265, 1.03", "-20.2992, -28.4634, 3.46728, 0.96", "-20.9159, -29.2241, 3.20164, 1.18", "-21.9878, -30.5955, 2.60533, 1.03", "-22.6189, -31.4399, 2.18927, 1.03", "-23.2053, -32.277, 1.72665, 0.88", "-23.6513, -32.9772, 1.27844, 1.11", "-24.1559, -33.8562, 0.668662, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.2243, -21.9988, 2.64354, 1.92", "-16.1804, -21.1518, 2.71142, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.18564, 23.2737, 9.72218, 0.88", "-9.41069, 23.7107, 9.27239, 0.88", "-9.56259, 24.112, 8.83095, 0.81", "-9.64987, 24.4108, 8.52083, 0.81", "-9.77627, 24.9756, 7.95914, 0.66", "-9.86625, 25.3794, 7.56692, 1.11", "-9.95683, 25.7028, 7.25362, 1.11", "-10.1954, 26.4201, 6.57339, 0.88", "-10.3541, 26.7663, 6.25288, 1.03", "-10.6915, 27.284, 5.76499, 1.11", "-11.0491, 27.6613, 5.44165, 0.88", "-11.6169, 28.0265, 5.15051, 0.88", "-12.2186, 28.2584, 5.00874, 0.81", "-12.7703, 28.3905, 4.97588, 0.88", "-13.3195, 28.4735, 4.96509, 1.11", "-14.3262, 28.5846, 4.98412, 1.33", "-14.851, 28.6508, 4.97162, 0.96", "-15.3722, 28.7517, 4.9124, 1.11", "-15.6525, 28.8336, 4.83074, 0.88", "-16.2017, 29.0593, 4.58314, 0.74", "-16.6327, 29.2935, 4.32326, 1.03", "-17.2192, 29.6835, 3.86297, 1.11", "-17.5345, 29.9585, 3.56955, 1.11", "-17.8341, 30.295, 3.22793, 1.11", "-18.0188, 30.6102, 2.9184, 1.25", "-18.1878, 31.1167, 2.41092, 1.25", "-18.274, 31.6366, 1.83803, 0.88", "-18.313, 32.0848, 1.31532, 0.81", "-18.3449, 32.4311, 0.900781, 0.81", "-18.4375, 33.1831, -0.0154366, 1.03", "-18.55, 33.777, -0.767436, 1.18", "-18.7067, 34.2652, -1.39795, 1.33", "-18.938, 34.6747, -1.92371, 1.18", "-19.3003, 35.0718, -2.4241, 1.18", "-19.5592, 35.2844, -2.66245, 1.18", "-19.9109, 35.5304, -2.8764, 1.03", "-20.2261, 35.7561, -3.02084, 0.96", "-20.6268, 36.0503, -3.16692, 0.96", "-21.049, 36.3923, -3.3851, 1.11", "-21.3436, 36.6908, -3.63727, 1.11", "-21.7126, 37.1368, -4.03102, 1.03", "-22.0479, 37.5817, -4.43549, 1.47", "-22.3067, 37.9316, -4.7496, 1.84", "-23.1774, 39.0641, -5.74374, 1.33", "-23.8736, 39.8943, -6.4581, 0.88", "-24.3796, 40.4195, -6.90008, 1.03", "-24.783, 40.7746, -7.18372, 0.88", "-25.3201, 41.167, -7.44047, 0.81", "-25.9543, 41.5442, -7.60177, 0.88", "-26.434, 41.7717, -7.64964, 1.25", "-26.9247, 41.978, -7.69977, 1.4", "-27.2546, 42.1264, -7.7629, 1.62", "-27.6487, 42.3491, -7.89179, 1.33", "-28.0379, 42.6403, -8.0946, 1.03", "-28.8796, 43.4781, -8.73008, 0.88", "-29.1564, 43.85, -9.01309, 0.88", "-29.3885, 44.2902, -9.3344, 0.81", "-29.6196, 44.9539, -9.78895, 0.96", "-29.7143, 45.5183, -10.1368, 0.96", "-29.7096, 45.9867, -10.377, 1.11", "-29.6276, 46.4313, -10.5407, 1.11", "-29.5171, 46.8438, -10.6541, 1.11", "-29.4194, 47.1711, -10.7215, 1.18", "-29.3184, 47.5558, -10.769, 1.11", "-29.2171, 48.1066, -10.8239, 0.88", "-29.176, 48.6597, -10.8926, 0.81", "-29.2182, 49.0134, -10.9669, 0.81", "-29.4183, 49.4375, -11.1121, 0.81", "-29.7467, 49.7445, -11.2913, 0.96", "-30.0371, 49.8931, -11.4317, 0.96", "-30.5621, 50.0633, -11.654, 0.74", "-30.8878, 50.1427, -11.7862, 0.74", "-31.2151, 50.2192, -11.9165, 1.03", "-31.5955, 50.3237, -12.069, 1.25", "-31.8643, 50.4297, -12.1735, 1.4", "-32.3559, 50.7124, -12.3453, 1.18", "-32.8766, 51.1148, -12.515, 0.88", "-33.2571, 51.4826, -12.6376, 0.81", "-33.5466, 51.8244, -12.7079, 0.81", "-34.0125, 52.4584, -12.7712, 0.81", "-34.4254, 53.0724, -12.7922, 1.03", "-34.6349, 53.405, -12.7844, 1.25", "-34.865, 53.786, -12.7534, 1.4", "-35.2508, 54.4277, -12.6855, 1.03", "-35.6152, 55.0221, -12.6196, 0.88", "-35.8313, 55.3654, -12.5882, 1.11", "-36.1178, 55.8224, -12.5581, 1.11", "-36.4478, 56.3615, -12.5392, 0.96", "-36.7132, 56.8034, -12.5413, 1.33", "-36.9169, 57.1472, -12.5688, 1.33", "-37.1574, 57.5662, -12.6231, 1.11", "-37.4449, 58.0547, -12.7159, 0.88", "-37.7296, 58.4977, -12.8239, 0.88", "-37.9788, 58.841, -12.9191, 1.11", "-38.2689, 59.2077, -13.0185, 1.11", "-38.6154, 59.6226, -13.1236, 0.59", "-38.9145, 59.9698, -13.2036, 0.52", "-39.298, 60.4095, -13.2904, 0.81", "-39.8254, 61.0259, -13.3841, 0.96", "-40.2285, 61.5072, -13.4286, 1.25", "-40.5024, 61.8371, -13.4398, 1.47", "-40.7814, 62.1719, -13.4383, 1.47", "-41.1719, 62.6516, -13.429, 1.03", "-41.4316, 62.985, -13.4243, 1.03", "-41.9347, 63.68, -13.419, 1.03", "-42.2921, 64.2438, -13.4187, 0.96", "-42.594, 64.8296, -13.4177, 0.74", "-42.8146, 65.4626, -13.4159, 0.74", "-42.9109, 66.0822, -13.4118, 1.03", "-42.9002, 66.5766, -13.407, 1.03", "-42.7559, 67.2788, -13.3981, 0.81", "-42.5474, 67.9087, -13.3889, 0.81", "-42.1981, 68.7369, -13.3758, 0.74", "-41.9093, 69.3375, -13.3659, 1.03", "-41.695, 69.7571, -13.3554, 1.03", "-41.364, 70.4189, -13.3344, 0.96", "-41.1261, 70.9498, -13.3197, 1.4", "-40.9372, 71.4574, -13.3048, 1.25", "-40.7788, 72.0309, -13.2945, 0.81", "-40.6992, 72.4793, -13.2928, 0.59", "-40.6434, 73.0564, -13.2966, 0.59", "-40.6329, 73.8479, -13.2957, 0.74", "-40.6522, 74.3622, -13.2884, 0.81", "-40.6997, 74.8923, -13.2686, 0.81", "-40.7769, 75.4923, -13.2361, 0.66", "-40.8869, 76.1391, -13.1936, 0.88", "-41.0466, 76.8539, -13.1338, 0.96", "-41.2125, 77.4403, -13.0734, 0.74", "-41.429, 78.0479, -13.0078, 0.96", "-41.6542, 78.5659, -12.9435, 0.96", "-41.9222, 79.0731, -12.8787, 0.88", "-42.3206, 79.6987, -12.8063, 0.88", "-42.6234, 80.128, -12.7674, 0.74", "-42.9208, 80.535, -12.7354, 1.03", "-43.0795, 80.7612, -12.7203, 1.03", "-43.4045, 81.2637, -12.6812, 0.81", "-43.8618, 82.0823, -12.6358, 1.03", "-44.0791, 82.548, -12.6201, 0.88", "-44.2534, 83.0053, -12.6147, 0.88", "-44.4372, 83.5995, -12.6174, 1.11", "-44.5885, 84.1758, -12.6286, 0.96", "-44.7205, 84.7946, -12.6479, 0.81", "-44.8171, 85.3606, -12.6682, 0.81", "-44.9551, 86.3156, -12.7021, 0.88", "-45.0418, 86.9723, -12.7241, 1.11", "-45.0999, 87.4222, -12.736, 1.11", "-45.1579, 87.832, -12.7428, 0.96", "-45.2331, 88.279, -12.7399, 0.96", "-45.3449, 88.8253, -12.7356, 0.66", "-45.4969, 89.4351, -12.7302, 0.81", "-45.7568, 90.2977, -12.722, 0.88", "-46.0576, 91.1593, -12.7137, 1.11", "-46.2514, 91.6418, -12.7081, 1.03", "-46.3968, 91.9616, -12.695, 1.03", "-46.6646, 92.4948, -12.656, 0.96", "-46.8964, 92.9366, -12.608, 0.96", "-47.2035, 93.5216, -12.5134, 1.18", "-47.4083, 93.972, -12.4222, 1.03", "-47.6149, 94.5536, -12.2869, 0.96", "-47.7055, 94.9399, -12.1837, 0.59", "-47.7515, 95.3685, -12.0565, 0.59", "-47.7457, 95.7752, -11.9312, 0.81", "-47.6608, 96.4321, -11.7355, 1.11", "-47.5908, 96.7572, -11.6374, 1.11", "-47.4535, 97.2349, -11.4989, 0.81", "-47.3068, 97.6808, -11.3662, 0.96", "-47.1195, 98.2162, -11.2075, 0.81", "-46.9547, 98.6752, -11.0762, 0.96", "-46.7671, 99.1762, -10.9264, 0.96", "-46.6028, 99.5801, -10.8114, 1.03", "-46.4887, 99.8571, -10.7372, 1.03", "-46.3612, 100.193, -10.6553, 0.96", "-46.2511, 100.578, -10.5749, 0.96", "-46.1543, 101.126, -10.475, 0.74", "-46.1203, 101.651, -10.4012, 0.74", "-46.1406, 102.145, -10.3434, 0.96", "-46.2256, 102.777, -10.2848, 0.96", "-46.3775, 103.444, -10.2416, 1.11", "-46.468, 103.744, -10.2324, 1.11", "-46.6664, 104.324, -10.2354, 0.74", "-46.8422, 104.823, -10.2361, 0.74", "-47.0732, 105.523, -10.2281, 0.74", "-47.2959, 106.277, -10.2081, 0.81", "-47.4618, 106.928, -10.1837, 0.96", "-47.6047, 107.587, -10.1527, 1.03", "-47.7439, 108.295, -10.1099, 1.11", "-47.8417, 108.88, -10.0453, 0.88", "-47.9248, 109.484, -9.95646, 0.88", "-47.9835, 109.983, -9.86796, 0.81", "-48.0226, 110.355, -9.79606, 0.81", "-48.0925, 111.001, -9.67555, 0.66", "-48.1908, 111.855, -9.51643, 0.66", "-48.2671, 112.448, -9.39702, 0.88", "-48.3319, 112.899, -9.30166, 1.11", "-48.4413, 113.561, -9.16086, 0.96", "-48.5628, 114.176, -9.02691, 0.96", "-48.6706, 114.639, -8.92626, 0.66", "-48.8687, 115.32, -8.78299, 0.59", "-49.067, 115.922, -8.63948, 0.59", "-49.2685, 116.518, -8.49495, 0.74", "-49.438, 117.033, -8.37251, 0.74", "-49.5467, 117.413, -8.30037, 0.81", "-49.6347, 117.757, -8.25367, 0.81", "-49.7747, 118.37, -8.17752, 0.59", "-49.9377, 119.17, -8.05371, 0.74", "-50.0262, 119.634, -7.96367, 0.74", "-50.1775, 120.468, -7.77699, 1.03", "-50.2593, 120.953, -7.64697, 0.52", "-50.3277, 121.407, -7.50369, 0.52", "-50.4076, 122.032, -7.27237, 0.88", "-50.4758, 122.673, -7.00972, 0.59", "-50.5139, 123.177, -6.78192, 0.44", "-50.5307, 123.633, -6.56807, 0.74", "-50.538, 124.083, -6.37461, 0.74", "-50.5597, 124.706, -6.13017, 0.66", "-50.5921, 125.232, -5.94911, 0.59", "-50.6649, 125.817, -5.74834, 0.59", "-50.7555, 126.234, -5.58842, 0.59", "-50.9361, 126.797, -5.36109, 0.59", "-51.1895, 127.435, -5.09593, 0.81", "-51.3686, 127.851, -4.92518, 0.81", "-51.671, 128.551, -4.63987, 0.74", "-51.9566, 129.256, -4.3364, 0.66", "-52.1036, 129.658, -4.14259, 0.59", "-52.2969, 130.263, -3.84071, 0.59", "-52.4521, 130.815, -3.5641, 0.96", "-52.5556, 131.199, -3.36911, 0.96", "-52.8149, 132.127, -2.92319, 0.88", "-52.9804, 132.647, -2.68215, 0.66", "-53.1375, 133.067, -2.48814, 0.37", "-53.2664, 133.372, -2.35738, 0.44", "-53.4391, 133.753, -2.22451, 0.44", "-53.6574, 134.204, -2.11506, 0.44", "-53.9516, 134.745, -2.04001, 0.44", "-54.3044, 135.315, -1.98051, 0.44", "-54.6841, 135.862, -1.92083, 0.44", "-55.0453, 136.378, -1.86303, 0.52", "-55.2548, 136.712, -1.82632, 0.52", "-55.4689, 137.126, -1.78642, 0.52", "-55.6778, 137.612, -1.76147, 0.59", "-55.8055, 137.932, -1.7498, 0.59", "-56.0487, 138.479, -1.73727, 0.59", "-56.3927, 139.206, -1.72765, 0.44", "-56.7547, 139.911, -1.72444, 0.44", "-57.2492, 140.729, -1.73249, 0.44", "-57.4948, 141.033, -1.74374, 0.44", "-58.1708, 141.387, -1.79553, 0.44", "-58.7156, 141.395, -1.83941, 0.37", "-59.2966, 141.265, -1.88318, 0.37", "-59.862, 141.052, -1.9226, 1.25", "-60.4745, 140.765, -1.9634, 0.37", "-60.8652, 140.572, -1.97084, 0.37", "-61.0417, 140.488, -1.95957, 0.59", "-61.3914, 140.335, -1.9026, 0.59", "-61.6882, 140.21, -1.81765, 0.29", "-62.16, 140.016, -1.64956, 0.29", "-62.6984, 139.848, -1.41813, 0.66", "-63.0801, 139.746, -1.22358, 1.11", "-63.4018, 139.668, -1.03754, 1.33", "-63.7872, 139.584, -0.771541, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.18564, 23.2737, 9.72218, 0.81", "-9.61877, 26.2312, 9.39269, 0.81", "-10.0276, 28.5118, 9.09199, 0.96", "-10.5326, 30.7908, 8.7919, 0.88", "-10.846, 31.9272, 8.65555, 0.88", "-11.4119, 33.6613, 8.47221, 1.03", "-11.8326, 34.7541, 8.37713, 1.03", "-12.8382, 36.7212, 8.2304, 0.96", "-13.8562, 38.3424, 8.17921, 0.96", "-15.0615, 39.8957, 8.17936, 1.11", "-16.1454, 41.035, 8.21438, 1.18", "-17.7799, 42.4757, 8.31464, 1.18", "-18.9419, 43.3958, 8.41097, 1.4", "-19.7612, 44.0243, 8.52548, 1.25", "-21.0369, 45.02, 8.75261, 0.88", "-22.2832, 46.0659, 9.00764, 1.18", "-22.9705, 46.7331, 9.20385, 1.47", "-23.7473, 47.6095, 9.48772, 1.33", "-25.2905, 49.5222, 10.149, 0.96", "-26.0318, 50.5101, 10.5028, 1.18", "-26.7172, 51.4645, 10.8624, 1.18", "-28.0741, 53.2546, 11.5393, 1.18", "-28.5566, 53.8255, 11.7558, 1.33", "-29.4522, 54.7402, 12.0975, 0.96", "-30.1992, 55.3858, 12.3197, 0.81", "-31.0332, 56.0361, 12.5529, 0.81", "-32.2501, 56.8932, 12.8543, 1.11", "-32.9919, 57.3988, 12.9937, 1.11", "-33.8067, 58.0257, 13.1101, 0.88", "-34.3001, 58.5109, 13.1493, 0.88", "-34.8337, 59.2251, 13.1443, 0.88", "-35.6044, 60.7278, 13.0024, 1.11", "-35.9012, 61.6416, 12.7948, 1.11", "-36.2568, 63.2036, 12.3398, 1.11", "-36.5667, 64.7976, 11.7648, 1.03", "-36.8317, 66.2217, 11.1985, 1.4", "-37.0864, 67.4544, 10.6336, 1.62", "-37.5937, 69.581, 9.57695, 0.88", "-38.0028, 70.9147, 8.90156, 0.88", "-38.6076, 72.4829, 8.20386, 0.88", "-39.2008, 73.752, 7.76071, 1.03", "-40.0243, 75.2316, 7.42889, 0.81", "-40.5859, 76.0879, 7.49011, 0.96", "-41.1937, 76.8176, 7.88262, 0.81", "-42.4944, 78.0502, 9.18879, 1.25", "-43.8047, 79.0698, 10.8267, 1.25", "-44.4411, 79.4752, 11.6445, 0.96", "-45.6658, 80.168, 13.1988, 0.96", "-46.621, 80.6536, 14.2824, 0.96", "-47.3198, 81.0102, 14.9383, 0.96", "-48.4415, 81.6498, 15.7089, 0.81", "-49.3512, 82.3035, 16.1712, 0.96", "-50.5696, 83.3767, 16.6819, 0.96", "-51.121, 83.9124, 16.8663, 1.11", "-52.1914, 85.0141, 17.2046, 1.11", "-53.3075, 86.2241, 17.4844, 0.96", "-54.5129, 87.604, 17.7228, 0.81", "-55.8839, 89.2791, 17.9211, 1.03", "-56.8947, 90.6328, 18.0837, 1.18", "-58.01, 92.2543, 18.3104, 1.18", "-59.2004, 94.2534, 18.6106, 1.03", "-59.7807, 95.4459, 18.8204, 1.11", "-60.2019, 96.7077, 19.1051, 1.11", "-60.584, 98.8795, 19.7521, 0.96", "-60.6595, 99.8631, 20.1192, 0.96", "-60.7039, 101.202, 20.733, 0.74", "-60.7825, 102.387, 21.3985, 0.74", "-61.1345, 104.159, 22.5167, 0.96", "-61.5977, 105.199, 23.2315, 0.88", "-62.3913, 105.999, 23.7779, 0.74", "-63.4579, 106.537, 24.1707, 0.74", "-64.6654, 106.924, 24.4101, 0.81", "-66.2947, 107.351, 24.562, 0.88", "-67.3117, 107.603, 24.5946, 0.88", "-68.2919, 107.869, 24.5937, 1.03", "-69.6849, 108.288, 24.5917, 1.03", "-71.6151, 108.902, 24.7211, 0.96", "-72.8299, 109.286, 24.8966, 0.96", "-74.2759, 109.717, 25.2336, 0.81", "-75.2641, 109.985, 25.5239, 0.81", "-76.5616, 110.307, 25.968, 0.81", "-78.4461, 110.733, 26.695, 0.88", "-79.5157, 110.958, 27.1045, 0.88", "-80.9956, 111.315, 27.6463, 0.88", "-82.1892, 111.702, 28.0718, 0.96", "-83.1593, 112.148, 28.4311, 0.96", "-84.1322, 112.73, 28.8018, 0.81", "-84.9702, 113.329, 29.1209, 0.96", "-85.8267, 114.024, 29.5076, 0.96", "-86.7653, 114.896, 30.0757, 0.88", "-87.6301, 115.77, 30.7724, 0.88", "-88.2278, 116.448, 31.3759, 0.96", "-88.7716, 117.17, 32.0888, 0.96", "-89.461, 118.3, 33.2207, 0.81", "-90.0772, 119.458, 34.3902, 0.81", "-90.5894, 120.439, 35.2871, 0.88", "-91.0441, 121.321, 35.964, 0.81", "-91.6339, 122.519, 36.6932, 0.81", "-92.3314, 123.898, 37.2687, 0.96", "-92.9021, 124.923, 37.5194, 0.81", "-94.0027, 126.689, 37.7529, 0.74", "-94.7982, 127.846, 37.7973, 0.74", "-95.7754, 129.112, 37.7444, 0.74", "-96.8889, 130.462, 37.5231, 0.88", "-97.4486, 131.136, 37.3512, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.2401, 18.6846, 13.5702, 0.74", "-14.9502, 17.6304, 14.7338, 0.74", "-15.4391, 17.2738, 15.0869, 0.88", "-16.4064, 16.5371, 15.7289, 0.81", "-17.6079, 15.4241, 16.6451, 0.52", "-18.0869, 14.9973, 16.9286, 0.44", "-18.7599, 14.4405, 17.218, 0.44", "-19.2591, 14.0365, 17.213, 0.29", "-19.7666, 13.7768, 17.0518, 0.29", "-21.1973, 13.5452, 16.1427, 1.4", "-23.0082, 13.4071, 14.7552, 0.29", "-23.5823, 13.3943, 14.2963, 0.29", "-24.4808, 13.4393, 13.5163, 0.37", "-25.0359, 13.5239, 12.9989, 0.44", "-25.6485, 13.6813, 12.3839, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.2401, 18.6846, 13.5702, 2.28", "-14.3589, 21.3918, 14.1517, 2.28", "-15.1202, 23.2338, 14.5473, 1.4", "-15.6147, 24.4303, 14.8043, 1.4", "-16.3627, 26.2403, 15.1931, 1.4", "-16.8469, 27.4119, 15.4448, 1.4", "-17.3452, 28.6176, 15.7037, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.751182, 142.198, 7.77629, 0.59", "0.862149, 143.672, 7.22705, 0.59", "0.889034, 144.461, 6.9909, 0.59", "0.900339, 145.536, 6.76054, 0.59", "0.901418, 145.949, 6.69588, 0.59", "0.899848, 146.712, 6.5699, 0.81", "0.897587, 147.38, 6.4656, 0.88", "0.893262, 148.042, 6.4129, 0.88", "0.852667, 149.056, 6.34945, 0.66", "0.805998, 149.746, 6.33736, 0.88", "0.720081, 150.663, 6.35663, 0.96", "0.62688, 151.394, 6.39174, 0.81", "0.542118, 151.846, 6.43053, 0.81", "0.320916, 152.614, 6.53068, 0.66", "0.0361975, 153.256, 6.65714, 0.74", "-0.431903, 153.995, 6.89595, 0.44", "-0.83556, 154.463, 7.12218, 0.44", "-1.10748, 154.717, 7.26377, 0.81", "-1.4187, 154.989, 7.42072, 0.96", "-1.73277, 155.274, 7.57666, 0.74", "-2.13429, 155.707, 7.79399, 0.74", "-2.50952, 156.207, 7.94125, 0.88", "-2.95043, 156.938, 8.04954, 1.03", "-3.29578, 157.599, 8.04922, 0.88", "-3.63428, 158.319, 7.99001, 0.74", "-3.94378, 159.036, 7.89718, 0.88", "-4.58393, 160.643, 7.64122, 0.66", "-4.97677, 161.712, 7.4676, 1.03", "-5.34837, 162.814, 7.29565, 0.88", "-5.66155, 163.883, 7.18537, 1.03", "-5.84805, 164.624, 7.15348, 1.03", "-6.01975, 165.472, 7.1812, 0.88", "-6.1479, 166.269, 7.2971, 0.81", "-6.26802, 167.012, 7.42905, 0.81", "-6.49349, 168.161, 7.66269, 0.66", "-6.64631, 168.76, 7.77274, 0.66", "-6.9258, 169.579, 7.89043, 1.03", "-7.14855, 170.1, 7.9447, 0.81", "-7.5073, 170.844, 7.97659, 0.59", "-7.92737, 171.65, 7.94242, 0.59", "-8.19855, 172.143, 7.85884, 0.59", "-8.5386, 172.717, 7.69534, 0.59", "-8.88009, 173.251, 7.49923, 0.59", "-9.47074, 174.128, 7.14974, 0.59", "-10.0775, 175.0, 6.8239, 1.18", "-10.5914, 175.704, 6.57948, 1.33", "-11.3264, 176.663, 6.26521, 0.74", "-11.7406, 177.196, 6.12099, 0.74", "-12.1782, 177.768, 5.97777, 0.74", "-12.8273, 178.69, 5.7556, 0.88", "-13.1526, 179.268, 5.64455, 0.88", "-13.3422, 179.693, 5.57776, 1.03", "-13.6355, 180.499, 5.45752, 0.74", "-13.8648, 181.167, 5.36798, 0.74", "-14.2255, 182.133, 5.27013, 0.59", "-14.5851, 182.92, 5.24637, 0.74", "-15.0301, 183.704, 5.32354, 0.74", "-15.3381, 184.179, 5.36597, 0.74", "-15.9326, 185.0, 5.41085, 0.88", "-16.3531, 185.535, 5.44203, 1.03", "-16.8583, 186.113, 5.47427, 0.74", "-17.473, 186.739, 5.43208, 0.59", "-18.5699, 187.785, 5.25289, 0.59", "-19.2005, 188.363, 5.04945, 0.74", "-19.5843, 188.706, 4.8956, 0.96", "-20.0817, 189.124, 4.67642, 0.88", "-20.7065, 189.571, 4.41963, 0.74", "-21.6639, 190.207, 4.02518, 1.55", "-22.5094, 190.777, 3.69499, 1.99", "-23.3094, 191.403, 3.32058, 0.74", "-23.8626, 191.991, 2.98557, 0.59", "-24.3623, 192.801, 2.58242, 0.88", "-24.7283, 193.732, 2.21243, 0.81", "-24.8905, 194.378, 1.97758, 0.81", "-25.0258, 195.176, 1.60697, 0.74", "-25.1461, 196.034, 1.13558, 0.74", "-25.2814, 196.735, 0.697508, 0.66", "-25.4139, 197.295, 0.314416, 0.66", "-25.7258, 198.3, -0.375447, 1.47", "-26.3945, 200.175, -1.6807, 1.18", "-26.6552, 200.849, -2.14192, 1.03", "-27.2091, 202.319, -3.12373, 1.03", "-27.4785, 203.131, -3.60041, 0.74", "-27.7262, 204.07, -4.04043, 1.03", "-27.7906, 204.414, -4.14163, 1.25", "-27.9416, 205.469, -4.30464, 0.66", "-28.0421, 206.327, -4.4099, 0.66", "-28.161, 207.355, -4.47187, 0.81", "-28.3025, 208.097, -4.52821, 0.66", "-28.4958, 208.788, -4.60061, 0.66", "-28.9613, 210.044, -4.73562, 0.66", "-29.2725, 210.729, -4.80808, 0.52", "-29.5848, 211.343, -4.87359, 0.66", "-29.809, 211.784, -4.92811, 0.81", "-30.1739, 212.573, -4.94189, 0.52", "-30.4252, 213.222, -4.85288, 0.52", "-30.6619, 213.99, -4.66476, 0.88", "-30.8069, 214.579, -4.50625, 0.88", "-30.9429, 215.284, -4.3258, 0.59", "-31.0824, 216.415, -4.08715, 0.74", "-31.1456, 217.33, -4.12585, 0.44", "-31.1884, 218.066, -4.41433, 0.44", "-31.2352, 218.63, -4.75053, 0.44", "-31.3058, 219.393, -5.28383, 0.44", "-31.3775, 220.185, -5.91181, 1.11", "-31.5983, 222.279, -7.64913, 0.88", "-31.7009, 223.321, -8.48053, 0.44", "-31.7752, 224.012, -8.97031, 0.66", "-31.8452, 224.541, -9.27575, 0.44", "-31.9788, 225.439, -9.61938, 0.44", "-32.0891, 226.32, -9.77245, 0.44", "-32.1783, 227.435, -9.74661, 0.59", "-32.2572, 228.482, -9.64673, 0.59", "-32.3674, 229.471, -9.52279, 0.52", "-32.5229, 230.34, -9.37496, 0.37", "-32.7669, 231.228, -9.17107, 0.37", "-33.0002, 231.814, -9.02939, 0.37", "-33.397, 232.444, -8.86114, 0.37", "-33.8724, 233.006, -8.69875, 0.37", "-34.3021, 233.426, -8.58064, 0.74", "-34.9945, 233.98, -8.41515, 0.66", "-35.5992, 234.393, -8.28455, 0.66", "-36.5114, 234.954, -8.10307, 0.44", "-37.1455, 235.309, -7.98541, 0.37", "-37.513, 235.513, -7.91804, 0.37", "-38.1875, 235.861, -7.80746, 0.29", "-38.562, 236.001, -7.75451, 0.29", "-39.083, 236.055, -7.69772, 1.03", "-39.5824, 235.929, -7.68083, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.751182, 142.198, 7.77629, 0.59", "1.63344, 143.873, 8.09673, 0.59", "2.09682, 145.058, 8.30622, 0.81", "2.49648, 146.723, 8.60253, 0.88", "2.66362, 147.921, 8.81859, 0.59", "2.71127, 148.814, 8.95538, 0.59", "2.74036, 150.098, 9.11586, 0.96", "2.69652, 150.808, 9.2001, 1.11", "2.5422, 152.321, 9.3439, 0.66", "2.39587, 153.423, 9.3942, 0.66", "2.24858, 155.125, 9.54509, 0.66", "2.22378, 156.43, 9.69393, 0.59", "2.29161, 157.483, 9.85284, 0.59", "2.49561, 158.985, 10.1115, 0.59", "2.74521, 160.271, 10.3454, 0.59", "3.2844, 162.59, 10.8007, 0.66", "3.57032, 163.694, 11.0408, 0.66", "3.91287, 165.09, 11.3587, 0.52", "4.18851, 166.269, 11.6204, 0.52", "4.435, 167.481, 11.8912, 0.52", "4.58664, 168.403, 12.0808, 0.74", "4.66604, 169.236, 12.196, 0.74", "4.7591, 170.229, 12.3121, 0.88", "4.84955, 170.917, 12.3559, 0.88", "5.24311, 172.625, 12.3336, 0.59", "5.53317, 173.409, 12.2093, 0.81", "6.03762, 174.357, 11.9093, 0.59", "6.73841, 175.41, 11.4451, 0.74", "7.44723, 176.368, 10.9204, 0.74", "8.16166, 177.301, 10.323, 0.74", "8.94458, 178.329, 9.61725, 0.59", "9.65425, 179.26, 8.9665, 0.59", "10.3949, 180.263, 8.27851, 0.81", "11.0362, 181.228, 7.63892, 0.81", "11.8507, 182.648, 6.76442, 0.59", "12.3018, 183.563, 6.25061, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-24.1559, -33.8562, 0.668662, 0.74", "-25.4617, -35.1921, -2.44237, 0.74", "-26.2183, -36.3149, -4.40218, 0.88", "-27.3115, -38.426, -7.31769, 1.03", "-27.7194, -39.3459, -8.3508, 0.96", "-28.2248, -40.5525, -9.48717, 0.66", "-28.7108, -41.7107, -10.4272, 0.88", "-29.0662, -42.827, -10.9555, 0.81", "-29.4362, -43.8958, -11.2412, 0.81", "-29.9448, -45.1141, -11.3875, 0.66", "-30.5047, -46.1616, -11.4901, 0.66", "-31.0835, -47.098, -11.6099, 0.74", "-31.9273, -48.3626, -11.8171, 0.59", "-32.396, -49.1129, -11.9625, 0.52", "-32.7873, -49.8388, -12.1283, 0.52", "-33.4351, -51.334, -12.5095, 0.88", "-33.8077, -52.4212, -12.7979, 0.88", "-34.1425, -53.5918, -13.099, 0.74", "-34.5901, -55.2743, -13.4962, 0.74", "-34.8608, -56.2298, -13.6997, 0.74", "-35.3492, -57.7285, -13.9632, 0.81", "-35.8273, -58.9713, -14.1029, 0.81", "-36.3813, -60.2195, -14.1546, 0.66", "-36.9957, -61.4377, -14.149, 0.74", "-37.6201, -62.5525, -14.1035, 0.74", "-38.2712, -63.6417, -14.0614, 0.81", "-38.8641, -64.6196, -14.0395, 0.81", "-39.2883, -65.3409, -14.0443, 0.74", "-39.8541, -66.4081, -14.1059, 0.52", "-40.2655, -67.3007, -14.2075, 0.52", "-40.7759, -68.577, -14.4188, 0.52", "-41.1855, -69.7702, -14.6337, 1.03", "-41.4165, -70.5201, -14.7769, 1.03", "-41.6779, -71.4427, -14.9319, 0.81", "-41.8865, -72.2298, -15.0407, 0.88", "-42.1121, -73.2935, -15.1656, 1.03", "-42.329, -74.7314, -15.3204, 0.74", "-42.4391, -75.6597, -15.4808, 0.74", "-42.5492, -76.8258, -15.7506, 0.74", "-42.6483, -77.8553, -16.1018, 0.59", "-42.7914, -79.1981, -16.7024, 0.66", "-42.8775, -79.9816, -17.1392, 0.66", "-43.038, -81.3998, -18.0949, 0.66", "-43.1439, -82.1184, -18.6234, 0.52", "-43.4351, -83.4896, -19.6642, 0.59", "-43.6538, -84.1909, -20.1734, 0.81", "-43.9178, -84.8263, -20.5858, 0.81", "-44.2795, -85.6243, -21.0171, 0.29", "-44.6501, -86.4444, -21.3405, 0.29", "-45.1506, -87.5096, -21.6686, 0.74", "-45.5559, -88.4082, -21.8642, 1.25", "-45.8309, -89.0389, -21.9899, 1.47", "-46.0235, -89.5107, -22.0743, 1.62", "-46.3547, -90.4174, -22.2255, 1.25", "-46.6808, -91.45, -22.4189, 0.44", "-47.0199, -92.5323, -22.6574, 0.29", "-47.47, -93.9745, -22.9648, 0.66", "-47.7743, -94.9518, -23.1638, 0.96", "-47.9573, -95.5423, -23.2782, 1.25", "-48.1522, -96.2005, -23.4011, 1.47", "-48.4514, -97.2599, -23.5878, 1.03", "-48.8588, -98.5848, -23.7821, 0.29", "-49.1365, -99.4212, -23.8753, 0.44", "-49.4131, -100.145, -23.9245, 0.74", "-49.7299, -100.906, -23.9455, 0.96", "-50.0474, -101.602, -23.9323, 1.25", "-50.3556, -102.175, -23.8975, 1.25", "-50.9667, -103.066, -23.8228, 1.03", "-51.579, -103.823, -23.6799, 0.81", "-51.8926, -104.142, -23.6149, 0.81", "-52.2896, -104.503, -23.5469, 0.59", "-52.9332, -105.059, -23.4693, 0.52", "-53.3309, -105.423, -23.452, 0.52", "-54.1188, -106.234, -23.4928, 0.59", "-55.1072, -107.443, -23.6861, 0.44", "-55.6157, -108.191, -23.8811, 0.29", "-55.9268, -108.707, -24.0429, 0.29", "-56.3867, -109.515, -24.3173, 0.66", "-56.7494, -110.156, -24.5413, 1.03", "-57.0815, -110.731, -24.7437, 1.03", "-57.7596, -111.805, -25.0463, 0.29", "-58.3485, -112.572, -25.2563, 0.29", "-58.8352, -113.113, -25.3794, 0.29", "-59.0446, -113.32, -25.4168, 0.44", "-59.4274, -113.704, -25.4718, 0.44", "-60.3004, -114.64, -25.5817, 0.66", "-60.6322, -115.024, -25.6233, 0.66", "-61.446, -116.011, -25.737, 0.29", "-61.8553, -116.512, -25.7863, 0.29", "-62.4557, -117.257, -25.8371, 0.59", "-62.9493, -117.896, -25.8624, 0.81", "-63.5474, -118.703, -25.888, 0.29", "-64.0653, -119.431, -25.9367, 0.52", "-64.6099, -120.253, -26.0461, 0.52", "-65.0743, -121.09, -26.2183, 0.44", "-65.517, -122.142, -26.4593, 0.74", "-65.8053, -122.877, -26.8029, 0.88", "-66.0891, -123.696, -27.3305, 0.88", "-66.2916, -124.4, -27.8415, 0.29", "-66.5748, -125.424, -28.8026, 0.29", "-66.7987, -126.255, -29.6717, 0.29", "-67.5723, -129.048, -32.7299, 0.59", "-67.7123, -129.548, -33.2893, 0.81", "-67.8912, -130.172, -34.0124, 0.81", "-68.467, -132.223, -36.4349, 0.29", "-68.6429, -132.956, -37.3049, 0.74", "-68.7131, -133.384, -37.7822, 0.74", "-68.8565, -134.826, -39.0719, 0.22", "-68.9898, -136.019, -40.0729, 1.11", "-69.0697, -136.738, -40.6282, 1.11", "-69.1839, -138.144, -41.5229, 0.22", "-69.2328, -139.186, -42.1565, 0.59", "-69.2704, -140.822, -43.1343, 0.22", "-69.2949, -141.707, -43.6118, 0.37", "-69.324, -142.121, -43.8312, 0.37", "-69.4461, -142.942, -44.2453, 0.22", "-69.662, -143.973, -44.7432, 0.22", "-70.0546, -145.65, -45.554, 1.47", "-70.3104, -146.644, -46.0192, 1.62", "-70.698, -147.881, -46.5328, 1.25", "-71.409, -149.891, -47.2909, 0.15", "-71.8778, -151.063, -47.6868, 0.22", "-72.0895, -151.578, -47.8273, 0.88", "-72.3199, -152.156, -47.9737, 1.03", "-72.8201, -153.464, -48.3277, 0.15", "-73.1523, -154.389, -48.5973, 0.52", "-73.4194, -155.115, -48.8265, 0.74", "-74.8297, -158.843, -50.0342, 0.22", "-75.2968, -160.059, -50.435, 0.81", "-75.4992, -160.584, -50.612, 0.81", "-76.3391, -162.799, -51.3801, 0.22", "-76.6692, -163.687, -51.68, 0.59" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-24.1559, -33.8562, 0.668662, 0.59", "-24.0543, -34.9081, 0.299518, 0.59", "-23.9603, -35.5379, 0.0703314, 0.59", "-23.844, -36.293, -0.260994, 0.81", "-23.7629, -36.8582, -0.519192, 0.81", "-23.659, -37.8106, -0.969052, 1.03", "-23.6298, -38.32, -1.2101, 1.03", "-23.6239, -38.9248, -1.47156, 0.88", "-23.6782, -40.057, -1.85679, 0.88", "-23.8017, -40.8199, -2.00093, 1.03", "-24.0286, -41.4957, -1.98501, 1.03", "-24.4655, -42.3515, -1.78398, 0.52", "-25.2249, -43.55, -1.37711, 1.03", "-25.6201, -44.1163, -1.14814, 1.03", "-26.0687, -44.7714, -0.861639, 0.88", "-26.5089, -45.4476, -0.594925, 0.81", "-26.9972, -46.2694, -0.309529, 0.59", "-27.4021, -47.0311, -0.106213, 0.59", "-27.8239, -47.9393, 0.0352086, 0.59", "-28.2494, -49.0076, 0.16604, 0.88", "-28.4927, -49.7432, 0.247475, 0.88", "-28.6443, -50.2909, 0.308364, 0.74", "-28.8392, -51.021, 0.399881, 0.96", "-29.0222, -51.6258, 0.484842, 1.03", "-29.2126, -52.1638, 0.569728, 1.03", "-29.5906, -53.0758, 0.722154, 0.59", "-29.9003, -53.7537, 0.804227, 0.37", "-30.2646, -54.4826, 0.852267, 0.37", "-30.6464, -55.233, 0.865213, 0.81", "-31.0409, -56.045, 0.842286, 0.81", "-31.3064, -56.638, 0.799335, 0.81", "-31.6891, -57.6014, 0.717903, 0.96", "-31.9752, -58.4048, 0.648343, 0.96", "-32.2144, -59.1857, 0.591548, 0.66", "-32.4293, -59.983, 0.563648, 0.66", "-32.618, -60.6351, 0.58332, 0.59", "-32.9041, -61.445, 0.686439, 0.66", "-33.0877, -61.8412, 0.804917, 0.88", "-33.3837, -62.3418, 1.01225, 0.88", "-33.714, -62.808, 1.24294, 0.74", "-34.1886, -63.4438, 1.5835, 0.59", "-34.4872, -63.8616, 1.79639, 0.59", "-34.8293, -64.4146, 2.02629, 0.59", "-35.2586, -65.2434, 2.28499, 0.44", "-35.5186, -65.818, 2.4038, 0.66", "-35.7927, -66.5011, 2.49118, 0.81", "-36.0233, -67.1355, 2.54126, 0.88", "-36.3326, -67.9931, 2.58116, 0.88", "-36.6385, -68.7634, 2.59263, 0.88", "-37.0605, -69.6781, 2.60012, 0.66", "-37.3964, -70.291, 2.60362, 0.66", "-37.7163, -70.7862, 2.6067, 0.81", "-38.102, -71.3072, 2.61722, 0.96", "-38.5417, -71.8213, 2.65985, 0.96", "-38.9891, -72.3261, 2.73488, 0.88", "-39.5909, -73.0527, 2.88309, 0.88", "-40.0518, -73.6837, 3.0427, 1.03", "-40.2713, -74.0588, 3.15077, 1.03", "-40.6874, -74.9888, 3.42753, 0.59", "-40.8933, -75.5961, 3.60245, 0.74", "-41.1281, -76.4118, 3.81634, 0.88", "-41.2542, -76.8984, 3.92514, 0.88", "-41.4748, -77.7371, 4.07906, 0.74", "-41.6876, -78.5502, 4.19912, 0.88", "-41.8695, -79.1575, 4.25685, 0.88", "-42.199, -80.0116, 4.32522, 0.66", "-42.4855, -80.6241, 4.37109, 0.66", "-42.7298, -81.099, 4.41015, 0.96", "-43.1206, -81.8124, 4.48598, 0.74", "-43.6645, -82.7398, 4.61245, 0.74", "-44.0488, -83.363, 4.7061, 0.96", "-44.3814, -83.8782, 4.78608, 0.96", "-44.7867, -84.4637, 4.88222, 0.88", "-45.2382, -85.0568, 4.98059, 0.81", "-45.8688, -85.7834, 5.10652, 0.66", "-46.5737, -86.5201, 5.24873, 0.59", "-47.087, -87.0134, 5.3539, 0.81", "-47.5586, -87.4558, 5.44675, 0.81", "-48.2668, -88.0869, 5.57215, 0.66", "-48.8978, -88.6095, 5.67886, 0.88", "-49.4382, -89.0001, 5.77761, 1.47", "-49.8132, -89.2124, 5.85334, 1.62" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-16.1804, -21.1518, 2.71142, 0.66", "-17.6925, -21.0811, 2.32157, 0.66", "-18.6733, -20.9741, 2.02295, 0.81", "-19.7402, -20.8156, 1.66048, 1.11", "-20.7305, -20.6402, 1.30332, 1.11", "-21.5594, -20.4746, 0.999843, 1.11", "-22.6798, -20.2392, 0.573456, 1.03", "-23.8247, -19.9512, 0.0715764, 1.18", "-24.4686, -19.758, -0.215497, 1.18", "-25.1525, -19.514, -0.510942, 1.18", "-26.0123, -19.1485, -0.874666, 1.11", "-27.0961, -18.6121, -1.27963, 0.96", "-28.0948, -18.0291, -1.61695, 0.96", "-29.1765, -17.2597, -1.95907, 0.96", "-30.0842, -16.4536, -2.24317, 0.88", "-30.7979, -15.6059, -2.44611, 0.88", "-31.5632, -14.3142, -2.66716, 0.88", "-31.9773, -13.2955, -2.80008, 0.81", "-32.2791, -12.1726, -2.93708, 0.88", "-32.4499, -11.2203, -3.06795, 0.88", "-32.6435, -9.69424, -3.32639, 0.81", "-32.7989, -8.28138, -3.62579, 0.88", "-32.9494, -6.95621, -3.97987, 0.88", "-33.1827, -5.34222, -4.4472, 0.96", "-33.3685, -4.37009, -4.74293, 0.96", "-33.6507, -3.18643, -5.12589, 1.11", "-34.0044, -1.99806, -5.53388, 1.11", "-34.477, -0.702436, -5.96473, 1.03", "-34.9088, 0.251638, -6.26369, 0.88", "-35.553, 1.42956, -6.62056, 0.88", "-36.1787, 2.41147, -6.85301, 1.03", "-37.2587, 3.86013, -7.14986, 1.11", "-37.9238, 4.60445, -7.28747, 1.11", "-39.103, 5.65806, -7.41465, 0.88", "-39.8033, 6.15472, -7.43886, 1.03", "-41.1536, 6.95475, -7.40501, 0.81", "-42.1389, 7.49302, -7.32736, 0.66", "-42.8437, 7.88353, -7.22905, 0.66", "-44.2396, 8.78226, -6.96834, 0.81", "-45.0284, 9.42299, -6.83662, 0.81", "-45.6828, 10.1138, -6.79075, 0.74", "-46.0816, 10.6315, -6.87182, 0.74", "-46.6075, 11.2835, -7.04074, 0.74", "-47.2221, 11.9456, -7.35355, 0.74", "-47.9239, 12.5142, -7.8129, 0.88", "-48.8298, 13.0322, -8.42176, 1.03", "-49.8226, 13.4151, -9.11356, 1.18", "-51.0468, 13.7163, -10.0462, 0.81", "-51.7475, 13.8136, -10.6212, 0.81", "-52.819, 13.8567, -11.6107, 0.81", "-53.7255, 13.8554, -12.5453, 1.03", "-54.6136, 13.8703, -13.5788, 0.88", "-55.8536, 13.963, -15.1451, 0.96", "-56.4339, 14.071, -15.9488, 1.18", "-57.5007, 14.4173, -17.4501, 1.4", "-58.1216, 14.7452, -18.2886, 1.18", "-58.971, 15.3148, -19.4168, 0.88", "-59.5678, 15.8346, -20.1599, 0.88", "-60.2381, 16.5738, -20.902, 1.03", "-60.683, 17.1429, -21.3433, 0.88", "-61.463, 18.2916, -21.9833, 1.47" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-16.1804, -21.1518, 2.71142, 1.4", "-17.031, -20.3433, 3.00015, 1.4", "-17.7879, -19.6508, 3.24041, 1.25", "-18.4554, -19.0397, 3.47322, 1.03", "-19.1148, -18.4143, 3.68347, 1.03", "-19.5884, -17.9377, 3.8351, 0.88", "-20.0397, -17.4411, 4.00953, 0.88", "-20.4211, -16.9608, 4.2175, 1.03", "-20.7378, -16.4306, 4.44188, 1.03", "-20.9972, -15.7958, 4.70117, 0.74", "-21.1513, -15.2876, 4.89198, 0.74", "-21.3728, -14.2833, 5.22939, 0.88", "-21.516, -13.3214, 5.54866, 1.03", "-21.6128, -12.3489, 5.86324, 1.03", "-21.6405, -11.7684, 6.02745, 1.03", "-21.636, -10.9907, 6.25538, 0.74", "-21.5945, -10.1577, 6.45947, 1.11", "-21.5396, -9.47399, 6.61322, 0.96", "-21.4994, -8.97648, 6.73027, 0.88", "-21.4101, -8.0347, 6.97757, 0.81", "-21.3273, -6.99065, 7.24567, 0.74", "-21.2677, -6.0517, 7.46867, 0.81", "-21.2529, -5.05884, 7.68972, 1.03", "-21.2734, -4.15081, 7.85456, 1.03", "-21.3142, -3.1863, 7.99891, 0.88", "-21.3683, -2.33245, 8.09859, 0.88", "-21.4255, -1.51515, 8.1458, 1.11", "-21.4723, -0.923408, 8.15731, 1.11", "-21.5454, -0.124202, 8.13748, 0.74", "-21.6072, 0.647416, 8.11972, 0.81", "-21.6951, 1.65444, 8.08838, 0.81", "-21.7593, 2.53717, 8.02512, 0.96", "-21.8143, 3.40975, 7.93489, 0.66", "-21.8529, 4.36798, 7.81456, 0.52", "-21.885, 5.23945, 7.69839, 0.74", "-21.908, 5.74726, 7.64032, 0.74", "-21.9773, 6.88305, 7.5258, 0.74", "-22.0515, 7.75759, 7.45358, 0.74", "-22.1733, 8.64647, 7.4047, 0.74", "-22.3998, 9.65939, 7.3747, 0.66", "-22.7286, 10.6507, 7.3686, 0.96", "-22.9809, 11.2779, 7.39027, 0.96", "-23.2349, 11.8367, 7.44408, 0.96", "-23.7489, 12.9184, 7.56508, 0.81", "-24.1552, 13.7837, 7.66711, 0.96", "-24.513, 14.6714, 7.76644, 1.11", "-24.7598, 15.4341, 7.86097, 0.96", "-24.9935, 16.3608, 7.99684, 0.88", "-25.1504, 17.2631, 8.13661, 0.88", "-25.2229, 18.015, 8.25691, 0.88", "-25.2817, 19.0911, 8.4127, 1.03", "-25.33, 20.122, 8.53763, 0.74", "-25.3644, 20.5625, 8.57771, 0.74", "-25.4766, 21.3388, 8.62442, 0.88", "-25.5859, 21.8441, 8.65317, 0.88", "-25.8558, 22.7419, 8.69652, 0.74", "-26.1717, 23.5376, 8.73072, 0.66", "-26.4261, 24.0497, 8.74812, 0.66", "-27.1047, 25.1526, 8.81037, 1.03", "-27.4281, 25.6109, 8.83332, 1.03", "-27.9011, 26.252, 8.85472, 0.81", "-28.2474, 26.7343, 8.85652, 0.81", "-28.6902, 27.3709, 8.80778, 0.52", "-29.0002, 27.8474, 8.73645, 0.52", "-29.4214, 28.5551, 8.58215, 0.74", "-29.7783, 29.2347, 8.41236, 0.81", "-30.1077, 29.9779, 8.22162, 0.81", "-30.3876, 30.7367, 8.04126, 0.88", "-30.5795, 31.3492, 7.91671, 1.03", "-30.7412, 31.9079, 7.82215, 1.03", "-30.9819, 32.7195, 7.71198, 0.88", "-31.2451, 33.5591, 7.59733, 0.74", "-31.5664, 34.5294, 7.46453, 0.96", "-31.8167, 35.2438, 7.36847, 1.03", "-32.0819, 35.9116, 7.26851, 1.03", "-32.4167, 36.6346, 7.15289, 0.88", "-32.9323, 37.5471, 7.00034, 0.96", "-33.285, 38.0421, 6.90546, 0.81", "-33.5836, 38.3776, 6.83593, 0.96", "-34.0105, 38.7823, 6.75876, 1.18", "-34.3771, 39.0932, 6.72254, 1.18", "-34.8108, 39.4494, 6.71145, 1.11", "-35.2453, 39.8381, 6.72659, 1.25", "-35.6709, 40.3026, 6.75688, 1.25", "-36.1003, 40.9096, 6.7958, 1.03", "-36.4194, 41.5227, 6.83336, 0.88", "-36.6781, 42.2635, 6.87564, 0.74", "-36.8251, 43.0129, 6.91495, 0.74", "-36.8827, 44.0097, 6.95897, 0.81", "-36.8476, 44.7175, 6.96397, 0.81", "-36.7594, 45.4069, 6.93015, 0.96", "-36.6669, 46.0417, 6.85911, 0.96", "-36.5941, 46.5657, 6.78014, 0.88", "-36.5286, 47.2505, 6.67506, 0.88", "-36.4957, 48.0733, 6.55794, 0.81", "-36.4974, 48.8688, 6.46203, 0.74", "-36.5297, 49.8888, 6.37427, 0.88", "-36.5598, 50.5509, 6.34767, 0.88", "-36.5722, 51.2718, 6.34331, 1.03", "-36.5371, 52.0456, 6.36387, 0.96", "-36.4276, 52.6889, 6.40748, 0.88", "-36.2504, 53.219, 6.444, 1.03", "-35.9019, 53.909, 6.48987, 0.96", "-35.5677, 54.4804, 6.51188, 0.88", "-35.2525, 54.9811, 6.51337, 0.88", "-34.8174, 55.7188, 6.5102, 0.81", "-34.417, 56.5069, 6.50758, 0.74", "-33.9772, 57.4998, 6.51051, 0.81", "-33.6911, 58.2485, 6.51084, 1.03", "-33.5771, 58.5935, 6.51363, 1.03", "-33.263, 59.6342, 6.52088, 0.81", "-33.0151, 60.4977, 6.51909, 0.88", "-32.7787, 61.2602, 6.50872, 0.88", "-32.4282, 62.2044, 6.47045, 0.88", "-32.1596, 62.784, 6.44443, 0.88", "-31.8484, 63.3367, 6.41946, 1.11", "-31.4691, 63.9346, 6.39356, 1.11", "-30.9742, 64.7098, 6.36178, 0.81", "-30.5446, 65.4241, 6.33835, 0.96", "-30.0362, 66.3165, 6.32202, 0.96", "-29.6019, 67.1207, 6.28294, 0.88", "-29.0564, 68.1996, 6.20839, 0.88", "-28.7257, 68.9254, 6.1344, 1.03", "-28.4411, 69.6884, 6.03571, 1.03", "-28.1473, 70.7865, 5.87458, 0.88", "-28.0096, 71.5807, 5.74869, 0.88", "-27.9423, 72.1734, 5.64569, 0.74", "-27.887, 72.8431, 5.52982, 0.88", "-27.8393, 73.7865, 5.38465, 0.81", "-27.8321, 74.9631, 5.26367, 0.81", "-27.8717, 76.0925, 5.22266, 0.88", "-27.9075, 76.6116, 5.24189, 0.88", "-28.0382, 77.8775, 5.34118, 0.81", "-28.2108, 79.0389, 5.4775, 0.74", "-28.4584, 80.1986, 5.65679, 0.88", "-28.7001, 80.9827, 5.80545, 0.96", "-29.1335, 82.1158, 6.04599, 1.03", "-29.4866, 82.9949, 6.25653, 0.88", "-29.909, 84.0312, 6.51294, 1.11", "-30.1505, 84.6707, 6.66359, 1.25", "-30.4529, 85.6403, 6.85892, 0.81", "-30.6885, 86.6492, 7.03686, 0.66", "-30.9345, 88.1715, 7.29438, 0.66", "-31.0296, 88.9673, 7.41689, 0.96", "-31.0868, 89.5576, 7.49335, 0.96", "-31.1604, 90.2888, 7.55506, 0.96", "-31.257, 90.9272, 7.57601, 0.81", "-31.4345, 91.5458, 7.55443, 0.59", "-31.7279, 92.2192, 7.48063, 0.66", "-31.9749, 92.6978, 7.4239, 0.96", "-32.1833, 93.0779, 7.37955, 0.96", "-32.7329, 94.0804, 7.2863, 0.74", "-33.0807, 94.788, 7.25681, 0.66", "-33.2824, 95.2721, 7.27538, 0.88", "-33.47, 95.792, 7.33664, 0.88", "-33.6983, 96.4329, 7.44031, 0.74", "-33.8964, 96.9747, 7.56269, 0.74", "-34.178, 97.8004, 7.78335, 0.81", "-34.4379, 98.6124, 8.00472, 0.66", "-34.7184, 99.5261, 8.24523, 0.81", "-35.0236, 100.528, 8.50182, 0.96", "-35.3045, 101.437, 8.71583, 1.11", "-35.5847, 102.359, 8.89926, 0.81", "-35.8408, 103.206, 9.04584, 0.59", "-36.0463, 103.881, 9.14951, 0.81", "-36.3373, 104.818, 9.29488, 0.59", "-36.5977, 105.652, 9.41921, 0.74", "-36.8663, 106.461, 9.52408, 1.03", "-37.1555, 107.296, 9.61632, 1.03", "-37.4313, 108.159, 9.66501, 0.74", "-37.6199, 108.832, 9.66064, 0.74", "-37.866, 109.799, 9.59215, 0.74", "-38.0954, 110.776, 9.50913, 0.59", "-38.2281, 111.383, 9.45858, 0.59", "-38.4644, 112.411, 9.3793, 0.66", "-38.6508, 113.082, 9.34273, 0.52", "-38.9154, 113.824, 9.32573, 0.74", "-39.2441, 114.571, 9.34222, 0.96", "-39.6055, 115.296, 9.40846, 0.74", "-40.2011, 116.333, 9.54992, 0.74", "-40.6921, 117.082, 9.65908, 0.88", "-41.0871, 117.628, 9.7107, 0.88", "-41.6594, 118.366, 9.73152, 0.74", "-42.4087, 119.266, 9.69617, 0.74", "-43.1193, 120.093, 9.63742, 0.81", "-43.7481, 120.859, 9.57466, 0.96", "-44.3444, 121.655, 9.50539, 0.88", "-44.8091, 122.361, 9.4443, 0.88", "-45.3756, 123.401, 9.35856, 0.81", "-45.705, 124.17, 9.28845, 0.81", "-46.069, 125.279, 9.19035, 0.96", "-46.3555, 126.287, 9.108, 1.11", "-46.6229, 127.255, 9.03202, 0.81", "-46.911, 128.245, 8.94775, 0.81", "-47.1426, 128.95, 8.88306, 0.81", "-47.5017, 129.841, 8.80094, 0.81", "-48.2242, 131.247, 8.67958, 0.96", "-48.7472, 132.047, 8.62167, 0.96", "-49.3548, 132.812, 8.58232, 1.03", "-49.9573, 133.479, 8.56631, 1.11", "-50.6201, 134.177, 8.57355, 0.88", "-51.2674, 134.847, 8.59495, 0.66", "-52.0203, 135.637, 8.62155, 0.66", "-52.8398, 136.58, 8.67609, 0.74", "-53.3817, 137.298, 8.73839, 0.88", "-53.8145, 137.965, 8.81341, 0.81", "-54.1457, 138.555, 8.89226, 0.81", "-54.3925, 139.062, 8.95962, 0.81", "-54.8931, 140.168, 9.09716, 0.59", "-55.2656, 140.951, 9.18182, 0.74", "-55.5837, 141.524, 9.21948, 0.52", "-55.9131, 142.008, 9.22043, 0.74", "-56.4358, 142.62, 9.17559, 0.88", "-56.9199, 143.072, 9.09992, 0.88", "-57.586, 143.569, 8.95709, 0.74", "-58.3438, 144.08, 8.76862, 0.88", "-58.9888, 144.525, 8.59337, 0.66", "-59.5501, 144.931, 8.4417, 0.66", "-59.9864, 145.262, 8.34035, 0.66", "-60.4853, 145.658, 8.24919, 0.59", "-60.9948, 146.094, 8.19514, 0.44", "-61.706, 146.763, 8.19331, 0.88", "-62.2812, 147.391, 8.22505, 1.03", "-62.8104, 148.072, 8.27557, 0.74", "-63.3293, 148.833, 8.34053, 0.74", "-63.7966, 149.574, 8.40432, 0.74", "-64.1904, 150.183, 8.45835, 0.74", "-64.7033, 150.984, 8.51018, 0.44", "-65.1595, 151.731, 8.54906, 0.66", "-65.7967, 152.812, 8.59427, 0.81", "-66.3344, 153.74, 8.63154, 0.81", "-66.9186, 154.726, 8.6714, 0.66", "-67.4494, 155.612, 8.71841, 0.66", "-68.0007, 156.488, 8.80241, 0.66", "-68.4461, 157.157, 8.86007, 0.74", "-68.9711, 157.899, 8.89602, 0.74", "-69.545, 158.665, 8.89274, 0.59", "-70.0185, 159.261, 8.84214, 0.81", "-70.6147, 159.941, 8.72459, 0.59", "-71.2053, 160.59, 8.54534, 0.74", "-71.7021, 161.189, 8.35397, 0.81", "-71.9545, 161.533, 8.23492, 0.81", "-72.3918, 162.229, 8.04089, 0.81", "-72.6728, 162.733, 7.94363, 0.81", "-73.001, 163.39, 7.88954, 0.59", "-73.428, 164.264, 7.92506, 0.59", "-73.8822, 165.118, 8.02657, 0.66", "-74.371, 165.91, 8.19993, 0.66", "-74.8949, 166.597, 8.46002, 0.59", "-75.5609, 167.326, 8.85467, 0.81", "-76.1392, 167.892, 9.21304, 0.81", "-76.971, 168.644, 9.73651, 0.52", "-77.6872, 169.288, 10.1736, 0.52", "-78.6747, 170.208, 10.6436, 0.74", "-79.2105, 170.747, 10.8243, 0.74", "-79.8023, 171.376, 10.9229, 1.25", "-80.2759, 171.895, 10.9148, 1.25", "-80.9036, 172.561, 10.7638, 0.96", "-81.8038, 173.45, 10.4024, 0.81", "-82.3861, 173.941, 10.1278, 0.74", "-83.057, 174.377, 9.84449, 0.52", "-83.6109, 174.631, 9.65932, 0.52", "-84.8411, 174.992, 9.31468, 0.44", "-85.8042, 175.125, 9.10698, 0.52", "-86.7289, 175.104, 8.97239, 0.66", "-87.6332, 174.962, 8.87672, 0.66", "-88.4016, 174.758, 8.80894, 0.66", "-88.9935, 174.553, 8.78795, 0.66", "-89.4986, 174.331, 8.78748, 0.52", "-90.336, 173.925, 8.77545, 0.44", "-91.0159, 173.587, 8.75062, 0.37", "-91.9329, 173.108, 8.70997, 0.37", "-92.6405, 172.714, 8.67264, 0.37", "-93.5649, 172.136, 8.61477, 0.74", "-94.1814, 171.696, 8.5675, 0.74", "-94.8357, 171.153, 8.50211, 0.74", "-95.421, 170.602, 8.44338, 0.44", "-95.927, 170.092, 8.39949, 0.44", "-96.3241, 169.708, 8.39758, 0.66", "-96.9939, 169.089, 8.50299, 0.66", "-97.5738, 168.557, 8.62887, 0.52", "-98.103, 168.059, 8.72896, 0.52", "-98.5694, 167.575, 8.79384, 0.52", "-99.0815, 166.941, 8.84608, 0.66", "-99.658, 166.032, 8.86719, 0.59", "-100.074, 165.149, 8.83545, 0.37", "-100.39, 164.314, 8.77538, 0.37", "-100.648, 163.52, 8.66983, 0.29", "-100.833, 162.88, 8.55939, 0.29", "-101.097, 161.958, 8.3407, 0.44", "-101.313, 161.326, 8.15523, 0.44", "-101.609, 160.621, 7.97863, 0.66", "-101.97, 159.95, 7.83114, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-97.4486, 131.136, 37.3512, 0.66", "-96.3218, 131.756, 39.2605, 0.66", "-95.7141, 132.174, 40.2272, 0.66", "-94.3191, 133.377, 42.4592, 0.66", "-93.7669, 133.957, 43.4091, 0.66", "-93.1186, 134.792, 44.6294, 0.44", "-92.8707, 135.202, 45.1585, 0.44", "-92.5326, 135.763, 45.7606, 0.74", "-92.3303, 136.278, 46.1973, 0.74", "-92.2389, 137.156, 46.658, 0.66", "-92.2128, 137.74, 46.9492, 0.44", "-92.159, 138.542, 47.3377, 0.37", "-92.0397, 139.097, 47.6559, 0.37", "-91.6995, 139.782, 48.1959, 0.81", "-91.4742, 140.136, 48.4671, 0.81", "-90.9896, 140.823, 48.9412, 0.44", "-90.5819, 141.451, 49.3383, 0.44", "-90.285, 142.074, 49.6752, 0.44", "-89.9825, 143.715, 50.3095, 0.52", "-90.0622, 145.195, 50.7045, 0.81", "-90.192, 145.788, 50.8178, 0.81", "-90.6533, 147.193, 51.0065, 0.52", "-91.1283, 148.565, 51.1322, 0.52", "-91.6274, 150.017, 51.24, 0.52", "-91.8984, 150.867, 51.274, 0.81", "-92.1525, 151.846, 51.3652, 0.81", "-92.4101, 153.194, 51.5112, 0.44", "-92.5393, 154.5, 51.6616, 0.44", "-92.5454, 155.279, 51.7717, 0.44", "-92.483, 156.537, 51.9777, 0.44", "-92.4045, 157.549, 52.1766, 0.74", "-92.3563, 158.125, 52.31, 0.74", "-92.322, 158.798, 52.4862, 0.44", "-92.3334, 159.676, 52.7218, 0.29", "-92.3616, 160.58, 52.9704, 0.88", "-92.3882, 161.475, 53.2465, 0.88", "-92.4046, 162.107, 53.4222, 0.88", "-92.4186, 162.807, 53.617, 0.66", "-92.4446, 163.918, 53.9045, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-97.4486, 131.136, 37.3512, 0.52", "-98.4709, 131.43, 37.9173, 0.52", "-99.6026, 131.915, 38.5175, 0.52", "-100.568, 132.45, 39.0151, 0.66", "-101.813, 133.307, 39.636, 0.81", "-102.341, 133.74, 39.8902, 0.81", "-103.356, 134.706, 40.3635, 0.66", "-104.131, 135.651, 40.7846, 0.88", "-104.566, 136.28, 41.0164, 0.88", "-105.093, 137.115, 41.2528, 0.66", "-105.555, 137.913, 41.4559, 0.66", "-105.991, 138.719, 41.6803, 0.66", "-106.581, 139.914, 42.0496, 0.66", "-106.899, 140.636, 42.3048, 0.59", "-107.324, 141.713, 42.7964, 0.52", "-107.633, 142.594, 43.3147, 0.52", "-107.845, 143.259, 43.7739, 0.44", "-108.13, 144.19, 44.4922, 0.44", "-108.341, 144.946, 45.0997, 0.44", "-108.659, 146.173, 46.1133, 0.59", "-108.919, 147.19, 46.9198, 0.74", "-109.085, 147.776, 47.3414, 0.59", "-109.392, 148.731, 47.9602, 0.81", "-109.563, 149.161, 48.1932, 0.81", "-109.954, 149.974, 48.4961, 0.81", "-110.527, 150.956, 48.7399, 0.37", "-110.934, 151.56, 48.8595, 0.37", "-111.476, 152.304, 48.9713, 0.37", "-112.099, 153.088, 49.0629, 0.37", "-112.717, 153.797, 49.1184, 0.37", "-113.824, 154.874, 49.1884, 0.96", "-114.434, 155.382, 49.2507, 1.11", "-115.556, 156.246, 49.3682, 0.59", "-116.371, 156.847, 49.4551, 0.52", "-117.228, 157.485, 49.5455, 0.52", "-118.426, 158.414, 49.6667, 0.66", "-119.482, 159.264, 49.7643, 1.25", "-119.965, 159.687, 49.8251, 1.4", "-121.146, 160.827, 50.0198, 0.52", "-121.874, 161.622, 50.1474, 0.52", "-123.036, 163.037, 50.3602, 0.52", "-123.68, 163.91, 50.4567, 0.52", "-124.401, 164.946, 50.5346, 0.52", "-125.178, 166.11, 50.6557, 0.66", "-125.675, 166.907, 50.7584, 0.74", "-126.369, 168.053, 50.9337, 0.88", "-126.957, 169.049, 51.1112, 0.37", "-127.483, 169.975, 51.2663, 0.29", "-128.014, 170.912, 51.4151, 0.37", "-128.436, 171.693, 51.5283, 0.52", "-128.687, 172.145, 51.5733, 0.74", "-129.099, 172.836, 51.6658, 0.74", "-129.725, 173.691, 51.8061, 0.44", "-130.31, 174.33, 51.9231, 0.44", "-130.99, 174.972, 52.0423, 0.29", "-131.643, 175.558, 52.2078, 0.29", "-133.153, 176.936, 52.6932, 0.37", "-133.979, 177.743, 53.0256, 0.37", "-134.848, 178.686, 53.449, 0.37", "-135.179, 179.089, 53.6176, 0.37", "-135.807, 179.907, 53.9384, 0.29", "-136.189, 180.409, 54.1134, 0.29", "-136.614, 180.941, 54.2462, 0.29", "-137.358, 181.818, 54.5225, 0.29", "-138.132, 182.619, 54.8193, 0.37", "-138.796, 183.2, 55.0611, 0.37", "-139.774, 183.902, 55.3796, 0.37", "-140.663, 184.431, 55.689, 0.29", "-141.817, 185.039, 56.1279, 0.29", "-142.38, 185.308, 56.3849, 0.29", "-143.309, 185.74, 56.9159, 0.88", "-143.443, 185.069, 57.1366, 1.18", "-143.523, 184.539, 57.2911, 1.18" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-17.3452, 28.6176, 15.7037, 0.66", "-18.8706, 27.4252, 15.6393, 0.66", "-19.8967, 26.7218, 15.6209, 0.66", "-20.5569, 26.3268, 15.6017, 0.88", "-21.5858, 25.8195, 15.5199, 0.74", "-22.3324, 25.5248, 15.4448, 0.88", "-23.261, 25.2369, 15.3404, 1.18", "-24.3306, 25.0925, 15.2519, 1.18", "-25.0058, 25.1119, 15.1617, 1.18", "-26.4226, 25.3594, 14.9076, 0.66", "-27.2539, 25.5762, 14.741, 0.59", "-27.8338, 25.7388, 14.621, 0.59", "-28.892, 26.0043, 14.3583, 0.52", "-29.6378, 26.1325, 14.1541, 0.52", "-30.5606, 26.2391, 13.9289, 0.52", "-31.9856, 26.3952, 13.6217, 0.52", "-33.0876, 26.5288, 13.3958, 0.74", "-34.3218, 26.7272, 13.1629, 0.44", "-35.5182, 27.001, 12.9587, 0.44", "-36.9806, 27.4009, 12.7287, 0.66", "-37.9165, 27.7478, 12.5749, 0.81", "-38.6822, 28.1399, 12.4146, 0.96", "-39.1437, 28.4185, 12.3032, 0.96", "-39.7052, 28.7953, 12.1258, 0.59", "-40.1764, 29.1072, 11.9188, 0.44", "-40.8064, 29.4159, 11.628, 0.44", "-41.704, 29.7794, 11.296, 0.29", "-42.3406, 30.0254, 11.1182, 0.29", "-43.117, 30.3131, 10.9582, 0.59", "-43.6547, 30.4902, 10.9123, 0.59", "-45.2161, 30.8442, 11.0037, 0.74", "-46.2172, 31.06, 11.1769, 0.59", "-47.118, 31.2515, 11.424, 0.59", "-47.9087, 31.4146, 11.6916, 0.66", "-48.9986, 31.6546, 12.0993, 0.66", "-50.6089, 32.044, 12.7207, 0.96", "-51.8793, 32.348, 13.1708, 0.52", "-52.68, 32.4835, 13.4394, 0.52", "-53.3731, 32.5812, 13.6591, 0.59", "-54.5488, 32.7762, 13.9882, 0.37", "-55.2364, 32.8842, 14.1021, 0.37", "-56.2756, 32.9806, 14.1637, 0.37", "-57.5923, 32.9808, 14.1627, 0.59", "-58.2196, 32.9833, 14.1285, 0.59", "-58.7452, 32.9994, 14.0793, 0.59", "-59.994, 33.1039, 13.8973, 0.29", "-60.8554, 33.2467, 13.7218, 0.29", "-61.423, 33.3944, 13.5807, 0.59", "-62.3137, 33.6844, 13.3278, 0.59", "-63.0145, 33.9046, 13.1207, 0.52", "-63.9643, 34.1646, 12.8397, 0.52", "-64.9023, 34.3701, 12.5744, 0.52", "-65.6061, 34.5053, 12.3616, 0.52", "-66.6743, 34.6386, 12.0178, 0.74", "-67.4133, 34.667, 11.7805, 0.88", "-67.9596, 34.6606, 11.6142, 0.88", "-68.9213, 34.6119, 11.3673, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.3452, 28.6176, 15.7037, 1.18", "-16.3075, 30.1392, 16.1642, 1.18", "-15.2861, 31.5124, 16.5823, 1.18", "-14.2277, 32.8416, 16.986, 1.18", "-12.9957, 34.3557, 17.516, 1.18", "-11.854, 35.7974, 18.0448, 1.03", "-10.9305, 37.0564, 18.4998, 1.25", "-10.3867, 37.8318, 18.8031, 1.25", "-9.47042, 39.3702, 19.1961, 0.96", "-8.70037, 41.0624, 19.4047, 1.55", "-8.35946, 42.085, 19.3971, 1.55", "-7.97188, 43.9281, 19.2252, 1.25", "-7.78979, 45.8179, 18.9449, 1.11", "-7.87453, 50.3199, 18.0789, 0.81", "-8.07493, 51.6482, 17.75, 1.03", "-8.45715, 52.9144, 17.3464, 1.03", "-9.20121, 54.3993, 16.9273, 0.88", "-10.172, 55.56, 16.7368, 0.88", "-11.4883, 56.5913, 17.01, 0.96", "-12.4653, 57.2612, 17.4992, 0.96", "-13.9611, 58.1659, 18.3224, 1.03", "-16.3445, 59.4828, 19.8615, 1.25", "-17.463, 60.0835, 20.7484, 1.18", "-19.9482, 61.5358, 23.2472, 1.25", "-21.0224, 62.2709, 24.6977, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-39.5824, 235.929, -7.68083, 0.22", "-40.2742, 236.386, -7.09204, 0.22", "-40.9452, 236.829, -6.52095, 0.44", "-41.5398, 237.221, -6.01487, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-39.5824, 235.929, -7.68083, 0.22", "-40.8489, 235.813, -7.1702, 0.22", "-41.9854, 235.709, -6.712, 0.22", "-42.8746, 235.628, -6.35351, 0.22", "-43.2923, 235.59, -6.18507, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.3018, 183.563, 6.25061, 0.37", "12.6266, 184.93, 6.25592, 0.37", "12.9198, 185.848, 6.23777, 0.66", "13.2258, 186.766, 6.22237, 0.66", "13.6493, 188.1, 6.21714, 0.44", "13.9053, 188.98, 6.2333, 0.44", "14.377, 190.813, 6.31111, 0.88", "14.4282, 191.025, 6.32717, 1.03", "14.6686, 192.254, 6.45687, 0.66", "14.8356, 193.398, 6.59479, 0.88", "14.8935, 194.091, 6.69274, 0.88", "14.917, 194.991, 6.82964, 0.66", "14.8787, 196.17, 7.0227, 0.37", "14.8482, 197.039, 7.18959, 0.37", "14.785, 198.542, 7.51531, 0.59", "14.7481, 199.475, 7.72783, 0.81", "14.709, 201.156, 8.10098, 0.37", "14.6885, 202.235, 8.33995, 0.37", "14.6568, 203.708, 8.66738, 0.81", "14.628, 204.45, 8.83458, 0.96", "14.5576, 205.873, 9.13813, 0.37", "14.4855, 207.088, 9.37352, 0.29", "14.3886, 208.486, 9.61636, 0.52", "14.231, 210.218, 9.90024, 0.74", "14.0996, 211.256, 10.074, 0.88", "13.9477, 212.301, 10.2668, 0.66", "13.7611, 213.556, 10.507, 0.59", "13.5941, 214.783, 10.7412, 0.74", "13.471, 215.912, 10.9468, 0.74", "13.3779, 217.307, 11.1468, 0.59", "13.3688, 218.325, 11.2483, 0.44", "13.427, 219.83, 11.3374, 0.29", "13.5347, 220.931, 11.352, 0.37", "13.8296, 222.773, 11.2933, 0.52", "14.1656, 224.394, 11.1899, 0.66", "14.4153, 225.503, 11.1089, 0.66", "14.6268, 226.447, 11.0875, 0.37", "14.8624, 227.538, 11.1175, 0.52", "15.2309, 229.07, 11.1896, 0.37", "15.6406, 230.626, 11.2951, 0.52", "15.8764, 231.595, 11.4035, 0.59", "16.2853, 233.602, 11.6838, 0.81", "16.4852, 234.882, 11.89, 0.29", "16.5578, 235.83, 12.0761, 0.29", "16.5656, 236.705, 12.2951, 0.59", "16.5192, 237.842, 12.6167, 0.59", "16.3717, 239.501, 13.1165, 0.44", "16.1159, 241.337, 13.6877, 0.29", "15.8283, 243.005, 14.2538, 0.37", "15.6356, 243.994, 14.6075, 0.66", "15.3787, 245.32, 15.0798, 0.29", "15.0717, 246.975, 15.6551, 0.29", "14.6818, 249.071, 16.3857, 0.29", "14.4748, 250.214, 16.7733, 0.44", "14.4212, 250.539, 16.8736, 0.44", "14.2268, 251.659, 17.1823, 0.22", "14.1159, 252.32, 17.3615, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.3018, 183.563, 6.25061, 0.52", "12.8286, 183.127, 5.60779, 0.52", "13.1835, 182.781, 5.17654, 0.52", "13.6391, 182.353, 4.64103, 0.81", "14.0291, 182.019, 4.20393, 0.88", "14.6505, 181.545, 3.54063, 0.37", "15.3347, 181.023, 2.81022, 0.29", "16.219, 180.316, 1.8599, 0.29", "16.6841, 179.966, 1.36855, 0.44", "17.4489, 179.431, 0.588499, 0.44", "18.3335, 178.856, -0.252597, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-49.8132, -89.2124, 5.85334, 0.74", "-50.5687, -89.0256, 6.5028, 0.74", "-51.2245, -88.9371, 7.06674, 0.88", "-51.8276, -88.945, 7.56418, 1.03", "-52.4608, -89.0336, 8.0906, 0.88", "-53.6647, -89.3109, 9.08471, 1.03", "-53.9184, -89.3826, 9.27714, 1.03", "-54.5764, -89.6817, 9.74922, 0.81", "-55.3025, -90.1257, 10.2089, 0.66", "-55.8024, -90.5526, 10.4672, 0.66", "-56.1781, -90.9486, 10.6434, 0.52", "-56.8142, -91.6978, 10.9079, 0.52", "-57.3049, -92.3091, 11.1349, 0.52", "-57.7365, -92.8692, 11.3638, 0.52", "-58.795, -94.2465, 11.9615, 0.52", "-59.4223, -95.0624, 12.32, 0.52", "-59.9182, -95.6829, 12.6089, 0.52", "-60.5908, -96.4346, 12.9904, 0.74", "-61.0312, -96.8153, 13.2165, 0.96", "-61.6105, -97.1624, 13.4533, 0.66", "-62.0071, -97.3149, 13.5681, 0.66", "-62.8237, -97.5499, 13.7197, 0.59", "-63.8367, -97.756, 13.8472, 0.44", "-64.5935, -97.8393, 13.9125, 0.44", "-65.3858, -97.8768, 13.9557, 0.44", "-66.0928, -97.8846, 13.9911, 0.44", "-66.9301, -97.8883, 14.0241, 0.44", "-67.4262, -97.8828, 14.0391, 0.44", "-68.2264, -97.8795, 14.0239, 0.59", "-68.6613, -97.8827, 13.9891, 0.52", "-69.3719, -97.8932, 13.9137, 0.37", "-70.1762, -97.9346, 13.8116, 0.52", "-70.6238, -97.9874, 13.7465, 0.52", "-71.563, -98.1337, 13.5589, 0.74", "-72.1667, -98.2306, 13.4072, 0.59", "-72.6718, -98.2929, 13.27, 0.59", "-73.2205, -98.3334, 13.0973, 0.37", "-73.7515, -98.3642, 12.9242, 0.29", "-74.4799, -98.4143, 12.7082, 0.29", "-74.9855, -98.4369, 12.5819, 0.37", "-75.3822, -98.4663, 12.4939, 0.37", "-75.8981, -98.5208, 12.3971, 0.37", "-76.4758, -98.6058, 12.2841, 0.59", "-76.9593, -98.7183, 12.1902, 0.74", "-77.2266, -98.8046, 12.1296, 0.74", "-77.7595, -98.9997, 11.9742, 0.44", "-78.362, -99.2031, 11.7733, 0.59", "-79.0057, -99.4094, 11.542, 0.74", "-79.7511, -99.6372, 11.2692, 0.29", "-80.3739, -99.8245, 11.0434, 0.29", "-81.2301, -100.118, 10.7518, 0.37", "-81.788, -100.343, 10.5531, 0.37", "-82.3018, -100.558, 10.3785, 0.29", "-82.9591, -100.816, 10.18, 0.29", "-83.4217, -100.963, 10.053, 0.29", "-84.0396, -101.123, 9.9089, 0.29", "-84.7886, -101.281, 9.76791, 0.29", "-85.5741, -101.402, 9.64244, 0.29", "-86.1741, -101.436, 9.5595, 0.29", "-87.165, -101.413, 9.41967, 0.74", "-87.7789, -101.351, 9.33525, 0.81", "-88.5893, -101.218, 9.20989, 0.29", "-88.9412, -101.162, 9.1553, 0.29", "-89.592, -101.079, 9.02261, 0.88", "-90.0625, -101.025, 8.90448, 1.03", "-90.4383, -100.981, 8.79148, 0.52", "-91.1191, -100.9, 8.56881, 0.29", "-91.9033, -100.815, 8.31248, 0.29", "-92.2223, -100.783, 8.22523, 0.52", "-92.5337, -100.749, 8.15758, 0.52", "-93.2134, -100.651, 8.03827, 0.44", "-93.8179, -100.537, 7.93484, 0.59", "-94.5312, -100.356, 7.82129, 0.81", "-95.0069, -100.213, 7.73963, 0.81", "-95.6437, -100.02, 7.62709, 0.81", "-96.1224, -99.8779, 7.53358, 0.74", "-96.8534, -99.6709, 7.41662, 0.66", "-97.5782, -99.4917, 7.30816, 0.81", "-98.1181, -99.3935, 7.23451, 0.81", "-98.822, -99.3234, 7.15225, 0.59", "-99.5665, -99.3132, 7.0813, 0.44", "-100.559, -99.3755, 7.00351, 0.37", "-101.287, -99.4653, 6.98173, 0.59", "-101.926, -99.5599, 6.99199, 0.66", "-102.48, -99.6381, 7.01588, 0.66", "-102.799, -99.6756, 7.03423, 0.59", "-103.382, -99.7161, 7.06974, 0.59", "-104.096, -99.7223, 7.0746, 0.29", "-104.69, -99.7134, 7.1137, 0.29", "-105.151, -99.7136, 7.15058, 0.29", "-105.716, -99.7423, 7.19596, 0.81", "-106.108, -99.7963, 7.23462, 0.96", "-106.6, -99.9218, 7.28937, 0.96", "-107.495, -100.267, 7.31876, 0.22", "-107.704, -100.368, 7.32346, 0.44", "-108.033, -100.544, 7.34333, 0.44", "-108.515, -100.814, 7.39628, 0.59", "-108.744, -100.936, 7.42924, 0.81", "-109.637, -101.358, 7.61967, 0.22", "-110.172, -101.568, 7.75684, 0.81", "-110.674, -101.735, 7.89572, 0.96", "-111.086, -101.855, 8.02391, 0.96", "-111.697, -102.007, 8.22498, 0.52", "-112.931, -102.273, 8.64343, 1.92", "-113.553, -102.388, 8.88081, 2.58", "-114.102, -102.477, 9.07985, 2.73", "-114.948, -102.613, 9.35767, 1.92", "-115.874, -102.775, 9.60234, 1.11", "-116.539, -102.901, 9.74244, 0.74", "-117.414, -103.077, 9.84838, 0.74", "-118.11, -103.238, 9.87849, 1.18", "-119.001, -103.464, 9.85762, 0.37", "-119.903, -103.705, 9.74738, 0.44", "-120.445, -103.869, 9.63737, 0.88", "-121.074, -104.093, 9.47118, 0.88", "-121.759, -104.389, 9.2504, 0.81", "-122.086, -104.551, 9.14778, 0.88", "-122.495, -104.752, 9.05353, 0.74", "-123.023, -104.993, 8.9943, 0.44", "-123.521, -105.186, 8.99863, 0.74", "-124.244, -105.402, 9.09348, 0.29", "-124.572, -105.473, 9.15874, 0.29", "-125.408, -105.636, 9.35405, 0.66", "-125.767, -105.722, 9.44433, 0.66", "-126.312, -105.868, 9.52417, 0.59", "-126.667, -105.985, 9.52868, 0.37", "-127.154, -106.175, 9.47816, 0.29", "-127.705, -106.43, 9.37447, 0.29", "-128.495, -106.849, 9.17231, 0.29", "-129.443, -107.376, 8.90318, 0.29", "-130.226, -107.821, 8.66982, 0.29", "-130.792, -108.14, 8.49663, 0.22", "-131.268, -108.385, 8.34894, 0.22", "-131.268, -108.385, 8.34894, 0.52", "-131.576, -108.492, 8.2699, 0.52", "-132.196, -108.713, 8.22057, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-49.8132, -89.2124, 5.85334, 0.66", "-50.1554, -90.6504, 6.03927, 0.66", "-50.4101, -91.8305, 6.27539, 0.59", "-50.5701, -92.507, 6.43469, 0.74", "-50.806, -93.3348, 6.64382, 0.37", "-51.0247, -93.9452, 6.80752, 0.59", "-51.39, -94.8054, 7.07479, 0.52", "-51.7401, -95.5059, 7.33755, 0.59", "-52.0909, -96.1411, 7.58687, 0.29", "-52.3827, -96.6684, 7.77804, 0.29", "-52.7422, -97.3583, 7.97826, 0.52", "-53.163, -98.345, 8.15387, 0.52", "-53.4711, -99.3076, 8.23942, 0.52", "-53.6423, -100.095, 8.31722, 0.74", "-53.7783, -100.886, 8.41608, 0.59", "-53.9432, -101.895, 8.55705, 0.52", "-54.1012, -102.793, 8.69988, 0.44", "-54.2715, -103.473, 8.82628, 0.44", "-54.7669, -104.798, 9.185, 0.66", "-55.1459, -105.544, 9.43382, 0.29", "-55.4489, -106.017, 9.60858, 0.29", "-55.7589, -106.447, 9.76782, 0.29", "-56.1261, -106.947, 9.93742, 0.66", "-56.4144, -107.374, 10.0618, 0.88", "-56.6827, -107.839, 10.1634, 0.88", "-57.0702, -108.68, 10.3208, 0.59", "-57.3766, -109.461, 10.4297, 0.52", "-57.5468, -109.936, 10.4738, 0.52", "-57.8355, -110.777, 10.4935, 0.74", "-58.068, -111.411, 10.4751, 0.88", "-58.3143, -112.01, 10.4416, 0.74", "-58.6549, -112.81, 10.3857, 0.44", "-58.9093, -113.403, 10.3455, 0.66", "-59.3602, -114.515, 10.2848, 0.44", "-59.5831, -115.111, 10.2626, 0.44", "-59.819, -115.78, 10.2677, 0.74", "-60.0582, -116.479, 10.3032, 0.74", "-60.3369, -117.304, 10.3669, 0.74", "-60.7332, -118.452, 10.4675, 0.52", "-61.1071, -119.487, 10.5707, 0.66", "-61.4489, -120.35, 10.6385, 0.66", "-61.7379, -121.003, 10.6805, 0.74", "-62.0814, -121.682, 10.6815, 0.52", "-62.4757, -122.408, 10.6362, 0.29", "-62.6918, -122.805, 10.5892, 0.29", "-62.9201, -123.245, 10.5122, 0.29", "-63.1703, -123.767, 10.4012, 0.59", "-63.722, -124.98, 10.1352, 0.66", "-63.9932, -125.671, 10.0133, 0.52", "-64.2195, -126.355, 9.97036, 0.96", "-64.4086, -127.079, 9.92272, 0.66", "-64.6111, -128.085, 9.93088, 0.44", "-64.6945, -128.655, 10.017, 0.44", "-64.7409, -129.569, 10.3922, 0.44", "-64.6524, -130.637, 11.0023, 0.66", "-64.3866, -131.983, 11.8986, 0.96", "-64.0693, -133.074, 12.6761, 0.81", "-63.7278, -134.075, 13.3866, 0.88", "-63.3897, -135.08, 14.0509, 0.66", "-63.1732, -135.888, 14.5252, 0.66", "-63.0544, -136.589, 14.861, 0.59", "-63.0091, -137.287, 15.1611, 0.44", "-63.0072, -137.938, 15.3282, 0.81", "-63.0255, -138.53, 15.4153, 0.81", "-63.0797, -139.421, 15.5044, 0.44", "-63.17, -140.194, 15.5835, 0.44", "-63.2776, -140.986, 15.6716, 0.66", "-63.4131, -141.935, 15.7917, 0.59", "-63.4754, -142.696, 15.8887, 0.52", "-63.4675, -143.047, 15.9275, 0.74", "-63.2897, -144.511, 16.0768, 0.29", "-63.187, -145.039, 16.1291, 0.29", "-62.992, -145.854, 16.2005, 0.29", "-62.6823, -147.097, 16.3007, 0.52", "-62.3215, -148.448, 16.4049, 0.37", "-62.0953, -149.198, 16.468, 0.59", "-61.9065, -149.754, 16.5442, 0.59", "-61.6533, -150.496, 16.7027, 0.44", "-61.3821, -151.269, 16.9539, 0.44", "-61.2394, -151.705, 17.1381, 0.81", "-61.0741, -152.183, 17.3701, 0.81", "-60.7245, -153.112, 17.8141, 0.59", "-60.4592, -153.803, 18.1298, 0.52", "-60.194, -154.483, 18.4496, 0.52", "-59.9392, -155.241, 18.7955, 0.52", "-59.8273, -155.763, 18.9954, 0.29", "-59.7812, -156.368, 19.1726, 0.29", "-59.8022, -156.956, 19.3045, 0.52", "-59.8626, -157.596, 19.4386, 0.52", "-59.9531, -158.521, 19.6616, 0.29", "-60.0247, -159.416, 19.9318, 0.29", "-60.0639, -160.118, 20.1522, 0.52", "-60.0842, -160.616, 20.3039, 0.52", "-60.1271, -161.38, 20.5311, 0.29", "-60.185, -162.184, 20.755, 0.52", "-60.2292, -162.592, 20.8805, 0.52", "-60.3339, -163.412, 21.1628, 0.52", "-60.4666, -164.324, 21.5201, 0.74", "-60.6904, -165.558, 22.0132, 0.22", "-60.8796, -166.39, 22.3505, 0.22", "-61.0821, -167.172, 22.6691, 0.22", "-61.2855, -168.004, 23.0305, 0.52", "-61.4272, -168.769, 23.4212, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-61.463, 18.2916, -21.9833, 0.81", "-62.883, 18.4893, -22.0581, 0.81", "-63.7662, 18.5469, -22.1191, 0.81", "-65.1969, 18.5932, -22.2408, 0.74", "-65.9911, 18.6363, -22.3131, 0.74", "-66.7136, 18.7022, -22.3805, 0.81", "-67.9274, 18.8814, -22.4922, 0.96", "-68.7046, 19.0516, -22.5466, 0.52", "-69.298, 19.2459, -22.5851, 0.52", "-70.2734, 19.8047, -22.7003, 0.74", "-70.8198, 20.2677, -22.8021, 0.74", "-71.503, 21.0222, -22.9792, 0.44", "-72.1433, 21.8578, -23.1726, 0.44", "-72.6145, 22.4838, -23.3352, 0.44", "-73.5715, 23.6573, -23.6988, 0.81", "-74.0949, 24.2145, -23.9205, 0.96", "-74.8842, 24.8992, -24.2839, 0.96", "-75.4699, 25.291, -24.5617, 0.88", "-76.3138, 25.6933, -24.9494, 0.96", "-77.1238, 25.9423, -25.295, 1.11", "-77.7178, 26.0441, -25.5216, 1.11", "-78.3311, 26.1019, -25.7418, 1.11", "-78.8816, 26.1103, -25.9212, 0.74", "-79.5339, 26.0769, -26.1205, 0.29", "-80.4933, 25.9667, -26.3593, 0.29", "-81.3467, 25.864, -26.526, 0.88", "-82.0181, 25.8006, -26.6089, 1.03", "-82.7739, 25.7469, -26.6498, 1.03", "-83.534, 25.6944, -26.6623, 1.11", "-84.855, 25.6213, -26.6351, 0.37", "-85.8271, 25.5794, -26.5997, 0.29", "-86.9192, 25.5353, -26.5889, 0.29", "-87.8063, 25.4978, -26.6233, 0.96", "-88.6448, 25.447, -26.6781, 1.18", "-89.0747, 25.3936, -26.726, 1.33", "-90.2924, 25.1424, -26.9315, 0.44", "-91.6045, 24.7632, -27.1866, 0.44", "-92.2447, 24.5552, -27.3263, 0.37", "-92.7815, 24.3993, -27.4444, 0.37", "-93.795, 24.1732, -27.6455, 0.37", "-94.6174, 24.0613, -27.789, 0.59", "-95.4081, 24.0346, -27.9017, 0.74", "-96.3729, 24.057, -28.0273, 0.88", "-97.1878, 24.1305, -28.1225, 0.88", "-97.8895, 24.2366, -28.1811, 0.74", "-98.9094, 24.4429, -28.2352, 0.29", "-99.4712, 24.5573, -28.224, 0.22", "-100.663, 24.7794, -28.146, 0.22", "-101.853, 24.9561, -28.0168, 0.59", "-102.633, 25.0426, -27.9164, 0.81", "-103.794, 25.1431, -27.7582, 0.81", "-105.248, 25.2083, -27.5384, 0.96", "-106.341, 25.2451, -27.3806, 0.59", "-107.33, 25.3208, -27.2513, 0.22", "-108.132, 25.3982, -27.1787, 0.22", "-108.791, 25.5057, -27.121, 0.44", "-109.839, 25.7744, -27.0232, 0.59", "-110.788, 26.0756, -26.9491, 0.52", "-112.2, 26.5539, -26.8293, 0.66", "-112.956, 26.8105, -26.7819, 0.66", "-114.475, 27.2946, -26.7313, 0.66", "-115.412, 27.5714, -26.7256, 0.59", "-116.233, 27.7815, -26.8043, 0.44", "-117.236, 27.9191, -27.0037, 0.37", "-118.11, 27.9146, -27.246, 0.29", "-118.752, 27.838, -27.465, 0.29", "-119.387, 27.6999, -27.7228, 0.44", "-120.694, 27.371, -28.2496, 0.59", "-121.109, 27.2808, -28.4053, 0.59", "-122.374, 27.033, -28.8202, 0.37", "-123.437, 26.8268, -29.1401, 0.29", "-124.123, 26.7049, -29.3359, 0.29", "-124.471, 26.6502, -29.4177, 0.29", "-125.434, 26.5179, -29.5731, 0.59", "-125.928, 26.4599, -29.6519, 0.59", "-126.426, 26.4349, -29.7361, 0.52", "-127.032, 26.4544, -29.815, 0.66", "-128.092, 26.5157, -29.9249, 0.29", "-128.574, 26.5233, -29.9658, 0.29", "-129.145, 26.4895, -29.9932, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-61.463, 18.2916, -21.9833, 0.74", "-61.6345, 19.3695, -21.8531, 0.74", "-61.8548, 20.6702, -21.724, 0.74", "-62.1676, 22.247, -21.5941, 0.74", "-62.4004, 23.1685, -21.5672, 0.74", "-63.0463, 25.194, -21.5746, 0.88", "-63.3925, 26.1161, -21.6066, 0.88", "-63.7715, 26.9388, -21.7045, 0.96", "-64.2761, 27.847, -21.8787, 0.81", "-65.291, 29.402, -22.2688, 0.74", "-66.1305, 30.6387, -22.6528, 0.96", "-66.7919, 31.5951, -22.9884, 0.96", "-67.5872, 32.7923, -23.4275, 0.81", "-68.1634, 33.7576, -23.7929, 0.74", "-68.5422, 34.5143, -24.0779, 0.74", "-69.1479, 35.9695, -24.5919, 0.74", "-69.4763, 36.8541, -24.8986, 0.88", "-69.8064, 37.6937, -25.1655, 0.88", "-70.1529, 38.4602, -25.3838, 0.66", "-70.5726, 39.2354, -25.6277, 0.66", "-71.0866, 40.0278, -25.8922, 0.81", "-71.66, 40.7766, -26.1521, 0.81", "-72.4009, 41.7061, -26.5444, 0.66", "-72.9497, 42.3543, -26.836, 0.81", "-73.5751, 43.091, -27.1896, 0.81", "-74.037, 43.7029, -27.4788, 0.59", "-74.3033, 44.1486, -27.6611, 0.59", "-74.77, 45.0882, -27.9537, 0.59", "-75.1533, 45.9766, -28.1307, 0.59", "-75.4872, 46.7962, -28.2629, 0.74", "-75.8359, 47.6458, -28.417, 0.88", "-76.3615, 48.7881, -28.6868, 1.25", "-76.8745, 49.762, -28.985, 0.66", "-77.3786, 50.6041, -29.2988, 0.66", "-78.2228, 51.8767, -29.9003, 0.81", "-78.9071, 52.7536, -30.3943, 0.81", "-79.5599, 53.4541, -30.8707, 0.96", "-80.196, 54.0111, -31.2994, 0.66", "-80.8799, 54.5063, -31.6916, 0.52", "-81.9332, 55.1541, -32.1695, 0.52", "-82.8377, 55.6388, -32.4614, 1.11", "-83.4523, 55.9627, -32.5837, 1.33", "-84.3728, 56.4762, -32.6759, 0.66", "-85.2384, 57.0027, -32.6952, 0.52", "-85.8618, 57.4221, -32.6758, 0.66", "-86.1962, 57.6793, -32.6482, 0.66", "-87.0986, 58.4877, -32.5778, 0.44", "-87.7947, 59.2126, -32.5266, 0.81", "-88.2786, 59.7964, -32.513, 0.81", "-88.9371, 60.6678, -32.5182, 0.88", "-89.6392, 61.6398, -32.5485, 0.88", "-90.3616, 62.6393, -32.6087, 0.59", "-90.8928, 63.3541, -32.6803, 0.81", "-91.6358, 64.2925, -32.797, 0.96", "-92.1814, 64.9012, -32.8818, 0.96", "-92.7878, 65.5377, -32.9963, 0.96", "-93.808, 66.6048, -33.1898, 0.96", "-94.7032, 67.5823, -33.3389, 0.88", "-95.4188, 68.441, -33.4567, 0.88", "-96.431, 69.8681, -33.6462, 0.81", "-97.104, 71.0293, -33.7893, 0.52", "-97.5448, 72.0399, -33.9021, 0.74", "-97.8372, 73.0518, -34.0024, 0.74", "-98.0184, 74.0286, -34.0999, 0.88", "-98.176, 75.1516, -34.2111, 0.66", "-98.3021, 76.1048, -34.3193, 0.88", "-98.4797, 76.9783, -34.4635, 0.88", "-98.7771, 77.8665, -34.7053, 0.66", "-99.2626, 78.8107, -35.063, 0.66", "-99.8475, 79.6091, -35.436, 0.96", "-100.363, 80.1445, -35.6983, 0.96", "-101.092, 80.7988, -36.0228, 0.74", "-101.945, 81.5464, -36.3287, 0.66", "-102.449, 82.0147, -36.4602, 0.66", "-103.07, 82.6296, -36.5703, 0.66", "-104.088, 83.7183, -36.7033, 1.03", "-104.6, 84.3284, -36.7431, 1.03", "-105.517, 85.5441, -36.8341, 0.74", "-106.513, 87.0221, -37.0287, 0.88", "-107.13, 87.9509, -37.2025, 0.74", "-107.856, 89.0054, -37.4664, 0.96", "-108.816, 90.302, -37.876, 0.59", "-109.902, 91.6762, -38.3803, 0.52", "-110.626, 92.5662, -38.7546, 0.66", "-111.536, 93.7564, -39.2669, 0.81", "-112.096, 94.568, -39.602, 1.03", "-112.658, 95.4308, -39.9035, 0.74", "-112.998, 95.9481, -40.0393, 0.96", "-113.525, 96.7319, -40.1444, 0.96", "-114.232, 97.759, -40.207, 0.59", "-114.739, 98.5075, -40.2265, 0.59", "-115.51, 99.5811, -40.2303, 0.74", "-116.193, 100.421, -40.2324, 0.81", "-117.087, 101.311, -40.252, 0.96", "-118.034, 102.077, -40.2856, 1.18", "-119.038, 102.747, -40.3392, 0.59", "-119.85, 103.262, -40.45, 0.66", "-120.612, 103.754, -40.6253, 0.66", "-121.722, 104.501, -40.9456, 0.52", "-122.473, 105.041, -41.2022, 0.81", "-123.306, 105.653, -41.5167, 0.81", "-124.949, 106.825, -42.18, 0.88", "-125.814, 107.42, -42.5581, 0.59", "-126.632, 107.951, -42.939, 0.81", "-127.501, 108.492, -43.363, 0.81", "-128.586, 109.13, -43.8902, 0.81", "-129.24, 109.491, -44.1839, 0.81", "-130.087, 109.907, -44.4933, 0.74", "-130.926, 110.333, -44.8145, 0.59", "-131.74, 110.803, -45.1264, 0.59", "-132.519, 111.362, -45.4103, 0.74", "-133.402, 112.203, -45.7054, 0.81", "-134.011, 112.962, -45.8634, 0.88", "-134.413, 113.565, -45.9108, 0.88", "-134.818, 114.247, -45.9127, 0.74", "-135.308, 115.098, -45.8712, 0.74", "-135.736, 115.853, -45.8165, 0.52", "-136.397, 117.073, -45.7058, 0.44", "-136.954, 118.079, -45.6039, 0.74", "-137.263, 118.581, -45.5583, 0.74", "-137.851, 119.423, -45.5441, 0.59", "-138.304, 119.973, -45.6106, 0.59", "-138.769, 120.455, -45.7367, 0.59", "-139.638, 121.2, -46.0523, 0.66", "-140.719, 121.996, -46.5115, 0.37", "-141.903, 122.74, -47.0387, 0.37", "-143.246, 123.435, -47.6381, 0.52", "-143.844, 123.705, -47.8926, 0.52", "-144.851, 124.131, -48.3016, 0.29", "-145.597, 124.455, -48.6026, 0.66", "-146.242, 124.766, -48.8399, 0.66", "-147.194, 125.315, -49.1296, 0.37", "-148.021, 125.892, -49.3367, 0.44", "-148.853, 126.572, -49.5349, 0.29", "-149.611, 127.289, -49.7215, 0.29", "-150.331, 128.027, -49.8994, 0.29", "-150.987, 128.717, -50.0663, 0.74", "-151.299, 129.025, -50.1549, 0.74", "-151.751, 129.38, -50.2919, 0.37", "-152.596, 129.883, -50.5652, 0.29", "-153.187, 130.161, -50.7662, 0.29", "-153.653, 130.359, -50.9499, 0.29", "-154.447, 130.653, -51.2844, 0.29", "-155.182, 130.889, -51.6047, 0.66", "-155.708, 131.026, -51.8386, 0.66", "-156.48, 131.181, -52.1707, 0.37", "-157.297, 131.373, -52.5531, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-21.0224, 62.2709, 24.6977, 0.96", "-21.1602, 63.4223, 25.0446, 0.96", "-21.3472, 64.2783, 25.2626, 0.81", "-21.5519, 64.9643, 25.4162, 0.74", "-21.8216, 65.6788, 25.5548, 0.74", "-22.2423, 66.6151, 25.7111, 0.81", "-22.6635, 67.4404, 25.8311, 0.66", "-22.9898, 67.9631, 25.8886, 0.81", "-23.3253, 68.4482, 25.9298, 0.81", "-23.852, 69.1553, 26.0021, 0.66", "-24.4468, 69.8953, 26.0999, 0.81", "-24.8683, 70.4076, 26.1855, 0.96", "-25.2769, 70.9602, 26.2858, 1.03", "-25.7166, 71.6174, 26.4056, 0.59", "-26.0923, 72.2542, 26.4866, 0.59", "-26.4595, 72.9462, 26.5425, 0.44", "-26.7393, 73.5028, 26.5694, 0.44", "-27.2893, 74.5745, 26.5948, 0.81", "-27.5935, 75.1127, 26.5889, 1.03", "-28.2546, 76.0946, 26.6281, 0.66", "-28.5986, 76.5051, 26.672, 0.66", "-29.0199, 76.9186, 26.7685, 0.81", "-29.4664, 77.3065, 26.911, 0.59", "-30.0167, 77.7478, 27.1711, 0.44", "-31.0408, 78.6231, 27.8136, 0.44", "-31.7522, 79.3105, 28.3817, 0.37", "-32.3457, 79.997, 28.9015, 0.37", "-32.752, 80.6035, 29.2822, 0.37", "-33.2919, 81.6775, 29.7898, 0.44", "-33.4876, 82.3061, 30.2011, 0.29", "-33.6091, 82.8341, 30.465, 0.29", "-33.7861, 83.6461, 30.7891, 0.29", "-33.9992, 84.4587, 31.0371, 0.96", "-34.2195, 85.1297, 31.2026, 1.11", "-35.5772, 88.8956, 32.0171, 1.11", "-36.8783, 92.0615, 32.9734, 0.44", "-37.0736, 92.5795, 33.245, 0.29", "-37.215, 93.1496, 33.7981, 0.29", "-37.1921, 93.385, 34.2903, 0.29", "-37.0556, 93.4854, 34.8933, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-21.0224, 62.2709, 24.6977, 0.74", "-20.0035, 63.3742, 25.8726, 0.74", "-19.544, 63.8717, 26.4024, 0.74", "-18.6636, 64.8251, 27.4178, 0.74", "-17.8829, 65.6705, 28.318, 1.03", "-17.0824, 66.5374, 29.2412, 1.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-17.0824, 66.5374, 29.2412, 0.66", "-16.8397, 67.6812, 29.2939, 0.66", "-16.7276, 68.5554, 29.3743, 0.66", "-16.6572, 69.6039, 29.4818, 0.74", "-16.6283, 70.7972, 29.6196, 0.74", "-16.6327, 72.3195, 29.8158, 1.18", "-16.6539, 73.6879, 30.0198, 0.96", "-16.6824, 74.8258, 30.2405, 0.81", "-16.7147, 76.0194, 30.4884, 0.52", "-16.7248, 76.9942, 30.7252, 0.52", "-16.7268, 78.0438, 31.0168, 0.96", "-16.7323, 78.6247, 31.1811, 0.96", "-16.7444, 79.4671, 31.4748, 0.96", "-16.7597, 80.1991, 31.7463, 0.59", "-16.7872, 81.0622, 32.0267, 0.37", "-16.7448, 81.8736, 32.3339, 0.37", "-16.6452, 82.5577, 32.6015, 0.37", "-16.3528, 83.6724, 32.9596, 0.37", "-15.7989, 84.9956, 33.2738, 0.37", "-15.1652, 85.9933, 33.4235, 0.74", "-13.6869, 87.9529, 33.619, 0.22", "-13.1268, 88.5839, 33.6605, 0.22", "-12.0197, 89.6445, 33.6897, 0.22", "-10.9054, 90.5074, 33.6778, 0.22", "-10.0775, 91.0325, 33.6642, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-17.0824, 66.5374, 29.2412, 0.74", "-15.8654, 67.0942, 29.6572, 0.74", "-15.0209, 67.7783, 30.0328, 0.44", "-14.3021, 68.5717, 30.4011, 0.44", "-13.8167, 69.2146, 30.6607, 0.59", "-13.2866, 69.9605, 30.9424, 0.29", "-12.5978, 70.8893, 31.3517, 0.29", "-12.1725, 71.6256, 31.6614, 0.44", "-11.9749, 72.0448, 31.8283, 0.44", "-11.5837, 72.9796, 32.2099, 0.66", "-11.2365, 73.7837, 32.5059, 0.74", "-10.5656, 75.0316, 33.0026, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_ChC_9b0e709c9c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.45000043190095856)
    connect dend_37(0), soma_0(0.45000043190095856)
    connect dend_24(0), soma_0(0.45000043190095856)
    connect dend_9(0), soma_0(0.45000043190095856)
    connect dend_0(0), soma_0(0.45000043190095856)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.247476, -12.3185, -1.01707, 2.36383 ) }
    soma_0 { pt3dadd( 0.272374, -11.1472, -0.92957, 3.66321 ) }
    soma_0 { pt3dadd( 0.297273, -9.97598, -0.842075, 5.22974 ) }
    soma_0 { pt3dadd( 0.322171, -8.80474, -0.75458, 6.26105 ) }
    soma_0 { pt3dadd( 0.34707, -7.63351, -0.667085, 6.92536 ) }
    soma_0 { pt3dadd( 0.371968, -6.46227, -0.57959, 7.55364 ) }
    soma_0 { pt3dadd( 0.396866, -5.29103, -0.492094, 8.36178 ) }
    soma_0 { pt3dadd( 0.421765, -4.1198, -0.404599, 9.09467 ) }
    soma_0 { pt3dadd( 0.446663, -2.94856, -0.317104, 9.82452 ) }
    soma_0 { pt3dadd( 0.471562, -1.77733, -0.229609, 10.5969 ) }
    soma_0 { pt3dadd( 0.49646, -0.606089, -0.142114, 10.9527 ) }
    soma_0 { pt3dadd( 0.521359, 0.565147, -0.0546186, 11.1935 ) }
    soma_0 { pt3dadd( 0.546257, 1.73638, 0.0328765, 11.3346 ) }
    soma_0 { pt3dadd( 0.571156, 2.90762, 0.120372, 11.3156 ) }
    soma_0 { pt3dadd( 0.596054, 4.07886, 0.207867, 11.2804 ) }
    soma_0 { pt3dadd( 0.620953, 5.25009, 0.295362, 11.0098 ) }
    soma_0 { pt3dadd( 0.645851, 6.42133, 0.382857, 10.6994 ) }
    soma_0 { pt3dadd( 0.67075, 7.59256, 0.470352, 10.2417 ) }
    soma_0 { pt3dadd( 0.695648, 8.7638, 0.557847, 9.96532 ) }
    soma_0 { pt3dadd( 0.720546, 9.93504, 0.645343, 4.49434 ) }
    soma_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 2.79989 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 5.17534, 7.39835, -4.88165, 0.29 ) }
    dend_38 { pt3dadd( 5.67345, 7.87445, -4.6937, 0.29 ) }
    dend_38 { pt3dadd( 6.20438, 8.39887, -4.51577, 0.37 ) }
    dend_38 { pt3dadd( 6.77107, 8.97668, -4.34852, 0.52 ) }
    dend_38 { pt3dadd( 7.10063, 9.32309, -4.26215, 0.52 ) }
    dend_38 { pt3dadd( 7.5627, 9.80529, -4.15984, 0.81 ) }
    dend_38 { pt3dadd( 7.83535, 10.1054, -4.10425, 0.81 ) }
    dend_38 { pt3dadd( 8.14618, 10.4836, -4.02926, 0.29 ) }
    dend_38 { pt3dadd( 8.43677, 10.8969, -3.95062, 0.59 ) }
    dend_38 { pt3dadd( 8.6825, 11.2919, -3.88693, 0.59 ) }
    dend_38 { pt3dadd( 8.94629, 11.7433, -3.80826, 0.59 ) }
    dend_38 { pt3dadd( 9.29751, 12.3552, -3.69544, 0.29 ) }
    dend_38 { pt3dadd( 9.80063, 13.2291, -3.53943, 0.29 ) }
    dend_38 { pt3dadd( 10.1228, 13.7668, -3.44998, 0.81 ) }
    dend_38 { pt3dadd( 10.3335, 14.0987, -3.40112, 0.81 ) }
    dend_38 { pt3dadd( 10.6243, 14.5355, -3.34947, 0.52 ) }
    dend_38 { pt3dadd( 11.0581, 15.1138, -3.30732, 0.29 ) }
    dend_38 { pt3dadd( 11.6574, 15.8468, -3.28212, 0.22 ) }
    dend_38 { pt3dadd( 12.0066, 16.2437, -3.29118, 0.29 ) }
    dend_38 { pt3dadd( 12.381, 16.6503, -3.30441, 0.29 ) }
    dend_38 { pt3dadd( 13.1518, 17.4689, -3.33503, 0.22 ) }
    dend_38 { pt3dadd( 13.8902, 18.2286, -3.3689, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.00466, -9.84165, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.00466, -9.84165, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.58119, -10.6345, 5.48752, 1.11 ) }
    dend_37 { pt3dadd( -2.30599, -11.744, 5.50741, 0.88 ) }
    dend_37 { pt3dadd( -2.82969, -12.6243, 5.59137, 0.88 ) }
    dend_37 { pt3dadd( -3.57479, -14.0415, 5.83857, 1.18 ) }
    dend_37 { pt3dadd( -4.04608, -15.0984, 6.12936, 1.18 ) }
    dend_37 { pt3dadd( -4.56995, -16.7417, 6.74889, 0.81 ) }
    dend_37 { pt3dadd( -4.6843, -17.4946, 7.11167, 1.11 ) }
    dend_37 { pt3dadd( -4.59412, -18.6513, 7.75236, 1.11 ) }
    dend_37 { pt3dadd( -4.32399, -19.623, 8.37013, 0.96 ) }
    dend_37 { pt3dadd( -3.78, -20.8794, 9.24048, 1.11 ) }
    dend_37 { pt3dadd( -3.33936, -21.7528, 9.85624, 1.25 ) }
    dend_37 { pt3dadd( -2.96603, -22.4324, 10.3224, 0.96 ) }
    dend_37 { pt3dadd( -2.40535, -23.6709, 11.0392, 1.03 ) }
    dend_37 { pt3dadd( -2.08648, -24.6695, 11.4766, 1.03 ) }
    dend_37 { pt3dadd( -2.00143, -25.3107, 11.6992, 0.59 ) }
    dend_37 { pt3dadd( -2.05726, -26.1756, 11.9887, 0.88 ) }
    dend_37 { pt3dadd( -2.16636, -26.5779, 12.1422, 0.88 ) }
    dend_37 { pt3dadd( -2.7241, -27.8046, 12.6553, 0.66 ) }
    dend_37 { pt3dadd( -3.06838, -28.3176, 12.9138, 0.74 ) }
    dend_37 { pt3dadd( -3.6338, -29.0907, 13.3206, 0.66 ) }
    dend_37 { pt3dadd( -4.31679, -30.098, 13.8715, 0.88 ) }
    dend_37 { pt3dadd( -4.77115, -30.8877, 14.2867, 0.81 ) }
    dend_37 { pt3dadd( -5.05031, -31.4919, 14.5975, 0.44 ) }
    dend_37 { pt3dadd( -5.47079, -32.7268, 15.2177, 0.81 ) }
    dend_37 { pt3dadd( -5.7578, -33.8665, 15.7222, 0.81 ) }
    dend_37 { pt3dadd( -5.94922, -35.0948, 16.1443, 0.59 ) }
    dend_37 { pt3dadd( -6.03123, -36.2122, 16.4303, 1.11 ) }
    dend_37 { pt3dadd( -6.03045, -37.1448, 16.5962, 1.33 ) }
    dend_37 { pt3dadd( -5.987, -37.9441, 16.7083, 1.11 ) }
    dend_37 { pt3dadd( -5.87481, -39.0358, 16.837, 0.81 ) }
    dend_37 { pt3dadd( -5.74674, -40.0528, 17.0221, 0.66 ) }
    dend_37 { pt3dadd( -5.61956, -40.734, 17.2414, 1.18 ) }
    dend_37 { pt3dadd( -5.32145, -41.8129, 17.7845, 0.96 ) }
    dend_37 { pt3dadd( -5.0766, -42.5445, 18.2528, 0.74 ) }
    dend_37 { pt3dadd( -4.73921, -43.4679, 18.96, 0.66 ) }
    dend_37 { pt3dadd( -4.36391, -44.4748, 19.8254, 0.88 ) }
    dend_37 { pt3dadd( -3.96669, -45.6701, 20.9715, 1.18 ) }
    dend_37 { pt3dadd( -3.71277, -46.6691, 21.9711, 0.66 ) }
    dend_37 { pt3dadd( -3.6232, -47.3337, 22.6231, 0.59 ) }
    dend_37 { pt3dadd( -3.61015, -47.9546, 23.133, 0.74 ) }
    dend_37 { pt3dadd( -3.66631, -48.6658, 23.5963, 0.44 ) }
    dend_37 { pt3dadd( -3.83854, -49.7069, 24.0705, 0.44 ) }
    dend_37 { pt3dadd( -3.99273, -50.3542, 24.2362, 0.44 ) }
    dend_37 { pt3dadd( -4.25904, -51.352, 24.3347, 0.37 ) }
    dend_37 { pt3dadd( -4.46703, -52.3489, 24.5565, 0.37 ) }
    dend_37 { pt3dadd( -4.59719, -53.0301, 24.8431, 0.96 ) }
    dend_37 { pt3dadd( -4.68449, -53.4825, 25.1135, 0.96 ) }
    dend_37 { pt3dadd( -4.87644, -54.3356, 25.7853, 0.44 ) }
    dend_37 { pt3dadd( -5.1153, -55.1458, 26.535, 0.81 ) }
    dend_37 { pt3dadd( -5.97374, -57.8042, 29.1684, 0.88 ) }
    dend_37 { pt3dadd( -6.29612, -58.7911, 30.1572, 0.88 ) }
    dend_37 { pt3dadd( -6.41728, -59.2334, 30.573, 0.88 ) }
    dend_37 { pt3dadd( -6.58971, -60.0633, 31.2684, 0.66 ) }
    dend_37 { pt3dadd( -6.77698, -61.2924, 32.1705, 0.52 ) }
    dend_37 { pt3dadd( -6.85803, -62.1806, 32.6291, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( -6.87556, -63.069, 32.8461, 0.59 ) }
    dend_37 { pt3dadd( -6.77431, -64.1779, 33.1024, 0.74 ) }
    dend_37 { pt3dadd( -6.68353, -64.8247, 33.2658, 0.74 ) }
    dend_37 { pt3dadd( -6.42616, -66.4599, 33.7429, 0.74 ) }
    dend_37 { pt3dadd( -6.24865, -67.4854, 34.1496, 0.52 ) }
    dend_37 { pt3dadd( -6.13323, -68.1355, 34.4563, 0.66 ) }
    dend_37 { pt3dadd( -6.00026, -68.8077, 34.7851, 0.66 ) }
    dend_37 { pt3dadd( -5.76704, -69.6971, 35.2323, 0.37 ) }
    dend_37 { pt3dadd( -5.55719, -70.2909, 35.4874, 0.37 ) }
    dend_37 { pt3dadd( -5.22825, -71.0564, 35.7158, 0.37 ) }
    dend_37 { pt3dadd( -4.87271, -71.9032, 35.9234, 0.37 ) }
    dend_37 { pt3dadd( -4.5876, -72.6041, 36.0645, 0.37 ) }
    dend_37 { pt3dadd( -4.08932, -73.7287, 36.2595, 0.37 ) }
    dend_37 { pt3dadd( -3.78566, -74.3304, 36.3714, 0.52 ) }
    dend_37 { pt3dadd( -3.56992, -74.7615, 36.4482, 0.66 ) }
    dend_37 { pt3dadd( -3.27921, -75.4119, 36.5675, 0.52 ) }
    dend_37 { pt3dadd( -2.94056, -76.2837, 36.7459, 0.52 ) }
    dend_37 { pt3dadd( -2.61271, -77.1696, 36.9431, 0.74 ) }
    dend_37 { pt3dadd( -2.33513, -77.9227, 37.0903, 0.88 ) }
    dend_37 { pt3dadd( -2.03768, -78.7111, 37.2542, 0.96 ) }
    dend_37 { pt3dadd( -1.85193, -79.1954, 37.3589, 0.96 ) }
    dend_37 { pt3dadd( -1.66138, -79.6879, 37.4677, 0.81 ) }
    dend_37 { pt3dadd( -1.36235, -80.5707, 37.6502, 1.18 ) }
    dend_37 { pt3dadd( -1.20043, -81.1985, 37.7795, 1.4 ) }
    dend_37 { pt3dadd( -1.09169, -81.6967, 37.8673, 1.4 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.87466, -11.5316, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -2.87466, -11.5316, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -3.56157, -12.2289, -0.196817, 2.87 ) }
    dend_24 { pt3dadd( -4.88278, -13.592, -0.099211, 2.21 ) }
    dend_24 { pt3dadd( -6.03673, -14.7825, -0.0139624, 2.21 ) }
    dend_24 { pt3dadd( -6.87366, -15.6459, 0.0478664, 2.21 ) }
    dend_24 { pt3dadd( -7.93513, -16.741, 0.126282, 2.21 ) }
    dend_24 { pt3dadd( -9.03961, -17.8733, 0.19979, 2.21 ) }
    dend_24 { pt3dadd( -10.1757, -19.0215, 0.256553, 2.36 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.71466, 9.58839, 3.05835, 3.83 ) }
    dend_9 { pt3dadd( -4.11608, 10.1938, 3.43813, 3.83 ) }
    dend_9 { pt3dadd( -5.05597, 11.6115, 4.32735, 3.32 ) }
    dend_9 { pt3dadd( -5.85335, 12.8142, 5.08174, 3.32 ) }
    dend_9 { pt3dadd( -6.57053, 13.8959, 5.76025, 3.39 ) }
    dend_9 { pt3dadd( -7.55058, 15.3742, 6.68747, 3.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.19534, 8.05835, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.19534, 8.05835, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.31414, 8.71034, -3.75388, 1.03 ) }
    dend_0 { pt3dadd( 4.4096, 9.30439, -3.42913, 1.03 ) }
    dend_0 { pt3dadd( 4.52264, 10.1373, -2.94112, 1.03 ) }
    dend_0 { pt3dadd( 4.58573, 10.6791, -2.61934, 1.03 ) }
    dend_0 { pt3dadd( 4.64824, 11.3008, -2.25729, 1.03 ) }
    dend_0 { pt3dadd( 4.72414, 12.2123, -1.7332, 1.11 ) }
    dend_0 { pt3dadd( 4.75692, 12.7207, -1.41902, 1.33 ) }
    dend_0 { pt3dadd( 4.78424, 13.322, -1.04173, 1.33 ) }
    dend_0 { pt3dadd( 4.80001, 13.6322, -0.853655, 1.47 ) }
    dend_0 { pt3dadd( 4.83458, 14.0126, -0.633193, 1.47 ) }
    dend_0 { pt3dadd( 4.90892, 14.6259, -0.318771, 1.25 ) }
    dend_0 { pt3dadd( 5.05945, 15.5745, 0.0879944, 1.25 ) }
    dend_0 { pt3dadd( 5.15786, 16.0512, 0.263625, 1.4 ) }
    dend_0 { pt3dadd( 5.34507, 16.7632, 0.498947, 1.4 ) }
    dend_0 { pt3dadd( 5.59318, 17.6187, 0.717592, 1.18 ) }
    dend_0 { pt3dadd( 5.79638, 18.3148, 0.823421, 1.25 ) }
    dend_0 { pt3dadd( 5.96255, 18.9133, 0.853952, 1.11 ) }
    dend_0 { pt3dadd( 6.17259, 19.7662, 0.78883, 0.88 ) }
    dend_0 { pt3dadd( 6.34018, 20.55, 0.676376, 0.88 ) }
    dend_0 { pt3dadd( 6.51754, 21.6246, 0.469247, 0.88 ) }
    dend_0 { pt3dadd( 6.62807, 22.6721, 0.229809, 1.4 ) }
    dend_0 { pt3dadd( 6.6773, 23.5458, 0.0204974, 1.55 ) }
    dend_0 { pt3dadd( 6.68627, 24.7111, -0.236382, 1.84 ) }
    dend_0 { pt3dadd( 6.67112, 25.1884, -0.329072, 1.84 ) }
    dend_0 { pt3dadd( 6.6344, 26.0781, -0.470032, 1.33 ) }
    dend_0 { pt3dadd( 6.61124, 27.1198, -0.572878, 0.96 ) }
    dend_0 { pt3dadd( 6.63361, 28.0014, -0.622342, 0.96 ) }
    dend_0 { pt3dadd( 6.7417, 29.1895, -0.652953, 1.03 ) }
    dend_0 { pt3dadd( 6.84724, 29.7536, -0.645369, 1.25 ) }
    dend_0 { pt3dadd( 7.09176, 30.5708, -0.62291, 1.47 ) }
    dend_0 { pt3dadd( 7.3309, 31.115, -0.603046, 1.47 ) }
    dend_0 { pt3dadd( 7.77729, 31.8712, -0.570676, 1.03 ) }
    dend_0 { pt3dadd( 8.18418, 32.4198, -0.559941, 1.03 ) }
    dend_0 { pt3dadd( 8.70733, 33.0255, -0.552669, 1.47 ) }
    dend_0 { pt3dadd( 9.20867, 33.5639, -0.532094, 1.25 ) }
    dend_0 { pt3dadd( 9.54276, 33.9038, -0.503727, 1.55 ) }
    dend_0 { pt3dadd( 10.186, 34.5436, -0.440483, 0.81 ) }
    dend_0 { pt3dadd( 10.7905, 35.1409, -0.368559, 0.81 ) }
    dend_0 { pt3dadd( 11.2606, 35.6096, -0.300372, 1.25 ) }
    dend_0 { pt3dadd( 11.6802, 36.0422, -0.223082, 1.47 ) }
    dend_0 { pt3dadd( 12.0748, 36.4682, -0.130115, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 0.885543 ) }
    axon_0 { pt3dadd( 1.06425, 26.1029, 0.732838, 0.885543 ) }
    axon_0 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.885543 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 86/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.1757, -19.0215, 0.256553, 0.96 ) }
    dend_36 { pt3dadd( -10.1992, -19.5945, 0.752401, 0.96 ) }
    dend_36 { pt3dadd( -10.3083, -20.9557, 1.8927, 0.74 ) }
    dend_36 { pt3dadd( -10.5568, -23.3966, 3.82779, 1.11 ) }
    dend_36 { pt3dadd( -10.7546, -24.8271, 4.88878, 0.81 ) }
    dend_36 { pt3dadd( -10.9234, -25.7455, 5.50897, 0.66 ) }
    dend_36 { pt3dadd( -11.0913, -26.4745, 5.95529, 0.44 ) }
    dend_36 { pt3dadd( -11.3293, -27.2648, 6.40554, 0.66 ) }
    dend_36 { pt3dadd( -11.5509, -27.7927, 6.63876, 1.03 ) }
    dend_36 { pt3dadd( -11.9331, -28.5763, 6.75865, 1.03 ) }
    dend_36 { pt3dadd( -12.4805, -29.6545, 6.77672, 0.81 ) }
    dend_36 { pt3dadd( -12.8898, -30.5621, 6.72775, 0.81 ) }
    dend_36 { pt3dadd( -13.2123, -31.4316, 6.62294, 0.96 ) }
    dend_36 { pt3dadd( -13.6435, -32.9852, 6.34974, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -14.0458, -35.0204, 5.92332, 0.52 ) }
    dend_36 { pt3dadd( -14.1543, -35.8721, 5.69931, 0.88 ) }
    dend_36 { pt3dadd( -14.2578, -37.2111, 5.24565, 0.74 ) }
    dend_36 { pt3dadd( -14.3198, -38.8612, 4.56961, 0.59 ) }
    dend_36 { pt3dadd( -14.3305, -40.3637, 3.86068, 0.74 ) }
    dend_36 { pt3dadd( -14.3131, -41.862, 3.13236, 0.59 ) }
    dend_36 { pt3dadd( -14.3251, -43.794, 2.20244, 0.74 ) }
    dend_36 { pt3dadd( -14.4156, -45.3908, 1.4605, 0.81 ) }
    dend_36 { pt3dadd( -14.5598, -46.6801, 0.902298, 0.52 ) }
    dend_36 { pt3dadd( -14.7186, -47.7222, 0.502485, 0.66 ) }
    dend_36 { pt3dadd( -14.9582, -49.0353, 0.0826683, 0.59 ) }
    dend_36 { pt3dadd( -15.2427, -50.4649, -0.230913, 0.74 ) }
    dend_36 { pt3dadd( -15.4992, -51.6101, -0.341758, 0.74 ) }
    dend_36 { pt3dadd( -15.8513, -52.982, -0.345919, 0.52 ) }
    dend_36 { pt3dadd( -16.1747, -54.0401, -0.299509, 0.96 ) }
    dend_36 { pt3dadd( -16.3824, -54.6952, -0.267359, 1.11 ) }
    dend_36 { pt3dadd( -16.6242, -55.5427, -0.249348, 1.25 ) }
    dend_36 { pt3dadd( -16.858, -56.4196, -0.242616, 0.96 ) }
    dend_36 { pt3dadd( -17.1448, -57.5089, -0.255008, 0.96 ) }
    dend_36 { pt3dadd( -17.5367, -58.9146, -0.32546, 0.52 ) }
    dend_36 { pt3dadd( -17.8352, -60.0651, -0.428003, 0.59 ) }
    dend_36 { pt3dadd( -18.0975, -61.2267, -0.568384, 0.81 ) }
    dend_36 { pt3dadd( -18.2993, -62.3329, -0.773326, 0.96 ) }
    dend_36 { pt3dadd( -18.4245, -63.3552, -1.03381, 0.96 ) }
    dend_36 { pt3dadd( -18.5378, -64.7858, -1.49839, 0.74 ) }
    dend_36 { pt3dadd( -18.624, -66.3483, -2.08271, 0.74 ) }
    dend_36 { pt3dadd( -18.6986, -67.3808, -2.5036, 1.03 ) }
    dend_36 { pt3dadd( -18.8244, -68.7675, -3.09417, 1.25 ) }
    dend_36 { pt3dadd( -18.9286, -69.9688, -3.65054, 0.66 ) }
    dend_36 { pt3dadd( -18.9886, -70.8029, -3.99087, 0.52 ) }
    dend_36 { pt3dadd( -19.0533, -71.7413, -4.30207, 0.74 ) }
    dend_36 { pt3dadd( -19.1363, -72.9487, -4.58953, 0.74 ) }
    dend_36 { pt3dadd( -19.1806, -74.0882, -4.72182, 0.66 ) }
    dend_36 { pt3dadd( -19.1938, -75.2781, -4.73232, 0.66 ) }
    dend_36 { pt3dadd( -19.1332, -77.6651, -4.58455, 0.66 ) }
    dend_36 { pt3dadd( -19.0385, -78.9425, -4.45413, 0.74 ) }
    dend_36 { pt3dadd( -18.8477, -80.66, -4.24716, 0.74 ) }
    dend_36 { pt3dadd( -18.5977, -82.6221, -3.95549, 0.88 ) }
    dend_36 { pt3dadd( -18.475, -83.8012, -3.7586, 1.11 ) }
    dend_36 { pt3dadd( -18.377, -85.1886, -3.51502, 1.11 ) }
    dend_36 { pt3dadd( -18.2861, -86.8498, -3.27439, 0.88 ) }
    dend_36 { pt3dadd( -18.1999, -88.451, -3.01379, 0.74 ) }
    dend_36 { pt3dadd( -18.0966, -90.3201, -2.76467, 0.59 ) }
    dend_36 { pt3dadd( -17.9809, -91.859, -2.68336, 0.44 ) }
    dend_36 { pt3dadd( -17.9143, -92.4416, -2.69436, 0.74 ) }
    dend_36 { pt3dadd( -17.7284, -93.5523, -2.79248, 0.88 ) }
    dend_36 { pt3dadd( -17.4436, -94.6616, -2.91549, 0.88 ) }
    dend_36 { pt3dadd( -16.8765, -96.3905, -3.11754, 0.66 ) }
    dend_36 { pt3dadd( -16.4624, -97.4931, -3.21394, 0.81 ) }
    dend_36 { pt3dadd( -16.1017, -98.5188, -3.22351, 0.81 ) }
    dend_36 { pt3dadd( -15.8716, -99.5279, -3.16257, 0.59 ) }
    dend_36 { pt3dadd( -15.7287, -101.179, -3.01047, 0.74 ) }
    dend_36 { pt3dadd( -15.7739, -102.178, -2.93199, 0.96 ) }
    dend_36 { pt3dadd( -15.9211, -103.137, -2.91025, 0.96 ) }
    dend_36 { pt3dadd( -16.2361, -104.428, -3.02951, 0.66 ) }
    dend_36 { pt3dadd( -16.7014, -106.001, -3.365, 0.44 ) }
    dend_36 { pt3dadd( -17.0838, -107.184, -3.75798, 0.81 ) }
    dend_36 { pt3dadd( -17.5088, -108.555, -4.33222, 0.81 ) }
    dend_36 { pt3dadd( -17.9984, -110.356, -5.16174, 0.37 ) }
    dend_36 { pt3dadd( -18.2641, -111.487, -5.71803, 0.81 ) }
    dend_36 { pt3dadd( -18.4443, -112.479, -6.20815, 1.03 ) }
    dend_36 { pt3dadd( -18.5494, -113.468, -6.64541, 0.52 ) }
    dend_36 { pt3dadd( -18.566, -114.67, -7.05457, 0.29 ) }
    dend_36 { pt3dadd( -18.5199, -115.27, -7.21078, 0.88 ) }
    dend_36 { pt3dadd( -18.4633, -115.722, -7.29887, 1.11 ) }
    dend_36 { pt3dadd( -18.367, -116.359, -7.43805, 1.18 ) }
    dend_36 { pt3dadd( -18.225, -117.32, -7.67051, 0.81 ) }
    dend_36 { pt3dadd( -18.0443, -118.745, -8.0428, 0.44 ) }
    dend_36 { pt3dadd( -17.9594, -119.662, -8.33368, 0.29 ) }
    dend_36 { pt3dadd( -17.9043, -120.54, -8.61347, 0.29 ) }
    dend_36 { pt3dadd( -17.894, -121.509, -8.91101, 0.59 ) }
    dend_36 { pt3dadd( -17.9095, -121.88, -9.01469, 0.88 ) }
    dend_36 { pt3dadd( -17.9646, -122.472, -9.1442, 0.88 ) }
    dend_36 { pt3dadd( -18.0624, -123.236, -9.22588, 0.59 ) }
    dend_36 { pt3dadd( -18.1738, -124.328, -9.19743, 0.29 ) }
    dend_36 { pt3dadd( -18.2296, -124.972, -9.12531, 0.66 ) }
    dend_36 { pt3dadd( -18.282, -125.713, -8.9763, 0.81 ) }
    dend_36 { pt3dadd( -18.3302, -126.526, -8.79297, 1.03 ) }
    dend_36 { pt3dadd( -18.3805, -127.187, -8.63995, 1.18 ) }
    dend_36 { pt3dadd( -18.4695, -127.933, -8.4611, 1.18 ) }
    dend_36 { pt3dadd( -18.542, -128.383, -8.36398, 1.25 ) }
    dend_36 { pt3dadd( -18.7457, -129.395, -8.19018, 0.96 ) }
    dend_36 { pt3dadd( -18.9745, -130.352, -8.07425, 0.59 ) }
    dend_36 { pt3dadd( -19.2662, -131.522, -7.99923, 0.37 ) }
    dend_36 { pt3dadd( -19.512, -132.479, -7.99627, 0.22 ) }
    dend_36 { pt3dadd( -19.6519, -133.012, -8.0221, 0.29 ) }
    dend_36 { pt3dadd( -19.9206, -134.067, -8.11445, 0.44 ) }
    dend_36 { pt3dadd( -20.0911, -134.734, -8.1978, 1.03 ) }
    dend_36 { pt3dadd( -20.3068, -135.664, -8.32515, 1.18 ) }
    dend_36 { pt3dadd( -20.4514, -136.353, -8.43419, 1.18 ) }
    dend_36 { pt3dadd( -20.7192, -137.653, -8.64882, 0.59 ) }
    dend_36 { pt3dadd( -20.9379, -138.634, -8.77061, 0.59 ) }
    dend_36 { pt3dadd( -21.1563, -139.538, -8.85594, 0.59 ) }
    dend_36 { pt3dadd( -21.517, -140.963, -9.01377, 0.81 ) }
    dend_36 { pt3dadd( -21.696, -141.651, -9.09875, 0.88 ) }
    dend_36 { pt3dadd( -22.0958, -143.153, -9.28806, 0.52 ) }
    dend_36 { pt3dadd( -22.5093, -144.764, -9.49802, 0.52 ) }
    dend_36 { pt3dadd( -22.8604, -146.253, -9.67014, 0.59 ) }
    dend_36 { pt3dadd( -23.1144, -147.415, -9.81963, 0.29 ) }
    dend_36 { pt3dadd( -23.2576, -148.148, -9.93654, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -23.3867, -148.913, -10.0762, 0.88 ) }
    dend_36 { pt3dadd( -23.6126, -150.397, -10.4, 0.29 ) }
    dend_36 { pt3dadd( -23.788, -151.493, -10.67, 1.03 ) }
    dend_36 { pt3dadd( -23.973, -152.504, -10.9478, 1.25 ) }
    dend_36 { pt3dadd( -24.173, -153.486, -11.257, 1.03 ) }
    dend_36 { pt3dadd( -24.4957, -155.037, -11.858, 0.44 ) }
    dend_36 { pt3dadd( -24.7256, -156.068, -12.3494, 0.44 ) }
    dend_36 { pt3dadd( -25.0222, -157.176, -12.955, 0.44 ) }
    dend_36 { pt3dadd( -25.47, -158.588, -13.8063, 0.44 ) }
    dend_36 { pt3dadd( -25.9372, -159.961, -14.6355, 0.66 ) }
    dend_36 { pt3dadd( -26.3602, -161.155, -15.3963, 1.55 ) }
    dend_36 { pt3dadd( -26.7317, -162.167, -16.0694, 1.92 ) }
    dend_36 { pt3dadd( -27.1792, -163.438, -16.8714, 0.66 ) }
    dend_36 { pt3dadd( -27.6936, -164.887, -17.6901, 0.59 ) }
    dend_36 { pt3dadd( -28.074, -165.913, -18.1665, 0.29 ) }
    dend_36 { pt3dadd( -28.5573, -167.157, -18.619, 0.29 ) }
    dend_36 { pt3dadd( -28.9682, -168.213, -18.9087, 0.29 ) }
    dend_36 { pt3dadd( -29.631, -169.974, -19.2602, 0.29 ) }
    dend_36 { pt3dadd( -30.0308, -171.083, -19.4199, 1.25 ) }
    dend_36 { pt3dadd( -30.4185, -172.256, -19.537, 1.33 ) }
    dend_36 { pt3dadd( -30.9249, -173.886, -19.676, 0.52 ) }
    dend_36 { pt3dadd( -31.1193, -174.601, -19.726, 0.52 ) }
    dend_36 { pt3dadd( -31.3251, -175.59, -19.8151, 0.66 ) }
    dend_36 { pt3dadd( -31.4674, -176.562, -19.9189, 0.37 ) }
    dend_36 { pt3dadd( -31.5217, -177.425, -20.0239, 0.29 ) }
    dend_36 { pt3dadd( -31.5078, -178.179, -20.1214, 0.81 ) }
    dend_36 { pt3dadd( -31.4277, -179.019, -20.232, 0.96 ) }
    dend_36 { pt3dadd( -31.2855, -180.035, -20.3592, 0.59 ) }
    dend_36 { pt3dadd( -31.1329, -180.88, -20.4321, 0.44 ) }
    dend_36 { pt3dadd( -31.0976, -181.054, -20.4413, 0.37 ) }
    dend_36 { pt3dadd( -30.7978, -182.588, -20.4851, 0.22 ) }
    dend_36 { pt3dadd( -30.6602, -183.262, -20.4918, 0.52 ) }
    dend_36 { pt3dadd( -30.6076, -183.519, -20.4904, 0.52 ) }
    dend_36 { pt3dadd( -30.1775, -185.57, -20.4384, 0.22 ) }
    dend_36 { pt3dadd( -30.0824, -185.996, -20.4191, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.1757, -19.0215, 0.256553, 1.62 ) }
    dend_25 { pt3dadd( -11.5399, -19.826, 0.901541, 1.62 ) }
    dend_25 { pt3dadd( -12.5503, -20.4219, 1.37928, 1.62 ) }
    dend_25 { pt3dadd( -13.3277, -20.8803, 1.74683, 1.84 ) }
    dend_25 { pt3dadd( -14.0389, -21.2997, 2.08306, 2.06 ) }
    dend_25 { pt3dadd( -14.7534, -21.7211, 2.4209, 2.36 ) }
    dend_25 { pt3dadd( -15.2243, -21.9988, 2.64354, 2.8 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.55058, 15.3742, 6.68747, 1.25 ) }
    dend_19 { pt3dadd( -7.97007, 17.0624, 6.74337, 1.25 ) }
    dend_19 { pt3dadd( -8.19379, 18.0252, 6.96343, 1.4 ) }
    dend_19 { pt3dadd( -8.35964, 18.7706, 7.21091, 1.4 ) }
    dend_19 { pt3dadd( -8.57467, 19.818, 7.61552, 1.47 ) }
    dend_19 { pt3dadd( -8.65746, 20.2212, 7.77129, 1.69 ) }
    dend_19 { pt3dadd( -8.78683, 20.8513, 8.01471, 1.69 ) }
    dend_19 { pt3dadd( -8.99666, 21.9868, 8.69683, 1.62 ) }
    dend_19 { pt3dadd( -9.09781, 22.6602, 9.19998, 1.55 ) }
    dend_19 { pt3dadd( -9.18564, 23.2737, 9.72218, 1.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.55058, 15.3742, 6.68747, 1.77 ) }
    dend_10 { pt3dadd( -9.37801, 16.4375, 8.89811, 1.77 ) }
    dend_10 { pt3dadd( -11.1297, 17.4567, 11.0172, 1.62 ) }
    dend_10 { pt3dadd( -12.2189, 18.0904, 12.3349, 1.55 ) }
    dend_10 { pt3dadd( -13.2401, 18.6846, 13.5702, 1.77 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.0748, 36.4682, -0.130115, 0.59 ) }
    dend_8 { pt3dadd( 12.3221, 38.2805, -0.483865, 0.59 ) }
    dend_8 { pt3dadd( 12.4632, 38.9952, -0.627577, 0.59 ) }
    dend_8 { pt3dadd( 12.6694, 39.6866, -0.796033, 0.74 ) }
    dend_8 { pt3dadd( 12.9386, 40.3226, -0.988123, 0.74 ) }
    dend_8 { pt3dadd( 13.261, 40.9461, -1.22115, 0.88 ) }
    dend_8 { pt3dadd( 13.5349, 41.4359, -1.4191, 1.03 ) }
    dend_8 { pt3dadd( 14.0384, 42.2165, -1.73519, 0.59 ) }
    dend_8 { pt3dadd( 14.4813, 42.922, -2.01109, 0.88 ) }
    dend_8 { pt3dadd( 14.8915, 43.666, -2.29385, 0.88 ) }
    dend_8 { pt3dadd( 15.2319, 44.4229, -2.57359, 0.66 ) }
    dend_8 { pt3dadd( 15.4436, 45.2013, -2.85124, 0.52 ) }
    dend_8 { pt3dadd( 15.3945, 45.8757, -3.12539, 0.52 ) }
    dend_8 { pt3dadd( 15.1155, 46.794, -3.58857, 0.52 ) }
    dend_8 { pt3dadd( 14.6778, 47.7, -4.08327, 0.96 ) }
    dend_8 { pt3dadd( 14.3813, 48.1596, -4.34058, 1.18 ) }
    dend_8 { pt3dadd( 14.0099, 48.636, -4.60832, 1.18 ) }
    dend_8 { pt3dadd( 12.6251, 50.1794, -5.49764, 0.81 ) }
    dend_8 { pt3dadd( 12.0073, 50.8736, -5.8897, 0.59 ) }
    dend_8 { pt3dadd( 11.2859, 51.7607, -6.39535, 0.74 ) }
    dend_8 { pt3dadd( 10.8739, 52.3753, -6.71927, 0.66 ) }
    dend_8 { pt3dadd( 10.6122, 52.9221, -6.97075, 0.66 ) }
    dend_8 { pt3dadd( 10.4087, 53.6606, -7.31816, 0.66 ) }
    dend_8 { pt3dadd( 10.3165, 54.7598, -7.82057, 0.81 ) }
    dend_8 { pt3dadd( 10.3282, 55.8179, -8.36613, 1.03 ) }
    dend_8 { pt3dadd( 10.4056, 56.5385, -8.78481, 0.96 ) }
    dend_8 { pt3dadd( 10.5149, 57.3148, -9.25354, 0.81 ) }
    dend_8 { pt3dadd( 10.729, 58.8816, -10.1656, 0.81 ) }
    dend_8 { pt3dadd( 10.797, 59.4528, -10.4486, 1.03 ) }
    dend_8 { pt3dadd( 10.8423, 60.2013, -10.7259, 1.03 ) }
    dend_8 { pt3dadd( 10.852, 60.8375, -10.8707, 1.11 ) }
    dend_8 { pt3dadd( 10.824, 61.6437, -10.9718, 1.11 ) }
    dend_8 { pt3dadd( 10.7685, 62.4996, -10.989, 0.81 ) }
    dend_8 { pt3dadd( 10.6872, 63.8256, -10.8865, 0.74 ) }
    dend_8 { pt3dadd( 10.6413, 64.7859, -10.7996, 0.88 ) }
    dend_8 { pt3dadd( 10.6216, 65.6174, -10.7339, 0.88 ) }
    dend_8 { pt3dadd( 10.634, 66.2013, -10.7079, 0.52 ) }
    dend_8 { pt3dadd( 10.7127, 67.1547, -10.7047, 0.37 ) }
    dend_8 { pt3dadd( 10.7522, 67.4271, -10.7197, 0.37 ) }
    dend_8 { pt3dadd( 10.8942, 68.201, -10.82, 0.37 ) }
    dend_8 { pt3dadd( 11.1647, 69.3288, -11.0317, 0.74 ) }
    dend_8 { pt3dadd( 11.3409, 70.0161, -11.1648, 0.96 ) }
    dend_8 { pt3dadd( 11.4717, 70.6169, -11.2701, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 11.5252, 70.9868, -11.3174, 1.18 ) }
    dend_8 { pt3dadd( 11.5567, 71.9147, -11.3426, 0.88 ) }
    dend_8 { pt3dadd( 11.4946, 72.7896, -11.2755, 0.29 ) }
    dend_8 { pt3dadd( 11.3285, 73.882, -11.0876, 0.88 ) }
    dend_8 { pt3dadd( 11.14, 74.6906, -10.8929, 0.88 ) }
    dend_8 { pt3dadd( 10.8945, 75.5295, -10.6404, 0.88 ) }
    dend_8 { pt3dadd( 10.5208, 76.629, -10.2823, 0.59 ) }
    dend_8 { pt3dadd( 10.2718, 77.3175, -10.0434, 0.59 ) }
    dend_8 { pt3dadd( 10.0527, 77.9678, -9.83575, 0.96 ) }
    dend_8 { pt3dadd( 9.80374, 78.9334, -9.58799, 0.88 ) }
    dend_8 { pt3dadd( 9.65694, 79.7954, -9.46762, 0.52 ) }
    dend_8 { pt3dadd( 9.56311, 80.9268, -9.44253, 0.52 ) }
    dend_8 { pt3dadd( 9.53784, 81.8302, -9.53806, 0.52 ) }
    dend_8 { pt3dadd( 9.55714, 82.8544, -9.73283, 0.81 ) }
    dend_8 { pt3dadd( 9.61301, 83.6767, -9.9329, 0.81 ) }
    dend_8 { pt3dadd( 9.77323, 84.9504, -10.3155, 0.81 ) }
    dend_8 { pt3dadd( 9.87117, 85.6457, -10.5354, 0.59 ) }
    dend_8 { pt3dadd( 9.99058, 86.6641, -10.8428, 0.74 ) }
    dend_8 { pt3dadd( 10.0137, 87.3205, -11.0308, 0.88 ) }
    dend_8 { pt3dadd( 9.94189, 88.3395, -11.2744, 0.37 ) }
    dend_8 { pt3dadd( 9.82342, 89.271, -11.4455, 0.37 ) }
    dend_8 { pt3dadd( 9.74301, 89.9343, -11.5326, 0.37 ) }
    dend_8 { pt3dadd( 9.6607, 90.6756, -11.6481, 0.37 ) }
    dend_8 { pt3dadd( 9.62594, 91.206, -11.7646, 0.37 ) }
    dend_8 { pt3dadd( 9.61315, 91.8956, -11.9902, 0.52 ) }
    dend_8 { pt3dadd( 9.64693, 92.4318, -12.2082, 0.81 ) }
    dend_8 { pt3dadd( 9.73606, 93.0295, -12.4516, 0.81 ) }
    dend_8 { pt3dadd( 9.84851, 93.5405, -12.6531, 0.81 ) }
    dend_8 { pt3dadd( 10.0206, 94.283, -12.9132, 0.74 ) }
    dend_8 { pt3dadd( 10.1575, 94.9222, -13.0906, 0.59 ) }
    dend_8 { pt3dadd( 10.2634, 95.606, -13.2264, 0.52 ) }
    dend_8 { pt3dadd( 10.309, 96.2027, -13.306, 0.88 ) }
    dend_8 { pt3dadd( 10.3067, 96.9087, -13.3595, 0.88 ) }
    dend_8 { pt3dadd( 10.2475, 97.7911, -13.3888, 0.44 ) }
    dend_8 { pt3dadd( 10.1466, 98.57, -13.4111, 0.44 ) }
    dend_8 { pt3dadd( 10.0248, 99.2555, -13.4579, 0.44 ) }
    dend_8 { pt3dadd( 9.84723, 100.079, -13.5786, 0.81 ) }
    dend_8 { pt3dadd( 9.67135, 100.867, -13.7448, 0.81 ) }
    dend_8 { pt3dadd( 9.50657, 101.652, -13.9489, 0.59 ) }
    dend_8 { pt3dadd( 9.33274, 102.585, -14.2239, 0.59 ) }
    dend_8 { pt3dadd( 9.2443, 103.154, -14.4006, 0.88 ) }
    dend_8 { pt3dadd( 9.14016, 103.989, -14.6606, 0.88 ) }
    dend_8 { pt3dadd( 9.04157, 104.867, -14.9013, 0.88 ) }
    dend_8 { pt3dadd( 8.97797, 105.405, -15.0009, 0.96 ) }
    dend_8 { pt3dadd( 8.89611, 105.958, -15.032, 0.96 ) }
    dend_8 { pt3dadd( 8.76648, 106.623, -14.9626, 0.44 ) }
    dend_8 { pt3dadd( 8.58746, 107.339, -14.8095, 0.44 ) }
    dend_8 { pt3dadd( 8.46708, 107.824, -14.6777, 0.44 ) }
    dend_8 { pt3dadd( 8.23946, 108.727, -14.4519, 0.81 ) }
    dend_8 { pt3dadd( 8.07812, 109.421, -14.3106, 0.81 ) }
    dend_8 { pt3dadd( 7.86191, 110.4, -14.1345, 1.11 ) }
    dend_8 { pt3dadd( 7.76556, 110.878, -14.054, 1.11 ) }
    dend_8 { pt3dadd( 7.59201, 111.84, -13.8931, 0.37 ) }
    dend_8 { pt3dadd( 7.48541, 112.53, -13.7917, 0.37 ) }
    dend_8 { pt3dadd( 7.32074, 113.647, -13.6334, 0.52 ) }
    dend_8 { pt3dadd( 7.22066, 114.339, -13.5287, 0.52 ) }
    dend_8 { pt3dadd( 7.07519, 115.34, -13.4152, 0.88 ) }
    dend_8 { pt3dadd( 6.97686, 115.982, -13.3772, 0.88 ) }
    dend_8 { pt3dadd( 6.83948, 116.909, -13.3698, 0.88 ) }
    dend_8 { pt3dadd( 6.78804, 117.434, -13.4089, 0.96 ) }
    dend_8 { pt3dadd( 6.74821, 118.412, -13.6391, 0.66 ) }
    dend_8 { pt3dadd( 6.74254, 119.75, -14.1415, 0.66 ) }
    dend_8 { pt3dadd( 6.73591, 120.599, -14.5534, 0.66 ) }
    dend_8 { pt3dadd( 6.70885, 121.186, -14.8714, 0.59 ) }
    dend_8 { pt3dadd( 6.63005, 121.954, -15.3142, 0.74 ) }
    dend_8 { pt3dadd( 6.49572, 122.812, -15.8098, 0.59 ) }
    dend_8 { pt3dadd( 6.36062, 123.521, -16.2093, 0.88 ) }
    dend_8 { pt3dadd( 6.20483, 124.252, -16.5773, 0.88 ) }
    dend_8 { pt3dadd( 6.05592, 124.987, -16.9613, 0.88 ) }
    dend_8 { pt3dadd( 5.99799, 125.337, -17.1548, 0.88 ) }
    dend_8 { pt3dadd( 5.93819, 126.224, -17.6318, 0.37 ) }
    dend_8 { pt3dadd( 5.99113, 126.868, -17.9629, 0.81 ) }
    dend_8 { pt3dadd( 6.09496, 127.294, -18.1949, 0.81 ) }
    dend_8 { pt3dadd( 6.4651, 128.272, -18.7021, 0.37 ) }
    dend_8 { pt3dadd( 6.72664, 128.853, -18.9706, 0.37 ) }
    dend_8 { pt3dadd( 7.0108, 129.453, -19.193, 0.81 ) }
    dend_8 { pt3dadd( 7.26415, 130.043, -19.3503, 0.81 ) }
    dend_8 { pt3dadd( 7.42327, 130.526, -19.4273, 0.81 ) }
    dend_8 { pt3dadd( 7.56051, 131.171, -19.5009, 0.52 ) }
    dend_8 { pt3dadd( 7.5979, 131.63, -19.5392, 0.59 ) }
    dend_8 { pt3dadd( 7.58352, 132.306, -19.6297, 0.44 ) }
    dend_8 { pt3dadd( 7.53094, 133.032, -19.761, 0.59 ) }
    dend_8 { pt3dadd( 7.46283, 133.742, -19.9093, 0.66 ) }
    dend_8 { pt3dadd( 7.33799, 134.89, -20.1497, 0.44 ) }
    dend_8 { pt3dadd( 7.23378, 135.845, -20.3467, 1.33 ) }
    dend_8 { pt3dadd( 7.18136, 136.406, -20.4519, 1.33 ) }
    dend_8 { pt3dadd( 7.10118, 137.39, -20.597, 0.37 ) }
    dend_8 { pt3dadd( 7.06949, 138.198, -20.6784, 0.29 ) }
    dend_8 { pt3dadd( 7.06044, 138.924, -20.7149, 0.52 ) }
    dend_8 { pt3dadd( 7.05948, 139.304, -20.6968, 0.74 ) }
    dend_8 { pt3dadd( 7.01796, 140.037, -20.5969, 0.44 ) }
    dend_8 { pt3dadd( 6.92309, 140.623, -20.4512, 0.74 ) }
    dend_8 { pt3dadd( 6.76509, 141.079, -20.2822, 0.74 ) }
    dend_8 { pt3dadd( 6.47172, 141.661, -20.0197, 0.44 ) }
    dend_8 { pt3dadd( 6.09557, 142.237, -19.7736, 0.74 ) }
    dend_8 { pt3dadd( 5.71094, 142.728, -19.5829, 0.74 ) }
    dend_8 { pt3dadd( 5.39826, 143.072, -19.4888, 0.88 ) }
    dend_8 { pt3dadd( 4.87112, 143.629, -19.3998, 0.59 ) }
    dend_8 { pt3dadd( 4.47252, 144.057, -19.3692, 0.44 ) }
    dend_8 { pt3dadd( 3.90175, 144.735, -19.3809, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 3.56718, 145.206, -19.4128, 0.59 ) }
    dend_8 { pt3dadd( 2.95031, 146.217, -19.476, 1.25 ) }
    dend_8 { pt3dadd( 2.76239, 146.558, -19.4881, 1.4 ) }
    dend_8 { pt3dadd( 2.44434, 147.16, -19.4726, 0.88 ) }
    dend_8 { pt3dadd( 2.05965, 147.84, -19.3847, 0.59 ) }
    dend_8 { pt3dadd( 1.70864, 148.416, -19.2428, 0.59 ) }
    dend_8 { pt3dadd( 1.28716, 149.035, -19.0249, 0.66 ) }
    dend_8 { pt3dadd( 0.869961, 149.524, -18.7582, 0.52 ) }
    dend_8 { pt3dadd( 0.401495, 149.991, -18.4617, 0.37 ) }
    dend_8 { pt3dadd( -0.092329, 150.444, -18.152, 0.52 ) }
    dend_8 { pt3dadd( -0.347265, 150.668, -17.9946, 0.66 ) }
    dend_8 { pt3dadd( -0.628729, 150.928, -17.8366, 0.66 ) }
    dend_8 { pt3dadd( -1.09762, 151.564, -17.6752, 0.29 ) }
    dend_8 { pt3dadd( -1.41598, 152.237, -17.7382, 0.29 ) }
    dend_8 { pt3dadd( -1.69381, 152.872, -17.9285, 0.66 ) }
    dend_8 { pt3dadd( -1.92162, 153.304, -18.124, 0.66 ) }
    dend_8 { pt3dadd( -2.2678, 153.749, -18.3863, 0.52 ) }
    dend_8 { pt3dadd( -2.90715, 154.25, -18.7698, 0.66 ) }
    dend_8 { pt3dadd( -3.63457, 154.582, -19.0929, 0.81 ) }
    dend_8 { pt3dadd( -4.25994, 154.76, -19.2756, 0.96 ) }
    dend_8 { pt3dadd( -4.95495, 154.907, -19.4064, 0.96 ) }
    dend_8 { pt3dadd( -5.88833, 155.088, -19.4956, 0.81 ) }
    dend_8 { pt3dadd( -6.81916, 155.274, -19.5033, 0.74 ) }
    dend_8 { pt3dadd( -7.64244, 155.508, -19.4282, 0.52 ) }
    dend_8 { pt3dadd( -8.25796, 155.777, -19.3052, 0.66 ) }
    dend_8 { pt3dadd( -8.65941, 156.033, -19.1758, 0.66 ) }
    dend_8 { pt3dadd( -9.3322, 156.61, -18.864, 0.37 ) }
    dend_8 { pt3dadd( -9.74631, 157.053, -18.6274, 0.37 ) }
    dend_8 { pt3dadd( -10.5188, 158.006, -18.162, 0.29 ) }
    dend_8 { pt3dadd( -10.881, 158.496, -17.9647, 0.52 ) }
    dend_8 { pt3dadd( -11.1659, 158.907, -17.8403, 0.52 ) }
    dend_8 { pt3dadd( -11.5514, 159.481, -17.7094, 0.29 ) }
    dend_8 { pt3dadd( -11.871, 159.95, -17.6191, 0.29 ) }
    dend_8 { pt3dadd( -12.4141, 160.704, -17.5145, 0.59 ) }
    dend_8 { pt3dadd( -12.9389, 161.352, -17.4815, 0.52 ) }
    dend_8 { pt3dadd( -13.4049, 161.94, -17.5018, 0.74 ) }
    dend_8 { pt3dadd( -13.6064, 162.209, -17.5332, 0.74 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 12.0748, 36.4682, -0.130115, 0.96 ) }
    dend_1 { pt3dadd( 12.5963, 38.108, 0.473612, 0.96 ) }
    dend_1 { pt3dadd( 12.8374, 38.862, 0.69654, 0.96 ) }
    dend_1 { pt3dadd( 13.0225, 39.4504, 0.80772, 0.81 ) }
    dend_1 { pt3dadd( 13.3527, 40.6752, 0.914827, 0.88 ) }
    dend_1 { pt3dadd( 13.5437, 41.5454, 0.916188, 0.88 ) }
    dend_1 { pt3dadd( 13.6786, 42.3911, 0.88435, 0.81 ) }
    dend_1 { pt3dadd( 13.7414, 43.4013, 0.74968, 0.96 ) }
    dend_1 { pt3dadd( 13.7502, 44.4619, 0.587459, 0.74 ) }
    dend_1 { pt3dadd( 13.7342, 45.5337, 0.397737, 0.88 ) }
    dend_1 { pt3dadd( 13.6635, 46.4961, 0.23346, 0.88 ) }
    dend_1 { pt3dadd( 13.5145, 47.631, 0.0916034, 0.88 ) }
    dend_1 { pt3dadd( 13.3082, 48.6713, 0.0275755, 1.03 ) }
    dend_1 { pt3dadd( 13.0196, 49.6727, 0.0604224, 1.03 ) }
    dend_1 { pt3dadd( 12.7175, 50.4825, 0.185335, 0.88 ) }
    dend_1 { pt3dadd( 12.1884, 51.5814, 0.473648, 0.96 ) }
    dend_1 { pt3dadd( 11.8004, 52.2229, 0.69037, 1.11 ) }
    dend_1 { pt3dadd( 11.3516, 52.8613, 0.928793, 1.11 ) }
    dend_1 { pt3dadd( 10.7306, 53.6885, 1.25206, 1.11 ) }
    dend_1 { pt3dadd( 10.1231, 54.4819, 1.56646, 1.11 ) }
    dend_1 { pt3dadd( 9.31219, 55.5856, 1.98178, 1.03 ) }
    dend_1 { pt3dadd( 8.72454, 56.4982, 2.27724, 1.03 ) }
    dend_1 { pt3dadd( 8.11987, 57.5908, 2.58221, 0.96 ) }
    dend_1 { pt3dadd( 7.61235, 58.7282, 2.79876, 1.03 ) }
    dend_1 { pt3dadd( 7.2514, 59.7795, 2.89528, 0.88 ) }
    dend_1 { pt3dadd( 7.05884, 60.5473, 2.90462, 0.88 ) }
    dend_1 { pt3dadd( 6.90152, 61.5236, 2.85718, 1.11 ) }
    dend_1 { pt3dadd( 6.8336, 62.1256, 2.80111, 1.11 ) }
    dend_1 { pt3dadd( 6.72104, 63.802, 2.67992, 1.03 ) }
    dend_1 { pt3dadd( 6.65754, 65.1168, 2.63487, 0.88 ) }
    dend_1 { pt3dadd( 6.60561, 66.3153, 2.67392, 0.88 ) }
    dend_1 { pt3dadd( 6.54471, 67.5921, 2.84391, 0.88 ) }
    dend_1 { pt3dadd( 6.47934, 68.6633, 3.10617, 1.03 ) }
    dend_1 { pt3dadd( 6.36026, 70.2522, 3.65721, 0.88 ) }
    dend_1 { pt3dadd( 6.28665, 71.2627, 4.1245, 0.96 ) }
    dend_1 { pt3dadd( 6.23439, 72.1567, 4.58528, 1.03 ) }
    dend_1 { pt3dadd( 6.19474, 73.0622, 5.02255, 1.33 ) }
    dend_1 { pt3dadd( 6.18256, 74.0437, 5.42598, 0.74 ) }
    dend_1 { pt3dadd( 6.19953, 74.6494, 5.58187, 0.74 ) }
    dend_1 { pt3dadd( 6.24719, 75.4456, 5.63611, 0.88 ) }
    dend_1 { pt3dadd( 6.37891, 76.4644, 5.58774, 0.88 ) }
    dend_1 { pt3dadd( 6.608, 77.6885, 5.41735, 0.81 ) }
    dend_1 { pt3dadd( 6.82538, 78.5994, 5.23718, 0.88 ) }
    dend_1 { pt3dadd( 7.15266, 79.7637, 4.95131, 0.74 ) }
    dend_1 { pt3dadd( 7.39438, 80.542, 4.74532, 0.74 ) }
    dend_1 { pt3dadd( 7.71467, 81.5643, 4.47379, 0.81 ) }
    dend_1 { pt3dadd( 7.99457, 82.4783, 4.22739, 0.81 ) }
    dend_1 { pt3dadd( 8.1921, 83.1621, 4.06282, 0.81 ) }
    dend_1 { pt3dadd( 8.41421, 84.1436, 3.83129, 0.81 ) }
    dend_1 { pt3dadd( 8.53509, 85.0278, 3.64987, 0.96 ) }
    dend_1 { pt3dadd( 8.56823, 85.9331, 3.49005, 0.96 ) }
    dend_1 { pt3dadd( 8.54004, 86.8607, 3.36105, 1.03 ) }
    dend_1 { pt3dadd( 8.46356, 88.0139, 3.19077, 0.96 ) }
    dend_1 { pt3dadd( 8.39353, 89.1381, 3.00831, 0.96 ) }
    dend_1 { pt3dadd( 8.32252, 90.4856, 2.79687, 0.96 ) }
    dend_1 { pt3dadd( 8.26529, 91.6264, 2.59663, 0.96 ) }
    dend_1 { pt3dadd( 8.2219, 92.8428, 2.368, 0.88 ) }
    dend_1 { pt3dadd( 8.17019, 94.3614, 2.08672, 0.81 ) }
    dend_1 { pt3dadd( 8.12361, 95.3064, 1.91518, 0.81 ) }
    dend_1 { pt3dadd( 8.05256, 96.2698, 1.75862, 0.74 ) }
    dend_1 { pt3dadd( 7.88419, 97.3729, 1.61434, 1.03 ) }
    dend_1 { pt3dadd( 7.6712, 98.2401, 1.54634, 1.03 ) }
    dend_1 { pt3dadd( 7.29245, 99.3471, 1.55463, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 6.90952, 100.332, 1.64881, 1.11 ) }
    dend_1 { pt3dadd( 6.64153, 100.983, 1.73254, 1.11 ) }
    dend_1 { pt3dadd( 6.14825, 102.251, 1.94053, 0.96 ) }
    dend_1 { pt3dadd( 5.80181, 103.261, 2.13178, 0.96 ) }
    dend_1 { pt3dadd( 5.48914, 104.379, 2.34411, 0.96 ) }
    dend_1 { pt3dadd( 5.17726, 105.835, 2.61297, 0.88 ) }
    dend_1 { pt3dadd( 5.00371, 106.928, 2.80412, 1.18 ) }
    dend_1 { pt3dadd( 4.83825, 108.183, 3.02601, 0.96 ) }
    dend_1 { pt3dadd( 4.70677, 109.217, 3.21683, 0.88 ) }
    dend_1 { pt3dadd( 4.5743, 110.279, 3.4325, 0.88 ) }
    dend_1 { pt3dadd( 4.44695, 111.36, 3.67758, 0.88 ) }
    dend_1 { pt3dadd( 4.35168, 112.208, 3.88411, 0.96 ) }
    dend_1 { pt3dadd( 4.23374, 113.292, 4.15425, 0.96 ) }
    dend_1 { pt3dadd( 4.11018, 114.377, 4.41398, 0.96 ) }
    dend_1 { pt3dadd( 3.98961, 115.565, 4.66674, 1.03 ) }
    dend_1 { pt3dadd( 3.9164, 116.574, 4.8473, 0.96 ) }
    dend_1 { pt3dadd( 3.8879, 117.818, 5.00838, 0.88 ) }
    dend_1 { pt3dadd( 3.93121, 118.93, 5.09325, 0.81 ) }
    dend_1 { pt3dadd( 4.02696, 119.929, 5.11712, 0.96 ) }
    dend_1 { pt3dadd( 4.20531, 121.389, 5.09438, 0.81 ) }
    dend_1 { pt3dadd( 4.28401, 122.05, 5.07625, 0.81 ) }
    dend_1 { pt3dadd( 4.36009, 122.816, 5.07657, 0.81 ) }
    dend_1 { pt3dadd( 4.41654, 123.946, 5.14713, 0.88 ) }
    dend_1 { pt3dadd( 4.4031, 124.746, 5.25657, 0.88 ) }
    dend_1 { pt3dadd( 4.31092, 125.506, 5.43388, 0.88 ) }
    dend_1 { pt3dadd( 4.13056, 126.235, 5.67705, 0.74 ) }
    dend_1 { pt3dadd( 3.77541, 127.248, 6.06342, 0.88 ) }
    dend_1 { pt3dadd( 3.2593, 128.485, 6.59596, 1.33 ) }
    dend_1 { pt3dadd( 2.97235, 129.138, 6.88375, 1.33 ) }
    dend_1 { pt3dadd( 2.62306, 130.009, 7.24213, 1.11 ) }
    dend_1 { pt3dadd( 2.36521, 130.768, 7.50076, 0.96 ) }
    dend_1 { pt3dadd( 2.18126, 131.455, 7.67727, 0.96 ) }
    dend_1 { pt3dadd( 1.95622, 132.624, 7.90693, 0.74 ) }
    dend_1 { pt3dadd( 1.8461, 133.496, 8.02286, 0.74 ) }
    dend_1 { pt3dadd( 1.76538, 134.415, 8.09345, 0.74 ) }
    dend_1 { pt3dadd( 1.69748, 135.399, 8.12629, 0.74 ) }
    dend_1 { pt3dadd( 1.61648, 136.568, 8.12589, 1.03 ) }
    dend_1 { pt3dadd( 1.53526, 137.463, 8.09053, 1.03 ) }
    dend_1 { pt3dadd( 1.42848, 138.362, 8.03157, 1.03 ) }
    dend_1 { pt3dadd( 1.30524, 139.149, 7.98069, 0.88 ) }
    dend_1 { pt3dadd( 1.11053, 140.207, 7.91606, 0.88 ) }
    dend_1 { pt3dadd( 0.932824, 141.151, 7.86501, 1.03 ) }
    dend_1 { pt3dadd( 0.751182, 142.198, 7.77629, 0.88 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 1.70185, 56.0961, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 2.02065, 71.0928, 0.732838, 0.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 46/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.2243, -21.9988, 2.64354, 0.96 ) }
    dend_31 { pt3dadd( -16.2467, -23.511, 3.08159, 0.96 ) }
    dend_31 { pt3dadd( -17.1314, -24.684, 3.40138, 0.96 ) }
    dend_31 { pt3dadd( -17.861, -25.5734, 3.62324, 1.11 ) }
    dend_31 { pt3dadd( -18.3665, -26.1689, 3.69416, 1.25 ) }
    dend_31 { pt3dadd( -18.8045, -26.6843, 3.69497, 1.25 ) }
    dend_31 { pt3dadd( -19.6266, -27.6847, 3.62265, 1.03 ) }
    dend_31 { pt3dadd( -20.2992, -28.4634, 3.46728, 0.96 ) }
    dend_31 { pt3dadd( -20.9159, -29.2241, 3.20164, 1.18 ) }
    dend_31 { pt3dadd( -21.9878, -30.5955, 2.60533, 1.03 ) }
    dend_31 { pt3dadd( -22.6189, -31.4399, 2.18927, 1.03 ) }
    dend_31 { pt3dadd( -23.2053, -32.277, 1.72665, 0.88 ) }
    dend_31 { pt3dadd( -23.6513, -32.9772, 1.27844, 1.11 ) }
    dend_31 { pt3dadd( -24.1559, -33.8562, 0.668662, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.2243, -21.9988, 2.64354, 1.92 ) }
    dend_26 { pt3dadd( -16.1804, -21.1518, 2.71142, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.18564, 23.2737, 9.72218, 0.88 ) }
    dend_23 { pt3dadd( -9.41069, 23.7107, 9.27239, 0.88 ) }
    dend_23 { pt3dadd( -9.56259, 24.112, 8.83095, 0.81 ) }
    dend_23 { pt3dadd( -9.64987, 24.4108, 8.52083, 0.81 ) }
    dend_23 { pt3dadd( -9.77627, 24.9756, 7.95914, 0.66 ) }
    dend_23 { pt3dadd( -9.86625, 25.3794, 7.56692, 1.11 ) }
    dend_23 { pt3dadd( -9.95683, 25.7028, 7.25362, 1.11 ) }
    dend_23 { pt3dadd( -10.1954, 26.4201, 6.57339, 0.88 ) }
    dend_23 { pt3dadd( -10.3541, 26.7663, 6.25288, 1.03 ) }
    dend_23 { pt3dadd( -10.6915, 27.284, 5.76499, 1.11 ) }
    dend_23 { pt3dadd( -11.0491, 27.6613, 5.44165, 0.88 ) }
    dend_23 { pt3dadd( -11.6169, 28.0265, 5.15051, 0.88 ) }
    dend_23 { pt3dadd( -12.2186, 28.2584, 5.00874, 0.81 ) }
    dend_23 { pt3dadd( -12.7703, 28.3905, 4.97588, 0.88 ) }
    dend_23 { pt3dadd( -13.3195, 28.4735, 4.96509, 1.11 ) }
    dend_23 { pt3dadd( -14.3262, 28.5846, 4.98412, 1.33 ) }
    dend_23 { pt3dadd( -14.851, 28.6508, 4.97162, 0.96 ) }
    dend_23 { pt3dadd( -15.3722, 28.7517, 4.9124, 1.11 ) }
    dend_23 { pt3dadd( -15.6525, 28.8336, 4.83074, 0.88 ) }
    dend_23 { pt3dadd( -16.2017, 29.0593, 4.58314, 0.74 ) }
    dend_23 { pt3dadd( -16.6327, 29.2935, 4.32326, 1.03 ) }
    dend_23 { pt3dadd( -17.2192, 29.6835, 3.86297, 1.11 ) }
    dend_23 { pt3dadd( -17.5345, 29.9585, 3.56955, 1.11 ) }
    dend_23 { pt3dadd( -17.8341, 30.295, 3.22793, 1.11 ) }
    dend_23 { pt3dadd( -18.0188, 30.6102, 2.9184, 1.25 ) }
    dend_23 { pt3dadd( -18.1878, 31.1167, 2.41092, 1.25 ) }
    dend_23 { pt3dadd( -18.274, 31.6366, 1.83803, 0.88 ) }
    dend_23 { pt3dadd( -18.313, 32.0848, 1.31532, 0.81 ) }
    dend_23 { pt3dadd( -18.3449, 32.4311, 0.900781, 0.81 ) }
    dend_23 { pt3dadd( -18.4375, 33.1831, -0.0154366, 1.03 ) }
    dend_23 { pt3dadd( -18.55, 33.777, -0.767436, 1.18 ) }
    dend_23 { pt3dadd( -18.7067, 34.2652, -1.39795, 1.33 ) }
    dend_23 { pt3dadd( -18.938, 34.6747, -1.92371, 1.18 ) }
    dend_23 { pt3dadd( -19.3003, 35.0718, -2.4241, 1.18 ) }
    dend_23 { pt3dadd( -19.5592, 35.2844, -2.66245, 1.18 ) }
    dend_23 { pt3dadd( -19.9109, 35.5304, -2.8764, 1.03 ) }
    dend_23 { pt3dadd( -20.2261, 35.7561, -3.02084, 0.96 ) }
    dend_23 { pt3dadd( -20.6268, 36.0503, -3.16692, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -21.049, 36.3923, -3.3851, 1.11 ) }
    dend_23 { pt3dadd( -21.3436, 36.6908, -3.63727, 1.11 ) }
    dend_23 { pt3dadd( -21.7126, 37.1368, -4.03102, 1.03 ) }
    dend_23 { pt3dadd( -22.0479, 37.5817, -4.43549, 1.47 ) }
    dend_23 { pt3dadd( -22.3067, 37.9316, -4.7496, 1.84 ) }
    dend_23 { pt3dadd( -23.1774, 39.0641, -5.74374, 1.33 ) }
    dend_23 { pt3dadd( -23.8736, 39.8943, -6.4581, 0.88 ) }
    dend_23 { pt3dadd( -24.3796, 40.4195, -6.90008, 1.03 ) }
    dend_23 { pt3dadd( -24.783, 40.7746, -7.18372, 0.88 ) }
    dend_23 { pt3dadd( -25.3201, 41.167, -7.44047, 0.81 ) }
    dend_23 { pt3dadd( -25.9543, 41.5442, -7.60177, 0.88 ) }
    dend_23 { pt3dadd( -26.434, 41.7717, -7.64964, 1.25 ) }
    dend_23 { pt3dadd( -26.9247, 41.978, -7.69977, 1.4 ) }
    dend_23 { pt3dadd( -27.2546, 42.1264, -7.7629, 1.62 ) }
    dend_23 { pt3dadd( -27.6487, 42.3491, -7.89179, 1.33 ) }
    dend_23 { pt3dadd( -28.0379, 42.6403, -8.0946, 1.03 ) }
    dend_23 { pt3dadd( -28.8796, 43.4781, -8.73008, 0.88 ) }
    dend_23 { pt3dadd( -29.1564, 43.85, -9.01309, 0.88 ) }
    dend_23 { pt3dadd( -29.3885, 44.2902, -9.3344, 0.81 ) }
    dend_23 { pt3dadd( -29.6196, 44.9539, -9.78895, 0.96 ) }
    dend_23 { pt3dadd( -29.7143, 45.5183, -10.1368, 0.96 ) }
    dend_23 { pt3dadd( -29.7096, 45.9867, -10.377, 1.11 ) }
    dend_23 { pt3dadd( -29.6276, 46.4313, -10.5407, 1.11 ) }
    dend_23 { pt3dadd( -29.5171, 46.8438, -10.6541, 1.11 ) }
    dend_23 { pt3dadd( -29.4194, 47.1711, -10.7215, 1.18 ) }
    dend_23 { pt3dadd( -29.3184, 47.5558, -10.769, 1.11 ) }
    dend_23 { pt3dadd( -29.2171, 48.1066, -10.8239, 0.88 ) }
    dend_23 { pt3dadd( -29.176, 48.6597, -10.8926, 0.81 ) }
    dend_23 { pt3dadd( -29.2182, 49.0134, -10.9669, 0.81 ) }
    dend_23 { pt3dadd( -29.4183, 49.4375, -11.1121, 0.81 ) }
    dend_23 { pt3dadd( -29.7467, 49.7445, -11.2913, 0.96 ) }
    dend_23 { pt3dadd( -30.0371, 49.8931, -11.4317, 0.96 ) }
    dend_23 { pt3dadd( -30.5621, 50.0633, -11.654, 0.74 ) }
    dend_23 { pt3dadd( -30.8878, 50.1427, -11.7862, 0.74 ) }
    dend_23 { pt3dadd( -31.2151, 50.2192, -11.9165, 1.03 ) }
    dend_23 { pt3dadd( -31.5955, 50.3237, -12.069, 1.25 ) }
    dend_23 { pt3dadd( -31.8643, 50.4297, -12.1735, 1.4 ) }
    dend_23 { pt3dadd( -32.3559, 50.7124, -12.3453, 1.18 ) }
    dend_23 { pt3dadd( -32.8766, 51.1148, -12.515, 0.88 ) }
    dend_23 { pt3dadd( -33.2571, 51.4826, -12.6376, 0.81 ) }
    dend_23 { pt3dadd( -33.5466, 51.8244, -12.7079, 0.81 ) }
    dend_23 { pt3dadd( -34.0125, 52.4584, -12.7712, 0.81 ) }
    dend_23 { pt3dadd( -34.4254, 53.0724, -12.7922, 1.03 ) }
    dend_23 { pt3dadd( -34.6349, 53.405, -12.7844, 1.25 ) }
    dend_23 { pt3dadd( -34.865, 53.786, -12.7534, 1.4 ) }
    dend_23 { pt3dadd( -35.2508, 54.4277, -12.6855, 1.03 ) }
    dend_23 { pt3dadd( -35.6152, 55.0221, -12.6196, 0.88 ) }
    dend_23 { pt3dadd( -35.8313, 55.3654, -12.5882, 1.11 ) }
    dend_23 { pt3dadd( -36.1178, 55.8224, -12.5581, 1.11 ) }
    dend_23 { pt3dadd( -36.4478, 56.3615, -12.5392, 0.96 ) }
    dend_23 { pt3dadd( -36.7132, 56.8034, -12.5413, 1.33 ) }
    dend_23 { pt3dadd( -36.9169, 57.1472, -12.5688, 1.33 ) }
    dend_23 { pt3dadd( -37.1574, 57.5662, -12.6231, 1.11 ) }
    dend_23 { pt3dadd( -37.4449, 58.0547, -12.7159, 0.88 ) }
    dend_23 { pt3dadd( -37.7296, 58.4977, -12.8239, 0.88 ) }
    dend_23 { pt3dadd( -37.9788, 58.841, -12.9191, 1.11 ) }
    dend_23 { pt3dadd( -38.2689, 59.2077, -13.0185, 1.11 ) }
    dend_23 { pt3dadd( -38.6154, 59.6226, -13.1236, 0.59 ) }
    dend_23 { pt3dadd( -38.9145, 59.9698, -13.2036, 0.52 ) }
    dend_23 { pt3dadd( -39.298, 60.4095, -13.2904, 0.81 ) }
    dend_23 { pt3dadd( -39.8254, 61.0259, -13.3841, 0.96 ) }
    dend_23 { pt3dadd( -40.2285, 61.5072, -13.4286, 1.25 ) }
    dend_23 { pt3dadd( -40.5024, 61.8371, -13.4398, 1.47 ) }
    dend_23 { pt3dadd( -40.7814, 62.1719, -13.4383, 1.47 ) }
    dend_23 { pt3dadd( -41.1719, 62.6516, -13.429, 1.03 ) }
    dend_23 { pt3dadd( -41.4316, 62.985, -13.4243, 1.03 ) }
    dend_23 { pt3dadd( -41.9347, 63.68, -13.419, 1.03 ) }
    dend_23 { pt3dadd( -42.2921, 64.2438, -13.4187, 0.96 ) }
    dend_23 { pt3dadd( -42.594, 64.8296, -13.4177, 0.74 ) }
    dend_23 { pt3dadd( -42.8146, 65.4626, -13.4159, 0.74 ) }
    dend_23 { pt3dadd( -42.9109, 66.0822, -13.4118, 1.03 ) }
    dend_23 { pt3dadd( -42.9002, 66.5766, -13.407, 1.03 ) }
    dend_23 { pt3dadd( -42.7559, 67.2788, -13.3981, 0.81 ) }
    dend_23 { pt3dadd( -42.5474, 67.9087, -13.3889, 0.81 ) }
    dend_23 { pt3dadd( -42.1981, 68.7369, -13.3758, 0.74 ) }
    dend_23 { pt3dadd( -41.9093, 69.3375, -13.3659, 1.03 ) }
    dend_23 { pt3dadd( -41.695, 69.7571, -13.3554, 1.03 ) }
    dend_23 { pt3dadd( -41.364, 70.4189, -13.3344, 0.96 ) }
    dend_23 { pt3dadd( -41.1261, 70.9498, -13.3197, 1.4 ) }
    dend_23 { pt3dadd( -40.9372, 71.4574, -13.3048, 1.25 ) }
    dend_23 { pt3dadd( -40.7788, 72.0309, -13.2945, 0.81 ) }
    dend_23 { pt3dadd( -40.6992, 72.4793, -13.2928, 0.59 ) }
    dend_23 { pt3dadd( -40.6434, 73.0564, -13.2966, 0.59 ) }
    dend_23 { pt3dadd( -40.6329, 73.8479, -13.2957, 0.74 ) }
    dend_23 { pt3dadd( -40.6522, 74.3622, -13.2884, 0.81 ) }
    dend_23 { pt3dadd( -40.6997, 74.8923, -13.2686, 0.81 ) }
    dend_23 { pt3dadd( -40.7769, 75.4923, -13.2361, 0.66 ) }
    dend_23 { pt3dadd( -40.8869, 76.1391, -13.1936, 0.88 ) }
    dend_23 { pt3dadd( -41.0466, 76.8539, -13.1338, 0.96 ) }
    dend_23 { pt3dadd( -41.2125, 77.4403, -13.0734, 0.74 ) }
    dend_23 { pt3dadd( -41.429, 78.0479, -13.0078, 0.96 ) }
    dend_23 { pt3dadd( -41.6542, 78.5659, -12.9435, 0.96 ) }
    dend_23 { pt3dadd( -41.9222, 79.0731, -12.8787, 0.88 ) }
    dend_23 { pt3dadd( -42.3206, 79.6987, -12.8063, 0.88 ) }
    dend_23 { pt3dadd( -42.6234, 80.128, -12.7674, 0.74 ) }
    dend_23 { pt3dadd( -42.9208, 80.535, -12.7354, 1.03 ) }
    dend_23 { pt3dadd( -43.0795, 80.7612, -12.7203, 1.03 ) }
    dend_23 { pt3dadd( -43.4045, 81.2637, -12.6812, 0.81 ) }
    dend_23 { pt3dadd( -43.8618, 82.0823, -12.6358, 1.03 ) }
    dend_23 { pt3dadd( -44.0791, 82.548, -12.6201, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_23 { pt3dadd( -44.2534, 83.0053, -12.6147, 0.88 ) }
    dend_23 { pt3dadd( -44.4372, 83.5995, -12.6174, 1.11 ) }
    dend_23 { pt3dadd( -44.5885, 84.1758, -12.6286, 0.96 ) }
    dend_23 { pt3dadd( -44.7205, 84.7946, -12.6479, 0.81 ) }
    dend_23 { pt3dadd( -44.8171, 85.3606, -12.6682, 0.81 ) }
    dend_23 { pt3dadd( -44.9551, 86.3156, -12.7021, 0.88 ) }
    dend_23 { pt3dadd( -45.0418, 86.9723, -12.7241, 1.11 ) }
    dend_23 { pt3dadd( -45.0999, 87.4222, -12.736, 1.11 ) }
    dend_23 { pt3dadd( -45.1579, 87.832, -12.7428, 0.96 ) }
    dend_23 { pt3dadd( -45.2331, 88.279, -12.7399, 0.96 ) }
    dend_23 { pt3dadd( -45.3449, 88.8253, -12.7356, 0.66 ) }
    dend_23 { pt3dadd( -45.4969, 89.4351, -12.7302, 0.81 ) }
    dend_23 { pt3dadd( -45.7568, 90.2977, -12.722, 0.88 ) }
    dend_23 { pt3dadd( -46.0576, 91.1593, -12.7137, 1.11 ) }
    dend_23 { pt3dadd( -46.2514, 91.6418, -12.7081, 1.03 ) }
    dend_23 { pt3dadd( -46.3968, 91.9616, -12.695, 1.03 ) }
    dend_23 { pt3dadd( -46.6646, 92.4948, -12.656, 0.96 ) }
    dend_23 { pt3dadd( -46.8964, 92.9366, -12.608, 0.96 ) }
    dend_23 { pt3dadd( -47.2035, 93.5216, -12.5134, 1.18 ) }
    dend_23 { pt3dadd( -47.4083, 93.972, -12.4222, 1.03 ) }
    dend_23 { pt3dadd( -47.6149, 94.5536, -12.2869, 0.96 ) }
    dend_23 { pt3dadd( -47.7055, 94.9399, -12.1837, 0.59 ) }
    dend_23 { pt3dadd( -47.7515, 95.3685, -12.0565, 0.59 ) }
    dend_23 { pt3dadd( -47.7457, 95.7752, -11.9312, 0.81 ) }
    dend_23 { pt3dadd( -47.6608, 96.4321, -11.7355, 1.11 ) }
    dend_23 { pt3dadd( -47.5908, 96.7572, -11.6374, 1.11 ) }
    dend_23 { pt3dadd( -47.4535, 97.2349, -11.4989, 0.81 ) }
    dend_23 { pt3dadd( -47.3068, 97.6808, -11.3662, 0.96 ) }
    dend_23 { pt3dadd( -47.1195, 98.2162, -11.2075, 0.81 ) }
    dend_23 { pt3dadd( -46.9547, 98.6752, -11.0762, 0.96 ) }
    dend_23 { pt3dadd( -46.7671, 99.1762, -10.9264, 0.96 ) }
    dend_23 { pt3dadd( -46.6028, 99.5801, -10.8114, 1.03 ) }
    dend_23 { pt3dadd( -46.4887, 99.8571, -10.7372, 1.03 ) }
    dend_23 { pt3dadd( -46.3612, 100.193, -10.6553, 0.96 ) }
    dend_23 { pt3dadd( -46.2511, 100.578, -10.5749, 0.96 ) }
    dend_23 { pt3dadd( -46.1543, 101.126, -10.475, 0.74 ) }
    dend_23 { pt3dadd( -46.1203, 101.651, -10.4012, 0.74 ) }
    dend_23 { pt3dadd( -46.1406, 102.145, -10.3434, 0.96 ) }
    dend_23 { pt3dadd( -46.2256, 102.777, -10.2848, 0.96 ) }
    dend_23 { pt3dadd( -46.3775, 103.444, -10.2416, 1.11 ) }
    dend_23 { pt3dadd( -46.468, 103.744, -10.2324, 1.11 ) }
    dend_23 { pt3dadd( -46.6664, 104.324, -10.2354, 0.74 ) }
    dend_23 { pt3dadd( -46.8422, 104.823, -10.2361, 0.74 ) }
    dend_23 { pt3dadd( -47.0732, 105.523, -10.2281, 0.74 ) }
    dend_23 { pt3dadd( -47.2959, 106.277, -10.2081, 0.81 ) }
    dend_23 { pt3dadd( -47.4618, 106.928, -10.1837, 0.96 ) }
    dend_23 { pt3dadd( -47.6047, 107.587, -10.1527, 1.03 ) }
    dend_23 { pt3dadd( -47.7439, 108.295, -10.1099, 1.11 ) }
    dend_23 { pt3dadd( -47.8417, 108.88, -10.0453, 0.88 ) }
    dend_23 { pt3dadd( -47.9248, 109.484, -9.95646, 0.88 ) }
    dend_23 { pt3dadd( -47.9835, 109.983, -9.86796, 0.81 ) }
    dend_23 { pt3dadd( -48.0226, 110.355, -9.79606, 0.81 ) }
    dend_23 { pt3dadd( -48.0925, 111.001, -9.67555, 0.66 ) }
    dend_23 { pt3dadd( -48.1908, 111.855, -9.51643, 0.66 ) }
    dend_23 { pt3dadd( -48.2671, 112.448, -9.39702, 0.88 ) }
    dend_23 { pt3dadd( -48.3319, 112.899, -9.30166, 1.11 ) }
    dend_23 { pt3dadd( -48.4413, 113.561, -9.16086, 0.96 ) }
    dend_23 { pt3dadd( -48.5628, 114.176, -9.02691, 0.96 ) }
    dend_23 { pt3dadd( -48.6706, 114.639, -8.92626, 0.66 ) }
    dend_23 { pt3dadd( -48.8687, 115.32, -8.78299, 0.59 ) }
    dend_23 { pt3dadd( -49.067, 115.922, -8.63948, 0.59 ) }
    dend_23 { pt3dadd( -49.2685, 116.518, -8.49495, 0.74 ) }
    dend_23 { pt3dadd( -49.438, 117.033, -8.37251, 0.74 ) }
    dend_23 { pt3dadd( -49.5467, 117.413, -8.30037, 0.81 ) }
    dend_23 { pt3dadd( -49.6347, 117.757, -8.25367, 0.81 ) }
    dend_23 { pt3dadd( -49.7747, 118.37, -8.17752, 0.59 ) }
    dend_23 { pt3dadd( -49.9377, 119.17, -8.05371, 0.74 ) }
    dend_23 { pt3dadd( -50.0262, 119.634, -7.96367, 0.74 ) }
    dend_23 { pt3dadd( -50.1775, 120.468, -7.77699, 1.03 ) }
    dend_23 { pt3dadd( -50.2593, 120.953, -7.64697, 0.52 ) }
    dend_23 { pt3dadd( -50.3277, 121.407, -7.50369, 0.52 ) }
    dend_23 { pt3dadd( -50.4076, 122.032, -7.27237, 0.88 ) }
    dend_23 { pt3dadd( -50.4758, 122.673, -7.00972, 0.59 ) }
    dend_23 { pt3dadd( -50.5139, 123.177, -6.78192, 0.44 ) }
    dend_23 { pt3dadd( -50.5307, 123.633, -6.56807, 0.74 ) }
    dend_23 { pt3dadd( -50.538, 124.083, -6.37461, 0.74 ) }
    dend_23 { pt3dadd( -50.5597, 124.706, -6.13017, 0.66 ) }
    dend_23 { pt3dadd( -50.5921, 125.232, -5.94911, 0.59 ) }
    dend_23 { pt3dadd( -50.6649, 125.817, -5.74834, 0.59 ) }
    dend_23 { pt3dadd( -50.7555, 126.234, -5.58842, 0.59 ) }
    dend_23 { pt3dadd( -50.9361, 126.797, -5.36109, 0.59 ) }
    dend_23 { pt3dadd( -51.1895, 127.435, -5.09593, 0.81 ) }
    dend_23 { pt3dadd( -51.3686, 127.851, -4.92518, 0.81 ) }
    dend_23 { pt3dadd( -51.671, 128.551, -4.63987, 0.74 ) }
    dend_23 { pt3dadd( -51.9566, 129.256, -4.3364, 0.66 ) }
    dend_23 { pt3dadd( -52.1036, 129.658, -4.14259, 0.59 ) }
    dend_23 { pt3dadd( -52.2969, 130.263, -3.84071, 0.59 ) }
    dend_23 { pt3dadd( -52.4521, 130.815, -3.5641, 0.96 ) }
    dend_23 { pt3dadd( -52.5556, 131.199, -3.36911, 0.96 ) }
    dend_23 { pt3dadd( -52.8149, 132.127, -2.92319, 0.88 ) }
    dend_23 { pt3dadd( -52.9804, 132.647, -2.68215, 0.66 ) }
    dend_23 { pt3dadd( -53.1375, 133.067, -2.48814, 0.37 ) }
    dend_23 { pt3dadd( -53.2664, 133.372, -2.35738, 0.44 ) }
    dend_23 { pt3dadd( -53.4391, 133.753, -2.22451, 0.44 ) }
    dend_23 { pt3dadd( -53.6574, 134.204, -2.11506, 0.44 ) }
    dend_23 { pt3dadd( -53.9516, 134.745, -2.04001, 0.44 ) }
    dend_23 { pt3dadd( -54.3044, 135.315, -1.98051, 0.44 ) }
    dend_23 { pt3dadd( -54.6841, 135.862, -1.92083, 0.44 ) }
    dend_23 { pt3dadd( -55.0453, 136.378, -1.86303, 0.52 ) }
    dend_23 { pt3dadd( -55.2548, 136.712, -1.82632, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -55.4689, 137.126, -1.78642, 0.52 ) }
    dend_23 { pt3dadd( -55.6778, 137.612, -1.76147, 0.59 ) }
    dend_23 { pt3dadd( -55.8055, 137.932, -1.7498, 0.59 ) }
    dend_23 { pt3dadd( -56.0487, 138.479, -1.73727, 0.59 ) }
    dend_23 { pt3dadd( -56.3927, 139.206, -1.72765, 0.44 ) }
    dend_23 { pt3dadd( -56.7547, 139.911, -1.72444, 0.44 ) }
    dend_23 { pt3dadd( -57.2492, 140.729, -1.73249, 0.44 ) }
    dend_23 { pt3dadd( -57.4948, 141.033, -1.74374, 0.44 ) }
    dend_23 { pt3dadd( -58.1708, 141.387, -1.79553, 0.44 ) }
    dend_23 { pt3dadd( -58.7156, 141.395, -1.83941, 0.37 ) }
    dend_23 { pt3dadd( -59.2966, 141.265, -1.88318, 0.37 ) }
    dend_23 { pt3dadd( -59.862, 141.052, -1.9226, 1.25 ) }
    dend_23 { pt3dadd( -60.4745, 140.765, -1.9634, 0.37 ) }
    dend_23 { pt3dadd( -60.8652, 140.572, -1.97084, 0.37 ) }
    dend_23 { pt3dadd( -61.0417, 140.488, -1.95957, 0.59 ) }
    dend_23 { pt3dadd( -61.3914, 140.335, -1.9026, 0.59 ) }
    dend_23 { pt3dadd( -61.6882, 140.21, -1.81765, 0.29 ) }
    dend_23 { pt3dadd( -62.16, 140.016, -1.64956, 0.29 ) }
    dend_23 { pt3dadd( -62.6984, 139.848, -1.41813, 0.66 ) }
    dend_23 { pt3dadd( -63.0801, 139.746, -1.22358, 1.11 ) }
    dend_23 { pt3dadd( -63.4018, 139.668, -1.03754, 1.33 ) }
    dend_23 { pt3dadd( -63.7872, 139.584, -0.771541, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.18564, 23.2737, 9.72218, 0.81 ) }
    dend_20 { pt3dadd( -9.61877, 26.2312, 9.39269, 0.81 ) }
    dend_20 { pt3dadd( -10.0276, 28.5118, 9.09199, 0.96 ) }
    dend_20 { pt3dadd( -10.5326, 30.7908, 8.7919, 0.88 ) }
    dend_20 { pt3dadd( -10.846, 31.9272, 8.65555, 0.88 ) }
    dend_20 { pt3dadd( -11.4119, 33.6613, 8.47221, 1.03 ) }
    dend_20 { pt3dadd( -11.8326, 34.7541, 8.37713, 1.03 ) }
    dend_20 { pt3dadd( -12.8382, 36.7212, 8.2304, 0.96 ) }
    dend_20 { pt3dadd( -13.8562, 38.3424, 8.17921, 0.96 ) }
    dend_20 { pt3dadd( -15.0615, 39.8957, 8.17936, 1.11 ) }
    dend_20 { pt3dadd( -16.1454, 41.035, 8.21438, 1.18 ) }
    dend_20 { pt3dadd( -17.7799, 42.4757, 8.31464, 1.18 ) }
    dend_20 { pt3dadd( -18.9419, 43.3958, 8.41097, 1.4 ) }
    dend_20 { pt3dadd( -19.7612, 44.0243, 8.52548, 1.25 ) }
    dend_20 { pt3dadd( -21.0369, 45.02, 8.75261, 0.88 ) }
    dend_20 { pt3dadd( -22.2832, 46.0659, 9.00764, 1.18 ) }
    dend_20 { pt3dadd( -22.9705, 46.7331, 9.20385, 1.47 ) }
    dend_20 { pt3dadd( -23.7473, 47.6095, 9.48772, 1.33 ) }
    dend_20 { pt3dadd( -25.2905, 49.5222, 10.149, 0.96 ) }
    dend_20 { pt3dadd( -26.0318, 50.5101, 10.5028, 1.18 ) }
    dend_20 { pt3dadd( -26.7172, 51.4645, 10.8624, 1.18 ) }
    dend_20 { pt3dadd( -28.0741, 53.2546, 11.5393, 1.18 ) }
    dend_20 { pt3dadd( -28.5566, 53.8255, 11.7558, 1.33 ) }
    dend_20 { pt3dadd( -29.4522, 54.7402, 12.0975, 0.96 ) }
    dend_20 { pt3dadd( -30.1992, 55.3858, 12.3197, 0.81 ) }
    dend_20 { pt3dadd( -31.0332, 56.0361, 12.5529, 0.81 ) }
    dend_20 { pt3dadd( -32.2501, 56.8932, 12.8543, 1.11 ) }
    dend_20 { pt3dadd( -32.9919, 57.3988, 12.9937, 1.11 ) }
    dend_20 { pt3dadd( -33.8067, 58.0257, 13.1101, 0.88 ) }
    dend_20 { pt3dadd( -34.3001, 58.5109, 13.1493, 0.88 ) }
    dend_20 { pt3dadd( -34.8337, 59.2251, 13.1443, 0.88 ) }
    dend_20 { pt3dadd( -35.6044, 60.7278, 13.0024, 1.11 ) }
    dend_20 { pt3dadd( -35.9012, 61.6416, 12.7948, 1.11 ) }
    dend_20 { pt3dadd( -36.2568, 63.2036, 12.3398, 1.11 ) }
    dend_20 { pt3dadd( -36.5667, 64.7976, 11.7648, 1.03 ) }
    dend_20 { pt3dadd( -36.8317, 66.2217, 11.1985, 1.4 ) }
    dend_20 { pt3dadd( -37.0864, 67.4544, 10.6336, 1.62 ) }
    dend_20 { pt3dadd( -37.5937, 69.581, 9.57695, 0.88 ) }
    dend_20 { pt3dadd( -38.0028, 70.9147, 8.90156, 0.88 ) }
    dend_20 { pt3dadd( -38.6076, 72.4829, 8.20386, 0.88 ) }
    dend_20 { pt3dadd( -39.2008, 73.752, 7.76071, 1.03 ) }
    dend_20 { pt3dadd( -40.0243, 75.2316, 7.42889, 0.81 ) }
    dend_20 { pt3dadd( -40.5859, 76.0879, 7.49011, 0.96 ) }
    dend_20 { pt3dadd( -41.1937, 76.8176, 7.88262, 0.81 ) }
    dend_20 { pt3dadd( -42.4944, 78.0502, 9.18879, 1.25 ) }
    dend_20 { pt3dadd( -43.8047, 79.0698, 10.8267, 1.25 ) }
    dend_20 { pt3dadd( -44.4411, 79.4752, 11.6445, 0.96 ) }
    dend_20 { pt3dadd( -45.6658, 80.168, 13.1988, 0.96 ) }
    dend_20 { pt3dadd( -46.621, 80.6536, 14.2824, 0.96 ) }
    dend_20 { pt3dadd( -47.3198, 81.0102, 14.9383, 0.96 ) }
    dend_20 { pt3dadd( -48.4415, 81.6498, 15.7089, 0.81 ) }
    dend_20 { pt3dadd( -49.3512, 82.3035, 16.1712, 0.96 ) }
    dend_20 { pt3dadd( -50.5696, 83.3767, 16.6819, 0.96 ) }
    dend_20 { pt3dadd( -51.121, 83.9124, 16.8663, 1.11 ) }
    dend_20 { pt3dadd( -52.1914, 85.0141, 17.2046, 1.11 ) }
    dend_20 { pt3dadd( -53.3075, 86.2241, 17.4844, 0.96 ) }
    dend_20 { pt3dadd( -54.5129, 87.604, 17.7228, 0.81 ) }
    dend_20 { pt3dadd( -55.8839, 89.2791, 17.9211, 1.03 ) }
    dend_20 { pt3dadd( -56.8947, 90.6328, 18.0837, 1.18 ) }
    dend_20 { pt3dadd( -58.01, 92.2543, 18.3104, 1.18 ) }
    dend_20 { pt3dadd( -59.2004, 94.2534, 18.6106, 1.03 ) }
    dend_20 { pt3dadd( -59.7807, 95.4459, 18.8204, 1.11 ) }
    dend_20 { pt3dadd( -60.2019, 96.7077, 19.1051, 1.11 ) }
    dend_20 { pt3dadd( -60.584, 98.8795, 19.7521, 0.96 ) }
    dend_20 { pt3dadd( -60.6595, 99.8631, 20.1192, 0.96 ) }
    dend_20 { pt3dadd( -60.7039, 101.202, 20.733, 0.74 ) }
    dend_20 { pt3dadd( -60.7825, 102.387, 21.3985, 0.74 ) }
    dend_20 { pt3dadd( -61.1345, 104.159, 22.5167, 0.96 ) }
    dend_20 { pt3dadd( -61.5977, 105.199, 23.2315, 0.88 ) }
    dend_20 { pt3dadd( -62.3913, 105.999, 23.7779, 0.74 ) }
    dend_20 { pt3dadd( -63.4579, 106.537, 24.1707, 0.74 ) }
    dend_20 { pt3dadd( -64.6654, 106.924, 24.4101, 0.81 ) }
    dend_20 { pt3dadd( -66.2947, 107.351, 24.562, 0.88 ) }
    dend_20 { pt3dadd( -67.3117, 107.603, 24.5946, 0.88 ) }
    dend_20 { pt3dadd( -68.2919, 107.869, 24.5937, 1.03 ) }
    dend_20 { pt3dadd( -69.6849, 108.288, 24.5917, 1.03 ) }
    dend_20 { pt3dadd( -71.6151, 108.902, 24.7211, 0.96 ) }
    dend_20 { pt3dadd( -72.8299, 109.286, 24.8966, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( -74.2759, 109.717, 25.2336, 0.81 ) }
    dend_20 { pt3dadd( -75.2641, 109.985, 25.5239, 0.81 ) }
    dend_20 { pt3dadd( -76.5616, 110.307, 25.968, 0.81 ) }
    dend_20 { pt3dadd( -78.4461, 110.733, 26.695, 0.88 ) }
    dend_20 { pt3dadd( -79.5157, 110.958, 27.1045, 0.88 ) }
    dend_20 { pt3dadd( -80.9956, 111.315, 27.6463, 0.88 ) }
    dend_20 { pt3dadd( -82.1892, 111.702, 28.0718, 0.96 ) }
    dend_20 { pt3dadd( -83.1593, 112.148, 28.4311, 0.96 ) }
    dend_20 { pt3dadd( -84.1322, 112.73, 28.8018, 0.81 ) }
    dend_20 { pt3dadd( -84.9702, 113.329, 29.1209, 0.96 ) }
    dend_20 { pt3dadd( -85.8267, 114.024, 29.5076, 0.96 ) }
    dend_20 { pt3dadd( -86.7653, 114.896, 30.0757, 0.88 ) }
    dend_20 { pt3dadd( -87.6301, 115.77, 30.7724, 0.88 ) }
    dend_20 { pt3dadd( -88.2278, 116.448, 31.3759, 0.96 ) }
    dend_20 { pt3dadd( -88.7716, 117.17, 32.0888, 0.96 ) }
    dend_20 { pt3dadd( -89.461, 118.3, 33.2207, 0.81 ) }
    dend_20 { pt3dadd( -90.0772, 119.458, 34.3902, 0.81 ) }
    dend_20 { pt3dadd( -90.5894, 120.439, 35.2871, 0.88 ) }
    dend_20 { pt3dadd( -91.0441, 121.321, 35.964, 0.81 ) }
    dend_20 { pt3dadd( -91.6339, 122.519, 36.6932, 0.81 ) }
    dend_20 { pt3dadd( -92.3314, 123.898, 37.2687, 0.96 ) }
    dend_20 { pt3dadd( -92.9021, 124.923, 37.5194, 0.81 ) }
    dend_20 { pt3dadd( -94.0027, 126.689, 37.7529, 0.74 ) }
    dend_20 { pt3dadd( -94.7982, 127.846, 37.7973, 0.74 ) }
    dend_20 { pt3dadd( -95.7754, 129.112, 37.7444, 0.74 ) }
    dend_20 { pt3dadd( -96.8889, 130.462, 37.5231, 0.88 ) }
    dend_20 { pt3dadd( -97.4486, 131.136, 37.3512, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.2401, 18.6846, 13.5702, 0.74 ) }
    dend_18 { pt3dadd( -14.9502, 17.6304, 14.7338, 0.74 ) }
    dend_18 { pt3dadd( -15.4391, 17.2738, 15.0869, 0.88 ) }
    dend_18 { pt3dadd( -16.4064, 16.5371, 15.7289, 0.81 ) }
    dend_18 { pt3dadd( -17.6079, 15.4241, 16.6451, 0.52 ) }
    dend_18 { pt3dadd( -18.0869, 14.9973, 16.9286, 0.44 ) }
    dend_18 { pt3dadd( -18.7599, 14.4405, 17.218, 0.44 ) }
    dend_18 { pt3dadd( -19.2591, 14.0365, 17.213, 0.29 ) }
    dend_18 { pt3dadd( -19.7666, 13.7768, 17.0518, 0.29 ) }
    dend_18 { pt3dadd( -21.1973, 13.5452, 16.1427, 1.4 ) }
    dend_18 { pt3dadd( -23.0082, 13.4071, 14.7552, 0.29 ) }
    dend_18 { pt3dadd( -23.5823, 13.3943, 14.2963, 0.29 ) }
    dend_18 { pt3dadd( -24.4808, 13.4393, 13.5163, 0.37 ) }
    dend_18 { pt3dadd( -25.0359, 13.5239, 12.9989, 0.44 ) }
    dend_18 { pt3dadd( -25.6485, 13.6813, 12.3839, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.2401, 18.6846, 13.5702, 2.28 ) }
    dend_11 { pt3dadd( -14.3589, 21.3918, 14.1517, 2.28 ) }
    dend_11 { pt3dadd( -15.1202, 23.2338, 14.5473, 1.4 ) }
    dend_11 { pt3dadd( -15.6147, 24.4303, 14.8043, 1.4 ) }
    dend_11 { pt3dadd( -16.3627, 26.2403, 15.1931, 1.4 ) }
    dend_11 { pt3dadd( -16.8469, 27.4119, 15.4448, 1.4 ) }
    dend_11 { pt3dadd( -17.3452, 28.6176, 15.7037, 1.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.751182, 142.198, 7.77629, 0.59 ) }
    dend_5 { pt3dadd( 0.862149, 143.672, 7.22705, 0.59 ) }
    dend_5 { pt3dadd( 0.889034, 144.461, 6.9909, 0.59 ) }
    dend_5 { pt3dadd( 0.900339, 145.536, 6.76054, 0.59 ) }
    dend_5 { pt3dadd( 0.901418, 145.949, 6.69588, 0.59 ) }
    dend_5 { pt3dadd( 0.899848, 146.712, 6.5699, 0.81 ) }
    dend_5 { pt3dadd( 0.897587, 147.38, 6.4656, 0.88 ) }
    dend_5 { pt3dadd( 0.893262, 148.042, 6.4129, 0.88 ) }
    dend_5 { pt3dadd( 0.852667, 149.056, 6.34945, 0.66 ) }
    dend_5 { pt3dadd( 0.805998, 149.746, 6.33736, 0.88 ) }
    dend_5 { pt3dadd( 0.720081, 150.663, 6.35663, 0.96 ) }
    dend_5 { pt3dadd( 0.62688, 151.394, 6.39174, 0.81 ) }
    dend_5 { pt3dadd( 0.542118, 151.846, 6.43053, 0.81 ) }
    dend_5 { pt3dadd( 0.320916, 152.614, 6.53068, 0.66 ) }
    dend_5 { pt3dadd( 0.0361975, 153.256, 6.65714, 0.74 ) }
    dend_5 { pt3dadd( -0.431903, 153.995, 6.89595, 0.44 ) }
    dend_5 { pt3dadd( -0.83556, 154.463, 7.12218, 0.44 ) }
    dend_5 { pt3dadd( -1.10748, 154.717, 7.26377, 0.81 ) }
    dend_5 { pt3dadd( -1.4187, 154.989, 7.42072, 0.96 ) }
    dend_5 { pt3dadd( -1.73277, 155.274, 7.57666, 0.74 ) }
    dend_5 { pt3dadd( -2.13429, 155.707, 7.79399, 0.74 ) }
    dend_5 { pt3dadd( -2.50952, 156.207, 7.94125, 0.88 ) }
    dend_5 { pt3dadd( -2.95043, 156.938, 8.04954, 1.03 ) }
    dend_5 { pt3dadd( -3.29578, 157.599, 8.04922, 0.88 ) }
    dend_5 { pt3dadd( -3.63428, 158.319, 7.99001, 0.74 ) }
    dend_5 { pt3dadd( -3.94378, 159.036, 7.89718, 0.88 ) }
    dend_5 { pt3dadd( -4.58393, 160.643, 7.64122, 0.66 ) }
    dend_5 { pt3dadd( -4.97677, 161.712, 7.4676, 1.03 ) }
    dend_5 { pt3dadd( -5.34837, 162.814, 7.29565, 0.88 ) }
    dend_5 { pt3dadd( -5.66155, 163.883, 7.18537, 1.03 ) }
    dend_5 { pt3dadd( -5.84805, 164.624, 7.15348, 1.03 ) }
    dend_5 { pt3dadd( -6.01975, 165.472, 7.1812, 0.88 ) }
    dend_5 { pt3dadd( -6.1479, 166.269, 7.2971, 0.81 ) }
    dend_5 { pt3dadd( -6.26802, 167.012, 7.42905, 0.81 ) }
    dend_5 { pt3dadd( -6.49349, 168.161, 7.66269, 0.66 ) }
    dend_5 { pt3dadd( -6.64631, 168.76, 7.77274, 0.66 ) }
    dend_5 { pt3dadd( -6.9258, 169.579, 7.89043, 1.03 ) }
    dend_5 { pt3dadd( -7.14855, 170.1, 7.9447, 0.81 ) }
    dend_5 { pt3dadd( -7.5073, 170.844, 7.97659, 0.59 ) }
    dend_5 { pt3dadd( -7.92737, 171.65, 7.94242, 0.59 ) }
    dend_5 { pt3dadd( -8.19855, 172.143, 7.85884, 0.59 ) }
    dend_5 { pt3dadd( -8.5386, 172.717, 7.69534, 0.59 ) }
    dend_5 { pt3dadd( -8.88009, 173.251, 7.49923, 0.59 ) }
    dend_5 { pt3dadd( -9.47074, 174.128, 7.14974, 0.59 ) }
    dend_5 { pt3dadd( -10.0775, 175.0, 6.8239, 1.18 ) }
    dend_5 { pt3dadd( -10.5914, 175.704, 6.57948, 1.33 ) }
    dend_5 { pt3dadd( -11.3264, 176.663, 6.26521, 0.74 ) }
    dend_5 { pt3dadd( -11.7406, 177.196, 6.12099, 0.74 ) }
    dend_5 { pt3dadd( -12.1782, 177.768, 5.97777, 0.74 ) }
    dend_5 { pt3dadd( -12.8273, 178.69, 5.7556, 0.88 ) }
    dend_5 { pt3dadd( -13.1526, 179.268, 5.64455, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_5 { pt3dadd( -13.3422, 179.693, 5.57776, 1.03 ) }
    dend_5 { pt3dadd( -13.6355, 180.499, 5.45752, 0.74 ) }
    dend_5 { pt3dadd( -13.8648, 181.167, 5.36798, 0.74 ) }
    dend_5 { pt3dadd( -14.2255, 182.133, 5.27013, 0.59 ) }
    dend_5 { pt3dadd( -14.5851, 182.92, 5.24637, 0.74 ) }
    dend_5 { pt3dadd( -15.0301, 183.704, 5.32354, 0.74 ) }
    dend_5 { pt3dadd( -15.3381, 184.179, 5.36597, 0.74 ) }
    dend_5 { pt3dadd( -15.9326, 185.0, 5.41085, 0.88 ) }
    dend_5 { pt3dadd( -16.3531, 185.535, 5.44203, 1.03 ) }
    dend_5 { pt3dadd( -16.8583, 186.113, 5.47427, 0.74 ) }
    dend_5 { pt3dadd( -17.473, 186.739, 5.43208, 0.59 ) }
    dend_5 { pt3dadd( -18.5699, 187.785, 5.25289, 0.59 ) }
    dend_5 { pt3dadd( -19.2005, 188.363, 5.04945, 0.74 ) }
    dend_5 { pt3dadd( -19.5843, 188.706, 4.8956, 0.96 ) }
    dend_5 { pt3dadd( -20.0817, 189.124, 4.67642, 0.88 ) }
    dend_5 { pt3dadd( -20.7065, 189.571, 4.41963, 0.74 ) }
    dend_5 { pt3dadd( -21.6639, 190.207, 4.02518, 1.55 ) }
    dend_5 { pt3dadd( -22.5094, 190.777, 3.69499, 1.99 ) }
    dend_5 { pt3dadd( -23.3094, 191.403, 3.32058, 0.74 ) }
    dend_5 { pt3dadd( -23.8626, 191.991, 2.98557, 0.59 ) }
    dend_5 { pt3dadd( -24.3623, 192.801, 2.58242, 0.88 ) }
    dend_5 { pt3dadd( -24.7283, 193.732, 2.21243, 0.81 ) }
    dend_5 { pt3dadd( -24.8905, 194.378, 1.97758, 0.81 ) }
    dend_5 { pt3dadd( -25.0258, 195.176, 1.60697, 0.74 ) }
    dend_5 { pt3dadd( -25.1461, 196.034, 1.13558, 0.74 ) }
    dend_5 { pt3dadd( -25.2814, 196.735, 0.697508, 0.66 ) }
    dend_5 { pt3dadd( -25.4139, 197.295, 0.314416, 0.66 ) }
    dend_5 { pt3dadd( -25.7258, 198.3, -0.375447, 1.47 ) }
    dend_5 { pt3dadd( -26.3945, 200.175, -1.6807, 1.18 ) }
    dend_5 { pt3dadd( -26.6552, 200.849, -2.14192, 1.03 ) }
    dend_5 { pt3dadd( -27.2091, 202.319, -3.12373, 1.03 ) }
    dend_5 { pt3dadd( -27.4785, 203.131, -3.60041, 0.74 ) }
    dend_5 { pt3dadd( -27.7262, 204.07, -4.04043, 1.03 ) }
    dend_5 { pt3dadd( -27.7906, 204.414, -4.14163, 1.25 ) }
    dend_5 { pt3dadd( -27.9416, 205.469, -4.30464, 0.66 ) }
    dend_5 { pt3dadd( -28.0421, 206.327, -4.4099, 0.66 ) }
    dend_5 { pt3dadd( -28.161, 207.355, -4.47187, 0.81 ) }
    dend_5 { pt3dadd( -28.3025, 208.097, -4.52821, 0.66 ) }
    dend_5 { pt3dadd( -28.4958, 208.788, -4.60061, 0.66 ) }
    dend_5 { pt3dadd( -28.9613, 210.044, -4.73562, 0.66 ) }
    dend_5 { pt3dadd( -29.2725, 210.729, -4.80808, 0.52 ) }
    dend_5 { pt3dadd( -29.5848, 211.343, -4.87359, 0.66 ) }
    dend_5 { pt3dadd( -29.809, 211.784, -4.92811, 0.81 ) }
    dend_5 { pt3dadd( -30.1739, 212.573, -4.94189, 0.52 ) }
    dend_5 { pt3dadd( -30.4252, 213.222, -4.85288, 0.52 ) }
    dend_5 { pt3dadd( -30.6619, 213.99, -4.66476, 0.88 ) }
    dend_5 { pt3dadd( -30.8069, 214.579, -4.50625, 0.88 ) }
    dend_5 { pt3dadd( -30.9429, 215.284, -4.3258, 0.59 ) }
    dend_5 { pt3dadd( -31.0824, 216.415, -4.08715, 0.74 ) }
    dend_5 { pt3dadd( -31.1456, 217.33, -4.12585, 0.44 ) }
    dend_5 { pt3dadd( -31.1884, 218.066, -4.41433, 0.44 ) }
    dend_5 { pt3dadd( -31.2352, 218.63, -4.75053, 0.44 ) }
    dend_5 { pt3dadd( -31.3058, 219.393, -5.28383, 0.44 ) }
    dend_5 { pt3dadd( -31.3775, 220.185, -5.91181, 1.11 ) }
    dend_5 { pt3dadd( -31.5983, 222.279, -7.64913, 0.88 ) }
    dend_5 { pt3dadd( -31.7009, 223.321, -8.48053, 0.44 ) }
    dend_5 { pt3dadd( -31.7752, 224.012, -8.97031, 0.66 ) }
    dend_5 { pt3dadd( -31.8452, 224.541, -9.27575, 0.44 ) }
    dend_5 { pt3dadd( -31.9788, 225.439, -9.61938, 0.44 ) }
    dend_5 { pt3dadd( -32.0891, 226.32, -9.77245, 0.44 ) }
    dend_5 { pt3dadd( -32.1783, 227.435, -9.74661, 0.59 ) }
    dend_5 { pt3dadd( -32.2572, 228.482, -9.64673, 0.59 ) }
    dend_5 { pt3dadd( -32.3674, 229.471, -9.52279, 0.52 ) }
    dend_5 { pt3dadd( -32.5229, 230.34, -9.37496, 0.37 ) }
    dend_5 { pt3dadd( -32.7669, 231.228, -9.17107, 0.37 ) }
    dend_5 { pt3dadd( -33.0002, 231.814, -9.02939, 0.37 ) }
    dend_5 { pt3dadd( -33.397, 232.444, -8.86114, 0.37 ) }
    dend_5 { pt3dadd( -33.8724, 233.006, -8.69875, 0.37 ) }
    dend_5 { pt3dadd( -34.3021, 233.426, -8.58064, 0.74 ) }
    dend_5 { pt3dadd( -34.9945, 233.98, -8.41515, 0.66 ) }
    dend_5 { pt3dadd( -35.5992, 234.393, -8.28455, 0.66 ) }
    dend_5 { pt3dadd( -36.5114, 234.954, -8.10307, 0.44 ) }
    dend_5 { pt3dadd( -37.1455, 235.309, -7.98541, 0.37 ) }
    dend_5 { pt3dadd( -37.513, 235.513, -7.91804, 0.37 ) }
    dend_5 { pt3dadd( -38.1875, 235.861, -7.80746, 0.29 ) }
    dend_5 { pt3dadd( -38.562, 236.001, -7.75451, 0.29 ) }
    dend_5 { pt3dadd( -39.083, 236.055, -7.69772, 1.03 ) }
    dend_5 { pt3dadd( -39.5824, 235.929, -7.68083, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 78/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.751182, 142.198, 7.77629, 0.59 ) }
    dend_2 { pt3dadd( 1.63344, 143.873, 8.09673, 0.59 ) }
    dend_2 { pt3dadd( 2.09682, 145.058, 8.30622, 0.81 ) }
    dend_2 { pt3dadd( 2.49648, 146.723, 8.60253, 0.88 ) }
    dend_2 { pt3dadd( 2.66362, 147.921, 8.81859, 0.59 ) }
    dend_2 { pt3dadd( 2.71127, 148.814, 8.95538, 0.59 ) }
    dend_2 { pt3dadd( 2.74036, 150.098, 9.11586, 0.96 ) }
    dend_2 { pt3dadd( 2.69652, 150.808, 9.2001, 1.11 ) }
    dend_2 { pt3dadd( 2.5422, 152.321, 9.3439, 0.66 ) }
    dend_2 { pt3dadd( 2.39587, 153.423, 9.3942, 0.66 ) }
    dend_2 { pt3dadd( 2.24858, 155.125, 9.54509, 0.66 ) }
    dend_2 { pt3dadd( 2.22378, 156.43, 9.69393, 0.59 ) }
    dend_2 { pt3dadd( 2.29161, 157.483, 9.85284, 0.59 ) }
    dend_2 { pt3dadd( 2.49561, 158.985, 10.1115, 0.59 ) }
    dend_2 { pt3dadd( 2.74521, 160.271, 10.3454, 0.59 ) }
    dend_2 { pt3dadd( 3.2844, 162.59, 10.8007, 0.66 ) }
    dend_2 { pt3dadd( 3.57032, 163.694, 11.0408, 0.66 ) }
    dend_2 { pt3dadd( 3.91287, 165.09, 11.3587, 0.52 ) }
    dend_2 { pt3dadd( 4.18851, 166.269, 11.6204, 0.52 ) }
    dend_2 { pt3dadd( 4.435, 167.481, 11.8912, 0.52 ) }
    dend_2 { pt3dadd( 4.58664, 168.403, 12.0808, 0.74 ) }
    dend_2 { pt3dadd( 4.66604, 169.236, 12.196, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 4.7591, 170.229, 12.3121, 0.88 ) }
    dend_2 { pt3dadd( 4.84955, 170.917, 12.3559, 0.88 ) }
    dend_2 { pt3dadd( 5.24311, 172.625, 12.3336, 0.59 ) }
    dend_2 { pt3dadd( 5.53317, 173.409, 12.2093, 0.81 ) }
    dend_2 { pt3dadd( 6.03762, 174.357, 11.9093, 0.59 ) }
    dend_2 { pt3dadd( 6.73841, 175.41, 11.4451, 0.74 ) }
    dend_2 { pt3dadd( 7.44723, 176.368, 10.9204, 0.74 ) }
    dend_2 { pt3dadd( 8.16166, 177.301, 10.323, 0.74 ) }
    dend_2 { pt3dadd( 8.94458, 178.329, 9.61725, 0.59 ) }
    dend_2 { pt3dadd( 9.65425, 179.26, 8.9665, 0.59 ) }
    dend_2 { pt3dadd( 10.3949, 180.263, 8.27851, 0.81 ) }
    dend_2 { pt3dadd( 11.0362, 181.228, 7.63892, 0.81 ) }
    dend_2 { pt3dadd( 11.8507, 182.648, 6.76442, 0.59 ) }
    dend_2 { pt3dadd( 12.3018, 183.563, 6.25061, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -24.1559, -33.8562, 0.668662, 0.74 ) }
    dend_35 { pt3dadd( -25.4617, -35.1921, -2.44237, 0.74 ) }
    dend_35 { pt3dadd( -26.2183, -36.3149, -4.40218, 0.88 ) }
    dend_35 { pt3dadd( -27.3115, -38.426, -7.31769, 1.03 ) }
    dend_35 { pt3dadd( -27.7194, -39.3459, -8.3508, 0.96 ) }
    dend_35 { pt3dadd( -28.2248, -40.5525, -9.48717, 0.66 ) }
    dend_35 { pt3dadd( -28.7108, -41.7107, -10.4272, 0.88 ) }
    dend_35 { pt3dadd( -29.0662, -42.827, -10.9555, 0.81 ) }
    dend_35 { pt3dadd( -29.4362, -43.8958, -11.2412, 0.81 ) }
    dend_35 { pt3dadd( -29.9448, -45.1141, -11.3875, 0.66 ) }
    dend_35 { pt3dadd( -30.5047, -46.1616, -11.4901, 0.66 ) }
    dend_35 { pt3dadd( -31.0835, -47.098, -11.6099, 0.74 ) }
    dend_35 { pt3dadd( -31.9273, -48.3626, -11.8171, 0.59 ) }
    dend_35 { pt3dadd( -32.396, -49.1129, -11.9625, 0.52 ) }
    dend_35 { pt3dadd( -32.7873, -49.8388, -12.1283, 0.52 ) }
    dend_35 { pt3dadd( -33.4351, -51.334, -12.5095, 0.88 ) }
    dend_35 { pt3dadd( -33.8077, -52.4212, -12.7979, 0.88 ) }
    dend_35 { pt3dadd( -34.1425, -53.5918, -13.099, 0.74 ) }
    dend_35 { pt3dadd( -34.5901, -55.2743, -13.4962, 0.74 ) }
    dend_35 { pt3dadd( -34.8608, -56.2298, -13.6997, 0.74 ) }
    dend_35 { pt3dadd( -35.3492, -57.7285, -13.9632, 0.81 ) }
    dend_35 { pt3dadd( -35.8273, -58.9713, -14.1029, 0.81 ) }
    dend_35 { pt3dadd( -36.3813, -60.2195, -14.1546, 0.66 ) }
    dend_35 { pt3dadd( -36.9957, -61.4377, -14.149, 0.74 ) }
    dend_35 { pt3dadd( -37.6201, -62.5525, -14.1035, 0.74 ) }
    dend_35 { pt3dadd( -38.2712, -63.6417, -14.0614, 0.81 ) }
    dend_35 { pt3dadd( -38.8641, -64.6196, -14.0395, 0.81 ) }
    dend_35 { pt3dadd( -39.2883, -65.3409, -14.0443, 0.74 ) }
    dend_35 { pt3dadd( -39.8541, -66.4081, -14.1059, 0.52 ) }
    dend_35 { pt3dadd( -40.2655, -67.3007, -14.2075, 0.52 ) }
    dend_35 { pt3dadd( -40.7759, -68.577, -14.4188, 0.52 ) }
    dend_35 { pt3dadd( -41.1855, -69.7702, -14.6337, 1.03 ) }
    dend_35 { pt3dadd( -41.4165, -70.5201, -14.7769, 1.03 ) }
    dend_35 { pt3dadd( -41.6779, -71.4427, -14.9319, 0.81 ) }
    dend_35 { pt3dadd( -41.8865, -72.2298, -15.0407, 0.88 ) }
    dend_35 { pt3dadd( -42.1121, -73.2935, -15.1656, 1.03 ) }
    dend_35 { pt3dadd( -42.329, -74.7314, -15.3204, 0.74 ) }
    dend_35 { pt3dadd( -42.4391, -75.6597, -15.4808, 0.74 ) }
    dend_35 { pt3dadd( -42.5492, -76.8258, -15.7506, 0.74 ) }
    dend_35 { pt3dadd( -42.6483, -77.8553, -16.1018, 0.59 ) }
    dend_35 { pt3dadd( -42.7914, -79.1981, -16.7024, 0.66 ) }
    dend_35 { pt3dadd( -42.8775, -79.9816, -17.1392, 0.66 ) }
    dend_35 { pt3dadd( -43.038, -81.3998, -18.0949, 0.66 ) }
    dend_35 { pt3dadd( -43.1439, -82.1184, -18.6234, 0.52 ) }
    dend_35 { pt3dadd( -43.4351, -83.4896, -19.6642, 0.59 ) }
    dend_35 { pt3dadd( -43.6538, -84.1909, -20.1734, 0.81 ) }
    dend_35 { pt3dadd( -43.9178, -84.8263, -20.5858, 0.81 ) }
    dend_35 { pt3dadd( -44.2795, -85.6243, -21.0171, 0.29 ) }
    dend_35 { pt3dadd( -44.6501, -86.4444, -21.3405, 0.29 ) }
    dend_35 { pt3dadd( -45.1506, -87.5096, -21.6686, 0.74 ) }
    dend_35 { pt3dadd( -45.5559, -88.4082, -21.8642, 1.25 ) }
    dend_35 { pt3dadd( -45.8309, -89.0389, -21.9899, 1.47 ) }
    dend_35 { pt3dadd( -46.0235, -89.5107, -22.0743, 1.62 ) }
    dend_35 { pt3dadd( -46.3547, -90.4174, -22.2255, 1.25 ) }
    dend_35 { pt3dadd( -46.6808, -91.45, -22.4189, 0.44 ) }
    dend_35 { pt3dadd( -47.0199, -92.5323, -22.6574, 0.29 ) }
    dend_35 { pt3dadd( -47.47, -93.9745, -22.9648, 0.66 ) }
    dend_35 { pt3dadd( -47.7743, -94.9518, -23.1638, 0.96 ) }
    dend_35 { pt3dadd( -47.9573, -95.5423, -23.2782, 1.25 ) }
    dend_35 { pt3dadd( -48.1522, -96.2005, -23.4011, 1.47 ) }
    dend_35 { pt3dadd( -48.4514, -97.2599, -23.5878, 1.03 ) }
    dend_35 { pt3dadd( -48.8588, -98.5848, -23.7821, 0.29 ) }
    dend_35 { pt3dadd( -49.1365, -99.4212, -23.8753, 0.44 ) }
    dend_35 { pt3dadd( -49.4131, -100.145, -23.9245, 0.74 ) }
    dend_35 { pt3dadd( -49.7299, -100.906, -23.9455, 0.96 ) }
    dend_35 { pt3dadd( -50.0474, -101.602, -23.9323, 1.25 ) }
    dend_35 { pt3dadd( -50.3556, -102.175, -23.8975, 1.25 ) }
    dend_35 { pt3dadd( -50.9667, -103.066, -23.8228, 1.03 ) }
    dend_35 { pt3dadd( -51.579, -103.823, -23.6799, 0.81 ) }
    dend_35 { pt3dadd( -51.8926, -104.142, -23.6149, 0.81 ) }
    dend_35 { pt3dadd( -52.2896, -104.503, -23.5469, 0.59 ) }
    dend_35 { pt3dadd( -52.9332, -105.059, -23.4693, 0.52 ) }
    dend_35 { pt3dadd( -53.3309, -105.423, -23.452, 0.52 ) }
    dend_35 { pt3dadd( -54.1188, -106.234, -23.4928, 0.59 ) }
    dend_35 { pt3dadd( -55.1072, -107.443, -23.6861, 0.44 ) }
    dend_35 { pt3dadd( -55.6157, -108.191, -23.8811, 0.29 ) }
    dend_35 { pt3dadd( -55.9268, -108.707, -24.0429, 0.29 ) }
    dend_35 { pt3dadd( -56.3867, -109.515, -24.3173, 0.66 ) }
    dend_35 { pt3dadd( -56.7494, -110.156, -24.5413, 1.03 ) }
    dend_35 { pt3dadd( -57.0815, -110.731, -24.7437, 1.03 ) }
    dend_35 { pt3dadd( -57.7596, -111.805, -25.0463, 0.29 ) }
    dend_35 { pt3dadd( -58.3485, -112.572, -25.2563, 0.29 ) }
    dend_35 { pt3dadd( -58.8352, -113.113, -25.3794, 0.29 ) }
    dend_35 { pt3dadd( -59.0446, -113.32, -25.4168, 0.44 ) }
    dend_35 { pt3dadd( -59.4274, -113.704, -25.4718, 0.44 ) }
    dend_35 { pt3dadd( -60.3004, -114.64, -25.5817, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( -60.6322, -115.024, -25.6233, 0.66 ) }
    dend_35 { pt3dadd( -61.446, -116.011, -25.737, 0.29 ) }
    dend_35 { pt3dadd( -61.8553, -116.512, -25.7863, 0.29 ) }
    dend_35 { pt3dadd( -62.4557, -117.257, -25.8371, 0.59 ) }
    dend_35 { pt3dadd( -62.9493, -117.896, -25.8624, 0.81 ) }
    dend_35 { pt3dadd( -63.5474, -118.703, -25.888, 0.29 ) }
    dend_35 { pt3dadd( -64.0653, -119.431, -25.9367, 0.52 ) }
    dend_35 { pt3dadd( -64.6099, -120.253, -26.0461, 0.52 ) }
    dend_35 { pt3dadd( -65.0743, -121.09, -26.2183, 0.44 ) }
    dend_35 { pt3dadd( -65.517, -122.142, -26.4593, 0.74 ) }
    dend_35 { pt3dadd( -65.8053, -122.877, -26.8029, 0.88 ) }
    dend_35 { pt3dadd( -66.0891, -123.696, -27.3305, 0.88 ) }
    dend_35 { pt3dadd( -66.2916, -124.4, -27.8415, 0.29 ) }
    dend_35 { pt3dadd( -66.5748, -125.424, -28.8026, 0.29 ) }
    dend_35 { pt3dadd( -66.7987, -126.255, -29.6717, 0.29 ) }
    dend_35 { pt3dadd( -67.5723, -129.048, -32.7299, 0.59 ) }
    dend_35 { pt3dadd( -67.7123, -129.548, -33.2893, 0.81 ) }
    dend_35 { pt3dadd( -67.8912, -130.172, -34.0124, 0.81 ) }
    dend_35 { pt3dadd( -68.467, -132.223, -36.4349, 0.29 ) }
    dend_35 { pt3dadd( -68.6429, -132.956, -37.3049, 0.74 ) }
    dend_35 { pt3dadd( -68.7131, -133.384, -37.7822, 0.74 ) }
    dend_35 { pt3dadd( -68.8565, -134.826, -39.0719, 0.22 ) }
    dend_35 { pt3dadd( -68.9898, -136.019, -40.0729, 1.11 ) }
    dend_35 { pt3dadd( -69.0697, -136.738, -40.6282, 1.11 ) }
    dend_35 { pt3dadd( -69.1839, -138.144, -41.5229, 0.22 ) }
    dend_35 { pt3dadd( -69.2328, -139.186, -42.1565, 0.59 ) }
    dend_35 { pt3dadd( -69.2704, -140.822, -43.1343, 0.22 ) }
    dend_35 { pt3dadd( -69.2949, -141.707, -43.6118, 0.37 ) }
    dend_35 { pt3dadd( -69.324, -142.121, -43.8312, 0.37 ) }
    dend_35 { pt3dadd( -69.4461, -142.942, -44.2453, 0.22 ) }
    dend_35 { pt3dadd( -69.662, -143.973, -44.7432, 0.22 ) }
    dend_35 { pt3dadd( -70.0546, -145.65, -45.554, 1.47 ) }
    dend_35 { pt3dadd( -70.3104, -146.644, -46.0192, 1.62 ) }
    dend_35 { pt3dadd( -70.698, -147.881, -46.5328, 1.25 ) }
    dend_35 { pt3dadd( -71.409, -149.891, -47.2909, 0.15 ) }
    dend_35 { pt3dadd( -71.8778, -151.063, -47.6868, 0.22 ) }
    dend_35 { pt3dadd( -72.0895, -151.578, -47.8273, 0.88 ) }
    dend_35 { pt3dadd( -72.3199, -152.156, -47.9737, 1.03 ) }
    dend_35 { pt3dadd( -72.8201, -153.464, -48.3277, 0.15 ) }
    dend_35 { pt3dadd( -73.1523, -154.389, -48.5973, 0.52 ) }
    dend_35 { pt3dadd( -73.4194, -155.115, -48.8265, 0.74 ) }
    dend_35 { pt3dadd( -74.8297, -158.843, -50.0342, 0.22 ) }
    dend_35 { pt3dadd( -75.2968, -160.059, -50.435, 0.81 ) }
    dend_35 { pt3dadd( -75.4992, -160.584, -50.612, 0.81 ) }
    dend_35 { pt3dadd( -76.3391, -162.799, -51.3801, 0.22 ) }
    dend_35 { pt3dadd( -76.6692, -163.687, -51.68, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 46/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -24.1559, -33.8562, 0.668662, 0.59 ) }
    dend_32 { pt3dadd( -24.0543, -34.9081, 0.299518, 0.59 ) }
    dend_32 { pt3dadd( -23.9603, -35.5379, 0.0703314, 0.59 ) }
    dend_32 { pt3dadd( -23.844, -36.293, -0.260994, 0.81 ) }
    dend_32 { pt3dadd( -23.7629, -36.8582, -0.519192, 0.81 ) }
    dend_32 { pt3dadd( -23.659, -37.8106, -0.969052, 1.03 ) }
    dend_32 { pt3dadd( -23.6298, -38.32, -1.2101, 1.03 ) }
    dend_32 { pt3dadd( -23.6239, -38.9248, -1.47156, 0.88 ) }
    dend_32 { pt3dadd( -23.6782, -40.057, -1.85679, 0.88 ) }
    dend_32 { pt3dadd( -23.8017, -40.8199, -2.00093, 1.03 ) }
    dend_32 { pt3dadd( -24.0286, -41.4957, -1.98501, 1.03 ) }
    dend_32 { pt3dadd( -24.4655, -42.3515, -1.78398, 0.52 ) }
    dend_32 { pt3dadd( -25.2249, -43.55, -1.37711, 1.03 ) }
    dend_32 { pt3dadd( -25.6201, -44.1163, -1.14814, 1.03 ) }
    dend_32 { pt3dadd( -26.0687, -44.7714, -0.861639, 0.88 ) }
    dend_32 { pt3dadd( -26.5089, -45.4476, -0.594925, 0.81 ) }
    dend_32 { pt3dadd( -26.9972, -46.2694, -0.309529, 0.59 ) }
    dend_32 { pt3dadd( -27.4021, -47.0311, -0.106213, 0.59 ) }
    dend_32 { pt3dadd( -27.8239, -47.9393, 0.0352086, 0.59 ) }
    dend_32 { pt3dadd( -28.2494, -49.0076, 0.16604, 0.88 ) }
    dend_32 { pt3dadd( -28.4927, -49.7432, 0.247475, 0.88 ) }
    dend_32 { pt3dadd( -28.6443, -50.2909, 0.308364, 0.74 ) }
    dend_32 { pt3dadd( -28.8392, -51.021, 0.399881, 0.96 ) }
    dend_32 { pt3dadd( -29.0222, -51.6258, 0.484842, 1.03 ) }
    dend_32 { pt3dadd( -29.2126, -52.1638, 0.569728, 1.03 ) }
    dend_32 { pt3dadd( -29.5906, -53.0758, 0.722154, 0.59 ) }
    dend_32 { pt3dadd( -29.9003, -53.7537, 0.804227, 0.37 ) }
    dend_32 { pt3dadd( -30.2646, -54.4826, 0.852267, 0.37 ) }
    dend_32 { pt3dadd( -30.6464, -55.233, 0.865213, 0.81 ) }
    dend_32 { pt3dadd( -31.0409, -56.045, 0.842286, 0.81 ) }
    dend_32 { pt3dadd( -31.3064, -56.638, 0.799335, 0.81 ) }
    dend_32 { pt3dadd( -31.6891, -57.6014, 0.717903, 0.96 ) }
    dend_32 { pt3dadd( -31.9752, -58.4048, 0.648343, 0.96 ) }
    dend_32 { pt3dadd( -32.2144, -59.1857, 0.591548, 0.66 ) }
    dend_32 { pt3dadd( -32.4293, -59.983, 0.563648, 0.66 ) }
    dend_32 { pt3dadd( -32.618, -60.6351, 0.58332, 0.59 ) }
    dend_32 { pt3dadd( -32.9041, -61.445, 0.686439, 0.66 ) }
    dend_32 { pt3dadd( -33.0877, -61.8412, 0.804917, 0.88 ) }
    dend_32 { pt3dadd( -33.3837, -62.3418, 1.01225, 0.88 ) }
    dend_32 { pt3dadd( -33.714, -62.808, 1.24294, 0.74 ) }
    dend_32 { pt3dadd( -34.1886, -63.4438, 1.5835, 0.59 ) }
    dend_32 { pt3dadd( -34.4872, -63.8616, 1.79639, 0.59 ) }
    dend_32 { pt3dadd( -34.8293, -64.4146, 2.02629, 0.59 ) }
    dend_32 { pt3dadd( -35.2586, -65.2434, 2.28499, 0.44 ) }
    dend_32 { pt3dadd( -35.5186, -65.818, 2.4038, 0.66 ) }
    dend_32 { pt3dadd( -35.7927, -66.5011, 2.49118, 0.81 ) }
    dend_32 { pt3dadd( -36.0233, -67.1355, 2.54126, 0.88 ) }
    dend_32 { pt3dadd( -36.3326, -67.9931, 2.58116, 0.88 ) }
    dend_32 { pt3dadd( -36.6385, -68.7634, 2.59263, 0.88 ) }
    dend_32 { pt3dadd( -37.0605, -69.6781, 2.60012, 0.66 ) }
    dend_32 { pt3dadd( -37.3964, -70.291, 2.60362, 0.66 ) }
    dend_32 { pt3dadd( -37.7163, -70.7862, 2.6067, 0.81 ) }
    dend_32 { pt3dadd( -38.102, -71.3072, 2.61722, 0.96 ) }
    dend_32 { pt3dadd( -38.5417, -71.8213, 2.65985, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -38.9891, -72.3261, 2.73488, 0.88 ) }
    dend_32 { pt3dadd( -39.5909, -73.0527, 2.88309, 0.88 ) }
    dend_32 { pt3dadd( -40.0518, -73.6837, 3.0427, 1.03 ) }
    dend_32 { pt3dadd( -40.2713, -74.0588, 3.15077, 1.03 ) }
    dend_32 { pt3dadd( -40.6874, -74.9888, 3.42753, 0.59 ) }
    dend_32 { pt3dadd( -40.8933, -75.5961, 3.60245, 0.74 ) }
    dend_32 { pt3dadd( -41.1281, -76.4118, 3.81634, 0.88 ) }
    dend_32 { pt3dadd( -41.2542, -76.8984, 3.92514, 0.88 ) }
    dend_32 { pt3dadd( -41.4748, -77.7371, 4.07906, 0.74 ) }
    dend_32 { pt3dadd( -41.6876, -78.5502, 4.19912, 0.88 ) }
    dend_32 { pt3dadd( -41.8695, -79.1575, 4.25685, 0.88 ) }
    dend_32 { pt3dadd( -42.199, -80.0116, 4.32522, 0.66 ) }
    dend_32 { pt3dadd( -42.4855, -80.6241, 4.37109, 0.66 ) }
    dend_32 { pt3dadd( -42.7298, -81.099, 4.41015, 0.96 ) }
    dend_32 { pt3dadd( -43.1206, -81.8124, 4.48598, 0.74 ) }
    dend_32 { pt3dadd( -43.6645, -82.7398, 4.61245, 0.74 ) }
    dend_32 { pt3dadd( -44.0488, -83.363, 4.7061, 0.96 ) }
    dend_32 { pt3dadd( -44.3814, -83.8782, 4.78608, 0.96 ) }
    dend_32 { pt3dadd( -44.7867, -84.4637, 4.88222, 0.88 ) }
    dend_32 { pt3dadd( -45.2382, -85.0568, 4.98059, 0.81 ) }
    dend_32 { pt3dadd( -45.8688, -85.7834, 5.10652, 0.66 ) }
    dend_32 { pt3dadd( -46.5737, -86.5201, 5.24873, 0.59 ) }
    dend_32 { pt3dadd( -47.087, -87.0134, 5.3539, 0.81 ) }
    dend_32 { pt3dadd( -47.5586, -87.4558, 5.44675, 0.81 ) }
    dend_32 { pt3dadd( -48.2668, -88.0869, 5.57215, 0.66 ) }
    dend_32 { pt3dadd( -48.8978, -88.6095, 5.67886, 0.88 ) }
    dend_32 { pt3dadd( -49.4382, -89.0001, 5.77761, 1.47 ) }
    dend_32 { pt3dadd( -49.8132, -89.2124, 5.85334, 1.62 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -16.1804, -21.1518, 2.71142, 0.66 ) }
    dend_28 { pt3dadd( -17.6925, -21.0811, 2.32157, 0.66 ) }
    dend_28 { pt3dadd( -18.6733, -20.9741, 2.02295, 0.81 ) }
    dend_28 { pt3dadd( -19.7402, -20.8156, 1.66048, 1.11 ) }
    dend_28 { pt3dadd( -20.7305, -20.6402, 1.30332, 1.11 ) }
    dend_28 { pt3dadd( -21.5594, -20.4746, 0.999843, 1.11 ) }
    dend_28 { pt3dadd( -22.6798, -20.2392, 0.573456, 1.03 ) }
    dend_28 { pt3dadd( -23.8247, -19.9512, 0.0715764, 1.18 ) }
    dend_28 { pt3dadd( -24.4686, -19.758, -0.215497, 1.18 ) }
    dend_28 { pt3dadd( -25.1525, -19.514, -0.510942, 1.18 ) }
    dend_28 { pt3dadd( -26.0123, -19.1485, -0.874666, 1.11 ) }
    dend_28 { pt3dadd( -27.0961, -18.6121, -1.27963, 0.96 ) }
    dend_28 { pt3dadd( -28.0948, -18.0291, -1.61695, 0.96 ) }
    dend_28 { pt3dadd( -29.1765, -17.2597, -1.95907, 0.96 ) }
    dend_28 { pt3dadd( -30.0842, -16.4536, -2.24317, 0.88 ) }
    dend_28 { pt3dadd( -30.7979, -15.6059, -2.44611, 0.88 ) }
    dend_28 { pt3dadd( -31.5632, -14.3142, -2.66716, 0.88 ) }
    dend_28 { pt3dadd( -31.9773, -13.2955, -2.80008, 0.81 ) }
    dend_28 { pt3dadd( -32.2791, -12.1726, -2.93708, 0.88 ) }
    dend_28 { pt3dadd( -32.4499, -11.2203, -3.06795, 0.88 ) }
    dend_28 { pt3dadd( -32.6435, -9.69424, -3.32639, 0.81 ) }
    dend_28 { pt3dadd( -32.7989, -8.28138, -3.62579, 0.88 ) }
    dend_28 { pt3dadd( -32.9494, -6.95621, -3.97987, 0.88 ) }
    dend_28 { pt3dadd( -33.1827, -5.34222, -4.4472, 0.96 ) }
    dend_28 { pt3dadd( -33.3685, -4.37009, -4.74293, 0.96 ) }
    dend_28 { pt3dadd( -33.6507, -3.18643, -5.12589, 1.11 ) }
    dend_28 { pt3dadd( -34.0044, -1.99806, -5.53388, 1.11 ) }
    dend_28 { pt3dadd( -34.477, -0.702436, -5.96473, 1.03 ) }
    dend_28 { pt3dadd( -34.9088, 0.251638, -6.26369, 0.88 ) }
    dend_28 { pt3dadd( -35.553, 1.42956, -6.62056, 0.88 ) }
    dend_28 { pt3dadd( -36.1787, 2.41147, -6.85301, 1.03 ) }
    dend_28 { pt3dadd( -37.2587, 3.86013, -7.14986, 1.11 ) }
    dend_28 { pt3dadd( -37.9238, 4.60445, -7.28747, 1.11 ) }
    dend_28 { pt3dadd( -39.103, 5.65806, -7.41465, 0.88 ) }
    dend_28 { pt3dadd( -39.8033, 6.15472, -7.43886, 1.03 ) }
    dend_28 { pt3dadd( -41.1536, 6.95475, -7.40501, 0.81 ) }
    dend_28 { pt3dadd( -42.1389, 7.49302, -7.32736, 0.66 ) }
    dend_28 { pt3dadd( -42.8437, 7.88353, -7.22905, 0.66 ) }
    dend_28 { pt3dadd( -44.2396, 8.78226, -6.96834, 0.81 ) }
    dend_28 { pt3dadd( -45.0284, 9.42299, -6.83662, 0.81 ) }
    dend_28 { pt3dadd( -45.6828, 10.1138, -6.79075, 0.74 ) }
    dend_28 { pt3dadd( -46.0816, 10.6315, -6.87182, 0.74 ) }
    dend_28 { pt3dadd( -46.6075, 11.2835, -7.04074, 0.74 ) }
    dend_28 { pt3dadd( -47.2221, 11.9456, -7.35355, 0.74 ) }
    dend_28 { pt3dadd( -47.9239, 12.5142, -7.8129, 0.88 ) }
    dend_28 { pt3dadd( -48.8298, 13.0322, -8.42176, 1.03 ) }
    dend_28 { pt3dadd( -49.8226, 13.4151, -9.11356, 1.18 ) }
    dend_28 { pt3dadd( -51.0468, 13.7163, -10.0462, 0.81 ) }
    dend_28 { pt3dadd( -51.7475, 13.8136, -10.6212, 0.81 ) }
    dend_28 { pt3dadd( -52.819, 13.8567, -11.6107, 0.81 ) }
    dend_28 { pt3dadd( -53.7255, 13.8554, -12.5453, 1.03 ) }
    dend_28 { pt3dadd( -54.6136, 13.8703, -13.5788, 0.88 ) }
    dend_28 { pt3dadd( -55.8536, 13.963, -15.1451, 0.96 ) }
    dend_28 { pt3dadd( -56.4339, 14.071, -15.9488, 1.18 ) }
    dend_28 { pt3dadd( -57.5007, 14.4173, -17.4501, 1.4 ) }
    dend_28 { pt3dadd( -58.1216, 14.7452, -18.2886, 1.18 ) }
    dend_28 { pt3dadd( -58.971, 15.3148, -19.4168, 0.88 ) }
    dend_28 { pt3dadd( -59.5678, 15.8346, -20.1599, 0.88 ) }
    dend_28 { pt3dadd( -60.2381, 16.5738, -20.902, 1.03 ) }
    dend_28 { pt3dadd( -60.683, 17.1429, -21.3433, 0.88 ) }
    dend_28 { pt3dadd( -61.463, 18.2916, -21.9833, 1.47 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 89/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -16.1804, -21.1518, 2.71142, 1.4 ) }
    dend_27 { pt3dadd( -17.031, -20.3433, 3.00015, 1.4 ) }
    dend_27 { pt3dadd( -17.7879, -19.6508, 3.24041, 1.25 ) }
    dend_27 { pt3dadd( -18.4554, -19.0397, 3.47322, 1.03 ) }
    dend_27 { pt3dadd( -19.1148, -18.4143, 3.68347, 1.03 ) }
    dend_27 { pt3dadd( -19.5884, -17.9377, 3.8351, 0.88 ) }
    dend_27 { pt3dadd( -20.0397, -17.4411, 4.00953, 0.88 ) }
    dend_27 { pt3dadd( -20.4211, -16.9608, 4.2175, 1.03 ) }
    dend_27 { pt3dadd( -20.7378, -16.4306, 4.44188, 1.03 ) }
    dend_27 { pt3dadd( -20.9972, -15.7958, 4.70117, 0.74 ) }
    dend_27 { pt3dadd( -21.1513, -15.2876, 4.89198, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -21.3728, -14.2833, 5.22939, 0.88 ) }
    dend_27 { pt3dadd( -21.516, -13.3214, 5.54866, 1.03 ) }
    dend_27 { pt3dadd( -21.6128, -12.3489, 5.86324, 1.03 ) }
    dend_27 { pt3dadd( -21.6405, -11.7684, 6.02745, 1.03 ) }
    dend_27 { pt3dadd( -21.636, -10.9907, 6.25538, 0.74 ) }
    dend_27 { pt3dadd( -21.5945, -10.1577, 6.45947, 1.11 ) }
    dend_27 { pt3dadd( -21.5396, -9.47399, 6.61322, 0.96 ) }
    dend_27 { pt3dadd( -21.4994, -8.97648, 6.73027, 0.88 ) }
    dend_27 { pt3dadd( -21.4101, -8.0347, 6.97757, 0.81 ) }
    dend_27 { pt3dadd( -21.3273, -6.99065, 7.24567, 0.74 ) }
    dend_27 { pt3dadd( -21.2677, -6.0517, 7.46867, 0.81 ) }
    dend_27 { pt3dadd( -21.2529, -5.05884, 7.68972, 1.03 ) }
    dend_27 { pt3dadd( -21.2734, -4.15081, 7.85456, 1.03 ) }
    dend_27 { pt3dadd( -21.3142, -3.1863, 7.99891, 0.88 ) }
    dend_27 { pt3dadd( -21.3683, -2.33245, 8.09859, 0.88 ) }
    dend_27 { pt3dadd( -21.4255, -1.51515, 8.1458, 1.11 ) }
    dend_27 { pt3dadd( -21.4723, -0.923408, 8.15731, 1.11 ) }
    dend_27 { pt3dadd( -21.5454, -0.124202, 8.13748, 0.74 ) }
    dend_27 { pt3dadd( -21.6072, 0.647416, 8.11972, 0.81 ) }
    dend_27 { pt3dadd( -21.6951, 1.65444, 8.08838, 0.81 ) }
    dend_27 { pt3dadd( -21.7593, 2.53717, 8.02512, 0.96 ) }
    dend_27 { pt3dadd( -21.8143, 3.40975, 7.93489, 0.66 ) }
    dend_27 { pt3dadd( -21.8529, 4.36798, 7.81456, 0.52 ) }
    dend_27 { pt3dadd( -21.885, 5.23945, 7.69839, 0.74 ) }
    dend_27 { pt3dadd( -21.908, 5.74726, 7.64032, 0.74 ) }
    dend_27 { pt3dadd( -21.9773, 6.88305, 7.5258, 0.74 ) }
    dend_27 { pt3dadd( -22.0515, 7.75759, 7.45358, 0.74 ) }
    dend_27 { pt3dadd( -22.1733, 8.64647, 7.4047, 0.74 ) }
    dend_27 { pt3dadd( -22.3998, 9.65939, 7.3747, 0.66 ) }
    dend_27 { pt3dadd( -22.7286, 10.6507, 7.3686, 0.96 ) }
    dend_27 { pt3dadd( -22.9809, 11.2779, 7.39027, 0.96 ) }
    dend_27 { pt3dadd( -23.2349, 11.8367, 7.44408, 0.96 ) }
    dend_27 { pt3dadd( -23.7489, 12.9184, 7.56508, 0.81 ) }
    dend_27 { pt3dadd( -24.1552, 13.7837, 7.66711, 0.96 ) }
    dend_27 { pt3dadd( -24.513, 14.6714, 7.76644, 1.11 ) }
    dend_27 { pt3dadd( -24.7598, 15.4341, 7.86097, 0.96 ) }
    dend_27 { pt3dadd( -24.9935, 16.3608, 7.99684, 0.88 ) }
    dend_27 { pt3dadd( -25.1504, 17.2631, 8.13661, 0.88 ) }
    dend_27 { pt3dadd( -25.2229, 18.015, 8.25691, 0.88 ) }
    dend_27 { pt3dadd( -25.2817, 19.0911, 8.4127, 1.03 ) }
    dend_27 { pt3dadd( -25.33, 20.122, 8.53763, 0.74 ) }
    dend_27 { pt3dadd( -25.3644, 20.5625, 8.57771, 0.74 ) }
    dend_27 { pt3dadd( -25.4766, 21.3388, 8.62442, 0.88 ) }
    dend_27 { pt3dadd( -25.5859, 21.8441, 8.65317, 0.88 ) }
    dend_27 { pt3dadd( -25.8558, 22.7419, 8.69652, 0.74 ) }
    dend_27 { pt3dadd( -26.1717, 23.5376, 8.73072, 0.66 ) }
    dend_27 { pt3dadd( -26.4261, 24.0497, 8.74812, 0.66 ) }
    dend_27 { pt3dadd( -27.1047, 25.1526, 8.81037, 1.03 ) }
    dend_27 { pt3dadd( -27.4281, 25.6109, 8.83332, 1.03 ) }
    dend_27 { pt3dadd( -27.9011, 26.252, 8.85472, 0.81 ) }
    dend_27 { pt3dadd( -28.2474, 26.7343, 8.85652, 0.81 ) }
    dend_27 { pt3dadd( -28.6902, 27.3709, 8.80778, 0.52 ) }
    dend_27 { pt3dadd( -29.0002, 27.8474, 8.73645, 0.52 ) }
    dend_27 { pt3dadd( -29.4214, 28.5551, 8.58215, 0.74 ) }
    dend_27 { pt3dadd( -29.7783, 29.2347, 8.41236, 0.81 ) }
    dend_27 { pt3dadd( -30.1077, 29.9779, 8.22162, 0.81 ) }
    dend_27 { pt3dadd( -30.3876, 30.7367, 8.04126, 0.88 ) }
    dend_27 { pt3dadd( -30.5795, 31.3492, 7.91671, 1.03 ) }
    dend_27 { pt3dadd( -30.7412, 31.9079, 7.82215, 1.03 ) }
    dend_27 { pt3dadd( -30.9819, 32.7195, 7.71198, 0.88 ) }
    dend_27 { pt3dadd( -31.2451, 33.5591, 7.59733, 0.74 ) }
    dend_27 { pt3dadd( -31.5664, 34.5294, 7.46453, 0.96 ) }
    dend_27 { pt3dadd( -31.8167, 35.2438, 7.36847, 1.03 ) }
    dend_27 { pt3dadd( -32.0819, 35.9116, 7.26851, 1.03 ) }
    dend_27 { pt3dadd( -32.4167, 36.6346, 7.15289, 0.88 ) }
    dend_27 { pt3dadd( -32.9323, 37.5471, 7.00034, 0.96 ) }
    dend_27 { pt3dadd( -33.285, 38.0421, 6.90546, 0.81 ) }
    dend_27 { pt3dadd( -33.5836, 38.3776, 6.83593, 0.96 ) }
    dend_27 { pt3dadd( -34.0105, 38.7823, 6.75876, 1.18 ) }
    dend_27 { pt3dadd( -34.3771, 39.0932, 6.72254, 1.18 ) }
    dend_27 { pt3dadd( -34.8108, 39.4494, 6.71145, 1.11 ) }
    dend_27 { pt3dadd( -35.2453, 39.8381, 6.72659, 1.25 ) }
    dend_27 { pt3dadd( -35.6709, 40.3026, 6.75688, 1.25 ) }
    dend_27 { pt3dadd( -36.1003, 40.9096, 6.7958, 1.03 ) }
    dend_27 { pt3dadd( -36.4194, 41.5227, 6.83336, 0.88 ) }
    dend_27 { pt3dadd( -36.6781, 42.2635, 6.87564, 0.74 ) }
    dend_27 { pt3dadd( -36.8251, 43.0129, 6.91495, 0.74 ) }
    dend_27 { pt3dadd( -36.8827, 44.0097, 6.95897, 0.81 ) }
    dend_27 { pt3dadd( -36.8476, 44.7175, 6.96397, 0.81 ) }
    dend_27 { pt3dadd( -36.7594, 45.4069, 6.93015, 0.96 ) }
    dend_27 { pt3dadd( -36.6669, 46.0417, 6.85911, 0.96 ) }
    dend_27 { pt3dadd( -36.5941, 46.5657, 6.78014, 0.88 ) }
    dend_27 { pt3dadd( -36.5286, 47.2505, 6.67506, 0.88 ) }
    dend_27 { pt3dadd( -36.4957, 48.0733, 6.55794, 0.81 ) }
    dend_27 { pt3dadd( -36.4974, 48.8688, 6.46203, 0.74 ) }
    dend_27 { pt3dadd( -36.5297, 49.8888, 6.37427, 0.88 ) }
    dend_27 { pt3dadd( -36.5598, 50.5509, 6.34767, 0.88 ) }
    dend_27 { pt3dadd( -36.5722, 51.2718, 6.34331, 1.03 ) }
    dend_27 { pt3dadd( -36.5371, 52.0456, 6.36387, 0.96 ) }
    dend_27 { pt3dadd( -36.4276, 52.6889, 6.40748, 0.88 ) }
    dend_27 { pt3dadd( -36.2504, 53.219, 6.444, 1.03 ) }
    dend_27 { pt3dadd( -35.9019, 53.909, 6.48987, 0.96 ) }
    dend_27 { pt3dadd( -35.5677, 54.4804, 6.51188, 0.88 ) }
    dend_27 { pt3dadd( -35.2525, 54.9811, 6.51337, 0.88 ) }
    dend_27 { pt3dadd( -34.8174, 55.7188, 6.5102, 0.81 ) }
    dend_27 { pt3dadd( -34.417, 56.5069, 6.50758, 0.74 ) }
    dend_27 { pt3dadd( -33.9772, 57.4998, 6.51051, 0.81 ) }
    dend_27 { pt3dadd( -33.6911, 58.2485, 6.51084, 1.03 ) }
    dend_27 { pt3dadd( -33.5771, 58.5935, 6.51363, 1.03 ) }
    dend_27 { pt3dadd( -33.263, 59.6342, 6.52088, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -33.0151, 60.4977, 6.51909, 0.88 ) }
    dend_27 { pt3dadd( -32.7787, 61.2602, 6.50872, 0.88 ) }
    dend_27 { pt3dadd( -32.4282, 62.2044, 6.47045, 0.88 ) }
    dend_27 { pt3dadd( -32.1596, 62.784, 6.44443, 0.88 ) }
    dend_27 { pt3dadd( -31.8484, 63.3367, 6.41946, 1.11 ) }
    dend_27 { pt3dadd( -31.4691, 63.9346, 6.39356, 1.11 ) }
    dend_27 { pt3dadd( -30.9742, 64.7098, 6.36178, 0.81 ) }
    dend_27 { pt3dadd( -30.5446, 65.4241, 6.33835, 0.96 ) }
    dend_27 { pt3dadd( -30.0362, 66.3165, 6.32202, 0.96 ) }
    dend_27 { pt3dadd( -29.6019, 67.1207, 6.28294, 0.88 ) }
    dend_27 { pt3dadd( -29.0564, 68.1996, 6.20839, 0.88 ) }
    dend_27 { pt3dadd( -28.7257, 68.9254, 6.1344, 1.03 ) }
    dend_27 { pt3dadd( -28.4411, 69.6884, 6.03571, 1.03 ) }
    dend_27 { pt3dadd( -28.1473, 70.7865, 5.87458, 0.88 ) }
    dend_27 { pt3dadd( -28.0096, 71.5807, 5.74869, 0.88 ) }
    dend_27 { pt3dadd( -27.9423, 72.1734, 5.64569, 0.74 ) }
    dend_27 { pt3dadd( -27.887, 72.8431, 5.52982, 0.88 ) }
    dend_27 { pt3dadd( -27.8393, 73.7865, 5.38465, 0.81 ) }
    dend_27 { pt3dadd( -27.8321, 74.9631, 5.26367, 0.81 ) }
    dend_27 { pt3dadd( -27.8717, 76.0925, 5.22266, 0.88 ) }
    dend_27 { pt3dadd( -27.9075, 76.6116, 5.24189, 0.88 ) }
    dend_27 { pt3dadd( -28.0382, 77.8775, 5.34118, 0.81 ) }
    dend_27 { pt3dadd( -28.2108, 79.0389, 5.4775, 0.74 ) }
    dend_27 { pt3dadd( -28.4584, 80.1986, 5.65679, 0.88 ) }
    dend_27 { pt3dadd( -28.7001, 80.9827, 5.80545, 0.96 ) }
    dend_27 { pt3dadd( -29.1335, 82.1158, 6.04599, 1.03 ) }
    dend_27 { pt3dadd( -29.4866, 82.9949, 6.25653, 0.88 ) }
    dend_27 { pt3dadd( -29.909, 84.0312, 6.51294, 1.11 ) }
    dend_27 { pt3dadd( -30.1505, 84.6707, 6.66359, 1.25 ) }
    dend_27 { pt3dadd( -30.4529, 85.6403, 6.85892, 0.81 ) }
    dend_27 { pt3dadd( -30.6885, 86.6492, 7.03686, 0.66 ) }
    dend_27 { pt3dadd( -30.9345, 88.1715, 7.29438, 0.66 ) }
    dend_27 { pt3dadd( -31.0296, 88.9673, 7.41689, 0.96 ) }
    dend_27 { pt3dadd( -31.0868, 89.5576, 7.49335, 0.96 ) }
    dend_27 { pt3dadd( -31.1604, 90.2888, 7.55506, 0.96 ) }
    dend_27 { pt3dadd( -31.257, 90.9272, 7.57601, 0.81 ) }
    dend_27 { pt3dadd( -31.4345, 91.5458, 7.55443, 0.59 ) }
    dend_27 { pt3dadd( -31.7279, 92.2192, 7.48063, 0.66 ) }
    dend_27 { pt3dadd( -31.9749, 92.6978, 7.4239, 0.96 ) }
    dend_27 { pt3dadd( -32.1833, 93.0779, 7.37955, 0.96 ) }
    dend_27 { pt3dadd( -32.7329, 94.0804, 7.2863, 0.74 ) }
    dend_27 { pt3dadd( -33.0807, 94.788, 7.25681, 0.66 ) }
    dend_27 { pt3dadd( -33.2824, 95.2721, 7.27538, 0.88 ) }
    dend_27 { pt3dadd( -33.47, 95.792, 7.33664, 0.88 ) }
    dend_27 { pt3dadd( -33.6983, 96.4329, 7.44031, 0.74 ) }
    dend_27 { pt3dadd( -33.8964, 96.9747, 7.56269, 0.74 ) }
    dend_27 { pt3dadd( -34.178, 97.8004, 7.78335, 0.81 ) }
    dend_27 { pt3dadd( -34.4379, 98.6124, 8.00472, 0.66 ) }
    dend_27 { pt3dadd( -34.7184, 99.5261, 8.24523, 0.81 ) }
    dend_27 { pt3dadd( -35.0236, 100.528, 8.50182, 0.96 ) }
    dend_27 { pt3dadd( -35.3045, 101.437, 8.71583, 1.11 ) }
    dend_27 { pt3dadd( -35.5847, 102.359, 8.89926, 0.81 ) }
    dend_27 { pt3dadd( -35.8408, 103.206, 9.04584, 0.59 ) }
    dend_27 { pt3dadd( -36.0463, 103.881, 9.14951, 0.81 ) }
    dend_27 { pt3dadd( -36.3373, 104.818, 9.29488, 0.59 ) }
    dend_27 { pt3dadd( -36.5977, 105.652, 9.41921, 0.74 ) }
    dend_27 { pt3dadd( -36.8663, 106.461, 9.52408, 1.03 ) }
    dend_27 { pt3dadd( -37.1555, 107.296, 9.61632, 1.03 ) }
    dend_27 { pt3dadd( -37.4313, 108.159, 9.66501, 0.74 ) }
    dend_27 { pt3dadd( -37.6199, 108.832, 9.66064, 0.74 ) }
    dend_27 { pt3dadd( -37.866, 109.799, 9.59215, 0.74 ) }
    dend_27 { pt3dadd( -38.0954, 110.776, 9.50913, 0.59 ) }
    dend_27 { pt3dadd( -38.2281, 111.383, 9.45858, 0.59 ) }
    dend_27 { pt3dadd( -38.4644, 112.411, 9.3793, 0.66 ) }
    dend_27 { pt3dadd( -38.6508, 113.082, 9.34273, 0.52 ) }
    dend_27 { pt3dadd( -38.9154, 113.824, 9.32573, 0.74 ) }
    dend_27 { pt3dadd( -39.2441, 114.571, 9.34222, 0.96 ) }
    dend_27 { pt3dadd( -39.6055, 115.296, 9.40846, 0.74 ) }
    dend_27 { pt3dadd( -40.2011, 116.333, 9.54992, 0.74 ) }
    dend_27 { pt3dadd( -40.6921, 117.082, 9.65908, 0.88 ) }
    dend_27 { pt3dadd( -41.0871, 117.628, 9.7107, 0.88 ) }
    dend_27 { pt3dadd( -41.6594, 118.366, 9.73152, 0.74 ) }
    dend_27 { pt3dadd( -42.4087, 119.266, 9.69617, 0.74 ) }
    dend_27 { pt3dadd( -43.1193, 120.093, 9.63742, 0.81 ) }
    dend_27 { pt3dadd( -43.7481, 120.859, 9.57466, 0.96 ) }
    dend_27 { pt3dadd( -44.3444, 121.655, 9.50539, 0.88 ) }
    dend_27 { pt3dadd( -44.8091, 122.361, 9.4443, 0.88 ) }
    dend_27 { pt3dadd( -45.3756, 123.401, 9.35856, 0.81 ) }
    dend_27 { pt3dadd( -45.705, 124.17, 9.28845, 0.81 ) }
    dend_27 { pt3dadd( -46.069, 125.279, 9.19035, 0.96 ) }
    dend_27 { pt3dadd( -46.3555, 126.287, 9.108, 1.11 ) }
    dend_27 { pt3dadd( -46.6229, 127.255, 9.03202, 0.81 ) }
    dend_27 { pt3dadd( -46.911, 128.245, 8.94775, 0.81 ) }
    dend_27 { pt3dadd( -47.1426, 128.95, 8.88306, 0.81 ) }
    dend_27 { pt3dadd( -47.5017, 129.841, 8.80094, 0.81 ) }
    dend_27 { pt3dadd( -48.2242, 131.247, 8.67958, 0.96 ) }
    dend_27 { pt3dadd( -48.7472, 132.047, 8.62167, 0.96 ) }
    dend_27 { pt3dadd( -49.3548, 132.812, 8.58232, 1.03 ) }
    dend_27 { pt3dadd( -49.9573, 133.479, 8.56631, 1.11 ) }
    dend_27 { pt3dadd( -50.6201, 134.177, 8.57355, 0.88 ) }
    dend_27 { pt3dadd( -51.2674, 134.847, 8.59495, 0.66 ) }
    dend_27 { pt3dadd( -52.0203, 135.637, 8.62155, 0.66 ) }
    dend_27 { pt3dadd( -52.8398, 136.58, 8.67609, 0.74 ) }
    dend_27 { pt3dadd( -53.3817, 137.298, 8.73839, 0.88 ) }
    dend_27 { pt3dadd( -53.8145, 137.965, 8.81341, 0.81 ) }
    dend_27 { pt3dadd( -54.1457, 138.555, 8.89226, 0.81 ) }
    dend_27 { pt3dadd( -54.3925, 139.062, 8.95962, 0.81 ) }
    dend_27 { pt3dadd( -54.8931, 140.168, 9.09716, 0.59 ) }
    dend_27 { pt3dadd( -55.2656, 140.951, 9.18182, 0.74 ) }
    dend_27 { pt3dadd( -55.5837, 141.524, 9.21948, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( -55.9131, 142.008, 9.22043, 0.74 ) }
    dend_27 { pt3dadd( -56.4358, 142.62, 9.17559, 0.88 ) }
    dend_27 { pt3dadd( -56.9199, 143.072, 9.09992, 0.88 ) }
    dend_27 { pt3dadd( -57.586, 143.569, 8.95709, 0.74 ) }
    dend_27 { pt3dadd( -58.3438, 144.08, 8.76862, 0.88 ) }
    dend_27 { pt3dadd( -58.9888, 144.525, 8.59337, 0.66 ) }
    dend_27 { pt3dadd( -59.5501, 144.931, 8.4417, 0.66 ) }
    dend_27 { pt3dadd( -59.9864, 145.262, 8.34035, 0.66 ) }
    dend_27 { pt3dadd( -60.4853, 145.658, 8.24919, 0.59 ) }
    dend_27 { pt3dadd( -60.9948, 146.094, 8.19514, 0.44 ) }
    dend_27 { pt3dadd( -61.706, 146.763, 8.19331, 0.88 ) }
    dend_27 { pt3dadd( -62.2812, 147.391, 8.22505, 1.03 ) }
    dend_27 { pt3dadd( -62.8104, 148.072, 8.27557, 0.74 ) }
    dend_27 { pt3dadd( -63.3293, 148.833, 8.34053, 0.74 ) }
    dend_27 { pt3dadd( -63.7966, 149.574, 8.40432, 0.74 ) }
    dend_27 { pt3dadd( -64.1904, 150.183, 8.45835, 0.74 ) }
    dend_27 { pt3dadd( -64.7033, 150.984, 8.51018, 0.44 ) }
    dend_27 { pt3dadd( -65.1595, 151.731, 8.54906, 0.66 ) }
    dend_27 { pt3dadd( -65.7967, 152.812, 8.59427, 0.81 ) }
    dend_27 { pt3dadd( -66.3344, 153.74, 8.63154, 0.81 ) }
    dend_27 { pt3dadd( -66.9186, 154.726, 8.6714, 0.66 ) }
    dend_27 { pt3dadd( -67.4494, 155.612, 8.71841, 0.66 ) }
    dend_27 { pt3dadd( -68.0007, 156.488, 8.80241, 0.66 ) }
    dend_27 { pt3dadd( -68.4461, 157.157, 8.86007, 0.74 ) }
    dend_27 { pt3dadd( -68.9711, 157.899, 8.89602, 0.74 ) }
    dend_27 { pt3dadd( -69.545, 158.665, 8.89274, 0.59 ) }
    dend_27 { pt3dadd( -70.0185, 159.261, 8.84214, 0.81 ) }
    dend_27 { pt3dadd( -70.6147, 159.941, 8.72459, 0.59 ) }
    dend_27 { pt3dadd( -71.2053, 160.59, 8.54534, 0.74 ) }
    dend_27 { pt3dadd( -71.7021, 161.189, 8.35397, 0.81 ) }
    dend_27 { pt3dadd( -71.9545, 161.533, 8.23492, 0.81 ) }
    dend_27 { pt3dadd( -72.3918, 162.229, 8.04089, 0.81 ) }
    dend_27 { pt3dadd( -72.6728, 162.733, 7.94363, 0.81 ) }
    dend_27 { pt3dadd( -73.001, 163.39, 7.88954, 0.59 ) }
    dend_27 { pt3dadd( -73.428, 164.264, 7.92506, 0.59 ) }
    dend_27 { pt3dadd( -73.8822, 165.118, 8.02657, 0.66 ) }
    dend_27 { pt3dadd( -74.371, 165.91, 8.19993, 0.66 ) }
    dend_27 { pt3dadd( -74.8949, 166.597, 8.46002, 0.59 ) }
    dend_27 { pt3dadd( -75.5609, 167.326, 8.85467, 0.81 ) }
    dend_27 { pt3dadd( -76.1392, 167.892, 9.21304, 0.81 ) }
    dend_27 { pt3dadd( -76.971, 168.644, 9.73651, 0.52 ) }
    dend_27 { pt3dadd( -77.6872, 169.288, 10.1736, 0.52 ) }
    dend_27 { pt3dadd( -78.6747, 170.208, 10.6436, 0.74 ) }
    dend_27 { pt3dadd( -79.2105, 170.747, 10.8243, 0.74 ) }
    dend_27 { pt3dadd( -79.8023, 171.376, 10.9229, 1.25 ) }
    dend_27 { pt3dadd( -80.2759, 171.895, 10.9148, 1.25 ) }
    dend_27 { pt3dadd( -80.9036, 172.561, 10.7638, 0.96 ) }
    dend_27 { pt3dadd( -81.8038, 173.45, 10.4024, 0.81 ) }
    dend_27 { pt3dadd( -82.3861, 173.941, 10.1278, 0.74 ) }
    dend_27 { pt3dadd( -83.057, 174.377, 9.84449, 0.52 ) }
    dend_27 { pt3dadd( -83.6109, 174.631, 9.65932, 0.52 ) }
    dend_27 { pt3dadd( -84.8411, 174.992, 9.31468, 0.44 ) }
    dend_27 { pt3dadd( -85.8042, 175.125, 9.10698, 0.52 ) }
    dend_27 { pt3dadd( -86.7289, 175.104, 8.97239, 0.66 ) }
    dend_27 { pt3dadd( -87.6332, 174.962, 8.87672, 0.66 ) }
    dend_27 { pt3dadd( -88.4016, 174.758, 8.80894, 0.66 ) }
    dend_27 { pt3dadd( -88.9935, 174.553, 8.78795, 0.66 ) }
    dend_27 { pt3dadd( -89.4986, 174.331, 8.78748, 0.52 ) }
    dend_27 { pt3dadd( -90.336, 173.925, 8.77545, 0.44 ) }
    dend_27 { pt3dadd( -91.0159, 173.587, 8.75062, 0.37 ) }
    dend_27 { pt3dadd( -91.9329, 173.108, 8.70997, 0.37 ) }
    dend_27 { pt3dadd( -92.6405, 172.714, 8.67264, 0.37 ) }
    dend_27 { pt3dadd( -93.5649, 172.136, 8.61477, 0.74 ) }
    dend_27 { pt3dadd( -94.1814, 171.696, 8.5675, 0.74 ) }
    dend_27 { pt3dadd( -94.8357, 171.153, 8.50211, 0.74 ) }
    dend_27 { pt3dadd( -95.421, 170.602, 8.44338, 0.44 ) }
    dend_27 { pt3dadd( -95.927, 170.092, 8.39949, 0.44 ) }
    dend_27 { pt3dadd( -96.3241, 169.708, 8.39758, 0.66 ) }
    dend_27 { pt3dadd( -96.9939, 169.089, 8.50299, 0.66 ) }
    dend_27 { pt3dadd( -97.5738, 168.557, 8.62887, 0.52 ) }
    dend_27 { pt3dadd( -98.103, 168.059, 8.72896, 0.52 ) }
    dend_27 { pt3dadd( -98.5694, 167.575, 8.79384, 0.52 ) }
    dend_27 { pt3dadd( -99.0815, 166.941, 8.84608, 0.66 ) }
    dend_27 { pt3dadd( -99.658, 166.032, 8.86719, 0.59 ) }
    dend_27 { pt3dadd( -100.074, 165.149, 8.83545, 0.37 ) }
    dend_27 { pt3dadd( -100.39, 164.314, 8.77538, 0.37 ) }
    dend_27 { pt3dadd( -100.648, 163.52, 8.66983, 0.29 ) }
    dend_27 { pt3dadd( -100.833, 162.88, 8.55939, 0.29 ) }
    dend_27 { pt3dadd( -101.097, 161.958, 8.3407, 0.44 ) }
    dend_27 { pt3dadd( -101.313, 161.326, 8.15523, 0.44 ) }
    dend_27 { pt3dadd( -101.609, 160.621, 7.97863, 0.66 ) }
    dend_27 { pt3dadd( -101.97, 159.95, 7.83114, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 82/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -97.4486, 131.136, 37.3512, 0.66 ) }
    dend_22 { pt3dadd( -96.3218, 131.756, 39.2605, 0.66 ) }
    dend_22 { pt3dadd( -95.7141, 132.174, 40.2272, 0.66 ) }
    dend_22 { pt3dadd( -94.3191, 133.377, 42.4592, 0.66 ) }
    dend_22 { pt3dadd( -93.7669, 133.957, 43.4091, 0.66 ) }
    dend_22 { pt3dadd( -93.1186, 134.792, 44.6294, 0.44 ) }
    dend_22 { pt3dadd( -92.8707, 135.202, 45.1585, 0.44 ) }
    dend_22 { pt3dadd( -92.5326, 135.763, 45.7606, 0.74 ) }
    dend_22 { pt3dadd( -92.3303, 136.278, 46.1973, 0.74 ) }
    dend_22 { pt3dadd( -92.2389, 137.156, 46.658, 0.66 ) }
    dend_22 { pt3dadd( -92.2128, 137.74, 46.9492, 0.44 ) }
    dend_22 { pt3dadd( -92.159, 138.542, 47.3377, 0.37 ) }
    dend_22 { pt3dadd( -92.0397, 139.097, 47.6559, 0.37 ) }
    dend_22 { pt3dadd( -91.6995, 139.782, 48.1959, 0.81 ) }
    dend_22 { pt3dadd( -91.4742, 140.136, 48.4671, 0.81 ) }
    dend_22 { pt3dadd( -90.9896, 140.823, 48.9412, 0.44 ) }
    dend_22 { pt3dadd( -90.5819, 141.451, 49.3383, 0.44 ) }
    dend_22 { pt3dadd( -90.285, 142.074, 49.6752, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( -89.9825, 143.715, 50.3095, 0.52 ) }
    dend_22 { pt3dadd( -90.0622, 145.195, 50.7045, 0.81 ) }
    dend_22 { pt3dadd( -90.192, 145.788, 50.8178, 0.81 ) }
    dend_22 { pt3dadd( -90.6533, 147.193, 51.0065, 0.52 ) }
    dend_22 { pt3dadd( -91.1283, 148.565, 51.1322, 0.52 ) }
    dend_22 { pt3dadd( -91.6274, 150.017, 51.24, 0.52 ) }
    dend_22 { pt3dadd( -91.8984, 150.867, 51.274, 0.81 ) }
    dend_22 { pt3dadd( -92.1525, 151.846, 51.3652, 0.81 ) }
    dend_22 { pt3dadd( -92.4101, 153.194, 51.5112, 0.44 ) }
    dend_22 { pt3dadd( -92.5393, 154.5, 51.6616, 0.44 ) }
    dend_22 { pt3dadd( -92.5454, 155.279, 51.7717, 0.44 ) }
    dend_22 { pt3dadd( -92.483, 156.537, 51.9777, 0.44 ) }
    dend_22 { pt3dadd( -92.4045, 157.549, 52.1766, 0.74 ) }
    dend_22 { pt3dadd( -92.3563, 158.125, 52.31, 0.74 ) }
    dend_22 { pt3dadd( -92.322, 158.798, 52.4862, 0.44 ) }
    dend_22 { pt3dadd( -92.3334, 159.676, 52.7218, 0.29 ) }
    dend_22 { pt3dadd( -92.3616, 160.58, 52.9704, 0.88 ) }
    dend_22 { pt3dadd( -92.3882, 161.475, 53.2465, 0.88 ) }
    dend_22 { pt3dadd( -92.4046, 162.107, 53.4222, 0.88 ) }
    dend_22 { pt3dadd( -92.4186, 162.807, 53.617, 0.66 ) }
    dend_22 { pt3dadd( -92.4446, 163.918, 53.9045, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -97.4486, 131.136, 37.3512, 0.52 ) }
    dend_21 { pt3dadd( -98.4709, 131.43, 37.9173, 0.52 ) }
    dend_21 { pt3dadd( -99.6026, 131.915, 38.5175, 0.52 ) }
    dend_21 { pt3dadd( -100.568, 132.45, 39.0151, 0.66 ) }
    dend_21 { pt3dadd( -101.813, 133.307, 39.636, 0.81 ) }
    dend_21 { pt3dadd( -102.341, 133.74, 39.8902, 0.81 ) }
    dend_21 { pt3dadd( -103.356, 134.706, 40.3635, 0.66 ) }
    dend_21 { pt3dadd( -104.131, 135.651, 40.7846, 0.88 ) }
    dend_21 { pt3dadd( -104.566, 136.28, 41.0164, 0.88 ) }
    dend_21 { pt3dadd( -105.093, 137.115, 41.2528, 0.66 ) }
    dend_21 { pt3dadd( -105.555, 137.913, 41.4559, 0.66 ) }
    dend_21 { pt3dadd( -105.991, 138.719, 41.6803, 0.66 ) }
    dend_21 { pt3dadd( -106.581, 139.914, 42.0496, 0.66 ) }
    dend_21 { pt3dadd( -106.899, 140.636, 42.3048, 0.59 ) }
    dend_21 { pt3dadd( -107.324, 141.713, 42.7964, 0.52 ) }
    dend_21 { pt3dadd( -107.633, 142.594, 43.3147, 0.52 ) }
    dend_21 { pt3dadd( -107.845, 143.259, 43.7739, 0.44 ) }
    dend_21 { pt3dadd( -108.13, 144.19, 44.4922, 0.44 ) }
    dend_21 { pt3dadd( -108.341, 144.946, 45.0997, 0.44 ) }
    dend_21 { pt3dadd( -108.659, 146.173, 46.1133, 0.59 ) }
    dend_21 { pt3dadd( -108.919, 147.19, 46.9198, 0.74 ) }
    dend_21 { pt3dadd( -109.085, 147.776, 47.3414, 0.59 ) }
    dend_21 { pt3dadd( -109.392, 148.731, 47.9602, 0.81 ) }
    dend_21 { pt3dadd( -109.563, 149.161, 48.1932, 0.81 ) }
    dend_21 { pt3dadd( -109.954, 149.974, 48.4961, 0.81 ) }
    dend_21 { pt3dadd( -110.527, 150.956, 48.7399, 0.37 ) }
    dend_21 { pt3dadd( -110.934, 151.56, 48.8595, 0.37 ) }
    dend_21 { pt3dadd( -111.476, 152.304, 48.9713, 0.37 ) }
    dend_21 { pt3dadd( -112.099, 153.088, 49.0629, 0.37 ) }
    dend_21 { pt3dadd( -112.717, 153.797, 49.1184, 0.37 ) }
    dend_21 { pt3dadd( -113.824, 154.874, 49.1884, 0.96 ) }
    dend_21 { pt3dadd( -114.434, 155.382, 49.2507, 1.11 ) }
    dend_21 { pt3dadd( -115.556, 156.246, 49.3682, 0.59 ) }
    dend_21 { pt3dadd( -116.371, 156.847, 49.4551, 0.52 ) }
    dend_21 { pt3dadd( -117.228, 157.485, 49.5455, 0.52 ) }
    dend_21 { pt3dadd( -118.426, 158.414, 49.6667, 0.66 ) }
    dend_21 { pt3dadd( -119.482, 159.264, 49.7643, 1.25 ) }
    dend_21 { pt3dadd( -119.965, 159.687, 49.8251, 1.4 ) }
    dend_21 { pt3dadd( -121.146, 160.827, 50.0198, 0.52 ) }
    dend_21 { pt3dadd( -121.874, 161.622, 50.1474, 0.52 ) }
    dend_21 { pt3dadd( -123.036, 163.037, 50.3602, 0.52 ) }
    dend_21 { pt3dadd( -123.68, 163.91, 50.4567, 0.52 ) }
    dend_21 { pt3dadd( -124.401, 164.946, 50.5346, 0.52 ) }
    dend_21 { pt3dadd( -125.178, 166.11, 50.6557, 0.66 ) }
    dend_21 { pt3dadd( -125.675, 166.907, 50.7584, 0.74 ) }
    dend_21 { pt3dadd( -126.369, 168.053, 50.9337, 0.88 ) }
    dend_21 { pt3dadd( -126.957, 169.049, 51.1112, 0.37 ) }
    dend_21 { pt3dadd( -127.483, 169.975, 51.2663, 0.29 ) }
    dend_21 { pt3dadd( -128.014, 170.912, 51.4151, 0.37 ) }
    dend_21 { pt3dadd( -128.436, 171.693, 51.5283, 0.52 ) }
    dend_21 { pt3dadd( -128.687, 172.145, 51.5733, 0.74 ) }
    dend_21 { pt3dadd( -129.099, 172.836, 51.6658, 0.74 ) }
    dend_21 { pt3dadd( -129.725, 173.691, 51.8061, 0.44 ) }
    dend_21 { pt3dadd( -130.31, 174.33, 51.9231, 0.44 ) }
    dend_21 { pt3dadd( -130.99, 174.972, 52.0423, 0.29 ) }
    dend_21 { pt3dadd( -131.643, 175.558, 52.2078, 0.29 ) }
    dend_21 { pt3dadd( -133.153, 176.936, 52.6932, 0.37 ) }
    dend_21 { pt3dadd( -133.979, 177.743, 53.0256, 0.37 ) }
    dend_21 { pt3dadd( -134.848, 178.686, 53.449, 0.37 ) }
    dend_21 { pt3dadd( -135.179, 179.089, 53.6176, 0.37 ) }
    dend_21 { pt3dadd( -135.807, 179.907, 53.9384, 0.29 ) }
    dend_21 { pt3dadd( -136.189, 180.409, 54.1134, 0.29 ) }
    dend_21 { pt3dadd( -136.614, 180.941, 54.2462, 0.29 ) }
    dend_21 { pt3dadd( -137.358, 181.818, 54.5225, 0.29 ) }
    dend_21 { pt3dadd( -138.132, 182.619, 54.8193, 0.37 ) }
    dend_21 { pt3dadd( -138.796, 183.2, 55.0611, 0.37 ) }
    dend_21 { pt3dadd( -139.774, 183.902, 55.3796, 0.37 ) }
    dend_21 { pt3dadd( -140.663, 184.431, 55.689, 0.29 ) }
    dend_21 { pt3dadd( -141.817, 185.039, 56.1279, 0.29 ) }
    dend_21 { pt3dadd( -142.38, 185.308, 56.3849, 0.29 ) }
    dend_21 { pt3dadd( -143.309, 185.74, 56.9159, 0.88 ) }
    dend_21 { pt3dadd( -143.443, 185.069, 57.1366, 1.18 ) }
    dend_21 { pt3dadd( -143.523, 184.539, 57.2911, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -17.3452, 28.6176, 15.7037, 0.66 ) }
    dend_17 { pt3dadd( -18.8706, 27.4252, 15.6393, 0.66 ) }
    dend_17 { pt3dadd( -19.8967, 26.7218, 15.6209, 0.66 ) }
    dend_17 { pt3dadd( -20.5569, 26.3268, 15.6017, 0.88 ) }
    dend_17 { pt3dadd( -21.5858, 25.8195, 15.5199, 0.74 ) }
    dend_17 { pt3dadd( -22.3324, 25.5248, 15.4448, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_17 { pt3dadd( -23.261, 25.2369, 15.3404, 1.18 ) }
    dend_17 { pt3dadd( -24.3306, 25.0925, 15.2519, 1.18 ) }
    dend_17 { pt3dadd( -25.0058, 25.1119, 15.1617, 1.18 ) }
    dend_17 { pt3dadd( -26.4226, 25.3594, 14.9076, 0.66 ) }
    dend_17 { pt3dadd( -27.2539, 25.5762, 14.741, 0.59 ) }
    dend_17 { pt3dadd( -27.8338, 25.7388, 14.621, 0.59 ) }
    dend_17 { pt3dadd( -28.892, 26.0043, 14.3583, 0.52 ) }
    dend_17 { pt3dadd( -29.6378, 26.1325, 14.1541, 0.52 ) }
    dend_17 { pt3dadd( -30.5606, 26.2391, 13.9289, 0.52 ) }
    dend_17 { pt3dadd( -31.9856, 26.3952, 13.6217, 0.52 ) }
    dend_17 { pt3dadd( -33.0876, 26.5288, 13.3958, 0.74 ) }
    dend_17 { pt3dadd( -34.3218, 26.7272, 13.1629, 0.44 ) }
    dend_17 { pt3dadd( -35.5182, 27.001, 12.9587, 0.44 ) }
    dend_17 { pt3dadd( -36.9806, 27.4009, 12.7287, 0.66 ) }
    dend_17 { pt3dadd( -37.9165, 27.7478, 12.5749, 0.81 ) }
    dend_17 { pt3dadd( -38.6822, 28.1399, 12.4146, 0.96 ) }
    dend_17 { pt3dadd( -39.1437, 28.4185, 12.3032, 0.96 ) }
    dend_17 { pt3dadd( -39.7052, 28.7953, 12.1258, 0.59 ) }
    dend_17 { pt3dadd( -40.1764, 29.1072, 11.9188, 0.44 ) }
    dend_17 { pt3dadd( -40.8064, 29.4159, 11.628, 0.44 ) }
    dend_17 { pt3dadd( -41.704, 29.7794, 11.296, 0.29 ) }
    dend_17 { pt3dadd( -42.3406, 30.0254, 11.1182, 0.29 ) }
    dend_17 { pt3dadd( -43.117, 30.3131, 10.9582, 0.59 ) }
    dend_17 { pt3dadd( -43.6547, 30.4902, 10.9123, 0.59 ) }
    dend_17 { pt3dadd( -45.2161, 30.8442, 11.0037, 0.74 ) }
    dend_17 { pt3dadd( -46.2172, 31.06, 11.1769, 0.59 ) }
    dend_17 { pt3dadd( -47.118, 31.2515, 11.424, 0.59 ) }
    dend_17 { pt3dadd( -47.9087, 31.4146, 11.6916, 0.66 ) }
    dend_17 { pt3dadd( -48.9986, 31.6546, 12.0993, 0.66 ) }
    dend_17 { pt3dadd( -50.6089, 32.044, 12.7207, 0.96 ) }
    dend_17 { pt3dadd( -51.8793, 32.348, 13.1708, 0.52 ) }
    dend_17 { pt3dadd( -52.68, 32.4835, 13.4394, 0.52 ) }
    dend_17 { pt3dadd( -53.3731, 32.5812, 13.6591, 0.59 ) }
    dend_17 { pt3dadd( -54.5488, 32.7762, 13.9882, 0.37 ) }
    dend_17 { pt3dadd( -55.2364, 32.8842, 14.1021, 0.37 ) }
    dend_17 { pt3dadd( -56.2756, 32.9806, 14.1637, 0.37 ) }
    dend_17 { pt3dadd( -57.5923, 32.9808, 14.1627, 0.59 ) }
    dend_17 { pt3dadd( -58.2196, 32.9833, 14.1285, 0.59 ) }
    dend_17 { pt3dadd( -58.7452, 32.9994, 14.0793, 0.59 ) }
    dend_17 { pt3dadd( -59.994, 33.1039, 13.8973, 0.29 ) }
    dend_17 { pt3dadd( -60.8554, 33.2467, 13.7218, 0.29 ) }
    dend_17 { pt3dadd( -61.423, 33.3944, 13.5807, 0.59 ) }
    dend_17 { pt3dadd( -62.3137, 33.6844, 13.3278, 0.59 ) }
    dend_17 { pt3dadd( -63.0145, 33.9046, 13.1207, 0.52 ) }
    dend_17 { pt3dadd( -63.9643, 34.1646, 12.8397, 0.52 ) }
    dend_17 { pt3dadd( -64.9023, 34.3701, 12.5744, 0.52 ) }
    dend_17 { pt3dadd( -65.6061, 34.5053, 12.3616, 0.52 ) }
    dend_17 { pt3dadd( -66.6743, 34.6386, 12.0178, 0.74 ) }
    dend_17 { pt3dadd( -67.4133, 34.667, 11.7805, 0.88 ) }
    dend_17 { pt3dadd( -67.9596, 34.6606, 11.6142, 0.88 ) }
    dend_17 { pt3dadd( -68.9213, 34.6119, 11.3673, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.3452, 28.6176, 15.7037, 1.18 ) }
    dend_12 { pt3dadd( -16.3075, 30.1392, 16.1642, 1.18 ) }
    dend_12 { pt3dadd( -15.2861, 31.5124, 16.5823, 1.18 ) }
    dend_12 { pt3dadd( -14.2277, 32.8416, 16.986, 1.18 ) }
    dend_12 { pt3dadd( -12.9957, 34.3557, 17.516, 1.18 ) }
    dend_12 { pt3dadd( -11.854, 35.7974, 18.0448, 1.03 ) }
    dend_12 { pt3dadd( -10.9305, 37.0564, 18.4998, 1.25 ) }
    dend_12 { pt3dadd( -10.3867, 37.8318, 18.8031, 1.25 ) }
    dend_12 { pt3dadd( -9.47042, 39.3702, 19.1961, 0.96 ) }
    dend_12 { pt3dadd( -8.70037, 41.0624, 19.4047, 1.55 ) }
    dend_12 { pt3dadd( -8.35946, 42.085, 19.3971, 1.55 ) }
    dend_12 { pt3dadd( -7.97188, 43.9281, 19.2252, 1.25 ) }
    dend_12 { pt3dadd( -7.78979, 45.8179, 18.9449, 1.11 ) }
    dend_12 { pt3dadd( -7.87453, 50.3199, 18.0789, 0.81 ) }
    dend_12 { pt3dadd( -8.07493, 51.6482, 17.75, 1.03 ) }
    dend_12 { pt3dadd( -8.45715, 52.9144, 17.3464, 1.03 ) }
    dend_12 { pt3dadd( -9.20121, 54.3993, 16.9273, 0.88 ) }
    dend_12 { pt3dadd( -10.172, 55.56, 16.7368, 0.88 ) }
    dend_12 { pt3dadd( -11.4883, 56.5913, 17.01, 0.96 ) }
    dend_12 { pt3dadd( -12.4653, 57.2612, 17.4992, 0.96 ) }
    dend_12 { pt3dadd( -13.9611, 58.1659, 18.3224, 1.03 ) }
    dend_12 { pt3dadd( -16.3445, 59.4828, 19.8615, 1.25 ) }
    dend_12 { pt3dadd( -17.463, 60.0835, 20.7484, 1.18 ) }
    dend_12 { pt3dadd( -19.9482, 61.5358, 23.2472, 1.25 ) }
    dend_12 { pt3dadd( -21.0224, 62.2709, 24.6977, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -39.5824, 235.929, -7.68083, 0.22 ) }
    dend_7 { pt3dadd( -40.2742, 236.386, -7.09204, 0.22 ) }
    dend_7 { pt3dadd( -40.9452, 236.829, -6.52095, 0.44 ) }
    dend_7 { pt3dadd( -41.5398, 237.221, -6.01487, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -39.5824, 235.929, -7.68083, 0.22 ) }
    dend_6 { pt3dadd( -40.8489, 235.813, -7.1702, 0.22 ) }
    dend_6 { pt3dadd( -41.9854, 235.709, -6.712, 0.22 ) }
    dend_6 { pt3dadd( -42.8746, 235.628, -6.35351, 0.22 ) }
    dend_6 { pt3dadd( -43.2923, 235.59, -6.18507, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.3018, 183.563, 6.25061, 0.37 ) }
    dend_4 { pt3dadd( 12.6266, 184.93, 6.25592, 0.37 ) }
    dend_4 { pt3dadd( 12.9198, 185.848, 6.23777, 0.66 ) }
    dend_4 { pt3dadd( 13.2258, 186.766, 6.22237, 0.66 ) }
    dend_4 { pt3dadd( 13.6493, 188.1, 6.21714, 0.44 ) }
    dend_4 { pt3dadd( 13.9053, 188.98, 6.2333, 0.44 ) }
    dend_4 { pt3dadd( 14.377, 190.813, 6.31111, 0.88 ) }
    dend_4 { pt3dadd( 14.4282, 191.025, 6.32717, 1.03 ) }
    dend_4 { pt3dadd( 14.6686, 192.254, 6.45687, 0.66 ) }
    dend_4 { pt3dadd( 14.8356, 193.398, 6.59479, 0.88 ) }
    dend_4 { pt3dadd( 14.8935, 194.091, 6.69274, 0.88 ) }
    dend_4 { pt3dadd( 14.917, 194.991, 6.82964, 0.66 ) }
    dend_4 { pt3dadd( 14.8787, 196.17, 7.0227, 0.37 ) }
    dend_4 { pt3dadd( 14.8482, 197.039, 7.18959, 0.37 ) }
    dend_4 { pt3dadd( 14.785, 198.542, 7.51531, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( 14.7481, 199.475, 7.72783, 0.81 ) }
    dend_4 { pt3dadd( 14.709, 201.156, 8.10098, 0.37 ) }
    dend_4 { pt3dadd( 14.6885, 202.235, 8.33995, 0.37 ) }
    dend_4 { pt3dadd( 14.6568, 203.708, 8.66738, 0.81 ) }
    dend_4 { pt3dadd( 14.628, 204.45, 8.83458, 0.96 ) }
    dend_4 { pt3dadd( 14.5576, 205.873, 9.13813, 0.37 ) }
    dend_4 { pt3dadd( 14.4855, 207.088, 9.37352, 0.29 ) }
    dend_4 { pt3dadd( 14.3886, 208.486, 9.61636, 0.52 ) }
    dend_4 { pt3dadd( 14.231, 210.218, 9.90024, 0.74 ) }
    dend_4 { pt3dadd( 14.0996, 211.256, 10.074, 0.88 ) }
    dend_4 { pt3dadd( 13.9477, 212.301, 10.2668, 0.66 ) }
    dend_4 { pt3dadd( 13.7611, 213.556, 10.507, 0.59 ) }
    dend_4 { pt3dadd( 13.5941, 214.783, 10.7412, 0.74 ) }
    dend_4 { pt3dadd( 13.471, 215.912, 10.9468, 0.74 ) }
    dend_4 { pt3dadd( 13.3779, 217.307, 11.1468, 0.59 ) }
    dend_4 { pt3dadd( 13.3688, 218.325, 11.2483, 0.44 ) }
    dend_4 { pt3dadd( 13.427, 219.83, 11.3374, 0.29 ) }
    dend_4 { pt3dadd( 13.5347, 220.931, 11.352, 0.37 ) }
    dend_4 { pt3dadd( 13.8296, 222.773, 11.2933, 0.52 ) }
    dend_4 { pt3dadd( 14.1656, 224.394, 11.1899, 0.66 ) }
    dend_4 { pt3dadd( 14.4153, 225.503, 11.1089, 0.66 ) }
    dend_4 { pt3dadd( 14.6268, 226.447, 11.0875, 0.37 ) }
    dend_4 { pt3dadd( 14.8624, 227.538, 11.1175, 0.52 ) }
    dend_4 { pt3dadd( 15.2309, 229.07, 11.1896, 0.37 ) }
    dend_4 { pt3dadd( 15.6406, 230.626, 11.2951, 0.52 ) }
    dend_4 { pt3dadd( 15.8764, 231.595, 11.4035, 0.59 ) }
    dend_4 { pt3dadd( 16.2853, 233.602, 11.6838, 0.81 ) }
    dend_4 { pt3dadd( 16.4852, 234.882, 11.89, 0.29 ) }
    dend_4 { pt3dadd( 16.5578, 235.83, 12.0761, 0.29 ) }
    dend_4 { pt3dadd( 16.5656, 236.705, 12.2951, 0.59 ) }
    dend_4 { pt3dadd( 16.5192, 237.842, 12.6167, 0.59 ) }
    dend_4 { pt3dadd( 16.3717, 239.501, 13.1165, 0.44 ) }
    dend_4 { pt3dadd( 16.1159, 241.337, 13.6877, 0.29 ) }
    dend_4 { pt3dadd( 15.8283, 243.005, 14.2538, 0.37 ) }
    dend_4 { pt3dadd( 15.6356, 243.994, 14.6075, 0.66 ) }
    dend_4 { pt3dadd( 15.3787, 245.32, 15.0798, 0.29 ) }
    dend_4 { pt3dadd( 15.0717, 246.975, 15.6551, 0.29 ) }
    dend_4 { pt3dadd( 14.6818, 249.071, 16.3857, 0.29 ) }
    dend_4 { pt3dadd( 14.4748, 250.214, 16.7733, 0.44 ) }
    dend_4 { pt3dadd( 14.4212, 250.539, 16.8736, 0.44 ) }
    dend_4 { pt3dadd( 14.2268, 251.659, 17.1823, 0.22 ) }
    dend_4 { pt3dadd( 14.1159, 252.32, 17.3615, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.3018, 183.563, 6.25061, 0.52 ) }
    dend_3 { pt3dadd( 12.8286, 183.127, 5.60779, 0.52 ) }
    dend_3 { pt3dadd( 13.1835, 182.781, 5.17654, 0.52 ) }
    dend_3 { pt3dadd( 13.6391, 182.353, 4.64103, 0.81 ) }
    dend_3 { pt3dadd( 14.0291, 182.019, 4.20393, 0.88 ) }
    dend_3 { pt3dadd( 14.6505, 181.545, 3.54063, 0.37 ) }
    dend_3 { pt3dadd( 15.3347, 181.023, 2.81022, 0.29 ) }
    dend_3 { pt3dadd( 16.219, 180.316, 1.8599, 0.29 ) }
    dend_3 { pt3dadd( 16.6841, 179.966, 1.36855, 0.44 ) }
    dend_3 { pt3dadd( 17.4489, 179.431, 0.588499, 0.44 ) }
    dend_3 { pt3dadd( 18.3335, 178.856, -0.252597, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 53/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -49.8132, -89.2124, 5.85334, 0.74 ) }
    dend_34 { pt3dadd( -50.5687, -89.0256, 6.5028, 0.74 ) }
    dend_34 { pt3dadd( -51.2245, -88.9371, 7.06674, 0.88 ) }
    dend_34 { pt3dadd( -51.8276, -88.945, 7.56418, 1.03 ) }
    dend_34 { pt3dadd( -52.4608, -89.0336, 8.0906, 0.88 ) }
    dend_34 { pt3dadd( -53.6647, -89.3109, 9.08471, 1.03 ) }
    dend_34 { pt3dadd( -53.9184, -89.3826, 9.27714, 1.03 ) }
    dend_34 { pt3dadd( -54.5764, -89.6817, 9.74922, 0.81 ) }
    dend_34 { pt3dadd( -55.3025, -90.1257, 10.2089, 0.66 ) }
    dend_34 { pt3dadd( -55.8024, -90.5526, 10.4672, 0.66 ) }
    dend_34 { pt3dadd( -56.1781, -90.9486, 10.6434, 0.52 ) }
    dend_34 { pt3dadd( -56.8142, -91.6978, 10.9079, 0.52 ) }
    dend_34 { pt3dadd( -57.3049, -92.3091, 11.1349, 0.52 ) }
    dend_34 { pt3dadd( -57.7365, -92.8692, 11.3638, 0.52 ) }
    dend_34 { pt3dadd( -58.795, -94.2465, 11.9615, 0.52 ) }
    dend_34 { pt3dadd( -59.4223, -95.0624, 12.32, 0.52 ) }
    dend_34 { pt3dadd( -59.9182, -95.6829, 12.6089, 0.52 ) }
    dend_34 { pt3dadd( -60.5908, -96.4346, 12.9904, 0.74 ) }
    dend_34 { pt3dadd( -61.0312, -96.8153, 13.2165, 0.96 ) }
    dend_34 { pt3dadd( -61.6105, -97.1624, 13.4533, 0.66 ) }
    dend_34 { pt3dadd( -62.0071, -97.3149, 13.5681, 0.66 ) }
    dend_34 { pt3dadd( -62.8237, -97.5499, 13.7197, 0.59 ) }
    dend_34 { pt3dadd( -63.8367, -97.756, 13.8472, 0.44 ) }
    dend_34 { pt3dadd( -64.5935, -97.8393, 13.9125, 0.44 ) }
    dend_34 { pt3dadd( -65.3858, -97.8768, 13.9557, 0.44 ) }
    dend_34 { pt3dadd( -66.0928, -97.8846, 13.9911, 0.44 ) }
    dend_34 { pt3dadd( -66.9301, -97.8883, 14.0241, 0.44 ) }
    dend_34 { pt3dadd( -67.4262, -97.8828, 14.0391, 0.44 ) }
    dend_34 { pt3dadd( -68.2264, -97.8795, 14.0239, 0.59 ) }
    dend_34 { pt3dadd( -68.6613, -97.8827, 13.9891, 0.52 ) }
    dend_34 { pt3dadd( -69.3719, -97.8932, 13.9137, 0.37 ) }
    dend_34 { pt3dadd( -70.1762, -97.9346, 13.8116, 0.52 ) }
    dend_34 { pt3dadd( -70.6238, -97.9874, 13.7465, 0.52 ) }
    dend_34 { pt3dadd( -71.563, -98.1337, 13.5589, 0.74 ) }
    dend_34 { pt3dadd( -72.1667, -98.2306, 13.4072, 0.59 ) }
    dend_34 { pt3dadd( -72.6718, -98.2929, 13.27, 0.59 ) }
    dend_34 { pt3dadd( -73.2205, -98.3334, 13.0973, 0.37 ) }
    dend_34 { pt3dadd( -73.7515, -98.3642, 12.9242, 0.29 ) }
    dend_34 { pt3dadd( -74.4799, -98.4143, 12.7082, 0.29 ) }
    dend_34 { pt3dadd( -74.9855, -98.4369, 12.5819, 0.37 ) }
    dend_34 { pt3dadd( -75.3822, -98.4663, 12.4939, 0.37 ) }
    dend_34 { pt3dadd( -75.8981, -98.5208, 12.3971, 0.37 ) }
    dend_34 { pt3dadd( -76.4758, -98.6058, 12.2841, 0.59 ) }
    dend_34 { pt3dadd( -76.9593, -98.7183, 12.1902, 0.74 ) }
    dend_34 { pt3dadd( -77.2266, -98.8046, 12.1296, 0.74 ) }
    dend_34 { pt3dadd( -77.7595, -98.9997, 11.9742, 0.44 ) }
    dend_34 { pt3dadd( -78.362, -99.2031, 11.7733, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_34 { pt3dadd( -79.0057, -99.4094, 11.542, 0.74 ) }
    dend_34 { pt3dadd( -79.7511, -99.6372, 11.2692, 0.29 ) }
    dend_34 { pt3dadd( -80.3739, -99.8245, 11.0434, 0.29 ) }
    dend_34 { pt3dadd( -81.2301, -100.118, 10.7518, 0.37 ) }
    dend_34 { pt3dadd( -81.788, -100.343, 10.5531, 0.37 ) }
    dend_34 { pt3dadd( -82.3018, -100.558, 10.3785, 0.29 ) }
    dend_34 { pt3dadd( -82.9591, -100.816, 10.18, 0.29 ) }
    dend_34 { pt3dadd( -83.4217, -100.963, 10.053, 0.29 ) }
    dend_34 { pt3dadd( -84.0396, -101.123, 9.9089, 0.29 ) }
    dend_34 { pt3dadd( -84.7886, -101.281, 9.76791, 0.29 ) }
    dend_34 { pt3dadd( -85.5741, -101.402, 9.64244, 0.29 ) }
    dend_34 { pt3dadd( -86.1741, -101.436, 9.5595, 0.29 ) }
    dend_34 { pt3dadd( -87.165, -101.413, 9.41967, 0.74 ) }
    dend_34 { pt3dadd( -87.7789, -101.351, 9.33525, 0.81 ) }
    dend_34 { pt3dadd( -88.5893, -101.218, 9.20989, 0.29 ) }
    dend_34 { pt3dadd( -88.9412, -101.162, 9.1553, 0.29 ) }
    dend_34 { pt3dadd( -89.592, -101.079, 9.02261, 0.88 ) }
    dend_34 { pt3dadd( -90.0625, -101.025, 8.90448, 1.03 ) }
    dend_34 { pt3dadd( -90.4383, -100.981, 8.79148, 0.52 ) }
    dend_34 { pt3dadd( -91.1191, -100.9, 8.56881, 0.29 ) }
    dend_34 { pt3dadd( -91.9033, -100.815, 8.31248, 0.29 ) }
    dend_34 { pt3dadd( -92.2223, -100.783, 8.22523, 0.52 ) }
    dend_34 { pt3dadd( -92.5337, -100.749, 8.15758, 0.52 ) }
    dend_34 { pt3dadd( -93.2134, -100.651, 8.03827, 0.44 ) }
    dend_34 { pt3dadd( -93.8179, -100.537, 7.93484, 0.59 ) }
    dend_34 { pt3dadd( -94.5312, -100.356, 7.82129, 0.81 ) }
    dend_34 { pt3dadd( -95.0069, -100.213, 7.73963, 0.81 ) }
    dend_34 { pt3dadd( -95.6437, -100.02, 7.62709, 0.81 ) }
    dend_34 { pt3dadd( -96.1224, -99.8779, 7.53358, 0.74 ) }
    dend_34 { pt3dadd( -96.8534, -99.6709, 7.41662, 0.66 ) }
    dend_34 { pt3dadd( -97.5782, -99.4917, 7.30816, 0.81 ) }
    dend_34 { pt3dadd( -98.1181, -99.3935, 7.23451, 0.81 ) }
    dend_34 { pt3dadd( -98.822, -99.3234, 7.15225, 0.59 ) }
    dend_34 { pt3dadd( -99.5665, -99.3132, 7.0813, 0.44 ) }
    dend_34 { pt3dadd( -100.559, -99.3755, 7.00351, 0.37 ) }
    dend_34 { pt3dadd( -101.287, -99.4653, 6.98173, 0.59 ) }
    dend_34 { pt3dadd( -101.926, -99.5599, 6.99199, 0.66 ) }
    dend_34 { pt3dadd( -102.48, -99.6381, 7.01588, 0.66 ) }
    dend_34 { pt3dadd( -102.799, -99.6756, 7.03423, 0.59 ) }
    dend_34 { pt3dadd( -103.382, -99.7161, 7.06974, 0.59 ) }
    dend_34 { pt3dadd( -104.096, -99.7223, 7.0746, 0.29 ) }
    dend_34 { pt3dadd( -104.69, -99.7134, 7.1137, 0.29 ) }
    dend_34 { pt3dadd( -105.151, -99.7136, 7.15058, 0.29 ) }
    dend_34 { pt3dadd( -105.716, -99.7423, 7.19596, 0.81 ) }
    dend_34 { pt3dadd( -106.108, -99.7963, 7.23462, 0.96 ) }
    dend_34 { pt3dadd( -106.6, -99.9218, 7.28937, 0.96 ) }
    dend_34 { pt3dadd( -107.495, -100.267, 7.31876, 0.22 ) }
    dend_34 { pt3dadd( -107.704, -100.368, 7.32346, 0.44 ) }
    dend_34 { pt3dadd( -108.033, -100.544, 7.34333, 0.44 ) }
    dend_34 { pt3dadd( -108.515, -100.814, 7.39628, 0.59 ) }
    dend_34 { pt3dadd( -108.744, -100.936, 7.42924, 0.81 ) }
    dend_34 { pt3dadd( -109.637, -101.358, 7.61967, 0.22 ) }
    dend_34 { pt3dadd( -110.172, -101.568, 7.75684, 0.81 ) }
    dend_34 { pt3dadd( -110.674, -101.735, 7.89572, 0.96 ) }
    dend_34 { pt3dadd( -111.086, -101.855, 8.02391, 0.96 ) }
    dend_34 { pt3dadd( -111.697, -102.007, 8.22498, 0.52 ) }
    dend_34 { pt3dadd( -112.931, -102.273, 8.64343, 1.92 ) }
    dend_34 { pt3dadd( -113.553, -102.388, 8.88081, 2.58 ) }
    dend_34 { pt3dadd( -114.102, -102.477, 9.07985, 2.73 ) }
    dend_34 { pt3dadd( -114.948, -102.613, 9.35767, 1.92 ) }
    dend_34 { pt3dadd( -115.874, -102.775, 9.60234, 1.11 ) }
    dend_34 { pt3dadd( -116.539, -102.901, 9.74244, 0.74 ) }
    dend_34 { pt3dadd( -117.414, -103.077, 9.84838, 0.74 ) }
    dend_34 { pt3dadd( -118.11, -103.238, 9.87849, 1.18 ) }
    dend_34 { pt3dadd( -119.001, -103.464, 9.85762, 0.37 ) }
    dend_34 { pt3dadd( -119.903, -103.705, 9.74738, 0.44 ) }
    dend_34 { pt3dadd( -120.445, -103.869, 9.63737, 0.88 ) }
    dend_34 { pt3dadd( -121.074, -104.093, 9.47118, 0.88 ) }
    dend_34 { pt3dadd( -121.759, -104.389, 9.2504, 0.81 ) }
    dend_34 { pt3dadd( -122.086, -104.551, 9.14778, 0.88 ) }
    dend_34 { pt3dadd( -122.495, -104.752, 9.05353, 0.74 ) }
    dend_34 { pt3dadd( -123.023, -104.993, 8.9943, 0.44 ) }
    dend_34 { pt3dadd( -123.521, -105.186, 8.99863, 0.74 ) }
    dend_34 { pt3dadd( -124.244, -105.402, 9.09348, 0.29 ) }
    dend_34 { pt3dadd( -124.572, -105.473, 9.15874, 0.29 ) }
    dend_34 { pt3dadd( -125.408, -105.636, 9.35405, 0.66 ) }
    dend_34 { pt3dadd( -125.767, -105.722, 9.44433, 0.66 ) }
    dend_34 { pt3dadd( -126.312, -105.868, 9.52417, 0.59 ) }
    dend_34 { pt3dadd( -126.667, -105.985, 9.52868, 0.37 ) }
    dend_34 { pt3dadd( -127.154, -106.175, 9.47816, 0.29 ) }
    dend_34 { pt3dadd( -127.705, -106.43, 9.37447, 0.29 ) }
    dend_34 { pt3dadd( -128.495, -106.849, 9.17231, 0.29 ) }
    dend_34 { pt3dadd( -129.443, -107.376, 8.90318, 0.29 ) }
    dend_34 { pt3dadd( -130.226, -107.821, 8.66982, 0.29 ) }
    dend_34 { pt3dadd( -130.792, -108.14, 8.49663, 0.22 ) }
    dend_34 { pt3dadd( -131.268, -108.385, 8.34894, 0.22 ) }
    dend_34 { pt3dadd( -131.268, -108.385, 8.34894, 0.52 ) }
    dend_34 { pt3dadd( -131.576, -108.492, 8.2699, 0.52 ) }
    dend_34 { pt3dadd( -132.196, -108.713, 8.22057, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -49.8132, -89.2124, 5.85334, 0.66 ) }
    dend_33 { pt3dadd( -50.1554, -90.6504, 6.03927, 0.66 ) }
    dend_33 { pt3dadd( -50.4101, -91.8305, 6.27539, 0.59 ) }
    dend_33 { pt3dadd( -50.5701, -92.507, 6.43469, 0.74 ) }
    dend_33 { pt3dadd( -50.806, -93.3348, 6.64382, 0.37 ) }
    dend_33 { pt3dadd( -51.0247, -93.9452, 6.80752, 0.59 ) }
    dend_33 { pt3dadd( -51.39, -94.8054, 7.07479, 0.52 ) }
    dend_33 { pt3dadd( -51.7401, -95.5059, 7.33755, 0.59 ) }
    dend_33 { pt3dadd( -52.0909, -96.1411, 7.58687, 0.29 ) }
    dend_33 { pt3dadd( -52.3827, -96.6684, 7.77804, 0.29 ) }
    dend_33 { pt3dadd( -52.7422, -97.3583, 7.97826, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_33 { pt3dadd( -53.163, -98.345, 8.15387, 0.52 ) }
    dend_33 { pt3dadd( -53.4711, -99.3076, 8.23942, 0.52 ) }
    dend_33 { pt3dadd( -53.6423, -100.095, 8.31722, 0.74 ) }
    dend_33 { pt3dadd( -53.7783, -100.886, 8.41608, 0.59 ) }
    dend_33 { pt3dadd( -53.9432, -101.895, 8.55705, 0.52 ) }
    dend_33 { pt3dadd( -54.1012, -102.793, 8.69988, 0.44 ) }
    dend_33 { pt3dadd( -54.2715, -103.473, 8.82628, 0.44 ) }
    dend_33 { pt3dadd( -54.7669, -104.798, 9.185, 0.66 ) }
    dend_33 { pt3dadd( -55.1459, -105.544, 9.43382, 0.29 ) }
    dend_33 { pt3dadd( -55.4489, -106.017, 9.60858, 0.29 ) }
    dend_33 { pt3dadd( -55.7589, -106.447, 9.76782, 0.29 ) }
    dend_33 { pt3dadd( -56.1261, -106.947, 9.93742, 0.66 ) }
    dend_33 { pt3dadd( -56.4144, -107.374, 10.0618, 0.88 ) }
    dend_33 { pt3dadd( -56.6827, -107.839, 10.1634, 0.88 ) }
    dend_33 { pt3dadd( -57.0702, -108.68, 10.3208, 0.59 ) }
    dend_33 { pt3dadd( -57.3766, -109.461, 10.4297, 0.52 ) }
    dend_33 { pt3dadd( -57.5468, -109.936, 10.4738, 0.52 ) }
    dend_33 { pt3dadd( -57.8355, -110.777, 10.4935, 0.74 ) }
    dend_33 { pt3dadd( -58.068, -111.411, 10.4751, 0.88 ) }
    dend_33 { pt3dadd( -58.3143, -112.01, 10.4416, 0.74 ) }
    dend_33 { pt3dadd( -58.6549, -112.81, 10.3857, 0.44 ) }
    dend_33 { pt3dadd( -58.9093, -113.403, 10.3455, 0.66 ) }
    dend_33 { pt3dadd( -59.3602, -114.515, 10.2848, 0.44 ) }
    dend_33 { pt3dadd( -59.5831, -115.111, 10.2626, 0.44 ) }
    dend_33 { pt3dadd( -59.819, -115.78, 10.2677, 0.74 ) }
    dend_33 { pt3dadd( -60.0582, -116.479, 10.3032, 0.74 ) }
    dend_33 { pt3dadd( -60.3369, -117.304, 10.3669, 0.74 ) }
    dend_33 { pt3dadd( -60.7332, -118.452, 10.4675, 0.52 ) }
    dend_33 { pt3dadd( -61.1071, -119.487, 10.5707, 0.66 ) }
    dend_33 { pt3dadd( -61.4489, -120.35, 10.6385, 0.66 ) }
    dend_33 { pt3dadd( -61.7379, -121.003, 10.6805, 0.74 ) }
    dend_33 { pt3dadd( -62.0814, -121.682, 10.6815, 0.52 ) }
    dend_33 { pt3dadd( -62.4757, -122.408, 10.6362, 0.29 ) }
    dend_33 { pt3dadd( -62.6918, -122.805, 10.5892, 0.29 ) }
    dend_33 { pt3dadd( -62.9201, -123.245, 10.5122, 0.29 ) }
    dend_33 { pt3dadd( -63.1703, -123.767, 10.4012, 0.59 ) }
    dend_33 { pt3dadd( -63.722, -124.98, 10.1352, 0.66 ) }
    dend_33 { pt3dadd( -63.9932, -125.671, 10.0133, 0.52 ) }
    dend_33 { pt3dadd( -64.2195, -126.355, 9.97036, 0.96 ) }
    dend_33 { pt3dadd( -64.4086, -127.079, 9.92272, 0.66 ) }
    dend_33 { pt3dadd( -64.6111, -128.085, 9.93088, 0.44 ) }
    dend_33 { pt3dadd( -64.6945, -128.655, 10.017, 0.44 ) }
    dend_33 { pt3dadd( -64.7409, -129.569, 10.3922, 0.44 ) }
    dend_33 { pt3dadd( -64.6524, -130.637, 11.0023, 0.66 ) }
    dend_33 { pt3dadd( -64.3866, -131.983, 11.8986, 0.96 ) }
    dend_33 { pt3dadd( -64.0693, -133.074, 12.6761, 0.81 ) }
    dend_33 { pt3dadd( -63.7278, -134.075, 13.3866, 0.88 ) }
    dend_33 { pt3dadd( -63.3897, -135.08, 14.0509, 0.66 ) }
    dend_33 { pt3dadd( -63.1732, -135.888, 14.5252, 0.66 ) }
    dend_33 { pt3dadd( -63.0544, -136.589, 14.861, 0.59 ) }
    dend_33 { pt3dadd( -63.0091, -137.287, 15.1611, 0.44 ) }
    dend_33 { pt3dadd( -63.0072, -137.938, 15.3282, 0.81 ) }
    dend_33 { pt3dadd( -63.0255, -138.53, 15.4153, 0.81 ) }
    dend_33 { pt3dadd( -63.0797, -139.421, 15.5044, 0.44 ) }
    dend_33 { pt3dadd( -63.17, -140.194, 15.5835, 0.44 ) }
    dend_33 { pt3dadd( -63.2776, -140.986, 15.6716, 0.66 ) }
    dend_33 { pt3dadd( -63.4131, -141.935, 15.7917, 0.59 ) }
    dend_33 { pt3dadd( -63.4754, -142.696, 15.8887, 0.52 ) }
    dend_33 { pt3dadd( -63.4675, -143.047, 15.9275, 0.74 ) }
    dend_33 { pt3dadd( -63.2897, -144.511, 16.0768, 0.29 ) }
    dend_33 { pt3dadd( -63.187, -145.039, 16.1291, 0.29 ) }
    dend_33 { pt3dadd( -62.992, -145.854, 16.2005, 0.29 ) }
    dend_33 { pt3dadd( -62.6823, -147.097, 16.3007, 0.52 ) }
    dend_33 { pt3dadd( -62.3215, -148.448, 16.4049, 0.37 ) }
    dend_33 { pt3dadd( -62.0953, -149.198, 16.468, 0.59 ) }
    dend_33 { pt3dadd( -61.9065, -149.754, 16.5442, 0.59 ) }
    dend_33 { pt3dadd( -61.6533, -150.496, 16.7027, 0.44 ) }
    dend_33 { pt3dadd( -61.3821, -151.269, 16.9539, 0.44 ) }
    dend_33 { pt3dadd( -61.2394, -151.705, 17.1381, 0.81 ) }
    dend_33 { pt3dadd( -61.0741, -152.183, 17.3701, 0.81 ) }
    dend_33 { pt3dadd( -60.7245, -153.112, 17.8141, 0.59 ) }
    dend_33 { pt3dadd( -60.4592, -153.803, 18.1298, 0.52 ) }
    dend_33 { pt3dadd( -60.194, -154.483, 18.4496, 0.52 ) }
    dend_33 { pt3dadd( -59.9392, -155.241, 18.7955, 0.52 ) }
    dend_33 { pt3dadd( -59.8273, -155.763, 18.9954, 0.29 ) }
    dend_33 { pt3dadd( -59.7812, -156.368, 19.1726, 0.29 ) }
    dend_33 { pt3dadd( -59.8022, -156.956, 19.3045, 0.52 ) }
    dend_33 { pt3dadd( -59.8626, -157.596, 19.4386, 0.52 ) }
    dend_33 { pt3dadd( -59.9531, -158.521, 19.6616, 0.29 ) }
    dend_33 { pt3dadd( -60.0247, -159.416, 19.9318, 0.29 ) }
    dend_33 { pt3dadd( -60.0639, -160.118, 20.1522, 0.52 ) }
    dend_33 { pt3dadd( -60.0842, -160.616, 20.3039, 0.52 ) }
    dend_33 { pt3dadd( -60.1271, -161.38, 20.5311, 0.29 ) }
    dend_33 { pt3dadd( -60.185, -162.184, 20.755, 0.52 ) }
    dend_33 { pt3dadd( -60.2292, -162.592, 20.8805, 0.52 ) }
    dend_33 { pt3dadd( -60.3339, -163.412, 21.1628, 0.52 ) }
    dend_33 { pt3dadd( -60.4666, -164.324, 21.5201, 0.74 ) }
    dend_33 { pt3dadd( -60.6904, -165.558, 22.0132, 0.22 ) }
    dend_33 { pt3dadd( -60.8796, -166.39, 22.3505, 0.22 ) }
    dend_33 { pt3dadd( -61.0821, -167.172, 22.6691, 0.22 ) }
    dend_33 { pt3dadd( -61.2855, -168.004, 23.0305, 0.52 ) }
    dend_33 { pt3dadd( -61.4272, -168.769, 23.4212, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -61.463, 18.2916, -21.9833, 0.81 ) }
    dend_30 { pt3dadd( -62.883, 18.4893, -22.0581, 0.81 ) }
    dend_30 { pt3dadd( -63.7662, 18.5469, -22.1191, 0.81 ) }
    dend_30 { pt3dadd( -65.1969, 18.5932, -22.2408, 0.74 ) }
    dend_30 { pt3dadd( -65.9911, 18.6363, -22.3131, 0.74 ) }
    dend_30 { pt3dadd( -66.7136, 18.7022, -22.3805, 0.81 ) }
    dend_30 { pt3dadd( -67.9274, 18.8814, -22.4922, 0.96 ) }
    dend_30 { pt3dadd( -68.7046, 19.0516, -22.5466, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_30 { pt3dadd( -69.298, 19.2459, -22.5851, 0.52 ) }
    dend_30 { pt3dadd( -70.2734, 19.8047, -22.7003, 0.74 ) }
    dend_30 { pt3dadd( -70.8198, 20.2677, -22.8021, 0.74 ) }
    dend_30 { pt3dadd( -71.503, 21.0222, -22.9792, 0.44 ) }
    dend_30 { pt3dadd( -72.1433, 21.8578, -23.1726, 0.44 ) }
    dend_30 { pt3dadd( -72.6145, 22.4838, -23.3352, 0.44 ) }
    dend_30 { pt3dadd( -73.5715, 23.6573, -23.6988, 0.81 ) }
    dend_30 { pt3dadd( -74.0949, 24.2145, -23.9205, 0.96 ) }
    dend_30 { pt3dadd( -74.8842, 24.8992, -24.2839, 0.96 ) }
    dend_30 { pt3dadd( -75.4699, 25.291, -24.5617, 0.88 ) }
    dend_30 { pt3dadd( -76.3138, 25.6933, -24.9494, 0.96 ) }
    dend_30 { pt3dadd( -77.1238, 25.9423, -25.295, 1.11 ) }
    dend_30 { pt3dadd( -77.7178, 26.0441, -25.5216, 1.11 ) }
    dend_30 { pt3dadd( -78.3311, 26.1019, -25.7418, 1.11 ) }
    dend_30 { pt3dadd( -78.8816, 26.1103, -25.9212, 0.74 ) }
    dend_30 { pt3dadd( -79.5339, 26.0769, -26.1205, 0.29 ) }
    dend_30 { pt3dadd( -80.4933, 25.9667, -26.3593, 0.29 ) }
    dend_30 { pt3dadd( -81.3467, 25.864, -26.526, 0.88 ) }
    dend_30 { pt3dadd( -82.0181, 25.8006, -26.6089, 1.03 ) }
    dend_30 { pt3dadd( -82.7739, 25.7469, -26.6498, 1.03 ) }
    dend_30 { pt3dadd( -83.534, 25.6944, -26.6623, 1.11 ) }
    dend_30 { pt3dadd( -84.855, 25.6213, -26.6351, 0.37 ) }
    dend_30 { pt3dadd( -85.8271, 25.5794, -26.5997, 0.29 ) }
    dend_30 { pt3dadd( -86.9192, 25.5353, -26.5889, 0.29 ) }
    dend_30 { pt3dadd( -87.8063, 25.4978, -26.6233, 0.96 ) }
    dend_30 { pt3dadd( -88.6448, 25.447, -26.6781, 1.18 ) }
    dend_30 { pt3dadd( -89.0747, 25.3936, -26.726, 1.33 ) }
    dend_30 { pt3dadd( -90.2924, 25.1424, -26.9315, 0.44 ) }
    dend_30 { pt3dadd( -91.6045, 24.7632, -27.1866, 0.44 ) }
    dend_30 { pt3dadd( -92.2447, 24.5552, -27.3263, 0.37 ) }
    dend_30 { pt3dadd( -92.7815, 24.3993, -27.4444, 0.37 ) }
    dend_30 { pt3dadd( -93.795, 24.1732, -27.6455, 0.37 ) }
    dend_30 { pt3dadd( -94.6174, 24.0613, -27.789, 0.59 ) }
    dend_30 { pt3dadd( -95.4081, 24.0346, -27.9017, 0.74 ) }
    dend_30 { pt3dadd( -96.3729, 24.057, -28.0273, 0.88 ) }
    dend_30 { pt3dadd( -97.1878, 24.1305, -28.1225, 0.88 ) }
    dend_30 { pt3dadd( -97.8895, 24.2366, -28.1811, 0.74 ) }
    dend_30 { pt3dadd( -98.9094, 24.4429, -28.2352, 0.29 ) }
    dend_30 { pt3dadd( -99.4712, 24.5573, -28.224, 0.22 ) }
    dend_30 { pt3dadd( -100.663, 24.7794, -28.146, 0.22 ) }
    dend_30 { pt3dadd( -101.853, 24.9561, -28.0168, 0.59 ) }
    dend_30 { pt3dadd( -102.633, 25.0426, -27.9164, 0.81 ) }
    dend_30 { pt3dadd( -103.794, 25.1431, -27.7582, 0.81 ) }
    dend_30 { pt3dadd( -105.248, 25.2083, -27.5384, 0.96 ) }
    dend_30 { pt3dadd( -106.341, 25.2451, -27.3806, 0.59 ) }
    dend_30 { pt3dadd( -107.33, 25.3208, -27.2513, 0.22 ) }
    dend_30 { pt3dadd( -108.132, 25.3982, -27.1787, 0.22 ) }
    dend_30 { pt3dadd( -108.791, 25.5057, -27.121, 0.44 ) }
    dend_30 { pt3dadd( -109.839, 25.7744, -27.0232, 0.59 ) }
    dend_30 { pt3dadd( -110.788, 26.0756, -26.9491, 0.52 ) }
    dend_30 { pt3dadd( -112.2, 26.5539, -26.8293, 0.66 ) }
    dend_30 { pt3dadd( -112.956, 26.8105, -26.7819, 0.66 ) }
    dend_30 { pt3dadd( -114.475, 27.2946, -26.7313, 0.66 ) }
    dend_30 { pt3dadd( -115.412, 27.5714, -26.7256, 0.59 ) }
    dend_30 { pt3dadd( -116.233, 27.7815, -26.8043, 0.44 ) }
    dend_30 { pt3dadd( -117.236, 27.9191, -27.0037, 0.37 ) }
    dend_30 { pt3dadd( -118.11, 27.9146, -27.246, 0.29 ) }
    dend_30 { pt3dadd( -118.752, 27.838, -27.465, 0.29 ) }
    dend_30 { pt3dadd( -119.387, 27.6999, -27.7228, 0.44 ) }
    dend_30 { pt3dadd( -120.694, 27.371, -28.2496, 0.59 ) }
    dend_30 { pt3dadd( -121.109, 27.2808, -28.4053, 0.59 ) }
    dend_30 { pt3dadd( -122.374, 27.033, -28.8202, 0.37 ) }
    dend_30 { pt3dadd( -123.437, 26.8268, -29.1401, 0.29 ) }
    dend_30 { pt3dadd( -124.123, 26.7049, -29.3359, 0.29 ) }
    dend_30 { pt3dadd( -124.471, 26.6502, -29.4177, 0.29 ) }
    dend_30 { pt3dadd( -125.434, 26.5179, -29.5731, 0.59 ) }
    dend_30 { pt3dadd( -125.928, 26.4599, -29.6519, 0.59 ) }
    dend_30 { pt3dadd( -126.426, 26.4349, -29.7361, 0.52 ) }
    dend_30 { pt3dadd( -127.032, 26.4544, -29.815, 0.66 ) }
    dend_30 { pt3dadd( -128.092, 26.5157, -29.9249, 0.29 ) }
    dend_30 { pt3dadd( -128.574, 26.5233, -29.9658, 0.29 ) }
    dend_30 { pt3dadd( -129.145, 26.4895, -29.9932, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 72/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -61.463, 18.2916, -21.9833, 0.74 ) }
    dend_29 { pt3dadd( -61.6345, 19.3695, -21.8531, 0.74 ) }
    dend_29 { pt3dadd( -61.8548, 20.6702, -21.724, 0.74 ) }
    dend_29 { pt3dadd( -62.1676, 22.247, -21.5941, 0.74 ) }
    dend_29 { pt3dadd( -62.4004, 23.1685, -21.5672, 0.74 ) }
    dend_29 { pt3dadd( -63.0463, 25.194, -21.5746, 0.88 ) }
    dend_29 { pt3dadd( -63.3925, 26.1161, -21.6066, 0.88 ) }
    dend_29 { pt3dadd( -63.7715, 26.9388, -21.7045, 0.96 ) }
    dend_29 { pt3dadd( -64.2761, 27.847, -21.8787, 0.81 ) }
    dend_29 { pt3dadd( -65.291, 29.402, -22.2688, 0.74 ) }
    dend_29 { pt3dadd( -66.1305, 30.6387, -22.6528, 0.96 ) }
    dend_29 { pt3dadd( -66.7919, 31.5951, -22.9884, 0.96 ) }
    dend_29 { pt3dadd( -67.5872, 32.7923, -23.4275, 0.81 ) }
    dend_29 { pt3dadd( -68.1634, 33.7576, -23.7929, 0.74 ) }
    dend_29 { pt3dadd( -68.5422, 34.5143, -24.0779, 0.74 ) }
    dend_29 { pt3dadd( -69.1479, 35.9695, -24.5919, 0.74 ) }
    dend_29 { pt3dadd( -69.4763, 36.8541, -24.8986, 0.88 ) }
    dend_29 { pt3dadd( -69.8064, 37.6937, -25.1655, 0.88 ) }
    dend_29 { pt3dadd( -70.1529, 38.4602, -25.3838, 0.66 ) }
    dend_29 { pt3dadd( -70.5726, 39.2354, -25.6277, 0.66 ) }
    dend_29 { pt3dadd( -71.0866, 40.0278, -25.8922, 0.81 ) }
    dend_29 { pt3dadd( -71.66, 40.7766, -26.1521, 0.81 ) }
    dend_29 { pt3dadd( -72.4009, 41.7061, -26.5444, 0.66 ) }
    dend_29 { pt3dadd( -72.9497, 42.3543, -26.836, 0.81 ) }
    dend_29 { pt3dadd( -73.5751, 43.091, -27.1896, 0.81 ) }
    dend_29 { pt3dadd( -74.037, 43.7029, -27.4788, 0.59 ) }
    dend_29 { pt3dadd( -74.3033, 44.1486, -27.6611, 0.59 ) }
    dend_29 { pt3dadd( -74.77, 45.0882, -27.9537, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_29 { pt3dadd( -75.1533, 45.9766, -28.1307, 0.59 ) }
    dend_29 { pt3dadd( -75.4872, 46.7962, -28.2629, 0.74 ) }
    dend_29 { pt3dadd( -75.8359, 47.6458, -28.417, 0.88 ) }
    dend_29 { pt3dadd( -76.3615, 48.7881, -28.6868, 1.25 ) }
    dend_29 { pt3dadd( -76.8745, 49.762, -28.985, 0.66 ) }
    dend_29 { pt3dadd( -77.3786, 50.6041, -29.2988, 0.66 ) }
    dend_29 { pt3dadd( -78.2228, 51.8767, -29.9003, 0.81 ) }
    dend_29 { pt3dadd( -78.9071, 52.7536, -30.3943, 0.81 ) }
    dend_29 { pt3dadd( -79.5599, 53.4541, -30.8707, 0.96 ) }
    dend_29 { pt3dadd( -80.196, 54.0111, -31.2994, 0.66 ) }
    dend_29 { pt3dadd( -80.8799, 54.5063, -31.6916, 0.52 ) }
    dend_29 { pt3dadd( -81.9332, 55.1541, -32.1695, 0.52 ) }
    dend_29 { pt3dadd( -82.8377, 55.6388, -32.4614, 1.11 ) }
    dend_29 { pt3dadd( -83.4523, 55.9627, -32.5837, 1.33 ) }
    dend_29 { pt3dadd( -84.3728, 56.4762, -32.6759, 0.66 ) }
    dend_29 { pt3dadd( -85.2384, 57.0027, -32.6952, 0.52 ) }
    dend_29 { pt3dadd( -85.8618, 57.4221, -32.6758, 0.66 ) }
    dend_29 { pt3dadd( -86.1962, 57.6793, -32.6482, 0.66 ) }
    dend_29 { pt3dadd( -87.0986, 58.4877, -32.5778, 0.44 ) }
    dend_29 { pt3dadd( -87.7947, 59.2126, -32.5266, 0.81 ) }
    dend_29 { pt3dadd( -88.2786, 59.7964, -32.513, 0.81 ) }
    dend_29 { pt3dadd( -88.9371, 60.6678, -32.5182, 0.88 ) }
    dend_29 { pt3dadd( -89.6392, 61.6398, -32.5485, 0.88 ) }
    dend_29 { pt3dadd( -90.3616, 62.6393, -32.6087, 0.59 ) }
    dend_29 { pt3dadd( -90.8928, 63.3541, -32.6803, 0.81 ) }
    dend_29 { pt3dadd( -91.6358, 64.2925, -32.797, 0.96 ) }
    dend_29 { pt3dadd( -92.1814, 64.9012, -32.8818, 0.96 ) }
    dend_29 { pt3dadd( -92.7878, 65.5377, -32.9963, 0.96 ) }
    dend_29 { pt3dadd( -93.808, 66.6048, -33.1898, 0.96 ) }
    dend_29 { pt3dadd( -94.7032, 67.5823, -33.3389, 0.88 ) }
    dend_29 { pt3dadd( -95.4188, 68.441, -33.4567, 0.88 ) }
    dend_29 { pt3dadd( -96.431, 69.8681, -33.6462, 0.81 ) }
    dend_29 { pt3dadd( -97.104, 71.0293, -33.7893, 0.52 ) }
    dend_29 { pt3dadd( -97.5448, 72.0399, -33.9021, 0.74 ) }
    dend_29 { pt3dadd( -97.8372, 73.0518, -34.0024, 0.74 ) }
    dend_29 { pt3dadd( -98.0184, 74.0286, -34.0999, 0.88 ) }
    dend_29 { pt3dadd( -98.176, 75.1516, -34.2111, 0.66 ) }
    dend_29 { pt3dadd( -98.3021, 76.1048, -34.3193, 0.88 ) }
    dend_29 { pt3dadd( -98.4797, 76.9783, -34.4635, 0.88 ) }
    dend_29 { pt3dadd( -98.7771, 77.8665, -34.7053, 0.66 ) }
    dend_29 { pt3dadd( -99.2626, 78.8107, -35.063, 0.66 ) }
    dend_29 { pt3dadd( -99.8475, 79.6091, -35.436, 0.96 ) }
    dend_29 { pt3dadd( -100.363, 80.1445, -35.6983, 0.96 ) }
    dend_29 { pt3dadd( -101.092, 80.7988, -36.0228, 0.74 ) }
    dend_29 { pt3dadd( -101.945, 81.5464, -36.3287, 0.66 ) }
    dend_29 { pt3dadd( -102.449, 82.0147, -36.4602, 0.66 ) }
    dend_29 { pt3dadd( -103.07, 82.6296, -36.5703, 0.66 ) }
    dend_29 { pt3dadd( -104.088, 83.7183, -36.7033, 1.03 ) }
    dend_29 { pt3dadd( -104.6, 84.3284, -36.7431, 1.03 ) }
    dend_29 { pt3dadd( -105.517, 85.5441, -36.8341, 0.74 ) }
    dend_29 { pt3dadd( -106.513, 87.0221, -37.0287, 0.88 ) }
    dend_29 { pt3dadd( -107.13, 87.9509, -37.2025, 0.74 ) }
    dend_29 { pt3dadd( -107.856, 89.0054, -37.4664, 0.96 ) }
    dend_29 { pt3dadd( -108.816, 90.302, -37.876, 0.59 ) }
    dend_29 { pt3dadd( -109.902, 91.6762, -38.3803, 0.52 ) }
    dend_29 { pt3dadd( -110.626, 92.5662, -38.7546, 0.66 ) }
    dend_29 { pt3dadd( -111.536, 93.7564, -39.2669, 0.81 ) }
    dend_29 { pt3dadd( -112.096, 94.568, -39.602, 1.03 ) }
    dend_29 { pt3dadd( -112.658, 95.4308, -39.9035, 0.74 ) }
    dend_29 { pt3dadd( -112.998, 95.9481, -40.0393, 0.96 ) }
    dend_29 { pt3dadd( -113.525, 96.7319, -40.1444, 0.96 ) }
    dend_29 { pt3dadd( -114.232, 97.759, -40.207, 0.59 ) }
    dend_29 { pt3dadd( -114.739, 98.5075, -40.2265, 0.59 ) }
    dend_29 { pt3dadd( -115.51, 99.5811, -40.2303, 0.74 ) }
    dend_29 { pt3dadd( -116.193, 100.421, -40.2324, 0.81 ) }
    dend_29 { pt3dadd( -117.087, 101.311, -40.252, 0.96 ) }
    dend_29 { pt3dadd( -118.034, 102.077, -40.2856, 1.18 ) }
    dend_29 { pt3dadd( -119.038, 102.747, -40.3392, 0.59 ) }
    dend_29 { pt3dadd( -119.85, 103.262, -40.45, 0.66 ) }
    dend_29 { pt3dadd( -120.612, 103.754, -40.6253, 0.66 ) }
    dend_29 { pt3dadd( -121.722, 104.501, -40.9456, 0.52 ) }
    dend_29 { pt3dadd( -122.473, 105.041, -41.2022, 0.81 ) }
    dend_29 { pt3dadd( -123.306, 105.653, -41.5167, 0.81 ) }
    dend_29 { pt3dadd( -124.949, 106.825, -42.18, 0.88 ) }
    dend_29 { pt3dadd( -125.814, 107.42, -42.5581, 0.59 ) }
    dend_29 { pt3dadd( -126.632, 107.951, -42.939, 0.81 ) }
    dend_29 { pt3dadd( -127.501, 108.492, -43.363, 0.81 ) }
    dend_29 { pt3dadd( -128.586, 109.13, -43.8902, 0.81 ) }
    dend_29 { pt3dadd( -129.24, 109.491, -44.1839, 0.81 ) }
    dend_29 { pt3dadd( -130.087, 109.907, -44.4933, 0.74 ) }
    dend_29 { pt3dadd( -130.926, 110.333, -44.8145, 0.59 ) }
    dend_29 { pt3dadd( -131.74, 110.803, -45.1264, 0.59 ) }
    dend_29 { pt3dadd( -132.519, 111.362, -45.4103, 0.74 ) }
    dend_29 { pt3dadd( -133.402, 112.203, -45.7054, 0.81 ) }
    dend_29 { pt3dadd( -134.011, 112.962, -45.8634, 0.88 ) }
    dend_29 { pt3dadd( -134.413, 113.565, -45.9108, 0.88 ) }
    dend_29 { pt3dadd( -134.818, 114.247, -45.9127, 0.74 ) }
    dend_29 { pt3dadd( -135.308, 115.098, -45.8712, 0.74 ) }
    dend_29 { pt3dadd( -135.736, 115.853, -45.8165, 0.52 ) }
    dend_29 { pt3dadd( -136.397, 117.073, -45.7058, 0.44 ) }
    dend_29 { pt3dadd( -136.954, 118.079, -45.6039, 0.74 ) }
    dend_29 { pt3dadd( -137.263, 118.581, -45.5583, 0.74 ) }
    dend_29 { pt3dadd( -137.851, 119.423, -45.5441, 0.59 ) }
    dend_29 { pt3dadd( -138.304, 119.973, -45.6106, 0.59 ) }
    dend_29 { pt3dadd( -138.769, 120.455, -45.7367, 0.59 ) }
    dend_29 { pt3dadd( -139.638, 121.2, -46.0523, 0.66 ) }
    dend_29 { pt3dadd( -140.719, 121.996, -46.5115, 0.37 ) }
    dend_29 { pt3dadd( -141.903, 122.74, -47.0387, 0.37 ) }
    dend_29 { pt3dadd( -143.246, 123.435, -47.6381, 0.52 ) }
    dend_29 { pt3dadd( -143.844, 123.705, -47.8926, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_29 { pt3dadd( -144.851, 124.131, -48.3016, 0.29 ) }
    dend_29 { pt3dadd( -145.597, 124.455, -48.6026, 0.66 ) }
    dend_29 { pt3dadd( -146.242, 124.766, -48.8399, 0.66 ) }
    dend_29 { pt3dadd( -147.194, 125.315, -49.1296, 0.37 ) }
    dend_29 { pt3dadd( -148.021, 125.892, -49.3367, 0.44 ) }
    dend_29 { pt3dadd( -148.853, 126.572, -49.5349, 0.29 ) }
    dend_29 { pt3dadd( -149.611, 127.289, -49.7215, 0.29 ) }
    dend_29 { pt3dadd( -150.331, 128.027, -49.8994, 0.29 ) }
    dend_29 { pt3dadd( -150.987, 128.717, -50.0663, 0.74 ) }
    dend_29 { pt3dadd( -151.299, 129.025, -50.1549, 0.74 ) }
    dend_29 { pt3dadd( -151.751, 129.38, -50.2919, 0.37 ) }
    dend_29 { pt3dadd( -152.596, 129.883, -50.5652, 0.29 ) }
    dend_29 { pt3dadd( -153.187, 130.161, -50.7662, 0.29 ) }
    dend_29 { pt3dadd( -153.653, 130.359, -50.9499, 0.29 ) }
    dend_29 { pt3dadd( -154.447, 130.653, -51.2844, 0.29 ) }
    dend_29 { pt3dadd( -155.182, 130.889, -51.6047, 0.66 ) }
    dend_29 { pt3dadd( -155.708, 131.026, -51.8386, 0.66 ) }
    dend_29 { pt3dadd( -156.48, 131.181, -52.1707, 0.37 ) }
    dend_29 { pt3dadd( -157.297, 131.373, -52.5531, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 19/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -21.0224, 62.2709, 24.6977, 0.96 ) }
    dend_16 { pt3dadd( -21.1602, 63.4223, 25.0446, 0.96 ) }
    dend_16 { pt3dadd( -21.3472, 64.2783, 25.2626, 0.81 ) }
    dend_16 { pt3dadd( -21.5519, 64.9643, 25.4162, 0.74 ) }
    dend_16 { pt3dadd( -21.8216, 65.6788, 25.5548, 0.74 ) }
    dend_16 { pt3dadd( -22.2423, 66.6151, 25.7111, 0.81 ) }
    dend_16 { pt3dadd( -22.6635, 67.4404, 25.8311, 0.66 ) }
    dend_16 { pt3dadd( -22.9898, 67.9631, 25.8886, 0.81 ) }
    dend_16 { pt3dadd( -23.3253, 68.4482, 25.9298, 0.81 ) }
    dend_16 { pt3dadd( -23.852, 69.1553, 26.0021, 0.66 ) }
    dend_16 { pt3dadd( -24.4468, 69.8953, 26.0999, 0.81 ) }
    dend_16 { pt3dadd( -24.8683, 70.4076, 26.1855, 0.96 ) }
    dend_16 { pt3dadd( -25.2769, 70.9602, 26.2858, 1.03 ) }
    dend_16 { pt3dadd( -25.7166, 71.6174, 26.4056, 0.59 ) }
    dend_16 { pt3dadd( -26.0923, 72.2542, 26.4866, 0.59 ) }
    dend_16 { pt3dadd( -26.4595, 72.9462, 26.5425, 0.44 ) }
    dend_16 { pt3dadd( -26.7393, 73.5028, 26.5694, 0.44 ) }
    dend_16 { pt3dadd( -27.2893, 74.5745, 26.5948, 0.81 ) }
    dend_16 { pt3dadd( -27.5935, 75.1127, 26.5889, 1.03 ) }
    dend_16 { pt3dadd( -28.2546, 76.0946, 26.6281, 0.66 ) }
    dend_16 { pt3dadd( -28.5986, 76.5051, 26.672, 0.66 ) }
    dend_16 { pt3dadd( -29.0199, 76.9186, 26.7685, 0.81 ) }
    dend_16 { pt3dadd( -29.4664, 77.3065, 26.911, 0.59 ) }
    dend_16 { pt3dadd( -30.0167, 77.7478, 27.1711, 0.44 ) }
    dend_16 { pt3dadd( -31.0408, 78.6231, 27.8136, 0.44 ) }
    dend_16 { pt3dadd( -31.7522, 79.3105, 28.3817, 0.37 ) }
    dend_16 { pt3dadd( -32.3457, 79.997, 28.9015, 0.37 ) }
    dend_16 { pt3dadd( -32.752, 80.6035, 29.2822, 0.37 ) }
    dend_16 { pt3dadd( -33.2919, 81.6775, 29.7898, 0.44 ) }
    dend_16 { pt3dadd( -33.4876, 82.3061, 30.2011, 0.29 ) }
    dend_16 { pt3dadd( -33.6091, 82.8341, 30.465, 0.29 ) }
    dend_16 { pt3dadd( -33.7861, 83.6461, 30.7891, 0.29 ) }
    dend_16 { pt3dadd( -33.9992, 84.4587, 31.0371, 0.96 ) }
    dend_16 { pt3dadd( -34.2195, 85.1297, 31.2026, 1.11 ) }
    dend_16 { pt3dadd( -35.5772, 88.8956, 32.0171, 1.11 ) }
    dend_16 { pt3dadd( -36.8783, 92.0615, 32.9734, 0.44 ) }
    dend_16 { pt3dadd( -37.0736, 92.5795, 33.245, 0.29 ) }
    dend_16 { pt3dadd( -37.215, 93.1496, 33.7981, 0.29 ) }
    dend_16 { pt3dadd( -37.1921, 93.385, 34.2903, 0.29 ) }
    dend_16 { pt3dadd( -37.0556, 93.4854, 34.8933, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -21.0224, 62.2709, 24.6977, 0.74 ) }
    dend_13 { pt3dadd( -20.0035, 63.3742, 25.8726, 0.74 ) }
    dend_13 { pt3dadd( -19.544, 63.8717, 26.4024, 0.74 ) }
    dend_13 { pt3dadd( -18.6636, 64.8251, 27.4178, 0.74 ) }
    dend_13 { pt3dadd( -17.8829, 65.6705, 28.318, 1.03 ) }
    dend_13 { pt3dadd( -17.0824, 66.5374, 29.2412, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -17.0824, 66.5374, 29.2412, 0.66 ) }
    dend_15 { pt3dadd( -16.8397, 67.6812, 29.2939, 0.66 ) }
    dend_15 { pt3dadd( -16.7276, 68.5554, 29.3743, 0.66 ) }
    dend_15 { pt3dadd( -16.6572, 69.6039, 29.4818, 0.74 ) }
    dend_15 { pt3dadd( -16.6283, 70.7972, 29.6196, 0.74 ) }
    dend_15 { pt3dadd( -16.6327, 72.3195, 29.8158, 1.18 ) }
    dend_15 { pt3dadd( -16.6539, 73.6879, 30.0198, 0.96 ) }
    dend_15 { pt3dadd( -16.6824, 74.8258, 30.2405, 0.81 ) }
    dend_15 { pt3dadd( -16.7147, 76.0194, 30.4884, 0.52 ) }
    dend_15 { pt3dadd( -16.7248, 76.9942, 30.7252, 0.52 ) }
    dend_15 { pt3dadd( -16.7268, 78.0438, 31.0168, 0.96 ) }
    dend_15 { pt3dadd( -16.7323, 78.6247, 31.1811, 0.96 ) }
    dend_15 { pt3dadd( -16.7444, 79.4671, 31.4748, 0.96 ) }
    dend_15 { pt3dadd( -16.7597, 80.1991, 31.7463, 0.59 ) }
    dend_15 { pt3dadd( -16.7872, 81.0622, 32.0267, 0.37 ) }
    dend_15 { pt3dadd( -16.7448, 81.8736, 32.3339, 0.37 ) }
    dend_15 { pt3dadd( -16.6452, 82.5577, 32.6015, 0.37 ) }
    dend_15 { pt3dadd( -16.3528, 83.6724, 32.9596, 0.37 ) }
    dend_15 { pt3dadd( -15.7989, 84.9956, 33.2738, 0.37 ) }
    dend_15 { pt3dadd( -15.1652, 85.9933, 33.4235, 0.74 ) }
    dend_15 { pt3dadd( -13.6869, 87.9529, 33.619, 0.22 ) }
    dend_15 { pt3dadd( -13.1268, 88.5839, 33.6605, 0.22 ) }
    dend_15 { pt3dadd( -12.0197, 89.6445, 33.6897, 0.22 ) }
    dend_15 { pt3dadd( -10.9054, 90.5074, 33.6778, 0.22 ) }
    dend_15 { pt3dadd( -10.0775, 91.0325, 33.6642, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -17.0824, 66.5374, 29.2412, 0.74 ) }
    dend_14 { pt3dadd( -15.8654, 67.0942, 29.6572, 0.74 ) }
    dend_14 { pt3dadd( -15.0209, 67.7783, 30.0328, 0.44 ) }
    dend_14 { pt3dadd( -14.3021, 68.5717, 30.4011, 0.44 ) }
    dend_14 { pt3dadd( -13.8167, 69.2146, 30.6607, 0.59 ) }
    dend_14 { pt3dadd( -13.2866, 69.9605, 30.9424, 0.29 ) }
    dend_14 { pt3dadd( -12.5978, 70.8893, 31.3517, 0.29 ) }
    dend_14 { pt3dadd( -12.1725, 71.6256, 31.6614, 0.44 ) }
    dend_14 { pt3dadd( -11.9749, 72.0448, 31.8283, 0.44 ) }
    dend_14 { pt3dadd( -11.5837, 72.9796, 32.2099, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -11.2365, 73.7837, 32.5059, 0.74 ) }
    dend_14 { pt3dadd( -10.5656, 75.0316, 33.0026, 0.52 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_8 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_30 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_29 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_19 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 5
    dend_36 nseg = 9
    dend_8 nseg = 7
    dend_1 nseg = 5
    dend_23 nseg = 7
    dend_20 nseg = 7
    dend_5 nseg = 5
    dend_2 nseg = 3
    dend_35 nseg = 7
    dend_32 nseg = 3
    dend_28 nseg = 3
    dend_27 nseg = 13
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_12 nseg = 3
    dend_4 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_30 nseg = 3
    dend_29 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_ChC_9b0e709c9c_0_0


