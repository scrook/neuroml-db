// Cell: bSTUT213_L4_DBC_0c64ca4449_0_0
/*
{
  "id" : "bSTUT213_L4_DBC_0c64ca4449_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.6449, -2.34, 2.22", "-0.928518, -14.5616, -1.16731, 2.22", "-1.21951, -17.5377, -0.0654461, 2.49", "-1.65627, -22.7073, 1.68823, 2.49", "-1.91182, -27.7028, 3.13052, 2.49", "-1.98362, -29.9698, 3.70727, 1.94", "-2.01577, -32.4131, 4.26172, 1.38", "-1.94615, -35.3852, 4.85009, 1.11", "-1.85472, -37.3897, 5.1549, 0.83", "-1.60511, -42.4185, 5.6133, 1.11", "-1.52508, -44.4476, 5.63966, 1.11", "-1.42501, -46.8759, 5.60895, 1.38", "-1.312, -49.1998, 5.54168, 0.83", "-1.1929, -51.1775, 5.49516, 1.66", "-1.05262, -53.0491, 5.46582, 1.11", "-0.714557, -57.1016, 5.36328, 1.66", "-0.511146, -59.3226, 5.30182, 1.38", "-0.219528, -62.1792, 5.21542, 1.94", "0.162558, -65.1912, 5.11746, 1.38", "0.688542, -68.321, 5.01135, 1.38", "1.48869, -72.1815, 4.8807, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.47005, -0.86, 2.22", "-0.901931, 15.0846, -0.827881, 1.94", "-0.508902, 19.4748, -0.689221, 1.94", "-0.110725, 26.0462, -0.274211, 1.94", "-0.00537337, 28.4425, -0.092553, 1.38", "0.32002, 33.8587, 0.298082, 2.22", "0.639387, 39.1746, 0.68148, 1.94", "1.05496, 46.3632, 1.22883, 1.94", "1.29401, 51.5425, 1.73413, 1.94", "1.39053, 56.5551, 2.38251, 1.94", "1.46303, 63.3454, 3.26938, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "1.48869, -72.1815, 4.8807, 0.55", "2.05527, -73.2015, 5.11283, 0.55", "2.63286, -74.0743, 5.42836, 0.55", "3.49486, -75.2606, 6.02532, 0.28", "4.49232, -76.3937, 6.65197, 0.55", "5.69069, -77.6318, 7.33352, 0.28", "6.70741, -78.596, 7.94718, 1.11", "8.34019, -80.0422, 8.99526, 0.28", "9.42037, -80.9104, 9.82421, 0.83", "11.0353, -82.098, 11.1576, 0.83", "12.0039, -82.7862, 11.9956, 0.83", "13.6406, -83.9675, 13.4333, 0.83", "14.4928, -84.5765, 14.1875, 1.11", "17.0868, -86.5689, 16.3511, 0.28", "17.6546, -87.0479, 16.7706, 0.28", "18.1423, -87.4865, 17.0959, 0.55", "18.8538, -88.1201, 17.4633, 0.55", "20.3195, -89.4115, 17.9441, 0.55", "21.6862, -90.5377, 18.223, 0.55", "23.1582, -91.7437, 18.3228, 0.83", "24.5411, -92.7754, 18.398, 1.11", "25.7501, -93.6543, 18.4667, 0.55", "26.4092, -94.1451, 18.5123, 1.38", "27.2716, -94.781, 18.5844, 0.55", "28.2497, -95.383, 18.6599, 1.11", "30.3415, -96.5641, 18.7687, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.48869, -72.1815, 4.8807, 1.38", "1.25233, -73.3005, 4.75061, 1.38", "0.54597, -76.5824, 4.65226, 1.38", "0.10577, -78.6276, 4.59098, 1.11", "-0.850948, -83.0726, 4.45777, 1.66", "-1.46062, -85.9052, 4.37289, 2.22", "-1.77151, -87.3497, 4.3296, 2.22", "-2.58512, -91.4968, 4.09656, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.46303, 63.3454, 3.26938, 1.38", "1.36196, 65.8104, 3.30275, 1.38", "1.34781, 67.4823, 3.29665, 1.38", "1.36429, 69.9263, 3.26149, 1.11", "1.46746, 73.6868, 3.23525, 1.38", "1.51094, 75.5652, 3.21932, 1.38", "1.51984, 78.845, 3.22478, 1.38", "1.48376, 82.995, 3.2456, 1.38", "1.38638, 86.0182, 3.28106, 1.38", "1.26858, 88.832, 3.32707, 1.38", "1.08107, 91.4589, 3.39796, 1.38", "0.572388, 95.841, 3.57857, 1.66", "0.177534, 98.3566, 3.71578, 1.38", "-0.343888, 101.218, 3.80773, 1.38", "-0.972947, 104.506, 3.81755, 1.38", "-1.44581, 107.129, 3.73843, 1.38", "-1.64909, 108.522, 3.66865, 1.38", "-1.89504, 110.678, 3.52488, 1.11", "-2.19765, 113.942, 3.3035, 1.11", "-2.36412, 117.381, 3.04834, 1.11", "-2.45442, 120.854, 2.81285, 1.38", "-2.46492, 123.188, 2.70515, 1.11", "-2.47209, 125.428, 2.66665, 1.38", "-2.46424, 126.871, 2.71458, 1.38", "-2.3994, 129.177, 2.96995, 1.38", "-2.32317, 132.479, 3.44936, 1.94", "-2.26398, 134.225, 3.72724, 1.66", "-2.2348, 134.959, 3.83831, 1.66", "-2.15192, 137.248, 4.15336, 1.66", "-2.03466, 140.859, 4.61793, 1.66", "-2.01984, 142.743, 4.84946, 1.38", "-2.04774, 145.717, 5.17382, 1.66", "-2.07347, 148.337, 5.38435, 1.11", "-2.09664, 151.243, 5.57841, 1.11", "-2.12827, 152.861, 5.65395, 1.11", "-2.15074, 154.647, 5.71149, 1.11", "-2.13078, 155.985, 5.75837, 1.11", "-1.99608, 158.826, 5.85944, 1.38", "-1.83622, 160.991, 5.93391, 1.11", "-1.70512, 162.614, 5.98244, 1.38", "-1.55975, 164.457, 6.02865, 1.38", "-1.43519, 166.558, 6.07504, 0.83", "-1.3565, 169.102, 6.12791, 1.38", "-1.36982, 171.131, 6.16637, 0.83", "-1.43503, 173.192, 6.18916, 1.38", "-1.54389, 174.816, 6.22231, 1.38", "-1.79387, 177.479, 6.27344, 1.38", "-1.89573, 178.654, 6.28611, 1.38", "-2.01287, 180.478, 6.28474, 1.11", "-2.07505, 182.747, 6.25139, 1.11", "-2.0579, 186.027, 6.1611, 1.66", "-1.95734, 188.137, 6.0704, 1.11", "-1.88346, 188.971, 6.07391, 1.11", "-1.77423, 190.42, 6.15601, 1.38", "-1.64696, 192.252, 6.3449, 1.38", "-1.54483, 194.316, 6.64837, 1.94", "-1.50947, 196.453, 7.04656, 1.94", "-1.59929, 199.938, 7.76458, 1.11", "-1.74526, 201.879, 8.16254, 1.11", "-1.96623, 203.717, 8.53494, 1.38", "-2.32044, 205.927, 8.95323, 1.38", "-2.64422, 207.776, 9.24793, 1.11", "-2.97372, 209.809, 9.47219, 0.83", "-3.32411, 212.136, 9.58544, 0.83", "-3.51396, 213.478, 9.64608, 0.83", "-3.84937, 215.809, 9.74964, 1.11", "-4.1032, 217.857, 9.81028, 1.11", "-4.36644, 219.965, 9.85557, 1.38", "-4.77829, 223.171, 9.91214, 1.38", "-5.00864, 225.135, 9.93376, 1.11", "-5.27109, 227.464, 9.95101, 1.38", "-5.51638, 229.376, 9.94287, 0.83", "-5.90035, 231.928, 9.92874, 0.83", "-6.19828, 233.953, 9.89123, 1.38", "-6.28669, 234.865, 9.85357, 1.38", "-6.43026, 236.535, 9.76737, 1.11", "-6.6768, 239.296, 9.6114, 1.38", "-6.8086, 240.977, 9.50681, 1.11", "-6.87738, 242.629, 9.37091, 1.11", "-6.9291, 244.283, 9.2292, 1.11", "-6.99819, 246.346, 9.05305, 1.11", "-7.1006, 249.894, 8.72955, 1.11", "-7.12939, 251.976, 8.53695, 1.11", "-7.16877, 254.275, 8.38067, 1.38", "-7.2293, 256.634, 8.29642, 1.38", "-7.30487, 258.841, 8.27904, 0.83", "-7.33834, 260.537, 8.31154, 1.38", "-7.34072, 262.14, 8.39072, 1.38", "-7.33849, 264.315, 8.55726, 1.11", "-7.3165, 265.761, 8.69399, 0.55", "-7.21882, 267.201, 8.81783, 1.11", "-7.11458, 268.564, 8.92876, 1.11", "-7.00231, 270.02, 9.01917, 0.83", "-6.88876, 271.559, 9.05651, 0.83", "-6.80119, 272.958, 9.03714, 0.83", "-6.71671, 275.505, 9.02167, 1.11", "-6.66639, 277.167, 8.98322, 1.66", "-6.68021, 278.766, 8.94282, 1.66", "-6.78775, 280.836, 8.90401, 0.83", "-6.89417, 282.499, 8.8647, 0.83", "-7.02013, 284.845, 8.79371, 1.11", "-7.21005, 287.638, 8.71169, 0.83", "-7.40124, 290.758, 8.61687, 0.83", "-7.5095, 292.543, 8.56131, 0.83", "-7.74607, 296.232, 8.45319, 1.38", "-8.01612, 299.919, 8.36802, 1.38", "-8.14457, 301.561, 8.34303, 1.11", "-8.41857, 304.107, 8.35607, 1.11", "-8.61101, 305.724, 8.36819, 0.83", "-8.79613, 306.859, 8.39257, 0.83", "-9.19206, 308.759, 8.5536, 1.38", "-9.38154, 309.747, 8.71089, 1.38", "-9.67323, 312.063, 9.14884, 0.83", "-9.77688, 313.646, 9.48133, 0.83", "-9.8821, 316.175, 9.89567, 0.83", "-9.89812, 318.54, 10.2845, 0.83", "-9.81175, 321.578, 10.7921, 1.38", "-9.71698, 323.64, 11.1456, 1.38", "-9.55129, 325.077, 11.3815, 1.38", "-8.96177, 328.408, 11.844, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.46303, 63.3454, 3.26938, 1.11", "3.75949, 68.5218, -1.62923, 1.11", "4.41799, 70.1227, -2.92467, 1.11", "5.49021, 72.8807, -5.23237, 1.11", "8.33842, 80.7923, -11.645, 1.11", "9.253, 83.7282, -13.762, 1.11", "10.372, 87.8549, -16.4972, 0.83", "10.8718, 90.3265, -17.9125, 0.83", "12.1737, 97.393, -21.5265, 1.11", "12.6651, 100.628, -22.8696, 1.11", "12.9835, 105.722, -24.3633, 1.11", "12.941, 110.395, -25.4244, 1.11", "12.7334, 113.656, -25.8823, 1.38", "12.5286, 115.946, -25.91, 1.38", "12.2779, 118.602, -25.6689, 1.11", "11.8123, 123.662, -25.1747, 1.11", "11.4273, 129.008, -24.7566, 0.83", "11.3736, 129.853, -24.664, 0.83", "11.1802, 135.01, -24.2246, 1.66", "11.073, 139.427, -24.0996, 0.83", "11.0689, 140.276, -24.1288, 0.83", "11.169, 143.873, -24.445, 1.66", "11.2422, 146.134, -24.7465, 1.66", "11.2822, 148.997, -25.0498, 1.11", "11.2327, 152.372, -25.3868, 1.11", "11.1106, 155.996, -25.629, 1.11", "11.0153, 160.317, -25.9373, 1.66", "10.9311, 164.402, -26.1707, 1.66", "10.8399, 168.668, -26.51, 0.83", "10.8113, 172.422, -26.9507, 0.83", "10.8731, 175.071, -27.3609, 0.83", "11.0788, 178.869, -28.0064, 1.66", "11.3415, 182.504, -28.6718, 0.55", "11.6037, 186.049, -29.3082, 0.55", "11.9538, 190.008, -29.9166, 1.38", "12.2853, 193.307, -30.2569, 1.94", "12.6458, 197.289, -30.5292, 0.83", "12.7973, 199.506, -30.6055, 0.83", "12.9669, 203.25, -30.6806, 1.94", "13.0724, 207.964, -30.5928, 1.94", "13.0704, 211.034, -30.5166, 1.11", "13.0145, 214.642, -30.2251, 1.11", "12.9094, 217.91, -29.8601, 1.11", "12.8322, 219.794, -29.5927, 1.11", "12.7347, 221.721, -29.318, 1.11", "12.2474, 228.893, -28.327, 2.22", "11.7634, 237.097, -27.2159, 0.83", "11.6747, 239.489, -26.9224, 0.83", "11.6592, 242.72, -26.5733, 1.11", "11.6986, 246.744, -26.267, 0.55", "11.68, 249.876, -26.2003, 2.22", "11.6632, 251.832, -26.3388, 1.94", "11.7161, 254.668, -26.7947, 0.83", "11.8317, 257.687, -27.2475, 0.83", "11.9871, 260.721, -27.6439, 0.83", "12.0765, 263.927, -27.9819, 1.66", "12.1382, 267.454, -28.3331, 0.83", "12.1542, 269.473, -28.4974, 0.83", "12.1652, 271.185, -28.6403, 1.11", "12.1553, 273.831, -28.8932, 0.83", "12.2079, 278.456, -29.3645, 0.83", "12.2129, 279.292, -29.451, 0.83", "12.1121, 283.91, -29.9297, 1.94", "12.0316, 287.355, -30.2931, 0.55", "11.9913, 291.244, -30.7788, 0.55", "11.9869, 291.945, -30.8977, 0.55", "11.9497, 297.481, -32.009, 2.22", "12.0137, 301.707, -32.8677, 0.83", "12.0877, 303.622, -33.2261, 0.83", "12.349, 308.152, -33.9632, 1.38", "12.7026, 312.142, -34.5249, 0.55", "13.045, 315.685, -34.9271, 0.55", "13.6522, 320.606, -35.4653, 0.83", "14.5351, 327.528, -35.7966, 0.83", "14.7776, 329.476, -35.7827, 2.49", "15.2088, 333.237, -35.5381, 2.49", "15.8012, 339.087, -34.9532, 0.83", "16.1069, 342.382, -34.5908, 0.83", "16.3952, 348.926, -33.9306, 0.83", "16.4414, 350.866, -33.7394, 0.83", "16.3907, 355.081, -33.415, 1.66", "16.2924, 359.344, -33.1604, 0.83", "16.2152, 362.459, -33.0228, 0.83", "16.1055, 367.114, -32.9025, 0.83", "16.0924, 370.709, -32.945, 1.94", "16.1988, 376.652, -32.9669, 0.83", "16.3958, 382.779, -32.9567, 0.83", "16.5094, 385.529, -32.9427, 0.83", "16.6418, 388.991, -32.929, 1.11", "16.7376, 391.673, -32.921, 2.49", "16.7946, 396.269, -32.9475, 0.83", "16.7604, 397.852, -32.9769, 0.83", "16.6287, 400.527, -33.0543, 0.83", "16.4045, 404.96, -33.1849, 0.83", "16.262, 409.288, -33.381, 0.83", "16.0987, 414.355, -33.7028, 1.11", "16.0453, 418.787, -34.0699, 1.66", "16.1013, 423.031, -34.4364, 0.83", "16.2141, 426.5, -34.7724, 0.83", "16.529, 430.489, -35.154, 0.83", "16.8441, 433.416, -35.439, 0.83", "17.1858, 436.641, -35.7854, 0.83", "17.7218, 441.683, -36.3199, 1.66", "18.125, 445.687, -36.7369, 0.83", "18.3198, 447.809, -36.9326, 0.83", "18.6821, 452.958, -37.2858, 1.38", "19.0913, 457.789, -37.5715, 0.83", "19.2901, 460.47, -37.7182, 0.83", "19.4121, 462.076, -37.8252, 1.66", "19.6028, 465.331, -38.0246, 1.66", "19.6538, 468.614, -38.2693, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "30.3415, -96.5641, 18.7687, 0.83", "31.5692, -96.5169, 20.236, 0.83", "32.3621, -96.468, 21.2854, 0.28", "34.2707, -96.3504, 23.8114, 0.55", "35.0231, -96.304, 24.8073, 0.55", "36.1082, -96.2371, 26.2434, 0.55", "39.5967, -96.0221, 30.8607, 0.28", "40.0258, -96.0446, 31.5438, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "30.3415, -96.5641, 18.7687, 0.55", "32.197, -98.1476, 20.2393, 0.55", "32.7073, -98.406, 20.6274, 0.83", "33.9687, -99.1134, 21.6606, 0.28", "34.4938, -99.4189, 22.1527, 0.83", "35.5284, -100.002, 23.1029, 0.83", "38.0172, -101.395, 25.336, 0.83", "41.2609, -103.033, 27.9735, 0.83", "42.5172, -103.555, 29.0618, 0.83", "45.7186, -104.441, 31.852, 1.11", "46.7474, -104.576, 32.8788, 0.83", "47.0992, -104.556, 33.2795, 0.83", "48.2003, -104.091, 34.7967, 0.83", "49.9811, -102.438, 37.8742, 0.83", "51.1614, -100.951, 39.9817, 0.83", "52.4279, -98.6265, 42.5201, 0.83", "52.958, -97.4301, 43.825, 1.11", "53.6339, -95.5745, 45.8217, 0.28", "53.7206, -95.2127, 46.2109, 0.55", "54.0079, -93.5693, 47.6229, 0.28", "53.915, -92.6652, 48.5693, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.58512, -91.4968, 4.09656, 1.11", "-3.90035, -92.942, 4.85109, 1.11", "-5.40993, -94.9322, 5.81714, 1.11", "-8.89313, -100.527, 8.16434, 1.38", "-10.7284, -103.862, 9.65238, 1.38", "-12.0804, -106.318, 10.7486, 1.66", "-14.2246, -110.214, 12.4871, 1.11", "-15.3095, -112.47, 13.5039, 1.11", "-16.638, -115.985, 15.0213, 1.38", "-18.2292, -122.003, 17.2979, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.58512, -91.4968, 4.09656, 1.38", "-2.67056, -96.0935, 4.15904, 1.38", "-2.63403, -99.8104, 4.26776, 1.94", "-2.61808, -102.51, 4.12878, 1.38", "-2.63254, -106.985, 3.26886, 1.94", "-2.5822, -110.459, 2.28312, 0.83", "-2.51171, -112.56, 1.53604, 0.83", "-2.2966, -115.255, 0.378713, 1.38", "-1.75756, -119.306, -1.87058, 1.94", "-0.950915, -123.602, -4.90634, 0.83", "-0.649093, -124.92, -6.04588, 0.83", "0.0928202, -128.127, -9.3802, 1.11", "0.547079, -129.963, -11.3875, 0.55", "0.739122, -130.926, -12.4921, 0.55", "1.04571, -132.909, -14.7285, 0.55", "1.09607, -133.936, -15.9653, 0.83", "1.06217, -136.235, -18.9068, 0.55", "0.907918, -138.497, -22.0507, 1.66", "0.474165, -142.063, -27.0855, 0.55", "0.195524, -143.607, -29.2005, 1.66", "-0.556512, -146.939, -33.5121, 0.55", "-0.878098, -148.4, -35.4372, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.96177, 328.408, 11.844, 0.83", "-8.96978, 329.974, 10.6987, 0.83", "-9.0607, 331.703, 9.44584, 0.83", "-9.14448, 333.963, 7.98961, 0.55", "-9.13859, 336.202, 6.63437, 0.83", "-9.09919, 338.464, 5.38508, 0.28", "-9.07961, 339.514, 4.85808, 0.55", "-9.1109, 340.232, 4.51296, 0.55", "-9.16014, 342.332, 3.62384, 1.11", "-9.14137, 344.127, 3.03879, 0.55", "-9.10873, 345.67, 2.6206, 1.11", "-9.07624, 347.004, 2.33759, 1.11", "-9.0344, 349.011, 2.00005, 0.28", "-9.0647, 351.62, 1.49389, 0.55", "-9.21189, 354.675, 0.857602, 0.55", "-9.2719, 356.239, 0.577011, 0.55", "-9.29923, 357.387, 0.393594, 0.28", "-9.2786, 359.059, 0.253856, 0.83", "-9.16669, 362.332, 0.278287, 1.38", "-9.1527, 363.891, 0.38354, 1.38", "-9.05344, 367.457, 0.792961, 0.83", "-9.01469, 369.157, 1.03846, 0.83", "-8.89436, 373.867, 1.90372, 0.83", "-8.86184, 375.488, 2.24293, 0.83", "-8.783, 378.077, 2.92985, 0.83", "-8.77182, 378.736, 3.11269, 0.83", "-8.73729, 380.995, 3.72185, 1.38", "-8.68308, 382.578, 4.09419, 0.55", "-8.61788, 384.494, 4.40339, 0.55", "-8.51397, 385.549, 4.50912, 0.55", "-8.40149, 386.322, 4.54691, 0.28", "-8.03641, 388.463, 4.54371, 0.83", "-7.69321, 390.115, 4.41869, 0.55", "-7.26771, 391.892, 4.19589, 0.83", "-6.64888, 394.446, 3.82769, 0.55", "-6.30798, 395.929, 3.60191, 1.66", "-5.80517, 398.248, 3.24075, 1.66", "-5.31762, 400.786, 2.85808, 0.83", "-4.9806, 402.828, 2.57135, 0.83", "-4.762, 404.505, 2.36801, 0.83", "-4.67963, 405.508, 2.27635, 0.28", "-4.60696, 407.205, 2.19355, 1.11", "-4.65167, 409.755, 2.17171, 0.55", "-4.72905, 411.223, 2.20351, 0.55", "-4.83286, 412.756, 2.21889, 0.55", "-4.92746, 413.769, 2.21164, 0.55", "-5.14386, 415.234, 2.18327, 1.11", "-5.45314, 416.846, 2.13325, 0.28", "-5.60876, 417.601, 2.10356, 0.55", "-5.86603, 419.399, 2.02431, 0.55", "-6.11381, 422.264, 1.89214, 0.55", "-6.13898, 423.274, 1.85182, 0.83", "-6.11915, 424.874, 1.75942, 0.83", "-6.02117, 427.168, 1.65869, 0.83", "-5.84056, 429.343, 1.62021, 0.83", "-5.5991, 431.015, 1.61047, 0.83", "-4.76969, 434.683, 1.5975, 1.11", "-4.25338, 436.561, 1.59017, 0.28", "-3.88007, 437.673, 1.56696, 0.55", "-3.43132, 438.881, 1.66272, 0.55", "-3.02096, 439.902, 1.84797, 0.55", "-2.67732, 440.591, 2.04229, 0.55", "-1.36545, 442.686, 2.74575, 0.55", "-0.456236, 444.173, 3.23798, 0.83", "1.76707, 447.936, 4.13334, 0.55", "2.12658, 448.582, 4.2787, 0.83", "2.77614, 449.864, 4.54461, 0.83", "3.50992, 451.474, 4.81853, 0.55", "4.10458, 452.949, 4.97971, 0.83", "4.91095, 455.347, 5.06008, 0.83", "5.52127, 457.458, 5.01966, 0.55", "5.71064, 458.235, 5.05827, 0.55", "6.08397, 459.979, 5.23972, 0.55", "6.24245, 460.822, 5.36976, 0.83", "6.53137, 462.308, 5.64117, 0.83", "6.92834, 464.943, 6.109, 0.55", "7.11439, 466.225, 6.27954, 0.55", "7.3774, 468.151, 6.55129, 0.55", "7.56573, 469.735, 6.76851, 0.55", "7.9443, 472.682, 7.15722, 0.55", "8.21209, 474.767, 7.37444, 0.83", "8.34497, 475.847, 7.42879, 1.11", "8.52896, 477.994, 7.55285, 0.55", "8.64039, 481.068, 7.80915, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.96177, 328.408, 11.844, 0.55", "-10.7057, 332.099, 11.8216, 0.55", "-11.8374, 334.749, 11.8586, 0.55", "-12.6727, 337.001, 11.9082, 0.55", "-13.3571, 339.035, 11.9566, 0.55", "-14.7064, 343.203, 12.0791, 0.55", "-15.4856, 345.621, 12.1553, 0.83", "-16.4597, 348.662, 12.3645, 0.83", "-17.4274, 351.824, 12.5622, 0.83", "-18.0979, 354.472, 12.6838, 0.55", "-18.5656, 356.696, 12.7604, 0.55", "-19.2118, 359.752, 12.9043, 0.83", "-19.729, 362.211, 13.0403, 0.83", "-20.613, 366.067, 13.2878, 0.83", "-21.204, 368.589, 13.4691, 0.83", "-21.6305, 370.552, 13.6224, 0.55", "-22.0967, 373.089, 13.8228, 0.83", "-22.5013, 375.909, 14.084, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.6538, 468.614, -38.2693, 0.55", "19.6467, 470.667, -38.2976, 0.55", "19.6364, 473.637, -38.3386, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "19.6538, 468.614, -38.2693, 0.55", "16.9729, 468.957, -38.3677, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "40.0258, -96.0446, 31.5438, 0.28", "39.8199, -98.9815, 30.1696, 0.28", "39.782, -99.5229, 29.9163, 1.11", "39.6018, -102.093, 28.7136, 0.28", "39.5837, -102.351, 28.5927, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "40.0258, -96.0446, 31.5438, 1.66", "40.2151, -94.9885, 32.6802, 1.66", "40.4236, -92.0877, 35.2003, 0.83", "40.5694, -89.1899, 37.5748, 0.28", "40.5498, -88.2071, 38.316, 0.55", "40.2771, -84.8122, 40.607, 0.28", "40.0888, -82.7791, 41.9303, 0.83", "39.7373, -80.1415, 43.6449, 0.83", "39.4307, -78.4781, 44.5995, 0.28", "38.9248, -76.0691, 45.8404, 0.55", "38.2235, -73.891, 46.812, 0.55", "37.0759, -71.2483, 47.8099, 0.28", "36.6544, -70.4615, 48.0922, 0.83", "35.4253, -68.2612, 48.8546, 0.28", "33.8831, -65.701, 49.6507, 0.55", "31.909, -62.611, 50.5667, 0.28", "30.3787, -60.4838, 51.1286, 1.11", "29.0874, -58.9056, 51.4128, 0.28", "27.3936, -56.896, 51.7082, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-18.2292, -122.003, 17.2979, 0.83", "-17.5275, -125.558, 17.7359, 0.83", "-17.1177, -127.297, 17.951, 0.83", "-16.4594, -130.384, 18.2997, 0.83", "-16.12, -132.667, 18.6907, 0.55", "-15.9578, -134.779, 19.1834, 0.83", "-15.9342, -136.806, 19.7868, 0.83", "-16.0279, -138.309, 20.4387, 0.83", "-16.3817, -140.767, 21.7097, 0.83", "-17.0207, -143.726, 23.4174, 0.83", "-17.5697, -145.656, 24.5536, 0.83", "-18.6248, -148.723, 26.439, 1.11", "-19.4974, -151.02, 27.8747, 0.55", "-20.0802, -152.671, 28.8428, 0.55", "-20.7247, -154.738, 29.9139, 0.83", "-21.0882, -156.085, 30.4449, 0.83", "-21.3521, -157.259, 30.8263, 0.28", "-21.6167, -158.492, 31.1668, 0.55", "-22.1446, -161.1, 31.7931, 1.11", "-22.4539, -162.939, 32.185, 0.28", "-22.6216, -163.976, 32.3788, 0.55", "-23.1721, -166.932, 32.8621, 0.28", "-23.281, -167.498, 32.9619, 0.83", "-23.6744, -169.768, 33.4014, 0.83", "-24.0725, -172.125, 33.8704, 0.28", "-24.1145, -172.478, 33.934, 1.11", "-24.2526, -174.064, 34.1536, 1.11", "-24.4829, -176.419, 34.3648, 0.55", "-24.6484, -178.244, 34.5767, 1.11", "-24.7682, -179.766, 34.8148, 1.11", "-24.8649, -180.828, 35.0571, 1.11", "-25.0053, -182.233, 35.382, 0.28", "-25.0591, -183.104, 35.6536, 0.55", "-25.1033, -184.453, 36.1368, 0.28", "-25.1191, -185.125, 36.4905, 0.83", "-25.1545, -186.435, 37.2865, 0.28", "-25.1694, -187.13, 37.7121, 0.83", "-25.1352, -189.736, 39.2753, 0.28", "-25.1326, -190.54, 39.6902, 0.83", "-25.1692, -192.803, 40.6427, 0.55", "-25.2262, -194.329, 41.1835, 1.11", "-25.315, -195.984, 41.6332, 0.28", "-25.3658, -196.875, 41.8069, 0.83", "-25.5563, -199.285, 42.0371, 0.83", "-25.6446, -200.583, 42.2188, 0.28", "-25.6664, -201.381, 42.3488, 0.28", "-25.6545, -202.273, 42.5888, 0.83", "-25.5842, -203.352, 42.9772, 0.83", "-25.4237, -204.795, 43.5939, 0.55", "-25.0125, -207.417, 44.833, 0.28", "-24.9269, -208.147, 45.186, 1.11", "-24.8287, -209.221, 45.6628, 0.83", "-24.6742, -211.411, 46.509, 0.28", "-24.6448, -211.75, 46.6117, 0.55", "-24.4616, -213.246, 46.9168, 0.55", "-24.1702, -214.87, 47.0726, 0.55", "-23.9077, -216.203, 47.1494, 0.55", "-23.689, -217.335, 47.1785, 0.55", "-23.4239, -218.804, 47.2148, 0.55", "-23.0254, -220.664, 47.2556, 0.55", "-22.5855, -222.465, 47.2905, 0.55", "-22.1248, -224.225, 47.3167, 0.55", "-21.8241, -225.49, 47.3628, 0.28", "-21.5032, -227.025, 47.4215, 0.83", "-21.1771, -229.178, 47.4995, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-18.2292, -122.003, 17.2979, 1.38", "-21.1198, -122.682, 17.2174, 1.38", "-24.5979, -123.5, 17.1206, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.878098, -148.4, -35.4372, 0.55", "-0.85174, -153.703, -36.0488, 0.55", "-0.932057, -156.328, -36.4477, 0.55", "-1.0224, -159.468, -36.9835, 2.49", "-1.11717, -161.995, -37.5169, 0.55", "-1.23314, -164.436, -38.0794, 0.55", "-1.3799, -167.526, -38.7912, 0.83", "-1.71253, -170.193, -39.4628, 0.28", "-1.84179, -171.439, -39.8382, 0.55", "-2.02844, -173.433, -40.5487, 0.28", "-2.14015, -174.678, -41.0282, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.878098, -148.4, -35.4372, 0.83", "0.605517, -148.573, -36.8188, 0.83", "1.97341, -148.593, -37.9299, 0.83", "3.44935, -148.544, -39.1278, 0.55", "5.28722, -148.509, -40.6052, 0.55", "5.89511, -148.552, -41.1409, 0.83", "7.13561, -148.807, -42.2265, 0.55", "8.26121, -149.181, -43.1713, 1.11", "9.44321, -149.807, -44.1418, 0.28", "10.2776, -150.412, -44.8113, 0.83", "11.8537, -151.918, -46.1893, 0.28", "13.2704, -153.535, -47.5585, 1.38", "14.1345, -154.57, -48.2993, 0.55", "14.8435, -155.44, -48.7927, 0.55", "15.9836, -156.773, -49.2893, 0.83", "16.8863, -157.788, -49.5175, 0.28", "18.1573, -159.139, -49.7189, 0.55", "20.8675, -161.771, -49.8789, 0.28", "22.2061, -162.936, -49.8823, 0.83", "24.3865, -164.595, -49.8213, 0.55", "25.1705, -165.108, -49.7766, 0.55", "27.5406, -166.502, -49.6457, 1.94", "30.3198, -168.125, -49.6031, 0.55", "31.5737, -168.82, -49.6538, 0.55", "32.6807, -169.384, -49.6961, 0.55", "34.8795, -170.612, -49.8136, 0.28", "35.6377, -171.125, -49.8516, 1.38", "37.1349, -172.37, -49.902, 1.38", "38.9538, -174.449, -50.187, 0.55", "39.8976, -175.578, -50.0727, 0.55", "41.7982, -177.873, -49.5913, 1.11", "43.3735, -179.877, -49.1073, 0.28", "43.6734, -180.266, -48.9928, 0.83", "45.3321, -182.393, -48.2005, 0.28", "50.6819, -189.379, -45.1482, 0.83", "51.5948, -190.342, -44.4238, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-22.5013, 375.909, 14.084, 0.55", "-22.584, 377.896, 14.2246, 0.55", "-22.5903, 379.826, 14.6547, 0.28", "-22.6928, 381.553, 15.1822, 0.55", "-22.8973, 382.769, 15.6606, 0.28", "-23.3151, 384.538, 16.3382, 0.83", "-23.7555, 386.339, 16.9668, 0.83", "-24.3817, 389.118, 18.4973, 0.55", "-24.6898, 390.703, 19.5807, 0.55", "-25.2068, 393.7, 21.8895, 0.83", "-25.5113, 395.356, 23.2606, 0.83", "-25.8025, 397.237, 24.9758, 0.83", "-26.9515, 403.203, 30.3083, 0.55", "-27.1518, 404.419, 31.3101, 0.55", "-27.2108, 404.988, 31.7512, 0.83", "-27.2768, 406.286, 32.6907, 0.55", "-27.4049, 410.31, 35.1581, 1.11", "-27.5218, 413.836, 36.8017, 0.83", "-27.6086, 416.329, 37.5251, 0.55", "-27.6103, 418.191, 38.0186, 1.11", "-27.5553, 420.261, 38.573, 0.55", "-27.3328, 423.674, 39.4688, 1.11", "-27.1756, 426.298, 40.1204, 0.55", "-27.0124, 428.646, 40.8007, 0.55", "-27.0032, 429.92, 41.2049, 0.28", "-27.0482, 432.196, 41.9552, 0.83", "-27.172, 434.504, 42.6557, 0.55", "-27.3566, 436.573, 43.2144, 0.83", "-27.6102, 438.537, 43.6865, 0.83", "-28.1064, 441.365, 44.3354, 0.55", "-28.6714, 444.182, 44.9046, 0.55", "-29.5048, 447.811, 45.5376, 0.83", "-30.3985, 451.401, 46.1394, 0.83", "-31.2411, 454.753, 46.6832, 0.83", "-31.785, 456.841, 47.0067, 0.83", "-32.4865, 459.626, 47.3855, 0.83", "-33.1256, 462.065, 47.7325, 0.83", "-33.7034, 464.718, 48.1781, 0.83", "-34.005, 466.276, 48.4642, 0.83", "-34.3356, 468.439, 48.9122, 0.55", "-34.6409, 470.278, 49.2362, 0.83", "-35.0388, 472.529, 49.6643, 0.83", "-35.6715, 476.185, 50.3802, 0.55", "-36.3384, 479.707, 51.1264, 0.83", "-37.1285, 483.462, 51.9736, 0.55", "-38.1966, 487.49, 52.9588, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-22.5013, 375.909, 14.084, 0.55", "-24.3904, 379.463, 16.1665, 0.55", "-26.0119, 382.313, 17.3999, 0.28", "-26.8163, 383.622, 17.8667, 0.83", "-28.0065, 385.44, 18.4454, 0.28", "-28.6056, 386.35, 18.7097, 0.28", "-29.5951, 387.819, 19.0978, 0.83", "-31.4917, 390.798, 19.584, 0.83", "-32.4653, 392.358, 19.7096, 0.28", "-33.8396, 394.693, 19.9321, 0.83", "-34.5465, 395.885, 20.05, 0.55", "-35.8828, 398.206, 20.3454, 1.11", "-37.1146, 400.465, 20.6448, 0.55", "-38.062, 402.383, 20.89, 1.11", "-39.0419, 404.561, 21.1581, 0.55", "-40.3002, 407.623, 21.5182, 1.11", "-41.0494, 409.461, 21.7541, 0.28", "-41.6232, 410.92, 21.9677, 0.55", "-42.3342, 412.59, 22.2651, 0.28", "-42.8318, 413.774, 22.505, 0.83", "-43.3886, 415.35, 22.7221, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "19.6364, 473.637, -38.3386, 0.83", "20.3956, 476.299, -38.368, 0.83", "20.7783, 477.749, -38.4185, 0.83", "21.3345, 479.913, -38.4965, 2.22", "21.8732, 482.104, -38.6057, 1.66", "22.4923, 484.775, -38.6405, 0.83", "22.6811, 485.657, -38.6348, 0.83", "23.0263, 487.624, -38.6294, 0.83", "23.4181, 490.339, -38.5759, 1.66", "23.6088, 492.453, -38.5333, 0.55", "23.6911, 494.582, -38.572, 0.55", "23.7072, 495.91, -38.6484, 1.11", "23.7409, 498.187, -38.8932, 0.55", "23.8072, 501.914, -39.5078, 1.66", "23.9194, 503.807, -39.8502, 0.83", "24.218, 506.896, -40.4193, 0.83", "24.4091, 508.392, -40.7126, 0.83", "24.6892, 510.058, -40.9769, 1.66", "25.1496, 512.32, -41.237, 0.83", "25.9269, 515.793, -41.4497, 0.83", "26.5395, 518.392, -41.4496, 0.83", "26.7766, 519.379, -41.3761, 0.83", "27.2804, 521.596, -41.1655, 0.83", "27.5903, 523.059, -41.0382, 1.38", "28.0504, 525.34, -40.8378, 0.55", "28.3735, 526.852, -40.6971, 1.38", "29.02, 529.741, -40.4104, 1.38", "29.545, 532.217, -40.1805, 0.83", "30.08, 534.904, -39.943, 0.83", "30.6851, 537.842, -39.6631, 1.11", "31.17, 540.255, -39.43, 0.55", "31.5141, 542.195, -39.2587, 0.55", "31.7934, 543.732, -39.1741, 0.55", "32.4709, 547.137, -39.0501, 2.22", "32.7942, 548.66, -39.0268, 0.55", "33.1451, 550.183, -39.0202, 0.55", "33.3162, 550.935, -39.0252, 1.11", "34.1423, 554.508, -39.0439, 0.55", "34.5591, 556.483, -39.0709, 0.55", "34.6946, 557.258, -39.0922, 0.55", "34.9893, 559.679, -39.1798, 1.11", "35.1932, 562.008, -39.3182, 1.11", "35.3079, 563.923, -39.4294, 0.83", "35.3102, 565.926, -39.541, 0.83", "35.2911, 567.191, -39.637, 0.83", "35.1821, 569.717, -39.9024, 0.83", "34.9471, 572.577, -40.3341, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.6364, 473.637, -38.3386, 0.55", "18.5254, 473.533, -39.802, 0.55", "17.3633, 473.426, -41.3327, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-24.5979, -123.5, 17.1206, 1.11", "-24.5669, -124.892, 17.1255, 1.11", "-24.5147, -127.244, 17.1338, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-24.5979, -123.5, 17.1206, 1.11", "-26.5813, -122.172, 14.5782, 1.11", "-27.2593, -121.614, 13.7911, 0.28", "-27.7841, -121.245, 13.4255, 0.83", "-29.8744, -119.881, 12.3667, 0.55", "-30.8628, -119.303, 11.9531, 0.55", "-31.81, -118.765, 11.5255, 0.55", "-33.1401, -118.094, 10.9689, 0.55", "-36.4037, -116.625, 9.49068, 1.11", "-38.3197, -115.786, 8.59925, 0.55", "-39.5683, -115.253, 8.02811, 0.55", "-42.4077, -114.232, 6.65316, 0.83", "-44.1178, -113.706, 5.80462, 0.55", "-45.7831, -113.274, 4.95942, 1.11", "-48.4427, -112.699, 3.50847, 0.83", "-49.3917, -112.549, 3.02909, 0.83", "-50.7455, -112.363, 2.4414, 0.83", "-52.917, -112.18, 1.69661, 0.83", "-55.6719, -112.058, 0.799674, 1.11", "-56.9427, -112.07, 0.341893, 0.83", "-58.744, -112.173, -0.377052, 0.83", "-61.369, -112.392, -1.51525, 0.83", "-63.0542, -112.607, -2.34826, 0.55", "-64.287, -112.883, -3.02369, 1.38", "-66.0131, -113.317, -4.12023, 0.55", "-67.5539, -113.636, -5.18783, 0.55", "-68.4726, -113.846, -5.89403, 0.55", "-69.7984, -114.167, -7.05022, 0.55", "-70.5006, -114.303, -7.72116, 0.83", "-72.8084, -114.543, -10.0793, 0.55", "-73.6082, -114.595, -10.9338, 0.55", "-74.5115, -114.596, -11.9172, 0.55", "-76.3142, -114.506, -13.6602, 0.55", "-78.2647, -114.346, -15.3164, 1.11", "-80.292, -114.179, -16.8746, 0.55", "-80.8545, -114.158, -17.2422, 0.55", "-82.8047, -114.183, -18.326, 0.55", "-85.1244, -114.244, -19.3216, 1.94", "-86.8682, -114.389, -19.7763, 0.83", "-87.5084, -114.471, -19.9074, 0.28", "-88.6353, -114.703, -20.1289, 0.55", "-90.2488, -115.114, -20.4672, 0.55", "-91.6382, -115.538, -20.7812, 0.28", "-94.0991, -116.323, -21.29, 1.11", "-95.9566, -116.958, -21.5743, 0.28", "-98.0107, -117.557, -21.8256, 0.83", "-99.6244, -117.937, -21.9542, 0.28", "-100.332, -118.052, -21.976, 0.28", "-102.121, -118.205, -21.926, 0.28", "-103.109, -118.192, -21.8361, 0.55", "-105.097, -117.952, -21.6022, 0.55", "-105.903, -117.718, -21.571, 0.83", "-107.182, -117.244, -21.6347, 0.28", "-107.493, -117.13, -21.6703, 0.83", "-109.446, -116.416, -22.0201, 0.83", "-111.036, -115.839, -22.3274, 0.83", "-112.848, -115.278, -22.6967, 0.55", "-113.764, -115.031, -22.8921, 0.55", "-115.481, -114.675, -23.2489, 1.38", "-117.319, -114.391, -23.6163, 1.38", "-118.853, -114.241, -23.9074, 0.28", "-120.088, -114.262, -24.1564, 0.83", "-121.06, -114.393, -24.3578, 0.28", "-121.978, -114.625, -24.5617, 1.38", "-123.355, -115.099, -24.8957, 0.28", "-123.829, -115.337, -25.0214, 0.83", "-125.121, -116.156, -25.3941, 0.55", "-125.8, -116.619, -25.6125, 0.55", "-126.982, -117.417, -26.0322, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.14015, -174.678, -41.0282, 0.83", "-2.27929, -176.321, -41.1613, 0.83", "-2.43701, -177.872, -41.4756, 1.94", "-2.57921, -179.431, -41.856, 1.94", "-2.93136, -182.511, -42.7472, 0.83", "-3.19908, -184.653, -43.3839, 1.38", "-3.98977, -190.197, -45.2021, 0.28", "-4.05753, -190.684, -45.3807, 0.83", "-4.25613, -192.073, -45.9795, 0.55", "-4.58298, -193.981, -46.9702, 0.28", "-4.97952, -195.767, -48.1144, 0.55", "-5.58265, -198.166, -49.6302, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.14015, -174.678, -41.0282, 0.28", "-2.88037, -173.753, -37.6427, 0.28", "-2.986, -173.621, -37.1596, 1.38", "-3.74456, -172.672, -33.6902, 0.55", "-4.17863, -172.13, -31.7049, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "51.5948, -190.342, -44.4238, 1.38", "52.1378, -193.569, -44.7966, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "51.5948, -190.342, -44.4238, 0.55", "52.436, -188.923, -46.1237, 0.55", "52.9777, -188.008, -47.2185, 0.55", "54.4065, -185.598, -50.1059, 0.28", "54.8695, -184.817, -51.0416, 1.11", "56.2874, -182.425, -53.9069, 0.28", "57.4746, -180.422, -56.306, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-38.1966, 487.49, 52.9588, 1.38", "-37.8465, 489.586, 53.3888, 1.38", "-37.6654, 491.464, 53.9044, 0.55", "-37.5907, 493.04, 54.6545, 0.55", "-37.5258, 494.411, 55.3071, 0.55", "-37.4503, 496.003, 56.0649, 1.11", "-37.2993, 499.19, 57.5822, 0.55", "-37.3046, 501.46, 58.9191, 1.11", "-37.3865, 504.751, 61.2185, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-38.1966, 487.49, 52.9588, 0.55", "-39.2187, 490.472, 53.2217, 0.55", "-39.6715, 491.716, 53.5067, 0.28", "-40.2489, 492.886, 53.8641, 0.83", "-41.356, 494.94, 54.5576, 0.28", "-42.3552, 496.69, 55.2445, 0.55", "-43.3017, 498.318, 55.9414, 0.55", "-45.1428, 501.112, 57.4201, 1.11", "-46.7447, 503.401, 58.8776, 0.55", "-47.3891, 504.246, 59.4309, 0.55", "-48.852, 506.123, 60.6769, 0.83", "-49.9046, 507.396, 61.5137, 0.83", "-51.5962, 509.266, 62.609, 0.83", "-52.5456, 510.262, 63.1342, 0.83", "-54.9315, 512.901, 64.245, 0.55", "-56.9503, 515.121, 64.8501, 0.83", "-58.3362, 516.549, 65.0688, 0.83", "-60.8213, 519.059, 65.2907, 0.55", "-62.8925, 521.208, 65.3678, 0.55", "-64.1831, 522.536, 65.393, 0.83", "-67.1773, 525.591, 65.5642, 0.83", "-69.0329, 527.462, 65.6426, 0.83", "-70.3744, 528.802, 65.6988, 0.28", "-71.4447, 529.797, 65.7024, 0.55", "-73.7502, 531.449, 65.3629, 0.55", "-75.1557, 532.33, 65.1009, 0.55", "-76.4148, 533.034, 64.8249, 0.55", "-79.7362, 534.722, 64.031, 0.55", "-83.332, 536.25, 63.1441, 0.83", "-89.2199, 538.393, 61.8145, 0.28", "-91.1587, 538.933, 61.378, 0.28", "-92.2891, 539.182, 61.0978, 0.55", "-93.815, 539.453, 60.6581, 0.28", "-94.8042, 539.617, 60.3289, 0.83", "-96.3375, 539.931, 59.7791, 0.83", "-101.452, 541.117, 57.6881, 0.83", "-105.341, 541.982, 55.9583, 0.28", "-109.1, 542.752, 54.2353, 1.11", "-114.65, 543.838, 51.6669, 0.55", "-116.122, 544.107, 51.0262, 0.55", "-118.811, 544.498, 49.9523, 0.55", "-120.668, 544.712, 49.3518, 0.55", "-122.728, 544.86, 48.8371, 0.83", "-126.433, 545.023, 48.1592, 0.55", "-129.149, 545.106, 47.7419, 1.11", "-137.562, 545.377, 46.5551, 0.28", "-138.593, 545.439, 46.3829, 0.55", "-142.175, 545.793, 45.7492, 0.28", "-144.879, 546.1, 45.2182, 1.11", "-149.218, 546.61, 44.248, 0.55", "-151.217, 546.89, 43.6587, 1.11", "-155.905, 547.654, 42.0007, 0.55", "-157.167, 547.891, 41.4749, 0.55", "-160.353, 548.541, 39.9803, 1.11", "-161.948, 548.897, 39.141, 1.11", "-167.485, 550.245, 35.93, 0.28", "-169.093, 550.645, 34.9527, 0.83", "-173.018, 551.576, 32.6643, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-43.3886, 415.35, 22.7221, 0.55", "-43.903, 416.974, 23.3858, 0.55", "-44.5932, 418.993, 24.1476, 0.28", "-45.6528, 421.847, 25.1298, 1.38", "-47.3261, 425.946, 26.4348, 0.28", "-48.8322, 429.406, 27.4645, 0.55", "-49.652, 431.275, 27.9854, 0.55", "-50.3638, 432.859, 28.386, 0.83", "-51.4518, 435.142, 28.8977, 0.28", "-52.3831, 437.002, 29.1826, 0.83", "-53.029, 438.355, 29.2726, 0.28", "-53.6194, 439.704, 29.3825, 0.28", "-54.524, 441.777, 29.5545, 0.83", "-55.5687, 444.243, 29.7557, 0.28", "-56.0739, 445.483, 29.8521, 0.55", "-57.2294, 448.348, 30.0651, 0.55", "-58.1019, 450.484, 30.2346, 0.28", "-58.5581, 451.55, 30.3242, 0.28", "-59.3496, 453.468, 30.4838, 1.11", "-60.2525, 455.925, 30.5314, 0.28", "-60.8482, 457.63, 30.4321, 0.83", "-61.4292, 459.515, 30.1538, 0.28", "-61.917, 461.735, 29.6731, 0.83", "-62.1394, 463.109, 29.3387, 0.83", "-62.5699, 466.738, 28.3762, 0.55", "-62.798, 469.187, 27.7344, 0.55", "-62.9478, 470.75, 27.3588, 0.55", "-63.2366, 473.584, 26.7572, 0.83", "-63.4924, 475.976, 26.3553, 0.55", "-63.9531, 479.477, 25.9483, 1.11", "-64.3056, 481.911, 25.7889, 0.55", "-64.6617, 484.195, 25.6768, 0.55", "-64.9138, 485.647, 25.5633, 0.83", "-65.1176, 486.762, 25.3898, 0.55", "-65.7166, 490.652, 24.5454, 0.83", "-65.9228, 492.239, 23.9771, 0.28", "-65.9633, 492.562, 23.8234, 0.28", "-66.1114, 493.948, 23.0571, 0.55", "-66.4638, 497.496, 20.9584, 0.28", "-66.5328, 498.164, 20.5926, 0.55", "-66.8777, 501.621, 18.809, 0.28", "-67.0109, 503.026, 18.1984, 0.83", "-67.3398, 505.459, 17.3289, 0.83", "-67.498, 506.484, 17.0563, 0.28", "-67.8574, 509.557, 16.5003, 0.55", "-68.0683, 511.556, 16.2428, 0.28", "-68.2693, 514.148, 16.2761, 0.83", "-68.4494, 517.569, 16.5381, 0.28", "-68.469, 519.049, 16.7788, 0.28", "-68.4439, 521.11, 17.2652, 0.55", "-68.4066, 524.263, 18.0435, 0.83", "-68.4386, 528.433, 19.1335, 0.28", "-68.4319, 530.196, 19.5189, 0.83", "-68.4277, 533.12, 19.901, 0.28", "-68.4024, 536.978, 19.8487, 1.38", "-68.3879, 540.423, 19.4241, 0.28", "-68.2963, 543.443, 18.7822, 0.83", "-68.177, 546.35, 17.9263, 0.83", "-67.9452, 550.922, 16.4693, 0.55", "-67.8211, 555.592, 14.8985, 0.55", "-67.7307, 558.882, 13.9436, 0.83", "-67.671, 561.411, 13.5538, 0.83", "-67.6369, 564.682, 13.4257, 0.55", "-67.672, 566.838, 13.7816, 0.55", "-67.7046, 569.99, 14.8825, 1.38", "-67.866, 573.877, 16.7032, 0.83", "-68.0381, 578.33, 19.2178, 1.11", "-68.1275, 580.515, 20.6796, 1.11", "-68.1821, 584.918, 24.1933, 0.83", "-68.1321, 585.868, 25.034, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-43.3886, 415.35, 22.7221, 0.28", "-40.9993, 415.173, 23.3667, 0.28", "-40.3911, 415.128, 23.5309, 0.83", "-38.5163, 414.99, 24.0367, 0.28", "-38.2416, 414.969, 24.1108, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "34.9471, 572.577, -40.3341, 0.55", "35.8583, 575.358, -39.8326, 0.55", "36.8694, 578.459, -39.3617, 0.55", "37.4243, 580.245, -39.1385, 0.55", "38.2308, 582.57, -38.8034, 0.28", "39.064, 584.695, -38.4483, 0.83", "40.3632, 587.93, -37.8921, 0.28", "40.8762, 589.228, -37.6899, 0.83", "41.6083, 591.226, -37.4318, 0.55", "42.6768, 594.036, -37.1093, 0.55", "43.2991, 595.704, -36.9535, 0.83", "43.9908, 597.816, -36.8266, 0.28", "44.4909, 599.546, -36.7022, 0.83", "45.0248, 601.514, -36.6021, 0.83", "45.4335, 602.959, -36.6356, 0.28", "45.8963, 605.043, -36.8623, 0.83", "46.2196, 606.784, -37.2164, 0.83", "46.6712, 608.944, -38.0879, 0.83", "47.1696, 611.354, -39.4832, 1.11", "47.9203, 614.112, -41.7956, 0.55", "48.4002, 616.09, -43.9722, 0.55", "48.7939, 617.872, -46.3331, 1.11", "49.4999, 620.831, -51.0137, 0.28", "49.7176, 621.587, -52.3478, 0.28", "50.447, 623.924, -56.7128, 0.83", "50.9682, 625.266, -59.35, 0.55", "51.2174, 625.718, -60.3012, 0.55", "52.0682, 627.198, -63.2708, 0.55", "52.6973, 628.327, -65.4431, 0.83", "53.9042, 630.392, -69.6362, 0.55", "56.0046, 634.077, -77.2842, 1.94", "58.0961, 637.181, -84.2181, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "34.9471, 572.577, -40.3341, 0.55", "34.7794, 573.557, -40.6433, 0.55", "34.6501, 574.464, -40.9412, 0.83", "34.6115, 574.906, -41.1059, 0.55", "34.6038, 575.89, -41.445, 0.83", "34.6544, 577.31, -41.9225, 0.55", "34.6765, 577.926, -42.1636, 0.55", "34.7389, 578.502, -42.4489, 1.11", "34.8878, 579.31, -42.8794, 0.83", "35.1174, 580.313, -43.4721, 0.83", "35.4084, 581.477, -44.2476, 0.83", "35.6074, 582.443, -44.9922, 0.55", "35.7949, 583.525, -45.8633, 0.28", "36.0663, 584.564, -46.969, 0.83", "36.3004, 585.337, -47.9163, 0.55", "36.5912, 586.211, -49.0968, 1.38", "36.9026, 587.026, -50.2245, 0.55", "37.0977, 587.518, -50.8783, 0.55", "38.3465, 590.796, -55.0485, 0.83", "38.5279, 591.283, -55.678, 0.55", "38.5741, 591.401, -55.8196, 0.55", "38.8539, 592.153, -56.6174, 1.38", "39.0454, 592.752, -57.1108, 1.38", "39.2156, 593.985, -57.7165, 0.28", "39.1359, 594.535, -57.725, 0.55", "39.0003, 595.477, -57.6533, 0.28", "38.83, 596.492, -57.5436, 0.55", "38.443, 598.272, -57.2562, 0.55", "38.1789, 599.362, -57.05, 0.55", "37.8413, 600.654, -56.7617, 0.55", "37.5814, 601.714, -56.4544, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-24.5147, -127.244, 17.1338, 0.55", "-25.3102, -127.703, 18.2425, 0.55", "-25.9418, -128.071, 19.141, 0.28", "-26.5211, -128.409, 19.9649, 1.11", "-28.639, -129.643, 22.9775, 0.28", "-28.9151, -129.804, 23.3702, 1.11", "-30.3449, -130.638, 25.404, 0.28", "-30.676, -130.848, 25.9979, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-24.5147, -127.244, 17.1338, 0.83", "-26.0931, -128.813, 18.151, 0.83", "-27.6168, -130.097, 19.1141, 0.83", "-28.9961, -130.951, 20.0721, 0.83", "-31.4187, -132.323, 21.7575, 0.83", "-33.0908, -133.379, 23.2679, 0.83", "-35.2336, -134.928, 25.5629, 0.83", "-36.3655, -135.839, 26.9513, 0.83", "-38.7551, -138.304, 30.4029, 1.11", "-39.2112, -138.953, 31.2656, 1.11", "-40.7865, -142.283, 35.2419, 1.11", "-41.573, -144.615, 37.7183, 1.11", "-42.0878, -146.776, 39.7469, 1.11", "-42.4026, -148.788, 41.4915, 1.38", "-42.6763, -152.048, 43.9658, 0.55", "-42.7997, -153.429, 44.945, 0.83", "-42.9767, -154.792, 45.7377, 0.83", "-43.0803, -155.955, 46.4339, 0.83", "-43.2139, -157.06, 47.146, 0.83", "-43.4452, -159.206, 48.2873, 0.55", "-43.6561, -160.678, 48.7576, 0.55", "-43.8098, -161.501, 48.9246, 1.11", "-44.1195, -163.036, 49.0823, 0.28", "-44.313, -163.866, 49.1219, 1.11", "-44.8571, -165.692, 49.0337, 0.55", "-45.4467, -167.471, 48.6699, 0.55", "-46.2682, -169.456, 48.1028, 0.28", "-46.5537, -170.087, 47.8636, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-126.982, -117.417, -26.0322, 1.11", "-129.162, -117.225, -26.1926, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-126.982, -117.417, -26.0322, 0.28", "-127.436, -119.156, -26.571, 0.28", "-127.523, -119.486, -26.6732, 0.83", "-127.948, -121.111, -27.1767, 0.28", "-128.067, -121.569, -27.3186, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.58265, -198.166, -49.6302, 0.55", "-7.23063, -199.332, -48.7956, 0.55", "-8.39855, -200.135, -48.3063, 0.55", "-10.5619, -201.569, -47.0723, 0.28", "-11.1807, -202.029, -46.7059, 0.55", "-12.1341, -202.735, -46.142, 1.11", "-13.3584, -203.668, -45.4265, 0.28", "-14.3388, -204.35, -44.8591, 0.55", "-17.1436, -206.203, -43.4101, 0.28", "-19.5064, -207.732, -42.2994, 0.83", "-21.8755, -209.302, -41.1218, 0.28", "-22.5448, -209.76, -40.7709, 0.83", "-24.2471, -210.914, -39.8756, 0.83", "-26.0298, -212.042, -39.0493, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-5.58265, -198.166, -49.6302, 0.28", "-6.18033, -202.262, -49.5343, 0.28", "-6.37038, -203.707, -49.4303, 0.55", "-6.66157, -206.144, -49.2022, 0.28", "-6.98714, -209.081, -48.9007, 1.11", "-7.34345, -212.578, -48.5296, 0.28", "-7.41726, -213.51, -48.4342, 0.55", "-7.54619, -214.961, -48.1578, 0.28", "-7.61543, -215.869, -47.9549, 0.55", "-7.74752, -217.025, -47.6487, 0.28", "-7.83464, -217.663, -47.4996, 0.55", "-8.14365, -219.748, -47.2817, 0.28", "-8.41363, -221.588, -47.183, 1.11", "-9.05086, -225.474, -46.7752, 0.28", "-9.40599, -227.725, -46.4781, 1.11", "-9.69779, -229.518, -46.2317, 1.11", "-10.2567, -232.844, -45.7635, 0.28", "-10.6149, -234.951, -45.463, 0.83", "-11.1827, -239.458, -44.8966, 0.55", "-11.4081, -241.963, -44.7388, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "52.1378, -193.569, -44.7966, 0.28", "55.2114, -195.358, -46.0399, 0.28", "56.2863, -195.97, -46.482, 0.83", "57.9607, -196.948, -47.1958, 0.28", "60.2856, -198.348, -48.2192, 0.83", "62.5876, -199.833, -49.2574, 0.28", "64.2853, -200.92, -50.0461, 0.55", "65.1942, -201.447, -50.4775, 0.28", "67.1619, -202.487, -51.4716, 0.55", "68.4485, -203.145, -52.155, 0.28", "69.889, -203.845, -52.9352, 0.55", "71.7393, -204.642, -53.98, 0.55", "73.5301, -205.393, -55.1344, 0.55", "75.8818, -206.448, -56.7943, 0.83", "77.2003, -207.115, -57.9364, 0.28", "78.3682, -207.849, -59.1003, 0.83", "79.6755, -208.663, -60.0895, 1.38", "82.7561, -210.668, -61.9092, 0.28", "84.451, -211.912, -62.8657, 0.83", "87.0964, -213.918, -64.2919, 0.28", "88.8083, -215.196, -65.1282, 1.11", "95.5954, -220.111, -67.8538, 0.28", "96.4959, -220.742, -68.1486, 0.55", "101.131, -223.88, -69.4334, 0.28", "104.226, -226.047, -70.294, 0.28", "105.551, -227.082, -70.6631, 0.55", "107.525, -228.755, -71.4291, 0.28", "108.499, -229.852, -72.1121, 0.28", "109.756, -231.313, -72.9116, 0.55", "111.427, -233.138, -73.4985, 0.55", "112.336, -234.715, -73.9121, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "52.1378, -193.569, -44.7966, 0.55", "50.345, -195.118, -42.9224, 0.55", "49.602, -195.76, -42.1456, 0.55", "48.6862, -196.551, -41.188, 0.28", "47.4748, -197.598, -39.9215, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-37.3865, 504.751, 61.2185, 0.83", "-37.1925, 507.371, 62.265, 0.83", "-36.8502, 511.418, 63.8366, 0.83", "-36.5845, 514.182, 64.9174, 0.83", "-36.2182, 519.909, 67.1779, 0.83", "-36.1975, 520.571, 67.3969, 1.11", "-36.2033, 522.295, 67.8839, 0.55", "-36.2621, 523.315, 68.1352, 0.83", "-37.1554, 524.123, 66.4164, 0.28", "-37.8962, 524.913, 64.5051, 0.55", "-39.8355, 527.49, 58.3988, 0.28", "-40.3579, 528.338, 56.637, 0.83", "-40.7171, 529.043, 55.2797, 0.83", "-42.5872, 533.888, 46.9418, 0.55", "-42.9552, 535.353, 44.7038, 0.55", "-43.0095, 536.837, 43.0796, 1.11", "-42.3484, 542.155, 40.5226, 0.55", "-42.2071, 542.91, 40.3617, 0.83", "-41.9184, 544.124, 40.4741, 0.28", "-41.7654, 544.772, 40.6851, 0.55", "-41.6704, 545.809, 40.9359, 0.28", "-41.6869, 547.242, 41.0682, 0.83", "-41.6968, 548.748, 40.9476, 0.28", "-41.7211, 549.746, 40.8565, 0.83", "-41.9156, 552.95, 40.2856, 0.55", "-42.146, 555.855, 39.5854, 0.55", "-42.3584, 558.003, 38.9936, 0.55", "-42.6582, 560.998, 38.147, 0.55", "-42.8991, 563.009, 37.5324, 0.55", "-43.4535, 567.359, 36.2527, 0.55", "-43.6106, 568.711, 35.8395, 0.28", "-43.7492, 569.91, 35.4338, 0.55", "-43.9882, 571.57, 34.8715, 0.28", "-44.5069, 574.138, 33.9768, 0.55", "-44.7157, 575.2, 33.6334, 0.55", "-45.0365, 577.218, 33.0647, 0.28", "-45.312, 579.123, 32.3946, 0.28", "-45.3813, 580.103, 31.9961, 0.55", "-45.4517, 582.28, 30.5318, 0.28", "-45.3861, 583.41, 29.439, 0.83", "-45.2957, 584.603, 28.1811, 0.83", "-45.0617, 586.697, 25.7688, 0.55", "-44.8303, 588.224, 23.7928, 0.55", "-44.0378, 592.651, 17.5212, 0.28", "-43.4075, 595.387, 13.2285, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-37.3865, 504.751, 61.2185, 0.55", "-38.496, 506.808, 62.0954, 0.55", "-39.9562, 509.515, 63.2493, 0.55", "-40.9833, 511.419, 64.061, 0.55", "-41.875, 513.072, 64.7658, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-68.1321, 585.868, 25.034, 0.28", "-66.9815, 586.742, 23.2198, 0.28", "-66.6615, 586.986, 22.7152, 0.55", "-63.5135, 589.378, 17.7519, 0.28", "-63.1562, 589.65, 17.1887, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-68.1321, 585.868, 25.034, 0.28", "-70.3767, 588.062, 25.1305, 0.28", "-71.7642, 589.418, 25.1901, 0.83", "-72.8016, 590.433, 25.2347, 0.83", "-73.4581, 591.075, 25.263, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "58.0961, 637.181, -84.2181, 0.55", "56.6777, 638.022, -86.3954, 0.55", "55.1568, 639.047, -89.104, 0.55", "54.0213, 639.812, -91.1263, 0.55", "52.7026, 640.7, -93.4746, 0.28", "51.51, 641.504, -95.5986, 0.83", "50.5909, 642.123, -97.2355, 0.83", "49.7641, 642.891, -99.0877, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "58.0961, 637.181, -84.2181, 0.55", "57.8792, 639.942, -85.5761, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-129.162, -117.225, -26.1926, 0.28", "-131.655, -117.036, -26.9959, 0.28", "-134.148, -116.713, -27.7796, 0.55", "-136.936, -116.308, -28.6305, 0.28", "-138.508, -116.101, -29.0555, 1.11", "-140.929, -115.776, -29.6404, 0.28", "-141.546, -115.685, -29.8144, 0.55", "-144.992, -115.188, -30.8974, 0.28", "-145.974, -115.027, -31.2162, 1.11", "-148.195, -114.707, -31.9431, 0.28", "-149.514, -114.526, -32.3605, 1.11", "-152.673, -114.107, -33.2354, 1.11", "-154.836, -113.89, -33.9407, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-129.162, -117.225, -26.1926, 0.83", "-130.541, -118.79, -27.1606, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-26.0298, -212.042, -39.0493, 0.83", "-26.8757, -212.828, -39.6261, 0.83", "-28.2921, -214.143, -40.5921, 0.28", "-29.4801, -215.247, -41.4022, 1.11", "-32.8371, -218.365, -43.6916, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-26.0298, -212.042, -39.0493, 1.11", "-27.3398, -210.443, -38.8444, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-73.4581, 591.075, 25.263, 0.55", "-72.9964, 591.984, 23.6858, 0.55", "-72.4215, 592.836, 22.2522, 0.28", "-72.3075, 593.039, 21.7822, 0.55", "-71.5028, 594.474, 18.465, 0.28", "-71.1254, 595.146, 16.9093, 0.55", "-70.6124, 596.061, 14.7944, 0.28", "-70.3855, 596.713, 13.1018, 0.55", "-70.0375, 598.692, 7.62226, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-73.4581, 591.075, 25.263, 0.28", "-74.4066, 591.23, 25.6533, 0.28", "-75.8704, 591.47, 26.2557, 0.55", "-77.1128, 591.674, 26.767, 0.55", "-78.4236, 591.889, 27.3064, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "49.7641, 642.891, -99.0877, 0.55", "49.0512, 644.406, -99.1309, 0.55", "48.3622, 645.871, -99.1726, 0.55", "47.736, 647.202, -99.2105, 0.83", "46.9759, 648.818, -99.2565, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "49.7641, 642.891, -99.0877, 0.28", "47.5186, 644.336, -101.434, 0.28", "46.9024, 644.732, -102.078, 0.28", "45.6563, 645.534, -103.38, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-32.8371, -218.365, -43.6916, 1.11", "-32.1265, -220.932, -42.2859, 1.11", "-31.3926, -223.558, -40.7167, 0.28", "-30.9279, -225.379, -39.5861, 1.11", "-29.6819, -230.417, -36.0982, 0.28", "-29.395, -231.669, -35.1987, 1.94", "-28.6781, -235.314, -32.7081, 1.11", "-28.5524, -236.12, -32.141, 0.28", "-28.4474, -237.047, -31.4799, 0.83", "-28.3474, -239.516, -29.9141, 0.28", "-28.4493, -240.656, -29.4066, 1.11", "-28.836, -243.684, -28.3013, 0.28", "-29.2913, -246.089, -27.622, 0.28", "-29.5064, -247.353, -27.3029, 1.11", "-29.5064, -247.353, -27.3029, 1.11", "-29.8132, -248.925, -27.0853, 0.55", "-29.949, -249.613, -26.9668, 1.38", "-30.5002, -252.233, -26.2773, 0.28", "-30.5467, -252.515, -26.185, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-32.8371, -218.365, -43.6916, 0.55", "-35.3658, -217.934, -42.0222, 0.55", "-36.9327, -217.667, -40.9877, 0.55", "-38.275, -217.438, -40.1015, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-78.4236, 591.889, 27.3064, 0.55", "-78.8227, 592.97, 27.6492, 0.55", "-79.3929, 594.955, 28.3009, 0.55", "-79.6624, 596.289, 28.6812, 0.55", "-79.9723, 597.941, 29.0824, 0.55", "-80.2184, 599.465, 29.4894, 0.28", "-80.3297, 600.163, 29.6356, 0.83", "-80.5829, 602.156, 29.9385, 0.83", "-80.6991, 603.872, 30.1381, 0.83", "-80.7522, 604.753, 30.1987, 0.55", "-80.763, 607.002, 30.2412, 0.83", "-80.6684, 609.55, 30.0767, 0.28", "-80.6565, 610.77, 29.8936, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-78.4236, 591.889, 27.3064, 0.55", "-81.2458, 590.471, 29.2685, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_DBC_0c64ca4449_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.6449, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -0.928518, -14.5616, -1.16731, 2.22 ) }
    dend_29 { pt3dadd( -1.21951, -17.5377, -0.0654461, 2.49 ) }
    dend_29 { pt3dadd( -1.65627, -22.7073, 1.68823, 2.49 ) }
    dend_29 { pt3dadd( -1.91182, -27.7028, 3.13052, 2.49 ) }
    dend_29 { pt3dadd( -1.98362, -29.9698, 3.70727, 1.94 ) }
    dend_29 { pt3dadd( -2.01577, -32.4131, 4.26172, 1.38 ) }
    dend_29 { pt3dadd( -1.94615, -35.3852, 4.85009, 1.11 ) }
    dend_29 { pt3dadd( -1.85472, -37.3897, 5.1549, 0.83 ) }
    dend_29 { pt3dadd( -1.60511, -42.4185, 5.6133, 1.11 ) }
    dend_29 { pt3dadd( -1.52508, -44.4476, 5.63966, 1.11 ) }
    dend_29 { pt3dadd( -1.42501, -46.8759, 5.60895, 1.38 ) }
    dend_29 { pt3dadd( -1.312, -49.1998, 5.54168, 0.83 ) }
    dend_29 { pt3dadd( -1.1929, -51.1775, 5.49516, 1.66 ) }
    dend_29 { pt3dadd( -1.05262, -53.0491, 5.46582, 1.11 ) }
    dend_29 { pt3dadd( -0.714557, -57.1016, 5.36328, 1.66 ) }
    dend_29 { pt3dadd( -0.511146, -59.3226, 5.30182, 1.38 ) }
    dend_29 { pt3dadd( -0.219528, -62.1792, 5.21542, 1.94 ) }
    dend_29 { pt3dadd( 0.162558, -65.1912, 5.11746, 1.38 ) }
    dend_29 { pt3dadd( 0.688542, -68.321, 5.01135, 1.38 ) }
    dend_29 { pt3dadd( 1.48869, -72.1815, 4.8807, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.47005, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -0.901931, 15.0846, -0.827881, 1.94 ) }
    dend_0 { pt3dadd( -0.508902, 19.4748, -0.689221, 1.94 ) }
    dend_0 { pt3dadd( -0.110725, 26.0462, -0.274211, 1.94 ) }
    dend_0 { pt3dadd( -0.00537337, 28.4425, -0.092553, 1.38 ) }
    dend_0 { pt3dadd( 0.32002, 33.8587, 0.298082, 2.22 ) }
    dend_0 { pt3dadd( 0.639387, 39.1746, 0.68148, 1.94 ) }
    dend_0 { pt3dadd( 1.05496, 46.3632, 1.22883, 1.94 ) }
    dend_0 { pt3dadd( 1.29401, 51.5425, 1.73413, 1.94 ) }
    dend_0 { pt3dadd( 1.39053, 56.5551, 2.38251, 1.94 ) }
    dend_0 { pt3dadd( 1.46303, 63.3454, 3.26938, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 1.48869, -72.1815, 4.8807, 0.55 ) }
    dend_57 { pt3dadd( 2.05527, -73.2015, 5.11283, 0.55 ) }
    dend_57 { pt3dadd( 2.63286, -74.0743, 5.42836, 0.55 ) }
    dend_57 { pt3dadd( 3.49486, -75.2606, 6.02532, 0.28 ) }
    dend_57 { pt3dadd( 4.49232, -76.3937, 6.65197, 0.55 ) }
    dend_57 { pt3dadd( 5.69069, -77.6318, 7.33352, 0.28 ) }
    dend_57 { pt3dadd( 6.70741, -78.596, 7.94718, 1.11 ) }
    dend_57 { pt3dadd( 8.34019, -80.0422, 8.99526, 0.28 ) }
    dend_57 { pt3dadd( 9.42037, -80.9104, 9.82421, 0.83 ) }
    dend_57 { pt3dadd( 11.0353, -82.098, 11.1576, 0.83 ) }
    dend_57 { pt3dadd( 12.0039, -82.7862, 11.9956, 0.83 ) }
    dend_57 { pt3dadd( 13.6406, -83.9675, 13.4333, 0.83 ) }
    dend_57 { pt3dadd( 14.4928, -84.5765, 14.1875, 1.11 ) }
    dend_57 { pt3dadd( 17.0868, -86.5689, 16.3511, 0.28 ) }
    dend_57 { pt3dadd( 17.6546, -87.0479, 16.7706, 0.28 ) }
    dend_57 { pt3dadd( 18.1423, -87.4865, 17.0959, 0.55 ) }
    dend_57 { pt3dadd( 18.8538, -88.1201, 17.4633, 0.55 ) }
    dend_57 { pt3dadd( 20.3195, -89.4115, 17.9441, 0.55 ) }
    dend_57 { pt3dadd( 21.6862, -90.5377, 18.223, 0.55 ) }
    dend_57 { pt3dadd( 23.1582, -91.7437, 18.3228, 0.83 ) }
    dend_57 { pt3dadd( 24.5411, -92.7754, 18.398, 1.11 ) }
    dend_57 { pt3dadd( 25.7501, -93.6543, 18.4667, 0.55 ) }
    dend_57 { pt3dadd( 26.4092, -94.1451, 18.5123, 1.38 ) }
    dend_57 { pt3dadd( 27.2716, -94.781, 18.5844, 0.55 ) }
    dend_57 { pt3dadd( 28.2497, -95.383, 18.6599, 1.11 ) }
    dend_57 { pt3dadd( 30.3415, -96.5641, 18.7687, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.48869, -72.1815, 4.8807, 1.38 ) }
    dend_30 { pt3dadd( 1.25233, -73.3005, 4.75061, 1.38 ) }
    dend_30 { pt3dadd( 0.54597, -76.5824, 4.65226, 1.38 ) }
    dend_30 { pt3dadd( 0.10577, -78.6276, 4.59098, 1.11 ) }
    dend_30 { pt3dadd( -0.850948, -83.0726, 4.45777, 1.66 ) }
    dend_30 { pt3dadd( -1.46062, -85.9052, 4.37289, 2.22 ) }
    dend_30 { pt3dadd( -1.77151, -87.3497, 4.3296, 2.22 ) }
    dend_30 { pt3dadd( -2.58512, -91.4968, 4.09656, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.46303, 63.3454, 3.26938, 1.38 ) }
    dend_12 { pt3dadd( 1.36196, 65.8104, 3.30275, 1.38 ) }
    dend_12 { pt3dadd( 1.34781, 67.4823, 3.29665, 1.38 ) }
    dend_12 { pt3dadd( 1.36429, 69.9263, 3.26149, 1.11 ) }
    dend_12 { pt3dadd( 1.46746, 73.6868, 3.23525, 1.38 ) }
    dend_12 { pt3dadd( 1.51094, 75.5652, 3.21932, 1.38 ) }
    dend_12 { pt3dadd( 1.51984, 78.845, 3.22478, 1.38 ) }
    dend_12 { pt3dadd( 1.48376, 82.995, 3.2456, 1.38 ) }
    dend_12 { pt3dadd( 1.38638, 86.0182, 3.28106, 1.38 ) }
    dend_12 { pt3dadd( 1.26858, 88.832, 3.32707, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 1.08107, 91.4589, 3.39796, 1.38 ) }
    dend_12 { pt3dadd( 0.572388, 95.841, 3.57857, 1.66 ) }
    dend_12 { pt3dadd( 0.177534, 98.3566, 3.71578, 1.38 ) }
    dend_12 { pt3dadd( -0.343888, 101.218, 3.80773, 1.38 ) }
    dend_12 { pt3dadd( -0.972947, 104.506, 3.81755, 1.38 ) }
    dend_12 { pt3dadd( -1.44581, 107.129, 3.73843, 1.38 ) }
    dend_12 { pt3dadd( -1.64909, 108.522, 3.66865, 1.38 ) }
    dend_12 { pt3dadd( -1.89504, 110.678, 3.52488, 1.11 ) }
    dend_12 { pt3dadd( -2.19765, 113.942, 3.3035, 1.11 ) }
    dend_12 { pt3dadd( -2.36412, 117.381, 3.04834, 1.11 ) }
    dend_12 { pt3dadd( -2.45442, 120.854, 2.81285, 1.38 ) }
    dend_12 { pt3dadd( -2.46492, 123.188, 2.70515, 1.11 ) }
    dend_12 { pt3dadd( -2.47209, 125.428, 2.66665, 1.38 ) }
    dend_12 { pt3dadd( -2.46424, 126.871, 2.71458, 1.38 ) }
    dend_12 { pt3dadd( -2.3994, 129.177, 2.96995, 1.38 ) }
    dend_12 { pt3dadd( -2.32317, 132.479, 3.44936, 1.94 ) }
    dend_12 { pt3dadd( -2.26398, 134.225, 3.72724, 1.66 ) }
    dend_12 { pt3dadd( -2.2348, 134.959, 3.83831, 1.66 ) }
    dend_12 { pt3dadd( -2.15192, 137.248, 4.15336, 1.66 ) }
    dend_12 { pt3dadd( -2.03466, 140.859, 4.61793, 1.66 ) }
    dend_12 { pt3dadd( -2.01984, 142.743, 4.84946, 1.38 ) }
    dend_12 { pt3dadd( -2.04774, 145.717, 5.17382, 1.66 ) }
    dend_12 { pt3dadd( -2.07347, 148.337, 5.38435, 1.11 ) }
    dend_12 { pt3dadd( -2.09664, 151.243, 5.57841, 1.11 ) }
    dend_12 { pt3dadd( -2.12827, 152.861, 5.65395, 1.11 ) }
    dend_12 { pt3dadd( -2.15074, 154.647, 5.71149, 1.11 ) }
    dend_12 { pt3dadd( -2.13078, 155.985, 5.75837, 1.11 ) }
    dend_12 { pt3dadd( -1.99608, 158.826, 5.85944, 1.38 ) }
    dend_12 { pt3dadd( -1.83622, 160.991, 5.93391, 1.11 ) }
    dend_12 { pt3dadd( -1.70512, 162.614, 5.98244, 1.38 ) }
    dend_12 { pt3dadd( -1.55975, 164.457, 6.02865, 1.38 ) }
    dend_12 { pt3dadd( -1.43519, 166.558, 6.07504, 0.83 ) }
    dend_12 { pt3dadd( -1.3565, 169.102, 6.12791, 1.38 ) }
    dend_12 { pt3dadd( -1.36982, 171.131, 6.16637, 0.83 ) }
    dend_12 { pt3dadd( -1.43503, 173.192, 6.18916, 1.38 ) }
    dend_12 { pt3dadd( -1.54389, 174.816, 6.22231, 1.38 ) }
    dend_12 { pt3dadd( -1.79387, 177.479, 6.27344, 1.38 ) }
    dend_12 { pt3dadd( -1.89573, 178.654, 6.28611, 1.38 ) }
    dend_12 { pt3dadd( -2.01287, 180.478, 6.28474, 1.11 ) }
    dend_12 { pt3dadd( -2.07505, 182.747, 6.25139, 1.11 ) }
    dend_12 { pt3dadd( -2.0579, 186.027, 6.1611, 1.66 ) }
    dend_12 { pt3dadd( -1.95734, 188.137, 6.0704, 1.11 ) }
    dend_12 { pt3dadd( -1.88346, 188.971, 6.07391, 1.11 ) }
    dend_12 { pt3dadd( -1.77423, 190.42, 6.15601, 1.38 ) }
    dend_12 { pt3dadd( -1.64696, 192.252, 6.3449, 1.38 ) }
    dend_12 { pt3dadd( -1.54483, 194.316, 6.64837, 1.94 ) }
    dend_12 { pt3dadd( -1.50947, 196.453, 7.04656, 1.94 ) }
    dend_12 { pt3dadd( -1.59929, 199.938, 7.76458, 1.11 ) }
    dend_12 { pt3dadd( -1.74526, 201.879, 8.16254, 1.11 ) }
    dend_12 { pt3dadd( -1.96623, 203.717, 8.53494, 1.38 ) }
    dend_12 { pt3dadd( -2.32044, 205.927, 8.95323, 1.38 ) }
    dend_12 { pt3dadd( -2.64422, 207.776, 9.24793, 1.11 ) }
    dend_12 { pt3dadd( -2.97372, 209.809, 9.47219, 0.83 ) }
    dend_12 { pt3dadd( -3.32411, 212.136, 9.58544, 0.83 ) }
    dend_12 { pt3dadd( -3.51396, 213.478, 9.64608, 0.83 ) }
    dend_12 { pt3dadd( -3.84937, 215.809, 9.74964, 1.11 ) }
    dend_12 { pt3dadd( -4.1032, 217.857, 9.81028, 1.11 ) }
    dend_12 { pt3dadd( -4.36644, 219.965, 9.85557, 1.38 ) }
    dend_12 { pt3dadd( -4.77829, 223.171, 9.91214, 1.38 ) }
    dend_12 { pt3dadd( -5.00864, 225.135, 9.93376, 1.11 ) }
    dend_12 { pt3dadd( -5.27109, 227.464, 9.95101, 1.38 ) }
    dend_12 { pt3dadd( -5.51638, 229.376, 9.94287, 0.83 ) }
    dend_12 { pt3dadd( -5.90035, 231.928, 9.92874, 0.83 ) }
    dend_12 { pt3dadd( -6.19828, 233.953, 9.89123, 1.38 ) }
    dend_12 { pt3dadd( -6.28669, 234.865, 9.85357, 1.38 ) }
    dend_12 { pt3dadd( -6.43026, 236.535, 9.76737, 1.11 ) }
    dend_12 { pt3dadd( -6.6768, 239.296, 9.6114, 1.38 ) }
    dend_12 { pt3dadd( -6.8086, 240.977, 9.50681, 1.11 ) }
    dend_12 { pt3dadd( -6.87738, 242.629, 9.37091, 1.11 ) }
    dend_12 { pt3dadd( -6.9291, 244.283, 9.2292, 1.11 ) }
    dend_12 { pt3dadd( -6.99819, 246.346, 9.05305, 1.11 ) }
    dend_12 { pt3dadd( -7.1006, 249.894, 8.72955, 1.11 ) }
    dend_12 { pt3dadd( -7.12939, 251.976, 8.53695, 1.11 ) }
    dend_12 { pt3dadd( -7.16877, 254.275, 8.38067, 1.38 ) }
    dend_12 { pt3dadd( -7.2293, 256.634, 8.29642, 1.38 ) }
    dend_12 { pt3dadd( -7.30487, 258.841, 8.27904, 0.83 ) }
    dend_12 { pt3dadd( -7.33834, 260.537, 8.31154, 1.38 ) }
    dend_12 { pt3dadd( -7.34072, 262.14, 8.39072, 1.38 ) }
    dend_12 { pt3dadd( -7.33849, 264.315, 8.55726, 1.11 ) }
    dend_12 { pt3dadd( -7.3165, 265.761, 8.69399, 0.55 ) }
    dend_12 { pt3dadd( -7.21882, 267.201, 8.81783, 1.11 ) }
    dend_12 { pt3dadd( -7.11458, 268.564, 8.92876, 1.11 ) }
    dend_12 { pt3dadd( -7.00231, 270.02, 9.01917, 0.83 ) }
    dend_12 { pt3dadd( -6.88876, 271.559, 9.05651, 0.83 ) }
    dend_12 { pt3dadd( -6.80119, 272.958, 9.03714, 0.83 ) }
    dend_12 { pt3dadd( -6.71671, 275.505, 9.02167, 1.11 ) }
    dend_12 { pt3dadd( -6.66639, 277.167, 8.98322, 1.66 ) }
    dend_12 { pt3dadd( -6.68021, 278.766, 8.94282, 1.66 ) }
    dend_12 { pt3dadd( -6.78775, 280.836, 8.90401, 0.83 ) }
    dend_12 { pt3dadd( -6.89417, 282.499, 8.8647, 0.83 ) }
    dend_12 { pt3dadd( -7.02013, 284.845, 8.79371, 1.11 ) }
    dend_12 { pt3dadd( -7.21005, 287.638, 8.71169, 0.83 ) }
    dend_12 { pt3dadd( -7.40124, 290.758, 8.61687, 0.83 ) }
    dend_12 { pt3dadd( -7.5095, 292.543, 8.56131, 0.83 ) }
    dend_12 { pt3dadd( -7.74607, 296.232, 8.45319, 1.38 ) }
    dend_12 { pt3dadd( -8.01612, 299.919, 8.36802, 1.38 ) }
    dend_12 { pt3dadd( -8.14457, 301.561, 8.34303, 1.11 ) }
    dend_12 { pt3dadd( -8.41857, 304.107, 8.35607, 1.11 ) }
    dend_12 { pt3dadd( -8.61101, 305.724, 8.36819, 0.83 ) }
    dend_12 { pt3dadd( -8.79613, 306.859, 8.39257, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -9.19206, 308.759, 8.5536, 1.38 ) }
    dend_12 { pt3dadd( -9.38154, 309.747, 8.71089, 1.38 ) }
    dend_12 { pt3dadd( -9.67323, 312.063, 9.14884, 0.83 ) }
    dend_12 { pt3dadd( -9.77688, 313.646, 9.48133, 0.83 ) }
    dend_12 { pt3dadd( -9.8821, 316.175, 9.89567, 0.83 ) }
    dend_12 { pt3dadd( -9.89812, 318.54, 10.2845, 0.83 ) }
    dend_12 { pt3dadd( -9.81175, 321.578, 10.7921, 1.38 ) }
    dend_12 { pt3dadd( -9.71698, 323.64, 11.1456, 1.38 ) }
    dend_12 { pt3dadd( -9.55129, 325.077, 11.3815, 1.38 ) }
    dend_12 { pt3dadd( -8.96177, 328.408, 11.844, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.46303, 63.3454, 3.26938, 1.11 ) }
    dend_1 { pt3dadd( 3.75949, 68.5218, -1.62923, 1.11 ) }
    dend_1 { pt3dadd( 4.41799, 70.1227, -2.92467, 1.11 ) }
    dend_1 { pt3dadd( 5.49021, 72.8807, -5.23237, 1.11 ) }
    dend_1 { pt3dadd( 8.33842, 80.7923, -11.645, 1.11 ) }
    dend_1 { pt3dadd( 9.253, 83.7282, -13.762, 1.11 ) }
    dend_1 { pt3dadd( 10.372, 87.8549, -16.4972, 0.83 ) }
    dend_1 { pt3dadd( 10.8718, 90.3265, -17.9125, 0.83 ) }
    dend_1 { pt3dadd( 12.1737, 97.393, -21.5265, 1.11 ) }
    dend_1 { pt3dadd( 12.6651, 100.628, -22.8696, 1.11 ) }
    dend_1 { pt3dadd( 12.9835, 105.722, -24.3633, 1.11 ) }
    dend_1 { pt3dadd( 12.941, 110.395, -25.4244, 1.11 ) }
    dend_1 { pt3dadd( 12.7334, 113.656, -25.8823, 1.38 ) }
    dend_1 { pt3dadd( 12.5286, 115.946, -25.91, 1.38 ) }
    dend_1 { pt3dadd( 12.2779, 118.602, -25.6689, 1.11 ) }
    dend_1 { pt3dadd( 11.8123, 123.662, -25.1747, 1.11 ) }
    dend_1 { pt3dadd( 11.4273, 129.008, -24.7566, 0.83 ) }
    dend_1 { pt3dadd( 11.3736, 129.853, -24.664, 0.83 ) }
    dend_1 { pt3dadd( 11.1802, 135.01, -24.2246, 1.66 ) }
    dend_1 { pt3dadd( 11.073, 139.427, -24.0996, 0.83 ) }
    dend_1 { pt3dadd( 11.0689, 140.276, -24.1288, 0.83 ) }
    dend_1 { pt3dadd( 11.169, 143.873, -24.445, 1.66 ) }
    dend_1 { pt3dadd( 11.2422, 146.134, -24.7465, 1.66 ) }
    dend_1 { pt3dadd( 11.2822, 148.997, -25.0498, 1.11 ) }
    dend_1 { pt3dadd( 11.2327, 152.372, -25.3868, 1.11 ) }
    dend_1 { pt3dadd( 11.1106, 155.996, -25.629, 1.11 ) }
    dend_1 { pt3dadd( 11.0153, 160.317, -25.9373, 1.66 ) }
    dend_1 { pt3dadd( 10.9311, 164.402, -26.1707, 1.66 ) }
    dend_1 { pt3dadd( 10.8399, 168.668, -26.51, 0.83 ) }
    dend_1 { pt3dadd( 10.8113, 172.422, -26.9507, 0.83 ) }
    dend_1 { pt3dadd( 10.8731, 175.071, -27.3609, 0.83 ) }
    dend_1 { pt3dadd( 11.0788, 178.869, -28.0064, 1.66 ) }
    dend_1 { pt3dadd( 11.3415, 182.504, -28.6718, 0.55 ) }
    dend_1 { pt3dadd( 11.6037, 186.049, -29.3082, 0.55 ) }
    dend_1 { pt3dadd( 11.9538, 190.008, -29.9166, 1.38 ) }
    dend_1 { pt3dadd( 12.2853, 193.307, -30.2569, 1.94 ) }
    dend_1 { pt3dadd( 12.6458, 197.289, -30.5292, 0.83 ) }
    dend_1 { pt3dadd( 12.7973, 199.506, -30.6055, 0.83 ) }
    dend_1 { pt3dadd( 12.9669, 203.25, -30.6806, 1.94 ) }
    dend_1 { pt3dadd( 13.0724, 207.964, -30.5928, 1.94 ) }
    dend_1 { pt3dadd( 13.0704, 211.034, -30.5166, 1.11 ) }
    dend_1 { pt3dadd( 13.0145, 214.642, -30.2251, 1.11 ) }
    dend_1 { pt3dadd( 12.9094, 217.91, -29.8601, 1.11 ) }
    dend_1 { pt3dadd( 12.8322, 219.794, -29.5927, 1.11 ) }
    dend_1 { pt3dadd( 12.7347, 221.721, -29.318, 1.11 ) }
    dend_1 { pt3dadd( 12.2474, 228.893, -28.327, 2.22 ) }
    dend_1 { pt3dadd( 11.7634, 237.097, -27.2159, 0.83 ) }
    dend_1 { pt3dadd( 11.6747, 239.489, -26.9224, 0.83 ) }
    dend_1 { pt3dadd( 11.6592, 242.72, -26.5733, 1.11 ) }
    dend_1 { pt3dadd( 11.6986, 246.744, -26.267, 0.55 ) }
    dend_1 { pt3dadd( 11.68, 249.876, -26.2003, 2.22 ) }
    dend_1 { pt3dadd( 11.6632, 251.832, -26.3388, 1.94 ) }
    dend_1 { pt3dadd( 11.7161, 254.668, -26.7947, 0.83 ) }
    dend_1 { pt3dadd( 11.8317, 257.687, -27.2475, 0.83 ) }
    dend_1 { pt3dadd( 11.9871, 260.721, -27.6439, 0.83 ) }
    dend_1 { pt3dadd( 12.0765, 263.927, -27.9819, 1.66 ) }
    dend_1 { pt3dadd( 12.1382, 267.454, -28.3331, 0.83 ) }
    dend_1 { pt3dadd( 12.1542, 269.473, -28.4974, 0.83 ) }
    dend_1 { pt3dadd( 12.1652, 271.185, -28.6403, 1.11 ) }
    dend_1 { pt3dadd( 12.1553, 273.831, -28.8932, 0.83 ) }
    dend_1 { pt3dadd( 12.2079, 278.456, -29.3645, 0.83 ) }
    dend_1 { pt3dadd( 12.2129, 279.292, -29.451, 0.83 ) }
    dend_1 { pt3dadd( 12.1121, 283.91, -29.9297, 1.94 ) }
    dend_1 { pt3dadd( 12.0316, 287.355, -30.2931, 0.55 ) }
    dend_1 { pt3dadd( 11.9913, 291.244, -30.7788, 0.55 ) }
    dend_1 { pt3dadd( 11.9869, 291.945, -30.8977, 0.55 ) }
    dend_1 { pt3dadd( 11.9497, 297.481, -32.009, 2.22 ) }
    dend_1 { pt3dadd( 12.0137, 301.707, -32.8677, 0.83 ) }
    dend_1 { pt3dadd( 12.0877, 303.622, -33.2261, 0.83 ) }
    dend_1 { pt3dadd( 12.349, 308.152, -33.9632, 1.38 ) }
    dend_1 { pt3dadd( 12.7026, 312.142, -34.5249, 0.55 ) }
    dend_1 { pt3dadd( 13.045, 315.685, -34.9271, 0.55 ) }
    dend_1 { pt3dadd( 13.6522, 320.606, -35.4653, 0.83 ) }
    dend_1 { pt3dadd( 14.5351, 327.528, -35.7966, 0.83 ) }
    dend_1 { pt3dadd( 14.7776, 329.476, -35.7827, 2.49 ) }
    dend_1 { pt3dadd( 15.2088, 333.237, -35.5381, 2.49 ) }
    dend_1 { pt3dadd( 15.8012, 339.087, -34.9532, 0.83 ) }
    dend_1 { pt3dadd( 16.1069, 342.382, -34.5908, 0.83 ) }
    dend_1 { pt3dadd( 16.3952, 348.926, -33.9306, 0.83 ) }
    dend_1 { pt3dadd( 16.4414, 350.866, -33.7394, 0.83 ) }
    dend_1 { pt3dadd( 16.3907, 355.081, -33.415, 1.66 ) }
    dend_1 { pt3dadd( 16.2924, 359.344, -33.1604, 0.83 ) }
    dend_1 { pt3dadd( 16.2152, 362.459, -33.0228, 0.83 ) }
    dend_1 { pt3dadd( 16.1055, 367.114, -32.9025, 0.83 ) }
    dend_1 { pt3dadd( 16.0924, 370.709, -32.945, 1.94 ) }
    dend_1 { pt3dadd( 16.1988, 376.652, -32.9669, 0.83 ) }
    dend_1 { pt3dadd( 16.3958, 382.779, -32.9567, 0.83 ) }
    dend_1 { pt3dadd( 16.5094, 385.529, -32.9427, 0.83 ) }
    dend_1 { pt3dadd( 16.6418, 388.991, -32.929, 1.11 ) }
    dend_1 { pt3dadd( 16.7376, 391.673, -32.921, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 16.7946, 396.269, -32.9475, 0.83 ) }
    dend_1 { pt3dadd( 16.7604, 397.852, -32.9769, 0.83 ) }
    dend_1 { pt3dadd( 16.6287, 400.527, -33.0543, 0.83 ) }
    dend_1 { pt3dadd( 16.4045, 404.96, -33.1849, 0.83 ) }
    dend_1 { pt3dadd( 16.262, 409.288, -33.381, 0.83 ) }
    dend_1 { pt3dadd( 16.0987, 414.355, -33.7028, 1.11 ) }
    dend_1 { pt3dadd( 16.0453, 418.787, -34.0699, 1.66 ) }
    dend_1 { pt3dadd( 16.1013, 423.031, -34.4364, 0.83 ) }
    dend_1 { pt3dadd( 16.2141, 426.5, -34.7724, 0.83 ) }
    dend_1 { pt3dadd( 16.529, 430.489, -35.154, 0.83 ) }
    dend_1 { pt3dadd( 16.8441, 433.416, -35.439, 0.83 ) }
    dend_1 { pt3dadd( 17.1858, 436.641, -35.7854, 0.83 ) }
    dend_1 { pt3dadd( 17.7218, 441.683, -36.3199, 1.66 ) }
    dend_1 { pt3dadd( 18.125, 445.687, -36.7369, 0.83 ) }
    dend_1 { pt3dadd( 18.3198, 447.809, -36.9326, 0.83 ) }
    dend_1 { pt3dadd( 18.6821, 452.958, -37.2858, 1.38 ) }
    dend_1 { pt3dadd( 19.0913, 457.789, -37.5715, 0.83 ) }
    dend_1 { pt3dadd( 19.2901, 460.47, -37.7182, 0.83 ) }
    dend_1 { pt3dadd( 19.4121, 462.076, -37.8252, 1.66 ) }
    dend_1 { pt3dadd( 19.6028, 465.331, -38.0246, 1.66 ) }
    dend_1 { pt3dadd( 19.6538, 468.614, -38.2693, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 30.3415, -96.5641, 18.7687, 0.83 ) }
    dend_59 { pt3dadd( 31.5692, -96.5169, 20.236, 0.83 ) }
    dend_59 { pt3dadd( 32.3621, -96.468, 21.2854, 0.28 ) }
    dend_59 { pt3dadd( 34.2707, -96.3504, 23.8114, 0.55 ) }
    dend_59 { pt3dadd( 35.0231, -96.304, 24.8073, 0.55 ) }
    dend_59 { pt3dadd( 36.1082, -96.2371, 26.2434, 0.55 ) }
    dend_59 { pt3dadd( 39.5967, -96.0221, 30.8607, 0.28 ) }
    dend_59 { pt3dadd( 40.0258, -96.0446, 31.5438, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 30.3415, -96.5641, 18.7687, 0.55 ) }
    dend_58 { pt3dadd( 32.197, -98.1476, 20.2393, 0.55 ) }
    dend_58 { pt3dadd( 32.7073, -98.406, 20.6274, 0.83 ) }
    dend_58 { pt3dadd( 33.9687, -99.1134, 21.6606, 0.28 ) }
    dend_58 { pt3dadd( 34.4938, -99.4189, 22.1527, 0.83 ) }
    dend_58 { pt3dadd( 35.5284, -100.002, 23.1029, 0.83 ) }
    dend_58 { pt3dadd( 38.0172, -101.395, 25.336, 0.83 ) }
    dend_58 { pt3dadd( 41.2609, -103.033, 27.9735, 0.83 ) }
    dend_58 { pt3dadd( 42.5172, -103.555, 29.0618, 0.83 ) }
    dend_58 { pt3dadd( 45.7186, -104.441, 31.852, 1.11 ) }
    dend_58 { pt3dadd( 46.7474, -104.576, 32.8788, 0.83 ) }
    dend_58 { pt3dadd( 47.0992, -104.556, 33.2795, 0.83 ) }
    dend_58 { pt3dadd( 48.2003, -104.091, 34.7967, 0.83 ) }
    dend_58 { pt3dadd( 49.9811, -102.438, 37.8742, 0.83 ) }
    dend_58 { pt3dadd( 51.1614, -100.951, 39.9817, 0.83 ) }
    dend_58 { pt3dadd( 52.4279, -98.6265, 42.5201, 0.83 ) }
    dend_58 { pt3dadd( 52.958, -97.4301, 43.825, 1.11 ) }
    dend_58 { pt3dadd( 53.6339, -95.5745, 45.8217, 0.28 ) }
    dend_58 { pt3dadd( 53.7206, -95.2127, 46.2109, 0.55 ) }
    dend_58 { pt3dadd( 54.0079, -93.5693, 47.6229, 0.28 ) }
    dend_58 { pt3dadd( 53.915, -92.6652, 48.5693, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.58512, -91.4968, 4.09656, 1.11 ) }
    dend_46 { pt3dadd( -3.90035, -92.942, 4.85109, 1.11 ) }
    dend_46 { pt3dadd( -5.40993, -94.9322, 5.81714, 1.11 ) }
    dend_46 { pt3dadd( -8.89313, -100.527, 8.16434, 1.38 ) }
    dend_46 { pt3dadd( -10.7284, -103.862, 9.65238, 1.38 ) }
    dend_46 { pt3dadd( -12.0804, -106.318, 10.7486, 1.66 ) }
    dend_46 { pt3dadd( -14.2246, -110.214, 12.4871, 1.11 ) }
    dend_46 { pt3dadd( -15.3095, -112.47, 13.5039, 1.11 ) }
    dend_46 { pt3dadd( -16.638, -115.985, 15.0213, 1.38 ) }
    dend_46 { pt3dadd( -18.2292, -122.003, 17.2979, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.58512, -91.4968, 4.09656, 1.38 ) }
    dend_31 { pt3dadd( -2.67056, -96.0935, 4.15904, 1.38 ) }
    dend_31 { pt3dadd( -2.63403, -99.8104, 4.26776, 1.94 ) }
    dend_31 { pt3dadd( -2.61808, -102.51, 4.12878, 1.38 ) }
    dend_31 { pt3dadd( -2.63254, -106.985, 3.26886, 1.94 ) }
    dend_31 { pt3dadd( -2.5822, -110.459, 2.28312, 0.83 ) }
    dend_31 { pt3dadd( -2.51171, -112.56, 1.53604, 0.83 ) }
    dend_31 { pt3dadd( -2.2966, -115.255, 0.378713, 1.38 ) }
    dend_31 { pt3dadd( -1.75756, -119.306, -1.87058, 1.94 ) }
    dend_31 { pt3dadd( -0.950915, -123.602, -4.90634, 0.83 ) }
    dend_31 { pt3dadd( -0.649093, -124.92, -6.04588, 0.83 ) }
    dend_31 { pt3dadd( 0.0928202, -128.127, -9.3802, 1.11 ) }
    dend_31 { pt3dadd( 0.547079, -129.963, -11.3875, 0.55 ) }
    dend_31 { pt3dadd( 0.739122, -130.926, -12.4921, 0.55 ) }
    dend_31 { pt3dadd( 1.04571, -132.909, -14.7285, 0.55 ) }
    dend_31 { pt3dadd( 1.09607, -133.936, -15.9653, 0.83 ) }
    dend_31 { pt3dadd( 1.06217, -136.235, -18.9068, 0.55 ) }
    dend_31 { pt3dadd( 0.907918, -138.497, -22.0507, 1.66 ) }
    dend_31 { pt3dadd( 0.474165, -142.063, -27.0855, 0.55 ) }
    dend_31 { pt3dadd( 0.195524, -143.607, -29.2005, 1.66 ) }
    dend_31 { pt3dadd( -0.556512, -146.939, -33.5121, 0.55 ) }
    dend_31 { pt3dadd( -0.878098, -148.4, -35.4372, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.96177, 328.408, 11.844, 0.83 ) }
    dend_28 { pt3dadd( -8.96978, 329.974, 10.6987, 0.83 ) }
    dend_28 { pt3dadd( -9.0607, 331.703, 9.44584, 0.83 ) }
    dend_28 { pt3dadd( -9.14448, 333.963, 7.98961, 0.55 ) }
    dend_28 { pt3dadd( -9.13859, 336.202, 6.63437, 0.83 ) }
    dend_28 { pt3dadd( -9.09919, 338.464, 5.38508, 0.28 ) }
    dend_28 { pt3dadd( -9.07961, 339.514, 4.85808, 0.55 ) }
    dend_28 { pt3dadd( -9.1109, 340.232, 4.51296, 0.55 ) }
    dend_28 { pt3dadd( -9.16014, 342.332, 3.62384, 1.11 ) }
    dend_28 { pt3dadd( -9.14137, 344.127, 3.03879, 0.55 ) }
    dend_28 { pt3dadd( -9.10873, 345.67, 2.6206, 1.11 ) }
    dend_28 { pt3dadd( -9.07624, 347.004, 2.33759, 1.11 ) }
    dend_28 { pt3dadd( -9.0344, 349.011, 2.00005, 0.28 ) }
    dend_28 { pt3dadd( -9.0647, 351.62, 1.49389, 0.55 ) }
    dend_28 { pt3dadd( -9.21189, 354.675, 0.857602, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -9.2719, 356.239, 0.577011, 0.55 ) }
    dend_28 { pt3dadd( -9.29923, 357.387, 0.393594, 0.28 ) }
    dend_28 { pt3dadd( -9.2786, 359.059, 0.253856, 0.83 ) }
    dend_28 { pt3dadd( -9.16669, 362.332, 0.278287, 1.38 ) }
    dend_28 { pt3dadd( -9.1527, 363.891, 0.38354, 1.38 ) }
    dend_28 { pt3dadd( -9.05344, 367.457, 0.792961, 0.83 ) }
    dend_28 { pt3dadd( -9.01469, 369.157, 1.03846, 0.83 ) }
    dend_28 { pt3dadd( -8.89436, 373.867, 1.90372, 0.83 ) }
    dend_28 { pt3dadd( -8.86184, 375.488, 2.24293, 0.83 ) }
    dend_28 { pt3dadd( -8.783, 378.077, 2.92985, 0.83 ) }
    dend_28 { pt3dadd( -8.77182, 378.736, 3.11269, 0.83 ) }
    dend_28 { pt3dadd( -8.73729, 380.995, 3.72185, 1.38 ) }
    dend_28 { pt3dadd( -8.68308, 382.578, 4.09419, 0.55 ) }
    dend_28 { pt3dadd( -8.61788, 384.494, 4.40339, 0.55 ) }
    dend_28 { pt3dadd( -8.51397, 385.549, 4.50912, 0.55 ) }
    dend_28 { pt3dadd( -8.40149, 386.322, 4.54691, 0.28 ) }
    dend_28 { pt3dadd( -8.03641, 388.463, 4.54371, 0.83 ) }
    dend_28 { pt3dadd( -7.69321, 390.115, 4.41869, 0.55 ) }
    dend_28 { pt3dadd( -7.26771, 391.892, 4.19589, 0.83 ) }
    dend_28 { pt3dadd( -6.64888, 394.446, 3.82769, 0.55 ) }
    dend_28 { pt3dadd( -6.30798, 395.929, 3.60191, 1.66 ) }
    dend_28 { pt3dadd( -5.80517, 398.248, 3.24075, 1.66 ) }
    dend_28 { pt3dadd( -5.31762, 400.786, 2.85808, 0.83 ) }
    dend_28 { pt3dadd( -4.9806, 402.828, 2.57135, 0.83 ) }
    dend_28 { pt3dadd( -4.762, 404.505, 2.36801, 0.83 ) }
    dend_28 { pt3dadd( -4.67963, 405.508, 2.27635, 0.28 ) }
    dend_28 { pt3dadd( -4.60696, 407.205, 2.19355, 1.11 ) }
    dend_28 { pt3dadd( -4.65167, 409.755, 2.17171, 0.55 ) }
    dend_28 { pt3dadd( -4.72905, 411.223, 2.20351, 0.55 ) }
    dend_28 { pt3dadd( -4.83286, 412.756, 2.21889, 0.55 ) }
    dend_28 { pt3dadd( -4.92746, 413.769, 2.21164, 0.55 ) }
    dend_28 { pt3dadd( -5.14386, 415.234, 2.18327, 1.11 ) }
    dend_28 { pt3dadd( -5.45314, 416.846, 2.13325, 0.28 ) }
    dend_28 { pt3dadd( -5.60876, 417.601, 2.10356, 0.55 ) }
    dend_28 { pt3dadd( -5.86603, 419.399, 2.02431, 0.55 ) }
    dend_28 { pt3dadd( -6.11381, 422.264, 1.89214, 0.55 ) }
    dend_28 { pt3dadd( -6.13898, 423.274, 1.85182, 0.83 ) }
    dend_28 { pt3dadd( -6.11915, 424.874, 1.75942, 0.83 ) }
    dend_28 { pt3dadd( -6.02117, 427.168, 1.65869, 0.83 ) }
    dend_28 { pt3dadd( -5.84056, 429.343, 1.62021, 0.83 ) }
    dend_28 { pt3dadd( -5.5991, 431.015, 1.61047, 0.83 ) }
    dend_28 { pt3dadd( -4.76969, 434.683, 1.5975, 1.11 ) }
    dend_28 { pt3dadd( -4.25338, 436.561, 1.59017, 0.28 ) }
    dend_28 { pt3dadd( -3.88007, 437.673, 1.56696, 0.55 ) }
    dend_28 { pt3dadd( -3.43132, 438.881, 1.66272, 0.55 ) }
    dend_28 { pt3dadd( -3.02096, 439.902, 1.84797, 0.55 ) }
    dend_28 { pt3dadd( -2.67732, 440.591, 2.04229, 0.55 ) }
    dend_28 { pt3dadd( -1.36545, 442.686, 2.74575, 0.55 ) }
    dend_28 { pt3dadd( -0.456236, 444.173, 3.23798, 0.83 ) }
    dend_28 { pt3dadd( 1.76707, 447.936, 4.13334, 0.55 ) }
    dend_28 { pt3dadd( 2.12658, 448.582, 4.2787, 0.83 ) }
    dend_28 { pt3dadd( 2.77614, 449.864, 4.54461, 0.83 ) }
    dend_28 { pt3dadd( 3.50992, 451.474, 4.81853, 0.55 ) }
    dend_28 { pt3dadd( 4.10458, 452.949, 4.97971, 0.83 ) }
    dend_28 { pt3dadd( 4.91095, 455.347, 5.06008, 0.83 ) }
    dend_28 { pt3dadd( 5.52127, 457.458, 5.01966, 0.55 ) }
    dend_28 { pt3dadd( 5.71064, 458.235, 5.05827, 0.55 ) }
    dend_28 { pt3dadd( 6.08397, 459.979, 5.23972, 0.55 ) }
    dend_28 { pt3dadd( 6.24245, 460.822, 5.36976, 0.83 ) }
    dend_28 { pt3dadd( 6.53137, 462.308, 5.64117, 0.83 ) }
    dend_28 { pt3dadd( 6.92834, 464.943, 6.109, 0.55 ) }
    dend_28 { pt3dadd( 7.11439, 466.225, 6.27954, 0.55 ) }
    dend_28 { pt3dadd( 7.3774, 468.151, 6.55129, 0.55 ) }
    dend_28 { pt3dadd( 7.56573, 469.735, 6.76851, 0.55 ) }
    dend_28 { pt3dadd( 7.9443, 472.682, 7.15722, 0.55 ) }
    dend_28 { pt3dadd( 8.21209, 474.767, 7.37444, 0.83 ) }
    dend_28 { pt3dadd( 8.34497, 475.847, 7.42879, 1.11 ) }
    dend_28 { pt3dadd( 8.52896, 477.994, 7.55285, 0.55 ) }
    dend_28 { pt3dadd( 8.64039, 481.068, 7.80915, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.96177, 328.408, 11.844, 0.55 ) }
    dend_13 { pt3dadd( -10.7057, 332.099, 11.8216, 0.55 ) }
    dend_13 { pt3dadd( -11.8374, 334.749, 11.8586, 0.55 ) }
    dend_13 { pt3dadd( -12.6727, 337.001, 11.9082, 0.55 ) }
    dend_13 { pt3dadd( -13.3571, 339.035, 11.9566, 0.55 ) }
    dend_13 { pt3dadd( -14.7064, 343.203, 12.0791, 0.55 ) }
    dend_13 { pt3dadd( -15.4856, 345.621, 12.1553, 0.83 ) }
    dend_13 { pt3dadd( -16.4597, 348.662, 12.3645, 0.83 ) }
    dend_13 { pt3dadd( -17.4274, 351.824, 12.5622, 0.83 ) }
    dend_13 { pt3dadd( -18.0979, 354.472, 12.6838, 0.55 ) }
    dend_13 { pt3dadd( -18.5656, 356.696, 12.7604, 0.55 ) }
    dend_13 { pt3dadd( -19.2118, 359.752, 12.9043, 0.83 ) }
    dend_13 { pt3dadd( -19.729, 362.211, 13.0403, 0.83 ) }
    dend_13 { pt3dadd( -20.613, 366.067, 13.2878, 0.83 ) }
    dend_13 { pt3dadd( -21.204, 368.589, 13.4691, 0.83 ) }
    dend_13 { pt3dadd( -21.6305, 370.552, 13.6224, 0.55 ) }
    dend_13 { pt3dadd( -22.0967, 373.089, 13.8228, 0.83 ) }
    dend_13 { pt3dadd( -22.5013, 375.909, 14.084, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.6538, 468.614, -38.2693, 0.55 ) }
    dend_3 { pt3dadd( 19.6467, 470.667, -38.2976, 0.55 ) }
    dend_3 { pt3dadd( 19.6364, 473.637, -38.3386, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 19.6538, 468.614, -38.2693, 0.55 ) }
    dend_2 { pt3dadd( 16.9729, 468.957, -38.3677, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 40.0258, -96.0446, 31.5438, 0.28 ) }
    dend_61 { pt3dadd( 39.8199, -98.9815, 30.1696, 0.28 ) }
    dend_61 { pt3dadd( 39.782, -99.5229, 29.9163, 1.11 ) }
    dend_61 { pt3dadd( 39.6018, -102.093, 28.7136, 0.28 ) }
    dend_61 { pt3dadd( 39.5837, -102.351, 28.5927, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 40.0258, -96.0446, 31.5438, 1.66 ) }
    dend_60 { pt3dadd( 40.2151, -94.9885, 32.6802, 1.66 ) }
    dend_60 { pt3dadd( 40.4236, -92.0877, 35.2003, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 40.5694, -89.1899, 37.5748, 0.28 ) }
    dend_60 { pt3dadd( 40.5498, -88.2071, 38.316, 0.55 ) }
    dend_60 { pt3dadd( 40.2771, -84.8122, 40.607, 0.28 ) }
    dend_60 { pt3dadd( 40.0888, -82.7791, 41.9303, 0.83 ) }
    dend_60 { pt3dadd( 39.7373, -80.1415, 43.6449, 0.83 ) }
    dend_60 { pt3dadd( 39.4307, -78.4781, 44.5995, 0.28 ) }
    dend_60 { pt3dadd( 38.9248, -76.0691, 45.8404, 0.55 ) }
    dend_60 { pt3dadd( 38.2235, -73.891, 46.812, 0.55 ) }
    dend_60 { pt3dadd( 37.0759, -71.2483, 47.8099, 0.28 ) }
    dend_60 { pt3dadd( 36.6544, -70.4615, 48.0922, 0.83 ) }
    dend_60 { pt3dadd( 35.4253, -68.2612, 48.8546, 0.28 ) }
    dend_60 { pt3dadd( 33.8831, -65.701, 49.6507, 0.55 ) }
    dend_60 { pt3dadd( 31.909, -62.611, 50.5667, 0.28 ) }
    dend_60 { pt3dadd( 30.3787, -60.4838, 51.1286, 1.11 ) }
    dend_60 { pt3dadd( 29.0874, -58.9056, 51.4128, 0.28 ) }
    dend_60 { pt3dadd( 27.3936, -56.896, 51.7082, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -18.2292, -122.003, 17.2979, 0.83 ) }
    dend_56 { pt3dadd( -17.5275, -125.558, 17.7359, 0.83 ) }
    dend_56 { pt3dadd( -17.1177, -127.297, 17.951, 0.83 ) }
    dend_56 { pt3dadd( -16.4594, -130.384, 18.2997, 0.83 ) }
    dend_56 { pt3dadd( -16.12, -132.667, 18.6907, 0.55 ) }
    dend_56 { pt3dadd( -15.9578, -134.779, 19.1834, 0.83 ) }
    dend_56 { pt3dadd( -15.9342, -136.806, 19.7868, 0.83 ) }
    dend_56 { pt3dadd( -16.0279, -138.309, 20.4387, 0.83 ) }
    dend_56 { pt3dadd( -16.3817, -140.767, 21.7097, 0.83 ) }
    dend_56 { pt3dadd( -17.0207, -143.726, 23.4174, 0.83 ) }
    dend_56 { pt3dadd( -17.5697, -145.656, 24.5536, 0.83 ) }
    dend_56 { pt3dadd( -18.6248, -148.723, 26.439, 1.11 ) }
    dend_56 { pt3dadd( -19.4974, -151.02, 27.8747, 0.55 ) }
    dend_56 { pt3dadd( -20.0802, -152.671, 28.8428, 0.55 ) }
    dend_56 { pt3dadd( -20.7247, -154.738, 29.9139, 0.83 ) }
    dend_56 { pt3dadd( -21.0882, -156.085, 30.4449, 0.83 ) }
    dend_56 { pt3dadd( -21.3521, -157.259, 30.8263, 0.28 ) }
    dend_56 { pt3dadd( -21.6167, -158.492, 31.1668, 0.55 ) }
    dend_56 { pt3dadd( -22.1446, -161.1, 31.7931, 1.11 ) }
    dend_56 { pt3dadd( -22.4539, -162.939, 32.185, 0.28 ) }
    dend_56 { pt3dadd( -22.6216, -163.976, 32.3788, 0.55 ) }
    dend_56 { pt3dadd( -23.1721, -166.932, 32.8621, 0.28 ) }
    dend_56 { pt3dadd( -23.281, -167.498, 32.9619, 0.83 ) }
    dend_56 { pt3dadd( -23.6744, -169.768, 33.4014, 0.83 ) }
    dend_56 { pt3dadd( -24.0725, -172.125, 33.8704, 0.28 ) }
    dend_56 { pt3dadd( -24.1145, -172.478, 33.934, 1.11 ) }
    dend_56 { pt3dadd( -24.2526, -174.064, 34.1536, 1.11 ) }
    dend_56 { pt3dadd( -24.4829, -176.419, 34.3648, 0.55 ) }
    dend_56 { pt3dadd( -24.6484, -178.244, 34.5767, 1.11 ) }
    dend_56 { pt3dadd( -24.7682, -179.766, 34.8148, 1.11 ) }
    dend_56 { pt3dadd( -24.8649, -180.828, 35.0571, 1.11 ) }
    dend_56 { pt3dadd( -25.0053, -182.233, 35.382, 0.28 ) }
    dend_56 { pt3dadd( -25.0591, -183.104, 35.6536, 0.55 ) }
    dend_56 { pt3dadd( -25.1033, -184.453, 36.1368, 0.28 ) }
    dend_56 { pt3dadd( -25.1191, -185.125, 36.4905, 0.83 ) }
    dend_56 { pt3dadd( -25.1545, -186.435, 37.2865, 0.28 ) }
    dend_56 { pt3dadd( -25.1694, -187.13, 37.7121, 0.83 ) }
    dend_56 { pt3dadd( -25.1352, -189.736, 39.2753, 0.28 ) }
    dend_56 { pt3dadd( -25.1326, -190.54, 39.6902, 0.83 ) }
    dend_56 { pt3dadd( -25.1692, -192.803, 40.6427, 0.55 ) }
    dend_56 { pt3dadd( -25.2262, -194.329, 41.1835, 1.11 ) }
    dend_56 { pt3dadd( -25.315, -195.984, 41.6332, 0.28 ) }
    dend_56 { pt3dadd( -25.3658, -196.875, 41.8069, 0.83 ) }
    dend_56 { pt3dadd( -25.5563, -199.285, 42.0371, 0.83 ) }
    dend_56 { pt3dadd( -25.6446, -200.583, 42.2188, 0.28 ) }
    dend_56 { pt3dadd( -25.6664, -201.381, 42.3488, 0.28 ) }
    dend_56 { pt3dadd( -25.6545, -202.273, 42.5888, 0.83 ) }
    dend_56 { pt3dadd( -25.5842, -203.352, 42.9772, 0.83 ) }
    dend_56 { pt3dadd( -25.4237, -204.795, 43.5939, 0.55 ) }
    dend_56 { pt3dadd( -25.0125, -207.417, 44.833, 0.28 ) }
    dend_56 { pt3dadd( -24.9269, -208.147, 45.186, 1.11 ) }
    dend_56 { pt3dadd( -24.8287, -209.221, 45.6628, 0.83 ) }
    dend_56 { pt3dadd( -24.6742, -211.411, 46.509, 0.28 ) }
    dend_56 { pt3dadd( -24.6448, -211.75, 46.6117, 0.55 ) }
    dend_56 { pt3dadd( -24.4616, -213.246, 46.9168, 0.55 ) }
    dend_56 { pt3dadd( -24.1702, -214.87, 47.0726, 0.55 ) }
    dend_56 { pt3dadd( -23.9077, -216.203, 47.1494, 0.55 ) }
    dend_56 { pt3dadd( -23.689, -217.335, 47.1785, 0.55 ) }
    dend_56 { pt3dadd( -23.4239, -218.804, 47.2148, 0.55 ) }
    dend_56 { pt3dadd( -23.0254, -220.664, 47.2556, 0.55 ) }
    dend_56 { pt3dadd( -22.5855, -222.465, 47.2905, 0.55 ) }
    dend_56 { pt3dadd( -22.1248, -224.225, 47.3167, 0.55 ) }
    dend_56 { pt3dadd( -21.8241, -225.49, 47.3628, 0.28 ) }
    dend_56 { pt3dadd( -21.5032, -227.025, 47.4215, 0.83 ) }
    dend_56 { pt3dadd( -21.1771, -229.178, 47.4995, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -18.2292, -122.003, 17.2979, 1.38 ) }
    dend_47 { pt3dadd( -21.1198, -122.682, 17.2174, 1.38 ) }
    dend_47 { pt3dadd( -24.5979, -123.5, 17.1206, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.878098, -148.4, -35.4372, 0.55 ) }
    dend_37 { pt3dadd( -0.85174, -153.703, -36.0488, 0.55 ) }
    dend_37 { pt3dadd( -0.932057, -156.328, -36.4477, 0.55 ) }
    dend_37 { pt3dadd( -1.0224, -159.468, -36.9835, 2.49 ) }
    dend_37 { pt3dadd( -1.11717, -161.995, -37.5169, 0.55 ) }
    dend_37 { pt3dadd( -1.23314, -164.436, -38.0794, 0.55 ) }
    dend_37 { pt3dadd( -1.3799, -167.526, -38.7912, 0.83 ) }
    dend_37 { pt3dadd( -1.71253, -170.193, -39.4628, 0.28 ) }
    dend_37 { pt3dadd( -1.84179, -171.439, -39.8382, 0.55 ) }
    dend_37 { pt3dadd( -2.02844, -173.433, -40.5487, 0.28 ) }
    dend_37 { pt3dadd( -2.14015, -174.678, -41.0282, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.878098, -148.4, -35.4372, 0.83 ) }
    dend_32 { pt3dadd( 0.605517, -148.573, -36.8188, 0.83 ) }
    dend_32 { pt3dadd( 1.97341, -148.593, -37.9299, 0.83 ) }
    dend_32 { pt3dadd( 3.44935, -148.544, -39.1278, 0.55 ) }
    dend_32 { pt3dadd( 5.28722, -148.509, -40.6052, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 5.89511, -148.552, -41.1409, 0.83 ) }
    dend_32 { pt3dadd( 7.13561, -148.807, -42.2265, 0.55 ) }
    dend_32 { pt3dadd( 8.26121, -149.181, -43.1713, 1.11 ) }
    dend_32 { pt3dadd( 9.44321, -149.807, -44.1418, 0.28 ) }
    dend_32 { pt3dadd( 10.2776, -150.412, -44.8113, 0.83 ) }
    dend_32 { pt3dadd( 11.8537, -151.918, -46.1893, 0.28 ) }
    dend_32 { pt3dadd( 13.2704, -153.535, -47.5585, 1.38 ) }
    dend_32 { pt3dadd( 14.1345, -154.57, -48.2993, 0.55 ) }
    dend_32 { pt3dadd( 14.8435, -155.44, -48.7927, 0.55 ) }
    dend_32 { pt3dadd( 15.9836, -156.773, -49.2893, 0.83 ) }
    dend_32 { pt3dadd( 16.8863, -157.788, -49.5175, 0.28 ) }
    dend_32 { pt3dadd( 18.1573, -159.139, -49.7189, 0.55 ) }
    dend_32 { pt3dadd( 20.8675, -161.771, -49.8789, 0.28 ) }
    dend_32 { pt3dadd( 22.2061, -162.936, -49.8823, 0.83 ) }
    dend_32 { pt3dadd( 24.3865, -164.595, -49.8213, 0.55 ) }
    dend_32 { pt3dadd( 25.1705, -165.108, -49.7766, 0.55 ) }
    dend_32 { pt3dadd( 27.5406, -166.502, -49.6457, 1.94 ) }
    dend_32 { pt3dadd( 30.3198, -168.125, -49.6031, 0.55 ) }
    dend_32 { pt3dadd( 31.5737, -168.82, -49.6538, 0.55 ) }
    dend_32 { pt3dadd( 32.6807, -169.384, -49.6961, 0.55 ) }
    dend_32 { pt3dadd( 34.8795, -170.612, -49.8136, 0.28 ) }
    dend_32 { pt3dadd( 35.6377, -171.125, -49.8516, 1.38 ) }
    dend_32 { pt3dadd( 37.1349, -172.37, -49.902, 1.38 ) }
    dend_32 { pt3dadd( 38.9538, -174.449, -50.187, 0.55 ) }
    dend_32 { pt3dadd( 39.8976, -175.578, -50.0727, 0.55 ) }
    dend_32 { pt3dadd( 41.7982, -177.873, -49.5913, 1.11 ) }
    dend_32 { pt3dadd( 43.3735, -179.877, -49.1073, 0.28 ) }
    dend_32 { pt3dadd( 43.6734, -180.266, -48.9928, 0.83 ) }
    dend_32 { pt3dadd( 45.3321, -182.393, -48.2005, 0.28 ) }
    dend_32 { pt3dadd( 50.6819, -189.379, -45.1482, 0.83 ) }
    dend_32 { pt3dadd( 51.5948, -190.342, -44.4238, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -22.5013, 375.909, 14.084, 0.55 ) }
    dend_23 { pt3dadd( -22.584, 377.896, 14.2246, 0.55 ) }
    dend_23 { pt3dadd( -22.5903, 379.826, 14.6547, 0.28 ) }
    dend_23 { pt3dadd( -22.6928, 381.553, 15.1822, 0.55 ) }
    dend_23 { pt3dadd( -22.8973, 382.769, 15.6606, 0.28 ) }
    dend_23 { pt3dadd( -23.3151, 384.538, 16.3382, 0.83 ) }
    dend_23 { pt3dadd( -23.7555, 386.339, 16.9668, 0.83 ) }
    dend_23 { pt3dadd( -24.3817, 389.118, 18.4973, 0.55 ) }
    dend_23 { pt3dadd( -24.6898, 390.703, 19.5807, 0.55 ) }
    dend_23 { pt3dadd( -25.2068, 393.7, 21.8895, 0.83 ) }
    dend_23 { pt3dadd( -25.5113, 395.356, 23.2606, 0.83 ) }
    dend_23 { pt3dadd( -25.8025, 397.237, 24.9758, 0.83 ) }
    dend_23 { pt3dadd( -26.9515, 403.203, 30.3083, 0.55 ) }
    dend_23 { pt3dadd( -27.1518, 404.419, 31.3101, 0.55 ) }
    dend_23 { pt3dadd( -27.2108, 404.988, 31.7512, 0.83 ) }
    dend_23 { pt3dadd( -27.2768, 406.286, 32.6907, 0.55 ) }
    dend_23 { pt3dadd( -27.4049, 410.31, 35.1581, 1.11 ) }
    dend_23 { pt3dadd( -27.5218, 413.836, 36.8017, 0.83 ) }
    dend_23 { pt3dadd( -27.6086, 416.329, 37.5251, 0.55 ) }
    dend_23 { pt3dadd( -27.6103, 418.191, 38.0186, 1.11 ) }
    dend_23 { pt3dadd( -27.5553, 420.261, 38.573, 0.55 ) }
    dend_23 { pt3dadd( -27.3328, 423.674, 39.4688, 1.11 ) }
    dend_23 { pt3dadd( -27.1756, 426.298, 40.1204, 0.55 ) }
    dend_23 { pt3dadd( -27.0124, 428.646, 40.8007, 0.55 ) }
    dend_23 { pt3dadd( -27.0032, 429.92, 41.2049, 0.28 ) }
    dend_23 { pt3dadd( -27.0482, 432.196, 41.9552, 0.83 ) }
    dend_23 { pt3dadd( -27.172, 434.504, 42.6557, 0.55 ) }
    dend_23 { pt3dadd( -27.3566, 436.573, 43.2144, 0.83 ) }
    dend_23 { pt3dadd( -27.6102, 438.537, 43.6865, 0.83 ) }
    dend_23 { pt3dadd( -28.1064, 441.365, 44.3354, 0.55 ) }
    dend_23 { pt3dadd( -28.6714, 444.182, 44.9046, 0.55 ) }
    dend_23 { pt3dadd( -29.5048, 447.811, 45.5376, 0.83 ) }
    dend_23 { pt3dadd( -30.3985, 451.401, 46.1394, 0.83 ) }
    dend_23 { pt3dadd( -31.2411, 454.753, 46.6832, 0.83 ) }
    dend_23 { pt3dadd( -31.785, 456.841, 47.0067, 0.83 ) }
    dend_23 { pt3dadd( -32.4865, 459.626, 47.3855, 0.83 ) }
    dend_23 { pt3dadd( -33.1256, 462.065, 47.7325, 0.83 ) }
    dend_23 { pt3dadd( -33.7034, 464.718, 48.1781, 0.83 ) }
    dend_23 { pt3dadd( -34.005, 466.276, 48.4642, 0.83 ) }
    dend_23 { pt3dadd( -34.3356, 468.439, 48.9122, 0.55 ) }
    dend_23 { pt3dadd( -34.6409, 470.278, 49.2362, 0.83 ) }
    dend_23 { pt3dadd( -35.0388, 472.529, 49.6643, 0.83 ) }
    dend_23 { pt3dadd( -35.6715, 476.185, 50.3802, 0.55 ) }
    dend_23 { pt3dadd( -36.3384, 479.707, 51.1264, 0.83 ) }
    dend_23 { pt3dadd( -37.1285, 483.462, 51.9736, 0.55 ) }
    dend_23 { pt3dadd( -38.1966, 487.49, 52.9588, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -22.5013, 375.909, 14.084, 0.55 ) }
    dend_14 { pt3dadd( -24.3904, 379.463, 16.1665, 0.55 ) }
    dend_14 { pt3dadd( -26.0119, 382.313, 17.3999, 0.28 ) }
    dend_14 { pt3dadd( -26.8163, 383.622, 17.8667, 0.83 ) }
    dend_14 { pt3dadd( -28.0065, 385.44, 18.4454, 0.28 ) }
    dend_14 { pt3dadd( -28.6056, 386.35, 18.7097, 0.28 ) }
    dend_14 { pt3dadd( -29.5951, 387.819, 19.0978, 0.83 ) }
    dend_14 { pt3dadd( -31.4917, 390.798, 19.584, 0.83 ) }
    dend_14 { pt3dadd( -32.4653, 392.358, 19.7096, 0.28 ) }
    dend_14 { pt3dadd( -33.8396, 394.693, 19.9321, 0.83 ) }
    dend_14 { pt3dadd( -34.5465, 395.885, 20.05, 0.55 ) }
    dend_14 { pt3dadd( -35.8828, 398.206, 20.3454, 1.11 ) }
    dend_14 { pt3dadd( -37.1146, 400.465, 20.6448, 0.55 ) }
    dend_14 { pt3dadd( -38.062, 402.383, 20.89, 1.11 ) }
    dend_14 { pt3dadd( -39.0419, 404.561, 21.1581, 0.55 ) }
    dend_14 { pt3dadd( -40.3002, 407.623, 21.5182, 1.11 ) }
    dend_14 { pt3dadd( -41.0494, 409.461, 21.7541, 0.28 ) }
    dend_14 { pt3dadd( -41.6232, 410.92, 21.9677, 0.55 ) }
    dend_14 { pt3dadd( -42.3342, 412.59, 22.2651, 0.28 ) }
    dend_14 { pt3dadd( -42.8318, 413.774, 22.505, 0.83 ) }
    dend_14 { pt3dadd( -43.3886, 415.35, 22.7221, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 19.6364, 473.637, -38.3386, 0.83 ) }
    dend_5 { pt3dadd( 20.3956, 476.299, -38.368, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 20.7783, 477.749, -38.4185, 0.83 ) }
    dend_5 { pt3dadd( 21.3345, 479.913, -38.4965, 2.22 ) }
    dend_5 { pt3dadd( 21.8732, 482.104, -38.6057, 1.66 ) }
    dend_5 { pt3dadd( 22.4923, 484.775, -38.6405, 0.83 ) }
    dend_5 { pt3dadd( 22.6811, 485.657, -38.6348, 0.83 ) }
    dend_5 { pt3dadd( 23.0263, 487.624, -38.6294, 0.83 ) }
    dend_5 { pt3dadd( 23.4181, 490.339, -38.5759, 1.66 ) }
    dend_5 { pt3dadd( 23.6088, 492.453, -38.5333, 0.55 ) }
    dend_5 { pt3dadd( 23.6911, 494.582, -38.572, 0.55 ) }
    dend_5 { pt3dadd( 23.7072, 495.91, -38.6484, 1.11 ) }
    dend_5 { pt3dadd( 23.7409, 498.187, -38.8932, 0.55 ) }
    dend_5 { pt3dadd( 23.8072, 501.914, -39.5078, 1.66 ) }
    dend_5 { pt3dadd( 23.9194, 503.807, -39.8502, 0.83 ) }
    dend_5 { pt3dadd( 24.218, 506.896, -40.4193, 0.83 ) }
    dend_5 { pt3dadd( 24.4091, 508.392, -40.7126, 0.83 ) }
    dend_5 { pt3dadd( 24.6892, 510.058, -40.9769, 1.66 ) }
    dend_5 { pt3dadd( 25.1496, 512.32, -41.237, 0.83 ) }
    dend_5 { pt3dadd( 25.9269, 515.793, -41.4497, 0.83 ) }
    dend_5 { pt3dadd( 26.5395, 518.392, -41.4496, 0.83 ) }
    dend_5 { pt3dadd( 26.7766, 519.379, -41.3761, 0.83 ) }
    dend_5 { pt3dadd( 27.2804, 521.596, -41.1655, 0.83 ) }
    dend_5 { pt3dadd( 27.5903, 523.059, -41.0382, 1.38 ) }
    dend_5 { pt3dadd( 28.0504, 525.34, -40.8378, 0.55 ) }
    dend_5 { pt3dadd( 28.3735, 526.852, -40.6971, 1.38 ) }
    dend_5 { pt3dadd( 29.02, 529.741, -40.4104, 1.38 ) }
    dend_5 { pt3dadd( 29.545, 532.217, -40.1805, 0.83 ) }
    dend_5 { pt3dadd( 30.08, 534.904, -39.943, 0.83 ) }
    dend_5 { pt3dadd( 30.6851, 537.842, -39.6631, 1.11 ) }
    dend_5 { pt3dadd( 31.17, 540.255, -39.43, 0.55 ) }
    dend_5 { pt3dadd( 31.5141, 542.195, -39.2587, 0.55 ) }
    dend_5 { pt3dadd( 31.7934, 543.732, -39.1741, 0.55 ) }
    dend_5 { pt3dadd( 32.4709, 547.137, -39.0501, 2.22 ) }
    dend_5 { pt3dadd( 32.7942, 548.66, -39.0268, 0.55 ) }
    dend_5 { pt3dadd( 33.1451, 550.183, -39.0202, 0.55 ) }
    dend_5 { pt3dadd( 33.3162, 550.935, -39.0252, 1.11 ) }
    dend_5 { pt3dadd( 34.1423, 554.508, -39.0439, 0.55 ) }
    dend_5 { pt3dadd( 34.5591, 556.483, -39.0709, 0.55 ) }
    dend_5 { pt3dadd( 34.6946, 557.258, -39.0922, 0.55 ) }
    dend_5 { pt3dadd( 34.9893, 559.679, -39.1798, 1.11 ) }
    dend_5 { pt3dadd( 35.1932, 562.008, -39.3182, 1.11 ) }
    dend_5 { pt3dadd( 35.3079, 563.923, -39.4294, 0.83 ) }
    dend_5 { pt3dadd( 35.3102, 565.926, -39.541, 0.83 ) }
    dend_5 { pt3dadd( 35.2911, 567.191, -39.637, 0.83 ) }
    dend_5 { pt3dadd( 35.1821, 569.717, -39.9024, 0.83 ) }
    dend_5 { pt3dadd( 34.9471, 572.577, -40.3341, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.6364, 473.637, -38.3386, 0.55 ) }
    dend_4 { pt3dadd( 18.5254, 473.533, -39.802, 0.55 ) }
    dend_4 { pt3dadd( 17.3633, 473.426, -41.3327, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -24.5979, -123.5, 17.1206, 1.11 ) }
    dend_53 { pt3dadd( -24.5669, -124.892, 17.1255, 1.11 ) }
    dend_53 { pt3dadd( -24.5147, -127.244, 17.1338, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -24.5979, -123.5, 17.1206, 1.11 ) }
    dend_48 { pt3dadd( -26.5813, -122.172, 14.5782, 1.11 ) }
    dend_48 { pt3dadd( -27.2593, -121.614, 13.7911, 0.28 ) }
    dend_48 { pt3dadd( -27.7841, -121.245, 13.4255, 0.83 ) }
    dend_48 { pt3dadd( -29.8744, -119.881, 12.3667, 0.55 ) }
    dend_48 { pt3dadd( -30.8628, -119.303, 11.9531, 0.55 ) }
    dend_48 { pt3dadd( -31.81, -118.765, 11.5255, 0.55 ) }
    dend_48 { pt3dadd( -33.1401, -118.094, 10.9689, 0.55 ) }
    dend_48 { pt3dadd( -36.4037, -116.625, 9.49068, 1.11 ) }
    dend_48 { pt3dadd( -38.3197, -115.786, 8.59925, 0.55 ) }
    dend_48 { pt3dadd( -39.5683, -115.253, 8.02811, 0.55 ) }
    dend_48 { pt3dadd( -42.4077, -114.232, 6.65316, 0.83 ) }
    dend_48 { pt3dadd( -44.1178, -113.706, 5.80462, 0.55 ) }
    dend_48 { pt3dadd( -45.7831, -113.274, 4.95942, 1.11 ) }
    dend_48 { pt3dadd( -48.4427, -112.699, 3.50847, 0.83 ) }
    dend_48 { pt3dadd( -49.3917, -112.549, 3.02909, 0.83 ) }
    dend_48 { pt3dadd( -50.7455, -112.363, 2.4414, 0.83 ) }
    dend_48 { pt3dadd( -52.917, -112.18, 1.69661, 0.83 ) }
    dend_48 { pt3dadd( -55.6719, -112.058, 0.799674, 1.11 ) }
    dend_48 { pt3dadd( -56.9427, -112.07, 0.341893, 0.83 ) }
    dend_48 { pt3dadd( -58.744, -112.173, -0.377052, 0.83 ) }
    dend_48 { pt3dadd( -61.369, -112.392, -1.51525, 0.83 ) }
    dend_48 { pt3dadd( -63.0542, -112.607, -2.34826, 0.55 ) }
    dend_48 { pt3dadd( -64.287, -112.883, -3.02369, 1.38 ) }
    dend_48 { pt3dadd( -66.0131, -113.317, -4.12023, 0.55 ) }
    dend_48 { pt3dadd( -67.5539, -113.636, -5.18783, 0.55 ) }
    dend_48 { pt3dadd( -68.4726, -113.846, -5.89403, 0.55 ) }
    dend_48 { pt3dadd( -69.7984, -114.167, -7.05022, 0.55 ) }
    dend_48 { pt3dadd( -70.5006, -114.303, -7.72116, 0.83 ) }
    dend_48 { pt3dadd( -72.8084, -114.543, -10.0793, 0.55 ) }
    dend_48 { pt3dadd( -73.6082, -114.595, -10.9338, 0.55 ) }
    dend_48 { pt3dadd( -74.5115, -114.596, -11.9172, 0.55 ) }
    dend_48 { pt3dadd( -76.3142, -114.506, -13.6602, 0.55 ) }
    dend_48 { pt3dadd( -78.2647, -114.346, -15.3164, 1.11 ) }
    dend_48 { pt3dadd( -80.292, -114.179, -16.8746, 0.55 ) }
    dend_48 { pt3dadd( -80.8545, -114.158, -17.2422, 0.55 ) }
    dend_48 { pt3dadd( -82.8047, -114.183, -18.326, 0.55 ) }
    dend_48 { pt3dadd( -85.1244, -114.244, -19.3216, 1.94 ) }
    dend_48 { pt3dadd( -86.8682, -114.389, -19.7763, 0.83 ) }
    dend_48 { pt3dadd( -87.5084, -114.471, -19.9074, 0.28 ) }
    dend_48 { pt3dadd( -88.6353, -114.703, -20.1289, 0.55 ) }
    dend_48 { pt3dadd( -90.2488, -115.114, -20.4672, 0.55 ) }
    dend_48 { pt3dadd( -91.6382, -115.538, -20.7812, 0.28 ) }
    dend_48 { pt3dadd( -94.0991, -116.323, -21.29, 1.11 ) }
    dend_48 { pt3dadd( -95.9566, -116.958, -21.5743, 0.28 ) }
    dend_48 { pt3dadd( -98.0107, -117.557, -21.8256, 0.83 ) }
    dend_48 { pt3dadd( -99.6244, -117.937, -21.9542, 0.28 ) }
    dend_48 { pt3dadd( -100.332, -118.052, -21.976, 0.28 ) }
    dend_48 { pt3dadd( -102.121, -118.205, -21.926, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -103.109, -118.192, -21.8361, 0.55 ) }
    dend_48 { pt3dadd( -105.097, -117.952, -21.6022, 0.55 ) }
    dend_48 { pt3dadd( -105.903, -117.718, -21.571, 0.83 ) }
    dend_48 { pt3dadd( -107.182, -117.244, -21.6347, 0.28 ) }
    dend_48 { pt3dadd( -107.493, -117.13, -21.6703, 0.83 ) }
    dend_48 { pt3dadd( -109.446, -116.416, -22.0201, 0.83 ) }
    dend_48 { pt3dadd( -111.036, -115.839, -22.3274, 0.83 ) }
    dend_48 { pt3dadd( -112.848, -115.278, -22.6967, 0.55 ) }
    dend_48 { pt3dadd( -113.764, -115.031, -22.8921, 0.55 ) }
    dend_48 { pt3dadd( -115.481, -114.675, -23.2489, 1.38 ) }
    dend_48 { pt3dadd( -117.319, -114.391, -23.6163, 1.38 ) }
    dend_48 { pt3dadd( -118.853, -114.241, -23.9074, 0.28 ) }
    dend_48 { pt3dadd( -120.088, -114.262, -24.1564, 0.83 ) }
    dend_48 { pt3dadd( -121.06, -114.393, -24.3578, 0.28 ) }
    dend_48 { pt3dadd( -121.978, -114.625, -24.5617, 1.38 ) }
    dend_48 { pt3dadd( -123.355, -115.099, -24.8957, 0.28 ) }
    dend_48 { pt3dadd( -123.829, -115.337, -25.0214, 0.83 ) }
    dend_48 { pt3dadd( -125.121, -116.156, -25.3941, 0.55 ) }
    dend_48 { pt3dadd( -125.8, -116.619, -25.6125, 0.55 ) }
    dend_48 { pt3dadd( -126.982, -117.417, -26.0322, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.14015, -174.678, -41.0282, 0.83 ) }
    dend_39 { pt3dadd( -2.27929, -176.321, -41.1613, 0.83 ) }
    dend_39 { pt3dadd( -2.43701, -177.872, -41.4756, 1.94 ) }
    dend_39 { pt3dadd( -2.57921, -179.431, -41.856, 1.94 ) }
    dend_39 { pt3dadd( -2.93136, -182.511, -42.7472, 0.83 ) }
    dend_39 { pt3dadd( -3.19908, -184.653, -43.3839, 1.38 ) }
    dend_39 { pt3dadd( -3.98977, -190.197, -45.2021, 0.28 ) }
    dend_39 { pt3dadd( -4.05753, -190.684, -45.3807, 0.83 ) }
    dend_39 { pt3dadd( -4.25613, -192.073, -45.9795, 0.55 ) }
    dend_39 { pt3dadd( -4.58298, -193.981, -46.9702, 0.28 ) }
    dend_39 { pt3dadd( -4.97952, -195.767, -48.1144, 0.55 ) }
    dend_39 { pt3dadd( -5.58265, -198.166, -49.6302, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.14015, -174.678, -41.0282, 0.28 ) }
    dend_38 { pt3dadd( -2.88037, -173.753, -37.6427, 0.28 ) }
    dend_38 { pt3dadd( -2.986, -173.621, -37.1596, 1.38 ) }
    dend_38 { pt3dadd( -3.74456, -172.672, -33.6902, 0.55 ) }
    dend_38 { pt3dadd( -4.17863, -172.13, -31.7049, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 51.5948, -190.342, -44.4238, 1.38 ) }
    dend_34 { pt3dadd( 52.1378, -193.569, -44.7966, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 51.5948, -190.342, -44.4238, 0.55 ) }
    dend_33 { pt3dadd( 52.436, -188.923, -46.1237, 0.55 ) }
    dend_33 { pt3dadd( 52.9777, -188.008, -47.2185, 0.55 ) }
    dend_33 { pt3dadd( 54.4065, -185.598, -50.1059, 0.28 ) }
    dend_33 { pt3dadd( 54.8695, -184.817, -51.0416, 1.11 ) }
    dend_33 { pt3dadd( 56.2874, -182.425, -53.9069, 0.28 ) }
    dend_33 { pt3dadd( 57.4746, -180.422, -56.306, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -38.1966, 487.49, 52.9588, 1.38 ) }
    dend_25 { pt3dadd( -37.8465, 489.586, 53.3888, 1.38 ) }
    dend_25 { pt3dadd( -37.6654, 491.464, 53.9044, 0.55 ) }
    dend_25 { pt3dadd( -37.5907, 493.04, 54.6545, 0.55 ) }
    dend_25 { pt3dadd( -37.5258, 494.411, 55.3071, 0.55 ) }
    dend_25 { pt3dadd( -37.4503, 496.003, 56.0649, 1.11 ) }
    dend_25 { pt3dadd( -37.2993, 499.19, 57.5822, 0.55 ) }
    dend_25 { pt3dadd( -37.3046, 501.46, 58.9191, 1.11 ) }
    dend_25 { pt3dadd( -37.3865, 504.751, 61.2185, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -38.1966, 487.49, 52.9588, 0.55 ) }
    dend_24 { pt3dadd( -39.2187, 490.472, 53.2217, 0.55 ) }
    dend_24 { pt3dadd( -39.6715, 491.716, 53.5067, 0.28 ) }
    dend_24 { pt3dadd( -40.2489, 492.886, 53.8641, 0.83 ) }
    dend_24 { pt3dadd( -41.356, 494.94, 54.5576, 0.28 ) }
    dend_24 { pt3dadd( -42.3552, 496.69, 55.2445, 0.55 ) }
    dend_24 { pt3dadd( -43.3017, 498.318, 55.9414, 0.55 ) }
    dend_24 { pt3dadd( -45.1428, 501.112, 57.4201, 1.11 ) }
    dend_24 { pt3dadd( -46.7447, 503.401, 58.8776, 0.55 ) }
    dend_24 { pt3dadd( -47.3891, 504.246, 59.4309, 0.55 ) }
    dend_24 { pt3dadd( -48.852, 506.123, 60.6769, 0.83 ) }
    dend_24 { pt3dadd( -49.9046, 507.396, 61.5137, 0.83 ) }
    dend_24 { pt3dadd( -51.5962, 509.266, 62.609, 0.83 ) }
    dend_24 { pt3dadd( -52.5456, 510.262, 63.1342, 0.83 ) }
    dend_24 { pt3dadd( -54.9315, 512.901, 64.245, 0.55 ) }
    dend_24 { pt3dadd( -56.9503, 515.121, 64.8501, 0.83 ) }
    dend_24 { pt3dadd( -58.3362, 516.549, 65.0688, 0.83 ) }
    dend_24 { pt3dadd( -60.8213, 519.059, 65.2907, 0.55 ) }
    dend_24 { pt3dadd( -62.8925, 521.208, 65.3678, 0.55 ) }
    dend_24 { pt3dadd( -64.1831, 522.536, 65.393, 0.83 ) }
    dend_24 { pt3dadd( -67.1773, 525.591, 65.5642, 0.83 ) }
    dend_24 { pt3dadd( -69.0329, 527.462, 65.6426, 0.83 ) }
    dend_24 { pt3dadd( -70.3744, 528.802, 65.6988, 0.28 ) }
    dend_24 { pt3dadd( -71.4447, 529.797, 65.7024, 0.55 ) }
    dend_24 { pt3dadd( -73.7502, 531.449, 65.3629, 0.55 ) }
    dend_24 { pt3dadd( -75.1557, 532.33, 65.1009, 0.55 ) }
    dend_24 { pt3dadd( -76.4148, 533.034, 64.8249, 0.55 ) }
    dend_24 { pt3dadd( -79.7362, 534.722, 64.031, 0.55 ) }
    dend_24 { pt3dadd( -83.332, 536.25, 63.1441, 0.83 ) }
    dend_24 { pt3dadd( -89.2199, 538.393, 61.8145, 0.28 ) }
    dend_24 { pt3dadd( -91.1587, 538.933, 61.378, 0.28 ) }
    dend_24 { pt3dadd( -92.2891, 539.182, 61.0978, 0.55 ) }
    dend_24 { pt3dadd( -93.815, 539.453, 60.6581, 0.28 ) }
    dend_24 { pt3dadd( -94.8042, 539.617, 60.3289, 0.83 ) }
    dend_24 { pt3dadd( -96.3375, 539.931, 59.7791, 0.83 ) }
    dend_24 { pt3dadd( -101.452, 541.117, 57.6881, 0.83 ) }
    dend_24 { pt3dadd( -105.341, 541.982, 55.9583, 0.28 ) }
    dend_24 { pt3dadd( -109.1, 542.752, 54.2353, 1.11 ) }
    dend_24 { pt3dadd( -114.65, 543.838, 51.6669, 0.55 ) }
    dend_24 { pt3dadd( -116.122, 544.107, 51.0262, 0.55 ) }
    dend_24 { pt3dadd( -118.811, 544.498, 49.9523, 0.55 ) }
    dend_24 { pt3dadd( -120.668, 544.712, 49.3518, 0.55 ) }
    dend_24 { pt3dadd( -122.728, 544.86, 48.8371, 0.83 ) }
    dend_24 { pt3dadd( -126.433, 545.023, 48.1592, 0.55 ) }
    dend_24 { pt3dadd( -129.149, 545.106, 47.7419, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -137.562, 545.377, 46.5551, 0.28 ) }
    dend_24 { pt3dadd( -138.593, 545.439, 46.3829, 0.55 ) }
    dend_24 { pt3dadd( -142.175, 545.793, 45.7492, 0.28 ) }
    dend_24 { pt3dadd( -144.879, 546.1, 45.2182, 1.11 ) }
    dend_24 { pt3dadd( -149.218, 546.61, 44.248, 0.55 ) }
    dend_24 { pt3dadd( -151.217, 546.89, 43.6587, 1.11 ) }
    dend_24 { pt3dadd( -155.905, 547.654, 42.0007, 0.55 ) }
    dend_24 { pt3dadd( -157.167, 547.891, 41.4749, 0.55 ) }
    dend_24 { pt3dadd( -160.353, 548.541, 39.9803, 1.11 ) }
    dend_24 { pt3dadd( -161.948, 548.897, 39.141, 1.11 ) }
    dend_24 { pt3dadd( -167.485, 550.245, 35.93, 0.28 ) }
    dend_24 { pt3dadd( -169.093, 550.645, 34.9527, 0.83 ) }
    dend_24 { pt3dadd( -173.018, 551.576, 32.6643, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -43.3886, 415.35, 22.7221, 0.55 ) }
    dend_16 { pt3dadd( -43.903, 416.974, 23.3858, 0.55 ) }
    dend_16 { pt3dadd( -44.5932, 418.993, 24.1476, 0.28 ) }
    dend_16 { pt3dadd( -45.6528, 421.847, 25.1298, 1.38 ) }
    dend_16 { pt3dadd( -47.3261, 425.946, 26.4348, 0.28 ) }
    dend_16 { pt3dadd( -48.8322, 429.406, 27.4645, 0.55 ) }
    dend_16 { pt3dadd( -49.652, 431.275, 27.9854, 0.55 ) }
    dend_16 { pt3dadd( -50.3638, 432.859, 28.386, 0.83 ) }
    dend_16 { pt3dadd( -51.4518, 435.142, 28.8977, 0.28 ) }
    dend_16 { pt3dadd( -52.3831, 437.002, 29.1826, 0.83 ) }
    dend_16 { pt3dadd( -53.029, 438.355, 29.2726, 0.28 ) }
    dend_16 { pt3dadd( -53.6194, 439.704, 29.3825, 0.28 ) }
    dend_16 { pt3dadd( -54.524, 441.777, 29.5545, 0.83 ) }
    dend_16 { pt3dadd( -55.5687, 444.243, 29.7557, 0.28 ) }
    dend_16 { pt3dadd( -56.0739, 445.483, 29.8521, 0.55 ) }
    dend_16 { pt3dadd( -57.2294, 448.348, 30.0651, 0.55 ) }
    dend_16 { pt3dadd( -58.1019, 450.484, 30.2346, 0.28 ) }
    dend_16 { pt3dadd( -58.5581, 451.55, 30.3242, 0.28 ) }
    dend_16 { pt3dadd( -59.3496, 453.468, 30.4838, 1.11 ) }
    dend_16 { pt3dadd( -60.2525, 455.925, 30.5314, 0.28 ) }
    dend_16 { pt3dadd( -60.8482, 457.63, 30.4321, 0.83 ) }
    dend_16 { pt3dadd( -61.4292, 459.515, 30.1538, 0.28 ) }
    dend_16 { pt3dadd( -61.917, 461.735, 29.6731, 0.83 ) }
    dend_16 { pt3dadd( -62.1394, 463.109, 29.3387, 0.83 ) }
    dend_16 { pt3dadd( -62.5699, 466.738, 28.3762, 0.55 ) }
    dend_16 { pt3dadd( -62.798, 469.187, 27.7344, 0.55 ) }
    dend_16 { pt3dadd( -62.9478, 470.75, 27.3588, 0.55 ) }
    dend_16 { pt3dadd( -63.2366, 473.584, 26.7572, 0.83 ) }
    dend_16 { pt3dadd( -63.4924, 475.976, 26.3553, 0.55 ) }
    dend_16 { pt3dadd( -63.9531, 479.477, 25.9483, 1.11 ) }
    dend_16 { pt3dadd( -64.3056, 481.911, 25.7889, 0.55 ) }
    dend_16 { pt3dadd( -64.6617, 484.195, 25.6768, 0.55 ) }
    dend_16 { pt3dadd( -64.9138, 485.647, 25.5633, 0.83 ) }
    dend_16 { pt3dadd( -65.1176, 486.762, 25.3898, 0.55 ) }
    dend_16 { pt3dadd( -65.7166, 490.652, 24.5454, 0.83 ) }
    dend_16 { pt3dadd( -65.9228, 492.239, 23.9771, 0.28 ) }
    dend_16 { pt3dadd( -65.9633, 492.562, 23.8234, 0.28 ) }
    dend_16 { pt3dadd( -66.1114, 493.948, 23.0571, 0.55 ) }
    dend_16 { pt3dadd( -66.4638, 497.496, 20.9584, 0.28 ) }
    dend_16 { pt3dadd( -66.5328, 498.164, 20.5926, 0.55 ) }
    dend_16 { pt3dadd( -66.8777, 501.621, 18.809, 0.28 ) }
    dend_16 { pt3dadd( -67.0109, 503.026, 18.1984, 0.83 ) }
    dend_16 { pt3dadd( -67.3398, 505.459, 17.3289, 0.83 ) }
    dend_16 { pt3dadd( -67.498, 506.484, 17.0563, 0.28 ) }
    dend_16 { pt3dadd( -67.8574, 509.557, 16.5003, 0.55 ) }
    dend_16 { pt3dadd( -68.0683, 511.556, 16.2428, 0.28 ) }
    dend_16 { pt3dadd( -68.2693, 514.148, 16.2761, 0.83 ) }
    dend_16 { pt3dadd( -68.4494, 517.569, 16.5381, 0.28 ) }
    dend_16 { pt3dadd( -68.469, 519.049, 16.7788, 0.28 ) }
    dend_16 { pt3dadd( -68.4439, 521.11, 17.2652, 0.55 ) }
    dend_16 { pt3dadd( -68.4066, 524.263, 18.0435, 0.83 ) }
    dend_16 { pt3dadd( -68.4386, 528.433, 19.1335, 0.28 ) }
    dend_16 { pt3dadd( -68.4319, 530.196, 19.5189, 0.83 ) }
    dend_16 { pt3dadd( -68.4277, 533.12, 19.901, 0.28 ) }
    dend_16 { pt3dadd( -68.4024, 536.978, 19.8487, 1.38 ) }
    dend_16 { pt3dadd( -68.3879, 540.423, 19.4241, 0.28 ) }
    dend_16 { pt3dadd( -68.2963, 543.443, 18.7822, 0.83 ) }
    dend_16 { pt3dadd( -68.177, 546.35, 17.9263, 0.83 ) }
    dend_16 { pt3dadd( -67.9452, 550.922, 16.4693, 0.55 ) }
    dend_16 { pt3dadd( -67.8211, 555.592, 14.8985, 0.55 ) }
    dend_16 { pt3dadd( -67.7307, 558.882, 13.9436, 0.83 ) }
    dend_16 { pt3dadd( -67.671, 561.411, 13.5538, 0.83 ) }
    dend_16 { pt3dadd( -67.6369, 564.682, 13.4257, 0.55 ) }
    dend_16 { pt3dadd( -67.672, 566.838, 13.7816, 0.55 ) }
    dend_16 { pt3dadd( -67.7046, 569.99, 14.8825, 1.38 ) }
    dend_16 { pt3dadd( -67.866, 573.877, 16.7032, 0.83 ) }
    dend_16 { pt3dadd( -68.0381, 578.33, 19.2178, 1.11 ) }
    dend_16 { pt3dadd( -68.1275, 580.515, 20.6796, 1.11 ) }
    dend_16 { pt3dadd( -68.1821, 584.918, 24.1933, 0.83 ) }
    dend_16 { pt3dadd( -68.1321, 585.868, 25.034, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -43.3886, 415.35, 22.7221, 0.28 ) }
    dend_15 { pt3dadd( -40.9993, 415.173, 23.3667, 0.28 ) }
    dend_15 { pt3dadd( -40.3911, 415.128, 23.5309, 0.83 ) }
    dend_15 { pt3dadd( -38.5163, 414.99, 24.0367, 0.28 ) }
    dend_15 { pt3dadd( -38.2416, 414.969, 24.1108, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 34.9471, 572.577, -40.3341, 0.55 ) }
    dend_7 { pt3dadd( 35.8583, 575.358, -39.8326, 0.55 ) }
    dend_7 { pt3dadd( 36.8694, 578.459, -39.3617, 0.55 ) }
    dend_7 { pt3dadd( 37.4243, 580.245, -39.1385, 0.55 ) }
    dend_7 { pt3dadd( 38.2308, 582.57, -38.8034, 0.28 ) }
    dend_7 { pt3dadd( 39.064, 584.695, -38.4483, 0.83 ) }
    dend_7 { pt3dadd( 40.3632, 587.93, -37.8921, 0.28 ) }
    dend_7 { pt3dadd( 40.8762, 589.228, -37.6899, 0.83 ) }
    dend_7 { pt3dadd( 41.6083, 591.226, -37.4318, 0.55 ) }
    dend_7 { pt3dadd( 42.6768, 594.036, -37.1093, 0.55 ) }
    dend_7 { pt3dadd( 43.2991, 595.704, -36.9535, 0.83 ) }
    dend_7 { pt3dadd( 43.9908, 597.816, -36.8266, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 44.4909, 599.546, -36.7022, 0.83 ) }
    dend_7 { pt3dadd( 45.0248, 601.514, -36.6021, 0.83 ) }
    dend_7 { pt3dadd( 45.4335, 602.959, -36.6356, 0.28 ) }
    dend_7 { pt3dadd( 45.8963, 605.043, -36.8623, 0.83 ) }
    dend_7 { pt3dadd( 46.2196, 606.784, -37.2164, 0.83 ) }
    dend_7 { pt3dadd( 46.6712, 608.944, -38.0879, 0.83 ) }
    dend_7 { pt3dadd( 47.1696, 611.354, -39.4832, 1.11 ) }
    dend_7 { pt3dadd( 47.9203, 614.112, -41.7956, 0.55 ) }
    dend_7 { pt3dadd( 48.4002, 616.09, -43.9722, 0.55 ) }
    dend_7 { pt3dadd( 48.7939, 617.872, -46.3331, 1.11 ) }
    dend_7 { pt3dadd( 49.4999, 620.831, -51.0137, 0.28 ) }
    dend_7 { pt3dadd( 49.7176, 621.587, -52.3478, 0.28 ) }
    dend_7 { pt3dadd( 50.447, 623.924, -56.7128, 0.83 ) }
    dend_7 { pt3dadd( 50.9682, 625.266, -59.35, 0.55 ) }
    dend_7 { pt3dadd( 51.2174, 625.718, -60.3012, 0.55 ) }
    dend_7 { pt3dadd( 52.0682, 627.198, -63.2708, 0.55 ) }
    dend_7 { pt3dadd( 52.6973, 628.327, -65.4431, 0.83 ) }
    dend_7 { pt3dadd( 53.9042, 630.392, -69.6362, 0.55 ) }
    dend_7 { pt3dadd( 56.0046, 634.077, -77.2842, 1.94 ) }
    dend_7 { pt3dadd( 58.0961, 637.181, -84.2181, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 34.9471, 572.577, -40.3341, 0.55 ) }
    dend_6 { pt3dadd( 34.7794, 573.557, -40.6433, 0.55 ) }
    dend_6 { pt3dadd( 34.6501, 574.464, -40.9412, 0.83 ) }
    dend_6 { pt3dadd( 34.6115, 574.906, -41.1059, 0.55 ) }
    dend_6 { pt3dadd( 34.6038, 575.89, -41.445, 0.83 ) }
    dend_6 { pt3dadd( 34.6544, 577.31, -41.9225, 0.55 ) }
    dend_6 { pt3dadd( 34.6765, 577.926, -42.1636, 0.55 ) }
    dend_6 { pt3dadd( 34.7389, 578.502, -42.4489, 1.11 ) }
    dend_6 { pt3dadd( 34.8878, 579.31, -42.8794, 0.83 ) }
    dend_6 { pt3dadd( 35.1174, 580.313, -43.4721, 0.83 ) }
    dend_6 { pt3dadd( 35.4084, 581.477, -44.2476, 0.83 ) }
    dend_6 { pt3dadd( 35.6074, 582.443, -44.9922, 0.55 ) }
    dend_6 { pt3dadd( 35.7949, 583.525, -45.8633, 0.28 ) }
    dend_6 { pt3dadd( 36.0663, 584.564, -46.969, 0.83 ) }
    dend_6 { pt3dadd( 36.3004, 585.337, -47.9163, 0.55 ) }
    dend_6 { pt3dadd( 36.5912, 586.211, -49.0968, 1.38 ) }
    dend_6 { pt3dadd( 36.9026, 587.026, -50.2245, 0.55 ) }
    dend_6 { pt3dadd( 37.0977, 587.518, -50.8783, 0.55 ) }
    dend_6 { pt3dadd( 38.3465, 590.796, -55.0485, 0.83 ) }
    dend_6 { pt3dadd( 38.5279, 591.283, -55.678, 0.55 ) }
    dend_6 { pt3dadd( 38.5741, 591.401, -55.8196, 0.55 ) }
    dend_6 { pt3dadd( 38.8539, 592.153, -56.6174, 1.38 ) }
    dend_6 { pt3dadd( 39.0454, 592.752, -57.1108, 1.38 ) }
    dend_6 { pt3dadd( 39.2156, 593.985, -57.7165, 0.28 ) }
    dend_6 { pt3dadd( 39.1359, 594.535, -57.725, 0.55 ) }
    dend_6 { pt3dadd( 39.0003, 595.477, -57.6533, 0.28 ) }
    dend_6 { pt3dadd( 38.83, 596.492, -57.5436, 0.55 ) }
    dend_6 { pt3dadd( 38.443, 598.272, -57.2562, 0.55 ) }
    dend_6 { pt3dadd( 38.1789, 599.362, -57.05, 0.55 ) }
    dend_6 { pt3dadd( 37.8413, 600.654, -56.7617, 0.55 ) }
    dend_6 { pt3dadd( 37.5814, 601.714, -56.4544, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -24.5147, -127.244, 17.1338, 0.55 ) }
    dend_55 { pt3dadd( -25.3102, -127.703, 18.2425, 0.55 ) }
    dend_55 { pt3dadd( -25.9418, -128.071, 19.141, 0.28 ) }
    dend_55 { pt3dadd( -26.5211, -128.409, 19.9649, 1.11 ) }
    dend_55 { pt3dadd( -28.639, -129.643, 22.9775, 0.28 ) }
    dend_55 { pt3dadd( -28.9151, -129.804, 23.3702, 1.11 ) }
    dend_55 { pt3dadd( -30.3449, -130.638, 25.404, 0.28 ) }
    dend_55 { pt3dadd( -30.676, -130.848, 25.9979, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -24.5147, -127.244, 17.1338, 0.83 ) }
    dend_54 { pt3dadd( -26.0931, -128.813, 18.151, 0.83 ) }
    dend_54 { pt3dadd( -27.6168, -130.097, 19.1141, 0.83 ) }
    dend_54 { pt3dadd( -28.9961, -130.951, 20.0721, 0.83 ) }
    dend_54 { pt3dadd( -31.4187, -132.323, 21.7575, 0.83 ) }
    dend_54 { pt3dadd( -33.0908, -133.379, 23.2679, 0.83 ) }
    dend_54 { pt3dadd( -35.2336, -134.928, 25.5629, 0.83 ) }
    dend_54 { pt3dadd( -36.3655, -135.839, 26.9513, 0.83 ) }
    dend_54 { pt3dadd( -38.7551, -138.304, 30.4029, 1.11 ) }
    dend_54 { pt3dadd( -39.2112, -138.953, 31.2656, 1.11 ) }
    dend_54 { pt3dadd( -40.7865, -142.283, 35.2419, 1.11 ) }
    dend_54 { pt3dadd( -41.573, -144.615, 37.7183, 1.11 ) }
    dend_54 { pt3dadd( -42.0878, -146.776, 39.7469, 1.11 ) }
    dend_54 { pt3dadd( -42.4026, -148.788, 41.4915, 1.38 ) }
    dend_54 { pt3dadd( -42.6763, -152.048, 43.9658, 0.55 ) }
    dend_54 { pt3dadd( -42.7997, -153.429, 44.945, 0.83 ) }
    dend_54 { pt3dadd( -42.9767, -154.792, 45.7377, 0.83 ) }
    dend_54 { pt3dadd( -43.0803, -155.955, 46.4339, 0.83 ) }
    dend_54 { pt3dadd( -43.2139, -157.06, 47.146, 0.83 ) }
    dend_54 { pt3dadd( -43.4452, -159.206, 48.2873, 0.55 ) }
    dend_54 { pt3dadd( -43.6561, -160.678, 48.7576, 0.55 ) }
    dend_54 { pt3dadd( -43.8098, -161.501, 48.9246, 1.11 ) }
    dend_54 { pt3dadd( -44.1195, -163.036, 49.0823, 0.28 ) }
    dend_54 { pt3dadd( -44.313, -163.866, 49.1219, 1.11 ) }
    dend_54 { pt3dadd( -44.8571, -165.692, 49.0337, 0.55 ) }
    dend_54 { pt3dadd( -45.4467, -167.471, 48.6699, 0.55 ) }
    dend_54 { pt3dadd( -46.2682, -169.456, 48.1028, 0.28 ) }
    dend_54 { pt3dadd( -46.5537, -170.087, 47.8636, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -126.982, -117.417, -26.0322, 1.11 ) }
    dend_50 { pt3dadd( -129.162, -117.225, -26.1926, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -126.982, -117.417, -26.0322, 0.28 ) }
    dend_49 { pt3dadd( -127.436, -119.156, -26.571, 0.28 ) }
    dend_49 { pt3dadd( -127.523, -119.486, -26.6732, 0.83 ) }
    dend_49 { pt3dadd( -127.948, -121.111, -27.1767, 0.28 ) }
    dend_49 { pt3dadd( -128.067, -121.569, -27.3186, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.58265, -198.166, -49.6302, 0.55 ) }
    dend_41 { pt3dadd( -7.23063, -199.332, -48.7956, 0.55 ) }
    dend_41 { pt3dadd( -8.39855, -200.135, -48.3063, 0.55 ) }
    dend_41 { pt3dadd( -10.5619, -201.569, -47.0723, 0.28 ) }
    dend_41 { pt3dadd( -11.1807, -202.029, -46.7059, 0.55 ) }
    dend_41 { pt3dadd( -12.1341, -202.735, -46.142, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -13.3584, -203.668, -45.4265, 0.28 ) }
    dend_41 { pt3dadd( -14.3388, -204.35, -44.8591, 0.55 ) }
    dend_41 { pt3dadd( -17.1436, -206.203, -43.4101, 0.28 ) }
    dend_41 { pt3dadd( -19.5064, -207.732, -42.2994, 0.83 ) }
    dend_41 { pt3dadd( -21.8755, -209.302, -41.1218, 0.28 ) }
    dend_41 { pt3dadd( -22.5448, -209.76, -40.7709, 0.83 ) }
    dend_41 { pt3dadd( -24.2471, -210.914, -39.8756, 0.83 ) }
    dend_41 { pt3dadd( -26.0298, -212.042, -39.0493, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -5.58265, -198.166, -49.6302, 0.28 ) }
    dend_40 { pt3dadd( -6.18033, -202.262, -49.5343, 0.28 ) }
    dend_40 { pt3dadd( -6.37038, -203.707, -49.4303, 0.55 ) }
    dend_40 { pt3dadd( -6.66157, -206.144, -49.2022, 0.28 ) }
    dend_40 { pt3dadd( -6.98714, -209.081, -48.9007, 1.11 ) }
    dend_40 { pt3dadd( -7.34345, -212.578, -48.5296, 0.28 ) }
    dend_40 { pt3dadd( -7.41726, -213.51, -48.4342, 0.55 ) }
    dend_40 { pt3dadd( -7.54619, -214.961, -48.1578, 0.28 ) }
    dend_40 { pt3dadd( -7.61543, -215.869, -47.9549, 0.55 ) }
    dend_40 { pt3dadd( -7.74752, -217.025, -47.6487, 0.28 ) }
    dend_40 { pt3dadd( -7.83464, -217.663, -47.4996, 0.55 ) }
    dend_40 { pt3dadd( -8.14365, -219.748, -47.2817, 0.28 ) }
    dend_40 { pt3dadd( -8.41363, -221.588, -47.183, 1.11 ) }
    dend_40 { pt3dadd( -9.05086, -225.474, -46.7752, 0.28 ) }
    dend_40 { pt3dadd( -9.40599, -227.725, -46.4781, 1.11 ) }
    dend_40 { pt3dadd( -9.69779, -229.518, -46.2317, 1.11 ) }
    dend_40 { pt3dadd( -10.2567, -232.844, -45.7635, 0.28 ) }
    dend_40 { pt3dadd( -10.6149, -234.951, -45.463, 0.83 ) }
    dend_40 { pt3dadd( -11.1827, -239.458, -44.8966, 0.55 ) }
    dend_40 { pt3dadd( -11.4081, -241.963, -44.7388, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 52.1378, -193.569, -44.7966, 0.28 ) }
    dend_36 { pt3dadd( 55.2114, -195.358, -46.0399, 0.28 ) }
    dend_36 { pt3dadd( 56.2863, -195.97, -46.482, 0.83 ) }
    dend_36 { pt3dadd( 57.9607, -196.948, -47.1958, 0.28 ) }
    dend_36 { pt3dadd( 60.2856, -198.348, -48.2192, 0.83 ) }
    dend_36 { pt3dadd( 62.5876, -199.833, -49.2574, 0.28 ) }
    dend_36 { pt3dadd( 64.2853, -200.92, -50.0461, 0.55 ) }
    dend_36 { pt3dadd( 65.1942, -201.447, -50.4775, 0.28 ) }
    dend_36 { pt3dadd( 67.1619, -202.487, -51.4716, 0.55 ) }
    dend_36 { pt3dadd( 68.4485, -203.145, -52.155, 0.28 ) }
    dend_36 { pt3dadd( 69.889, -203.845, -52.9352, 0.55 ) }
    dend_36 { pt3dadd( 71.7393, -204.642, -53.98, 0.55 ) }
    dend_36 { pt3dadd( 73.5301, -205.393, -55.1344, 0.55 ) }
    dend_36 { pt3dadd( 75.8818, -206.448, -56.7943, 0.83 ) }
    dend_36 { pt3dadd( 77.2003, -207.115, -57.9364, 0.28 ) }
    dend_36 { pt3dadd( 78.3682, -207.849, -59.1003, 0.83 ) }
    dend_36 { pt3dadd( 79.6755, -208.663, -60.0895, 1.38 ) }
    dend_36 { pt3dadd( 82.7561, -210.668, -61.9092, 0.28 ) }
    dend_36 { pt3dadd( 84.451, -211.912, -62.8657, 0.83 ) }
    dend_36 { pt3dadd( 87.0964, -213.918, -64.2919, 0.28 ) }
    dend_36 { pt3dadd( 88.8083, -215.196, -65.1282, 1.11 ) }
    dend_36 { pt3dadd( 95.5954, -220.111, -67.8538, 0.28 ) }
    dend_36 { pt3dadd( 96.4959, -220.742, -68.1486, 0.55 ) }
    dend_36 { pt3dadd( 101.131, -223.88, -69.4334, 0.28 ) }
    dend_36 { pt3dadd( 104.226, -226.047, -70.294, 0.28 ) }
    dend_36 { pt3dadd( 105.551, -227.082, -70.6631, 0.55 ) }
    dend_36 { pt3dadd( 107.525, -228.755, -71.4291, 0.28 ) }
    dend_36 { pt3dadd( 108.499, -229.852, -72.1121, 0.28 ) }
    dend_36 { pt3dadd( 109.756, -231.313, -72.9116, 0.55 ) }
    dend_36 { pt3dadd( 111.427, -233.138, -73.4985, 0.55 ) }
    dend_36 { pt3dadd( 112.336, -234.715, -73.9121, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 52.1378, -193.569, -44.7966, 0.55 ) }
    dend_35 { pt3dadd( 50.345, -195.118, -42.9224, 0.55 ) }
    dend_35 { pt3dadd( 49.602, -195.76, -42.1456, 0.55 ) }
    dend_35 { pt3dadd( 48.6862, -196.551, -41.188, 0.28 ) }
    dend_35 { pt3dadd( 47.4748, -197.598, -39.9215, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -37.3865, 504.751, 61.2185, 0.83 ) }
    dend_27 { pt3dadd( -37.1925, 507.371, 62.265, 0.83 ) }
    dend_27 { pt3dadd( -36.8502, 511.418, 63.8366, 0.83 ) }
    dend_27 { pt3dadd( -36.5845, 514.182, 64.9174, 0.83 ) }
    dend_27 { pt3dadd( -36.2182, 519.909, 67.1779, 0.83 ) }
    dend_27 { pt3dadd( -36.1975, 520.571, 67.3969, 1.11 ) }
    dend_27 { pt3dadd( -36.2033, 522.295, 67.8839, 0.55 ) }
    dend_27 { pt3dadd( -36.2621, 523.315, 68.1352, 0.83 ) }
    dend_27 { pt3dadd( -37.1554, 524.123, 66.4164, 0.28 ) }
    dend_27 { pt3dadd( -37.8962, 524.913, 64.5051, 0.55 ) }
    dend_27 { pt3dadd( -39.8355, 527.49, 58.3988, 0.28 ) }
    dend_27 { pt3dadd( -40.3579, 528.338, 56.637, 0.83 ) }
    dend_27 { pt3dadd( -40.7171, 529.043, 55.2797, 0.83 ) }
    dend_27 { pt3dadd( -42.5872, 533.888, 46.9418, 0.55 ) }
    dend_27 { pt3dadd( -42.9552, 535.353, 44.7038, 0.55 ) }
    dend_27 { pt3dadd( -43.0095, 536.837, 43.0796, 1.11 ) }
    dend_27 { pt3dadd( -42.3484, 542.155, 40.5226, 0.55 ) }
    dend_27 { pt3dadd( -42.2071, 542.91, 40.3617, 0.83 ) }
    dend_27 { pt3dadd( -41.9184, 544.124, 40.4741, 0.28 ) }
    dend_27 { pt3dadd( -41.7654, 544.772, 40.6851, 0.55 ) }
    dend_27 { pt3dadd( -41.6704, 545.809, 40.9359, 0.28 ) }
    dend_27 { pt3dadd( -41.6869, 547.242, 41.0682, 0.83 ) }
    dend_27 { pt3dadd( -41.6968, 548.748, 40.9476, 0.28 ) }
    dend_27 { pt3dadd( -41.7211, 549.746, 40.8565, 0.83 ) }
    dend_27 { pt3dadd( -41.9156, 552.95, 40.2856, 0.55 ) }
    dend_27 { pt3dadd( -42.146, 555.855, 39.5854, 0.55 ) }
    dend_27 { pt3dadd( -42.3584, 558.003, 38.9936, 0.55 ) }
    dend_27 { pt3dadd( -42.6582, 560.998, 38.147, 0.55 ) }
    dend_27 { pt3dadd( -42.8991, 563.009, 37.5324, 0.55 ) }
    dend_27 { pt3dadd( -43.4535, 567.359, 36.2527, 0.55 ) }
    dend_27 { pt3dadd( -43.6106, 568.711, 35.8395, 0.28 ) }
    dend_27 { pt3dadd( -43.7492, 569.91, 35.4338, 0.55 ) }
    dend_27 { pt3dadd( -43.9882, 571.57, 34.8715, 0.28 ) }
    dend_27 { pt3dadd( -44.5069, 574.138, 33.9768, 0.55 ) }
    dend_27 { pt3dadd( -44.7157, 575.2, 33.6334, 0.55 ) }
    dend_27 { pt3dadd( -45.0365, 577.218, 33.0647, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -45.312, 579.123, 32.3946, 0.28 ) }
    dend_27 { pt3dadd( -45.3813, 580.103, 31.9961, 0.55 ) }
    dend_27 { pt3dadd( -45.4517, 582.28, 30.5318, 0.28 ) }
    dend_27 { pt3dadd( -45.3861, 583.41, 29.439, 0.83 ) }
    dend_27 { pt3dadd( -45.2957, 584.603, 28.1811, 0.83 ) }
    dend_27 { pt3dadd( -45.0617, 586.697, 25.7688, 0.55 ) }
    dend_27 { pt3dadd( -44.8303, 588.224, 23.7928, 0.55 ) }
    dend_27 { pt3dadd( -44.0378, 592.651, 17.5212, 0.28 ) }
    dend_27 { pt3dadd( -43.4075, 595.387, 13.2285, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -37.3865, 504.751, 61.2185, 0.55 ) }
    dend_26 { pt3dadd( -38.496, 506.808, 62.0954, 0.55 ) }
    dend_26 { pt3dadd( -39.9562, 509.515, 63.2493, 0.55 ) }
    dend_26 { pt3dadd( -40.9833, 511.419, 64.061, 0.55 ) }
    dend_26 { pt3dadd( -41.875, 513.072, 64.7658, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -68.1321, 585.868, 25.034, 0.28 ) }
    dend_22 { pt3dadd( -66.9815, 586.742, 23.2198, 0.28 ) }
    dend_22 { pt3dadd( -66.6615, 586.986, 22.7152, 0.55 ) }
    dend_22 { pt3dadd( -63.5135, 589.378, 17.7519, 0.28 ) }
    dend_22 { pt3dadd( -63.1562, 589.65, 17.1887, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -68.1321, 585.868, 25.034, 0.28 ) }
    dend_17 { pt3dadd( -70.3767, 588.062, 25.1305, 0.28 ) }
    dend_17 { pt3dadd( -71.7642, 589.418, 25.1901, 0.83 ) }
    dend_17 { pt3dadd( -72.8016, 590.433, 25.2347, 0.83 ) }
    dend_17 { pt3dadd( -73.4581, 591.075, 25.263, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 58.0961, 637.181, -84.2181, 0.55 ) }
    dend_9 { pt3dadd( 56.6777, 638.022, -86.3954, 0.55 ) }
    dend_9 { pt3dadd( 55.1568, 639.047, -89.104, 0.55 ) }
    dend_9 { pt3dadd( 54.0213, 639.812, -91.1263, 0.55 ) }
    dend_9 { pt3dadd( 52.7026, 640.7, -93.4746, 0.28 ) }
    dend_9 { pt3dadd( 51.51, 641.504, -95.5986, 0.83 ) }
    dend_9 { pt3dadd( 50.5909, 642.123, -97.2355, 0.83 ) }
    dend_9 { pt3dadd( 49.7641, 642.891, -99.0877, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 58.0961, 637.181, -84.2181, 0.55 ) }
    dend_8 { pt3dadd( 57.8792, 639.942, -85.5761, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -129.162, -117.225, -26.1926, 0.28 ) }
    dend_52 { pt3dadd( -131.655, -117.036, -26.9959, 0.28 ) }
    dend_52 { pt3dadd( -134.148, -116.713, -27.7796, 0.55 ) }
    dend_52 { pt3dadd( -136.936, -116.308, -28.6305, 0.28 ) }
    dend_52 { pt3dadd( -138.508, -116.101, -29.0555, 1.11 ) }
    dend_52 { pt3dadd( -140.929, -115.776, -29.6404, 0.28 ) }
    dend_52 { pt3dadd( -141.546, -115.685, -29.8144, 0.55 ) }
    dend_52 { pt3dadd( -144.992, -115.188, -30.8974, 0.28 ) }
    dend_52 { pt3dadd( -145.974, -115.027, -31.2162, 1.11 ) }
    dend_52 { pt3dadd( -148.195, -114.707, -31.9431, 0.28 ) }
    dend_52 { pt3dadd( -149.514, -114.526, -32.3605, 1.11 ) }
    dend_52 { pt3dadd( -152.673, -114.107, -33.2354, 1.11 ) }
    dend_52 { pt3dadd( -154.836, -113.89, -33.9407, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -129.162, -117.225, -26.1926, 0.83 ) }
    dend_51 { pt3dadd( -130.541, -118.79, -27.1606, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -26.0298, -212.042, -39.0493, 0.83 ) }
    dend_43 { pt3dadd( -26.8757, -212.828, -39.6261, 0.83 ) }
    dend_43 { pt3dadd( -28.2921, -214.143, -40.5921, 0.28 ) }
    dend_43 { pt3dadd( -29.4801, -215.247, -41.4022, 1.11 ) }
    dend_43 { pt3dadd( -32.8371, -218.365, -43.6916, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -26.0298, -212.042, -39.0493, 1.11 ) }
    dend_42 { pt3dadd( -27.3398, -210.443, -38.8444, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -73.4581, 591.075, 25.263, 0.55 ) }
    dend_21 { pt3dadd( -72.9964, 591.984, 23.6858, 0.55 ) }
    dend_21 { pt3dadd( -72.4215, 592.836, 22.2522, 0.28 ) }
    dend_21 { pt3dadd( -72.3075, 593.039, 21.7822, 0.55 ) }
    dend_21 { pt3dadd( -71.5028, 594.474, 18.465, 0.28 ) }
    dend_21 { pt3dadd( -71.1254, 595.146, 16.9093, 0.55 ) }
    dend_21 { pt3dadd( -70.6124, 596.061, 14.7944, 0.28 ) }
    dend_21 { pt3dadd( -70.3855, 596.713, 13.1018, 0.55 ) }
    dend_21 { pt3dadd( -70.0375, 598.692, 7.62226, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -73.4581, 591.075, 25.263, 0.28 ) }
    dend_18 { pt3dadd( -74.4066, 591.23, 25.6533, 0.28 ) }
    dend_18 { pt3dadd( -75.8704, 591.47, 26.2557, 0.55 ) }
    dend_18 { pt3dadd( -77.1128, 591.674, 26.767, 0.55 ) }
    dend_18 { pt3dadd( -78.4236, 591.889, 27.3064, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 49.7641, 642.891, -99.0877, 0.55 ) }
    dend_11 { pt3dadd( 49.0512, 644.406, -99.1309, 0.55 ) }
    dend_11 { pt3dadd( 48.3622, 645.871, -99.1726, 0.55 ) }
    dend_11 { pt3dadd( 47.736, 647.202, -99.2105, 0.83 ) }
    dend_11 { pt3dadd( 46.9759, 648.818, -99.2565, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 49.7641, 642.891, -99.0877, 0.28 ) }
    dend_10 { pt3dadd( 47.5186, 644.336, -101.434, 0.28 ) }
    dend_10 { pt3dadd( 46.9024, 644.732, -102.078, 0.28 ) }
    dend_10 { pt3dadd( 45.6563, 645.534, -103.38, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -32.8371, -218.365, -43.6916, 1.11 ) }
    dend_45 { pt3dadd( -32.1265, -220.932, -42.2859, 1.11 ) }
    dend_45 { pt3dadd( -31.3926, -223.558, -40.7167, 0.28 ) }
    dend_45 { pt3dadd( -30.9279, -225.379, -39.5861, 1.11 ) }
    dend_45 { pt3dadd( -29.6819, -230.417, -36.0982, 0.28 ) }
    dend_45 { pt3dadd( -29.395, -231.669, -35.1987, 1.94 ) }
    dend_45 { pt3dadd( -28.6781, -235.314, -32.7081, 1.11 ) }
    dend_45 { pt3dadd( -28.5524, -236.12, -32.141, 0.28 ) }
    dend_45 { pt3dadd( -28.4474, -237.047, -31.4799, 0.83 ) }
    dend_45 { pt3dadd( -28.3474, -239.516, -29.9141, 0.28 ) }
    dend_45 { pt3dadd( -28.4493, -240.656, -29.4066, 1.11 ) }
    dend_45 { pt3dadd( -28.836, -243.684, -28.3013, 0.28 ) }
    dend_45 { pt3dadd( -29.2913, -246.089, -27.622, 0.28 ) }
    dend_45 { pt3dadd( -29.5064, -247.353, -27.3029, 1.11 ) }
    dend_45 { pt3dadd( -29.5064, -247.353, -27.3029, 1.11 ) }
    dend_45 { pt3dadd( -29.8132, -248.925, -27.0853, 0.55 ) }
    dend_45 { pt3dadd( -29.949, -249.613, -26.9668, 1.38 ) }
    dend_45 { pt3dadd( -30.5002, -252.233, -26.2773, 0.28 ) }
    dend_45 { pt3dadd( -30.5467, -252.515, -26.185, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -32.8371, -218.365, -43.6916, 0.55 ) }
    dend_44 { pt3dadd( -35.3658, -217.934, -42.0222, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -36.9327, -217.667, -40.9877, 0.55 ) }
    dend_44 { pt3dadd( -38.275, -217.438, -40.1015, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -78.4236, 591.889, 27.3064, 0.55 ) }
    dend_20 { pt3dadd( -78.8227, 592.97, 27.6492, 0.55 ) }
    dend_20 { pt3dadd( -79.3929, 594.955, 28.3009, 0.55 ) }
    dend_20 { pt3dadd( -79.6624, 596.289, 28.6812, 0.55 ) }
    dend_20 { pt3dadd( -79.9723, 597.941, 29.0824, 0.55 ) }
    dend_20 { pt3dadd( -80.2184, 599.465, 29.4894, 0.28 ) }
    dend_20 { pt3dadd( -80.3297, 600.163, 29.6356, 0.83 ) }
    dend_20 { pt3dadd( -80.5829, 602.156, 29.9385, 0.83 ) }
    dend_20 { pt3dadd( -80.6991, 603.872, 30.1381, 0.83 ) }
    dend_20 { pt3dadd( -80.7522, 604.753, 30.1987, 0.55 ) }
    dend_20 { pt3dadd( -80.763, 607.002, 30.2412, 0.83 ) }
    dend_20 { pt3dadd( -80.6684, 609.55, 30.0767, 0.28 ) }
    dend_20 { pt3dadd( -80.6565, 610.77, 29.8936, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -78.4236, 591.889, 27.3064, 0.55 ) }
    dend_19 { pt3dadd( -81.2458, 590.471, 29.2685, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 13
    dend_1 nseg = 21
    dend_58 nseg = 3
    dend_31 nseg = 3
    dend_28 nseg = 7
    dend_13 nseg = 3
    dend_60 nseg = 3
    dend_56 nseg = 5
    dend_32 nseg = 3
    dend_23 nseg = 7
    dend_14 nseg = 3
    dend_5 nseg = 5
    dend_48 nseg = 5
    dend_24 nseg = 9
    dend_16 nseg = 9
    dend_7 nseg = 5
    dend_54 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_DBC_0c64ca4449_0_0


