// Cell: cSTUT189_L1_NGCDA_3d9c976fde_0_0
/*
{
  "id" : "cSTUT189_L1_NGCDA_3d9c976fde_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "4.62286, -6.48181, 0.0, 4.1193", "4.07189, -5.77432, 0.0, 7.27496", "3.52092, -5.06683, 0.0, 9.50146", "2.96995, -4.35935, 0.0, 10.7052", "2.41898, -3.65186, 0.0, 11.3464", "1.86801, -2.94437, 0.0, 11.833", "1.31704, -2.23689, 0.0, 12.4478", "0.766068, -1.5294, 0.0, 13.1823", "0.215097, -0.821912, 0.0, 13.6629", "-0.335874, -0.114425, 0.0, 14.0775", "-0.886844, 0.593062, 0.0, 14.2269", "-1.43781, 1.30055, 0.0, 14.2753", "-1.98879, 2.00804, 0.0, 14.3053", "-2.53976, 2.71552, 0.0, 14.0514", "-3.09073, 3.42301, 0.0, 13.4254", "-3.6417, 4.1305, 0.0, 12.6418", "-4.19267, 4.83798, 0.0, 11.7022", "-4.74364, 5.54547, 0.0, 10.5709", "-5.29461, 6.25296, 0.0, 9.14082", "-5.84558, 6.96044, 0.0, 6.8148", "-6.39655, 7.66793, 0.0, 3.66661" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "3.136, 6.49739, 8.6, 1.55", "3.7051, 7.13222, 9.20646, 1.55", "4.38002, 7.85492, 10.1492, 1.25", "4.90446, 8.41651, 10.8817, 1.25", "5.56252, 9.12116, 11.8009, 1.4", "6.0847, 9.68032, 12.5303, 1.4", "6.88483, 10.5371, 13.6479, 1.77", "7.78984, 11.4136, 14.9119, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.115998, 8.06715, -0.4, 0.59", "0.239779, 8.45579, -0.472797, 0.59", "0.496922, 9.26315, -0.624027, 0.66", "0.881349, 10.4702, -0.850116, 1.03", "1.18836, 11.4341, -1.03067, 1.11", "1.56741, 12.6242, -1.2536, 0.88", "2.03388, 14.0889, -1.52794, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "1.626, -7.86435, -0.710001, 3.83", "1.626, -7.86435, -0.710001, 3.83", "1.75164, -9.677, -1.15814, 3.39", "1.84082, -10.9637, -1.47626, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.54599, -2.6676, -0.210001, 1.77", "7.54599, -2.6676, -0.210001, 1.77", "8.31257, -2.71517, -0.349378, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.06401, 9.02265, 0.18, 1.55", "-3.06953, 9.48268, 0.255917, 1.55", "-3.10014, 10.683, 0.543096, 1.33", "-3.13304, 11.9731, 0.85176, 1.33", "-3.16256, 13.1305, 1.12869, 1.55", "-3.18662, 14.074, 1.35441, 1.55", "-3.21333, 15.1209, 1.6049, 1.62", "-3.22416, 16.5258, 1.9397, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.17401, -1.6146, -2.6, 0.96", "-8.71168, -1.47682, -2.60104, 0.96", "-9.44961, -1.30597, -2.63312, 0.96", "-10.1825, -1.16548, -2.70167, 0.81", "-11.2414, -1.03241, -2.8481, 1.11", "-12.4588, -0.979252, -3.07129, 0.96", "-13.6564, -1.02586, -3.31602, 0.88", "-14.7458, -1.20252, -3.57331, 1.33", "-15.7101, -1.49271, -3.82972, 1.33", "-16.8309, -2.04138, -4.1387, 1.03", "-17.8735, -2.78597, -4.42336, 0.81", "-18.6452, -3.4985, -4.63588, 0.66", "-19.3251, -4.22024, -4.84295, 0.88", "-19.8133, -4.74569, -4.99653, 0.96", "-20.5564, -5.48213, -5.22538, 0.66", "-21.232, -5.98798, -5.44392, 0.66", "-22.069, -6.32385, -5.75628, 0.52", "-23.0479, -6.48421, -6.19928, 0.52", "-23.937, -6.52758, -6.58428, 0.88", "-24.8131, -6.52166, -6.94364, 0.96", "-26.007, -6.46202, -7.40484, 0.81", "-27.1978, -6.38737, -7.81748, 0.59", "-27.9697, -6.37455, -8.02126, 0.59", "-29.2219, -6.40267, -8.28692, 0.74", "-30.0106, -6.4706, -8.43685, 1.03", "-30.4191, -6.53498, -8.50733, 1.03", "-31.5757, -6.8185, -8.62863, 0.88", "-32.9254, -7.18921, -8.65825, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000070853549
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-6.39655, 7.66793, 0.0, 0.794211", "-15.613, 19.5025, 0.0, 0.794211", "-24.8294, 31.3371, 0.0, 0.794211" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "7.78984, 11.4136, 14.9119, 0.96", "8.65517, 11.3563, 15.1838, 0.96", "9.55064, 11.2969, 15.4652, 1.03", "10.7422, 11.218, 15.8396, 0.96", "11.9904, 11.1353, 16.2319, 1.03", "12.8859, 11.076, 16.5133, 0.96", "14.1112, 10.9949, 16.8983, 1.47" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.78984, 11.4136, 14.9119, 0.52", "7.41576, 12.7859, 14.3284, 0.52", "7.09945, 13.8107, 13.8862, 0.96", "6.79721, 14.8388, 13.4397, 0.88", "6.49605, 16.0466, 12.8849, 0.59", "6.22756, 17.319, 12.2703, 0.52", "6.06537, 18.3015, 11.7778, 0.44", "6.01689, 19.0365, 11.3524, 0.44", "6.04386, 19.8205, 10.894, 0.44", "6.13401, 20.5669, 10.4605, 0.44", "6.20896, 20.8852, 10.2861, 0.44", "6.44112, 21.5421, 9.96212, 0.44", "6.8246, 22.3789, 9.50146, 1.03", "7.179, 23.167, 8.98518, 0.59", "7.45342, 23.9435, 8.39213, 0.59", "7.72946, 25.1261, 7.46027, 0.96", "7.81522, 25.7802, 6.95598, 1.18", "7.86846, 26.8833, 6.17469, 1.25", "7.85343, 28.4502, 5.18283, 0.44", "7.75263, 29.886, 4.40838, 0.44", "7.63739, 30.8524, 4.02036, 0.59", "7.45111, 32.0621, 3.68009, 0.59", "7.22041, 33.7297, 3.42061, 0.59", "7.14552, 34.9186, 3.472, 0.59", "7.18598, 35.7325, 3.68361, 0.59", "7.35075, 36.7538, 4.11404, 0.74", "7.5561, 37.4906, 4.50925, 0.29", "8.10947, 38.7341, 5.41112, 0.29", "8.69902, 39.7536, 6.34404, 0.22", "9.14424, 40.4332, 7.02016, 0.22", "9.41677, 40.8159, 7.41302, 0.22", "9.72266, 41.2215, 7.85085, 0.59", "10.4586, 42.1579, 8.9168, 0.22", "11.041, 42.9358, 9.79698, 0.22", "11.3323, 43.3255, 10.2403, 0.66", "11.9777, 44.1465, 11.1227, 0.52", "12.6448, 44.9373, 11.9468, 0.29", "13.5707, 45.9088, 12.8666, 0.29", "14.1784, 46.4311, 13.2406, 0.29", "14.9404, 46.8871, 13.3939, 0.37", "15.935, 47.3142, 13.3079, 0.81", "16.7181, 47.5613, 13.0649, 0.81", "18.104, 47.9098, 12.4959, 0.44", "19.4929, 48.2035, 11.8288, 0.29", "20.8293, 48.4299, 11.1523, 0.37", "21.8525, 48.5524, 10.6404, 0.59", "23.1415, 48.6678, 10.0283, 0.81", "24.3281, 48.7684, 9.45461, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "2.03388, 14.0889, -1.52794, 0.44", "1.42133, 13.5084, -5.38449, 0.44", "1.26614, 13.3225, -6.69591, 0.44", "1.14558, 13.1781, -7.93917, 0.44", "0.908649, 12.9992, -10.3774, 0.44", "0.662578, 12.9053, -12.7415, 0.44", "0.45689, 12.8817, -14.304, 0.44", "0.278899, 12.916, -15.5633, 0.44", "-0.0979472, 13.1735, -18.0279, 0.44", "-0.385866, 13.461, -19.5718, 0.44", "-0.782033, 13.8655, -21.0324, 0.44", "-1.41488, 14.4629, -22.729, 1.03", "-2.18784, 15.0983, -24.3051, 0.66", "-3.01973, 15.7634, -25.8385, 0.88", "-3.69679, 16.2913, -26.9485, 1.18", "-4.8631, 17.1599, -28.7302, 0.81", "-5.74252, 17.8217, -29.9493, 0.52", "-6.51675, 18.4096, -30.9175, 0.52" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.03388, 14.0889, -1.52794, 0.44", "2.62371, 15.3078, -1.29613, 0.44", "2.80773, 16.0615, -0.991278, 0.66", "2.81544, 16.669, -0.60143, 0.66", "2.77614, 17.5614, -0.0427158, 0.52", "2.78118, 18.2089, 0.314512, 0.66", "2.85997, 19.331, 0.879373, 0.66", "2.89542, 20.4577, 1.43719, 0.59", "2.96649, 21.226, 1.79907, 0.37", "3.17519, 22.2286, 2.21495, 0.37", "3.48679, 23.2346, 2.57998, 0.59", "3.71804, 23.8171, 2.7936, 0.59", "4.02119, 24.4968, 3.11351, 0.59", "4.26774, 25.0457, 3.43944, 0.66", "4.44007, 25.5002, 3.77111, 0.52", "4.63705, 26.1479, 4.30925, 0.52", "4.9506, 27.2743, 5.3256, 0.88", "5.27681, 28.3645, 6.31437, 0.88", "5.36556, 28.6507, 6.57451, 0.88", "5.63654, 29.4476, 7.30289, 0.59", "5.86505, 30.085, 7.86538, 0.44", "6.35725, 31.1563, 8.65628, 0.44", "6.61452, 31.6384, 8.98181, 0.81", "7.00291, 32.3086, 9.46827, 0.66", "7.55536, 33.2475, 10.2416, 0.44", "7.90643, 33.9091, 10.9105, 0.44", "8.3405, 34.8983, 12.0329, 0.37", "8.61451, 35.8164, 13.1069, 0.37", "8.72143, 36.384, 13.7912, 0.81", "8.76787, 36.7922, 14.2877, 0.37", "8.807, 37.7521, 15.4184, 0.37", "8.8046, 38.0074, 15.7004, 0.37", "8.78596, 38.507, 16.2536, 0.44", "8.81827, 38.995, 16.76, 0.22", "8.90486, 39.5073, 17.3311, 0.44", "8.99414, 39.9061, 17.8225, 0.66", "9.09444, 40.3178, 18.3561, 0.52", "9.27795, 41.1232, 19.468, 0.37", "9.47796, 41.9196, 20.616, 0.22", "9.63219, 42.4741, 21.4911, 0.59", "9.82029, 42.9899, 22.3207, 0.59", "10.0826, 43.5338, 23.2628, 0.59", "10.238, 43.7591, 23.684, 0.59", "10.4367, 43.9332, 24.0203, 0.44", "11.2953, 44.2464, 24.7833, 0.66", "12.5729, 44.3852, 25.472, 0.22", "13.1868, 44.3965, 25.7175, 0.22", "13.4782, 44.3895, 25.8333, 0.22", "14.1687, 44.3678, 26.1718, 0.66", "15.0418, 44.3739, 26.7146, 0.37", "15.6871, 44.4136, 27.1945, 0.37", "16.4715, 44.5003, 27.8982, 0.52", "17.2915, 44.6095, 28.6544, 0.22", "18.0608, 44.713, 29.4386, 0.81", "18.8166, 44.81, 30.3259, 0.59", "19.5354, 44.8255, 31.2434, 0.15", "19.7374, 44.809, 31.5264, 0.66", "20.5606, 44.6455, 32.717, 0.22", "21.3286, 44.3982, 33.7317, 0.74", "21.8441, 44.1702, 34.4025, 1.18", "22.5724, 43.7392, 35.5011, 0.07", "23.1074, 43.3721, 36.3615, 0.07", "23.3799, 43.1693, 36.8273, 0.66", "23.7395, 42.8617, 37.51, 1.11", "24.3757, 42.3048, 38.6283, 0.66", "25.1006, 41.7062, 39.904, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "1.84082, -10.9637, -1.47626, 2.43", "1.47029, -11.313, -1.34884, 2.43", "0.637379, -11.9315, -0.966298, 1.99", "-0.229713, -12.4528, -0.47706, 1.62", "-0.898276, -12.7962, -0.115061, 0.81", "-1.58435, -13.1245, 0.198499, 0.88", "-2.21167, -13.4011, 0.455348, 1.11", "-3.2014, -13.7534, 0.809779, 1.11", "-4.13419, -14.008, 1.04699, 0.81", "-4.96574, -14.2006, 1.07251, 0.74", "-5.85863, -14.4641, 0.637793, 0.88", "-6.37842, -14.7139, 0.012679, 0.52", "-6.77077, -15.0107, -0.806521, 0.52", "-7.07563, -15.3448, -1.70755, 0.66", "-7.3446, -15.7135, -2.75001, 0.66", "-7.56153, -16.1386, -3.96245, 0.81", "-7.63421, -16.3614, -4.6047, 0.66", "-7.69477, -16.711, -5.60271, 0.74", "-7.73292, -17.0289, -6.39806, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.84082, -10.9637, -1.47626, 0.96", "3.06062, -12.3639, -0.807348, 0.96", "3.98728, -13.5243, -0.365712, 1.25", "4.93805, -14.7865, -0.0603801, 1.62", "5.8407, -16.0439, 0.0568244, 0.88", "6.83424, -17.4635, -0.0952667, 0.88", "7.53843, -18.4559, -0.39239, 0.88", "8.48911, -19.7819, -1.30102, 0.88", "9.21892, -20.7726, -2.5166, 0.88", "9.65364, -21.328, -3.66328, 0.88", "10.1331, -21.91, -5.38728, 0.74", "10.3885, -22.1725, -6.46253, 0.74", "10.5524, -22.2902, -7.15613, 0.74", "10.7632, -22.3645, -7.99012, 0.74", "11.0293, -22.3806, -8.9421, 0.74", "11.2298, -22.2933, -9.72132, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.31257, -2.71517, -0.349378, 0.66", "8.94054, -2.49919, -1.04761, 0.66", "9.85235, -2.23861, -2.05552, 0.52", "10.5955, -2.01103, -2.87859, 0.66", "11.2388, -1.76605, -3.59879, 0.81", "11.9838, -1.42531, -4.47113, 1.03", "12.7982, -0.98277, -5.45755, 1.25", "13.3445, -0.667891, -6.13738, 1.03", "14.0592, -0.233743, -7.04349, 1.18", "14.7712, 0.240023, -7.96759, 1.03", "15.3615, 0.717308, -8.78007, 1.18", "15.8522, 1.23175, -9.4547, 1.18" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.31257, -2.71517, -0.349378, 0.74", "9.29926, -2.50571, -0.168263, 0.74", "10.4252, -2.23266, -0.0133521, 0.66", "11.3152, -2.03872, 0.100935, 0.88", "12.1641, -1.9028, 0.242889, 0.96", "13.2262, -1.82444, 0.458197, 0.81", "14.0211, -1.83194, 0.644825, 0.74", "15.2107, -1.93744, 0.976991, 0.96", "16.2476, -2.15368, 1.32336, 0.96", "17.2886, -2.52055, 1.75033, 0.81", "18.3815, -3.024, 2.23982, 0.66", "19.1381, -3.46568, 2.6129, 0.88", "19.6592, -3.83252, 2.91399, 1.25", "20.1207, -4.22438, 3.23219, 1.47", "20.8007, -4.85685, 3.73249, 1.47" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.22416, 16.5258, 1.9397, 1.25", "-3.81222, 16.9899, 1.11477, 1.25", "-4.24263, 17.3382, 0.436702, 1.11", "-4.90106, 17.9441, -0.789342, 1.11", "-5.37089, 18.4283, -1.64929, 1.18", "-5.88649, 19.0362, -2.58285, 1.11", "-6.34765, 19.705, -3.43882, 1.11", "-6.61569, 20.1327, -4.00924, 1.11", "-6.8916, 20.6634, -4.6655, 0.96", "-7.29303, 22.171, -5.99294, 0.96", "-7.28399, 22.7811, -6.24521, 1.11", "-7.11971, 23.8175, -6.05453, 1.4" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.22416, 16.5258, 1.9397, 0.59", "-2.74726, 17.2704, 2.86897, 0.59", "-2.39081, 17.8484, 3.44074, 0.44", "-1.95952, 18.5704, 4.03629, 0.66", "-1.63711, 19.0678, 4.40186, 0.66", "-1.07191, 19.8292, 4.96778, 0.52", "-0.774445, 20.2025, 5.30519, 0.59", "-0.35813, 20.6597, 5.80669, 0.59", "-0.0508501, 20.9948, 6.25707, 0.59", "0.348602, 21.4549, 7.01593, 0.59", "0.71993, 21.9656, 7.92631, 0.52", "1.26155, 22.7912, 9.4018, 0.44", "1.65612, 23.409, 10.4255, 0.44", "1.97165, 23.9127, 11.1668, 0.66", "2.2051, 24.2838, 11.6127, 0.66", "2.84124, 25.2651, 12.4952, 0.52", "3.31781, 25.9557, 12.9811, 0.44", "3.82935, 26.6155, 13.3977, 0.44", "4.35264, 27.1827, 13.828, 0.81", "4.84355, 27.6185, 14.2862, 0.81", "5.57112, 28.1885, 15.0595, 0.37", "6.20354, 28.6701, 15.8523, 0.37", "6.74932, 29.1495, 16.6343, 0.37", "7.41399, 29.8239, 17.745, 0.44", "7.85886, 30.3041, 18.4963, 0.44", "8.09671, 30.5698, 18.8989, 0.44", "8.51808, 31.0551, 19.5905, 0.52", "9.09336, 31.7303, 20.5081, 0.37", "9.56461, 32.3025, 21.3054, 0.37", "9.88333, 32.7234, 21.946, 0.37", "10.369, 33.4045, 23.1411, 0.52", "10.7328, 33.9736, 24.303, 0.74", "10.8599, 34.2361, 24.9118, 0.74", "10.9964, 34.7321, 26.1345, 0.59", "11.0686, 35.1478, 27.0464, 0.59", "11.1158, 35.6411, 28.0866, 0.52", "11.1761, 36.1815, 29.1596, 0.52", "11.2494, 36.6091, 30.0416, 0.52", "11.321, 36.9034, 30.6837, 0.52", "11.4808, 37.4628, 32.0338, 0.44", "11.6608, 37.9006, 33.2692, 0.44", "11.8119, 38.129, 34.0254, 0.44", "11.9943, 38.3574, 34.6548, 0.44", "12.2407, 38.6487, 35.2537, 0.44", "12.3599, 38.7972, 35.4934, 0.44", "12.6978, 39.2235, 36.0827, 0.44", "13.3147, 39.8796, 36.8043, 0.44", "14.1569, 40.6488, 37.6146, 0.44", "15.1222, 41.4185, 38.3368, 0.29", "15.7557, 41.8592, 38.6865, 0.29", "16.2787, 42.1955, 38.9417, 0.44", "17.3512, 42.8121, 39.3749, 0.66", "18.3312, 43.3005, 39.702, 0.44", "19.1994, 43.6384, 39.972, 0.81", "20.2741, 43.985, 40.2829, 0.37" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-32.9254, -7.18921, -8.65825, 0.59", "-33.1075, -7.93494, -8.75686, 0.59", "-33.403, -9.03408, -8.89568, 0.88", "-33.6895, -9.92096, -9.00822, 0.37", "-33.9059, -10.4761, -9.08666, 0.59", "-34.2284, -11.1803, -9.20346, 0.37", "-34.7491, -12.1513, -9.38184, 0.59", "-35.1445, -12.7293, -9.51365, 0.66", "-35.5557, -13.2297, -9.63006, 0.52", "-36.154, -13.8639, -9.78818, 0.52", "-36.6371, -14.311, -9.91158, 0.52", "-37.1389, -14.7187, -10.0291, 0.52", "-37.6763, -15.1168, -10.1527, 0.52", "-38.3006, -15.5769, -10.3271, 0.59", "-38.8456, -15.9722, -10.5119, 0.52", "-39.5198, -16.4363, -10.796, 0.81", "-39.814, -16.6294, -10.9437, 0.88", "-40.4553, -17.0287, -11.3463, 0.44", "-40.9452, -17.3124, -11.7177, 0.44", "-41.5459, -17.649, -12.2644, 0.44", "-41.9492, -17.9156, -12.7179, 0.44", "-42.1416, -18.067, -12.9764, 0.44", "-42.4587, -18.3501, -13.4272, 0.44", "-42.8744, -18.7694, -13.9797, 0.81", "-43.1803, -19.1125, -14.3235, 0.81", "-43.6604, -19.7126, -14.777, 0.37", "-44.0055, -20.1558, -15.0568, 0.37", "-44.3676, -20.6192, -15.3382, 0.66", "-44.99, -21.3897, -15.8087, 0.29", "-45.5543, -22.0572, -16.2346, 0.37", "-45.9911, -22.5422, -16.5952, 0.59", "-46.4536, -23.0149, -17.0161, 0.88", "-46.8677, -23.4051, -17.4357, 0.88", "-47.3454, -23.8172, -17.9882, 0.66", "-47.6885, -24.0615, -18.4031, 0.37", "-48.4217, -24.4682, -19.2397, 0.22", "-48.6996, -24.5938, -19.5277, 0.22", "-49.2209, -24.8005, -20.005, 0.66", "-49.9013, -25.055, -20.533, 0.22", "-50.6488, -25.3296, -21.0084, 0.22", "-51.1932, -25.5349, -21.2782, 0.74", "-51.3918, -25.6182, -21.357, 0.74", "-51.9781, -25.893, -21.5758, 0.29", "-52.6614, -26.2511, -21.8352, 0.74", "-53.5163, -26.7535, -22.2038, 0.29", "-54.1092, -27.1491, -22.5066, 0.88", "-55.1718, -27.9228, -23.1849, 0.29", "-55.6579, -28.2853, -23.5744, 0.29", "-56.1569, -28.6649, -24.0882, 0.52", "-56.7744, -29.1448, -24.9088, 0.74", "-57.1301, -29.4277, -25.5183, 0.81", "-57.5112, -29.7279, -26.3161, 0.81", "-57.8779, -29.9893, -27.1444, 0.44", "-58.1399, -30.1428, -27.7029, 0.44", "-58.2618, -30.1989, -27.9361, 0.44", "-58.566, -30.3184, -28.4449, 0.44", "-59.0219, -30.5143, -29.138, 0.29", "-59.433, -30.7032, -29.6805, 0.88", "-59.9843, -30.9915, -30.32, 0.66", "-60.6977, -31.3806, -31.0542, 0.59", "-61.116, -31.6098, -31.4392, 0.59", "-61.4389, -31.775, -31.6914, 0.59", "-61.9386, -32.0247, -32.0298, 0.22", "-62.5177, -32.3088, -32.3777, 0.22", "-62.839, -32.4615, -32.545, 0.22", "-63.7734, -32.8743, -32.9814, 0.59", "-64.4786, -33.1682, -33.3333, 0.22", "-64.8872, -33.3381, -33.5641, 0.22", "-65.3755, -33.5521, -33.8761, 0.29", "-65.9256, -33.7891, -34.2644, 0.29", "-66.2598, -33.9352, -34.5249, 0.22", "-66.8055, -34.1826, -34.9567, 0.22", "-67.2436, -34.3979, -35.2981, 0.29", "-67.9123, -34.7552, -35.7785, 0.29", "-68.2932, -35.0035, -36.0577, 0.66", "-68.8523, -35.4545, -36.478, 0.22", "-69.3785, -35.9965, -36.8994, 0.29", "-69.9309, -36.7214, -37.3862, 0.22", "-70.2383, -37.278, -37.742, 0.66", "-70.5132, -38.1172, -38.2757, 0.15", "-70.5822, -38.6664, -38.6773, 0.22", "-70.5469, -39.2536, -39.1737, 0.22", "-70.4717, -39.5834, -39.5111, 0.29", "-70.2879, -40.1019, -40.1076, 0.29", "-70.119, -40.5197, -40.639, 0.37", "-69.7462, -41.4022, -41.8534, 0.15", "-69.4325, -42.0951, -42.8832, 0.15", "-69.1634, -42.6309, -43.7392, 0.15", "-69.0643, -42.8222, -44.0467, 0.29", "-68.8379, -43.2556, -44.7244, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-32.9254, -7.18921, -8.65825, 0.74", "-34.1446, -7.37616, -7.8834, 0.74", "-35.2137, -7.62846, -7.0925, 0.81", "-36.2451, -7.93444, -6.28341, 0.44", "-38.0071, -8.55614, -4.94598, 0.37", "-38.9321, -8.88831, -4.25169, 0.74", "-40.4259, -9.36838, -3.21591, 0.59", "-41.8513, -9.83278, -2.27641, 0.52", "-42.8538, -10.1068, -1.67302, 0.66", "-44.2156, -10.3919, -0.960758, 0.29", "-45.202, -10.5507, -0.554039, 0.29", "-47.0425, -10.772, -0.0440741, 0.44", "-48.5058, -10.8851, 0.16406, 0.52", "-50.0669, -10.9693, 0.215154, 0.22", "-50.5594, -10.9909, 0.194239, 0.22", "-51.7697, -11.0328, 0.0759821, 0.22", "-54.0984, -11.2332, -0.343221, 0.29", "-54.9468, -11.3435, -0.528787, 0.44", "-55.9534, -11.483, -0.738669, 0.81", "-57.1272, -11.6392, -0.956131, 0.81", "-58.5644, -11.7729, -1.13494, 0.29", "-59.802, -11.8286, -1.16295, 0.44", "-60.5934, -11.8541, -1.1356, 0.44", "-61.5806, -11.9088, -1.07633, 0.37", "-62.7951, -12.0223, -0.883683, 0.96", "-63.5796, -12.1331, -0.653616, 0.96", "-65.0325, -12.3565, 0.0403523, 0.37", "-66.7248, -12.6203, 1.13329, 0.52", "-68.0254, -12.8396, 2.16235, 0.29", "-69.5683, -13.144, 3.52858, 0.44", "-70.6949, -13.3857, 4.6273, 0.52", "-72.259, -13.7452, 6.22734, 0.22", "-72.9435, -13.9085, 6.91641, 0.22", "-73.937, -14.1297, 7.8593, 0.29", "-74.871, -14.3289, 8.46694, 0.44", "-76.0088, -14.5356, 8.66735, 0.44", "-77.1841, -14.7093, 8.5441, 0.15", "-79.1672, -14.9491, 8.04718, 0.15", "-79.8845, -14.9932, 7.82681, 0.59", "-80.9962, -14.9956, 7.44154, 1.11", "-83.1118, -14.7941, 6.6991, 0.44", "-84.1248, -14.6203, 6.32661, 0.66", "-85.104, -14.3644, 5.99084, 0.66", "-86.2119, -13.992, 5.65556, 0.22", "-86.8405, -13.7426, 5.45601, 0.15", "-88.1843, -13.097, 5.00037, 0.15", "-88.9374, -12.6891, 4.73913, 0.15", "-89.9718, -12.1782, 4.39079, 0.15", "-90.4805, -11.9557, 4.23197, 0.29", "-91.2525, -11.6424, 3.99862, 0.81", "-91.8385, -11.4139, 3.83205, 0.81", "-92.8601, -11.033, 3.5866, 0.15", "-93.7734, -10.6487, 3.41972, 0.29", "-94.4289, -10.3352, 3.3169, 0.22", "-95.474, -9.78441, 3.16465, 0.22", "-95.8208, -9.58701, 3.12936, 0.22", "-96.3517, -9.27126, 3.09886, 0.22", "-96.9478, -8.91309, 3.09664, 0.44", "-97.7601, -8.46767, 3.13491, 0.44", "-98.5662, -8.10198, 3.16804, 0.22", "-99.2709, -7.83542, 3.15689, 0.22", "-99.9557, -7.56373, 3.17177, 0.29", "-100.75, -7.23718, 3.16691, 0.29", "-101.795, -6.82481, 3.07721, 0.22", "-103.049, -6.36759, 2.85046, 0.81", "-104.325, -5.93128, 2.52836, 0.52", "-106.521, -5.20763, 1.80352, 0.22", "-107.81, -4.8154, 1.3153, 0.29", "-109.214, -4.42146, 0.727254, 0.22", "-110.341, -4.12659, 0.228989, 0.44", "-111.135, -3.93364, -0.121193, 0.44", "-112.313, -3.65566, -0.65083, 0.15", "-113.37, -3.39098, -1.16576, 0.15", "-113.915, -3.2189, -1.38775, 0.15", "-114.612, -2.91942, -1.57976, 0.59", "-115.257, -2.57015, -1.72481, 0.59", "-115.914, -2.09007, -1.86176, 0.22", "-116.678, -1.36646, -2.01834, 0.22", "-117.311, -0.618113, -2.19008, 0.22", "-118.286, 0.641243, -2.53309, 0.22", "-118.72, 1.21447, -2.70984, 0.22", "-119.659, 2.33979, -3.12072, 0.29", "-120.259, 2.97504, -3.42132, 0.29", "-121.639, 4.24661, -4.15514, 0.22", "-122.178, 4.66984, -4.45736, 0.22", "-122.661, 4.99314, -4.74903, 0.22", "-123.927, 5.73976, -5.54945, 0.29", "-124.794, 6.19923, -6.16981, 0.29", "-125.768, 6.71103, -6.97051, 0.44", "-126.823, 7.28974, -7.98053, 0.44", "-127.682, 7.80104, -8.9388, 0.37", "-128.718, 8.44947, -10.2674, 0.81", "-129.657, 9.03016, -11.6504, 0.29", "-130.425, 9.47664, -12.9712, 0.29", "-131.125, 9.89409, -14.3209, 0.29", "-131.783, 10.3033, -15.6454, 0.29", "-132.359, 10.6561, -16.7824, 0.66", "-133.613, 11.4156, -19.0544, 0.37", "-134.969, 12.1982, -21.3614, 0.37", "-135.766, 12.6342, -22.6267, 0.22", "-136.37, 12.9354, -23.4731, 0.22", "-136.864, 13.1761, -24.0948, 0.22", "-137.59, 13.5463, -24.9495, 0.29", "-138.91, 14.237, -26.4363, 0.22", "-139.693, 14.6672, -27.3197, 0.22", "-140.445, 15.1518, -28.3619, 0.29", "-141.08, 15.6555, -29.3843, 0.29", "-141.399, 15.9686, -29.9602, 0.29", "-141.833, 16.513, -30.8629, 0.29", "-142.316, 17.2818, -31.97, 0.52", "-142.956, 18.492, -33.633, 0.44", "-143.326, 19.2851, -34.7004, 0.22", "-143.636, 19.9506, -35.5454, 0.29", "-144.02, 20.6899, -36.4767, 0.29", "-144.283, 21.1275, -37.003, 0.29", "-144.569, 21.523, -37.4613, 0.29", "-144.961, 22.0315, -37.9765, 0.29", "-145.548, 22.8268, -38.6609, 0.29", "-145.818, 23.1765, -38.9336, 0.29", "-146.338, 23.7776, -39.3722, 0.29", "-147.282, 24.7996, -40.0866, 0.44", "-147.84, 25.3748, -40.4817, 0.44", "-148.479, 26.0137, -40.9224, 0.22", "-148.909, 26.4366, -41.2214, 0.22", "-149.654, 27.1952, -41.7586, 0.22", "-150.533, 28.1193, -42.4329, 0.22", "-151.032, 28.618, -42.8186, 0.37", "-152.01, 29.4634, -43.4771, 0.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-24.8294, 31.3371, 0.0, 0.23", "-34.0458, 43.1717, 0.0, 0.23", "-43.2623, 55.0063, 0.0, 0.23" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "14.1112, 10.9949, 16.8983, 0.88", "14.6033, 10.6079, 17.766, 0.88", "15.166, 10.1532, 18.8407, 0.74", "15.6742, 9.76467, 20.0248, 0.66", "16.2254, 9.3643, 21.3654, 0.59", "16.5481, 9.1299, 22.1503, 0.66", "17.0704, 8.7505, 23.4207, 0.66", "17.4704, 8.50399, 24.4238, 1.03", "18.344, 7.99411, 26.7062, 1.25", "18.6679, 7.80522, 27.6623, 1.47" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "14.1112, 10.9949, 16.8983, 1.11", "15.489, 11.703, 17.5088, 1.11", "16.7764, 12.3647, 18.0793, 1.25" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.51675, 18.4096, -30.9175, 0.59", "-7.27812, 19.3104, -30.4208, 0.59", "-7.86086, 20.1131, -29.96, 0.81", "-8.31423, 20.8855, -29.492, 0.37", "-8.59922, 21.5857, -29.0553, 0.37", "-9.02004, 22.8809, -28.254, 0.52", "-9.29694, 23.8828, -27.6307, 0.96", "-9.55041, 25.1159, -26.8188, 0.66", "-9.74675, 26.359, -25.9393, 0.96", "-9.92501, 27.9754, -24.8009, 0.37", "-9.95321, 28.3804, -24.5215, 0.37", "-10.0058, 28.9829, -24.1081, 0.37", "-10.0897, 29.5, -23.7182, 0.44", "-10.467, 30.6659, -22.7254, 0.66", "-10.7211, 31.1949, -22.2354, 0.88", "-11.1201, 31.8691, -21.5797, 0.59", "-11.7226, 32.903, -20.5726, 0.96", "-12.4403, 34.1832, -19.3132, 0.52", "-13.1066, 35.3911, -18.1695, 0.52", "-13.6531, 36.3474, -17.2677, 0.59", "-13.8668, 36.6874, -16.902, 0.59", "-14.413, 37.5083, -15.9539, 0.44", "-14.7946, 38.1038, -15.2525, 0.44", "-15.2152, 38.7199, -14.4715, 0.74", "-15.7858, 39.5859, -13.2577, 0.96", "-16.5753, 40.654, -11.5144, 0.81", "-16.7071, 40.7945, -11.2224, 0.81" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-6.51675, 18.4096, -30.9175, 0.29", "-6.87449, 18.3146, -31.7858, 0.29", "-7.62786, 18.4561, -34.309, 0.29", "-8.29576, 18.8134, -36.5643, 0.29", "-8.70176, 19.0301, -37.723, 0.29", "-9.32454, 19.3671, -39.2907, 0.29", "-10.0185, 19.7532, -40.8873, 0.29", "-10.8914, 20.3642, -42.7461, 0.29", "-11.873, 21.1498, -44.6128, 0.66", "-12.8729, 21.99, -46.1826, 0.29", "-13.7194, 22.6613, -47.255, 0.59", "-15.1224, 23.6248, -48.7526, 0.29", "-16.2623, 24.2885, -49.7783, 0.29", "-16.7733, 24.572, -50.1498, 0.29", "-18.9104, 26.0233, -51.4764, 0.15", "-19.7777, 26.8159, -51.8107, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-7.73292, -17.0289, -6.39806, 0.29", "-7.35956, -18.2625, -6.83687, 0.29", "-7.11598, -19.014, -7.30253, 0.22", "-6.97279, -19.4893, -7.73573, 0.29", "-6.8457, -20.0162, -8.36597, 0.22", "-6.68439, -20.9379, -9.6439, 0.22", "-6.61047, -21.6943, -10.7109, 0.37", "-6.57604, -22.3167, -11.7061, 0.81", "-6.58272, -22.9527, -12.7226, 0.81", "-6.63413, -23.4493, -13.4397, 0.37", "-6.67764, -23.7377, -13.7924, 0.37", "-6.7939, -24.4352, -14.4254, 0.59", "-6.90603, -25.3368, -15.0891, 0.44", "-6.98159, -25.9211, -15.4718, 0.52", "-7.09533, -26.6661, -15.898, 0.66", "-7.25035, -27.5488, -16.4169, 0.74", "-7.44156, -28.4441, -17.0581, 0.88", "-7.6051, -29.1046, -17.6705, 0.88", "-7.81356, -29.9117, -18.6134, 0.59", "-7.97168, -30.5961, -19.5401, 0.22", "-8.07114, -31.2626, -20.6119, 0.29", "-8.09727, -32.0225, -21.9708, 0.59", "-7.99494, -32.671, -23.2311, 0.59", "-7.7887, -33.1775, -24.3303, 0.59", "-7.70228, -33.3251, -24.6755, 0.59", "-7.47558, -33.7113, -25.5711, 0.59", "-7.32943, -34.068, -26.2796, 0.66", "-7.15173, -34.8668, -27.5993, 0.59", "-7.1138, -35.7077, -28.7738, 0.66", "-7.17179, -36.5488, -29.8654, 0.96", "-7.2849, -37.2088, -30.6875, 0.59", "-7.46728, -37.9274, -31.525, 0.44", "-7.61403, -38.4515, -32.0986, 0.44", "-7.75326, -39.0943, -32.7463, 0.52", "-7.80854, -39.8945, -33.5423, 0.44", "-7.69049, -40.6118, -34.3489, 0.44", "-7.55605, -40.9214, -34.7426, 0.59", "-7.22804, -41.4532, -35.4656, 0.74", "-6.74082, -42.1732, -36.4692, 0.37", "-6.25266, -42.9086, -37.5486, 0.37", "-5.90937, -43.4897, -38.4077, 0.52", "-5.57228, -44.1134, -39.3487, 0.59", "-5.21949, -44.901, -40.5517, 0.29", "-5.01369, -45.4929, -41.4661, 0.52", "-4.83434, -46.2007, -42.5179, 0.44", "-4.70865, -46.784, -43.386, 0.44", "-4.66623, -46.9591, -43.6746, 0.44", "-4.5098, -47.3749, -44.4905, 0.44", "-4.34924, -47.5926, -45.0028, 0.44", "-4.11499, -47.8034, -45.5033, 0.44", "-3.73225, -48.0701, -46.0681, 0.44", "-3.32876, -48.3294, -46.5192, 0.44", "-2.92594, -48.5856, -46.9094, 0.29", "-2.24615, -49.015, -47.5238, 0.29", "-1.81877, -49.297, -47.9356, 0.29", "-1.27884, -49.695, -48.5037, 0.37", "-0.814563, -50.0742, -49.0624, 0.74", "0.375763, -51.1182, -50.6988, 0.81", "1.18585, -51.8664, -52.0007, 0.22", "1.76902, -52.4414, -53.0714, 0.22", "2.09729, -52.805, -53.795, 0.22", "2.42451, -53.2224, -54.6275, 0.22", "2.60458, -53.468, -55.11, 0.29", "2.89276, -53.856, -55.8178, 0.29", "3.01252, -53.9875, -56.0366, 0.59", "3.60339, -54.5361, -56.8599, 0.22", "4.11723, -54.9812, -57.5103, 0.29", "4.73277, -55.6011, -58.3369, 0.44", "5.34783, -56.3286, -59.2747, 0.74", "5.965, -57.197, -60.3627, 0.81", "6.43964, -57.9585, -61.3361, 0.44", "6.77421, -58.5932, -62.1256, 0.52", "7.26126, -59.7218, -63.569, 0.29", "7.48706, -60.3362, -64.3588, 0.29", "7.66892, -60.7876, -64.9497, 0.29", "7.9969, -61.4135, -65.8317, 0.44", "8.2318, -61.7507, -66.3178, 0.66", "9.08383, -62.6735, -67.5722, 0.37", "9.56715, -63.0942, -68.084, 0.29", "10.3054, -63.7178, -68.6895, 0.22", "11.1571, -64.4399, -69.2178, 0.59", "11.7226, -64.9185, -69.4392, 0.59", "12.4671, -65.539, -69.6634, 0.15", "13.1125, -66.063, -69.7385, 0.15", "13.7227, -66.5757, -69.7467, 0.44", "14.3137, -67.1311, -69.6867, 0.52", "15.0547, -67.8658, -69.5037, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-7.73292, -17.0289, -6.39806, 0.66", "-7.8971, -16.9013, -7.14738, 0.66", "-8.08759, -16.7046, -8.24499, 0.66", "-8.2174, -16.4911, -9.32988, 0.52", "-8.28584, -16.313, -10.0978, 0.44", "-8.3138, -16.2074, -10.4632, 0.44", "-8.35872, -16.0266, -11.0152, 0.44", "-8.38827, -15.8936, -11.3939, 0.44", "-8.47365, -15.587, -12.0731, 0.44", "-8.54564, -15.375, -12.4272, 0.44", "-8.71189, -14.9677, -12.9994, 0.52", "-8.905, -14.5706, -13.489, 0.52", "-9.16857, -14.1452, -13.9757, 0.37", "-9.42114, -13.8368, -14.3199, 0.37", "-9.75465, -13.5063, -14.6618, 0.37", "-10.2007, -13.0982, -15.0661, 0.37", "-10.4941, -12.8429, -15.2963, 0.44", "-10.8764, -12.5262, -15.5539, 0.44", "-11.5406, -12.0187, -15.9495, 0.29", "-11.9369, -11.7493, -16.1579, 0.29", "-12.4242, -11.4326, -16.3826, 0.29", "-12.6584, -11.2787, -16.4786, 0.29", "-13.1142, -10.9295, -16.6608, 0.29", "-13.4004, -10.6579, -16.7687, 0.29", "-13.7081, -10.3143, -16.8749, 0.66", "-14.1758, -9.74904, -17.0117, 0.29", "-14.5778, -9.226, -17.1076, 0.22", "-15.0199, -8.49954, -17.2034, 0.22", "-15.2038, -8.09787, -17.2393, 0.22", "-15.3201, -7.75813, -17.2589, 0.22", "-15.3956, -7.46024, -17.2719, 0.29", "-15.4583, -7.13748, -17.2874, 0.29", "-15.6019, -6.35191, -17.3206, 0.22", "-15.676, -5.98724, -17.3417, 0.44", "-15.9043, -5.07158, -17.4067, 0.22", "-16.0385, -4.6225, -17.4575, 0.44", "-16.3786, -3.76754, -17.6164, 0.66", "-16.5982, -3.31615, -17.7361, 0.22", "-16.7551, -3.04528, -17.8274, 0.22", "-17.0087, -2.64793, -17.9783, 0.29", "-17.378, -2.12647, -18.1959, 0.22", "-17.9044, -1.41252, -18.487, 0.37", "-18.2906, -0.906492, -18.6837, 0.52", "-18.6313, -0.453397, -18.8597, 0.66", "-18.8643, -0.143249, -18.9739, 0.66", "-19.3208, 0.468279, -19.1768, 0.29", "-19.6435, 0.902299, -19.295, 0.29", "-20.0613, 1.47597, -19.4358, 0.22", "-20.4936, 2.04043, -19.5766, 0.74", "-20.6861, 2.28414, -19.6415, 0.74", "-20.8744, 2.50774, -19.7064, 0.74", "-21.374, 3.0739, -19.877, 0.29", "-21.8873, 3.62829, -20.0404, 0.44", "-22.3055, 4.05675, -20.159, 0.22", "-22.5031, 4.24581, -20.2043, 0.37", "-22.8609, 4.5811, -20.2811, 0.37", "-23.2331, 4.91619, -20.3535, 0.22", "-23.549, 5.20173, -20.4045, 0.22", "-23.7874, 5.43399, -20.4436, 0.22", "-24.0869, 5.76277, -20.4999, 0.52", "-24.313, 6.03116, -20.5466, 0.22", "-24.627, 6.43322, -20.617, 0.15", "-24.9662, 6.88842, -20.699, 0.22", "-25.1765, 7.20746, -20.7524, 0.15", "-25.3968, 7.59149, -20.8063, 0.37", "-25.5212, 7.82308, -20.8448, 0.37", "-25.6411, 8.03873, -20.9028, 0.15", "-25.7506, 8.24253, -20.9901, 0.15", "-25.8739, 8.49382, -21.1456, 0.22", "-26.0458, 8.85994, -21.4065, 0.22", "-26.2357, 9.21396, -21.703, 0.81", "-26.5811, 9.74896, -22.2102, 0.29", "-26.899, 10.1872, -22.6592, 0.74", "-27.3503, 10.7538, -23.2549, 0.44", "-27.6866, 11.16, -23.7022, 0.44", "-28.0422, 11.5827, -24.1811, 0.15", "-28.3655, 11.9602, -24.5953, 0.59", "-28.8018, 12.4428, -25.1012, 0.22", "-29.1164, 12.7372, -25.4016, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "11.2298, -22.2933, -9.72132, 0.81", "12.2564, -22.3723, -9.99816, 0.81", "13.9211, -22.38, -10.5587, 0.66", "14.894, -22.3215, -10.9617, 0.66", "16.3569, -22.1971, -11.6677, 1.18", "17.6286, -22.089, -12.2815, 1.62", "19.4714, -21.9323, -13.1709, 1.18", "21.4579, -21.7523, -14.2112, 0.81", "23.1449, -21.5144, -15.1535, 0.96", "24.1521, -21.3004, -15.7831, 1.18" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "11.2298, -22.2933, -9.72132, 0.59", "11.978, -23.1399, -9.80888, 0.59", "12.4452, -23.8329, -9.92821, 0.52", "12.9615, -24.8157, -10.1245, 0.52", "13.3195, -25.8514, -10.3413, 0.44", "13.4612, -26.6914, -10.5194, 0.66", "13.5068, -27.5047, -10.6783, 0.52", "13.3728, -28.628, -10.8631, 0.88", "13.2285, -29.1083, -10.9294, 0.88", "12.7498, -30.1435, -11.0569, 0.52", "12.1823, -31.0852, -11.1823, 0.52", "11.7157, -31.7186, -11.267, 0.74", "10.9775, -32.6247, -11.3837, 1.03", "9.95567, -33.8426, -11.5761, 0.66", "9.06035, -34.9412, -11.8282, 0.66", "8.21832, -36.0109, -12.1359, 0.59", "7.35851, -37.0987, -12.5056, 0.44", "6.68111, -37.9951, -12.8377, 0.52", "5.92312, -39.1109, -13.2475, 0.52", "5.41056, -40.0746, -13.5742, 0.88", "5.18183, -40.6428, -13.7092, 0.88", "4.52063, -42.5872, -13.9637, 0.44", "4.19192, -43.6232, -14.0285, 0.74", "3.89203, -44.4167, -14.0003, 0.59", "3.52426, -45.2166, -13.8599, 0.44", "2.82145, -46.5423, -13.4286, 0.74", "2.19602, -47.555, -12.9013, 0.88", "1.51936, -48.5049, -12.1815, 0.74", "0.730903, -49.5033, -11.3086, 0.52", "-0.00199892, -50.3907, -10.5224, 0.52", "-0.747944, -51.3106, -9.68216, 0.81", "-1.5481, -52.4223, -8.68686, 0.96", "-1.89814, -53.0162, -8.15431, 0.96", "-2.31008, -53.916, -7.40813, 0.66", "-2.66029, -55.0806, -6.69473, 0.44", "-2.78028, -55.6675, -6.47004, 0.44", "-2.87892, -56.4144, -6.31259, 0.66", "-2.94379, -57.2103, -6.22569, 0.66", "-2.97174, -57.9303, -6.17208, 0.44", "-2.98352, -58.6524, -6.12258, 0.44", "-2.9858, -59.2548, -6.06442, 0.74", "-2.98899, -60.3933, -5.90504, 1.03", "-2.97222, -61.2972, -5.75013, 0.81", "-2.88986, -62.8463, -5.45397, 0.44", "-2.81948, -63.6564, -5.2512, 0.44", "-2.71221, -64.5036, -5.00931, 0.44", "-2.58691, -65.2635, -4.75583, 0.44", "-2.47084, -65.8277, -4.51976, 0.44", "-2.3286, -66.3797, -4.22758, 0.74", "-2.07118, -67.1722, -3.65421, 1.03" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "15.8522, 1.23175, -9.4547, 0.44", "17.7693, 1.03036, -9.88006, 0.44", "19.1741, 0.861586, -10.0623, 0.52", "20.3786, 0.742135, -10.076, 0.52", "21.2796, 0.667447, -9.98527, 0.81", "22.9429, 0.551851, -9.64557, 1.03", "24.0506, 0.493078, -9.35509, 0.52", "25.5975, 0.380388, -8.80784, 0.59", "26.9263, 0.283686, -8.24581, 0.81", "27.846, 0.200301, -7.81919, 0.81", "29.0888, 0.047427, -7.23461, 0.66", "30.1437, -0.113618, -6.7575, 0.66", "31.8993, -0.420253, -6.03368, 0.59", "33.3258, -0.725027, -5.57764, 0.96", "34.4764, -1.02669, -5.28583, 0.96", "35.7992, -1.42109, -5.018, 0.96", "36.497, -1.67019, -4.8993, 0.96" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "15.8522, 1.23175, -9.4547, 1.03", "15.5321, 1.85577, -10.1529, 1.03", "15.3003, 2.4989, -10.8414, 0.81", "15.0973, 3.19266, -11.5506, 0.52", "14.9164, 3.82283, -12.2161, 0.44", "14.7296, 4.40468, -12.904, 0.44", "14.49, 4.99606, -13.6966, 0.44", "14.3641, 5.33843, -14.1688, 0.52", "14.159, 5.96307, -15.0628, 0.74", "13.9596, 6.57949, -15.9978, 0.74", "13.6351, 7.31522, -17.2209, 0.88", "13.0645, 8.21029, -18.8768, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.8007, -4.85685, 3.73249, 0.74", "21.1854, -5.58355, 4.19822, 0.74", "21.5789, -6.32683, 4.67458, 0.74", "21.8915, -6.91727, 5.05299, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "20.8007, -4.85685, 3.73249, 0.74", "21.9266, -2.17201, 7.33894, 0.74", "22.2658, -1.2133, 8.38997, 0.52", "22.5343, -0.334729, 9.18455, 0.74", "22.7844, 0.486656, 9.81391, 0.74", "22.9634, 1.04123, 10.1765, 0.74", "23.2497, 1.86143, 10.6449, 0.66", "23.6231, 3.00675, 10.9186, 0.66", "23.878, 3.85091, 11.0633, 0.66", "24.1424, 4.71873, 11.1671, 0.59", "24.5317, 5.85613, 11.2644, 0.74", "24.7754, 6.56737, 11.3, 0.74", "24.9733, 7.17493, 11.3116, 0.74", "25.1165, 7.79627, 11.2972, 0.74", "25.2988, 8.75626, 11.273, 0.66", "25.4128, 9.45093, 11.2493, 0.66", "25.5542, 10.2999, 11.2089, 0.81", "25.6432, 10.7984, 11.1842, 0.81", "25.8507, 11.9699, 11.1836, 0.52", "26.0577, 13.1279, 11.2449, 0.66", "26.1979, 14.0415, 11.3729, 0.66", "26.311, 14.7507, 11.614, 0.44", "26.3942, 15.3172, 11.8988, 0.66", "26.5419, 16.6753, 12.703, 0.66", "26.5783, 17.3164, 13.1148, 0.66", "26.5862, 18.3417, 13.7648, 0.44", "26.6261, 20.7438, 15.3317, 0.44", "26.6736, 21.7293, 15.9672, 0.66", "26.8048, 22.8571, 16.6556, 0.81", "26.977, 23.7699, 17.1572, 0.81", "27.2121, 24.7568, 17.6575, 0.52", "27.6445, 26.1528, 18.3343, 0.52", "27.9104, 26.8668, 18.684, 0.44", "28.3772, 27.9547, 19.338, 0.44", "28.7562, 28.8033, 19.9179, 0.59", "29.0925, 29.618, 20.535, 0.59", "29.4876, 30.7634, 21.4511, 0.59", "29.7223, 31.6571, 22.2107, 0.59", "29.9371, 32.5479, 23.028, 0.59", "30.1267, 33.2595, 23.7204, 0.52", "30.3971, 34.051, 24.4857, 0.52", "30.7879, 34.9932, 25.3473, 0.52", "31.4438, 36.4129, 26.5106, 0.52", "31.8071, 37.1034, 27.0437, 0.52", "32.3191, 37.9451, 27.6965, 0.52", "32.816, 38.6668, 28.2792, 0.29", "33.3606, 39.3765, 28.8107, 0.44", "34.049, 40.2255, 29.3572, 0.44", "34.6789, 41.0543, 29.7248, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.11971, 23.8175, -6.05453, 1.03", "-6.99004, 24.1149, -7.1535, 1.03", "-6.84256, 24.4533, -8.40346, 1.03", "-6.66449, 24.8617, -9.91265, 1.03", "-6.46104, 25.3284, -11.6369, 1.03" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.11971, 23.8175, -6.05453, 0.52", "-6.0299, 24.9152, -7.73653, 0.52", "-5.41868, 25.6542, -8.6338, 0.52", "-4.71684, 26.031, -9.72277, 0.52", "-5.05312, 26.5895, -9.29491, 0.44", "-5.81935, 27.5483, -8.46258, 0.44", "-8.15717, 29.9593, -6.34245, 0.44", "-8.92444, 30.5757, -5.72505, 0.52", "-9.84594, 31.1418, -4.98681, 0.37", "-10.403, 31.4071, -4.53538, 0.37", "-11.2753, 31.756, -3.76211, 0.37", "-11.898, 31.9816, -3.12816, 0.66", "-12.4713, 32.2054, -2.42459, 0.81", "-13.3506, 32.6812, -0.889567, 0.44", "-13.9155, 33.1336, 0.516593, 0.44", "-14.3687, 33.6675, 2.0932, 0.37", "-14.5737, 34.0237, 3.0822, 0.37", "-14.8737, 34.613, 4.66309, 0.37", "-15.142, 35.1061, 5.94206, 0.37", "-15.431, 35.5508, 7.05286, 0.37", "-15.8889, 36.0117, 8.31679, 0.66", "-16.6823, 36.4751, 9.87787, 0.66", "-17.584, 36.7696, 11.2802, 0.52", "-18.3743, 36.8648, 12.3436, 0.52", "-18.8306, 36.8427, 12.9418, 0.52", "-19.9325, 36.6494, 14.3792, 0.37", "-20.6904, 36.4266, 15.3778, 0.37", "-21.3475, 36.188, 16.2703, 0.37", "-22.2122, 35.8839, 17.5251, 0.37", "-23.114, 35.6459, 18.845, 0.37", "-23.9409, 35.5537, 19.9574, 0.37", "-24.2792, 35.5833, 20.3653, 0.37", "-25.2646, 35.8657, 21.4364, 0.37", "-25.9384, 36.2187, 22.1548, 0.37", "-26.5145, 36.6826, 22.796, 0.37", "-27.2071, 37.4612, 23.7059, 0.29", "-27.667, 38.139, 24.5202, 0.29", "-27.9881, 38.7593, 25.3479, 0.29", "-28.2977, 39.4768, 26.4532, 0.29", "-28.4991, 40.0295, 27.3955, 0.66", "-28.7368, 40.7391, 28.6704, 1.25", "-29.0069, 41.4256, 29.9202, 1.25", "-29.496, 42.3408, 31.576, 0.44", "-30.0832, 43.2187, 33.1151, 0.44", "-30.8162, 44.0738, 34.4954, 0.66", "-31.2932, 44.5532, 35.1865, 0.88", "-32.5652, 45.6483, 36.5019, 0.44", "-33.4672, 46.3155, 37.1173, 0.44", "-34.1431, 46.741, 37.424, 0.44", "-35.7441, 47.636, 37.891, 0.44", "-36.6346, 48.0632, 38.0334, 0.37", "-38.0928, 48.6993, 38.0941, 0.74", "-39.3459, 49.1904, 37.9481, 0.22", "-40.3836, 49.5356, 37.6891, 0.22", "-41.6735, 49.8773, 37.2083, 0.22", "-42.8132, 50.1364, 36.6695, 0.15", "-43.8372, 50.3311, 36.0769, 0.29", "-45.0936, 50.5028, 35.1853, 0.29", "-45.6276, 50.5428, 34.6873, 0.07", "-46.272, 50.5602, 33.9239, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "18.6679, 7.80522, 27.6623, 0.81", "19.562, 7.31307, 29.2855, 0.81", "20.6773, 6.6133, 30.8097, 0.44", "21.7042, 5.83768, 31.9398, 0.44", "22.6784, 4.97766, 32.7386, 0.66", "23.0809, 4.61008, 32.9854, 0.96", "24.2537, 3.51744, 33.559, 0.52", "25.0794, 2.70695, 33.7834, 0.29", "26.0526, 1.77939, 33.944, 0.29", "27.2404, 0.757264, 34.1059, 0.29", "28.4869, -0.143624, 34.3332, 0.29", "30.2264, -1.2108, 34.6887, 0.29", "31.4131, -1.83045, 35.0197, 0.37", "32.8169, -2.43085, 35.5737, 0.66", "34.2717, -2.92691, 36.4685, 0.88", "36.0686, -3.4399, 37.9037, 0.37", "36.7529, -3.61537, 38.5568, 0.37", "38.1637, -3.96433, 40.0268, 0.74", "39.6083, -4.36594, 41.5674, 0.81", "42.0913, -5.1479, 44.2752, 0.52", "43.1896, -5.55802, 45.5298, 0.66", "44.8591, -6.25036, 47.5297, 0.52", "46.1368, -6.79455, 48.9752, 0.29", "47.7014, -7.48552, 50.5514, 0.29", "49.2689, -8.23554, 51.9491, 0.37", "50.7146, -9.03378, 53.0849, 0.37", "51.906, -9.81214, 54.0578, 0.37", "53.104, -10.7683, 54.9835, 0.81", "53.8362, -11.4451, 55.5056, 0.88", "54.5248, -12.1971, 55.9215, 0.52", "55.2683, -13.0364, 56.3041, 0.37", "56.1194, -13.9179, 56.6878, 0.74", "57.4811, -15.1894, 57.3073, 0.37", "58.4957, -16.0473, 57.8467, 0.37", "59.2143, -16.6145, 58.2295, 0.37", "60.6261, -17.7085, 58.9904, 0.29", "61.2881, -18.2653, 59.361, 0.29", "62.3947, -19.2434, 59.9888, 0.59", "62.9846, -19.7616, 60.4046, 0.66", "63.8501, -20.5015, 61.0481, 0.37", "64.7413, -21.2694, 61.7189, 0.52", "65.9932, -22.3854, 62.6369, 0.22", "66.8686, -23.1769, 63.2899, 0.37", "68.9197, -25.0715, 64.8094, 0.37", "69.6759, -25.7542, 65.3678, 0.59", "70.5558, -26.5168, 66.0441, 0.81", "71.8596, -27.6027, 67.1746, 0.22", "72.6721, -28.2839, 67.9871, 0.81", "73.5073, -29.0393, 68.9134, 0.52", "74.7137, -30.1898, 70.3046, 0.22", "75.554, -30.9983, 71.344, 0.29", "76.7958, -32.1777, 73.0229, 0.96", "77.6961, -33.0212, 74.3339, 0.22", "78.249, -33.4982, 75.115, 0.66", "79.0931, -34.1469, 76.234, 0.37", "79.7378, -34.6231, 77.0231, 0.22", "80.8621, -35.4797, 78.2757, 0.22", "81.468, -35.952, 78.893, 0.52", "82.2993, -36.5537, 79.7327, 0.88", "83.5407, -37.3594, 80.9902, 0.22", "84.2108, -37.7385, 81.6403, 0.22", "84.8188, -38.0651, 82.1828, 0.37", "85.612, -38.4955, 82.8256, 0.15", "86.4996, -38.9804, 83.5134, 0.22", "87.2579, -39.4025, 84.078, 0.66", "87.8969, -39.748, 84.5037, 1.03", "88.8112, -40.1774, 85.0976, 0.37", "90.787, -40.9705, 86.4092, 0.22", "91.5363, -41.2545, 86.9099, 0.37", "92.0086, -41.4299, 87.2245, 0.37", "92.7701, -41.6812, 87.7247, 0.22", "94.1198, -42.0692, 88.6655, 0.29", "95.1114, -42.2923, 89.3347, 0.22", "95.9314, -42.4502, 89.8543, 0.88", "96.5037, -42.5437, 90.2275, 0.88", "97.744, -42.7407, 91.028, 0.15", "99.1203, -42.9763, 91.9741, 0.15", "100.948, -43.3389, 93.2869, 0.15", "101.773, -43.5219, 93.9184, 0.81", "103.911, -44.0607, 95.7207, 0.22", "104.678, -44.3159, 96.4304, 0.29", "105.73, -44.7962, 97.5183, 0.29", "106.635, -45.379, 98.5284, 0.66", "107.331, -46.0256, 99.4041, 0.22", "107.874, -46.6679, 100.09, 0.29", "108.538, -47.5718, 100.841, 0.22", "109.133, -48.3736, 101.417, 0.22", "109.869, -49.3199, 101.986, 0.74", "110.91, -50.6508, 102.676, 0.15", "111.664, -51.5768, 103.07, 0.44", "112.61, -52.6807, 103.398, 0.22", "113.471, -53.6514, 103.602, 0.74", "114.332, -54.6538, 103.732, 0.37", "115.65, -56.3244, 103.853, 0.22", "116.563, -57.6231, 103.874, 0.74", "117.996, -59.9863, 103.839, 0.22", "118.402, -60.7585, 103.805, 0.52", "118.648, -61.2915, 103.783, 0.52", "119.194, -62.6333, 103.754, 0.22", "119.564, -63.5668, 103.779, 0.22", "120.149, -65.056, 103.85, 0.59", "121.166, -67.4262, 104.019, 0.07", "121.871, -68.8676, 104.126, 0.15", "122.455, -69.9112, 104.211, 0.66", "123.298, -71.2285, 104.335, 0.15", "124.156, -72.4348, 104.479, 0.22", "125.257, -73.8058, 104.685, 0.07", "125.78, -74.4168, 104.811, 0.29", "126.571, -75.3007, 105.061, 0.15", "127.205, -76.0365, 105.432, 0.15", "127.752, -76.7164, 105.987, 0.44", "128.288, -77.3907, 106.695, 0.22", "128.683, -77.9015, 107.3, 0.59", "129.323, -78.741, 108.438, 0.22", "130.457, -80.2878, 110.688, 0.37", "131.249, -81.4499, 112.399, 0.15", "131.608, -81.9709, 113.225, 0.88", "131.817, -82.2351, 113.662, 0.88", "132.919, -83.3875, 115.568, 0.22", "133.455, -83.8583, 116.238, 0.15", "134.164, -84.4064, 116.843, 0.37", "136.107, -85.7713, 118.043, 0.22", "137.383, -86.6252, 118.759, 0.22", "138.39, -87.2577, 119.237, 0.59", "140.745, -88.6361, 120.035, 0.07", "142.24, -89.4674, 120.451, 0.07", "143.356, -90.08, 120.658, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "18.6679, 7.80522, 27.6623, 0.52", "18.3698, 7.64302, 29.3425, 0.52", "18.0855, 7.42469, 31.1956, 0.44", "17.7007, 7.08293, 33.4325, 0.44", "17.3756, 6.74426, 35.1784, 0.59", "16.9986, 6.24942, 37.2218, 0.29", "16.8152, 5.94997, 38.221, 0.37", "16.6678, 5.54662, 39.3494, 0.37", "16.6148, 5.04364, 40.2562, 0.22", "16.5971, 4.44868, 40.9155, 0.22", "16.5611, 3.59154, 41.5894, 0.22", "16.4896, 2.72452, 42.1217, 0.59", "16.434, 2.14804, 42.4292, 0.96", "16.2739, 0.872952, 43.0583, 0.22", "16.0656, -0.269264, 43.635, 0.29", "15.8177, -1.03891, 44.1037, 0.29", "15.4169, -1.79204, 44.6751, 0.66", "14.8976, -2.43622, 45.3165, 0.44", "14.0749, -3.11299, 46.2596, 0.15", "13.1861, -3.61797, 47.2671, 0.29", "11.7847, -4.08982, 49.1023, 0.44", "11.0504, -4.24529, 50.1575, 0.88", "10.3577, -4.28566, 51.2536, 0.96", "9.06405, -4.13312, 53.4962, 0.15", "8.41107, -3.95671, 54.7717, 0.37", "6.64191, -3.29534, 58.6083, 0.66", "6.14559, -3.06896, 59.8716, 0.66", "5.25059, -2.5333, 62.7594, 0.66", "4.7629, -2.13145, 64.8346, 0.37", "4.44573, -1.78584, 66.6609, 0.37", "4.2418, -1.54065, 68.1846, 0.22", "4.05638, -1.32368, 70.1489, 0.22", "3.91243, -1.17335, 72.3576, 0.22", "3.80013, -1.20046, 74.5958, 0.22", "3.7467, -1.26982, 75.4558, 0.29", "3.62903, -1.48689, 77.5094, 0.29", "3.5676, -1.62178, 78.8389, 0.29", "3.55251, -1.69026, 79.3368, 0.44", "3.50881, -1.92465, 80.9705, 0.22", "3.46248, -2.1937, 82.6042, 0.44", "3.4137, -2.45847, 84.1449, 0.22", "3.33721, -2.84815, 86.4378, 0.22", "3.2869, -2.99912, 87.6181, 0.59", "3.14195, -3.18851, 89.8089, 0.59", "3.02121, -3.2439, 91.2511, 0.15", "2.88428, -3.20208, 92.8423, 0.66", "2.68298, -2.98003, 95.5771, 0.15", "2.54048, -2.61547, 98.5443, 0.44", "2.48491, -2.27417, 100.818, 1.03", "2.47545, -1.81389, 103.752, 1.03", "2.56065, -1.09558, 108.17, 0.44", "2.69422, -0.376257, 112.757, 0.15", "2.84008, 0.13737, 116.56, 0.44", "2.96765, 0.398994, 119.042, 0.29", "3.18207, 0.696956, 122.339, 0.29", "3.32714, 0.817607, 124.218, 0.66", "3.48668, 0.8348, 126.213, 0.22", "3.63582, 0.718004, 128.098, 0.22", "3.70538, 0.602559, 128.953, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "16.7764, 12.3647, 18.0793, 0.44", "17.4993, 11.6674, 17.9789, 0.44", "18.5428, 10.9558, 17.8905, 0.44", "19.5757, 10.4556, 17.8434, 0.44", "20.794, 10.0053, 17.816, 0.37", "21.8737, 9.64546, 17.7772, 0.37", "23.1113, 9.25178, 17.7439, 0.66", "24.2974, 8.92307, 17.7358, 0.44", "25.1982, 8.67772, 17.7006, 0.44", "25.913, 8.46745, 17.6231, 0.44", "27.2442, 8.03958, 17.4103, 0.44", "28.3233, 7.62434, 17.1816, 0.44", "29.1148, 7.28245, 16.9453, 0.52", "30.7255, 6.60322, 16.3153, 0.44", "31.6377, 6.27866, 15.8681, 0.44", "32.7242, 6.00551, 15.2331, 0.44", "33.4298, 5.89057, 14.7613, 0.44", "34.1325, 5.82067, 14.2529, 0.44", "34.9364, 5.79623, 13.6542, 0.37", "35.9585, 5.8685, 12.9197, 0.37", "36.6366, 5.97251, 12.3708, 0.37", "37.1695, 6.09564, 11.8853, 0.37", "37.5843, 6.22118, 11.4882, 0.44", "38.5046, 6.56995, 10.5824, 0.44", "39.1955, 6.87428, 9.91127, 0.44", "40.066, 7.2852, 9.13703, 0.59", "41.1278, 7.75523, 8.32276, 0.74", "42.0647, 8.11417, 7.68539, 0.29", "42.7234, 8.32522, 7.28911, 0.29", "43.6294, 8.55992, 6.86241, 0.29", "44.7106, 8.77587, 6.41804, 0.37", "45.8955, 8.97713, 5.96801, 0.74", "47.0557, 9.14361, 5.52689, 0.44", "47.6284, 9.21527, 5.30001, 0.66", "48.6583, 9.29978, 4.84219, 0.74", "49.8445, 9.37077, 4.26827, 0.29", "50.8455, 9.4169, 3.70412, 0.29", "51.4189, 9.4266, 3.36097, 0.29", "51.8869, 9.38697, 3.14142, 0.29", "52.6934, 9.20984, 3.03938, 0.22", "53.8879, 9.01836, 3.47422, 0.22", "54.3554, 9.01336, 3.6805, 0.29", "54.8371, 9.05214, 3.86133, 0.29", "55.3815, 9.12564, 4.00243, 0.22", "56.6829, 9.28578, 4.14184, 0.59", "58.0417, 9.43063, 4.0955, 0.22", "59.2881, 9.53419, 3.9064, 0.52", "60.1962, 9.58313, 3.6814, 0.29", "61.0834, 9.62011, 3.40334, 0.66", "62.4063, 9.65777, 2.86283, 0.15", "63.1138, 9.65739, 2.49564, 0.37", "63.8133, 9.65292, 2.08983, 0.44", "64.6868, 9.69057, 1.63134, 0.15", "65.308, 9.74964, 1.33841, 0.29", "65.9726, 9.8289, 1.04591, 0.44", "66.8604, 9.91599, 0.716878, 0.59", "67.8898, 9.95809, 0.416594, 0.74", "69.0925, 9.96129, 0.109493, 0.52", "70.5119, 9.98599, -0.139601, 0.29", "71.2393, 10.0148, -0.237006, 0.22", "72.3659, 10.1365, -0.332736, 0.52", "73.7857, 10.4126, -0.45019, 0.22", "74.7505, 10.6372, -0.540816, 0.22", "76.1639, 11.029, -0.61272, 0.59", "76.4553, 11.1142, -0.610031, 0.59", "77.3845, 11.365, -0.646033, 0.29", "78.6192, 11.647, -0.846361, 0.22", "79.5231, 11.8, -1.11662, 0.22", "80.817, 11.9412, -1.61557, 0.37", "82.4346, 12.028, -2.21939, 0.15", "83.5937, 12.0522, -2.59395, 0.37", "84.7926, 12.0535, -2.90005, 0.37", "86.4345, 12.0903, -3.21406, 0.22", "87.5109, 12.1625, -3.42789, 0.22", "89.0676, 12.3103, -3.80764, 0.22", "89.6384, 12.3887, -3.92967, 0.52", "90.7281, 12.509, -4.0325, 0.52", "91.7333, 12.6099, -4.06252, 0.22", "92.9731, 12.7115, -4.06706, 0.15", "94.16, 12.8314, -4.12457, 0.15", "95.1017, 12.9472, -4.29685, 0.15", "96.6735, 13.1468, -4.6531, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "16.7764, 12.3647, 18.0793, 0.74", "16.9753, 12.5765, 18.3826, 0.74", "17.3022, 12.8945, 18.7612, 0.66", "17.7399, 13.3031, 19.2365, 0.59", "18.1107, 13.6162, 19.6039, 0.88", "18.4443, 13.8468, 19.8967, 0.59", "18.851, 14.1114, 20.2698, 0.74", "19.2372, 14.3488, 20.6293, 0.66", "19.5731, 14.5739, 20.9523, 0.66", "19.9211, 14.8484, 21.3541, 0.52", "20.2553, 15.1716, 21.9046, 0.44", "20.4852, 15.4887, 22.5392, 0.44", "20.6207, 15.7889, 23.1744, 0.44", "20.6682, 16.0573, 23.7407, 0.44", "20.6692, 16.3726, 24.3681, 0.66", "20.6323, 16.7364, 25.055, 0.66", "20.5679, 17.1637, 25.7948, 0.66", "20.5178, 17.4469, 26.2598, 0.88", "20.3965, 17.9611, 27.111, 0.88", "20.3542, 18.1356, 27.4091, 0.59", "20.2374, 18.6143, 28.2723, 0.59", "20.1689, 18.8826, 28.8114, 0.59", "20.1048, 19.1662, 29.4178, 0.59", "20.0764, 19.32, 29.7781, 0.59", "20.0743, 19.5058, 30.2717, 0.59", "20.1101, 19.7415, 31.0005, 0.59", "20.1791, 19.9097, 31.633, 0.59", "20.2745, 20.0687, 32.2326, 0.44", "20.3983, 20.287, 32.9644, 0.44", "20.5293, 20.5728, 33.7429, 0.44", "20.5536, 20.6597, 33.9349, 0.44", "20.6078, 21.0381, 34.6391, 0.44", "20.645, 21.6167, 35.6344, 0.44", "20.6497, 22.0204, 36.3502, 0.44", "20.6373, 22.6577, 37.5373, 0.29", "20.5976, 23.0121, 38.2937, 0.29", "20.552, 23.1914, 38.7273, 0.29", "20.4295, 23.4585, 39.4681, 0.29", "20.2565, 23.6922, 40.2767, 0.29", "20.063, 23.8906, 41.0492, 0.29", "19.7237, 24.1794, 42.2095, 0.29", "19.5422, 24.3105, 42.7211, 0.29", "19.3257, 24.4471, 43.2516, 0.29", "18.9312, 24.6782, 44.0826, 0.29", "18.4711, 24.951, 44.9535, 0.29", "18.0709, 25.2079, 45.6699, 0.29", "17.5599, 25.5703, 46.5812, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.7071, 40.7945, -11.2224, 0.52", "-17.2827, 41.1709, -10.7078, 0.52", "-18.1408, 41.6766, -10.0941, 0.52", "-18.8731, 42.0402, -9.66548, 0.52", "-19.4534, 42.2872, -9.39332, 0.44", "-20.0316, 42.4852, -9.19626, 0.44", "-20.386, 42.5736, -9.1112, 0.44", "-21.1783, 42.676, -9.1315, 0.29", "-21.7932, 42.6851, -9.28153, 0.22", "-22.339, 42.6676, -9.50412, 0.29", "-23.1302, 42.5977, -9.83072, 0.66", "-23.7742, 42.5286, -10.0927, 0.29", "-24.6188, 42.4411, -10.3696, 0.29", "-25.1195, 42.4053, -10.5428, 0.29", "-25.6978, 42.3709, -10.7385, 0.29", "-26.858, 42.2745, -11.0382, 0.29", "-27.5926, 42.2262, -11.1276, 0.66", "-28.6027, 42.1586, -11.1064, 0.81", "-29.7531, 42.0705, -10.9776, 0.22", "-30.6007, 42.0207, -10.8259, 0.59", "-31.6269, 41.9683, -10.5779, 0.29", "-32.5874, 41.9055, -10.3335, 0.29", "-33.6085, 41.8174, -9.99998, 0.37", "-34.4488, 41.744, -9.65678, 0.52", "-35.4906, 41.6666, -9.16175, 0.29", "-36.3152, 41.6563, -8.76671, 0.29", "-37.2593, 41.7023, -8.30251, 0.15", "-38.0787, 41.7624, -7.89719, 0.29", "-38.9142, 41.8502, -7.47961, 1.18", "-39.4418, 41.914, -7.19769, 1.18", "-40.536, 42.0543, -6.59358, 0.37", "-41.7171, 42.2701, -5.85861, 0.22", "-42.0853, 42.3595, -5.5975, 0.22", "-42.6398, 42.4998, -5.19248, 0.66", "-43.2588, 42.6287, -4.77127, 0.52", "-44.2385, 42.7735, -4.11973, 0.29", "-45.2149, 42.8949, -3.54437, 0.29", "-45.7792, 42.9788, -3.28362, 0.29", "-46.5053, 43.1125, -3.01061, 0.81", "-47.849, 43.3851, -2.58222, 0.22", "-48.6282, 43.5438, -2.40502, 0.22", "-49.8467, 43.7897, -2.21732, 0.15", "-50.5541, 43.9117, -2.15369, 0.22", "-51.0371, 43.9894, -2.12212, 0.22", "-51.8961, 44.1439, -2.05863, 0.22", "-52.9139, 44.3829, -1.97023, 0.15" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.7071, 40.7945, -11.2224, 0.37", "-16.4043, 41.5717, -10.9594, 0.37", "-16.3007, 41.9205, -10.8569, 0.37", "-16.1748, 42.5537, -10.7509, 0.37", "-16.1212, 42.9697, -10.724, 0.37", "-16.0969, 43.2212, -10.7074, 0.29", "-16.0618, 43.6086, -10.6681, 0.29", "-16.034, 44.1226, -10.5803, 0.52", "-15.9763, 44.7543, -10.4105, 0.66", "-15.9088, 45.2972, -10.2016, 0.66", "-15.8208, 45.8471, -9.92192, 0.22", "-15.74, 46.2903, -9.66159, 0.59", "-15.6422, 46.854, -9.27538, 0.37", "-15.5866, 47.2765, -8.91507, 0.22", "-15.5836, 47.6526, -8.5413, 0.22", "-15.6279, 47.8594, -8.31511, 0.22", "-15.7227, 48.0644, -8.08823, 0.52", "-15.9626, 48.4378, -7.67526, 0.22", "-16.2428, 48.7657, -7.32049, 0.15", "-16.58, 49.0899, -6.9692, 0.29", "-16.9437, 49.387, -6.62656, 0.29", "-17.161, 49.5425, -6.42413, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "24.1521, -21.3004, -15.7831, 0.52", "24.9352, -21.4976, -17.1462, 0.52", "25.3883, -21.6405, -18.0728, 0.52", "25.7373, -21.7561, -18.9274, 0.52", "26.1428, -21.858, -20.0376, 0.52", "26.6904, -21.953, -21.5541, 0.52", "26.9801, -21.997, -22.3396, 0.52", "27.1018, -22.0249, -22.7758, 0.52", "27.2994, -22.0714, -23.4821, 0.52", "27.6227, -22.1889, -24.4442, 0.52", "27.8159, -22.2791, -24.8528, 0.52", "28.5656, -22.7614, -25.8031, 0.52", "29.021, -23.0926, -26.1872, 0.52", "29.5058, -23.4893, -26.493, 0.52", "30.178, -24.0833, -26.8635, 0.66", "30.6557, -24.5562, -27.1265, 0.88", "31.5953, -25.528, -27.6832, 0.74", "32.2916, -26.2472, -28.1209, 0.74", "32.7497, -26.6973, -28.4536, 0.74", "33.3985, -27.2928, -29.0433, 0.74", "33.8944, -27.6984, -29.601, 0.52", "34.2784, -28.0011, -30.1114, 0.37", "34.8043, -28.3531, -30.9108, 0.37", "35.2613, -28.6085, -31.6422, 0.59", "35.932, -28.8891, -32.6819, 0.37", "36.4269, -29.049, -33.3697, 0.37", "36.724, -29.1357, -33.7378, 0.37", "37.2275, -29.3257, -34.3376, 0.37", "37.6803, -29.5422, -34.9062, 0.37", "38.1758, -29.8253, -35.5871, 0.44", "38.6549, -30.1241, -36.3223, 0.44", "39.2094, -30.4748, -37.3525, 0.59", "39.6814, -30.8093, -38.5609, 0.44", "39.9032, -31.0591, -39.4757, 0.44", "39.9838, -31.2232, -40.1039, 0.44", "40.0207, -31.4122, -40.8743, 0.44", "40.017, -31.6733, -42.0221, 0.44", "39.9887, -31.8743, -43.0462, 0.44", "39.972, -32.0268, -43.8448, 0.74", "39.9401, -32.3165, -44.9963, 0.96", "39.9121, -32.6527, -46.0405, 0.52", "39.8725, -33.094, -47.1353, 0.66", "39.8426, -33.5834, -48.1487, 1.25", "39.8238, -33.959, -48.882, 1.11", "39.7692, -34.5632, -50.0661, 0.44", "39.6913, -35.0528, -51.0402, 0.44", "39.6189, -35.4183, -51.7834, 0.66", "39.494, -35.8935, -52.7621, 0.44", "39.3775, -36.212, -53.4531, 0.44", "39.2155, -36.4454, -54.1069, 0.44", "39.0112, -36.5612, -54.7011, 0.44", "38.6376, -36.6043, -55.4336, 0.44", "38.264, -36.594, -56.0263, 0.74", "37.7697, -36.5625, -56.6933, 1.11", "37.0321, -36.5277, -57.6467, 0.44", "36.6257, -36.5189, -58.1998, 0.44", "36.2305, -36.5157, -58.8273, 0.52", "35.7179, -36.4786, -59.8305, 0.37", "35.4644, -36.4177, -60.5318, 0.59", "35.2434, -36.2796, -61.5319, 0.74", "35.1463, -36.1166, -62.4918, 0.74", "35.0953, -35.9185, -63.5224, 0.74", "35.0938, -35.726, -64.3664, 0.52", "35.1148, -35.5164, -65.0877, 0.52", "35.1337, -35.2393, -65.9291, 0.22", "35.0938, -34.9336, -66.7414, 0.22", "35.0062, -34.7162, -67.2591, 0.44", "34.8551, -34.4728, -67.8333, 0.44", "34.7462, -34.3486, -68.1402, 0.44", "34.3455, -33.9583, -69.0204, 0.15", "33.8645, -33.5149, -69.9018, 0.15", "33.4779, -33.1332, -70.5423, 0.74" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "24.1521, -21.3004, -15.7831, 0.52", "24.6605, -20.8392, -16.7997, 0.52", "25.1791, -20.1995, -18.1233, 0.52", "25.5476, -19.6201, -19.1816, 0.74", "25.8418, -19.0951, -20.0445, 0.96", "26.2574, -18.305, -21.2983, 1.11", "26.7097, -17.3965, -22.6322, 0.52", "27.0799, -16.4885, -23.8776, 0.52", "27.3823, -15.6442, -24.8651, 0.66", "27.5759, -15.1342, -25.3572, 0.66", "28.111, -13.9965, -26.1985, 0.44", "28.701, -13.0237, -26.6309, 0.44", "29.2756, -12.2867, -26.6863, 0.44", "29.8973, -11.6023, -26.5436, 0.52", "31.3387, -10.2649, -26.0859, 0.59", "32.0249, -9.74193, -25.8537, 0.37", "32.9373, -9.17786, -25.5255, 0.59", "34.4325, -8.45387, -24.9655, 0.44", "35.4731, -8.02431, -24.5956, 0.29", "36.7246, -7.55635, -24.2305, 0.37", "38.0426, -7.10992, -23.9394, 0.29", "38.9554, -6.8217, -23.8001, 0.66", "40.7281, -6.27912, -23.687, 0.44", "41.7479, -5.95218, -23.7432, 0.44", "43.1881, -5.44212, -23.9361, 0.52", "43.9658, -5.13513, -24.118, 0.66", "45.5817, -4.43509, -24.6657, 0.44", "46.709, -3.92736, -25.1219, 0.44", "47.4788, -3.57768, -25.4893, 0.44", "48.2796, -3.23062, -25.8593, 0.37", "49.6288, -2.69918, -26.4319, 0.44", "50.6125, -2.38293, -26.7702, 0.52", "52.1129, -2.00248, -27.1292, 0.44", "53.7792, -1.65458, -27.4155, 0.22", "54.6494, -1.47249, -27.5185, 0.29", "55.3318, -1.32975, -27.5556, 0.37", "56.4625, -1.13161, -27.5216, 0.22", "57.694, -0.951181, -27.4137, 0.22", "58.7521, -0.792366, -27.2608, 0.29", "59.5572, -0.609674, -27.1016, 0.29", "60.5388, -0.274965, -26.9093, 0.29", "61.4846, 0.177609, -26.7154, 0.29", "62.7979, 0.924299, -26.445, 0.22", "63.3363, 1.23735, -26.3079, 0.29", "64.3499, 1.80735, -26.0114, 0.29", "64.9827, 2.14375, -25.8204, 0.44", "66.1709, 2.80445, -25.4928, 0.74", "66.8119, 3.1786, -25.3143, 0.29", "67.9921, 3.85255, -25.0014, 0.29", "68.9013, 4.34765, -24.7753, 0.29", "69.6641, 4.74117, -24.6024, 0.44", "70.7235, 5.2831, -24.3422, 0.59", "71.7392, 5.78883, -24.1028, 0.37", "72.6866, 6.28014, -23.8286, 0.22", "73.5082, 6.73995, -23.5698, 0.22", "73.9264, 6.9939, -23.4071, 0.22", "75.2499, 7.83023, -22.8323, 0.44", "76.3754, 8.54676, -22.2635, 0.22", "77.3537, 9.20551, -21.6648, 0.66", "77.9668, 9.63778, -21.2231, 0.59", "78.8056, 10.2056, -20.5729, 0.66", "79.6433, 10.7519, -19.9087, 0.37", "80.3383, 11.1878, -19.3744, 0.15", "81.2396, 11.6199, -18.6464, 0.22", "81.7454, 11.7677, -18.3026, 0.22", "82.7288, 11.9467, -17.6423, 0.29", "83.4231, 12.0279, -17.1991, 0.29", "83.9, 12.0758, -16.9219, 0.52", "85.6711, 12.2105, -16.0774, 0.59", "87.077, 12.2502, -15.4994, 0.37", "88.4738, 12.2301, -14.9707, 0.37", "89.1992, 12.1861, -14.7111, 0.88", "89.8171, 12.1025, -14.4906, 0.96", "91.2159, 11.8169, -14.0228, 0.44", "93.4236, 11.2413, -13.2948, 0.29", "94.5154, 10.9095, -12.8817, 0.29", "95.4453, 10.6107, -12.4819, 0.29", "96.2518, 10.3519, -12.0723, 0.59", "97.2062, 10.0487, -11.5128, 0.22", "98.1162, 9.78171, -10.9142, 0.22", "99.3282, 9.46549, -10.0979, 0.59", "100.528, 9.21799, -9.30474, 0.22", "101.005, 9.15372, -9.01299, 0.22", "102.016, 9.12046, -8.50099, 0.44", "102.587, 9.14437, -8.25673, 0.81", "104.201, 9.28541, -7.71191, 0.44", "104.914, 9.39356, -7.52134, 0.44", "106.727, 9.74918, -7.16182, 0.74", "108.614, 10.2167, -6.86241, 0.22", "109.308, 10.423, -6.77819, 0.81", "109.643, 10.5387, -6.74568, 0.81", "110.64, 10.9314, -6.7244, 0.37", "112.365, 11.6449, -6.80328, 0.22", "113.33, 12.0781, -6.91417, 0.22", "114.642, 12.6874, -7.09936, 0.22", "115.469, 13.0703, -7.22395, 0.22", "117.111, 13.8348, -7.48069, 0.22", "117.923, 14.2047, -7.60001, 1.03", "119.09, 14.7181, -7.69608, 0.07", "120.074, 15.1268, -7.6664, 0.22", "120.804, 15.4346, -7.5562, 0.15", "121.456, 15.7411, -7.37495, 0.59", "122.135, 16.1399, -7.06646, 0.59", "123.273, 17.0661, -6.3903, 0.15", "123.924, 17.9153, -5.8462, 0.44", "124.157, 18.4311, -5.57737, 0.44", "124.462, 19.5332, -5.11707, 0.22", "124.572, 20.1387, -4.90169, 0.66", "124.717, 21.2164, -4.57063, 0.15", "124.842, 22.3125, -4.26559, 0.22", "124.917, 22.8743, -4.07471, 0.88", "125.002, 23.4179, -3.78956, 0.88", "125.251, 24.7088, -2.82159, 0.29", "125.416, 25.4343, -2.22226, 0.29", "125.667, 26.3935, -1.3294, 0.66", "125.891, 27.2636, -0.427852, 0.29", "126.237, 28.6885, 1.21899, 0.22", "126.447, 29.7389, 2.59199, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.07118, -67.1722, -3.65421, 0.15", "-1.15855, -67.3028, -2.64565, 0.15", "-0.262095, -67.4353, -1.83757, 0.22", "0.194048, -67.4878, -1.47618, 0.15", "0.829639, -67.5404, -1.00073, 0.15", "1.3153, -67.5778, -0.652372, 0.44", "1.72637, -67.6115, -0.361249, 0.44", "2.69629, -67.6922, 0.34354, 0.22", "3.46608, -67.7798, 0.921904, 0.22", "4.53299, -67.9409, 1.79672, 0.15", "5.23702, -68.076, 2.4658, 0.74", "6.30382, -68.3336, 3.74683, 0.22", "6.84293, -68.5114, 4.60752, 0.22", "7.0576, -68.6175, 5.08648, 0.29", "7.35893, -68.8124, 5.99045, 0.29", "7.74622, -69.1287, 7.43957, 0.15", "8.0304, -69.414, 8.79444, 0.15", "8.25639, -69.7031, 10.2224, 0.52", "8.48194, -69.9826, 11.6893, 0.96", "8.72636, -70.2497, 13.3491, 0.96" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.07118, -67.1722, -3.65421, 0.59", "-2.37235, -68.212, -3.35241, 0.59", "-2.60434, -69.0678, -2.99424, 0.22", "-2.84832, -70.0463, -2.47078, 0.22", "-3.00146, -70.6895, -2.10991, 0.52", "-3.17316, -71.4295, -1.69306, 0.96", "-3.47135, -72.8169, -0.871271, 0.22", "-3.61844, -73.7301, -0.305188, 0.22", "-3.72193, -74.7086, 0.32604, 0.59", "-3.76987, -75.6294, 0.918729, 0.88", "-3.75891, -77.3645, 1.99251, 0.44", "-3.69335, -78.5306, 2.62297, 0.44", "-3.63963, -79.4986, 2.98333, 0.15", "-3.61377, -80.5264, 3.20691, 0.22", "-3.62025, -80.9085, 3.22334, 0.96", "-3.68398, -81.8306, 3.13366, 1.33", "-3.86843, -83.2706, 2.8063, 0.59", "-4.25409, -85.1758, 2.25762, 0.22", "-4.47022, -86.0088, 2.02028, 0.44", "-4.91059, -87.5882, 1.58184, 0.96", "-5.16937, -88.6206, 1.34056, 0.22", "-5.30766, -89.2076, 1.22966, 0.37", "-5.52451, -90.1526, 1.07423, 0.37", "-5.7551, -91.1837, 0.960963, 0.22", "-6.03169, -92.2539, 0.856184, 1.11", "-6.53483, -93.8838, 0.70673, 0.22", "-6.69197, -94.3659, 0.650471, 0.22", "-7.12064, -95.7566, 0.461093, 0.22", "-7.2918, -96.3872, 0.361995, 0.22", "-7.55946, -97.4625, 0.173555, 1.18", "-7.84192, -98.7014, -0.0151167, 0.29", "-8.1495, -100.102, -0.17333, 0.81", "-8.32997, -101.113, -0.241716, 0.15", "-8.44357, -101.861, -0.252709, 0.15", "-8.50931, -102.194, -0.248373, 0.15", "-8.92297, -103.369, -0.176693, 0.29", "-9.80743, -104.929, -0.00803947, 0.15", "-10.1917, -105.389, 0.0692505, 0.44", "-10.7233, -105.886, 0.185892, 0.88", "-11.7112, -106.664, 0.416392, 0.22", "-13.133, -107.645, 0.764686, 0.15", "-13.5494, -107.893, 0.871845, 0.15", "-14.2009, -108.247, 1.04715, 0.59", "-14.6309, -108.463, 1.15052, 0.96", "-15.8174, -109.014, 1.40976, 0.22", "-16.783, -109.467, 1.57689, 0.37", "-17.7354, -109.937, 1.70475, 0.37", "-18.7111, -110.428, 1.80545, 0.22", "-19.9793, -111.108, 1.95571, 0.15", "-20.8095, -111.573, 2.11565, 0.15", "-21.6152, -112.041, 2.33638, 0.15", "-22.1175, -112.343, 2.48945, 0.15", "-22.9076, -112.852, 2.77157, 0.81", "-24.3703, -113.89, 3.42682, 0.07", "-25.399, -114.764, 4.05112, 0.07", "-26.1545, -115.46, 4.61807, 0.66" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "36.497, -1.67019, -4.8993, 0.44", "37.2927, -2.61651, -6.24948, 0.44", "37.7845, -3.22418, -7.22751, 0.44", "37.9792, -3.45088, -7.61176, 0.52", "38.4858, -3.93491, -8.51509, 0.52", "39.0771, -4.38567, -9.414, 0.59", "39.636, -4.74667, -10.1543, 0.59", "40.3398, -5.16384, -11.0088, 0.59", "40.8113, -5.39828, -11.5582, 0.52", "41.4645, -5.69029, -12.2891, 0.52", "42.128, -5.95736, -13.0139, 0.44", "42.5343, -6.11948, -13.4809, 0.44", "43.1714, -6.43927, -14.2249, 0.44", "43.5513, -6.68307, -14.6907, 0.52", "43.99, -7.02557, -15.246, 0.52", "44.7114, -7.67865, -16.0763, 0.44", "45.2652, -8.15976, -16.6287, 0.81", "45.7817, -8.58019, -17.0603, 0.96", "46.6709, -9.28431, -17.6646, 0.59", "47.4061, -9.82144, -18.1129, 0.52", "48.527, -10.5729, -18.7445, 0.44", "49.6517, -11.2731, -19.2866, 0.44", "50.4266, -11.7254, -19.6309, 0.37", "51.4759, -12.2827, -20.1339, 0.66", "52.8911, -12.998, -20.8757, 0.37", "54.1333, -13.6179, -21.6111, 0.44", "55.1907, -14.1412, -22.2761, 0.74", "55.5783, -14.3393, -22.5107, 0.74", "56.8175, -14.8702, -23.2957, 0.22", "57.387, -15.0826, -23.6763, 0.22", "58.0232, -15.3443, -24.1216, 0.66", "58.6264, -15.6228, -24.6016, 0.22", "59.2244, -15.9434, -25.1572, 0.37", "60.4945, -16.7441, -26.3265, 0.15", "60.9636, -17.0469, -26.7265, 0.59", "61.3699, -17.2878, -27.0647, 0.74", "61.9445, -17.6362, -27.5461, 0.52", "62.4546, -17.9754, -27.9732, 0.81", "63.3697, -18.6112, -28.7083, 0.29", "64.5649, -19.4433, -29.5461, 0.22", "65.3462, -19.9116, -30.0354, 0.22", "66.088, -20.2696, -30.4752, 0.22", "66.8316, -20.5519, -30.8993, 0.29", "67.631, -20.798, -31.3437, 0.59", "68.5179, -21.037, -31.8299, 0.96", "69.325, -21.2268, -32.2904, 0.29", "70.3703, -21.4036, -32.9256, 0.22", "71.3828, -21.4991, -33.5216, 0.44", "71.9657, -21.521, -33.8497, 0.22", "72.7939, -21.5264, -34.282, 0.29", "74.0876, -21.5273, -34.9392, 0.22", "75.2516, -21.5591, -35.5263, 0.74", "76.3149, -21.6489, -36.038, 0.15", "76.8514, -21.6938, -36.3711, 0.29", "77.9428, -21.7932, -37.3217, 0.22", "78.4457, -21.8459, -37.8145, 0.29", "79.0695, -21.9628, -38.5342, 0.52", "79.5452, -22.0991, -39.2501, 0.81", "80.8481, -22.5847, -41.8943, 0.29", "81.3597, -22.8168, -43.2467, 0.52" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "36.497, -1.67019, -4.8993, 0.52", "37.2548, -1.70863, -4.48966, 0.52", "37.8045, -1.79855, -4.16527, 0.52", "38.3768, -1.97491, -3.82345, 0.52", "39.1523, -2.30704, -3.33166, 0.74", "39.8145, -2.62233, -2.88658, 0.74", "40.5983, -3.00243, -2.33439, 0.88", "41.4082, -3.43539, -1.6952, 0.88", "42.3053, -3.92857, -0.909477, 0.74", "43.2502, -4.44854, -0.0318527, 0.37", "43.8696, -4.763, 0.542288, 0.29", "44.5154, -5.04327, 1.12392, 0.37", "45.5144, -5.36514, 1.90258, 0.81", "46.4871, -5.5659, 2.50431, 0.59", "47.692, -5.71553, 3.04678, 0.52", "48.4432, -5.80845, 3.25477, 0.66", "49.1555, -5.94302, 3.36508, 0.81", "50.8989, -6.39917, 3.48441, 0.52", "51.8329, -6.70039, 3.50573, 0.52", "52.5469, -6.97642, 3.55914, 0.59", "53.5586, -7.45607, 3.77566, 0.52", "54.5336, -7.99061, 4.1877, 0.44", "55.1688, -8.34835, 4.54533, 0.52", "55.7996, -8.68447, 4.94583, 0.74", "56.9755, -9.23184, 5.67018, 0.59", "57.8994, -9.60026, 6.20419, 0.52", "59.0824, -9.97833, 6.79134, 0.29", "60.0856, -10.2469, 7.20022, 0.22", "61.1072, -10.5104, 7.56702, 0.29", "61.9789, -10.7494, 7.83156, 0.22", "62.5934, -10.9402, 8.007, 0.52", "63.498, -11.267, 8.27619, 0.88", "64.4505, -11.7118, 8.5772, 0.52", "65.1941, -12.1541, 8.84495, 0.52", "66.1684, -12.8653, 9.25797, 0.96", "67.3746, -13.8449, 9.84376, 0.37", "67.8717, -14.2653, 10.115, 0.37", "68.7603, -15.0179, 10.6648, 0.81", "69.6238, -15.7121, 11.2804, 0.66", "70.5793, -16.352, 12.0633, 0.44", "71.4604, -16.8024, 12.9796, 0.44", "72.0015, -16.9883, 13.6968, 0.59", "72.4525, -17.0952, 14.5088, 0.66", "72.8163, -17.1451, 15.5053, 0.44", "73.0851, -17.1617, 16.8046, 0.37", "73.1451, -17.1577, 17.9861, 0.37", "73.0466, -17.1666, 19.1724, 0.66", "72.7382, -17.2249, 20.8937, 0.22", "72.3814, -17.293, 22.3254, 0.81", "72.177, -17.3319, 23.0442, 0.81", "71.8512, -17.3841, 24.1806, 0.22", "71.5962, -17.4082, 25.2973, 0.74", "71.4216, -17.3769, 26.3592, 0.22", "71.298, -17.3104, 27.4285, 0.52", "71.1485, -17.1706, 28.9963, 1.03", "71.0295, -17.0324, 30.204, 1.03", "70.8661, -16.7914, 31.8878, 0.29", "70.7277, -16.5642, 33.1819, 0.22", "70.5962, -16.3296, 34.2896, 0.22", "70.4861, -16.1347, 35.0487, 0.29", "70.3074, -15.8328, 36.0167, 0.81", "70.131, -15.5415, 36.8484, 0.22", "70.0142, -15.2685, 37.5053, 0.29", "69.9758, -14.9342, 38.2582, 0.29", "70.0366, -14.505, 39.0968, 0.74", "70.1749, -14.0203, 39.9776, 1.4", "70.2251, -13.8749, 40.2191, 1.4", "70.435, -13.2612, 41.1763, 0.15", "70.5907, -12.7977, 41.8298, 0.22", "70.6736, -12.5752, 42.1393, 0.22", "70.9293, -11.9691, 43.061, 0.74", "71.1741, -11.4211, 43.9364, 0.29", "71.3405, -11.0693, 44.5082, 0.59", "71.563, -10.6026, 45.3011, 0.22", "71.8521, -10.05, 46.2178, 0.59", "72.1681, -9.56379, 47.0092, 0.59", "72.4554, -9.25466, 47.5819, 0.88", "72.9917, -8.83205, 48.5101, 0.44", "73.3705, -8.59087, 49.113, 0.44", "73.9524, -8.27365, 49.9747, 0.74", "74.4328, -8.01484, 50.6601, 0.74", "75.3366, -7.45609, 52.002, 0.37", "75.9487, -7.01219, 53.0018, 0.66", "76.2975, -6.71092, 53.6468, 0.59", "76.674, -6.33098, 54.3664, 0.59", "77.0903, -5.88565, 55.1887, 0.59", "77.5326, -5.425, 56.1004, 0.66", "77.9102, -5.09194, 56.8481, 0.52", "78.2144, -4.91812, 57.413, 0.52", "78.5648, -4.80914, 58.0122, 0.66", "79.2846, -4.72786, 59.1774, 0.37", "80.206, -4.7587, 60.5306, 0.37", "81.0165, -4.8525, 61.6651, 0.29", "81.701, -4.96584, 62.596, 0.37", "82.4694, -5.10457, 63.6217, 0.37", "83.0028, -5.21352, 64.3509, 0.29", "83.4803, -5.29775, 64.985, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "13.0645, 8.21029, -18.8768, 0.59", "13.7325, 9.40015, -19.2787, 0.59", "14.2983, 10.329, -19.6887, 0.52", "14.6152, 10.8724, -19.9627, 0.52", "15.008, 11.6956, -20.3827, 0.52", "15.2911, 12.4484, -20.7489, 0.52", "15.6517, 13.4885, -21.2684, 0.66", "15.9998, 14.4155, -21.7841, 0.66", "16.233, 14.9852, -22.1049, 0.66", "16.6899, 16.0593, -22.6808, 0.52", "17.1352, 16.9837, -23.1463, 0.44", "17.6954, 18.0202, -23.6034, 0.44", "18.4864, 19.2883, -24.0431, 0.37", "19.0499, 20.0878, -24.2478, 0.37", "19.4827, 20.655, -24.338, 0.37", "20.1651, 21.4754, -24.4388, 0.37", "20.6955, 22.103, -24.4938, 0.44", "21.1097, 22.5952, -24.5474, 0.52", "22.0003, 23.7261, -24.6527, 0.44", "22.6522, 24.6097, -24.7579, 0.52", "23.4055, 25.652, -24.9188, 0.52", "23.8488, 26.3001, -25.0562, 0.52", "24.7614, 27.5019, -25.4374, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.0645, 8.21029, -18.8768, 0.59", "12.7829, 7.84131, -21.1274, 0.59", "12.6573, 7.77942, -21.6619, 0.59", "12.5189, 7.75466, -22.0433, 0.59", "12.3983, 7.75942, -22.298, 0.59", "12.0774, 7.8347, -22.8374, 0.59", "11.8071, 7.96443, -23.255, 0.59", "11.4209, 8.29544, -23.709, 0.59", "11.1776, 8.58158, -24.029, 0.52", "10.879, 9.02085, -24.4975, 0.52", "10.6016, 9.49293, -25.0163, 0.66", "10.2591, 10.1343, -25.7994, 0.52", "10.0835, 10.4953, -26.5698, 0.52", "9.97301, 10.7542, -27.2184, 0.44", "9.83579, 11.0955, -28.1401, 0.44", "9.7594, 11.285, -28.6966, 0.44", "9.64353, 11.5618, -29.6033, 0.44", "8.90822, 13.1123, -35.289, 0.81", "8.73063, 13.4564, -36.6542, 0.29", "8.63177, 13.6425, -37.4435, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.8915, -6.91727, 5.05299, 0.52", "22.4896, -7.96225, 5.05671, 0.52", "23.1245, -9.00823, 5.07949, 0.52", "23.6609, -9.8615, 5.10569, 0.59", "24.4038, -11.0883, 5.1188, 0.52", "24.9648, -12.1088, 5.11828, 0.59", "25.3267, -12.8566, 5.10701, 0.74", "25.5864, -13.4689, 5.09297, 0.81", "25.956, -14.4692, 5.07074, 0.44", "26.2794, -15.3746, 5.0111, 0.66", "26.6425, -16.4524, 4.9393, 0.44", "27.0179, -17.5443, 4.89417, 0.52", "27.3301, -18.3669, 4.89898, 0.59", "27.6387, -19.1098, 4.96707, 0.44", "28.0794, -20.0953, 5.14848, 0.37", "28.5808, -21.0917, 5.42852, 0.59", "28.948, -21.7735, 5.66367, 0.88", "29.285, -22.4181, 5.91404, 0.74", "29.6659, -23.3031, 6.23252, 0.29", "29.8359, -23.8304, 6.38409, 0.29", "30.0075, -24.5334, 6.53318, 0.44", "30.1741, -25.3804, 6.64051, 0.81", "30.2481, -25.9157, 6.68855, 0.81", "30.4107, -27.2866, 6.7781, 0.37", "30.5037, -28.01, 6.8212, 0.96", "30.5482, -28.3503, 6.85256, 0.96", "30.6134, -29.0404, 6.93694, 0.44", "30.6812, -29.9407, 7.07173, 0.66", "30.729, -30.5844, 7.18212, 0.22", "30.7884, -31.1035, 7.27381, 0.22", "30.8813, -31.641, 7.35839, 0.22", "31.0227, -32.3631, 7.41984, 0.74", "31.1182, -32.7774, 7.42795, 0.74", "31.3193, -33.4876, 7.38091, 0.22", "31.6324, -34.4291, 7.25163, 0.22", "31.8875, -35.1035, 7.08306, 0.74", "32.3273, -36.1114, 6.75266, 0.22", "32.5517, -36.5661, 6.563, 0.88", "33.0093, -37.4338, 6.12337, 0.74", "33.3919, -38.1135, 5.72941, 0.37", "33.9335, -39.0763, 5.15398, 0.59", "34.1911, -39.5502, 4.87083, 0.88", "34.6105, -40.3773, 4.40916, 0.29", "34.917, -41.122, 4.03806, 0.74", "35.0228, -41.4959, 3.89076, 0.74", "35.2052, -42.5293, 3.65197, 0.44", "35.3064, -43.5056, 3.60069, 0.44", "35.3162, -44.0778, 3.61917, 0.66", "35.2617, -44.9393, 3.71908, 0.37", "35.1413, -45.738, 3.85358, 0.81", "34.8803, -46.9779, 4.03517, 0.15", "34.6914, -47.758, 4.13799, 0.22", "34.5107, -48.5102, 4.21923, 0.29", "34.4292, -48.869, 4.23401, 0.81", "34.2732, -49.6023, 4.20393, 0.81", "34.0736, -50.7138, 4.03508, 0.22", "33.989, -51.269, 3.90213, 0.22", "33.9514, -51.7896, 3.77541, 0.44", "33.9771, -52.4506, 3.65468, 0.88", "34.059, -53.0994, 3.57184, 0.29", "34.1872, -53.7796, 3.52899, 0.15", "34.2474, -54.1373, 3.55681, 0.15", "34.331, -54.7402, 3.62445, 0.15", "34.4285, -55.4172, 3.71714, 0.52", "34.5428, -56.133, 3.8403, 0.59", "34.7126, -57.0516, 4.03966, 0.52", "34.9156, -58.1114, 4.32831, 0.52", "35.0157, -58.7973, 4.52669, 0.52" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "21.8915, -6.91727, 5.05299, 0.44", "22.2163, -6.72391, 5.74445, 0.44", "22.4934, -6.58496, 6.33774, 0.44", "22.7017, -6.51798, 6.8007, 0.44", "23.0385, -6.46319, 7.59419, 0.52", "23.1943, -6.46652, 7.9722, 0.52", "23.4936, -6.51749, 8.66076, 0.81", "23.725, -6.61621, 9.13788, 0.81", "24.0469, -6.81724, 9.66903, 0.44", "24.3392, -7.03776, 10.0533, 0.44", "24.653, -7.29386, 10.3973, 0.44", "24.9728, -7.56324, 10.7221, 0.74", "25.2352, -7.78791, 10.965, 0.74", "25.7827, -8.21531, 11.4072, 0.44", "26.3579, -8.61002, 11.8245, 0.44", "26.81, -8.90689, 12.1265, 0.88", "27.3247, -9.23283, 12.4828, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-6.46104, 25.3284, -11.6369, 0.44", "-7.46169, 25.9489, -11.9508, 0.44", "-8.11111, 26.3329, -12.091, 0.44", "-8.6822, 26.6866, -12.185, 0.66", "-9.47475, 27.1791, -12.2473, 0.59", "-10.0853, 27.5665, -12.2486, 0.74", "-10.5342, 27.8604, -12.2044, 0.66", "-11.3309, 28.4021, -11.943, 0.66", "-11.8931, 28.7758, -11.6776, 0.52", "-12.5203, 29.148, -11.3476, 0.52", "-12.9097, 29.3333, -11.1504, 0.52", "-13.7221, 29.6285, -10.8181, 0.66", "-14.509, 29.8895, -10.5988, 0.66", "-15.1077, 30.0917, -10.5152, 0.59", "-15.8004, 30.3431, -10.4955, 0.52", "-16.6428, 30.7032, -10.6479, 0.52", "-17.4349, 31.0522, -10.9269, 0.66", "-18.2007, 31.3778, -11.2595, 0.74", "-18.6031, 31.5578, -11.4588, 0.74", "-19.323, 31.9078, -11.8146, 0.66", "-20.4085, 32.5045, -12.3053, 0.44", "-21.2409, 33.0079, -12.6537, 0.44", "-22.2596, 33.6647, -13.0438, 0.44", "-22.8327, 34.0334, -13.2318, 0.44", "-23.4221, 34.4222, -13.4547, 0.59", "-24.0233, 34.8418, -13.7548, 0.74", "-24.4684, 35.1586, -14.0112, 0.52", "-25.0613, 35.5678, -14.52, 0.44", "-25.6197, 35.8984, -15.1332, 0.44", "-26.5027, 36.3245, -16.1404, 0.44", "-27.3393, 36.6536, -17.1118, 0.44", "-27.9058, 36.852, -17.7678, 0.52", "-28.8673, 37.1575, -18.7915, 0.37", "-29.6198, 37.3898, -19.4805, 0.37", "-30.4353, 37.6809, -20.0472, 0.44", "-31.152, 37.9903, -20.2937, 0.37", "-31.6056, 38.2193, -20.3173, 0.66", "-32.3712, 38.6287, -20.2031, 0.66", "-33.2647, 39.0714, -19.943, 0.88", "-34.0619, 39.431, -19.6747, 0.88", "-34.6386, 39.6534, -19.469, 0.74", "-35.5255, 39.9779, -19.1441, 0.74", "-36.2624, 40.2226, -18.9027, 0.74", "-37.1858, 40.5044, -18.6805, 0.74", "-37.9865, 40.7159, -18.5556, 1.03", "-39.3057, 41.0194, -18.4054, 1.03" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.46104, 25.3284, -11.6369, 0.59", "-6.26049, 26.1044, -12.307, 0.59", "-6.00774, 26.9306, -13.0151, 0.59", "-5.6361, 28.0302, -13.9506, 0.59", "-5.34869, 28.886, -14.6835, 0.44", "-4.98558, 30.0102, -15.6462, 0.59", "-4.75269, 30.7736, -16.3085, 0.59", "-4.4657, 31.8761, -17.2997, 0.59", "-4.29384, 32.6096, -17.9462, 0.59", "-4.10305, 33.4219, -18.6539, 0.59", "-3.83481, 34.4375, -19.5621, 0.59", "-3.56484, 35.2732, -20.3708, 0.52", "-3.19339, 36.167, -21.339, 0.66", "-2.93174, 36.6595, -21.9544, 0.96", "-2.39753, 37.4653, -23.0721, 0.96", "-1.79394, 38.2115, -24.1816, 0.81", "-0.995466, 39.0258, -25.5146, 0.81", "-0.282435, 39.6362, -26.6011, 0.44", "0.362807, 40.1009, -27.5422, 0.44", "0.982919, 40.4962, -28.4281, 0.44", "1.60598, 40.8373, -29.2933, 0.44", "2.48233, 41.2397, -30.4136, 0.44", "3.12479, 41.4664, -31.1377, 0.59", "4.37775, 41.7805, -32.3912, 0.59", "5.0962, 41.9038, -32.993, 0.22", "6.05238, 41.9984, -33.7283, 0.22", "6.97517, 42.0261, -34.3751, 0.22", "7.93736, 42.0138, -34.9442, 0.37", "8.37948, 41.9959, -35.158, 0.37", "9.04455, 41.9551, -35.3403, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "96.6735, 13.1468, -4.6531, 0.22", "97.6289, 13.2897, -4.12032, 0.22", "98.8161, 13.6245, -3.67691, 0.29", "100.338, 14.0538, -3.10832, 0.37", "101.348, 14.3384, -2.73132, 0.15", "102.013, 14.5261, -2.48279, 0.37", "103.56, 14.9624, -1.90497, 0.29", "104.904, 15.4854, -1.55443, 0.29" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "96.6735, 13.1468, -4.6531, 0.22", "96.6044, 12.2159, -4.50256, 0.22", "96.531, 11.2281, -4.3428, 0.22", "96.492, 10.7036, -4.25797, 0.29", "96.4201, 9.73486, -4.10129, 0.15", "96.3829, 9.23434, -4.02034, 0.22" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "33.4779, -33.1332, -70.5423, 0.22", "33.8715, -32.1783, -70.2534, 0.22", "34.2928, -30.9662, -69.9478, 0.22", "34.689, -29.6541, -69.6752, 0.15", "34.9723, -28.6575, -69.4881, 0.15", "35.2553, -27.6619, -69.3012, 0.29", "35.4354, -27.028, -69.1822, 0.29", "35.5994, -26.2734, -69.0951, 0.22", "35.7304, -25.5269, -69.093, 0.66", "35.7581, -25.2842, -69.1013, 0.66" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "33.4779, -33.1332, -70.5423, 0.74", "33.0661, -33.4677, -70.9982, 0.74", "32.5385, -33.9168, -71.391, 0.44", "32.1418, -34.2972, -71.6104, 0.59", "31.6891, -34.7955, -71.8174, 0.96", "30.8321, -35.739, -72.2094, 0.22", "30.2542, -36.3751, -72.4736, 0.29", "29.766, -36.9606, -72.5889, 0.22", "29.3895, -37.431, -72.5829, 0.44", "29.0991, -37.8172, -72.5091, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "24.7614, 27.5019, -25.4374, 0.22", "23.9966, 28.2446, -25.6565, 0.22", "23.37, 28.8101, -25.8681, 0.22", "22.719, 29.3851, -26.0564, 0.29", "21.8098, 30.1979, -26.2549, 0.15", "20.8299, 31.047, -26.3842, 0.15", "20.2107, 31.5583, -26.4462, 0.15", "19.4717, 32.0994, -26.4701, 0.22", "18.5863, 32.6955, -26.4638, 0.22", "17.5511, 33.3296, -26.3864, 0.15", "16.5959, 33.9114, -26.2923, 0.15", "15.5995, 34.5087, -26.1728, 0.22", "14.8623, 34.9462, -26.0383, 0.15", "14.3458, 35.2249, -25.9281, 0.22", "13.1643, 35.7679, -25.7411, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "24.7614, 27.5019, -25.4374, 0.52", "25.6714, 27.7109, -26.1327, 0.52", "26.4072, 27.9888, -26.7292, 0.37", "27.1754, 28.3916, -27.4748, 0.37", "27.8404, 28.8043, -28.2301, 0.44", "28.2655, 29.1001, -28.7865, 0.44", "28.6832, 29.3996, -29.3849, 0.44", "29.0424, 29.728, -29.9532, 0.52", "29.5618, 30.2526, -30.8069, 0.59", "29.8881, 30.6329, -31.4288, 0.59", "30.1718, 30.9787, -32.053, 0.59", "30.5437, 31.3546, -32.8674, 0.52", "30.7877, 31.5303, -33.3672, 0.37", "31.2862, 31.7649, -34.1629, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "35.0157, -58.7973, 4.52669, 0.15", "35.5737, -59.5199, 3.58143, 0.15", "35.8165, -59.8344, 3.17, 0.52", "36.0861, -60.1834, 2.7133, 0.15", "36.3627, -60.5416, 2.24471, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "35.0157, -58.7973, 4.52669, 0.37", "35.2144, -59.0747, 4.82169, 0.37", "35.4407, -59.419, 5.19733, 0.44", "35.9804, -60.3547, 6.15362, 0.07", "36.2877, -60.9765, 6.76475, 0.07", "36.5215, -61.5872, 7.35125, 0.29", "36.6977, -62.3113, 8.03541, 0.22", "36.7087, -62.6905, 8.38097, 0.22", "36.6025, -63.1454, 8.75373, 0.59", "36.433, -63.5084, 9.02234, 0.59", "36.0911, -64.0038, 9.4141, 0.22", "35.4313, -64.7598, 10.0947, 0.22", "34.9914, -65.2234, 10.552, 0.29", "34.5772, -65.6972, 11.0553, 0.74", "34.5265, -65.7594, 11.1179, 0.74", "34.0106, -66.4387, 11.6836, 0.15", "33.5618, -67.0383, 12.031, 0.22", "33.0263, -67.6923, 12.1094, 0.44", "32.3955, -68.4468, 11.859, 1.11", "31.5805, -69.458, 11.2327, 0.88", "31.0883, -70.1184, 10.7212, 0.37", "30.6464, -70.7294, 10.1366, 0.59", "29.9394, -71.674, 9.05023, 0.22", "29.6633, -72.0221, 8.57818, 0.22", "29.539, -72.163, 8.35551, 0.29", "29.3088, -72.4137, 7.97649, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "27.3247, -9.23283, 12.4828, 0.37", "27.5571, -10.1667, 13.1371, 0.37", "27.8922, -11.1518, 13.9195, 0.22", "28.4429, -12.4158, 15.0946, 0.15", "28.6838, -12.8697, 15.574, 0.66", "29.1704, -13.654, 16.5071, 0.22", "29.7318, -14.4616, 17.5736, 0.22", "30.3613, -15.2182, 18.8033, 0.22", "30.9045, -15.8259, 19.934, 0.37", "31.404, -16.3702, 21.0354, 0.66", "32.0093, -17.0474, 22.4745, 0.88", "32.5609, -17.7065, 23.9141, 0.88", "33.1734, -18.4907, 25.6813, 0.44", "33.62, -19.1149, 27.1049, 0.44", "33.6712, -19.2093, 27.3158, 0.44", "33.7881, -19.5702, 28.0958, 0.44", "33.8115, -19.8119, 28.5858, 0.44", "33.8064, -20.0604, 29.0609, 0.44", "33.7798, -20.6777, 30.2454, 0.44", "33.8053, -21.3365, 31.5565, 0.59", "33.9115, -21.9864, 32.899, 0.74", "34.1249, -22.6588, 34.3553, 0.29", "34.3229, -23.0096, 35.1395, 0.74", "34.6143, -23.3575, 35.9361, 0.74", "35.2115, -23.9061, 37.202, 0.29", "35.7187, -24.3211, 38.1241, 1.03", "36.2336, -24.735, 38.9752, 1.11", "37.2764, -25.6865, 40.7385, 0.37", "37.9848, -26.5172, 42.1103, 0.52", "38.5592, -27.4123, 43.4802, 0.29", "38.8917, -28.048, 44.4438, 0.22", "39.14, -28.5679, 45.2482, 0.66", "39.6176, -29.6216, 46.9774, 0.29", "39.9508, -30.2964, 48.1708, 0.74", "40.4657, -31.2849, 50.0778, 0.29", "40.872, -32.0354, 51.6463, 0.15", "41.2548, -32.7303, 53.2305, 0.22", "41.6797, -33.5045, 55.167, 0.74", "42.1391, -34.4118, 57.6066, 0.15", "42.4234, -35.0436, 59.4841, 0.29", "42.6445, -35.6511, 61.4766, 0.29", "42.7221, -35.9777, 62.6791, 0.29", "42.7565, -36.29, 64.032, 0.29", "42.7415, -36.49, 65.0383, 0.29", "42.6833, -36.7179, 66.3365, 0.29", "42.6856, -36.947, 67.4288, 0.29", "42.8404, -37.4872, 69.129, 0.29", "42.9517, -37.7878, 69.7747, 0.29", "43.1042, -38.2131, 70.4782, 0.29", "43.2841, -38.9306, 71.5959, 0.29", "43.3304, -39.378, 72.314, 0.66", "43.2327, -40.118, 73.7673, 0.22", "43.0504, -40.5834, 74.9654, 0.22", "42.9081, -40.8031, 75.6848, 0.22", "42.3346, -41.3941, 78.1103, 0.59", "42.0263, -41.6325, 79.274, 0.81", "41.4532, -41.9981, 81.4685, 0.22", "41.1431, -42.1563, 82.7477, 0.22", "40.9274, -42.2731, 83.874, 0.22", "40.6842, -42.4369, 85.6795, 0.74", "40.6, -42.5232, 86.7686, 0.29", "40.5287, -42.6485, 88.5691, 0.29", "40.5122, -42.6993, 89.7267, 0.29", "40.4927, -42.7206, 91.4988, 0.29", "40.475, -42.6831, 93.22, 0.29", "40.4449, -42.5425, 96.2098, 0.29", "40.4146, -42.4346, 98.1693, 0.29", "40.3871, -42.3356, 100.112, 0.29", "40.3898, -42.2672, 101.8, 0.29", "40.4068, -42.1934, 103.511, 0.29", "40.4443, -42.1316, 104.942, 0.29", "40.5149, -42.0749, 106.229, 0.29", "40.6704, -41.9903, 108.172, 0.29", "40.7747, -41.9594, 109.075, 0.29" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "27.3247, -9.23283, 12.4828, 0.66", "27.7605, -8.94824, 13.565, 0.66", "28.3273, -8.52044, 14.947, 0.22", "28.6817, -8.27099, 15.7342, 0.22", "28.8229, -8.18178, 16.0073, 0.22", "29.213, -7.95156, 16.6393, 0.22", "29.5294, -7.75046, 17.1081, 0.22", "29.6961, -7.62957, 17.3219, 0.22", "30.1566, -7.31293, 17.8669, 0.22", "30.5243, -7.10057, 18.258, 0.29", "31.192, -6.83417, 18.9424, 0.52", "31.8844, -6.69851, 19.6347, 0.22", "32.4443, -6.68489, 20.1981, 0.37", "33.2067, -6.76444, 20.965, 0.37", "33.7401, -6.89073, 21.4884, 0.52", "34.5532, -7.21206, 22.2171, 0.88", "35.5184, -7.74194, 23.0281, 0.22", "36.1859, -8.17494, 23.5396, 0.22", "36.5745, -8.44274, 23.8168, 0.52", "36.9456, -8.69559, 24.0591, 0.52", "37.7648, -9.25046, 24.5875, 0.15", "38.4866, -9.70508, 25.0578, 0.15", "38.9538, -9.98423, 25.335, 0.15", "39.311, -10.1701, 25.5448, 0.66", "39.7983, -10.3849, 25.853, 0.74", "41.0167, -10.7516, 26.6704, 0.15", "41.8208, -10.8707, 27.2357, 0.15", "42.5481, -10.8704, 27.7584, 0.15", "43.3401, -10.761, 28.396, 0.37", "43.9519, -10.5881, 28.9636, 0.37", "44.7095, -10.2205, 29.7909, 0.15", "45.2135, -9.88523, 30.5212, 0.22", "45.6949, -9.5501, 31.399, 0.22", "45.9469, -9.39075, 32.0018, 0.22", "46.2001, -9.27502, 32.6581, 0.22", "46.475, -9.21015, 33.3874, 0.37", "47.227, -9.14975, 35.4869, 0.37", "47.6404, -9.1506, 36.6532, 0.52", "48.2126, -9.16978, 38.2836, 0.66", "48.5571, -9.17943, 39.3004, 0.15", "49.0826, -9.19486, 40.967, 0.15", "49.5711, -9.22137, 42.555, 0.22", "49.8181, -9.22006, 43.3298, 0.29", "50.1128, -9.20698, 44.3042, 0.29", "50.2876, -9.1939, 44.9322, 0.29", "50.7158, -9.16048, 46.9029, 0.29", "50.9761, -9.15619, 48.1928, 0.29", "51.2095, -9.18025, 49.3577, 0.29", "51.5401, -9.23768, 50.9539, 0.29", "51.7449, -9.28666, 51.8549, 0.29", "52.1316, -9.36575, 53.4383, 0.29" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-39.3057, 41.0194, -18.4054, 0.44", "-39.6962, 40.9118, -20.9937, 0.44", "-39.8795, 40.8613, -22.2086, 0.37", "-40.1236, 40.7941, -23.8263, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-39.3057, 41.0194, -18.4054, 0.66", "-40.3465, 41.0082, -17.5384, 0.66", "-42.0933, 41.0096, -16.2727, 0.66", "-43.9524, 40.9373, -15.1464, 0.66", "-45.8947, 40.8167, -14.1803, 0.66", "-48.1854, 40.661, -13.2178, 0.59", "-49.5561, 40.5686, -12.745, 0.59", "-51.0085, 40.4639, -12.5301, 0.29", "-52.8144, 40.2721, -12.7083, 0.22", "-53.7318, 40.1296, -13.0277, 0.37", "-54.1707, 40.0301, -13.2474, 0.37", "-54.983, 39.8018, -13.7198, 0.37", "-56.5165, 39.3146, -14.5632, 0.22", "-58.1653, 38.8075, -15.4417, 0.22", "-59.5013, 38.4231, -16.1107, 0.22", "-60.4728, 38.1413, -16.5559, 0.66", "-61.5606, 37.8565, -16.988, 0.66", "-62.5438, 37.6537, -17.3168, 0.15", "-64.2063, 37.4068, -17.8126, 0.15", "-65.6419, 37.2694, -18.2246, 0.15", "-66.7724, 37.1817, -18.5088, 0.15", "-68.9591, 37.0568, -19.0658, 0.15", "-70.5465, 36.9909, -19.4409, 0.29", "-72.2235, 36.9565, -19.8261, 0.15", "-73.4556, 36.9453, -20.1324, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "31.2862, 31.7649, -34.1629, 0.22", "31.3305, 32.8602, -34.2053, 0.22", "31.3674, 33.7721, -34.2406, 0.29", "31.3792, 34.0629, -34.2519, 0.29", "31.4072, 34.7556, -34.2787, 0.15", "31.4537, 35.9052, -34.3232, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "31.2862, 31.7649, -34.1629, 0.29", "32.5177, 31.2657, -35.1523, 0.29", "32.7619, 31.1667, -35.3485, 0.29", "33.7892, 30.7503, -36.1739, 0.29" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "33.7892, 30.7503, -36.1739, 0.22", "33.8628, 31.0076, -36.3192, 0.22", "33.9788, 31.7363, -36.5828, 0.22", "33.9935, 31.9261, -36.6332, 0.22", "33.9748, 32.3448, -36.6785, 0.22", "33.87, 32.8925, -36.6425, 0.15", "33.6561, 33.5257, -36.5031, 0.15", "33.5302, 33.7512, -36.3962, 0.15", "33.37, 34.0085, -36.2521, 0.59", "32.9519, 34.6139, -35.8713, 0.88", "32.4538, 35.2418, -35.4194, 0.88", "31.8967, 35.8572, -34.9105, 0.52", "31.0914, 36.6658, -34.1667, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "33.7892, 30.7503, -36.1739, 0.22", "34.3375, 30.7896, -35.8017, 0.22", "35.3727, 30.6561, -35.7883, 0.22", "35.992, 30.5445, -35.8832, 0.22", "36.6606, 30.4247, -36.0208, 0.22", "37.0943, 30.3653, -36.1328, 0.29", "38.1922, 30.2149, -36.4164, 0.29", "39.8903, 29.9435, -36.9857, 0.15", "40.6797, 29.8033, -37.3022, 0.15", "41.396, 29.6706, -37.6354, 0.22", "42.4581, 29.4894, -38.1858, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_35", "dend_12", "dend_3", "dend_0", "dend_57", "dend_56", "dend_50", "dend_49", "dend_45", "dend_36", "dend_22", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "dend_63", "dend_58", "dend_52", "dend_51", "dend_47", "dend_46", "dend_40", "dend_37", "dend_32", "dend_23", "dend_15", "dend_14", "dend_7", "dend_6", "dend_65", "dend_64", "dend_60", "dend_59", "dend_54", "dend_53", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_19", "dend_16", "dend_9", "dend_8", "dend_62", "dend_61", "dend_44", "dend_43", "dend_31", "dend_26", "dend_21", "dend_20", "dend_18", "dend_17", "dend_11", "dend_10", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_48", "dend_35", "dend_12", "dend_3", "dend_0", "dend_57", "dend_56", "dend_50", "dend_49", "dend_45", "dend_36", "dend_22", "dend_13", "dend_5", "dend_4", "dend_2", "dend_1", "dend_63", "dend_58", "dend_52", "dend_51", "dend_47", "dend_46", "dend_40", "dend_37", "dend_32", "dend_23", "dend_15", "dend_14", "dend_7", "dend_6", "dend_65", "dend_64", "dend_60", "dend_59", "dend_54", "dend_53", "dend_42", "dend_41", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_19", "dend_16", "dend_9", "dend_8", "dend_62", "dend_61", "dend_44", "dend_43", "dend_31", "dend_26", "dend_21", "dend_20", "dend_18", "dend_17", "dend_11", "dend_10", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L1_NGCDA_3d9c976fde_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_35
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_22
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.450000070853549)
    connect dend_48(0), soma_0(0.450000070853549)
    connect dend_35(0), soma_0(0.450000070853549)
    connect dend_12(0), soma_0(0.450000070853549)
    connect dend_3(0), soma_0(0.450000070853549)
    connect dend_0(0), soma_0(0.450000070853549)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 4.62286, -6.48181, 0.0, 4.1193 ) }
    soma_0 { pt3dadd( 4.07189, -5.77432, 0.0, 7.27496 ) }
    soma_0 { pt3dadd( 3.52092, -5.06683, 0.0, 9.50146 ) }
    soma_0 { pt3dadd( 2.96995, -4.35935, 0.0, 10.7052 ) }
    soma_0 { pt3dadd( 2.41898, -3.65186, 0.0, 11.3464 ) }
    soma_0 { pt3dadd( 1.86801, -2.94437, 0.0, 11.833 ) }
    soma_0 { pt3dadd( 1.31704, -2.23689, 0.0, 12.4478 ) }
    soma_0 { pt3dadd( 0.766068, -1.5294, 0.0, 13.1823 ) }
    soma_0 { pt3dadd( 0.215097, -0.821912, 0.0, 13.6629 ) }
    soma_0 { pt3dadd( -0.335874, -0.114425, 0.0, 14.0775 ) }
    soma_0 { pt3dadd( -0.886844, 0.593062, 0.0, 14.2269 ) }
    soma_0 { pt3dadd( -1.43781, 1.30055, 0.0, 14.2753 ) }
    soma_0 { pt3dadd( -1.98879, 2.00804, 0.0, 14.3053 ) }
    soma_0 { pt3dadd( -2.53976, 2.71552, 0.0, 14.0514 ) }
    soma_0 { pt3dadd( -3.09073, 3.42301, 0.0, 13.4254 ) }
    soma_0 { pt3dadd( -3.6417, 4.1305, 0.0, 12.6418 ) }
    soma_0 { pt3dadd( -4.19267, 4.83798, 0.0, 11.7022 ) }
    soma_0 { pt3dadd( -4.74364, 5.54547, 0.0, 10.5709 ) }
    soma_0 { pt3dadd( -5.29461, 6.25296, 0.0, 9.14082 ) }
    soma_0 { pt3dadd( -5.84558, 6.96044, 0.0, 6.8148 ) }
    soma_0 { pt3dadd( -6.39655, 7.66793, 0.0, 3.66661 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 3.136, 6.49739, 8.6, 1.55 ) }
    dend_55 { pt3dadd( 3.7051, 7.13222, 9.20646, 1.55 ) }
    dend_55 { pt3dadd( 4.38002, 7.85492, 10.1492, 1.25 ) }
    dend_55 { pt3dadd( 4.90446, 8.41651, 10.8817, 1.25 ) }
    dend_55 { pt3dadd( 5.56252, 9.12116, 11.8009, 1.4 ) }
    dend_55 { pt3dadd( 6.0847, 9.68032, 12.5303, 1.4 ) }
    dend_55 { pt3dadd( 6.88483, 10.5371, 13.6479, 1.77 ) }
    dend_55 { pt3dadd( 7.78984, 11.4136, 14.9119, 2.43 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 29/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.115998, 8.06715, -0.4, 0.59 ) }
    dend_48 { pt3dadd( 0.239779, 8.45579, -0.472797, 0.59 ) }
    dend_48 { pt3dadd( 0.496922, 9.26315, -0.624027, 0.66 ) }
    dend_48 { pt3dadd( 0.881349, 10.4702, -0.850116, 1.03 ) }
    dend_48 { pt3dadd( 1.18836, 11.4341, -1.03067, 1.11 ) }
    dend_48 { pt3dadd( 1.56741, 12.6242, -1.2536, 0.88 ) }
    dend_48 { pt3dadd( 2.03388, 14.0889, -1.52794, 1.4 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 36/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 1.626, -7.86435, -0.710001, 3.83 ) }
    dend_35 { pt3dadd( 1.626, -7.86435, -0.710001, 3.83 ) }
    dend_35 { pt3dadd( 1.75164, -9.677, -1.15814, 3.39 ) }
    dend_35 { pt3dadd( 1.84082, -10.9637, -1.47626, 3.17 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 40/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.54599, -2.6676, -0.210001, 1.77 ) }
    dend_12 { pt3dadd( 7.54599, -2.6676, -0.210001, 1.77 ) }
    dend_12 { pt3dadd( 8.31257, -2.71517, -0.349378, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 43/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.06401, 9.02265, 0.18, 1.55 ) }
    dend_3 { pt3dadd( -3.06953, 9.48268, 0.255917, 1.55 ) }
    dend_3 { pt3dadd( -3.10014, 10.683, 0.543096, 1.33 ) }
    dend_3 { pt3dadd( -3.13304, 11.9731, 0.85176, 1.33 ) }
    dend_3 { pt3dadd( -3.16256, 13.1305, 1.12869, 1.55 ) }
    dend_3 { pt3dadd( -3.18662, 14.074, 1.35441, 1.55 ) }
    dend_3 { pt3dadd( -3.21333, 15.1209, 1.6049, 1.62 ) }
    dend_3 { pt3dadd( -3.22416, 16.5258, 1.9397, 1.62 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.17401, -1.6146, -2.6, 0.96 ) }
    dend_0 { pt3dadd( -8.71168, -1.47682, -2.60104, 0.96 ) }
    dend_0 { pt3dadd( -9.44961, -1.30597, -2.63312, 0.96 ) }
    dend_0 { pt3dadd( -10.1825, -1.16548, -2.70167, 0.81 ) }
    dend_0 { pt3dadd( -11.2414, -1.03241, -2.8481, 1.11 ) }
    dend_0 { pt3dadd( -12.4588, -0.979252, -3.07129, 0.96 ) }
    dend_0 { pt3dadd( -13.6564, -1.02586, -3.31602, 0.88 ) }
    dend_0 { pt3dadd( -14.7458, -1.20252, -3.57331, 1.33 ) }
    dend_0 { pt3dadd( -15.7101, -1.49271, -3.82972, 1.33 ) }
    dend_0 { pt3dadd( -16.8309, -2.04138, -4.1387, 1.03 ) }
    dend_0 { pt3dadd( -17.8735, -2.78597, -4.42336, 0.81 ) }
    dend_0 { pt3dadd( -18.6452, -3.4985, -4.63588, 0.66 ) }
    dend_0 { pt3dadd( -19.3251, -4.22024, -4.84295, 0.88 ) }
    dend_0 { pt3dadd( -19.8133, -4.74569, -4.99653, 0.96 ) }
    dend_0 { pt3dadd( -20.5564, -5.48213, -5.22538, 0.66 ) }
    dend_0 { pt3dadd( -21.232, -5.98798, -5.44392, 0.66 ) }
    dend_0 { pt3dadd( -22.069, -6.32385, -5.75628, 0.52 ) }
    dend_0 { pt3dadd( -23.0479, -6.48421, -6.19928, 0.52 ) }
    dend_0 { pt3dadd( -23.937, -6.52758, -6.58428, 0.88 ) }
    dend_0 { pt3dadd( -24.8131, -6.52166, -6.94364, 0.96 ) }
    dend_0 { pt3dadd( -26.007, -6.46202, -7.40484, 0.81 ) }
    dend_0 { pt3dadd( -27.1978, -6.38737, -7.81748, 0.59 ) }
    dend_0 { pt3dadd( -27.9697, -6.37455, -8.02126, 0.59 ) }
    dend_0 { pt3dadd( -29.2219, -6.40267, -8.28692, 0.74 ) }
    dend_0 { pt3dadd( -30.0106, -6.4706, -8.43685, 1.03 ) }
    dend_0 { pt3dadd( -30.4191, -6.53498, -8.50733, 1.03 ) }
    dend_0 { pt3dadd( -31.5757, -6.8185, -8.62863, 0.88 ) }
    dend_0 { pt3dadd( -32.9254, -7.18921, -8.65825, 1.03 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -6.39655, 7.66793, 0.0, 0.794211 ) }
    axon_0 { pt3dadd( -15.613, 19.5025, 0.0, 0.794211 ) }
    axon_0 { pt3dadd( -24.8294, 31.3371, 0.0, 0.794211 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 82/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 7.78984, 11.4136, 14.9119, 0.96 ) }
    dend_57 { pt3dadd( 8.65517, 11.3563, 15.1838, 0.96 ) }
    dend_57 { pt3dadd( 9.55064, 11.2969, 15.4652, 1.03 ) }
    dend_57 { pt3dadd( 10.7422, 11.218, 15.8396, 0.96 ) }
    dend_57 { pt3dadd( 11.9904, 11.1353, 16.2319, 1.03 ) }
    dend_57 { pt3dadd( 12.8859, 11.076, 16.5133, 0.96 ) }
    dend_57 { pt3dadd( 14.1112, 10.9949, 16.8983, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.78984, 11.4136, 14.9119, 0.52 ) }
    dend_56 { pt3dadd( 7.41576, 12.7859, 14.3284, 0.52 ) }
    dend_56 { pt3dadd( 7.09945, 13.8107, 13.8862, 0.96 ) }
    dend_56 { pt3dadd( 6.79721, 14.8388, 13.4397, 0.88 ) }
    dend_56 { pt3dadd( 6.49605, 16.0466, 12.8849, 0.59 ) }
    dend_56 { pt3dadd( 6.22756, 17.319, 12.2703, 0.52 ) }
    dend_56 { pt3dadd( 6.06537, 18.3015, 11.7778, 0.44 ) }
    dend_56 { pt3dadd( 6.01689, 19.0365, 11.3524, 0.44 ) }
    dend_56 { pt3dadd( 6.04386, 19.8205, 10.894, 0.44 ) }
    dend_56 { pt3dadd( 6.13401, 20.5669, 10.4605, 0.44 ) }
    dend_56 { pt3dadd( 6.20896, 20.8852, 10.2861, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_56 { pt3dadd( 6.44112, 21.5421, 9.96212, 0.44 ) }
    dend_56 { pt3dadd( 6.8246, 22.3789, 9.50146, 1.03 ) }
    dend_56 { pt3dadd( 7.179, 23.167, 8.98518, 0.59 ) }
    dend_56 { pt3dadd( 7.45342, 23.9435, 8.39213, 0.59 ) }
    dend_56 { pt3dadd( 7.72946, 25.1261, 7.46027, 0.96 ) }
    dend_56 { pt3dadd( 7.81522, 25.7802, 6.95598, 1.18 ) }
    dend_56 { pt3dadd( 7.86846, 26.8833, 6.17469, 1.25 ) }
    dend_56 { pt3dadd( 7.85343, 28.4502, 5.18283, 0.44 ) }
    dend_56 { pt3dadd( 7.75263, 29.886, 4.40838, 0.44 ) }
    dend_56 { pt3dadd( 7.63739, 30.8524, 4.02036, 0.59 ) }
    dend_56 { pt3dadd( 7.45111, 32.0621, 3.68009, 0.59 ) }
    dend_56 { pt3dadd( 7.22041, 33.7297, 3.42061, 0.59 ) }
    dend_56 { pt3dadd( 7.14552, 34.9186, 3.472, 0.59 ) }
    dend_56 { pt3dadd( 7.18598, 35.7325, 3.68361, 0.59 ) }
    dend_56 { pt3dadd( 7.35075, 36.7538, 4.11404, 0.74 ) }
    dend_56 { pt3dadd( 7.5561, 37.4906, 4.50925, 0.29 ) }
    dend_56 { pt3dadd( 8.10947, 38.7341, 5.41112, 0.29 ) }
    dend_56 { pt3dadd( 8.69902, 39.7536, 6.34404, 0.22 ) }
    dend_56 { pt3dadd( 9.14424, 40.4332, 7.02016, 0.22 ) }
    dend_56 { pt3dadd( 9.41677, 40.8159, 7.41302, 0.22 ) }
    dend_56 { pt3dadd( 9.72266, 41.2215, 7.85085, 0.59 ) }
    dend_56 { pt3dadd( 10.4586, 42.1579, 8.9168, 0.22 ) }
    dend_56 { pt3dadd( 11.041, 42.9358, 9.79698, 0.22 ) }
    dend_56 { pt3dadd( 11.3323, 43.3255, 10.2403, 0.66 ) }
    dend_56 { pt3dadd( 11.9777, 44.1465, 11.1227, 0.52 ) }
    dend_56 { pt3dadd( 12.6448, 44.9373, 11.9468, 0.29 ) }
    dend_56 { pt3dadd( 13.5707, 45.9088, 12.8666, 0.29 ) }
    dend_56 { pt3dadd( 14.1784, 46.4311, 13.2406, 0.29 ) }
    dend_56 { pt3dadd( 14.9404, 46.8871, 13.3939, 0.37 ) }
    dend_56 { pt3dadd( 15.935, 47.3142, 13.3079, 0.81 ) }
    dend_56 { pt3dadd( 16.7181, 47.5613, 13.0649, 0.81 ) }
    dend_56 { pt3dadd( 18.104, 47.9098, 12.4959, 0.44 ) }
    dend_56 { pt3dadd( 19.4929, 48.2035, 11.8288, 0.29 ) }
    dend_56 { pt3dadd( 20.8293, 48.4299, 11.1523, 0.37 ) }
    dend_56 { pt3dadd( 21.8525, 48.5524, 10.6404, 0.59 ) }
    dend_56 { pt3dadd( 23.1415, 48.6678, 10.0283, 0.81 ) }
    dend_56 { pt3dadd( 24.3281, 48.7684, 9.45461, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 37/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 2.03388, 14.0889, -1.52794, 0.44 ) }
    dend_50 { pt3dadd( 1.42133, 13.5084, -5.38449, 0.44 ) }
    dend_50 { pt3dadd( 1.26614, 13.3225, -6.69591, 0.44 ) }
    dend_50 { pt3dadd( 1.14558, 13.1781, -7.93917, 0.44 ) }
    dend_50 { pt3dadd( 0.908649, 12.9992, -10.3774, 0.44 ) }
    dend_50 { pt3dadd( 0.662578, 12.9053, -12.7415, 0.44 ) }
    dend_50 { pt3dadd( 0.45689, 12.8817, -14.304, 0.44 ) }
    dend_50 { pt3dadd( 0.278899, 12.916, -15.5633, 0.44 ) }
    dend_50 { pt3dadd( -0.0979472, 13.1735, -18.0279, 0.44 ) }
    dend_50 { pt3dadd( -0.385866, 13.461, -19.5718, 0.44 ) }
    dend_50 { pt3dadd( -0.782033, 13.8655, -21.0324, 0.44 ) }
    dend_50 { pt3dadd( -1.41488, 14.4629, -22.729, 1.03 ) }
    dend_50 { pt3dadd( -2.18784, 15.0983, -24.3051, 0.66 ) }
    dend_50 { pt3dadd( -3.01973, 15.7634, -25.8385, 0.88 ) }
    dend_50 { pt3dadd( -3.69679, 16.2913, -26.9485, 1.18 ) }
    dend_50 { pt3dadd( -4.8631, 17.1599, -28.7302, 0.81 ) }
    dend_50 { pt3dadd( -5.74252, 17.8217, -29.9493, 0.52 ) }
    dend_50 { pt3dadd( -6.51675, 18.4096, -30.9175, 0.52 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.03388, 14.0889, -1.52794, 0.44 ) }
    dend_49 { pt3dadd( 2.62371, 15.3078, -1.29613, 0.44 ) }
    dend_49 { pt3dadd( 2.80773, 16.0615, -0.991278, 0.66 ) }
    dend_49 { pt3dadd( 2.81544, 16.669, -0.60143, 0.66 ) }
    dend_49 { pt3dadd( 2.77614, 17.5614, -0.0427158, 0.52 ) }
    dend_49 { pt3dadd( 2.78118, 18.2089, 0.314512, 0.66 ) }
    dend_49 { pt3dadd( 2.85997, 19.331, 0.879373, 0.66 ) }
    dend_49 { pt3dadd( 2.89542, 20.4577, 1.43719, 0.59 ) }
    dend_49 { pt3dadd( 2.96649, 21.226, 1.79907, 0.37 ) }
    dend_49 { pt3dadd( 3.17519, 22.2286, 2.21495, 0.37 ) }
    dend_49 { pt3dadd( 3.48679, 23.2346, 2.57998, 0.59 ) }
    dend_49 { pt3dadd( 3.71804, 23.8171, 2.7936, 0.59 ) }
    dend_49 { pt3dadd( 4.02119, 24.4968, 3.11351, 0.59 ) }
    dend_49 { pt3dadd( 4.26774, 25.0457, 3.43944, 0.66 ) }
    dend_49 { pt3dadd( 4.44007, 25.5002, 3.77111, 0.52 ) }
    dend_49 { pt3dadd( 4.63705, 26.1479, 4.30925, 0.52 ) }
    dend_49 { pt3dadd( 4.9506, 27.2743, 5.3256, 0.88 ) }
    dend_49 { pt3dadd( 5.27681, 28.3645, 6.31437, 0.88 ) }
    dend_49 { pt3dadd( 5.36556, 28.6507, 6.57451, 0.88 ) }
    dend_49 { pt3dadd( 5.63654, 29.4476, 7.30289, 0.59 ) }
    dend_49 { pt3dadd( 5.86505, 30.085, 7.86538, 0.44 ) }
    dend_49 { pt3dadd( 6.35725, 31.1563, 8.65628, 0.44 ) }
    dend_49 { pt3dadd( 6.61452, 31.6384, 8.98181, 0.81 ) }
    dend_49 { pt3dadd( 7.00291, 32.3086, 9.46827, 0.66 ) }
    dend_49 { pt3dadd( 7.55536, 33.2475, 10.2416, 0.44 ) }
    dend_49 { pt3dadd( 7.90643, 33.9091, 10.9105, 0.44 ) }
    dend_49 { pt3dadd( 8.3405, 34.8983, 12.0329, 0.37 ) }
    dend_49 { pt3dadd( 8.61451, 35.8164, 13.1069, 0.37 ) }
    dend_49 { pt3dadd( 8.72143, 36.384, 13.7912, 0.81 ) }
    dend_49 { pt3dadd( 8.76787, 36.7922, 14.2877, 0.37 ) }
    dend_49 { pt3dadd( 8.807, 37.7521, 15.4184, 0.37 ) }
    dend_49 { pt3dadd( 8.8046, 38.0074, 15.7004, 0.37 ) }
    dend_49 { pt3dadd( 8.78596, 38.507, 16.2536, 0.44 ) }
    dend_49 { pt3dadd( 8.81827, 38.995, 16.76, 0.22 ) }
    dend_49 { pt3dadd( 8.90486, 39.5073, 17.3311, 0.44 ) }
    dend_49 { pt3dadd( 8.99414, 39.9061, 17.8225, 0.66 ) }
    dend_49 { pt3dadd( 9.09444, 40.3178, 18.3561, 0.52 ) }
    dend_49 { pt3dadd( 9.27795, 41.1232, 19.468, 0.37 ) }
    dend_49 { pt3dadd( 9.47796, 41.9196, 20.616, 0.22 ) }
    dend_49 { pt3dadd( 9.63219, 42.4741, 21.4911, 0.59 ) }
    dend_49 { pt3dadd( 9.82029, 42.9899, 22.3207, 0.59 ) }
    dend_49 { pt3dadd( 10.0826, 43.5338, 23.2628, 0.59 ) }
    dend_49 { pt3dadd( 10.238, 43.7591, 23.684, 0.59 ) }
    dend_49 { pt3dadd( 10.4367, 43.9332, 24.0203, 0.44 ) }
    dend_49 { pt3dadd( 11.2953, 44.2464, 24.7833, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_49 { pt3dadd( 12.5729, 44.3852, 25.472, 0.22 ) }
    dend_49 { pt3dadd( 13.1868, 44.3965, 25.7175, 0.22 ) }
    dend_49 { pt3dadd( 13.4782, 44.3895, 25.8333, 0.22 ) }
    dend_49 { pt3dadd( 14.1687, 44.3678, 26.1718, 0.66 ) }
    dend_49 { pt3dadd( 15.0418, 44.3739, 26.7146, 0.37 ) }
    dend_49 { pt3dadd( 15.6871, 44.4136, 27.1945, 0.37 ) }
    dend_49 { pt3dadd( 16.4715, 44.5003, 27.8982, 0.52 ) }
    dend_49 { pt3dadd( 17.2915, 44.6095, 28.6544, 0.22 ) }
    dend_49 { pt3dadd( 18.0608, 44.713, 29.4386, 0.81 ) }
    dend_49 { pt3dadd( 18.8166, 44.81, 30.3259, 0.59 ) }
    dend_49 { pt3dadd( 19.5354, 44.8255, 31.2434, 0.15 ) }
    dend_49 { pt3dadd( 19.7374, 44.809, 31.5264, 0.66 ) }
    dend_49 { pt3dadd( 20.5606, 44.6455, 32.717, 0.22 ) }
    dend_49 { pt3dadd( 21.3286, 44.3982, 33.7317, 0.74 ) }
    dend_49 { pt3dadd( 21.8441, 44.1702, 34.4025, 1.18 ) }
    dend_49 { pt3dadd( 22.5724, 43.7392, 35.5011, 0.07 ) }
    dend_49 { pt3dadd( 23.1074, 43.3721, 36.3615, 0.07 ) }
    dend_49 { pt3dadd( 23.3799, 43.1693, 36.8273, 0.66 ) }
    dend_49 { pt3dadd( 23.7395, 42.8617, 37.51, 1.11 ) }
    dend_49 { pt3dadd( 24.3757, 42.3048, 38.6283, 0.66 ) }
    dend_49 { pt3dadd( 25.1006, 41.7062, 39.904, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_35 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 1.84082, -10.9637, -1.47626, 2.43 ) }
    dend_45 { pt3dadd( 1.47029, -11.313, -1.34884, 2.43 ) }
    dend_45 { pt3dadd( 0.637379, -11.9315, -0.966298, 1.99 ) }
    dend_45 { pt3dadd( -0.229713, -12.4528, -0.47706, 1.62 ) }
    dend_45 { pt3dadd( -0.898276, -12.7962, -0.115061, 0.81 ) }
    dend_45 { pt3dadd( -1.58435, -13.1245, 0.198499, 0.88 ) }
    dend_45 { pt3dadd( -2.21167, -13.4011, 0.455348, 1.11 ) }
    dend_45 { pt3dadd( -3.2014, -13.7534, 0.809779, 1.11 ) }
    dend_45 { pt3dadd( -4.13419, -14.008, 1.04699, 0.81 ) }
    dend_45 { pt3dadd( -4.96574, -14.2006, 1.07251, 0.74 ) }
    dend_45 { pt3dadd( -5.85863, -14.4641, 0.637793, 0.88 ) }
    dend_45 { pt3dadd( -6.37842, -14.7139, 0.012679, 0.52 ) }
    dend_45 { pt3dadd( -6.77077, -15.0107, -0.806521, 0.52 ) }
    dend_45 { pt3dadd( -7.07563, -15.3448, -1.70755, 0.66 ) }
    dend_45 { pt3dadd( -7.3446, -15.7135, -2.75001, 0.66 ) }
    dend_45 { pt3dadd( -7.56153, -16.1386, -3.96245, 0.81 ) }
    dend_45 { pt3dadd( -7.63421, -16.3614, -4.6047, 0.66 ) }
    dend_45 { pt3dadd( -7.69477, -16.711, -5.60271, 0.74 ) }
    dend_45 { pt3dadd( -7.73292, -17.0289, -6.39806, 0.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 40/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.84082, -10.9637, -1.47626, 0.96 ) }
    dend_36 { pt3dadd( 3.06062, -12.3639, -0.807348, 0.96 ) }
    dend_36 { pt3dadd( 3.98728, -13.5243, -0.365712, 1.25 ) }
    dend_36 { pt3dadd( 4.93805, -14.7865, -0.0603801, 1.62 ) }
    dend_36 { pt3dadd( 5.8407, -16.0439, 0.0568244, 0.88 ) }
    dend_36 { pt3dadd( 6.83424, -17.4635, -0.0952667, 0.88 ) }
    dend_36 { pt3dadd( 7.53843, -18.4559, -0.39239, 0.88 ) }
    dend_36 { pt3dadd( 8.48911, -19.7819, -1.30102, 0.88 ) }
    dend_36 { pt3dadd( 9.21892, -20.7726, -2.5166, 0.88 ) }
    dend_36 { pt3dadd( 9.65364, -21.328, -3.66328, 0.88 ) }
    dend_36 { pt3dadd( 10.1331, -21.91, -5.38728, 0.74 ) }
    dend_36 { pt3dadd( 10.3885, -22.1725, -6.46253, 0.74 ) }
    dend_36 { pt3dadd( 10.5524, -22.2902, -7.15613, 0.74 ) }
    dend_36 { pt3dadd( 10.7632, -22.3645, -7.99012, 0.74 ) }
    dend_36 { pt3dadd( 11.0293, -22.3806, -8.9421, 0.74 ) }
    dend_36 { pt3dadd( 11.2298, -22.2933, -9.72132, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.31257, -2.71517, -0.349378, 0.66 ) }
    dend_22 { pt3dadd( 8.94054, -2.49919, -1.04761, 0.66 ) }
    dend_22 { pt3dadd( 9.85235, -2.23861, -2.05552, 0.52 ) }
    dend_22 { pt3dadd( 10.5955, -2.01103, -2.87859, 0.66 ) }
    dend_22 { pt3dadd( 11.2388, -1.76605, -3.59879, 0.81 ) }
    dend_22 { pt3dadd( 11.9838, -1.42531, -4.47113, 1.03 ) }
    dend_22 { pt3dadd( 12.7982, -0.98277, -5.45755, 1.25 ) }
    dend_22 { pt3dadd( 13.3445, -0.667891, -6.13738, 1.03 ) }
    dend_22 { pt3dadd( 14.0592, -0.233743, -7.04349, 1.18 ) }
    dend_22 { pt3dadd( 14.7712, 0.240023, -7.96759, 1.03 ) }
    dend_22 { pt3dadd( 15.3615, 0.717308, -8.78007, 1.18 ) }
    dend_22 { pt3dadd( 15.8522, 1.23175, -9.4547, 1.18 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.31257, -2.71517, -0.349378, 0.74 ) }
    dend_13 { pt3dadd( 9.29926, -2.50571, -0.168263, 0.74 ) }
    dend_13 { pt3dadd( 10.4252, -2.23266, -0.0133521, 0.66 ) }
    dend_13 { pt3dadd( 11.3152, -2.03872, 0.100935, 0.88 ) }
    dend_13 { pt3dadd( 12.1641, -1.9028, 0.242889, 0.96 ) }
    dend_13 { pt3dadd( 13.2262, -1.82444, 0.458197, 0.81 ) }
    dend_13 { pt3dadd( 14.0211, -1.83194, 0.644825, 0.74 ) }
    dend_13 { pt3dadd( 15.2107, -1.93744, 0.976991, 0.96 ) }
    dend_13 { pt3dadd( 16.2476, -2.15368, 1.32336, 0.96 ) }
    dend_13 { pt3dadd( 17.2886, -2.52055, 1.75033, 0.81 ) }
    dend_13 { pt3dadd( 18.3815, -3.024, 2.23982, 0.66 ) }
    dend_13 { pt3dadd( 19.1381, -3.46568, 2.6129, 0.88 ) }
    dend_13 { pt3dadd( 19.6592, -3.83252, 2.91399, 1.25 ) }
    dend_13 { pt3dadd( 20.1207, -4.22438, 3.23219, 1.47 ) }
    dend_13 { pt3dadd( 20.8007, -4.85685, 3.73249, 1.47 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.22416, 16.5258, 1.9397, 1.25 ) }
    dend_5 { pt3dadd( -3.81222, 16.9899, 1.11477, 1.25 ) }
    dend_5 { pt3dadd( -4.24263, 17.3382, 0.436702, 1.11 ) }
    dend_5 { pt3dadd( -4.90106, 17.9441, -0.789342, 1.11 ) }
    dend_5 { pt3dadd( -5.37089, 18.4283, -1.64929, 1.18 ) }
    dend_5 { pt3dadd( -5.88649, 19.0362, -2.58285, 1.11 ) }
    dend_5 { pt3dadd( -6.34765, 19.705, -3.43882, 1.11 ) }
    dend_5 { pt3dadd( -6.61569, 20.1327, -4.00924, 1.11 ) }
    dend_5 { pt3dadd( -6.8916, 20.6634, -4.6655, 0.96 ) }
    dend_5 { pt3dadd( -7.29303, 22.171, -5.99294, 0.96 ) }
    dend_5 { pt3dadd( -7.28399, 22.7811, -6.24521, 1.11 ) }
    dend_5 { pt3dadd( -7.11971, 23.8175, -6.05453, 1.4 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 95/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.22416, 16.5258, 1.9397, 0.59 ) }
    dend_4 { pt3dadd( -2.74726, 17.2704, 2.86897, 0.59 ) }
    dend_4 { pt3dadd( -2.39081, 17.8484, 3.44074, 0.44 ) }
    dend_4 { pt3dadd( -1.95952, 18.5704, 4.03629, 0.66 ) }
    dend_4 { pt3dadd( -1.63711, 19.0678, 4.40186, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_4 { pt3dadd( -1.07191, 19.8292, 4.96778, 0.52 ) }
    dend_4 { pt3dadd( -0.774445, 20.2025, 5.30519, 0.59 ) }
    dend_4 { pt3dadd( -0.35813, 20.6597, 5.80669, 0.59 ) }
    dend_4 { pt3dadd( -0.0508501, 20.9948, 6.25707, 0.59 ) }
    dend_4 { pt3dadd( 0.348602, 21.4549, 7.01593, 0.59 ) }
    dend_4 { pt3dadd( 0.71993, 21.9656, 7.92631, 0.52 ) }
    dend_4 { pt3dadd( 1.26155, 22.7912, 9.4018, 0.44 ) }
    dend_4 { pt3dadd( 1.65612, 23.409, 10.4255, 0.44 ) }
    dend_4 { pt3dadd( 1.97165, 23.9127, 11.1668, 0.66 ) }
    dend_4 { pt3dadd( 2.2051, 24.2838, 11.6127, 0.66 ) }
    dend_4 { pt3dadd( 2.84124, 25.2651, 12.4952, 0.52 ) }
    dend_4 { pt3dadd( 3.31781, 25.9557, 12.9811, 0.44 ) }
    dend_4 { pt3dadd( 3.82935, 26.6155, 13.3977, 0.44 ) }
    dend_4 { pt3dadd( 4.35264, 27.1827, 13.828, 0.81 ) }
    dend_4 { pt3dadd( 4.84355, 27.6185, 14.2862, 0.81 ) }
    dend_4 { pt3dadd( 5.57112, 28.1885, 15.0595, 0.37 ) }
    dend_4 { pt3dadd( 6.20354, 28.6701, 15.8523, 0.37 ) }
    dend_4 { pt3dadd( 6.74932, 29.1495, 16.6343, 0.37 ) }
    dend_4 { pt3dadd( 7.41399, 29.8239, 17.745, 0.44 ) }
    dend_4 { pt3dadd( 7.85886, 30.3041, 18.4963, 0.44 ) }
    dend_4 { pt3dadd( 8.09671, 30.5698, 18.8989, 0.44 ) }
    dend_4 { pt3dadd( 8.51808, 31.0551, 19.5905, 0.52 ) }
    dend_4 { pt3dadd( 9.09336, 31.7303, 20.5081, 0.37 ) }
    dend_4 { pt3dadd( 9.56461, 32.3025, 21.3054, 0.37 ) }
    dend_4 { pt3dadd( 9.88333, 32.7234, 21.946, 0.37 ) }
    dend_4 { pt3dadd( 10.369, 33.4045, 23.1411, 0.52 ) }
    dend_4 { pt3dadd( 10.7328, 33.9736, 24.303, 0.74 ) }
    dend_4 { pt3dadd( 10.8599, 34.2361, 24.9118, 0.74 ) }
    dend_4 { pt3dadd( 10.9964, 34.7321, 26.1345, 0.59 ) }
    dend_4 { pt3dadd( 11.0686, 35.1478, 27.0464, 0.59 ) }
    dend_4 { pt3dadd( 11.1158, 35.6411, 28.0866, 0.52 ) }
    dend_4 { pt3dadd( 11.1761, 36.1815, 29.1596, 0.52 ) }
    dend_4 { pt3dadd( 11.2494, 36.6091, 30.0416, 0.52 ) }
    dend_4 { pt3dadd( 11.321, 36.9034, 30.6837, 0.52 ) }
    dend_4 { pt3dadd( 11.4808, 37.4628, 32.0338, 0.44 ) }
    dend_4 { pt3dadd( 11.6608, 37.9006, 33.2692, 0.44 ) }
    dend_4 { pt3dadd( 11.8119, 38.129, 34.0254, 0.44 ) }
    dend_4 { pt3dadd( 11.9943, 38.3574, 34.6548, 0.44 ) }
    dend_4 { pt3dadd( 12.2407, 38.6487, 35.2537, 0.44 ) }
    dend_4 { pt3dadd( 12.3599, 38.7972, 35.4934, 0.44 ) }
    dend_4 { pt3dadd( 12.6978, 39.2235, 36.0827, 0.44 ) }
    dend_4 { pt3dadd( 13.3147, 39.8796, 36.8043, 0.44 ) }
    dend_4 { pt3dadd( 14.1569, 40.6488, 37.6146, 0.44 ) }
    dend_4 { pt3dadd( 15.1222, 41.4185, 38.3368, 0.29 ) }
    dend_4 { pt3dadd( 15.7557, 41.8592, 38.6865, 0.29 ) }
    dend_4 { pt3dadd( 16.2787, 42.1955, 38.9417, 0.44 ) }
    dend_4 { pt3dadd( 17.3512, 42.8121, 39.3749, 0.66 ) }
    dend_4 { pt3dadd( 18.3312, 43.3005, 39.702, 0.44 ) }
    dend_4 { pt3dadd( 19.1994, 43.6384, 39.972, 0.81 ) }
    dend_4 { pt3dadd( 20.2741, 43.985, 40.2829, 0.37 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -32.9254, -7.18921, -8.65825, 0.59 ) }
    dend_2 { pt3dadd( -33.1075, -7.93494, -8.75686, 0.59 ) }
    dend_2 { pt3dadd( -33.403, -9.03408, -8.89568, 0.88 ) }
    dend_2 { pt3dadd( -33.6895, -9.92096, -9.00822, 0.37 ) }
    dend_2 { pt3dadd( -33.9059, -10.4761, -9.08666, 0.59 ) }
    dend_2 { pt3dadd( -34.2284, -11.1803, -9.20346, 0.37 ) }
    dend_2 { pt3dadd( -34.7491, -12.1513, -9.38184, 0.59 ) }
    dend_2 { pt3dadd( -35.1445, -12.7293, -9.51365, 0.66 ) }
    dend_2 { pt3dadd( -35.5557, -13.2297, -9.63006, 0.52 ) }
    dend_2 { pt3dadd( -36.154, -13.8639, -9.78818, 0.52 ) }
    dend_2 { pt3dadd( -36.6371, -14.311, -9.91158, 0.52 ) }
    dend_2 { pt3dadd( -37.1389, -14.7187, -10.0291, 0.52 ) }
    dend_2 { pt3dadd( -37.6763, -15.1168, -10.1527, 0.52 ) }
    dend_2 { pt3dadd( -38.3006, -15.5769, -10.3271, 0.59 ) }
    dend_2 { pt3dadd( -38.8456, -15.9722, -10.5119, 0.52 ) }
    dend_2 { pt3dadd( -39.5198, -16.4363, -10.796, 0.81 ) }
    dend_2 { pt3dadd( -39.814, -16.6294, -10.9437, 0.88 ) }
    dend_2 { pt3dadd( -40.4553, -17.0287, -11.3463, 0.44 ) }
    dend_2 { pt3dadd( -40.9452, -17.3124, -11.7177, 0.44 ) }
    dend_2 { pt3dadd( -41.5459, -17.649, -12.2644, 0.44 ) }
    dend_2 { pt3dadd( -41.9492, -17.9156, -12.7179, 0.44 ) }
    dend_2 { pt3dadd( -42.1416, -18.067, -12.9764, 0.44 ) }
    dend_2 { pt3dadd( -42.4587, -18.3501, -13.4272, 0.44 ) }
    dend_2 { pt3dadd( -42.8744, -18.7694, -13.9797, 0.81 ) }
    dend_2 { pt3dadd( -43.1803, -19.1125, -14.3235, 0.81 ) }
    dend_2 { pt3dadd( -43.6604, -19.7126, -14.777, 0.37 ) }
    dend_2 { pt3dadd( -44.0055, -20.1558, -15.0568, 0.37 ) }
    dend_2 { pt3dadd( -44.3676, -20.6192, -15.3382, 0.66 ) }
    dend_2 { pt3dadd( -44.99, -21.3897, -15.8087, 0.29 ) }
    dend_2 { pt3dadd( -45.5543, -22.0572, -16.2346, 0.37 ) }
    dend_2 { pt3dadd( -45.9911, -22.5422, -16.5952, 0.59 ) }
    dend_2 { pt3dadd( -46.4536, -23.0149, -17.0161, 0.88 ) }
    dend_2 { pt3dadd( -46.8677, -23.4051, -17.4357, 0.88 ) }
    dend_2 { pt3dadd( -47.3454, -23.8172, -17.9882, 0.66 ) }
    dend_2 { pt3dadd( -47.6885, -24.0615, -18.4031, 0.37 ) }
    dend_2 { pt3dadd( -48.4217, -24.4682, -19.2397, 0.22 ) }
    dend_2 { pt3dadd( -48.6996, -24.5938, -19.5277, 0.22 ) }
    dend_2 { pt3dadd( -49.2209, -24.8005, -20.005, 0.66 ) }
    dend_2 { pt3dadd( -49.9013, -25.055, -20.533, 0.22 ) }
    dend_2 { pt3dadd( -50.6488, -25.3296, -21.0084, 0.22 ) }
    dend_2 { pt3dadd( -51.1932, -25.5349, -21.2782, 0.74 ) }
    dend_2 { pt3dadd( -51.3918, -25.6182, -21.357, 0.74 ) }
    dend_2 { pt3dadd( -51.9781, -25.893, -21.5758, 0.29 ) }
    dend_2 { pt3dadd( -52.6614, -26.2511, -21.8352, 0.74 ) }
    dend_2 { pt3dadd( -53.5163, -26.7535, -22.2038, 0.29 ) }
    dend_2 { pt3dadd( -54.1092, -27.1491, -22.5066, 0.88 ) }
    dend_2 { pt3dadd( -55.1718, -27.9228, -23.1849, 0.29 ) }
    dend_2 { pt3dadd( -55.6579, -28.2853, -23.5744, 0.29 ) }
    dend_2 { pt3dadd( -56.1569, -28.6649, -24.0882, 0.52 ) }
    dend_2 { pt3dadd( -56.7744, -29.1448, -24.9088, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( -57.1301, -29.4277, -25.5183, 0.81 ) }
    dend_2 { pt3dadd( -57.5112, -29.7279, -26.3161, 0.81 ) }
    dend_2 { pt3dadd( -57.8779, -29.9893, -27.1444, 0.44 ) }
    dend_2 { pt3dadd( -58.1399, -30.1428, -27.7029, 0.44 ) }
    dend_2 { pt3dadd( -58.2618, -30.1989, -27.9361, 0.44 ) }
    dend_2 { pt3dadd( -58.566, -30.3184, -28.4449, 0.44 ) }
    dend_2 { pt3dadd( -59.0219, -30.5143, -29.138, 0.29 ) }
    dend_2 { pt3dadd( -59.433, -30.7032, -29.6805, 0.88 ) }
    dend_2 { pt3dadd( -59.9843, -30.9915, -30.32, 0.66 ) }
    dend_2 { pt3dadd( -60.6977, -31.3806, -31.0542, 0.59 ) }
    dend_2 { pt3dadd( -61.116, -31.6098, -31.4392, 0.59 ) }
    dend_2 { pt3dadd( -61.4389, -31.775, -31.6914, 0.59 ) }
    dend_2 { pt3dadd( -61.9386, -32.0247, -32.0298, 0.22 ) }
    dend_2 { pt3dadd( -62.5177, -32.3088, -32.3777, 0.22 ) }
    dend_2 { pt3dadd( -62.839, -32.4615, -32.545, 0.22 ) }
    dend_2 { pt3dadd( -63.7734, -32.8743, -32.9814, 0.59 ) }
    dend_2 { pt3dadd( -64.4786, -33.1682, -33.3333, 0.22 ) }
    dend_2 { pt3dadd( -64.8872, -33.3381, -33.5641, 0.22 ) }
    dend_2 { pt3dadd( -65.3755, -33.5521, -33.8761, 0.29 ) }
    dend_2 { pt3dadd( -65.9256, -33.7891, -34.2644, 0.29 ) }
    dend_2 { pt3dadd( -66.2598, -33.9352, -34.5249, 0.22 ) }
    dend_2 { pt3dadd( -66.8055, -34.1826, -34.9567, 0.22 ) }
    dend_2 { pt3dadd( -67.2436, -34.3979, -35.2981, 0.29 ) }
    dend_2 { pt3dadd( -67.9123, -34.7552, -35.7785, 0.29 ) }
    dend_2 { pt3dadd( -68.2932, -35.0035, -36.0577, 0.66 ) }
    dend_2 { pt3dadd( -68.8523, -35.4545, -36.478, 0.22 ) }
    dend_2 { pt3dadd( -69.3785, -35.9965, -36.8994, 0.29 ) }
    dend_2 { pt3dadd( -69.9309, -36.7214, -37.3862, 0.22 ) }
    dend_2 { pt3dadd( -70.2383, -37.278, -37.742, 0.66 ) }
    dend_2 { pt3dadd( -70.5132, -38.1172, -38.2757, 0.15 ) }
    dend_2 { pt3dadd( -70.5822, -38.6664, -38.6773, 0.22 ) }
    dend_2 { pt3dadd( -70.5469, -39.2536, -39.1737, 0.22 ) }
    dend_2 { pt3dadd( -70.4717, -39.5834, -39.5111, 0.29 ) }
    dend_2 { pt3dadd( -70.2879, -40.1019, -40.1076, 0.29 ) }
    dend_2 { pt3dadd( -70.119, -40.5197, -40.639, 0.37 ) }
    dend_2 { pt3dadd( -69.7462, -41.4022, -41.8534, 0.15 ) }
    dend_2 { pt3dadd( -69.4325, -42.0951, -42.8832, 0.15 ) }
    dend_2 { pt3dadd( -69.1634, -42.6309, -43.7392, 0.15 ) }
    dend_2 { pt3dadd( -69.0643, -42.8222, -44.0467, 0.29 ) }
    dend_2 { pt3dadd( -68.8379, -43.2556, -44.7244, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -32.9254, -7.18921, -8.65825, 0.74 ) }
    dend_1 { pt3dadd( -34.1446, -7.37616, -7.8834, 0.74 ) }
    dend_1 { pt3dadd( -35.2137, -7.62846, -7.0925, 0.81 ) }
    dend_1 { pt3dadd( -36.2451, -7.93444, -6.28341, 0.44 ) }
    dend_1 { pt3dadd( -38.0071, -8.55614, -4.94598, 0.37 ) }
    dend_1 { pt3dadd( -38.9321, -8.88831, -4.25169, 0.74 ) }
    dend_1 { pt3dadd( -40.4259, -9.36838, -3.21591, 0.59 ) }
    dend_1 { pt3dadd( -41.8513, -9.83278, -2.27641, 0.52 ) }
    dend_1 { pt3dadd( -42.8538, -10.1068, -1.67302, 0.66 ) }
    dend_1 { pt3dadd( -44.2156, -10.3919, -0.960758, 0.29 ) }
    dend_1 { pt3dadd( -45.202, -10.5507, -0.554039, 0.29 ) }
    dend_1 { pt3dadd( -47.0425, -10.772, -0.0440741, 0.44 ) }
    dend_1 { pt3dadd( -48.5058, -10.8851, 0.16406, 0.52 ) }
    dend_1 { pt3dadd( -50.0669, -10.9693, 0.215154, 0.22 ) }
    dend_1 { pt3dadd( -50.5594, -10.9909, 0.194239, 0.22 ) }
    dend_1 { pt3dadd( -51.7697, -11.0328, 0.0759821, 0.22 ) }
    dend_1 { pt3dadd( -54.0984, -11.2332, -0.343221, 0.29 ) }
    dend_1 { pt3dadd( -54.9468, -11.3435, -0.528787, 0.44 ) }
    dend_1 { pt3dadd( -55.9534, -11.483, -0.738669, 0.81 ) }
    dend_1 { pt3dadd( -57.1272, -11.6392, -0.956131, 0.81 ) }
    dend_1 { pt3dadd( -58.5644, -11.7729, -1.13494, 0.29 ) }
    dend_1 { pt3dadd( -59.802, -11.8286, -1.16295, 0.44 ) }
    dend_1 { pt3dadd( -60.5934, -11.8541, -1.1356, 0.44 ) }
    dend_1 { pt3dadd( -61.5806, -11.9088, -1.07633, 0.37 ) }
    dend_1 { pt3dadd( -62.7951, -12.0223, -0.883683, 0.96 ) }
    dend_1 { pt3dadd( -63.5796, -12.1331, -0.653616, 0.96 ) }
    dend_1 { pt3dadd( -65.0325, -12.3565, 0.0403523, 0.37 ) }
    dend_1 { pt3dadd( -66.7248, -12.6203, 1.13329, 0.52 ) }
    dend_1 { pt3dadd( -68.0254, -12.8396, 2.16235, 0.29 ) }
    dend_1 { pt3dadd( -69.5683, -13.144, 3.52858, 0.44 ) }
    dend_1 { pt3dadd( -70.6949, -13.3857, 4.6273, 0.52 ) }
    dend_1 { pt3dadd( -72.259, -13.7452, 6.22734, 0.22 ) }
    dend_1 { pt3dadd( -72.9435, -13.9085, 6.91641, 0.22 ) }
    dend_1 { pt3dadd( -73.937, -14.1297, 7.8593, 0.29 ) }
    dend_1 { pt3dadd( -74.871, -14.3289, 8.46694, 0.44 ) }
    dend_1 { pt3dadd( -76.0088, -14.5356, 8.66735, 0.44 ) }
    dend_1 { pt3dadd( -77.1841, -14.7093, 8.5441, 0.15 ) }
    dend_1 { pt3dadd( -79.1672, -14.9491, 8.04718, 0.15 ) }
    dend_1 { pt3dadd( -79.8845, -14.9932, 7.82681, 0.59 ) }
    dend_1 { pt3dadd( -80.9962, -14.9956, 7.44154, 1.11 ) }
    dend_1 { pt3dadd( -83.1118, -14.7941, 6.6991, 0.44 ) }
    dend_1 { pt3dadd( -84.1248, -14.6203, 6.32661, 0.66 ) }
    dend_1 { pt3dadd( -85.104, -14.3644, 5.99084, 0.66 ) }
    dend_1 { pt3dadd( -86.2119, -13.992, 5.65556, 0.22 ) }
    dend_1 { pt3dadd( -86.8405, -13.7426, 5.45601, 0.15 ) }
    dend_1 { pt3dadd( -88.1843, -13.097, 5.00037, 0.15 ) }
    dend_1 { pt3dadd( -88.9374, -12.6891, 4.73913, 0.15 ) }
    dend_1 { pt3dadd( -89.9718, -12.1782, 4.39079, 0.15 ) }
    dend_1 { pt3dadd( -90.4805, -11.9557, 4.23197, 0.29 ) }
    dend_1 { pt3dadd( -91.2525, -11.6424, 3.99862, 0.81 ) }
    dend_1 { pt3dadd( -91.8385, -11.4139, 3.83205, 0.81 ) }
    dend_1 { pt3dadd( -92.8601, -11.033, 3.5866, 0.15 ) }
    dend_1 { pt3dadd( -93.7734, -10.6487, 3.41972, 0.29 ) }
    dend_1 { pt3dadd( -94.4289, -10.3352, 3.3169, 0.22 ) }
    dend_1 { pt3dadd( -95.474, -9.78441, 3.16465, 0.22 ) }
    dend_1 { pt3dadd( -95.8208, -9.58701, 3.12936, 0.22 ) }
    dend_1 { pt3dadd( -96.3517, -9.27126, 3.09886, 0.22 ) }
    dend_1 { pt3dadd( -96.9478, -8.91309, 3.09664, 0.44 ) }
    dend_1 { pt3dadd( -97.7601, -8.46767, 3.13491, 0.44 ) }
    dend_1 { pt3dadd( -98.5662, -8.10198, 3.16804, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -99.2709, -7.83542, 3.15689, 0.22 ) }
    dend_1 { pt3dadd( -99.9557, -7.56373, 3.17177, 0.29 ) }
    dend_1 { pt3dadd( -100.75, -7.23718, 3.16691, 0.29 ) }
    dend_1 { pt3dadd( -101.795, -6.82481, 3.07721, 0.22 ) }
    dend_1 { pt3dadd( -103.049, -6.36759, 2.85046, 0.81 ) }
    dend_1 { pt3dadd( -104.325, -5.93128, 2.52836, 0.52 ) }
    dend_1 { pt3dadd( -106.521, -5.20763, 1.80352, 0.22 ) }
    dend_1 { pt3dadd( -107.81, -4.8154, 1.3153, 0.29 ) }
    dend_1 { pt3dadd( -109.214, -4.42146, 0.727254, 0.22 ) }
    dend_1 { pt3dadd( -110.341, -4.12659, 0.228989, 0.44 ) }
    dend_1 { pt3dadd( -111.135, -3.93364, -0.121193, 0.44 ) }
    dend_1 { pt3dadd( -112.313, -3.65566, -0.65083, 0.15 ) }
    dend_1 { pt3dadd( -113.37, -3.39098, -1.16576, 0.15 ) }
    dend_1 { pt3dadd( -113.915, -3.2189, -1.38775, 0.15 ) }
    dend_1 { pt3dadd( -114.612, -2.91942, -1.57976, 0.59 ) }
    dend_1 { pt3dadd( -115.257, -2.57015, -1.72481, 0.59 ) }
    dend_1 { pt3dadd( -115.914, -2.09007, -1.86176, 0.22 ) }
    dend_1 { pt3dadd( -116.678, -1.36646, -2.01834, 0.22 ) }
    dend_1 { pt3dadd( -117.311, -0.618113, -2.19008, 0.22 ) }
    dend_1 { pt3dadd( -118.286, 0.641243, -2.53309, 0.22 ) }
    dend_1 { pt3dadd( -118.72, 1.21447, -2.70984, 0.22 ) }
    dend_1 { pt3dadd( -119.659, 2.33979, -3.12072, 0.29 ) }
    dend_1 { pt3dadd( -120.259, 2.97504, -3.42132, 0.29 ) }
    dend_1 { pt3dadd( -121.639, 4.24661, -4.15514, 0.22 ) }
    dend_1 { pt3dadd( -122.178, 4.66984, -4.45736, 0.22 ) }
    dend_1 { pt3dadd( -122.661, 4.99314, -4.74903, 0.22 ) }
    dend_1 { pt3dadd( -123.927, 5.73976, -5.54945, 0.29 ) }
    dend_1 { pt3dadd( -124.794, 6.19923, -6.16981, 0.29 ) }
    dend_1 { pt3dadd( -125.768, 6.71103, -6.97051, 0.44 ) }
    dend_1 { pt3dadd( -126.823, 7.28974, -7.98053, 0.44 ) }
    dend_1 { pt3dadd( -127.682, 7.80104, -8.9388, 0.37 ) }
    dend_1 { pt3dadd( -128.718, 8.44947, -10.2674, 0.81 ) }
    dend_1 { pt3dadd( -129.657, 9.03016, -11.6504, 0.29 ) }
    dend_1 { pt3dadd( -130.425, 9.47664, -12.9712, 0.29 ) }
    dend_1 { pt3dadd( -131.125, 9.89409, -14.3209, 0.29 ) }
    dend_1 { pt3dadd( -131.783, 10.3033, -15.6454, 0.29 ) }
    dend_1 { pt3dadd( -132.359, 10.6561, -16.7824, 0.66 ) }
    dend_1 { pt3dadd( -133.613, 11.4156, -19.0544, 0.37 ) }
    dend_1 { pt3dadd( -134.969, 12.1982, -21.3614, 0.37 ) }
    dend_1 { pt3dadd( -135.766, 12.6342, -22.6267, 0.22 ) }
    dend_1 { pt3dadd( -136.37, 12.9354, -23.4731, 0.22 ) }
    dend_1 { pt3dadd( -136.864, 13.1761, -24.0948, 0.22 ) }
    dend_1 { pt3dadd( -137.59, 13.5463, -24.9495, 0.29 ) }
    dend_1 { pt3dadd( -138.91, 14.237, -26.4363, 0.22 ) }
    dend_1 { pt3dadd( -139.693, 14.6672, -27.3197, 0.22 ) }
    dend_1 { pt3dadd( -140.445, 15.1518, -28.3619, 0.29 ) }
    dend_1 { pt3dadd( -141.08, 15.6555, -29.3843, 0.29 ) }
    dend_1 { pt3dadd( -141.399, 15.9686, -29.9602, 0.29 ) }
    dend_1 { pt3dadd( -141.833, 16.513, -30.8629, 0.29 ) }
    dend_1 { pt3dadd( -142.316, 17.2818, -31.97, 0.52 ) }
    dend_1 { pt3dadd( -142.956, 18.492, -33.633, 0.44 ) }
    dend_1 { pt3dadd( -143.326, 19.2851, -34.7004, 0.22 ) }
    dend_1 { pt3dadd( -143.636, 19.9506, -35.5454, 0.29 ) }
    dend_1 { pt3dadd( -144.02, 20.6899, -36.4767, 0.29 ) }
    dend_1 { pt3dadd( -144.283, 21.1275, -37.003, 0.29 ) }
    dend_1 { pt3dadd( -144.569, 21.523, -37.4613, 0.29 ) }
    dend_1 { pt3dadd( -144.961, 22.0315, -37.9765, 0.29 ) }
    dend_1 { pt3dadd( -145.548, 22.8268, -38.6609, 0.29 ) }
    dend_1 { pt3dadd( -145.818, 23.1765, -38.9336, 0.29 ) }
    dend_1 { pt3dadd( -146.338, 23.7776, -39.3722, 0.29 ) }
    dend_1 { pt3dadd( -147.282, 24.7996, -40.0866, 0.44 ) }
    dend_1 { pt3dadd( -147.84, 25.3748, -40.4817, 0.44 ) }
    dend_1 { pt3dadd( -148.479, 26.0137, -40.9224, 0.22 ) }
    dend_1 { pt3dadd( -148.909, 26.4366, -41.2214, 0.22 ) }
    dend_1 { pt3dadd( -149.654, 27.1952, -41.7586, 0.22 ) }
    dend_1 { pt3dadd( -150.533, 28.1193, -42.4329, 0.22 ) }
    dend_1 { pt3dadd( -151.032, 28.618, -42.8186, 0.37 ) }
    dend_1 { pt3dadd( -152.01, 29.4634, -43.4771, 0.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 68/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -24.8294, 31.3371, 0.0, 0.23 ) }
    axon_1 { pt3dadd( -34.0458, 43.1717, 0.0, 0.23 ) }
    axon_1 { pt3dadd( -43.2623, 55.0063, 0.0, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 71/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 14.1112, 10.9949, 16.8983, 0.88 ) }
    dend_63 { pt3dadd( 14.6033, 10.6079, 17.766, 0.88 ) }
    dend_63 { pt3dadd( 15.166, 10.1532, 18.8407, 0.74 ) }
    dend_63 { pt3dadd( 15.6742, 9.76467, 20.0248, 0.66 ) }
    dend_63 { pt3dadd( 16.2254, 9.3643, 21.3654, 0.59 ) }
    dend_63 { pt3dadd( 16.5481, 9.1299, 22.1503, 0.66 ) }
    dend_63 { pt3dadd( 17.0704, 8.7505, 23.4207, 0.66 ) }
    dend_63 { pt3dadd( 17.4704, 8.50399, 24.4238, 1.03 ) }
    dend_63 { pt3dadd( 18.344, 7.99411, 26.7062, 1.25 ) }
    dend_63 { pt3dadd( 18.6679, 7.80522, 27.6623, 1.47 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 81/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 14.1112, 10.9949, 16.8983, 1.11 ) }
    dend_58 { pt3dadd( 15.489, 11.703, 17.5088, 1.11 ) }
    dend_58 { pt3dadd( 16.7764, 12.3647, 18.0793, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 84/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.51675, 18.4096, -30.9175, 0.59 ) }
    dend_52 { pt3dadd( -7.27812, 19.3104, -30.4208, 0.59 ) }
    dend_52 { pt3dadd( -7.86086, 20.1131, -29.96, 0.81 ) }
    dend_52 { pt3dadd( -8.31423, 20.8855, -29.492, 0.37 ) }
    dend_52 { pt3dadd( -8.59922, 21.5857, -29.0553, 0.37 ) }
    dend_52 { pt3dadd( -9.02004, 22.8809, -28.254, 0.52 ) }
    dend_52 { pt3dadd( -9.29694, 23.8828, -27.6307, 0.96 ) }
    dend_52 { pt3dadd( -9.55041, 25.1159, -26.8188, 0.66 ) }
    dend_52 { pt3dadd( -9.74675, 26.359, -25.9393, 0.96 ) }
    dend_52 { pt3dadd( -9.92501, 27.9754, -24.8009, 0.37 ) }
    dend_52 { pt3dadd( -9.95321, 28.3804, -24.5215, 0.37 ) }
    dend_52 { pt3dadd( -10.0058, 28.9829, -24.1081, 0.37 ) }
    dend_52 { pt3dadd( -10.0897, 29.5, -23.7182, 0.44 ) }
    dend_52 { pt3dadd( -10.467, 30.6659, -22.7254, 0.66 ) }
    dend_52 { pt3dadd( -10.7211, 31.1949, -22.2354, 0.88 ) }
    dend_52 { pt3dadd( -11.1201, 31.8691, -21.5797, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_52 { pt3dadd( -11.7226, 32.903, -20.5726, 0.96 ) }
    dend_52 { pt3dadd( -12.4403, 34.1832, -19.3132, 0.52 ) }
    dend_52 { pt3dadd( -13.1066, 35.3911, -18.1695, 0.52 ) }
    dend_52 { pt3dadd( -13.6531, 36.3474, -17.2677, 0.59 ) }
    dend_52 { pt3dadd( -13.8668, 36.6874, -16.902, 0.59 ) }
    dend_52 { pt3dadd( -14.413, 37.5083, -15.9539, 0.44 ) }
    dend_52 { pt3dadd( -14.7946, 38.1038, -15.2525, 0.44 ) }
    dend_52 { pt3dadd( -15.2152, 38.7199, -14.4715, 0.74 ) }
    dend_52 { pt3dadd( -15.7858, 39.5859, -13.2577, 0.96 ) }
    dend_52 { pt3dadd( -16.5753, 40.654, -11.5144, 0.81 ) }
    dend_52 { pt3dadd( -16.7071, 40.7945, -11.2224, 0.81 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -6.51675, 18.4096, -30.9175, 0.29 ) }
    dend_51 { pt3dadd( -6.87449, 18.3146, -31.7858, 0.29 ) }
    dend_51 { pt3dadd( -7.62786, 18.4561, -34.309, 0.29 ) }
    dend_51 { pt3dadd( -8.29576, 18.8134, -36.5643, 0.29 ) }
    dend_51 { pt3dadd( -8.70176, 19.0301, -37.723, 0.29 ) }
    dend_51 { pt3dadd( -9.32454, 19.3671, -39.2907, 0.29 ) }
    dend_51 { pt3dadd( -10.0185, 19.7532, -40.8873, 0.29 ) }
    dend_51 { pt3dadd( -10.8914, 20.3642, -42.7461, 0.29 ) }
    dend_51 { pt3dadd( -11.873, 21.1498, -44.6128, 0.66 ) }
    dend_51 { pt3dadd( -12.8729, 21.99, -46.1826, 0.29 ) }
    dend_51 { pt3dadd( -13.7194, 22.6613, -47.255, 0.59 ) }
    dend_51 { pt3dadd( -15.1224, 23.6248, -48.7526, 0.29 ) }
    dend_51 { pt3dadd( -16.2623, 24.2885, -49.7783, 0.29 ) }
    dend_51 { pt3dadd( -16.7733, 24.572, -50.1498, 0.29 ) }
    dend_51 { pt3dadd( -18.9104, 26.0233, -51.4764, 0.15 ) }
    dend_51 { pt3dadd( -19.7777, 26.8159, -51.8107, 0.15 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -7.73292, -17.0289, -6.39806, 0.29 ) }
    dend_47 { pt3dadd( -7.35956, -18.2625, -6.83687, 0.29 ) }
    dend_47 { pt3dadd( -7.11598, -19.014, -7.30253, 0.22 ) }
    dend_47 { pt3dadd( -6.97279, -19.4893, -7.73573, 0.29 ) }
    dend_47 { pt3dadd( -6.8457, -20.0162, -8.36597, 0.22 ) }
    dend_47 { pt3dadd( -6.68439, -20.9379, -9.6439, 0.22 ) }
    dend_47 { pt3dadd( -6.61047, -21.6943, -10.7109, 0.37 ) }
    dend_47 { pt3dadd( -6.57604, -22.3167, -11.7061, 0.81 ) }
    dend_47 { pt3dadd( -6.58272, -22.9527, -12.7226, 0.81 ) }
    dend_47 { pt3dadd( -6.63413, -23.4493, -13.4397, 0.37 ) }
    dend_47 { pt3dadd( -6.67764, -23.7377, -13.7924, 0.37 ) }
    dend_47 { pt3dadd( -6.7939, -24.4352, -14.4254, 0.59 ) }
    dend_47 { pt3dadd( -6.90603, -25.3368, -15.0891, 0.44 ) }
    dend_47 { pt3dadd( -6.98159, -25.9211, -15.4718, 0.52 ) }
    dend_47 { pt3dadd( -7.09533, -26.6661, -15.898, 0.66 ) }
    dend_47 { pt3dadd( -7.25035, -27.5488, -16.4169, 0.74 ) }
    dend_47 { pt3dadd( -7.44156, -28.4441, -17.0581, 0.88 ) }
    dend_47 { pt3dadd( -7.6051, -29.1046, -17.6705, 0.88 ) }
    dend_47 { pt3dadd( -7.81356, -29.9117, -18.6134, 0.59 ) }
    dend_47 { pt3dadd( -7.97168, -30.5961, -19.5401, 0.22 ) }
    dend_47 { pt3dadd( -8.07114, -31.2626, -20.6119, 0.29 ) }
    dend_47 { pt3dadd( -8.09727, -32.0225, -21.9708, 0.59 ) }
    dend_47 { pt3dadd( -7.99494, -32.671, -23.2311, 0.59 ) }
    dend_47 { pt3dadd( -7.7887, -33.1775, -24.3303, 0.59 ) }
    dend_47 { pt3dadd( -7.70228, -33.3251, -24.6755, 0.59 ) }
    dend_47 { pt3dadd( -7.47558, -33.7113, -25.5711, 0.59 ) }
    dend_47 { pt3dadd( -7.32943, -34.068, -26.2796, 0.66 ) }
    dend_47 { pt3dadd( -7.15173, -34.8668, -27.5993, 0.59 ) }
    dend_47 { pt3dadd( -7.1138, -35.7077, -28.7738, 0.66 ) }
    dend_47 { pt3dadd( -7.17179, -36.5488, -29.8654, 0.96 ) }
    dend_47 { pt3dadd( -7.2849, -37.2088, -30.6875, 0.59 ) }
    dend_47 { pt3dadd( -7.46728, -37.9274, -31.525, 0.44 ) }
    dend_47 { pt3dadd( -7.61403, -38.4515, -32.0986, 0.44 ) }
    dend_47 { pt3dadd( -7.75326, -39.0943, -32.7463, 0.52 ) }
    dend_47 { pt3dadd( -7.80854, -39.8945, -33.5423, 0.44 ) }
    dend_47 { pt3dadd( -7.69049, -40.6118, -34.3489, 0.44 ) }
    dend_47 { pt3dadd( -7.55605, -40.9214, -34.7426, 0.59 ) }
    dend_47 { pt3dadd( -7.22804, -41.4532, -35.4656, 0.74 ) }
    dend_47 { pt3dadd( -6.74082, -42.1732, -36.4692, 0.37 ) }
    dend_47 { pt3dadd( -6.25266, -42.9086, -37.5486, 0.37 ) }
    dend_47 { pt3dadd( -5.90937, -43.4897, -38.4077, 0.52 ) }
    dend_47 { pt3dadd( -5.57228, -44.1134, -39.3487, 0.59 ) }
    dend_47 { pt3dadd( -5.21949, -44.901, -40.5517, 0.29 ) }
    dend_47 { pt3dadd( -5.01369, -45.4929, -41.4661, 0.52 ) }
    dend_47 { pt3dadd( -4.83434, -46.2007, -42.5179, 0.44 ) }
    dend_47 { pt3dadd( -4.70865, -46.784, -43.386, 0.44 ) }
    dend_47 { pt3dadd( -4.66623, -46.9591, -43.6746, 0.44 ) }
    dend_47 { pt3dadd( -4.5098, -47.3749, -44.4905, 0.44 ) }
    dend_47 { pt3dadd( -4.34924, -47.5926, -45.0028, 0.44 ) }
    dend_47 { pt3dadd( -4.11499, -47.8034, -45.5033, 0.44 ) }
    dend_47 { pt3dadd( -3.73225, -48.0701, -46.0681, 0.44 ) }
    dend_47 { pt3dadd( -3.32876, -48.3294, -46.5192, 0.44 ) }
    dend_47 { pt3dadd( -2.92594, -48.5856, -46.9094, 0.29 ) }
    dend_47 { pt3dadd( -2.24615, -49.015, -47.5238, 0.29 ) }
    dend_47 { pt3dadd( -1.81877, -49.297, -47.9356, 0.29 ) }
    dend_47 { pt3dadd( -1.27884, -49.695, -48.5037, 0.37 ) }
    dend_47 { pt3dadd( -0.814563, -50.0742, -49.0624, 0.74 ) }
    dend_47 { pt3dadd( 0.375763, -51.1182, -50.6988, 0.81 ) }
    dend_47 { pt3dadd( 1.18585, -51.8664, -52.0007, 0.22 ) }
    dend_47 { pt3dadd( 1.76902, -52.4414, -53.0714, 0.22 ) }
    dend_47 { pt3dadd( 2.09729, -52.805, -53.795, 0.22 ) }
    dend_47 { pt3dadd( 2.42451, -53.2224, -54.6275, 0.22 ) }
    dend_47 { pt3dadd( 2.60458, -53.468, -55.11, 0.29 ) }
    dend_47 { pt3dadd( 2.89276, -53.856, -55.8178, 0.29 ) }
    dend_47 { pt3dadd( 3.01252, -53.9875, -56.0366, 0.59 ) }
    dend_47 { pt3dadd( 3.60339, -54.5361, -56.8599, 0.22 ) }
    dend_47 { pt3dadd( 4.11723, -54.9812, -57.5103, 0.29 ) }
    dend_47 { pt3dadd( 4.73277, -55.6011, -58.3369, 0.44 ) }
    dend_47 { pt3dadd( 5.34783, -56.3286, -59.2747, 0.74 ) }
    dend_47 { pt3dadd( 5.965, -57.197, -60.3627, 0.81 ) }
    dend_47 { pt3dadd( 6.43964, -57.9585, -61.3361, 0.44 ) }
    dend_47 { pt3dadd( 6.77421, -58.5932, -62.1256, 0.52 ) }
    dend_47 { pt3dadd( 7.26126, -59.7218, -63.569, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( 7.48706, -60.3362, -64.3588, 0.29 ) }
    dend_47 { pt3dadd( 7.66892, -60.7876, -64.9497, 0.29 ) }
    dend_47 { pt3dadd( 7.9969, -61.4135, -65.8317, 0.44 ) }
    dend_47 { pt3dadd( 8.2318, -61.7507, -66.3178, 0.66 ) }
    dend_47 { pt3dadd( 9.08383, -62.6735, -67.5722, 0.37 ) }
    dend_47 { pt3dadd( 9.56715, -63.0942, -68.084, 0.29 ) }
    dend_47 { pt3dadd( 10.3054, -63.7178, -68.6895, 0.22 ) }
    dend_47 { pt3dadd( 11.1571, -64.4399, -69.2178, 0.59 ) }
    dend_47 { pt3dadd( 11.7226, -64.9185, -69.4392, 0.59 ) }
    dend_47 { pt3dadd( 12.4671, -65.539, -69.6634, 0.15 ) }
    dend_47 { pt3dadd( 13.1125, -66.063, -69.7385, 0.15 ) }
    dend_47 { pt3dadd( 13.7227, -66.5757, -69.7467, 0.44 ) }
    dend_47 { pt3dadd( 14.3137, -67.1311, -69.6867, 0.52 ) }
    dend_47 { pt3dadd( 15.0547, -67.8658, -69.5037, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -7.73292, -17.0289, -6.39806, 0.66 ) }
    dend_46 { pt3dadd( -7.8971, -16.9013, -7.14738, 0.66 ) }
    dend_46 { pt3dadd( -8.08759, -16.7046, -8.24499, 0.66 ) }
    dend_46 { pt3dadd( -8.2174, -16.4911, -9.32988, 0.52 ) }
    dend_46 { pt3dadd( -8.28584, -16.313, -10.0978, 0.44 ) }
    dend_46 { pt3dadd( -8.3138, -16.2074, -10.4632, 0.44 ) }
    dend_46 { pt3dadd( -8.35872, -16.0266, -11.0152, 0.44 ) }
    dend_46 { pt3dadd( -8.38827, -15.8936, -11.3939, 0.44 ) }
    dend_46 { pt3dadd( -8.47365, -15.587, -12.0731, 0.44 ) }
    dend_46 { pt3dadd( -8.54564, -15.375, -12.4272, 0.44 ) }
    dend_46 { pt3dadd( -8.71189, -14.9677, -12.9994, 0.52 ) }
    dend_46 { pt3dadd( -8.905, -14.5706, -13.489, 0.52 ) }
    dend_46 { pt3dadd( -9.16857, -14.1452, -13.9757, 0.37 ) }
    dend_46 { pt3dadd( -9.42114, -13.8368, -14.3199, 0.37 ) }
    dend_46 { pt3dadd( -9.75465, -13.5063, -14.6618, 0.37 ) }
    dend_46 { pt3dadd( -10.2007, -13.0982, -15.0661, 0.37 ) }
    dend_46 { pt3dadd( -10.4941, -12.8429, -15.2963, 0.44 ) }
    dend_46 { pt3dadd( -10.8764, -12.5262, -15.5539, 0.44 ) }
    dend_46 { pt3dadd( -11.5406, -12.0187, -15.9495, 0.29 ) }
    dend_46 { pt3dadd( -11.9369, -11.7493, -16.1579, 0.29 ) }
    dend_46 { pt3dadd( -12.4242, -11.4326, -16.3826, 0.29 ) }
    dend_46 { pt3dadd( -12.6584, -11.2787, -16.4786, 0.29 ) }
    dend_46 { pt3dadd( -13.1142, -10.9295, -16.6608, 0.29 ) }
    dend_46 { pt3dadd( -13.4004, -10.6579, -16.7687, 0.29 ) }
    dend_46 { pt3dadd( -13.7081, -10.3143, -16.8749, 0.66 ) }
    dend_46 { pt3dadd( -14.1758, -9.74904, -17.0117, 0.29 ) }
    dend_46 { pt3dadd( -14.5778, -9.226, -17.1076, 0.22 ) }
    dend_46 { pt3dadd( -15.0199, -8.49954, -17.2034, 0.22 ) }
    dend_46 { pt3dadd( -15.2038, -8.09787, -17.2393, 0.22 ) }
    dend_46 { pt3dadd( -15.3201, -7.75813, -17.2589, 0.22 ) }
    dend_46 { pt3dadd( -15.3956, -7.46024, -17.2719, 0.29 ) }
    dend_46 { pt3dadd( -15.4583, -7.13748, -17.2874, 0.29 ) }
    dend_46 { pt3dadd( -15.6019, -6.35191, -17.3206, 0.22 ) }
    dend_46 { pt3dadd( -15.676, -5.98724, -17.3417, 0.44 ) }
    dend_46 { pt3dadd( -15.9043, -5.07158, -17.4067, 0.22 ) }
    dend_46 { pt3dadd( -16.0385, -4.6225, -17.4575, 0.44 ) }
    dend_46 { pt3dadd( -16.3786, -3.76754, -17.6164, 0.66 ) }
    dend_46 { pt3dadd( -16.5982, -3.31615, -17.7361, 0.22 ) }
    dend_46 { pt3dadd( -16.7551, -3.04528, -17.8274, 0.22 ) }
    dend_46 { pt3dadd( -17.0087, -2.64793, -17.9783, 0.29 ) }
    dend_46 { pt3dadd( -17.378, -2.12647, -18.1959, 0.22 ) }
    dend_46 { pt3dadd( -17.9044, -1.41252, -18.487, 0.37 ) }
    dend_46 { pt3dadd( -18.2906, -0.906492, -18.6837, 0.52 ) }
    dend_46 { pt3dadd( -18.6313, -0.453397, -18.8597, 0.66 ) }
    dend_46 { pt3dadd( -18.8643, -0.143249, -18.9739, 0.66 ) }
    dend_46 { pt3dadd( -19.3208, 0.468279, -19.1768, 0.29 ) }
    dend_46 { pt3dadd( -19.6435, 0.902299, -19.295, 0.29 ) }
    dend_46 { pt3dadd( -20.0613, 1.47597, -19.4358, 0.22 ) }
    dend_46 { pt3dadd( -20.4936, 2.04043, -19.5766, 0.74 ) }
    dend_46 { pt3dadd( -20.6861, 2.28414, -19.6415, 0.74 ) }
    dend_46 { pt3dadd( -20.8744, 2.50774, -19.7064, 0.74 ) }
    dend_46 { pt3dadd( -21.374, 3.0739, -19.877, 0.29 ) }
    dend_46 { pt3dadd( -21.8873, 3.62829, -20.0404, 0.44 ) }
    dend_46 { pt3dadd( -22.3055, 4.05675, -20.159, 0.22 ) }
    dend_46 { pt3dadd( -22.5031, 4.24581, -20.2043, 0.37 ) }
    dend_46 { pt3dadd( -22.8609, 4.5811, -20.2811, 0.37 ) }
    dend_46 { pt3dadd( -23.2331, 4.91619, -20.3535, 0.22 ) }
    dend_46 { pt3dadd( -23.549, 5.20173, -20.4045, 0.22 ) }
    dend_46 { pt3dadd( -23.7874, 5.43399, -20.4436, 0.22 ) }
    dend_46 { pt3dadd( -24.0869, 5.76277, -20.4999, 0.52 ) }
    dend_46 { pt3dadd( -24.313, 6.03116, -20.5466, 0.22 ) }
    dend_46 { pt3dadd( -24.627, 6.43322, -20.617, 0.15 ) }
    dend_46 { pt3dadd( -24.9662, 6.88842, -20.699, 0.22 ) }
    dend_46 { pt3dadd( -25.1765, 7.20746, -20.7524, 0.15 ) }
    dend_46 { pt3dadd( -25.3968, 7.59149, -20.8063, 0.37 ) }
    dend_46 { pt3dadd( -25.5212, 7.82308, -20.8448, 0.37 ) }
    dend_46 { pt3dadd( -25.6411, 8.03873, -20.9028, 0.15 ) }
    dend_46 { pt3dadd( -25.7506, 8.24253, -20.9901, 0.15 ) }
    dend_46 { pt3dadd( -25.8739, 8.49382, -21.1456, 0.22 ) }
    dend_46 { pt3dadd( -26.0458, 8.85994, -21.4065, 0.22 ) }
    dend_46 { pt3dadd( -26.2357, 9.21396, -21.703, 0.81 ) }
    dend_46 { pt3dadd( -26.5811, 9.74896, -22.2102, 0.29 ) }
    dend_46 { pt3dadd( -26.899, 10.1872, -22.6592, 0.74 ) }
    dend_46 { pt3dadd( -27.3503, 10.7538, -23.2549, 0.44 ) }
    dend_46 { pt3dadd( -27.6866, 11.16, -23.7022, 0.44 ) }
    dend_46 { pt3dadd( -28.0422, 11.5827, -24.1811, 0.15 ) }
    dend_46 { pt3dadd( -28.3655, 11.9602, -24.5953, 0.59 ) }
    dend_46 { pt3dadd( -28.8018, 12.4428, -25.1012, 0.22 ) }
    dend_46 { pt3dadd( -29.1164, 12.7372, -25.4016, 0.74 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 11.2298, -22.2933, -9.72132, 0.81 ) }
    dend_40 { pt3dadd( 12.2564, -22.3723, -9.99816, 0.81 ) }
    dend_40 { pt3dadd( 13.9211, -22.38, -10.5587, 0.66 ) }
    dend_40 { pt3dadd( 14.894, -22.3215, -10.9617, 0.66 ) }
    dend_40 { pt3dadd( 16.3569, -22.1971, -11.6677, 1.18 ) }
    dend_40 { pt3dadd( 17.6286, -22.089, -12.2815, 1.62 ) }
    dend_40 { pt3dadd( 19.4714, -21.9323, -13.1709, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_40 { pt3dadd( 21.4579, -21.7523, -14.2112, 0.81 ) }
    dend_40 { pt3dadd( 23.1449, -21.5144, -15.1535, 0.96 ) }
    dend_40 { pt3dadd( 24.1521, -21.3004, -15.7831, 1.18 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 3/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 11.2298, -22.2933, -9.72132, 0.59 ) }
    dend_37 { pt3dadd( 11.978, -23.1399, -9.80888, 0.59 ) }
    dend_37 { pt3dadd( 12.4452, -23.8329, -9.92821, 0.52 ) }
    dend_37 { pt3dadd( 12.9615, -24.8157, -10.1245, 0.52 ) }
    dend_37 { pt3dadd( 13.3195, -25.8514, -10.3413, 0.44 ) }
    dend_37 { pt3dadd( 13.4612, -26.6914, -10.5194, 0.66 ) }
    dend_37 { pt3dadd( 13.5068, -27.5047, -10.6783, 0.52 ) }
    dend_37 { pt3dadd( 13.3728, -28.628, -10.8631, 0.88 ) }
    dend_37 { pt3dadd( 13.2285, -29.1083, -10.9294, 0.88 ) }
    dend_37 { pt3dadd( 12.7498, -30.1435, -11.0569, 0.52 ) }
    dend_37 { pt3dadd( 12.1823, -31.0852, -11.1823, 0.52 ) }
    dend_37 { pt3dadd( 11.7157, -31.7186, -11.267, 0.74 ) }
    dend_37 { pt3dadd( 10.9775, -32.6247, -11.3837, 1.03 ) }
    dend_37 { pt3dadd( 9.95567, -33.8426, -11.5761, 0.66 ) }
    dend_37 { pt3dadd( 9.06035, -34.9412, -11.8282, 0.66 ) }
    dend_37 { pt3dadd( 8.21832, -36.0109, -12.1359, 0.59 ) }
    dend_37 { pt3dadd( 7.35851, -37.0987, -12.5056, 0.44 ) }
    dend_37 { pt3dadd( 6.68111, -37.9951, -12.8377, 0.52 ) }
    dend_37 { pt3dadd( 5.92312, -39.1109, -13.2475, 0.52 ) }
    dend_37 { pt3dadd( 5.41056, -40.0746, -13.5742, 0.88 ) }
    dend_37 { pt3dadd( 5.18183, -40.6428, -13.7092, 0.88 ) }
    dend_37 { pt3dadd( 4.52063, -42.5872, -13.9637, 0.44 ) }
    dend_37 { pt3dadd( 4.19192, -43.6232, -14.0285, 0.74 ) }
    dend_37 { pt3dadd( 3.89203, -44.4167, -14.0003, 0.59 ) }
    dend_37 { pt3dadd( 3.52426, -45.2166, -13.8599, 0.44 ) }
    dend_37 { pt3dadd( 2.82145, -46.5423, -13.4286, 0.74 ) }
    dend_37 { pt3dadd( 2.19602, -47.555, -12.9013, 0.88 ) }
    dend_37 { pt3dadd( 1.51936, -48.5049, -12.1815, 0.74 ) }
    dend_37 { pt3dadd( 0.730903, -49.5033, -11.3086, 0.52 ) }
    dend_37 { pt3dadd( -0.00199892, -50.3907, -10.5224, 0.52 ) }
    dend_37 { pt3dadd( -0.747944, -51.3106, -9.68216, 0.81 ) }
    dend_37 { pt3dadd( -1.5481, -52.4223, -8.68686, 0.96 ) }
    dend_37 { pt3dadd( -1.89814, -53.0162, -8.15431, 0.96 ) }
    dend_37 { pt3dadd( -2.31008, -53.916, -7.40813, 0.66 ) }
    dend_37 { pt3dadd( -2.66029, -55.0806, -6.69473, 0.44 ) }
    dend_37 { pt3dadd( -2.78028, -55.6675, -6.47004, 0.44 ) }
    dend_37 { pt3dadd( -2.87892, -56.4144, -6.31259, 0.66 ) }
    dend_37 { pt3dadd( -2.94379, -57.2103, -6.22569, 0.66 ) }
    dend_37 { pt3dadd( -2.97174, -57.9303, -6.17208, 0.44 ) }
    dend_37 { pt3dadd( -2.98352, -58.6524, -6.12258, 0.44 ) }
    dend_37 { pt3dadd( -2.9858, -59.2548, -6.06442, 0.74 ) }
    dend_37 { pt3dadd( -2.98899, -60.3933, -5.90504, 1.03 ) }
    dend_37 { pt3dadd( -2.97222, -61.2972, -5.75013, 0.81 ) }
    dend_37 { pt3dadd( -2.88986, -62.8463, -5.45397, 0.44 ) }
    dend_37 { pt3dadd( -2.81948, -63.6564, -5.2512, 0.44 ) }
    dend_37 { pt3dadd( -2.71221, -64.5036, -5.00931, 0.44 ) }
    dend_37 { pt3dadd( -2.58691, -65.2635, -4.75583, 0.44 ) }
    dend_37 { pt3dadd( -2.47084, -65.8277, -4.51976, 0.44 ) }
    dend_37 { pt3dadd( -2.3286, -66.3797, -4.22758, 0.74 ) }
    dend_37 { pt3dadd( -2.07118, -67.1722, -3.65421, 1.03 ) }
    // Section: dend_32, id: dend_32, parent: dend_22 (entry count 53/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 15.8522, 1.23175, -9.4547, 0.44 ) }
    dend_32 { pt3dadd( 17.7693, 1.03036, -9.88006, 0.44 ) }
    dend_32 { pt3dadd( 19.1741, 0.861586, -10.0623, 0.52 ) }
    dend_32 { pt3dadd( 20.3786, 0.742135, -10.076, 0.52 ) }
    dend_32 { pt3dadd( 21.2796, 0.667447, -9.98527, 0.81 ) }
    dend_32 { pt3dadd( 22.9429, 0.551851, -9.64557, 1.03 ) }
    dend_32 { pt3dadd( 24.0506, 0.493078, -9.35509, 0.52 ) }
    dend_32 { pt3dadd( 25.5975, 0.380388, -8.80784, 0.59 ) }
    dend_32 { pt3dadd( 26.9263, 0.283686, -8.24581, 0.81 ) }
    dend_32 { pt3dadd( 27.846, 0.200301, -7.81919, 0.81 ) }
    dend_32 { pt3dadd( 29.0888, 0.047427, -7.23461, 0.66 ) }
    dend_32 { pt3dadd( 30.1437, -0.113618, -6.7575, 0.66 ) }
    dend_32 { pt3dadd( 31.8993, -0.420253, -6.03368, 0.59 ) }
    dend_32 { pt3dadd( 33.3258, -0.725027, -5.57764, 0.96 ) }
    dend_32 { pt3dadd( 34.4764, -1.02669, -5.28583, 0.96 ) }
    dend_32 { pt3dadd( 35.7992, -1.42109, -5.018, 0.96 ) }
    dend_32 { pt3dadd( 36.497, -1.67019, -4.8993, 0.96 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 70/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 15.8522, 1.23175, -9.4547, 1.03 ) }
    dend_23 { pt3dadd( 15.5321, 1.85577, -10.1529, 1.03 ) }
    dend_23 { pt3dadd( 15.3003, 2.4989, -10.8414, 0.81 ) }
    dend_23 { pt3dadd( 15.0973, 3.19266, -11.5506, 0.52 ) }
    dend_23 { pt3dadd( 14.9164, 3.82283, -12.2161, 0.44 ) }
    dend_23 { pt3dadd( 14.7296, 4.40468, -12.904, 0.44 ) }
    dend_23 { pt3dadd( 14.49, 4.99606, -13.6966, 0.44 ) }
    dend_23 { pt3dadd( 14.3641, 5.33843, -14.1688, 0.52 ) }
    dend_23 { pt3dadd( 14.159, 5.96307, -15.0628, 0.74 ) }
    dend_23 { pt3dadd( 13.9596, 6.57949, -15.9978, 0.74 ) }
    dend_23 { pt3dadd( 13.6351, 7.31522, -17.2209, 0.88 ) }
    dend_23 { pt3dadd( 13.0645, 8.21029, -18.8768, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.8007, -4.85685, 3.73249, 0.74 ) }
    dend_15 { pt3dadd( 21.1854, -5.58355, 4.19822, 0.74 ) }
    dend_15 { pt3dadd( 21.5789, -6.32683, 4.67458, 0.74 ) }
    dend_15 { pt3dadd( 21.8915, -6.91727, 5.05299, 0.96 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 20.8007, -4.85685, 3.73249, 0.74 ) }
    dend_14 { pt3dadd( 21.9266, -2.17201, 7.33894, 0.74 ) }
    dend_14 { pt3dadd( 22.2658, -1.2133, 8.38997, 0.52 ) }
    dend_14 { pt3dadd( 22.5343, -0.334729, 9.18455, 0.74 ) }
    dend_14 { pt3dadd( 22.7844, 0.486656, 9.81391, 0.74 ) }
    dend_14 { pt3dadd( 22.9634, 1.04123, 10.1765, 0.74 ) }
    dend_14 { pt3dadd( 23.2497, 1.86143, 10.6449, 0.66 ) }
    dend_14 { pt3dadd( 23.6231, 3.00675, 10.9186, 0.66 ) }
    dend_14 { pt3dadd( 23.878, 3.85091, 11.0633, 0.66 ) }
    dend_14 { pt3dadd( 24.1424, 4.71873, 11.1671, 0.59 ) }
    dend_14 { pt3dadd( 24.5317, 5.85613, 11.2644, 0.74 ) }
    dend_14 { pt3dadd( 24.7754, 6.56737, 11.3, 0.74 ) }
    dend_14 { pt3dadd( 24.9733, 7.17493, 11.3116, 0.74 ) }
    dend_14 { pt3dadd( 25.1165, 7.79627, 11.2972, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 25.2988, 8.75626, 11.273, 0.66 ) }
    dend_14 { pt3dadd( 25.4128, 9.45093, 11.2493, 0.66 ) }
    dend_14 { pt3dadd( 25.5542, 10.2999, 11.2089, 0.81 ) }
    dend_14 { pt3dadd( 25.6432, 10.7984, 11.1842, 0.81 ) }
    dend_14 { pt3dadd( 25.8507, 11.9699, 11.1836, 0.52 ) }
    dend_14 { pt3dadd( 26.0577, 13.1279, 11.2449, 0.66 ) }
    dend_14 { pt3dadd( 26.1979, 14.0415, 11.3729, 0.66 ) }
    dend_14 { pt3dadd( 26.311, 14.7507, 11.614, 0.44 ) }
    dend_14 { pt3dadd( 26.3942, 15.3172, 11.8988, 0.66 ) }
    dend_14 { pt3dadd( 26.5419, 16.6753, 12.703, 0.66 ) }
    dend_14 { pt3dadd( 26.5783, 17.3164, 13.1148, 0.66 ) }
    dend_14 { pt3dadd( 26.5862, 18.3417, 13.7648, 0.44 ) }
    dend_14 { pt3dadd( 26.6261, 20.7438, 15.3317, 0.44 ) }
    dend_14 { pt3dadd( 26.6736, 21.7293, 15.9672, 0.66 ) }
    dend_14 { pt3dadd( 26.8048, 22.8571, 16.6556, 0.81 ) }
    dend_14 { pt3dadd( 26.977, 23.7699, 17.1572, 0.81 ) }
    dend_14 { pt3dadd( 27.2121, 24.7568, 17.6575, 0.52 ) }
    dend_14 { pt3dadd( 27.6445, 26.1528, 18.3343, 0.52 ) }
    dend_14 { pt3dadd( 27.9104, 26.8668, 18.684, 0.44 ) }
    dend_14 { pt3dadd( 28.3772, 27.9547, 19.338, 0.44 ) }
    dend_14 { pt3dadd( 28.7562, 28.8033, 19.9179, 0.59 ) }
    dend_14 { pt3dadd( 29.0925, 29.618, 20.535, 0.59 ) }
    dend_14 { pt3dadd( 29.4876, 30.7634, 21.4511, 0.59 ) }
    dend_14 { pt3dadd( 29.7223, 31.6571, 22.2107, 0.59 ) }
    dend_14 { pt3dadd( 29.9371, 32.5479, 23.028, 0.59 ) }
    dend_14 { pt3dadd( 30.1267, 33.2595, 23.7204, 0.52 ) }
    dend_14 { pt3dadd( 30.3971, 34.051, 24.4857, 0.52 ) }
    dend_14 { pt3dadd( 30.7879, 34.9932, 25.3473, 0.52 ) }
    dend_14 { pt3dadd( 31.4438, 36.4129, 26.5106, 0.52 ) }
    dend_14 { pt3dadd( 31.8071, 37.1034, 27.0437, 0.52 ) }
    dend_14 { pt3dadd( 32.3191, 37.9451, 27.6965, 0.52 ) }
    dend_14 { pt3dadd( 32.816, 38.6668, 28.2792, 0.29 ) }
    dend_14 { pt3dadd( 33.3606, 39.3765, 28.8107, 0.44 ) }
    dend_14 { pt3dadd( 34.049, 40.2255, 29.3572, 0.44 ) }
    dend_14 { pt3dadd( 34.6789, 41.0543, 29.7248, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.11971, 23.8175, -6.05453, 1.03 ) }
    dend_7 { pt3dadd( -6.99004, 24.1149, -7.1535, 1.03 ) }
    dend_7 { pt3dadd( -6.84256, 24.4533, -8.40346, 1.03 ) }
    dend_7 { pt3dadd( -6.66449, 24.8617, -9.91265, 1.03 ) }
    dend_7 { pt3dadd( -6.46104, 25.3284, -11.6369, 1.03 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.11971, 23.8175, -6.05453, 0.52 ) }
    dend_6 { pt3dadd( -6.0299, 24.9152, -7.73653, 0.52 ) }
    dend_6 { pt3dadd( -5.41868, 25.6542, -8.6338, 0.52 ) }
    dend_6 { pt3dadd( -4.71684, 26.031, -9.72277, 0.52 ) }
    dend_6 { pt3dadd( -5.05312, 26.5895, -9.29491, 0.44 ) }
    dend_6 { pt3dadd( -5.81935, 27.5483, -8.46258, 0.44 ) }
    dend_6 { pt3dadd( -8.15717, 29.9593, -6.34245, 0.44 ) }
    dend_6 { pt3dadd( -8.92444, 30.5757, -5.72505, 0.52 ) }
    dend_6 { pt3dadd( -9.84594, 31.1418, -4.98681, 0.37 ) }
    dend_6 { pt3dadd( -10.403, 31.4071, -4.53538, 0.37 ) }
    dend_6 { pt3dadd( -11.2753, 31.756, -3.76211, 0.37 ) }
    dend_6 { pt3dadd( -11.898, 31.9816, -3.12816, 0.66 ) }
    dend_6 { pt3dadd( -12.4713, 32.2054, -2.42459, 0.81 ) }
    dend_6 { pt3dadd( -13.3506, 32.6812, -0.889567, 0.44 ) }
    dend_6 { pt3dadd( -13.9155, 33.1336, 0.516593, 0.44 ) }
    dend_6 { pt3dadd( -14.3687, 33.6675, 2.0932, 0.37 ) }
    dend_6 { pt3dadd( -14.5737, 34.0237, 3.0822, 0.37 ) }
    dend_6 { pt3dadd( -14.8737, 34.613, 4.66309, 0.37 ) }
    dend_6 { pt3dadd( -15.142, 35.1061, 5.94206, 0.37 ) }
    dend_6 { pt3dadd( -15.431, 35.5508, 7.05286, 0.37 ) }
    dend_6 { pt3dadd( -15.8889, 36.0117, 8.31679, 0.66 ) }
    dend_6 { pt3dadd( -16.6823, 36.4751, 9.87787, 0.66 ) }
    dend_6 { pt3dadd( -17.584, 36.7696, 11.2802, 0.52 ) }
    dend_6 { pt3dadd( -18.3743, 36.8648, 12.3436, 0.52 ) }
    dend_6 { pt3dadd( -18.8306, 36.8427, 12.9418, 0.52 ) }
    dend_6 { pt3dadd( -19.9325, 36.6494, 14.3792, 0.37 ) }
    dend_6 { pt3dadd( -20.6904, 36.4266, 15.3778, 0.37 ) }
    dend_6 { pt3dadd( -21.3475, 36.188, 16.2703, 0.37 ) }
    dend_6 { pt3dadd( -22.2122, 35.8839, 17.5251, 0.37 ) }
    dend_6 { pt3dadd( -23.114, 35.6459, 18.845, 0.37 ) }
    dend_6 { pt3dadd( -23.9409, 35.5537, 19.9574, 0.37 ) }
    dend_6 { pt3dadd( -24.2792, 35.5833, 20.3653, 0.37 ) }
    dend_6 { pt3dadd( -25.2646, 35.8657, 21.4364, 0.37 ) }
    dend_6 { pt3dadd( -25.9384, 36.2187, 22.1548, 0.37 ) }
    dend_6 { pt3dadd( -26.5145, 36.6826, 22.796, 0.37 ) }
    dend_6 { pt3dadd( -27.2071, 37.4612, 23.7059, 0.29 ) }
    dend_6 { pt3dadd( -27.667, 38.139, 24.5202, 0.29 ) }
    dend_6 { pt3dadd( -27.9881, 38.7593, 25.3479, 0.29 ) }
    dend_6 { pt3dadd( -28.2977, 39.4768, 26.4532, 0.29 ) }
    dend_6 { pt3dadd( -28.4991, 40.0295, 27.3955, 0.66 ) }
    dend_6 { pt3dadd( -28.7368, 40.7391, 28.6704, 1.25 ) }
    dend_6 { pt3dadd( -29.0069, 41.4256, 29.9202, 1.25 ) }
    dend_6 { pt3dadd( -29.496, 42.3408, 31.576, 0.44 ) }
    dend_6 { pt3dadd( -30.0832, 43.2187, 33.1151, 0.44 ) }
    dend_6 { pt3dadd( -30.8162, 44.0738, 34.4954, 0.66 ) }
    dend_6 { pt3dadd( -31.2932, 44.5532, 35.1865, 0.88 ) }
    dend_6 { pt3dadd( -32.5652, 45.6483, 36.5019, 0.44 ) }
    dend_6 { pt3dadd( -33.4672, 46.3155, 37.1173, 0.44 ) }
    dend_6 { pt3dadd( -34.1431, 46.741, 37.424, 0.44 ) }
    dend_6 { pt3dadd( -35.7441, 47.636, 37.891, 0.44 ) }
    dend_6 { pt3dadd( -36.6346, 48.0632, 38.0334, 0.37 ) }
    dend_6 { pt3dadd( -38.0928, 48.6993, 38.0941, 0.74 ) }
    dend_6 { pt3dadd( -39.3459, 49.1904, 37.9481, 0.22 ) }
    dend_6 { pt3dadd( -40.3836, 49.5356, 37.6891, 0.22 ) }
    dend_6 { pt3dadd( -41.6735, 49.8773, 37.2083, 0.22 ) }
    dend_6 { pt3dadd( -42.8132, 50.1364, 36.6695, 0.15 ) }
    dend_6 { pt3dadd( -43.8372, 50.3311, 36.0769, 0.29 ) }
    dend_6 { pt3dadd( -45.0936, 50.5028, 35.1853, 0.29 ) }
    dend_6 { pt3dadd( -45.6276, 50.5428, 34.6873, 0.07 ) }
    dend_6 { pt3dadd( -46.272, 50.5602, 33.9239, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 0/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 18.6679, 7.80522, 27.6623, 0.81 ) }
    dend_65 { pt3dadd( 19.562, 7.31307, 29.2855, 0.81 ) }
    dend_65 { pt3dadd( 20.6773, 6.6133, 30.8097, 0.44 ) }
    dend_65 { pt3dadd( 21.7042, 5.83768, 31.9398, 0.44 ) }
    dend_65 { pt3dadd( 22.6784, 4.97766, 32.7386, 0.66 ) }
    dend_65 { pt3dadd( 23.0809, 4.61008, 32.9854, 0.96 ) }
    dend_65 { pt3dadd( 24.2537, 3.51744, 33.559, 0.52 ) }
    dend_65 { pt3dadd( 25.0794, 2.70695, 33.7834, 0.29 ) }
    dend_65 { pt3dadd( 26.0526, 1.77939, 33.944, 0.29 ) }
    dend_65 { pt3dadd( 27.2404, 0.757264, 34.1059, 0.29 ) }
    dend_65 { pt3dadd( 28.4869, -0.143624, 34.3332, 0.29 ) }
    dend_65 { pt3dadd( 30.2264, -1.2108, 34.6887, 0.29 ) }
    dend_65 { pt3dadd( 31.4131, -1.83045, 35.0197, 0.37 ) }
    dend_65 { pt3dadd( 32.8169, -2.43085, 35.5737, 0.66 ) }
    dend_65 { pt3dadd( 34.2717, -2.92691, 36.4685, 0.88 ) }
    dend_65 { pt3dadd( 36.0686, -3.4399, 37.9037, 0.37 ) }
    dend_65 { pt3dadd( 36.7529, -3.61537, 38.5568, 0.37 ) }
    dend_65 { pt3dadd( 38.1637, -3.96433, 40.0268, 0.74 ) }
    dend_65 { pt3dadd( 39.6083, -4.36594, 41.5674, 0.81 ) }
    dend_65 { pt3dadd( 42.0913, -5.1479, 44.2752, 0.52 ) }
    dend_65 { pt3dadd( 43.1896, -5.55802, 45.5298, 0.66 ) }
    dend_65 { pt3dadd( 44.8591, -6.25036, 47.5297, 0.52 ) }
    dend_65 { pt3dadd( 46.1368, -6.79455, 48.9752, 0.29 ) }
    dend_65 { pt3dadd( 47.7014, -7.48552, 50.5514, 0.29 ) }
    dend_65 { pt3dadd( 49.2689, -8.23554, 51.9491, 0.37 ) }
    dend_65 { pt3dadd( 50.7146, -9.03378, 53.0849, 0.37 ) }
    dend_65 { pt3dadd( 51.906, -9.81214, 54.0578, 0.37 ) }
    dend_65 { pt3dadd( 53.104, -10.7683, 54.9835, 0.81 ) }
    dend_65 { pt3dadd( 53.8362, -11.4451, 55.5056, 0.88 ) }
    dend_65 { pt3dadd( 54.5248, -12.1971, 55.9215, 0.52 ) }
    dend_65 { pt3dadd( 55.2683, -13.0364, 56.3041, 0.37 ) }
    dend_65 { pt3dadd( 56.1194, -13.9179, 56.6878, 0.74 ) }
    dend_65 { pt3dadd( 57.4811, -15.1894, 57.3073, 0.37 ) }
    dend_65 { pt3dadd( 58.4957, -16.0473, 57.8467, 0.37 ) }
    dend_65 { pt3dadd( 59.2143, -16.6145, 58.2295, 0.37 ) }
    dend_65 { pt3dadd( 60.6261, -17.7085, 58.9904, 0.29 ) }
    dend_65 { pt3dadd( 61.2881, -18.2653, 59.361, 0.29 ) }
    dend_65 { pt3dadd( 62.3947, -19.2434, 59.9888, 0.59 ) }
    dend_65 { pt3dadd( 62.9846, -19.7616, 60.4046, 0.66 ) }
    dend_65 { pt3dadd( 63.8501, -20.5015, 61.0481, 0.37 ) }
    dend_65 { pt3dadd( 64.7413, -21.2694, 61.7189, 0.52 ) }
    dend_65 { pt3dadd( 65.9932, -22.3854, 62.6369, 0.22 ) }
    dend_65 { pt3dadd( 66.8686, -23.1769, 63.2899, 0.37 ) }
    dend_65 { pt3dadd( 68.9197, -25.0715, 64.8094, 0.37 ) }
    dend_65 { pt3dadd( 69.6759, -25.7542, 65.3678, 0.59 ) }
    dend_65 { pt3dadd( 70.5558, -26.5168, 66.0441, 0.81 ) }
    dend_65 { pt3dadd( 71.8596, -27.6027, 67.1746, 0.22 ) }
    dend_65 { pt3dadd( 72.6721, -28.2839, 67.9871, 0.81 ) }
    dend_65 { pt3dadd( 73.5073, -29.0393, 68.9134, 0.52 ) }
    dend_65 { pt3dadd( 74.7137, -30.1898, 70.3046, 0.22 ) }
    dend_65 { pt3dadd( 75.554, -30.9983, 71.344, 0.29 ) }
    dend_65 { pt3dadd( 76.7958, -32.1777, 73.0229, 0.96 ) }
    dend_65 { pt3dadd( 77.6961, -33.0212, 74.3339, 0.22 ) }
    dend_65 { pt3dadd( 78.249, -33.4982, 75.115, 0.66 ) }
    dend_65 { pt3dadd( 79.0931, -34.1469, 76.234, 0.37 ) }
    dend_65 { pt3dadd( 79.7378, -34.6231, 77.0231, 0.22 ) }
    dend_65 { pt3dadd( 80.8621, -35.4797, 78.2757, 0.22 ) }
    dend_65 { pt3dadd( 81.468, -35.952, 78.893, 0.52 ) }
    dend_65 { pt3dadd( 82.2993, -36.5537, 79.7327, 0.88 ) }
    dend_65 { pt3dadd( 83.5407, -37.3594, 80.9902, 0.22 ) }
    dend_65 { pt3dadd( 84.2108, -37.7385, 81.6403, 0.22 ) }
    dend_65 { pt3dadd( 84.8188, -38.0651, 82.1828, 0.37 ) }
    dend_65 { pt3dadd( 85.612, -38.4955, 82.8256, 0.15 ) }
    dend_65 { pt3dadd( 86.4996, -38.9804, 83.5134, 0.22 ) }
    dend_65 { pt3dadd( 87.2579, -39.4025, 84.078, 0.66 ) }
    dend_65 { pt3dadd( 87.8969, -39.748, 84.5037, 1.03 ) }
    dend_65 { pt3dadd( 88.8112, -40.1774, 85.0976, 0.37 ) }
    dend_65 { pt3dadd( 90.787, -40.9705, 86.4092, 0.22 ) }
    dend_65 { pt3dadd( 91.5363, -41.2545, 86.9099, 0.37 ) }
    dend_65 { pt3dadd( 92.0086, -41.4299, 87.2245, 0.37 ) }
    dend_65 { pt3dadd( 92.7701, -41.6812, 87.7247, 0.22 ) }
    dend_65 { pt3dadd( 94.1198, -42.0692, 88.6655, 0.29 ) }
    dend_65 { pt3dadd( 95.1114, -42.2923, 89.3347, 0.22 ) }
    dend_65 { pt3dadd( 95.9314, -42.4502, 89.8543, 0.88 ) }
    dend_65 { pt3dadd( 96.5037, -42.5437, 90.2275, 0.88 ) }
    dend_65 { pt3dadd( 97.744, -42.7407, 91.028, 0.15 ) }
    dend_65 { pt3dadd( 99.1203, -42.9763, 91.9741, 0.15 ) }
    dend_65 { pt3dadd( 100.948, -43.3389, 93.2869, 0.15 ) }
    dend_65 { pt3dadd( 101.773, -43.5219, 93.9184, 0.81 ) }
    dend_65 { pt3dadd( 103.911, -44.0607, 95.7207, 0.22 ) }
    dend_65 { pt3dadd( 104.678, -44.3159, 96.4304, 0.29 ) }
    dend_65 { pt3dadd( 105.73, -44.7962, 97.5183, 0.29 ) }
    dend_65 { pt3dadd( 106.635, -45.379, 98.5284, 0.66 ) }
    dend_65 { pt3dadd( 107.331, -46.0256, 99.4041, 0.22 ) }
    dend_65 { pt3dadd( 107.874, -46.6679, 100.09, 0.29 ) }
    dend_65 { pt3dadd( 108.538, -47.5718, 100.841, 0.22 ) }
    dend_65 { pt3dadd( 109.133, -48.3736, 101.417, 0.22 ) }
    dend_65 { pt3dadd( 109.869, -49.3199, 101.986, 0.74 ) }
    dend_65 { pt3dadd( 110.91, -50.6508, 102.676, 0.15 ) }
    dend_65 { pt3dadd( 111.664, -51.5768, 103.07, 0.44 ) }
    dend_65 { pt3dadd( 112.61, -52.6807, 103.398, 0.22 ) }
    dend_65 { pt3dadd( 113.471, -53.6514, 103.602, 0.74 ) }
    dend_65 { pt3dadd( 114.332, -54.6538, 103.732, 0.37 ) }
    dend_65 { pt3dadd( 115.65, -56.3244, 103.853, 0.22 ) }
    dend_65 { pt3dadd( 116.563, -57.6231, 103.874, 0.74 ) }
    dend_65 { pt3dadd( 117.996, -59.9863, 103.839, 0.22 ) }
    dend_65 { pt3dadd( 118.402, -60.7585, 103.805, 0.52 ) }
    dend_65 { pt3dadd( 118.648, -61.2915, 103.783, 0.52 ) }
    dend_65 { pt3dadd( 119.194, -62.6333, 103.754, 0.22 ) }
    dend_65 { pt3dadd( 119.564, -63.5668, 103.779, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_65 { pt3dadd( 120.149, -65.056, 103.85, 0.59 ) }
    dend_65 { pt3dadd( 121.166, -67.4262, 104.019, 0.07 ) }
    dend_65 { pt3dadd( 121.871, -68.8676, 104.126, 0.15 ) }
    dend_65 { pt3dadd( 122.455, -69.9112, 104.211, 0.66 ) }
    dend_65 { pt3dadd( 123.298, -71.2285, 104.335, 0.15 ) }
    dend_65 { pt3dadd( 124.156, -72.4348, 104.479, 0.22 ) }
    dend_65 { pt3dadd( 125.257, -73.8058, 104.685, 0.07 ) }
    dend_65 { pt3dadd( 125.78, -74.4168, 104.811, 0.29 ) }
    dend_65 { pt3dadd( 126.571, -75.3007, 105.061, 0.15 ) }
    dend_65 { pt3dadd( 127.205, -76.0365, 105.432, 0.15 ) }
    dend_65 { pt3dadd( 127.752, -76.7164, 105.987, 0.44 ) }
    dend_65 { pt3dadd( 128.288, -77.3907, 106.695, 0.22 ) }
    dend_65 { pt3dadd( 128.683, -77.9015, 107.3, 0.59 ) }
    dend_65 { pt3dadd( 129.323, -78.741, 108.438, 0.22 ) }
    dend_65 { pt3dadd( 130.457, -80.2878, 110.688, 0.37 ) }
    dend_65 { pt3dadd( 131.249, -81.4499, 112.399, 0.15 ) }
    dend_65 { pt3dadd( 131.608, -81.9709, 113.225, 0.88 ) }
    dend_65 { pt3dadd( 131.817, -82.2351, 113.662, 0.88 ) }
    dend_65 { pt3dadd( 132.919, -83.3875, 115.568, 0.22 ) }
    dend_65 { pt3dadd( 133.455, -83.8583, 116.238, 0.15 ) }
    dend_65 { pt3dadd( 134.164, -84.4064, 116.843, 0.37 ) }
    dend_65 { pt3dadd( 136.107, -85.7713, 118.043, 0.22 ) }
    dend_65 { pt3dadd( 137.383, -86.6252, 118.759, 0.22 ) }
    dend_65 { pt3dadd( 138.39, -87.2577, 119.237, 0.59 ) }
    dend_65 { pt3dadd( 140.745, -88.6361, 120.035, 0.07 ) }
    dend_65 { pt3dadd( 142.24, -89.4674, 120.451, 0.07 ) }
    dend_65 { pt3dadd( 143.356, -90.08, 120.658, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 27/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 18.6679, 7.80522, 27.6623, 0.52 ) }
    dend_64 { pt3dadd( 18.3698, 7.64302, 29.3425, 0.52 ) }
    dend_64 { pt3dadd( 18.0855, 7.42469, 31.1956, 0.44 ) }
    dend_64 { pt3dadd( 17.7007, 7.08293, 33.4325, 0.44 ) }
    dend_64 { pt3dadd( 17.3756, 6.74426, 35.1784, 0.59 ) }
    dend_64 { pt3dadd( 16.9986, 6.24942, 37.2218, 0.29 ) }
    dend_64 { pt3dadd( 16.8152, 5.94997, 38.221, 0.37 ) }
    dend_64 { pt3dadd( 16.6678, 5.54662, 39.3494, 0.37 ) }
    dend_64 { pt3dadd( 16.6148, 5.04364, 40.2562, 0.22 ) }
    dend_64 { pt3dadd( 16.5971, 4.44868, 40.9155, 0.22 ) }
    dend_64 { pt3dadd( 16.5611, 3.59154, 41.5894, 0.22 ) }
    dend_64 { pt3dadd( 16.4896, 2.72452, 42.1217, 0.59 ) }
    dend_64 { pt3dadd( 16.434, 2.14804, 42.4292, 0.96 ) }
    dend_64 { pt3dadd( 16.2739, 0.872952, 43.0583, 0.22 ) }
    dend_64 { pt3dadd( 16.0656, -0.269264, 43.635, 0.29 ) }
    dend_64 { pt3dadd( 15.8177, -1.03891, 44.1037, 0.29 ) }
    dend_64 { pt3dadd( 15.4169, -1.79204, 44.6751, 0.66 ) }
    dend_64 { pt3dadd( 14.8976, -2.43622, 45.3165, 0.44 ) }
    dend_64 { pt3dadd( 14.0749, -3.11299, 46.2596, 0.15 ) }
    dend_64 { pt3dadd( 13.1861, -3.61797, 47.2671, 0.29 ) }
    dend_64 { pt3dadd( 11.7847, -4.08982, 49.1023, 0.44 ) }
    dend_64 { pt3dadd( 11.0504, -4.24529, 50.1575, 0.88 ) }
    dend_64 { pt3dadd( 10.3577, -4.28566, 51.2536, 0.96 ) }
    dend_64 { pt3dadd( 9.06405, -4.13312, 53.4962, 0.15 ) }
    dend_64 { pt3dadd( 8.41107, -3.95671, 54.7717, 0.37 ) }
    dend_64 { pt3dadd( 6.64191, -3.29534, 58.6083, 0.66 ) }
    dend_64 { pt3dadd( 6.14559, -3.06896, 59.8716, 0.66 ) }
    dend_64 { pt3dadd( 5.25059, -2.5333, 62.7594, 0.66 ) }
    dend_64 { pt3dadd( 4.7629, -2.13145, 64.8346, 0.37 ) }
    dend_64 { pt3dadd( 4.44573, -1.78584, 66.6609, 0.37 ) }
    dend_64 { pt3dadd( 4.2418, -1.54065, 68.1846, 0.22 ) }
    dend_64 { pt3dadd( 4.05638, -1.32368, 70.1489, 0.22 ) }
    dend_64 { pt3dadd( 3.91243, -1.17335, 72.3576, 0.22 ) }
    dend_64 { pt3dadd( 3.80013, -1.20046, 74.5958, 0.22 ) }
    dend_64 { pt3dadd( 3.7467, -1.26982, 75.4558, 0.29 ) }
    dend_64 { pt3dadd( 3.62903, -1.48689, 77.5094, 0.29 ) }
    dend_64 { pt3dadd( 3.5676, -1.62178, 78.8389, 0.29 ) }
    dend_64 { pt3dadd( 3.55251, -1.69026, 79.3368, 0.44 ) }
    dend_64 { pt3dadd( 3.50881, -1.92465, 80.9705, 0.22 ) }
    dend_64 { pt3dadd( 3.46248, -2.1937, 82.6042, 0.44 ) }
    dend_64 { pt3dadd( 3.4137, -2.45847, 84.1449, 0.22 ) }
    dend_64 { pt3dadd( 3.33721, -2.84815, 86.4378, 0.22 ) }
    dend_64 { pt3dadd( 3.2869, -2.99912, 87.6181, 0.59 ) }
    dend_64 { pt3dadd( 3.14195, -3.18851, 89.8089, 0.59 ) }
    dend_64 { pt3dadd( 3.02121, -3.2439, 91.2511, 0.15 ) }
    dend_64 { pt3dadd( 2.88428, -3.20208, 92.8423, 0.66 ) }
    dend_64 { pt3dadd( 2.68298, -2.98003, 95.5771, 0.15 ) }
    dend_64 { pt3dadd( 2.54048, -2.61547, 98.5443, 0.44 ) }
    dend_64 { pt3dadd( 2.48491, -2.27417, 100.818, 1.03 ) }
    dend_64 { pt3dadd( 2.47545, -1.81389, 103.752, 1.03 ) }
    dend_64 { pt3dadd( 2.56065, -1.09558, 108.17, 0.44 ) }
    dend_64 { pt3dadd( 2.69422, -0.376257, 112.757, 0.15 ) }
    dend_64 { pt3dadd( 2.84008, 0.13737, 116.56, 0.44 ) }
    dend_64 { pt3dadd( 2.96765, 0.398994, 119.042, 0.29 ) }
    dend_64 { pt3dadd( 3.18207, 0.696956, 122.339, 0.29 ) }
    dend_64 { pt3dadd( 3.32714, 0.817607, 124.218, 0.66 ) }
    dend_64 { pt3dadd( 3.48668, 0.8348, 126.213, 0.22 ) }
    dend_64 { pt3dadd( 3.63582, 0.718004, 128.098, 0.22 ) }
    dend_64 { pt3dadd( 3.70538, 0.602559, 128.953, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 86/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 16.7764, 12.3647, 18.0793, 0.44 ) }
    dend_60 { pt3dadd( 17.4993, 11.6674, 17.9789, 0.44 ) }
    dend_60 { pt3dadd( 18.5428, 10.9558, 17.8905, 0.44 ) }
    dend_60 { pt3dadd( 19.5757, 10.4556, 17.8434, 0.44 ) }
    dend_60 { pt3dadd( 20.794, 10.0053, 17.816, 0.37 ) }
    dend_60 { pt3dadd( 21.8737, 9.64546, 17.7772, 0.37 ) }
    dend_60 { pt3dadd( 23.1113, 9.25178, 17.7439, 0.66 ) }
    dend_60 { pt3dadd( 24.2974, 8.92307, 17.7358, 0.44 ) }
    dend_60 { pt3dadd( 25.1982, 8.67772, 17.7006, 0.44 ) }
    dend_60 { pt3dadd( 25.913, 8.46745, 17.6231, 0.44 ) }
    dend_60 { pt3dadd( 27.2442, 8.03958, 17.4103, 0.44 ) }
    dend_60 { pt3dadd( 28.3233, 7.62434, 17.1816, 0.44 ) }
    dend_60 { pt3dadd( 29.1148, 7.28245, 16.9453, 0.52 ) }
    dend_60 { pt3dadd( 30.7255, 6.60322, 16.3153, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_60 { pt3dadd( 31.6377, 6.27866, 15.8681, 0.44 ) }
    dend_60 { pt3dadd( 32.7242, 6.00551, 15.2331, 0.44 ) }
    dend_60 { pt3dadd( 33.4298, 5.89057, 14.7613, 0.44 ) }
    dend_60 { pt3dadd( 34.1325, 5.82067, 14.2529, 0.44 ) }
    dend_60 { pt3dadd( 34.9364, 5.79623, 13.6542, 0.37 ) }
    dend_60 { pt3dadd( 35.9585, 5.8685, 12.9197, 0.37 ) }
    dend_60 { pt3dadd( 36.6366, 5.97251, 12.3708, 0.37 ) }
    dend_60 { pt3dadd( 37.1695, 6.09564, 11.8853, 0.37 ) }
    dend_60 { pt3dadd( 37.5843, 6.22118, 11.4882, 0.44 ) }
    dend_60 { pt3dadd( 38.5046, 6.56995, 10.5824, 0.44 ) }
    dend_60 { pt3dadd( 39.1955, 6.87428, 9.91127, 0.44 ) }
    dend_60 { pt3dadd( 40.066, 7.2852, 9.13703, 0.59 ) }
    dend_60 { pt3dadd( 41.1278, 7.75523, 8.32276, 0.74 ) }
    dend_60 { pt3dadd( 42.0647, 8.11417, 7.68539, 0.29 ) }
    dend_60 { pt3dadd( 42.7234, 8.32522, 7.28911, 0.29 ) }
    dend_60 { pt3dadd( 43.6294, 8.55992, 6.86241, 0.29 ) }
    dend_60 { pt3dadd( 44.7106, 8.77587, 6.41804, 0.37 ) }
    dend_60 { pt3dadd( 45.8955, 8.97713, 5.96801, 0.74 ) }
    dend_60 { pt3dadd( 47.0557, 9.14361, 5.52689, 0.44 ) }
    dend_60 { pt3dadd( 47.6284, 9.21527, 5.30001, 0.66 ) }
    dend_60 { pt3dadd( 48.6583, 9.29978, 4.84219, 0.74 ) }
    dend_60 { pt3dadd( 49.8445, 9.37077, 4.26827, 0.29 ) }
    dend_60 { pt3dadd( 50.8455, 9.4169, 3.70412, 0.29 ) }
    dend_60 { pt3dadd( 51.4189, 9.4266, 3.36097, 0.29 ) }
    dend_60 { pt3dadd( 51.8869, 9.38697, 3.14142, 0.29 ) }
    dend_60 { pt3dadd( 52.6934, 9.20984, 3.03938, 0.22 ) }
    dend_60 { pt3dadd( 53.8879, 9.01836, 3.47422, 0.22 ) }
    dend_60 { pt3dadd( 54.3554, 9.01336, 3.6805, 0.29 ) }
    dend_60 { pt3dadd( 54.8371, 9.05214, 3.86133, 0.29 ) }
    dend_60 { pt3dadd( 55.3815, 9.12564, 4.00243, 0.22 ) }
    dend_60 { pt3dadd( 56.6829, 9.28578, 4.14184, 0.59 ) }
    dend_60 { pt3dadd( 58.0417, 9.43063, 4.0955, 0.22 ) }
    dend_60 { pt3dadd( 59.2881, 9.53419, 3.9064, 0.52 ) }
    dend_60 { pt3dadd( 60.1962, 9.58313, 3.6814, 0.29 ) }
    dend_60 { pt3dadd( 61.0834, 9.62011, 3.40334, 0.66 ) }
    dend_60 { pt3dadd( 62.4063, 9.65777, 2.86283, 0.15 ) }
    dend_60 { pt3dadd( 63.1138, 9.65739, 2.49564, 0.37 ) }
    dend_60 { pt3dadd( 63.8133, 9.65292, 2.08983, 0.44 ) }
    dend_60 { pt3dadd( 64.6868, 9.69057, 1.63134, 0.15 ) }
    dend_60 { pt3dadd( 65.308, 9.74964, 1.33841, 0.29 ) }
    dend_60 { pt3dadd( 65.9726, 9.8289, 1.04591, 0.44 ) }
    dend_60 { pt3dadd( 66.8604, 9.91599, 0.716878, 0.59 ) }
    dend_60 { pt3dadd( 67.8898, 9.95809, 0.416594, 0.74 ) }
    dend_60 { pt3dadd( 69.0925, 9.96129, 0.109493, 0.52 ) }
    dend_60 { pt3dadd( 70.5119, 9.98599, -0.139601, 0.29 ) }
    dend_60 { pt3dadd( 71.2393, 10.0148, -0.237006, 0.22 ) }
    dend_60 { pt3dadd( 72.3659, 10.1365, -0.332736, 0.52 ) }
    dend_60 { pt3dadd( 73.7857, 10.4126, -0.45019, 0.22 ) }
    dend_60 { pt3dadd( 74.7505, 10.6372, -0.540816, 0.22 ) }
    dend_60 { pt3dadd( 76.1639, 11.029, -0.61272, 0.59 ) }
    dend_60 { pt3dadd( 76.4553, 11.1142, -0.610031, 0.59 ) }
    dend_60 { pt3dadd( 77.3845, 11.365, -0.646033, 0.29 ) }
    dend_60 { pt3dadd( 78.6192, 11.647, -0.846361, 0.22 ) }
    dend_60 { pt3dadd( 79.5231, 11.8, -1.11662, 0.22 ) }
    dend_60 { pt3dadd( 80.817, 11.9412, -1.61557, 0.37 ) }
    dend_60 { pt3dadd( 82.4346, 12.028, -2.21939, 0.15 ) }
    dend_60 { pt3dadd( 83.5937, 12.0522, -2.59395, 0.37 ) }
    dend_60 { pt3dadd( 84.7926, 12.0535, -2.90005, 0.37 ) }
    dend_60 { pt3dadd( 86.4345, 12.0903, -3.21406, 0.22 ) }
    dend_60 { pt3dadd( 87.5109, 12.1625, -3.42789, 0.22 ) }
    dend_60 { pt3dadd( 89.0676, 12.3103, -3.80764, 0.22 ) }
    dend_60 { pt3dadd( 89.6384, 12.3887, -3.92967, 0.52 ) }
    dend_60 { pt3dadd( 90.7281, 12.509, -4.0325, 0.52 ) }
    dend_60 { pt3dadd( 91.7333, 12.6099, -4.06252, 0.22 ) }
    dend_60 { pt3dadd( 92.9731, 12.7115, -4.06706, 0.15 ) }
    dend_60 { pt3dadd( 94.16, 12.8314, -4.12457, 0.15 ) }
    dend_60 { pt3dadd( 95.1017, 12.9472, -4.29685, 0.15 ) }
    dend_60 { pt3dadd( 96.6735, 13.1468, -4.6531, 0.22 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 68/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 16.7764, 12.3647, 18.0793, 0.74 ) }
    dend_59 { pt3dadd( 16.9753, 12.5765, 18.3826, 0.74 ) }
    dend_59 { pt3dadd( 17.3022, 12.8945, 18.7612, 0.66 ) }
    dend_59 { pt3dadd( 17.7399, 13.3031, 19.2365, 0.59 ) }
    dend_59 { pt3dadd( 18.1107, 13.6162, 19.6039, 0.88 ) }
    dend_59 { pt3dadd( 18.4443, 13.8468, 19.8967, 0.59 ) }
    dend_59 { pt3dadd( 18.851, 14.1114, 20.2698, 0.74 ) }
    dend_59 { pt3dadd( 19.2372, 14.3488, 20.6293, 0.66 ) }
    dend_59 { pt3dadd( 19.5731, 14.5739, 20.9523, 0.66 ) }
    dend_59 { pt3dadd( 19.9211, 14.8484, 21.3541, 0.52 ) }
    dend_59 { pt3dadd( 20.2553, 15.1716, 21.9046, 0.44 ) }
    dend_59 { pt3dadd( 20.4852, 15.4887, 22.5392, 0.44 ) }
    dend_59 { pt3dadd( 20.6207, 15.7889, 23.1744, 0.44 ) }
    dend_59 { pt3dadd( 20.6682, 16.0573, 23.7407, 0.44 ) }
    dend_59 { pt3dadd( 20.6692, 16.3726, 24.3681, 0.66 ) }
    dend_59 { pt3dadd( 20.6323, 16.7364, 25.055, 0.66 ) }
    dend_59 { pt3dadd( 20.5679, 17.1637, 25.7948, 0.66 ) }
    dend_59 { pt3dadd( 20.5178, 17.4469, 26.2598, 0.88 ) }
    dend_59 { pt3dadd( 20.3965, 17.9611, 27.111, 0.88 ) }
    dend_59 { pt3dadd( 20.3542, 18.1356, 27.4091, 0.59 ) }
    dend_59 { pt3dadd( 20.2374, 18.6143, 28.2723, 0.59 ) }
    dend_59 { pt3dadd( 20.1689, 18.8826, 28.8114, 0.59 ) }
    dend_59 { pt3dadd( 20.1048, 19.1662, 29.4178, 0.59 ) }
    dend_59 { pt3dadd( 20.0764, 19.32, 29.7781, 0.59 ) }
    dend_59 { pt3dadd( 20.0743, 19.5058, 30.2717, 0.59 ) }
    dend_59 { pt3dadd( 20.1101, 19.7415, 31.0005, 0.59 ) }
    dend_59 { pt3dadd( 20.1791, 19.9097, 31.633, 0.59 ) }
    dend_59 { pt3dadd( 20.2745, 20.0687, 32.2326, 0.44 ) }
    dend_59 { pt3dadd( 20.3983, 20.287, 32.9644, 0.44 ) }
    dend_59 { pt3dadd( 20.5293, 20.5728, 33.7429, 0.44 ) }
    dend_59 { pt3dadd( 20.5536, 20.6597, 33.9349, 0.44 ) }
    dend_59 { pt3dadd( 20.6078, 21.0381, 34.6391, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_59 { pt3dadd( 20.645, 21.6167, 35.6344, 0.44 ) }
    dend_59 { pt3dadd( 20.6497, 22.0204, 36.3502, 0.44 ) }
    dend_59 { pt3dadd( 20.6373, 22.6577, 37.5373, 0.29 ) }
    dend_59 { pt3dadd( 20.5976, 23.0121, 38.2937, 0.29 ) }
    dend_59 { pt3dadd( 20.552, 23.1914, 38.7273, 0.29 ) }
    dend_59 { pt3dadd( 20.4295, 23.4585, 39.4681, 0.29 ) }
    dend_59 { pt3dadd( 20.2565, 23.6922, 40.2767, 0.29 ) }
    dend_59 { pt3dadd( 20.063, 23.8906, 41.0492, 0.29 ) }
    dend_59 { pt3dadd( 19.7237, 24.1794, 42.2095, 0.29 ) }
    dend_59 { pt3dadd( 19.5422, 24.3105, 42.7211, 0.29 ) }
    dend_59 { pt3dadd( 19.3257, 24.4471, 43.2516, 0.29 ) }
    dend_59 { pt3dadd( 18.9312, 24.6782, 44.0826, 0.29 ) }
    dend_59 { pt3dadd( 18.4711, 24.951, 44.9535, 0.29 ) }
    dend_59 { pt3dadd( 18.0709, 25.2079, 45.6699, 0.29 ) }
    dend_59 { pt3dadd( 17.5599, 25.5703, 46.5812, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 15/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.7071, 40.7945, -11.2224, 0.52 ) }
    dend_54 { pt3dadd( -17.2827, 41.1709, -10.7078, 0.52 ) }
    dend_54 { pt3dadd( -18.1408, 41.6766, -10.0941, 0.52 ) }
    dend_54 { pt3dadd( -18.8731, 42.0402, -9.66548, 0.52 ) }
    dend_54 { pt3dadd( -19.4534, 42.2872, -9.39332, 0.44 ) }
    dend_54 { pt3dadd( -20.0316, 42.4852, -9.19626, 0.44 ) }
    dend_54 { pt3dadd( -20.386, 42.5736, -9.1112, 0.44 ) }
    dend_54 { pt3dadd( -21.1783, 42.676, -9.1315, 0.29 ) }
    dend_54 { pt3dadd( -21.7932, 42.6851, -9.28153, 0.22 ) }
    dend_54 { pt3dadd( -22.339, 42.6676, -9.50412, 0.29 ) }
    dend_54 { pt3dadd( -23.1302, 42.5977, -9.83072, 0.66 ) }
    dend_54 { pt3dadd( -23.7742, 42.5286, -10.0927, 0.29 ) }
    dend_54 { pt3dadd( -24.6188, 42.4411, -10.3696, 0.29 ) }
    dend_54 { pt3dadd( -25.1195, 42.4053, -10.5428, 0.29 ) }
    dend_54 { pt3dadd( -25.6978, 42.3709, -10.7385, 0.29 ) }
    dend_54 { pt3dadd( -26.858, 42.2745, -11.0382, 0.29 ) }
    dend_54 { pt3dadd( -27.5926, 42.2262, -11.1276, 0.66 ) }
    dend_54 { pt3dadd( -28.6027, 42.1586, -11.1064, 0.81 ) }
    dend_54 { pt3dadd( -29.7531, 42.0705, -10.9776, 0.22 ) }
    dend_54 { pt3dadd( -30.6007, 42.0207, -10.8259, 0.59 ) }
    dend_54 { pt3dadd( -31.6269, 41.9683, -10.5779, 0.29 ) }
    dend_54 { pt3dadd( -32.5874, 41.9055, -10.3335, 0.29 ) }
    dend_54 { pt3dadd( -33.6085, 41.8174, -9.99998, 0.37 ) }
    dend_54 { pt3dadd( -34.4488, 41.744, -9.65678, 0.52 ) }
    dend_54 { pt3dadd( -35.4906, 41.6666, -9.16175, 0.29 ) }
    dend_54 { pt3dadd( -36.3152, 41.6563, -8.76671, 0.29 ) }
    dend_54 { pt3dadd( -37.2593, 41.7023, -8.30251, 0.15 ) }
    dend_54 { pt3dadd( -38.0787, 41.7624, -7.89719, 0.29 ) }
    dend_54 { pt3dadd( -38.9142, 41.8502, -7.47961, 1.18 ) }
    dend_54 { pt3dadd( -39.4418, 41.914, -7.19769, 1.18 ) }
    dend_54 { pt3dadd( -40.536, 42.0543, -6.59358, 0.37 ) }
    dend_54 { pt3dadd( -41.7171, 42.2701, -5.85861, 0.22 ) }
    dend_54 { pt3dadd( -42.0853, 42.3595, -5.5975, 0.22 ) }
    dend_54 { pt3dadd( -42.6398, 42.4998, -5.19248, 0.66 ) }
    dend_54 { pt3dadd( -43.2588, 42.6287, -4.77127, 0.52 ) }
    dend_54 { pt3dadd( -44.2385, 42.7735, -4.11973, 0.29 ) }
    dend_54 { pt3dadd( -45.2149, 42.8949, -3.54437, 0.29 ) }
    dend_54 { pt3dadd( -45.7792, 42.9788, -3.28362, 0.29 ) }
    dend_54 { pt3dadd( -46.5053, 43.1125, -3.01061, 0.81 ) }
    dend_54 { pt3dadd( -47.849, 43.3851, -2.58222, 0.22 ) }
    dend_54 { pt3dadd( -48.6282, 43.5438, -2.40502, 0.22 ) }
    dend_54 { pt3dadd( -49.8467, 43.7897, -2.21732, 0.15 ) }
    dend_54 { pt3dadd( -50.5541, 43.9117, -2.15369, 0.22 ) }
    dend_54 { pt3dadd( -51.0371, 43.9894, -2.12212, 0.22 ) }
    dend_54 { pt3dadd( -51.8961, 44.1439, -2.05863, 0.22 ) }
    dend_54 { pt3dadd( -52.9139, 44.3829, -1.97023, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 61/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.7071, 40.7945, -11.2224, 0.37 ) }
    dend_53 { pt3dadd( -16.4043, 41.5717, -10.9594, 0.37 ) }
    dend_53 { pt3dadd( -16.3007, 41.9205, -10.8569, 0.37 ) }
    dend_53 { pt3dadd( -16.1748, 42.5537, -10.7509, 0.37 ) }
    dend_53 { pt3dadd( -16.1212, 42.9697, -10.724, 0.37 ) }
    dend_53 { pt3dadd( -16.0969, 43.2212, -10.7074, 0.29 ) }
    dend_53 { pt3dadd( -16.0618, 43.6086, -10.6681, 0.29 ) }
    dend_53 { pt3dadd( -16.034, 44.1226, -10.5803, 0.52 ) }
    dend_53 { pt3dadd( -15.9763, 44.7543, -10.4105, 0.66 ) }
    dend_53 { pt3dadd( -15.9088, 45.2972, -10.2016, 0.66 ) }
    dend_53 { pt3dadd( -15.8208, 45.8471, -9.92192, 0.22 ) }
    dend_53 { pt3dadd( -15.74, 46.2903, -9.66159, 0.59 ) }
    dend_53 { pt3dadd( -15.6422, 46.854, -9.27538, 0.37 ) }
    dend_53 { pt3dadd( -15.5866, 47.2765, -8.91507, 0.22 ) }
    dend_53 { pt3dadd( -15.5836, 47.6526, -8.5413, 0.22 ) }
    dend_53 { pt3dadd( -15.6279, 47.8594, -8.31511, 0.22 ) }
    dend_53 { pt3dadd( -15.7227, 48.0644, -8.08823, 0.52 ) }
    dend_53 { pt3dadd( -15.9626, 48.4378, -7.67526, 0.22 ) }
    dend_53 { pt3dadd( -16.2428, 48.7657, -7.32049, 0.15 ) }
    dend_53 { pt3dadd( -16.58, 49.0899, -6.9692, 0.29 ) }
    dend_53 { pt3dadd( -16.9437, 49.387, -6.62656, 0.29 ) }
    dend_53 { pt3dadd( -17.161, 49.5425, -6.42413, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 24.1521, -21.3004, -15.7831, 0.52 ) }
    dend_42 { pt3dadd( 24.9352, -21.4976, -17.1462, 0.52 ) }
    dend_42 { pt3dadd( 25.3883, -21.6405, -18.0728, 0.52 ) }
    dend_42 { pt3dadd( 25.7373, -21.7561, -18.9274, 0.52 ) }
    dend_42 { pt3dadd( 26.1428, -21.858, -20.0376, 0.52 ) }
    dend_42 { pt3dadd( 26.6904, -21.953, -21.5541, 0.52 ) }
    dend_42 { pt3dadd( 26.9801, -21.997, -22.3396, 0.52 ) }
    dend_42 { pt3dadd( 27.1018, -22.0249, -22.7758, 0.52 ) }
    dend_42 { pt3dadd( 27.2994, -22.0714, -23.4821, 0.52 ) }
    dend_42 { pt3dadd( 27.6227, -22.1889, -24.4442, 0.52 ) }
    dend_42 { pt3dadd( 27.8159, -22.2791, -24.8528, 0.52 ) }
    dend_42 { pt3dadd( 28.5656, -22.7614, -25.8031, 0.52 ) }
    dend_42 { pt3dadd( 29.021, -23.0926, -26.1872, 0.52 ) }
    dend_42 { pt3dadd( 29.5058, -23.4893, -26.493, 0.52 ) }
    dend_42 { pt3dadd( 30.178, -24.0833, -26.8635, 0.66 ) }
    dend_42 { pt3dadd( 30.6557, -24.5562, -27.1265, 0.88 ) }
    dend_42 { pt3dadd( 31.5953, -25.528, -27.6832, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_42 { pt3dadd( 32.2916, -26.2472, -28.1209, 0.74 ) }
    dend_42 { pt3dadd( 32.7497, -26.6973, -28.4536, 0.74 ) }
    dend_42 { pt3dadd( 33.3985, -27.2928, -29.0433, 0.74 ) }
    dend_42 { pt3dadd( 33.8944, -27.6984, -29.601, 0.52 ) }
    dend_42 { pt3dadd( 34.2784, -28.0011, -30.1114, 0.37 ) }
    dend_42 { pt3dadd( 34.8043, -28.3531, -30.9108, 0.37 ) }
    dend_42 { pt3dadd( 35.2613, -28.6085, -31.6422, 0.59 ) }
    dend_42 { pt3dadd( 35.932, -28.8891, -32.6819, 0.37 ) }
    dend_42 { pt3dadd( 36.4269, -29.049, -33.3697, 0.37 ) }
    dend_42 { pt3dadd( 36.724, -29.1357, -33.7378, 0.37 ) }
    dend_42 { pt3dadd( 37.2275, -29.3257, -34.3376, 0.37 ) }
    dend_42 { pt3dadd( 37.6803, -29.5422, -34.9062, 0.37 ) }
    dend_42 { pt3dadd( 38.1758, -29.8253, -35.5871, 0.44 ) }
    dend_42 { pt3dadd( 38.6549, -30.1241, -36.3223, 0.44 ) }
    dend_42 { pt3dadd( 39.2094, -30.4748, -37.3525, 0.59 ) }
    dend_42 { pt3dadd( 39.6814, -30.8093, -38.5609, 0.44 ) }
    dend_42 { pt3dadd( 39.9032, -31.0591, -39.4757, 0.44 ) }
    dend_42 { pt3dadd( 39.9838, -31.2232, -40.1039, 0.44 ) }
    dend_42 { pt3dadd( 40.0207, -31.4122, -40.8743, 0.44 ) }
    dend_42 { pt3dadd( 40.017, -31.6733, -42.0221, 0.44 ) }
    dend_42 { pt3dadd( 39.9887, -31.8743, -43.0462, 0.44 ) }
    dend_42 { pt3dadd( 39.972, -32.0268, -43.8448, 0.74 ) }
    dend_42 { pt3dadd( 39.9401, -32.3165, -44.9963, 0.96 ) }
    dend_42 { pt3dadd( 39.9121, -32.6527, -46.0405, 0.52 ) }
    dend_42 { pt3dadd( 39.8725, -33.094, -47.1353, 0.66 ) }
    dend_42 { pt3dadd( 39.8426, -33.5834, -48.1487, 1.25 ) }
    dend_42 { pt3dadd( 39.8238, -33.959, -48.882, 1.11 ) }
    dend_42 { pt3dadd( 39.7692, -34.5632, -50.0661, 0.44 ) }
    dend_42 { pt3dadd( 39.6913, -35.0528, -51.0402, 0.44 ) }
    dend_42 { pt3dadd( 39.6189, -35.4183, -51.7834, 0.66 ) }
    dend_42 { pt3dadd( 39.494, -35.8935, -52.7621, 0.44 ) }
    dend_42 { pt3dadd( 39.3775, -36.212, -53.4531, 0.44 ) }
    dend_42 { pt3dadd( 39.2155, -36.4454, -54.1069, 0.44 ) }
    dend_42 { pt3dadd( 39.0112, -36.5612, -54.7011, 0.44 ) }
    dend_42 { pt3dadd( 38.6376, -36.6043, -55.4336, 0.44 ) }
    dend_42 { pt3dadd( 38.264, -36.594, -56.0263, 0.74 ) }
    dend_42 { pt3dadd( 37.7697, -36.5625, -56.6933, 1.11 ) }
    dend_42 { pt3dadd( 37.0321, -36.5277, -57.6467, 0.44 ) }
    dend_42 { pt3dadd( 36.6257, -36.5189, -58.1998, 0.44 ) }
    dend_42 { pt3dadd( 36.2305, -36.5157, -58.8273, 0.52 ) }
    dend_42 { pt3dadd( 35.7179, -36.4786, -59.8305, 0.37 ) }
    dend_42 { pt3dadd( 35.4644, -36.4177, -60.5318, 0.59 ) }
    dend_42 { pt3dadd( 35.2434, -36.2796, -61.5319, 0.74 ) }
    dend_42 { pt3dadd( 35.1463, -36.1166, -62.4918, 0.74 ) }
    dend_42 { pt3dadd( 35.0953, -35.9185, -63.5224, 0.74 ) }
    dend_42 { pt3dadd( 35.0938, -35.726, -64.3664, 0.52 ) }
    dend_42 { pt3dadd( 35.1148, -35.5164, -65.0877, 0.52 ) }
    dend_42 { pt3dadd( 35.1337, -35.2393, -65.9291, 0.22 ) }
    dend_42 { pt3dadd( 35.0938, -34.9336, -66.7414, 0.22 ) }
    dend_42 { pt3dadd( 35.0062, -34.7162, -67.2591, 0.44 ) }
    dend_42 { pt3dadd( 34.8551, -34.4728, -67.8333, 0.44 ) }
    dend_42 { pt3dadd( 34.7462, -34.3486, -68.1402, 0.44 ) }
    dend_42 { pt3dadd( 34.3455, -33.9583, -69.0204, 0.15 ) }
    dend_42 { pt3dadd( 33.8645, -33.5149, -69.9018, 0.15 ) }
    dend_42 { pt3dadd( 33.4779, -33.1332, -70.5423, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 55/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 24.1521, -21.3004, -15.7831, 0.52 ) }
    dend_41 { pt3dadd( 24.6605, -20.8392, -16.7997, 0.52 ) }
    dend_41 { pt3dadd( 25.1791, -20.1995, -18.1233, 0.52 ) }
    dend_41 { pt3dadd( 25.5476, -19.6201, -19.1816, 0.74 ) }
    dend_41 { pt3dadd( 25.8418, -19.0951, -20.0445, 0.96 ) }
    dend_41 { pt3dadd( 26.2574, -18.305, -21.2983, 1.11 ) }
    dend_41 { pt3dadd( 26.7097, -17.3965, -22.6322, 0.52 ) }
    dend_41 { pt3dadd( 27.0799, -16.4885, -23.8776, 0.52 ) }
    dend_41 { pt3dadd( 27.3823, -15.6442, -24.8651, 0.66 ) }
    dend_41 { pt3dadd( 27.5759, -15.1342, -25.3572, 0.66 ) }
    dend_41 { pt3dadd( 28.111, -13.9965, -26.1985, 0.44 ) }
    dend_41 { pt3dadd( 28.701, -13.0237, -26.6309, 0.44 ) }
    dend_41 { pt3dadd( 29.2756, -12.2867, -26.6863, 0.44 ) }
    dend_41 { pt3dadd( 29.8973, -11.6023, -26.5436, 0.52 ) }
    dend_41 { pt3dadd( 31.3387, -10.2649, -26.0859, 0.59 ) }
    dend_41 { pt3dadd( 32.0249, -9.74193, -25.8537, 0.37 ) }
    dend_41 { pt3dadd( 32.9373, -9.17786, -25.5255, 0.59 ) }
    dend_41 { pt3dadd( 34.4325, -8.45387, -24.9655, 0.44 ) }
    dend_41 { pt3dadd( 35.4731, -8.02431, -24.5956, 0.29 ) }
    dend_41 { pt3dadd( 36.7246, -7.55635, -24.2305, 0.37 ) }
    dend_41 { pt3dadd( 38.0426, -7.10992, -23.9394, 0.29 ) }
    dend_41 { pt3dadd( 38.9554, -6.8217, -23.8001, 0.66 ) }
    dend_41 { pt3dadd( 40.7281, -6.27912, -23.687, 0.44 ) }
    dend_41 { pt3dadd( 41.7479, -5.95218, -23.7432, 0.44 ) }
    dend_41 { pt3dadd( 43.1881, -5.44212, -23.9361, 0.52 ) }
    dend_41 { pt3dadd( 43.9658, -5.13513, -24.118, 0.66 ) }
    dend_41 { pt3dadd( 45.5817, -4.43509, -24.6657, 0.44 ) }
    dend_41 { pt3dadd( 46.709, -3.92736, -25.1219, 0.44 ) }
    dend_41 { pt3dadd( 47.4788, -3.57768, -25.4893, 0.44 ) }
    dend_41 { pt3dadd( 48.2796, -3.23062, -25.8593, 0.37 ) }
    dend_41 { pt3dadd( 49.6288, -2.69918, -26.4319, 0.44 ) }
    dend_41 { pt3dadd( 50.6125, -2.38293, -26.7702, 0.52 ) }
    dend_41 { pt3dadd( 52.1129, -2.00248, -27.1292, 0.44 ) }
    dend_41 { pt3dadd( 53.7792, -1.65458, -27.4155, 0.22 ) }
    dend_41 { pt3dadd( 54.6494, -1.47249, -27.5185, 0.29 ) }
    dend_41 { pt3dadd( 55.3318, -1.32975, -27.5556, 0.37 ) }
    dend_41 { pt3dadd( 56.4625, -1.13161, -27.5216, 0.22 ) }
    dend_41 { pt3dadd( 57.694, -0.951181, -27.4137, 0.22 ) }
    dend_41 { pt3dadd( 58.7521, -0.792366, -27.2608, 0.29 ) }
    dend_41 { pt3dadd( 59.5572, -0.609674, -27.1016, 0.29 ) }
    dend_41 { pt3dadd( 60.5388, -0.274965, -26.9093, 0.29 ) }
    dend_41 { pt3dadd( 61.4846, 0.177609, -26.7154, 0.29 ) }
    dend_41 { pt3dadd( 62.7979, 0.924299, -26.445, 0.22 ) }
    dend_41 { pt3dadd( 63.3363, 1.23735, -26.3079, 0.29 ) }
    dend_41 { pt3dadd( 64.3499, 1.80735, -26.0114, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_41 { pt3dadd( 64.9827, 2.14375, -25.8204, 0.44 ) }
    dend_41 { pt3dadd( 66.1709, 2.80445, -25.4928, 0.74 ) }
    dend_41 { pt3dadd( 66.8119, 3.1786, -25.3143, 0.29 ) }
    dend_41 { pt3dadd( 67.9921, 3.85255, -25.0014, 0.29 ) }
    dend_41 { pt3dadd( 68.9013, 4.34765, -24.7753, 0.29 ) }
    dend_41 { pt3dadd( 69.6641, 4.74117, -24.6024, 0.44 ) }
    dend_41 { pt3dadd( 70.7235, 5.2831, -24.3422, 0.59 ) }
    dend_41 { pt3dadd( 71.7392, 5.78883, -24.1028, 0.37 ) }
    dend_41 { pt3dadd( 72.6866, 6.28014, -23.8286, 0.22 ) }
    dend_41 { pt3dadd( 73.5082, 6.73995, -23.5698, 0.22 ) }
    dend_41 { pt3dadd( 73.9264, 6.9939, -23.4071, 0.22 ) }
    dend_41 { pt3dadd( 75.2499, 7.83023, -22.8323, 0.44 ) }
    dend_41 { pt3dadd( 76.3754, 8.54676, -22.2635, 0.22 ) }
    dend_41 { pt3dadd( 77.3537, 9.20551, -21.6648, 0.66 ) }
    dend_41 { pt3dadd( 77.9668, 9.63778, -21.2231, 0.59 ) }
    dend_41 { pt3dadd( 78.8056, 10.2056, -20.5729, 0.66 ) }
    dend_41 { pt3dadd( 79.6433, 10.7519, -19.9087, 0.37 ) }
    dend_41 { pt3dadd( 80.3383, 11.1878, -19.3744, 0.15 ) }
    dend_41 { pt3dadd( 81.2396, 11.6199, -18.6464, 0.22 ) }
    dend_41 { pt3dadd( 81.7454, 11.7677, -18.3026, 0.22 ) }
    dend_41 { pt3dadd( 82.7288, 11.9467, -17.6423, 0.29 ) }
    dend_41 { pt3dadd( 83.4231, 12.0279, -17.1991, 0.29 ) }
    dend_41 { pt3dadd( 83.9, 12.0758, -16.9219, 0.52 ) }
    dend_41 { pt3dadd( 85.6711, 12.2105, -16.0774, 0.59 ) }
    dend_41 { pt3dadd( 87.077, 12.2502, -15.4994, 0.37 ) }
    dend_41 { pt3dadd( 88.4738, 12.2301, -14.9707, 0.37 ) }
    dend_41 { pt3dadd( 89.1992, 12.1861, -14.7111, 0.88 ) }
    dend_41 { pt3dadd( 89.8171, 12.1025, -14.4906, 0.96 ) }
    dend_41 { pt3dadd( 91.2159, 11.8169, -14.0228, 0.44 ) }
    dend_41 { pt3dadd( 93.4236, 11.2413, -13.2948, 0.29 ) }
    dend_41 { pt3dadd( 94.5154, 10.9095, -12.8817, 0.29 ) }
    dend_41 { pt3dadd( 95.4453, 10.6107, -12.4819, 0.29 ) }
    dend_41 { pt3dadd( 96.2518, 10.3519, -12.0723, 0.59 ) }
    dend_41 { pt3dadd( 97.2062, 10.0487, -11.5128, 0.22 ) }
    dend_41 { pt3dadd( 98.1162, 9.78171, -10.9142, 0.22 ) }
    dend_41 { pt3dadd( 99.3282, 9.46549, -10.0979, 0.59 ) }
    dend_41 { pt3dadd( 100.528, 9.21799, -9.30474, 0.22 ) }
    dend_41 { pt3dadd( 101.005, 9.15372, -9.01299, 0.22 ) }
    dend_41 { pt3dadd( 102.016, 9.12046, -8.50099, 0.44 ) }
    dend_41 { pt3dadd( 102.587, 9.14437, -8.25673, 0.81 ) }
    dend_41 { pt3dadd( 104.201, 9.28541, -7.71191, 0.44 ) }
    dend_41 { pt3dadd( 104.914, 9.39356, -7.52134, 0.44 ) }
    dend_41 { pt3dadd( 106.727, 9.74918, -7.16182, 0.74 ) }
    dend_41 { pt3dadd( 108.614, 10.2167, -6.86241, 0.22 ) }
    dend_41 { pt3dadd( 109.308, 10.423, -6.77819, 0.81 ) }
    dend_41 { pt3dadd( 109.643, 10.5387, -6.74568, 0.81 ) }
    dend_41 { pt3dadd( 110.64, 10.9314, -6.7244, 0.37 ) }
    dend_41 { pt3dadd( 112.365, 11.6449, -6.80328, 0.22 ) }
    dend_41 { pt3dadd( 113.33, 12.0781, -6.91417, 0.22 ) }
    dend_41 { pt3dadd( 114.642, 12.6874, -7.09936, 0.22 ) }
    dend_41 { pt3dadd( 115.469, 13.0703, -7.22395, 0.22 ) }
    dend_41 { pt3dadd( 117.111, 13.8348, -7.48069, 0.22 ) }
    dend_41 { pt3dadd( 117.923, 14.2047, -7.60001, 1.03 ) }
    dend_41 { pt3dadd( 119.09, 14.7181, -7.69608, 0.07 ) }
    dend_41 { pt3dadd( 120.074, 15.1268, -7.6664, 0.22 ) }
    dend_41 { pt3dadd( 120.804, 15.4346, -7.5562, 0.15 ) }
    dend_41 { pt3dadd( 121.456, 15.7411, -7.37495, 0.59 ) }
    dend_41 { pt3dadd( 122.135, 16.1399, -7.06646, 0.59 ) }
    dend_41 { pt3dadd( 123.273, 17.0661, -6.3903, 0.15 ) }
    dend_41 { pt3dadd( 123.924, 17.9153, -5.8462, 0.44 ) }
    dend_41 { pt3dadd( 124.157, 18.4311, -5.57737, 0.44 ) }
    dend_41 { pt3dadd( 124.462, 19.5332, -5.11707, 0.22 ) }
    dend_41 { pt3dadd( 124.572, 20.1387, -4.90169, 0.66 ) }
    dend_41 { pt3dadd( 124.717, 21.2164, -4.57063, 0.15 ) }
    dend_41 { pt3dadd( 124.842, 22.3125, -4.26559, 0.22 ) }
    dend_41 { pt3dadd( 124.917, 22.8743, -4.07471, 0.88 ) }
    dend_41 { pt3dadd( 125.002, 23.4179, -3.78956, 0.88 ) }
    dend_41 { pt3dadd( 125.251, 24.7088, -2.82159, 0.29 ) }
    dend_41 { pt3dadd( 125.416, 25.4343, -2.22226, 0.29 ) }
    dend_41 { pt3dadd( 125.667, 26.3935, -1.3294, 0.66 ) }
    dend_41 { pt3dadd( 125.891, 27.2636, -0.427852, 0.29 ) }
    dend_41 { pt3dadd( 126.237, 28.6885, 1.21899, 0.22 ) }
    dend_41 { pt3dadd( 126.447, 29.7389, 2.59199, 0.15 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.07118, -67.1722, -3.65421, 0.15 ) }
    dend_39 { pt3dadd( -1.15855, -67.3028, -2.64565, 0.15 ) }
    dend_39 { pt3dadd( -0.262095, -67.4353, -1.83757, 0.22 ) }
    dend_39 { pt3dadd( 0.194048, -67.4878, -1.47618, 0.15 ) }
    dend_39 { pt3dadd( 0.829639, -67.5404, -1.00073, 0.15 ) }
    dend_39 { pt3dadd( 1.3153, -67.5778, -0.652372, 0.44 ) }
    dend_39 { pt3dadd( 1.72637, -67.6115, -0.361249, 0.44 ) }
    dend_39 { pt3dadd( 2.69629, -67.6922, 0.34354, 0.22 ) }
    dend_39 { pt3dadd( 3.46608, -67.7798, 0.921904, 0.22 ) }
    dend_39 { pt3dadd( 4.53299, -67.9409, 1.79672, 0.15 ) }
    dend_39 { pt3dadd( 5.23702, -68.076, 2.4658, 0.74 ) }
    dend_39 { pt3dadd( 6.30382, -68.3336, 3.74683, 0.22 ) }
    dend_39 { pt3dadd( 6.84293, -68.5114, 4.60752, 0.22 ) }
    dend_39 { pt3dadd( 7.0576, -68.6175, 5.08648, 0.29 ) }
    dend_39 { pt3dadd( 7.35893, -68.8124, 5.99045, 0.29 ) }
    dend_39 { pt3dadd( 7.74622, -69.1287, 7.43957, 0.15 ) }
    dend_39 { pt3dadd( 8.0304, -69.414, 8.79444, 0.15 ) }
    dend_39 { pt3dadd( 8.25639, -69.7031, 10.2224, 0.52 ) }
    dend_39 { pt3dadd( 8.48194, -69.9826, 11.6893, 0.96 ) }
    dend_39 { pt3dadd( 8.72636, -70.2497, 13.3491, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 93/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.07118, -67.1722, -3.65421, 0.59 ) }
    dend_38 { pt3dadd( -2.37235, -68.212, -3.35241, 0.59 ) }
    dend_38 { pt3dadd( -2.60434, -69.0678, -2.99424, 0.22 ) }
    dend_38 { pt3dadd( -2.84832, -70.0463, -2.47078, 0.22 ) }
    dend_38 { pt3dadd( -3.00146, -70.6895, -2.10991, 0.52 ) }
    dend_38 { pt3dadd( -3.17316, -71.4295, -1.69306, 0.96 ) }
    dend_38 { pt3dadd( -3.47135, -72.8169, -0.871271, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_38 { pt3dadd( -3.61844, -73.7301, -0.305188, 0.22 ) }
    dend_38 { pt3dadd( -3.72193, -74.7086, 0.32604, 0.59 ) }
    dend_38 { pt3dadd( -3.76987, -75.6294, 0.918729, 0.88 ) }
    dend_38 { pt3dadd( -3.75891, -77.3645, 1.99251, 0.44 ) }
    dend_38 { pt3dadd( -3.69335, -78.5306, 2.62297, 0.44 ) }
    dend_38 { pt3dadd( -3.63963, -79.4986, 2.98333, 0.15 ) }
    dend_38 { pt3dadd( -3.61377, -80.5264, 3.20691, 0.22 ) }
    dend_38 { pt3dadd( -3.62025, -80.9085, 3.22334, 0.96 ) }
    dend_38 { pt3dadd( -3.68398, -81.8306, 3.13366, 1.33 ) }
    dend_38 { pt3dadd( -3.86843, -83.2706, 2.8063, 0.59 ) }
    dend_38 { pt3dadd( -4.25409, -85.1758, 2.25762, 0.22 ) }
    dend_38 { pt3dadd( -4.47022, -86.0088, 2.02028, 0.44 ) }
    dend_38 { pt3dadd( -4.91059, -87.5882, 1.58184, 0.96 ) }
    dend_38 { pt3dadd( -5.16937, -88.6206, 1.34056, 0.22 ) }
    dend_38 { pt3dadd( -5.30766, -89.2076, 1.22966, 0.37 ) }
    dend_38 { pt3dadd( -5.52451, -90.1526, 1.07423, 0.37 ) }
    dend_38 { pt3dadd( -5.7551, -91.1837, 0.960963, 0.22 ) }
    dend_38 { pt3dadd( -6.03169, -92.2539, 0.856184, 1.11 ) }
    dend_38 { pt3dadd( -6.53483, -93.8838, 0.70673, 0.22 ) }
    dend_38 { pt3dadd( -6.69197, -94.3659, 0.650471, 0.22 ) }
    dend_38 { pt3dadd( -7.12064, -95.7566, 0.461093, 0.22 ) }
    dend_38 { pt3dadd( -7.2918, -96.3872, 0.361995, 0.22 ) }
    dend_38 { pt3dadd( -7.55946, -97.4625, 0.173555, 1.18 ) }
    dend_38 { pt3dadd( -7.84192, -98.7014, -0.0151167, 0.29 ) }
    dend_38 { pt3dadd( -8.1495, -100.102, -0.17333, 0.81 ) }
    dend_38 { pt3dadd( -8.32997, -101.113, -0.241716, 0.15 ) }
    dend_38 { pt3dadd( -8.44357, -101.861, -0.252709, 0.15 ) }
    dend_38 { pt3dadd( -8.50931, -102.194, -0.248373, 0.15 ) }
    dend_38 { pt3dadd( -8.92297, -103.369, -0.176693, 0.29 ) }
    dend_38 { pt3dadd( -9.80743, -104.929, -0.00803947, 0.15 ) }
    dend_38 { pt3dadd( -10.1917, -105.389, 0.0692505, 0.44 ) }
    dend_38 { pt3dadd( -10.7233, -105.886, 0.185892, 0.88 ) }
    dend_38 { pt3dadd( -11.7112, -106.664, 0.416392, 0.22 ) }
    dend_38 { pt3dadd( -13.133, -107.645, 0.764686, 0.15 ) }
    dend_38 { pt3dadd( -13.5494, -107.893, 0.871845, 0.15 ) }
    dend_38 { pt3dadd( -14.2009, -108.247, 1.04715, 0.59 ) }
    dend_38 { pt3dadd( -14.6309, -108.463, 1.15052, 0.96 ) }
    dend_38 { pt3dadd( -15.8174, -109.014, 1.40976, 0.22 ) }
    dend_38 { pt3dadd( -16.783, -109.467, 1.57689, 0.37 ) }
    dend_38 { pt3dadd( -17.7354, -109.937, 1.70475, 0.37 ) }
    dend_38 { pt3dadd( -18.7111, -110.428, 1.80545, 0.22 ) }
    dend_38 { pt3dadd( -19.9793, -111.108, 1.95571, 0.15 ) }
    dend_38 { pt3dadd( -20.8095, -111.573, 2.11565, 0.15 ) }
    dend_38 { pt3dadd( -21.6152, -112.041, 2.33638, 0.15 ) }
    dend_38 { pt3dadd( -22.1175, -112.343, 2.48945, 0.15 ) }
    dend_38 { pt3dadd( -22.9076, -112.852, 2.77157, 0.81 ) }
    dend_38 { pt3dadd( -24.3703, -113.89, 3.42682, 0.07 ) }
    dend_38 { pt3dadd( -25.399, -114.764, 4.05112, 0.07 ) }
    dend_38 { pt3dadd( -26.1545, -115.46, 4.61807, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 49/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 36.497, -1.67019, -4.8993, 0.44 ) }
    dend_34 { pt3dadd( 37.2927, -2.61651, -6.24948, 0.44 ) }
    dend_34 { pt3dadd( 37.7845, -3.22418, -7.22751, 0.44 ) }
    dend_34 { pt3dadd( 37.9792, -3.45088, -7.61176, 0.52 ) }
    dend_34 { pt3dadd( 38.4858, -3.93491, -8.51509, 0.52 ) }
    dend_34 { pt3dadd( 39.0771, -4.38567, -9.414, 0.59 ) }
    dend_34 { pt3dadd( 39.636, -4.74667, -10.1543, 0.59 ) }
    dend_34 { pt3dadd( 40.3398, -5.16384, -11.0088, 0.59 ) }
    dend_34 { pt3dadd( 40.8113, -5.39828, -11.5582, 0.52 ) }
    dend_34 { pt3dadd( 41.4645, -5.69029, -12.2891, 0.52 ) }
    dend_34 { pt3dadd( 42.128, -5.95736, -13.0139, 0.44 ) }
    dend_34 { pt3dadd( 42.5343, -6.11948, -13.4809, 0.44 ) }
    dend_34 { pt3dadd( 43.1714, -6.43927, -14.2249, 0.44 ) }
    dend_34 { pt3dadd( 43.5513, -6.68307, -14.6907, 0.52 ) }
    dend_34 { pt3dadd( 43.99, -7.02557, -15.246, 0.52 ) }
    dend_34 { pt3dadd( 44.7114, -7.67865, -16.0763, 0.44 ) }
    dend_34 { pt3dadd( 45.2652, -8.15976, -16.6287, 0.81 ) }
    dend_34 { pt3dadd( 45.7817, -8.58019, -17.0603, 0.96 ) }
    dend_34 { pt3dadd( 46.6709, -9.28431, -17.6646, 0.59 ) }
    dend_34 { pt3dadd( 47.4061, -9.82144, -18.1129, 0.52 ) }
    dend_34 { pt3dadd( 48.527, -10.5729, -18.7445, 0.44 ) }
    dend_34 { pt3dadd( 49.6517, -11.2731, -19.2866, 0.44 ) }
    dend_34 { pt3dadd( 50.4266, -11.7254, -19.6309, 0.37 ) }
    dend_34 { pt3dadd( 51.4759, -12.2827, -20.1339, 0.66 ) }
    dend_34 { pt3dadd( 52.8911, -12.998, -20.8757, 0.37 ) }
    dend_34 { pt3dadd( 54.1333, -13.6179, -21.6111, 0.44 ) }
    dend_34 { pt3dadd( 55.1907, -14.1412, -22.2761, 0.74 ) }
    dend_34 { pt3dadd( 55.5783, -14.3393, -22.5107, 0.74 ) }
    dend_34 { pt3dadd( 56.8175, -14.8702, -23.2957, 0.22 ) }
    dend_34 { pt3dadd( 57.387, -15.0826, -23.6763, 0.22 ) }
    dend_34 { pt3dadd( 58.0232, -15.3443, -24.1216, 0.66 ) }
    dend_34 { pt3dadd( 58.6264, -15.6228, -24.6016, 0.22 ) }
    dend_34 { pt3dadd( 59.2244, -15.9434, -25.1572, 0.37 ) }
    dend_34 { pt3dadd( 60.4945, -16.7441, -26.3265, 0.15 ) }
    dend_34 { pt3dadd( 60.9636, -17.0469, -26.7265, 0.59 ) }
    dend_34 { pt3dadd( 61.3699, -17.2878, -27.0647, 0.74 ) }
    dend_34 { pt3dadd( 61.9445, -17.6362, -27.5461, 0.52 ) }
    dend_34 { pt3dadd( 62.4546, -17.9754, -27.9732, 0.81 ) }
    dend_34 { pt3dadd( 63.3697, -18.6112, -28.7083, 0.29 ) }
    dend_34 { pt3dadd( 64.5649, -19.4433, -29.5461, 0.22 ) }
    dend_34 { pt3dadd( 65.3462, -19.9116, -30.0354, 0.22 ) }
    dend_34 { pt3dadd( 66.088, -20.2696, -30.4752, 0.22 ) }
    dend_34 { pt3dadd( 66.8316, -20.5519, -30.8993, 0.29 ) }
    dend_34 { pt3dadd( 67.631, -20.798, -31.3437, 0.59 ) }
    dend_34 { pt3dadd( 68.5179, -21.037, -31.8299, 0.96 ) }
    dend_34 { pt3dadd( 69.325, -21.2268, -32.2904, 0.29 ) }
    dend_34 { pt3dadd( 70.3703, -21.4036, -32.9256, 0.22 ) }
    dend_34 { pt3dadd( 71.3828, -21.4991, -33.5216, 0.44 ) }
    dend_34 { pt3dadd( 71.9657, -21.521, -33.8497, 0.22 ) }
    dend_34 { pt3dadd( 72.7939, -21.5264, -34.282, 0.29 ) }
    dend_34 { pt3dadd( 74.0876, -21.5273, -34.9392, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_34 { pt3dadd( 75.2516, -21.5591, -35.5263, 0.74 ) }
    dend_34 { pt3dadd( 76.3149, -21.6489, -36.038, 0.15 ) }
    dend_34 { pt3dadd( 76.8514, -21.6938, -36.3711, 0.29 ) }
    dend_34 { pt3dadd( 77.9428, -21.7932, -37.3217, 0.22 ) }
    dend_34 { pt3dadd( 78.4457, -21.8459, -37.8145, 0.29 ) }
    dend_34 { pt3dadd( 79.0695, -21.9628, -38.5342, 0.52 ) }
    dend_34 { pt3dadd( 79.5452, -22.0991, -39.2501, 0.81 ) }
    dend_34 { pt3dadd( 80.8481, -22.5847, -41.8943, 0.29 ) }
    dend_34 { pt3dadd( 81.3597, -22.8168, -43.2467, 0.52 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 9/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 36.497, -1.67019, -4.8993, 0.52 ) }
    dend_33 { pt3dadd( 37.2548, -1.70863, -4.48966, 0.52 ) }
    dend_33 { pt3dadd( 37.8045, -1.79855, -4.16527, 0.52 ) }
    dend_33 { pt3dadd( 38.3768, -1.97491, -3.82345, 0.52 ) }
    dend_33 { pt3dadd( 39.1523, -2.30704, -3.33166, 0.74 ) }
    dend_33 { pt3dadd( 39.8145, -2.62233, -2.88658, 0.74 ) }
    dend_33 { pt3dadd( 40.5983, -3.00243, -2.33439, 0.88 ) }
    dend_33 { pt3dadd( 41.4082, -3.43539, -1.6952, 0.88 ) }
    dend_33 { pt3dadd( 42.3053, -3.92857, -0.909477, 0.74 ) }
    dend_33 { pt3dadd( 43.2502, -4.44854, -0.0318527, 0.37 ) }
    dend_33 { pt3dadd( 43.8696, -4.763, 0.542288, 0.29 ) }
    dend_33 { pt3dadd( 44.5154, -5.04327, 1.12392, 0.37 ) }
    dend_33 { pt3dadd( 45.5144, -5.36514, 1.90258, 0.81 ) }
    dend_33 { pt3dadd( 46.4871, -5.5659, 2.50431, 0.59 ) }
    dend_33 { pt3dadd( 47.692, -5.71553, 3.04678, 0.52 ) }
    dend_33 { pt3dadd( 48.4432, -5.80845, 3.25477, 0.66 ) }
    dend_33 { pt3dadd( 49.1555, -5.94302, 3.36508, 0.81 ) }
    dend_33 { pt3dadd( 50.8989, -6.39917, 3.48441, 0.52 ) }
    dend_33 { pt3dadd( 51.8329, -6.70039, 3.50573, 0.52 ) }
    dend_33 { pt3dadd( 52.5469, -6.97642, 3.55914, 0.59 ) }
    dend_33 { pt3dadd( 53.5586, -7.45607, 3.77566, 0.52 ) }
    dend_33 { pt3dadd( 54.5336, -7.99061, 4.1877, 0.44 ) }
    dend_33 { pt3dadd( 55.1688, -8.34835, 4.54533, 0.52 ) }
    dend_33 { pt3dadd( 55.7996, -8.68447, 4.94583, 0.74 ) }
    dend_33 { pt3dadd( 56.9755, -9.23184, 5.67018, 0.59 ) }
    dend_33 { pt3dadd( 57.8994, -9.60026, 6.20419, 0.52 ) }
    dend_33 { pt3dadd( 59.0824, -9.97833, 6.79134, 0.29 ) }
    dend_33 { pt3dadd( 60.0856, -10.2469, 7.20022, 0.22 ) }
    dend_33 { pt3dadd( 61.1072, -10.5104, 7.56702, 0.29 ) }
    dend_33 { pt3dadd( 61.9789, -10.7494, 7.83156, 0.22 ) }
    dend_33 { pt3dadd( 62.5934, -10.9402, 8.007, 0.52 ) }
    dend_33 { pt3dadd( 63.498, -11.267, 8.27619, 0.88 ) }
    dend_33 { pt3dadd( 64.4505, -11.7118, 8.5772, 0.52 ) }
    dend_33 { pt3dadd( 65.1941, -12.1541, 8.84495, 0.52 ) }
    dend_33 { pt3dadd( 66.1684, -12.8653, 9.25797, 0.96 ) }
    dend_33 { pt3dadd( 67.3746, -13.8449, 9.84376, 0.37 ) }
    dend_33 { pt3dadd( 67.8717, -14.2653, 10.115, 0.37 ) }
    dend_33 { pt3dadd( 68.7603, -15.0179, 10.6648, 0.81 ) }
    dend_33 { pt3dadd( 69.6238, -15.7121, 11.2804, 0.66 ) }
    dend_33 { pt3dadd( 70.5793, -16.352, 12.0633, 0.44 ) }
    dend_33 { pt3dadd( 71.4604, -16.8024, 12.9796, 0.44 ) }
    dend_33 { pt3dadd( 72.0015, -16.9883, 13.6968, 0.59 ) }
    dend_33 { pt3dadd( 72.4525, -17.0952, 14.5088, 0.66 ) }
    dend_33 { pt3dadd( 72.8163, -17.1451, 15.5053, 0.44 ) }
    dend_33 { pt3dadd( 73.0851, -17.1617, 16.8046, 0.37 ) }
    dend_33 { pt3dadd( 73.1451, -17.1577, 17.9861, 0.37 ) }
    dend_33 { pt3dadd( 73.0466, -17.1666, 19.1724, 0.66 ) }
    dend_33 { pt3dadd( 72.7382, -17.2249, 20.8937, 0.22 ) }
    dend_33 { pt3dadd( 72.3814, -17.293, 22.3254, 0.81 ) }
    dend_33 { pt3dadd( 72.177, -17.3319, 23.0442, 0.81 ) }
    dend_33 { pt3dadd( 71.8512, -17.3841, 24.1806, 0.22 ) }
    dend_33 { pt3dadd( 71.5962, -17.4082, 25.2973, 0.74 ) }
    dend_33 { pt3dadd( 71.4216, -17.3769, 26.3592, 0.22 ) }
    dend_33 { pt3dadd( 71.298, -17.3104, 27.4285, 0.52 ) }
    dend_33 { pt3dadd( 71.1485, -17.1706, 28.9963, 1.03 ) }
    dend_33 { pt3dadd( 71.0295, -17.0324, 30.204, 1.03 ) }
    dend_33 { pt3dadd( 70.8661, -16.7914, 31.8878, 0.29 ) }
    dend_33 { pt3dadd( 70.7277, -16.5642, 33.1819, 0.22 ) }
    dend_33 { pt3dadd( 70.5962, -16.3296, 34.2896, 0.22 ) }
    dend_33 { pt3dadd( 70.4861, -16.1347, 35.0487, 0.29 ) }
    dend_33 { pt3dadd( 70.3074, -15.8328, 36.0167, 0.81 ) }
    dend_33 { pt3dadd( 70.131, -15.5415, 36.8484, 0.22 ) }
    dend_33 { pt3dadd( 70.0142, -15.2685, 37.5053, 0.29 ) }
    dend_33 { pt3dadd( 69.9758, -14.9342, 38.2582, 0.29 ) }
    dend_33 { pt3dadd( 70.0366, -14.505, 39.0968, 0.74 ) }
    dend_33 { pt3dadd( 70.1749, -14.0203, 39.9776, 1.4 ) }
    dend_33 { pt3dadd( 70.2251, -13.8749, 40.2191, 1.4 ) }
    dend_33 { pt3dadd( 70.435, -13.2612, 41.1763, 0.15 ) }
    dend_33 { pt3dadd( 70.5907, -12.7977, 41.8298, 0.22 ) }
    dend_33 { pt3dadd( 70.6736, -12.5752, 42.1393, 0.22 ) }
    dend_33 { pt3dadd( 70.9293, -11.9691, 43.061, 0.74 ) }
    dend_33 { pt3dadd( 71.1741, -11.4211, 43.9364, 0.29 ) }
    dend_33 { pt3dadd( 71.3405, -11.0693, 44.5082, 0.59 ) }
    dend_33 { pt3dadd( 71.563, -10.6026, 45.3011, 0.22 ) }
    dend_33 { pt3dadd( 71.8521, -10.05, 46.2178, 0.59 ) }
    dend_33 { pt3dadd( 72.1681, -9.56379, 47.0092, 0.59 ) }
    dend_33 { pt3dadd( 72.4554, -9.25466, 47.5819, 0.88 ) }
    dend_33 { pt3dadd( 72.9917, -8.83205, 48.5101, 0.44 ) }
    dend_33 { pt3dadd( 73.3705, -8.59087, 49.113, 0.44 ) }
    dend_33 { pt3dadd( 73.9524, -8.27365, 49.9747, 0.74 ) }
    dend_33 { pt3dadd( 74.4328, -8.01484, 50.6601, 0.74 ) }
    dend_33 { pt3dadd( 75.3366, -7.45609, 52.002, 0.37 ) }
    dend_33 { pt3dadd( 75.9487, -7.01219, 53.0018, 0.66 ) }
    dend_33 { pt3dadd( 76.2975, -6.71092, 53.6468, 0.59 ) }
    dend_33 { pt3dadd( 76.674, -6.33098, 54.3664, 0.59 ) }
    dend_33 { pt3dadd( 77.0903, -5.88565, 55.1887, 0.59 ) }
    dend_33 { pt3dadd( 77.5326, -5.425, 56.1004, 0.66 ) }
    dend_33 { pt3dadd( 77.9102, -5.09194, 56.8481, 0.52 ) }
    dend_33 { pt3dadd( 78.2144, -4.91812, 57.413, 0.52 ) }
    dend_33 { pt3dadd( 78.5648, -4.80914, 58.0122, 0.66 ) }
    dend_33 { pt3dadd( 79.2846, -4.72786, 59.1774, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_33 { pt3dadd( 80.206, -4.7587, 60.5306, 0.37 ) }
    dend_33 { pt3dadd( 81.0165, -4.8525, 61.6651, 0.29 ) }
    dend_33 { pt3dadd( 81.701, -4.96584, 62.596, 0.37 ) }
    dend_33 { pt3dadd( 82.4694, -5.10457, 63.6217, 0.37 ) }
    dend_33 { pt3dadd( 83.0028, -5.21352, 64.3509, 0.29 ) }
    dend_33 { pt3dadd( 83.4803, -5.29775, 64.985, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 6/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 13.0645, 8.21029, -18.8768, 0.59 ) }
    dend_25 { pt3dadd( 13.7325, 9.40015, -19.2787, 0.59 ) }
    dend_25 { pt3dadd( 14.2983, 10.329, -19.6887, 0.52 ) }
    dend_25 { pt3dadd( 14.6152, 10.8724, -19.9627, 0.52 ) }
    dend_25 { pt3dadd( 15.008, 11.6956, -20.3827, 0.52 ) }
    dend_25 { pt3dadd( 15.2911, 12.4484, -20.7489, 0.52 ) }
    dend_25 { pt3dadd( 15.6517, 13.4885, -21.2684, 0.66 ) }
    dend_25 { pt3dadd( 15.9998, 14.4155, -21.7841, 0.66 ) }
    dend_25 { pt3dadd( 16.233, 14.9852, -22.1049, 0.66 ) }
    dend_25 { pt3dadd( 16.6899, 16.0593, -22.6808, 0.52 ) }
    dend_25 { pt3dadd( 17.1352, 16.9837, -23.1463, 0.44 ) }
    dend_25 { pt3dadd( 17.6954, 18.0202, -23.6034, 0.44 ) }
    dend_25 { pt3dadd( 18.4864, 19.2883, -24.0431, 0.37 ) }
    dend_25 { pt3dadd( 19.0499, 20.0878, -24.2478, 0.37 ) }
    dend_25 { pt3dadd( 19.4827, 20.655, -24.338, 0.37 ) }
    dend_25 { pt3dadd( 20.1651, 21.4754, -24.4388, 0.37 ) }
    dend_25 { pt3dadd( 20.6955, 22.103, -24.4938, 0.44 ) }
    dend_25 { pt3dadd( 21.1097, 22.5952, -24.5474, 0.52 ) }
    dend_25 { pt3dadd( 22.0003, 23.7261, -24.6527, 0.44 ) }
    dend_25 { pt3dadd( 22.6522, 24.6097, -24.7579, 0.52 ) }
    dend_25 { pt3dadd( 23.4055, 25.652, -24.9188, 0.52 ) }
    dend_25 { pt3dadd( 23.8488, 26.3001, -25.0562, 0.52 ) }
    dend_25 { pt3dadd( 24.7614, 27.5019, -25.4374, 0.66 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.0645, 8.21029, -18.8768, 0.59 ) }
    dend_24 { pt3dadd( 12.7829, 7.84131, -21.1274, 0.59 ) }
    dend_24 { pt3dadd( 12.6573, 7.77942, -21.6619, 0.59 ) }
    dend_24 { pt3dadd( 12.5189, 7.75466, -22.0433, 0.59 ) }
    dend_24 { pt3dadd( 12.3983, 7.75942, -22.298, 0.59 ) }
    dend_24 { pt3dadd( 12.0774, 7.8347, -22.8374, 0.59 ) }
    dend_24 { pt3dadd( 11.8071, 7.96443, -23.255, 0.59 ) }
    dend_24 { pt3dadd( 11.4209, 8.29544, -23.709, 0.59 ) }
    dend_24 { pt3dadd( 11.1776, 8.58158, -24.029, 0.52 ) }
    dend_24 { pt3dadd( 10.879, 9.02085, -24.4975, 0.52 ) }
    dend_24 { pt3dadd( 10.6016, 9.49293, -25.0163, 0.66 ) }
    dend_24 { pt3dadd( 10.2591, 10.1343, -25.7994, 0.52 ) }
    dend_24 { pt3dadd( 10.0835, 10.4953, -26.5698, 0.52 ) }
    dend_24 { pt3dadd( 9.97301, 10.7542, -27.2184, 0.44 ) }
    dend_24 { pt3dadd( 9.83579, 11.0955, -28.1401, 0.44 ) }
    dend_24 { pt3dadd( 9.7594, 11.285, -28.6966, 0.44 ) }
    dend_24 { pt3dadd( 9.64353, 11.5618, -29.6033, 0.44 ) }
    dend_24 { pt3dadd( 8.90822, 13.1123, -35.289, 0.81 ) }
    dend_24 { pt3dadd( 8.73063, 13.4564, -36.6542, 0.29 ) }
    dend_24 { pt3dadd( 8.63177, 13.6425, -37.4435, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 49/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.8915, -6.91727, 5.05299, 0.52 ) }
    dend_19 { pt3dadd( 22.4896, -7.96225, 5.05671, 0.52 ) }
    dend_19 { pt3dadd( 23.1245, -9.00823, 5.07949, 0.52 ) }
    dend_19 { pt3dadd( 23.6609, -9.8615, 5.10569, 0.59 ) }
    dend_19 { pt3dadd( 24.4038, -11.0883, 5.1188, 0.52 ) }
    dend_19 { pt3dadd( 24.9648, -12.1088, 5.11828, 0.59 ) }
    dend_19 { pt3dadd( 25.3267, -12.8566, 5.10701, 0.74 ) }
    dend_19 { pt3dadd( 25.5864, -13.4689, 5.09297, 0.81 ) }
    dend_19 { pt3dadd( 25.956, -14.4692, 5.07074, 0.44 ) }
    dend_19 { pt3dadd( 26.2794, -15.3746, 5.0111, 0.66 ) }
    dend_19 { pt3dadd( 26.6425, -16.4524, 4.9393, 0.44 ) }
    dend_19 { pt3dadd( 27.0179, -17.5443, 4.89417, 0.52 ) }
    dend_19 { pt3dadd( 27.3301, -18.3669, 4.89898, 0.59 ) }
    dend_19 { pt3dadd( 27.6387, -19.1098, 4.96707, 0.44 ) }
    dend_19 { pt3dadd( 28.0794, -20.0953, 5.14848, 0.37 ) }
    dend_19 { pt3dadd( 28.5808, -21.0917, 5.42852, 0.59 ) }
    dend_19 { pt3dadd( 28.948, -21.7735, 5.66367, 0.88 ) }
    dend_19 { pt3dadd( 29.285, -22.4181, 5.91404, 0.74 ) }
    dend_19 { pt3dadd( 29.6659, -23.3031, 6.23252, 0.29 ) }
    dend_19 { pt3dadd( 29.8359, -23.8304, 6.38409, 0.29 ) }
    dend_19 { pt3dadd( 30.0075, -24.5334, 6.53318, 0.44 ) }
    dend_19 { pt3dadd( 30.1741, -25.3804, 6.64051, 0.81 ) }
    dend_19 { pt3dadd( 30.2481, -25.9157, 6.68855, 0.81 ) }
    dend_19 { pt3dadd( 30.4107, -27.2866, 6.7781, 0.37 ) }
    dend_19 { pt3dadd( 30.5037, -28.01, 6.8212, 0.96 ) }
    dend_19 { pt3dadd( 30.5482, -28.3503, 6.85256, 0.96 ) }
    dend_19 { pt3dadd( 30.6134, -29.0404, 6.93694, 0.44 ) }
    dend_19 { pt3dadd( 30.6812, -29.9407, 7.07173, 0.66 ) }
    dend_19 { pt3dadd( 30.729, -30.5844, 7.18212, 0.22 ) }
    dend_19 { pt3dadd( 30.7884, -31.1035, 7.27381, 0.22 ) }
    dend_19 { pt3dadd( 30.8813, -31.641, 7.35839, 0.22 ) }
    dend_19 { pt3dadd( 31.0227, -32.3631, 7.41984, 0.74 ) }
    dend_19 { pt3dadd( 31.1182, -32.7774, 7.42795, 0.74 ) }
    dend_19 { pt3dadd( 31.3193, -33.4876, 7.38091, 0.22 ) }
    dend_19 { pt3dadd( 31.6324, -34.4291, 7.25163, 0.22 ) }
    dend_19 { pt3dadd( 31.8875, -35.1035, 7.08306, 0.74 ) }
    dend_19 { pt3dadd( 32.3273, -36.1114, 6.75266, 0.22 ) }
    dend_19 { pt3dadd( 32.5517, -36.5661, 6.563, 0.88 ) }
    dend_19 { pt3dadd( 33.0093, -37.4338, 6.12337, 0.74 ) }
    dend_19 { pt3dadd( 33.3919, -38.1135, 5.72941, 0.37 ) }
    dend_19 { pt3dadd( 33.9335, -39.0763, 5.15398, 0.59 ) }
    dend_19 { pt3dadd( 34.1911, -39.5502, 4.87083, 0.88 ) }
    dend_19 { pt3dadd( 34.6105, -40.3773, 4.40916, 0.29 ) }
    dend_19 { pt3dadd( 34.917, -41.122, 4.03806, 0.74 ) }
    dend_19 { pt3dadd( 35.0228, -41.4959, 3.89076, 0.74 ) }
    dend_19 { pt3dadd( 35.2052, -42.5293, 3.65197, 0.44 ) }
    dend_19 { pt3dadd( 35.3064, -43.5056, 3.60069, 0.44 ) }
    dend_19 { pt3dadd( 35.3162, -44.0778, 3.61917, 0.66 ) }
    dend_19 { pt3dadd( 35.2617, -44.9393, 3.71908, 0.37 ) }
    dend_19 { pt3dadd( 35.1413, -45.738, 3.85358, 0.81 ) }
    dend_19 { pt3dadd( 34.8803, -46.9779, 4.03517, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 34.6914, -47.758, 4.13799, 0.22 ) }
    dend_19 { pt3dadd( 34.5107, -48.5102, 4.21923, 0.29 ) }
    dend_19 { pt3dadd( 34.4292, -48.869, 4.23401, 0.81 ) }
    dend_19 { pt3dadd( 34.2732, -49.6023, 4.20393, 0.81 ) }
    dend_19 { pt3dadd( 34.0736, -50.7138, 4.03508, 0.22 ) }
    dend_19 { pt3dadd( 33.989, -51.269, 3.90213, 0.22 ) }
    dend_19 { pt3dadd( 33.9514, -51.7896, 3.77541, 0.44 ) }
    dend_19 { pt3dadd( 33.9771, -52.4506, 3.65468, 0.88 ) }
    dend_19 { pt3dadd( 34.059, -53.0994, 3.57184, 0.29 ) }
    dend_19 { pt3dadd( 34.1872, -53.7796, 3.52899, 0.15 ) }
    dend_19 { pt3dadd( 34.2474, -54.1373, 3.55681, 0.15 ) }
    dend_19 { pt3dadd( 34.331, -54.7402, 3.62445, 0.15 ) }
    dend_19 { pt3dadd( 34.4285, -55.4172, 3.71714, 0.52 ) }
    dend_19 { pt3dadd( 34.5428, -56.133, 3.8403, 0.59 ) }
    dend_19 { pt3dadd( 34.7126, -57.0516, 4.03966, 0.52 ) }
    dend_19 { pt3dadd( 34.9156, -58.1114, 4.32831, 0.52 ) }
    dend_19 { pt3dadd( 35.0157, -58.7973, 4.52669, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 17/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 21.8915, -6.91727, 5.05299, 0.44 ) }
    dend_16 { pt3dadd( 22.2163, -6.72391, 5.74445, 0.44 ) }
    dend_16 { pt3dadd( 22.4934, -6.58496, 6.33774, 0.44 ) }
    dend_16 { pt3dadd( 22.7017, -6.51798, 6.8007, 0.44 ) }
    dend_16 { pt3dadd( 23.0385, -6.46319, 7.59419, 0.52 ) }
    dend_16 { pt3dadd( 23.1943, -6.46652, 7.9722, 0.52 ) }
    dend_16 { pt3dadd( 23.4936, -6.51749, 8.66076, 0.81 ) }
    dend_16 { pt3dadd( 23.725, -6.61621, 9.13788, 0.81 ) }
    dend_16 { pt3dadd( 24.0469, -6.81724, 9.66903, 0.44 ) }
    dend_16 { pt3dadd( 24.3392, -7.03776, 10.0533, 0.44 ) }
    dend_16 { pt3dadd( 24.653, -7.29386, 10.3973, 0.44 ) }
    dend_16 { pt3dadd( 24.9728, -7.56324, 10.7221, 0.74 ) }
    dend_16 { pt3dadd( 25.2352, -7.78791, 10.965, 0.74 ) }
    dend_16 { pt3dadd( 25.7827, -8.21531, 11.4072, 0.44 ) }
    dend_16 { pt3dadd( 26.3579, -8.61002, 11.8245, 0.44 ) }
    dend_16 { pt3dadd( 26.81, -8.90689, 12.1265, 0.88 ) }
    dend_16 { pt3dadd( 27.3247, -9.23283, 12.4828, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -6.46104, 25.3284, -11.6369, 0.44 ) }
    dend_9 { pt3dadd( -7.46169, 25.9489, -11.9508, 0.44 ) }
    dend_9 { pt3dadd( -8.11111, 26.3329, -12.091, 0.44 ) }
    dend_9 { pt3dadd( -8.6822, 26.6866, -12.185, 0.66 ) }
    dend_9 { pt3dadd( -9.47475, 27.1791, -12.2473, 0.59 ) }
    dend_9 { pt3dadd( -10.0853, 27.5665, -12.2486, 0.74 ) }
    dend_9 { pt3dadd( -10.5342, 27.8604, -12.2044, 0.66 ) }
    dend_9 { pt3dadd( -11.3309, 28.4021, -11.943, 0.66 ) }
    dend_9 { pt3dadd( -11.8931, 28.7758, -11.6776, 0.52 ) }
    dend_9 { pt3dadd( -12.5203, 29.148, -11.3476, 0.52 ) }
    dend_9 { pt3dadd( -12.9097, 29.3333, -11.1504, 0.52 ) }
    dend_9 { pt3dadd( -13.7221, 29.6285, -10.8181, 0.66 ) }
    dend_9 { pt3dadd( -14.509, 29.8895, -10.5988, 0.66 ) }
    dend_9 { pt3dadd( -15.1077, 30.0917, -10.5152, 0.59 ) }
    dend_9 { pt3dadd( -15.8004, 30.3431, -10.4955, 0.52 ) }
    dend_9 { pt3dadd( -16.6428, 30.7032, -10.6479, 0.52 ) }
    dend_9 { pt3dadd( -17.4349, 31.0522, -10.9269, 0.66 ) }
    dend_9 { pt3dadd( -18.2007, 31.3778, -11.2595, 0.74 ) }
    dend_9 { pt3dadd( -18.6031, 31.5578, -11.4588, 0.74 ) }
    dend_9 { pt3dadd( -19.323, 31.9078, -11.8146, 0.66 ) }
    dend_9 { pt3dadd( -20.4085, 32.5045, -12.3053, 0.44 ) }
    dend_9 { pt3dadd( -21.2409, 33.0079, -12.6537, 0.44 ) }
    dend_9 { pt3dadd( -22.2596, 33.6647, -13.0438, 0.44 ) }
    dend_9 { pt3dadd( -22.8327, 34.0334, -13.2318, 0.44 ) }
    dend_9 { pt3dadd( -23.4221, 34.4222, -13.4547, 0.59 ) }
    dend_9 { pt3dadd( -24.0233, 34.8418, -13.7548, 0.74 ) }
    dend_9 { pt3dadd( -24.4684, 35.1586, -14.0112, 0.52 ) }
    dend_9 { pt3dadd( -25.0613, 35.5678, -14.52, 0.44 ) }
    dend_9 { pt3dadd( -25.6197, 35.8984, -15.1332, 0.44 ) }
    dend_9 { pt3dadd( -26.5027, 36.3245, -16.1404, 0.44 ) }
    dend_9 { pt3dadd( -27.3393, 36.6536, -17.1118, 0.44 ) }
    dend_9 { pt3dadd( -27.9058, 36.852, -17.7678, 0.52 ) }
    dend_9 { pt3dadd( -28.8673, 37.1575, -18.7915, 0.37 ) }
    dend_9 { pt3dadd( -29.6198, 37.3898, -19.4805, 0.37 ) }
    dend_9 { pt3dadd( -30.4353, 37.6809, -20.0472, 0.44 ) }
    dend_9 { pt3dadd( -31.152, 37.9903, -20.2937, 0.37 ) }
    dend_9 { pt3dadd( -31.6056, 38.2193, -20.3173, 0.66 ) }
    dend_9 { pt3dadd( -32.3712, 38.6287, -20.2031, 0.66 ) }
    dend_9 { pt3dadd( -33.2647, 39.0714, -19.943, 0.88 ) }
    dend_9 { pt3dadd( -34.0619, 39.431, -19.6747, 0.88 ) }
    dend_9 { pt3dadd( -34.6386, 39.6534, -19.469, 0.74 ) }
    dend_9 { pt3dadd( -35.5255, 39.9779, -19.1441, 0.74 ) }
    dend_9 { pt3dadd( -36.2624, 40.2226, -18.9027, 0.74 ) }
    dend_9 { pt3dadd( -37.1858, 40.5044, -18.6805, 0.74 ) }
    dend_9 { pt3dadd( -37.9865, 40.7159, -18.5556, 1.03 ) }
    dend_9 { pt3dadd( -39.3057, 41.0194, -18.4054, 1.03 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 80/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.46104, 25.3284, -11.6369, 0.59 ) }
    dend_8 { pt3dadd( -6.26049, 26.1044, -12.307, 0.59 ) }
    dend_8 { pt3dadd( -6.00774, 26.9306, -13.0151, 0.59 ) }
    dend_8 { pt3dadd( -5.6361, 28.0302, -13.9506, 0.59 ) }
    dend_8 { pt3dadd( -5.34869, 28.886, -14.6835, 0.44 ) }
    dend_8 { pt3dadd( -4.98558, 30.0102, -15.6462, 0.59 ) }
    dend_8 { pt3dadd( -4.75269, 30.7736, -16.3085, 0.59 ) }
    dend_8 { pt3dadd( -4.4657, 31.8761, -17.2997, 0.59 ) }
    dend_8 { pt3dadd( -4.29384, 32.6096, -17.9462, 0.59 ) }
    dend_8 { pt3dadd( -4.10305, 33.4219, -18.6539, 0.59 ) }
    dend_8 { pt3dadd( -3.83481, 34.4375, -19.5621, 0.59 ) }
    dend_8 { pt3dadd( -3.56484, 35.2732, -20.3708, 0.52 ) }
    dend_8 { pt3dadd( -3.19339, 36.167, -21.339, 0.66 ) }
    dend_8 { pt3dadd( -2.93174, 36.6595, -21.9544, 0.96 ) }
    dend_8 { pt3dadd( -2.39753, 37.4653, -23.0721, 0.96 ) }
    dend_8 { pt3dadd( -1.79394, 38.2115, -24.1816, 0.81 ) }
    dend_8 { pt3dadd( -0.995466, 39.0258, -25.5146, 0.81 ) }
    dend_8 { pt3dadd( -0.282435, 39.6362, -26.6011, 0.44 ) }
    dend_8 { pt3dadd( 0.362807, 40.1009, -27.5422, 0.44 ) }
    dend_8 { pt3dadd( 0.982919, 40.4962, -28.4281, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( 1.60598, 40.8373, -29.2933, 0.44 ) }
    dend_8 { pt3dadd( 2.48233, 41.2397, -30.4136, 0.44 ) }
    dend_8 { pt3dadd( 3.12479, 41.4664, -31.1377, 0.59 ) }
    dend_8 { pt3dadd( 4.37775, 41.7805, -32.3912, 0.59 ) }
    dend_8 { pt3dadd( 5.0962, 41.9038, -32.993, 0.22 ) }
    dend_8 { pt3dadd( 6.05238, 41.9984, -33.7283, 0.22 ) }
    dend_8 { pt3dadd( 6.97517, 42.0261, -34.3751, 0.22 ) }
    dend_8 { pt3dadd( 7.93736, 42.0138, -34.9442, 0.37 ) }
    dend_8 { pt3dadd( 8.37948, 41.9959, -35.158, 0.37 ) }
    dend_8 { pt3dadd( 9.04455, 41.9551, -35.3403, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 96.6735, 13.1468, -4.6531, 0.22 ) }
    dend_62 { pt3dadd( 97.6289, 13.2897, -4.12032, 0.22 ) }
    dend_62 { pt3dadd( 98.8161, 13.6245, -3.67691, 0.29 ) }
    dend_62 { pt3dadd( 100.338, 14.0538, -3.10832, 0.37 ) }
    dend_62 { pt3dadd( 101.348, 14.3384, -2.73132, 0.15 ) }
    dend_62 { pt3dadd( 102.013, 14.5261, -2.48279, 0.37 ) }
    dend_62 { pt3dadd( 103.56, 14.9624, -1.90497, 0.29 ) }
    dend_62 { pt3dadd( 104.904, 15.4854, -1.55443, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 18/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 96.6735, 13.1468, -4.6531, 0.22 ) }
    dend_61 { pt3dadd( 96.6044, 12.2159, -4.50256, 0.22 ) }
    dend_61 { pt3dadd( 96.531, 11.2281, -4.3428, 0.22 ) }
    dend_61 { pt3dadd( 96.492, 10.7036, -4.25797, 0.29 ) }
    dend_61 { pt3dadd( 96.4201, 9.73486, -4.10129, 0.15 ) }
    dend_61 { pt3dadd( 96.3829, 9.23434, -4.02034, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 33.4779, -33.1332, -70.5423, 0.22 ) }
    dend_44 { pt3dadd( 33.8715, -32.1783, -70.2534, 0.22 ) }
    dend_44 { pt3dadd( 34.2928, -30.9662, -69.9478, 0.22 ) }
    dend_44 { pt3dadd( 34.689, -29.6541, -69.6752, 0.15 ) }
    dend_44 { pt3dadd( 34.9723, -28.6575, -69.4881, 0.15 ) }
    dend_44 { pt3dadd( 35.2553, -27.6619, -69.3012, 0.29 ) }
    dend_44 { pt3dadd( 35.4354, -27.028, -69.1822, 0.29 ) }
    dend_44 { pt3dadd( 35.5994, -26.2734, -69.0951, 0.22 ) }
    dend_44 { pt3dadd( 35.7304, -25.5269, -69.093, 0.66 ) }
    dend_44 { pt3dadd( 35.7581, -25.2842, -69.1013, 0.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 33.4779, -33.1332, -70.5423, 0.74 ) }
    dend_43 { pt3dadd( 33.0661, -33.4677, -70.9982, 0.74 ) }
    dend_43 { pt3dadd( 32.5385, -33.9168, -71.391, 0.44 ) }
    dend_43 { pt3dadd( 32.1418, -34.2972, -71.6104, 0.59 ) }
    dend_43 { pt3dadd( 31.6891, -34.7955, -71.8174, 0.96 ) }
    dend_43 { pt3dadd( 30.8321, -35.739, -72.2094, 0.22 ) }
    dend_43 { pt3dadd( 30.2542, -36.3751, -72.4736, 0.29 ) }
    dend_43 { pt3dadd( 29.766, -36.9606, -72.5889, 0.22 ) }
    dend_43 { pt3dadd( 29.3895, -37.431, -72.5829, 0.44 ) }
    dend_43 { pt3dadd( 29.0991, -37.8172, -72.5091, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 44/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 24.7614, 27.5019, -25.4374, 0.22 ) }
    dend_31 { pt3dadd( 23.9966, 28.2446, -25.6565, 0.22 ) }
    dend_31 { pt3dadd( 23.37, 28.8101, -25.8681, 0.22 ) }
    dend_31 { pt3dadd( 22.719, 29.3851, -26.0564, 0.29 ) }
    dend_31 { pt3dadd( 21.8098, 30.1979, -26.2549, 0.15 ) }
    dend_31 { pt3dadd( 20.8299, 31.047, -26.3842, 0.15 ) }
    dend_31 { pt3dadd( 20.2107, 31.5583, -26.4462, 0.15 ) }
    dend_31 { pt3dadd( 19.4717, 32.0994, -26.4701, 0.22 ) }
    dend_31 { pt3dadd( 18.5863, 32.6955, -26.4638, 0.22 ) }
    dend_31 { pt3dadd( 17.5511, 33.3296, -26.3864, 0.15 ) }
    dend_31 { pt3dadd( 16.5959, 33.9114, -26.2923, 0.15 ) }
    dend_31 { pt3dadd( 15.5995, 34.5087, -26.1728, 0.22 ) }
    dend_31 { pt3dadd( 14.8623, 34.9462, -26.0383, 0.15 ) }
    dend_31 { pt3dadd( 14.3458, 35.2249, -25.9281, 0.22 ) }
    dend_31 { pt3dadd( 13.1643, 35.7679, -25.7411, 0.22 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 59/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 24.7614, 27.5019, -25.4374, 0.52 ) }
    dend_26 { pt3dadd( 25.6714, 27.7109, -26.1327, 0.52 ) }
    dend_26 { pt3dadd( 26.4072, 27.9888, -26.7292, 0.37 ) }
    dend_26 { pt3dadd( 27.1754, 28.3916, -27.4748, 0.37 ) }
    dend_26 { pt3dadd( 27.8404, 28.8043, -28.2301, 0.44 ) }
    dend_26 { pt3dadd( 28.2655, 29.1001, -28.7865, 0.44 ) }
    dend_26 { pt3dadd( 28.6832, 29.3996, -29.3849, 0.44 ) }
    dend_26 { pt3dadd( 29.0424, 29.728, -29.9532, 0.52 ) }
    dend_26 { pt3dadd( 29.5618, 30.2526, -30.8069, 0.59 ) }
    dend_26 { pt3dadd( 29.8881, 30.6329, -31.4288, 0.59 ) }
    dend_26 { pt3dadd( 30.1718, 30.9787, -32.053, 0.59 ) }
    dend_26 { pt3dadd( 30.5437, 31.3546, -32.8674, 0.52 ) }
    dend_26 { pt3dadd( 30.7877, 31.5303, -33.3672, 0.37 ) }
    dend_26 { pt3dadd( 31.2862, 31.7649, -34.1629, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 73/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 35.0157, -58.7973, 4.52669, 0.15 ) }
    dend_21 { pt3dadd( 35.5737, -59.5199, 3.58143, 0.15 ) }
    dend_21 { pt3dadd( 35.8165, -59.8344, 3.17, 0.52 ) }
    dend_21 { pt3dadd( 36.0861, -60.1834, 2.7133, 0.15 ) }
    dend_21 { pt3dadd( 36.3627, -60.5416, 2.24471, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 78/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 35.0157, -58.7973, 4.52669, 0.37 ) }
    dend_20 { pt3dadd( 35.2144, -59.0747, 4.82169, 0.37 ) }
    dend_20 { pt3dadd( 35.4407, -59.419, 5.19733, 0.44 ) }
    dend_20 { pt3dadd( 35.9804, -60.3547, 6.15362, 0.07 ) }
    dend_20 { pt3dadd( 36.2877, -60.9765, 6.76475, 0.07 ) }
    dend_20 { pt3dadd( 36.5215, -61.5872, 7.35125, 0.29 ) }
    dend_20 { pt3dadd( 36.6977, -62.3113, 8.03541, 0.22 ) }
    dend_20 { pt3dadd( 36.7087, -62.6905, 8.38097, 0.22 ) }
    dend_20 { pt3dadd( 36.6025, -63.1454, 8.75373, 0.59 ) }
    dend_20 { pt3dadd( 36.433, -63.5084, 9.02234, 0.59 ) }
    dend_20 { pt3dadd( 36.0911, -64.0038, 9.4141, 0.22 ) }
    dend_20 { pt3dadd( 35.4313, -64.7598, 10.0947, 0.22 ) }
    dend_20 { pt3dadd( 34.9914, -65.2234, 10.552, 0.29 ) }
    dend_20 { pt3dadd( 34.5772, -65.6972, 11.0553, 0.74 ) }
    dend_20 { pt3dadd( 34.5265, -65.7594, 11.1179, 0.74 ) }
    dend_20 { pt3dadd( 34.0106, -66.4387, 11.6836, 0.15 ) }
    dend_20 { pt3dadd( 33.5618, -67.0383, 12.031, 0.22 ) }
    dend_20 { pt3dadd( 33.0263, -67.6923, 12.1094, 0.44 ) }
    dend_20 { pt3dadd( 32.3955, -68.4468, 11.859, 1.11 ) }
    dend_20 { pt3dadd( 31.5805, -69.458, 11.2327, 0.88 ) }
    dend_20 { pt3dadd( 31.0883, -70.1184, 10.7212, 0.37 ) }
    dend_20 { pt3dadd( 30.6464, -70.7294, 10.1366, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_20 { pt3dadd( 29.9394, -71.674, 9.05023, 0.22 ) }
    dend_20 { pt3dadd( 29.6633, -72.0221, 8.57818, 0.22 ) }
    dend_20 { pt3dadd( 29.539, -72.163, 8.35551, 0.29 ) }
    dend_20 { pt3dadd( 29.3088, -72.4137, 7.97649, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 4/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 27.3247, -9.23283, 12.4828, 0.37 ) }
    dend_18 { pt3dadd( 27.5571, -10.1667, 13.1371, 0.37 ) }
    dend_18 { pt3dadd( 27.8922, -11.1518, 13.9195, 0.22 ) }
    dend_18 { pt3dadd( 28.4429, -12.4158, 15.0946, 0.15 ) }
    dend_18 { pt3dadd( 28.6838, -12.8697, 15.574, 0.66 ) }
    dend_18 { pt3dadd( 29.1704, -13.654, 16.5071, 0.22 ) }
    dend_18 { pt3dadd( 29.7318, -14.4616, 17.5736, 0.22 ) }
    dend_18 { pt3dadd( 30.3613, -15.2182, 18.8033, 0.22 ) }
    dend_18 { pt3dadd( 30.9045, -15.8259, 19.934, 0.37 ) }
    dend_18 { pt3dadd( 31.404, -16.3702, 21.0354, 0.66 ) }
    dend_18 { pt3dadd( 32.0093, -17.0474, 22.4745, 0.88 ) }
    dend_18 { pt3dadd( 32.5609, -17.7065, 23.9141, 0.88 ) }
    dend_18 { pt3dadd( 33.1734, -18.4907, 25.6813, 0.44 ) }
    dend_18 { pt3dadd( 33.62, -19.1149, 27.1049, 0.44 ) }
    dend_18 { pt3dadd( 33.6712, -19.2093, 27.3158, 0.44 ) }
    dend_18 { pt3dadd( 33.7881, -19.5702, 28.0958, 0.44 ) }
    dend_18 { pt3dadd( 33.8115, -19.8119, 28.5858, 0.44 ) }
    dend_18 { pt3dadd( 33.8064, -20.0604, 29.0609, 0.44 ) }
    dend_18 { pt3dadd( 33.7798, -20.6777, 30.2454, 0.44 ) }
    dend_18 { pt3dadd( 33.8053, -21.3365, 31.5565, 0.59 ) }
    dend_18 { pt3dadd( 33.9115, -21.9864, 32.899, 0.74 ) }
    dend_18 { pt3dadd( 34.1249, -22.6588, 34.3553, 0.29 ) }
    dend_18 { pt3dadd( 34.3229, -23.0096, 35.1395, 0.74 ) }
    dend_18 { pt3dadd( 34.6143, -23.3575, 35.9361, 0.74 ) }
    dend_18 { pt3dadd( 35.2115, -23.9061, 37.202, 0.29 ) }
    dend_18 { pt3dadd( 35.7187, -24.3211, 38.1241, 1.03 ) }
    dend_18 { pt3dadd( 36.2336, -24.735, 38.9752, 1.11 ) }
    dend_18 { pt3dadd( 37.2764, -25.6865, 40.7385, 0.37 ) }
    dend_18 { pt3dadd( 37.9848, -26.5172, 42.1103, 0.52 ) }
    dend_18 { pt3dadd( 38.5592, -27.4123, 43.4802, 0.29 ) }
    dend_18 { pt3dadd( 38.8917, -28.048, 44.4438, 0.22 ) }
    dend_18 { pt3dadd( 39.14, -28.5679, 45.2482, 0.66 ) }
    dend_18 { pt3dadd( 39.6176, -29.6216, 46.9774, 0.29 ) }
    dend_18 { pt3dadd( 39.9508, -30.2964, 48.1708, 0.74 ) }
    dend_18 { pt3dadd( 40.4657, -31.2849, 50.0778, 0.29 ) }
    dend_18 { pt3dadd( 40.872, -32.0354, 51.6463, 0.15 ) }
    dend_18 { pt3dadd( 41.2548, -32.7303, 53.2305, 0.22 ) }
    dend_18 { pt3dadd( 41.6797, -33.5045, 55.167, 0.74 ) }
    dend_18 { pt3dadd( 42.1391, -34.4118, 57.6066, 0.15 ) }
    dend_18 { pt3dadd( 42.4234, -35.0436, 59.4841, 0.29 ) }
    dend_18 { pt3dadd( 42.6445, -35.6511, 61.4766, 0.29 ) }
    dend_18 { pt3dadd( 42.7221, -35.9777, 62.6791, 0.29 ) }
    dend_18 { pt3dadd( 42.7565, -36.29, 64.032, 0.29 ) }
    dend_18 { pt3dadd( 42.7415, -36.49, 65.0383, 0.29 ) }
    dend_18 { pt3dadd( 42.6833, -36.7179, 66.3365, 0.29 ) }
    dend_18 { pt3dadd( 42.6856, -36.947, 67.4288, 0.29 ) }
    dend_18 { pt3dadd( 42.8404, -37.4872, 69.129, 0.29 ) }
    dend_18 { pt3dadd( 42.9517, -37.7878, 69.7747, 0.29 ) }
    dend_18 { pt3dadd( 43.1042, -38.2131, 70.4782, 0.29 ) }
    dend_18 { pt3dadd( 43.2841, -38.9306, 71.5959, 0.29 ) }
    dend_18 { pt3dadd( 43.3304, -39.378, 72.314, 0.66 ) }
    dend_18 { pt3dadd( 43.2327, -40.118, 73.7673, 0.22 ) }
    dend_18 { pt3dadd( 43.0504, -40.5834, 74.9654, 0.22 ) }
    dend_18 { pt3dadd( 42.9081, -40.8031, 75.6848, 0.22 ) }
    dend_18 { pt3dadd( 42.3346, -41.3941, 78.1103, 0.59 ) }
    dend_18 { pt3dadd( 42.0263, -41.6325, 79.274, 0.81 ) }
    dend_18 { pt3dadd( 41.4532, -41.9981, 81.4685, 0.22 ) }
    dend_18 { pt3dadd( 41.1431, -42.1563, 82.7477, 0.22 ) }
    dend_18 { pt3dadd( 40.9274, -42.2731, 83.874, 0.22 ) }
    dend_18 { pt3dadd( 40.6842, -42.4369, 85.6795, 0.74 ) }
    dend_18 { pt3dadd( 40.6, -42.5232, 86.7686, 0.29 ) }
    dend_18 { pt3dadd( 40.5287, -42.6485, 88.5691, 0.29 ) }
    dend_18 { pt3dadd( 40.5122, -42.6993, 89.7267, 0.29 ) }
    dend_18 { pt3dadd( 40.4927, -42.7206, 91.4988, 0.29 ) }
    dend_18 { pt3dadd( 40.475, -42.6831, 93.22, 0.29 ) }
    dend_18 { pt3dadd( 40.4449, -42.5425, 96.2098, 0.29 ) }
    dend_18 { pt3dadd( 40.4146, -42.4346, 98.1693, 0.29 ) }
    dend_18 { pt3dadd( 40.3871, -42.3356, 100.112, 0.29 ) }
    dend_18 { pt3dadd( 40.3898, -42.2672, 101.8, 0.29 ) }
    dend_18 { pt3dadd( 40.4068, -42.1934, 103.511, 0.29 ) }
    dend_18 { pt3dadd( 40.4443, -42.1316, 104.942, 0.29 ) }
    dend_18 { pt3dadd( 40.5149, -42.0749, 106.229, 0.29 ) }
    dend_18 { pt3dadd( 40.6704, -41.9903, 108.172, 0.29 ) }
    dend_18 { pt3dadd( 40.7747, -41.9594, 109.075, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 78/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 27.3247, -9.23283, 12.4828, 0.66 ) }
    dend_17 { pt3dadd( 27.7605, -8.94824, 13.565, 0.66 ) }
    dend_17 { pt3dadd( 28.3273, -8.52044, 14.947, 0.22 ) }
    dend_17 { pt3dadd( 28.6817, -8.27099, 15.7342, 0.22 ) }
    dend_17 { pt3dadd( 28.8229, -8.18178, 16.0073, 0.22 ) }
    dend_17 { pt3dadd( 29.213, -7.95156, 16.6393, 0.22 ) }
    dend_17 { pt3dadd( 29.5294, -7.75046, 17.1081, 0.22 ) }
    dend_17 { pt3dadd( 29.6961, -7.62957, 17.3219, 0.22 ) }
    dend_17 { pt3dadd( 30.1566, -7.31293, 17.8669, 0.22 ) }
    dend_17 { pt3dadd( 30.5243, -7.10057, 18.258, 0.29 ) }
    dend_17 { pt3dadd( 31.192, -6.83417, 18.9424, 0.52 ) }
    dend_17 { pt3dadd( 31.8844, -6.69851, 19.6347, 0.22 ) }
    dend_17 { pt3dadd( 32.4443, -6.68489, 20.1981, 0.37 ) }
    dend_17 { pt3dadd( 33.2067, -6.76444, 20.965, 0.37 ) }
    dend_17 { pt3dadd( 33.7401, -6.89073, 21.4884, 0.52 ) }
    dend_17 { pt3dadd( 34.5532, -7.21206, 22.2171, 0.88 ) }
    dend_17 { pt3dadd( 35.5184, -7.74194, 23.0281, 0.22 ) }
    dend_17 { pt3dadd( 36.1859, -8.17494, 23.5396, 0.22 ) }
    dend_17 { pt3dadd( 36.5745, -8.44274, 23.8168, 0.52 ) }
    dend_17 { pt3dadd( 36.9456, -8.69559, 24.0591, 0.52 ) }
    dend_17 { pt3dadd( 37.7648, -9.25046, 24.5875, 0.15 ) }
    dend_17 { pt3dadd( 38.4866, -9.70508, 25.0578, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_17 { pt3dadd( 38.9538, -9.98423, 25.335, 0.15 ) }
    dend_17 { pt3dadd( 39.311, -10.1701, 25.5448, 0.66 ) }
    dend_17 { pt3dadd( 39.7983, -10.3849, 25.853, 0.74 ) }
    dend_17 { pt3dadd( 41.0167, -10.7516, 26.6704, 0.15 ) }
    dend_17 { pt3dadd( 41.8208, -10.8707, 27.2357, 0.15 ) }
    dend_17 { pt3dadd( 42.5481, -10.8704, 27.7584, 0.15 ) }
    dend_17 { pt3dadd( 43.3401, -10.761, 28.396, 0.37 ) }
    dend_17 { pt3dadd( 43.9519, -10.5881, 28.9636, 0.37 ) }
    dend_17 { pt3dadd( 44.7095, -10.2205, 29.7909, 0.15 ) }
    dend_17 { pt3dadd( 45.2135, -9.88523, 30.5212, 0.22 ) }
    dend_17 { pt3dadd( 45.6949, -9.5501, 31.399, 0.22 ) }
    dend_17 { pt3dadd( 45.9469, -9.39075, 32.0018, 0.22 ) }
    dend_17 { pt3dadd( 46.2001, -9.27502, 32.6581, 0.22 ) }
    dend_17 { pt3dadd( 46.475, -9.21015, 33.3874, 0.37 ) }
    dend_17 { pt3dadd( 47.227, -9.14975, 35.4869, 0.37 ) }
    dend_17 { pt3dadd( 47.6404, -9.1506, 36.6532, 0.52 ) }
    dend_17 { pt3dadd( 48.2126, -9.16978, 38.2836, 0.66 ) }
    dend_17 { pt3dadd( 48.5571, -9.17943, 39.3004, 0.15 ) }
    dend_17 { pt3dadd( 49.0826, -9.19486, 40.967, 0.15 ) }
    dend_17 { pt3dadd( 49.5711, -9.22137, 42.555, 0.22 ) }
    dend_17 { pt3dadd( 49.8181, -9.22006, 43.3298, 0.29 ) }
    dend_17 { pt3dadd( 50.1128, -9.20698, 44.3042, 0.29 ) }
    dend_17 { pt3dadd( 50.2876, -9.1939, 44.9322, 0.29 ) }
    dend_17 { pt3dadd( 50.7158, -9.16048, 46.9029, 0.29 ) }
    dend_17 { pt3dadd( 50.9761, -9.15619, 48.1928, 0.29 ) }
    dend_17 { pt3dadd( 51.2095, -9.18025, 49.3577, 0.29 ) }
    dend_17 { pt3dadd( 51.5401, -9.23768, 50.9539, 0.29 ) }
    dend_17 { pt3dadd( 51.7449, -9.28666, 51.8549, 0.29 ) }
    dend_17 { pt3dadd( 52.1316, -9.36575, 53.4383, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 29/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -39.3057, 41.0194, -18.4054, 0.44 ) }
    dend_11 { pt3dadd( -39.6962, 40.9118, -20.9937, 0.44 ) }
    dend_11 { pt3dadd( -39.8795, 40.8613, -22.2086, 0.37 ) }
    dend_11 { pt3dadd( -40.1236, 40.7941, -23.8263, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -39.3057, 41.0194, -18.4054, 0.66 ) }
    dend_10 { pt3dadd( -40.3465, 41.0082, -17.5384, 0.66 ) }
    dend_10 { pt3dadd( -42.0933, 41.0096, -16.2727, 0.66 ) }
    dend_10 { pt3dadd( -43.9524, 40.9373, -15.1464, 0.66 ) }
    dend_10 { pt3dadd( -45.8947, 40.8167, -14.1803, 0.66 ) }
    dend_10 { pt3dadd( -48.1854, 40.661, -13.2178, 0.59 ) }
    dend_10 { pt3dadd( -49.5561, 40.5686, -12.745, 0.59 ) }
    dend_10 { pt3dadd( -51.0085, 40.4639, -12.5301, 0.29 ) }
    dend_10 { pt3dadd( -52.8144, 40.2721, -12.7083, 0.22 ) }
    dend_10 { pt3dadd( -53.7318, 40.1296, -13.0277, 0.37 ) }
    dend_10 { pt3dadd( -54.1707, 40.0301, -13.2474, 0.37 ) }
    dend_10 { pt3dadd( -54.983, 39.8018, -13.7198, 0.37 ) }
    dend_10 { pt3dadd( -56.5165, 39.3146, -14.5632, 0.22 ) }
    dend_10 { pt3dadd( -58.1653, 38.8075, -15.4417, 0.22 ) }
    dend_10 { pt3dadd( -59.5013, 38.4231, -16.1107, 0.22 ) }
    dend_10 { pt3dadd( -60.4728, 38.1413, -16.5559, 0.66 ) }
    dend_10 { pt3dadd( -61.5606, 37.8565, -16.988, 0.66 ) }
    dend_10 { pt3dadd( -62.5438, 37.6537, -17.3168, 0.15 ) }
    dend_10 { pt3dadd( -64.2063, 37.4068, -17.8126, 0.15 ) }
    dend_10 { pt3dadd( -65.6419, 37.2694, -18.2246, 0.15 ) }
    dend_10 { pt3dadd( -66.7724, 37.1817, -18.5088, 0.15 ) }
    dend_10 { pt3dadd( -68.9591, 37.0568, -19.0658, 0.15 ) }
    dend_10 { pt3dadd( -70.5465, 36.9909, -19.4409, 0.29 ) }
    dend_10 { pt3dadd( -72.2235, 36.9565, -19.8261, 0.15 ) }
    dend_10 { pt3dadd( -73.4556, 36.9453, -20.1324, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 31.2862, 31.7649, -34.1629, 0.22 ) }
    dend_30 { pt3dadd( 31.3305, 32.8602, -34.2053, 0.22 ) }
    dend_30 { pt3dadd( 31.3674, 33.7721, -34.2406, 0.29 ) }
    dend_30 { pt3dadd( 31.3792, 34.0629, -34.2519, 0.29 ) }
    dend_30 { pt3dadd( 31.4072, 34.7556, -34.2787, 0.15 ) }
    dend_30 { pt3dadd( 31.4537, 35.9052, -34.3232, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 31.2862, 31.7649, -34.1629, 0.29 ) }
    dend_27 { pt3dadd( 32.5177, 31.2657, -35.1523, 0.29 ) }
    dend_27 { pt3dadd( 32.7619, 31.1667, -35.3485, 0.29 ) }
    dend_27 { pt3dadd( 33.7892, 30.7503, -36.1739, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 33.7892, 30.7503, -36.1739, 0.22 ) }
    dend_29 { pt3dadd( 33.8628, 31.0076, -36.3192, 0.22 ) }
    dend_29 { pt3dadd( 33.9788, 31.7363, -36.5828, 0.22 ) }
    dend_29 { pt3dadd( 33.9935, 31.9261, -36.6332, 0.22 ) }
    dend_29 { pt3dadd( 33.9748, 32.3448, -36.6785, 0.22 ) }
    dend_29 { pt3dadd( 33.87, 32.8925, -36.6425, 0.15 ) }
    dend_29 { pt3dadd( 33.6561, 33.5257, -36.5031, 0.15 ) }
    dend_29 { pt3dadd( 33.5302, 33.7512, -36.3962, 0.15 ) }
    dend_29 { pt3dadd( 33.37, 34.0085, -36.2521, 0.59 ) }
    dend_29 { pt3dadd( 32.9519, 34.6139, -35.8713, 0.88 ) }
    dend_29 { pt3dadd( 32.4538, 35.2418, -35.4194, 0.88 ) }
    dend_29 { pt3dadd( 31.8967, 35.8572, -34.9105, 0.52 ) }
    dend_29 { pt3dadd( 31.0914, 36.6658, -34.1667, 0.52 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 81/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 33.7892, 30.7503, -36.1739, 0.22 ) }
    dend_28 { pt3dadd( 34.3375, 30.7896, -35.8017, 0.22 ) }
    dend_28 { pt3dadd( 35.3727, 30.6561, -35.7883, 0.22 ) }
    dend_28 { pt3dadd( 35.992, 30.5445, -35.8832, 0.22 ) }
    dend_28 { pt3dadd( 36.6606, 30.4247, -36.0208, 0.22 ) }
    dend_28 { pt3dadd( 37.0943, 30.3653, -36.1328, 0.29 ) }
    dend_28 { pt3dadd( 38.1922, 30.2149, -36.4164, 0.29 ) }
    dend_28 { pt3dadd( 39.8903, 29.9435, -36.9857, 0.15 ) }
    dend_28 { pt3dadd( 40.6797, 29.8033, -37.3022, 0.15 ) }
    dend_28 { pt3dadd( 41.396, 29.6706, -37.6354, 0.22 ) }
    dend_28 { pt3dadd( 42.4581, 29.4894, -38.1858, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_35, dend_12, dend_3, dend_0, dend_57, dend_56, dend_50, dend_49, dend_45, dend_36, dend_22, dend_13, dend_5, dend_4, dend_2, dend_1, dend_63, dend_58, dend_52, dend_51, dend_47, dend_46, dend_40, dend_37, dend_32, dend_23, dend_15, dend_14, dend_7, dend_6, dend_65, dend_64, dend_60, dend_59, dend_54, dend_53, dend_42, dend_41, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_19, dend_16, dend_9, dend_8, dend_62, dend_61, dend_44, dend_43, dend_31, dend_26, dend_21, dend_20, dend_18, dend_17, dend_11, dend_10, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_49 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_47 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_46 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_14 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_6 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_65 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_64 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_60 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_18 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_17 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_12 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_3 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_13 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_5 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_36 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_23 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_63 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_32 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_40 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_50 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_24 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_25 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_59 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_31 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_27 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_30 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_51 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_52 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_29 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_28 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_21 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_53 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_20 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_10 OneSecGrp_SectionRef_65.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_54 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_43 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_44 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_62 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_45 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 3
    dend_49 nseg = 3
    dend_4 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 9
    dend_47 nseg = 5
    dend_46 nseg = 3
    dend_37 nseg = 3
    dend_14 nseg = 3
    dend_6 nseg = 5
    dend_65 nseg = 9
    dend_64 nseg = 5
    dend_60 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_38 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_19 nseg = 3
    dend_9 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L1_NGCDA_3d9c976fde_0_0


