// Cell: cADpyr230_L4_SP_1c98df1fde_0_0
/*
{
  "id" : "cADpyr230_L4_SP_1c98df1fde_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.7762, -6.65843, 1.68973, 1.62225", "-3.37091, -6.05756, 1.49202, 2.68302", "-2.96562, -5.45669, 1.29431, 4.18183", "-2.56033, -4.85582, 1.09659, 5.23637", "-2.15504, -4.25495, 0.898882, 5.96111", "-1.74975, -3.65409, 0.701169, 6.6575", "-1.34446, -3.05322, 0.503456, 7.22539", "-0.939173, -2.45235, 0.305744, 7.74314", "-0.533883, -1.85148, 0.108031, 8.02668", "-0.128593, -1.25061, -0.0896814, 7.99979", "0.276697, -0.649743, -0.287394, 7.71194", "0.681986, -0.0488738, -0.485107, 7.51065", "1.08728, 0.551995, -0.682819, 7.35885", "1.49257, 1.15286, -0.880532, 7.1093", "1.89786, 1.75373, -1.07824, 6.85975", "2.30315, 2.3546, -1.27596, 6.61021", "2.70844, 2.95547, -1.47367, 6.35799", "3.11373, 3.55634, -1.67138, 5.44931", "3.51902, 4.15721, -1.86909, 4.29173", "3.92431, 4.75808, -2.06681, 2.41932", "4.3296, 5.35894, -2.26452, 1.40798" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-0.790603, 5.91784, -1.87579, 2.22", "-0.960969, 7.00116, -2.21878, 2.22", "-0.990909, 10.3087, -2.02889, 1.66", "-1.05145, 16.9982, -1.64483, 1.66", "-1.08201, 20.3741, -1.45101, 1.39", "-1.10945, 23.4064, -1.27692, 1.39", "-1.13266, 25.9711, -1.12967, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.42677, -4.17199, -2.46667, 1.94", "-4.38256, -5.34376, -3.11764, 1.94", "-5.49075, -8.60973, -3.71374, 1.11", "-6.47374, -11.5067, -4.2425, 1.11", "-7.10987, -13.3815, -4.58468, 1.11", "-8.13867, -16.4134, -5.13807, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-5.13212, -1.65457, -2.57467, 0.83", "-10.3927, -3.48272, -5.10108, 0.83", "-11.6907, -4.53669, -4.78468, 0.83", "-15.4857, -7.55172, -4.09095, 1.11", "-19.0256, -10.195, -3.32853, 0.55", "-20.5697, -11.317, -2.99695, 0.55", "-23.0319, -12.9953, -2.54362, 0.55", "-25.4915, -14.3262, -2.37399, 0.55", "-26.6555, -14.9426, -2.356, 0.55", "-30.0022, -16.5868, -2.38837, 0.55", "-32.6503, -17.9206, -2.24774, 0.55", "-35.3462, -19.1554, -2.01404, 0.83", "-38.2157, -20.3943, -1.64992, 0.55", "-39.4235, -20.9346, -1.50132, 0.83", "-42.3975, -22.3438, -1.3257, 0.55", "-46.3025, -24.3236, -1.42655, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.00657, -1.7762, 3.02105, 1.39", "8.92212, -3.33235, 5.48295, 1.39", "9.75585, -3.71084, 3.98978, 1.39", "10.5483, -4.07059, 2.57053, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.10871, 3.75617, -3.97262, 1.39", "3.94265, 4.75511, -5.06329, 1.39", "6.47034, 5.01038, -8.26492, 1.39", "8.88152, 5.25388, -11.3189, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999998123122724
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.3296, 5.35894, -2.26452, 0.67", "12.7175, 17.7945, -2.26452, 0.67", "21.1054, 30.2301, -2.26452, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-1.13266, 25.9711, -1.12967, 1.94", "-2.57371, 29.5308, -2.16018, 1.11", "-3.48704, 31.7869, -2.8133, 1.11" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-1.13266, 25.9711, -1.12967, 1.94", "-4.27304, 26.9009, -1.56962, 1.11", "-6.95415, 27.5725, -1.90393, 0.83", "-8.38879, 27.8816, -2.05163, 0.83", "-10.7729, 28.3953, -2.2329, 0.83", "-12.7358, 28.7734, -2.40537, 0.83", "-13.885, 28.9506, -2.51134, 0.83", "-16.0881, 29.1601, -2.53632, 0.83", "-17.6974, 29.1928, -2.53429, 0.83", "-19.6228, 29.1201, -2.50649, 0.83", "-21.7612, 28.9448, -2.42724, 0.83", "-23.4519, 28.8414, -2.31162, 0.83", "-25.6439, 28.7681, -2.11321, 0.83", "-27.2196, 28.8248, -1.95154, 0.55", "-29.4526, 28.9961, -1.72137, 0.55", "-32.1425, 29.3998, -1.41882, 0.55", "-33.5738, 29.7199, -1.21151, 0.55", "-35.107, 30.1632, -0.995995, 0.55", "-37.7906, 30.9275, -0.667606, 0.55", "-38.2794, 31.0685, -0.60255, 0.83", "-41.1585, 31.8419, -0.199594, 0.55", "-43.4833, 32.37, 0.136343, 0.55", "-44.3964, 32.5681, 0.292951, 0.55", "-47.9016, 33.3629, 0.904459, 0.55", "-49.3498, 33.6563, 1.22604, 0.55", "-50.5943, 33.9383, 1.56083, 0.55", "-51.6759, 34.2104, 1.8705, 0.55", "-53.7186, 34.8569, 2.47085, 0.55", "-55.3037, 35.4181, 2.96382, 0.55", "-57.4806, 36.3541, 3.88749, 0.55", "-59.1575, 37.0495, 4.74583, 0.55", "-60.3095, 37.5013, 5.50027, 1.11", "-61.3099, 37.8946, 6.20178, 0.55", "-62.3051, 38.2268, 6.94006, 0.83", "-64.4097, 38.9545, 8.75409, 0.28", "-65.3539, 39.2963, 9.57507, 0.28", "-66.8206, 39.6616, 11.0932, 0.55" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-8.13867, -16.4134, -5.13807, 1.94", "-8.66892, -17.1348, -6.50717, 1.39", "-8.96075, -17.5318, -7.26064, 1.39" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-8.13867, -16.4134, -5.13807, 1.94", "-10.3186, -20.0931, -4.88336, 0.55", "-11.4635, -22.0817, -4.87569, 0.83", "-13.294, -25.0889, -5.06111, 0.55", "-14.5168, -27.2494, -5.16645, 0.55", "-16.6223, -31.3265, -5.28821, 0.55", "-18.1102, -34.1838, -5.26118, 0.55", "-19.592, -37.0607, -5.17642, 0.55", "-21.1032, -39.7053, -5.00253, 0.55", "-23.1264, -43.2819, -4.73622, 0.55", "-24.3248, -45.3702, -4.57884, 0.55", "-25.9804, -48.2283, -4.22995, 0.55", "-27.2417, -50.2247, -3.74678, 0.55", "-29.8405, -53.8971, -2.58574, 0.55", "-31.6568, -56.2419, -1.78381, 0.55", "-32.3634, -57.0524, -1.5, 0.55", "-34.7765, -59.7344, -0.402716, 0.83", "-36.6773, -61.8657, 0.67396, 0.55", "-38.3375, -63.8274, 1.84684, 1.11", "-41.0504, -67.2018, 4.18954, 0.55", "-42.5764, -69.1609, 5.58616, 0.55", "-44.1686, -71.431, 7.16277, 0.83", "-46.2264, -74.844, 9.36254, 0.55", "-47.6766, -77.6009, 11.0981, 0.55", "-48.6014, -79.7405, 12.358, 0.55", "-49.1742, -81.3481, 13.1633, 0.55", "-49.894, -83.5457, 14.0563, 0.55", "-50.793, -86.3711, 15.0071, 0.55", "-51.2085, -87.6509, 15.368, 0.55", "-52.5229, -91.2263, 16.3187, 0.55", "-53.7972, -94.566, 17.1751, 0.55", "-54.8451, -97.1296, 17.8503, 0.55", "-55.7778, -99.2826, 18.4085, 0.28", "-56.2569, -100.379, 18.7065, 0.55", "-57.3459, -102.942, 19.3853, 0.28", "-58.1952, -104.927, 19.9566, 0.83", "-58.9625, -106.959, 20.409, 0.55", "-59.8339, -109.425, 20.814, 0.28", "-60.1454, -110.343, 20.9079, 0.55", "-60.7343, -112.133, 21.0096, 0.28", "-61.013, -113.078, 20.9823, 0.55", "-61.7066, -115.778, 20.6849, 0.28", "-62.0116, -117.112, 20.4634, 0.55", "-62.3676, -118.821, 20.0989, 0.28", "-62.5538, -119.74, 19.895, 0.55", "-62.7959, -121.059, 19.5683, 0.28", "-63.196, -123.232, 19.0587, 0.28", "-63.4563, -124.712, 18.7282, 0.55", "-63.9022, -127.317, 18.3812, 0.28", "-64.1172, -128.529, 18.3039, 0.28", "-64.3454, -129.754, 18.3434, 0.83", "-65.0075, -133.132, 18.7055, 0.28", "-65.4173, -135.313, 19.0989, 0.83", "-66.3976, -140.512, 20.4248, 0.28", "-66.5234, -141.174, 20.6336, 0.55", "-67.1189, -144.373, 21.7744, 0.28", "-67.1913, -144.777, 21.9428, 0.55", "-67.4841, -146.569, 22.9035, 0.28", "-67.5843, -147.121, 23.2837, 0.55", "-70.6339, -157.413, 26.2899, 0.55", "-73.8119, -166.802, 31.3902, 0.55", "-74.9073, -176.528, 36.7253, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-46.3025, -24.3236, -1.42655, 0.83", "-47.583, -25.4466, -2.9752, 0.55", "-48.3514, -25.9606, -3.99069, 0.55", "-50.6902, -27.6515, -6.78637, 0.55", "-52.7531, -29.3555, -9.20305, 0.55", "-54.2299, -30.7876, -11.0671, 0.55", "-56.6498, -33.52, -14.7683, 0.55", "-57.8515, -34.8602, -16.8605, 0.55", "-59.4586, -36.8595, -20.2003, 0.55", "-60.0361, -37.696, -21.8432, 0.55", "-60.5765, -38.7778, -24.4613, 0.55", "-60.9227, -40.2595, -28.1418, 0.83", "-61.3345, -42.3313, -33.0778, 0.55", "-61.3984, -42.6744, -34.0624, 0.55", "-61.7325, -43.6645, -38.0306, 0.28", "-62.1097, -44.2848, -40.8253, 0.83", "-62.4358, -44.6987, -42.8988, 0.83", "-63.3235, -45.5789, -47.8147, 0.28", "-63.6056, -45.8824, -49.5489, 0.28", "-64.7649, -47.0023, -56.4614, 1.66", "-65.505, -47.7576, -60.7696, 0.28", "-65.7795, -48.0581, -62.3758, 0.28", "-66.2876, -48.4276, -64.8977, 1.11", "-66.918, -48.9347, -67.8388, 0.55", "-67.641, -49.6099, -70.3285, 0.28", "-68.0812, -49.9875, -71.4722, 0.55", "-69.5937, -51.0362, -74.9852, 0.55", "-72.5687, -52.9338, -81.6306, 0.55", "-74.892, -54.1595, -86.3806, 0.28", "-75.9479, -54.6453, -88.4317, 0.83", "-79.4942, -56.2219, -95.0322, 0.83", "-81.4327, -56.9481, -98.6079, 0.28", "-81.7492, -57.0365, -99.1913, 0.83", "-85.3452, -57.8427, -105.686, 0.28", "-86.0421, -57.8601, -106.911, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-46.3025, -24.3236, -1.42655, 0.83", "-48.4864, -24.6633, -1.27772, 0.55", "-49.9728, -24.953, -1.15319, 0.55", "-53.1302, -25.4679, -0.85437, 0.55", "-56.6313, -26.2893, -0.418295, 0.55", "-59.0776, -26.988, -0.109777, 0.55", "-61.7725, -27.8722, 0.259727, 0.55", "-62.8765, -28.3111, 0.374248, 0.55", "-64.9747, -29.3278, 0.569819, 0.55", "-68.4922, -31.3972, 0.753535, 0.55", "-70.838, -33.0864, 0.868936, 0.83", "-72.2275, -34.1144, 0.887667, 0.55", "-74.6163, -35.7846, 0.772763, 0.55", "-75.3494, -36.2728, 0.716674, 0.55", "-76.9442, -37.3306, 0.597309, 0.55", "-79.0237, -38.571, 0.340195, 1.11", "-82.1303, -40.3564, -0.0307464, 0.55", "-83.4721, -41.0367, -0.22258, 0.55", "-84.7127, -41.55, -0.376931, 0.83", "-85.9954, -42.0447, -0.577111, 0.55", "-88.6006, -43.1498, -1.12356, 0.55", "-89.1699, -43.396, -1.26027, 0.55", "-91.5784, -44.265, -1.72778, 1.39", "-93.6555, -45.0365, -2.07959, 0.83", "-95.6819, -45.7453, -2.33457, 0.55", "-96.8229, -46.0384, -2.40819, 0.55", "-98.459, -46.3767, -2.3786, 0.55", "-101.849, -46.9886, -2.26889, 0.55", "-103.558, -47.2533, -2.19066, 0.55", "-104.672, -47.4283, -2.19703, 0.55", "-107.291, -47.8407, -2.40195, 0.83", "-108.913, -48.1106, -2.63906, 0.83", "-111.693, -48.7288, -3.29779, 0.55", "-113.295, -49.1957, -3.81672, 0.83", "-115.091, -49.808, -4.48049, 0.28", "-116.692, -50.5204, -5.14538, 0.55", "-117.245, -50.8881, -5.37718, 0.28", "-118.088, -51.5376, -5.76121, 0.83", "-118.974, -52.393, -6.16415, 0.55", "-120.306, -53.8023, -6.67215, 0.28", "-121.429, -55.0795, -7.00922, 0.55", "-123.016, -56.8773, -7.43095, 0.28", "-125.049, -59.01, -7.94736, 0.83", "-126.417, -60.2755, -8.33071, 0.83", "-128.896, -62.5805, -9.06769, 0.28", "-130.874, -64.3327, -9.65633, 0.55", "-132.46, -65.7355, -10.1333, 0.28", "-133.636, -66.6787, -10.4826, 0.83", "-135.736, -68.4425, -10.9571, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.5483, -4.07059, 2.57053, 1.39", "13.4103, -1.76777, -0.383744, 0.83", "15.171, -0.351062, -2.20123, 0.83", "16.2496, 0.51683, -3.31464, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "10.5483, -4.07059, 2.57053, 1.39", "13.1064, -1.3234, 6.58137, 1.11", "13.9009, -0.470233, 7.82697, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.88152, 5.25388, -11.3189, 1.39", "10.0473, 8.04235, -15.6749, 1.11", "10.7882, 9.81457, -18.4434, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.88152, 5.25388, -11.3189, 1.39", "9.84916, 4.81638, -12.1646, 0.55", "10.66, 4.41301, -12.8558, 0.55", "11.3569, 4.05582, -13.3285, 0.55", "12.0127, 3.81031, -13.6739, 0.83", "12.8787, 3.5814, -14.015, 0.83", "14.118, 3.33506, -14.4028, 0.28", "14.9129, 3.21834, -14.5814, 0.83", "16.4546, 3.00887, -14.8414, 0.83", "19.3291, 2.6441, -15.1269, 0.83", "21.2181, 2.36127, -15.2748, 0.83", "22.4739, 2.18906, -15.329, 0.55", "22.9587, 2.1374, -15.3344, 0.55", "23.6492, 2.07509, -15.3293, 1.11", "25.1928, 1.90354, -15.342, 0.83", "26.8711, 1.25196, -15.1627, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "21.1054, 30.2301, -2.26452, 0.694124", "29.4932, 42.6657, -2.26452, 0.694124", "37.8811, 55.1012, -2.26452, 0.694124" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-3.48704, 31.7869, -2.8133, 1.11", "-3.54524, 32.891, -3.91725, 1.11", "-3.66223, 35.1103, -6.13644, 1.11", "-3.92105, 40.0202, -11.0459, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-3.48704, 31.7869, -2.8133, 1.11", "-11.3701, 32.1561, -0.778141, 0.83", "-15.0369, 32.5276, 0.215725, 0.83", "-16.5923, 32.7188, 0.569512, 0.83", "-19.9347, 33.1092, 1.11089, 0.83", "-22.5926, 33.3527, 1.35579, 0.83", "-25.0352, 33.4677, 1.40609, 0.83", "-27.3637, 33.246, 1.48454, 0.83", "-29.6449, 33.0837, 0.0202017, 0.83", "-31.2599, 33.0527, -1.59197, 0.83", "-32.239, 32.9618, -2.83199, 0.83", "-33.2544, 32.7913, -4.1425, 0.83", "-34.4486, 32.5046, -5.51147, 0.83", "-38.1568, 31.5751, -8.82765, 0.83", "-39.6597, 31.3469, -9.93828, 0.83", "-41.6494, 31.2404, -11.2144, 0.83", "-43.1705, 31.2147, -12.096, 0.83", "-44.9651, 31.1816, -13.0997, 0.83", "-47.3782, 31.1114, -14.3047, 0.83", "-50.3162, 30.9622, -15.4836, 1.11", "-52.5481, 30.8531, -16.2704, 0.55", "-54.7954, 30.7184, -17.0829, 0.55", "-56.3029, 30.5387, -17.6607, 0.55", "-58.9866, 30.0551, -18.6458, 0.83", "-60.9821, 29.4584, -19.3055, 0.55", "-62.5866, 28.7632, -19.7901, 0.55", "-64.4127, 27.7591, -20.3044, 1.11", "-65.773, 26.9252, -20.6147, 0.55", "-67.3103, 25.9142, -20.8516, 0.55", "-68.5581, 25.0277, -21.06, 0.55", "-69.4427, 24.4391, -21.2213, 0.55", "-71.3889, 23.2126, -21.5721, 0.83", "-73.5456, 21.8905, -21.8966, 0.28", "-75.0665, 20.9621, -22.174, 1.39", "-77.0536, 19.7356, -22.5594, 1.11", "-78.6942, 18.7612, -22.819, 0.28", "-79.7299, 18.158, -22.9695, 0.55", "-81.2743, 17.2968, -23.2611, 0.28", "-82.6534, 16.4684, -23.5805, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.96075, -17.5318, -7.26064, 1.39", "-15.3454, -17.9105, -5.89898, 0.83", "-17.7081, -18.0506, -5.39511, 0.83", "-19.3505, -18.148, -5.04482, 0.83", "-21.2087, -18.2582, -4.64853, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.96075, -17.5318, -7.26064, 1.39", "-8.08554, -19.48, -10.0533, 0.83", "-7.28544, -21.2081, -12.852, 0.83", "-6.70844, -22.6838, -14.9832, 0.83", "-5.99614, -24.7288, -17.9131, 0.83", "-5.57132, -26.17, -19.8378, 0.83", "-4.81302, -29.0842, -23.709, 0.83", "-4.09022, -31.926, -27.1268, 0.83", "-3.42098, -34.9408, -30.5203, 0.83", "-2.80478, -37.6956, -33.5195, 0.83", "-2.35937, -39.6688, -35.5806, 0.83", "-1.62261, -42.8748, -38.613, 0.83", "-1.16475, -44.9235, -40.3693, 0.83", "-0.792965, -46.5627, -41.5937, 0.83", "-0.194178, -48.8121, -43.2462, 0.55", "0.323904, -50.5599, -44.3402, 1.39", "1.47742, -53.9789, -46.4116, 1.39" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "16.2496, 0.51683, -3.31464, 0.83", "17.8753, 0.514805, -5.09882, 0.83", "19.3882, 0.391397, -6.86235, 0.83", "21.7611, 0.0635479, -9.58492, 0.55", "23.9291, -0.343179, -12.0867, 0.55", "26.0494, -0.869852, -14.4166, 0.55", "27.8491, -1.34266, -16.3402, 0.55", "30.125, -2.01405, -18.7495, 0.55", "32.0899, -2.49366, -20.811, 0.55", "34.5093, -2.96718, -23.4361, 0.55", "38.7005, -3.50615, -28.1476, 0.55", "40.0774, -3.57531, -29.7143, 0.55", "42.6512, -3.53276, -32.734, 0.55", "45.0138, -3.34654, -35.5858, 0.55", "47.8613, -3.01787, -39.1165, 0.55", "49.687, -2.81354, -41.379, 0.55", "51.6048, -2.57588, -43.8391, 0.55", "54.4739, -2.2757, -47.3613, 0.55", "55.5739, -2.2014, -48.6373, 0.55", "57.4836, -2.10722, -50.6662, 0.55", "60.7548, -1.85283, -53.8738, 0.55", "64.3505, -1.39369, -57.1909, 0.55", "66.8169, -0.947012, -59.379, 0.55", "70.0199, -0.193898, -62.1043, 0.55", "73.0508, 0.668633, -64.5663, 0.55", "75.9965, 1.64773, -66.858, 0.55", "77.9946, 2.35575, -68.3222, 0.55", "79.9372, 2.98915, -69.6762, 0.55", "81.3, 3.3912, -70.6616, 0.83", "84.286, 4.30265, -72.7993, 0.55", "85.4516, 4.61937, -73.6657, 0.83", "89.3687, 5.65216, -76.7571, 0.55", "90.4904, 5.93468, -77.6873, 0.83", "94.7147, 6.96641, -81.3225, 0.55", "96.4198, 7.3111, -82.8811, 0.55", "98.2351, 7.63576, -84.6437, 0.55", "100.361, 8.00141, -86.7652, 0.55", "101.676, 8.24976, -88.1117, 0.55", "102.956, 8.48418, -89.47, 0.55", "105.554, 8.89939, -92.4428, 0.83", "106.434, 8.97458, -93.5128, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.2496, 0.51683, -3.31464, 0.83", "18.6556, -2.12651, -0.810699, 0.83", "20.31, -3.41309, 0.621797, 0.83", "23.4853, -4.99823, 2.92879, 0.83", "25.1357, -5.82216, 4.12794, 0.83", "26.3319, -6.41929, 4.99701, 0.83", "29.091, -7.79665, 7.0016, 0.55", "31.0776, -8.26656, 8.30891, 0.55", "33.4136, -8.37167, 9.58817, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "13.9009, -0.470233, 7.82697, 1.11", "16.2216, 2.26086, 10.1757, 0.55", "17.7696, 4.60921, 12.0455, 0.83", "18.7938, 6.33397, 13.5952, 0.55", "20.2716, 8.82237, 15.8309, 0.55", "20.6987, 9.54162, 16.4772, 0.55", "21.3887, 10.7034, 17.5211, 0.83", "21.9525, 11.5301, 18.5478, 0.55", "22.6664, 12.753, 19.4839, 0.83", "28.6667, 19.8139, 23.9651, 0.83", "35.143, 27.0578, 27.3595, 0.83", "41.7335, 33.8447, 31.4148, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "13.9009, -0.470233, 7.82697, 1.11", "12.5847, -1.82476, 10.9878, 0.55", "12.0824, -2.48702, 12.3187, 0.55", "11.5508, -3.26312, 14.0425, 0.55", "9.97385, -6.4458, 20.9714, 0.55", "9.55712, -7.36323, 23.11, 0.55", "9.35752, -7.87383, 24.3726, 0.55", "9.02916, -9.31526, 28.1464, 0.55", "8.87976, -10.5979, 31.6381, 0.55", "8.89159, -11.9376, 35.6134, 0.55", "8.99748, -12.5686, 37.4665, 0.55", "9.29408, -13.5125, 39.9834, 1.11", "7.65093, -15.5905, 50.6748, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "10.7882, 9.81457, -18.4434, 1.39", "16.8472, 10.563, -22.7628, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.7882, 9.81457, -18.4434, 1.39", "11.3238, 10.7456, -20.7081, 0.83", "11.9764, 12.6546, -24.4727, 0.83", "12.5864, 15.8123, -29.669, 0.83", "12.7333, 16.8217, -31.3001, 0.83", "12.7195, 18.8016, -34.4682, 0.83", "12.6913, 22.8506, -40.9473, 0.83", "12.5597, 25.0826, -44.4387, 0.83", "12.3617, 26.4803, -46.3879, 0.83", "12.0789, 28.9698, -49.5584, 0.83", "11.0629, 32.9572, -55.1919, 1.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "26.8711, 1.25196, -15.1627, 0.83", "28.5594, 0.919268, -15.3035, 0.83", "30.4204, 0.332431, -15.4863, 0.83", "31.4868, 0.0020069, -15.5643, 0.83", "33.1859, -0.529854, -15.6167, 0.83", "35.5613, -1.27825, -15.684, 0.83", "39.0792, -2.39533, -15.7531, 0.83", "41.3785, -3.14966, -15.7825, 0.83", "44.0109, -4.06602, -15.7355, 0.83", "46.6327, -4.99736, -15.6642, 0.83", "47.849, -5.44929, -15.611, 1.11", "51.6842, -6.91963, -15.3476, 0.83", "53.3556, -7.52798, -15.2392, 0.83", "55.0899, -8.14284, -15.1083, 0.83", "57.3306, -9.03453, -14.9628, 0.83", "58.7808, -9.62483, -14.8775, 0.83", "60.5201, -10.3564, -14.7153, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "26.8711, 1.25196, -15.1627, 0.83", "28.47, -0.267407, -16.1378, 0.28", "28.7878, -0.528485, -16.2841, 0.55", "30.2627, -1.69148, -16.895, 0.28", "31.9187, -2.97592, -17.4975, 1.11", "36.7096, -6.60021, -19.1392, 0.28", "37.3227, -7.05822, -19.3345, 0.83", "40.7021, -9.37273, -20.2133, 0.28", "41.4189, -9.837, -20.3624, 0.55", "42.7383, -10.6645, -20.5718, 0.28", "44.9656, -11.9691, -20.8419, 0.83", "47.835, -13.5345, -21.0352, 0.28", "49.4156, -14.3943, -21.1545, 0.55", "51.6529, -15.6031, -21.3586, 0.28", "52.4914, -16.0348, -21.4303, 0.55", "55.5293, -17.5155, -21.7036, 0.28", "58.0283, -18.6631, -21.8197, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-3.92105, 40.0202, -11.0459, 1.11", "-3.00754, 48.1517, -11.8328, 1.11", "-1.92298, 54.4195, -12.109, 1.11", "-0.641674, 61.8245, -12.4352, 1.11", "0.12788, 66.2719, -12.6311, 1.11", "1.07488, 71.7449, -12.8723, 1.11", "2.5449, 80.2405, -13.2466, 1.11", "3.03559, 89.3287, -15.2423, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-3.92105, 40.0202, -11.0459, 1.11", "-5.84607, 39.5506, -10.0656, 1.11", "-8.82021, 38.8251, -8.55099, 1.11" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-21.2087, -18.2582, -4.64853, 1.11", "-22.9376, -18.1289, -7.62769, 0.55", "-23.1893, -18.1901, -8.05971, 0.55", "-23.8813, -18.5118, -9.19663, 0.55", "-27.8073, -20.8148, -15.0375, 0.55", "-28.7912, -21.3727, -16.2829, 0.55", "-29.3403, -21.684, -16.9779, 0.55", "-31.9849, -23.4779, -19.9842, 0.55", "-32.8795, -24.1741, -20.9766, 0.55", "-33.7799, -25.0643, -21.9289, 0.55", "-35.4513, -27.4073, -22.7725, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-21.2087, -18.2582, -4.64853, 1.11", "-22.5706, -21.3007, -6.00543, 0.83", "-24.4213, -24.7027, -7.42122, 0.83", "-25.0251, -25.8287, -7.83591, 0.28", "-25.432, -26.6317, -8.13136, 0.83", "-26.3243, -28.5045, -8.69287, 0.55", "-27.8118, -31.4719, -9.47949, 0.55", "-30.1515, -35.7767, -10.5053, 0.55", "-31.2071, -37.5923, -10.9794, 0.55", "-33.3215, -41.0594, -11.9361, 0.83", "-35.8384, -45.0012, -13.0566, 0.83", "-37.9366, -48.2864, -13.9688, 0.83", "-39.2532, -50.4045, -14.5409, 0.83", "-40.3804, -52.1419, -15.0777, 0.83", "-41.3993, -53.5415, -15.5729, 0.83", "-41.8837, -54.1169, -15.8082, 0.83", "-43.2829, -55.5835, -16.8818, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.47742, -53.9789, -46.4116, 1.39", "6.00666, -56.7359, -47.793, 0.55", "8.38315, -58.1826, -48.5179, 0.83", "11.2145, -59.9061, -49.3815, 0.55", "12.6756, -60.7955, -49.8272, 0.55", "13.7774, -61.4662, -50.1632, 0.55", "15.8117, -62.7045, -50.7837, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "1.47742, -53.9789, -46.4116, 1.39", "1.59236, -54.7228, -47.849, 0.55", "1.94994, -56.1434, -50.5048, 0.55", "2.31404, -58.4929, -54.8826, 0.55", "2.50499, -59.5739, -57.0174, 0.55", "2.87207, -61.5268, -60.8387, 0.55", "2.96373, -62.0343, -61.7773, 0.55", "3.27896, -63.6664, -64.6751, 1.11", "3.6236, -65.6121, -67.7277, 0.28", "4.04237, -67.4577, -70.0954, 0.28", "4.25794, -68.4774, -71.1916, 0.28", "4.50324, -69.8056, -72.2207, 0.83", "4.81234, -71.103, -73.1406, 0.28", "5.26324, -72.7238, -74.0273, 0.28", "5.79635, -74.1424, -74.6238, 0.55", "6.15342, -75.212, -75.0799, 0.28", "6.43878, -76.3152, -75.6765, 0.28", "6.72538, -77.7463, -76.5871, 0.83", "7.08017, -80.7744, -78.7322, 0.83", "7.35604, -83.6133, -80.7718, 0.28", "7.45176, -85.6566, -82.266, 0.83", "7.58123, -88.5741, -84.4799, 0.28", "7.64598, -90.4845, -86.0031, 0.55", "7.50291, -93.0604, -88.2695, 0.28", "7.31477, -94.7583, -89.9457, 1.11", "6.86699, -97.8806, -93.2874, 0.28", "6.63222, -100.216, -95.8441, 0.28", "6.52807, -101.362, -97.1618, 0.83", "5.99557, -105.367, -101.98, 0.28", "5.81502, -106.403, -103.297, 0.55", "5.49718, -107.669, -104.996, 0.55", "5.05832, -109.321, -107.346, 0.55", "4.49913, -111.056, -109.702, 0.28", "4.37495, -111.69, -110.488, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "33.4136, -8.37167, 9.58817, 0.55", "33.8567, -6.34122, 10.5987, 0.28", "33.932, -5.99634, 10.7703, 0.83", "34.1009, -5.22255, 11.1554, 0.28", "34.6372, -2.76525, 12.3783, 0.83", "36.4358, 3.3036, 15.4637, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "33.4136, -8.37167, 9.58817, 0.55", "39.0381, -11.5804, 12.1006, 0.28", "39.5539, -11.8747, 12.331, 0.83", "41.1608, -12.7914, 13.0488, 0.55", "45.4172, -15.2197, 14.95, 1.11", "55.0426, -18.1202, 19.9234, 1.11", "64.9239, -21.7521, 23.792, 1.11", "73.7599, -27.115, 28.1465, 1.11", "82.1463, -33.2471, 32.3728, 1.11", "90.5564, -40.0386, 35.363, 1.11", "97.3695, -48.125, 39.1032, 1.11", "105.026, -54.4936, 44.2628, 1.11", "111.102, -62.5635, 49.1369, 1.11", "115.388, -71.9682, 53.4932, 1.11", "120.966, -81.0531, 56.9787, 1.11", "126.906, -89.7132, 60.9173, 1.11", "132.923, -98.3176, 64.8615, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "41.7335, 33.8447, 31.4148, 0.83", "49.5388, 43.6945, 38.7624, 0.83", "57.4332, 52.395, 47.3593, 0.83", "65.2228, 61.4924, 55.635, 0.83", "70.6406, 70.3319, 65.8544, 0.83", "77.3424, 77.8333, 76.3779, 0.83", "85.5657, 85.1301, 85.9205, 0.83", "91.7389, 94.1394, 95.5462, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "41.7335, 33.8447, 31.4148, 0.83", "47.1063, 40.4402, 36.7109, 0.83", "53.2164, 45.9585, 42.4234, 0.83", "60.2697, 49.5273, 48.5823, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "7.65093, -15.5905, 50.6748, 1.11", "6.24853, -19.2177, 58.5721, 0.83", "3.99627, -21.9392, 66.6352, 0.83", "0.218641, -22.6443, 74.555, 0.83", "-4.18855, -24.3626, 81.9791, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.65093, -15.5905, 50.6748, 1.11", "6.66951, -17.2715, 58.6318, 0.83", "7.20157, -19.148, 66.5879, 0.83", "7.54563, -22.644, 73.9881, 0.83", "8.78957, -26.6673, 81.0144, 0.83", "9.82217, -31.0, 87.8894, 0.83", "11.1784, -36.4578, 93.8456, 0.83", "13.2593, -41.6942, 99.7915, 0.83", "15.5088, -46.3541, 106.142, 0.83", "17.888, -51.1656, 112.331, 0.83", "20.5462, -56.3959, 118.047, 0.83", "22.4728, -60.7022, 124.744, 0.83", "23.1007, -65.391, 131.432, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.8472, 10.563, -22.7628, 0.83", "18.718, 11.7011, -24.8076, 0.83", "20.822, 13.0012, -27.0032, 0.83", "23.0345, 14.1228, -29.1323, 0.83", "25.2668, 15.1188, -31.1804, 0.83", "26.9807, 15.8027, -32.7218, 0.83", "29.4578, 16.7142, -34.9171, 0.83", "30.9404, 17.1506, -36.1844, 0.83", "33.4671, 17.7128, -38.1469, 0.83", "34.6499, 17.9566, -39.0552, 0.83", "35.8193, 18.1463, -39.9808, 0.83", "37.0011, 18.3871, -40.8912, 0.83", "38.0264, 18.6045, -41.7077, 0.83", "40.4474, 19.2306, -43.6611, 0.83", "41.9623, 19.7248, -44.9061, 0.83", "43.4302, 20.2242, -46.1006, 0.83", "47.116, 21.4962, -49.0972, 0.83", "49.1212, 22.1322, -50.6664, 0.83", "50.712, 22.6273, -51.8533, 0.55", "51.9791, 23.0137, -52.7584, 0.55", "53.1887, 23.3978, -53.5704, 0.55", "54.2576, 23.7403, -54.2502, 0.55", "58.0577, 24.9195, -56.5727, 0.55", "59.7431, 25.4627, -57.5717, 0.55", "60.8395, 25.766, -58.2499, 1.11", "61.6074, 25.9911, -58.7311, 0.55", "62.4229, 26.2288, -59.2695, 0.55", "64.3135, 26.7741, -60.5579, 0.55", "65.3315, 27.0432, -61.2306, 0.83", "66.9017, 27.3673, -62.2338, 0.55", "69.4007, 27.7873, -63.7014, 0.55", "70.525, 27.9455, -64.335, 0.55", "73.2844, 28.3412, -65.8349, 0.55", "75.2345, 28.6038, -66.8718, 0.55", "76.6995, 28.7978, -67.6668, 0.55", "78.8184, 29.1032, -68.8509, 0.55", "81.2315, 29.4268, -70.2979, 0.55", "83.593, 29.8321, -71.7671, 0.28", "83.9321, 29.8937, -72.0016, 0.55", "84.8521, 30.0859, -72.7148, 0.28", "86.4046, 30.495, -73.919, 0.28", "86.8495, 30.6457, -74.2987, 0.83", "88.142, 31.2214, -75.3043, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.8472, 10.563, -22.7628, 0.83", "16.6724, 9.30587, -26.9975, 0.55", "16.7116, 8.83109, -28.7559, 0.55", "16.8237, 8.21582, -31.2296, 0.55", "17.0013, 7.81004, -32.8177, 0.55", "17.104, 7.61768, -33.5088, 0.83", "17.6191, 6.94243, -35.9873, 0.55", "18.4539, 6.05766, -38.857, 0.55", "19.1162, 5.40032, -41.4651, 0.55", "19.5975, 4.9425, -43.6983, 0.55", "19.9811, 4.53973, -45.8536, 0.55", "20.4126, 4.02286, -48.6684, 0.55", "20.6667, 3.55468, -51.2079, 0.55", "20.7965, 2.88405, -55.8136, 0.83", "20.8008, 2.71801, -57.3781, 0.55", "20.7869, 2.65043, -58.1983, 0.55", "20.7963, 2.49673, -60.326, 0.83", "20.9297, 2.23615, -62.577, 0.55", "21.3529, 1.84211, -64.9412, 0.55", "21.5855, 1.59496, -65.7192, 0.83", "22.1337, 0.945954, -67.6801, 0.28", "22.2914, 0.764546, -68.2232, 0.83", "22.7791, 0.0867034, -70.0162, 0.28", "23.0695, -0.398326, -71.2104, 0.55", "23.4857, -1.44286, -73.8823, 0.55", "23.7638, -2.44563, -76.8126, 0.28", "23.8631, -2.8237, -78.0714, 0.28", "23.9286, -3.06284, -79.0726, 0.28", "24.0083, -3.3507, -80.5866, 0.83", "24.1282, -3.70343, -82.6686, 0.28", "24.1707, -3.9078, -84.0485, 0.83", "24.1588, -4.44343, -86.9077, 0.55", "24.146, -5.02303, -89.7226, 0.28", "24.1509, -5.21463, -90.5352, 0.83", "24.1216, -5.47261, -91.7278, 0.83", "24.0087, -5.92345, -93.9861, 0.55", "23.8635, -6.24875, -95.9326, 0.55", "23.5505, -6.56673, -98.4876, 0.55", "23.395, -6.87147, -100.294, 0.55", "23.2167, -7.68476, -104.156, 0.55", "23.2184, -8.03196, -105.509, 0.28", "23.2349, -8.18718, -106.072, 0.83", "23.3798, -8.96168, -109.185, 0.28", "23.4566, -10.1705, -113.154, 0.55", "23.6412, -10.8141, -114.467, 0.28", "23.8132, -11.2527, -114.799, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.0629, 32.9572, -55.1919, 1.66", "10.8385, 33.8787, -56.2844, 0.55", "10.3374, 35.906, -58.2867, 0.55", "10.1902, 36.3584, -58.6831, 0.55", "9.92464, 37.2457, -59.4549, 0.28", "9.61736, 37.889, -60.1784, 0.55", "9.0152, 38.9702, -61.6421, 0.55", "8.72841, 39.2996, -62.2683, 0.55", "8.01779, 39.8408, -63.573, 0.55", "7.57195, 40.1348, -64.3766, 0.55", "5.75612, 41.2217, -67.7099, 1.39", "5.07642, 41.6267, -69.0471, 0.55", "4.20395, 42.151, -70.8728, 0.55", "2.76778, 43.0278, -74.1567, 0.55", "2.51911, 43.1883, -74.7776, 0.55", "1.51446, 43.9154, -77.5197, 0.55", "0.775983, 44.6173, -80.1088, 0.55", "0.487207, 44.9651, -81.361, 0.55", "0.368152, 45.2462, -82.3052, 0.55", "0.32928, 45.543, -83.4066, 0.28", "0.35684, 45.7431, -84.1608, 1.11", "0.609688, 46.2811, -86.0636, 0.28", "0.68487, 46.408, -86.4771, 0.83", "1.15033, 47.1841, -88.7587, 0.28", "1.19455, 47.2654, -88.9619, 0.83", "1.54506, 47.9227, -90.4535, 0.28", "1.81639, 48.4847, -91.5885, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.0629, 32.9572, -55.1919, 1.66", "10.8376, 31.6001, -57.372, 0.83", "10.4007, 29.5094, -61.3538, 0.83", "10.0968, 28.7097, -63.2712, 0.83", "9.85288, 28.2617, -64.3528, 0.55", "8.69335, 26.7982, -68.9882, 0.55", "7.90787, 26.3883, -71.0086, 0.55", "7.11863, 26.303, -72.5729, 0.55", "5.98239, 26.3484, -74.6585, 0.83", "4.76511, 26.4191, -76.6833, 0.28", "2.26114, 26.3643, -80.4467, 1.66", "-1.69528, 25.4373, -85.0674, 0.83", "-3.65556, 24.6122, -86.8483, 0.83", "-7.0514, 22.6252, -89.3852, 0.28", "-7.504, 22.2743, -89.6596, 0.55", "-9.62415, 20.3755, -90.5705, 0.28", "-12.3071, 17.5122, -91.204, 0.28", "-14.3132, 15.1092, -91.5425, 0.83", "-15.9539, 13.3521, -91.7834, 0.28", "-16.4353, 12.9115, -91.8927, 0.55", "-19.3117, 10.2953, -92.5108, 0.28", "-20.6599, 9.08893, -92.7196, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "3.03559, 89.3287, -15.2423, 1.11", "0.873046, 94.9613, -17.1588, 1.11" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "3.03559, 89.3287, -15.2423, 1.11", "4.33654, 90.3577, -15.0502, 0.55", "6.46526, 91.8391, -14.62, 0.55", "8.1243, 92.9548, -14.2272, 0.55", "10.8026, 94.6304, -13.7122, 0.55", "15.7348, 97.5231, -12.6606, 0.55", "20.6567, 100.296, -11.6815, 0.55", "22.9158, 101.457, -11.3158, 0.55", "24.7131, 102.275, -11.1331, 0.55", "28.6975, 104.036, -11.0039, 0.55", "31.5708, 105.238, -11.1653, 0.55", "34.2659, 106.425, -11.5835, 0.55", "38.9259, 108.565, -12.6038, 0.55", "41.7554, 109.833, -13.2584, 0.55", "44.7676, 111.188, -14.0296, 0.28", "45.9283, 111.741, -14.3389, 0.55", "48.8761, 113.182, -15.2773, 0.28", "50.1247, 113.777, -15.5801, 0.28", "52.8978, 115.055, -15.7833, 0.28" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-8.82021, 38.8251, -8.55099, 1.11", "-14.2193, 36.9896, -7.33971, 0.55", "-18.7877, 35.6679, -6.92465, 0.55", "-22.5187, 34.5901, -6.76922, 0.55", "-23.8922, 34.2055, -6.7195, 0.55", "-28.3021, 32.9624, -6.56532, 0.55", "-31.765, 32.0305, -6.41539, 0.55", "-37.9088, 30.6653, -6.30386, 0.55", "-44.7197, 29.5986, -6.14767, 0.55", "-49.9791, 28.9894, -6.11471, 0.55", "-51.5872, 28.879, -6.13569, 0.55", "-55.7455, 28.7465, -6.38728, 0.55", "-60.4118, 28.606, -6.90136, 0.55", "-65.4856, 28.6203, -7.6179, 0.55", "-69.3163, 28.7078, -8.4311, 0.55", "-71.7696, 28.7577, -9.06483, 0.55", "-76.3331, 28.8398, -10.3173, 0.55", "-79.2448, 28.8436, -11.1504, 0.55", "-83.6737, 28.8325, -12.3465, 0.55", "-86.6622, 28.783, -12.9902, 0.55", "-89.0391, 28.8723, -13.2476, 0.83", "-91.0713, 29.0531, -13.2929, 0.55", "-93.0879, 29.302, -13.2054, 0.55", "-95.3596, 29.6577, -13.0966, 0.55", "-97.7524, 30.0295, -12.9365, 0.83", "-100.186, 30.3481, -12.7709, 0.55", "-102.208, 30.4779, -12.6736, 1.11", "-104.935, 30.5238, -12.7019, 0.83", "-106.985, 30.4834, -12.8236, 0.83", "-109.237, 30.3707, -13.1124, 0.55", "-111.022, 30.328, -13.4971, 0.55", "-113.734, 30.2295, -14.2593, 0.83", "-116.977, 29.9214, -15.393, 0.55", "-117.64, 29.8231, -15.644, 0.83", "-119.752, 29.3315, -16.4324, 0.55", "-121.246, 28.9636, -16.979, 0.55", "-124.361, 28.1965, -18.0108, 0.55", "-126.46, 27.6742, -18.6817, 0.55", "-129.955, 26.8325, -19.7167, 0.55", "-135.109, 25.5875, -21.1989, 0.83", "-138.561, 24.6571, -22.2194, 0.28", "-139.483, 24.3672, -22.5197, 0.55", "-141.476, 23.6929, -23.2355, 0.28", "-143.452, 22.9347, -23.9693, 0.28", "-145.506, 21.8809, -24.8385, 0.28", "-147.667, 20.4472, -26.0312, 0.28", "-148.573, 19.733, -26.6689, 0.28", "-148.782, 19.5516, -26.8479, 0.83", "-149.874, 18.5176, -27.8647, 0.28", "-150.39, 17.9974, -28.4311, 0.83", "-153.166, 15.4707, -31.6777, 0.28", "-154.47, 14.4855, -33.2067, 0.55", "-155.153, 14.0435, -34.0327, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-8.82021, 38.8251, -8.55099, 1.11", "-13.2835, 37.4308, -7.96939, 0.83", "-17.3931, 36.2867, -7.51886, 0.83", "-22.1389, 34.8629, -7.07843, 0.83", "-27.8561, 33.1643, -6.54745, 0.83", "-30.0242, 32.5231, -6.39304, 0.83", "-32.2803, 31.8987, -6.33793, 0.55", "-35.0101, 31.2964, -6.48724, 0.55", "-40.1335, 30.2571, -7.06107, 0.55", "-43.324, 29.5267, -7.59966, 0.55", "-46.3023, 28.8267, -8.17777, 0.55", "-52.8804, 27.2213, -9.54754, 0.83", "-55.7901, 26.5223, -10.2022, 0.83", "-57.3414, 26.1295, -10.5688, 0.83", "-60.9614, 25.2207, -11.5021, 0.83", "-64.309, 24.2808, -12.3356, 0.55", "-65.6066, 23.9039, -12.5835, 0.83", "-69.0, 22.8691, -12.9963, 0.55", "-69.5811, 22.6991, -13.0381, 0.83", "-72.0144, 22.0456, -13.2416, 0.55", "-73.8745, 21.5943, -13.3941, 0.55", "-75.2282, 21.3121, -13.5016, 0.55", "-78.1329, 20.6932, -13.5924, 0.55", "-80.2925, 20.1779, -13.5691, 0.55", "-82.396, 19.6369, -13.5782, 0.55", "-85.0376, 18.868, -13.6281, 0.55", "-87.6171, 18.0472, -13.7796, 0.55", "-91.2234, 16.916, -14.0401, 0.55", "-92.2717, 16.5813, -14.1147, 0.83", "-94.4923, 15.8869, -14.2753, 0.55", "-95.6222, 15.5279, -14.3773, 0.83", "-98.803, 14.4771, -14.7467, 0.55", "-100.907, 13.6906, -15.0342, 0.55", "-104.126, 12.4193, -15.5561, 0.55", "-105.506, 11.8199, -15.7791, 0.83", "-108.306, 10.4171, -16.1988, 0.28", "-109.253, 9.90204, -16.3672, 0.55", "-110.58, 9.0416, -16.6583, 0.28", "-111.695, 8.26088, -16.8907, 0.83", "-113.73, 6.80819, -17.2386, 0.28", "-114.744, 6.11726, -17.3569, 0.55", "-115.984, 5.31552, -17.444, 0.28", "-116.922, 4.73691, -17.501, 0.83", "-120.225, 2.76035, -17.6634, 0.28", "-121.496, 2.00323, -17.7002, 0.83", "-124.731, 0.022826, -17.679, 0.28", "-126.729, -1.22224, -17.6667, 0.28", "-127.189, -1.51148, -17.6587, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-35.4513, -27.4073, -22.7725, 0.83", "-39.0147, -27.9086, -24.4024, 0.83", "-43.2663, -28.5743, -26.0943, 0.55", "-48.3985, -29.3982, -27.8714, 0.55", "-50.6496, -29.8161, -28.64, 0.55", "-54.2503, -30.5998, -29.8595, 0.83", "-58.3317, -31.6396, -31.2798, 0.55", "-61.689, -32.9164, -32.6422, 0.55", "-62.6421, -33.365, -33.0129, 0.55", "-64.2161, -34.094, -33.6277, 0.55", "-65.3394, -34.6601, -34.1616, 0.55", "-67.4601, -35.8292, -35.311, 0.83", "-70.0429, -37.1595, -36.6666, 0.28", "-71.9131, -38.2422, -37.8782, 1.94", "-75.0761, -39.9669, -39.9631, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-35.4513, -27.4073, -22.7725, 0.83", "-36.6564, -24.5001, -28.3457, 0.55", "-37.2061, -23.0333, -31.5635, 0.55", "-37.707, -21.6742, -34.8308, 0.55", "-38.2213, -20.4447, -37.9105, 0.55", "-38.8289, -19.4467, -40.3355, 1.11", "-40.1321, -17.3295, -45.5346, 0.28", "-40.3935, -16.9361, -46.6551, 0.55", "-41.0191, -16.1, -49.0421, 0.28", "-41.7909, -15.0701, -52.0773, 0.83", "-43.8738, -12.6852, -59.0227, 0.83", "-44.4979, -11.9608, -61.0527, 0.55", "-45.4418, -10.9009, -64.2693, 1.11", "-45.9404, -10.4197, -65.9702, 0.28", "-46.2729, -10.1041, -67.4071, 0.28", "-47.0048, -9.5295, -70.7931, 1.11", "-47.8962, -8.90956, -75.2807, 0.55", "-48.9237, -8.28676, -79.8957, 0.55", "-49.5454, -7.9432, -82.6741, 0.55", "-50.868, -7.38374, -88.1764, 0.55", "-52.8289, -6.60798, -96.0319, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-43.2829, -55.5835, -16.8818, 0.83", "-42.6459, -57.2678, -17.175, 0.55", "-40.792, -62.3262, -18.2104, 0.55", "-39.5049, -65.9334, -18.8887, 0.55", "-38.6741, -68.3351, -19.4078, 0.55", "-37.6271, -71.2858, -20.0299, 0.55", "-36.7353, -73.871, -20.5435, 0.55", "-36.2603, -75.2709, -20.8216, 0.83", "-35.5985, -77.2826, -21.1857, 0.55", "-34.3504, -80.6002, -21.598, 0.55", "-33.5639, -82.6, -21.7472, 0.55", "-32.5458, -85.0944, -21.854, 0.55", "-31.0477, -88.6245, -21.935, 0.55", "-29.8506, -91.2891, -21.9182, 0.55", "-28.6043, -93.9081, -21.8894, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-43.2829, -55.5835, -16.8818, 0.83", "-43.5122, -55.9011, -16.8942, 0.83", "-45.115, -57.5184, -16.8147, 0.83", "-46.8553, -59.1582, -16.8303, 0.83", "-49.5175, -61.7745, -16.8973, 0.83", "-51.1671, -63.3592, -16.9386, 0.83", "-53.327, -65.5482, -17.0612, 1.11", "-56.3369, -68.8068, -17.4483, 0.55", "-59.8848, -73.0177, -18.2395, 0.55", "-61.4993, -75.117, -18.7205, 0.55", "-62.5091, -76.608, -19.1717, 0.55", "-64.1848, -79.7362, -20.292, 0.55", "-65.4321, -82.9308, -21.6852, 0.55", "-65.8656, -84.8558, -22.6675, 0.28", "-66.0709, -86.2878, -23.4506, 0.83", "-66.3887, -88.5997, -24.7962, 0.28", "-66.691, -90.6518, -25.964, 0.28", "-66.9909, -92.0479, -26.7157, 0.83", "-67.8087, -95.0096, -28.1574, 0.28", "-68.525, -96.8451, -28.9552, 0.55", "-69.4185, -98.7836, -29.712, 0.28", "-70.3632, -100.66, -30.3661, 1.11", "-71.7747, -103.221, -31.2139, 0.83", "-72.7153, -104.901, -31.7079, 0.55", "-74.4127, -107.788, -32.4601, 0.55", "-75.6345, -110.038, -33.0711, 0.55", "-76.4642, -111.548, -33.4685, 0.55", "-77.6667, -113.612, -34.0322, 0.55", "-79.1475, -116.13, -34.7583, 0.55", "-80.4861, -118.486, -35.4531, 0.28", "-81.1507, -119.729, -35.8095, 0.28", "-83.4528, -123.828, -36.9506, 0.28", "-84.1175, -125.028, -37.2878, 1.11", "-86.8455, -130.185, -38.8898, 0.28", "-87.8358, -132.144, -39.5972, 0.28", "-88.6865, -133.896, -40.2931, 0.55", "-89.6439, -135.888, -41.1187, 0.28", "-90.3421, -137.499, -41.878, 1.11", "-91.983, -141.414, -43.9032, 0.28", "-92.3133, -142.154, -44.341, 0.83", "-93.3838, -144.489, -45.8288, 0.28", "-93.497, -144.75, -46.0018, 0.83", "-94.7008, -147.833, -47.9771, 0.28", "-95.0429, -148.666, -48.4779, 0.55", "-95.8013, -150.622, -49.6206, 0.28", "-95.9472, -151.01, -49.8416, 0.55", "-96.5479, -152.847, -50.8786, 0.28", "-96.7435, -153.399, -51.1757, 0.55", "-98.1671, -156.831, -52.6967, 0.28" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "15.8117, -62.7045, -50.7837, 0.55", "16.3385, -64.3746, -51.3677, 0.55", "17.3772, -67.8482, -52.6529, 0.55", "18.3228, -70.335, -53.6585, 0.55", "19.3041, -72.2702, -54.623, 0.55", "20.3058, -74.0229, -55.6074, 0.55", "21.0369, -75.302, -56.3259, 0.55", "22.3666, -77.433, -57.5813, 0.55", "24.0001, -79.7787, -59.075, 0.55", "26.4073, -82.6435, -61.2818, 0.55", "27.87, -84.2365, -62.7023, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "15.8117, -62.7045, -50.7837, 0.55", "16.8631, -63.3959, -51.0233, 0.83", "20.0356, -65.9725, -51.8489, 0.55", "22.0038, -67.7888, -52.4175, 0.55", "25.9933, -71.7921, -53.8129, 0.28", "27.6916, -73.5257, -54.4672, 0.28", "29.3815, -75.2548, -55.0681, 0.28", "30.5825, -76.5838, -55.4822, 0.83", "30.9065, -76.967, -55.5758, 0.83", "32.3838, -79.0343, -56.0792, 0.28", "33.3702, -80.5739, -56.7417, 0.83", "35.9233, -83.9594, -57.9867, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "36.4358, 3.3036, 15.4637, 0.83", "37.9472, 9.65601, 18.7673, 0.83", "40.0062, 16.0346, 21.7041, 0.83", "42.6033, 21.8445, 25.3168, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "36.4358, 3.3036, 15.4637, 0.83", "40.573, 14.45, 17.8779, 0.83", "46.109, 25.0931, 19.6848, 0.83", "50.1761, 36.5202, 19.4297, 0.83", "52.2032, 48.3719, 21.0472, 0.83", "54.1176, 60.188, 23.0223, 0.83", "55.0813, 72.1452, 24.8339, 0.83", "58.0416, 83.3388, 28.4573, 0.83", "61.7052, 93.5115, 33.96, 0.83", "64.0293, 103.528, 40.3986, 0.83", "68.9705, 113.49, 45.2485, 0.83", "74.3177, 123.751, 48.8974, 0.83", "78.1225, 135.186, 50.2905, 0.83", "82.8972, 145.886, 53.4374, 0.83", "87.6196, 156.142, 57.8754, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "0.873046, 94.9613, -17.1588, 1.11", "1.77278, 97.7633, -17.4726, 1.11", "4.10556, 105.028, -18.2864, 1.11" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "0.873046, 94.9613, -17.1588, 1.11", "3.19658, 98.3901, -14.4027, 0.55", "4.38447, 100.367, -12.7068, 0.55", "6.06448, 103.406, -9.84814, 0.55", "8.50224, 107.872, -5.69276, 0.55", "9.79811, 110.296, -3.41071, 0.55", "11.4266, 113.297, -0.380075, 0.55", "11.9288, 114.335, 0.702459, 0.55", "13.764, 118.426, 5.14779, 0.55", "14.6542, 120.617, 7.56393, 0.55", "15.1385, 121.659, 8.90488, 0.55", "16.2122, 123.437, 11.2292, 0.55", "17.6975, 125.524, 13.943, 0.55", "18.6079, 126.721, 15.4099, 0.55", "19.4362, 127.802, 16.7832, 0.55", "20.3696, 129.111, 18.3604, 0.55", "22.3137, 132.145, 21.6882, 0.55", "23.6179, 134.24, 23.933, 0.55", "24.4489, 135.72, 25.529, 0.55", "25.9747, 138.901, 28.8676, 0.55", "27.3963, 142.326, 32.159, 0.55", "28.0293, 144.104, 33.7836, 0.55", "28.7441, 146.894, 36.323, 0.55", "29.2087, 149.063, 38.3829, 0.28", "29.3228, 149.491, 38.8044, 0.55", "29.6371, 150.733, 39.7859, 0.55" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-75.0761, -39.9669, -39.9631, 0.55", "-71.789, -42.2358, -36.6302, 0.55", "-68.5809, -44.3491, -32.744, 0.55", "-68.6133, -45.0068, -34.8605, 0.55", "-68.2997, -45.7273, -36.4284, 0.55", "-68.0259, -46.9973, -38.9559, 0.55", "-67.9183, -50.1083, -44.6195, 0.55", "-67.9903, -51.4585, -46.9868, 0.83", "-68.2677, -53.108, -49.7431, 0.83", "-68.749, -54.6246, -52.2568, 0.55", "-69.7909, -56.8708, -55.732, 0.55", "-71.0061, -59.0801, -59.1252, 0.55", "-71.6606, -60.1743, -60.7918, 0.55", "-73.1316, -62.1139, -64.0579, 0.28", "-75.1407, -64.2838, -68.1952, 0.28", "-75.9555, -65.1798, -70.1824, 0.83", "-77.8335, -67.103, -75.0723, 0.28", "-78.5399, -67.7373, -76.9431, 0.83", "-81.0048, -69.675, -83.6135, 0.55", "-82.174, -70.5235, -87.0887, 0.55", "-83.9588, -72.0023, -94.0515, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-75.0761, -39.9669, -39.9631, 0.55", "-76.5369, -40.4047, -41.2407, 0.55", "-80.3182, -41.6706, -44.4788, 0.55", "-85.522, -43.613, -48.8504, 1.11", "-86.84, -44.1452, -49.9091, 0.55", "-89.6221, -45.3679, -52.0327, 0.55", "-92.3208, -46.5564, -53.9888, 0.55", "-93.7337, -47.1475, -54.9288, 0.55", "-94.5069, -47.4918, -55.397, 0.55", "-96.4694, -48.3613, -56.4516, 0.55", "-100.017, -49.7913, -58.3945, 0.28", "-101.127, -50.2337, -59.0184, 0.55", "-105.312, -51.5318, -61.2845, 0.28", "-106.408, -51.8218, -61.8706, 0.55", "-109.01, -52.4299, -63.2849, 0.55", "-110.59, -52.7548, -64.1562, 0.83", "-113.497, -53.2479, -65.7114, 0.28", "-116.263, -53.7627, -67.1669, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "35.9233, -83.9594, -57.9867, 0.55", "35.8217, -87.9593, -63.2235, 0.55", "35.8056, -88.5937, -64.0541, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "35.9233, -83.9594, -57.9867, 0.55", "37.9131, -86.4926, -55.4306, 0.28", "38.5289, -87.2765, -54.6397, 0.28", "39.0893, -87.99, -53.9198, 0.83", "41.4016, -90.9337, -50.9496, 0.55", "41.9672, -91.6537, -50.2231, 0.55", "42.7618, -92.6653, -49.2024, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "42.6033, 21.8445, 25.3168, 0.83", "45.1257, 29.0436, 28.6978, 0.83", "47.2702, 35.7595, 33.1605, 0.83", "49.4536, 42.346, 37.7942, 0.83", "52.4754, 47.7211, 43.4152, 0.83", "55.7305, 52.1483, 49.6941, 0.83", "57.4807, 56.3933, 56.6609, 0.83", "60.2365, 60.7849, 63.1983, 0.83", "63.3158, 64.0811, 70.2179, 0.83", "66.9, 67.5165, 76.9238, 0.83", "71.0884, 71.4684, 82.962, 0.83", "74.72, 75.11, 89.5324, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "42.6033, 21.8445, 25.3168, 0.83", "45.3313, 29.9175, 29.2718, 0.83", "49.2187, 37.7326, 32.7458, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "4.10556, 105.028, -18.2864, 1.11", "4.82312, 113.266, -18.2439, 1.11", "4.91319, 118.477, -18.4432, 0.83", "4.85003, 120.909, -18.4579, 0.83", "4.76921, 126.061, -18.4709, 0.83", "4.7969, 129.415, -18.6044, 0.83", "4.84311, 133.609, -18.8136, 0.83", "4.86276, 136.399, -19.0678, 0.83", "4.69528, 146.101, -19.9977, 0.83", "4.58321, 148.597, -20.1601, 0.83", "4.21653, 152.79, -20.136, 0.83", "4.06695, 155.235, -20.1497, 0.83", "3.99867, 157.347, -20.0947, 0.83", "3.77991, 162.564, -20.0364, 0.83", "3.5431, 166.76, -20.0502, 0.83", "2.94543, 175.793, -19.9999, 0.83", "2.66559, 182.089, -19.9298, 1.11", "2.47985, 189.784, -19.8841, 1.11", "2.49807, 195.225, -19.859, 1.11", "2.56814, 199.454, -19.783, 1.11", "2.71233, 203.358, -19.6832, 1.11", "3.11593, 208.404, -19.4831, 1.11", "3.54985, 212.335, -19.2432, 1.11", "4.17793, 216.856, -18.9925, 1.11", "4.83463, 220.534, -18.7313, 1.11", "5.55587, 224.355, -18.4605, 1.11", "6.47372, 229.175, -18.1468, 1.11", "7.26763, 233.999, -17.9582, 1.11", "8.37309, 241.633, -17.8102, 0.83", "8.64194, 244.917, -17.73, 0.83", "8.69173, 246.474, -17.6837, 0.83", "8.60924, 249.695, -17.533, 0.83", "8.08126, 254.538, -17.2745, 0.83", "7.28399, 258.492, -16.9365, 0.83", "6.48984, 261.705, -16.6704, 0.83", "5.65563, 265.09, -16.3563, 0.83", "5.00457, 268.142, -16.1361, 0.83", "3.96697, 272.968, -15.7226, 0.83", "3.18824, 276.322, -15.4633, 0.83", "2.60899, 279.156, -15.374, 0.83", "2.0481, 281.754, -15.3562, 0.83", "1.42018, 285.047, -15.4841, 0.83", "0.831218, 289.236, -15.7769, 0.83", "0.428974, 292.572, -16.0726, 0.83", "0.115649, 296.749, -16.5587, 0.83", "-0.0765928, 302.296, -17.1347, 0.83", "-0.211343, 311.528, -17.8659, 0.83", "-0.0251648, 319.845, -18.5203, 0.83", "0.272025, 324.677, -18.9271, 0.83", "0.791905, 331.523, -19.3709, 0.83", "1.71058, 341.666, -19.8518, 0.83", "2.12574, 345.232, -19.9203, 0.83", "2.56673, 349.185, -19.8996, 0.83", "2.98153, 352.682, -19.8519, 0.83", "3.51279, 357.001, -19.7699, 0.83", "4.13383, 362.887, -19.6785, 0.83", "4.54639, 366.288, -19.7006, 0.83", "5.00744, 371.406, -19.9386, 0.83", "5.12951, 373.254, -20.0522, 0.83", "5.35807, 378.469, -20.4386, 0.83", "5.42195, 382.205, -20.7374, 0.83", "5.35294, 384.52, -20.9207, 0.83", "4.99883, 390.8, -21.5668, 0.83", "4.59049, 396.265, -22.1365, 0.83", "3.91595, 404.616, -23.2976, 0.83", "3.74556, 406.798, -23.634, 0.83", "3.42741, 412.944, -24.5774, 0.83", "3.39533, 417.286, -25.2283, 0.83", "3.50905, 422.859, -25.9953, 0.83", "3.47709, 427.072, -26.7232, 0.83", "3.50036, 430.289, -27.2455, 0.83", "3.49709, 433.184, -27.5071, 0.83", "3.45287, 434.277, -27.4691, 0.83", "3.18146, 437.61, -27.0741, 0.83", "2.74436, 441.138, -26.5148, 0.83", "2.24798, 447.458, -25.6209, 0.83", "2.07395, 450.099, -25.4839, 0.83", "2.01139, 453.433, -25.5129, 0.83", "2.16125, 457.257, -25.7006, 0.83", "2.4146, 459.695, -25.9557, 0.83", "3.3778, 466.976, -27.0304, 0.83", "4.26509, 473.333, -28.2351, 0.83", "4.69075, 476.384, -28.7473, 0.83", "5.01106, 479.12, -29.1134, 0.83", "5.29559, 483.337, -29.4586, 0.83", "5.40699, 488.411, -29.688, 0.83", "5.40735, 491.132, -29.6597, 0.83", "5.43815, 501.065, -29.2377, 0.83", "5.39596, 503.564, -29.0416, 0.83", "5.26799, 507.004, -28.5959, 0.83", "5.20885, 508.426, -28.3534, 0.83", "5.00995, 513.746, -27.2873, 0.83", "4.85038, 517.519, -26.3561, 0.83", "4.68657, 520.884, -25.3439, 0.83", "4.25182, 528.55, -23.3057, 0.83", "3.79842, 533.66, -22.0396, 0.83", "3.35077, 537.233, -21.3089, 0.83", "2.81473, 540.207, -20.7492, 0.83", "2.40423, 542.573, -20.3588, 0.83", "1.34906, 548.429, -19.4979, 0.83", "0.28943, 554.975, -18.6627, 0.83", "-1.4337, 564.522, -17.4558, 0.83", "-2.19498, 568.47, -17.0388, 0.83", "-3.40459, 574.605, -16.4493, 0.83", "-5.817, 584.6, -15.4999, 0.83", "-7.41483, 590.571, -14.9973, 0.83", "-8.63664, 594.775, -14.8481, 0.83", "-10.6496, 600.87, -14.8582, 0.83", "-11.5124, 603.24, -14.9593, 0.83", "-14.1336, 609.371, -15.5173, 0.55", "-15.9813, 613.593, -16.1505, 0.55", "-16.8351, 615.625, -16.4063, 0.55", "-18.5975, 620.727, -17.1083, 0.55", "-19.6487, 624.017, -17.5475, 0.55", "-20.866, 627.862, -17.9869, 0.55", "-22.4173, 633.34, -18.4967, 0.55", "-24.7597, 640.489, -18.9694, 0.55", "-26.7647, 646.232, -19.2961, 0.55", "-27.6695, 648.734, -19.4023, 0.55", "-29.6435, 654.223, -19.5109, 0.55", "-30.6796, 656.823, -19.4195, 0.55", "-32.6682, 661.868, -18.8658, 0.55", "-34.4962, 666.407, -18.1499, 0.55", "-35.6307, 669.422, -17.5735, 0.55", "-36.4815, 671.888, -17.0832, 0.55", "-37.1594, 673.93, -16.6894, 0.55", "-39.9934, 683.521, -15.1592, 0.55", "-40.9611, 687.24, -14.6967, 0.55", "-42.6655, 693.774, -14.145, 0.55", "-43.7117, 698.09, -14.0524, 0.55", "-44.269, 700.408, -14.0516, 0.55", "-46.8122, 711.301, -14.3482, 0.55", "-47.6396, 714.704, -14.5724, 0.55", "-48.7921, 720.064, -14.9846, 0.55", "-50.0183, 725.446, -15.6683, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 31
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "4.10556, 105.028, -18.2864, 1.11", "7.99129, 104.132, -20.7047, 0.83", "13.5586, 102.244, -24.4182, 0.55", "17.4005, 100.756, -27.1027, 0.55", "24.1809, 97.8888, -31.9568, 0.55", "27.3574, 96.4344, -34.2668, 0.55", "29.3869, 95.4322, -35.7486, 0.55", "33.6385, 92.8749, -39.2917, 0.55", "36.0492, 91.1348, -41.3521, 0.55", "38.7608, 89.1822, -43.6157, 0.55", "40.4695, 87.9277, -45.0061, 0.55", "46.4773, 83.8328, -49.4446, 0.55", "49.8798, 81.7449, -51.8764, 0.55", "56.2094, 78.3994, -56.208, 0.55", "59.0702, 77.0805, -58.0647, 0.55", "61.0504, 76.2489, -59.3459, 0.55", "62.7166, 75.6292, -60.4098, 0.55", "65.6255, 74.7899, -62.2721, 0.55", "69.943, 73.828, -65.1318, 0.55", "72.3273, 73.4136, -66.9485, 0.55", "76.0539, 72.6369, -70.2521, 0.55", "77.881, 72.2959, -71.945, 0.55", "80.871, 71.7976, -74.8953, 0.55", "83.5537, 71.4653, -77.647, 0.55", "85.3018, 71.3143, -79.5975, 0.55", "88.8908, 71.2481, -83.6376, 0.55", "91.0635, 71.4175, -86.0156, 0.55", "94.4002, 71.738, -89.7541, 0.55", "96.447, 71.9083, -92.0503, 0.55", "98.5445, 72.2056, -94.3887, 0.55", "100.398, 72.6383, -96.4688, 0.28" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "29.6371, 150.733, 39.7859, 0.55", "28.9021, 151.845, 41.9233, 0.55", "28.2604, 152.816, 43.7893, 0.55", "27.8526, 153.434, 44.9751, 0.28", "27.5218, 153.934, 45.9373, 0.28", "26.2447, 155.868, 49.6513, 0.28", "25.6673, 156.742, 51.3302, 0.28", "23.1368, 162.205, 60.9164, 0.28", "20.3194, 166.412, 71.0411, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "29.6371, 150.733, 39.7859, 0.55", "30.8267, 153.328, 38.9693, 0.28" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_2", "apic_1", "axon_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_31", "dend_28", "dend_11", "dend_0", "apic_2", "apic_1", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "apic_4", "apic_3", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "apic_8", "apic_5", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "apic_10", "apic_9", "apic_7", "apic_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "apic_14", "apic_11", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25", "apic_16", "apic_15", "apic_13", "apic_12" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_31", "dend_28", "dend_11", "dend_0", "dend_33", "dend_32", "dend_30", "dend_29", "dend_19", "dend_12", "dend_4", "dend_1", "dend_41", "dend_34", "dend_27", "dend_20", "dend_16", "dend_13", "dend_8", "dend_5", "dend_3", "dend_2", "dend_45", "dend_42", "dend_36", "dend_35", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_37", "dend_24", "dend_23", "dend_49", "dend_48", "dend_39", "dend_38", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SP_1c98df1fde_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_69
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999998123122724)
    connect dend_31(0), soma_0(0.49999998123122724)
    connect dend_28(0), soma_0(0.49999998123122724)
    connect dend_11(0), soma_0(0.49999998123122724)
    connect dend_0(0), soma_0(0.49999998123122724)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.7762, -6.65843, 1.68973, 1.62225 ) }
    soma_0 { pt3dadd( -3.37091, -6.05756, 1.49202, 2.68302 ) }
    soma_0 { pt3dadd( -2.96562, -5.45669, 1.29431, 4.18183 ) }
    soma_0 { pt3dadd( -2.56033, -4.85582, 1.09659, 5.23637 ) }
    soma_0 { pt3dadd( -2.15504, -4.25495, 0.898882, 5.96111 ) }
    soma_0 { pt3dadd( -1.74975, -3.65409, 0.701169, 6.6575 ) }
    soma_0 { pt3dadd( -1.34446, -3.05322, 0.503456, 7.22539 ) }
    soma_0 { pt3dadd( -0.939173, -2.45235, 0.305744, 7.74314 ) }
    soma_0 { pt3dadd( -0.533883, -1.85148, 0.108031, 8.02668 ) }
    soma_0 { pt3dadd( -0.128593, -1.25061, -0.0896814, 7.99979 ) }
    soma_0 { pt3dadd( 0.276697, -0.649743, -0.287394, 7.71194 ) }
    soma_0 { pt3dadd( 0.681986, -0.0488738, -0.485107, 7.51065 ) }
    soma_0 { pt3dadd( 1.08728, 0.551995, -0.682819, 7.35885 ) }
    soma_0 { pt3dadd( 1.49257, 1.15286, -0.880532, 7.1093 ) }
    soma_0 { pt3dadd( 1.89786, 1.75373, -1.07824, 6.85975 ) }
    soma_0 { pt3dadd( 2.30315, 2.3546, -1.27596, 6.61021 ) }
    soma_0 { pt3dadd( 2.70844, 2.95547, -1.47367, 6.35799 ) }
    soma_0 { pt3dadd( 3.11373, 3.55634, -1.67138, 5.44931 ) }
    soma_0 { pt3dadd( 3.51902, 4.15721, -1.86909, 4.29173 ) }
    soma_0 { pt3dadd( 3.92431, 4.75808, -2.06681, 2.41932 ) }
    soma_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 1.40798 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -0.790603, 5.91784, -1.87579, 2.22 ) }
    apic_0 { pt3dadd( -0.960969, 7.00116, -2.21878, 2.22 ) }
    apic_0 { pt3dadd( -0.990909, 10.3087, -2.02889, 1.66 ) }
    apic_0 { pt3dadd( -1.05145, 16.9982, -1.64483, 1.66 ) }
    apic_0 { pt3dadd( -1.08201, 20.3741, -1.45101, 1.39 ) }
    apic_0 { pt3dadd( -1.10945, 23.4064, -1.27692, 1.39 ) }
    apic_0 { pt3dadd( -1.13266, 25.9711, -1.12967, 1.94 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.42677, -4.17199, -2.46667, 1.94 ) }
    dend_31 { pt3dadd( -4.38256, -5.34376, -3.11764, 1.94 ) }
    dend_31 { pt3dadd( -5.49075, -8.60973, -3.71374, 1.11 ) }
    dend_31 { pt3dadd( -6.47374, -11.5067, -4.2425, 1.11 ) }
    dend_31 { pt3dadd( -7.10987, -13.3815, -4.58468, 1.11 ) }
    dend_31 { pt3dadd( -8.13867, -16.4134, -5.13807, 1.94 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -5.13212, -1.65457, -2.57467, 0.83 ) }
    dend_28 { pt3dadd( -10.3927, -3.48272, -5.10108, 0.83 ) }
    dend_28 { pt3dadd( -11.6907, -4.53669, -4.78468, 0.83 ) }
    dend_28 { pt3dadd( -15.4857, -7.55172, -4.09095, 1.11 ) }
    dend_28 { pt3dadd( -19.0256, -10.195, -3.32853, 0.55 ) }
    dend_28 { pt3dadd( -20.5697, -11.317, -2.99695, 0.55 ) }
    dend_28 { pt3dadd( -23.0319, -12.9953, -2.54362, 0.55 ) }
    dend_28 { pt3dadd( -25.4915, -14.3262, -2.37399, 0.55 ) }
    dend_28 { pt3dadd( -26.6555, -14.9426, -2.356, 0.55 ) }
    dend_28 { pt3dadd( -30.0022, -16.5868, -2.38837, 0.55 ) }
    dend_28 { pt3dadd( -32.6503, -17.9206, -2.24774, 0.55 ) }
    dend_28 { pt3dadd( -35.3462, -19.1554, -2.01404, 0.83 ) }
    dend_28 { pt3dadd( -38.2157, -20.3943, -1.64992, 0.55 ) }
    dend_28 { pt3dadd( -39.4235, -20.9346, -1.50132, 0.83 ) }
    dend_28 { pt3dadd( -42.3975, -22.3438, -1.3257, 0.55 ) }
    dend_28 { pt3dadd( -46.3025, -24.3236, -1.42655, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.00657, -1.7762, 3.02105, 1.39 ) }
    dend_11 { pt3dadd( 8.92212, -3.33235, 5.48295, 1.39 ) }
    dend_11 { pt3dadd( 9.75585, -3.71084, 3.98978, 1.39 ) }
    dend_11 { pt3dadd( 10.5483, -4.07059, 2.57053, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 54/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.10871, 3.75617, -3.97262, 1.39 ) }
    dend_0 { pt3dadd( 3.94265, 4.75511, -5.06329, 1.39 ) }
    dend_0 { pt3dadd( 6.47034, 5.01038, -8.26492, 1.39 ) }
    dend_0 { pt3dadd( 8.88152, 5.25388, -11.3189, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 58/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.3296, 5.35894, -2.26452, 0.67 ) }
    axon_0 { pt3dadd( 12.7175, 17.7945, -2.26452, 0.67 ) }
    axon_0 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 61/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -1.13266, 25.9711, -1.12967, 1.94 ) }
    apic_2 { pt3dadd( -2.57371, 29.5308, -2.16018, 1.11 ) }
    apic_2 { pt3dadd( -3.48704, 31.7869, -2.8133, 1.11 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -1.13266, 25.9711, -1.12967, 1.94 ) }
    apic_1 { pt3dadd( -4.27304, 26.9009, -1.56962, 1.11 ) }
    apic_1 { pt3dadd( -6.95415, 27.5725, -1.90393, 0.83 ) }
    apic_1 { pt3dadd( -8.38879, 27.8816, -2.05163, 0.83 ) }
    apic_1 { pt3dadd( -10.7729, 28.3953, -2.2329, 0.83 ) }
    apic_1 { pt3dadd( -12.7358, 28.7734, -2.40537, 0.83 ) }
    apic_1 { pt3dadd( -13.885, 28.9506, -2.51134, 0.83 ) }
    apic_1 { pt3dadd( -16.0881, 29.1601, -2.53632, 0.83 ) }
    apic_1 { pt3dadd( -17.6974, 29.1928, -2.53429, 0.83 ) }
    apic_1 { pt3dadd( -19.6228, 29.1201, -2.50649, 0.83 ) }
    apic_1 { pt3dadd( -21.7612, 28.9448, -2.42724, 0.83 ) }
    apic_1 { pt3dadd( -23.4519, 28.8414, -2.31162, 0.83 ) }
    apic_1 { pt3dadd( -25.6439, 28.7681, -2.11321, 0.83 ) }
    apic_1 { pt3dadd( -27.2196, 28.8248, -1.95154, 0.55 ) }
    apic_1 { pt3dadd( -29.4526, 28.9961, -1.72137, 0.55 ) }
    apic_1 { pt3dadd( -32.1425, 29.3998, -1.41882, 0.55 ) }
    apic_1 { pt3dadd( -33.5738, 29.7199, -1.21151, 0.55 ) }
    apic_1 { pt3dadd( -35.107, 30.1632, -0.995995, 0.55 ) }
    apic_1 { pt3dadd( -37.7906, 30.9275, -0.667606, 0.55 ) }
    apic_1 { pt3dadd( -38.2794, 31.0685, -0.60255, 0.83 ) }
    apic_1 { pt3dadd( -41.1585, 31.8419, -0.199594, 0.55 ) }
    apic_1 { pt3dadd( -43.4833, 32.37, 0.136343, 0.55 ) }
    apic_1 { pt3dadd( -44.3964, 32.5681, 0.292951, 0.55 ) }
    apic_1 { pt3dadd( -47.9016, 33.3629, 0.904459, 0.55 ) }
    apic_1 { pt3dadd( -49.3498, 33.6563, 1.22604, 0.55 ) }
    apic_1 { pt3dadd( -50.5943, 33.9383, 1.56083, 0.55 ) }
    apic_1 { pt3dadd( -51.6759, 34.2104, 1.8705, 0.55 ) }
    apic_1 { pt3dadd( -53.7186, 34.8569, 2.47085, 0.55 ) }
    apic_1 { pt3dadd( -55.3037, 35.4181, 2.96382, 0.55 ) }
    apic_1 { pt3dadd( -57.4806, 36.3541, 3.88749, 0.55 ) }
    apic_1 { pt3dadd( -59.1575, 37.0495, 4.74583, 0.55 ) }
    apic_1 { pt3dadd( -60.3095, 37.5013, 5.50027, 1.11 ) }
    apic_1 { pt3dadd( -61.3099, 37.8946, 6.20178, 0.55 ) }
    apic_1 { pt3dadd( -62.3051, 38.2268, 6.94006, 0.83 ) }
    apic_1 { pt3dadd( -64.4097, 38.9545, 8.75409, 0.28 ) }
    apic_1 { pt3dadd( -65.3539, 39.2963, 9.57507, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_1 { pt3dadd( -66.8206, 39.6616, 11.0932, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -8.13867, -16.4134, -5.13807, 1.94 ) }
    dend_33 { pt3dadd( -8.66892, -17.1348, -6.50717, 1.39 ) }
    dend_33 { pt3dadd( -8.96075, -17.5318, -7.26064, 1.39 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 4/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -8.13867, -16.4134, -5.13807, 1.94 ) }
    dend_32 { pt3dadd( -10.3186, -20.0931, -4.88336, 0.55 ) }
    dend_32 { pt3dadd( -11.4635, -22.0817, -4.87569, 0.83 ) }
    dend_32 { pt3dadd( -13.294, -25.0889, -5.06111, 0.55 ) }
    dend_32 { pt3dadd( -14.5168, -27.2494, -5.16645, 0.55 ) }
    dend_32 { pt3dadd( -16.6223, -31.3265, -5.28821, 0.55 ) }
    dend_32 { pt3dadd( -18.1102, -34.1838, -5.26118, 0.55 ) }
    dend_32 { pt3dadd( -19.592, -37.0607, -5.17642, 0.55 ) }
    dend_32 { pt3dadd( -21.1032, -39.7053, -5.00253, 0.55 ) }
    dend_32 { pt3dadd( -23.1264, -43.2819, -4.73622, 0.55 ) }
    dend_32 { pt3dadd( -24.3248, -45.3702, -4.57884, 0.55 ) }
    dend_32 { pt3dadd( -25.9804, -48.2283, -4.22995, 0.55 ) }
    dend_32 { pt3dadd( -27.2417, -50.2247, -3.74678, 0.55 ) }
    dend_32 { pt3dadd( -29.8405, -53.8971, -2.58574, 0.55 ) }
    dend_32 { pt3dadd( -31.6568, -56.2419, -1.78381, 0.55 ) }
    dend_32 { pt3dadd( -32.3634, -57.0524, -1.5, 0.55 ) }
    dend_32 { pt3dadd( -34.7765, -59.7344, -0.402716, 0.83 ) }
    dend_32 { pt3dadd( -36.6773, -61.8657, 0.67396, 0.55 ) }
    dend_32 { pt3dadd( -38.3375, -63.8274, 1.84684, 1.11 ) }
    dend_32 { pt3dadd( -41.0504, -67.2018, 4.18954, 0.55 ) }
    dend_32 { pt3dadd( -42.5764, -69.1609, 5.58616, 0.55 ) }
    dend_32 { pt3dadd( -44.1686, -71.431, 7.16277, 0.83 ) }
    dend_32 { pt3dadd( -46.2264, -74.844, 9.36254, 0.55 ) }
    dend_32 { pt3dadd( -47.6766, -77.6009, 11.0981, 0.55 ) }
    dend_32 { pt3dadd( -48.6014, -79.7405, 12.358, 0.55 ) }
    dend_32 { pt3dadd( -49.1742, -81.3481, 13.1633, 0.55 ) }
    dend_32 { pt3dadd( -49.894, -83.5457, 14.0563, 0.55 ) }
    dend_32 { pt3dadd( -50.793, -86.3711, 15.0071, 0.55 ) }
    dend_32 { pt3dadd( -51.2085, -87.6509, 15.368, 0.55 ) }
    dend_32 { pt3dadd( -52.5229, -91.2263, 16.3187, 0.55 ) }
    dend_32 { pt3dadd( -53.7972, -94.566, 17.1751, 0.55 ) }
    dend_32 { pt3dadd( -54.8451, -97.1296, 17.8503, 0.55 ) }
    dend_32 { pt3dadd( -55.7778, -99.2826, 18.4085, 0.28 ) }
    dend_32 { pt3dadd( -56.2569, -100.379, 18.7065, 0.55 ) }
    dend_32 { pt3dadd( -57.3459, -102.942, 19.3853, 0.28 ) }
    dend_32 { pt3dadd( -58.1952, -104.927, 19.9566, 0.83 ) }
    dend_32 { pt3dadd( -58.9625, -106.959, 20.409, 0.55 ) }
    dend_32 { pt3dadd( -59.8339, -109.425, 20.814, 0.28 ) }
    dend_32 { pt3dadd( -60.1454, -110.343, 20.9079, 0.55 ) }
    dend_32 { pt3dadd( -60.7343, -112.133, 21.0096, 0.28 ) }
    dend_32 { pt3dadd( -61.013, -113.078, 20.9823, 0.55 ) }
    dend_32 { pt3dadd( -61.7066, -115.778, 20.6849, 0.28 ) }
    dend_32 { pt3dadd( -62.0116, -117.112, 20.4634, 0.55 ) }
    dend_32 { pt3dadd( -62.3676, -118.821, 20.0989, 0.28 ) }
    dend_32 { pt3dadd( -62.5538, -119.74, 19.895, 0.55 ) }
    dend_32 { pt3dadd( -62.7959, -121.059, 19.5683, 0.28 ) }
    dend_32 { pt3dadd( -63.196, -123.232, 19.0587, 0.28 ) }
    dend_32 { pt3dadd( -63.4563, -124.712, 18.7282, 0.55 ) }
    dend_32 { pt3dadd( -63.9022, -127.317, 18.3812, 0.28 ) }
    dend_32 { pt3dadd( -64.1172, -128.529, 18.3039, 0.28 ) }
    dend_32 { pt3dadd( -64.3454, -129.754, 18.3434, 0.83 ) }
    dend_32 { pt3dadd( -65.0075, -133.132, 18.7055, 0.28 ) }
    dend_32 { pt3dadd( -65.4173, -135.313, 19.0989, 0.83 ) }
    dend_32 { pt3dadd( -66.3976, -140.512, 20.4248, 0.28 ) }
    dend_32 { pt3dadd( -66.5234, -141.174, 20.6336, 0.55 ) }
    dend_32 { pt3dadd( -67.1189, -144.373, 21.7744, 0.28 ) }
    dend_32 { pt3dadd( -67.1913, -144.777, 21.9428, 0.55 ) }
    dend_32 { pt3dadd( -67.4841, -146.569, 22.9035, 0.28 ) }
    dend_32 { pt3dadd( -67.5843, -147.121, 23.2837, 0.55 ) }
    dend_32 { pt3dadd( -70.6339, -157.413, 26.2899, 0.55 ) }
    dend_32 { pt3dadd( -73.8119, -166.802, 31.3902, 0.55 ) }
    dend_32 { pt3dadd( -74.9073, -176.528, 36.7253, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -46.3025, -24.3236, -1.42655, 0.83 ) }
    dend_30 { pt3dadd( -47.583, -25.4466, -2.9752, 0.55 ) }
    dend_30 { pt3dadd( -48.3514, -25.9606, -3.99069, 0.55 ) }
    dend_30 { pt3dadd( -50.6902, -27.6515, -6.78637, 0.55 ) }
    dend_30 { pt3dadd( -52.7531, -29.3555, -9.20305, 0.55 ) }
    dend_30 { pt3dadd( -54.2299, -30.7876, -11.0671, 0.55 ) }
    dend_30 { pt3dadd( -56.6498, -33.52, -14.7683, 0.55 ) }
    dend_30 { pt3dadd( -57.8515, -34.8602, -16.8605, 0.55 ) }
    dend_30 { pt3dadd( -59.4586, -36.8595, -20.2003, 0.55 ) }
    dend_30 { pt3dadd( -60.0361, -37.696, -21.8432, 0.55 ) }
    dend_30 { pt3dadd( -60.5765, -38.7778, -24.4613, 0.55 ) }
    dend_30 { pt3dadd( -60.9227, -40.2595, -28.1418, 0.83 ) }
    dend_30 { pt3dadd( -61.3345, -42.3313, -33.0778, 0.55 ) }
    dend_30 { pt3dadd( -61.3984, -42.6744, -34.0624, 0.55 ) }
    dend_30 { pt3dadd( -61.7325, -43.6645, -38.0306, 0.28 ) }
    dend_30 { pt3dadd( -62.1097, -44.2848, -40.8253, 0.83 ) }
    dend_30 { pt3dadd( -62.4358, -44.6987, -42.8988, 0.83 ) }
    dend_30 { pt3dadd( -63.3235, -45.5789, -47.8147, 0.28 ) }
    dend_30 { pt3dadd( -63.6056, -45.8824, -49.5489, 0.28 ) }
    dend_30 { pt3dadd( -64.7649, -47.0023, -56.4614, 1.66 ) }
    dend_30 { pt3dadd( -65.505, -47.7576, -60.7696, 0.28 ) }
    dend_30 { pt3dadd( -65.7795, -48.0581, -62.3758, 0.28 ) }
    dend_30 { pt3dadd( -66.2876, -48.4276, -64.8977, 1.11 ) }
    dend_30 { pt3dadd( -66.918, -48.9347, -67.8388, 0.55 ) }
    dend_30 { pt3dadd( -67.641, -49.6099, -70.3285, 0.28 ) }
    dend_30 { pt3dadd( -68.0812, -49.9875, -71.4722, 0.55 ) }
    dend_30 { pt3dadd( -69.5937, -51.0362, -74.9852, 0.55 ) }
    dend_30 { pt3dadd( -72.5687, -52.9338, -81.6306, 0.55 ) }
    dend_30 { pt3dadd( -74.892, -54.1595, -86.3806, 0.28 ) }
    dend_30 { pt3dadd( -75.9479, -54.6453, -88.4317, 0.83 ) }
    dend_30 { pt3dadd( -79.4942, -56.2219, -95.0322, 0.83 ) }
    dend_30 { pt3dadd( -81.4327, -56.9481, -98.6079, 0.28 ) }
    dend_30 { pt3dadd( -81.7492, -57.0365, -99.1913, 0.83 ) }
    dend_30 { pt3dadd( -85.3452, -57.8427, -105.686, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -86.0421, -57.8601, -106.911, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -46.3025, -24.3236, -1.42655, 0.83 ) }
    dend_29 { pt3dadd( -48.4864, -24.6633, -1.27772, 0.55 ) }
    dend_29 { pt3dadd( -49.9728, -24.953, -1.15319, 0.55 ) }
    dend_29 { pt3dadd( -53.1302, -25.4679, -0.85437, 0.55 ) }
    dend_29 { pt3dadd( -56.6313, -26.2893, -0.418295, 0.55 ) }
    dend_29 { pt3dadd( -59.0776, -26.988, -0.109777, 0.55 ) }
    dend_29 { pt3dadd( -61.7725, -27.8722, 0.259727, 0.55 ) }
    dend_29 { pt3dadd( -62.8765, -28.3111, 0.374248, 0.55 ) }
    dend_29 { pt3dadd( -64.9747, -29.3278, 0.569819, 0.55 ) }
    dend_29 { pt3dadd( -68.4922, -31.3972, 0.753535, 0.55 ) }
    dend_29 { pt3dadd( -70.838, -33.0864, 0.868936, 0.83 ) }
    dend_29 { pt3dadd( -72.2275, -34.1144, 0.887667, 0.55 ) }
    dend_29 { pt3dadd( -74.6163, -35.7846, 0.772763, 0.55 ) }
    dend_29 { pt3dadd( -75.3494, -36.2728, 0.716674, 0.55 ) }
    dend_29 { pt3dadd( -76.9442, -37.3306, 0.597309, 0.55 ) }
    dend_29 { pt3dadd( -79.0237, -38.571, 0.340195, 1.11 ) }
    dend_29 { pt3dadd( -82.1303, -40.3564, -0.0307464, 0.55 ) }
    dend_29 { pt3dadd( -83.4721, -41.0367, -0.22258, 0.55 ) }
    dend_29 { pt3dadd( -84.7127, -41.55, -0.376931, 0.83 ) }
    dend_29 { pt3dadd( -85.9954, -42.0447, -0.577111, 0.55 ) }
    dend_29 { pt3dadd( -88.6006, -43.1498, -1.12356, 0.55 ) }
    dend_29 { pt3dadd( -89.1699, -43.396, -1.26027, 0.55 ) }
    dend_29 { pt3dadd( -91.5784, -44.265, -1.72778, 1.39 ) }
    dend_29 { pt3dadd( -93.6555, -45.0365, -2.07959, 0.83 ) }
    dend_29 { pt3dadd( -95.6819, -45.7453, -2.33457, 0.55 ) }
    dend_29 { pt3dadd( -96.8229, -46.0384, -2.40819, 0.55 ) }
    dend_29 { pt3dadd( -98.459, -46.3767, -2.3786, 0.55 ) }
    dend_29 { pt3dadd( -101.849, -46.9886, -2.26889, 0.55 ) }
    dend_29 { pt3dadd( -103.558, -47.2533, -2.19066, 0.55 ) }
    dend_29 { pt3dadd( -104.672, -47.4283, -2.19703, 0.55 ) }
    dend_29 { pt3dadd( -107.291, -47.8407, -2.40195, 0.83 ) }
    dend_29 { pt3dadd( -108.913, -48.1106, -2.63906, 0.83 ) }
    dend_29 { pt3dadd( -111.693, -48.7288, -3.29779, 0.55 ) }
    dend_29 { pt3dadd( -113.295, -49.1957, -3.81672, 0.83 ) }
    dend_29 { pt3dadd( -115.091, -49.808, -4.48049, 0.28 ) }
    dend_29 { pt3dadd( -116.692, -50.5204, -5.14538, 0.55 ) }
    dend_29 { pt3dadd( -117.245, -50.8881, -5.37718, 0.28 ) }
    dend_29 { pt3dadd( -118.088, -51.5376, -5.76121, 0.83 ) }
    dend_29 { pt3dadd( -118.974, -52.393, -6.16415, 0.55 ) }
    dend_29 { pt3dadd( -120.306, -53.8023, -6.67215, 0.28 ) }
    dend_29 { pt3dadd( -121.429, -55.0795, -7.00922, 0.55 ) }
    dend_29 { pt3dadd( -123.016, -56.8773, -7.43095, 0.28 ) }
    dend_29 { pt3dadd( -125.049, -59.01, -7.94736, 0.83 ) }
    dend_29 { pt3dadd( -126.417, -60.2755, -8.33071, 0.83 ) }
    dend_29 { pt3dadd( -128.896, -62.5805, -9.06769, 0.28 ) }
    dend_29 { pt3dadd( -130.874, -64.3327, -9.65633, 0.55 ) }
    dend_29 { pt3dadd( -132.46, -65.7355, -10.1333, 0.28 ) }
    dend_29 { pt3dadd( -133.636, -66.6787, -10.4826, 0.83 ) }
    dend_29 { pt3dadd( -135.736, -68.4425, -10.9571, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 50/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.5483, -4.07059, 2.57053, 1.39 ) }
    dend_19 { pt3dadd( 13.4103, -1.76777, -0.383744, 0.83 ) }
    dend_19 { pt3dadd( 15.171, -0.351062, -2.20123, 0.83 ) }
    dend_19 { pt3dadd( 16.2496, 0.51683, -3.31464, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 54/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 10.5483, -4.07059, 2.57053, 1.39 ) }
    dend_12 { pt3dadd( 13.1064, -1.3234, 6.58137, 1.11 ) }
    dend_12 { pt3dadd( 13.9009, -0.470233, 7.82697, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 57/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.88152, 5.25388, -11.3189, 1.39 ) }
    dend_4 { pt3dadd( 10.0473, 8.04235, -15.6749, 1.11 ) }
    dend_4 { pt3dadd( 10.7882, 9.81457, -18.4434, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 60/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.88152, 5.25388, -11.3189, 1.39 ) }
    dend_1 { pt3dadd( 9.84916, 4.81638, -12.1646, 0.55 ) }
    dend_1 { pt3dadd( 10.66, 4.41301, -12.8558, 0.55 ) }
    dend_1 { pt3dadd( 11.3569, 4.05582, -13.3285, 0.55 ) }
    dend_1 { pt3dadd( 12.0127, 3.81031, -13.6739, 0.83 ) }
    dend_1 { pt3dadd( 12.8787, 3.5814, -14.015, 0.83 ) }
    dend_1 { pt3dadd( 14.118, 3.33506, -14.4028, 0.28 ) }
    dend_1 { pt3dadd( 14.9129, 3.21834, -14.5814, 0.83 ) }
    dend_1 { pt3dadd( 16.4546, 3.00887, -14.8414, 0.83 ) }
    dend_1 { pt3dadd( 19.3291, 2.6441, -15.1269, 0.83 ) }
    dend_1 { pt3dadd( 21.2181, 2.36127, -15.2748, 0.83 ) }
    dend_1 { pt3dadd( 22.4739, 2.18906, -15.329, 0.55 ) }
    dend_1 { pt3dadd( 22.9587, 2.1374, -15.3344, 0.55 ) }
    dend_1 { pt3dadd( 23.6492, 2.07509, -15.3293, 1.11 ) }
    dend_1 { pt3dadd( 25.1928, 1.90354, -15.342, 0.83 ) }
    dend_1 { pt3dadd( 26.8711, 1.25196, -15.1627, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 76/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 21.1054, 30.2301, -2.26452, 0.694124 ) }
    axon_1 { pt3dadd( 29.4932, 42.6657, -2.26452, 0.694124 ) }
    axon_1 { pt3dadd( 37.8811, 55.1012, -2.26452, 0.694124 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 79/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -3.48704, 31.7869, -2.8133, 1.11 ) }
    apic_4 { pt3dadd( -3.54524, 32.891, -3.91725, 1.11 ) }
    apic_4 { pt3dadd( -3.66223, 35.1103, -6.13644, 1.11 ) }
    apic_4 { pt3dadd( -3.92105, 40.0202, -11.0459, 1.11 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 83/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -3.48704, 31.7869, -2.8133, 1.11 ) }
    apic_3 { pt3dadd( -11.3701, 32.1561, -0.778141, 0.83 ) }
    apic_3 { pt3dadd( -15.0369, 32.5276, 0.215725, 0.83 ) }
    apic_3 { pt3dadd( -16.5923, 32.7188, 0.569512, 0.83 ) }
    apic_3 { pt3dadd( -19.9347, 33.1092, 1.11089, 0.83 ) }
    apic_3 { pt3dadd( -22.5926, 33.3527, 1.35579, 0.83 ) }
    apic_3 { pt3dadd( -25.0352, 33.4677, 1.40609, 0.83 ) }
    apic_3 { pt3dadd( -27.3637, 33.246, 1.48454, 0.83 ) }
    apic_3 { pt3dadd( -29.6449, 33.0837, 0.0202017, 0.83 ) }
    apic_3 { pt3dadd( -31.2599, 33.0527, -1.59197, 0.83 ) }
    apic_3 { pt3dadd( -32.239, 32.9618, -2.83199, 0.83 ) }
    apic_3 { pt3dadd( -33.2544, 32.7913, -4.1425, 0.83 ) }
    apic_3 { pt3dadd( -34.4486, 32.5046, -5.51147, 0.83 ) }
    apic_3 { pt3dadd( -38.1568, 31.5751, -8.82765, 0.83 ) }
    apic_3 { pt3dadd( -39.6597, 31.3469, -9.93828, 0.83 ) }
    apic_3 { pt3dadd( -41.6494, 31.2404, -11.2144, 0.83 ) }
    apic_3 { pt3dadd( -43.1705, 31.2147, -12.096, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_3 { pt3dadd( -44.9651, 31.1816, -13.0997, 0.83 ) }
    apic_3 { pt3dadd( -47.3782, 31.1114, -14.3047, 0.83 ) }
    apic_3 { pt3dadd( -50.3162, 30.9622, -15.4836, 1.11 ) }
    apic_3 { pt3dadd( -52.5481, 30.8531, -16.2704, 0.55 ) }
    apic_3 { pt3dadd( -54.7954, 30.7184, -17.0829, 0.55 ) }
    apic_3 { pt3dadd( -56.3029, 30.5387, -17.6607, 0.55 ) }
    apic_3 { pt3dadd( -58.9866, 30.0551, -18.6458, 0.83 ) }
    apic_3 { pt3dadd( -60.9821, 29.4584, -19.3055, 0.55 ) }
    apic_3 { pt3dadd( -62.5866, 28.7632, -19.7901, 0.55 ) }
    apic_3 { pt3dadd( -64.4127, 27.7591, -20.3044, 1.11 ) }
    apic_3 { pt3dadd( -65.773, 26.9252, -20.6147, 0.55 ) }
    apic_3 { pt3dadd( -67.3103, 25.9142, -20.8516, 0.55 ) }
    apic_3 { pt3dadd( -68.5581, 25.0277, -21.06, 0.55 ) }
    apic_3 { pt3dadd( -69.4427, 24.4391, -21.2213, 0.55 ) }
    apic_3 { pt3dadd( -71.3889, 23.2126, -21.5721, 0.83 ) }
    apic_3 { pt3dadd( -73.5456, 21.8905, -21.8966, 0.28 ) }
    apic_3 { pt3dadd( -75.0665, 20.9621, -22.174, 1.39 ) }
    apic_3 { pt3dadd( -77.0536, 19.7356, -22.5594, 1.11 ) }
    apic_3 { pt3dadd( -78.6942, 18.7612, -22.819, 0.28 ) }
    apic_3 { pt3dadd( -79.7299, 18.158, -22.9695, 0.55 ) }
    apic_3 { pt3dadd( -81.2743, 17.2968, -23.2611, 0.28 ) }
    apic_3 { pt3dadd( -82.6534, 16.4684, -23.5805, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.96075, -17.5318, -7.26064, 1.39 ) }
    dend_41 { pt3dadd( -15.3454, -17.9105, -5.89898, 0.83 ) }
    dend_41 { pt3dadd( -17.7081, -18.0506, -5.39511, 0.83 ) }
    dend_41 { pt3dadd( -19.3505, -18.148, -5.04482, 0.83 ) }
    dend_41 { pt3dadd( -21.2087, -18.2582, -4.64853, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 27/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.96075, -17.5318, -7.26064, 1.39 ) }
    dend_34 { pt3dadd( -8.08554, -19.48, -10.0533, 0.83 ) }
    dend_34 { pt3dadd( -7.28544, -21.2081, -12.852, 0.83 ) }
    dend_34 { pt3dadd( -6.70844, -22.6838, -14.9832, 0.83 ) }
    dend_34 { pt3dadd( -5.99614, -24.7288, -17.9131, 0.83 ) }
    dend_34 { pt3dadd( -5.57132, -26.17, -19.8378, 0.83 ) }
    dend_34 { pt3dadd( -4.81302, -29.0842, -23.709, 0.83 ) }
    dend_34 { pt3dadd( -4.09022, -31.926, -27.1268, 0.83 ) }
    dend_34 { pt3dadd( -3.42098, -34.9408, -30.5203, 0.83 ) }
    dend_34 { pt3dadd( -2.80478, -37.6956, -33.5195, 0.83 ) }
    dend_34 { pt3dadd( -2.35937, -39.6688, -35.5806, 0.83 ) }
    dend_34 { pt3dadd( -1.62261, -42.8748, -38.613, 0.83 ) }
    dend_34 { pt3dadd( -1.16475, -44.9235, -40.3693, 0.83 ) }
    dend_34 { pt3dadd( -0.792965, -46.5627, -41.5937, 0.83 ) }
    dend_34 { pt3dadd( -0.194178, -48.8121, -43.2462, 0.55 ) }
    dend_34 { pt3dadd( 0.323904, -50.5599, -44.3402, 1.39 ) }
    dend_34 { pt3dadd( 1.47742, -53.9789, -46.4116, 1.39 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 44/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 16.2496, 0.51683, -3.31464, 0.83 ) }
    dend_27 { pt3dadd( 17.8753, 0.514805, -5.09882, 0.83 ) }
    dend_27 { pt3dadd( 19.3882, 0.391397, -6.86235, 0.83 ) }
    dend_27 { pt3dadd( 21.7611, 0.0635479, -9.58492, 0.55 ) }
    dend_27 { pt3dadd( 23.9291, -0.343179, -12.0867, 0.55 ) }
    dend_27 { pt3dadd( 26.0494, -0.869852, -14.4166, 0.55 ) }
    dend_27 { pt3dadd( 27.8491, -1.34266, -16.3402, 0.55 ) }
    dend_27 { pt3dadd( 30.125, -2.01405, -18.7495, 0.55 ) }
    dend_27 { pt3dadd( 32.0899, -2.49366, -20.811, 0.55 ) }
    dend_27 { pt3dadd( 34.5093, -2.96718, -23.4361, 0.55 ) }
    dend_27 { pt3dadd( 38.7005, -3.50615, -28.1476, 0.55 ) }
    dend_27 { pt3dadd( 40.0774, -3.57531, -29.7143, 0.55 ) }
    dend_27 { pt3dadd( 42.6512, -3.53276, -32.734, 0.55 ) }
    dend_27 { pt3dadd( 45.0138, -3.34654, -35.5858, 0.55 ) }
    dend_27 { pt3dadd( 47.8613, -3.01787, -39.1165, 0.55 ) }
    dend_27 { pt3dadd( 49.687, -2.81354, -41.379, 0.55 ) }
    dend_27 { pt3dadd( 51.6048, -2.57588, -43.8391, 0.55 ) }
    dend_27 { pt3dadd( 54.4739, -2.2757, -47.3613, 0.55 ) }
    dend_27 { pt3dadd( 55.5739, -2.2014, -48.6373, 0.55 ) }
    dend_27 { pt3dadd( 57.4836, -2.10722, -50.6662, 0.55 ) }
    dend_27 { pt3dadd( 60.7548, -1.85283, -53.8738, 0.55 ) }
    dend_27 { pt3dadd( 64.3505, -1.39369, -57.1909, 0.55 ) }
    dend_27 { pt3dadd( 66.8169, -0.947012, -59.379, 0.55 ) }
    dend_27 { pt3dadd( 70.0199, -0.193898, -62.1043, 0.55 ) }
    dend_27 { pt3dadd( 73.0508, 0.668633, -64.5663, 0.55 ) }
    dend_27 { pt3dadd( 75.9965, 1.64773, -66.858, 0.55 ) }
    dend_27 { pt3dadd( 77.9946, 2.35575, -68.3222, 0.55 ) }
    dend_27 { pt3dadd( 79.9372, 2.98915, -69.6762, 0.55 ) }
    dend_27 { pt3dadd( 81.3, 3.3912, -70.6616, 0.83 ) }
    dend_27 { pt3dadd( 84.286, 4.30265, -72.7993, 0.55 ) }
    dend_27 { pt3dadd( 85.4516, 4.61937, -73.6657, 0.83 ) }
    dend_27 { pt3dadd( 89.3687, 5.65216, -76.7571, 0.55 ) }
    dend_27 { pt3dadd( 90.4904, 5.93468, -77.6873, 0.83 ) }
    dend_27 { pt3dadd( 94.7147, 6.96641, -81.3225, 0.55 ) }
    dend_27 { pt3dadd( 96.4198, 7.3111, -82.8811, 0.55 ) }
    dend_27 { pt3dadd( 98.2351, 7.63576, -84.6437, 0.55 ) }
    dend_27 { pt3dadd( 100.361, 8.00141, -86.7652, 0.55 ) }
    dend_27 { pt3dadd( 101.676, 8.24976, -88.1117, 0.55 ) }
    dend_27 { pt3dadd( 102.956, 8.48418, -89.47, 0.55 ) }
    dend_27 { pt3dadd( 105.554, 8.89939, -92.4428, 0.83 ) }
    dend_27 { pt3dadd( 106.434, 8.97458, -93.5128, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.2496, 0.51683, -3.31464, 0.83 ) }
    dend_20 { pt3dadd( 18.6556, -2.12651, -0.810699, 0.83 ) }
    dend_20 { pt3dadd( 20.31, -3.41309, 0.621797, 0.83 ) }
    dend_20 { pt3dadd( 23.4853, -4.99823, 2.92879, 0.83 ) }
    dend_20 { pt3dadd( 25.1357, -5.82216, 4.12794, 0.83 ) }
    dend_20 { pt3dadd( 26.3319, -6.41929, 4.99701, 0.83 ) }
    dend_20 { pt3dadd( 29.091, -7.79665, 7.0016, 0.55 ) }
    dend_20 { pt3dadd( 31.0776, -8.26656, 8.30891, 0.55 ) }
    dend_20 { pt3dadd( 33.4136, -8.37167, 9.58817, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 94/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 13.9009, -0.470233, 7.82697, 1.11 ) }
    dend_16 { pt3dadd( 16.2216, 2.26086, 10.1757, 0.55 ) }
    dend_16 { pt3dadd( 17.7696, 4.60921, 12.0455, 0.83 ) }
    dend_16 { pt3dadd( 18.7938, 6.33397, 13.5952, 0.55 ) }
    dend_16 { pt3dadd( 20.2716, 8.82237, 15.8309, 0.55 ) }
    dend_16 { pt3dadd( 20.6987, 9.54162, 16.4772, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 21.3887, 10.7034, 17.5211, 0.83 ) }
    dend_16 { pt3dadd( 21.9525, 11.5301, 18.5478, 0.55 ) }
    dend_16 { pt3dadd( 22.6664, 12.753, 19.4839, 0.83 ) }
    dend_16 { pt3dadd( 28.6667, 19.8139, 23.9651, 0.83 ) }
    dend_16 { pt3dadd( 35.143, 27.0578, 27.3595, 0.83 ) }
    dend_16 { pt3dadd( 41.7335, 33.8447, 31.4148, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 13.9009, -0.470233, 7.82697, 1.11 ) }
    dend_13 { pt3dadd( 12.5847, -1.82476, 10.9878, 0.55 ) }
    dend_13 { pt3dadd( 12.0824, -2.48702, 12.3187, 0.55 ) }
    dend_13 { pt3dadd( 11.5508, -3.26312, 14.0425, 0.55 ) }
    dend_13 { pt3dadd( 9.97385, -6.4458, 20.9714, 0.55 ) }
    dend_13 { pt3dadd( 9.55712, -7.36323, 23.11, 0.55 ) }
    dend_13 { pt3dadd( 9.35752, -7.87383, 24.3726, 0.55 ) }
    dend_13 { pt3dadd( 9.02916, -9.31526, 28.1464, 0.55 ) }
    dend_13 { pt3dadd( 8.87976, -10.5979, 31.6381, 0.55 ) }
    dend_13 { pt3dadd( 8.89159, -11.9376, 35.6134, 0.55 ) }
    dend_13 { pt3dadd( 8.99748, -12.5686, 37.4665, 0.55 ) }
    dend_13 { pt3dadd( 9.29408, -13.5125, 39.9834, 1.11 ) }
    dend_13 { pt3dadd( 7.65093, -15.5905, 50.6748, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 19/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 10.7882, 9.81457, -18.4434, 1.39 ) }
    dend_8 { pt3dadd( 16.8472, 10.563, -22.7628, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.7882, 9.81457, -18.4434, 1.39 ) }
    dend_5 { pt3dadd( 11.3238, 10.7456, -20.7081, 0.83 ) }
    dend_5 { pt3dadd( 11.9764, 12.6546, -24.4727, 0.83 ) }
    dend_5 { pt3dadd( 12.5864, 15.8123, -29.669, 0.83 ) }
    dend_5 { pt3dadd( 12.7333, 16.8217, -31.3001, 0.83 ) }
    dend_5 { pt3dadd( 12.7195, 18.8016, -34.4682, 0.83 ) }
    dend_5 { pt3dadd( 12.6913, 22.8506, -40.9473, 0.83 ) }
    dend_5 { pt3dadd( 12.5597, 25.0826, -44.4387, 0.83 ) }
    dend_5 { pt3dadd( 12.3617, 26.4803, -46.3879, 0.83 ) }
    dend_5 { pt3dadd( 12.0789, 28.9698, -49.5584, 0.83 ) }
    dend_5 { pt3dadd( 11.0629, 32.9572, -55.1919, 1.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 26.8711, 1.25196, -15.1627, 0.83 ) }
    dend_3 { pt3dadd( 28.5594, 0.919268, -15.3035, 0.83 ) }
    dend_3 { pt3dadd( 30.4204, 0.332431, -15.4863, 0.83 ) }
    dend_3 { pt3dadd( 31.4868, 0.0020069, -15.5643, 0.83 ) }
    dend_3 { pt3dadd( 33.1859, -0.529854, -15.6167, 0.83 ) }
    dend_3 { pt3dadd( 35.5613, -1.27825, -15.684, 0.83 ) }
    dend_3 { pt3dadd( 39.0792, -2.39533, -15.7531, 0.83 ) }
    dend_3 { pt3dadd( 41.3785, -3.14966, -15.7825, 0.83 ) }
    dend_3 { pt3dadd( 44.0109, -4.06602, -15.7355, 0.83 ) }
    dend_3 { pt3dadd( 46.6327, -4.99736, -15.6642, 0.83 ) }
    dend_3 { pt3dadd( 47.849, -5.44929, -15.611, 1.11 ) }
    dend_3 { pt3dadd( 51.6842, -6.91963, -15.3476, 0.83 ) }
    dend_3 { pt3dadd( 53.3556, -7.52798, -15.2392, 0.83 ) }
    dend_3 { pt3dadd( 55.0899, -8.14284, -15.1083, 0.83 ) }
    dend_3 { pt3dadd( 57.3306, -9.03453, -14.9628, 0.83 ) }
    dend_3 { pt3dadd( 58.7808, -9.62483, -14.8775, 0.83 ) }
    dend_3 { pt3dadd( 60.5201, -10.3564, -14.7153, 0.28 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 49/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 26.8711, 1.25196, -15.1627, 0.83 ) }
    dend_2 { pt3dadd( 28.47, -0.267407, -16.1378, 0.28 ) }
    dend_2 { pt3dadd( 28.7878, -0.528485, -16.2841, 0.55 ) }
    dend_2 { pt3dadd( 30.2627, -1.69148, -16.895, 0.28 ) }
    dend_2 { pt3dadd( 31.9187, -2.97592, -17.4975, 1.11 ) }
    dend_2 { pt3dadd( 36.7096, -6.60021, -19.1392, 0.28 ) }
    dend_2 { pt3dadd( 37.3227, -7.05822, -19.3345, 0.83 ) }
    dend_2 { pt3dadd( 40.7021, -9.37273, -20.2133, 0.28 ) }
    dend_2 { pt3dadd( 41.4189, -9.837, -20.3624, 0.55 ) }
    dend_2 { pt3dadd( 42.7383, -10.6645, -20.5718, 0.28 ) }
    dend_2 { pt3dadd( 44.9656, -11.9691, -20.8419, 0.83 ) }
    dend_2 { pt3dadd( 47.835, -13.5345, -21.0352, 0.28 ) }
    dend_2 { pt3dadd( 49.4156, -14.3943, -21.1545, 0.55 ) }
    dend_2 { pt3dadd( 51.6529, -15.6031, -21.3586, 0.28 ) }
    dend_2 { pt3dadd( 52.4914, -16.0348, -21.4303, 0.55 ) }
    dend_2 { pt3dadd( 55.5293, -17.5155, -21.7036, 0.28 ) }
    dend_2 { pt3dadd( 58.0283, -18.6631, -21.8197, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 66/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -3.92105, 40.0202, -11.0459, 1.11 ) }
    apic_8 { pt3dadd( -3.00754, 48.1517, -11.8328, 1.11 ) }
    apic_8 { pt3dadd( -1.92298, 54.4195, -12.109, 1.11 ) }
    apic_8 { pt3dadd( -0.641674, 61.8245, -12.4352, 1.11 ) }
    apic_8 { pt3dadd( 0.12788, 66.2719, -12.6311, 1.11 ) }
    apic_8 { pt3dadd( 1.07488, 71.7449, -12.8723, 1.11 ) }
    apic_8 { pt3dadd( 2.5449, 80.2405, -13.2466, 1.11 ) }
    apic_8 { pt3dadd( 3.03559, 89.3287, -15.2423, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 74/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -3.92105, 40.0202, -11.0459, 1.11 ) }
    apic_5 { pt3dadd( -5.84607, 39.5506, -10.0656, 1.11 ) }
    apic_5 { pt3dadd( -8.82021, 38.8251, -8.55099, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 77/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -21.2087, -18.2582, -4.64853, 1.11 ) }
    dend_45 { pt3dadd( -22.9376, -18.1289, -7.62769, 0.55 ) }
    dend_45 { pt3dadd( -23.1893, -18.1901, -8.05971, 0.55 ) }
    dend_45 { pt3dadd( -23.8813, -18.5118, -9.19663, 0.55 ) }
    dend_45 { pt3dadd( -27.8073, -20.8148, -15.0375, 0.55 ) }
    dend_45 { pt3dadd( -28.7912, -21.3727, -16.2829, 0.55 ) }
    dend_45 { pt3dadd( -29.3403, -21.684, -16.9779, 0.55 ) }
    dend_45 { pt3dadd( -31.9849, -23.4779, -19.9842, 0.55 ) }
    dend_45 { pt3dadd( -32.8795, -24.1741, -20.9766, 0.55 ) }
    dend_45 { pt3dadd( -33.7799, -25.0643, -21.9289, 0.55 ) }
    dend_45 { pt3dadd( -35.4513, -27.4073, -22.7725, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -21.2087, -18.2582, -4.64853, 1.11 ) }
    dend_42 { pt3dadd( -22.5706, -21.3007, -6.00543, 0.83 ) }
    dend_42 { pt3dadd( -24.4213, -24.7027, -7.42122, 0.83 ) }
    dend_42 { pt3dadd( -25.0251, -25.8287, -7.83591, 0.28 ) }
    dend_42 { pt3dadd( -25.432, -26.6317, -8.13136, 0.83 ) }
    dend_42 { pt3dadd( -26.3243, -28.5045, -8.69287, 0.55 ) }
    dend_42 { pt3dadd( -27.8118, -31.4719, -9.47949, 0.55 ) }
    dend_42 { pt3dadd( -30.1515, -35.7767, -10.5053, 0.55 ) }
    dend_42 { pt3dadd( -31.2071, -37.5923, -10.9794, 0.55 ) }
    dend_42 { pt3dadd( -33.3215, -41.0594, -11.9361, 0.83 ) }
    dend_42 { pt3dadd( -35.8384, -45.0012, -13.0566, 0.83 ) }
    dend_42 { pt3dadd( -37.9366, -48.2864, -13.9688, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_42 { pt3dadd( -39.2532, -50.4045, -14.5409, 0.83 ) }
    dend_42 { pt3dadd( -40.3804, -52.1419, -15.0777, 0.83 ) }
    dend_42 { pt3dadd( -41.3993, -53.5415, -15.5729, 0.83 ) }
    dend_42 { pt3dadd( -41.8837, -54.1169, -15.8082, 0.83 ) }
    dend_42 { pt3dadd( -43.2829, -55.5835, -16.8818, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 5/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.47742, -53.9789, -46.4116, 1.39 ) }
    dend_36 { pt3dadd( 6.00666, -56.7359, -47.793, 0.55 ) }
    dend_36 { pt3dadd( 8.38315, -58.1826, -48.5179, 0.83 ) }
    dend_36 { pt3dadd( 11.2145, -59.9061, -49.3815, 0.55 ) }
    dend_36 { pt3dadd( 12.6756, -60.7955, -49.8272, 0.55 ) }
    dend_36 { pt3dadd( 13.7774, -61.4662, -50.1632, 0.55 ) }
    dend_36 { pt3dadd( 15.8117, -62.7045, -50.7837, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 12/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 1.47742, -53.9789, -46.4116, 1.39 ) }
    dend_35 { pt3dadd( 1.59236, -54.7228, -47.849, 0.55 ) }
    dend_35 { pt3dadd( 1.94994, -56.1434, -50.5048, 0.55 ) }
    dend_35 { pt3dadd( 2.31404, -58.4929, -54.8826, 0.55 ) }
    dend_35 { pt3dadd( 2.50499, -59.5739, -57.0174, 0.55 ) }
    dend_35 { pt3dadd( 2.87207, -61.5268, -60.8387, 0.55 ) }
    dend_35 { pt3dadd( 2.96373, -62.0343, -61.7773, 0.55 ) }
    dend_35 { pt3dadd( 3.27896, -63.6664, -64.6751, 1.11 ) }
    dend_35 { pt3dadd( 3.6236, -65.6121, -67.7277, 0.28 ) }
    dend_35 { pt3dadd( 4.04237, -67.4577, -70.0954, 0.28 ) }
    dend_35 { pt3dadd( 4.25794, -68.4774, -71.1916, 0.28 ) }
    dend_35 { pt3dadd( 4.50324, -69.8056, -72.2207, 0.83 ) }
    dend_35 { pt3dadd( 4.81234, -71.103, -73.1406, 0.28 ) }
    dend_35 { pt3dadd( 5.26324, -72.7238, -74.0273, 0.28 ) }
    dend_35 { pt3dadd( 5.79635, -74.1424, -74.6238, 0.55 ) }
    dend_35 { pt3dadd( 6.15342, -75.212, -75.0799, 0.28 ) }
    dend_35 { pt3dadd( 6.43878, -76.3152, -75.6765, 0.28 ) }
    dend_35 { pt3dadd( 6.72538, -77.7463, -76.5871, 0.83 ) }
    dend_35 { pt3dadd( 7.08017, -80.7744, -78.7322, 0.83 ) }
    dend_35 { pt3dadd( 7.35604, -83.6133, -80.7718, 0.28 ) }
    dend_35 { pt3dadd( 7.45176, -85.6566, -82.266, 0.83 ) }
    dend_35 { pt3dadd( 7.58123, -88.5741, -84.4799, 0.28 ) }
    dend_35 { pt3dadd( 7.64598, -90.4845, -86.0031, 0.55 ) }
    dend_35 { pt3dadd( 7.50291, -93.0604, -88.2695, 0.28 ) }
    dend_35 { pt3dadd( 7.31477, -94.7583, -89.9457, 1.11 ) }
    dend_35 { pt3dadd( 6.86699, -97.8806, -93.2874, 0.28 ) }
    dend_35 { pt3dadd( 6.63222, -100.216, -95.8441, 0.28 ) }
    dend_35 { pt3dadd( 6.52807, -101.362, -97.1618, 0.83 ) }
    dend_35 { pt3dadd( 5.99557, -105.367, -101.98, 0.28 ) }
    dend_35 { pt3dadd( 5.81502, -106.403, -103.297, 0.55 ) }
    dend_35 { pt3dadd( 5.49718, -107.669, -104.996, 0.55 ) }
    dend_35 { pt3dadd( 5.05832, -109.321, -107.346, 0.55 ) }
    dend_35 { pt3dadd( 4.49913, -111.056, -109.702, 0.28 ) }
    dend_35 { pt3dadd( 4.37495, -111.69, -110.488, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 46/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 33.4136, -8.37167, 9.58817, 0.55 ) }
    dend_22 { pt3dadd( 33.8567, -6.34122, 10.5987, 0.28 ) }
    dend_22 { pt3dadd( 33.932, -5.99634, 10.7703, 0.83 ) }
    dend_22 { pt3dadd( 34.1009, -5.22255, 11.1554, 0.28 ) }
    dend_22 { pt3dadd( 34.6372, -2.76525, 12.3783, 0.83 ) }
    dend_22 { pt3dadd( 36.4358, 3.3036, 15.4637, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 52/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 33.4136, -8.37167, 9.58817, 0.55 ) }
    dend_21 { pt3dadd( 39.0381, -11.5804, 12.1006, 0.28 ) }
    dend_21 { pt3dadd( 39.5539, -11.8747, 12.331, 0.83 ) }
    dend_21 { pt3dadd( 41.1608, -12.7914, 13.0488, 0.55 ) }
    dend_21 { pt3dadd( 45.4172, -15.2197, 14.95, 1.11 ) }
    dend_21 { pt3dadd( 55.0426, -18.1202, 19.9234, 1.11 ) }
    dend_21 { pt3dadd( 64.9239, -21.7521, 23.792, 1.11 ) }
    dend_21 { pt3dadd( 73.7599, -27.115, 28.1465, 1.11 ) }
    dend_21 { pt3dadd( 82.1463, -33.2471, 32.3728, 1.11 ) }
    dend_21 { pt3dadd( 90.5564, -40.0386, 35.363, 1.11 ) }
    dend_21 { pt3dadd( 97.3695, -48.125, 39.1032, 1.11 ) }
    dend_21 { pt3dadd( 105.026, -54.4936, 44.2628, 1.11 ) }
    dend_21 { pt3dadd( 111.102, -62.5635, 49.1369, 1.11 ) }
    dend_21 { pt3dadd( 115.388, -71.9682, 53.4932, 1.11 ) }
    dend_21 { pt3dadd( 120.966, -81.0531, 56.9787, 1.11 ) }
    dend_21 { pt3dadd( 126.906, -89.7132, 60.9173, 1.11 ) }
    dend_21 { pt3dadd( 132.923, -98.3176, 64.8615, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 69/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 41.7335, 33.8447, 31.4148, 0.83 ) }
    dend_18 { pt3dadd( 49.5388, 43.6945, 38.7624, 0.83 ) }
    dend_18 { pt3dadd( 57.4332, 52.395, 47.3593, 0.83 ) }
    dend_18 { pt3dadd( 65.2228, 61.4924, 55.635, 0.83 ) }
    dend_18 { pt3dadd( 70.6406, 70.3319, 65.8544, 0.83 ) }
    dend_18 { pt3dadd( 77.3424, 77.8333, 76.3779, 0.83 ) }
    dend_18 { pt3dadd( 85.5657, 85.1301, 85.9205, 0.83 ) }
    dend_18 { pt3dadd( 91.7389, 94.1394, 95.5462, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 41.7335, 33.8447, 31.4148, 0.83 ) }
    dend_17 { pt3dadd( 47.1063, 40.4402, 36.7109, 0.83 ) }
    dend_17 { pt3dadd( 53.2164, 45.9585, 42.4234, 0.83 ) }
    dend_17 { pt3dadd( 60.2697, 49.5273, 48.5823, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 81/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 7.65093, -15.5905, 50.6748, 1.11 ) }
    dend_15 { pt3dadd( 6.24853, -19.2177, 58.5721, 0.83 ) }
    dend_15 { pt3dadd( 3.99627, -21.9392, 66.6352, 0.83 ) }
    dend_15 { pt3dadd( 0.218641, -22.6443, 74.555, 0.83 ) }
    dend_15 { pt3dadd( -4.18855, -24.3626, 81.9791, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.65093, -15.5905, 50.6748, 1.11 ) }
    dend_14 { pt3dadd( 6.66951, -17.2715, 58.6318, 0.83 ) }
    dend_14 { pt3dadd( 7.20157, -19.148, 66.5879, 0.83 ) }
    dend_14 { pt3dadd( 7.54563, -22.644, 73.9881, 0.83 ) }
    dend_14 { pt3dadd( 8.78957, -26.6673, 81.0144, 0.83 ) }
    dend_14 { pt3dadd( 9.82217, -31.0, 87.8894, 0.83 ) }
    dend_14 { pt3dadd( 11.1784, -36.4578, 93.8456, 0.83 ) }
    dend_14 { pt3dadd( 13.2593, -41.6942, 99.7915, 0.83 ) }
    dend_14 { pt3dadd( 15.5088, -46.3541, 106.142, 0.83 ) }
    dend_14 { pt3dadd( 17.888, -51.1656, 112.331, 0.83 ) }
    dend_14 { pt3dadd( 20.5462, -56.3959, 118.047, 0.83 ) }
    dend_14 { pt3dadd( 22.4728, -60.7022, 124.744, 0.83 ) }
    dend_14 { pt3dadd( 23.1007, -65.391, 131.432, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.8472, 10.563, -22.7628, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 18.718, 11.7011, -24.8076, 0.83 ) }
    dend_10 { pt3dadd( 20.822, 13.0012, -27.0032, 0.83 ) }
    dend_10 { pt3dadd( 23.0345, 14.1228, -29.1323, 0.83 ) }
    dend_10 { pt3dadd( 25.2668, 15.1188, -31.1804, 0.83 ) }
    dend_10 { pt3dadd( 26.9807, 15.8027, -32.7218, 0.83 ) }
    dend_10 { pt3dadd( 29.4578, 16.7142, -34.9171, 0.83 ) }
    dend_10 { pt3dadd( 30.9404, 17.1506, -36.1844, 0.83 ) }
    dend_10 { pt3dadd( 33.4671, 17.7128, -38.1469, 0.83 ) }
    dend_10 { pt3dadd( 34.6499, 17.9566, -39.0552, 0.83 ) }
    dend_10 { pt3dadd( 35.8193, 18.1463, -39.9808, 0.83 ) }
    dend_10 { pt3dadd( 37.0011, 18.3871, -40.8912, 0.83 ) }
    dend_10 { pt3dadd( 38.0264, 18.6045, -41.7077, 0.83 ) }
    dend_10 { pt3dadd( 40.4474, 19.2306, -43.6611, 0.83 ) }
    dend_10 { pt3dadd( 41.9623, 19.7248, -44.9061, 0.83 ) }
    dend_10 { pt3dadd( 43.4302, 20.2242, -46.1006, 0.83 ) }
    dend_10 { pt3dadd( 47.116, 21.4962, -49.0972, 0.83 ) }
    dend_10 { pt3dadd( 49.1212, 22.1322, -50.6664, 0.83 ) }
    dend_10 { pt3dadd( 50.712, 22.6273, -51.8533, 0.55 ) }
    dend_10 { pt3dadd( 51.9791, 23.0137, -52.7584, 0.55 ) }
    dend_10 { pt3dadd( 53.1887, 23.3978, -53.5704, 0.55 ) }
    dend_10 { pt3dadd( 54.2576, 23.7403, -54.2502, 0.55 ) }
    dend_10 { pt3dadd( 58.0577, 24.9195, -56.5727, 0.55 ) }
    dend_10 { pt3dadd( 59.7431, 25.4627, -57.5717, 0.55 ) }
    dend_10 { pt3dadd( 60.8395, 25.766, -58.2499, 1.11 ) }
    dend_10 { pt3dadd( 61.6074, 25.9911, -58.7311, 0.55 ) }
    dend_10 { pt3dadd( 62.4229, 26.2288, -59.2695, 0.55 ) }
    dend_10 { pt3dadd( 64.3135, 26.7741, -60.5579, 0.55 ) }
    dend_10 { pt3dadd( 65.3315, 27.0432, -61.2306, 0.83 ) }
    dend_10 { pt3dadd( 66.9017, 27.3673, -62.2338, 0.55 ) }
    dend_10 { pt3dadd( 69.4007, 27.7873, -63.7014, 0.55 ) }
    dend_10 { pt3dadd( 70.525, 27.9455, -64.335, 0.55 ) }
    dend_10 { pt3dadd( 73.2844, 28.3412, -65.8349, 0.55 ) }
    dend_10 { pt3dadd( 75.2345, 28.6038, -66.8718, 0.55 ) }
    dend_10 { pt3dadd( 76.6995, 28.7978, -67.6668, 0.55 ) }
    dend_10 { pt3dadd( 78.8184, 29.1032, -68.8509, 0.55 ) }
    dend_10 { pt3dadd( 81.2315, 29.4268, -70.2979, 0.55 ) }
    dend_10 { pt3dadd( 83.593, 29.8321, -71.7671, 0.28 ) }
    dend_10 { pt3dadd( 83.9321, 29.8937, -72.0016, 0.55 ) }
    dend_10 { pt3dadd( 84.8521, 30.0859, -72.7148, 0.28 ) }
    dend_10 { pt3dadd( 86.4046, 30.495, -73.919, 0.28 ) }
    dend_10 { pt3dadd( 86.8495, 30.6457, -74.2987, 0.83 ) }
    dend_10 { pt3dadd( 88.142, 31.2214, -75.3043, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 42/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.8472, 10.563, -22.7628, 0.83 ) }
    dend_9 { pt3dadd( 16.6724, 9.30587, -26.9975, 0.55 ) }
    dend_9 { pt3dadd( 16.7116, 8.83109, -28.7559, 0.55 ) }
    dend_9 { pt3dadd( 16.8237, 8.21582, -31.2296, 0.55 ) }
    dend_9 { pt3dadd( 17.0013, 7.81004, -32.8177, 0.55 ) }
    dend_9 { pt3dadd( 17.104, 7.61768, -33.5088, 0.83 ) }
    dend_9 { pt3dadd( 17.6191, 6.94243, -35.9873, 0.55 ) }
    dend_9 { pt3dadd( 18.4539, 6.05766, -38.857, 0.55 ) }
    dend_9 { pt3dadd( 19.1162, 5.40032, -41.4651, 0.55 ) }
    dend_9 { pt3dadd( 19.5975, 4.9425, -43.6983, 0.55 ) }
    dend_9 { pt3dadd( 19.9811, 4.53973, -45.8536, 0.55 ) }
    dend_9 { pt3dadd( 20.4126, 4.02286, -48.6684, 0.55 ) }
    dend_9 { pt3dadd( 20.6667, 3.55468, -51.2079, 0.55 ) }
    dend_9 { pt3dadd( 20.7965, 2.88405, -55.8136, 0.83 ) }
    dend_9 { pt3dadd( 20.8008, 2.71801, -57.3781, 0.55 ) }
    dend_9 { pt3dadd( 20.7869, 2.65043, -58.1983, 0.55 ) }
    dend_9 { pt3dadd( 20.7963, 2.49673, -60.326, 0.83 ) }
    dend_9 { pt3dadd( 20.9297, 2.23615, -62.577, 0.55 ) }
    dend_9 { pt3dadd( 21.3529, 1.84211, -64.9412, 0.55 ) }
    dend_9 { pt3dadd( 21.5855, 1.59496, -65.7192, 0.83 ) }
    dend_9 { pt3dadd( 22.1337, 0.945954, -67.6801, 0.28 ) }
    dend_9 { pt3dadd( 22.2914, 0.764546, -68.2232, 0.83 ) }
    dend_9 { pt3dadd( 22.7791, 0.0867034, -70.0162, 0.28 ) }
    dend_9 { pt3dadd( 23.0695, -0.398326, -71.2104, 0.55 ) }
    dend_9 { pt3dadd( 23.4857, -1.44286, -73.8823, 0.55 ) }
    dend_9 { pt3dadd( 23.7638, -2.44563, -76.8126, 0.28 ) }
    dend_9 { pt3dadd( 23.8631, -2.8237, -78.0714, 0.28 ) }
    dend_9 { pt3dadd( 23.9286, -3.06284, -79.0726, 0.28 ) }
    dend_9 { pt3dadd( 24.0083, -3.3507, -80.5866, 0.83 ) }
    dend_9 { pt3dadd( 24.1282, -3.70343, -82.6686, 0.28 ) }
    dend_9 { pt3dadd( 24.1707, -3.9078, -84.0485, 0.83 ) }
    dend_9 { pt3dadd( 24.1588, -4.44343, -86.9077, 0.55 ) }
    dend_9 { pt3dadd( 24.146, -5.02303, -89.7226, 0.28 ) }
    dend_9 { pt3dadd( 24.1509, -5.21463, -90.5352, 0.83 ) }
    dend_9 { pt3dadd( 24.1216, -5.47261, -91.7278, 0.83 ) }
    dend_9 { pt3dadd( 24.0087, -5.92345, -93.9861, 0.55 ) }
    dend_9 { pt3dadd( 23.8635, -6.24875, -95.9326, 0.55 ) }
    dend_9 { pt3dadd( 23.5505, -6.56673, -98.4876, 0.55 ) }
    dend_9 { pt3dadd( 23.395, -6.87147, -100.294, 0.55 ) }
    dend_9 { pt3dadd( 23.2167, -7.68476, -104.156, 0.55 ) }
    dend_9 { pt3dadd( 23.2184, -8.03196, -105.509, 0.28 ) }
    dend_9 { pt3dadd( 23.2349, -8.18718, -106.072, 0.83 ) }
    dend_9 { pt3dadd( 23.3798, -8.96168, -109.185, 0.28 ) }
    dend_9 { pt3dadd( 23.4566, -10.1705, -113.154, 0.55 ) }
    dend_9 { pt3dadd( 23.6412, -10.8141, -114.467, 0.28 ) }
    dend_9 { pt3dadd( 23.8132, -11.2527, -114.799, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.0629, 32.9572, -55.1919, 1.66 ) }
    dend_7 { pt3dadd( 10.8385, 33.8787, -56.2844, 0.55 ) }
    dend_7 { pt3dadd( 10.3374, 35.906, -58.2867, 0.55 ) }
    dend_7 { pt3dadd( 10.1902, 36.3584, -58.6831, 0.55 ) }
    dend_7 { pt3dadd( 9.92464, 37.2457, -59.4549, 0.28 ) }
    dend_7 { pt3dadd( 9.61736, 37.889, -60.1784, 0.55 ) }
    dend_7 { pt3dadd( 9.0152, 38.9702, -61.6421, 0.55 ) }
    dend_7 { pt3dadd( 8.72841, 39.2996, -62.2683, 0.55 ) }
    dend_7 { pt3dadd( 8.01779, 39.8408, -63.573, 0.55 ) }
    dend_7 { pt3dadd( 7.57195, 40.1348, -64.3766, 0.55 ) }
    dend_7 { pt3dadd( 5.75612, 41.2217, -67.7099, 1.39 ) }
    dend_7 { pt3dadd( 5.07642, 41.6267, -69.0471, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_7 { pt3dadd( 4.20395, 42.151, -70.8728, 0.55 ) }
    dend_7 { pt3dadd( 2.76778, 43.0278, -74.1567, 0.55 ) }
    dend_7 { pt3dadd( 2.51911, 43.1883, -74.7776, 0.55 ) }
    dend_7 { pt3dadd( 1.51446, 43.9154, -77.5197, 0.55 ) }
    dend_7 { pt3dadd( 0.775983, 44.6173, -80.1088, 0.55 ) }
    dend_7 { pt3dadd( 0.487207, 44.9651, -81.361, 0.55 ) }
    dend_7 { pt3dadd( 0.368152, 45.2462, -82.3052, 0.55 ) }
    dend_7 { pt3dadd( 0.32928, 45.543, -83.4066, 0.28 ) }
    dend_7 { pt3dadd( 0.35684, 45.7431, -84.1608, 1.11 ) }
    dend_7 { pt3dadd( 0.609688, 46.2811, -86.0636, 0.28 ) }
    dend_7 { pt3dadd( 0.68487, 46.408, -86.4771, 0.83 ) }
    dend_7 { pt3dadd( 1.15033, 47.1841, -88.7587, 0.28 ) }
    dend_7 { pt3dadd( 1.19455, 47.2654, -88.9619, 0.83 ) }
    dend_7 { pt3dadd( 1.54506, 47.9227, -90.4535, 0.28 ) }
    dend_7 { pt3dadd( 1.81639, 48.4847, -91.5885, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 15/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.0629, 32.9572, -55.1919, 1.66 ) }
    dend_6 { pt3dadd( 10.8376, 31.6001, -57.372, 0.83 ) }
    dend_6 { pt3dadd( 10.4007, 29.5094, -61.3538, 0.83 ) }
    dend_6 { pt3dadd( 10.0968, 28.7097, -63.2712, 0.83 ) }
    dend_6 { pt3dadd( 9.85288, 28.2617, -64.3528, 0.55 ) }
    dend_6 { pt3dadd( 8.69335, 26.7982, -68.9882, 0.55 ) }
    dend_6 { pt3dadd( 7.90787, 26.3883, -71.0086, 0.55 ) }
    dend_6 { pt3dadd( 7.11863, 26.303, -72.5729, 0.55 ) }
    dend_6 { pt3dadd( 5.98239, 26.3484, -74.6585, 0.83 ) }
    dend_6 { pt3dadd( 4.76511, 26.4191, -76.6833, 0.28 ) }
    dend_6 { pt3dadd( 2.26114, 26.3643, -80.4467, 1.66 ) }
    dend_6 { pt3dadd( -1.69528, 25.4373, -85.0674, 0.83 ) }
    dend_6 { pt3dadd( -3.65556, 24.6122, -86.8483, 0.83 ) }
    dend_6 { pt3dadd( -7.0514, 22.6252, -89.3852, 0.28 ) }
    dend_6 { pt3dadd( -7.504, 22.2743, -89.6596, 0.55 ) }
    dend_6 { pt3dadd( -9.62415, 20.3755, -90.5705, 0.28 ) }
    dend_6 { pt3dadd( -12.3071, 17.5122, -91.204, 0.28 ) }
    dend_6 { pt3dadd( -14.3132, 15.1092, -91.5425, 0.83 ) }
    dend_6 { pt3dadd( -15.9539, 13.3521, -91.7834, 0.28 ) }
    dend_6 { pt3dadd( -16.4353, 12.9115, -91.8927, 0.55 ) }
    dend_6 { pt3dadd( -19.3117, 10.2953, -92.5108, 0.28 ) }
    dend_6 { pt3dadd( -20.6599, 9.08893, -92.7196, 0.55 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 37/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 3.03559, 89.3287, -15.2423, 1.11 ) }
    apic_10 { pt3dadd( 0.873046, 94.9613, -17.1588, 1.11 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 39/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 3.03559, 89.3287, -15.2423, 1.11 ) }
    apic_9 { pt3dadd( 4.33654, 90.3577, -15.0502, 0.55 ) }
    apic_9 { pt3dadd( 6.46526, 91.8391, -14.62, 0.55 ) }
    apic_9 { pt3dadd( 8.1243, 92.9548, -14.2272, 0.55 ) }
    apic_9 { pt3dadd( 10.8026, 94.6304, -13.7122, 0.55 ) }
    apic_9 { pt3dadd( 15.7348, 97.5231, -12.6606, 0.55 ) }
    apic_9 { pt3dadd( 20.6567, 100.296, -11.6815, 0.55 ) }
    apic_9 { pt3dadd( 22.9158, 101.457, -11.3158, 0.55 ) }
    apic_9 { pt3dadd( 24.7131, 102.275, -11.1331, 0.55 ) }
    apic_9 { pt3dadd( 28.6975, 104.036, -11.0039, 0.55 ) }
    apic_9 { pt3dadd( 31.5708, 105.238, -11.1653, 0.55 ) }
    apic_9 { pt3dadd( 34.2659, 106.425, -11.5835, 0.55 ) }
    apic_9 { pt3dadd( 38.9259, 108.565, -12.6038, 0.55 ) }
    apic_9 { pt3dadd( 41.7554, 109.833, -13.2584, 0.55 ) }
    apic_9 { pt3dadd( 44.7676, 111.188, -14.0296, 0.28 ) }
    apic_9 { pt3dadd( 45.9283, 111.741, -14.3389, 0.55 ) }
    apic_9 { pt3dadd( 48.8761, 113.182, -15.2773, 0.28 ) }
    apic_9 { pt3dadd( 50.1247, 113.777, -15.5801, 0.28 ) }
    apic_9 { pt3dadd( 52.8978, 115.055, -15.7833, 0.28 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 58/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -8.82021, 38.8251, -8.55099, 1.11 ) }
    apic_7 { pt3dadd( -14.2193, 36.9896, -7.33971, 0.55 ) }
    apic_7 { pt3dadd( -18.7877, 35.6679, -6.92465, 0.55 ) }
    apic_7 { pt3dadd( -22.5187, 34.5901, -6.76922, 0.55 ) }
    apic_7 { pt3dadd( -23.8922, 34.2055, -6.7195, 0.55 ) }
    apic_7 { pt3dadd( -28.3021, 32.9624, -6.56532, 0.55 ) }
    apic_7 { pt3dadd( -31.765, 32.0305, -6.41539, 0.55 ) }
    apic_7 { pt3dadd( -37.9088, 30.6653, -6.30386, 0.55 ) }
    apic_7 { pt3dadd( -44.7197, 29.5986, -6.14767, 0.55 ) }
    apic_7 { pt3dadd( -49.9791, 28.9894, -6.11471, 0.55 ) }
    apic_7 { pt3dadd( -51.5872, 28.879, -6.13569, 0.55 ) }
    apic_7 { pt3dadd( -55.7455, 28.7465, -6.38728, 0.55 ) }
    apic_7 { pt3dadd( -60.4118, 28.606, -6.90136, 0.55 ) }
    apic_7 { pt3dadd( -65.4856, 28.6203, -7.6179, 0.55 ) }
    apic_7 { pt3dadd( -69.3163, 28.7078, -8.4311, 0.55 ) }
    apic_7 { pt3dadd( -71.7696, 28.7577, -9.06483, 0.55 ) }
    apic_7 { pt3dadd( -76.3331, 28.8398, -10.3173, 0.55 ) }
    apic_7 { pt3dadd( -79.2448, 28.8436, -11.1504, 0.55 ) }
    apic_7 { pt3dadd( -83.6737, 28.8325, -12.3465, 0.55 ) }
    apic_7 { pt3dadd( -86.6622, 28.783, -12.9902, 0.55 ) }
    apic_7 { pt3dadd( -89.0391, 28.8723, -13.2476, 0.83 ) }
    apic_7 { pt3dadd( -91.0713, 29.0531, -13.2929, 0.55 ) }
    apic_7 { pt3dadd( -93.0879, 29.302, -13.2054, 0.55 ) }
    apic_7 { pt3dadd( -95.3596, 29.6577, -13.0966, 0.55 ) }
    apic_7 { pt3dadd( -97.7524, 30.0295, -12.9365, 0.83 ) }
    apic_7 { pt3dadd( -100.186, 30.3481, -12.7709, 0.55 ) }
    apic_7 { pt3dadd( -102.208, 30.4779, -12.6736, 1.11 ) }
    apic_7 { pt3dadd( -104.935, 30.5238, -12.7019, 0.83 ) }
    apic_7 { pt3dadd( -106.985, 30.4834, -12.8236, 0.83 ) }
    apic_7 { pt3dadd( -109.237, 30.3707, -13.1124, 0.55 ) }
    apic_7 { pt3dadd( -111.022, 30.328, -13.4971, 0.55 ) }
    apic_7 { pt3dadd( -113.734, 30.2295, -14.2593, 0.83 ) }
    apic_7 { pt3dadd( -116.977, 29.9214, -15.393, 0.55 ) }
    apic_7 { pt3dadd( -117.64, 29.8231, -15.644, 0.83 ) }
    apic_7 { pt3dadd( -119.752, 29.3315, -16.4324, 0.55 ) }
    apic_7 { pt3dadd( -121.246, 28.9636, -16.979, 0.55 ) }
    apic_7 { pt3dadd( -124.361, 28.1965, -18.0108, 0.55 ) }
    apic_7 { pt3dadd( -126.46, 27.6742, -18.6817, 0.55 ) }
    apic_7 { pt3dadd( -129.955, 26.8325, -19.7167, 0.55 ) }
    apic_7 { pt3dadd( -135.109, 25.5875, -21.1989, 0.83 ) }
    apic_7 { pt3dadd( -138.561, 24.6571, -22.2194, 0.28 ) }
    apic_7 { pt3dadd( -139.483, 24.3672, -22.5197, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_7 { pt3dadd( -141.476, 23.6929, -23.2355, 0.28 ) }
    apic_7 { pt3dadd( -143.452, 22.9347, -23.9693, 0.28 ) }
    apic_7 { pt3dadd( -145.506, 21.8809, -24.8385, 0.28 ) }
    apic_7 { pt3dadd( -147.667, 20.4472, -26.0312, 0.28 ) }
    apic_7 { pt3dadd( -148.573, 19.733, -26.6689, 0.28 ) }
    apic_7 { pt3dadd( -148.782, 19.5516, -26.8479, 0.83 ) }
    apic_7 { pt3dadd( -149.874, 18.5176, -27.8647, 0.28 ) }
    apic_7 { pt3dadd( -150.39, 17.9974, -28.4311, 0.83 ) }
    apic_7 { pt3dadd( -153.166, 15.4707, -31.6777, 0.28 ) }
    apic_7 { pt3dadd( -154.47, 14.4855, -33.2067, 0.55 ) }
    apic_7 { pt3dadd( -155.153, 14.0435, -34.0327, 0.55 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 11/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -8.82021, 38.8251, -8.55099, 1.11 ) }
    apic_6 { pt3dadd( -13.2835, 37.4308, -7.96939, 0.83 ) }
    apic_6 { pt3dadd( -17.3931, 36.2867, -7.51886, 0.83 ) }
    apic_6 { pt3dadd( -22.1389, 34.8629, -7.07843, 0.83 ) }
    apic_6 { pt3dadd( -27.8561, 33.1643, -6.54745, 0.83 ) }
    apic_6 { pt3dadd( -30.0242, 32.5231, -6.39304, 0.83 ) }
    apic_6 { pt3dadd( -32.2803, 31.8987, -6.33793, 0.55 ) }
    apic_6 { pt3dadd( -35.0101, 31.2964, -6.48724, 0.55 ) }
    apic_6 { pt3dadd( -40.1335, 30.2571, -7.06107, 0.55 ) }
    apic_6 { pt3dadd( -43.324, 29.5267, -7.59966, 0.55 ) }
    apic_6 { pt3dadd( -46.3023, 28.8267, -8.17777, 0.55 ) }
    apic_6 { pt3dadd( -52.8804, 27.2213, -9.54754, 0.83 ) }
    apic_6 { pt3dadd( -55.7901, 26.5223, -10.2022, 0.83 ) }
    apic_6 { pt3dadd( -57.3414, 26.1295, -10.5688, 0.83 ) }
    apic_6 { pt3dadd( -60.9614, 25.2207, -11.5021, 0.83 ) }
    apic_6 { pt3dadd( -64.309, 24.2808, -12.3356, 0.55 ) }
    apic_6 { pt3dadd( -65.6066, 23.9039, -12.5835, 0.83 ) }
    apic_6 { pt3dadd( -69.0, 22.8691, -12.9963, 0.55 ) }
    apic_6 { pt3dadd( -69.5811, 22.6991, -13.0381, 0.83 ) }
    apic_6 { pt3dadd( -72.0144, 22.0456, -13.2416, 0.55 ) }
    apic_6 { pt3dadd( -73.8745, 21.5943, -13.3941, 0.55 ) }
    apic_6 { pt3dadd( -75.2282, 21.3121, -13.5016, 0.55 ) }
    apic_6 { pt3dadd( -78.1329, 20.6932, -13.5924, 0.55 ) }
    apic_6 { pt3dadd( -80.2925, 20.1779, -13.5691, 0.55 ) }
    apic_6 { pt3dadd( -82.396, 19.6369, -13.5782, 0.55 ) }
    apic_6 { pt3dadd( -85.0376, 18.868, -13.6281, 0.55 ) }
    apic_6 { pt3dadd( -87.6171, 18.0472, -13.7796, 0.55 ) }
    apic_6 { pt3dadd( -91.2234, 16.916, -14.0401, 0.55 ) }
    apic_6 { pt3dadd( -92.2717, 16.5813, -14.1147, 0.83 ) }
    apic_6 { pt3dadd( -94.4923, 15.8869, -14.2753, 0.55 ) }
    apic_6 { pt3dadd( -95.6222, 15.5279, -14.3773, 0.83 ) }
    apic_6 { pt3dadd( -98.803, 14.4771, -14.7467, 0.55 ) }
    apic_6 { pt3dadd( -100.907, 13.6906, -15.0342, 0.55 ) }
    apic_6 { pt3dadd( -104.126, 12.4193, -15.5561, 0.55 ) }
    apic_6 { pt3dadd( -105.506, 11.8199, -15.7791, 0.83 ) }
    apic_6 { pt3dadd( -108.306, 10.4171, -16.1988, 0.28 ) }
    apic_6 { pt3dadd( -109.253, 9.90204, -16.3672, 0.55 ) }
    apic_6 { pt3dadd( -110.58, 9.0416, -16.6583, 0.28 ) }
    apic_6 { pt3dadd( -111.695, 8.26088, -16.8907, 0.83 ) }
    apic_6 { pt3dadd( -113.73, 6.80819, -17.2386, 0.28 ) }
    apic_6 { pt3dadd( -114.744, 6.11726, -17.3569, 0.55 ) }
    apic_6 { pt3dadd( -115.984, 5.31552, -17.444, 0.28 ) }
    apic_6 { pt3dadd( -116.922, 4.73691, -17.501, 0.83 ) }
    apic_6 { pt3dadd( -120.225, 2.76035, -17.6634, 0.28 ) }
    apic_6 { pt3dadd( -121.496, 2.00323, -17.7002, 0.83 ) }
    apic_6 { pt3dadd( -124.731, 0.022826, -17.679, 0.28 ) }
    apic_6 { pt3dadd( -126.729, -1.22224, -17.6667, 0.28 ) }
    apic_6 { pt3dadd( -127.189, -1.51148, -17.6587, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 59/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -35.4513, -27.4073, -22.7725, 0.83 ) }
    dend_47 { pt3dadd( -39.0147, -27.9086, -24.4024, 0.83 ) }
    dend_47 { pt3dadd( -43.2663, -28.5743, -26.0943, 0.55 ) }
    dend_47 { pt3dadd( -48.3985, -29.3982, -27.8714, 0.55 ) }
    dend_47 { pt3dadd( -50.6496, -29.8161, -28.64, 0.55 ) }
    dend_47 { pt3dadd( -54.2503, -30.5998, -29.8595, 0.83 ) }
    dend_47 { pt3dadd( -58.3317, -31.6396, -31.2798, 0.55 ) }
    dend_47 { pt3dadd( -61.689, -32.9164, -32.6422, 0.55 ) }
    dend_47 { pt3dadd( -62.6421, -33.365, -33.0129, 0.55 ) }
    dend_47 { pt3dadd( -64.2161, -34.094, -33.6277, 0.55 ) }
    dend_47 { pt3dadd( -65.3394, -34.6601, -34.1616, 0.55 ) }
    dend_47 { pt3dadd( -67.4601, -35.8292, -35.311, 0.83 ) }
    dend_47 { pt3dadd( -70.0429, -37.1595, -36.6666, 0.28 ) }
    dend_47 { pt3dadd( -71.9131, -38.2422, -37.8782, 1.94 ) }
    dend_47 { pt3dadd( -75.0761, -39.9669, -39.9631, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -35.4513, -27.4073, -22.7725, 0.83 ) }
    dend_46 { pt3dadd( -36.6564, -24.5001, -28.3457, 0.55 ) }
    dend_46 { pt3dadd( -37.2061, -23.0333, -31.5635, 0.55 ) }
    dend_46 { pt3dadd( -37.707, -21.6742, -34.8308, 0.55 ) }
    dend_46 { pt3dadd( -38.2213, -20.4447, -37.9105, 0.55 ) }
    dend_46 { pt3dadd( -38.8289, -19.4467, -40.3355, 1.11 ) }
    dend_46 { pt3dadd( -40.1321, -17.3295, -45.5346, 0.28 ) }
    dend_46 { pt3dadd( -40.3935, -16.9361, -46.6551, 0.55 ) }
    dend_46 { pt3dadd( -41.0191, -16.1, -49.0421, 0.28 ) }
    dend_46 { pt3dadd( -41.7909, -15.0701, -52.0773, 0.83 ) }
    dend_46 { pt3dadd( -43.8738, -12.6852, -59.0227, 0.83 ) }
    dend_46 { pt3dadd( -44.4979, -11.9608, -61.0527, 0.55 ) }
    dend_46 { pt3dadd( -45.4418, -10.9009, -64.2693, 1.11 ) }
    dend_46 { pt3dadd( -45.9404, -10.4197, -65.9702, 0.28 ) }
    dend_46 { pt3dadd( -46.2729, -10.1041, -67.4071, 0.28 ) }
    dend_46 { pt3dadd( -47.0048, -9.5295, -70.7931, 1.11 ) }
    dend_46 { pt3dadd( -47.8962, -8.90956, -75.2807, 0.55 ) }
    dend_46 { pt3dadd( -48.9237, -8.28676, -79.8957, 0.55 ) }
    dend_46 { pt3dadd( -49.5454, -7.9432, -82.6741, 0.55 ) }
    dend_46 { pt3dadd( -50.868, -7.38374, -88.1764, 0.55 ) }
    dend_46 { pt3dadd( -52.8289, -6.60798, -96.0319, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 95/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -43.2829, -55.5835, -16.8818, 0.83 ) }
    dend_44 { pt3dadd( -42.6459, -57.2678, -17.175, 0.55 ) }
    dend_44 { pt3dadd( -40.792, -62.3262, -18.2104, 0.55 ) }
    dend_44 { pt3dadd( -39.5049, -65.9334, -18.8887, 0.55 ) }
    dend_44 { pt3dadd( -38.6741, -68.3351, -19.4078, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_44 { pt3dadd( -37.6271, -71.2858, -20.0299, 0.55 ) }
    dend_44 { pt3dadd( -36.7353, -73.871, -20.5435, 0.55 ) }
    dend_44 { pt3dadd( -36.2603, -75.2709, -20.8216, 0.83 ) }
    dend_44 { pt3dadd( -35.5985, -77.2826, -21.1857, 0.55 ) }
    dend_44 { pt3dadd( -34.3504, -80.6002, -21.598, 0.55 ) }
    dend_44 { pt3dadd( -33.5639, -82.6, -21.7472, 0.55 ) }
    dend_44 { pt3dadd( -32.5458, -85.0944, -21.854, 0.55 ) }
    dend_44 { pt3dadd( -31.0477, -88.6245, -21.935, 0.55 ) }
    dend_44 { pt3dadd( -29.8506, -91.2891, -21.9182, 0.55 ) }
    dend_44 { pt3dadd( -28.6043, -93.9081, -21.8894, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 10/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -43.2829, -55.5835, -16.8818, 0.83 ) }
    dend_43 { pt3dadd( -43.5122, -55.9011, -16.8942, 0.83 ) }
    dend_43 { pt3dadd( -45.115, -57.5184, -16.8147, 0.83 ) }
    dend_43 { pt3dadd( -46.8553, -59.1582, -16.8303, 0.83 ) }
    dend_43 { pt3dadd( -49.5175, -61.7745, -16.8973, 0.83 ) }
    dend_43 { pt3dadd( -51.1671, -63.3592, -16.9386, 0.83 ) }
    dend_43 { pt3dadd( -53.327, -65.5482, -17.0612, 1.11 ) }
    dend_43 { pt3dadd( -56.3369, -68.8068, -17.4483, 0.55 ) }
    dend_43 { pt3dadd( -59.8848, -73.0177, -18.2395, 0.55 ) }
    dend_43 { pt3dadd( -61.4993, -75.117, -18.7205, 0.55 ) }
    dend_43 { pt3dadd( -62.5091, -76.608, -19.1717, 0.55 ) }
    dend_43 { pt3dadd( -64.1848, -79.7362, -20.292, 0.55 ) }
    dend_43 { pt3dadd( -65.4321, -82.9308, -21.6852, 0.55 ) }
    dend_43 { pt3dadd( -65.8656, -84.8558, -22.6675, 0.28 ) }
    dend_43 { pt3dadd( -66.0709, -86.2878, -23.4506, 0.83 ) }
    dend_43 { pt3dadd( -66.3887, -88.5997, -24.7962, 0.28 ) }
    dend_43 { pt3dadd( -66.691, -90.6518, -25.964, 0.28 ) }
    dend_43 { pt3dadd( -66.9909, -92.0479, -26.7157, 0.83 ) }
    dend_43 { pt3dadd( -67.8087, -95.0096, -28.1574, 0.28 ) }
    dend_43 { pt3dadd( -68.525, -96.8451, -28.9552, 0.55 ) }
    dend_43 { pt3dadd( -69.4185, -98.7836, -29.712, 0.28 ) }
    dend_43 { pt3dadd( -70.3632, -100.66, -30.3661, 1.11 ) }
    dend_43 { pt3dadd( -71.7747, -103.221, -31.2139, 0.83 ) }
    dend_43 { pt3dadd( -72.7153, -104.901, -31.7079, 0.55 ) }
    dend_43 { pt3dadd( -74.4127, -107.788, -32.4601, 0.55 ) }
    dend_43 { pt3dadd( -75.6345, -110.038, -33.0711, 0.55 ) }
    dend_43 { pt3dadd( -76.4642, -111.548, -33.4685, 0.55 ) }
    dend_43 { pt3dadd( -77.6667, -113.612, -34.0322, 0.55 ) }
    dend_43 { pt3dadd( -79.1475, -116.13, -34.7583, 0.55 ) }
    dend_43 { pt3dadd( -80.4861, -118.486, -35.4531, 0.28 ) }
    dend_43 { pt3dadd( -81.1507, -119.729, -35.8095, 0.28 ) }
    dend_43 { pt3dadd( -83.4528, -123.828, -36.9506, 0.28 ) }
    dend_43 { pt3dadd( -84.1175, -125.028, -37.2878, 1.11 ) }
    dend_43 { pt3dadd( -86.8455, -130.185, -38.8898, 0.28 ) }
    dend_43 { pt3dadd( -87.8358, -132.144, -39.5972, 0.28 ) }
    dend_43 { pt3dadd( -88.6865, -133.896, -40.2931, 0.55 ) }
    dend_43 { pt3dadd( -89.6439, -135.888, -41.1187, 0.28 ) }
    dend_43 { pt3dadd( -90.3421, -137.499, -41.878, 1.11 ) }
    dend_43 { pt3dadd( -91.983, -141.414, -43.9032, 0.28 ) }
    dend_43 { pt3dadd( -92.3133, -142.154, -44.341, 0.83 ) }
    dend_43 { pt3dadd( -93.3838, -144.489, -45.8288, 0.28 ) }
    dend_43 { pt3dadd( -93.497, -144.75, -46.0018, 0.83 ) }
    dend_43 { pt3dadd( -94.7008, -147.833, -47.9771, 0.28 ) }
    dend_43 { pt3dadd( -95.0429, -148.666, -48.4779, 0.55 ) }
    dend_43 { pt3dadd( -95.8013, -150.622, -49.6206, 0.28 ) }
    dend_43 { pt3dadd( -95.9472, -151.01, -49.8416, 0.55 ) }
    dend_43 { pt3dadd( -96.5479, -152.847, -50.8786, 0.28 ) }
    dend_43 { pt3dadd( -96.7435, -153.399, -51.1757, 0.55 ) }
    dend_43 { pt3dadd( -98.1671, -156.831, -52.6967, 0.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 59/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 15.8117, -62.7045, -50.7837, 0.55 ) }
    dend_40 { pt3dadd( 16.3385, -64.3746, -51.3677, 0.55 ) }
    dend_40 { pt3dadd( 17.3772, -67.8482, -52.6529, 0.55 ) }
    dend_40 { pt3dadd( 18.3228, -70.335, -53.6585, 0.55 ) }
    dend_40 { pt3dadd( 19.3041, -72.2702, -54.623, 0.55 ) }
    dend_40 { pt3dadd( 20.3058, -74.0229, -55.6074, 0.55 ) }
    dend_40 { pt3dadd( 21.0369, -75.302, -56.3259, 0.55 ) }
    dend_40 { pt3dadd( 22.3666, -77.433, -57.5813, 0.55 ) }
    dend_40 { pt3dadd( 24.0001, -79.7787, -59.075, 0.55 ) }
    dend_40 { pt3dadd( 26.4073, -82.6435, -61.2818, 0.55 ) }
    dend_40 { pt3dadd( 27.87, -84.2365, -62.7023, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 15.8117, -62.7045, -50.7837, 0.55 ) }
    dend_37 { pt3dadd( 16.8631, -63.3959, -51.0233, 0.83 ) }
    dend_37 { pt3dadd( 20.0356, -65.9725, -51.8489, 0.55 ) }
    dend_37 { pt3dadd( 22.0038, -67.7888, -52.4175, 0.55 ) }
    dend_37 { pt3dadd( 25.9933, -71.7921, -53.8129, 0.28 ) }
    dend_37 { pt3dadd( 27.6916, -73.5257, -54.4672, 0.28 ) }
    dend_37 { pt3dadd( 29.3815, -75.2548, -55.0681, 0.28 ) }
    dend_37 { pt3dadd( 30.5825, -76.5838, -55.4822, 0.83 ) }
    dend_37 { pt3dadd( 30.9065, -76.967, -55.5758, 0.83 ) }
    dend_37 { pt3dadd( 32.3838, -79.0343, -56.0792, 0.28 ) }
    dend_37 { pt3dadd( 33.3702, -80.5739, -56.7417, 0.83 ) }
    dend_37 { pt3dadd( 35.9233, -83.9594, -57.9867, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 82/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 36.4358, 3.3036, 15.4637, 0.83 ) }
    dend_24 { pt3dadd( 37.9472, 9.65601, 18.7673, 0.83 ) }
    dend_24 { pt3dadd( 40.0062, 16.0346, 21.7041, 0.83 ) }
    dend_24 { pt3dadd( 42.6033, 21.8445, 25.3168, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 86/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 36.4358, 3.3036, 15.4637, 0.83 ) }
    dend_23 { pt3dadd( 40.573, 14.45, 17.8779, 0.83 ) }
    dend_23 { pt3dadd( 46.109, 25.0931, 19.6848, 0.83 ) }
    dend_23 { pt3dadd( 50.1761, 36.5202, 19.4297, 0.83 ) }
    dend_23 { pt3dadd( 52.2032, 48.3719, 21.0472, 0.83 ) }
    dend_23 { pt3dadd( 54.1176, 60.188, 23.0223, 0.83 ) }
    dend_23 { pt3dadd( 55.0813, 72.1452, 24.8339, 0.83 ) }
    dend_23 { pt3dadd( 58.0416, 83.3388, 28.4573, 0.83 ) }
    dend_23 { pt3dadd( 61.7052, 93.5115, 33.96, 0.83 ) }
    dend_23 { pt3dadd( 64.0293, 103.528, 40.3986, 0.83 ) }
    dend_23 { pt3dadd( 68.9705, 113.49, 45.2485, 0.83 ) }
    dend_23 { pt3dadd( 74.3177, 123.751, 48.8974, 0.83 ) }
    dend_23 { pt3dadd( 78.1225, 135.186, 50.2905, 0.83 ) }
    dend_23 { pt3dadd( 82.8972, 145.886, 53.4374, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_23 { pt3dadd( 87.6196, 156.142, 57.8754, 0.83 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 1/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 0.873046, 94.9613, -17.1588, 1.11 ) }
    apic_14 { pt3dadd( 1.77278, 97.7633, -17.4726, 1.11 ) }
    apic_14 { pt3dadd( 4.10556, 105.028, -18.2864, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 4/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 0.873046, 94.9613, -17.1588, 1.11 ) }
    apic_11 { pt3dadd( 3.19658, 98.3901, -14.4027, 0.55 ) }
    apic_11 { pt3dadd( 4.38447, 100.367, -12.7068, 0.55 ) }
    apic_11 { pt3dadd( 6.06448, 103.406, -9.84814, 0.55 ) }
    apic_11 { pt3dadd( 8.50224, 107.872, -5.69276, 0.55 ) }
    apic_11 { pt3dadd( 9.79811, 110.296, -3.41071, 0.55 ) }
    apic_11 { pt3dadd( 11.4266, 113.297, -0.380075, 0.55 ) }
    apic_11 { pt3dadd( 11.9288, 114.335, 0.702459, 0.55 ) }
    apic_11 { pt3dadd( 13.764, 118.426, 5.14779, 0.55 ) }
    apic_11 { pt3dadd( 14.6542, 120.617, 7.56393, 0.55 ) }
    apic_11 { pt3dadd( 15.1385, 121.659, 8.90488, 0.55 ) }
    apic_11 { pt3dadd( 16.2122, 123.437, 11.2292, 0.55 ) }
    apic_11 { pt3dadd( 17.6975, 125.524, 13.943, 0.55 ) }
    apic_11 { pt3dadd( 18.6079, 126.721, 15.4099, 0.55 ) }
    apic_11 { pt3dadd( 19.4362, 127.802, 16.7832, 0.55 ) }
    apic_11 { pt3dadd( 20.3696, 129.111, 18.3604, 0.55 ) }
    apic_11 { pt3dadd( 22.3137, 132.145, 21.6882, 0.55 ) }
    apic_11 { pt3dadd( 23.6179, 134.24, 23.933, 0.55 ) }
    apic_11 { pt3dadd( 24.4489, 135.72, 25.529, 0.55 ) }
    apic_11 { pt3dadd( 25.9747, 138.901, 28.8676, 0.55 ) }
    apic_11 { pt3dadd( 27.3963, 142.326, 32.159, 0.55 ) }
    apic_11 { pt3dadd( 28.0293, 144.104, 33.7836, 0.55 ) }
    apic_11 { pt3dadd( 28.7441, 146.894, 36.323, 0.55 ) }
    apic_11 { pt3dadd( 29.2087, 149.063, 38.3829, 0.28 ) }
    apic_11 { pt3dadd( 29.3228, 149.491, 38.8044, 0.55 ) }
    apic_11 { pt3dadd( 29.6371, 150.733, 39.7859, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -75.0761, -39.9669, -39.9631, 0.55 ) }
    dend_49 { pt3dadd( -71.789, -42.2358, -36.6302, 0.55 ) }
    dend_49 { pt3dadd( -68.5809, -44.3491, -32.744, 0.55 ) }
    dend_49 { pt3dadd( -68.6133, -45.0068, -34.8605, 0.55 ) }
    dend_49 { pt3dadd( -68.2997, -45.7273, -36.4284, 0.55 ) }
    dend_49 { pt3dadd( -68.0259, -46.9973, -38.9559, 0.55 ) }
    dend_49 { pt3dadd( -67.9183, -50.1083, -44.6195, 0.55 ) }
    dend_49 { pt3dadd( -67.9903, -51.4585, -46.9868, 0.83 ) }
    dend_49 { pt3dadd( -68.2677, -53.108, -49.7431, 0.83 ) }
    dend_49 { pt3dadd( -68.749, -54.6246, -52.2568, 0.55 ) }
    dend_49 { pt3dadd( -69.7909, -56.8708, -55.732, 0.55 ) }
    dend_49 { pt3dadd( -71.0061, -59.0801, -59.1252, 0.55 ) }
    dend_49 { pt3dadd( -71.6606, -60.1743, -60.7918, 0.55 ) }
    dend_49 { pt3dadd( -73.1316, -62.1139, -64.0579, 0.28 ) }
    dend_49 { pt3dadd( -75.1407, -64.2838, -68.1952, 0.28 ) }
    dend_49 { pt3dadd( -75.9555, -65.1798, -70.1824, 0.83 ) }
    dend_49 { pt3dadd( -77.8335, -67.103, -75.0723, 0.28 ) }
    dend_49 { pt3dadd( -78.5399, -67.7373, -76.9431, 0.83 ) }
    dend_49 { pt3dadd( -81.0048, -69.675, -83.6135, 0.55 ) }
    dend_49 { pt3dadd( -82.174, -70.5235, -87.0887, 0.55 ) }
    dend_49 { pt3dadd( -83.9588, -72.0023, -94.0515, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -75.0761, -39.9669, -39.9631, 0.55 ) }
    dend_48 { pt3dadd( -76.5369, -40.4047, -41.2407, 0.55 ) }
    dend_48 { pt3dadd( -80.3182, -41.6706, -44.4788, 0.55 ) }
    dend_48 { pt3dadd( -85.522, -43.613, -48.8504, 1.11 ) }
    dend_48 { pt3dadd( -86.84, -44.1452, -49.9091, 0.55 ) }
    dend_48 { pt3dadd( -89.6221, -45.3679, -52.0327, 0.55 ) }
    dend_48 { pt3dadd( -92.3208, -46.5564, -53.9888, 0.55 ) }
    dend_48 { pt3dadd( -93.7337, -47.1475, -54.9288, 0.55 ) }
    dend_48 { pt3dadd( -94.5069, -47.4918, -55.397, 0.55 ) }
    dend_48 { pt3dadd( -96.4694, -48.3613, -56.4516, 0.55 ) }
    dend_48 { pt3dadd( -100.017, -49.7913, -58.3945, 0.28 ) }
    dend_48 { pt3dadd( -101.127, -50.2337, -59.0184, 0.55 ) }
    dend_48 { pt3dadd( -105.312, -51.5318, -61.2845, 0.28 ) }
    dend_48 { pt3dadd( -106.408, -51.8218, -61.8706, 0.55 ) }
    dend_48 { pt3dadd( -109.01, -52.4299, -63.2849, 0.55 ) }
    dend_48 { pt3dadd( -110.59, -52.7548, -64.1562, 0.83 ) }
    dend_48 { pt3dadd( -113.497, -53.2479, -65.7114, 0.28 ) }
    dend_48 { pt3dadd( -116.263, -53.7627, -67.1669, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 69/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 35.9233, -83.9594, -57.9867, 0.55 ) }
    dend_39 { pt3dadd( 35.8217, -87.9593, -63.2235, 0.55 ) }
    dend_39 { pt3dadd( 35.8056, -88.5937, -64.0541, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 72/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 35.9233, -83.9594, -57.9867, 0.55 ) }
    dend_38 { pt3dadd( 37.9131, -86.4926, -55.4306, 0.28 ) }
    dend_38 { pt3dadd( 38.5289, -87.2765, -54.6397, 0.28 ) }
    dend_38 { pt3dadd( 39.0893, -87.99, -53.9198, 0.83 ) }
    dend_38 { pt3dadd( 41.4016, -90.9337, -50.9496, 0.55 ) }
    dend_38 { pt3dadd( 41.9672, -91.6537, -50.2231, 0.55 ) }
    dend_38 { pt3dadd( 42.7618, -92.6653, -49.2024, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 79/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 42.6033, 21.8445, 25.3168, 0.83 ) }
    dend_26 { pt3dadd( 45.1257, 29.0436, 28.6978, 0.83 ) }
    dend_26 { pt3dadd( 47.2702, 35.7595, 33.1605, 0.83 ) }
    dend_26 { pt3dadd( 49.4536, 42.346, 37.7942, 0.83 ) }
    dend_26 { pt3dadd( 52.4754, 47.7211, 43.4152, 0.83 ) }
    dend_26 { pt3dadd( 55.7305, 52.1483, 49.6941, 0.83 ) }
    dend_26 { pt3dadd( 57.4807, 56.3933, 56.6609, 0.83 ) }
    dend_26 { pt3dadd( 60.2365, 60.7849, 63.1983, 0.83 ) }
    dend_26 { pt3dadd( 63.3158, 64.0811, 70.2179, 0.83 ) }
    dend_26 { pt3dadd( 66.9, 67.5165, 76.9238, 0.83 ) }
    dend_26 { pt3dadd( 71.0884, 71.4684, 82.962, 0.83 ) }
    dend_26 { pt3dadd( 74.72, 75.11, 89.5324, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 42.6033, 21.8445, 25.3168, 0.83 ) }
    dend_25 { pt3dadd( 45.3313, 29.9175, 29.2718, 0.83 ) }
    dend_25 { pt3dadd( 49.2187, 37.7326, 32.7458, 0.83 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 94/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 4.10556, 105.028, -18.2864, 1.11 ) }
    apic_16 { pt3dadd( 4.82312, 113.266, -18.2439, 1.11 ) }
    apic_16 { pt3dadd( 4.91319, 118.477, -18.4432, 0.83 ) }
    apic_16 { pt3dadd( 4.85003, 120.909, -18.4579, 0.83 ) }
    apic_16 { pt3dadd( 4.76921, 126.061, -18.4709, 0.83 ) }
    apic_16 { pt3dadd( 4.7969, 129.415, -18.6044, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_16 { pt3dadd( 4.84311, 133.609, -18.8136, 0.83 ) }
    apic_16 { pt3dadd( 4.86276, 136.399, -19.0678, 0.83 ) }
    apic_16 { pt3dadd( 4.69528, 146.101, -19.9977, 0.83 ) }
    apic_16 { pt3dadd( 4.58321, 148.597, -20.1601, 0.83 ) }
    apic_16 { pt3dadd( 4.21653, 152.79, -20.136, 0.83 ) }
    apic_16 { pt3dadd( 4.06695, 155.235, -20.1497, 0.83 ) }
    apic_16 { pt3dadd( 3.99867, 157.347, -20.0947, 0.83 ) }
    apic_16 { pt3dadd( 3.77991, 162.564, -20.0364, 0.83 ) }
    apic_16 { pt3dadd( 3.5431, 166.76, -20.0502, 0.83 ) }
    apic_16 { pt3dadd( 2.94543, 175.793, -19.9999, 0.83 ) }
    apic_16 { pt3dadd( 2.66559, 182.089, -19.9298, 1.11 ) }
    apic_16 { pt3dadd( 2.47985, 189.784, -19.8841, 1.11 ) }
    apic_16 { pt3dadd( 2.49807, 195.225, -19.859, 1.11 ) }
    apic_16 { pt3dadd( 2.56814, 199.454, -19.783, 1.11 ) }
    apic_16 { pt3dadd( 2.71233, 203.358, -19.6832, 1.11 ) }
    apic_16 { pt3dadd( 3.11593, 208.404, -19.4831, 1.11 ) }
    apic_16 { pt3dadd( 3.54985, 212.335, -19.2432, 1.11 ) }
    apic_16 { pt3dadd( 4.17793, 216.856, -18.9925, 1.11 ) }
    apic_16 { pt3dadd( 4.83463, 220.534, -18.7313, 1.11 ) }
    apic_16 { pt3dadd( 5.55587, 224.355, -18.4605, 1.11 ) }
    apic_16 { pt3dadd( 6.47372, 229.175, -18.1468, 1.11 ) }
    apic_16 { pt3dadd( 7.26763, 233.999, -17.9582, 1.11 ) }
    apic_16 { pt3dadd( 8.37309, 241.633, -17.8102, 0.83 ) }
    apic_16 { pt3dadd( 8.64194, 244.917, -17.73, 0.83 ) }
    apic_16 { pt3dadd( 8.69173, 246.474, -17.6837, 0.83 ) }
    apic_16 { pt3dadd( 8.60924, 249.695, -17.533, 0.83 ) }
    apic_16 { pt3dadd( 8.08126, 254.538, -17.2745, 0.83 ) }
    apic_16 { pt3dadd( 7.28399, 258.492, -16.9365, 0.83 ) }
    apic_16 { pt3dadd( 6.48984, 261.705, -16.6704, 0.83 ) }
    apic_16 { pt3dadd( 5.65563, 265.09, -16.3563, 0.83 ) }
    apic_16 { pt3dadd( 5.00457, 268.142, -16.1361, 0.83 ) }
    apic_16 { pt3dadd( 3.96697, 272.968, -15.7226, 0.83 ) }
    apic_16 { pt3dadd( 3.18824, 276.322, -15.4633, 0.83 ) }
    apic_16 { pt3dadd( 2.60899, 279.156, -15.374, 0.83 ) }
    apic_16 { pt3dadd( 2.0481, 281.754, -15.3562, 0.83 ) }
    apic_16 { pt3dadd( 1.42018, 285.047, -15.4841, 0.83 ) }
    apic_16 { pt3dadd( 0.831218, 289.236, -15.7769, 0.83 ) }
    apic_16 { pt3dadd( 0.428974, 292.572, -16.0726, 0.83 ) }
    apic_16 { pt3dadd( 0.115649, 296.749, -16.5587, 0.83 ) }
    apic_16 { pt3dadd( -0.0765928, 302.296, -17.1347, 0.83 ) }
    apic_16 { pt3dadd( -0.211343, 311.528, -17.8659, 0.83 ) }
    apic_16 { pt3dadd( -0.0251648, 319.845, -18.5203, 0.83 ) }
    apic_16 { pt3dadd( 0.272025, 324.677, -18.9271, 0.83 ) }
    apic_16 { pt3dadd( 0.791905, 331.523, -19.3709, 0.83 ) }
    apic_16 { pt3dadd( 1.71058, 341.666, -19.8518, 0.83 ) }
    apic_16 { pt3dadd( 2.12574, 345.232, -19.9203, 0.83 ) }
    apic_16 { pt3dadd( 2.56673, 349.185, -19.8996, 0.83 ) }
    apic_16 { pt3dadd( 2.98153, 352.682, -19.8519, 0.83 ) }
    apic_16 { pt3dadd( 3.51279, 357.001, -19.7699, 0.83 ) }
    apic_16 { pt3dadd( 4.13383, 362.887, -19.6785, 0.83 ) }
    apic_16 { pt3dadd( 4.54639, 366.288, -19.7006, 0.83 ) }
    apic_16 { pt3dadd( 5.00744, 371.406, -19.9386, 0.83 ) }
    apic_16 { pt3dadd( 5.12951, 373.254, -20.0522, 0.83 ) }
    apic_16 { pt3dadd( 5.35807, 378.469, -20.4386, 0.83 ) }
    apic_16 { pt3dadd( 5.42195, 382.205, -20.7374, 0.83 ) }
    apic_16 { pt3dadd( 5.35294, 384.52, -20.9207, 0.83 ) }
    apic_16 { pt3dadd( 4.99883, 390.8, -21.5668, 0.83 ) }
    apic_16 { pt3dadd( 4.59049, 396.265, -22.1365, 0.83 ) }
    apic_16 { pt3dadd( 3.91595, 404.616, -23.2976, 0.83 ) }
    apic_16 { pt3dadd( 3.74556, 406.798, -23.634, 0.83 ) }
    apic_16 { pt3dadd( 3.42741, 412.944, -24.5774, 0.83 ) }
    apic_16 { pt3dadd( 3.39533, 417.286, -25.2283, 0.83 ) }
    apic_16 { pt3dadd( 3.50905, 422.859, -25.9953, 0.83 ) }
    apic_16 { pt3dadd( 3.47709, 427.072, -26.7232, 0.83 ) }
    apic_16 { pt3dadd( 3.50036, 430.289, -27.2455, 0.83 ) }
    apic_16 { pt3dadd( 3.49709, 433.184, -27.5071, 0.83 ) }
    apic_16 { pt3dadd( 3.45287, 434.277, -27.4691, 0.83 ) }
    apic_16 { pt3dadd( 3.18146, 437.61, -27.0741, 0.83 ) }
    apic_16 { pt3dadd( 2.74436, 441.138, -26.5148, 0.83 ) }
    apic_16 { pt3dadd( 2.24798, 447.458, -25.6209, 0.83 ) }
    apic_16 { pt3dadd( 2.07395, 450.099, -25.4839, 0.83 ) }
    apic_16 { pt3dadd( 2.01139, 453.433, -25.5129, 0.83 ) }
    apic_16 { pt3dadd( 2.16125, 457.257, -25.7006, 0.83 ) }
    apic_16 { pt3dadd( 2.4146, 459.695, -25.9557, 0.83 ) }
    apic_16 { pt3dadd( 3.3778, 466.976, -27.0304, 0.83 ) }
    apic_16 { pt3dadd( 4.26509, 473.333, -28.2351, 0.83 ) }
    apic_16 { pt3dadd( 4.69075, 476.384, -28.7473, 0.83 ) }
    apic_16 { pt3dadd( 5.01106, 479.12, -29.1134, 0.83 ) }
    apic_16 { pt3dadd( 5.29559, 483.337, -29.4586, 0.83 ) }
    apic_16 { pt3dadd( 5.40699, 488.411, -29.688, 0.83 ) }
    apic_16 { pt3dadd( 5.40735, 491.132, -29.6597, 0.83 ) }
    apic_16 { pt3dadd( 5.43815, 501.065, -29.2377, 0.83 ) }
    apic_16 { pt3dadd( 5.39596, 503.564, -29.0416, 0.83 ) }
    apic_16 { pt3dadd( 5.26799, 507.004, -28.5959, 0.83 ) }
    apic_16 { pt3dadd( 5.20885, 508.426, -28.3534, 0.83 ) }
    apic_16 { pt3dadd( 5.00995, 513.746, -27.2873, 0.83 ) }
    apic_16 { pt3dadd( 4.85038, 517.519, -26.3561, 0.83 ) }
    apic_16 { pt3dadd( 4.68657, 520.884, -25.3439, 0.83 ) }
    apic_16 { pt3dadd( 4.25182, 528.55, -23.3057, 0.83 ) }
    apic_16 { pt3dadd( 3.79842, 533.66, -22.0396, 0.83 ) }
    apic_16 { pt3dadd( 3.35077, 537.233, -21.3089, 0.83 ) }
    apic_16 { pt3dadd( 2.81473, 540.207, -20.7492, 0.83 ) }
    apic_16 { pt3dadd( 2.40423, 542.573, -20.3588, 0.83 ) }
    apic_16 { pt3dadd( 1.34906, 548.429, -19.4979, 0.83 ) }
    apic_16 { pt3dadd( 0.28943, 554.975, -18.6627, 0.83 ) }
    apic_16 { pt3dadd( -1.4337, 564.522, -17.4558, 0.83 ) }
    apic_16 { pt3dadd( -2.19498, 568.47, -17.0388, 0.83 ) }
    apic_16 { pt3dadd( -3.40459, 574.605, -16.4493, 0.83 ) }
    apic_16 { pt3dadd( -5.817, 584.6, -15.4999, 0.83 ) }
    apic_16 { pt3dadd( -7.41483, 590.571, -14.9973, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_16 { pt3dadd( -8.63664, 594.775, -14.8481, 0.83 ) }
    apic_16 { pt3dadd( -10.6496, 600.87, -14.8582, 0.83 ) }
    apic_16 { pt3dadd( -11.5124, 603.24, -14.9593, 0.83 ) }
    apic_16 { pt3dadd( -14.1336, 609.371, -15.5173, 0.55 ) }
    apic_16 { pt3dadd( -15.9813, 613.593, -16.1505, 0.55 ) }
    apic_16 { pt3dadd( -16.8351, 615.625, -16.4063, 0.55 ) }
    apic_16 { pt3dadd( -18.5975, 620.727, -17.1083, 0.55 ) }
    apic_16 { pt3dadd( -19.6487, 624.017, -17.5475, 0.55 ) }
    apic_16 { pt3dadd( -20.866, 627.862, -17.9869, 0.55 ) }
    apic_16 { pt3dadd( -22.4173, 633.34, -18.4967, 0.55 ) }
    apic_16 { pt3dadd( -24.7597, 640.489, -18.9694, 0.55 ) }
    apic_16 { pt3dadd( -26.7647, 646.232, -19.2961, 0.55 ) }
    apic_16 { pt3dadd( -27.6695, 648.734, -19.4023, 0.55 ) }
    apic_16 { pt3dadd( -29.6435, 654.223, -19.5109, 0.55 ) }
    apic_16 { pt3dadd( -30.6796, 656.823, -19.4195, 0.55 ) }
    apic_16 { pt3dadd( -32.6682, 661.868, -18.8658, 0.55 ) }
    apic_16 { pt3dadd( -34.4962, 666.407, -18.1499, 0.55 ) }
    apic_16 { pt3dadd( -35.6307, 669.422, -17.5735, 0.55 ) }
    apic_16 { pt3dadd( -36.4815, 671.888, -17.0832, 0.55 ) }
    apic_16 { pt3dadd( -37.1594, 673.93, -16.6894, 0.55 ) }
    apic_16 { pt3dadd( -39.9934, 683.521, -15.1592, 0.55 ) }
    apic_16 { pt3dadd( -40.9611, 687.24, -14.6967, 0.55 ) }
    apic_16 { pt3dadd( -42.6655, 693.774, -14.145, 0.55 ) }
    apic_16 { pt3dadd( -43.7117, 698.09, -14.0524, 0.55 ) }
    apic_16 { pt3dadd( -44.269, 700.408, -14.0516, 0.55 ) }
    apic_16 { pt3dadd( -46.8122, 711.301, -14.3482, 0.55 ) }
    apic_16 { pt3dadd( -47.6396, 714.704, -14.5724, 0.55 ) }
    apic_16 { pt3dadd( -48.7921, 720.064, -14.9846, 0.55 ) }
    apic_16 { pt3dadd( -50.0183, 725.446, -15.6683, 0.28 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 29/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 4.10556, 105.028, -18.2864, 1.11 ) }
    apic_15 { pt3dadd( 7.99129, 104.132, -20.7047, 0.83 ) }
    apic_15 { pt3dadd( 13.5586, 102.244, -24.4182, 0.55 ) }
    apic_15 { pt3dadd( 17.4005, 100.756, -27.1027, 0.55 ) }
    apic_15 { pt3dadd( 24.1809, 97.8888, -31.9568, 0.55 ) }
    apic_15 { pt3dadd( 27.3574, 96.4344, -34.2668, 0.55 ) }
    apic_15 { pt3dadd( 29.3869, 95.4322, -35.7486, 0.55 ) }
    apic_15 { pt3dadd( 33.6385, 92.8749, -39.2917, 0.55 ) }
    apic_15 { pt3dadd( 36.0492, 91.1348, -41.3521, 0.55 ) }
    apic_15 { pt3dadd( 38.7608, 89.1822, -43.6157, 0.55 ) }
    apic_15 { pt3dadd( 40.4695, 87.9277, -45.0061, 0.55 ) }
    apic_15 { pt3dadd( 46.4773, 83.8328, -49.4446, 0.55 ) }
    apic_15 { pt3dadd( 49.8798, 81.7449, -51.8764, 0.55 ) }
    apic_15 { pt3dadd( 56.2094, 78.3994, -56.208, 0.55 ) }
    apic_15 { pt3dadd( 59.0702, 77.0805, -58.0647, 0.55 ) }
    apic_15 { pt3dadd( 61.0504, 76.2489, -59.3459, 0.55 ) }
    apic_15 { pt3dadd( 62.7166, 75.6292, -60.4098, 0.55 ) }
    apic_15 { pt3dadd( 65.6255, 74.7899, -62.2721, 0.55 ) }
    apic_15 { pt3dadd( 69.943, 73.828, -65.1318, 0.55 ) }
    apic_15 { pt3dadd( 72.3273, 73.4136, -66.9485, 0.55 ) }
    apic_15 { pt3dadd( 76.0539, 72.6369, -70.2521, 0.55 ) }
    apic_15 { pt3dadd( 77.881, 72.2959, -71.945, 0.55 ) }
    apic_15 { pt3dadd( 80.871, 71.7976, -74.8953, 0.55 ) }
    apic_15 { pt3dadd( 83.5537, 71.4653, -77.647, 0.55 ) }
    apic_15 { pt3dadd( 85.3018, 71.3143, -79.5975, 0.55 ) }
    apic_15 { pt3dadd( 88.8908, 71.2481, -83.6376, 0.55 ) }
    apic_15 { pt3dadd( 91.0635, 71.4175, -86.0156, 0.55 ) }
    apic_15 { pt3dadd( 94.4002, 71.738, -89.7541, 0.55 ) }
    apic_15 { pt3dadd( 96.447, 71.9083, -92.0503, 0.55 ) }
    apic_15 { pt3dadd( 98.5445, 72.2056, -94.3887, 0.55 ) }
    apic_15 { pt3dadd( 100.398, 72.6383, -96.4688, 0.28 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 60/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 29.6371, 150.733, 39.7859, 0.55 ) }
    apic_13 { pt3dadd( 28.9021, 151.845, 41.9233, 0.55 ) }
    apic_13 { pt3dadd( 28.2604, 152.816, 43.7893, 0.55 ) }
    apic_13 { pt3dadd( 27.8526, 153.434, 44.9751, 0.28 ) }
    apic_13 { pt3dadd( 27.5218, 153.934, 45.9373, 0.28 ) }
    apic_13 { pt3dadd( 26.2447, 155.868, 49.6513, 0.28 ) }
    apic_13 { pt3dadd( 25.6673, 156.742, 51.3302, 0.28 ) }
    apic_13 { pt3dadd( 23.1368, 162.205, 60.9164, 0.28 ) }
    apic_13 { pt3dadd( 20.3194, 166.412, 71.0411, 0.28 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 69/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 29.6371, 150.733, 39.7859, 0.55 ) }
    apic_12 { pt3dadd( 30.8267, 153.328, 38.9693, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_31, dend_28, dend_11, dend_0, apic_2, apic_1, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, apic_4, apic_3, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, apic_8, apic_5, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, apic_10, apic_9, apic_7, apic_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, apic_14, apic_11, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25, apic_16, apic_15, apic_13, apic_12]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_45 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_47 ModelViewParmSubset_7.append()
    dend_46 ModelViewParmSubset_7.append()
    dend_44 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    dend_49 ModelViewParmSubset_7.append()
    dend_48 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_31, dend_28, dend_11, dend_0, dend_33, dend_32, dend_30, dend_29, dend_19, dend_12, dend_4, dend_1, dend_41, dend_34, dend_27, dend_20, dend_16, dend_13, dend_8, dend_5, dend_3, dend_2, dend_45, dend_42, dend_36, dend_35, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_10, dend_9, dend_7, dend_6, dend_47, dend_46, dend_44, dend_43, dend_40, dend_37, dend_24, dend_23, dend_49, dend_48, dend_39, dend_38, dend_26, dend_25]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_33 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_45 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_47 ModelViewParmSubset_8.append()
    dend_46 ModelViewParmSubset_8.append()
    dend_44 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_49 ModelViewParmSubset_8.append()
    dend_48 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    apic_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    apic_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_2 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_14 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_13 OneSecGrp_SectionRef_69.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_19, dend_19, dend_19, dend_12, dend_12, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 3
    apic_1 nseg = 3
    dend_32 nseg = 9
    dend_30 nseg = 7
    dend_29 nseg = 5
    apic_3 nseg = 5
    dend_34 nseg = 3
    dend_27 nseg = 7
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_5 nseg = 3
    apic_8 nseg = 3
    dend_42 nseg = 3
    dend_35 nseg = 5
    dend_21 nseg = 7
    dend_18 nseg = 5
    dend_14 nseg = 5
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_7 nseg = 3
    dend_6 nseg = 3
    apic_9 nseg = 3
    apic_7 nseg = 7
    apic_6 nseg = 7
    dend_47 nseg = 3
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 7
    dend_23 nseg = 9
    apic_11 nseg = 5
    dend_49 nseg = 5
    dend_48 nseg = 3
    dend_26 nseg = 5
    apic_16 nseg = 31
    apic_15 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SP_1c98df1fde_0_0


