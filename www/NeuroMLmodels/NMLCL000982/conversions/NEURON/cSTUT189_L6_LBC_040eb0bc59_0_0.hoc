// Cell: cSTUT189_L6_LBC_040eb0bc59_0_0
/*
{
  "id" : "cSTUT189_L6_LBC_040eb0bc59_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.84529, -4.87297, 0.0, 6.22486", "-6.02577, -4.47098, 0.0, 11.3263", "-5.20624, -4.06899, 0.0, 13.1262", "-4.38672, -3.66701, 0.0, 14.4968", "-3.56719, -3.26502, 0.0, 15.3488", "-2.74767, -2.86303, 0.0, 15.7521", "-1.92815, -2.46104, 0.0, 15.7984", "-1.10862, -2.05905, 0.0, 15.859", "-0.289096, -1.65706, 0.0, 15.958", "0.530429, -1.25507, 0.0, 16.0571", "1.34995, -0.853086, 0.0, 16.1345", "2.16948, -0.451097, 0.0, 16.3639", "2.989, -0.0491089, 0.0, 16.0828", "3.80853, 0.35288, 0.0, 15.4226", "4.62805, 0.754868, 0.0, 14.6331", "5.44758, 1.15686, 0.0, 13.8581", "6.2671, 1.55885, 0.0, 13.096", "7.08663, 1.96083, 0.0, 11.6592", "7.90615, 2.36282, 0.0, 9.60018", "8.72568, 2.76481, 0.0, 6.5333", "9.5452, 3.1668, 0.0, 3.66685" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "10.8103, -0.983735, -5.53, 2.42", "10.8103, -0.983735, -5.53, 2.42", "12.6646, 0.306638, -6.74602, 2.28", "14.4231, 1.71952, -7.88102, 2.06", "15.5817, 2.70181, -8.62414, 1.76", "17.0516, 4.0051, -9.52217, 2.06", "18.9657, 5.74871, -10.6401, 1.54", "20.4012, 7.15835, -11.4198, 1.54", "20.8852, 7.68528, -11.6629, 1.62", "21.9919, 8.97088, -12.1686, 1.62", "22.9967, 10.1771, -12.6264, 1.18", "24.0133, 11.3568, -13.1128, 2.28", "25.1023, 12.5019, -13.588, 2.64", "26.3598, 13.6551, -14.1003, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.5103, -3.71374, -3.85, 5.0", "8.5103, -3.71374, -3.85, 5.0", "9.12152, -5.05863, -4.44954, 1.98", "9.41561, -5.70573, -4.73801, 1.98", "9.89682, -6.76453, -5.21002, 1.47", "10.4185, -7.91237, -5.72171, 2.06", "10.9271, -9.03149, -6.22061, 2.57", "11.161, -9.50977, -6.42677, 3.01" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.58973, -10.022, 0.0, 3.01", "-1.58973, -10.022, 0.0, 3.01", "-1.5477, -12.4992, 0.0417576, 1.76", "-1.51416, -14.4763, 0.0750841, 2.2", "-1.48625, -16.121, 0.102808, 2.86", "-1.46616, -17.3054, 0.122774, 3.09", "-1.45071, -18.2157, 0.138118, 3.09", "-1.44754, -18.6789, 0.148138, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.39973, 1.63901, -0.84, 3.31", "-7.39973, 1.63901, -0.84, 3.31", "-8.72054, 2.38574, -0.95867, 1.76", "-9.52671, 2.84152, -1.0311, 1.98", "-10.1316, 3.18349, -1.08545, 1.98", "-11.0911, 3.72593, -1.17166, 2.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.35027, -0.310981, 9.36, 1.91", "6.41895, -0.286605, 9.40693, 1.91", "7.73986, 0.182229, 10.3095, 1.91", "9.24465, 0.716328, 11.3376, 1.91", "10.3161, 1.09663, 12.0697, 2.42", "11.2755, 1.43714, 12.7252, 2.57", "11.588, 1.54806, 12.9387, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.10969, 1.54153, 6.17, 2.2", "-4.2152, 1.61004, 6.25754, 2.2", "-5.49285, 2.43976, 7.31754, 2.2", "-6.73408, 3.24584, 8.34733, 2.06", "-7.59605, 3.8056, 9.06246, 1.84", "-8.53105, 4.41282, 9.83819, 1.91", "-9.75637, 5.20854, 10.8548, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.5452, 3.1668, 0.0, 0.993145", "23.0123, 9.77261, 0.0, 0.993145", "36.4794, 16.3784, 0.0, 0.993145" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "26.3598, 13.6551, -14.1003, 1.47", "27.3863, 13.5778, -15.3349, 1.47", "28.6604, 13.3883, -16.6857, 1.47", "30.0032, 13.0878, -18.019, 1.47", "30.3773, 12.975, -18.3895, 0.81", "30.6012, 12.8964, -18.6223, 0.81", "30.808, 12.8198, -18.8534, 0.81", "31.6816, 12.4497, -19.9249, 1.18", "31.9957, 12.2989, -20.2696, 1.18", "32.4337, 12.1858, -20.6128, 1.18", "33.0119, 12.1546, -21.0445, 1.18", "33.6147, 12.1484, -21.4863, 1.18", "34.1256, 12.1415, -21.8772, 1.18", "35.2656, 12.144, -22.8431, 0.73", "36.5671, 12.1719, -24.0357, 1.03", "37.1549, 12.1943, -24.5912, 1.03", "37.7285, 12.197, -25.0702, 1.1", "38.7019, 12.1238, -25.7519, 1.1", "39.5259, 12.0057, -26.2273, 1.1", "40.3128, 11.8797, -26.4968, 1.1", "40.8184, 11.7973, -26.6247, 1.1", "42.2474, 11.6058, -27.071, 1.1", "44.1191, 11.4272, -27.7902, 0.66", "45.5955, 11.2235, -28.6323, 0.81", "46.4495, 11.0753, -29.2378, 1.4", "47.6145, 10.8467, -30.1536, 2.5", "49.4986, 10.4506, -31.7948, 0.66", "50.9054, 10.1663, -33.1432, 2.79", "53.838, 9.63534, -36.2155, 0.88", "54.8113, 9.48791, -37.3205, 0.95", "55.9877, 9.35575, -38.7402, 2.42", "57.3603, 9.30323, -40.4658, 0.95", "58.1363, 9.30838, -41.509, 1.69", "59.7808, 9.40407, -43.731, 0.66", "60.6483, 9.49673, -44.8267, 1.62", "61.3642, 9.56514, -45.726, 1.62", "62.3559, 9.65544, -46.9492, 0.88", "64.005, 9.73931, -48.7192, 0.88", "64.7906, 9.7095, -49.4224, 1.62", "66.0794, 9.56369, -50.3376, 0.66", "66.6196, 9.47768, -50.6729, 0.29", "67.9757, 9.24919, -51.4298, 1.47", "69.6157, 9.01475, -52.253, 0.07", "71.2949, 8.92772, -53.0729, 1.47", "71.7948, 8.935, -53.3358, 1.47", "72.7957, 9.01411, -53.8892, 0.07", "73.609, 9.11384, -54.3213, 1.32", "74.0776, 9.20016, -54.5455, 1.32", "75.6151, 9.61797, -55.3283, 0.22", "76.5638, 9.90342, -55.944, 1.84", "76.8352, 9.98313, -56.1731, 2.2", "78.409, 10.3878, -57.825, 0.22", "79.189, 10.5464, -58.7503, 1.1", "80.7812, 10.7923, -60.7514, 1.47", "82.4026, 10.9318, -62.8942, 2.57", "83.618, 10.9532, -64.5604, 2.57", "85.8064, 10.8262, -67.5597, 0.73", "86.7475, 10.6972, -68.8739, 0.15", "87.0914, 10.6305, -69.324, 0.15", "87.7737, 10.4875, -70.0652, 1.91", "88.1724, 10.412, -70.4604, 1.91", "89.3898, 10.213, -71.5854, 1.1", "90.8373, 10.0358, -72.9091, 0.15", "91.0731, 10.0268, -73.1272, 0.15", "92.4922, 10.0255, -74.4757, 1.69", "94.2069, 10.0526, -76.1029, 1.25", "95.0176, 10.0704, -76.8682, 1.69", "96.3969, 10.1074, -78.208, 0.59", "97.3079, 10.1349, -79.1093, 0.29", "98.7767, 10.2053, -80.6586, 2.42", "100.509, 10.3024, -82.5182, 0.88", "100.837, 10.3287, -82.8669, 1.1", "101.866, 10.4018, -83.958, 1.25", "102.698, 10.4533, -84.7565, 1.4", "104.378, 10.5092, -86.1623, 0.66", "105.5, 10.5385, -86.9345, 1.1", "106.684, 10.5131, -87.602, 0.29", "107.925, 10.4448, -88.1797, 1.91", "109.6, 10.3262, -88.7927, 0.22", "111.115, 10.1948, -89.2489, 0.81", "111.915, 10.1239, -89.4441, 0.88", "113.09, 10.0085, -89.7116, 0.07", "113.875, 9.92077, -89.8898, 0.07", "115.169, 9.77202, -90.1869, 1.54", "116.735, 9.59439, -90.6142, 0.07", "117.716, 9.48902, -90.9424, 1.1", "118.548, 9.39881, -91.255, 1.18", "119.789, 9.25146, -91.7457, 0.29", "120.883, 9.09989, -92.2257, 1.03", "122.179, 8.90589, -92.8583, 1.69", "123.651, 8.68398, -93.6617, 0.37", "124.757, 8.51519, -94.3215, 0.07", "126.229, 8.32738, -95.2516, 1.62", "127.725, 8.18647, -96.2597, 0.22", "128.938, 8.12422, -97.1298, 0.51", "129.842, 8.16245, -97.8116, 0.95", "130.837, 8.38588, -98.6598, 1.47", "131.595, 8.72589, -99.4117, 1.47", "132.802, 9.45471, -100.697, 0.22", "133.291, 9.80111, -101.215, 0.22", "134.24, 10.5493, -102.271, 1.84", "135.491, 11.558, -103.764, 0.44", "136.586, 12.4203, -105.209, 0.22", "137.109, 12.7753, -105.917, 0.22", "137.478, 12.986, -106.389, 0.66", "138.585, 13.5033, -107.73, 0.66", "139.948, 14.0103, -109.265, 1.91", "141.464, 14.4399, -110.893, 2.42", "142.968, 14.7355, -112.431, 2.28", "144.261, 14.9065, -113.662, 0.66", "144.596, 14.9213, -113.965, 0.22", "145.414, 14.8783, -114.654, 0.22", "146.46, 14.6858, -115.531, 0.73", "147.533, 14.2411, -116.566, 0.66", "148.128, 13.7731, -117.373, 0.66", "148.557, 13.2766, -118.197, 0.66", "148.972, 12.7513, -119.326, 0.66", "149.111, 12.5903, -119.866, 0.66", "149.369, 12.5133, -121.077, 0.66", "149.548, 12.7195, -121.82, 0.66", "149.751, 13.0387, -122.296, 0.66", "150.358, 14.0119, -123.202, 0.73", "150.878, 14.8188, -123.826, 0.59", "151.28, 15.403, -124.257, 0.29", "152.206, 16.6833, -125.15, 0.29", "152.732, 17.3268, -125.61, 1.1", "154.054, 18.7388, -126.651, 0.29", "154.678, 19.3054, -127.08, 0.29", "155.457, 19.8891, -127.611, 0.29", "156.547, 20.5268, -128.342, 1.4", "157.833, 21.0283, -129.177, 0.29", "158.522, 21.1835, -129.574, 0.29", "159.573, 21.2131, -130.057, 0.29", "161.054, 21.1445, -130.708, 0.15", "161.747, 21.0432, -130.983, 0.15", "163.068, 20.6183, -131.419, 0.15", "164.528, 19.8543, -131.722, 0.15", "165.735, 19.0159, -131.793, 0.15" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "26.3598, 13.6551, -14.1003, 1.69", "26.6973, 14.5225, -14.3315, 1.69", "26.9469, 15.006, -14.4616, 1.4", "27.3175, 15.5959, -14.6167, 1.4", "27.5474, 15.9197, -14.7009, 1.32", "27.8728, 16.3653, -14.8131, 0.95", "28.2918, 16.9394, -14.9577, 0.66", "28.6847, 17.404, -15.0828, 1.47", "29.0105, 17.7543, -15.1891, 1.91", "29.4709, 18.2142, -15.3592, 0.66", "29.7854, 18.53, -15.4955, 0.37", "29.9231, 18.6682, -15.5592, 0.37", "30.3411, 19.0742, -15.7458, 1.1", "30.7037, 19.4277, -15.8969, 1.25", "31.1392, 19.8476, -16.0566, 0.95", "31.5985, 20.2791, -16.2005, 1.76", "32.2013, 20.8578, -16.3567, 2.06", "32.8671, 21.532, -16.4933, 2.57", "33.2052, 21.904, -16.5421, 2.57", "33.8671, 22.7032, -16.6093, 0.44", "34.2222, 23.1707, -16.6507, 0.22", "34.5008, 23.5662, -16.6952, 0.22", "34.7003, 23.8746, -16.7446, 0.22", "34.916, 24.2244, -16.822, 1.03", "35.1876, 24.666, -16.945, 1.76", "35.612, 25.3553, -17.1943, 1.54", "35.951, 25.8849, -17.4263, 1.54", "36.2842, 26.3767, -17.6667, 1.84", "36.5596, 26.7762, -17.8676, 1.98", "36.6995, 26.9761, -17.9691, 1.98", "37.066, 27.4888, -18.2262, 0.95", "37.5329, 28.1315, -18.5335, 0.59", "37.8076, 28.4913, -18.7063, 0.81", "38.0954, 28.8423, -18.8694, 0.88", "38.5594, 29.3475, -19.1003, 0.59", "38.8845, 29.6578, -19.2435, 1.1", "39.3772, 30.0812, -19.4194, 2.06", "39.8345, 30.4333, -19.548, 1.4", "40.3146, 30.7805, -19.6597, 0.66", "40.789, 31.108, -19.7622, 0.29", "41.4728, 31.5537, -19.8859, 1.91", "41.8432, 31.7859, -19.9411, 2.57", "42.3774, 32.0988, -19.9958, 2.28", "42.962, 32.4328, -20.0154, 1.69" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "11.161, -9.50977, -6.42677, 1.1", "14.0782, -8.63525, -7.55581, 1.1", "15.9813, -8.01284, -8.35026, 0.81", "17.3128, -7.59903, -8.94204, 0.95", "19.6956, -6.93565, -10.0024, 2.06", "21.8527, -6.36189, -10.9363, 1.18", "23.5168, -5.9409, -11.6383, 0.73", "24.343, -5.73597, -11.9888, 0.95", "25.7159, -5.40155, -12.5554, 1.18", "27.669, -4.97925, -13.3416, 0.51", "28.8507, -4.76795, -13.8191, 0.51", "30.0805, -4.64727, -14.2746, 1.84", "32.2383, -4.50327, -14.9369, 2.5" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "11.161, -9.50977, -6.42677, 1.98", "11.0367, -11.2157, -7.44041, 1.98", "10.9552, -12.335, -8.10554, 1.62", "10.7883, -14.6253, -9.46646, 1.18", "10.6132, -17.0287, -10.8946, 1.76" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.44754, -18.6789, 0.148138, 2.06", "-2.54921, -20.0163, -0.1038, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.44754, -18.6789, 0.148138, 1.03", "-1.13272, -20.219, 0.420625, 1.03", "-0.887819, -21.4171, 0.632585, 1.03", "-0.685039, -22.4091, 0.808098, 1.03", "-0.482399, -23.4005, 0.983491, 1.25" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.0911, 3.72593, -1.17166, 0.95", "-11.3422, 3.6716, -0.74479, 0.95", "-12.5063, 3.5064, 0.669604, 0.95", "-13.1105, 3.44167, 1.27625, 1.1", "-14.1736, 3.35515, 2.20701, 1.25", "-16.5065, 3.21617, 4.04844, 0.95", "-17.7433, 3.17297, 4.94849, 0.95", "-19.4931, 3.20293, 6.04985, 0.66", "-20.1579, 3.23833, 6.41505, 0.37", "-21.2635, 3.32451, 7.00275, 1.18", "-21.8452, 3.38046, 7.29094, 1.54", "-23.2564, 3.51929, 7.9845, 0.73", "-24.5549, 3.60852, 8.7634, 0.66", "-25.6296, 3.6693, 9.43391, 0.51", "-26.6254, 3.70264, 10.0909, 0.81", "-27.4321, 3.70975, 10.6311, 1.18", "-28.5015, 3.71213, 11.3629, 0.88", "-29.0834, 3.72058, 11.7791, 1.32", "-30.3926, 3.75801, 12.7917, 0.44", "-31.6107, 3.84028, 13.9386, 0.95", "-32.3338, 3.90803, 14.807, 0.95", "-32.7587, 3.95884, 15.4377, 0.95", "-33.3087, 3.99345, 16.3816, 0.95", "-33.7463, 3.93473, 17.2812, 0.95", "-34.2781, 3.73408, 18.7336, 0.95", "-34.7216, 3.45565, 20.0392, 0.95", "-35.0449, 3.14179, 21.0649, 0.73", "-35.3999, 2.75814, 21.9193, 1.03", "-35.6967, 2.4731, 22.4008, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.0911, 3.72593, -1.17166, 2.13", "-11.7919, 4.11652, -1.30983, 2.13", "-12.849, 4.70574, -1.51829, 2.13", "-13.6471, 5.15058, -1.67566, 1.84", "-14.7789, 5.7814, -1.89883, 2.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.588, 1.54806, 12.9387, 1.62", "13.1914, 2.30123, 14.6298, 1.62", "14.971, 3.16792, 16.4363, 0.88", "16.5384, 3.91983, 17.9024, 1.32", "17.3877, 4.38585, 18.6522, 2.06", "18.7999, 5.26277, 19.8389, 1.47", "20.1261, 6.14121, 20.9188, 1.76", "21.3442, 7.05607, 21.8913, 1.4", "22.3207, 7.90663, 22.6039, 0.88", "23.565, 9.16709, 23.4835, 0.81", "24.4816, 10.137, 24.0951, 0.66", "25.5106, 11.228, 24.7352, 0.81", "26.6945, 12.4645, 25.4212, 1.69", "28.1415, 13.9911, 26.2352, 1.69", "29.6031, 15.5281, 27.0551, 2.2", "31.1503, 17.0445, 27.8562, 0.73", "32.1875, 18.0675, 28.34, 0.59", "33.3395, 19.2637, 28.8566, 0.66", "34.3339, 20.287, 29.2558, 0.73", "34.9225, 20.8835, 29.4982, 0.59", "36.0457, 22.0765, 29.973, 0.59", "36.6541, 22.8013, 30.2703, 0.51", "38.0784, 24.6306, 31.0368, 0.51" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "11.588, 1.54806, 12.9387, 0.81", "13.1155, 0.900151, 13.3031, 0.81", "14.5327, 0.300195, 13.7472, 0.66", "15.7464, -0.226367, 14.1567, 0.73", "16.6611, -0.647569, 14.4858, 0.81", "17.361, -0.982775, 14.74, 0.73", "18.1305, -1.34865, 15.0022, 0.81", "19.1078, -1.80538, 15.3395, 0.81", "19.6473, -2.05519, 15.5227, 0.73", "20.4626, -2.42806, 15.7915, 0.44", "21.3746, -2.82775, 16.0576, 1.84", "22.6329, -3.38082, 16.405, 0.95", "23.5252, -3.78893, 16.623, 0.44", "24.0264, -4.03308, 16.733, 0.37", "24.7388, -4.37304, 16.8997, 0.81", "25.2327, -4.60711, 17.0164, 1.32", "25.9957, -5.00577, 17.224, 1.47", "26.6826, -5.45213, 17.4539, 1.47", "27.4071, -6.02547, 17.6983, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-9.75637, 5.20854, 10.8548, 1.47", "-11.6765, 6.39922, 11.1746, 1.47", "-13.0955, 7.29047, 11.4189, 1.1", "-14.11, 7.9277, 11.5935, 1.1", "-15.4843, 8.7909, 11.8302, 1.1", "-16.4467, 9.3954, 11.9959, 1.69", "-16.867, 9.65937, 12.0682, 2.35", "-18.2345, 10.5979, 12.3334, 2.35" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.75637, 5.20854, 10.8548, 1.32", "-11.6538, 4.9847, 11.2566, 1.32", "-12.8879, 4.90121, 11.3782, 0.88", "-13.5221, 4.88626, 11.4066, 0.95", "-14.176, 4.8992, 11.4167, 1.03", "-14.7573, 4.91949, 11.4372, 1.32", "-16.1161, 4.99886, 11.5195, 2.13", "-17.5199, 5.16994, 11.6108, 0.73", "-18.4987, 5.3044, 11.7118, 0.59", "-19.6958, 5.45703, 11.877, 0.59", "-20.4612, 5.51908, 12.0229, 0.88", "-21.4575, 5.56079, 12.2773, 1.1", "-22.4723, 5.5501, 12.6194, 0.88", "-23.9124, 5.41641, 13.1565, 0.81", "-25.1076, 5.20763, 13.6003, 0.81", "-26.2857, 4.93379, 14.0308, 0.88", "-27.3484, 4.63354, 14.3728, 0.88", "-28.3871, 4.28029, 14.6989, 0.44", "-29.4264, 3.87846, 15.0051, 0.44", "-30.0725, 3.61371, 15.2002, 0.66", "-30.8049, 3.33174, 15.4208, 0.81", "-32.0312, 2.87038, 15.7472, 1.1", "-32.5057, 2.68222, 15.8629, 1.1", "-33.4331, 2.32037, 16.0949, 0.66", "-34.3697, 1.95257, 16.3447, 0.59", "-35.0354, 1.644, 16.5195, 0.66", "-35.9543, 1.1272, 16.7367, 0.37", "-36.551, 0.730988, 16.8704, 0.37", "-37.1607, 0.291067, 16.9909, 1.1", "-37.5195, -0.00329301, 17.0593, 1.03", "-38.2193, -0.681282, 17.1594, 0.22", "-38.6919, -1.18397, 17.219, 0.44", "-39.0741, -1.5816, 17.2508, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.4794, 16.3784, 0.0, 0.797982", "49.9466, 22.9842, 0.0, 0.797982", "63.4137, 29.5901, 0.0, 0.797982" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "42.962, 32.4328, -20.0154, 1.03", "43.0126, 33.4369, -20.4327, 1.03", "43.0505, 34.4967, -21.1044, 0.51", "43.0746, 35.0809, -21.5195, 0.51", "43.147, 35.9562, -22.1512, 1.18", "43.2445, 36.6368, -22.6717, 1.62", "43.3862, 37.2624, -23.1667, 1.91", "43.7788, 38.3981, -24.2416, 0.73", "43.9742, 38.7583, -24.622, 0.66", "44.3523, 39.2763, -25.1507, 0.81", "44.8373, 39.8239, -25.6511, 0.59", "45.4123, 40.4086, -26.1204, 1.1", "45.9459, 40.9353, -26.4964, 2.06", "46.5527, 41.5426, -26.8668, 2.06", "47.1314, 42.1581, -27.2312, 1.62", "47.6167, 42.7441, -27.53, 0.81", "48.3613, 43.7471, -27.9876, 0.37", "48.844, 44.4362, -28.3002, 0.37", "49.1481, 44.8706, -28.4921, 1.32", "49.6187, 45.5015, -28.7769, 2.2", "50.432, 46.4561, -29.2292, 1.76", "51.4392, 47.5321, -29.742, 0.07", "52.0884, 48.1684, -30.0437, 1.1", "52.5283, 48.5688, -30.2235, 2.35", "53.4855, 49.4108, -30.577, 1.69", "54.3779, 50.1727, -30.8762, 0.37", "55.1085, 50.7784, -31.1058, 0.59", "55.9238, 51.4662, -31.3148, 0.59", "56.8553, 52.2626, -31.5385, 2.06", "57.4698, 52.8056, -31.6893, 2.06", "58.4856, 53.7, -31.9274, 1.18", "59.1975, 54.3089, -32.0915, 0.59", "60.2519, 55.1711, -32.347, 0.29", "61.6281, 56.2864, -32.7108, 2.86", "62.8971, 57.3248, -33.0841, 0.29", "63.5546, 57.8779, -33.2973, 0.29", "64.2158, 58.4832, -33.5434, 0.44", "64.8488, 59.1445, -33.828, 1.1", "65.2739, 59.6719, -34.0773, 1.98", "65.5139, 60.0382, -34.2532, 2.13", "65.8127, 60.5879, -34.5208, 2.13", "66.1683, 61.3943, -34.9039, 2.13", "66.5999, 62.6026, -35.4665, 0.37", "66.8669, 63.5115, -35.8789, 0.15", "67.0043, 64.073, -36.1439, 0.15", "67.1711, 64.963, -36.5868, 1.1", "67.2581, 65.6049, -36.9144, 2.06", "67.3265, 66.7111, -37.4904, 0.88", "67.3119, 67.3028, -37.7991, 0.15", "67.2842, 67.8792, -38.1038, 0.22", "67.2583, 68.529, -38.465, 0.22", "67.2527, 69.0633, -38.766, 0.22", "67.2959, 69.7938, -39.1729, 1.1", "67.34, 70.1312, -39.372, 1.32", "67.4402, 70.6566, -39.6822, 0.81", "67.5792, 71.2531, -40.0289, 0.22", "67.7144, 71.7214, -40.2965, 0.22", "67.9688, 72.5316, -40.7985, 1.54", "68.1732, 73.1603, -41.2069, 1.54", "68.4642, 74.0798, -41.8071, 0.15", "68.6537, 74.7058, -42.2105, 0.07", "68.8353, 75.2738, -42.5682, 0.81", "69.176, 76.3124, -43.2056, 0.15", "69.4706, 77.1486, -43.6934, 2.2", "69.59, 77.4951, -43.8787, 2.13", "69.7865, 78.0258, -44.1547, 1.84", "70.1654, 78.9756, -44.6151, 0.88", "70.4539, 79.6434, -44.922, 0.22", "70.651, 80.0445, -45.0816, 0.22", "70.9436, 80.5818, -45.2918, 0.44", "71.3656, 81.3141, -45.5768, 0.07", "71.7838, 82.005, -45.8441, 1.32", "72.0282, 82.3755, -45.9888, 1.62", "72.4945, 83.0357, -46.2449, 1.69", "73.1776, 83.959, -46.5695, 0.22", "73.5759, 84.4467, -46.7242, 0.29", "74.1721, 85.1136, -46.9052, 0.29", "74.676, 85.6344, -47.0262, 0.95", "75.205, 86.1413, -47.1245, 1.54", "76.0903, 86.9513, -47.2101, 1.32", "77.0721, 87.8397, -47.2199, 0.22", "77.811, 88.5192, -47.1966, 0.22", "78.2582, 88.9342, -47.1636, 0.81", "78.7668, 89.4271, -47.1149, 1.1", "79.6856, 90.371, -47.0065, 0.66", "80.2083, 90.9873, -46.9336, 1.25", "80.8839, 91.8621, -46.8577, 2.2", "81.1856, 92.2547, -46.8482, 2.5", "81.4397, 92.5819, -46.8577, 2.5", "82.2661, 93.6368, -46.948, 0.59", "83.1804, 94.7953, -47.1235, 0.22", "83.9695, 95.8591, -47.3412, 0.22", "84.6902, 96.9377, -47.6327, 0.22", "85.05, 97.5422, -47.8432, 1.62", "85.1736, 97.7813, -47.9489, 2.06", "85.3336, 98.1646, -48.1641, 2.06", "85.7642, 99.4861, -49.0282, 0.29", "85.9337, 100.292, -49.5738, 0.95", "86.0122, 100.869, -49.9776, 1.03", "86.083, 101.489, -50.4415, 0.15", "86.1503, 102.162, -50.9488, 0.15", "86.2019, 102.648, -51.3162, 1.32", "86.2513, 103.116, -51.6593, 1.76", "86.2764, 103.273, -51.7716, 1.69", "86.5531, 104.411, -52.6376, 0.22", "86.7488, 105.066, -53.1438, 0.29", "86.9582, 105.656, -53.6163, 1.03", "87.1352, 106.097, -53.9751, 1.69", "87.331, 106.538, -54.3339, 1.91", "87.8551, 107.68, -55.2551, 0.15", "88.1188, 108.262, -55.7115, 0.66", "88.424, 109.0, -56.2823, 0.15", "88.5973, 109.47, -56.6416, 1.18", "88.726, 109.836, -56.9067, 1.32", "88.8235, 110.149, -57.1267, 1.32", "89.129, 111.261, -57.9106, 0.15", "89.3677, 112.209, -58.6146, 1.76", "89.5142, 112.848, -59.0831, 1.76", "89.7233, 113.806, -59.7942, 0.44", "89.8374, 114.366, -60.209, 0.73", "89.9745, 115.009, -60.6821, 0.73", "90.0594, 115.416, -60.978, 0.44", "90.209, 116.182, -61.5148, 0.22", "90.3359, 116.808, -61.9582, 1.03", "90.4256, 117.229, -62.2608, 1.32", "90.6842, 118.186, -62.9145, 0.07", "90.976, 119.083, -63.5238, 1.62", "91.1478, 119.571, -63.856, 1.62", "91.5755, 120.727, -64.6748, 0.15", "91.698, 121.045, -64.8998, 0.15", "91.9282, 121.627, -65.3008, 0.15", "92.1804, 122.228, -65.694, 1.03", "92.3439, 122.585, -65.9176, 1.98", "92.6257, 123.165, -66.2532, 1.69", "93.0714, 124.057, -66.7245, 0.29", "93.4561, 124.792, -67.1189, 0.29", "93.8505, 125.534, -67.5067, 1.32", "94.0233, 125.832, -67.6514, 1.54", "94.6534, 126.887, -68.1471, 0.29", "95.0274, 127.511, -68.4287, 0.44", "95.5546, 128.469, -68.8783, 0.73", "95.8807, 129.132, -69.2069, 1.18", "96.3347, 130.217, -69.7672, 0.29", "96.5319, 130.774, -70.084, 0.15", "96.6942, 131.306, -70.4251, 0.15", "96.953, 132.262, -71.1003, 2.13", "97.0533, 132.635, -71.3778, 2.2", "97.2042, 133.171, -71.813, 2.2", "97.5297, 134.297, -72.7671, 0.51", "97.8305, 135.144, -73.5185, 0.51", "98.1467, 135.868, -74.1783, 0.07", "98.5337, 136.628, -74.8761, 0.66", "98.9329, 137.378, -75.5555, 0.22", "99.2717, 137.995, -76.1022, 1.1", "99.7299, 138.843, -76.8163, 0.29", "100.074, 139.565, -77.384, 1.32", "100.147, 139.739, -77.5164, 1.84", "100.32, 140.252, -77.8895, 1.47", "100.555, 141.098, -78.4539, 0.37", "100.65, 141.567, -78.7517, 0.15", "100.738, 142.414, -79.2372, 0.15", "100.755, 142.875, -79.4888, 0.15", "100.77, 143.508, -79.8256, 1.1", "100.771, 144.258, -80.2089, 1.76", "100.77, 144.719, -80.4277, 1.98", "100.77, 145.893, -80.9728, 0.66", "100.779, 146.835, -81.4096, 0.59", "100.779, 147.357, -81.6486, 0.22", "100.777, 148.172, -82.0511, 0.29", "100.768, 148.971, -82.4617, 0.29", "100.771, 149.61, -82.819, 1.18", "100.776, 150.151, -83.147, 1.84", "100.762, 150.839, -83.5855, 1.4", "100.714, 151.567, -84.049, 0.37", "100.675, 152.005, -84.3351, 0.29", "100.62, 152.512, -84.6664, 0.29", "100.579, 152.946, -84.9587, 0.66", "100.536, 153.483, -85.3445, 0.66", "100.497, 154.047, -85.7804, 0.22", "100.452, 154.662, -86.2773, 0.22", "100.372, 155.324, -86.8591, 1.62", "100.246, 155.952, -87.4871, 1.62", "100.07, 156.685, -88.2682, 0.88", "99.8965, 157.32, -88.9785, 0.37", "99.7993, 157.661, -89.3761, 0.37", "99.6057, 158.337, -90.1684, 1.91", "99.3988, 159.217, -91.2351, 0.51", "99.3007, 159.753, -91.8785, 0.37", "99.2152, 160.319, -92.5757, 0.22", "99.1203, 161.173, -93.6466, 0.66", "99.1038, 161.421, -93.9506, 1.76", "99.1155, 162.369, -95.0671, 0.29", "99.1354, 162.682, -95.4036, 0.22", "99.1692, 163.386, -96.1733, 1.25", "99.1705, 163.602, -96.4177, 1.25", "99.154, 163.962, -96.8184, 0.22", "99.114, 164.363, -97.3028, 0.15", "99.0442, 164.775, -97.8337, 0.15", "98.8363, 165.63, -99.0158, 2.06", "98.5435, 166.596, -100.414, 0.44", "98.4402, 166.883, -100.844, 0.73", "98.2243, 167.41, -101.628, 0.22", "98.1439, 167.596, -101.882, 0.22", "97.9093, 168.243, -102.641, 1.62", "97.7694, 168.808, -103.143, 1.62", "97.6594, 169.65, -103.733, 0.15", "97.6287, 170.154, -104.05, 0.15", "97.6191, 170.903, -104.471, 0.22", "97.6352, 171.985, -105.054, 1.84", "97.6572, 172.526, -105.341, 1.84", "97.6742, 173.419, -105.803, 0.59", "97.6589, 174.181, -106.213, 0.37", "97.6368, 174.588, -106.441, 0.37", "97.5747, 175.316, -106.878, 0.37", "97.4785, 176.189, -107.439, 0.07", "97.3791, 177.004, -107.992, 0.07", "97.2958, 177.909, -108.647, 1.84", "97.2712, 178.421, -109.051, 1.84", "97.2831, 179.228, -109.729, 0.37", "97.3397, 179.908, -110.35, 0.15", "97.431, 180.485, -110.915, 0.15", "97.6202, 181.344, -111.814, 1.47", "97.726, 181.778, -112.31, 1.47", "97.8024, 182.17, -112.768, 1.1", "97.8528, 182.656, -113.335, 0.81", "97.8694, 183.168, -113.97, 1.62", "97.8654, 183.428, -114.296, 1.62", "97.803, 184.361, -115.466, 0.07", "97.7483, 185.003, -116.289, 0.95", "97.6899, 185.654, -117.193, 0.07", "97.652, 186.031, -117.758, 0.88", "97.6118, 186.418, -118.413, 0.07", "97.5855, 186.713, -118.951, 0.07", "97.5452, 187.142, -119.781, 1.84", "97.4828, 187.739, -120.982, 0.51", "97.4381, 188.325, -122.046, 1.18", "97.4027, 188.98, -123.101, 0.22", "97.3831, 189.357, -123.663, 0.22", "97.3649, 189.876, -124.349, 1.1", "97.3706, 190.13, -124.644, 1.18", "97.4492, 191.097, -125.626, 0.15", "97.5304, 191.718, -126.164, 1.1", "97.5807, 192.124, -126.481, 1.4", "97.5989, 192.385, -126.676, 1.4", "97.6117, 193.35, -127.353, 0.37", "97.5994, 193.688, -127.584, 0.37", "97.5292, 194.484, -128.137, 1.54", "97.3856, 195.614, -128.897, 0.07", "97.2205, 196.525, -129.494, 0.07", "97.0448, 197.333, -130.023, 1.69", "97.003, 197.492, -130.125, 1.69", "96.6853, 198.575, -130.808, 0.07", "96.3128, 199.712, -131.526, 0.07", "96.0113, 200.533, -132.027, 0.07", "95.7316, 201.286, -132.491, 1.69", "95.4948, 201.893, -132.862, 2.28", "94.9621, 203.219, -133.676, 0.22", "94.6592, 203.954, -134.117, 0.15", "94.2817, 204.915, -134.709, 0.15", "94.0764, 205.476, -135.056, 0.95", "93.8897, 205.969, -135.369, 1.18", "93.6039, 206.755, -135.882, 0.07", "93.5235, 206.966, -136.021, 0.07", "93.2911, 207.594, -136.419, 1.1", "93.0865, 208.137, -136.75, 1.1", "92.8925, 208.608, -137.021, 0.07", "92.5997, 209.295, -137.425, 0.07", "92.2042, 210.219, -137.944, 1.62", "91.8758, 210.976, -138.366, 1.25", "91.5481, 211.746, -138.807, 0.07", "91.289, 212.358, -139.159, 0.07", "90.8313, 213.459, -139.825, 1.69", "90.6146, 214.007, -140.17, 1.1", "90.4051, 214.594, -140.544, 0.59", "90.1443, 215.375, -141.064, 0.07", "89.9726, 215.989, -141.461, 1.03", "89.7929, 216.906, -142.034, 0.07", "89.6796, 217.89, -142.642, 0.07", "89.6485, 218.452, -142.97, 0.95", "89.637, 219.428, -143.496, 0.07", "89.6819, 220.769, -144.164, 2.42", "89.7955, 222.224, -144.849, 0.07", "89.8984, 222.996, -145.179, 0.07", "90.1157, 223.987, -145.583, 0.95", "90.2176, 224.358, -145.726, 1.18", "90.6443, 225.477, -146.116, 0.37", "90.8394, 225.867, -146.248, 0.07", "91.3587, 226.801, -146.548, 0.07", "92.0417, 227.933, -146.928, 1.32", "92.5603, 228.713, -147.213, 1.91", "93.6276, 230.278, -147.771, 0.15", "94.0285, 230.871, -147.981, 0.15", "94.2662, 231.251, -148.129, 0.15", "94.6174, 231.913, -148.408, 0.15", "94.8654, 232.504, -148.694, 1.47", "95.0469, 233.065, -149.005, 1.25", "95.2124, 233.967, -149.585, 0.22", "95.3082, 234.651, -150.051, 0.15", "95.3757, 235.179, -150.419, 0.29", "95.4549, 236.019, -151.027, 1.25", "95.5188, 236.817, -151.641, 2.35", "95.6133, 237.847, -152.475, 0.07", "95.635, 238.179, -152.755, 1.1" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "42.962, 32.4328, -20.0154, 0.73", "43.4975, 32.773, -20.6943, 0.73", "44.502, 33.3107, -21.8237, 0.37", "45.0384, 33.5458, -22.3861, 0.51", "45.7765, 33.8185, -23.1546, 1.54", "46.5941, 34.1222, -24.0218, 0.07", "47.3813, 34.4309, -24.8357, 0.15", "47.8758, 34.6187, -25.3374, 0.15", "48.4457, 34.8123, -25.8784, 1.32", "49.7049, 35.1607, -26.9551, 0.37", "50.4287, 35.2993, -27.5123, 1.25", "51.1745, 35.4191, -28.0137, 0.29", "52.0019, 35.5365, -28.5194, 0.29", "52.6769, 35.6124, -28.8856, 1.03", "53.6718, 35.669, -29.285, 0.07", "54.7126, 35.6662, -29.5324, 0.07", "55.3403, 35.6442, -29.633, 0.88", "55.497, 35.6363, -29.6559, 1.03", "56.7566, 35.5984, -29.8053, 0.07", "58.1665, 35.6172, -29.9949, 2.13", "59.6682, 35.7322, -30.2193, 0.07", "60.2225, 35.8041, -30.3043, 0.37", "61.2802, 35.9752, -30.4872, 0.07", "61.9067, 36.0897, -30.6092, 1.1", "62.8624, 36.2813, -30.8062, 0.07", "64.0514, 36.5429, -31.0831, 0.07", "64.8371, 36.7313, -31.2775, 1.47", "65.8319, 36.9904, -31.5099, 0.07", "66.6687, 37.2215, -31.7039, 0.07", "67.5352, 37.4497, -31.9209, 0.07", "68.0935, 37.5867, -32.0707, 1.25", "68.7035, 37.7331, -32.2491, 1.32", "69.2985, 37.8792, -32.4147, 1.32", "70.7581, 38.2462, -32.8162, 0.07", "71.2908, 38.3742, -32.9694, 0.44", "72.0474, 38.5398, -33.191, 0.07", "72.7158, 38.6731, -33.3857, 0.07", "73.7988, 38.8662, -33.6866, 1.76", "75.0122, 39.069, -34.0067, 0.07", "75.9557, 39.2577, -34.2564, 0.07", "76.6953, 39.4349, -34.4658, 1.91", "77.877, 39.768, -34.8215, 0.07", "78.5294, 39.9848, -35.0369, 0.07", "79.3609, 40.3018, -35.3226, 1.47", "80.6411, 40.838, -35.7389, 0.07", "81.4112, 41.175, -35.9628, 1.18", "82.0445, 41.436, -36.128, 1.18", "83.1038, 41.8386, -36.3638, 0.07", "83.6074, 42.0095, -36.4582, 0.07", "84.4096, 42.24, -36.5854, 0.07", "85.8112, 42.5643, -36.7806, 1.76", "86.9873, 42.8208, -36.9447, 0.07", "87.5465, 42.9508, -37.0317, 0.07", "88.1636, 43.1116, -37.1479, 0.66", "88.9533, 43.3555, -37.3265, 0.15", "89.7675, 43.6678, -37.5482, 1.25", "90.3552, 43.9492, -37.7303, 1.25", "91.425, 44.5381, -38.1252, 0.07", "92.5335, 45.1756, -38.5772, 1.62", "92.8888, 45.3859, -38.7313, 1.32", "93.4824, 45.7283, -38.9803, 0.95", "94.2535, 46.1427, -39.3194, 0.15", "95.4196, 46.7123, -39.8192, 0.07", "96.2378, 47.0747, -40.1514, 0.07", "96.4351, 47.1495, -40.2262, 1.18", "97.4373, 47.4431, -40.5952, 0.22", "98.5204, 47.6474, -40.9806, 0.07", "99.5343, 47.7657, -41.369, 1.47", "100.194, 47.8267, -41.6352, 1.47", "101.477, 47.9172, -42.2259, 0.15", "102.261, 47.9578, -42.6171, 0.15", "103.248, 47.9878, -43.1776, 1.47", "104.439, 48.054, -43.9051, 0.51", "105.213, 48.1346, -44.4355, 1.32", "105.87, 48.2535, -44.9279, 0.29", "106.254, 48.3713, -45.2309, 0.15", "106.881, 48.6468, -45.732, 0.15", "107.487, 48.9698, -46.226, 1.1", "107.779, 49.1351, -46.4481, 1.18", "108.699, 49.6836, -47.1186, 0.07", "109.159, 49.9771, -47.422, 0.59", "110.053, 50.5685, -47.9623, 0.07", "110.451, 50.8569, -48.2053, 0.07", "111.014, 51.2913, -48.5567, 1.76", "111.816, 51.9896, -49.0658, 0.07", "112.58, 52.7319, -49.5247, 0.07", "113.307, 53.4674, -49.9493, 1.4", "114.407, 54.6471, -50.5822, 0.07", "114.811, 55.0834, -50.8137, 0.51", "115.29, 55.5862, -51.0891, 0.07", "116.009, 56.3039, -51.4828, 0.07", "116.42, 56.6474, -51.707, 1.54", "117.385, 57.2969, -52.1869, 0.07", "118.409, 57.8567, -52.6428, 1.47", "119.268, 58.2198, -52.997, 0.07", "119.65, 58.3429, -53.1455, 0.95", "121.533, 58.8475, -53.8877, 0.07", "121.998, 58.9429, -54.0725, 0.07", "122.507, 59.0128, -54.2719, 1.54", "123.815, 59.1453, -54.8032, 0.07", "124.364, 59.2001, -55.03, 0.07", "125.37, 59.3295, -55.4686, 0.95", "126.426, 59.5177, -55.9132, 0.07", "126.793, 59.6037, -56.1029, 0.07", "127.248, 59.7313, -56.3659, 0.95", "128.332, 60.1156, -57.0487, 0.07", "129.156, 60.4222, -57.5482, 0.07", "129.951, 60.7324, -58.0126, 1.4", "131.394, 61.3557, -58.8622, 0.07", "131.774, 61.5297, -59.0951, 0.07", "132.187, 61.7324, -59.3551, 0.66", "133.071, 62.1901, -59.9225, 0.07", "133.772, 62.5563, -60.3613, 1.25" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "32.2383, -4.50327, -14.9369, 0.22", "33.3816, -4.73603, -15.2686, 0.22", "34.1114, -4.90317, -15.4992, 0.59", "34.8624, -5.13278, -15.7417, 0.07", "35.8175, -5.44976, -16.0156, 1.47", "36.609, -5.73769, -16.2138, 0.07", "36.8254, -5.82168, -16.2625, 0.07", "37.8403, -6.25314, -16.4917, 1.76", "38.7784, -6.66647, -16.7085, 0.07", "39.3502, -6.92433, -16.8058, 0.07", "39.9782, -7.22867, -16.8943, 0.07", "40.3243, -7.40768, -16.9314, 1.03", "40.881, -7.69952, -16.9858, 1.03", "41.5229, -8.05544, -17.0155, 1.03", "42.1482, -8.40798, -17.0188, 0.07", "42.8021, -8.80087, -17.0099, 0.07", "43.3577, -9.14359, -16.9812, 0.66", "43.846, -9.46365, -16.9358, 0.07", "44.509, -9.93136, -16.8427, 0.95", "45.4122, -10.5917, -16.7093, 0.07", "45.7033, -10.8015, -16.6753, 0.07", "46.1612, -11.1121, -16.6351, 1.1", "46.4859, -11.321, -16.6171, 1.76", "46.7773, -11.5054, -16.6133, 1.76", "47.604, -12.0255, -16.6212, 0.07", "48.1732, -12.412, -16.6207, 0.73", "48.7397, -12.8173, -16.608, 0.07", "48.9219, -12.9532, -16.6052, 0.07", "49.3254, -13.2483, -16.6116, 1.1", "50.0766, -13.7866, -16.6413, 0.07", "50.4746, -14.0549, -16.6841, 1.18", "50.9257, -14.3312, -16.7601, 1.47", "51.3197, -14.5469, -16.8398, 1.47", "52.3014, -15.0136, -17.0538, 0.07", "52.8121, -15.2152, -17.1707, 0.66", "53.6172, -15.4637, -17.3597, 0.07", "54.0475, -15.5673, -17.4357, 0.07", "54.6956, -15.6954, -17.5082, 1.25", "55.2444, -15.7905, -17.5288, 1.25", "55.7876, -15.8772, -17.5156, 0.81", "56.1706, -15.9365, -17.4897, 0.07", "56.9314, -16.0444, -17.4052, 0.07", "57.3819, -16.1073, -17.3642, 0.07", "57.8747, -16.1835, -17.3321, 0.81", "58.2612, -16.2498, -17.3146, 1.03", "58.9577, -16.3884, -17.2936, 1.03", "59.5284, -16.5269, -17.2869, 0.07", "60.2201, -16.7238, -17.2953, 0.07", "60.9415, -16.9562, -17.3194, 1.76", "61.2606, -17.0737, -17.3263, 1.76", "62.1524, -17.4491, -17.3169, 0.07", "62.5043, -17.6113, -17.3054, 0.07", "62.8139, -17.7642, -17.2895, 0.07", "63.4056, -18.0614, -17.2492, 0.95", "63.9978, -18.3651, -17.2121, 0.07", "64.9718, -18.8559, -17.1603, 0.07", "65.6715, -19.1932, -17.1305, 1.1", "66.0525, -19.365, -17.1161, 1.1", "66.611, -19.6075, -17.1071, 0.07", "66.9448, -19.7504, -17.1106, 0.66", "67.4445, -19.9535, -17.1467, 0.07", "67.7436, -20.0743, -17.1767, 0.07", "68.1487, -20.2357, -17.2214, 0.59", "68.5487, -20.3928, -17.2667, 0.15", "69.2846, -20.6798, -17.3462, 1.84", "69.7342, -20.8588, -17.391, 1.84", "70.6903, -21.2644, -17.4946, 0.07", "71.3291, -21.5386, -17.5636, 0.07", "72.0644, -21.8467, -17.6344, 0.07", "72.7889, -22.1507, -17.69, 1.25", "73.1516, -22.2975, -17.7144, 1.25", "74.0028, -22.6419, -17.7627, 0.07", "74.5638, -22.8675, -17.7873, 0.66", "75.0276, -23.0548, -17.7945, 0.07", "76.2628, -23.5569, -17.7952, 0.07", "77.1161, -23.9159, -17.7849, 1.98", "77.7422, -24.1761, -17.7574, 1.1", "78.2372, -24.3795, -17.7294, 0.15", "79.0989, -24.7395, -17.6834, 0.15", "79.4889, -24.9027, -17.665, 1.1", "80.2987, -25.2292, -17.6271, 0.81", "80.9535, -25.4894, -17.6127, 0.07", "81.4754, -25.6906, -17.6163, 0.44", "81.9592, -25.8782, -17.6346, 0.07", "82.3812, -26.0502, -17.6647, 0.51", "82.8917, -26.2609, -17.727, 0.07", "83.4655, -26.5034, -17.821, 0.37", "84.1344, -26.787, -17.9474, 0.07", "84.8144, -27.068, -18.086, 1.76", "85.1343, -27.1919, -18.1591, 1.76", "86.143, -27.5343, -18.4077, 0.07", "86.449, -27.6252, -18.4849, 0.07", "87.0603, -27.7835, -18.6352, 0.73", "87.745, -27.928, -18.8243, 0.07", "88.1115, -27.9959, -18.9296, 0.07", "88.5865, -28.085, -19.0416, 0.07", "89.1003, -28.1962, -19.1232, 0.07", "89.4675, -28.2874, -19.1661, 1.25", "90.2529, -28.4983, -19.2661, 0.07", "90.6301, -28.6035, -19.2825, 0.51", "91.4097, -28.8233, -19.289, 0.07", "92.1412, -29.0263, -19.2734, 0.95", "92.6234, -29.1492, -19.233, 1.25", "93.5045, -29.364, -19.0978, 0.07", "94.5521, -29.6156, -18.8793, 0.81", "95.4453, -29.8375, -18.684, 0.07", "95.8047, -29.9327, -18.6015, 0.37", "96.508, -30.1345, -18.4031, 0.07", "97.3247, -30.4001, -18.1402, 1.47", "98.0475, -30.673, -17.8713, 0.07", "98.3931, -30.8134, -17.7501, 0.07", "98.9443, -31.0586, -17.5385, 0.51", "99.5432, -31.3461, -17.312, 0.07", "100.315, -31.7515, -17.0396, 1.91", "101.243, -32.2927, -16.7106, 0.44", "101.425, -32.4104, -16.6457, 0.07", "101.738, -32.6324, -16.5449, 0.88", "102.03, -32.8804, -16.4665, 0.88", "102.303, -33.1465, -16.414, 0.88", "102.693, -33.5576, -16.3658, 0.07", "103.179, -34.0802, -16.3437, 0.73", "103.631, -34.5767, -16.3271, 0.07", "103.993, -34.9791, -16.3187, 0.81", "104.26, -35.27, -16.3127, 0.07", "104.73, -35.7788, -16.3042, 1.1", "105.169, -36.2549, -16.3023, 0.07", "105.397, -36.4967, -16.3096, 0.07", "105.696, -36.78, -16.317, 0.88" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "32.2383, -4.50327, -14.9369, 1.25", "33.4956, -4.31331, -15.7104, 1.25", "34.5441, -4.2463, -16.2908, 0.59", "35.2884, -4.21968, -16.6652, 0.59", "36.2674, -4.17562, -17.1294, 1.1", "36.8129, -4.1424, -17.379, 1.32", "38.6827, -3.99437, -18.1978, 0.44", "39.965, -3.97309, -18.7243, 0.44", "40.6671, -3.98926, -18.9992, 0.44", "41.783, -4.00104, -19.4228, 1.25", "42.5668, -3.97868, -19.7488, 1.25", "43.2023, -3.93598, -20.0477, 0.88", "44.7906, -3.76988, -20.8724, 0.22", "45.6542, -3.61826, -21.3629, 1.1", "46.6533, -3.3641, -21.9868, 0.73", "48.071, -2.94422, -22.9018, 1.25", "48.7527, -2.73034, -23.3494, 2.13", "49.3629, -2.52594, -23.7488, 2.13", "50.9681, -1.9223, -24.7723, 0.81", "52.5664, -1.42625, -25.8144, 0.29", "53.0082, -1.32, -26.1171, 0.15", "53.6304, -1.20524, -26.5518, 0.15", "54.1056, -1.14638, -26.8874, 0.15", "55.6951, -0.964116, -28.0314, 2.06", "57.6685, -0.743979, -29.4789, 0.66", "59.0444, -0.556356, -30.5163, 0.44", "60.2716, -0.336873, -31.4532, 1.69", "61.9487, -0.0464645, -32.7172, 0.07", "63.0273, 0.100868, -33.5033, 1.18", "63.8512, 0.182853, -34.0748, 1.76", "64.959, 0.294447, -34.8026, 1.76", "66.574, 0.404093, -35.8814, 0.15", "67.8455, 0.484262, -36.8135, 0.15", "68.6285, 0.525482, -37.5167, 0.51", "69.457, 0.580168, -38.3854, 1.4", "70.1539, 0.662893, -39.1668, 1.76", "71.4647, 0.90325, -40.6792, 0.07", "72.8155, 1.22781, -42.2874, 2.2", "74.8923, 1.8052, -44.7116, 0.81", "76.4099, 2.20369, -46.4155, 1.47", "78.1956, 2.59124, -48.2807, 2.35", "80.0602, 2.9174, -49.9969, 0.07", "80.5628, 2.99507, -50.3948, 0.07", "81.6228, 3.13306, -51.1014, 1.69", "83.384, 3.30257, -52.0127, 0.15", "84.8169, 3.37334, -52.674, 0.15", "86.6387, 3.40334, -53.4556, 2.06", "88.1026, 3.39318, -54.0771, 0.95", "89.1574, 3.39343, -54.5437, 0.07", "90.1225, 3.39984, -54.9895, 0.51", "91.5153, 3.41823, -55.6238, 0.07", "92.4485, 3.41671, -56.0595, 0.88", "93.4162, 3.38535, -56.5404, 0.07", "94.9402, 3.29079, -57.2726, 2.2", "96.6008, 3.13156, -58.0833, 0.07", "97.7551, 3.01644, -58.6885, 0.81", "98.21, 2.97557, -58.9359, 0.88", "99.3446, 2.91593, -59.7226, 0.07", "100.161, 2.91125, -60.3949, 0.07", "101.558, 3.00642, -61.7777, 1.62", "102.794, 3.21947, -63.2922, 0.07", "103.816, 3.52386, -64.7765, 2.06", "105.469, 4.19393, -67.4151, 1.03", "105.928, 4.42597, -68.2246, 1.03", "106.859, 4.96125, -69.9185, 2.2", "108.441, 5.9876, -72.811, 0.59", "109.073, 6.43856, -73.9512, 0.59", "109.776, 6.9221, -75.1, 1.4", "110.292, 7.2437, -75.7989, 1.4", "111.637, 8.02351, -77.4673, 0.07", "112.501, 8.48459, -78.4271, 1.03", "113.059, 8.75991, -78.9885, 1.47", "115.291, 9.77865, -81.1372, 0.07", "116.972, 10.5427, -82.7735, 1.91", "118.15, 11.0616, -83.8965, 0.59", "119.015, 11.4436, -84.7206, 1.32", "120.583, 12.1184, -86.1189, 0.07", "121.59, 12.5433, -86.9411, 0.95", "122.776, 13.0868, -87.7947, 0.07", "123.499, 13.4296, -88.2595, 0.44", "124.231, 13.7825, -88.679, 0.07", "125.195, 14.2716, -89.293, 1.25", "126.17, 14.8066, -89.9752, 0.07", "127.333, 15.4993, -90.8879, 1.1", "127.738, 15.7426, -91.2153, 1.1", "128.163, 15.9962, -91.5785, 1.4", "130.229, 17.1782, -93.3451, 0.07", "131.002, 17.5974, -94.0202, 1.69", "131.447, 17.8287, -94.3867, 1.69", "133.091, 18.6267, -95.7709, 0.07", "133.425, 18.777, -96.0489, 0.59", "134.097, 19.039, -96.5521, 0.07", "135.17, 19.3161, -97.2266, 1.4", "135.566, 19.3815, -97.4683, 1.4", "137.643, 19.5951, -98.7761, 0.29", "138.277, 19.6132, -99.1814, 0.95", "139.47, 19.5843, -99.9249, 0.07", "140.434, 19.5013, -100.48, 1.25", "140.932, 19.4271, -100.717, 1.25", "142.234, 19.1471, -101.223, 0.07", "142.86, 18.9677, -101.394, 0.07", "143.231, 18.8376, -101.497, 0.07", "144.018, 18.4989, -101.693, 0.07", "144.955, 18.0808, -101.923, 1.32", "145.291, 17.9329, -102.019, 1.32", "146.32, 17.5537, -102.423, 0.07", "146.999, 17.3764, -102.821, 0.07", "147.901, 17.2687, -103.635, 0.07", "148.502, 17.3149, -104.412, 0.07", "149.117, 17.438, -105.398, 1.47", "150.203, 17.7087, -107.168, 1.69", "150.955, 17.925, -108.399, 1.69", "152.215, 18.3202, -110.326, 0.88", "153.201, 18.6379, -111.825, 0.51", "154.176, 18.9034, -113.129, 0.07", "155.283, 19.1786, -114.503, 1.47", "155.81, 19.2951, -115.122, 1.47", "156.768, 19.5222, -116.14, 0.07", "159.284, 20.344, -119.0, 0.95", "160.065, 20.7122, -119.973, 0.73", "160.913, 21.2962, -121.184, 0.07", "161.866, 22.1948, -122.749, 0.07", "162.507, 23.0059, -123.931, 2.35", "163.591, 24.9372, -126.45, 0.22", "163.91, 25.7777, -127.367, 1.47", "164.161, 26.8988, -128.578, 0.15", "164.253, 27.8829, -129.704, 0.15", "164.201, 28.9298, -130.922, 1.32", "163.949, 30.6221, -133.168, 0.07", "163.809, 31.3722, -134.237, 0.15", "163.573, 32.3932, -135.826, 0.95", "163.212, 33.9434, -138.427, 0.15", "163.089, 34.6017, -139.538, 1.4", "162.855, 36.5547, -142.904, 0.81", "162.85, 37.3554, -144.283, 1.18", "162.928, 37.8765, -145.355, 1.25", "163.361, 39.0882, -148.16, 0.81", "163.814, 39.8501, -150.178, 0.51", "164.167, 40.2793, -151.475, 1.1", "164.45, 40.5479, -152.329, 1.1", "166.128, 41.7016, -156.435, 0.81", "166.729, 42.0035, -157.592, 1.03", "167.535, 42.3162, -158.845, 0.44", "168.131, 42.5415, -159.694, 0.29", "169.011, 42.984, -160.841, 0.95", "169.882, 43.474, -161.893, 0.07", "170.592, 43.911, -162.517, 0.51", "171.974, 44.6909, -163.667, 0.07", "172.786, 45.0719, -164.309, 0.59", "173.493, 45.3495, -164.879, 0.59" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.6132, -17.0287, -10.8946, 0.81", "11.0238, -18.4432, -10.9563, 0.81", "11.1895, -19.343, -11.0219, 0.37", "11.3014, -20.3243, -11.1168, 1.18", "11.3438, -21.1252, -11.2267, 1.54", "11.3412, -22.3823, -11.4335, 1.25", "11.2901, -23.5941, -11.6613, 0.59", "11.1663, -24.3554, -11.8381, 0.88", "11.0001, -25.0691, -12.0095, 0.66", "10.7999, -25.8127, -12.1643, 0.88", "10.6245, -26.4019, -12.2609, 0.88", "10.2766, -27.5811, -12.415, 0.29", "9.90638, -28.934, -12.5346, 1.1", "9.6235, -29.9273, -12.5785, 1.32", "9.31307, -30.9581, -12.5841, 1.84", "9.02394, -31.8841, -12.5601, 1.69", "8.81308, -32.4868, -12.5407, 1.62", "8.35708, -33.5938, -12.5109, 0.66", "7.91288, -34.5912, -12.5181, 0.51", "7.63078, -35.1931, -12.5473, 0.51", "7.29692, -35.8746, -12.6229, 0.51", "6.91347, -36.6517, -12.7585, 0.59", "6.46504, -37.5316, -12.9672, 1.47", "6.08152, -38.299, -13.2026, 1.84", "5.6081, -39.2725, -13.5423, 1.84", "5.16015, -40.2109, -13.9013, 1.25", "4.57868, -41.4796, -14.4005, 0.81", "4.24575, -42.2717, -14.7072, 0.81", "3.97482, -43.006, -14.9725, 0.81", "3.57084, -44.2934, -15.3991, 0.73", "3.29887, -45.4065, -15.7186, 1.1", "3.18709, -46.0102, -15.8546, 2.42", "3.0822, -46.765, -15.9904, 2.42", "2.85233, -48.8107, -16.2898, 0.44", "2.78549, -49.4654, -16.3652, 0.29", "2.68424, -50.5113, -16.4692, 0.51", "2.59198, -51.3441, -16.5451, 1.25", "2.53763, -51.8691, -16.5979, 1.32", "2.42576, -53.1083, -16.7301, 0.37", "2.34801, -53.8989, -16.8099, 0.37", "2.19251, -55.4774, -16.9641, 2.28", "2.08704, -56.4809, -17.0754, 2.64", "1.89668, -58.476, -17.2995, 0.51", "1.83417, -59.3264, -17.3943, 0.07", "1.76522, -60.6315, -17.5546, 0.07", "1.72087, -61.8296, -17.72, 1.62", "1.68267, -63.3292, -17.9526, 0.66", "1.65682, -64.3169, -18.1197, 0.29", "1.62082, -65.3033, -18.3083, 0.29", "1.60569, -66.2187, -18.5095, 1.18", "1.61749, -67.4697, -18.8253, 1.4", "1.63705, -68.1441, -19.0228, 1.1", "1.68287, -69.154, -19.3375, 0.73", "1.71062, -70.2653, -19.7109, 1.47", "1.7198, -71.0921, -19.9894, 1.47", "1.71753, -72.2423, -20.3528, 0.95", "1.69663, -73.115, -20.6112, 0.59", "1.67034, -73.6135, -20.7399, 0.37", "1.57241, -74.9347, -21.0383, 1.98", "1.51601, -75.6255, -21.163, 1.98", "1.38379, -77.1003, -21.3702, 0.44", "1.29838, -78.0693, -21.4771, 0.29", "1.20671, -79.0796, -21.5616, 0.29", "1.15666, -79.7079, -21.6259, 0.29", "1.08366, -80.4257, -21.6997, 0.29", "0.923686, -81.7181, -21.8365, 2.2", "0.842338, -82.2083, -21.8859, 2.42", "0.681569, -82.9485, -21.9664, 2.42", "0.429223, -83.8668, -22.0434, 1.62", "-0.290378, -85.8682, -22.0934, 0.15", "-0.515292, -86.3683, -22.0664, 1.18", "-0.921519, -87.149, -21.9647, 0.37", "-1.1156, -87.5291, -21.9014, 0.37", "-1.55233, -88.4671, -21.7165, 0.59", "-1.9644, -89.5364, -21.4903, 0.07", "-2.31053, -90.8004, -21.2472, 1.91", "-2.43164, -91.5579, -21.1412, 2.2", "-2.48833, -92.9699, -21.0321, 0.07", "-2.42113, -94.081, -20.9913, 0.07", "-2.2774, -94.9692, -21.0062, 1.25", "-2.09213, -95.7073, -21.0575, 1.76", "-1.63217, -97.1282, -21.2103, 0.15", "-1.17225, -98.3226, -21.3563, 0.22", "-0.898829, -98.9818, -21.4698, 0.37", "-0.575499, -99.7486, -21.6457, 0.37", "-0.19286, -100.695, -21.8925, 0.07", "0.100911, -101.485, -22.1164, 0.95", "0.434721, -102.436, -22.4, 1.84", "0.740588, -103.489, -22.7234, 1.54", "1.08073, -104.916, -23.1682, 0.15", "1.19811, -105.442, -23.3283, 0.15", "1.36082, -106.239, -23.547, 0.88", "1.44024, -106.721, -23.6714, 0.88", "1.53137, -107.476, -23.8421, 0.07", "1.57159, -107.89, -23.9198, 0.07", "1.62268, -108.452, -24.0279, 0.66", "1.64048, -108.737, -24.1035, 0.66", "1.65368, -109.452, -24.3199, 0.22", "1.64554, -109.983, -24.4893, 0.44", "1.5964, -111.199, -24.8675, 2.13", "1.52458, -112.273, -25.2089, 1.69", "1.36457, -113.643, -25.6363, 0.07", "1.27795, -114.162, -25.7893, 0.07", "1.12482, -114.93, -25.9922, 0.44", "0.939668, -115.803, -26.2014, 0.59", "0.752236, -116.6, -26.3494, 0.07", "0.379793, -118.033, -26.5538, 1.76", "0.169334, -118.892, -26.6325, 1.25", "-0.21635, -120.566, -26.7612, 0.22", "-0.369824, -121.243, -26.7989, 0.22", "-0.619089, -122.338, -26.8407, 1.62", "-0.795709, -123.068, -26.8473, 1.62", "-0.887629, -123.437, -26.8538, 1.62", "-1.33928, -125.102, -26.9106, 0.29", "-1.55489, -125.787, -26.9486, 0.29", "-1.86396, -126.674, -27.0214, 1.62", "-2.3359, -127.839, -27.1641, 1.03", "-2.82543, -128.879, -27.3093, 0.07", "-3.13827, -129.452, -27.3941, 0.59", "-3.61374, -130.17, -27.5057, 0.07", "-3.85761, -130.488, -27.5611, 0.07", "-4.46184, -131.196, -27.6865, 1.1", "-4.98121, -131.79, -27.7859, 0.07", "-5.3467, -132.217, -27.8379, 0.07", "-5.74304, -132.74, -27.8983, 1.03", "-5.99552, -133.125, -27.9575, 1.32", "-6.3189, -133.725, -28.068, 1.32", "-6.83429, -134.913, -28.2969, 0.15", "-7.0155, -135.387, -28.3926, 0.15", "-7.36101, -136.352, -28.5762, 1.18", "-7.75251, -137.504, -28.7894, 0.07", "-8.0739, -138.467, -28.9592, 1.4", "-8.27984, -139.069, -29.0452, 1.54", "-8.83088, -140.67, -29.2029, 0.15", "-9.18966, -141.719, -29.2695, 0.15", "-9.44105, -142.511, -29.2853, 1.69", "-9.54627, -142.847, -29.2759, 1.76", "-9.95597, -144.135, -29.2375, 0.07", "-10.2646, -145.077, -29.2116, 0.07", "-10.5564, -145.96, -29.1973, 1.76", "-10.8077, -146.675, -29.2195, 1.76", "-11.1334, -147.507, -29.2876, 2.13", "-11.7048, -148.83, -29.4777, 0.07", "-12.0793, -149.613, -29.6308, 0.73", "-12.4287, -150.365, -29.7909, 0.73", "-12.8966, -151.502, -30.018, 0.07", "-13.2262, -152.422, -30.186, 0.07", "-13.5468, -153.525, -30.3686, 1.76", "-13.819, -154.685, -30.5289, 1.4", "-14.1027, -156.193, -30.6975, 0.22", "-14.3595, -157.993, -30.8355, 0.22", "-14.4692, -159.11, -30.8826, 1.18", "-14.4922, -159.458, -30.8907, 1.47", "-14.5301, -160.372, -30.9014, 1.18", "-14.5702, -161.768, -30.9154, 0.22", "-14.6197, -162.536, -30.9145, 0.88", "-14.6787, -163.11, -30.9225, 0.07", "-14.6998, -163.257, -30.9256, 0.07", "-14.772, -163.669, -30.9399, 0.07", "-14.9828, -164.788, -30.9879, 1.91", "-15.0834, -165.305, -31.0334, 2.06", "-15.4018, -166.59, -31.1843, 0.07", "-15.5724, -167.16, -31.2624, 0.51", "-15.799, -167.859, -31.365, 0.07", "-16.1434, -168.84, -31.5086, 0.44", "-16.5525, -169.909, -31.6277, 0.07", "-16.9194, -170.805, -31.6927, 0.44", "-17.4011, -171.908, -31.7304, 1.98", "-17.5804, -172.294, -31.7356, 1.98", "-18.1041, -173.378, -31.7198, 1.47", "-18.5589, -174.297, -31.7031, 0.07", "-18.9645, -175.157, -31.6755, 0.07", "-19.309, -175.946, -31.6658, 0.22", "-19.6637, -176.764, -31.6681, 1.69", "-19.8335, -177.158, -31.6803, 1.69", "-20.561, -178.94, -31.776, 0.15", "-20.6613, -179.206, -31.7945, 0.07", "-20.9577, -179.971, -31.8174, 0.59", "-21.3573, -180.983, -31.7901, 0.07", "-21.8814, -182.249, -31.705, 1.76", "-22.4418, -183.507, -31.6109, 0.07", "-22.7231, -184.075, -31.5593, 0.07", "-23.3543, -185.198, -31.431, 0.07", "-23.8953, -186.041, -31.3134, 1.18", "-24.3575, -186.661, -31.2212, 2.13", "-24.9007, -187.297, -31.122, 1.54", "-25.7106, -188.129, -31.0047, 0.07", "-26.3554, -188.725, -30.9581, 1.1", "-26.9324, -189.228, -30.9589, 1.25", "-27.9263, -189.996, -30.9596, 0.07", "-28.4254, -190.345, -30.9456, 0.07", "-28.7798, -190.58, -30.9258, 0.37", "-29.6272, -191.148, -30.8637, 0.07", "-30.3261, -191.641, -30.8296, 1.69", "-31.4078, -192.443, -30.7999, 0.07", "-32.2145, -193.063, -30.7852, 0.07", "-33.2305, -193.903, -30.7938, 1.47", "-33.9257, -194.538, -30.8284, 1.47", "-35.0962, -195.737, -30.9245, 0.15", "-35.7943, -196.528, -31.0168, 0.07", "-36.5203, -197.421, -31.1388, 2.13", "-37.156, -198.238, -31.2512, 1.18", "-37.9677, -199.25, -31.4063, 0.22", "-38.4649, -199.846, -31.4945, 0.22", "-39.4974, -201.075, -31.6169, 0.29", "-40.2622, -201.971, -31.7043, 1.4", "-40.5895, -202.351, -31.7471, 1.25", "-41.644, -203.562, -31.9144, 0.15", "-42.0443, -204.022, -31.9887, 0.51", "-42.6305, -204.706, -32.1352, 0.07", "-43.1089, -205.314, -32.3, 0.07", "-43.6422, -206.071, -32.5204, 1.54", "-44.4008, -207.217, -32.8745, 0.07", "-44.7201, -207.728, -33.0292, 0.51", "-45.1669, -208.471, -33.2511, 0.07", "-45.6799, -209.307, -33.4803, 1.47", "-45.9553, -209.751, -33.5849, 1.54", "-46.6667, -210.864, -33.8316, 0.07", "-47.1208, -211.57, -33.9553, 0.07", "-47.4345, -212.056, -34.0365, 1.47", "-48.0422, -213.002, -34.1705, 1.62", "-48.8146, -214.16, -34.3043, 0.15", "-49.2412, -214.78, -34.3605, 0.15", "-50.0021, -215.874, -34.4321, 0.59", "-50.4836, -216.557, -34.4837, 0.07", "-50.9861, -217.273, -34.5248, 0.07", "-51.6807, -218.336, -34.552, 2.13", "-52.3578, -219.443, -34.5469, 0.15", "-52.8834, -220.394, -34.5298, 1.1", "-53.2956, -221.267, -34.5145, 1.69", "-53.6996, -222.379, -34.4879, 0.07", "-53.8457, -223.061, -34.4592, 0.44", "-53.8563, -223.785, -34.4163, 0.07", "-53.7818, -224.349, -34.3733, 0.07", "-53.5279, -225.455, -34.2709, 1.25", "-53.3886, -225.94, -34.2242, 1.25", "-52.9796, -227.288, -34.0928, 0.07", "-52.6078, -228.612, -33.9505, 0.07", "-52.5142, -228.973, -33.9019, 0.81", "-52.3835, -229.576, -33.7877, 1.1", "-52.2604, -230.314, -33.5995, 1.4", "-52.1031, -231.889, -33.1597, 0.15", "-52.0575, -232.831, -32.8844, 0.15", "-52.0656, -233.919, -32.4734, 1.18", "-52.1172, -235.191, -31.9277, 0.15", "-52.198, -236.164, -31.4686, 1.62", "-52.2979, -236.973, -31.0617, 1.98", "-52.3586, -237.284, -30.9001, 1.98", "-52.8378, -239.084, -29.944, 0.15", "-53.035, -239.671, -29.6408, 0.15", "-53.3247, -240.42, -29.2642, 0.95", "-53.5455, -240.936, -28.9735, 0.95", "-54.1011, -242.17, -28.2297, 0.07", "-54.6219, -243.253, -27.584, 1.54", "-54.8156, -243.623, -27.3645, 1.54", "-55.4778, -244.777, -26.6341, 0.07", "-56.2179, -245.959, -25.8734, 1.25", "-56.5338, -246.426, -25.5834, 1.25", "-57.0982, -247.231, -25.1624, 0.73", "-57.5462, -247.875, -24.9082, 0.07", "-57.9689, -248.493, -24.7242, 0.07", "-58.552, -249.31, -24.5677, 0.15", "-59.278, -250.326, -24.4623, 1.84", "-60.1599, -251.578, -24.362, 0.15", "-60.8468, -252.589, -24.2507, 0.15", "-61.1389, -253.041, -24.194, 1.76", "-61.5141, -253.649, -24.1025, 1.54", "-62.3446, -254.983, -23.8664, 0.22", "-63.0382, -256.069, -23.6384, 0.22", "-63.7658, -257.235, -23.3457, 1.25", "-63.9789, -257.566, -23.2556, 1.32", "-64.309, -258.055, -23.1258, 1.1", "-64.8431, -258.83, -22.9309, 0.07", "-65.2491, -259.395, -22.7951, 0.07", "-65.9115, -260.326, -22.6146, 0.07", "-66.3315, -260.917, -22.5178, 1.1", "-66.9538, -261.803, -22.3558, 0.07", "-67.3626, -262.39, -22.2316, 1.62", "-68.1925, -263.594, -21.9521, 0.15", "-68.7129, -264.364, -21.7648, 0.15", "-69.2341, -265.131, -21.5665, 1.91", "-69.5793, -265.682, -21.4209, 1.91", "-70.1181, -266.611, -21.1706, 0.07", "-70.2749, -266.911, -21.0895, 0.37", "-70.4166, -267.255, -21.0057, 0.07", "-70.6366, -267.943, -20.8271, 0.07", "-70.7915, -268.549, -20.6708, 0.07", "-70.9179, -269.013, -20.5503, 1.62", "-71.3419, -270.563, -20.1708, 0.15", "-71.621, -271.522, -19.9478, 0.07", "-71.9745, -272.642, -19.6987, 1.47", "-72.1994, -273.283, -19.5674, 1.03", "-72.6474, -274.407, -19.3516, 0.15", "-73.0477, -275.317, -19.1977, 0.73", "-73.5199, -276.259, -19.069, 0.07", "-73.762, -276.713, -19.0135, 0.29", "-74.2691, -277.752, -18.9155, 0.07", "-74.5369, -278.367, -18.8457, 1.03", "-74.7315, -278.894, -18.7768, 1.03", "-75.0842, -279.772, -18.6699, 0.07", "-75.4848, -280.712, -18.5419, 0.07", "-75.9169, -281.658, -18.3779, 0.07", "-76.125, -282.041, -18.2994, 1.47", "-76.3481, -282.386, -18.2024, 1.47", "-77.4209, -283.695, -17.6976, 0.07", "-78.1086, -284.398, -17.3559, 0.95", "-78.7738, -284.97, -17.0242, 0.07", "-79.7718, -285.72, -16.5468, 0.07", "-80.7375, -286.38, -16.1031, 2.06", "-82.2585, -287.302, -15.4354, 0.15", "-83.3224, -287.865, -15.003, 0.07", "-84.2729, -288.327, -14.6798, 1.25", "-85.7866, -289.023, -14.2489, 0.15", "-86.6377, -289.414, -14.0391, 0.15", "-87.6446, -289.902, -13.8471, 0.29", "-88.4834, -290.357, -13.7047, 0.44", "-89.6114, -291.06, -13.5031, 2.06", "-90.1367, -291.464, -13.3893, 1.76", "-91.2, -292.478, -13.1038, 0.07", "-91.8821, -293.28, -12.8786, 0.51", "-92.3805, -294.005, -12.6704, 0.07", "-92.8739, -294.861, -12.4153, 0.07", "-93.2854, -295.711, -12.1369, 1.03", "-93.4724, -296.156, -11.9763, 0.66", "-93.7367, -296.85, -11.6859, 0.07", "-93.8452, -297.15, -11.5272, 0.07", "-93.9781, -297.542, -11.2987, 0.51", "-94.2397, -298.347, -10.8151, 0.07", "-94.5104, -299.113, -10.3525, 0.88", "-94.9492, -300.195, -9.66707, 1.69", "-95.5163, -301.407, -8.87391, 0.07", "-95.7299, -301.768, -8.62057, 0.07", "-96.0612, -302.247, -8.28005, 0.07", "-96.6303, -302.929, -7.78454, 0.81", "-97.0973, -303.42, -7.42152, 1.4", "-97.4431, -303.731, -7.1914, 1.25", "-98.4491, -304.616, -6.55918, 0.22", "-98.8445, -305.012, -6.26047, 0.22", "-99.2254, -305.493, -5.88202, 0.95", "-99.5165, -305.97, -5.51379, 0.07", "-99.6964, -306.295, -5.25697, 0.37", "-100.096, -307.011, -4.66369, 0.07", "-100.487, -307.715, -4.05496, 0.73", "-100.875, -308.388, -3.38861, 0.07", "-101.219, -308.988, -2.79837, 0.66", "-101.594, -309.575, -2.21913, 0.22", "-101.876, -309.991, -1.82898, 1.1", "-102.357, -310.654, -1.25148, 0.07", "-102.811, -311.231, -0.793421, 0.07", "-103.613, -312.257, -0.0635269, 1.62", "-104.282, -313.158, 0.505697, 0.07", "-104.526, -313.517, 0.694096, 0.07", "-104.825, -313.978, 0.925407, 0.59", "-105.345, -314.749, 1.26, 0.07", "-105.521, -315.02, 1.38282, 0.07", "-105.759, -315.419, 1.58188, 0.07", "-106.037, -315.974, 1.85464, 0.73", "-106.437, -316.931, 2.32202, 0.07", "-106.744, -317.825, 2.79931, 2.35", "-107.211, -319.374, 3.8, 0.07", "-107.305, -319.634, 4.03421, 0.07", "-107.497, -320.068, 4.57424, 0.44", "-107.762, -320.543, 5.31932, 0.07", "-108.329, -321.254, 6.83169, 0.66", "-108.81, -321.57, 8.05763, 0.66", "-109.723, -321.775, 9.97273, 0.07", "-110.153, -321.794, 10.7181, 0.07", "-110.752, -321.728, 11.5991, 0.07", "-111.192, -321.638, 12.1482, 0.37", "-112.755, -321.256, 13.8353, 0.07", "-113.288, -321.145, 14.3617, 0.07", "-113.908, -321.033, 14.9432, 0.95", "-115.251, -320.792, 16.2285, 0.07", "-116.022, -320.654, 16.9896, 0.81", "-116.796, -320.499, 17.7305, 0.37", "-117.208, -320.374, 18.0988, 0.07", "-117.45, -320.271, 18.3451, 0.29", "-117.94, -319.964, 18.8668, 0.07", "-118.197, -319.743, 19.1084, 0.88", "-118.396, -319.511, 19.2926, 0.88", "-119.036, -318.756, 19.7217, 0.07", "-119.317, -318.474, 19.84, 0.07", "-120.031, -317.994, 19.9358, 0.15", "-120.293, -317.892, 19.919, 0.44", "-120.841, -317.797, 19.8247, 0.07", "-122.023, -317.714, 19.5839, 0.07", "-122.773, -317.719, 19.4043, 0.81", "-124.075, -317.778, 19.068, 0.07", "-124.511, -317.818, 18.9491, 0.29", "-125.352, -317.907, 18.7094, 0.07", "-126.754, -318.093, 18.2918, 0.07", "-127.161, -318.15, 18.1862, 0.73" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "10.6132, -17.0287, -10.8946, 0.44", "8.81582, -17.1579, -10.35, 0.44", "7.55899, -17.3104, -10.0969, 0.44", "7.16575, -17.3873, -10.0421, 1.1", "6.02082, -17.6873, -9.97643, 1.1", "5.02503, -18.0065, -9.99549, 0.15", "4.14347, -18.3199, -10.0467, 0.88", "3.75005, -18.4982, -10.1228, 0.95", "3.06075, -18.8337, -10.3041, 0.59", "1.84162, -19.4387, -10.7041, 0.22", "0.920334, -19.8777, -11.0683, 0.81", "0.606891, -19.9963, -11.1948, 0.88", "-0.40215, -20.2879, -11.6582, 0.15", "-1.16211, -20.4475, -12.0719, 0.15", "-2.52691, -20.6608, -12.8729, 1.03", "-3.25203, -20.7643, -13.3412, 1.32", "-4.27708, -20.8979, -14.0613, 1.32", "-5.74292, -21.0442, -15.125, 0.07", "-7.23474, -21.1623, -16.2172, 0.88", "-7.89226, -21.2163, -16.6755, 0.88", "-9.12548, -21.3379, -17.4714, 0.37", "-10.1009, -21.4451, -18.0855, 0.37", "-11.0546, -21.55, -18.6732, 0.37", "-11.8778, -21.6, -19.1027, 1.18", "-12.5127, -21.6331, -19.4184, 1.4", "-12.9512, -21.6605, -19.6381, 1.32", "-14.1857, -21.7765, -20.2863, 0.22", "-14.7543, -21.8691, -20.6033, 0.22", "-15.7965, -22.1022, -21.2197, 1.18", "-17.1744, -22.4716, -22.1026, 0.07", "-17.9973, -22.7124, -22.6323, 0.66", "-19.3231, -23.1275, -23.461, 0.07", "-20.4695, -23.5306, -24.133, 1.76", "-21.0939, -23.7633, -24.4717, 1.54", "-22.9315, -24.4741, -25.3766, 0.07", "-23.8929, -24.8169, -25.7739, 0.95", "-24.7625, -25.0901, -26.0886, 0.95", "-25.9274, -25.4041, -26.4611, 0.07", "-27.2555, -25.723, -26.882, 0.07", "-28.2769, -25.9573, -27.2104, 0.07", "-29.4478, -26.2066, -27.5663, 1.69", "-31.1918, -26.5968, -28.1917, 0.07", "-32.5132, -26.9151, -28.7165, 0.07", "-33.9215, -27.2624, -29.3183, 1.84", "-34.8493, -27.4897, -29.755, 1.4", "-35.8026, -27.7354, -30.2374, 0.59", "-37.0924, -28.1127, -31.0147, 0.07", "-37.5944, -28.2674, -31.3477, 0.37", "-38.3089, -28.484, -31.8398, 0.07", "-39.464, -28.7756, -32.572, 1.32", "-39.9187, -28.8777, -32.8219, 1.32", "-42.3851, -29.3878, -34.0095, 0.07", "-43.3454, -29.5771, -34.4059, 1.18", "-43.7176, -29.6521, -34.5485, 1.18", "-45.5665, -30.1107, -35.2326, 0.07", "-46.8055, -30.4697, -35.6459, 0.88", "-48.083, -30.8429, -36.0557, 0.07", "-49.5144, -31.2662, -36.4774, 1.47", "-50.0814, -31.4436, -36.6606, 1.98", "-52.1137, -32.1422, -37.447, 0.15", "-52.8426, -32.4169, -37.7816, 0.37", "-53.8735, -32.8015, -38.2974, 0.07", "-54.7136, -33.1143, -38.7667, 0.81", "-55.1719, -33.2806, -39.0457, 1.25", "-56.5065, -33.7239, -39.898, 0.15", "-57.859, -34.1183, -40.8461, 0.15", "-58.6394, -34.3547, -41.4321, 0.88", "-59.8972, -34.8139, -42.496, 0.07", "-60.5337, -35.0722, -43.0738, 1.25", "-61.0235, -35.2801, -43.5429, 1.25", "-62.4598, -35.9142, -45.0414, 0.07", "-62.9291, -36.1285, -45.5558, 0.73", "-64.3318, -36.7992, -47.0636, 0.07", "-64.8978, -37.0704, -47.6498, 0.07", "-65.8256, -37.5104, -48.5854, 1.32", "-67.5365, -38.2846, -50.2352, 0.29", "-68.0582, -38.4744, -50.688, 0.07", "-68.6169, -38.6236, -51.1132, 0.59", "-69.5939, -38.803, -51.7183, 0.07", "-70.0272, -38.8689, -51.9569, 0.07", "-71.0271, -39.0389, -52.4141, 1.18", "-72.4448, -39.2925, -53.0129, 0.15", "-73.7337, -39.5399, -53.5552, 0.15", "-74.6392, -39.7151, -53.9151, 0.66", "-75.7854, -39.9551, -54.3452, 0.07", "-77.6254, -40.3614, -54.9854, 1.62", "-80.1056, -40.9112, -55.7657, 0.07", "-81.4104, -41.1836, -56.1482, 0.07", "-82.6217, -41.3851, -56.5255, 0.07", "-83.6718, -41.5035, -56.855, 0.07", "-85.3826, -41.575, -57.381, 1.47", "-86.0987, -41.558, -57.6017, 1.47", "-87.5428, -41.4802, -58.204, 0.07", "-88.8985, -41.4149, -58.9589, 0.07", "-90.2345, -41.3839, -59.9073, 0.07", "-91.5046, -41.4008, -61.01, 0.07", "-92.3667, -41.4606, -61.8669, 1.1", "-94.5865, -41.7397, -64.1827, 0.44", "-95.4297, -41.8907, -65.0938, 1.32", "-96.8218, -42.2094, -66.5848, 1.32", "-98.4681, -42.6362, -68.2895, 0.22", "-99.4318, -42.8902, -69.2039, 0.22", "-100.308, -43.1164, -69.9298, 0.88", "-101.606, -43.4553, -70.8411, 0.07", "-102.847, -43.8017, -71.6522, 1.25", "-104.36, -44.2797, -72.5762, 0.07", "-105.022, -44.5011, -72.9555, 0.66", "-106.162, -44.8975, -73.594, 0.07", "-107.261, -45.3041, -74.2092, 0.07", "-108.282, -45.6975, -74.7669, 1.47", "-110.164, -46.4472, -75.8026, 0.07", "-110.743, -46.6845, -76.1283, 0.07", "-111.558, -47.0116, -76.5517, 0.59", "-112.224, -47.2547, -76.8617, 0.07", "-112.483, -47.3374, -76.9778, 0.07", "-113.318, -47.5714, -77.3612, 1.03", "-114.416, -47.8731, -77.8445, 0.07", "-115.28, -48.1261, -78.2403, 0.07", "-116.185, -48.3982, -78.607, 0.07", "-117.208, -48.7108, -78.9516, 0.07", "-118.145, -48.9983, -79.2202, 0.73", "-118.742, -49.1884, -79.3711, 0.88", "-119.24, -49.3586, -79.4781, 0.88", "-120.894, -49.9772, -79.7724, 0.07", "-121.45, -50.193, -79.85, 0.07", "-121.997, -50.4076, -79.9181, 0.44", "-123.114, -50.8115, -80.1174, 0.07", "-123.737, -50.9925, -80.2505, 0.07", "-124.483, -51.175, -80.4897, 1.25", "-125.611, -51.448, -80.9698, 0.07", "-126.343, -51.6485, -81.3493, 0.07", "-127.204, -51.8969, -81.8286, 0.95", "-127.91, -52.1086, -82.2561, 0.95", "-129.261, -52.5494, -83.1276, 0.15", "-129.931, -52.8051, -83.5604, 0.81", "-131.405, -53.4628, -84.4723, 0.07", "-132.279, -53.9215, -84.9732, 0.44", "-133.361, -54.5733, -85.5225, 0.07", "-133.874, -54.9159, -85.7547, 0.07", "-134.898, -55.6565, -86.1563, 1.4", "-135.939, -56.4951, -86.5106, 0.07", "-136.63, -57.0928, -86.681, 0.07", "-136.934, -57.3679, -86.7446, 0.44", "-137.895, -58.2543, -86.896, 0.07", "-139.051, -59.3331, -87.0726, 1.47", "-140.311, -60.5234, -87.2506, 0.37", "-141.761, -61.925, -87.3935, 0.07", "-141.967, -62.131, -87.4246, 0.07", "-142.676, -62.877, -87.5578, 0.59", "-143.386, -63.6648, -87.709, 0.07", "-143.893, -64.2538, -87.8335, 0.07", "-144.744, -65.3278, -88.1093, 1.18", "-145.992, -67.0774, -88.5646, 0.07", "-146.818, -68.2528, -88.8244, 0.07", "-147.143, -68.7139, -88.9114, 0.81", "-147.829, -69.6749, -89.0519, 0.07", "-148.39, -70.4412, -89.1689, 0.07", "-149.026, -71.3108, -89.2919, 0.88", "-149.71, -72.2576, -89.3621, 0.07", "-149.978, -72.6557, -89.4112, 0.07", "-150.335, -73.2439, -89.531, 0.73", "-151.05, -74.6043, -89.9403, 0.07", "-151.433, -75.3758, -90.2694, 0.07", "-151.631, -75.783, -90.4569, 0.07", "-151.982, -76.4908, -90.8245, 0.95", "-152.486, -77.4881, -91.3467, 0.07", "-152.943, -78.3286, -91.7518, 0.07", "-153.518, -79.3178, -92.1822, 0.07", "-154.253, -80.5313, -92.6793, 0.07", "-154.746, -81.3091, -92.991, 1.25", "-156.037, -83.2741, -93.7246, 2.06", "-157.101, -84.8268, -94.2486, 0.15", "-157.368, -85.2099, -94.3747, 0.15", "-157.861, -85.926, -94.6008, 0.44", "-158.425, -86.7272, -94.8741, 0.07", "-158.751, -87.1785, -95.0027, 0.07", "-159.282, -87.8926, -95.1753, 0.59", "-159.497, -88.2434, -95.266, 0.59", "-159.922, -89.2435, -95.4927, 0.07", "-160.185, -90.0987, -95.6698, 0.07", "-160.38, -90.841, -95.8354, 0.07", "-160.682, -92.1131, -96.1463, 2.06", "-161.141, -94.0791, -96.6758, 0.15", "-161.603, -95.901, -97.1845, 0.07", "-161.822, -96.6418, -97.461, 1.18", "-162.299, -98.0961, -98.0928, 0.07", "-162.544, -98.7336, -98.3973, 0.07", "-162.936, -99.6123, -98.8644, 0.07", "-163.405, -100.509, -99.3699, 1.32", "-164.582, -102.631, -100.626, 0.07", "-165.053, -103.555, -101.173, 0.07", "-165.337, -104.221, -101.574, 0.81", "-165.759, -105.261, -102.234, 0.07", "-165.93, -105.677, -102.506, 0.07", "-166.228, -106.372, -102.977, 0.88", "-166.733, -107.52, -103.7, 0.07", "-167.149, -108.476, -104.316, 0.07", "-167.677, -109.786, -105.13, 1.69", "-168.301, -111.489, -106.124, 0.07", "-168.854, -112.995, -106.994, 0.07", "-169.31, -114.233, -107.677, 1.18", "-169.732, -115.456, -108.295, 0.07", "-169.98, -116.222, -108.645, 0.07", "-170.116, -116.845, -108.911, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.54921, -20.0163, -0.1038, 1.1", "-2.9351, -20.8999, -2.25166, 1.1", "-3.29641, -21.586, -3.80796, 1.03", "-3.71341, -22.2209, -5.25519, 1.03", "-4.29183, -22.9626, -6.96986, 1.4", "-4.71416, -23.4576, -8.09282, 1.62", "-5.22684, -23.9723, -9.29677, 1.84", "-5.82222, -24.5654, -10.5457, 0.66", "-6.3356, -24.9859, -11.4265, 0.66", "-6.75841, -25.2548, -12.0272, 0.66", "-7.24322, -25.4995, -12.5935, 0.66", "-8.16533, -25.8388, -13.5268, 2.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.54921, -20.0163, -0.1038, 0.51", "-3.62191, -21.7695, 0.25302, 0.51", "-4.50798, -23.1101, 0.605075, 1.18", "-5.39601, -24.2997, 0.952877, 1.76", "-6.50391, -25.6691, 1.33555, 1.03", "-7.30004, -26.61, 1.55923, 1.03", "-7.91393, -27.3101, 1.70024, 1.25", "-8.87856, -28.2981, 1.8415, 0.59", "-9.73937, -29.1503, 1.92812, 0.95", "-11.038, -30.4635, 2.01332, 1.18", "-12.5307, -32.0177, 2.05296, 1.25", "-13.7647, -33.3243, 2.04412, 1.4", "-14.8756, -34.5279, 1.99007, 1.69", "-15.2563, -34.9573, 1.95989, 1.69", "-16.1397, -36.0125, 1.90066, 0.88", "-16.8864, -36.9306, 1.86284, 0.88", "-17.6773, -37.8884, 1.84459, 0.59", "-18.3642, -38.6735, 1.83267, 0.95", "-19.0351, -39.375, 1.83076, 1.69", "-19.496, -39.8056, 1.83465, 1.84", "-20.8309, -40.8396, 1.86679, 0.51", "-21.9253, -41.6213, 1.90557, 0.15", "-22.9172, -42.3054, 1.94724, 0.95", "-23.6899, -42.8227, 1.99191, 1.69", "-24.4676, -43.3217, 2.06691, 1.62", "-25.822, -44.1546, 2.24904, 0.22", "-27.0779, -44.9281, 2.48331, 0.44", "-27.9202, -45.484, 2.67188, 0.88", "-28.6902, -46.033, 2.87947, 1.03", "-29.7219, -46.8237, 3.18426, 0.15", "-30.5054, -47.4873, 3.43265, 0.29", "-31.3528, -48.2677, 3.6997, 1.32", "-31.8135, -48.7003, 3.83457, 1.69", "-32.9897, -49.8514, 4.14721, 0.95", "-34.0922, -50.9667, 4.41447, 0.51", "-35.0117, -51.91, 4.61133, 0.15", "-36.3057, -53.2326, 4.87715, 1.54", "-37.1163, -54.024, 5.03321, 1.54", "-37.8727, -54.7094, 5.17385, 1.32", "-39.1213, -55.6973, 5.39614, 0.07", "-39.8942, -56.2318, 5.53391, 0.51", "-40.5059, -56.6001, 5.64661, 0.22", "-41.4579, -57.1146, 5.83382, 0.66", "-42.6092, -57.6881, 6.05638, 0.15", "-43.5833, -58.135, 6.23607, 0.15", "-43.9946, -58.304, 6.30347, 0.15", "-45.006, -58.7245, 6.46673, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.482399, -23.4005, 0.983491, 0.81", "0.114335, -24.2752, 0.965523, 0.81", "0.986638, -25.5549, 0.961111, 0.29", "1.85359, -26.8147, 0.995289, 0.15", "2.42646, -27.6261, 1.04713, 0.88", "3.0157, -28.4414, 1.11629, 0.37", "3.68205, -29.3619, 1.20227, 0.15", "4.15982, -30.003, 1.27525, 1.1", "4.93616, -30.994, 1.40992, 1.25", "5.51694, -31.7173, 1.51513, 1.03", "6.37981, -32.7977, 1.68311, 0.15", "6.70863, -33.2193, 1.75317, 0.15", "7.24293, -33.9197, 1.85467, 0.73", "7.47754, -34.2416, 1.88862, 0.73", "7.86501, -34.8093, 1.91888, 0.51", "8.67561, -36.1078, 1.9298, 0.22", "9.19692, -37.014, 1.91771, 1.32", "9.74894, -38.0384, 1.87853, 0.73", "10.4441, -39.4281, 1.78258, 0.07", "10.7814, -40.1166, 1.7162, 0.15", "11.2519, -41.0751, 1.59075, 1.1", "11.5492, -41.6993, 1.48248, 1.18", "11.9335, -42.552, 1.33014, 0.44", "12.1951, -43.1769, 1.23117, 0.07", "12.3695, -43.621, 1.18565, 0.73", "12.6207, -44.2545, 1.1682, 0.44", "12.8649, -44.8614, 1.20036, 0.44", "13.0626, -45.398, 1.26555, 0.37", "13.2705, -46.0028, 1.37242, 1.03", "13.5028, -46.6749, 1.4988, 1.25", "13.652, -47.0849, 1.5808, 1.54", "13.9859, -47.9311, 1.76103, 0.51", "14.3217, -48.7033, 1.92135, 0.44", "14.9064, -49.9343, 2.19265, 0.44", "15.345, -50.8071, 2.38875, 0.59", "15.6684, -51.4184, 2.52587, 1.54", "15.9668, -51.9486, 2.64826, 1.76", "16.3208, -52.5252, 2.78732, 1.25", "16.7442, -53.1536, 2.93404, 1.47", "17.4014, -54.0923, 3.12659, 0.66", "17.8333, -54.7079, 3.22553, 0.73", "18.1721, -55.1792, 3.27482, 1.1", "18.7324, -55.9498, 3.31968, 1.69", "19.2288, -56.6326, 3.32764, 0.88", "19.8087, -57.4383, 3.29827, 0.22", "20.2438, -58.0655, 3.25039, 0.81", "20.7227, -58.768, 3.17705, 0.37", "21.2403, -59.5445, 3.08161, 0.37", "21.6221, -60.1365, 2.99865, 0.66", "21.7967, -60.417, 2.95843, 0.95", "22.057, -60.8404, 2.89293, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.482399, -23.4005, 0.983491, 0.59", "-0.528936, -24.4438, 1.39441, 0.59", "-0.607869, -25.3053, 1.73086, 0.59", "-0.659519, -25.8975, 1.93594, 0.59", "-0.711889, -26.6406, 2.19679, 0.66", "-0.761749, -27.447, 2.493, 0.95", "-0.823559, -28.5124, 2.88419, 1.25", "-0.876149, -29.0139, 3.05846, 0.95", "-1.02924, -30.1203, 3.42031, 0.73", "-1.13105, -30.8503, 3.667, 1.32", "-1.2088, -31.5587, 3.92475, 1.62", "-1.26659, -32.1283, 4.14417, 1.62", "-1.38409, -33.1183, 4.54925, 0.59", "-1.51137, -34.0039, 4.91882, 0.59", "-1.65745, -34.9537, 5.33757, 0.81", "-1.81878, -35.9633, 5.78051, 1.1", "-1.89233, -36.4017, 5.97649, 2.06", "-2.06637, -37.451, 6.4573, 1.03", "-2.21289, -38.4159, 6.88138, 0.51", "-2.34037, -39.1799, 7.17872, 1.1", "-2.51634, -40.1713, 7.5224, 0.66", "-2.69945, -41.2249, 7.87007, 2.13", "-2.83418, -42.055, 8.17045, 2.13", "-2.93445, -42.7162, 8.40893, 2.13", "-3.02184, -43.3008, 8.61914, 2.13", "-3.23747, -44.6454, 9.09377, 1.76", "-3.38713, -45.8158, 9.52686, 2.42", "-3.51304, -47.0738, 10.052, 2.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.7789, 5.7814, -1.89883, 1.03", "-14.541, 6.04286, -2.3727, 1.03", "-14.3213, 6.30797, -2.82378, 0.29", "-14.0951, 6.62017, -3.31959, 1.18", "-13.9436, 6.88063, -3.6826, 1.47", "-13.6623, 7.48443, -4.46593, 1.18", "-13.5626, 7.75352, -4.80201, 1.4", "-13.5068, 8.03568, -5.13334, 1.4", "-13.5019, 8.38256, -5.5676, 0.73", "-13.5896, 8.78905, -6.081, 0.51", "-13.68, 9.04312, -6.39779, 0.15", "-13.822, 9.34615, -6.77443, 1.25", "-14.0031, 9.74257, -7.30935, 1.47", "-14.1995, 10.2312, -8.07451, 1.18", "-14.3054, 10.5561, -8.62766, 0.51", "-14.355, 10.8439, -9.1383, 0.07", "-14.352, 11.2268, -9.81195, 1.25", "-14.2674, 11.6958, -10.6319, 0.37", "-14.1197, 12.0627, -11.3062, 1.03", "-14.025, 12.2141, -11.6094, 1.18", "-13.836, 12.3942, -12.0661, 1.03", "-13.4537, 12.6225, -12.8738, 0.81", "-13.1917, 12.7178, -13.4003, 0.29", "-12.8685, 12.7798, -14.062, 1.25", "-12.605, 12.8123, -14.6404, 1.32", "-12.318, 12.836, -15.4968, 1.32", "-12.1995, 12.8486, -16.0782, 1.32", "-12.1273, 12.859, -16.6075, 1.32", "-12.0409, 12.8697, -17.5436, 1.4", "-12.0265, 12.866, -17.9982, 1.25", "-12.0788, 12.8552, -19.1717, 1.25", "-12.1573, 12.8619, -20.0702, 1.25", "-12.2027, 12.8885, -20.8528, 1.25", "-12.1959, 12.9231, -21.6037, 1.25", "-12.173, 12.9755, -22.2208, 1.25", "-12.1034, 13.0713, -22.9829, 0.59", "-12.0643, 13.1427, -23.2891, 0.95", "-12.022, 13.388, -23.9662, 0.66", "-11.9931, 13.6615, -24.5505, 1.69", "-11.8996, 14.0852, -25.428, 0.15", "-11.8632, 14.1771, -25.625, 0.15", "-11.7386, 14.377, -26.1205, 1.4", "-11.3421, 14.8666, -27.4702, 0.29", "-11.166, 15.0189, -27.9528, 1.4", "-10.8171, 15.2402, -28.7322, 0.51", "-10.5524, 15.3527, -29.1673, 0.95", "-10.0917, 15.5126, -29.8089, 0.07", "-9.74437, 15.615, -30.2448, 0.73", "-9.30483, 15.7427, -30.7555, 0.07", "-9.10649, 15.8092, -31.0267, 1.1", "-8.72875, 15.9806, -31.6699, 0.07", "-8.5584, 16.0716, -32.0476, 0.73", "-8.23008, 16.2665, -33.0099, 0.59", "-8.18945, 16.2932, -33.1757, 1.4", "-8.00915, 16.4286, -34.1261, 1.4", "-7.90448, 16.5252, -34.7866, 1.4", "-7.86405, 16.5776, -35.0836, 1.03", "-7.78516, 16.677, -35.5537, 1.03", "-7.65876, 16.8201, -36.1065, 0.66", "-7.43988, 17.0582, -36.8576, 0.95", "-7.34398, 17.1679, -37.1791, 1.25", "-7.00194, 17.6449, -38.4517, 0.07", "-6.82032, 17.9769, -39.241, 1.1", "-6.71074, 18.2607, -39.8419, 0.07", "-6.646, 18.5047, -40.3208, 1.18", "-6.54851, 19.2632, -41.7393, 1.18", "-6.53904, 19.4657, -42.1192, 1.25", "-6.5453, 19.7903, -42.6929, 0.37", "-6.55483, 19.9417, -42.9681, 0.37", "-6.61225, 20.3059, -43.7266, 1.47", "-6.67796, 20.6138, -44.4216, 0.81", "-6.74827, 20.9663, -45.2163, 0.07", "-6.78918, 21.1649, -45.8279, 0.51", "-6.82882, 21.3185, -46.4604, 0.15", "-6.8786, 21.5269, -47.5589, 0.73", "-6.88688, 21.5774, -47.8798, 0.73", "-6.90495, 21.6602, -48.4286, 1.25", "-7.02556, 21.8847, -49.7127, 0.07", "-7.05484, 21.9194, -49.8924, 0.44", "-7.18077, 22.0637, -50.4606, 0.07", "-7.25365, 22.1501, -50.7459, 1.25", "-7.48774, 22.4254, -51.5473, 0.29", "-7.67456, 22.6589, -52.1722, 1.4", "-8.14761, 23.3071, -53.7591, 0.07", "-8.27842, 23.5161, -54.2594, 0.59", "-8.4877, 23.9202, -55.2477, 0.15", "-8.62477, 24.26, -56.0818, 2.13", "-8.76149, 24.7768, -57.3063, 0.66", "-8.79194, 24.9801, -57.7613, 0.51", "-8.80746, 25.3016, -58.3931, 1.4", "-8.82606, 25.7763, -59.3315, 0.22", "-8.83553, 25.8929, -59.5439, 0.22", "-8.88789, 26.2279, -60.1443, 1.1", "-8.94557, 26.4787, -60.5555, 0.59", "-8.991, 26.6711, -60.8944, 1.1", "-9.05909, 27.2194, -62.0098, 0.37", "-9.04863, 27.3198, -62.2236, 0.59", "-8.94953, 27.5734, -62.8409, 0.07", "-8.80834, 27.7543, -63.3447, 0.73", "-8.46312, 28.0948, -64.3854, 1.32", "-8.04236, 28.3972, -65.4564, 0.07", "-7.78677, 28.5177, -65.9495, 0.81", "-7.54244, 28.6012, -66.3721, 0.37", "-7.33283, 28.6422, -66.6736, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.7789, 5.7814, -1.89883, 2.42", "-15.7499, 6.27413, -2.07571, 2.42", "-18.0298, 7.43099, -2.49102, 1.47" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.2345, 10.5979, 12.3334, 0.88", "-18.5423, 12.8205, 12.1666, 0.88", "-18.6913, 14.2265, 12.0768, 0.66", "-18.7628, 14.8758, 12.0364, 0.66", "-18.8985, 16.0379, 11.9354, 0.66", "-19.0228, 17.055, 11.8031, 0.59", "-19.1129, 17.7752, 11.6815, 0.59", "-19.2059, 18.7164, 11.4724, 0.81", "-19.2819, 19.5032, 11.2821, 1.32", "-19.4512, 21.085, 10.8384, 0.29", "-19.5979, 22.2463, 10.444, 0.29", "-19.7072, 22.8799, 10.1918, 0.29", "-19.8204, 23.4166, 9.95098, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-18.2345, 10.5979, 12.3334, 0.95", "-19.792, 10.8971, 12.6158, 0.95", "-20.612, 11.0767, 12.7781, 0.95", "-21.3319, 11.2583, 12.9552, 0.95", "-21.7143, 11.3644, 13.0678, 1.03", "-22.2587, 11.517, 13.2513, 0.88", "-23.1903, 11.7729, 13.5785, 0.51", "-24.0055, 12.0078, 13.8927, 1.03", "-24.61, 12.1759, 14.1185, 1.32", "-25.2435, 12.3521, 14.3621, 1.32", "-26.1856, 12.6223, 14.7213, 1.4", "-26.663, 12.7592, 14.9099, 0.73", "-27.2156, 12.9061, 15.1261, 0.73", "-27.6047, 12.9985, 15.2528, 0.88", "-28.0859, 13.101, 15.3716, 0.44", "-29.0463, 13.3118, 15.5459, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "95.635, 238.179, -152.755, 0.37", "95.5616, 238.68, -153.771, 0.37", "95.525, 239.101, -154.572, 0.81", "95.4699, 239.523, -155.346, 0.29", "95.3977, 240.007, -156.188, 0.07", "95.3422, 240.387, -156.819, 0.88", "95.2949, 240.822, -157.5, 0.07", "95.2464, 241.344, -158.245, 0.07", "95.2066, 241.761, -158.781, 0.07", "95.1832, 242.043, -159.131, 1.18", "95.1546, 242.675, -159.976, 0.15", "95.1227, 243.117, -160.566, 0.59" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "95.635, 238.179, -152.755, 0.15", "95.8588, 238.741, -153.044, 0.15", "96.1536, 239.551, -153.485, 0.15", "96.3836, 240.235, -153.904, 0.15", "96.4741, 240.533, -154.09, 1.18", "96.7047, 241.407, -154.625, 0.07", "96.8835, 242.195, -155.114, 0.07", "96.9931, 242.895, -155.559, 1.25", "97.1152, 243.92, -156.199, 0.07", "97.1723, 244.551, -156.56, 0.07", "97.2217, 245.303, -156.98, 0.73", "97.274, 245.952, -157.329, 0.07", "97.3409, 246.523, -157.626, 0.07", "97.5202, 247.778, -158.235, 2.06", "97.7528, 249.131, -158.866, 0.07", "97.9302, 249.867, -159.207, 0.88", "98.2427, 250.893, -159.665, 0.07", "98.4958, 251.624, -159.986, 0.07", "98.6395, 252.011, -160.162, 0.07", "98.9518, 252.787, -160.541, 1.32", "99.298, 253.603, -160.953, 0.22", "99.5624, 254.292, -161.324, 0.22", "99.7638, 254.964, -161.723, 0.07", "99.9615, 255.834, -162.307, 0.81", "100.073, 256.536, -162.845, 0.81", "100.118, 257.173, -163.367, 1.25", "100.123, 258.091, -164.138, 0.07", "100.11, 258.709, -164.657, 0.07", "100.079, 259.411, -165.22, 0.95", "100.015, 260.526, -166.078, 0.07", "99.9651, 261.289, -166.63, 1.54", "99.9263, 262.431, -167.418, 0.07", "99.9257, 263.649, -168.183, 0.07", "99.9561, 264.328, -168.594, 0.07", "100.026, 265.162, -169.11, 0.95", "100.068, 265.593, -169.388, 0.95", "100.155, 266.538, -170.054, 0.07", "100.181, 267.177, -170.526, 0.07", "100.187, 267.891, -171.053, 0.88", "100.145, 269.185, -171.998, 0.07", "100.095, 269.944, -172.514, 0.95", "100.05, 270.585, -172.913, 0.07", "99.9624, 272.027, -173.66, 0.07", "99.9776, 273.12, -174.089, 1.18", "100.046, 273.824, -174.266, 1.18", "100.242, 275.016, -174.44, 0.07", "100.407, 275.833, -174.521, 0.07", "100.684, 277.255, -174.64, 0.07", "100.942, 278.907, -174.779, 0.07", "101.022, 279.942, -174.891, 0.07", "101.035, 280.822, -175.014, 0.07", "100.961, 282.318, -175.296, 0.07", "100.786, 283.965, -175.697, 0.07", "100.556, 285.493, -176.151, 0.07", "100.257, 287.262, -176.744, 0.07", "100.173, 287.929, -176.988, 0.22", "100.087, 288.865, -177.334, 0.07", "100.024, 290.349, -177.893, 0.07", "100.053, 291.178, -178.213, 0.37", "100.167, 292.258, -178.657, 0.07", "100.391, 293.49, -179.217, 0.88" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.16533, -25.8388, -13.5268, 1.1", "-8.95904, -27.4876, -14.7078, 1.1", "-9.69797, -29.0852, -15.7005, 0.81", "-10.1206, -30.074, -16.2433, 1.1", "-10.4149, -30.8648, -16.6004, 1.4", "-10.9231, -32.313, -17.2156, 0.07", "-11.2043, -33.1699, -17.5692, 0.15", "-11.563, -34.5239, -18.0822, 1.91", "-11.7752, -35.7445, -18.5527, 1.62", "-12.0222, -38.1525, -19.5766, 0.22", "-12.1262, -39.9909, -20.4541, 2.28", "-12.1431, -41.2118, -21.1469, 1.62", "-12.1016, -43.3026, -22.4964, 0.29", "-12.0854, -44.6858, -23.4819, 1.03", "-12.1326, -46.0697, -24.5776, 0.59", "-12.2496, -47.0407, -25.4293, 0.15", "-12.649, -48.4322, -26.6987, 1.69", "-13.0349, -49.2694, -27.4789, 2.06", "-14.0928, -50.891, -28.9435, 0.29", "-14.8102, -51.8, -29.7198, 0.29", "-15.8626, -53.0535, -30.6123, 2.06", "-17.6487, -55.2174, -31.8244, 0.44", "-18.193, -55.8982, -32.1239, 0.44", "-18.9484, -56.9182, -32.4751, 1.84", "-19.7052, -58.0911, -32.7669, 1.62", "-20.6697, -59.8005, -33.0646, 0.22", "-21.5797, -61.4946, -33.2426, 0.22", "-22.3794, -63.0222, -33.3197, 1.98", "-23.3969, -64.9078, -33.4032, 0.66", "-24.2011, -66.3188, -33.5009, 0.66", "-24.7025, -67.093, -33.5747, 0.22", "-25.6677, -68.3234, -33.761, 1.98", "-26.2946, -68.9851, -33.8862, 1.98", "-27.1392, -69.6871, -34.0677, 1.47", "-28.9586, -70.8884, -34.4872, 0.15", "-30.3795, -71.6822, -34.8217, 0.15", "-31.9168, -72.5058, -35.1949, 2.06", "-32.9341, -73.0391, -35.4577, 2.06", "-34.754, -73.9898, -35.9387, 0.44", "-35.9368, -74.6449, -36.2726, 1.03", "-37.3826, -75.501, -36.6908, 0.07", "-38.5271, -76.2623, -37.0589, 0.07", "-40.1125, -77.4675, -37.6107, 1.76", "-40.4908, -77.809, -37.7499, 1.76", "-41.9471, -79.3924, -38.3467, 0.22", "-42.3135, -79.8268, -38.5178, 0.22", "-43.1485, -80.8661, -38.9605, 1.4", "-43.709, -81.5447, -39.2869, 1.84", "-44.8413, -82.8839, -39.9432, 0.37", "-45.4068, -83.4956, -40.2738, 0.37", "-46.296, -84.3841, -40.7918, 0.07", "-47.2512, -85.2721, -41.3345, 1.25", "-48.7811, -86.5797, -42.1776, 0.29", "-49.8678, -87.4442, -42.7614, 1.91", "-50.6771, -88.0738, -43.2214, 1.25", "-51.8681, -89.0462, -43.908, 0.15", "-53.1217, -90.1761, -44.6494, 0.15", "-53.7407, -90.797, -45.0119, 0.88", "-54.1221, -91.2784, -45.268, 1.18", "-55.2311, -93.0673, -46.1353, 0.22", "-55.6749, -94.0122, -46.5233, 0.22", "-55.8308, -94.5099, -46.7023, 1.18", "-56.0127, -95.436, -47.0096, 1.18", "-56.2562, -97.3098, -47.5694, 0.29", "-56.3516, -98.4269, -47.8577, 0.29", "-56.389, -99.4362, -48.0511, 1.03", "-56.4144, -100.938, -48.3416, 1.84", "-56.4238, -102.446, -48.624, 0.44", "-56.408, -103.443, -48.7914, 0.44", "-56.4038, -104.096, -48.8641, 0.07", "-56.3701, -105.918, -49.0689, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.16533, -25.8388, -13.5268, 0.95", "-9.52143, -25.9721, -12.8905, 0.95", "-10.5657, -26.1129, -12.5367, 0.22", "-11.0177, -26.2102, -12.462, 0.37", "-11.5292, -26.3634, -12.4362, 0.07", "-12.2341, -26.6188, -12.4502, 0.07", "-12.6679, -26.7972, -12.4777, 0.95", "-12.9822, -26.9518, -12.5429, 1.03", "-13.8274, -27.402, -12.7635, 0.07", "-14.496, -27.7825, -12.9321, 0.07", "-15.2129, -28.2123, -13.1014, 1.84", "-16.1138, -28.7721, -13.3178, 0.07", "-16.539, -29.0317, -13.4172, 0.07", "-16.7218, -29.1438, -13.4596, 0.81", "-17.1603, -29.4127, -13.556, 0.07", "-17.672, -29.7159, -13.6865, 0.07", "-18.3003, -30.0711, -13.872, 0.51", "-18.6342, -30.2527, -13.9782, 0.07", "-18.9981, -30.4446, -14.0974, 0.07", "-19.588, -30.7412, -14.2899, 1.4", "-20.5044, -31.2005, -14.5955, 0.07", "-21.288, -31.6013, -14.8765, 0.07", "-22.084, -32.014, -15.1773, 1.69", "-23.0938, -32.5312, -15.6098, 0.07", "-23.672, -32.8206, -15.892, 0.07", "-23.952, -32.9659, -16.0454, 1.1", "-24.615, -33.3241, -16.457, 0.07", "-25.1179, -33.5969, -16.7908, 0.07", "-25.7337, -33.9289, -17.2125, 0.88", "-26.4198, -34.2991, -17.6991, 0.07", "-27.0762, -34.6477, -18.1717, 1.84", "-28.0023, -35.1071, -18.8027, 0.07", "-28.6066, -35.3884, -19.1997, 0.07", "-29.0209, -35.569, -19.4676, 0.59", "-29.7441, -35.8844, -19.9145, 0.07", "-30.2552, -36.109, -20.2214, 0.07", "-30.814, -36.3393, -20.5442, 1.54", "-31.8178, -36.7044, -21.0872, 0.07", "-32.4368, -36.9014, -21.4186, 0.07", "-33.1341, -37.1031, -21.761, 0.07", "-33.6566, -37.2544, -21.9814, 0.07", "-34.2817, -37.4247, -22.2071, 1.18", "-34.9508, -37.5905, -22.4276, 0.07", "-35.5543, -37.7414, -22.6, 0.07", "-36.5162, -38.0247, -22.7977, 0.07", "-37.2524, -38.2901, -22.9059, 1.18", "-38.1069, -38.6609, -23.001, 0.07", "-38.5507, -38.8783, -23.0378, 0.07", "-39.6123, -39.433, -23.0994, 0.07", "-41.3153, -40.3312, -23.1679, 3.01", "-43.2099, -41.324, -23.2301, 0.07", "-44.1343, -41.8047, -23.2699, 0.07", "-44.603, -42.0508, -23.2999, 0.07", "-45.109, -42.3055, -23.3457, 0.73", "-45.8445, -42.6399, -23.4642, 0.07", "-46.1778, -42.7652, -23.5715, 0.81", "-47.0202, -43.017, -23.9327, 0.07", "-47.4908, -43.1419, -24.1693, 0.29", "-47.9454, -43.2622, -24.4234, 0.07", "-48.4987, -43.4077, -24.7481, 0.95", "-49.3512, -43.6361, -25.3211, 0.07", "-49.8392, -43.7742, -25.6763, 0.07", "-50.1175, -43.8609, -25.8714, 0.81", "-50.8333, -44.0865, -26.3699, 0.07", "-51.2317, -44.2119, -26.6482, 1.1", "-52.3297, -44.5726, -27.415, 0.07", "-52.8832, -44.7881, -27.8184, 0.07", "-53.8617, -45.2075, -28.5785, 2.13" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.51304, -47.0738, 10.052, 0.88", "-2.94359, -48.0736, 10.1088, 0.88", "-2.66818, -48.559, 10.1412, 0.81", "-2.17455, -49.427, 10.1975, 0.66", "-1.71952, -50.2264, 10.2451, 0.51", "-1.35447, -50.8854, 10.2631, 0.44", "-1.06611, -51.4288, 10.2544, 0.07", "-0.890169, -51.7952, 10.2329, 0.07", "-0.779559, -52.0548, 10.2023, 1.18", "-0.527625, -52.6734, 10.0876, 1.4", "-0.105229, -53.6466, 9.8692, 0.37", "0.289616, -54.4831, 9.67394, 0.44", "0.531793, -54.9895, 9.56195, 0.73", "0.62561, -55.1899, 9.52398, 0.95", "0.964514, -55.9256, 9.41841, 0.51", "1.49268, -57.0624, 9.32268, 0.22", "1.95672, -58.0308, 9.30955, 0.29", "2.22556, -58.5857, 9.33301, 0.29", "2.43571, -59.0282, 9.36945, 0.29", "2.61439, -59.448, 9.41048, 0.29", "2.75168, -59.8221, 9.45473, 0.44", "2.92188, -60.359, 9.53904, 1.4", "3.1083, -60.9905, 9.6491, 0.07", "3.27275, -61.5261, 9.73253, 0.51", "3.40908, -61.9375, 9.78358, 1.03" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.51304, -47.0738, 10.052, 1.47", "-3.73483, -48.4988, 10.8251, 1.47", "-3.88379, -49.2592, 11.236, 1.4", "-4.11697, -50.1969, 11.7375, 0.66", "-4.36433, -51.0096, 12.1541, 0.73", "-4.51684, -51.5205, 12.412, 1.1", "-4.73192, -52.2842, 12.7715, 1.32", "-4.99099, -53.3529, 13.2668, 0.51", "-5.1482, -53.9602, 13.5336, 1.32", "-5.4578, -54.9306, 13.943, 0.73", "-5.77462, -55.768, 14.2664, 0.29", "-6.17397, -56.723, 14.6132, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-18.0298, 7.43099, -2.49102, 0.95", "-18.5612, 7.25922, -2.52602, 0.95", "-19.4272, 6.94611, -2.66413, 1.1", "-19.9809, 6.74073, -2.78778, 0.88", "-21.2199, 6.3167, -3.10737, 0.37", "-22.0821, 6.06298, -3.33248, 0.44", "-23.0909, 5.79424, -3.58425, 0.66", "-23.9283, 5.56844, -3.81864, 0.73", "-24.6339, 5.36221, -4.02771, 0.66", "-25.4863, 5.09122, -4.25101, 0.66", "-26.3859, 4.76901, -4.43776, 0.51", "-27.3128, 4.41816, -4.57923, 1.18", "-28.3922, 3.96013, -4.7013, 1.91", "-29.4929, 3.4208, -4.80416, 1.4", "-31.0671, 2.574, -4.95664, 0.51", "-31.888, 2.10738, -5.05318, 0.95", "-32.4719, 1.77426, -5.14193, 1.18", "-33.3514, 1.31895, -5.29882, 0.73", "-34.1812, 0.973609, -5.4623, 0.37", "-34.8014, 0.791789, -5.59912, 0.37", "-35.5374, 0.675079, -5.77752, 1.1", "-36.1713, 0.62232, -5.92676, 1.25", "-36.889, 0.58383, -6.08112, 1.62", "-37.9165, 0.552213, -6.26992, 0.81", "-38.7997, 0.500519, -6.41432, 0.51", "-39.7372, 0.370627, -6.58008, 0.51", "-40.746, 0.169884, -6.77924, 0.59", "-41.5824, -0.047837, -6.97157, 1.32", "-42.127, -0.233879, -7.11604, 1.98", "-43.259, -0.721765, -7.46498, 1.76", "-44.8333, -1.56277, -8.01563, 0.22", "-45.6503, -2.08624, -8.32352, 0.22", "-46.1082, -2.42413, -8.50758, 0.95", "-46.654, -2.86782, -8.72937, 0.88", "-47.1754, -3.33204, -8.93532, 0.44", "-47.7072, -3.81959, -9.13392, 0.66", "-48.7181, -4.74644, -9.46997, 1.91", "-49.1522, -5.1163, -9.60623, 1.98", "-50.3561, -6.01052, -9.95448, 0.22", "-51.3093, -6.62025, -10.2113, 0.22", "-51.9404, -6.99934, -10.3717, 0.51", "-52.7869, -7.48522, -10.5768, 1.84", "-53.4423, -7.84722, -10.7248, 1.91", "-54.2512, -8.29025, -10.8643, 1.54", "-55.6556, -9.04402, -11.0354, 0.37", "-56.5693, -9.53585, -11.1218, 0.37", "-57.2335, -9.91945, -11.1661, 0.88", "-57.707, -10.22, -11.1831, 1.1", "-58.8575, -11.0398, -11.1805, 0.15", "-59.761, -11.7153, -11.1593, 0.15", "-60.4898, -12.2586, -11.1323, 1.69", "-61.0529, -12.6588, -11.1115, 1.54", "-62.3231, -13.5391, -11.0968, 0.15", "-62.8585, -13.9197, -11.1035, 0.15", "-63.7003, -14.5427, -11.1739, 0.15", "-64.4106, -15.1006, -11.2597, 1.32", "-64.9917, -15.5654, -11.3543, 1.32", "-65.5173, -16.0019, -11.4746, 1.47", "-65.8835, -16.3384, -11.5929, 1.47", "-66.6976, -17.197, -11.8864, 0.15", "-67.0544, -17.6302, -12.0299, 0.15", "-67.3544, -17.9991, -12.1601, 0.81", "-67.7446, -18.4555, -12.324, 1.18", "-68.4345, -19.1874, -12.5774, 0.07", "-69.081, -19.825, -12.7794, 0.07", "-69.4405, -20.1581, -12.8688, 1.1", "-70.0223, -20.6705, -13.013, 1.54", "-70.7735, -21.2859, -13.1952, 1.4", "-72.0513, -22.2698, -13.4905, 0.44", "-72.7759, -22.8054, -13.649, 0.07", "-73.9952, -23.6984, -13.8976, 0.07", "-74.7922, -24.2803, -14.0439, 1.18", "-75.6712, -24.9197, -14.1889, 2.28", "-76.754, -25.6647, -14.3555, 0.59", "-77.7251, -26.3027, -14.4888, 0.29", "-78.6381, -26.8929, -14.5702, 0.29", "-79.9356, -27.7606, -14.6203, 0.07", "-80.9618, -28.4734, -14.6156, 1.69", "-81.5677, -28.9136, -14.5974, 1.76", "-82.7927, -29.8207, -14.5596, 0.07", "-83.8627, -30.6204, -14.5291, 0.15", "-84.3861, -31.0166, -14.5279, 0.15", "-85.2698, -31.6983, -14.5563, 1.32", "-86.1032, -32.331, -14.6207, 1.32", "-87.1006, -33.061, -14.7372, 0.07", "-88.1405, -33.7802, -14.901, 0.37", "-89.1032, -34.385, -15.057, 1.84", "-89.8447, -34.8056, -15.1606, 1.84", "-91.0088, -35.4063, -15.2946, 0.07", "-91.8826, -35.8203, -15.3907, 0.37", "-93.0929, -36.3423, -15.5091, 0.07", "-94.4231, -36.8702, -15.6306, 1.91", "-94.9607, -37.0755, -15.6735, 1.91", "-96.1625, -37.5459, -15.7742, 0.51", "-97.1541, -37.9383, -15.8723, 0.15", "-97.8435, -38.2267, -15.9484, 0.15", "-98.408, -38.4793, -16.0188, 0.44", "-99.2917, -38.9216, -16.1597, 0.07", "-100.05, -39.3219, -16.285, 1.03", "-100.492, -39.5707, -16.3624, 1.25", "-101.465, -40.1724, -16.5417, 0.59", "-102.344, -40.7506, -16.7238, 1.03", "-102.961, -41.15, -16.8567, 1.54", "-104.129, -41.9009, -17.1292, 0.07", "-104.763, -42.3149, -17.2756, 0.07", "-105.675, -42.9192, -17.4907, 0.07", "-105.927, -43.0829, -17.5481, 1.1", "-106.6, -43.5063, -17.698, 1.32", "-107.428, -44.0203, -17.8863, 0.07", "-108.109, -44.4402, -18.0427, 0.07", "-108.856, -44.8903, -18.233, 1.32", "-109.425, -45.2482, -18.3969, 1.32", "-110.687, -46.1256, -18.8337, 0.07", "-110.978, -46.3521, -18.9409, 0.51", "-111.742, -46.9924, -19.2238, 0.07", "-112.169, -47.3865, -19.394, 0.95", "-112.59, -47.847, -19.5643, 1.32", "-113.493, -48.9717, -19.9257, 0.07", "-114.112, -49.8527, -20.141, 1.62", "-114.47, -50.3871, -20.2455, 2.06", "-114.726, -50.7898, -20.2891, 1.91", "-115.359, -51.7745, -20.3106, 0.73", "-115.756, -52.3869, -20.2707, 0.07", "-116.296, -53.2328, -20.1285, 0.73", "-116.965, -54.2488, -19.9305, 0.07", "-117.668, -55.2816, -19.7177, 1.54", "-118.439, -56.3465, -19.478, 0.07", "-119.12, -57.2161, -19.2759, 0.07", "-119.792, -58.024, -19.0775, 0.07", "-120.331, -58.6116, -18.9264, 1.69", "-121.005, -59.2729, -18.7452, 1.91", "-122.077, -60.2302, -18.4994, 0.07", "-122.706, -60.7266, -18.3676, 0.37", "-123.719, -61.4351, -18.1887, 0.15", "-124.376, -61.8357, -18.0965, 0.15", "-125.264, -62.333, -17.9767, 1.69", "-126.103, -62.7536, -17.886, 0.88", "-127.217, -63.2769, -17.8663, 0.07", "-127.769, -63.527, -17.8988, 0.44", "-128.831, -63.9875, -18.0584, 0.07", "-129.231, -64.1544, -18.1403, 0.73", "-129.711, -64.3315, -18.2598, 1.03", "-130.961, -64.749, -18.5833, 0.07", "-131.601, -64.9673, -18.7575, 0.81", "-132.329, -65.2445, -18.9728, 0.07", "-133.192, -65.6284, -19.2427, 0.07", "-134.096, -66.0968, -19.5453, 1.84", "-134.369, -66.2625, -19.6421, 1.84", "-135.511, -67.0602, -20.0602, 0.07", "-136.156, -67.5939, -20.3095, 0.37", "-136.707, -68.1327, -20.5274, 0.07", "-137.346, -68.7987, -20.7881, 1.32", "-137.711, -69.2103, -20.9284, 1.03", "-138.317, -69.8938, -21.1424, 0.22", "-139.088, -70.7153, -21.3837, 0.07", "-139.734, -71.3555, -21.5728, 0.81", "-140.457, -72.061, -21.7784, 1.25", "-141.197, -72.7655, -21.9844, 1.25", "-142.393, -73.8734, -22.3107, 0.07", "-143.572, -74.932, -22.6196, 0.07", "-144.259, -75.5179, -22.796, 1.69", "-144.853, -76.0024, -22.9354, 1.69", "-145.731, -76.6995, -23.1175, 0.07", "-146.312, -77.11, -23.2296, 0.95", "-147.014, -77.5743, -23.3476, 0.15", "-147.197, -77.6908, -23.3744, 0.51", "-147.924, -78.1475, -23.4971, 0.07", "-148.44, -78.4789, -23.6233, 0.07", "-148.976, -78.8388, -23.7875, 1.1", "-149.454, -79.1765, -23.9532, 1.47", "-149.979, -79.5814, -24.1485, 1.32", "-150.751, -80.2286, -24.4588, 0.07", "-151.394, -80.8069, -24.7256, 0.07", "-152.278, -81.6462, -25.075, 0.07", "-152.655, -82.0224, -25.2112, 1.25", "-153.235, -82.6316, -25.3996, 1.76", "-154.106, -83.5506, -25.6604, 0.07", "-154.559, -84.0345, -25.7735, 0.44", "-155.229, -84.74, -25.8898, 0.07", "-155.99, -85.4794, -25.9758, 1.03", "-156.867, -86.2262, -26.0433, 0.07", "-157.519, -86.7019, -26.0435, 0.51", "-158.043, -87.0424, -26.0101, 0.07", "-159.249, -87.7301, -25.909, 0.07", "-160.216, -88.2098, -25.8197, 1.47", "-161.7, -88.8138, -25.7025, 0.07", "-162.755, -89.1707, -25.6388, 1.4", "-163.365, -89.3545, -25.6075, 1.62", "-164.507, -89.6509, -25.5984, 0.07", "-165.283, -89.8268, -25.6406, 0.95", "-166.586, -90.094, -25.7773, 0.07", "-167.676, -90.2629, -25.9125, 0.07", "-168.568, -90.3938, -26.0445, 1.47", "-169.441, -90.4991, -26.1662, 1.32", "-170.601, -90.6244, -26.3106, 0.22", "-171.804, -90.7253, -26.456, 0.22", "-172.773, -90.7899, -26.5655, 1.69", "-173.691, -90.7992, -26.6991, 0.07", "-174.513, -90.7577, -26.8187, 0.07", "-175.038, -90.6949, -26.8785, 0.51", "-176.269, -90.4937, -27.0077, 0.07", "-176.493, -90.4444, -27.0331, 0.59", "-177.563, -90.1472, -27.1914, 0.07", "-178.426, -89.8345, -27.3336, 1.18", "-179.236, -89.497, -27.4655, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-18.0298, 7.43099, -2.49102, 0.37", "-18.3355, 7.85444, -2.6219, 0.37", "-18.6095, 8.23364, -2.74994, 0.37", "-18.9852, 8.74058, -2.95595, 0.73", "-19.3292, 9.19769, -3.16894, 1.03", "-19.5395, 9.47337, -3.30806, 1.1", "-19.7822, 9.79531, -3.4748, 0.95", "-20.1125, 10.2271, -3.71527, 0.95", "-20.6225, 10.904, -4.09898, 1.25", "-21.0577, 11.4905, -4.42419, 1.62", "-21.5573, 12.1656, -4.77931, 1.76", "-21.9591, 12.7007, -5.04019, 1.32", "-22.6129, 13.5947, -5.40749, 0.95", "-22.8761, 13.9745, -5.53034, 0.95", "-23.1959, 14.4533, -5.63388, 0.95", "-23.4684, 14.8752, -5.69137, 0.88", "-23.8328, 15.4519, -5.73191, 0.73", "-24.4982, 16.5201, -5.75891, 0.22", "-24.9459, 17.2698, -5.73889, 0.51", "-25.375, 18.026, -5.70761, 1.76", "-25.5809, 18.4027, -5.68486, 1.47", "-26.0734, 19.3381, -5.6185, 0.29", "-26.2267, 19.6416, -5.59586, 0.07", "-26.661, 20.4818, -5.53387, 0.95", "-26.9819, 21.0756, -5.50158, 1.62", "-27.3679, 21.7491, -5.48449, 1.62", "-27.7783, 22.409, -5.48314, 0.95", "-28.3024, 23.2199, -5.50377, 0.44", "-28.6652, 23.767, -5.53244, 0.44", "-29.117, 24.4307, -5.58794, 1.25", "-29.4955, 24.9832, -5.6447, 1.69", "-29.863, 25.5285, -5.70923, 0.95", "-30.4121, 26.3804, -5.80942, 0.37", "-30.6969, 26.8788, -5.86855, 0.07", "-30.9372, 27.3919, -5.92638, 1.03", "-31.1796, 28.0662, -5.99253, 0.59", "-31.4014, 28.9047, -6.07538, 0.59", "-31.5525, 29.6588, -6.15878, 0.44", "-31.6762, 30.458, -6.27936, 2.28", "-31.7538, 31.1499, -6.41914, 2.28", "-31.783, 31.9948, -6.65324, 1.03", "-31.741, 32.8751, -6.95967, 1.1", "-31.6707, 33.3838, -7.17618, 0.81", "-31.541, 33.9796, -7.47238, 0.81", "-31.3968, 34.4798, -7.75099, 0.81", "-31.0131, 35.5304, -8.41225, 0.59", "-30.8163, 36.0119, -8.73816, 0.59", "-30.5843, 36.5399, -9.10536, 1.32", "-30.277, 37.2558, -9.58542, 2.28", "-30.1861, 37.4874, -9.72936, 2.28", "-29.9467, 38.2206, -10.1516, 1.4", "-29.723, 39.1261, -10.6433, 0.37", "-29.662, 39.4959, -10.835, 0.37", "-29.6329, 39.9246, -11.0445, 1.18", "-29.6302, 40.4001, -11.2605, 1.18", "-29.641, 40.8763, -11.4601, 1.4", "-29.6561, 41.2305, -11.5979, 1.47", "-29.664, 41.65, -11.7618, 1.1", "-29.6714, 42.3706, -12.0551, 0.15", "-29.6821, 42.961, -12.3031, 0.15", "-29.7027, 43.6586, -12.5941, 1.69", "-29.7184, 44.1015, -12.7722, 1.76", "-29.7467, 44.9741, -13.0781, 0.22", "-29.7475, 45.5401, -13.2474, 0.29", "-29.74, 46.0938, -13.3844, 0.29", "-29.7186, 46.7059, -13.4974, 0.37", "-29.6767, 47.369, -13.5719, 1.18", "-29.5904, 48.1349, -13.5959, 0.22", "-29.4406, 49.0677, -13.5703, 0.22", "-29.3681, 49.4218, -13.5514, 0.22", "-29.2142, 50.0624, -13.5115, 1.62", "-29.1142, 50.4574, -13.4798, 2.42", "-28.7645, 51.8489, -13.3478, 0.22", "-28.6511, 52.3313, -13.3035, 0.22", "-28.5727, 52.7019, -13.2676, 0.95", "-28.5081, 53.0151, -13.2442, 0.95", "-28.3359, 53.902, -13.2035, 0.15", "-28.1667, 54.8206, -13.1605, 0.15", "-28.0859, 55.3276, -13.1416, 0.15", "-27.9878, 56.038, -13.1225, 0.15", "-27.9053, 56.7368, -13.1127, 2.5", "-27.8507, 57.2593, -13.1189, 3.16", "-27.8024, 57.7939, -13.1439, 3.16", "-27.6931, 59.3147, -13.2477, 0.73", "-27.6254, 60.6247, -13.3512, 0.59", "-27.6072, 61.3399, -13.4199, 0.22", "-27.6133, 62.0642, -13.5132, 0.07", "-27.634, 62.7318, -13.6236, 1.1", "-27.6577, 63.1368, -13.7054, 1.1", "-27.6979, 63.5325, -13.7955, 1.1", "-27.822, 64.4706, -14.0452, 0.15", "-27.9505, 65.3331, -14.2747, 0.15", "-28.0469, 65.8823, -14.4168, 0.95", "-28.1789, 66.6029, -14.5908, 1.62", "-28.3046, 67.2955, -14.7413, 1.62", "-28.4731, 68.1673, -14.9068, 0.07", "-28.5837, 68.6919, -14.9876, 0.95", "-28.653, 69.0068, -15.0219, 0.95", "-28.8419, 69.8469, -15.093, 0.07", "-29.0613, 70.8395, -15.1549, 0.07", "-29.1411, 71.1972, -15.1683, 1.18", "-29.2551, 71.6809, -15.1862, 1.18", "-29.4823, 72.5868, -15.2426, 0.15", "-29.6077, 73.0828, -15.2789, 0.88", "-29.7123, 73.4749, -15.3118, 0.88", "-29.7837, 73.7307, -15.3404, 0.07", "-30.0301, 74.6099, -15.452, 0.07", "-30.1859, 75.1919, -15.5367, 1.18", "-30.2992, 75.6277, -15.6056, 1.62", "-30.3878, 75.9746, -15.6661, 1.62", "-30.7586, 77.433, -15.9263, 0.07", "-30.8988, 78.0006, -16.0299, 0.07", "-31.0072, 78.4513, -16.1233, 1.18", "-31.1107, 78.8951, -16.2267, 1.18", "-31.2475, 79.5324, -16.4035, 0.15", "-31.402, 80.3272, -16.6535, 0.15", "-31.5074, 80.9692, -16.8801, 1.69", "-31.5847, 81.4604, -17.0728, 2.06", "-31.6138, 81.6429, -17.1503, 2.06", "-31.7748, 82.6363, -17.6107, 0.44", "-31.9094, 83.4513, -18.0092, 0.59", "-32.0442, 84.3021, -18.4458, 0.22", "-32.1862, 85.2246, -18.9237, 0.59", "-32.2423, 85.5846, -19.1133, 0.22", "-32.3332, 86.1515, -19.4229, 1.76", "-32.429, 86.72, -19.7326, 2.06", "-32.6064, 87.8596, -20.3625, 0.22", "-32.74, 88.7963, -20.8615, 0.66", "-32.8057, 89.3143, -21.1262, 0.66", "-32.8991, 90.2322, -21.568, 1.91", "-32.983, 91.1406, -21.9727, 1.25", "-33.056, 91.9309, -22.3021, 0.07", "-33.1049, 92.4994, -22.5186, 0.07", "-33.1665, 93.3212, -22.7863, 1.54", "-33.2281, 94.1709, -23.021, 0.15", "-33.3093, 95.078, -23.2404, 0.15", "-33.3718, 95.6473, -23.3737, 1.1", "-33.4687, 96.3621, -23.5307, 2.28", "-33.6923, 97.7285, -23.8307, 0.29", "-33.8215, 98.4425, -23.9762, 0.88", "-34.0155, 99.461, -24.1808, 0.07", "-34.1348, 100.157, -24.3245, 1.62", "-34.2023, 100.609, -24.4167, 1.62", "-34.2456, 101.064, -24.5091, 1.1", "-34.2697, 102.11, -24.732, 0.07", "-34.2418, 102.558, -24.8258, 0.07", "-34.1441, 103.397, -25.0019, 1.54", "-34.0661, 103.993, -25.1242, 2.13", "-33.8414, 105.605, -25.4611, 0.22", "-33.7879, 105.974, -25.5427, 0.22", "-33.6581, 106.935, -25.7675, 0.81", "-33.5892, 107.572, -25.9143, 0.07", "-33.5498, 108.152, -26.0454, 0.37", "-33.5408, 108.594, -26.167, 0.07", "-33.5501, 108.948, -26.2754, 0.07", "-33.5836, 109.573, -26.4693, 1.62", "-33.6228, 110.15, -26.6551, 2.28", "-33.6691, 110.808, -26.8805, 1.47", "-33.767, 111.948, -27.2932, 0.29", "-33.8502, 112.619, -27.5381, 0.44", "-33.9443, 113.158, -27.729, 0.07", "-34.0908, 113.795, -27.9506, 1.32", "-34.3861, 114.876, -28.3047, 0.07", "-34.5478, 115.363, -28.448, 1.25", "-34.7131, 115.786, -28.5524, 1.25", "-35.0758, 116.639, -28.7301, 0.22", "-35.3168, 117.192, -28.8173, 0.51", "-35.4465, 117.525, -28.8527, 0.07", "-35.6066, 118.053, -28.8886, 0.29", "-35.7179, 118.619, -28.9287, 0.07", "-35.8061, 119.62, -29.0296, 2.5", "-35.791, 120.221, -29.1294, 2.35", "-35.6718, 121.309, -29.3663, 0.07", "-35.5618, 121.923, -29.5234, 0.07", "-35.4288, 122.428, -29.6747, 0.07", "-35.2312, 123.025, -29.8813, 1.62", "-34.8533, 124.065, -30.2866, 0.07", "-34.7008, 124.51, -30.4615, 0.37", "-34.6221, 124.777, -30.565, 0.37", "-34.4605, 125.483, -30.8207, 0.07", "-34.3696, 125.976, -30.9811, 1.4", "-34.2277, 126.876, -31.2384, 0.07", "-34.1643, 127.414, -31.3749, 0.07", "-34.1002, 128.31, -31.6, 1.98", "-34.0501, 129.522, -31.8992, 0.07", "-34.0469, 130.173, -32.0507, 0.07", "-34.0671, 130.982, -32.2378, 1.4", "-34.1344, 131.832, -32.4342, 0.07", "-34.2275, 132.467, -32.5829, 0.22", "-34.351, 133.023, -32.7092, 0.07", "-34.5706, 133.759, -32.8838, 1.76", "-34.716, 134.161, -32.9921, 1.76", "-35.1784, 135.254, -33.3078, 0.07", "-35.455, 135.85, -33.4886, 1.1", "-35.7627, 136.496, -33.6841, 0.07", "-36.032, 137.041, -33.8541, 0.07", "-36.2671, 137.523, -34.0406, 0.95", "-36.4506, 137.918, -34.2099, 0.95", "-36.67, 138.429, -34.4794, 0.07", "-36.8413, 138.851, -34.725, 0.07", "-37.0401, 139.359, -35.0263, 1.54", "-37.456, 140.393, -35.6312, 0.29", "-37.5812, 140.695, -35.8008, 1.18", "-37.9541, 141.59, -36.2803, 0.15", "-38.1944, 142.118, -36.5563, 0.15", "-38.5398, 142.806, -36.9058, 2.06", "-38.9912, 143.676, -37.3399, 0.15", "-39.2218, 144.122, -37.5604, 0.51", "-39.4803, 144.612, -37.8354, 0.07", "-39.7895, 145.22, -38.1964, 1.69", "-40.1926, 146.038, -38.7634, 0.29", "-40.5116, 146.717, -39.2927, 0.07", "-40.7379, 147.209, -39.6899, 1.4", "-41.0951, 147.937, -40.2823, 1.4", "-41.269, 148.266, -40.544, 2.06", "-41.7916, 149.237, -41.2582, 0.22", "-42.056, 149.685, -41.5595, 0.88", "-42.3942, 150.2, -41.8688, 0.07", "-42.8581, 150.821, -42.1953, 0.07", "-43.2498, 151.3, -42.4145, 1.54", "-43.4123, 151.491, -42.4917, 1.69", "-44.1869, 152.423, -42.7826, 0.07", "-44.5046, 152.845, -42.9069, 0.07", "-44.982, 153.549, -43.1133, 0.07", "-45.2011, 153.911, -43.2122, 0.07", "-45.4666, 154.394, -43.3319, 1.18", "-45.6798, 154.815, -43.4296, 1.84", "-46.1798, 155.884, -43.643, 0.07", "-46.3721, 156.316, -43.7355, 0.07", "-46.54, 156.693, -43.8234, 1.32", "-46.6871, 156.991, -43.8962, 1.32", "-47.1014, 157.746, -44.0828, 0.15", "-47.5131, 158.441, -44.251, 0.15", "-47.7961, 158.894, -44.3698, 0.15", "-48.0987, 159.373, -44.513, 0.95", "-48.2179, 159.553, -44.5725, 1.25", "-48.4158, 159.849, -44.6698, 0.73", "-48.7695, 160.397, -44.8394, 0.07", "-49.1259, 161.026, -45.0112, 0.07", "-49.4288, 161.623, -45.1423, 0.37", "-49.6329, 162.069, -45.2188, 0.07", "-49.9235, 162.733, -45.3215, 2.2", "-50.1103, 163.213, -45.4077, 1.84", "-50.4903, 164.384, -45.63, 0.07", "-50.7415, 165.291, -45.8236, 0.07", "-50.8728, 165.859, -45.9682, 0.73", "-50.9773, 166.386, -46.1227, 1.47", "-51.1793, 167.543, -46.5101, 0.07", "-51.2531, 167.958, -46.6657, 0.29", "-51.3449, 168.469, -46.8751, 0.07", "-51.4364, 168.978, -47.0968, 0.66", "-51.5339, 169.516, -47.3327, 0.07", "-51.6586, 170.114, -47.5718, 0.07", "-51.8269, 170.747, -47.7972, 1.84", "-51.9228, 171.077, -47.9216, 1.84", "-51.9807, 171.289, -48.0081, 1.84", "-52.1833, 172.072, -48.3796, 0.07", "-52.2973, 172.524, -48.602, 0.07", "-52.4076, 172.986, -48.8389, 1.32", "-52.5602, 173.632, -49.157, 0.07", "-52.759, 174.381, -49.5114, 1.1", "-52.9398, 175.03, -49.7979, 0.07", "-53.1386, 175.726, -50.0826, 1.4", "-53.199, 175.949, -50.167, 1.76", "-53.468, 176.972, -50.503, 0.15", "-53.5939, 177.44, -50.6215, 0.44", "-53.7311, 177.935, -50.7142, 0.07", "-53.8762, 178.485, -50.7987, 0.07", "-54.059, 179.196, -50.8989, 1.25", "-54.1278, 179.48, -50.9331, 1.76", "-54.3687, 180.521, -51.0319, 0.07", "-54.5666, 181.342, -51.0953, 0.15", "-54.7738, 182.143, -51.1417, 1.47", "-54.8758, 182.538, -51.1557, 1.1", "-55.0844, 183.274, -51.171, 0.15", "-55.2815, 183.962, -51.1842, 0.07", "-55.5111, 184.728, -51.1867, 0.37", "-55.7495, 185.514, -51.167, 0.07", "-55.9316, 186.109, -51.1363, 1.1", "-56.0875, 186.618, -51.1121, 1.69", "-56.2544, 187.172, -51.0886, 1.18", "-56.4445, 187.828, -51.0879, 0.07", "-56.7112, 188.731, -51.1184, 0.22", "-56.9885, 189.693, -51.1713, 0.22", "-57.1591, 190.328, -51.2186, 1.03", "-57.2484, 190.721, -51.2516, 1.03", "-57.4108, 191.494, -51.3307, 0.07", "-57.5821, 192.5, -51.4512, 0.07", "-57.6949, 193.21, -51.5531, 1.47", "-57.7342, 193.512, -51.5963, 1.47", "-57.8204, 194.306, -51.7028, 0.07", "-57.8877, 195.023, -51.7981, 1.25", "-57.9423, 195.673, -51.8781, 0.15", "-58.0059, 196.385, -51.9749, 0.66", "-58.0659, 196.936, -52.0535, 0.07", "-58.1802, 197.742, -52.1639, 0.07", "-58.3058, 198.444, -52.254, 1.76", "-58.4516, 199.128, -52.3312, 1.84", "-58.6698, 200.029, -52.4306, 0.07", "-58.8094, 200.52, -52.4797, 0.07", "-59.056, 201.25, -52.5567, 0.73", "-59.2791, 201.82, -52.6246, 0.07", "-59.465, 202.231, -52.681, 0.29", "-59.5996, 202.503, -52.7249, 0.07", "-59.9004, 203.066, -52.8259, 0.07", "-60.1912, 203.593, -52.936, 1.1", "-60.3377, 203.846, -53.0002, 1.25", "-60.5846, 204.259, -53.1728, 0.07", "-60.7915, 204.613, -53.3605, 0.59", "-61.0369, 205.021, -53.6093, 0.07", "-61.2834, 205.4, -53.8931, 0.07", "-61.6118, 205.874, -54.3008, 1.32", "-62.271, 206.83, -55.2143, 0.07", "-62.4461, 207.106, -55.5011, 0.07", "-62.6089, 207.409, -55.8233, 0.37", "-62.7997, 207.899, -56.3467, 0.37", "-62.8536, 208.218, -56.659, 1.1", "-62.8361, 208.518, -56.9099, 1.1", "-62.693, 209.236, -57.4022, 0.07", "-62.5448, 209.767, -57.7291, 1.1", "-62.3421, 210.381, -58.0672, 0.07", "-62.1271, 211.021, -58.3707, 1.54", "-61.8243, 212.0, -58.7981, 0.07", "-61.7264, 212.382, -58.946, 0.07", "-61.6218, 212.889, -59.1287, 1.1", "-61.5433, 213.456, -59.3178, 0.07", "-61.51, 214.004, -59.5073, 1.18", "-61.5191, 214.9, -59.8454, 0.07", "-61.5866, 215.598, -60.1417, 0.07", "-61.6808, 216.089, -60.3956, 1.1", "-61.738, 216.304, -60.5245, 1.1", "-61.9767, 217.009, -61.0414, 0.07", "-62.0728, 217.247, -61.236, 0.07", "-62.3378, 217.827, -61.7297, 0.88", "-62.6236, 218.408, -62.2702, 0.37", "-62.8366, 218.837, -62.6691, 0.88", "-63.1711, 219.556, -63.3181, 0.07", "-63.3957, 220.068, -63.7555, 0.07", "-63.6411, 220.69, -64.264, 1.76", "-64.0793, 221.882, -65.1894, 0.07", "-64.1727, 222.13, -65.3715, 0.07", "-64.4055, 222.716, -65.7859, 1.84", "-64.8598, 223.86, -66.5529, 0.07", "-64.9993, 224.196, -66.7655, 1.4", "-65.1074, 224.443, -66.8942, 1.4", "-65.3915, 225.071, -67.1434, 0.07", "-65.5879, 225.479, -67.2846, 0.73", "-65.8458, 225.964, -67.419, 0.07", "-66.3605, 226.867, -67.6114, 2.72", "-66.9922, 227.906, -67.8135, 0.07", "-67.2057, 228.24, -67.8564, 0.81", "-67.4908, 228.638, -67.8756, 0.07", "-67.8804, 229.11, -67.8622, 0.07", "-68.0911, 229.316, -67.8388, 0.95", "-68.7616, 229.827, -67.7535, 0.07", "-69.4144, 230.227, -67.6657, 0.07", "-70.0602, 230.584, -67.5854, 1.25", "-70.6061, 230.854, -67.5177, 0.07", "-71.4314, 231.237, -67.419, 0.07", "-72.135, 231.552, -67.3251, 1.91", "-72.9964, 231.938, -67.2065, 0.07", "-73.3482, 232.103, -67.1665, 0.07", "-73.6972, 232.279, -67.122, 0.88", "-74.0304, 232.457, -67.0779, 1.32", "-74.8201, 232.916, -66.9533, 0.15", "-75.2268, 233.162, -66.8922, 0.66", "-75.7348, 233.484, -66.8169, 0.07", "-76.0242, 233.668, -66.7778, 0.07", "-76.4739, 233.942, -66.7368, 0.07", "-76.6385, 234.034, -66.722, 0.88", "-77.1753, 234.324, -66.6601, 0.07", "-77.8262, 234.667, -66.5479, 0.95", "-78.3335, 234.96, -66.4303, 0.07", "-78.7759, 235.258, -66.2805, 0.29", "-79.111, 235.627, -66.0665, 0.07", "-79.1984, 236.065, -65.7827, 0.07", "-79.1874, 236.159, -65.7179, 0.07", "-79.049, 236.504, -65.486, 0.37", "-78.7495, 237.05, -65.1229, 0.07", "-78.25, 237.808, -64.6254, 0.07", "-77.838, 238.353, -64.3024, 1.4" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-56.3701, -105.918, -49.0689, 0.37", "-56.2276, -108.02, -48.9035, 0.37", "-56.1425, -109.02, -48.815, 0.07", "-56.0642, -109.827, -48.7405, 1.32", "-56.0316, -110.235, -48.7122, 1.32", "-55.9876, -111.644, -48.6463, 0.22", "-55.9924, -112.436, -48.6209, 0.07", "-56.0421, -113.145, -48.5868, 1.32", "-56.0583, -113.302, -48.5782, 1.32", "-56.21, -114.38, -48.4885, 0.15", "-56.508, -115.839, -48.2944, 0.15", "-56.6982, -116.604, -48.1388, 0.15", "-56.8998, -117.382, -47.9469, 1.1", "-57.0213, -117.842, -47.811, 1.32", "-57.2686, -118.84, -47.4839, 0.22", "-57.521, -120.085, -47.0576, 0.22", "-57.6511, -120.836, -46.8189, 0.95", "-57.7089, -121.246, -46.7162, 0.95", "-57.829, -122.127, -46.5743, 0.07", "-57.9304, -122.827, -46.5141, 0.07", "-58.0513, -123.86, -46.5038, 1.54", "-58.1057, -124.513, -46.5456, 1.32", "-58.1739, -125.565, -46.6558, 0.15", "-58.2407, -126.754, -46.8164, 0.15", "-58.3243, -127.84, -47.0001, 1.54", "-58.3926, -128.519, -47.1357, 1.54", "-58.605, -130.535, -47.5616, 0.07", "-58.705, -131.383, -47.7499, 0.88", "-58.7961, -132.166, -47.9268, 0.07", "-58.952, -133.66, -48.2466, 0.07", "-59.0663, -134.779, -48.46, 2.06", "-59.2192, -136.175, -48.6698, 1.03", "-59.3416, -137.518, -48.7908, 0.07", "-59.4015, -138.43, -48.8277, 0.07", "-59.4186, -138.912, -48.8258, 0.81", "-59.4226, -139.905, -48.7904, 0.59", "-59.437, -140.697, -48.7597, 0.15", "-59.4849, -141.966, -48.7322, 1.84", "-59.566, -143.496, -48.7268, 0.07", "-59.6062, -143.92, -48.7357, 0.59", "-59.7275, -144.965, -48.7907, 0.59", "-59.8742, -145.997, -48.87, 1.69", "-59.9802, -146.684, -48.9587, 1.69", "-60.1031, -147.426, -49.0678, 1.1", "-60.2369, -148.202, -49.1933, 0.15", "-60.3489, -148.849, -49.3082, 0.81", "-60.4922, -149.766, -49.4651, 0.59", "-60.7075, -151.239, -49.6978, 0.15", "-60.8032, -151.933, -49.815, 0.15", "-60.9764, -153.171, -50.0259, 1.62", "-61.0043, -153.391, -50.0558, 1.62", "-61.2, -154.994, -50.2144, 0.44", "-61.3175, -156.037, -50.2629, 0.22", "-61.4181, -156.995, -50.2631, 1.03", "-61.5032, -157.871, -50.2463, 1.4", "-61.6512, -159.617, -50.1506, 0.22", "-61.8132, -161.621, -50.0003, 0.22", "-61.9099, -163.009, -49.8688, 1.03", "-61.9484, -163.634, -49.7945, 1.47", "-61.9848, -164.191, -49.718, 1.47", "-62.1006, -165.534, -49.5466, 0.15", "-62.1987, -166.233, -49.4708, 0.29", "-62.4259, -167.399, -49.3415, 0.07", "-62.6277, -168.197, -49.2852, 1.47", "-62.7947, -168.775, -49.2629, 1.47", "-63.1794, -169.969, -49.2931, 0.15", "-63.3446, -170.441, -49.335, 0.15", "-63.6229, -171.202, -49.3902, 1.25", "-63.929, -172.064, -49.4393, 1.62", "-64.3972, -173.57, -49.5699, 0.07", "-64.6208, -174.443, -49.6592, 0.37", "-64.7298, -175.011, -49.7187, 0.15", "-64.9135, -176.375, -49.8598, 1.25", "-64.9724, -177.339, -49.9858, 0.37", "-64.9673, -178.4, -50.1263, 0.22", "-64.8515, -179.501, -50.2922, 0.22", "-64.7393, -180.11, -50.3863, 1.47", "-64.6147, -180.595, -50.4787, 1.25", "-64.2032, -181.816, -50.7551, 0.07", "-64.1118, -182.05, -50.7997, 0.37", "-63.575, -183.354, -50.9736, 0.07", "-63.2406, -184.149, -51.0805, 0.81", "-63.1126, -184.471, -51.1202, 0.81", "-62.8829, -185.094, -51.1848, 0.07", "-62.6283, -185.895, -51.2394, 0.07", "-62.4471, -186.577, -51.2879, 0.88", "-62.3087, -187.213, -51.3209, 0.07", "-62.1867, -187.83, -51.3634, 0.66", "-62.0787, -188.437, -51.4061, 0.07", "-61.9342, -189.191, -51.4371, 0.07", "-61.846, -189.602, -51.4378, 0.07", "-61.6398, -190.42, -51.3803, 1.03", "-61.3019, -191.708, -51.1676, 0.07", "-61.1184, -192.373, -51.0051, 0.44", "-60.7782, -193.591, -50.6264, 0.07", "-60.596, -194.223, -50.4023, 0.59", "-60.2679, -195.444, -49.9446, 0.07", "-60.033, -196.513, -49.5172, 0.07", "-59.7896, -197.9, -48.9019, 0.07", "-59.6215, -199.159, -48.3287, 0.07", "-59.5544, -199.999, -47.9468, 0.22", "-59.4904, -200.75, -47.6258, 1.62", "-59.3587, -201.708, -47.2862, 0.37", "-59.1435, -202.234, -47.1654, 1.1", "-59.8685, -201.541, -47.2364, 0.07", "-60.575, -200.978, -47.2742, 0.07", "-61.005, -200.595, -47.3036, 0.88" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-56.3701, -105.918, -49.0689, 0.37", "-58.3615, -107.94, -50.5934, 0.37", "-59.1232, -108.657, -51.0302, 0.59", "-60.5823, -109.917, -51.5026, 0.07", "-62.0827, -111.088, -51.6168, 0.07", "-63.0099, -111.725, -51.5839, 0.07", "-63.877, -112.248, -51.664, 0.81", "-65.3932, -112.929, -51.8565, 0.29", "-67.1475, -113.484, -53.044, 0.29", "-68.0299, -113.649, -54.1434, 0.59", "-68.7051, -113.74, -55.1649, 0.95", "-70.8656, -114.081, -59.3226, 0.44", "-71.8483, -114.279, -61.541, 0.73", "-72.7906, -114.558, -64.009, 0.15", "-73.178, -114.719, -65.1745, 0.15", "-73.4108, -114.86, -65.9056, 0.51", "-74.1816, -115.664, -68.4434, 0.07", "-74.28, -115.824, -68.7639, 0.07", "-74.574, -116.435, -69.7628, 1.03", "-74.956, -117.315, -70.9878, 0.15", "-75.3474, -118.2, -72.1249, 0.95", "-76.2953, -120.113, -74.4419, 0.37", "-76.6936, -120.836, -75.2596, 0.81", "-77.3011, -121.902, -76.4832, 0.07", "-77.9858, -123.069, -77.8188, 0.07", "-78.3682, -123.725, -78.5615, 0.29", "-78.8363, -124.444, -79.4686, 0.95" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-179.236, -89.497, -27.4655, 0.07", "-180.311, -90.317, -27.5909, 0.07", "-181.477, -91.3332, -27.7533, 0.07", "-182.289, -92.1211, -27.8732, 0.07", "-182.63, -92.4958, -27.9249, 0.88", "-182.983, -92.9337, -27.9989, 0.88", "-183.57, -93.727, -28.1874, 0.07", "-183.821, -94.1261, -28.308, 0.07", "-184.403, -95.0726, -28.6349, 0.66", "-184.756, -95.6098, -28.8492, 1.1", "-185.529, -96.6659, -29.3086, 0.07", "-186.466, -97.7933, -29.8232, 0.07", "-187.337, -98.6968, -30.2481, 0.66", "-188.089, -99.3549, -30.5731, 1.4", "-189.286, -100.22, -31.0497, 0.22", "-190.199, -100.747, -31.3845, 0.22", "-191.077, -101.123, -31.6477, 0.59", "-191.8, -101.371, -31.8329, 0.07", "-192.712, -101.64, -32.1009, 0.07", "-193.753, -101.917, -32.4337, 0.81", "-194.794, -102.197, -32.7857, 0.22", "-196.4, -102.716, -33.3706, 0.22", "-197.264, -103.068, -33.7202, 1.4", "-198.66, -103.777, -34.3216, 0.07", "-199.244, -104.145, -34.5815, 0.81", "-199.896, -104.676, -34.8813, 0.07", "-200.585, -105.404, -35.2195, 0.07", "-200.855, -105.756, -35.3784, 0.07", "-201.279, -106.366, -35.6024, 0.81", "-201.535, -106.766, -35.6867, 0.07", "-202.286, -108.021, -35.8651, 0.44", "-202.682, -108.644, -35.936, 0.07", "-203.162, -109.34, -36.0, 0.29", "-203.797, -110.182, -36.0584, 0.07", "-205.016, -111.679, -36.1822, 0.07", "-205.79, -112.561, -36.2718, 1.76", "-207.147, -114.007, -36.45, 0.22", "-208.034, -114.904, -36.5987, 0.51", "-208.531, -115.39, -36.6778, 0.07", "-209.37, -116.144, -36.8437, 0.07", "-209.64, -116.365, -36.9017, 0.81", "-210.611, -117.118, -37.0867, 0.07", "-211.573, -117.873, -37.2586, 0.07", "-212.685, -118.775, -37.4531, 1.47", "-213.903, -119.794, -37.6401, 0.15", "-214.61, -120.387, -37.7221, 0.15", "-215.139, -120.832, -37.7753, 0.88", "-215.966, -121.521, -37.8694, 0.07", "-216.917, -122.308, -38.0029, 0.07", "-217.453, -122.748, -38.0826, 0.07", "-217.899, -123.1, -38.1301, 0.81", "-218.841, -123.796, -38.2037, 0.07", "-220.028, -124.592, -38.301, 0.07", "-220.705, -124.976, -38.3488, 0.95", "-222.023, -125.6, -38.4422, 0.07", "-223.457, -126.176, -38.4838, 0.88", "-224.227, -126.435, -38.476, 0.22", "-225.236, -126.688, -38.408, 0.07", "-227.158, -127.04, -38.1328, 0.07", "-227.945, -127.144, -37.9861, 1.18", "-229.446, -127.269, -37.6496, 0.15", "-230.882, -127.364, -37.2842, 0.15", "-232.113, -127.434, -36.9712, 1.54", "-234.068, -127.45, -36.4878, 0.07", "-234.838, -127.416, -36.3221, 0.07", "-235.416, -127.357, -36.2299, 0.44", "-236.516, -127.155, -36.144, 0.07", "-237.787, -126.804, -36.1304, 0.81", "-239.219, -126.239, -36.2376, 0.07", "-239.651, -126.005, -36.2942, 0.07", "-240.108, -125.715, -36.354, 0.37", "-241.17, -124.974, -36.517, 0.07", "-241.675, -124.593, -36.5927, 0.88", "-242.584, -123.913, -36.7127, 0.07", "-243.453, -123.347, -36.8143, 0.29", "-244.473, -122.73, -36.9667, 0.07", "-245.063, -122.401, -37.0758, 0.95", "-246.13, -121.851, -37.29, 0.07", "-246.394, -121.735, -37.3398, 0.07", "-247.196, -121.415, -37.51, 0.44", "-248.245, -121.025, -37.7404, 0.07", "-249.724, -120.516, -38.1164, 0.07", "-250.937, -120.129, -38.4346, 1.25", "-252.129, -119.787, -38.7711, 0.07", "-252.987, -119.562, -39.0171, 0.07", "-254.0, -119.342, -39.3277, 0.37", "-255.096, -119.182, -39.6592, 0.07", "-256.041, -119.131, -39.9504, 0.07", "-256.602, -119.164, -40.1217, 0.37", "-257.312, -119.309, -40.3159, 0.07", "-258.577, -119.712, -40.5945, 0.07", "-259.745, -120.207, -40.7884, 0.07", "-261.001, -120.864, -40.9107, 1.69", "-262.419, -121.753, -40.9944, 0.07", "-264.564, -123.35, -40.9906, 0.07", "-265.915, -124.436, -40.9385, 0.07", "-267.022, -125.417, -40.8406, 1.32", "-268.082, -126.464, -40.7084, 0.07", "-268.825, -127.274, -40.5805, 0.07", "-269.879, -128.531, -40.2935, 1.62" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-179.236, -89.497, -27.4655, 0.07", "-179.988, -88.2189, -27.1786, 0.07", "-180.478, -87.4307, -26.9918, 1.03", "-180.998, -86.6111, -26.8035, 0.07", "-181.29, -86.1583, -26.6915, 0.29", "-181.559, -85.7652, -26.596, 0.07", "-182.226, -84.7971, -26.372, 0.07", "-182.604, -84.2654, -26.2627, 0.95", "-182.997, -83.7116, -26.1605, 0.95", "-183.475, -82.9973, -26.062, 0.07", "-184.195, -81.8527, -25.9271, 0.07", "-184.522, -81.3224, -25.8756, 0.59", "-184.941, -80.6094, -25.8283, 0.07", "-185.318, -79.9593, -25.8084, 0.37", "-185.666, -79.3405, -25.804, 0.07", "-185.816, -79.0536, -25.8168, 0.07", "-185.957, -78.7447, -25.8353, 1.03", "-186.202, -78.2487, -25.8708, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_30", "dend_17", "dend_8", "dend_5", "dend_0", "dend_43", "dend_38", "dend_34", "dend_31", "dend_23", "dend_18", "dend_16", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_36", "dend_35", "dend_33", "dend_32", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_4", "dend_3", "dend_42", "dend_41", "dend_27", "dend_26", "dend_21", "dend_20", "dend_12", "dend_11", "dend_29", "dend_28", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_30", "dend_17", "dend_8", "dend_5", "dend_0", "dend_43", "dend_38", "dend_34", "dend_31", "dend_23", "dend_18", "dend_16", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_36", "dend_35", "dend_33", "dend_32", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_4", "dend_3", "dend_42", "dend_41", "dend_27", "dend_26", "dend_21", "dend_20", "dend_12", "dend_11", "dend_29", "dend_28", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_LBC_040eb0bc59_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_23, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.4999997299839917)
    connect dend_30(0), soma_0(0.4999997299839917)
    connect dend_17(0), soma_0(0.4999997299839917)
    connect dend_8(0), soma_0(0.4999997299839917)
    connect dend_5(0), soma_0(0.4999997299839917)
    connect dend_0(0), soma_0(0.4999997299839917)
    connect axon_0(0), soma_0(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.84529, -4.87297, 0.0, 6.22486 ) }
    soma_0 { pt3dadd( -6.02577, -4.47098, 0.0, 11.3263 ) }
    soma_0 { pt3dadd( -5.20624, -4.06899, 0.0, 13.1262 ) }
    soma_0 { pt3dadd( -4.38672, -3.66701, 0.0, 14.4968 ) }
    soma_0 { pt3dadd( -3.56719, -3.26502, 0.0, 15.3488 ) }
    soma_0 { pt3dadd( -2.74767, -2.86303, 0.0, 15.7521 ) }
    soma_0 { pt3dadd( -1.92815, -2.46104, 0.0, 15.7984 ) }
    soma_0 { pt3dadd( -1.10862, -2.05905, 0.0, 15.859 ) }
    soma_0 { pt3dadd( -0.289096, -1.65706, 0.0, 15.958 ) }
    soma_0 { pt3dadd( 0.530429, -1.25507, 0.0, 16.0571 ) }
    soma_0 { pt3dadd( 1.34995, -0.853086, 0.0, 16.1345 ) }
    soma_0 { pt3dadd( 2.16948, -0.451097, 0.0, 16.3639 ) }
    soma_0 { pt3dadd( 2.989, -0.0491089, 0.0, 16.0828 ) }
    soma_0 { pt3dadd( 3.80853, 0.35288, 0.0, 15.4226 ) }
    soma_0 { pt3dadd( 4.62805, 0.754868, 0.0, 14.6331 ) }
    soma_0 { pt3dadd( 5.44758, 1.15686, 0.0, 13.8581 ) }
    soma_0 { pt3dadd( 6.2671, 1.55885, 0.0, 13.096 ) }
    soma_0 { pt3dadd( 7.08663, 1.96083, 0.0, 11.6592 ) }
    soma_0 { pt3dadd( 7.90615, 2.36282, 0.0, 9.60018 ) }
    soma_0 { pt3dadd( 8.72568, 2.76481, 0.0, 6.5333 ) }
    soma_0 { pt3dadd( 9.5452, 3.1668, 0.0, 3.66685 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 10.8103, -0.983735, -5.53, 2.42 ) }
    dend_37 { pt3dadd( 10.8103, -0.983735, -5.53, 2.42 ) }
    dend_37 { pt3dadd( 12.6646, 0.306638, -6.74602, 2.28 ) }
    dend_37 { pt3dadd( 14.4231, 1.71952, -7.88102, 2.06 ) }
    dend_37 { pt3dadd( 15.5817, 2.70181, -8.62414, 1.76 ) }
    dend_37 { pt3dadd( 17.0516, 4.0051, -9.52217, 2.06 ) }
    dend_37 { pt3dadd( 18.9657, 5.74871, -10.6401, 1.54 ) }
    dend_37 { pt3dadd( 20.4012, 7.15835, -11.4198, 1.54 ) }
    dend_37 { pt3dadd( 20.8852, 7.68528, -11.6629, 1.62 ) }
    dend_37 { pt3dadd( 21.9919, 8.97088, -12.1686, 1.62 ) }
    dend_37 { pt3dadd( 22.9967, 10.1771, -12.6264, 1.18 ) }
    dend_37 { pt3dadd( 24.0133, 11.3568, -13.1128, 2.28 ) }
    dend_37 { pt3dadd( 25.1023, 12.5019, -13.588, 2.64 ) }
    dend_37 { pt3dadd( 26.3598, 13.6551, -14.1003, 2.72 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.5103, -3.71374, -3.85, 5.0 ) }
    dend_30 { pt3dadd( 8.5103, -3.71374, -3.85, 5.0 ) }
    dend_30 { pt3dadd( 9.12152, -5.05863, -4.44954, 1.98 ) }
    dend_30 { pt3dadd( 9.41561, -5.70573, -4.73801, 1.98 ) }
    dend_30 { pt3dadd( 9.89682, -6.76453, -5.21002, 1.47 ) }
    dend_30 { pt3dadd( 10.4185, -7.91237, -5.72171, 2.06 ) }
    dend_30 { pt3dadd( 10.9271, -9.03149, -6.22061, 2.57 ) }
    dend_30 { pt3dadd( 11.161, -9.50977, -6.42677, 3.01 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 43/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.58973, -10.022, 0.0, 3.01 ) }
    dend_17 { pt3dadd( -1.58973, -10.022, 0.0, 3.01 ) }
    dend_17 { pt3dadd( -1.5477, -12.4992, 0.0417576, 1.76 ) }
    dend_17 { pt3dadd( -1.51416, -14.4763, 0.0750841, 2.2 ) }
    dend_17 { pt3dadd( -1.48625, -16.121, 0.102808, 2.86 ) }
    dend_17 { pt3dadd( -1.46616, -17.3054, 0.122774, 3.09 ) }
    dend_17 { pt3dadd( -1.45071, -18.2157, 0.138118, 3.09 ) }
    dend_17 { pt3dadd( -1.44754, -18.6789, 0.148138, 3.09 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.39973, 1.63901, -0.84, 3.31 ) }
    dend_8 { pt3dadd( -7.39973, 1.63901, -0.84, 3.31 ) }
    dend_8 { pt3dadd( -8.72054, 2.38574, -0.95867, 1.76 ) }
    dend_8 { pt3dadd( -9.52671, 2.84152, -1.0311, 1.98 ) }
    dend_8 { pt3dadd( -10.1316, 3.18349, -1.08545, 1.98 ) }
    dend_8 { pt3dadd( -11.0911, 3.72593, -1.17166, 2.35 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 57/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.35027, -0.310981, 9.36, 1.91 ) }
    dend_5 { pt3dadd( 6.41895, -0.286605, 9.40693, 1.91 ) }
    dend_5 { pt3dadd( 7.73986, 0.182229, 10.3095, 1.91 ) }
    dend_5 { pt3dadd( 9.24465, 0.716328, 11.3376, 1.91 ) }
    dend_5 { pt3dadd( 10.3161, 1.09663, 12.0697, 2.42 ) }
    dend_5 { pt3dadd( 11.2755, 1.43714, 12.7252, 2.57 ) }
    dend_5 { pt3dadd( 11.588, 1.54806, 12.9387, 2.72 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.10969, 1.54153, 6.17, 2.2 ) }
    dend_0 { pt3dadd( -4.2152, 1.61004, 6.25754, 2.2 ) }
    dend_0 { pt3dadd( -5.49285, 2.43976, 7.31754, 2.2 ) }
    dend_0 { pt3dadd( -6.73408, 3.24584, 8.34733, 2.06 ) }
    dend_0 { pt3dadd( -7.59605, 3.8056, 9.06246, 1.84 ) }
    dend_0 { pt3dadd( -8.53105, 4.41282, 9.83819, 1.91 ) }
    dend_0 { pt3dadd( -9.75637, 5.20854, 10.8548, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 71/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.5452, 3.1668, 0.0, 0.993145 ) }
    axon_0 { pt3dadd( 23.0123, 9.77261, 0.0, 0.993145 ) }
    axon_0 { pt3dadd( 36.4794, 16.3784, 0.0, 0.993145 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 74/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 26.3598, 13.6551, -14.1003, 1.47 ) }
    dend_43 { pt3dadd( 27.3863, 13.5778, -15.3349, 1.47 ) }
    dend_43 { pt3dadd( 28.6604, 13.3883, -16.6857, 1.47 ) }
    dend_43 { pt3dadd( 30.0032, 13.0878, -18.019, 1.47 ) }
    dend_43 { pt3dadd( 30.3773, 12.975, -18.3895, 0.81 ) }
    dend_43 { pt3dadd( 30.6012, 12.8964, -18.6223, 0.81 ) }
    dend_43 { pt3dadd( 30.808, 12.8198, -18.8534, 0.81 ) }
    dend_43 { pt3dadd( 31.6816, 12.4497, -19.9249, 1.18 ) }
    dend_43 { pt3dadd( 31.9957, 12.2989, -20.2696, 1.18 ) }
    dend_43 { pt3dadd( 32.4337, 12.1858, -20.6128, 1.18 ) }
    dend_43 { pt3dadd( 33.0119, 12.1546, -21.0445, 1.18 ) }
    dend_43 { pt3dadd( 33.6147, 12.1484, -21.4863, 1.18 ) }
    dend_43 { pt3dadd( 34.1256, 12.1415, -21.8772, 1.18 ) }
    dend_43 { pt3dadd( 35.2656, 12.144, -22.8431, 0.73 ) }
    dend_43 { pt3dadd( 36.5671, 12.1719, -24.0357, 1.03 ) }
    dend_43 { pt3dadd( 37.1549, 12.1943, -24.5912, 1.03 ) }
    dend_43 { pt3dadd( 37.7285, 12.197, -25.0702, 1.1 ) }
    dend_43 { pt3dadd( 38.7019, 12.1238, -25.7519, 1.1 ) }
    dend_43 { pt3dadd( 39.5259, 12.0057, -26.2273, 1.1 ) }
    dend_43 { pt3dadd( 40.3128, 11.8797, -26.4968, 1.1 ) }
    dend_43 { pt3dadd( 40.8184, 11.7973, -26.6247, 1.1 ) }
    dend_43 { pt3dadd( 42.2474, 11.6058, -27.071, 1.1 ) }
    dend_43 { pt3dadd( 44.1191, 11.4272, -27.7902, 0.66 ) }
    dend_43 { pt3dadd( 45.5955, 11.2235, -28.6323, 0.81 ) }
    dend_43 { pt3dadd( 46.4495, 11.0753, -29.2378, 1.4 ) }
    dend_43 { pt3dadd( 47.6145, 10.8467, -30.1536, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 49.4986, 10.4506, -31.7948, 0.66 ) }
    dend_43 { pt3dadd( 50.9054, 10.1663, -33.1432, 2.79 ) }
    dend_43 { pt3dadd( 53.838, 9.63534, -36.2155, 0.88 ) }
    dend_43 { pt3dadd( 54.8113, 9.48791, -37.3205, 0.95 ) }
    dend_43 { pt3dadd( 55.9877, 9.35575, -38.7402, 2.42 ) }
    dend_43 { pt3dadd( 57.3603, 9.30323, -40.4658, 0.95 ) }
    dend_43 { pt3dadd( 58.1363, 9.30838, -41.509, 1.69 ) }
    dend_43 { pt3dadd( 59.7808, 9.40407, -43.731, 0.66 ) }
    dend_43 { pt3dadd( 60.6483, 9.49673, -44.8267, 1.62 ) }
    dend_43 { pt3dadd( 61.3642, 9.56514, -45.726, 1.62 ) }
    dend_43 { pt3dadd( 62.3559, 9.65544, -46.9492, 0.88 ) }
    dend_43 { pt3dadd( 64.005, 9.73931, -48.7192, 0.88 ) }
    dend_43 { pt3dadd( 64.7906, 9.7095, -49.4224, 1.62 ) }
    dend_43 { pt3dadd( 66.0794, 9.56369, -50.3376, 0.66 ) }
    dend_43 { pt3dadd( 66.6196, 9.47768, -50.6729, 0.29 ) }
    dend_43 { pt3dadd( 67.9757, 9.24919, -51.4298, 1.47 ) }
    dend_43 { pt3dadd( 69.6157, 9.01475, -52.253, 0.07 ) }
    dend_43 { pt3dadd( 71.2949, 8.92772, -53.0729, 1.47 ) }
    dend_43 { pt3dadd( 71.7948, 8.935, -53.3358, 1.47 ) }
    dend_43 { pt3dadd( 72.7957, 9.01411, -53.8892, 0.07 ) }
    dend_43 { pt3dadd( 73.609, 9.11384, -54.3213, 1.32 ) }
    dend_43 { pt3dadd( 74.0776, 9.20016, -54.5455, 1.32 ) }
    dend_43 { pt3dadd( 75.6151, 9.61797, -55.3283, 0.22 ) }
    dend_43 { pt3dadd( 76.5638, 9.90342, -55.944, 1.84 ) }
    dend_43 { pt3dadd( 76.8352, 9.98313, -56.1731, 2.2 ) }
    dend_43 { pt3dadd( 78.409, 10.3878, -57.825, 0.22 ) }
    dend_43 { pt3dadd( 79.189, 10.5464, -58.7503, 1.1 ) }
    dend_43 { pt3dadd( 80.7812, 10.7923, -60.7514, 1.47 ) }
    dend_43 { pt3dadd( 82.4026, 10.9318, -62.8942, 2.57 ) }
    dend_43 { pt3dadd( 83.618, 10.9532, -64.5604, 2.57 ) }
    dend_43 { pt3dadd( 85.8064, 10.8262, -67.5597, 0.73 ) }
    dend_43 { pt3dadd( 86.7475, 10.6972, -68.8739, 0.15 ) }
    dend_43 { pt3dadd( 87.0914, 10.6305, -69.324, 0.15 ) }
    dend_43 { pt3dadd( 87.7737, 10.4875, -70.0652, 1.91 ) }
    dend_43 { pt3dadd( 88.1724, 10.412, -70.4604, 1.91 ) }
    dend_43 { pt3dadd( 89.3898, 10.213, -71.5854, 1.1 ) }
    dend_43 { pt3dadd( 90.8373, 10.0358, -72.9091, 0.15 ) }
    dend_43 { pt3dadd( 91.0731, 10.0268, -73.1272, 0.15 ) }
    dend_43 { pt3dadd( 92.4922, 10.0255, -74.4757, 1.69 ) }
    dend_43 { pt3dadd( 94.2069, 10.0526, -76.1029, 1.25 ) }
    dend_43 { pt3dadd( 95.0176, 10.0704, -76.8682, 1.69 ) }
    dend_43 { pt3dadd( 96.3969, 10.1074, -78.208, 0.59 ) }
    dend_43 { pt3dadd( 97.3079, 10.1349, -79.1093, 0.29 ) }
    dend_43 { pt3dadd( 98.7767, 10.2053, -80.6586, 2.42 ) }
    dend_43 { pt3dadd( 100.509, 10.3024, -82.5182, 0.88 ) }
    dend_43 { pt3dadd( 100.837, 10.3287, -82.8669, 1.1 ) }
    dend_43 { pt3dadd( 101.866, 10.4018, -83.958, 1.25 ) }
    dend_43 { pt3dadd( 102.698, 10.4533, -84.7565, 1.4 ) }
    dend_43 { pt3dadd( 104.378, 10.5092, -86.1623, 0.66 ) }
    dend_43 { pt3dadd( 105.5, 10.5385, -86.9345, 1.1 ) }
    dend_43 { pt3dadd( 106.684, 10.5131, -87.602, 0.29 ) }
    dend_43 { pt3dadd( 107.925, 10.4448, -88.1797, 1.91 ) }
    dend_43 { pt3dadd( 109.6, 10.3262, -88.7927, 0.22 ) }
    dend_43 { pt3dadd( 111.115, 10.1948, -89.2489, 0.81 ) }
    dend_43 { pt3dadd( 111.915, 10.1239, -89.4441, 0.88 ) }
    dend_43 { pt3dadd( 113.09, 10.0085, -89.7116, 0.07 ) }
    dend_43 { pt3dadd( 113.875, 9.92077, -89.8898, 0.07 ) }
    dend_43 { pt3dadd( 115.169, 9.77202, -90.1869, 1.54 ) }
    dend_43 { pt3dadd( 116.735, 9.59439, -90.6142, 0.07 ) }
    dend_43 { pt3dadd( 117.716, 9.48902, -90.9424, 1.1 ) }
    dend_43 { pt3dadd( 118.548, 9.39881, -91.255, 1.18 ) }
    dend_43 { pt3dadd( 119.789, 9.25146, -91.7457, 0.29 ) }
    dend_43 { pt3dadd( 120.883, 9.09989, -92.2257, 1.03 ) }
    dend_43 { pt3dadd( 122.179, 8.90589, -92.8583, 1.69 ) }
    dend_43 { pt3dadd( 123.651, 8.68398, -93.6617, 0.37 ) }
    dend_43 { pt3dadd( 124.757, 8.51519, -94.3215, 0.07 ) }
    dend_43 { pt3dadd( 126.229, 8.32738, -95.2516, 1.62 ) }
    dend_43 { pt3dadd( 127.725, 8.18647, -96.2597, 0.22 ) }
    dend_43 { pt3dadd( 128.938, 8.12422, -97.1298, 0.51 ) }
    dend_43 { pt3dadd( 129.842, 8.16245, -97.8116, 0.95 ) }
    dend_43 { pt3dadd( 130.837, 8.38588, -98.6598, 1.47 ) }
    dend_43 { pt3dadd( 131.595, 8.72589, -99.4117, 1.47 ) }
    dend_43 { pt3dadd( 132.802, 9.45471, -100.697, 0.22 ) }
    dend_43 { pt3dadd( 133.291, 9.80111, -101.215, 0.22 ) }
    dend_43 { pt3dadd( 134.24, 10.5493, -102.271, 1.84 ) }
    dend_43 { pt3dadd( 135.491, 11.558, -103.764, 0.44 ) }
    dend_43 { pt3dadd( 136.586, 12.4203, -105.209, 0.22 ) }
    dend_43 { pt3dadd( 137.109, 12.7753, -105.917, 0.22 ) }
    dend_43 { pt3dadd( 137.478, 12.986, -106.389, 0.66 ) }
    dend_43 { pt3dadd( 138.585, 13.5033, -107.73, 0.66 ) }
    dend_43 { pt3dadd( 139.948, 14.0103, -109.265, 1.91 ) }
    dend_43 { pt3dadd( 141.464, 14.4399, -110.893, 2.42 ) }
    dend_43 { pt3dadd( 142.968, 14.7355, -112.431, 2.28 ) }
    dend_43 { pt3dadd( 144.261, 14.9065, -113.662, 0.66 ) }
    dend_43 { pt3dadd( 144.596, 14.9213, -113.965, 0.22 ) }
    dend_43 { pt3dadd( 145.414, 14.8783, -114.654, 0.22 ) }
    dend_43 { pt3dadd( 146.46, 14.6858, -115.531, 0.73 ) }
    dend_43 { pt3dadd( 147.533, 14.2411, -116.566, 0.66 ) }
    dend_43 { pt3dadd( 148.128, 13.7731, -117.373, 0.66 ) }
    dend_43 { pt3dadd( 148.557, 13.2766, -118.197, 0.66 ) }
    dend_43 { pt3dadd( 148.972, 12.7513, -119.326, 0.66 ) }
    dend_43 { pt3dadd( 149.111, 12.5903, -119.866, 0.66 ) }
    dend_43 { pt3dadd( 149.369, 12.5133, -121.077, 0.66 ) }
    dend_43 { pt3dadd( 149.548, 12.7195, -121.82, 0.66 ) }
    dend_43 { pt3dadd( 149.751, 13.0387, -122.296, 0.66 ) }
    dend_43 { pt3dadd( 150.358, 14.0119, -123.202, 0.73 ) }
    dend_43 { pt3dadd( 150.878, 14.8188, -123.826, 0.59 ) }
    dend_43 { pt3dadd( 151.28, 15.403, -124.257, 0.29 ) }
    dend_43 { pt3dadd( 152.206, 16.6833, -125.15, 0.29 ) }
    dend_43 { pt3dadd( 152.732, 17.3268, -125.61, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 154.054, 18.7388, -126.651, 0.29 ) }
    dend_43 { pt3dadd( 154.678, 19.3054, -127.08, 0.29 ) }
    dend_43 { pt3dadd( 155.457, 19.8891, -127.611, 0.29 ) }
    dend_43 { pt3dadd( 156.547, 20.5268, -128.342, 1.4 ) }
    dend_43 { pt3dadd( 157.833, 21.0283, -129.177, 0.29 ) }
    dend_43 { pt3dadd( 158.522, 21.1835, -129.574, 0.29 ) }
    dend_43 { pt3dadd( 159.573, 21.2131, -130.057, 0.29 ) }
    dend_43 { pt3dadd( 161.054, 21.1445, -130.708, 0.15 ) }
    dend_43 { pt3dadd( 161.747, 21.0432, -130.983, 0.15 ) }
    dend_43 { pt3dadd( 163.068, 20.6183, -131.419, 0.15 ) }
    dend_43 { pt3dadd( 164.528, 19.8543, -131.722, 0.15 ) }
    dend_43 { pt3dadd( 165.735, 19.0159, -131.793, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 26.3598, 13.6551, -14.1003, 1.69 ) }
    dend_38 { pt3dadd( 26.6973, 14.5225, -14.3315, 1.69 ) }
    dend_38 { pt3dadd( 26.9469, 15.006, -14.4616, 1.4 ) }
    dend_38 { pt3dadd( 27.3175, 15.5959, -14.6167, 1.4 ) }
    dend_38 { pt3dadd( 27.5474, 15.9197, -14.7009, 1.32 ) }
    dend_38 { pt3dadd( 27.8728, 16.3653, -14.8131, 0.95 ) }
    dend_38 { pt3dadd( 28.2918, 16.9394, -14.9577, 0.66 ) }
    dend_38 { pt3dadd( 28.6847, 17.404, -15.0828, 1.47 ) }
    dend_38 { pt3dadd( 29.0105, 17.7543, -15.1891, 1.91 ) }
    dend_38 { pt3dadd( 29.4709, 18.2142, -15.3592, 0.66 ) }
    dend_38 { pt3dadd( 29.7854, 18.53, -15.4955, 0.37 ) }
    dend_38 { pt3dadd( 29.9231, 18.6682, -15.5592, 0.37 ) }
    dend_38 { pt3dadd( 30.3411, 19.0742, -15.7458, 1.1 ) }
    dend_38 { pt3dadd( 30.7037, 19.4277, -15.8969, 1.25 ) }
    dend_38 { pt3dadd( 31.1392, 19.8476, -16.0566, 0.95 ) }
    dend_38 { pt3dadd( 31.5985, 20.2791, -16.2005, 1.76 ) }
    dend_38 { pt3dadd( 32.2013, 20.8578, -16.3567, 2.06 ) }
    dend_38 { pt3dadd( 32.8671, 21.532, -16.4933, 2.57 ) }
    dend_38 { pt3dadd( 33.2052, 21.904, -16.5421, 2.57 ) }
    dend_38 { pt3dadd( 33.8671, 22.7032, -16.6093, 0.44 ) }
    dend_38 { pt3dadd( 34.2222, 23.1707, -16.6507, 0.22 ) }
    dend_38 { pt3dadd( 34.5008, 23.5662, -16.6952, 0.22 ) }
    dend_38 { pt3dadd( 34.7003, 23.8746, -16.7446, 0.22 ) }
    dend_38 { pt3dadd( 34.916, 24.2244, -16.822, 1.03 ) }
    dend_38 { pt3dadd( 35.1876, 24.666, -16.945, 1.76 ) }
    dend_38 { pt3dadd( 35.612, 25.3553, -17.1943, 1.54 ) }
    dend_38 { pt3dadd( 35.951, 25.8849, -17.4263, 1.54 ) }
    dend_38 { pt3dadd( 36.2842, 26.3767, -17.6667, 1.84 ) }
    dend_38 { pt3dadd( 36.5596, 26.7762, -17.8676, 1.98 ) }
    dend_38 { pt3dadd( 36.6995, 26.9761, -17.9691, 1.98 ) }
    dend_38 { pt3dadd( 37.066, 27.4888, -18.2262, 0.95 ) }
    dend_38 { pt3dadd( 37.5329, 28.1315, -18.5335, 0.59 ) }
    dend_38 { pt3dadd( 37.8076, 28.4913, -18.7063, 0.81 ) }
    dend_38 { pt3dadd( 38.0954, 28.8423, -18.8694, 0.88 ) }
    dend_38 { pt3dadd( 38.5594, 29.3475, -19.1003, 0.59 ) }
    dend_38 { pt3dadd( 38.8845, 29.6578, -19.2435, 1.1 ) }
    dend_38 { pt3dadd( 39.3772, 30.0812, -19.4194, 2.06 ) }
    dend_38 { pt3dadd( 39.8345, 30.4333, -19.548, 1.4 ) }
    dend_38 { pt3dadd( 40.3146, 30.7805, -19.6597, 0.66 ) }
    dend_38 { pt3dadd( 40.789, 31.108, -19.7622, 0.29 ) }
    dend_38 { pt3dadd( 41.4728, 31.5537, -19.8859, 1.91 ) }
    dend_38 { pt3dadd( 41.8432, 31.7859, -19.9411, 2.57 ) }
    dend_38 { pt3dadd( 42.3774, 32.0988, -19.9958, 2.28 ) }
    dend_38 { pt3dadd( 42.962, 32.4328, -20.0154, 1.69 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 56/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 11.161, -9.50977, -6.42677, 1.1 ) }
    dend_34 { pt3dadd( 14.0782, -8.63525, -7.55581, 1.1 ) }
    dend_34 { pt3dadd( 15.9813, -8.01284, -8.35026, 0.81 ) }
    dend_34 { pt3dadd( 17.3128, -7.59903, -8.94204, 0.95 ) }
    dend_34 { pt3dadd( 19.6956, -6.93565, -10.0024, 2.06 ) }
    dend_34 { pt3dadd( 21.8527, -6.36189, -10.9363, 1.18 ) }
    dend_34 { pt3dadd( 23.5168, -5.9409, -11.6383, 0.73 ) }
    dend_34 { pt3dadd( 24.343, -5.73597, -11.9888, 0.95 ) }
    dend_34 { pt3dadd( 25.7159, -5.40155, -12.5554, 1.18 ) }
    dend_34 { pt3dadd( 27.669, -4.97925, -13.3416, 0.51 ) }
    dend_34 { pt3dadd( 28.8507, -4.76795, -13.8191, 0.51 ) }
    dend_34 { pt3dadd( 30.0805, -4.64727, -14.2746, 1.84 ) }
    dend_34 { pt3dadd( 32.2383, -4.50327, -14.9369, 2.5 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 11.161, -9.50977, -6.42677, 1.98 ) }
    dend_31 { pt3dadd( 11.0367, -11.2157, -7.44041, 1.98 ) }
    dend_31 { pt3dadd( 10.9552, -12.335, -8.10554, 1.62 ) }
    dend_31 { pt3dadd( 10.7883, -14.6253, -9.46646, 1.18 ) }
    dend_31 { pt3dadd( 10.6132, -17.0287, -10.8946, 1.76 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.44754, -18.6789, 0.148138, 2.06 ) }
    dend_23 { pt3dadd( -2.54921, -20.0163, -0.1038, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.44754, -18.6789, 0.148138, 1.03 ) }
    dend_18 { pt3dadd( -1.13272, -20.219, 0.420625, 1.03 ) }
    dend_18 { pt3dadd( -0.887819, -21.4171, 0.632585, 1.03 ) }
    dend_18 { pt3dadd( -0.685039, -22.4091, 0.808098, 1.03 ) }
    dend_18 { pt3dadd( -0.482399, -23.4005, 0.983491, 1.25 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 81/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.0911, 3.72593, -1.17166, 0.95 ) }
    dend_16 { pt3dadd( -11.3422, 3.6716, -0.74479, 0.95 ) }
    dend_16 { pt3dadd( -12.5063, 3.5064, 0.669604, 0.95 ) }
    dend_16 { pt3dadd( -13.1105, 3.44167, 1.27625, 1.1 ) }
    dend_16 { pt3dadd( -14.1736, 3.35515, 2.20701, 1.25 ) }
    dend_16 { pt3dadd( -16.5065, 3.21617, 4.04844, 0.95 ) }
    dend_16 { pt3dadd( -17.7433, 3.17297, 4.94849, 0.95 ) }
    dend_16 { pt3dadd( -19.4931, 3.20293, 6.04985, 0.66 ) }
    dend_16 { pt3dadd( -20.1579, 3.23833, 6.41505, 0.37 ) }
    dend_16 { pt3dadd( -21.2635, 3.32451, 7.00275, 1.18 ) }
    dend_16 { pt3dadd( -21.8452, 3.38046, 7.29094, 1.54 ) }
    dend_16 { pt3dadd( -23.2564, 3.51929, 7.9845, 0.73 ) }
    dend_16 { pt3dadd( -24.5549, 3.60852, 8.7634, 0.66 ) }
    dend_16 { pt3dadd( -25.6296, 3.6693, 9.43391, 0.51 ) }
    dend_16 { pt3dadd( -26.6254, 3.70264, 10.0909, 0.81 ) }
    dend_16 { pt3dadd( -27.4321, 3.70975, 10.6311, 1.18 ) }
    dend_16 { pt3dadd( -28.5015, 3.71213, 11.3629, 0.88 ) }
    dend_16 { pt3dadd( -29.0834, 3.72058, 11.7791, 1.32 ) }
    dend_16 { pt3dadd( -30.3926, 3.75801, 12.7917, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -31.6107, 3.84028, 13.9386, 0.95 ) }
    dend_16 { pt3dadd( -32.3338, 3.90803, 14.807, 0.95 ) }
    dend_16 { pt3dadd( -32.7587, 3.95884, 15.4377, 0.95 ) }
    dend_16 { pt3dadd( -33.3087, 3.99345, 16.3816, 0.95 ) }
    dend_16 { pt3dadd( -33.7463, 3.93473, 17.2812, 0.95 ) }
    dend_16 { pt3dadd( -34.2781, 3.73408, 18.7336, 0.95 ) }
    dend_16 { pt3dadd( -34.7216, 3.45565, 20.0392, 0.95 ) }
    dend_16 { pt3dadd( -35.0449, 3.14179, 21.0649, 0.73 ) }
    dend_16 { pt3dadd( -35.3999, 2.75814, 21.9193, 1.03 ) }
    dend_16 { pt3dadd( -35.6967, 2.4731, 22.4008, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 10/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.0911, 3.72593, -1.17166, 2.13 ) }
    dend_9 { pt3dadd( -11.7919, 4.11652, -1.30983, 2.13 ) }
    dend_9 { pt3dadd( -12.849, 4.70574, -1.51829, 2.13 ) }
    dend_9 { pt3dadd( -13.6471, 5.15058, -1.67566, 1.84 ) }
    dend_9 { pt3dadd( -14.7789, 5.7814, -1.89883, 2.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.588, 1.54806, 12.9387, 1.62 ) }
    dend_7 { pt3dadd( 13.1914, 2.30123, 14.6298, 1.62 ) }
    dend_7 { pt3dadd( 14.971, 3.16792, 16.4363, 0.88 ) }
    dend_7 { pt3dadd( 16.5384, 3.91983, 17.9024, 1.32 ) }
    dend_7 { pt3dadd( 17.3877, 4.38585, 18.6522, 2.06 ) }
    dend_7 { pt3dadd( 18.7999, 5.26277, 19.8389, 1.47 ) }
    dend_7 { pt3dadd( 20.1261, 6.14121, 20.9188, 1.76 ) }
    dend_7 { pt3dadd( 21.3442, 7.05607, 21.8913, 1.4 ) }
    dend_7 { pt3dadd( 22.3207, 7.90663, 22.6039, 0.88 ) }
    dend_7 { pt3dadd( 23.565, 9.16709, 23.4835, 0.81 ) }
    dend_7 { pt3dadd( 24.4816, 10.137, 24.0951, 0.66 ) }
    dend_7 { pt3dadd( 25.5106, 11.228, 24.7352, 0.81 ) }
    dend_7 { pt3dadd( 26.6945, 12.4645, 25.4212, 1.69 ) }
    dend_7 { pt3dadd( 28.1415, 13.9911, 26.2352, 1.69 ) }
    dend_7 { pt3dadd( 29.6031, 15.5281, 27.0551, 2.2 ) }
    dend_7 { pt3dadd( 31.1503, 17.0445, 27.8562, 0.73 ) }
    dend_7 { pt3dadd( 32.1875, 18.0675, 28.34, 0.59 ) }
    dend_7 { pt3dadd( 33.3395, 19.2637, 28.8566, 0.66 ) }
    dend_7 { pt3dadd( 34.3339, 20.287, 29.2558, 0.73 ) }
    dend_7 { pt3dadd( 34.9225, 20.8835, 29.4982, 0.59 ) }
    dend_7 { pt3dadd( 36.0457, 22.0765, 29.973, 0.59 ) }
    dend_7 { pt3dadd( 36.6541, 22.8013, 30.2703, 0.51 ) }
    dend_7 { pt3dadd( 38.0784, 24.6306, 31.0368, 0.51 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 11.588, 1.54806, 12.9387, 0.81 ) }
    dend_6 { pt3dadd( 13.1155, 0.900151, 13.3031, 0.81 ) }
    dend_6 { pt3dadd( 14.5327, 0.300195, 13.7472, 0.66 ) }
    dend_6 { pt3dadd( 15.7464, -0.226367, 14.1567, 0.73 ) }
    dend_6 { pt3dadd( 16.6611, -0.647569, 14.4858, 0.81 ) }
    dend_6 { pt3dadd( 17.361, -0.982775, 14.74, 0.73 ) }
    dend_6 { pt3dadd( 18.1305, -1.34865, 15.0022, 0.81 ) }
    dend_6 { pt3dadd( 19.1078, -1.80538, 15.3395, 0.81 ) }
    dend_6 { pt3dadd( 19.6473, -2.05519, 15.5227, 0.73 ) }
    dend_6 { pt3dadd( 20.4626, -2.42806, 15.7915, 0.44 ) }
    dend_6 { pt3dadd( 21.3746, -2.82775, 16.0576, 1.84 ) }
    dend_6 { pt3dadd( 22.6329, -3.38082, 16.405, 0.95 ) }
    dend_6 { pt3dadd( 23.5252, -3.78893, 16.623, 0.44 ) }
    dend_6 { pt3dadd( 24.0264, -4.03308, 16.733, 0.37 ) }
    dend_6 { pt3dadd( 24.7388, -4.37304, 16.8997, 0.81 ) }
    dend_6 { pt3dadd( 25.2327, -4.60711, 17.0164, 1.32 ) }
    dend_6 { pt3dadd( 25.9957, -5.00577, 17.224, 1.47 ) }
    dend_6 { pt3dadd( 26.6826, -5.45213, 17.4539, 1.47 ) }
    dend_6 { pt3dadd( 27.4071, -6.02547, 17.6983, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 57/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -9.75637, 5.20854, 10.8548, 1.47 ) }
    dend_2 { pt3dadd( -11.6765, 6.39922, 11.1746, 1.47 ) }
    dend_2 { pt3dadd( -13.0955, 7.29047, 11.4189, 1.1 ) }
    dend_2 { pt3dadd( -14.11, 7.9277, 11.5935, 1.1 ) }
    dend_2 { pt3dadd( -15.4843, 8.7909, 11.8302, 1.1 ) }
    dend_2 { pt3dadd( -16.4467, 9.3954, 11.9959, 1.69 ) }
    dend_2 { pt3dadd( -16.867, 9.65937, 12.0682, 2.35 ) }
    dend_2 { pt3dadd( -18.2345, 10.5979, 12.3334, 2.35 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.75637, 5.20854, 10.8548, 1.32 ) }
    dend_1 { pt3dadd( -11.6538, 4.9847, 11.2566, 1.32 ) }
    dend_1 { pt3dadd( -12.8879, 4.90121, 11.3782, 0.88 ) }
    dend_1 { pt3dadd( -13.5221, 4.88626, 11.4066, 0.95 ) }
    dend_1 { pt3dadd( -14.176, 4.8992, 11.4167, 1.03 ) }
    dend_1 { pt3dadd( -14.7573, 4.91949, 11.4372, 1.32 ) }
    dend_1 { pt3dadd( -16.1161, 4.99886, 11.5195, 2.13 ) }
    dend_1 { pt3dadd( -17.5199, 5.16994, 11.6108, 0.73 ) }
    dend_1 { pt3dadd( -18.4987, 5.3044, 11.7118, 0.59 ) }
    dend_1 { pt3dadd( -19.6958, 5.45703, 11.877, 0.59 ) }
    dend_1 { pt3dadd( -20.4612, 5.51908, 12.0229, 0.88 ) }
    dend_1 { pt3dadd( -21.4575, 5.56079, 12.2773, 1.1 ) }
    dend_1 { pt3dadd( -22.4723, 5.5501, 12.6194, 0.88 ) }
    dend_1 { pt3dadd( -23.9124, 5.41641, 13.1565, 0.81 ) }
    dend_1 { pt3dadd( -25.1076, 5.20763, 13.6003, 0.81 ) }
    dend_1 { pt3dadd( -26.2857, 4.93379, 14.0308, 0.88 ) }
    dend_1 { pt3dadd( -27.3484, 4.63354, 14.3728, 0.88 ) }
    dend_1 { pt3dadd( -28.3871, 4.28029, 14.6989, 0.44 ) }
    dend_1 { pt3dadd( -29.4264, 3.87846, 15.0051, 0.44 ) }
    dend_1 { pt3dadd( -30.0725, 3.61371, 15.2002, 0.66 ) }
    dend_1 { pt3dadd( -30.8049, 3.33174, 15.4208, 0.81 ) }
    dend_1 { pt3dadd( -32.0312, 2.87038, 15.7472, 1.1 ) }
    dend_1 { pt3dadd( -32.5057, 2.68222, 15.8629, 1.1 ) }
    dend_1 { pt3dadd( -33.4331, 2.32037, 16.0949, 0.66 ) }
    dend_1 { pt3dadd( -34.3697, 1.95257, 16.3447, 0.59 ) }
    dend_1 { pt3dadd( -35.0354, 1.644, 16.5195, 0.66 ) }
    dend_1 { pt3dadd( -35.9543, 1.1272, 16.7367, 0.37 ) }
    dend_1 { pt3dadd( -36.551, 0.730988, 16.8704, 0.37 ) }
    dend_1 { pt3dadd( -37.1607, 0.291067, 16.9909, 1.1 ) }
    dend_1 { pt3dadd( -37.5195, -0.00329301, 17.0593, 1.03 ) }
    dend_1 { pt3dadd( -38.2193, -0.681282, 17.1594, 0.22 ) }
    dend_1 { pt3dadd( -38.6919, -1.18397, 17.219, 0.44 ) }
    dend_1 { pt3dadd( -39.0741, -1.5816, 17.2508, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.4794, 16.3784, 0.0, 0.797982 ) }
    axon_1 { pt3dadd( 49.9466, 22.9842, 0.0, 0.797982 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    axon_1 { pt3dadd( 63.4137, 29.5901, 0.0, 0.797982 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 1/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 42.962, 32.4328, -20.0154, 1.03 ) }
    dend_40 { pt3dadd( 43.0126, 33.4369, -20.4327, 1.03 ) }
    dend_40 { pt3dadd( 43.0505, 34.4967, -21.1044, 0.51 ) }
    dend_40 { pt3dadd( 43.0746, 35.0809, -21.5195, 0.51 ) }
    dend_40 { pt3dadd( 43.147, 35.9562, -22.1512, 1.18 ) }
    dend_40 { pt3dadd( 43.2445, 36.6368, -22.6717, 1.62 ) }
    dend_40 { pt3dadd( 43.3862, 37.2624, -23.1667, 1.91 ) }
    dend_40 { pt3dadd( 43.7788, 38.3981, -24.2416, 0.73 ) }
    dend_40 { pt3dadd( 43.9742, 38.7583, -24.622, 0.66 ) }
    dend_40 { pt3dadd( 44.3523, 39.2763, -25.1507, 0.81 ) }
    dend_40 { pt3dadd( 44.8373, 39.8239, -25.6511, 0.59 ) }
    dend_40 { pt3dadd( 45.4123, 40.4086, -26.1204, 1.1 ) }
    dend_40 { pt3dadd( 45.9459, 40.9353, -26.4964, 2.06 ) }
    dend_40 { pt3dadd( 46.5527, 41.5426, -26.8668, 2.06 ) }
    dend_40 { pt3dadd( 47.1314, 42.1581, -27.2312, 1.62 ) }
    dend_40 { pt3dadd( 47.6167, 42.7441, -27.53, 0.81 ) }
    dend_40 { pt3dadd( 48.3613, 43.7471, -27.9876, 0.37 ) }
    dend_40 { pt3dadd( 48.844, 44.4362, -28.3002, 0.37 ) }
    dend_40 { pt3dadd( 49.1481, 44.8706, -28.4921, 1.32 ) }
    dend_40 { pt3dadd( 49.6187, 45.5015, -28.7769, 2.2 ) }
    dend_40 { pt3dadd( 50.432, 46.4561, -29.2292, 1.76 ) }
    dend_40 { pt3dadd( 51.4392, 47.5321, -29.742, 0.07 ) }
    dend_40 { pt3dadd( 52.0884, 48.1684, -30.0437, 1.1 ) }
    dend_40 { pt3dadd( 52.5283, 48.5688, -30.2235, 2.35 ) }
    dend_40 { pt3dadd( 53.4855, 49.4108, -30.577, 1.69 ) }
    dend_40 { pt3dadd( 54.3779, 50.1727, -30.8762, 0.37 ) }
    dend_40 { pt3dadd( 55.1085, 50.7784, -31.1058, 0.59 ) }
    dend_40 { pt3dadd( 55.9238, 51.4662, -31.3148, 0.59 ) }
    dend_40 { pt3dadd( 56.8553, 52.2626, -31.5385, 2.06 ) }
    dend_40 { pt3dadd( 57.4698, 52.8056, -31.6893, 2.06 ) }
    dend_40 { pt3dadd( 58.4856, 53.7, -31.9274, 1.18 ) }
    dend_40 { pt3dadd( 59.1975, 54.3089, -32.0915, 0.59 ) }
    dend_40 { pt3dadd( 60.2519, 55.1711, -32.347, 0.29 ) }
    dend_40 { pt3dadd( 61.6281, 56.2864, -32.7108, 2.86 ) }
    dend_40 { pt3dadd( 62.8971, 57.3248, -33.0841, 0.29 ) }
    dend_40 { pt3dadd( 63.5546, 57.8779, -33.2973, 0.29 ) }
    dend_40 { pt3dadd( 64.2158, 58.4832, -33.5434, 0.44 ) }
    dend_40 { pt3dadd( 64.8488, 59.1445, -33.828, 1.1 ) }
    dend_40 { pt3dadd( 65.2739, 59.6719, -34.0773, 1.98 ) }
    dend_40 { pt3dadd( 65.5139, 60.0382, -34.2532, 2.13 ) }
    dend_40 { pt3dadd( 65.8127, 60.5879, -34.5208, 2.13 ) }
    dend_40 { pt3dadd( 66.1683, 61.3943, -34.9039, 2.13 ) }
    dend_40 { pt3dadd( 66.5999, 62.6026, -35.4665, 0.37 ) }
    dend_40 { pt3dadd( 66.8669, 63.5115, -35.8789, 0.15 ) }
    dend_40 { pt3dadd( 67.0043, 64.073, -36.1439, 0.15 ) }
    dend_40 { pt3dadd( 67.1711, 64.963, -36.5868, 1.1 ) }
    dend_40 { pt3dadd( 67.2581, 65.6049, -36.9144, 2.06 ) }
    dend_40 { pt3dadd( 67.3265, 66.7111, -37.4904, 0.88 ) }
    dend_40 { pt3dadd( 67.3119, 67.3028, -37.7991, 0.15 ) }
    dend_40 { pt3dadd( 67.2842, 67.8792, -38.1038, 0.22 ) }
    dend_40 { pt3dadd( 67.2583, 68.529, -38.465, 0.22 ) }
    dend_40 { pt3dadd( 67.2527, 69.0633, -38.766, 0.22 ) }
    dend_40 { pt3dadd( 67.2959, 69.7938, -39.1729, 1.1 ) }
    dend_40 { pt3dadd( 67.34, 70.1312, -39.372, 1.32 ) }
    dend_40 { pt3dadd( 67.4402, 70.6566, -39.6822, 0.81 ) }
    dend_40 { pt3dadd( 67.5792, 71.2531, -40.0289, 0.22 ) }
    dend_40 { pt3dadd( 67.7144, 71.7214, -40.2965, 0.22 ) }
    dend_40 { pt3dadd( 67.9688, 72.5316, -40.7985, 1.54 ) }
    dend_40 { pt3dadd( 68.1732, 73.1603, -41.2069, 1.54 ) }
    dend_40 { pt3dadd( 68.4642, 74.0798, -41.8071, 0.15 ) }
    dend_40 { pt3dadd( 68.6537, 74.7058, -42.2105, 0.07 ) }
    dend_40 { pt3dadd( 68.8353, 75.2738, -42.5682, 0.81 ) }
    dend_40 { pt3dadd( 69.176, 76.3124, -43.2056, 0.15 ) }
    dend_40 { pt3dadd( 69.4706, 77.1486, -43.6934, 2.2 ) }
    dend_40 { pt3dadd( 69.59, 77.4951, -43.8787, 2.13 ) }
    dend_40 { pt3dadd( 69.7865, 78.0258, -44.1547, 1.84 ) }
    dend_40 { pt3dadd( 70.1654, 78.9756, -44.6151, 0.88 ) }
    dend_40 { pt3dadd( 70.4539, 79.6434, -44.922, 0.22 ) }
    dend_40 { pt3dadd( 70.651, 80.0445, -45.0816, 0.22 ) }
    dend_40 { pt3dadd( 70.9436, 80.5818, -45.2918, 0.44 ) }
    dend_40 { pt3dadd( 71.3656, 81.3141, -45.5768, 0.07 ) }
    dend_40 { pt3dadd( 71.7838, 82.005, -45.8441, 1.32 ) }
    dend_40 { pt3dadd( 72.0282, 82.3755, -45.9888, 1.62 ) }
    dend_40 { pt3dadd( 72.4945, 83.0357, -46.2449, 1.69 ) }
    dend_40 { pt3dadd( 73.1776, 83.959, -46.5695, 0.22 ) }
    dend_40 { pt3dadd( 73.5759, 84.4467, -46.7242, 0.29 ) }
    dend_40 { pt3dadd( 74.1721, 85.1136, -46.9052, 0.29 ) }
    dend_40 { pt3dadd( 74.676, 85.6344, -47.0262, 0.95 ) }
    dend_40 { pt3dadd( 75.205, 86.1413, -47.1245, 1.54 ) }
    dend_40 { pt3dadd( 76.0903, 86.9513, -47.2101, 1.32 ) }
    dend_40 { pt3dadd( 77.0721, 87.8397, -47.2199, 0.22 ) }
    dend_40 { pt3dadd( 77.811, 88.5192, -47.1966, 0.22 ) }
    dend_40 { pt3dadd( 78.2582, 88.9342, -47.1636, 0.81 ) }
    dend_40 { pt3dadd( 78.7668, 89.4271, -47.1149, 1.1 ) }
    dend_40 { pt3dadd( 79.6856, 90.371, -47.0065, 0.66 ) }
    dend_40 { pt3dadd( 80.2083, 90.9873, -46.9336, 1.25 ) }
    dend_40 { pt3dadd( 80.8839, 91.8621, -46.8577, 2.2 ) }
    dend_40 { pt3dadd( 81.1856, 92.2547, -46.8482, 2.5 ) }
    dend_40 { pt3dadd( 81.4397, 92.5819, -46.8577, 2.5 ) }
    dend_40 { pt3dadd( 82.2661, 93.6368, -46.948, 0.59 ) }
    dend_40 { pt3dadd( 83.1804, 94.7953, -47.1235, 0.22 ) }
    dend_40 { pt3dadd( 83.9695, 95.8591, -47.3412, 0.22 ) }
    dend_40 { pt3dadd( 84.6902, 96.9377, -47.6327, 0.22 ) }
    dend_40 { pt3dadd( 85.05, 97.5422, -47.8432, 1.62 ) }
    dend_40 { pt3dadd( 85.1736, 97.7813, -47.9489, 2.06 ) }
    dend_40 { pt3dadd( 85.3336, 98.1646, -48.1641, 2.06 ) }
    dend_40 { pt3dadd( 85.7642, 99.4861, -49.0282, 0.29 ) }
    dend_40 { pt3dadd( 85.9337, 100.292, -49.5738, 0.95 ) }
    dend_40 { pt3dadd( 86.0122, 100.869, -49.9776, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( 86.083, 101.489, -50.4415, 0.15 ) }
    dend_40 { pt3dadd( 86.1503, 102.162, -50.9488, 0.15 ) }
    dend_40 { pt3dadd( 86.2019, 102.648, -51.3162, 1.32 ) }
    dend_40 { pt3dadd( 86.2513, 103.116, -51.6593, 1.76 ) }
    dend_40 { pt3dadd( 86.2764, 103.273, -51.7716, 1.69 ) }
    dend_40 { pt3dadd( 86.5531, 104.411, -52.6376, 0.22 ) }
    dend_40 { pt3dadd( 86.7488, 105.066, -53.1438, 0.29 ) }
    dend_40 { pt3dadd( 86.9582, 105.656, -53.6163, 1.03 ) }
    dend_40 { pt3dadd( 87.1352, 106.097, -53.9751, 1.69 ) }
    dend_40 { pt3dadd( 87.331, 106.538, -54.3339, 1.91 ) }
    dend_40 { pt3dadd( 87.8551, 107.68, -55.2551, 0.15 ) }
    dend_40 { pt3dadd( 88.1188, 108.262, -55.7115, 0.66 ) }
    dend_40 { pt3dadd( 88.424, 109.0, -56.2823, 0.15 ) }
    dend_40 { pt3dadd( 88.5973, 109.47, -56.6416, 1.18 ) }
    dend_40 { pt3dadd( 88.726, 109.836, -56.9067, 1.32 ) }
    dend_40 { pt3dadd( 88.8235, 110.149, -57.1267, 1.32 ) }
    dend_40 { pt3dadd( 89.129, 111.261, -57.9106, 0.15 ) }
    dend_40 { pt3dadd( 89.3677, 112.209, -58.6146, 1.76 ) }
    dend_40 { pt3dadd( 89.5142, 112.848, -59.0831, 1.76 ) }
    dend_40 { pt3dadd( 89.7233, 113.806, -59.7942, 0.44 ) }
    dend_40 { pt3dadd( 89.8374, 114.366, -60.209, 0.73 ) }
    dend_40 { pt3dadd( 89.9745, 115.009, -60.6821, 0.73 ) }
    dend_40 { pt3dadd( 90.0594, 115.416, -60.978, 0.44 ) }
    dend_40 { pt3dadd( 90.209, 116.182, -61.5148, 0.22 ) }
    dend_40 { pt3dadd( 90.3359, 116.808, -61.9582, 1.03 ) }
    dend_40 { pt3dadd( 90.4256, 117.229, -62.2608, 1.32 ) }
    dend_40 { pt3dadd( 90.6842, 118.186, -62.9145, 0.07 ) }
    dend_40 { pt3dadd( 90.976, 119.083, -63.5238, 1.62 ) }
    dend_40 { pt3dadd( 91.1478, 119.571, -63.856, 1.62 ) }
    dend_40 { pt3dadd( 91.5755, 120.727, -64.6748, 0.15 ) }
    dend_40 { pt3dadd( 91.698, 121.045, -64.8998, 0.15 ) }
    dend_40 { pt3dadd( 91.9282, 121.627, -65.3008, 0.15 ) }
    dend_40 { pt3dadd( 92.1804, 122.228, -65.694, 1.03 ) }
    dend_40 { pt3dadd( 92.3439, 122.585, -65.9176, 1.98 ) }
    dend_40 { pt3dadd( 92.6257, 123.165, -66.2532, 1.69 ) }
    dend_40 { pt3dadd( 93.0714, 124.057, -66.7245, 0.29 ) }
    dend_40 { pt3dadd( 93.4561, 124.792, -67.1189, 0.29 ) }
    dend_40 { pt3dadd( 93.8505, 125.534, -67.5067, 1.32 ) }
    dend_40 { pt3dadd( 94.0233, 125.832, -67.6514, 1.54 ) }
    dend_40 { pt3dadd( 94.6534, 126.887, -68.1471, 0.29 ) }
    dend_40 { pt3dadd( 95.0274, 127.511, -68.4287, 0.44 ) }
    dend_40 { pt3dadd( 95.5546, 128.469, -68.8783, 0.73 ) }
    dend_40 { pt3dadd( 95.8807, 129.132, -69.2069, 1.18 ) }
    dend_40 { pt3dadd( 96.3347, 130.217, -69.7672, 0.29 ) }
    dend_40 { pt3dadd( 96.5319, 130.774, -70.084, 0.15 ) }
    dend_40 { pt3dadd( 96.6942, 131.306, -70.4251, 0.15 ) }
    dend_40 { pt3dadd( 96.953, 132.262, -71.1003, 2.13 ) }
    dend_40 { pt3dadd( 97.0533, 132.635, -71.3778, 2.2 ) }
    dend_40 { pt3dadd( 97.2042, 133.171, -71.813, 2.2 ) }
    dend_40 { pt3dadd( 97.5297, 134.297, -72.7671, 0.51 ) }
    dend_40 { pt3dadd( 97.8305, 135.144, -73.5185, 0.51 ) }
    dend_40 { pt3dadd( 98.1467, 135.868, -74.1783, 0.07 ) }
    dend_40 { pt3dadd( 98.5337, 136.628, -74.8761, 0.66 ) }
    dend_40 { pt3dadd( 98.9329, 137.378, -75.5555, 0.22 ) }
    dend_40 { pt3dadd( 99.2717, 137.995, -76.1022, 1.1 ) }
    dend_40 { pt3dadd( 99.7299, 138.843, -76.8163, 0.29 ) }
    dend_40 { pt3dadd( 100.074, 139.565, -77.384, 1.32 ) }
    dend_40 { pt3dadd( 100.147, 139.739, -77.5164, 1.84 ) }
    dend_40 { pt3dadd( 100.32, 140.252, -77.8895, 1.47 ) }
    dend_40 { pt3dadd( 100.555, 141.098, -78.4539, 0.37 ) }
    dend_40 { pt3dadd( 100.65, 141.567, -78.7517, 0.15 ) }
    dend_40 { pt3dadd( 100.738, 142.414, -79.2372, 0.15 ) }
    dend_40 { pt3dadd( 100.755, 142.875, -79.4888, 0.15 ) }
    dend_40 { pt3dadd( 100.77, 143.508, -79.8256, 1.1 ) }
    dend_40 { pt3dadd( 100.771, 144.258, -80.2089, 1.76 ) }
    dend_40 { pt3dadd( 100.77, 144.719, -80.4277, 1.98 ) }
    dend_40 { pt3dadd( 100.77, 145.893, -80.9728, 0.66 ) }
    dend_40 { pt3dadd( 100.779, 146.835, -81.4096, 0.59 ) }
    dend_40 { pt3dadd( 100.779, 147.357, -81.6486, 0.22 ) }
    dend_40 { pt3dadd( 100.777, 148.172, -82.0511, 0.29 ) }
    dend_40 { pt3dadd( 100.768, 148.971, -82.4617, 0.29 ) }
    dend_40 { pt3dadd( 100.771, 149.61, -82.819, 1.18 ) }
    dend_40 { pt3dadd( 100.776, 150.151, -83.147, 1.84 ) }
    dend_40 { pt3dadd( 100.762, 150.839, -83.5855, 1.4 ) }
    dend_40 { pt3dadd( 100.714, 151.567, -84.049, 0.37 ) }
    dend_40 { pt3dadd( 100.675, 152.005, -84.3351, 0.29 ) }
    dend_40 { pt3dadd( 100.62, 152.512, -84.6664, 0.29 ) }
    dend_40 { pt3dadd( 100.579, 152.946, -84.9587, 0.66 ) }
    dend_40 { pt3dadd( 100.536, 153.483, -85.3445, 0.66 ) }
    dend_40 { pt3dadd( 100.497, 154.047, -85.7804, 0.22 ) }
    dend_40 { pt3dadd( 100.452, 154.662, -86.2773, 0.22 ) }
    dend_40 { pt3dadd( 100.372, 155.324, -86.8591, 1.62 ) }
    dend_40 { pt3dadd( 100.246, 155.952, -87.4871, 1.62 ) }
    dend_40 { pt3dadd( 100.07, 156.685, -88.2682, 0.88 ) }
    dend_40 { pt3dadd( 99.8965, 157.32, -88.9785, 0.37 ) }
    dend_40 { pt3dadd( 99.7993, 157.661, -89.3761, 0.37 ) }
    dend_40 { pt3dadd( 99.6057, 158.337, -90.1684, 1.91 ) }
    dend_40 { pt3dadd( 99.3988, 159.217, -91.2351, 0.51 ) }
    dend_40 { pt3dadd( 99.3007, 159.753, -91.8785, 0.37 ) }
    dend_40 { pt3dadd( 99.2152, 160.319, -92.5757, 0.22 ) }
    dend_40 { pt3dadd( 99.1203, 161.173, -93.6466, 0.66 ) }
    dend_40 { pt3dadd( 99.1038, 161.421, -93.9506, 1.76 ) }
    dend_40 { pt3dadd( 99.1155, 162.369, -95.0671, 0.29 ) }
    dend_40 { pt3dadd( 99.1354, 162.682, -95.4036, 0.22 ) }
    dend_40 { pt3dadd( 99.1692, 163.386, -96.1733, 1.25 ) }
    dend_40 { pt3dadd( 99.1705, 163.602, -96.4177, 1.25 ) }
    dend_40 { pt3dadd( 99.154, 163.962, -96.8184, 0.22 ) }
    dend_40 { pt3dadd( 99.114, 164.363, -97.3028, 0.15 ) }
    dend_40 { pt3dadd( 99.0442, 164.775, -97.8337, 0.15 ) }
    dend_40 { pt3dadd( 98.8363, 165.63, -99.0158, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 98.5435, 166.596, -100.414, 0.44 ) }
    dend_40 { pt3dadd( 98.4402, 166.883, -100.844, 0.73 ) }
    dend_40 { pt3dadd( 98.2243, 167.41, -101.628, 0.22 ) }
    dend_40 { pt3dadd( 98.1439, 167.596, -101.882, 0.22 ) }
    dend_40 { pt3dadd( 97.9093, 168.243, -102.641, 1.62 ) }
    dend_40 { pt3dadd( 97.7694, 168.808, -103.143, 1.62 ) }
    dend_40 { pt3dadd( 97.6594, 169.65, -103.733, 0.15 ) }
    dend_40 { pt3dadd( 97.6287, 170.154, -104.05, 0.15 ) }
    dend_40 { pt3dadd( 97.6191, 170.903, -104.471, 0.22 ) }
    dend_40 { pt3dadd( 97.6352, 171.985, -105.054, 1.84 ) }
    dend_40 { pt3dadd( 97.6572, 172.526, -105.341, 1.84 ) }
    dend_40 { pt3dadd( 97.6742, 173.419, -105.803, 0.59 ) }
    dend_40 { pt3dadd( 97.6589, 174.181, -106.213, 0.37 ) }
    dend_40 { pt3dadd( 97.6368, 174.588, -106.441, 0.37 ) }
    dend_40 { pt3dadd( 97.5747, 175.316, -106.878, 0.37 ) }
    dend_40 { pt3dadd( 97.4785, 176.189, -107.439, 0.07 ) }
    dend_40 { pt3dadd( 97.3791, 177.004, -107.992, 0.07 ) }
    dend_40 { pt3dadd( 97.2958, 177.909, -108.647, 1.84 ) }
    dend_40 { pt3dadd( 97.2712, 178.421, -109.051, 1.84 ) }
    dend_40 { pt3dadd( 97.2831, 179.228, -109.729, 0.37 ) }
    dend_40 { pt3dadd( 97.3397, 179.908, -110.35, 0.15 ) }
    dend_40 { pt3dadd( 97.431, 180.485, -110.915, 0.15 ) }
    dend_40 { pt3dadd( 97.6202, 181.344, -111.814, 1.47 ) }
    dend_40 { pt3dadd( 97.726, 181.778, -112.31, 1.47 ) }
    dend_40 { pt3dadd( 97.8024, 182.17, -112.768, 1.1 ) }
    dend_40 { pt3dadd( 97.8528, 182.656, -113.335, 0.81 ) }
    dend_40 { pt3dadd( 97.8694, 183.168, -113.97, 1.62 ) }
    dend_40 { pt3dadd( 97.8654, 183.428, -114.296, 1.62 ) }
    dend_40 { pt3dadd( 97.803, 184.361, -115.466, 0.07 ) }
    dend_40 { pt3dadd( 97.7483, 185.003, -116.289, 0.95 ) }
    dend_40 { pt3dadd( 97.6899, 185.654, -117.193, 0.07 ) }
    dend_40 { pt3dadd( 97.652, 186.031, -117.758, 0.88 ) }
    dend_40 { pt3dadd( 97.6118, 186.418, -118.413, 0.07 ) }
    dend_40 { pt3dadd( 97.5855, 186.713, -118.951, 0.07 ) }
    dend_40 { pt3dadd( 97.5452, 187.142, -119.781, 1.84 ) }
    dend_40 { pt3dadd( 97.4828, 187.739, -120.982, 0.51 ) }
    dend_40 { pt3dadd( 97.4381, 188.325, -122.046, 1.18 ) }
    dend_40 { pt3dadd( 97.4027, 188.98, -123.101, 0.22 ) }
    dend_40 { pt3dadd( 97.3831, 189.357, -123.663, 0.22 ) }
    dend_40 { pt3dadd( 97.3649, 189.876, -124.349, 1.1 ) }
    dend_40 { pt3dadd( 97.3706, 190.13, -124.644, 1.18 ) }
    dend_40 { pt3dadd( 97.4492, 191.097, -125.626, 0.15 ) }
    dend_40 { pt3dadd( 97.5304, 191.718, -126.164, 1.1 ) }
    dend_40 { pt3dadd( 97.5807, 192.124, -126.481, 1.4 ) }
    dend_40 { pt3dadd( 97.5989, 192.385, -126.676, 1.4 ) }
    dend_40 { pt3dadd( 97.6117, 193.35, -127.353, 0.37 ) }
    dend_40 { pt3dadd( 97.5994, 193.688, -127.584, 0.37 ) }
    dend_40 { pt3dadd( 97.5292, 194.484, -128.137, 1.54 ) }
    dend_40 { pt3dadd( 97.3856, 195.614, -128.897, 0.07 ) }
    dend_40 { pt3dadd( 97.2205, 196.525, -129.494, 0.07 ) }
    dend_40 { pt3dadd( 97.0448, 197.333, -130.023, 1.69 ) }
    dend_40 { pt3dadd( 97.003, 197.492, -130.125, 1.69 ) }
    dend_40 { pt3dadd( 96.6853, 198.575, -130.808, 0.07 ) }
    dend_40 { pt3dadd( 96.3128, 199.712, -131.526, 0.07 ) }
    dend_40 { pt3dadd( 96.0113, 200.533, -132.027, 0.07 ) }
    dend_40 { pt3dadd( 95.7316, 201.286, -132.491, 1.69 ) }
    dend_40 { pt3dadd( 95.4948, 201.893, -132.862, 2.28 ) }
    dend_40 { pt3dadd( 94.9621, 203.219, -133.676, 0.22 ) }
    dend_40 { pt3dadd( 94.6592, 203.954, -134.117, 0.15 ) }
    dend_40 { pt3dadd( 94.2817, 204.915, -134.709, 0.15 ) }
    dend_40 { pt3dadd( 94.0764, 205.476, -135.056, 0.95 ) }
    dend_40 { pt3dadd( 93.8897, 205.969, -135.369, 1.18 ) }
    dend_40 { pt3dadd( 93.6039, 206.755, -135.882, 0.07 ) }
    dend_40 { pt3dadd( 93.5235, 206.966, -136.021, 0.07 ) }
    dend_40 { pt3dadd( 93.2911, 207.594, -136.419, 1.1 ) }
    dend_40 { pt3dadd( 93.0865, 208.137, -136.75, 1.1 ) }
    dend_40 { pt3dadd( 92.8925, 208.608, -137.021, 0.07 ) }
    dend_40 { pt3dadd( 92.5997, 209.295, -137.425, 0.07 ) }
    dend_40 { pt3dadd( 92.2042, 210.219, -137.944, 1.62 ) }
    dend_40 { pt3dadd( 91.8758, 210.976, -138.366, 1.25 ) }
    dend_40 { pt3dadd( 91.5481, 211.746, -138.807, 0.07 ) }
    dend_40 { pt3dadd( 91.289, 212.358, -139.159, 0.07 ) }
    dend_40 { pt3dadd( 90.8313, 213.459, -139.825, 1.69 ) }
    dend_40 { pt3dadd( 90.6146, 214.007, -140.17, 1.1 ) }
    dend_40 { pt3dadd( 90.4051, 214.594, -140.544, 0.59 ) }
    dend_40 { pt3dadd( 90.1443, 215.375, -141.064, 0.07 ) }
    dend_40 { pt3dadd( 89.9726, 215.989, -141.461, 1.03 ) }
    dend_40 { pt3dadd( 89.7929, 216.906, -142.034, 0.07 ) }
    dend_40 { pt3dadd( 89.6796, 217.89, -142.642, 0.07 ) }
    dend_40 { pt3dadd( 89.6485, 218.452, -142.97, 0.95 ) }
    dend_40 { pt3dadd( 89.637, 219.428, -143.496, 0.07 ) }
    dend_40 { pt3dadd( 89.6819, 220.769, -144.164, 2.42 ) }
    dend_40 { pt3dadd( 89.7955, 222.224, -144.849, 0.07 ) }
    dend_40 { pt3dadd( 89.8984, 222.996, -145.179, 0.07 ) }
    dend_40 { pt3dadd( 90.1157, 223.987, -145.583, 0.95 ) }
    dend_40 { pt3dadd( 90.2176, 224.358, -145.726, 1.18 ) }
    dend_40 { pt3dadd( 90.6443, 225.477, -146.116, 0.37 ) }
    dend_40 { pt3dadd( 90.8394, 225.867, -146.248, 0.07 ) }
    dend_40 { pt3dadd( 91.3587, 226.801, -146.548, 0.07 ) }
    dend_40 { pt3dadd( 92.0417, 227.933, -146.928, 1.32 ) }
    dend_40 { pt3dadd( 92.5603, 228.713, -147.213, 1.91 ) }
    dend_40 { pt3dadd( 93.6276, 230.278, -147.771, 0.15 ) }
    dend_40 { pt3dadd( 94.0285, 230.871, -147.981, 0.15 ) }
    dend_40 { pt3dadd( 94.2662, 231.251, -148.129, 0.15 ) }
    dend_40 { pt3dadd( 94.6174, 231.913, -148.408, 0.15 ) }
    dend_40 { pt3dadd( 94.8654, 232.504, -148.694, 1.47 ) }
    dend_40 { pt3dadd( 95.0469, 233.065, -149.005, 1.25 ) }
    dend_40 { pt3dadd( 95.2124, 233.967, -149.585, 0.22 ) }
    dend_40 { pt3dadd( 95.3082, 234.651, -150.051, 0.15 ) }
    dend_40 { pt3dadd( 95.3757, 235.179, -150.419, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_40 { pt3dadd( 95.4549, 236.019, -151.027, 1.25 ) }
    dend_40 { pt3dadd( 95.5188, 236.817, -151.641, 2.35 ) }
    dend_40 { pt3dadd( 95.6133, 237.847, -152.475, 0.07 ) }
    dend_40 { pt3dadd( 95.635, 238.179, -152.755, 1.1 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 4/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 42.962, 32.4328, -20.0154, 0.73 ) }
    dend_39 { pt3dadd( 43.4975, 32.773, -20.6943, 0.73 ) }
    dend_39 { pt3dadd( 44.502, 33.3107, -21.8237, 0.37 ) }
    dend_39 { pt3dadd( 45.0384, 33.5458, -22.3861, 0.51 ) }
    dend_39 { pt3dadd( 45.7765, 33.8185, -23.1546, 1.54 ) }
    dend_39 { pt3dadd( 46.5941, 34.1222, -24.0218, 0.07 ) }
    dend_39 { pt3dadd( 47.3813, 34.4309, -24.8357, 0.15 ) }
    dend_39 { pt3dadd( 47.8758, 34.6187, -25.3374, 0.15 ) }
    dend_39 { pt3dadd( 48.4457, 34.8123, -25.8784, 1.32 ) }
    dend_39 { pt3dadd( 49.7049, 35.1607, -26.9551, 0.37 ) }
    dend_39 { pt3dadd( 50.4287, 35.2993, -27.5123, 1.25 ) }
    dend_39 { pt3dadd( 51.1745, 35.4191, -28.0137, 0.29 ) }
    dend_39 { pt3dadd( 52.0019, 35.5365, -28.5194, 0.29 ) }
    dend_39 { pt3dadd( 52.6769, 35.6124, -28.8856, 1.03 ) }
    dend_39 { pt3dadd( 53.6718, 35.669, -29.285, 0.07 ) }
    dend_39 { pt3dadd( 54.7126, 35.6662, -29.5324, 0.07 ) }
    dend_39 { pt3dadd( 55.3403, 35.6442, -29.633, 0.88 ) }
    dend_39 { pt3dadd( 55.497, 35.6363, -29.6559, 1.03 ) }
    dend_39 { pt3dadd( 56.7566, 35.5984, -29.8053, 0.07 ) }
    dend_39 { pt3dadd( 58.1665, 35.6172, -29.9949, 2.13 ) }
    dend_39 { pt3dadd( 59.6682, 35.7322, -30.2193, 0.07 ) }
    dend_39 { pt3dadd( 60.2225, 35.8041, -30.3043, 0.37 ) }
    dend_39 { pt3dadd( 61.2802, 35.9752, -30.4872, 0.07 ) }
    dend_39 { pt3dadd( 61.9067, 36.0897, -30.6092, 1.1 ) }
    dend_39 { pt3dadd( 62.8624, 36.2813, -30.8062, 0.07 ) }
    dend_39 { pt3dadd( 64.0514, 36.5429, -31.0831, 0.07 ) }
    dend_39 { pt3dadd( 64.8371, 36.7313, -31.2775, 1.47 ) }
    dend_39 { pt3dadd( 65.8319, 36.9904, -31.5099, 0.07 ) }
    dend_39 { pt3dadd( 66.6687, 37.2215, -31.7039, 0.07 ) }
    dend_39 { pt3dadd( 67.5352, 37.4497, -31.9209, 0.07 ) }
    dend_39 { pt3dadd( 68.0935, 37.5867, -32.0707, 1.25 ) }
    dend_39 { pt3dadd( 68.7035, 37.7331, -32.2491, 1.32 ) }
    dend_39 { pt3dadd( 69.2985, 37.8792, -32.4147, 1.32 ) }
    dend_39 { pt3dadd( 70.7581, 38.2462, -32.8162, 0.07 ) }
    dend_39 { pt3dadd( 71.2908, 38.3742, -32.9694, 0.44 ) }
    dend_39 { pt3dadd( 72.0474, 38.5398, -33.191, 0.07 ) }
    dend_39 { pt3dadd( 72.7158, 38.6731, -33.3857, 0.07 ) }
    dend_39 { pt3dadd( 73.7988, 38.8662, -33.6866, 1.76 ) }
    dend_39 { pt3dadd( 75.0122, 39.069, -34.0067, 0.07 ) }
    dend_39 { pt3dadd( 75.9557, 39.2577, -34.2564, 0.07 ) }
    dend_39 { pt3dadd( 76.6953, 39.4349, -34.4658, 1.91 ) }
    dend_39 { pt3dadd( 77.877, 39.768, -34.8215, 0.07 ) }
    dend_39 { pt3dadd( 78.5294, 39.9848, -35.0369, 0.07 ) }
    dend_39 { pt3dadd( 79.3609, 40.3018, -35.3226, 1.47 ) }
    dend_39 { pt3dadd( 80.6411, 40.838, -35.7389, 0.07 ) }
    dend_39 { pt3dadd( 81.4112, 41.175, -35.9628, 1.18 ) }
    dend_39 { pt3dadd( 82.0445, 41.436, -36.128, 1.18 ) }
    dend_39 { pt3dadd( 83.1038, 41.8386, -36.3638, 0.07 ) }
    dend_39 { pt3dadd( 83.6074, 42.0095, -36.4582, 0.07 ) }
    dend_39 { pt3dadd( 84.4096, 42.24, -36.5854, 0.07 ) }
    dend_39 { pt3dadd( 85.8112, 42.5643, -36.7806, 1.76 ) }
    dend_39 { pt3dadd( 86.9873, 42.8208, -36.9447, 0.07 ) }
    dend_39 { pt3dadd( 87.5465, 42.9508, -37.0317, 0.07 ) }
    dend_39 { pt3dadd( 88.1636, 43.1116, -37.1479, 0.66 ) }
    dend_39 { pt3dadd( 88.9533, 43.3555, -37.3265, 0.15 ) }
    dend_39 { pt3dadd( 89.7675, 43.6678, -37.5482, 1.25 ) }
    dend_39 { pt3dadd( 90.3552, 43.9492, -37.7303, 1.25 ) }
    dend_39 { pt3dadd( 91.425, 44.5381, -38.1252, 0.07 ) }
    dend_39 { pt3dadd( 92.5335, 45.1756, -38.5772, 1.62 ) }
    dend_39 { pt3dadd( 92.8888, 45.3859, -38.7313, 1.32 ) }
    dend_39 { pt3dadd( 93.4824, 45.7283, -38.9803, 0.95 ) }
    dend_39 { pt3dadd( 94.2535, 46.1427, -39.3194, 0.15 ) }
    dend_39 { pt3dadd( 95.4196, 46.7123, -39.8192, 0.07 ) }
    dend_39 { pt3dadd( 96.2378, 47.0747, -40.1514, 0.07 ) }
    dend_39 { pt3dadd( 96.4351, 47.1495, -40.2262, 1.18 ) }
    dend_39 { pt3dadd( 97.4373, 47.4431, -40.5952, 0.22 ) }
    dend_39 { pt3dadd( 98.5204, 47.6474, -40.9806, 0.07 ) }
    dend_39 { pt3dadd( 99.5343, 47.7657, -41.369, 1.47 ) }
    dend_39 { pt3dadd( 100.194, 47.8267, -41.6352, 1.47 ) }
    dend_39 { pt3dadd( 101.477, 47.9172, -42.2259, 0.15 ) }
    dend_39 { pt3dadd( 102.261, 47.9578, -42.6171, 0.15 ) }
    dend_39 { pt3dadd( 103.248, 47.9878, -43.1776, 1.47 ) }
    dend_39 { pt3dadd( 104.439, 48.054, -43.9051, 0.51 ) }
    dend_39 { pt3dadd( 105.213, 48.1346, -44.4355, 1.32 ) }
    dend_39 { pt3dadd( 105.87, 48.2535, -44.9279, 0.29 ) }
    dend_39 { pt3dadd( 106.254, 48.3713, -45.2309, 0.15 ) }
    dend_39 { pt3dadd( 106.881, 48.6468, -45.732, 0.15 ) }
    dend_39 { pt3dadd( 107.487, 48.9698, -46.226, 1.1 ) }
    dend_39 { pt3dadd( 107.779, 49.1351, -46.4481, 1.18 ) }
    dend_39 { pt3dadd( 108.699, 49.6836, -47.1186, 0.07 ) }
    dend_39 { pt3dadd( 109.159, 49.9771, -47.422, 0.59 ) }
    dend_39 { pt3dadd( 110.053, 50.5685, -47.9623, 0.07 ) }
    dend_39 { pt3dadd( 110.451, 50.8569, -48.2053, 0.07 ) }
    dend_39 { pt3dadd( 111.014, 51.2913, -48.5567, 1.76 ) }
    dend_39 { pt3dadd( 111.816, 51.9896, -49.0658, 0.07 ) }
    dend_39 { pt3dadd( 112.58, 52.7319, -49.5247, 0.07 ) }
    dend_39 { pt3dadd( 113.307, 53.4674, -49.9493, 1.4 ) }
    dend_39 { pt3dadd( 114.407, 54.6471, -50.5822, 0.07 ) }
    dend_39 { pt3dadd( 114.811, 55.0834, -50.8137, 0.51 ) }
    dend_39 { pt3dadd( 115.29, 55.5862, -51.0891, 0.07 ) }
    dend_39 { pt3dadd( 116.009, 56.3039, -51.4828, 0.07 ) }
    dend_39 { pt3dadd( 116.42, 56.6474, -51.707, 1.54 ) }
    dend_39 { pt3dadd( 117.385, 57.2969, -52.1869, 0.07 ) }
    dend_39 { pt3dadd( 118.409, 57.8567, -52.6428, 1.47 ) }
    dend_39 { pt3dadd( 119.268, 58.2198, -52.997, 0.07 ) }
    dend_39 { pt3dadd( 119.65, 58.3429, -53.1455, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_39 { pt3dadd( 121.533, 58.8475, -53.8877, 0.07 ) }
    dend_39 { pt3dadd( 121.998, 58.9429, -54.0725, 0.07 ) }
    dend_39 { pt3dadd( 122.507, 59.0128, -54.2719, 1.54 ) }
    dend_39 { pt3dadd( 123.815, 59.1453, -54.8032, 0.07 ) }
    dend_39 { pt3dadd( 124.364, 59.2001, -55.03, 0.07 ) }
    dend_39 { pt3dadd( 125.37, 59.3295, -55.4686, 0.95 ) }
    dend_39 { pt3dadd( 126.426, 59.5177, -55.9132, 0.07 ) }
    dend_39 { pt3dadd( 126.793, 59.6037, -56.1029, 0.07 ) }
    dend_39 { pt3dadd( 127.248, 59.7313, -56.3659, 0.95 ) }
    dend_39 { pt3dadd( 128.332, 60.1156, -57.0487, 0.07 ) }
    dend_39 { pt3dadd( 129.156, 60.4222, -57.5482, 0.07 ) }
    dend_39 { pt3dadd( 129.951, 60.7324, -58.0126, 1.4 ) }
    dend_39 { pt3dadd( 131.394, 61.3557, -58.8622, 0.07 ) }
    dend_39 { pt3dadd( 131.774, 61.5297, -59.0951, 0.07 ) }
    dend_39 { pt3dadd( 132.187, 61.7324, -59.3551, 0.66 ) }
    dend_39 { pt3dadd( 133.071, 62.1901, -59.9225, 0.07 ) }
    dend_39 { pt3dadd( 133.772, 62.5563, -60.3613, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 32.2383, -4.50327, -14.9369, 0.22 ) }
    dend_36 { pt3dadd( 33.3816, -4.73603, -15.2686, 0.22 ) }
    dend_36 { pt3dadd( 34.1114, -4.90317, -15.4992, 0.59 ) }
    dend_36 { pt3dadd( 34.8624, -5.13278, -15.7417, 0.07 ) }
    dend_36 { pt3dadd( 35.8175, -5.44976, -16.0156, 1.47 ) }
    dend_36 { pt3dadd( 36.609, -5.73769, -16.2138, 0.07 ) }
    dend_36 { pt3dadd( 36.8254, -5.82168, -16.2625, 0.07 ) }
    dend_36 { pt3dadd( 37.8403, -6.25314, -16.4917, 1.76 ) }
    dend_36 { pt3dadd( 38.7784, -6.66647, -16.7085, 0.07 ) }
    dend_36 { pt3dadd( 39.3502, -6.92433, -16.8058, 0.07 ) }
    dend_36 { pt3dadd( 39.9782, -7.22867, -16.8943, 0.07 ) }
    dend_36 { pt3dadd( 40.3243, -7.40768, -16.9314, 1.03 ) }
    dend_36 { pt3dadd( 40.881, -7.69952, -16.9858, 1.03 ) }
    dend_36 { pt3dadd( 41.5229, -8.05544, -17.0155, 1.03 ) }
    dend_36 { pt3dadd( 42.1482, -8.40798, -17.0188, 0.07 ) }
    dend_36 { pt3dadd( 42.8021, -8.80087, -17.0099, 0.07 ) }
    dend_36 { pt3dadd( 43.3577, -9.14359, -16.9812, 0.66 ) }
    dend_36 { pt3dadd( 43.846, -9.46365, -16.9358, 0.07 ) }
    dend_36 { pt3dadd( 44.509, -9.93136, -16.8427, 0.95 ) }
    dend_36 { pt3dadd( 45.4122, -10.5917, -16.7093, 0.07 ) }
    dend_36 { pt3dadd( 45.7033, -10.8015, -16.6753, 0.07 ) }
    dend_36 { pt3dadd( 46.1612, -11.1121, -16.6351, 1.1 ) }
    dend_36 { pt3dadd( 46.4859, -11.321, -16.6171, 1.76 ) }
    dend_36 { pt3dadd( 46.7773, -11.5054, -16.6133, 1.76 ) }
    dend_36 { pt3dadd( 47.604, -12.0255, -16.6212, 0.07 ) }
    dend_36 { pt3dadd( 48.1732, -12.412, -16.6207, 0.73 ) }
    dend_36 { pt3dadd( 48.7397, -12.8173, -16.608, 0.07 ) }
    dend_36 { pt3dadd( 48.9219, -12.9532, -16.6052, 0.07 ) }
    dend_36 { pt3dadd( 49.3254, -13.2483, -16.6116, 1.1 ) }
    dend_36 { pt3dadd( 50.0766, -13.7866, -16.6413, 0.07 ) }
    dend_36 { pt3dadd( 50.4746, -14.0549, -16.6841, 1.18 ) }
    dend_36 { pt3dadd( 50.9257, -14.3312, -16.7601, 1.47 ) }
    dend_36 { pt3dadd( 51.3197, -14.5469, -16.8398, 1.47 ) }
    dend_36 { pt3dadd( 52.3014, -15.0136, -17.0538, 0.07 ) }
    dend_36 { pt3dadd( 52.8121, -15.2152, -17.1707, 0.66 ) }
    dend_36 { pt3dadd( 53.6172, -15.4637, -17.3597, 0.07 ) }
    dend_36 { pt3dadd( 54.0475, -15.5673, -17.4357, 0.07 ) }
    dend_36 { pt3dadd( 54.6956, -15.6954, -17.5082, 1.25 ) }
    dend_36 { pt3dadd( 55.2444, -15.7905, -17.5288, 1.25 ) }
    dend_36 { pt3dadd( 55.7876, -15.8772, -17.5156, 0.81 ) }
    dend_36 { pt3dadd( 56.1706, -15.9365, -17.4897, 0.07 ) }
    dend_36 { pt3dadd( 56.9314, -16.0444, -17.4052, 0.07 ) }
    dend_36 { pt3dadd( 57.3819, -16.1073, -17.3642, 0.07 ) }
    dend_36 { pt3dadd( 57.8747, -16.1835, -17.3321, 0.81 ) }
    dend_36 { pt3dadd( 58.2612, -16.2498, -17.3146, 1.03 ) }
    dend_36 { pt3dadd( 58.9577, -16.3884, -17.2936, 1.03 ) }
    dend_36 { pt3dadd( 59.5284, -16.5269, -17.2869, 0.07 ) }
    dend_36 { pt3dadd( 60.2201, -16.7238, -17.2953, 0.07 ) }
    dend_36 { pt3dadd( 60.9415, -16.9562, -17.3194, 1.76 ) }
    dend_36 { pt3dadd( 61.2606, -17.0737, -17.3263, 1.76 ) }
    dend_36 { pt3dadd( 62.1524, -17.4491, -17.3169, 0.07 ) }
    dend_36 { pt3dadd( 62.5043, -17.6113, -17.3054, 0.07 ) }
    dend_36 { pt3dadd( 62.8139, -17.7642, -17.2895, 0.07 ) }
    dend_36 { pt3dadd( 63.4056, -18.0614, -17.2492, 0.95 ) }
    dend_36 { pt3dadd( 63.9978, -18.3651, -17.2121, 0.07 ) }
    dend_36 { pt3dadd( 64.9718, -18.8559, -17.1603, 0.07 ) }
    dend_36 { pt3dadd( 65.6715, -19.1932, -17.1305, 1.1 ) }
    dend_36 { pt3dadd( 66.0525, -19.365, -17.1161, 1.1 ) }
    dend_36 { pt3dadd( 66.611, -19.6075, -17.1071, 0.07 ) }
    dend_36 { pt3dadd( 66.9448, -19.7504, -17.1106, 0.66 ) }
    dend_36 { pt3dadd( 67.4445, -19.9535, -17.1467, 0.07 ) }
    dend_36 { pt3dadd( 67.7436, -20.0743, -17.1767, 0.07 ) }
    dend_36 { pt3dadd( 68.1487, -20.2357, -17.2214, 0.59 ) }
    dend_36 { pt3dadd( 68.5487, -20.3928, -17.2667, 0.15 ) }
    dend_36 { pt3dadd( 69.2846, -20.6798, -17.3462, 1.84 ) }
    dend_36 { pt3dadd( 69.7342, -20.8588, -17.391, 1.84 ) }
    dend_36 { pt3dadd( 70.6903, -21.2644, -17.4946, 0.07 ) }
    dend_36 { pt3dadd( 71.3291, -21.5386, -17.5636, 0.07 ) }
    dend_36 { pt3dadd( 72.0644, -21.8467, -17.6344, 0.07 ) }
    dend_36 { pt3dadd( 72.7889, -22.1507, -17.69, 1.25 ) }
    dend_36 { pt3dadd( 73.1516, -22.2975, -17.7144, 1.25 ) }
    dend_36 { pt3dadd( 74.0028, -22.6419, -17.7627, 0.07 ) }
    dend_36 { pt3dadd( 74.5638, -22.8675, -17.7873, 0.66 ) }
    dend_36 { pt3dadd( 75.0276, -23.0548, -17.7945, 0.07 ) }
    dend_36 { pt3dadd( 76.2628, -23.5569, -17.7952, 0.07 ) }
    dend_36 { pt3dadd( 77.1161, -23.9159, -17.7849, 1.98 ) }
    dend_36 { pt3dadd( 77.7422, -24.1761, -17.7574, 1.1 ) }
    dend_36 { pt3dadd( 78.2372, -24.3795, -17.7294, 0.15 ) }
    dend_36 { pt3dadd( 79.0989, -24.7395, -17.6834, 0.15 ) }
    dend_36 { pt3dadd( 79.4889, -24.9027, -17.665, 1.1 ) }
    dend_36 { pt3dadd( 80.2987, -25.2292, -17.6271, 0.81 ) }
    dend_36 { pt3dadd( 80.9535, -25.4894, -17.6127, 0.07 ) }
    dend_36 { pt3dadd( 81.4754, -25.6906, -17.6163, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 81.9592, -25.8782, -17.6346, 0.07 ) }
    dend_36 { pt3dadd( 82.3812, -26.0502, -17.6647, 0.51 ) }
    dend_36 { pt3dadd( 82.8917, -26.2609, -17.727, 0.07 ) }
    dend_36 { pt3dadd( 83.4655, -26.5034, -17.821, 0.37 ) }
    dend_36 { pt3dadd( 84.1344, -26.787, -17.9474, 0.07 ) }
    dend_36 { pt3dadd( 84.8144, -27.068, -18.086, 1.76 ) }
    dend_36 { pt3dadd( 85.1343, -27.1919, -18.1591, 1.76 ) }
    dend_36 { pt3dadd( 86.143, -27.5343, -18.4077, 0.07 ) }
    dend_36 { pt3dadd( 86.449, -27.6252, -18.4849, 0.07 ) }
    dend_36 { pt3dadd( 87.0603, -27.7835, -18.6352, 0.73 ) }
    dend_36 { pt3dadd( 87.745, -27.928, -18.8243, 0.07 ) }
    dend_36 { pt3dadd( 88.1115, -27.9959, -18.9296, 0.07 ) }
    dend_36 { pt3dadd( 88.5865, -28.085, -19.0416, 0.07 ) }
    dend_36 { pt3dadd( 89.1003, -28.1962, -19.1232, 0.07 ) }
    dend_36 { pt3dadd( 89.4675, -28.2874, -19.1661, 1.25 ) }
    dend_36 { pt3dadd( 90.2529, -28.4983, -19.2661, 0.07 ) }
    dend_36 { pt3dadd( 90.6301, -28.6035, -19.2825, 0.51 ) }
    dend_36 { pt3dadd( 91.4097, -28.8233, -19.289, 0.07 ) }
    dend_36 { pt3dadd( 92.1412, -29.0263, -19.2734, 0.95 ) }
    dend_36 { pt3dadd( 92.6234, -29.1492, -19.233, 1.25 ) }
    dend_36 { pt3dadd( 93.5045, -29.364, -19.0978, 0.07 ) }
    dend_36 { pt3dadd( 94.5521, -29.6156, -18.8793, 0.81 ) }
    dend_36 { pt3dadd( 95.4453, -29.8375, -18.684, 0.07 ) }
    dend_36 { pt3dadd( 95.8047, -29.9327, -18.6015, 0.37 ) }
    dend_36 { pt3dadd( 96.508, -30.1345, -18.4031, 0.07 ) }
    dend_36 { pt3dadd( 97.3247, -30.4001, -18.1402, 1.47 ) }
    dend_36 { pt3dadd( 98.0475, -30.673, -17.8713, 0.07 ) }
    dend_36 { pt3dadd( 98.3931, -30.8134, -17.7501, 0.07 ) }
    dend_36 { pt3dadd( 98.9443, -31.0586, -17.5385, 0.51 ) }
    dend_36 { pt3dadd( 99.5432, -31.3461, -17.312, 0.07 ) }
    dend_36 { pt3dadd( 100.315, -31.7515, -17.0396, 1.91 ) }
    dend_36 { pt3dadd( 101.243, -32.2927, -16.7106, 0.44 ) }
    dend_36 { pt3dadd( 101.425, -32.4104, -16.6457, 0.07 ) }
    dend_36 { pt3dadd( 101.738, -32.6324, -16.5449, 0.88 ) }
    dend_36 { pt3dadd( 102.03, -32.8804, -16.4665, 0.88 ) }
    dend_36 { pt3dadd( 102.303, -33.1465, -16.414, 0.88 ) }
    dend_36 { pt3dadd( 102.693, -33.5576, -16.3658, 0.07 ) }
    dend_36 { pt3dadd( 103.179, -34.0802, -16.3437, 0.73 ) }
    dend_36 { pt3dadd( 103.631, -34.5767, -16.3271, 0.07 ) }
    dend_36 { pt3dadd( 103.993, -34.9791, -16.3187, 0.81 ) }
    dend_36 { pt3dadd( 104.26, -35.27, -16.3127, 0.07 ) }
    dend_36 { pt3dadd( 104.73, -35.7788, -16.3042, 1.1 ) }
    dend_36 { pt3dadd( 105.169, -36.2549, -16.3023, 0.07 ) }
    dend_36 { pt3dadd( 105.397, -36.4967, -16.3096, 0.07 ) }
    dend_36 { pt3dadd( 105.696, -36.78, -16.317, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 45/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 32.2383, -4.50327, -14.9369, 1.25 ) }
    dend_35 { pt3dadd( 33.4956, -4.31331, -15.7104, 1.25 ) }
    dend_35 { pt3dadd( 34.5441, -4.2463, -16.2908, 0.59 ) }
    dend_35 { pt3dadd( 35.2884, -4.21968, -16.6652, 0.59 ) }
    dend_35 { pt3dadd( 36.2674, -4.17562, -17.1294, 1.1 ) }
    dend_35 { pt3dadd( 36.8129, -4.1424, -17.379, 1.32 ) }
    dend_35 { pt3dadd( 38.6827, -3.99437, -18.1978, 0.44 ) }
    dend_35 { pt3dadd( 39.965, -3.97309, -18.7243, 0.44 ) }
    dend_35 { pt3dadd( 40.6671, -3.98926, -18.9992, 0.44 ) }
    dend_35 { pt3dadd( 41.783, -4.00104, -19.4228, 1.25 ) }
    dend_35 { pt3dadd( 42.5668, -3.97868, -19.7488, 1.25 ) }
    dend_35 { pt3dadd( 43.2023, -3.93598, -20.0477, 0.88 ) }
    dend_35 { pt3dadd( 44.7906, -3.76988, -20.8724, 0.22 ) }
    dend_35 { pt3dadd( 45.6542, -3.61826, -21.3629, 1.1 ) }
    dend_35 { pt3dadd( 46.6533, -3.3641, -21.9868, 0.73 ) }
    dend_35 { pt3dadd( 48.071, -2.94422, -22.9018, 1.25 ) }
    dend_35 { pt3dadd( 48.7527, -2.73034, -23.3494, 2.13 ) }
    dend_35 { pt3dadd( 49.3629, -2.52594, -23.7488, 2.13 ) }
    dend_35 { pt3dadd( 50.9681, -1.9223, -24.7723, 0.81 ) }
    dend_35 { pt3dadd( 52.5664, -1.42625, -25.8144, 0.29 ) }
    dend_35 { pt3dadd( 53.0082, -1.32, -26.1171, 0.15 ) }
    dend_35 { pt3dadd( 53.6304, -1.20524, -26.5518, 0.15 ) }
    dend_35 { pt3dadd( 54.1056, -1.14638, -26.8874, 0.15 ) }
    dend_35 { pt3dadd( 55.6951, -0.964116, -28.0314, 2.06 ) }
    dend_35 { pt3dadd( 57.6685, -0.743979, -29.4789, 0.66 ) }
    dend_35 { pt3dadd( 59.0444, -0.556356, -30.5163, 0.44 ) }
    dend_35 { pt3dadd( 60.2716, -0.336873, -31.4532, 1.69 ) }
    dend_35 { pt3dadd( 61.9487, -0.0464645, -32.7172, 0.07 ) }
    dend_35 { pt3dadd( 63.0273, 0.100868, -33.5033, 1.18 ) }
    dend_35 { pt3dadd( 63.8512, 0.182853, -34.0748, 1.76 ) }
    dend_35 { pt3dadd( 64.959, 0.294447, -34.8026, 1.76 ) }
    dend_35 { pt3dadd( 66.574, 0.404093, -35.8814, 0.15 ) }
    dend_35 { pt3dadd( 67.8455, 0.484262, -36.8135, 0.15 ) }
    dend_35 { pt3dadd( 68.6285, 0.525482, -37.5167, 0.51 ) }
    dend_35 { pt3dadd( 69.457, 0.580168, -38.3854, 1.4 ) }
    dend_35 { pt3dadd( 70.1539, 0.662893, -39.1668, 1.76 ) }
    dend_35 { pt3dadd( 71.4647, 0.90325, -40.6792, 0.07 ) }
    dend_35 { pt3dadd( 72.8155, 1.22781, -42.2874, 2.2 ) }
    dend_35 { pt3dadd( 74.8923, 1.8052, -44.7116, 0.81 ) }
    dend_35 { pt3dadd( 76.4099, 2.20369, -46.4155, 1.47 ) }
    dend_35 { pt3dadd( 78.1956, 2.59124, -48.2807, 2.35 ) }
    dend_35 { pt3dadd( 80.0602, 2.9174, -49.9969, 0.07 ) }
    dend_35 { pt3dadd( 80.5628, 2.99507, -50.3948, 0.07 ) }
    dend_35 { pt3dadd( 81.6228, 3.13306, -51.1014, 1.69 ) }
    dend_35 { pt3dadd( 83.384, 3.30257, -52.0127, 0.15 ) }
    dend_35 { pt3dadd( 84.8169, 3.37334, -52.674, 0.15 ) }
    dend_35 { pt3dadd( 86.6387, 3.40334, -53.4556, 2.06 ) }
    dend_35 { pt3dadd( 88.1026, 3.39318, -54.0771, 0.95 ) }
    dend_35 { pt3dadd( 89.1574, 3.39343, -54.5437, 0.07 ) }
    dend_35 { pt3dadd( 90.1225, 3.39984, -54.9895, 0.51 ) }
    dend_35 { pt3dadd( 91.5153, 3.41823, -55.6238, 0.07 ) }
    dend_35 { pt3dadd( 92.4485, 3.41671, -56.0595, 0.88 ) }
    dend_35 { pt3dadd( 93.4162, 3.38535, -56.5404, 0.07 ) }
    dend_35 { pt3dadd( 94.9402, 3.29079, -57.2726, 2.2 ) }
    dend_35 { pt3dadd( 96.6008, 3.13156, -58.0833, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 97.7551, 3.01644, -58.6885, 0.81 ) }
    dend_35 { pt3dadd( 98.21, 2.97557, -58.9359, 0.88 ) }
    dend_35 { pt3dadd( 99.3446, 2.91593, -59.7226, 0.07 ) }
    dend_35 { pt3dadd( 100.161, 2.91125, -60.3949, 0.07 ) }
    dend_35 { pt3dadd( 101.558, 3.00642, -61.7777, 1.62 ) }
    dend_35 { pt3dadd( 102.794, 3.21947, -63.2922, 0.07 ) }
    dend_35 { pt3dadd( 103.816, 3.52386, -64.7765, 2.06 ) }
    dend_35 { pt3dadd( 105.469, 4.19393, -67.4151, 1.03 ) }
    dend_35 { pt3dadd( 105.928, 4.42597, -68.2246, 1.03 ) }
    dend_35 { pt3dadd( 106.859, 4.96125, -69.9185, 2.2 ) }
    dend_35 { pt3dadd( 108.441, 5.9876, -72.811, 0.59 ) }
    dend_35 { pt3dadd( 109.073, 6.43856, -73.9512, 0.59 ) }
    dend_35 { pt3dadd( 109.776, 6.9221, -75.1, 1.4 ) }
    dend_35 { pt3dadd( 110.292, 7.2437, -75.7989, 1.4 ) }
    dend_35 { pt3dadd( 111.637, 8.02351, -77.4673, 0.07 ) }
    dend_35 { pt3dadd( 112.501, 8.48459, -78.4271, 1.03 ) }
    dend_35 { pt3dadd( 113.059, 8.75991, -78.9885, 1.47 ) }
    dend_35 { pt3dadd( 115.291, 9.77865, -81.1372, 0.07 ) }
    dend_35 { pt3dadd( 116.972, 10.5427, -82.7735, 1.91 ) }
    dend_35 { pt3dadd( 118.15, 11.0616, -83.8965, 0.59 ) }
    dend_35 { pt3dadd( 119.015, 11.4436, -84.7206, 1.32 ) }
    dend_35 { pt3dadd( 120.583, 12.1184, -86.1189, 0.07 ) }
    dend_35 { pt3dadd( 121.59, 12.5433, -86.9411, 0.95 ) }
    dend_35 { pt3dadd( 122.776, 13.0868, -87.7947, 0.07 ) }
    dend_35 { pt3dadd( 123.499, 13.4296, -88.2595, 0.44 ) }
    dend_35 { pt3dadd( 124.231, 13.7825, -88.679, 0.07 ) }
    dend_35 { pt3dadd( 125.195, 14.2716, -89.293, 1.25 ) }
    dend_35 { pt3dadd( 126.17, 14.8066, -89.9752, 0.07 ) }
    dend_35 { pt3dadd( 127.333, 15.4993, -90.8879, 1.1 ) }
    dend_35 { pt3dadd( 127.738, 15.7426, -91.2153, 1.1 ) }
    dend_35 { pt3dadd( 128.163, 15.9962, -91.5785, 1.4 ) }
    dend_35 { pt3dadd( 130.229, 17.1782, -93.3451, 0.07 ) }
    dend_35 { pt3dadd( 131.002, 17.5974, -94.0202, 1.69 ) }
    dend_35 { pt3dadd( 131.447, 17.8287, -94.3867, 1.69 ) }
    dend_35 { pt3dadd( 133.091, 18.6267, -95.7709, 0.07 ) }
    dend_35 { pt3dadd( 133.425, 18.777, -96.0489, 0.59 ) }
    dend_35 { pt3dadd( 134.097, 19.039, -96.5521, 0.07 ) }
    dend_35 { pt3dadd( 135.17, 19.3161, -97.2266, 1.4 ) }
    dend_35 { pt3dadd( 135.566, 19.3815, -97.4683, 1.4 ) }
    dend_35 { pt3dadd( 137.643, 19.5951, -98.7761, 0.29 ) }
    dend_35 { pt3dadd( 138.277, 19.6132, -99.1814, 0.95 ) }
    dend_35 { pt3dadd( 139.47, 19.5843, -99.9249, 0.07 ) }
    dend_35 { pt3dadd( 140.434, 19.5013, -100.48, 1.25 ) }
    dend_35 { pt3dadd( 140.932, 19.4271, -100.717, 1.25 ) }
    dend_35 { pt3dadd( 142.234, 19.1471, -101.223, 0.07 ) }
    dend_35 { pt3dadd( 142.86, 18.9677, -101.394, 0.07 ) }
    dend_35 { pt3dadd( 143.231, 18.8376, -101.497, 0.07 ) }
    dend_35 { pt3dadd( 144.018, 18.4989, -101.693, 0.07 ) }
    dend_35 { pt3dadd( 144.955, 18.0808, -101.923, 1.32 ) }
    dend_35 { pt3dadd( 145.291, 17.9329, -102.019, 1.32 ) }
    dend_35 { pt3dadd( 146.32, 17.5537, -102.423, 0.07 ) }
    dend_35 { pt3dadd( 146.999, 17.3764, -102.821, 0.07 ) }
    dend_35 { pt3dadd( 147.901, 17.2687, -103.635, 0.07 ) }
    dend_35 { pt3dadd( 148.502, 17.3149, -104.412, 0.07 ) }
    dend_35 { pt3dadd( 149.117, 17.438, -105.398, 1.47 ) }
    dend_35 { pt3dadd( 150.203, 17.7087, -107.168, 1.69 ) }
    dend_35 { pt3dadd( 150.955, 17.925, -108.399, 1.69 ) }
    dend_35 { pt3dadd( 152.215, 18.3202, -110.326, 0.88 ) }
    dend_35 { pt3dadd( 153.201, 18.6379, -111.825, 0.51 ) }
    dend_35 { pt3dadd( 154.176, 18.9034, -113.129, 0.07 ) }
    dend_35 { pt3dadd( 155.283, 19.1786, -114.503, 1.47 ) }
    dend_35 { pt3dadd( 155.81, 19.2951, -115.122, 1.47 ) }
    dend_35 { pt3dadd( 156.768, 19.5222, -116.14, 0.07 ) }
    dend_35 { pt3dadd( 159.284, 20.344, -119.0, 0.95 ) }
    dend_35 { pt3dadd( 160.065, 20.7122, -119.973, 0.73 ) }
    dend_35 { pt3dadd( 160.913, 21.2962, -121.184, 0.07 ) }
    dend_35 { pt3dadd( 161.866, 22.1948, -122.749, 0.07 ) }
    dend_35 { pt3dadd( 162.507, 23.0059, -123.931, 2.35 ) }
    dend_35 { pt3dadd( 163.591, 24.9372, -126.45, 0.22 ) }
    dend_35 { pt3dadd( 163.91, 25.7777, -127.367, 1.47 ) }
    dend_35 { pt3dadd( 164.161, 26.8988, -128.578, 0.15 ) }
    dend_35 { pt3dadd( 164.253, 27.8829, -129.704, 0.15 ) }
    dend_35 { pt3dadd( 164.201, 28.9298, -130.922, 1.32 ) }
    dend_35 { pt3dadd( 163.949, 30.6221, -133.168, 0.07 ) }
    dend_35 { pt3dadd( 163.809, 31.3722, -134.237, 0.15 ) }
    dend_35 { pt3dadd( 163.573, 32.3932, -135.826, 0.95 ) }
    dend_35 { pt3dadd( 163.212, 33.9434, -138.427, 0.15 ) }
    dend_35 { pt3dadd( 163.089, 34.6017, -139.538, 1.4 ) }
    dend_35 { pt3dadd( 162.855, 36.5547, -142.904, 0.81 ) }
    dend_35 { pt3dadd( 162.85, 37.3554, -144.283, 1.18 ) }
    dend_35 { pt3dadd( 162.928, 37.8765, -145.355, 1.25 ) }
    dend_35 { pt3dadd( 163.361, 39.0882, -148.16, 0.81 ) }
    dend_35 { pt3dadd( 163.814, 39.8501, -150.178, 0.51 ) }
    dend_35 { pt3dadd( 164.167, 40.2793, -151.475, 1.1 ) }
    dend_35 { pt3dadd( 164.45, 40.5479, -152.329, 1.1 ) }
    dend_35 { pt3dadd( 166.128, 41.7016, -156.435, 0.81 ) }
    dend_35 { pt3dadd( 166.729, 42.0035, -157.592, 1.03 ) }
    dend_35 { pt3dadd( 167.535, 42.3162, -158.845, 0.44 ) }
    dend_35 { pt3dadd( 168.131, 42.5415, -159.694, 0.29 ) }
    dend_35 { pt3dadd( 169.011, 42.984, -160.841, 0.95 ) }
    dend_35 { pt3dadd( 169.882, 43.474, -161.893, 0.07 ) }
    dend_35 { pt3dadd( 170.592, 43.911, -162.517, 0.51 ) }
    dend_35 { pt3dadd( 171.974, 44.6909, -163.667, 0.07 ) }
    dend_35 { pt3dadd( 172.786, 45.0719, -164.309, 0.59 ) }
    dend_35 { pt3dadd( 173.493, 45.3495, -164.879, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 95/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.6132, -17.0287, -10.8946, 0.81 ) }
    dend_33 { pt3dadd( 11.0238, -18.4432, -10.9563, 0.81 ) }
    dend_33 { pt3dadd( 11.1895, -19.343, -11.0219, 0.37 ) }
    dend_33 { pt3dadd( 11.3014, -20.3243, -11.1168, 1.18 ) }
    dend_33 { pt3dadd( 11.3438, -21.1252, -11.2267, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_33 { pt3dadd( 11.3412, -22.3823, -11.4335, 1.25 ) }
    dend_33 { pt3dadd( 11.2901, -23.5941, -11.6613, 0.59 ) }
    dend_33 { pt3dadd( 11.1663, -24.3554, -11.8381, 0.88 ) }
    dend_33 { pt3dadd( 11.0001, -25.0691, -12.0095, 0.66 ) }
    dend_33 { pt3dadd( 10.7999, -25.8127, -12.1643, 0.88 ) }
    dend_33 { pt3dadd( 10.6245, -26.4019, -12.2609, 0.88 ) }
    dend_33 { pt3dadd( 10.2766, -27.5811, -12.415, 0.29 ) }
    dend_33 { pt3dadd( 9.90638, -28.934, -12.5346, 1.1 ) }
    dend_33 { pt3dadd( 9.6235, -29.9273, -12.5785, 1.32 ) }
    dend_33 { pt3dadd( 9.31307, -30.9581, -12.5841, 1.84 ) }
    dend_33 { pt3dadd( 9.02394, -31.8841, -12.5601, 1.69 ) }
    dend_33 { pt3dadd( 8.81308, -32.4868, -12.5407, 1.62 ) }
    dend_33 { pt3dadd( 8.35708, -33.5938, -12.5109, 0.66 ) }
    dend_33 { pt3dadd( 7.91288, -34.5912, -12.5181, 0.51 ) }
    dend_33 { pt3dadd( 7.63078, -35.1931, -12.5473, 0.51 ) }
    dend_33 { pt3dadd( 7.29692, -35.8746, -12.6229, 0.51 ) }
    dend_33 { pt3dadd( 6.91347, -36.6517, -12.7585, 0.59 ) }
    dend_33 { pt3dadd( 6.46504, -37.5316, -12.9672, 1.47 ) }
    dend_33 { pt3dadd( 6.08152, -38.299, -13.2026, 1.84 ) }
    dend_33 { pt3dadd( 5.6081, -39.2725, -13.5423, 1.84 ) }
    dend_33 { pt3dadd( 5.16015, -40.2109, -13.9013, 1.25 ) }
    dend_33 { pt3dadd( 4.57868, -41.4796, -14.4005, 0.81 ) }
    dend_33 { pt3dadd( 4.24575, -42.2717, -14.7072, 0.81 ) }
    dend_33 { pt3dadd( 3.97482, -43.006, -14.9725, 0.81 ) }
    dend_33 { pt3dadd( 3.57084, -44.2934, -15.3991, 0.73 ) }
    dend_33 { pt3dadd( 3.29887, -45.4065, -15.7186, 1.1 ) }
    dend_33 { pt3dadd( 3.18709, -46.0102, -15.8546, 2.42 ) }
    dend_33 { pt3dadd( 3.0822, -46.765, -15.9904, 2.42 ) }
    dend_33 { pt3dadd( 2.85233, -48.8107, -16.2898, 0.44 ) }
    dend_33 { pt3dadd( 2.78549, -49.4654, -16.3652, 0.29 ) }
    dend_33 { pt3dadd( 2.68424, -50.5113, -16.4692, 0.51 ) }
    dend_33 { pt3dadd( 2.59198, -51.3441, -16.5451, 1.25 ) }
    dend_33 { pt3dadd( 2.53763, -51.8691, -16.5979, 1.32 ) }
    dend_33 { pt3dadd( 2.42576, -53.1083, -16.7301, 0.37 ) }
    dend_33 { pt3dadd( 2.34801, -53.8989, -16.8099, 0.37 ) }
    dend_33 { pt3dadd( 2.19251, -55.4774, -16.9641, 2.28 ) }
    dend_33 { pt3dadd( 2.08704, -56.4809, -17.0754, 2.64 ) }
    dend_33 { pt3dadd( 1.89668, -58.476, -17.2995, 0.51 ) }
    dend_33 { pt3dadd( 1.83417, -59.3264, -17.3943, 0.07 ) }
    dend_33 { pt3dadd( 1.76522, -60.6315, -17.5546, 0.07 ) }
    dend_33 { pt3dadd( 1.72087, -61.8296, -17.72, 1.62 ) }
    dend_33 { pt3dadd( 1.68267, -63.3292, -17.9526, 0.66 ) }
    dend_33 { pt3dadd( 1.65682, -64.3169, -18.1197, 0.29 ) }
    dend_33 { pt3dadd( 1.62082, -65.3033, -18.3083, 0.29 ) }
    dend_33 { pt3dadd( 1.60569, -66.2187, -18.5095, 1.18 ) }
    dend_33 { pt3dadd( 1.61749, -67.4697, -18.8253, 1.4 ) }
    dend_33 { pt3dadd( 1.63705, -68.1441, -19.0228, 1.1 ) }
    dend_33 { pt3dadd( 1.68287, -69.154, -19.3375, 0.73 ) }
    dend_33 { pt3dadd( 1.71062, -70.2653, -19.7109, 1.47 ) }
    dend_33 { pt3dadd( 1.7198, -71.0921, -19.9894, 1.47 ) }
    dend_33 { pt3dadd( 1.71753, -72.2423, -20.3528, 0.95 ) }
    dend_33 { pt3dadd( 1.69663, -73.115, -20.6112, 0.59 ) }
    dend_33 { pt3dadd( 1.67034, -73.6135, -20.7399, 0.37 ) }
    dend_33 { pt3dadd( 1.57241, -74.9347, -21.0383, 1.98 ) }
    dend_33 { pt3dadd( 1.51601, -75.6255, -21.163, 1.98 ) }
    dend_33 { pt3dadd( 1.38379, -77.1003, -21.3702, 0.44 ) }
    dend_33 { pt3dadd( 1.29838, -78.0693, -21.4771, 0.29 ) }
    dend_33 { pt3dadd( 1.20671, -79.0796, -21.5616, 0.29 ) }
    dend_33 { pt3dadd( 1.15666, -79.7079, -21.6259, 0.29 ) }
    dend_33 { pt3dadd( 1.08366, -80.4257, -21.6997, 0.29 ) }
    dend_33 { pt3dadd( 0.923686, -81.7181, -21.8365, 2.2 ) }
    dend_33 { pt3dadd( 0.842338, -82.2083, -21.8859, 2.42 ) }
    dend_33 { pt3dadd( 0.681569, -82.9485, -21.9664, 2.42 ) }
    dend_33 { pt3dadd( 0.429223, -83.8668, -22.0434, 1.62 ) }
    dend_33 { pt3dadd( -0.290378, -85.8682, -22.0934, 0.15 ) }
    dend_33 { pt3dadd( -0.515292, -86.3683, -22.0664, 1.18 ) }
    dend_33 { pt3dadd( -0.921519, -87.149, -21.9647, 0.37 ) }
    dend_33 { pt3dadd( -1.1156, -87.5291, -21.9014, 0.37 ) }
    dend_33 { pt3dadd( -1.55233, -88.4671, -21.7165, 0.59 ) }
    dend_33 { pt3dadd( -1.9644, -89.5364, -21.4903, 0.07 ) }
    dend_33 { pt3dadd( -2.31053, -90.8004, -21.2472, 1.91 ) }
    dend_33 { pt3dadd( -2.43164, -91.5579, -21.1412, 2.2 ) }
    dend_33 { pt3dadd( -2.48833, -92.9699, -21.0321, 0.07 ) }
    dend_33 { pt3dadd( -2.42113, -94.081, -20.9913, 0.07 ) }
    dend_33 { pt3dadd( -2.2774, -94.9692, -21.0062, 1.25 ) }
    dend_33 { pt3dadd( -2.09213, -95.7073, -21.0575, 1.76 ) }
    dend_33 { pt3dadd( -1.63217, -97.1282, -21.2103, 0.15 ) }
    dend_33 { pt3dadd( -1.17225, -98.3226, -21.3563, 0.22 ) }
    dend_33 { pt3dadd( -0.898829, -98.9818, -21.4698, 0.37 ) }
    dend_33 { pt3dadd( -0.575499, -99.7486, -21.6457, 0.37 ) }
    dend_33 { pt3dadd( -0.19286, -100.695, -21.8925, 0.07 ) }
    dend_33 { pt3dadd( 0.100911, -101.485, -22.1164, 0.95 ) }
    dend_33 { pt3dadd( 0.434721, -102.436, -22.4, 1.84 ) }
    dend_33 { pt3dadd( 0.740588, -103.489, -22.7234, 1.54 ) }
    dend_33 { pt3dadd( 1.08073, -104.916, -23.1682, 0.15 ) }
    dend_33 { pt3dadd( 1.19811, -105.442, -23.3283, 0.15 ) }
    dend_33 { pt3dadd( 1.36082, -106.239, -23.547, 0.88 ) }
    dend_33 { pt3dadd( 1.44024, -106.721, -23.6714, 0.88 ) }
    dend_33 { pt3dadd( 1.53137, -107.476, -23.8421, 0.07 ) }
    dend_33 { pt3dadd( 1.57159, -107.89, -23.9198, 0.07 ) }
    dend_33 { pt3dadd( 1.62268, -108.452, -24.0279, 0.66 ) }
    dend_33 { pt3dadd( 1.64048, -108.737, -24.1035, 0.66 ) }
    dend_33 { pt3dadd( 1.65368, -109.452, -24.3199, 0.22 ) }
    dend_33 { pt3dadd( 1.64554, -109.983, -24.4893, 0.44 ) }
    dend_33 { pt3dadd( 1.5964, -111.199, -24.8675, 2.13 ) }
    dend_33 { pt3dadd( 1.52458, -112.273, -25.2089, 1.69 ) }
    dend_33 { pt3dadd( 1.36457, -113.643, -25.6363, 0.07 ) }
    dend_33 { pt3dadd( 1.27795, -114.162, -25.7893, 0.07 ) }
    dend_33 { pt3dadd( 1.12482, -114.93, -25.9922, 0.44 ) }
    dend_33 { pt3dadd( 0.939668, -115.803, -26.2014, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( 0.752236, -116.6, -26.3494, 0.07 ) }
    dend_33 { pt3dadd( 0.379793, -118.033, -26.5538, 1.76 ) }
    dend_33 { pt3dadd( 0.169334, -118.892, -26.6325, 1.25 ) }
    dend_33 { pt3dadd( -0.21635, -120.566, -26.7612, 0.22 ) }
    dend_33 { pt3dadd( -0.369824, -121.243, -26.7989, 0.22 ) }
    dend_33 { pt3dadd( -0.619089, -122.338, -26.8407, 1.62 ) }
    dend_33 { pt3dadd( -0.795709, -123.068, -26.8473, 1.62 ) }
    dend_33 { pt3dadd( -0.887629, -123.437, -26.8538, 1.62 ) }
    dend_33 { pt3dadd( -1.33928, -125.102, -26.9106, 0.29 ) }
    dend_33 { pt3dadd( -1.55489, -125.787, -26.9486, 0.29 ) }
    dend_33 { pt3dadd( -1.86396, -126.674, -27.0214, 1.62 ) }
    dend_33 { pt3dadd( -2.3359, -127.839, -27.1641, 1.03 ) }
    dend_33 { pt3dadd( -2.82543, -128.879, -27.3093, 0.07 ) }
    dend_33 { pt3dadd( -3.13827, -129.452, -27.3941, 0.59 ) }
    dend_33 { pt3dadd( -3.61374, -130.17, -27.5057, 0.07 ) }
    dend_33 { pt3dadd( -3.85761, -130.488, -27.5611, 0.07 ) }
    dend_33 { pt3dadd( -4.46184, -131.196, -27.6865, 1.1 ) }
    dend_33 { pt3dadd( -4.98121, -131.79, -27.7859, 0.07 ) }
    dend_33 { pt3dadd( -5.3467, -132.217, -27.8379, 0.07 ) }
    dend_33 { pt3dadd( -5.74304, -132.74, -27.8983, 1.03 ) }
    dend_33 { pt3dadd( -5.99552, -133.125, -27.9575, 1.32 ) }
    dend_33 { pt3dadd( -6.3189, -133.725, -28.068, 1.32 ) }
    dend_33 { pt3dadd( -6.83429, -134.913, -28.2969, 0.15 ) }
    dend_33 { pt3dadd( -7.0155, -135.387, -28.3926, 0.15 ) }
    dend_33 { pt3dadd( -7.36101, -136.352, -28.5762, 1.18 ) }
    dend_33 { pt3dadd( -7.75251, -137.504, -28.7894, 0.07 ) }
    dend_33 { pt3dadd( -8.0739, -138.467, -28.9592, 1.4 ) }
    dend_33 { pt3dadd( -8.27984, -139.069, -29.0452, 1.54 ) }
    dend_33 { pt3dadd( -8.83088, -140.67, -29.2029, 0.15 ) }
    dend_33 { pt3dadd( -9.18966, -141.719, -29.2695, 0.15 ) }
    dend_33 { pt3dadd( -9.44105, -142.511, -29.2853, 1.69 ) }
    dend_33 { pt3dadd( -9.54627, -142.847, -29.2759, 1.76 ) }
    dend_33 { pt3dadd( -9.95597, -144.135, -29.2375, 0.07 ) }
    dend_33 { pt3dadd( -10.2646, -145.077, -29.2116, 0.07 ) }
    dend_33 { pt3dadd( -10.5564, -145.96, -29.1973, 1.76 ) }
    dend_33 { pt3dadd( -10.8077, -146.675, -29.2195, 1.76 ) }
    dend_33 { pt3dadd( -11.1334, -147.507, -29.2876, 2.13 ) }
    dend_33 { pt3dadd( -11.7048, -148.83, -29.4777, 0.07 ) }
    dend_33 { pt3dadd( -12.0793, -149.613, -29.6308, 0.73 ) }
    dend_33 { pt3dadd( -12.4287, -150.365, -29.7909, 0.73 ) }
    dend_33 { pt3dadd( -12.8966, -151.502, -30.018, 0.07 ) }
    dend_33 { pt3dadd( -13.2262, -152.422, -30.186, 0.07 ) }
    dend_33 { pt3dadd( -13.5468, -153.525, -30.3686, 1.76 ) }
    dend_33 { pt3dadd( -13.819, -154.685, -30.5289, 1.4 ) }
    dend_33 { pt3dadd( -14.1027, -156.193, -30.6975, 0.22 ) }
    dend_33 { pt3dadd( -14.3595, -157.993, -30.8355, 0.22 ) }
    dend_33 { pt3dadd( -14.4692, -159.11, -30.8826, 1.18 ) }
    dend_33 { pt3dadd( -14.4922, -159.458, -30.8907, 1.47 ) }
    dend_33 { pt3dadd( -14.5301, -160.372, -30.9014, 1.18 ) }
    dend_33 { pt3dadd( -14.5702, -161.768, -30.9154, 0.22 ) }
    dend_33 { pt3dadd( -14.6197, -162.536, -30.9145, 0.88 ) }
    dend_33 { pt3dadd( -14.6787, -163.11, -30.9225, 0.07 ) }
    dend_33 { pt3dadd( -14.6998, -163.257, -30.9256, 0.07 ) }
    dend_33 { pt3dadd( -14.772, -163.669, -30.9399, 0.07 ) }
    dend_33 { pt3dadd( -14.9828, -164.788, -30.9879, 1.91 ) }
    dend_33 { pt3dadd( -15.0834, -165.305, -31.0334, 2.06 ) }
    dend_33 { pt3dadd( -15.4018, -166.59, -31.1843, 0.07 ) }
    dend_33 { pt3dadd( -15.5724, -167.16, -31.2624, 0.51 ) }
    dend_33 { pt3dadd( -15.799, -167.859, -31.365, 0.07 ) }
    dend_33 { pt3dadd( -16.1434, -168.84, -31.5086, 0.44 ) }
    dend_33 { pt3dadd( -16.5525, -169.909, -31.6277, 0.07 ) }
    dend_33 { pt3dadd( -16.9194, -170.805, -31.6927, 0.44 ) }
    dend_33 { pt3dadd( -17.4011, -171.908, -31.7304, 1.98 ) }
    dend_33 { pt3dadd( -17.5804, -172.294, -31.7356, 1.98 ) }
    dend_33 { pt3dadd( -18.1041, -173.378, -31.7198, 1.47 ) }
    dend_33 { pt3dadd( -18.5589, -174.297, -31.7031, 0.07 ) }
    dend_33 { pt3dadd( -18.9645, -175.157, -31.6755, 0.07 ) }
    dend_33 { pt3dadd( -19.309, -175.946, -31.6658, 0.22 ) }
    dend_33 { pt3dadd( -19.6637, -176.764, -31.6681, 1.69 ) }
    dend_33 { pt3dadd( -19.8335, -177.158, -31.6803, 1.69 ) }
    dend_33 { pt3dadd( -20.561, -178.94, -31.776, 0.15 ) }
    dend_33 { pt3dadd( -20.6613, -179.206, -31.7945, 0.07 ) }
    dend_33 { pt3dadd( -20.9577, -179.971, -31.8174, 0.59 ) }
    dend_33 { pt3dadd( -21.3573, -180.983, -31.7901, 0.07 ) }
    dend_33 { pt3dadd( -21.8814, -182.249, -31.705, 1.76 ) }
    dend_33 { pt3dadd( -22.4418, -183.507, -31.6109, 0.07 ) }
    dend_33 { pt3dadd( -22.7231, -184.075, -31.5593, 0.07 ) }
    dend_33 { pt3dadd( -23.3543, -185.198, -31.431, 0.07 ) }
    dend_33 { pt3dadd( -23.8953, -186.041, -31.3134, 1.18 ) }
    dend_33 { pt3dadd( -24.3575, -186.661, -31.2212, 2.13 ) }
    dend_33 { pt3dadd( -24.9007, -187.297, -31.122, 1.54 ) }
    dend_33 { pt3dadd( -25.7106, -188.129, -31.0047, 0.07 ) }
    dend_33 { pt3dadd( -26.3554, -188.725, -30.9581, 1.1 ) }
    dend_33 { pt3dadd( -26.9324, -189.228, -30.9589, 1.25 ) }
    dend_33 { pt3dadd( -27.9263, -189.996, -30.9596, 0.07 ) }
    dend_33 { pt3dadd( -28.4254, -190.345, -30.9456, 0.07 ) }
    dend_33 { pt3dadd( -28.7798, -190.58, -30.9258, 0.37 ) }
    dend_33 { pt3dadd( -29.6272, -191.148, -30.8637, 0.07 ) }
    dend_33 { pt3dadd( -30.3261, -191.641, -30.8296, 1.69 ) }
    dend_33 { pt3dadd( -31.4078, -192.443, -30.7999, 0.07 ) }
    dend_33 { pt3dadd( -32.2145, -193.063, -30.7852, 0.07 ) }
    dend_33 { pt3dadd( -33.2305, -193.903, -30.7938, 1.47 ) }
    dend_33 { pt3dadd( -33.9257, -194.538, -30.8284, 1.47 ) }
    dend_33 { pt3dadd( -35.0962, -195.737, -30.9245, 0.15 ) }
    dend_33 { pt3dadd( -35.7943, -196.528, -31.0168, 0.07 ) }
    dend_33 { pt3dadd( -36.5203, -197.421, -31.1388, 2.13 ) }
    dend_33 { pt3dadd( -37.156, -198.238, -31.2512, 1.18 ) }
    dend_33 { pt3dadd( -37.9677, -199.25, -31.4063, 0.22 ) }
    dend_33 { pt3dadd( -38.4649, -199.846, -31.4945, 0.22 ) }
    dend_33 { pt3dadd( -39.4974, -201.075, -31.6169, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( -40.2622, -201.971, -31.7043, 1.4 ) }
    dend_33 { pt3dadd( -40.5895, -202.351, -31.7471, 1.25 ) }
    dend_33 { pt3dadd( -41.644, -203.562, -31.9144, 0.15 ) }
    dend_33 { pt3dadd( -42.0443, -204.022, -31.9887, 0.51 ) }
    dend_33 { pt3dadd( -42.6305, -204.706, -32.1352, 0.07 ) }
    dend_33 { pt3dadd( -43.1089, -205.314, -32.3, 0.07 ) }
    dend_33 { pt3dadd( -43.6422, -206.071, -32.5204, 1.54 ) }
    dend_33 { pt3dadd( -44.4008, -207.217, -32.8745, 0.07 ) }
    dend_33 { pt3dadd( -44.7201, -207.728, -33.0292, 0.51 ) }
    dend_33 { pt3dadd( -45.1669, -208.471, -33.2511, 0.07 ) }
    dend_33 { pt3dadd( -45.6799, -209.307, -33.4803, 1.47 ) }
    dend_33 { pt3dadd( -45.9553, -209.751, -33.5849, 1.54 ) }
    dend_33 { pt3dadd( -46.6667, -210.864, -33.8316, 0.07 ) }
    dend_33 { pt3dadd( -47.1208, -211.57, -33.9553, 0.07 ) }
    dend_33 { pt3dadd( -47.4345, -212.056, -34.0365, 1.47 ) }
    dend_33 { pt3dadd( -48.0422, -213.002, -34.1705, 1.62 ) }
    dend_33 { pt3dadd( -48.8146, -214.16, -34.3043, 0.15 ) }
    dend_33 { pt3dadd( -49.2412, -214.78, -34.3605, 0.15 ) }
    dend_33 { pt3dadd( -50.0021, -215.874, -34.4321, 0.59 ) }
    dend_33 { pt3dadd( -50.4836, -216.557, -34.4837, 0.07 ) }
    dend_33 { pt3dadd( -50.9861, -217.273, -34.5248, 0.07 ) }
    dend_33 { pt3dadd( -51.6807, -218.336, -34.552, 2.13 ) }
    dend_33 { pt3dadd( -52.3578, -219.443, -34.5469, 0.15 ) }
    dend_33 { pt3dadd( -52.8834, -220.394, -34.5298, 1.1 ) }
    dend_33 { pt3dadd( -53.2956, -221.267, -34.5145, 1.69 ) }
    dend_33 { pt3dadd( -53.6996, -222.379, -34.4879, 0.07 ) }
    dend_33 { pt3dadd( -53.8457, -223.061, -34.4592, 0.44 ) }
    dend_33 { pt3dadd( -53.8563, -223.785, -34.4163, 0.07 ) }
    dend_33 { pt3dadd( -53.7818, -224.349, -34.3733, 0.07 ) }
    dend_33 { pt3dadd( -53.5279, -225.455, -34.2709, 1.25 ) }
    dend_33 { pt3dadd( -53.3886, -225.94, -34.2242, 1.25 ) }
    dend_33 { pt3dadd( -52.9796, -227.288, -34.0928, 0.07 ) }
    dend_33 { pt3dadd( -52.6078, -228.612, -33.9505, 0.07 ) }
    dend_33 { pt3dadd( -52.5142, -228.973, -33.9019, 0.81 ) }
    dend_33 { pt3dadd( -52.3835, -229.576, -33.7877, 1.1 ) }
    dend_33 { pt3dadd( -52.2604, -230.314, -33.5995, 1.4 ) }
    dend_33 { pt3dadd( -52.1031, -231.889, -33.1597, 0.15 ) }
    dend_33 { pt3dadd( -52.0575, -232.831, -32.8844, 0.15 ) }
    dend_33 { pt3dadd( -52.0656, -233.919, -32.4734, 1.18 ) }
    dend_33 { pt3dadd( -52.1172, -235.191, -31.9277, 0.15 ) }
    dend_33 { pt3dadd( -52.198, -236.164, -31.4686, 1.62 ) }
    dend_33 { pt3dadd( -52.2979, -236.973, -31.0617, 1.98 ) }
    dend_33 { pt3dadd( -52.3586, -237.284, -30.9001, 1.98 ) }
    dend_33 { pt3dadd( -52.8378, -239.084, -29.944, 0.15 ) }
    dend_33 { pt3dadd( -53.035, -239.671, -29.6408, 0.15 ) }
    dend_33 { pt3dadd( -53.3247, -240.42, -29.2642, 0.95 ) }
    dend_33 { pt3dadd( -53.5455, -240.936, -28.9735, 0.95 ) }
    dend_33 { pt3dadd( -54.1011, -242.17, -28.2297, 0.07 ) }
    dend_33 { pt3dadd( -54.6219, -243.253, -27.584, 1.54 ) }
    dend_33 { pt3dadd( -54.8156, -243.623, -27.3645, 1.54 ) }
    dend_33 { pt3dadd( -55.4778, -244.777, -26.6341, 0.07 ) }
    dend_33 { pt3dadd( -56.2179, -245.959, -25.8734, 1.25 ) }
    dend_33 { pt3dadd( -56.5338, -246.426, -25.5834, 1.25 ) }
    dend_33 { pt3dadd( -57.0982, -247.231, -25.1624, 0.73 ) }
    dend_33 { pt3dadd( -57.5462, -247.875, -24.9082, 0.07 ) }
    dend_33 { pt3dadd( -57.9689, -248.493, -24.7242, 0.07 ) }
    dend_33 { pt3dadd( -58.552, -249.31, -24.5677, 0.15 ) }
    dend_33 { pt3dadd( -59.278, -250.326, -24.4623, 1.84 ) }
    dend_33 { pt3dadd( -60.1599, -251.578, -24.362, 0.15 ) }
    dend_33 { pt3dadd( -60.8468, -252.589, -24.2507, 0.15 ) }
    dend_33 { pt3dadd( -61.1389, -253.041, -24.194, 1.76 ) }
    dend_33 { pt3dadd( -61.5141, -253.649, -24.1025, 1.54 ) }
    dend_33 { pt3dadd( -62.3446, -254.983, -23.8664, 0.22 ) }
    dend_33 { pt3dadd( -63.0382, -256.069, -23.6384, 0.22 ) }
    dend_33 { pt3dadd( -63.7658, -257.235, -23.3457, 1.25 ) }
    dend_33 { pt3dadd( -63.9789, -257.566, -23.2556, 1.32 ) }
    dend_33 { pt3dadd( -64.309, -258.055, -23.1258, 1.1 ) }
    dend_33 { pt3dadd( -64.8431, -258.83, -22.9309, 0.07 ) }
    dend_33 { pt3dadd( -65.2491, -259.395, -22.7951, 0.07 ) }
    dend_33 { pt3dadd( -65.9115, -260.326, -22.6146, 0.07 ) }
    dend_33 { pt3dadd( -66.3315, -260.917, -22.5178, 1.1 ) }
    dend_33 { pt3dadd( -66.9538, -261.803, -22.3558, 0.07 ) }
    dend_33 { pt3dadd( -67.3626, -262.39, -22.2316, 1.62 ) }
    dend_33 { pt3dadd( -68.1925, -263.594, -21.9521, 0.15 ) }
    dend_33 { pt3dadd( -68.7129, -264.364, -21.7648, 0.15 ) }
    dend_33 { pt3dadd( -69.2341, -265.131, -21.5665, 1.91 ) }
    dend_33 { pt3dadd( -69.5793, -265.682, -21.4209, 1.91 ) }
    dend_33 { pt3dadd( -70.1181, -266.611, -21.1706, 0.07 ) }
    dend_33 { pt3dadd( -70.2749, -266.911, -21.0895, 0.37 ) }
    dend_33 { pt3dadd( -70.4166, -267.255, -21.0057, 0.07 ) }
    dend_33 { pt3dadd( -70.6366, -267.943, -20.8271, 0.07 ) }
    dend_33 { pt3dadd( -70.7915, -268.549, -20.6708, 0.07 ) }
    dend_33 { pt3dadd( -70.9179, -269.013, -20.5503, 1.62 ) }
    dend_33 { pt3dadd( -71.3419, -270.563, -20.1708, 0.15 ) }
    dend_33 { pt3dadd( -71.621, -271.522, -19.9478, 0.07 ) }
    dend_33 { pt3dadd( -71.9745, -272.642, -19.6987, 1.47 ) }
    dend_33 { pt3dadd( -72.1994, -273.283, -19.5674, 1.03 ) }
    dend_33 { pt3dadd( -72.6474, -274.407, -19.3516, 0.15 ) }
    dend_33 { pt3dadd( -73.0477, -275.317, -19.1977, 0.73 ) }
    dend_33 { pt3dadd( -73.5199, -276.259, -19.069, 0.07 ) }
    dend_33 { pt3dadd( -73.762, -276.713, -19.0135, 0.29 ) }
    dend_33 { pt3dadd( -74.2691, -277.752, -18.9155, 0.07 ) }
    dend_33 { pt3dadd( -74.5369, -278.367, -18.8457, 1.03 ) }
    dend_33 { pt3dadd( -74.7315, -278.894, -18.7768, 1.03 ) }
    dend_33 { pt3dadd( -75.0842, -279.772, -18.6699, 0.07 ) }
    dend_33 { pt3dadd( -75.4848, -280.712, -18.5419, 0.07 ) }
    dend_33 { pt3dadd( -75.9169, -281.658, -18.3779, 0.07 ) }
    dend_33 { pt3dadd( -76.125, -282.041, -18.2994, 1.47 ) }
    dend_33 { pt3dadd( -76.3481, -282.386, -18.2024, 1.47 ) }
    dend_33 { pt3dadd( -77.4209, -283.695, -17.6976, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_33 { pt3dadd( -78.1086, -284.398, -17.3559, 0.95 ) }
    dend_33 { pt3dadd( -78.7738, -284.97, -17.0242, 0.07 ) }
    dend_33 { pt3dadd( -79.7718, -285.72, -16.5468, 0.07 ) }
    dend_33 { pt3dadd( -80.7375, -286.38, -16.1031, 2.06 ) }
    dend_33 { pt3dadd( -82.2585, -287.302, -15.4354, 0.15 ) }
    dend_33 { pt3dadd( -83.3224, -287.865, -15.003, 0.07 ) }
    dend_33 { pt3dadd( -84.2729, -288.327, -14.6798, 1.25 ) }
    dend_33 { pt3dadd( -85.7866, -289.023, -14.2489, 0.15 ) }
    dend_33 { pt3dadd( -86.6377, -289.414, -14.0391, 0.15 ) }
    dend_33 { pt3dadd( -87.6446, -289.902, -13.8471, 0.29 ) }
    dend_33 { pt3dadd( -88.4834, -290.357, -13.7047, 0.44 ) }
    dend_33 { pt3dadd( -89.6114, -291.06, -13.5031, 2.06 ) }
    dend_33 { pt3dadd( -90.1367, -291.464, -13.3893, 1.76 ) }
    dend_33 { pt3dadd( -91.2, -292.478, -13.1038, 0.07 ) }
    dend_33 { pt3dadd( -91.8821, -293.28, -12.8786, 0.51 ) }
    dend_33 { pt3dadd( -92.3805, -294.005, -12.6704, 0.07 ) }
    dend_33 { pt3dadd( -92.8739, -294.861, -12.4153, 0.07 ) }
    dend_33 { pt3dadd( -93.2854, -295.711, -12.1369, 1.03 ) }
    dend_33 { pt3dadd( -93.4724, -296.156, -11.9763, 0.66 ) }
    dend_33 { pt3dadd( -93.7367, -296.85, -11.6859, 0.07 ) }
    dend_33 { pt3dadd( -93.8452, -297.15, -11.5272, 0.07 ) }
    dend_33 { pt3dadd( -93.9781, -297.542, -11.2987, 0.51 ) }
    dend_33 { pt3dadd( -94.2397, -298.347, -10.8151, 0.07 ) }
    dend_33 { pt3dadd( -94.5104, -299.113, -10.3525, 0.88 ) }
    dend_33 { pt3dadd( -94.9492, -300.195, -9.66707, 1.69 ) }
    dend_33 { pt3dadd( -95.5163, -301.407, -8.87391, 0.07 ) }
    dend_33 { pt3dadd( -95.7299, -301.768, -8.62057, 0.07 ) }
    dend_33 { pt3dadd( -96.0612, -302.247, -8.28005, 0.07 ) }
    dend_33 { pt3dadd( -96.6303, -302.929, -7.78454, 0.81 ) }
    dend_33 { pt3dadd( -97.0973, -303.42, -7.42152, 1.4 ) }
    dend_33 { pt3dadd( -97.4431, -303.731, -7.1914, 1.25 ) }
    dend_33 { pt3dadd( -98.4491, -304.616, -6.55918, 0.22 ) }
    dend_33 { pt3dadd( -98.8445, -305.012, -6.26047, 0.22 ) }
    dend_33 { pt3dadd( -99.2254, -305.493, -5.88202, 0.95 ) }
    dend_33 { pt3dadd( -99.5165, -305.97, -5.51379, 0.07 ) }
    dend_33 { pt3dadd( -99.6964, -306.295, -5.25697, 0.37 ) }
    dend_33 { pt3dadd( -100.096, -307.011, -4.66369, 0.07 ) }
    dend_33 { pt3dadd( -100.487, -307.715, -4.05496, 0.73 ) }
    dend_33 { pt3dadd( -100.875, -308.388, -3.38861, 0.07 ) }
    dend_33 { pt3dadd( -101.219, -308.988, -2.79837, 0.66 ) }
    dend_33 { pt3dadd( -101.594, -309.575, -2.21913, 0.22 ) }
    dend_33 { pt3dadd( -101.876, -309.991, -1.82898, 1.1 ) }
    dend_33 { pt3dadd( -102.357, -310.654, -1.25148, 0.07 ) }
    dend_33 { pt3dadd( -102.811, -311.231, -0.793421, 0.07 ) }
    dend_33 { pt3dadd( -103.613, -312.257, -0.0635269, 1.62 ) }
    dend_33 { pt3dadd( -104.282, -313.158, 0.505697, 0.07 ) }
    dend_33 { pt3dadd( -104.526, -313.517, 0.694096, 0.07 ) }
    dend_33 { pt3dadd( -104.825, -313.978, 0.925407, 0.59 ) }
    dend_33 { pt3dadd( -105.345, -314.749, 1.26, 0.07 ) }
    dend_33 { pt3dadd( -105.521, -315.02, 1.38282, 0.07 ) }
    dend_33 { pt3dadd( -105.759, -315.419, 1.58188, 0.07 ) }
    dend_33 { pt3dadd( -106.037, -315.974, 1.85464, 0.73 ) }
    dend_33 { pt3dadd( -106.437, -316.931, 2.32202, 0.07 ) }
    dend_33 { pt3dadd( -106.744, -317.825, 2.79931, 2.35 ) }
    dend_33 { pt3dadd( -107.211, -319.374, 3.8, 0.07 ) }
    dend_33 { pt3dadd( -107.305, -319.634, 4.03421, 0.07 ) }
    dend_33 { pt3dadd( -107.497, -320.068, 4.57424, 0.44 ) }
    dend_33 { pt3dadd( -107.762, -320.543, 5.31932, 0.07 ) }
    dend_33 { pt3dadd( -108.329, -321.254, 6.83169, 0.66 ) }
    dend_33 { pt3dadd( -108.81, -321.57, 8.05763, 0.66 ) }
    dend_33 { pt3dadd( -109.723, -321.775, 9.97273, 0.07 ) }
    dend_33 { pt3dadd( -110.153, -321.794, 10.7181, 0.07 ) }
    dend_33 { pt3dadd( -110.752, -321.728, 11.5991, 0.07 ) }
    dend_33 { pt3dadd( -111.192, -321.638, 12.1482, 0.37 ) }
    dend_33 { pt3dadd( -112.755, -321.256, 13.8353, 0.07 ) }
    dend_33 { pt3dadd( -113.288, -321.145, 14.3617, 0.07 ) }
    dend_33 { pt3dadd( -113.908, -321.033, 14.9432, 0.95 ) }
    dend_33 { pt3dadd( -115.251, -320.792, 16.2285, 0.07 ) }
    dend_33 { pt3dadd( -116.022, -320.654, 16.9896, 0.81 ) }
    dend_33 { pt3dadd( -116.796, -320.499, 17.7305, 0.37 ) }
    dend_33 { pt3dadd( -117.208, -320.374, 18.0988, 0.07 ) }
    dend_33 { pt3dadd( -117.45, -320.271, 18.3451, 0.29 ) }
    dend_33 { pt3dadd( -117.94, -319.964, 18.8668, 0.07 ) }
    dend_33 { pt3dadd( -118.197, -319.743, 19.1084, 0.88 ) }
    dend_33 { pt3dadd( -118.396, -319.511, 19.2926, 0.88 ) }
    dend_33 { pt3dadd( -119.036, -318.756, 19.7217, 0.07 ) }
    dend_33 { pt3dadd( -119.317, -318.474, 19.84, 0.07 ) }
    dend_33 { pt3dadd( -120.031, -317.994, 19.9358, 0.15 ) }
    dend_33 { pt3dadd( -120.293, -317.892, 19.919, 0.44 ) }
    dend_33 { pt3dadd( -120.841, -317.797, 19.8247, 0.07 ) }
    dend_33 { pt3dadd( -122.023, -317.714, 19.5839, 0.07 ) }
    dend_33 { pt3dadd( -122.773, -317.719, 19.4043, 0.81 ) }
    dend_33 { pt3dadd( -124.075, -317.778, 19.068, 0.07 ) }
    dend_33 { pt3dadd( -124.511, -317.818, 18.9491, 0.29 ) }
    dend_33 { pt3dadd( -125.352, -317.907, 18.7094, 0.07 ) }
    dend_33 { pt3dadd( -126.754, -318.093, 18.2918, 0.07 ) }
    dend_33 { pt3dadd( -127.161, -318.15, 18.1862, 0.73 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 10.6132, -17.0287, -10.8946, 0.44 ) }
    dend_32 { pt3dadd( 8.81582, -17.1579, -10.35, 0.44 ) }
    dend_32 { pt3dadd( 7.55899, -17.3104, -10.0969, 0.44 ) }
    dend_32 { pt3dadd( 7.16575, -17.3873, -10.0421, 1.1 ) }
    dend_32 { pt3dadd( 6.02082, -17.6873, -9.97643, 1.1 ) }
    dend_32 { pt3dadd( 5.02503, -18.0065, -9.99549, 0.15 ) }
    dend_32 { pt3dadd( 4.14347, -18.3199, -10.0467, 0.88 ) }
    dend_32 { pt3dadd( 3.75005, -18.4982, -10.1228, 0.95 ) }
    dend_32 { pt3dadd( 3.06075, -18.8337, -10.3041, 0.59 ) }
    dend_32 { pt3dadd( 1.84162, -19.4387, -10.7041, 0.22 ) }
    dend_32 { pt3dadd( 0.920334, -19.8777, -11.0683, 0.81 ) }
    dend_32 { pt3dadd( 0.606891, -19.9963, -11.1948, 0.88 ) }
    dend_32 { pt3dadd( -0.40215, -20.2879, -11.6582, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_32 { pt3dadd( -1.16211, -20.4475, -12.0719, 0.15 ) }
    dend_32 { pt3dadd( -2.52691, -20.6608, -12.8729, 1.03 ) }
    dend_32 { pt3dadd( -3.25203, -20.7643, -13.3412, 1.32 ) }
    dend_32 { pt3dadd( -4.27708, -20.8979, -14.0613, 1.32 ) }
    dend_32 { pt3dadd( -5.74292, -21.0442, -15.125, 0.07 ) }
    dend_32 { pt3dadd( -7.23474, -21.1623, -16.2172, 0.88 ) }
    dend_32 { pt3dadd( -7.89226, -21.2163, -16.6755, 0.88 ) }
    dend_32 { pt3dadd( -9.12548, -21.3379, -17.4714, 0.37 ) }
    dend_32 { pt3dadd( -10.1009, -21.4451, -18.0855, 0.37 ) }
    dend_32 { pt3dadd( -11.0546, -21.55, -18.6732, 0.37 ) }
    dend_32 { pt3dadd( -11.8778, -21.6, -19.1027, 1.18 ) }
    dend_32 { pt3dadd( -12.5127, -21.6331, -19.4184, 1.4 ) }
    dend_32 { pt3dadd( -12.9512, -21.6605, -19.6381, 1.32 ) }
    dend_32 { pt3dadd( -14.1857, -21.7765, -20.2863, 0.22 ) }
    dend_32 { pt3dadd( -14.7543, -21.8691, -20.6033, 0.22 ) }
    dend_32 { pt3dadd( -15.7965, -22.1022, -21.2197, 1.18 ) }
    dend_32 { pt3dadd( -17.1744, -22.4716, -22.1026, 0.07 ) }
    dend_32 { pt3dadd( -17.9973, -22.7124, -22.6323, 0.66 ) }
    dend_32 { pt3dadd( -19.3231, -23.1275, -23.461, 0.07 ) }
    dend_32 { pt3dadd( -20.4695, -23.5306, -24.133, 1.76 ) }
    dend_32 { pt3dadd( -21.0939, -23.7633, -24.4717, 1.54 ) }
    dend_32 { pt3dadd( -22.9315, -24.4741, -25.3766, 0.07 ) }
    dend_32 { pt3dadd( -23.8929, -24.8169, -25.7739, 0.95 ) }
    dend_32 { pt3dadd( -24.7625, -25.0901, -26.0886, 0.95 ) }
    dend_32 { pt3dadd( -25.9274, -25.4041, -26.4611, 0.07 ) }
    dend_32 { pt3dadd( -27.2555, -25.723, -26.882, 0.07 ) }
    dend_32 { pt3dadd( -28.2769, -25.9573, -27.2104, 0.07 ) }
    dend_32 { pt3dadd( -29.4478, -26.2066, -27.5663, 1.69 ) }
    dend_32 { pt3dadd( -31.1918, -26.5968, -28.1917, 0.07 ) }
    dend_32 { pt3dadd( -32.5132, -26.9151, -28.7165, 0.07 ) }
    dend_32 { pt3dadd( -33.9215, -27.2624, -29.3183, 1.84 ) }
    dend_32 { pt3dadd( -34.8493, -27.4897, -29.755, 1.4 ) }
    dend_32 { pt3dadd( -35.8026, -27.7354, -30.2374, 0.59 ) }
    dend_32 { pt3dadd( -37.0924, -28.1127, -31.0147, 0.07 ) }
    dend_32 { pt3dadd( -37.5944, -28.2674, -31.3477, 0.37 ) }
    dend_32 { pt3dadd( -38.3089, -28.484, -31.8398, 0.07 ) }
    dend_32 { pt3dadd( -39.464, -28.7756, -32.572, 1.32 ) }
    dend_32 { pt3dadd( -39.9187, -28.8777, -32.8219, 1.32 ) }
    dend_32 { pt3dadd( -42.3851, -29.3878, -34.0095, 0.07 ) }
    dend_32 { pt3dadd( -43.3454, -29.5771, -34.4059, 1.18 ) }
    dend_32 { pt3dadd( -43.7176, -29.6521, -34.5485, 1.18 ) }
    dend_32 { pt3dadd( -45.5665, -30.1107, -35.2326, 0.07 ) }
    dend_32 { pt3dadd( -46.8055, -30.4697, -35.6459, 0.88 ) }
    dend_32 { pt3dadd( -48.083, -30.8429, -36.0557, 0.07 ) }
    dend_32 { pt3dadd( -49.5144, -31.2662, -36.4774, 1.47 ) }
    dend_32 { pt3dadd( -50.0814, -31.4436, -36.6606, 1.98 ) }
    dend_32 { pt3dadd( -52.1137, -32.1422, -37.447, 0.15 ) }
    dend_32 { pt3dadd( -52.8426, -32.4169, -37.7816, 0.37 ) }
    dend_32 { pt3dadd( -53.8735, -32.8015, -38.2974, 0.07 ) }
    dend_32 { pt3dadd( -54.7136, -33.1143, -38.7667, 0.81 ) }
    dend_32 { pt3dadd( -55.1719, -33.2806, -39.0457, 1.25 ) }
    dend_32 { pt3dadd( -56.5065, -33.7239, -39.898, 0.15 ) }
    dend_32 { pt3dadd( -57.859, -34.1183, -40.8461, 0.15 ) }
    dend_32 { pt3dadd( -58.6394, -34.3547, -41.4321, 0.88 ) }
    dend_32 { pt3dadd( -59.8972, -34.8139, -42.496, 0.07 ) }
    dend_32 { pt3dadd( -60.5337, -35.0722, -43.0738, 1.25 ) }
    dend_32 { pt3dadd( -61.0235, -35.2801, -43.5429, 1.25 ) }
    dend_32 { pt3dadd( -62.4598, -35.9142, -45.0414, 0.07 ) }
    dend_32 { pt3dadd( -62.9291, -36.1285, -45.5558, 0.73 ) }
    dend_32 { pt3dadd( -64.3318, -36.7992, -47.0636, 0.07 ) }
    dend_32 { pt3dadd( -64.8978, -37.0704, -47.6498, 0.07 ) }
    dend_32 { pt3dadd( -65.8256, -37.5104, -48.5854, 1.32 ) }
    dend_32 { pt3dadd( -67.5365, -38.2846, -50.2352, 0.29 ) }
    dend_32 { pt3dadd( -68.0582, -38.4744, -50.688, 0.07 ) }
    dend_32 { pt3dadd( -68.6169, -38.6236, -51.1132, 0.59 ) }
    dend_32 { pt3dadd( -69.5939, -38.803, -51.7183, 0.07 ) }
    dend_32 { pt3dadd( -70.0272, -38.8689, -51.9569, 0.07 ) }
    dend_32 { pt3dadd( -71.0271, -39.0389, -52.4141, 1.18 ) }
    dend_32 { pt3dadd( -72.4448, -39.2925, -53.0129, 0.15 ) }
    dend_32 { pt3dadd( -73.7337, -39.5399, -53.5552, 0.15 ) }
    dend_32 { pt3dadd( -74.6392, -39.7151, -53.9151, 0.66 ) }
    dend_32 { pt3dadd( -75.7854, -39.9551, -54.3452, 0.07 ) }
    dend_32 { pt3dadd( -77.6254, -40.3614, -54.9854, 1.62 ) }
    dend_32 { pt3dadd( -80.1056, -40.9112, -55.7657, 0.07 ) }
    dend_32 { pt3dadd( -81.4104, -41.1836, -56.1482, 0.07 ) }
    dend_32 { pt3dadd( -82.6217, -41.3851, -56.5255, 0.07 ) }
    dend_32 { pt3dadd( -83.6718, -41.5035, -56.855, 0.07 ) }
    dend_32 { pt3dadd( -85.3826, -41.575, -57.381, 1.47 ) }
    dend_32 { pt3dadd( -86.0987, -41.558, -57.6017, 1.47 ) }
    dend_32 { pt3dadd( -87.5428, -41.4802, -58.204, 0.07 ) }
    dend_32 { pt3dadd( -88.8985, -41.4149, -58.9589, 0.07 ) }
    dend_32 { pt3dadd( -90.2345, -41.3839, -59.9073, 0.07 ) }
    dend_32 { pt3dadd( -91.5046, -41.4008, -61.01, 0.07 ) }
    dend_32 { pt3dadd( -92.3667, -41.4606, -61.8669, 1.1 ) }
    dend_32 { pt3dadd( -94.5865, -41.7397, -64.1827, 0.44 ) }
    dend_32 { pt3dadd( -95.4297, -41.8907, -65.0938, 1.32 ) }
    dend_32 { pt3dadd( -96.8218, -42.2094, -66.5848, 1.32 ) }
    dend_32 { pt3dadd( -98.4681, -42.6362, -68.2895, 0.22 ) }
    dend_32 { pt3dadd( -99.4318, -42.8902, -69.2039, 0.22 ) }
    dend_32 { pt3dadd( -100.308, -43.1164, -69.9298, 0.88 ) }
    dend_32 { pt3dadd( -101.606, -43.4553, -70.8411, 0.07 ) }
    dend_32 { pt3dadd( -102.847, -43.8017, -71.6522, 1.25 ) }
    dend_32 { pt3dadd( -104.36, -44.2797, -72.5762, 0.07 ) }
    dend_32 { pt3dadd( -105.022, -44.5011, -72.9555, 0.66 ) }
    dend_32 { pt3dadd( -106.162, -44.8975, -73.594, 0.07 ) }
    dend_32 { pt3dadd( -107.261, -45.3041, -74.2092, 0.07 ) }
    dend_32 { pt3dadd( -108.282, -45.6975, -74.7669, 1.47 ) }
    dend_32 { pt3dadd( -110.164, -46.4472, -75.8026, 0.07 ) }
    dend_32 { pt3dadd( -110.743, -46.6845, -76.1283, 0.07 ) }
    dend_32 { pt3dadd( -111.558, -47.0116, -76.5517, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_32 { pt3dadd( -112.224, -47.2547, -76.8617, 0.07 ) }
    dend_32 { pt3dadd( -112.483, -47.3374, -76.9778, 0.07 ) }
    dend_32 { pt3dadd( -113.318, -47.5714, -77.3612, 1.03 ) }
    dend_32 { pt3dadd( -114.416, -47.8731, -77.8445, 0.07 ) }
    dend_32 { pt3dadd( -115.28, -48.1261, -78.2403, 0.07 ) }
    dend_32 { pt3dadd( -116.185, -48.3982, -78.607, 0.07 ) }
    dend_32 { pt3dadd( -117.208, -48.7108, -78.9516, 0.07 ) }
    dend_32 { pt3dadd( -118.145, -48.9983, -79.2202, 0.73 ) }
    dend_32 { pt3dadd( -118.742, -49.1884, -79.3711, 0.88 ) }
    dend_32 { pt3dadd( -119.24, -49.3586, -79.4781, 0.88 ) }
    dend_32 { pt3dadd( -120.894, -49.9772, -79.7724, 0.07 ) }
    dend_32 { pt3dadd( -121.45, -50.193, -79.85, 0.07 ) }
    dend_32 { pt3dadd( -121.997, -50.4076, -79.9181, 0.44 ) }
    dend_32 { pt3dadd( -123.114, -50.8115, -80.1174, 0.07 ) }
    dend_32 { pt3dadd( -123.737, -50.9925, -80.2505, 0.07 ) }
    dend_32 { pt3dadd( -124.483, -51.175, -80.4897, 1.25 ) }
    dend_32 { pt3dadd( -125.611, -51.448, -80.9698, 0.07 ) }
    dend_32 { pt3dadd( -126.343, -51.6485, -81.3493, 0.07 ) }
    dend_32 { pt3dadd( -127.204, -51.8969, -81.8286, 0.95 ) }
    dend_32 { pt3dadd( -127.91, -52.1086, -82.2561, 0.95 ) }
    dend_32 { pt3dadd( -129.261, -52.5494, -83.1276, 0.15 ) }
    dend_32 { pt3dadd( -129.931, -52.8051, -83.5604, 0.81 ) }
    dend_32 { pt3dadd( -131.405, -53.4628, -84.4723, 0.07 ) }
    dend_32 { pt3dadd( -132.279, -53.9215, -84.9732, 0.44 ) }
    dend_32 { pt3dadd( -133.361, -54.5733, -85.5225, 0.07 ) }
    dend_32 { pt3dadd( -133.874, -54.9159, -85.7547, 0.07 ) }
    dend_32 { pt3dadd( -134.898, -55.6565, -86.1563, 1.4 ) }
    dend_32 { pt3dadd( -135.939, -56.4951, -86.5106, 0.07 ) }
    dend_32 { pt3dadd( -136.63, -57.0928, -86.681, 0.07 ) }
    dend_32 { pt3dadd( -136.934, -57.3679, -86.7446, 0.44 ) }
    dend_32 { pt3dadd( -137.895, -58.2543, -86.896, 0.07 ) }
    dend_32 { pt3dadd( -139.051, -59.3331, -87.0726, 1.47 ) }
    dend_32 { pt3dadd( -140.311, -60.5234, -87.2506, 0.37 ) }
    dend_32 { pt3dadd( -141.761, -61.925, -87.3935, 0.07 ) }
    dend_32 { pt3dadd( -141.967, -62.131, -87.4246, 0.07 ) }
    dend_32 { pt3dadd( -142.676, -62.877, -87.5578, 0.59 ) }
    dend_32 { pt3dadd( -143.386, -63.6648, -87.709, 0.07 ) }
    dend_32 { pt3dadd( -143.893, -64.2538, -87.8335, 0.07 ) }
    dend_32 { pt3dadd( -144.744, -65.3278, -88.1093, 1.18 ) }
    dend_32 { pt3dadd( -145.992, -67.0774, -88.5646, 0.07 ) }
    dend_32 { pt3dadd( -146.818, -68.2528, -88.8244, 0.07 ) }
    dend_32 { pt3dadd( -147.143, -68.7139, -88.9114, 0.81 ) }
    dend_32 { pt3dadd( -147.829, -69.6749, -89.0519, 0.07 ) }
    dend_32 { pt3dadd( -148.39, -70.4412, -89.1689, 0.07 ) }
    dend_32 { pt3dadd( -149.026, -71.3108, -89.2919, 0.88 ) }
    dend_32 { pt3dadd( -149.71, -72.2576, -89.3621, 0.07 ) }
    dend_32 { pt3dadd( -149.978, -72.6557, -89.4112, 0.07 ) }
    dend_32 { pt3dadd( -150.335, -73.2439, -89.531, 0.73 ) }
    dend_32 { pt3dadd( -151.05, -74.6043, -89.9403, 0.07 ) }
    dend_32 { pt3dadd( -151.433, -75.3758, -90.2694, 0.07 ) }
    dend_32 { pt3dadd( -151.631, -75.783, -90.4569, 0.07 ) }
    dend_32 { pt3dadd( -151.982, -76.4908, -90.8245, 0.95 ) }
    dend_32 { pt3dadd( -152.486, -77.4881, -91.3467, 0.07 ) }
    dend_32 { pt3dadd( -152.943, -78.3286, -91.7518, 0.07 ) }
    dend_32 { pt3dadd( -153.518, -79.3178, -92.1822, 0.07 ) }
    dend_32 { pt3dadd( -154.253, -80.5313, -92.6793, 0.07 ) }
    dend_32 { pt3dadd( -154.746, -81.3091, -92.991, 1.25 ) }
    dend_32 { pt3dadd( -156.037, -83.2741, -93.7246, 2.06 ) }
    dend_32 { pt3dadd( -157.101, -84.8268, -94.2486, 0.15 ) }
    dend_32 { pt3dadd( -157.368, -85.2099, -94.3747, 0.15 ) }
    dend_32 { pt3dadd( -157.861, -85.926, -94.6008, 0.44 ) }
    dend_32 { pt3dadd( -158.425, -86.7272, -94.8741, 0.07 ) }
    dend_32 { pt3dadd( -158.751, -87.1785, -95.0027, 0.07 ) }
    dend_32 { pt3dadd( -159.282, -87.8926, -95.1753, 0.59 ) }
    dend_32 { pt3dadd( -159.497, -88.2434, -95.266, 0.59 ) }
    dend_32 { pt3dadd( -159.922, -89.2435, -95.4927, 0.07 ) }
    dend_32 { pt3dadd( -160.185, -90.0987, -95.6698, 0.07 ) }
    dend_32 { pt3dadd( -160.38, -90.841, -95.8354, 0.07 ) }
    dend_32 { pt3dadd( -160.682, -92.1131, -96.1463, 2.06 ) }
    dend_32 { pt3dadd( -161.141, -94.0791, -96.6758, 0.15 ) }
    dend_32 { pt3dadd( -161.603, -95.901, -97.1845, 0.07 ) }
    dend_32 { pt3dadd( -161.822, -96.6418, -97.461, 1.18 ) }
    dend_32 { pt3dadd( -162.299, -98.0961, -98.0928, 0.07 ) }
    dend_32 { pt3dadd( -162.544, -98.7336, -98.3973, 0.07 ) }
    dend_32 { pt3dadd( -162.936, -99.6123, -98.8644, 0.07 ) }
    dend_32 { pt3dadd( -163.405, -100.509, -99.3699, 1.32 ) }
    dend_32 { pt3dadd( -164.582, -102.631, -100.626, 0.07 ) }
    dend_32 { pt3dadd( -165.053, -103.555, -101.173, 0.07 ) }
    dend_32 { pt3dadd( -165.337, -104.221, -101.574, 0.81 ) }
    dend_32 { pt3dadd( -165.759, -105.261, -102.234, 0.07 ) }
    dend_32 { pt3dadd( -165.93, -105.677, -102.506, 0.07 ) }
    dend_32 { pt3dadd( -166.228, -106.372, -102.977, 0.88 ) }
    dend_32 { pt3dadd( -166.733, -107.52, -103.7, 0.07 ) }
    dend_32 { pt3dadd( -167.149, -108.476, -104.316, 0.07 ) }
    dend_32 { pt3dadd( -167.677, -109.786, -105.13, 1.69 ) }
    dend_32 { pt3dadd( -168.301, -111.489, -106.124, 0.07 ) }
    dend_32 { pt3dadd( -168.854, -112.995, -106.994, 0.07 ) }
    dend_32 { pt3dadd( -169.31, -114.233, -107.677, 1.18 ) }
    dend_32 { pt3dadd( -169.732, -115.456, -108.295, 0.07 ) }
    dend_32 { pt3dadd( -169.98, -116.222, -108.645, 0.07 ) }
    dend_32 { pt3dadd( -170.116, -116.845, -108.911, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.54921, -20.0163, -0.1038, 1.1 ) }
    dend_25 { pt3dadd( -2.9351, -20.8999, -2.25166, 1.1 ) }
    dend_25 { pt3dadd( -3.29641, -21.586, -3.80796, 1.03 ) }
    dend_25 { pt3dadd( -3.71341, -22.2209, -5.25519, 1.03 ) }
    dend_25 { pt3dadd( -4.29183, -22.9626, -6.96986, 1.4 ) }
    dend_25 { pt3dadd( -4.71416, -23.4576, -8.09282, 1.62 ) }
    dend_25 { pt3dadd( -5.22684, -23.9723, -9.29677, 1.84 ) }
    dend_25 { pt3dadd( -5.82222, -24.5654, -10.5457, 0.66 ) }
    dend_25 { pt3dadd( -6.3356, -24.9859, -11.4265, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_25 { pt3dadd( -6.75841, -25.2548, -12.0272, 0.66 ) }
    dend_25 { pt3dadd( -7.24322, -25.4995, -12.5935, 0.66 ) }
    dend_25 { pt3dadd( -8.16533, -25.8388, -13.5268, 2.2 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.54921, -20.0163, -0.1038, 0.51 ) }
    dend_24 { pt3dadd( -3.62191, -21.7695, 0.25302, 0.51 ) }
    dend_24 { pt3dadd( -4.50798, -23.1101, 0.605075, 1.18 ) }
    dend_24 { pt3dadd( -5.39601, -24.2997, 0.952877, 1.76 ) }
    dend_24 { pt3dadd( -6.50391, -25.6691, 1.33555, 1.03 ) }
    dend_24 { pt3dadd( -7.30004, -26.61, 1.55923, 1.03 ) }
    dend_24 { pt3dadd( -7.91393, -27.3101, 1.70024, 1.25 ) }
    dend_24 { pt3dadd( -8.87856, -28.2981, 1.8415, 0.59 ) }
    dend_24 { pt3dadd( -9.73937, -29.1503, 1.92812, 0.95 ) }
    dend_24 { pt3dadd( -11.038, -30.4635, 2.01332, 1.18 ) }
    dend_24 { pt3dadd( -12.5307, -32.0177, 2.05296, 1.25 ) }
    dend_24 { pt3dadd( -13.7647, -33.3243, 2.04412, 1.4 ) }
    dend_24 { pt3dadd( -14.8756, -34.5279, 1.99007, 1.69 ) }
    dend_24 { pt3dadd( -15.2563, -34.9573, 1.95989, 1.69 ) }
    dend_24 { pt3dadd( -16.1397, -36.0125, 1.90066, 0.88 ) }
    dend_24 { pt3dadd( -16.8864, -36.9306, 1.86284, 0.88 ) }
    dend_24 { pt3dadd( -17.6773, -37.8884, 1.84459, 0.59 ) }
    dend_24 { pt3dadd( -18.3642, -38.6735, 1.83267, 0.95 ) }
    dend_24 { pt3dadd( -19.0351, -39.375, 1.83076, 1.69 ) }
    dend_24 { pt3dadd( -19.496, -39.8056, 1.83465, 1.84 ) }
    dend_24 { pt3dadd( -20.8309, -40.8396, 1.86679, 0.51 ) }
    dend_24 { pt3dadd( -21.9253, -41.6213, 1.90557, 0.15 ) }
    dend_24 { pt3dadd( -22.9172, -42.3054, 1.94724, 0.95 ) }
    dend_24 { pt3dadd( -23.6899, -42.8227, 1.99191, 1.69 ) }
    dend_24 { pt3dadd( -24.4676, -43.3217, 2.06691, 1.62 ) }
    dend_24 { pt3dadd( -25.822, -44.1546, 2.24904, 0.22 ) }
    dend_24 { pt3dadd( -27.0779, -44.9281, 2.48331, 0.44 ) }
    dend_24 { pt3dadd( -27.9202, -45.484, 2.67188, 0.88 ) }
    dend_24 { pt3dadd( -28.6902, -46.033, 2.87947, 1.03 ) }
    dend_24 { pt3dadd( -29.7219, -46.8237, 3.18426, 0.15 ) }
    dend_24 { pt3dadd( -30.5054, -47.4873, 3.43265, 0.29 ) }
    dend_24 { pt3dadd( -31.3528, -48.2677, 3.6997, 1.32 ) }
    dend_24 { pt3dadd( -31.8135, -48.7003, 3.83457, 1.69 ) }
    dend_24 { pt3dadd( -32.9897, -49.8514, 4.14721, 0.95 ) }
    dend_24 { pt3dadd( -34.0922, -50.9667, 4.41447, 0.51 ) }
    dend_24 { pt3dadd( -35.0117, -51.91, 4.61133, 0.15 ) }
    dend_24 { pt3dadd( -36.3057, -53.2326, 4.87715, 1.54 ) }
    dend_24 { pt3dadd( -37.1163, -54.024, 5.03321, 1.54 ) }
    dend_24 { pt3dadd( -37.8727, -54.7094, 5.17385, 1.32 ) }
    dend_24 { pt3dadd( -39.1213, -55.6973, 5.39614, 0.07 ) }
    dend_24 { pt3dadd( -39.8942, -56.2318, 5.53391, 0.51 ) }
    dend_24 { pt3dadd( -40.5059, -56.6001, 5.64661, 0.22 ) }
    dend_24 { pt3dadd( -41.4579, -57.1146, 5.83382, 0.66 ) }
    dend_24 { pt3dadd( -42.6092, -57.6881, 6.05638, 0.15 ) }
    dend_24 { pt3dadd( -43.5833, -58.135, 6.23607, 0.15 ) }
    dend_24 { pt3dadd( -43.9946, -58.304, 6.30347, 0.15 ) }
    dend_24 { pt3dadd( -45.006, -58.7245, 6.46673, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 50/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.482399, -23.4005, 0.983491, 0.81 ) }
    dend_22 { pt3dadd( 0.114335, -24.2752, 0.965523, 0.81 ) }
    dend_22 { pt3dadd( 0.986638, -25.5549, 0.961111, 0.29 ) }
    dend_22 { pt3dadd( 1.85359, -26.8147, 0.995289, 0.15 ) }
    dend_22 { pt3dadd( 2.42646, -27.6261, 1.04713, 0.88 ) }
    dend_22 { pt3dadd( 3.0157, -28.4414, 1.11629, 0.37 ) }
    dend_22 { pt3dadd( 3.68205, -29.3619, 1.20227, 0.15 ) }
    dend_22 { pt3dadd( 4.15982, -30.003, 1.27525, 1.1 ) }
    dend_22 { pt3dadd( 4.93616, -30.994, 1.40992, 1.25 ) }
    dend_22 { pt3dadd( 5.51694, -31.7173, 1.51513, 1.03 ) }
    dend_22 { pt3dadd( 6.37981, -32.7977, 1.68311, 0.15 ) }
    dend_22 { pt3dadd( 6.70863, -33.2193, 1.75317, 0.15 ) }
    dend_22 { pt3dadd( 7.24293, -33.9197, 1.85467, 0.73 ) }
    dend_22 { pt3dadd( 7.47754, -34.2416, 1.88862, 0.73 ) }
    dend_22 { pt3dadd( 7.86501, -34.8093, 1.91888, 0.51 ) }
    dend_22 { pt3dadd( 8.67561, -36.1078, 1.9298, 0.22 ) }
    dend_22 { pt3dadd( 9.19692, -37.014, 1.91771, 1.32 ) }
    dend_22 { pt3dadd( 9.74894, -38.0384, 1.87853, 0.73 ) }
    dend_22 { pt3dadd( 10.4441, -39.4281, 1.78258, 0.07 ) }
    dend_22 { pt3dadd( 10.7814, -40.1166, 1.7162, 0.15 ) }
    dend_22 { pt3dadd( 11.2519, -41.0751, 1.59075, 1.1 ) }
    dend_22 { pt3dadd( 11.5492, -41.6993, 1.48248, 1.18 ) }
    dend_22 { pt3dadd( 11.9335, -42.552, 1.33014, 0.44 ) }
    dend_22 { pt3dadd( 12.1951, -43.1769, 1.23117, 0.07 ) }
    dend_22 { pt3dadd( 12.3695, -43.621, 1.18565, 0.73 ) }
    dend_22 { pt3dadd( 12.6207, -44.2545, 1.1682, 0.44 ) }
    dend_22 { pt3dadd( 12.8649, -44.8614, 1.20036, 0.44 ) }
    dend_22 { pt3dadd( 13.0626, -45.398, 1.26555, 0.37 ) }
    dend_22 { pt3dadd( 13.2705, -46.0028, 1.37242, 1.03 ) }
    dend_22 { pt3dadd( 13.5028, -46.6749, 1.4988, 1.25 ) }
    dend_22 { pt3dadd( 13.652, -47.0849, 1.5808, 1.54 ) }
    dend_22 { pt3dadd( 13.9859, -47.9311, 1.76103, 0.51 ) }
    dend_22 { pt3dadd( 14.3217, -48.7033, 1.92135, 0.44 ) }
    dend_22 { pt3dadd( 14.9064, -49.9343, 2.19265, 0.44 ) }
    dend_22 { pt3dadd( 15.345, -50.8071, 2.38875, 0.59 ) }
    dend_22 { pt3dadd( 15.6684, -51.4184, 2.52587, 1.54 ) }
    dend_22 { pt3dadd( 15.9668, -51.9486, 2.64826, 1.76 ) }
    dend_22 { pt3dadd( 16.3208, -52.5252, 2.78732, 1.25 ) }
    dend_22 { pt3dadd( 16.7442, -53.1536, 2.93404, 1.47 ) }
    dend_22 { pt3dadd( 17.4014, -54.0923, 3.12659, 0.66 ) }
    dend_22 { pt3dadd( 17.8333, -54.7079, 3.22553, 0.73 ) }
    dend_22 { pt3dadd( 18.1721, -55.1792, 3.27482, 1.1 ) }
    dend_22 { pt3dadd( 18.7324, -55.9498, 3.31968, 1.69 ) }
    dend_22 { pt3dadd( 19.2288, -56.6326, 3.32764, 0.88 ) }
    dend_22 { pt3dadd( 19.8087, -57.4383, 3.29827, 0.22 ) }
    dend_22 { pt3dadd( 20.2438, -58.0655, 3.25039, 0.81 ) }
    dend_22 { pt3dadd( 20.7227, -58.768, 3.17705, 0.37 ) }
    dend_22 { pt3dadd( 21.2403, -59.5445, 3.08161, 0.37 ) }
    dend_22 { pt3dadd( 21.6221, -60.1365, 2.99865, 0.66 ) }
    dend_22 { pt3dadd( 21.7967, -60.417, 2.95843, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( 22.057, -60.8404, 2.89293, 0.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.482399, -23.4005, 0.983491, 0.59 ) }
    dend_19 { pt3dadd( -0.528936, -24.4438, 1.39441, 0.59 ) }
    dend_19 { pt3dadd( -0.607869, -25.3053, 1.73086, 0.59 ) }
    dend_19 { pt3dadd( -0.659519, -25.8975, 1.93594, 0.59 ) }
    dend_19 { pt3dadd( -0.711889, -26.6406, 2.19679, 0.66 ) }
    dend_19 { pt3dadd( -0.761749, -27.447, 2.493, 0.95 ) }
    dend_19 { pt3dadd( -0.823559, -28.5124, 2.88419, 1.25 ) }
    dend_19 { pt3dadd( -0.876149, -29.0139, 3.05846, 0.95 ) }
    dend_19 { pt3dadd( -1.02924, -30.1203, 3.42031, 0.73 ) }
    dend_19 { pt3dadd( -1.13105, -30.8503, 3.667, 1.32 ) }
    dend_19 { pt3dadd( -1.2088, -31.5587, 3.92475, 1.62 ) }
    dend_19 { pt3dadd( -1.26659, -32.1283, 4.14417, 1.62 ) }
    dend_19 { pt3dadd( -1.38409, -33.1183, 4.54925, 0.59 ) }
    dend_19 { pt3dadd( -1.51137, -34.0039, 4.91882, 0.59 ) }
    dend_19 { pt3dadd( -1.65745, -34.9537, 5.33757, 0.81 ) }
    dend_19 { pt3dadd( -1.81878, -35.9633, 5.78051, 1.1 ) }
    dend_19 { pt3dadd( -1.89233, -36.4017, 5.97649, 2.06 ) }
    dend_19 { pt3dadd( -2.06637, -37.451, 6.4573, 1.03 ) }
    dend_19 { pt3dadd( -2.21289, -38.4159, 6.88138, 0.51 ) }
    dend_19 { pt3dadd( -2.34037, -39.1799, 7.17872, 1.1 ) }
    dend_19 { pt3dadd( -2.51634, -40.1713, 7.5224, 0.66 ) }
    dend_19 { pt3dadd( -2.69945, -41.2249, 7.87007, 2.13 ) }
    dend_19 { pt3dadd( -2.83418, -42.055, 8.17045, 2.13 ) }
    dend_19 { pt3dadd( -2.93445, -42.7162, 8.40893, 2.13 ) }
    dend_19 { pt3dadd( -3.02184, -43.3008, 8.61914, 2.13 ) }
    dend_19 { pt3dadd( -3.23747, -44.6454, 9.09377, 1.76 ) }
    dend_19 { pt3dadd( -3.38713, -45.8158, 9.52686, 2.42 ) }
    dend_19 { pt3dadd( -3.51304, -47.0738, 10.052, 2.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 29/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.7789, 5.7814, -1.89883, 1.03 ) }
    dend_15 { pt3dadd( -14.541, 6.04286, -2.3727, 1.03 ) }
    dend_15 { pt3dadd( -14.3213, 6.30797, -2.82378, 0.29 ) }
    dend_15 { pt3dadd( -14.0951, 6.62017, -3.31959, 1.18 ) }
    dend_15 { pt3dadd( -13.9436, 6.88063, -3.6826, 1.47 ) }
    dend_15 { pt3dadd( -13.6623, 7.48443, -4.46593, 1.18 ) }
    dend_15 { pt3dadd( -13.5626, 7.75352, -4.80201, 1.4 ) }
    dend_15 { pt3dadd( -13.5068, 8.03568, -5.13334, 1.4 ) }
    dend_15 { pt3dadd( -13.5019, 8.38256, -5.5676, 0.73 ) }
    dend_15 { pt3dadd( -13.5896, 8.78905, -6.081, 0.51 ) }
    dend_15 { pt3dadd( -13.68, 9.04312, -6.39779, 0.15 ) }
    dend_15 { pt3dadd( -13.822, 9.34615, -6.77443, 1.25 ) }
    dend_15 { pt3dadd( -14.0031, 9.74257, -7.30935, 1.47 ) }
    dend_15 { pt3dadd( -14.1995, 10.2312, -8.07451, 1.18 ) }
    dend_15 { pt3dadd( -14.3054, 10.5561, -8.62766, 0.51 ) }
    dend_15 { pt3dadd( -14.355, 10.8439, -9.1383, 0.07 ) }
    dend_15 { pt3dadd( -14.352, 11.2268, -9.81195, 1.25 ) }
    dend_15 { pt3dadd( -14.2674, 11.6958, -10.6319, 0.37 ) }
    dend_15 { pt3dadd( -14.1197, 12.0627, -11.3062, 1.03 ) }
    dend_15 { pt3dadd( -14.025, 12.2141, -11.6094, 1.18 ) }
    dend_15 { pt3dadd( -13.836, 12.3942, -12.0661, 1.03 ) }
    dend_15 { pt3dadd( -13.4537, 12.6225, -12.8738, 0.81 ) }
    dend_15 { pt3dadd( -13.1917, 12.7178, -13.4003, 0.29 ) }
    dend_15 { pt3dadd( -12.8685, 12.7798, -14.062, 1.25 ) }
    dend_15 { pt3dadd( -12.605, 12.8123, -14.6404, 1.32 ) }
    dend_15 { pt3dadd( -12.318, 12.836, -15.4968, 1.32 ) }
    dend_15 { pt3dadd( -12.1995, 12.8486, -16.0782, 1.32 ) }
    dend_15 { pt3dadd( -12.1273, 12.859, -16.6075, 1.32 ) }
    dend_15 { pt3dadd( -12.0409, 12.8697, -17.5436, 1.4 ) }
    dend_15 { pt3dadd( -12.0265, 12.866, -17.9982, 1.25 ) }
    dend_15 { pt3dadd( -12.0788, 12.8552, -19.1717, 1.25 ) }
    dend_15 { pt3dadd( -12.1573, 12.8619, -20.0702, 1.25 ) }
    dend_15 { pt3dadd( -12.2027, 12.8885, -20.8528, 1.25 ) }
    dend_15 { pt3dadd( -12.1959, 12.9231, -21.6037, 1.25 ) }
    dend_15 { pt3dadd( -12.173, 12.9755, -22.2208, 1.25 ) }
    dend_15 { pt3dadd( -12.1034, 13.0713, -22.9829, 0.59 ) }
    dend_15 { pt3dadd( -12.0643, 13.1427, -23.2891, 0.95 ) }
    dend_15 { pt3dadd( -12.022, 13.388, -23.9662, 0.66 ) }
    dend_15 { pt3dadd( -11.9931, 13.6615, -24.5505, 1.69 ) }
    dend_15 { pt3dadd( -11.8996, 14.0852, -25.428, 0.15 ) }
    dend_15 { pt3dadd( -11.8632, 14.1771, -25.625, 0.15 ) }
    dend_15 { pt3dadd( -11.7386, 14.377, -26.1205, 1.4 ) }
    dend_15 { pt3dadd( -11.3421, 14.8666, -27.4702, 0.29 ) }
    dend_15 { pt3dadd( -11.166, 15.0189, -27.9528, 1.4 ) }
    dend_15 { pt3dadd( -10.8171, 15.2402, -28.7322, 0.51 ) }
    dend_15 { pt3dadd( -10.5524, 15.3527, -29.1673, 0.95 ) }
    dend_15 { pt3dadd( -10.0917, 15.5126, -29.8089, 0.07 ) }
    dend_15 { pt3dadd( -9.74437, 15.615, -30.2448, 0.73 ) }
    dend_15 { pt3dadd( -9.30483, 15.7427, -30.7555, 0.07 ) }
    dend_15 { pt3dadd( -9.10649, 15.8092, -31.0267, 1.1 ) }
    dend_15 { pt3dadd( -8.72875, 15.9806, -31.6699, 0.07 ) }
    dend_15 { pt3dadd( -8.5584, 16.0716, -32.0476, 0.73 ) }
    dend_15 { pt3dadd( -8.23008, 16.2665, -33.0099, 0.59 ) }
    dend_15 { pt3dadd( -8.18945, 16.2932, -33.1757, 1.4 ) }
    dend_15 { pt3dadd( -8.00915, 16.4286, -34.1261, 1.4 ) }
    dend_15 { pt3dadd( -7.90448, 16.5252, -34.7866, 1.4 ) }
    dend_15 { pt3dadd( -7.86405, 16.5776, -35.0836, 1.03 ) }
    dend_15 { pt3dadd( -7.78516, 16.677, -35.5537, 1.03 ) }
    dend_15 { pt3dadd( -7.65876, 16.8201, -36.1065, 0.66 ) }
    dend_15 { pt3dadd( -7.43988, 17.0582, -36.8576, 0.95 ) }
    dend_15 { pt3dadd( -7.34398, 17.1679, -37.1791, 1.25 ) }
    dend_15 { pt3dadd( -7.00194, 17.6449, -38.4517, 0.07 ) }
    dend_15 { pt3dadd( -6.82032, 17.9769, -39.241, 1.1 ) }
    dend_15 { pt3dadd( -6.71074, 18.2607, -39.8419, 0.07 ) }
    dend_15 { pt3dadd( -6.646, 18.5047, -40.3208, 1.18 ) }
    dend_15 { pt3dadd( -6.54851, 19.2632, -41.7393, 1.18 ) }
    dend_15 { pt3dadd( -6.53904, 19.4657, -42.1192, 1.25 ) }
    dend_15 { pt3dadd( -6.5453, 19.7903, -42.6929, 0.37 ) }
    dend_15 { pt3dadd( -6.55483, 19.9417, -42.9681, 0.37 ) }
    dend_15 { pt3dadd( -6.61225, 20.3059, -43.7266, 1.47 ) }
    dend_15 { pt3dadd( -6.67796, 20.6138, -44.4216, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -6.74827, 20.9663, -45.2163, 0.07 ) }
    dend_15 { pt3dadd( -6.78918, 21.1649, -45.8279, 0.51 ) }
    dend_15 { pt3dadd( -6.82882, 21.3185, -46.4604, 0.15 ) }
    dend_15 { pt3dadd( -6.8786, 21.5269, -47.5589, 0.73 ) }
    dend_15 { pt3dadd( -6.88688, 21.5774, -47.8798, 0.73 ) }
    dend_15 { pt3dadd( -6.90495, 21.6602, -48.4286, 1.25 ) }
    dend_15 { pt3dadd( -7.02556, 21.8847, -49.7127, 0.07 ) }
    dend_15 { pt3dadd( -7.05484, 21.9194, -49.8924, 0.44 ) }
    dend_15 { pt3dadd( -7.18077, 22.0637, -50.4606, 0.07 ) }
    dend_15 { pt3dadd( -7.25365, 22.1501, -50.7459, 1.25 ) }
    dend_15 { pt3dadd( -7.48774, 22.4254, -51.5473, 0.29 ) }
    dend_15 { pt3dadd( -7.67456, 22.6589, -52.1722, 1.4 ) }
    dend_15 { pt3dadd( -8.14761, 23.3071, -53.7591, 0.07 ) }
    dend_15 { pt3dadd( -8.27842, 23.5161, -54.2594, 0.59 ) }
    dend_15 { pt3dadd( -8.4877, 23.9202, -55.2477, 0.15 ) }
    dend_15 { pt3dadd( -8.62477, 24.26, -56.0818, 2.13 ) }
    dend_15 { pt3dadd( -8.76149, 24.7768, -57.3063, 0.66 ) }
    dend_15 { pt3dadd( -8.79194, 24.9801, -57.7613, 0.51 ) }
    dend_15 { pt3dadd( -8.80746, 25.3016, -58.3931, 1.4 ) }
    dend_15 { pt3dadd( -8.82606, 25.7763, -59.3315, 0.22 ) }
    dend_15 { pt3dadd( -8.83553, 25.8929, -59.5439, 0.22 ) }
    dend_15 { pt3dadd( -8.88789, 26.2279, -60.1443, 1.1 ) }
    dend_15 { pt3dadd( -8.94557, 26.4787, -60.5555, 0.59 ) }
    dend_15 { pt3dadd( -8.991, 26.6711, -60.8944, 1.1 ) }
    dend_15 { pt3dadd( -9.05909, 27.2194, -62.0098, 0.37 ) }
    dend_15 { pt3dadd( -9.04863, 27.3198, -62.2236, 0.59 ) }
    dend_15 { pt3dadd( -8.94953, 27.5734, -62.8409, 0.07 ) }
    dend_15 { pt3dadd( -8.80834, 27.7543, -63.3447, 0.73 ) }
    dend_15 { pt3dadd( -8.46312, 28.0948, -64.3854, 1.32 ) }
    dend_15 { pt3dadd( -8.04236, 28.3972, -65.4564, 0.07 ) }
    dend_15 { pt3dadd( -7.78677, 28.5177, -65.9495, 0.81 ) }
    dend_15 { pt3dadd( -7.54244, 28.6012, -66.3721, 0.37 ) }
    dend_15 { pt3dadd( -7.33283, 28.6422, -66.6736, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.7789, 5.7814, -1.89883, 2.42 ) }
    dend_10 { pt3dadd( -15.7499, 6.27413, -2.07571, 2.42 ) }
    dend_10 { pt3dadd( -18.0298, 7.43099, -2.49102, 1.47 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.2345, 10.5979, 12.3334, 0.88 ) }
    dend_4 { pt3dadd( -18.5423, 12.8205, 12.1666, 0.88 ) }
    dend_4 { pt3dadd( -18.6913, 14.2265, 12.0768, 0.66 ) }
    dend_4 { pt3dadd( -18.7628, 14.8758, 12.0364, 0.66 ) }
    dend_4 { pt3dadd( -18.8985, 16.0379, 11.9354, 0.66 ) }
    dend_4 { pt3dadd( -19.0228, 17.055, 11.8031, 0.59 ) }
    dend_4 { pt3dadd( -19.1129, 17.7752, 11.6815, 0.59 ) }
    dend_4 { pt3dadd( -19.2059, 18.7164, 11.4724, 0.81 ) }
    dend_4 { pt3dadd( -19.2819, 19.5032, 11.2821, 1.32 ) }
    dend_4 { pt3dadd( -19.4512, 21.085, 10.8384, 0.29 ) }
    dend_4 { pt3dadd( -19.5979, 22.2463, 10.444, 0.29 ) }
    dend_4 { pt3dadd( -19.7072, 22.8799, 10.1918, 0.29 ) }
    dend_4 { pt3dadd( -19.8204, 23.4166, 9.95098, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -18.2345, 10.5979, 12.3334, 0.95 ) }
    dend_3 { pt3dadd( -19.792, 10.8971, 12.6158, 0.95 ) }
    dend_3 { pt3dadd( -20.612, 11.0767, 12.7781, 0.95 ) }
    dend_3 { pt3dadd( -21.3319, 11.2583, 12.9552, 0.95 ) }
    dend_3 { pt3dadd( -21.7143, 11.3644, 13.0678, 1.03 ) }
    dend_3 { pt3dadd( -22.2587, 11.517, 13.2513, 0.88 ) }
    dend_3 { pt3dadd( -23.1903, 11.7729, 13.5785, 0.51 ) }
    dend_3 { pt3dadd( -24.0055, 12.0078, 13.8927, 1.03 ) }
    dend_3 { pt3dadd( -24.61, 12.1759, 14.1185, 1.32 ) }
    dend_3 { pt3dadd( -25.2435, 12.3521, 14.3621, 1.32 ) }
    dend_3 { pt3dadd( -26.1856, 12.6223, 14.7213, 1.4 ) }
    dend_3 { pt3dadd( -26.663, 12.7592, 14.9099, 0.73 ) }
    dend_3 { pt3dadd( -27.2156, 12.9061, 15.1261, 0.73 ) }
    dend_3 { pt3dadd( -27.6047, 12.9985, 15.2528, 0.88 ) }
    dend_3 { pt3dadd( -28.0859, 13.101, 15.3716, 0.44 ) }
    dend_3 { pt3dadd( -29.0463, 13.3118, 15.5459, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 65/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 95.635, 238.179, -152.755, 0.37 ) }
    dend_42 { pt3dadd( 95.5616, 238.68, -153.771, 0.37 ) }
    dend_42 { pt3dadd( 95.525, 239.101, -154.572, 0.81 ) }
    dend_42 { pt3dadd( 95.4699, 239.523, -155.346, 0.29 ) }
    dend_42 { pt3dadd( 95.3977, 240.007, -156.188, 0.07 ) }
    dend_42 { pt3dadd( 95.3422, 240.387, -156.819, 0.88 ) }
    dend_42 { pt3dadd( 95.2949, 240.822, -157.5, 0.07 ) }
    dend_42 { pt3dadd( 95.2464, 241.344, -158.245, 0.07 ) }
    dend_42 { pt3dadd( 95.2066, 241.761, -158.781, 0.07 ) }
    dend_42 { pt3dadd( 95.1832, 242.043, -159.131, 1.18 ) }
    dend_42 { pt3dadd( 95.1546, 242.675, -159.976, 0.15 ) }
    dend_42 { pt3dadd( 95.1227, 243.117, -160.566, 0.59 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 95.635, 238.179, -152.755, 0.15 ) }
    dend_41 { pt3dadd( 95.8588, 238.741, -153.044, 0.15 ) }
    dend_41 { pt3dadd( 96.1536, 239.551, -153.485, 0.15 ) }
    dend_41 { pt3dadd( 96.3836, 240.235, -153.904, 0.15 ) }
    dend_41 { pt3dadd( 96.4741, 240.533, -154.09, 1.18 ) }
    dend_41 { pt3dadd( 96.7047, 241.407, -154.625, 0.07 ) }
    dend_41 { pt3dadd( 96.8835, 242.195, -155.114, 0.07 ) }
    dend_41 { pt3dadd( 96.9931, 242.895, -155.559, 1.25 ) }
    dend_41 { pt3dadd( 97.1152, 243.92, -156.199, 0.07 ) }
    dend_41 { pt3dadd( 97.1723, 244.551, -156.56, 0.07 ) }
    dend_41 { pt3dadd( 97.2217, 245.303, -156.98, 0.73 ) }
    dend_41 { pt3dadd( 97.274, 245.952, -157.329, 0.07 ) }
    dend_41 { pt3dadd( 97.3409, 246.523, -157.626, 0.07 ) }
    dend_41 { pt3dadd( 97.5202, 247.778, -158.235, 2.06 ) }
    dend_41 { pt3dadd( 97.7528, 249.131, -158.866, 0.07 ) }
    dend_41 { pt3dadd( 97.9302, 249.867, -159.207, 0.88 ) }
    dend_41 { pt3dadd( 98.2427, 250.893, -159.665, 0.07 ) }
    dend_41 { pt3dadd( 98.4958, 251.624, -159.986, 0.07 ) }
    dend_41 { pt3dadd( 98.6395, 252.011, -160.162, 0.07 ) }
    dend_41 { pt3dadd( 98.9518, 252.787, -160.541, 1.32 ) }
    dend_41 { pt3dadd( 99.298, 253.603, -160.953, 0.22 ) }
    dend_41 { pt3dadd( 99.5624, 254.292, -161.324, 0.22 ) }
    dend_41 { pt3dadd( 99.7638, 254.964, -161.723, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( 99.9615, 255.834, -162.307, 0.81 ) }
    dend_41 { pt3dadd( 100.073, 256.536, -162.845, 0.81 ) }
    dend_41 { pt3dadd( 100.118, 257.173, -163.367, 1.25 ) }
    dend_41 { pt3dadd( 100.123, 258.091, -164.138, 0.07 ) }
    dend_41 { pt3dadd( 100.11, 258.709, -164.657, 0.07 ) }
    dend_41 { pt3dadd( 100.079, 259.411, -165.22, 0.95 ) }
    dend_41 { pt3dadd( 100.015, 260.526, -166.078, 0.07 ) }
    dend_41 { pt3dadd( 99.9651, 261.289, -166.63, 1.54 ) }
    dend_41 { pt3dadd( 99.9263, 262.431, -167.418, 0.07 ) }
    dend_41 { pt3dadd( 99.9257, 263.649, -168.183, 0.07 ) }
    dend_41 { pt3dadd( 99.9561, 264.328, -168.594, 0.07 ) }
    dend_41 { pt3dadd( 100.026, 265.162, -169.11, 0.95 ) }
    dend_41 { pt3dadd( 100.068, 265.593, -169.388, 0.95 ) }
    dend_41 { pt3dadd( 100.155, 266.538, -170.054, 0.07 ) }
    dend_41 { pt3dadd( 100.181, 267.177, -170.526, 0.07 ) }
    dend_41 { pt3dadd( 100.187, 267.891, -171.053, 0.88 ) }
    dend_41 { pt3dadd( 100.145, 269.185, -171.998, 0.07 ) }
    dend_41 { pt3dadd( 100.095, 269.944, -172.514, 0.95 ) }
    dend_41 { pt3dadd( 100.05, 270.585, -172.913, 0.07 ) }
    dend_41 { pt3dadd( 99.9624, 272.027, -173.66, 0.07 ) }
    dend_41 { pt3dadd( 99.9776, 273.12, -174.089, 1.18 ) }
    dend_41 { pt3dadd( 100.046, 273.824, -174.266, 1.18 ) }
    dend_41 { pt3dadd( 100.242, 275.016, -174.44, 0.07 ) }
    dend_41 { pt3dadd( 100.407, 275.833, -174.521, 0.07 ) }
    dend_41 { pt3dadd( 100.684, 277.255, -174.64, 0.07 ) }
    dend_41 { pt3dadd( 100.942, 278.907, -174.779, 0.07 ) }
    dend_41 { pt3dadd( 101.022, 279.942, -174.891, 0.07 ) }
    dend_41 { pt3dadd( 101.035, 280.822, -175.014, 0.07 ) }
    dend_41 { pt3dadd( 100.961, 282.318, -175.296, 0.07 ) }
    dend_41 { pt3dadd( 100.786, 283.965, -175.697, 0.07 ) }
    dend_41 { pt3dadd( 100.556, 285.493, -176.151, 0.07 ) }
    dend_41 { pt3dadd( 100.257, 287.262, -176.744, 0.07 ) }
    dend_41 { pt3dadd( 100.173, 287.929, -176.988, 0.22 ) }
    dend_41 { pt3dadd( 100.087, 288.865, -177.334, 0.07 ) }
    dend_41 { pt3dadd( 100.024, 290.349, -177.893, 0.07 ) }
    dend_41 { pt3dadd( 100.053, 291.178, -178.213, 0.37 ) }
    dend_41 { pt3dadd( 100.167, 292.258, -178.657, 0.07 ) }
    dend_41 { pt3dadd( 100.391, 293.49, -179.217, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.16533, -25.8388, -13.5268, 1.1 ) }
    dend_27 { pt3dadd( -8.95904, -27.4876, -14.7078, 1.1 ) }
    dend_27 { pt3dadd( -9.69797, -29.0852, -15.7005, 0.81 ) }
    dend_27 { pt3dadd( -10.1206, -30.074, -16.2433, 1.1 ) }
    dend_27 { pt3dadd( -10.4149, -30.8648, -16.6004, 1.4 ) }
    dend_27 { pt3dadd( -10.9231, -32.313, -17.2156, 0.07 ) }
    dend_27 { pt3dadd( -11.2043, -33.1699, -17.5692, 0.15 ) }
    dend_27 { pt3dadd( -11.563, -34.5239, -18.0822, 1.91 ) }
    dend_27 { pt3dadd( -11.7752, -35.7445, -18.5527, 1.62 ) }
    dend_27 { pt3dadd( -12.0222, -38.1525, -19.5766, 0.22 ) }
    dend_27 { pt3dadd( -12.1262, -39.9909, -20.4541, 2.28 ) }
    dend_27 { pt3dadd( -12.1431, -41.2118, -21.1469, 1.62 ) }
    dend_27 { pt3dadd( -12.1016, -43.3026, -22.4964, 0.29 ) }
    dend_27 { pt3dadd( -12.0854, -44.6858, -23.4819, 1.03 ) }
    dend_27 { pt3dadd( -12.1326, -46.0697, -24.5776, 0.59 ) }
    dend_27 { pt3dadd( -12.2496, -47.0407, -25.4293, 0.15 ) }
    dend_27 { pt3dadd( -12.649, -48.4322, -26.6987, 1.69 ) }
    dend_27 { pt3dadd( -13.0349, -49.2694, -27.4789, 2.06 ) }
    dend_27 { pt3dadd( -14.0928, -50.891, -28.9435, 0.29 ) }
    dend_27 { pt3dadd( -14.8102, -51.8, -29.7198, 0.29 ) }
    dend_27 { pt3dadd( -15.8626, -53.0535, -30.6123, 2.06 ) }
    dend_27 { pt3dadd( -17.6487, -55.2174, -31.8244, 0.44 ) }
    dend_27 { pt3dadd( -18.193, -55.8982, -32.1239, 0.44 ) }
    dend_27 { pt3dadd( -18.9484, -56.9182, -32.4751, 1.84 ) }
    dend_27 { pt3dadd( -19.7052, -58.0911, -32.7669, 1.62 ) }
    dend_27 { pt3dadd( -20.6697, -59.8005, -33.0646, 0.22 ) }
    dend_27 { pt3dadd( -21.5797, -61.4946, -33.2426, 0.22 ) }
    dend_27 { pt3dadd( -22.3794, -63.0222, -33.3197, 1.98 ) }
    dend_27 { pt3dadd( -23.3969, -64.9078, -33.4032, 0.66 ) }
    dend_27 { pt3dadd( -24.2011, -66.3188, -33.5009, 0.66 ) }
    dend_27 { pt3dadd( -24.7025, -67.093, -33.5747, 0.22 ) }
    dend_27 { pt3dadd( -25.6677, -68.3234, -33.761, 1.98 ) }
    dend_27 { pt3dadd( -26.2946, -68.9851, -33.8862, 1.98 ) }
    dend_27 { pt3dadd( -27.1392, -69.6871, -34.0677, 1.47 ) }
    dend_27 { pt3dadd( -28.9586, -70.8884, -34.4872, 0.15 ) }
    dend_27 { pt3dadd( -30.3795, -71.6822, -34.8217, 0.15 ) }
    dend_27 { pt3dadd( -31.9168, -72.5058, -35.1949, 2.06 ) }
    dend_27 { pt3dadd( -32.9341, -73.0391, -35.4577, 2.06 ) }
    dend_27 { pt3dadd( -34.754, -73.9898, -35.9387, 0.44 ) }
    dend_27 { pt3dadd( -35.9368, -74.6449, -36.2726, 1.03 ) }
    dend_27 { pt3dadd( -37.3826, -75.501, -36.6908, 0.07 ) }
    dend_27 { pt3dadd( -38.5271, -76.2623, -37.0589, 0.07 ) }
    dend_27 { pt3dadd( -40.1125, -77.4675, -37.6107, 1.76 ) }
    dend_27 { pt3dadd( -40.4908, -77.809, -37.7499, 1.76 ) }
    dend_27 { pt3dadd( -41.9471, -79.3924, -38.3467, 0.22 ) }
    dend_27 { pt3dadd( -42.3135, -79.8268, -38.5178, 0.22 ) }
    dend_27 { pt3dadd( -43.1485, -80.8661, -38.9605, 1.4 ) }
    dend_27 { pt3dadd( -43.709, -81.5447, -39.2869, 1.84 ) }
    dend_27 { pt3dadd( -44.8413, -82.8839, -39.9432, 0.37 ) }
    dend_27 { pt3dadd( -45.4068, -83.4956, -40.2738, 0.37 ) }
    dend_27 { pt3dadd( -46.296, -84.3841, -40.7918, 0.07 ) }
    dend_27 { pt3dadd( -47.2512, -85.2721, -41.3345, 1.25 ) }
    dend_27 { pt3dadd( -48.7811, -86.5797, -42.1776, 0.29 ) }
    dend_27 { pt3dadd( -49.8678, -87.4442, -42.7614, 1.91 ) }
    dend_27 { pt3dadd( -50.6771, -88.0738, -43.2214, 1.25 ) }
    dend_27 { pt3dadd( -51.8681, -89.0462, -43.908, 0.15 ) }
    dend_27 { pt3dadd( -53.1217, -90.1761, -44.6494, 0.15 ) }
    dend_27 { pt3dadd( -53.7407, -90.797, -45.0119, 0.88 ) }
    dend_27 { pt3dadd( -54.1221, -91.2784, -45.268, 1.18 ) }
    dend_27 { pt3dadd( -55.2311, -93.0673, -46.1353, 0.22 ) }
    dend_27 { pt3dadd( -55.6749, -94.0122, -46.5233, 0.22 ) }
    dend_27 { pt3dadd( -55.8308, -94.5099, -46.7023, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_27 { pt3dadd( -56.0127, -95.436, -47.0096, 1.18 ) }
    dend_27 { pt3dadd( -56.2562, -97.3098, -47.5694, 0.29 ) }
    dend_27 { pt3dadd( -56.3516, -98.4269, -47.8577, 0.29 ) }
    dend_27 { pt3dadd( -56.389, -99.4362, -48.0511, 1.03 ) }
    dend_27 { pt3dadd( -56.4144, -100.938, -48.3416, 1.84 ) }
    dend_27 { pt3dadd( -56.4238, -102.446, -48.624, 0.44 ) }
    dend_27 { pt3dadd( -56.408, -103.443, -48.7914, 0.44 ) }
    dend_27 { pt3dadd( -56.4038, -104.096, -48.8641, 0.07 ) }
    dend_27 { pt3dadd( -56.3701, -105.918, -49.0689, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.16533, -25.8388, -13.5268, 0.95 ) }
    dend_26 { pt3dadd( -9.52143, -25.9721, -12.8905, 0.95 ) }
    dend_26 { pt3dadd( -10.5657, -26.1129, -12.5367, 0.22 ) }
    dend_26 { pt3dadd( -11.0177, -26.2102, -12.462, 0.37 ) }
    dend_26 { pt3dadd( -11.5292, -26.3634, -12.4362, 0.07 ) }
    dend_26 { pt3dadd( -12.2341, -26.6188, -12.4502, 0.07 ) }
    dend_26 { pt3dadd( -12.6679, -26.7972, -12.4777, 0.95 ) }
    dend_26 { pt3dadd( -12.9822, -26.9518, -12.5429, 1.03 ) }
    dend_26 { pt3dadd( -13.8274, -27.402, -12.7635, 0.07 ) }
    dend_26 { pt3dadd( -14.496, -27.7825, -12.9321, 0.07 ) }
    dend_26 { pt3dadd( -15.2129, -28.2123, -13.1014, 1.84 ) }
    dend_26 { pt3dadd( -16.1138, -28.7721, -13.3178, 0.07 ) }
    dend_26 { pt3dadd( -16.539, -29.0317, -13.4172, 0.07 ) }
    dend_26 { pt3dadd( -16.7218, -29.1438, -13.4596, 0.81 ) }
    dend_26 { pt3dadd( -17.1603, -29.4127, -13.556, 0.07 ) }
    dend_26 { pt3dadd( -17.672, -29.7159, -13.6865, 0.07 ) }
    dend_26 { pt3dadd( -18.3003, -30.0711, -13.872, 0.51 ) }
    dend_26 { pt3dadd( -18.6342, -30.2527, -13.9782, 0.07 ) }
    dend_26 { pt3dadd( -18.9981, -30.4446, -14.0974, 0.07 ) }
    dend_26 { pt3dadd( -19.588, -30.7412, -14.2899, 1.4 ) }
    dend_26 { pt3dadd( -20.5044, -31.2005, -14.5955, 0.07 ) }
    dend_26 { pt3dadd( -21.288, -31.6013, -14.8765, 0.07 ) }
    dend_26 { pt3dadd( -22.084, -32.014, -15.1773, 1.69 ) }
    dend_26 { pt3dadd( -23.0938, -32.5312, -15.6098, 0.07 ) }
    dend_26 { pt3dadd( -23.672, -32.8206, -15.892, 0.07 ) }
    dend_26 { pt3dadd( -23.952, -32.9659, -16.0454, 1.1 ) }
    dend_26 { pt3dadd( -24.615, -33.3241, -16.457, 0.07 ) }
    dend_26 { pt3dadd( -25.1179, -33.5969, -16.7908, 0.07 ) }
    dend_26 { pt3dadd( -25.7337, -33.9289, -17.2125, 0.88 ) }
    dend_26 { pt3dadd( -26.4198, -34.2991, -17.6991, 0.07 ) }
    dend_26 { pt3dadd( -27.0762, -34.6477, -18.1717, 1.84 ) }
    dend_26 { pt3dadd( -28.0023, -35.1071, -18.8027, 0.07 ) }
    dend_26 { pt3dadd( -28.6066, -35.3884, -19.1997, 0.07 ) }
    dend_26 { pt3dadd( -29.0209, -35.569, -19.4676, 0.59 ) }
    dend_26 { pt3dadd( -29.7441, -35.8844, -19.9145, 0.07 ) }
    dend_26 { pt3dadd( -30.2552, -36.109, -20.2214, 0.07 ) }
    dend_26 { pt3dadd( -30.814, -36.3393, -20.5442, 1.54 ) }
    dend_26 { pt3dadd( -31.8178, -36.7044, -21.0872, 0.07 ) }
    dend_26 { pt3dadd( -32.4368, -36.9014, -21.4186, 0.07 ) }
    dend_26 { pt3dadd( -33.1341, -37.1031, -21.761, 0.07 ) }
    dend_26 { pt3dadd( -33.6566, -37.2544, -21.9814, 0.07 ) }
    dend_26 { pt3dadd( -34.2817, -37.4247, -22.2071, 1.18 ) }
    dend_26 { pt3dadd( -34.9508, -37.5905, -22.4276, 0.07 ) }
    dend_26 { pt3dadd( -35.5543, -37.7414, -22.6, 0.07 ) }
    dend_26 { pt3dadd( -36.5162, -38.0247, -22.7977, 0.07 ) }
    dend_26 { pt3dadd( -37.2524, -38.2901, -22.9059, 1.18 ) }
    dend_26 { pt3dadd( -38.1069, -38.6609, -23.001, 0.07 ) }
    dend_26 { pt3dadd( -38.5507, -38.8783, -23.0378, 0.07 ) }
    dend_26 { pt3dadd( -39.6123, -39.433, -23.0994, 0.07 ) }
    dend_26 { pt3dadd( -41.3153, -40.3312, -23.1679, 3.01 ) }
    dend_26 { pt3dadd( -43.2099, -41.324, -23.2301, 0.07 ) }
    dend_26 { pt3dadd( -44.1343, -41.8047, -23.2699, 0.07 ) }
    dend_26 { pt3dadd( -44.603, -42.0508, -23.2999, 0.07 ) }
    dend_26 { pt3dadd( -45.109, -42.3055, -23.3457, 0.73 ) }
    dend_26 { pt3dadd( -45.8445, -42.6399, -23.4642, 0.07 ) }
    dend_26 { pt3dadd( -46.1778, -42.7652, -23.5715, 0.81 ) }
    dend_26 { pt3dadd( -47.0202, -43.017, -23.9327, 0.07 ) }
    dend_26 { pt3dadd( -47.4908, -43.1419, -24.1693, 0.29 ) }
    dend_26 { pt3dadd( -47.9454, -43.2622, -24.4234, 0.07 ) }
    dend_26 { pt3dadd( -48.4987, -43.4077, -24.7481, 0.95 ) }
    dend_26 { pt3dadd( -49.3512, -43.6361, -25.3211, 0.07 ) }
    dend_26 { pt3dadd( -49.8392, -43.7742, -25.6763, 0.07 ) }
    dend_26 { pt3dadd( -50.1175, -43.8609, -25.8714, 0.81 ) }
    dend_26 { pt3dadd( -50.8333, -44.0865, -26.3699, 0.07 ) }
    dend_26 { pt3dadd( -51.2317, -44.2119, -26.6482, 1.1 ) }
    dend_26 { pt3dadd( -52.3297, -44.5726, -27.415, 0.07 ) }
    dend_26 { pt3dadd( -52.8832, -44.7881, -27.8184, 0.07 ) }
    dend_26 { pt3dadd( -53.8617, -45.2075, -28.5785, 2.13 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 77/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.51304, -47.0738, 10.052, 0.88 ) }
    dend_21 { pt3dadd( -2.94359, -48.0736, 10.1088, 0.88 ) }
    dend_21 { pt3dadd( -2.66818, -48.559, 10.1412, 0.81 ) }
    dend_21 { pt3dadd( -2.17455, -49.427, 10.1975, 0.66 ) }
    dend_21 { pt3dadd( -1.71952, -50.2264, 10.2451, 0.51 ) }
    dend_21 { pt3dadd( -1.35447, -50.8854, 10.2631, 0.44 ) }
    dend_21 { pt3dadd( -1.06611, -51.4288, 10.2544, 0.07 ) }
    dend_21 { pt3dadd( -0.890169, -51.7952, 10.2329, 0.07 ) }
    dend_21 { pt3dadd( -0.779559, -52.0548, 10.2023, 1.18 ) }
    dend_21 { pt3dadd( -0.527625, -52.6734, 10.0876, 1.4 ) }
    dend_21 { pt3dadd( -0.105229, -53.6466, 9.8692, 0.37 ) }
    dend_21 { pt3dadd( 0.289616, -54.4831, 9.67394, 0.44 ) }
    dend_21 { pt3dadd( 0.531793, -54.9895, 9.56195, 0.73 ) }
    dend_21 { pt3dadd( 0.62561, -55.1899, 9.52398, 0.95 ) }
    dend_21 { pt3dadd( 0.964514, -55.9256, 9.41841, 0.51 ) }
    dend_21 { pt3dadd( 1.49268, -57.0624, 9.32268, 0.22 ) }
    dend_21 { pt3dadd( 1.95672, -58.0308, 9.30955, 0.29 ) }
    dend_21 { pt3dadd( 2.22556, -58.5857, 9.33301, 0.29 ) }
    dend_21 { pt3dadd( 2.43571, -59.0282, 9.36945, 0.29 ) }
    dend_21 { pt3dadd( 2.61439, -59.448, 9.41048, 0.29 ) }
    dend_21 { pt3dadd( 2.75168, -59.8221, 9.45473, 0.44 ) }
    dend_21 { pt3dadd( 2.92188, -60.359, 9.53904, 1.4 ) }
    dend_21 { pt3dadd( 3.1083, -60.9905, 9.6491, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_21 { pt3dadd( 3.27275, -61.5261, 9.73253, 0.51 ) }
    dend_21 { pt3dadd( 3.40908, -61.9375, 9.78358, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.51304, -47.0738, 10.052, 1.47 ) }
    dend_20 { pt3dadd( -3.73483, -48.4988, 10.8251, 1.47 ) }
    dend_20 { pt3dadd( -3.88379, -49.2592, 11.236, 1.4 ) }
    dend_20 { pt3dadd( -4.11697, -50.1969, 11.7375, 0.66 ) }
    dend_20 { pt3dadd( -4.36433, -51.0096, 12.1541, 0.73 ) }
    dend_20 { pt3dadd( -4.51684, -51.5205, 12.412, 1.1 ) }
    dend_20 { pt3dadd( -4.73192, -52.2842, 12.7715, 1.32 ) }
    dend_20 { pt3dadd( -4.99099, -53.3529, 13.2668, 0.51 ) }
    dend_20 { pt3dadd( -5.1482, -53.9602, 13.5336, 1.32 ) }
    dend_20 { pt3dadd( -5.4578, -54.9306, 13.943, 0.73 ) }
    dend_20 { pt3dadd( -5.77462, -55.768, 14.2664, 0.29 ) }
    dend_20 { pt3dadd( -6.17397, -56.723, 14.6132, 0.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 14/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -18.0298, 7.43099, -2.49102, 0.95 ) }
    dend_12 { pt3dadd( -18.5612, 7.25922, -2.52602, 0.95 ) }
    dend_12 { pt3dadd( -19.4272, 6.94611, -2.66413, 1.1 ) }
    dend_12 { pt3dadd( -19.9809, 6.74073, -2.78778, 0.88 ) }
    dend_12 { pt3dadd( -21.2199, 6.3167, -3.10737, 0.37 ) }
    dend_12 { pt3dadd( -22.0821, 6.06298, -3.33248, 0.44 ) }
    dend_12 { pt3dadd( -23.0909, 5.79424, -3.58425, 0.66 ) }
    dend_12 { pt3dadd( -23.9283, 5.56844, -3.81864, 0.73 ) }
    dend_12 { pt3dadd( -24.6339, 5.36221, -4.02771, 0.66 ) }
    dend_12 { pt3dadd( -25.4863, 5.09122, -4.25101, 0.66 ) }
    dend_12 { pt3dadd( -26.3859, 4.76901, -4.43776, 0.51 ) }
    dend_12 { pt3dadd( -27.3128, 4.41816, -4.57923, 1.18 ) }
    dend_12 { pt3dadd( -28.3922, 3.96013, -4.7013, 1.91 ) }
    dend_12 { pt3dadd( -29.4929, 3.4208, -4.80416, 1.4 ) }
    dend_12 { pt3dadd( -31.0671, 2.574, -4.95664, 0.51 ) }
    dend_12 { pt3dadd( -31.888, 2.10738, -5.05318, 0.95 ) }
    dend_12 { pt3dadd( -32.4719, 1.77426, -5.14193, 1.18 ) }
    dend_12 { pt3dadd( -33.3514, 1.31895, -5.29882, 0.73 ) }
    dend_12 { pt3dadd( -34.1812, 0.973609, -5.4623, 0.37 ) }
    dend_12 { pt3dadd( -34.8014, 0.791789, -5.59912, 0.37 ) }
    dend_12 { pt3dadd( -35.5374, 0.675079, -5.77752, 1.1 ) }
    dend_12 { pt3dadd( -36.1713, 0.62232, -5.92676, 1.25 ) }
    dend_12 { pt3dadd( -36.889, 0.58383, -6.08112, 1.62 ) }
    dend_12 { pt3dadd( -37.9165, 0.552213, -6.26992, 0.81 ) }
    dend_12 { pt3dadd( -38.7997, 0.500519, -6.41432, 0.51 ) }
    dend_12 { pt3dadd( -39.7372, 0.370627, -6.58008, 0.51 ) }
    dend_12 { pt3dadd( -40.746, 0.169884, -6.77924, 0.59 ) }
    dend_12 { pt3dadd( -41.5824, -0.047837, -6.97157, 1.32 ) }
    dend_12 { pt3dadd( -42.127, -0.233879, -7.11604, 1.98 ) }
    dend_12 { pt3dadd( -43.259, -0.721765, -7.46498, 1.76 ) }
    dend_12 { pt3dadd( -44.8333, -1.56277, -8.01563, 0.22 ) }
    dend_12 { pt3dadd( -45.6503, -2.08624, -8.32352, 0.22 ) }
    dend_12 { pt3dadd( -46.1082, -2.42413, -8.50758, 0.95 ) }
    dend_12 { pt3dadd( -46.654, -2.86782, -8.72937, 0.88 ) }
    dend_12 { pt3dadd( -47.1754, -3.33204, -8.93532, 0.44 ) }
    dend_12 { pt3dadd( -47.7072, -3.81959, -9.13392, 0.66 ) }
    dend_12 { pt3dadd( -48.7181, -4.74644, -9.46997, 1.91 ) }
    dend_12 { pt3dadd( -49.1522, -5.1163, -9.60623, 1.98 ) }
    dend_12 { pt3dadd( -50.3561, -6.01052, -9.95448, 0.22 ) }
    dend_12 { pt3dadd( -51.3093, -6.62025, -10.2113, 0.22 ) }
    dend_12 { pt3dadd( -51.9404, -6.99934, -10.3717, 0.51 ) }
    dend_12 { pt3dadd( -52.7869, -7.48522, -10.5768, 1.84 ) }
    dend_12 { pt3dadd( -53.4423, -7.84722, -10.7248, 1.91 ) }
    dend_12 { pt3dadd( -54.2512, -8.29025, -10.8643, 1.54 ) }
    dend_12 { pt3dadd( -55.6556, -9.04402, -11.0354, 0.37 ) }
    dend_12 { pt3dadd( -56.5693, -9.53585, -11.1218, 0.37 ) }
    dend_12 { pt3dadd( -57.2335, -9.91945, -11.1661, 0.88 ) }
    dend_12 { pt3dadd( -57.707, -10.22, -11.1831, 1.1 ) }
    dend_12 { pt3dadd( -58.8575, -11.0398, -11.1805, 0.15 ) }
    dend_12 { pt3dadd( -59.761, -11.7153, -11.1593, 0.15 ) }
    dend_12 { pt3dadd( -60.4898, -12.2586, -11.1323, 1.69 ) }
    dend_12 { pt3dadd( -61.0529, -12.6588, -11.1115, 1.54 ) }
    dend_12 { pt3dadd( -62.3231, -13.5391, -11.0968, 0.15 ) }
    dend_12 { pt3dadd( -62.8585, -13.9197, -11.1035, 0.15 ) }
    dend_12 { pt3dadd( -63.7003, -14.5427, -11.1739, 0.15 ) }
    dend_12 { pt3dadd( -64.4106, -15.1006, -11.2597, 1.32 ) }
    dend_12 { pt3dadd( -64.9917, -15.5654, -11.3543, 1.32 ) }
    dend_12 { pt3dadd( -65.5173, -16.0019, -11.4746, 1.47 ) }
    dend_12 { pt3dadd( -65.8835, -16.3384, -11.5929, 1.47 ) }
    dend_12 { pt3dadd( -66.6976, -17.197, -11.8864, 0.15 ) }
    dend_12 { pt3dadd( -67.0544, -17.6302, -12.0299, 0.15 ) }
    dend_12 { pt3dadd( -67.3544, -17.9991, -12.1601, 0.81 ) }
    dend_12 { pt3dadd( -67.7446, -18.4555, -12.324, 1.18 ) }
    dend_12 { pt3dadd( -68.4345, -19.1874, -12.5774, 0.07 ) }
    dend_12 { pt3dadd( -69.081, -19.825, -12.7794, 0.07 ) }
    dend_12 { pt3dadd( -69.4405, -20.1581, -12.8688, 1.1 ) }
    dend_12 { pt3dadd( -70.0223, -20.6705, -13.013, 1.54 ) }
    dend_12 { pt3dadd( -70.7735, -21.2859, -13.1952, 1.4 ) }
    dend_12 { pt3dadd( -72.0513, -22.2698, -13.4905, 0.44 ) }
    dend_12 { pt3dadd( -72.7759, -22.8054, -13.649, 0.07 ) }
    dend_12 { pt3dadd( -73.9952, -23.6984, -13.8976, 0.07 ) }
    dend_12 { pt3dadd( -74.7922, -24.2803, -14.0439, 1.18 ) }
    dend_12 { pt3dadd( -75.6712, -24.9197, -14.1889, 2.28 ) }
    dend_12 { pt3dadd( -76.754, -25.6647, -14.3555, 0.59 ) }
    dend_12 { pt3dadd( -77.7251, -26.3027, -14.4888, 0.29 ) }
    dend_12 { pt3dadd( -78.6381, -26.8929, -14.5702, 0.29 ) }
    dend_12 { pt3dadd( -79.9356, -27.7606, -14.6203, 0.07 ) }
    dend_12 { pt3dadd( -80.9618, -28.4734, -14.6156, 1.69 ) }
    dend_12 { pt3dadd( -81.5677, -28.9136, -14.5974, 1.76 ) }
    dend_12 { pt3dadd( -82.7927, -29.8207, -14.5596, 0.07 ) }
    dend_12 { pt3dadd( -83.8627, -30.6204, -14.5291, 0.15 ) }
    dend_12 { pt3dadd( -84.3861, -31.0166, -14.5279, 0.15 ) }
    dend_12 { pt3dadd( -85.2698, -31.6983, -14.5563, 1.32 ) }
    dend_12 { pt3dadd( -86.1032, -32.331, -14.6207, 1.32 ) }
    dend_12 { pt3dadd( -87.1006, -33.061, -14.7372, 0.07 ) }
    dend_12 { pt3dadd( -88.1405, -33.7802, -14.901, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( -89.1032, -34.385, -15.057, 1.84 ) }
    dend_12 { pt3dadd( -89.8447, -34.8056, -15.1606, 1.84 ) }
    dend_12 { pt3dadd( -91.0088, -35.4063, -15.2946, 0.07 ) }
    dend_12 { pt3dadd( -91.8826, -35.8203, -15.3907, 0.37 ) }
    dend_12 { pt3dadd( -93.0929, -36.3423, -15.5091, 0.07 ) }
    dend_12 { pt3dadd( -94.4231, -36.8702, -15.6306, 1.91 ) }
    dend_12 { pt3dadd( -94.9607, -37.0755, -15.6735, 1.91 ) }
    dend_12 { pt3dadd( -96.1625, -37.5459, -15.7742, 0.51 ) }
    dend_12 { pt3dadd( -97.1541, -37.9383, -15.8723, 0.15 ) }
    dend_12 { pt3dadd( -97.8435, -38.2267, -15.9484, 0.15 ) }
    dend_12 { pt3dadd( -98.408, -38.4793, -16.0188, 0.44 ) }
    dend_12 { pt3dadd( -99.2917, -38.9216, -16.1597, 0.07 ) }
    dend_12 { pt3dadd( -100.05, -39.3219, -16.285, 1.03 ) }
    dend_12 { pt3dadd( -100.492, -39.5707, -16.3624, 1.25 ) }
    dend_12 { pt3dadd( -101.465, -40.1724, -16.5417, 0.59 ) }
    dend_12 { pt3dadd( -102.344, -40.7506, -16.7238, 1.03 ) }
    dend_12 { pt3dadd( -102.961, -41.15, -16.8567, 1.54 ) }
    dend_12 { pt3dadd( -104.129, -41.9009, -17.1292, 0.07 ) }
    dend_12 { pt3dadd( -104.763, -42.3149, -17.2756, 0.07 ) }
    dend_12 { pt3dadd( -105.675, -42.9192, -17.4907, 0.07 ) }
    dend_12 { pt3dadd( -105.927, -43.0829, -17.5481, 1.1 ) }
    dend_12 { pt3dadd( -106.6, -43.5063, -17.698, 1.32 ) }
    dend_12 { pt3dadd( -107.428, -44.0203, -17.8863, 0.07 ) }
    dend_12 { pt3dadd( -108.109, -44.4402, -18.0427, 0.07 ) }
    dend_12 { pt3dadd( -108.856, -44.8903, -18.233, 1.32 ) }
    dend_12 { pt3dadd( -109.425, -45.2482, -18.3969, 1.32 ) }
    dend_12 { pt3dadd( -110.687, -46.1256, -18.8337, 0.07 ) }
    dend_12 { pt3dadd( -110.978, -46.3521, -18.9409, 0.51 ) }
    dend_12 { pt3dadd( -111.742, -46.9924, -19.2238, 0.07 ) }
    dend_12 { pt3dadd( -112.169, -47.3865, -19.394, 0.95 ) }
    dend_12 { pt3dadd( -112.59, -47.847, -19.5643, 1.32 ) }
    dend_12 { pt3dadd( -113.493, -48.9717, -19.9257, 0.07 ) }
    dend_12 { pt3dadd( -114.112, -49.8527, -20.141, 1.62 ) }
    dend_12 { pt3dadd( -114.47, -50.3871, -20.2455, 2.06 ) }
    dend_12 { pt3dadd( -114.726, -50.7898, -20.2891, 1.91 ) }
    dend_12 { pt3dadd( -115.359, -51.7745, -20.3106, 0.73 ) }
    dend_12 { pt3dadd( -115.756, -52.3869, -20.2707, 0.07 ) }
    dend_12 { pt3dadd( -116.296, -53.2328, -20.1285, 0.73 ) }
    dend_12 { pt3dadd( -116.965, -54.2488, -19.9305, 0.07 ) }
    dend_12 { pt3dadd( -117.668, -55.2816, -19.7177, 1.54 ) }
    dend_12 { pt3dadd( -118.439, -56.3465, -19.478, 0.07 ) }
    dend_12 { pt3dadd( -119.12, -57.2161, -19.2759, 0.07 ) }
    dend_12 { pt3dadd( -119.792, -58.024, -19.0775, 0.07 ) }
    dend_12 { pt3dadd( -120.331, -58.6116, -18.9264, 1.69 ) }
    dend_12 { pt3dadd( -121.005, -59.2729, -18.7452, 1.91 ) }
    dend_12 { pt3dadd( -122.077, -60.2302, -18.4994, 0.07 ) }
    dend_12 { pt3dadd( -122.706, -60.7266, -18.3676, 0.37 ) }
    dend_12 { pt3dadd( -123.719, -61.4351, -18.1887, 0.15 ) }
    dend_12 { pt3dadd( -124.376, -61.8357, -18.0965, 0.15 ) }
    dend_12 { pt3dadd( -125.264, -62.333, -17.9767, 1.69 ) }
    dend_12 { pt3dadd( -126.103, -62.7536, -17.886, 0.88 ) }
    dend_12 { pt3dadd( -127.217, -63.2769, -17.8663, 0.07 ) }
    dend_12 { pt3dadd( -127.769, -63.527, -17.8988, 0.44 ) }
    dend_12 { pt3dadd( -128.831, -63.9875, -18.0584, 0.07 ) }
    dend_12 { pt3dadd( -129.231, -64.1544, -18.1403, 0.73 ) }
    dend_12 { pt3dadd( -129.711, -64.3315, -18.2598, 1.03 ) }
    dend_12 { pt3dadd( -130.961, -64.749, -18.5833, 0.07 ) }
    dend_12 { pt3dadd( -131.601, -64.9673, -18.7575, 0.81 ) }
    dend_12 { pt3dadd( -132.329, -65.2445, -18.9728, 0.07 ) }
    dend_12 { pt3dadd( -133.192, -65.6284, -19.2427, 0.07 ) }
    dend_12 { pt3dadd( -134.096, -66.0968, -19.5453, 1.84 ) }
    dend_12 { pt3dadd( -134.369, -66.2625, -19.6421, 1.84 ) }
    dend_12 { pt3dadd( -135.511, -67.0602, -20.0602, 0.07 ) }
    dend_12 { pt3dadd( -136.156, -67.5939, -20.3095, 0.37 ) }
    dend_12 { pt3dadd( -136.707, -68.1327, -20.5274, 0.07 ) }
    dend_12 { pt3dadd( -137.346, -68.7987, -20.7881, 1.32 ) }
    dend_12 { pt3dadd( -137.711, -69.2103, -20.9284, 1.03 ) }
    dend_12 { pt3dadd( -138.317, -69.8938, -21.1424, 0.22 ) }
    dend_12 { pt3dadd( -139.088, -70.7153, -21.3837, 0.07 ) }
    dend_12 { pt3dadd( -139.734, -71.3555, -21.5728, 0.81 ) }
    dend_12 { pt3dadd( -140.457, -72.061, -21.7784, 1.25 ) }
    dend_12 { pt3dadd( -141.197, -72.7655, -21.9844, 1.25 ) }
    dend_12 { pt3dadd( -142.393, -73.8734, -22.3107, 0.07 ) }
    dend_12 { pt3dadd( -143.572, -74.932, -22.6196, 0.07 ) }
    dend_12 { pt3dadd( -144.259, -75.5179, -22.796, 1.69 ) }
    dend_12 { pt3dadd( -144.853, -76.0024, -22.9354, 1.69 ) }
    dend_12 { pt3dadd( -145.731, -76.6995, -23.1175, 0.07 ) }
    dend_12 { pt3dadd( -146.312, -77.11, -23.2296, 0.95 ) }
    dend_12 { pt3dadd( -147.014, -77.5743, -23.3476, 0.15 ) }
    dend_12 { pt3dadd( -147.197, -77.6908, -23.3744, 0.51 ) }
    dend_12 { pt3dadd( -147.924, -78.1475, -23.4971, 0.07 ) }
    dend_12 { pt3dadd( -148.44, -78.4789, -23.6233, 0.07 ) }
    dend_12 { pt3dadd( -148.976, -78.8388, -23.7875, 1.1 ) }
    dend_12 { pt3dadd( -149.454, -79.1765, -23.9532, 1.47 ) }
    dend_12 { pt3dadd( -149.979, -79.5814, -24.1485, 1.32 ) }
    dend_12 { pt3dadd( -150.751, -80.2286, -24.4588, 0.07 ) }
    dend_12 { pt3dadd( -151.394, -80.8069, -24.7256, 0.07 ) }
    dend_12 { pt3dadd( -152.278, -81.6462, -25.075, 0.07 ) }
    dend_12 { pt3dadd( -152.655, -82.0224, -25.2112, 1.25 ) }
    dend_12 { pt3dadd( -153.235, -82.6316, -25.3996, 1.76 ) }
    dend_12 { pt3dadd( -154.106, -83.5506, -25.6604, 0.07 ) }
    dend_12 { pt3dadd( -154.559, -84.0345, -25.7735, 0.44 ) }
    dend_12 { pt3dadd( -155.229, -84.74, -25.8898, 0.07 ) }
    dend_12 { pt3dadd( -155.99, -85.4794, -25.9758, 1.03 ) }
    dend_12 { pt3dadd( -156.867, -86.2262, -26.0433, 0.07 ) }
    dend_12 { pt3dadd( -157.519, -86.7019, -26.0435, 0.51 ) }
    dend_12 { pt3dadd( -158.043, -87.0424, -26.0101, 0.07 ) }
    dend_12 { pt3dadd( -159.249, -87.7301, -25.909, 0.07 ) }
    dend_12 { pt3dadd( -160.216, -88.2098, -25.8197, 1.47 ) }
    dend_12 { pt3dadd( -161.7, -88.8138, -25.7025, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_12 { pt3dadd( -162.755, -89.1707, -25.6388, 1.4 ) }
    dend_12 { pt3dadd( -163.365, -89.3545, -25.6075, 1.62 ) }
    dend_12 { pt3dadd( -164.507, -89.6509, -25.5984, 0.07 ) }
    dend_12 { pt3dadd( -165.283, -89.8268, -25.6406, 0.95 ) }
    dend_12 { pt3dadd( -166.586, -90.094, -25.7773, 0.07 ) }
    dend_12 { pt3dadd( -167.676, -90.2629, -25.9125, 0.07 ) }
    dend_12 { pt3dadd( -168.568, -90.3938, -26.0445, 1.47 ) }
    dend_12 { pt3dadd( -169.441, -90.4991, -26.1662, 1.32 ) }
    dend_12 { pt3dadd( -170.601, -90.6244, -26.3106, 0.22 ) }
    dend_12 { pt3dadd( -171.804, -90.7253, -26.456, 0.22 ) }
    dend_12 { pt3dadd( -172.773, -90.7899, -26.5655, 1.69 ) }
    dend_12 { pt3dadd( -173.691, -90.7992, -26.6991, 0.07 ) }
    dend_12 { pt3dadd( -174.513, -90.7577, -26.8187, 0.07 ) }
    dend_12 { pt3dadd( -175.038, -90.6949, -26.8785, 0.51 ) }
    dend_12 { pt3dadd( -176.269, -90.4937, -27.0077, 0.07 ) }
    dend_12 { pt3dadd( -176.493, -90.4444, -27.0331, 0.59 ) }
    dend_12 { pt3dadd( -177.563, -90.1472, -27.1914, 0.07 ) }
    dend_12 { pt3dadd( -178.426, -89.8345, -27.3336, 1.18 ) }
    dend_12 { pt3dadd( -179.236, -89.497, -27.4655, 1.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 19/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -18.0298, 7.43099, -2.49102, 0.37 ) }
    dend_11 { pt3dadd( -18.3355, 7.85444, -2.6219, 0.37 ) }
    dend_11 { pt3dadd( -18.6095, 8.23364, -2.74994, 0.37 ) }
    dend_11 { pt3dadd( -18.9852, 8.74058, -2.95595, 0.73 ) }
    dend_11 { pt3dadd( -19.3292, 9.19769, -3.16894, 1.03 ) }
    dend_11 { pt3dadd( -19.5395, 9.47337, -3.30806, 1.1 ) }
    dend_11 { pt3dadd( -19.7822, 9.79531, -3.4748, 0.95 ) }
    dend_11 { pt3dadd( -20.1125, 10.2271, -3.71527, 0.95 ) }
    dend_11 { pt3dadd( -20.6225, 10.904, -4.09898, 1.25 ) }
    dend_11 { pt3dadd( -21.0577, 11.4905, -4.42419, 1.62 ) }
    dend_11 { pt3dadd( -21.5573, 12.1656, -4.77931, 1.76 ) }
    dend_11 { pt3dadd( -21.9591, 12.7007, -5.04019, 1.32 ) }
    dend_11 { pt3dadd( -22.6129, 13.5947, -5.40749, 0.95 ) }
    dend_11 { pt3dadd( -22.8761, 13.9745, -5.53034, 0.95 ) }
    dend_11 { pt3dadd( -23.1959, 14.4533, -5.63388, 0.95 ) }
    dend_11 { pt3dadd( -23.4684, 14.8752, -5.69137, 0.88 ) }
    dend_11 { pt3dadd( -23.8328, 15.4519, -5.73191, 0.73 ) }
    dend_11 { pt3dadd( -24.4982, 16.5201, -5.75891, 0.22 ) }
    dend_11 { pt3dadd( -24.9459, 17.2698, -5.73889, 0.51 ) }
    dend_11 { pt3dadd( -25.375, 18.026, -5.70761, 1.76 ) }
    dend_11 { pt3dadd( -25.5809, 18.4027, -5.68486, 1.47 ) }
    dend_11 { pt3dadd( -26.0734, 19.3381, -5.6185, 0.29 ) }
    dend_11 { pt3dadd( -26.2267, 19.6416, -5.59586, 0.07 ) }
    dend_11 { pt3dadd( -26.661, 20.4818, -5.53387, 0.95 ) }
    dend_11 { pt3dadd( -26.9819, 21.0756, -5.50158, 1.62 ) }
    dend_11 { pt3dadd( -27.3679, 21.7491, -5.48449, 1.62 ) }
    dend_11 { pt3dadd( -27.7783, 22.409, -5.48314, 0.95 ) }
    dend_11 { pt3dadd( -28.3024, 23.2199, -5.50377, 0.44 ) }
    dend_11 { pt3dadd( -28.6652, 23.767, -5.53244, 0.44 ) }
    dend_11 { pt3dadd( -29.117, 24.4307, -5.58794, 1.25 ) }
    dend_11 { pt3dadd( -29.4955, 24.9832, -5.6447, 1.69 ) }
    dend_11 { pt3dadd( -29.863, 25.5285, -5.70923, 0.95 ) }
    dend_11 { pt3dadd( -30.4121, 26.3804, -5.80942, 0.37 ) }
    dend_11 { pt3dadd( -30.6969, 26.8788, -5.86855, 0.07 ) }
    dend_11 { pt3dadd( -30.9372, 27.3919, -5.92638, 1.03 ) }
    dend_11 { pt3dadd( -31.1796, 28.0662, -5.99253, 0.59 ) }
    dend_11 { pt3dadd( -31.4014, 28.9047, -6.07538, 0.59 ) }
    dend_11 { pt3dadd( -31.5525, 29.6588, -6.15878, 0.44 ) }
    dend_11 { pt3dadd( -31.6762, 30.458, -6.27936, 2.28 ) }
    dend_11 { pt3dadd( -31.7538, 31.1499, -6.41914, 2.28 ) }
    dend_11 { pt3dadd( -31.783, 31.9948, -6.65324, 1.03 ) }
    dend_11 { pt3dadd( -31.741, 32.8751, -6.95967, 1.1 ) }
    dend_11 { pt3dadd( -31.6707, 33.3838, -7.17618, 0.81 ) }
    dend_11 { pt3dadd( -31.541, 33.9796, -7.47238, 0.81 ) }
    dend_11 { pt3dadd( -31.3968, 34.4798, -7.75099, 0.81 ) }
    dend_11 { pt3dadd( -31.0131, 35.5304, -8.41225, 0.59 ) }
    dend_11 { pt3dadd( -30.8163, 36.0119, -8.73816, 0.59 ) }
    dend_11 { pt3dadd( -30.5843, 36.5399, -9.10536, 1.32 ) }
    dend_11 { pt3dadd( -30.277, 37.2558, -9.58542, 2.28 ) }
    dend_11 { pt3dadd( -30.1861, 37.4874, -9.72936, 2.28 ) }
    dend_11 { pt3dadd( -29.9467, 38.2206, -10.1516, 1.4 ) }
    dend_11 { pt3dadd( -29.723, 39.1261, -10.6433, 0.37 ) }
    dend_11 { pt3dadd( -29.662, 39.4959, -10.835, 0.37 ) }
    dend_11 { pt3dadd( -29.6329, 39.9246, -11.0445, 1.18 ) }
    dend_11 { pt3dadd( -29.6302, 40.4001, -11.2605, 1.18 ) }
    dend_11 { pt3dadd( -29.641, 40.8763, -11.4601, 1.4 ) }
    dend_11 { pt3dadd( -29.6561, 41.2305, -11.5979, 1.47 ) }
    dend_11 { pt3dadd( -29.664, 41.65, -11.7618, 1.1 ) }
    dend_11 { pt3dadd( -29.6714, 42.3706, -12.0551, 0.15 ) }
    dend_11 { pt3dadd( -29.6821, 42.961, -12.3031, 0.15 ) }
    dend_11 { pt3dadd( -29.7027, 43.6586, -12.5941, 1.69 ) }
    dend_11 { pt3dadd( -29.7184, 44.1015, -12.7722, 1.76 ) }
    dend_11 { pt3dadd( -29.7467, 44.9741, -13.0781, 0.22 ) }
    dend_11 { pt3dadd( -29.7475, 45.5401, -13.2474, 0.29 ) }
    dend_11 { pt3dadd( -29.74, 46.0938, -13.3844, 0.29 ) }
    dend_11 { pt3dadd( -29.7186, 46.7059, -13.4974, 0.37 ) }
    dend_11 { pt3dadd( -29.6767, 47.369, -13.5719, 1.18 ) }
    dend_11 { pt3dadd( -29.5904, 48.1349, -13.5959, 0.22 ) }
    dend_11 { pt3dadd( -29.4406, 49.0677, -13.5703, 0.22 ) }
    dend_11 { pt3dadd( -29.3681, 49.4218, -13.5514, 0.22 ) }
    dend_11 { pt3dadd( -29.2142, 50.0624, -13.5115, 1.62 ) }
    dend_11 { pt3dadd( -29.1142, 50.4574, -13.4798, 2.42 ) }
    dend_11 { pt3dadd( -28.7645, 51.8489, -13.3478, 0.22 ) }
    dend_11 { pt3dadd( -28.6511, 52.3313, -13.3035, 0.22 ) }
    dend_11 { pt3dadd( -28.5727, 52.7019, -13.2676, 0.95 ) }
    dend_11 { pt3dadd( -28.5081, 53.0151, -13.2442, 0.95 ) }
    dend_11 { pt3dadd( -28.3359, 53.902, -13.2035, 0.15 ) }
    dend_11 { pt3dadd( -28.1667, 54.8206, -13.1605, 0.15 ) }
    dend_11 { pt3dadd( -28.0859, 55.3276, -13.1416, 0.15 ) }
    dend_11 { pt3dadd( -27.9878, 56.038, -13.1225, 0.15 ) }
    dend_11 { pt3dadd( -27.9053, 56.7368, -13.1127, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_11 { pt3dadd( -27.8507, 57.2593, -13.1189, 3.16 ) }
    dend_11 { pt3dadd( -27.8024, 57.7939, -13.1439, 3.16 ) }
    dend_11 { pt3dadd( -27.6931, 59.3147, -13.2477, 0.73 ) }
    dend_11 { pt3dadd( -27.6254, 60.6247, -13.3512, 0.59 ) }
    dend_11 { pt3dadd( -27.6072, 61.3399, -13.4199, 0.22 ) }
    dend_11 { pt3dadd( -27.6133, 62.0642, -13.5132, 0.07 ) }
    dend_11 { pt3dadd( -27.634, 62.7318, -13.6236, 1.1 ) }
    dend_11 { pt3dadd( -27.6577, 63.1368, -13.7054, 1.1 ) }
    dend_11 { pt3dadd( -27.6979, 63.5325, -13.7955, 1.1 ) }
    dend_11 { pt3dadd( -27.822, 64.4706, -14.0452, 0.15 ) }
    dend_11 { pt3dadd( -27.9505, 65.3331, -14.2747, 0.15 ) }
    dend_11 { pt3dadd( -28.0469, 65.8823, -14.4168, 0.95 ) }
    dend_11 { pt3dadd( -28.1789, 66.6029, -14.5908, 1.62 ) }
    dend_11 { pt3dadd( -28.3046, 67.2955, -14.7413, 1.62 ) }
    dend_11 { pt3dadd( -28.4731, 68.1673, -14.9068, 0.07 ) }
    dend_11 { pt3dadd( -28.5837, 68.6919, -14.9876, 0.95 ) }
    dend_11 { pt3dadd( -28.653, 69.0068, -15.0219, 0.95 ) }
    dend_11 { pt3dadd( -28.8419, 69.8469, -15.093, 0.07 ) }
    dend_11 { pt3dadd( -29.0613, 70.8395, -15.1549, 0.07 ) }
    dend_11 { pt3dadd( -29.1411, 71.1972, -15.1683, 1.18 ) }
    dend_11 { pt3dadd( -29.2551, 71.6809, -15.1862, 1.18 ) }
    dend_11 { pt3dadd( -29.4823, 72.5868, -15.2426, 0.15 ) }
    dend_11 { pt3dadd( -29.6077, 73.0828, -15.2789, 0.88 ) }
    dend_11 { pt3dadd( -29.7123, 73.4749, -15.3118, 0.88 ) }
    dend_11 { pt3dadd( -29.7837, 73.7307, -15.3404, 0.07 ) }
    dend_11 { pt3dadd( -30.0301, 74.6099, -15.452, 0.07 ) }
    dend_11 { pt3dadd( -30.1859, 75.1919, -15.5367, 1.18 ) }
    dend_11 { pt3dadd( -30.2992, 75.6277, -15.6056, 1.62 ) }
    dend_11 { pt3dadd( -30.3878, 75.9746, -15.6661, 1.62 ) }
    dend_11 { pt3dadd( -30.7586, 77.433, -15.9263, 0.07 ) }
    dend_11 { pt3dadd( -30.8988, 78.0006, -16.0299, 0.07 ) }
    dend_11 { pt3dadd( -31.0072, 78.4513, -16.1233, 1.18 ) }
    dend_11 { pt3dadd( -31.1107, 78.8951, -16.2267, 1.18 ) }
    dend_11 { pt3dadd( -31.2475, 79.5324, -16.4035, 0.15 ) }
    dend_11 { pt3dadd( -31.402, 80.3272, -16.6535, 0.15 ) }
    dend_11 { pt3dadd( -31.5074, 80.9692, -16.8801, 1.69 ) }
    dend_11 { pt3dadd( -31.5847, 81.4604, -17.0728, 2.06 ) }
    dend_11 { pt3dadd( -31.6138, 81.6429, -17.1503, 2.06 ) }
    dend_11 { pt3dadd( -31.7748, 82.6363, -17.6107, 0.44 ) }
    dend_11 { pt3dadd( -31.9094, 83.4513, -18.0092, 0.59 ) }
    dend_11 { pt3dadd( -32.0442, 84.3021, -18.4458, 0.22 ) }
    dend_11 { pt3dadd( -32.1862, 85.2246, -18.9237, 0.59 ) }
    dend_11 { pt3dadd( -32.2423, 85.5846, -19.1133, 0.22 ) }
    dend_11 { pt3dadd( -32.3332, 86.1515, -19.4229, 1.76 ) }
    dend_11 { pt3dadd( -32.429, 86.72, -19.7326, 2.06 ) }
    dend_11 { pt3dadd( -32.6064, 87.8596, -20.3625, 0.22 ) }
    dend_11 { pt3dadd( -32.74, 88.7963, -20.8615, 0.66 ) }
    dend_11 { pt3dadd( -32.8057, 89.3143, -21.1262, 0.66 ) }
    dend_11 { pt3dadd( -32.8991, 90.2322, -21.568, 1.91 ) }
    dend_11 { pt3dadd( -32.983, 91.1406, -21.9727, 1.25 ) }
    dend_11 { pt3dadd( -33.056, 91.9309, -22.3021, 0.07 ) }
    dend_11 { pt3dadd( -33.1049, 92.4994, -22.5186, 0.07 ) }
    dend_11 { pt3dadd( -33.1665, 93.3212, -22.7863, 1.54 ) }
    dend_11 { pt3dadd( -33.2281, 94.1709, -23.021, 0.15 ) }
    dend_11 { pt3dadd( -33.3093, 95.078, -23.2404, 0.15 ) }
    dend_11 { pt3dadd( -33.3718, 95.6473, -23.3737, 1.1 ) }
    dend_11 { pt3dadd( -33.4687, 96.3621, -23.5307, 2.28 ) }
    dend_11 { pt3dadd( -33.6923, 97.7285, -23.8307, 0.29 ) }
    dend_11 { pt3dadd( -33.8215, 98.4425, -23.9762, 0.88 ) }
    dend_11 { pt3dadd( -34.0155, 99.461, -24.1808, 0.07 ) }
    dend_11 { pt3dadd( -34.1348, 100.157, -24.3245, 1.62 ) }
    dend_11 { pt3dadd( -34.2023, 100.609, -24.4167, 1.62 ) }
    dend_11 { pt3dadd( -34.2456, 101.064, -24.5091, 1.1 ) }
    dend_11 { pt3dadd( -34.2697, 102.11, -24.732, 0.07 ) }
    dend_11 { pt3dadd( -34.2418, 102.558, -24.8258, 0.07 ) }
    dend_11 { pt3dadd( -34.1441, 103.397, -25.0019, 1.54 ) }
    dend_11 { pt3dadd( -34.0661, 103.993, -25.1242, 2.13 ) }
    dend_11 { pt3dadd( -33.8414, 105.605, -25.4611, 0.22 ) }
    dend_11 { pt3dadd( -33.7879, 105.974, -25.5427, 0.22 ) }
    dend_11 { pt3dadd( -33.6581, 106.935, -25.7675, 0.81 ) }
    dend_11 { pt3dadd( -33.5892, 107.572, -25.9143, 0.07 ) }
    dend_11 { pt3dadd( -33.5498, 108.152, -26.0454, 0.37 ) }
    dend_11 { pt3dadd( -33.5408, 108.594, -26.167, 0.07 ) }
    dend_11 { pt3dadd( -33.5501, 108.948, -26.2754, 0.07 ) }
    dend_11 { pt3dadd( -33.5836, 109.573, -26.4693, 1.62 ) }
    dend_11 { pt3dadd( -33.6228, 110.15, -26.6551, 2.28 ) }
    dend_11 { pt3dadd( -33.6691, 110.808, -26.8805, 1.47 ) }
    dend_11 { pt3dadd( -33.767, 111.948, -27.2932, 0.29 ) }
    dend_11 { pt3dadd( -33.8502, 112.619, -27.5381, 0.44 ) }
    dend_11 { pt3dadd( -33.9443, 113.158, -27.729, 0.07 ) }
    dend_11 { pt3dadd( -34.0908, 113.795, -27.9506, 1.32 ) }
    dend_11 { pt3dadd( -34.3861, 114.876, -28.3047, 0.07 ) }
    dend_11 { pt3dadd( -34.5478, 115.363, -28.448, 1.25 ) }
    dend_11 { pt3dadd( -34.7131, 115.786, -28.5524, 1.25 ) }
    dend_11 { pt3dadd( -35.0758, 116.639, -28.7301, 0.22 ) }
    dend_11 { pt3dadd( -35.3168, 117.192, -28.8173, 0.51 ) }
    dend_11 { pt3dadd( -35.4465, 117.525, -28.8527, 0.07 ) }
    dend_11 { pt3dadd( -35.6066, 118.053, -28.8886, 0.29 ) }
    dend_11 { pt3dadd( -35.7179, 118.619, -28.9287, 0.07 ) }
    dend_11 { pt3dadd( -35.8061, 119.62, -29.0296, 2.5 ) }
    dend_11 { pt3dadd( -35.791, 120.221, -29.1294, 2.35 ) }
    dend_11 { pt3dadd( -35.6718, 121.309, -29.3663, 0.07 ) }
    dend_11 { pt3dadd( -35.5618, 121.923, -29.5234, 0.07 ) }
    dend_11 { pt3dadd( -35.4288, 122.428, -29.6747, 0.07 ) }
    dend_11 { pt3dadd( -35.2312, 123.025, -29.8813, 1.62 ) }
    dend_11 { pt3dadd( -34.8533, 124.065, -30.2866, 0.07 ) }
    dend_11 { pt3dadd( -34.7008, 124.51, -30.4615, 0.37 ) }
    dend_11 { pt3dadd( -34.6221, 124.777, -30.565, 0.37 ) }
    dend_11 { pt3dadd( -34.4605, 125.483, -30.8207, 0.07 ) }
    dend_11 { pt3dadd( -34.3696, 125.976, -30.9811, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -34.2277, 126.876, -31.2384, 0.07 ) }
    dend_11 { pt3dadd( -34.1643, 127.414, -31.3749, 0.07 ) }
    dend_11 { pt3dadd( -34.1002, 128.31, -31.6, 1.98 ) }
    dend_11 { pt3dadd( -34.0501, 129.522, -31.8992, 0.07 ) }
    dend_11 { pt3dadd( -34.0469, 130.173, -32.0507, 0.07 ) }
    dend_11 { pt3dadd( -34.0671, 130.982, -32.2378, 1.4 ) }
    dend_11 { pt3dadd( -34.1344, 131.832, -32.4342, 0.07 ) }
    dend_11 { pt3dadd( -34.2275, 132.467, -32.5829, 0.22 ) }
    dend_11 { pt3dadd( -34.351, 133.023, -32.7092, 0.07 ) }
    dend_11 { pt3dadd( -34.5706, 133.759, -32.8838, 1.76 ) }
    dend_11 { pt3dadd( -34.716, 134.161, -32.9921, 1.76 ) }
    dend_11 { pt3dadd( -35.1784, 135.254, -33.3078, 0.07 ) }
    dend_11 { pt3dadd( -35.455, 135.85, -33.4886, 1.1 ) }
    dend_11 { pt3dadd( -35.7627, 136.496, -33.6841, 0.07 ) }
    dend_11 { pt3dadd( -36.032, 137.041, -33.8541, 0.07 ) }
    dend_11 { pt3dadd( -36.2671, 137.523, -34.0406, 0.95 ) }
    dend_11 { pt3dadd( -36.4506, 137.918, -34.2099, 0.95 ) }
    dend_11 { pt3dadd( -36.67, 138.429, -34.4794, 0.07 ) }
    dend_11 { pt3dadd( -36.8413, 138.851, -34.725, 0.07 ) }
    dend_11 { pt3dadd( -37.0401, 139.359, -35.0263, 1.54 ) }
    dend_11 { pt3dadd( -37.456, 140.393, -35.6312, 0.29 ) }
    dend_11 { pt3dadd( -37.5812, 140.695, -35.8008, 1.18 ) }
    dend_11 { pt3dadd( -37.9541, 141.59, -36.2803, 0.15 ) }
    dend_11 { pt3dadd( -38.1944, 142.118, -36.5563, 0.15 ) }
    dend_11 { pt3dadd( -38.5398, 142.806, -36.9058, 2.06 ) }
    dend_11 { pt3dadd( -38.9912, 143.676, -37.3399, 0.15 ) }
    dend_11 { pt3dadd( -39.2218, 144.122, -37.5604, 0.51 ) }
    dend_11 { pt3dadd( -39.4803, 144.612, -37.8354, 0.07 ) }
    dend_11 { pt3dadd( -39.7895, 145.22, -38.1964, 1.69 ) }
    dend_11 { pt3dadd( -40.1926, 146.038, -38.7634, 0.29 ) }
    dend_11 { pt3dadd( -40.5116, 146.717, -39.2927, 0.07 ) }
    dend_11 { pt3dadd( -40.7379, 147.209, -39.6899, 1.4 ) }
    dend_11 { pt3dadd( -41.0951, 147.937, -40.2823, 1.4 ) }
    dend_11 { pt3dadd( -41.269, 148.266, -40.544, 2.06 ) }
    dend_11 { pt3dadd( -41.7916, 149.237, -41.2582, 0.22 ) }
    dend_11 { pt3dadd( -42.056, 149.685, -41.5595, 0.88 ) }
    dend_11 { pt3dadd( -42.3942, 150.2, -41.8688, 0.07 ) }
    dend_11 { pt3dadd( -42.8581, 150.821, -42.1953, 0.07 ) }
    dend_11 { pt3dadd( -43.2498, 151.3, -42.4145, 1.54 ) }
    dend_11 { pt3dadd( -43.4123, 151.491, -42.4917, 1.69 ) }
    dend_11 { pt3dadd( -44.1869, 152.423, -42.7826, 0.07 ) }
    dend_11 { pt3dadd( -44.5046, 152.845, -42.9069, 0.07 ) }
    dend_11 { pt3dadd( -44.982, 153.549, -43.1133, 0.07 ) }
    dend_11 { pt3dadd( -45.2011, 153.911, -43.2122, 0.07 ) }
    dend_11 { pt3dadd( -45.4666, 154.394, -43.3319, 1.18 ) }
    dend_11 { pt3dadd( -45.6798, 154.815, -43.4296, 1.84 ) }
    dend_11 { pt3dadd( -46.1798, 155.884, -43.643, 0.07 ) }
    dend_11 { pt3dadd( -46.3721, 156.316, -43.7355, 0.07 ) }
    dend_11 { pt3dadd( -46.54, 156.693, -43.8234, 1.32 ) }
    dend_11 { pt3dadd( -46.6871, 156.991, -43.8962, 1.32 ) }
    dend_11 { pt3dadd( -47.1014, 157.746, -44.0828, 0.15 ) }
    dend_11 { pt3dadd( -47.5131, 158.441, -44.251, 0.15 ) }
    dend_11 { pt3dadd( -47.7961, 158.894, -44.3698, 0.15 ) }
    dend_11 { pt3dadd( -48.0987, 159.373, -44.513, 0.95 ) }
    dend_11 { pt3dadd( -48.2179, 159.553, -44.5725, 1.25 ) }
    dend_11 { pt3dadd( -48.4158, 159.849, -44.6698, 0.73 ) }
    dend_11 { pt3dadd( -48.7695, 160.397, -44.8394, 0.07 ) }
    dend_11 { pt3dadd( -49.1259, 161.026, -45.0112, 0.07 ) }
    dend_11 { pt3dadd( -49.4288, 161.623, -45.1423, 0.37 ) }
    dend_11 { pt3dadd( -49.6329, 162.069, -45.2188, 0.07 ) }
    dend_11 { pt3dadd( -49.9235, 162.733, -45.3215, 2.2 ) }
    dend_11 { pt3dadd( -50.1103, 163.213, -45.4077, 1.84 ) }
    dend_11 { pt3dadd( -50.4903, 164.384, -45.63, 0.07 ) }
    dend_11 { pt3dadd( -50.7415, 165.291, -45.8236, 0.07 ) }
    dend_11 { pt3dadd( -50.8728, 165.859, -45.9682, 0.73 ) }
    dend_11 { pt3dadd( -50.9773, 166.386, -46.1227, 1.47 ) }
    dend_11 { pt3dadd( -51.1793, 167.543, -46.5101, 0.07 ) }
    dend_11 { pt3dadd( -51.2531, 167.958, -46.6657, 0.29 ) }
    dend_11 { pt3dadd( -51.3449, 168.469, -46.8751, 0.07 ) }
    dend_11 { pt3dadd( -51.4364, 168.978, -47.0968, 0.66 ) }
    dend_11 { pt3dadd( -51.5339, 169.516, -47.3327, 0.07 ) }
    dend_11 { pt3dadd( -51.6586, 170.114, -47.5718, 0.07 ) }
    dend_11 { pt3dadd( -51.8269, 170.747, -47.7972, 1.84 ) }
    dend_11 { pt3dadd( -51.9228, 171.077, -47.9216, 1.84 ) }
    dend_11 { pt3dadd( -51.9807, 171.289, -48.0081, 1.84 ) }
    dend_11 { pt3dadd( -52.1833, 172.072, -48.3796, 0.07 ) }
    dend_11 { pt3dadd( -52.2973, 172.524, -48.602, 0.07 ) }
    dend_11 { pt3dadd( -52.4076, 172.986, -48.8389, 1.32 ) }
    dend_11 { pt3dadd( -52.5602, 173.632, -49.157, 0.07 ) }
    dend_11 { pt3dadd( -52.759, 174.381, -49.5114, 1.1 ) }
    dend_11 { pt3dadd( -52.9398, 175.03, -49.7979, 0.07 ) }
    dend_11 { pt3dadd( -53.1386, 175.726, -50.0826, 1.4 ) }
    dend_11 { pt3dadd( -53.199, 175.949, -50.167, 1.76 ) }
    dend_11 { pt3dadd( -53.468, 176.972, -50.503, 0.15 ) }
    dend_11 { pt3dadd( -53.5939, 177.44, -50.6215, 0.44 ) }
    dend_11 { pt3dadd( -53.7311, 177.935, -50.7142, 0.07 ) }
    dend_11 { pt3dadd( -53.8762, 178.485, -50.7987, 0.07 ) }
    dend_11 { pt3dadd( -54.059, 179.196, -50.8989, 1.25 ) }
    dend_11 { pt3dadd( -54.1278, 179.48, -50.9331, 1.76 ) }
    dend_11 { pt3dadd( -54.3687, 180.521, -51.0319, 0.07 ) }
    dend_11 { pt3dadd( -54.5666, 181.342, -51.0953, 0.15 ) }
    dend_11 { pt3dadd( -54.7738, 182.143, -51.1417, 1.47 ) }
    dend_11 { pt3dadd( -54.8758, 182.538, -51.1557, 1.1 ) }
    dend_11 { pt3dadd( -55.0844, 183.274, -51.171, 0.15 ) }
    dend_11 { pt3dadd( -55.2815, 183.962, -51.1842, 0.07 ) }
    dend_11 { pt3dadd( -55.5111, 184.728, -51.1867, 0.37 ) }
    dend_11 { pt3dadd( -55.7495, 185.514, -51.167, 0.07 ) }
    dend_11 { pt3dadd( -55.9316, 186.109, -51.1363, 1.1 ) }
    dend_11 { pt3dadd( -56.0875, 186.618, -51.1121, 1.69 ) }
    dend_11 { pt3dadd( -56.2544, 187.172, -51.0886, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_11 { pt3dadd( -56.4445, 187.828, -51.0879, 0.07 ) }
    dend_11 { pt3dadd( -56.7112, 188.731, -51.1184, 0.22 ) }
    dend_11 { pt3dadd( -56.9885, 189.693, -51.1713, 0.22 ) }
    dend_11 { pt3dadd( -57.1591, 190.328, -51.2186, 1.03 ) }
    dend_11 { pt3dadd( -57.2484, 190.721, -51.2516, 1.03 ) }
    dend_11 { pt3dadd( -57.4108, 191.494, -51.3307, 0.07 ) }
    dend_11 { pt3dadd( -57.5821, 192.5, -51.4512, 0.07 ) }
    dend_11 { pt3dadd( -57.6949, 193.21, -51.5531, 1.47 ) }
    dend_11 { pt3dadd( -57.7342, 193.512, -51.5963, 1.47 ) }
    dend_11 { pt3dadd( -57.8204, 194.306, -51.7028, 0.07 ) }
    dend_11 { pt3dadd( -57.8877, 195.023, -51.7981, 1.25 ) }
    dend_11 { pt3dadd( -57.9423, 195.673, -51.8781, 0.15 ) }
    dend_11 { pt3dadd( -58.0059, 196.385, -51.9749, 0.66 ) }
    dend_11 { pt3dadd( -58.0659, 196.936, -52.0535, 0.07 ) }
    dend_11 { pt3dadd( -58.1802, 197.742, -52.1639, 0.07 ) }
    dend_11 { pt3dadd( -58.3058, 198.444, -52.254, 1.76 ) }
    dend_11 { pt3dadd( -58.4516, 199.128, -52.3312, 1.84 ) }
    dend_11 { pt3dadd( -58.6698, 200.029, -52.4306, 0.07 ) }
    dend_11 { pt3dadd( -58.8094, 200.52, -52.4797, 0.07 ) }
    dend_11 { pt3dadd( -59.056, 201.25, -52.5567, 0.73 ) }
    dend_11 { pt3dadd( -59.2791, 201.82, -52.6246, 0.07 ) }
    dend_11 { pt3dadd( -59.465, 202.231, -52.681, 0.29 ) }
    dend_11 { pt3dadd( -59.5996, 202.503, -52.7249, 0.07 ) }
    dend_11 { pt3dadd( -59.9004, 203.066, -52.8259, 0.07 ) }
    dend_11 { pt3dadd( -60.1912, 203.593, -52.936, 1.1 ) }
    dend_11 { pt3dadd( -60.3377, 203.846, -53.0002, 1.25 ) }
    dend_11 { pt3dadd( -60.5846, 204.259, -53.1728, 0.07 ) }
    dend_11 { pt3dadd( -60.7915, 204.613, -53.3605, 0.59 ) }
    dend_11 { pt3dadd( -61.0369, 205.021, -53.6093, 0.07 ) }
    dend_11 { pt3dadd( -61.2834, 205.4, -53.8931, 0.07 ) }
    dend_11 { pt3dadd( -61.6118, 205.874, -54.3008, 1.32 ) }
    dend_11 { pt3dadd( -62.271, 206.83, -55.2143, 0.07 ) }
    dend_11 { pt3dadd( -62.4461, 207.106, -55.5011, 0.07 ) }
    dend_11 { pt3dadd( -62.6089, 207.409, -55.8233, 0.37 ) }
    dend_11 { pt3dadd( -62.7997, 207.899, -56.3467, 0.37 ) }
    dend_11 { pt3dadd( -62.8536, 208.218, -56.659, 1.1 ) }
    dend_11 { pt3dadd( -62.8361, 208.518, -56.9099, 1.1 ) }
    dend_11 { pt3dadd( -62.693, 209.236, -57.4022, 0.07 ) }
    dend_11 { pt3dadd( -62.5448, 209.767, -57.7291, 1.1 ) }
    dend_11 { pt3dadd( -62.3421, 210.381, -58.0672, 0.07 ) }
    dend_11 { pt3dadd( -62.1271, 211.021, -58.3707, 1.54 ) }
    dend_11 { pt3dadd( -61.8243, 212.0, -58.7981, 0.07 ) }
    dend_11 { pt3dadd( -61.7264, 212.382, -58.946, 0.07 ) }
    dend_11 { pt3dadd( -61.6218, 212.889, -59.1287, 1.1 ) }
    dend_11 { pt3dadd( -61.5433, 213.456, -59.3178, 0.07 ) }
    dend_11 { pt3dadd( -61.51, 214.004, -59.5073, 1.18 ) }
    dend_11 { pt3dadd( -61.5191, 214.9, -59.8454, 0.07 ) }
    dend_11 { pt3dadd( -61.5866, 215.598, -60.1417, 0.07 ) }
    dend_11 { pt3dadd( -61.6808, 216.089, -60.3956, 1.1 ) }
    dend_11 { pt3dadd( -61.738, 216.304, -60.5245, 1.1 ) }
    dend_11 { pt3dadd( -61.9767, 217.009, -61.0414, 0.07 ) }
    dend_11 { pt3dadd( -62.0728, 217.247, -61.236, 0.07 ) }
    dend_11 { pt3dadd( -62.3378, 217.827, -61.7297, 0.88 ) }
    dend_11 { pt3dadd( -62.6236, 218.408, -62.2702, 0.37 ) }
    dend_11 { pt3dadd( -62.8366, 218.837, -62.6691, 0.88 ) }
    dend_11 { pt3dadd( -63.1711, 219.556, -63.3181, 0.07 ) }
    dend_11 { pt3dadd( -63.3957, 220.068, -63.7555, 0.07 ) }
    dend_11 { pt3dadd( -63.6411, 220.69, -64.264, 1.76 ) }
    dend_11 { pt3dadd( -64.0793, 221.882, -65.1894, 0.07 ) }
    dend_11 { pt3dadd( -64.1727, 222.13, -65.3715, 0.07 ) }
    dend_11 { pt3dadd( -64.4055, 222.716, -65.7859, 1.84 ) }
    dend_11 { pt3dadd( -64.8598, 223.86, -66.5529, 0.07 ) }
    dend_11 { pt3dadd( -64.9993, 224.196, -66.7655, 1.4 ) }
    dend_11 { pt3dadd( -65.1074, 224.443, -66.8942, 1.4 ) }
    dend_11 { pt3dadd( -65.3915, 225.071, -67.1434, 0.07 ) }
    dend_11 { pt3dadd( -65.5879, 225.479, -67.2846, 0.73 ) }
    dend_11 { pt3dadd( -65.8458, 225.964, -67.419, 0.07 ) }
    dend_11 { pt3dadd( -66.3605, 226.867, -67.6114, 2.72 ) }
    dend_11 { pt3dadd( -66.9922, 227.906, -67.8135, 0.07 ) }
    dend_11 { pt3dadd( -67.2057, 228.24, -67.8564, 0.81 ) }
    dend_11 { pt3dadd( -67.4908, 228.638, -67.8756, 0.07 ) }
    dend_11 { pt3dadd( -67.8804, 229.11, -67.8622, 0.07 ) }
    dend_11 { pt3dadd( -68.0911, 229.316, -67.8388, 0.95 ) }
    dend_11 { pt3dadd( -68.7616, 229.827, -67.7535, 0.07 ) }
    dend_11 { pt3dadd( -69.4144, 230.227, -67.6657, 0.07 ) }
    dend_11 { pt3dadd( -70.0602, 230.584, -67.5854, 1.25 ) }
    dend_11 { pt3dadd( -70.6061, 230.854, -67.5177, 0.07 ) }
    dend_11 { pt3dadd( -71.4314, 231.237, -67.419, 0.07 ) }
    dend_11 { pt3dadd( -72.135, 231.552, -67.3251, 1.91 ) }
    dend_11 { pt3dadd( -72.9964, 231.938, -67.2065, 0.07 ) }
    dend_11 { pt3dadd( -73.3482, 232.103, -67.1665, 0.07 ) }
    dend_11 { pt3dadd( -73.6972, 232.279, -67.122, 0.88 ) }
    dend_11 { pt3dadd( -74.0304, 232.457, -67.0779, 1.32 ) }
    dend_11 { pt3dadd( -74.8201, 232.916, -66.9533, 0.15 ) }
    dend_11 { pt3dadd( -75.2268, 233.162, -66.8922, 0.66 ) }
    dend_11 { pt3dadd( -75.7348, 233.484, -66.8169, 0.07 ) }
    dend_11 { pt3dadd( -76.0242, 233.668, -66.7778, 0.07 ) }
    dend_11 { pt3dadd( -76.4739, 233.942, -66.7368, 0.07 ) }
    dend_11 { pt3dadd( -76.6385, 234.034, -66.722, 0.88 ) }
    dend_11 { pt3dadd( -77.1753, 234.324, -66.6601, 0.07 ) }
    dend_11 { pt3dadd( -77.8262, 234.667, -66.5479, 0.95 ) }
    dend_11 { pt3dadd( -78.3335, 234.96, -66.4303, 0.07 ) }
    dend_11 { pt3dadd( -78.7759, 235.258, -66.2805, 0.29 ) }
    dend_11 { pt3dadd( -79.111, 235.627, -66.0665, 0.07 ) }
    dend_11 { pt3dadd( -79.1984, 236.065, -65.7827, 0.07 ) }
    dend_11 { pt3dadd( -79.1874, 236.159, -65.7179, 0.07 ) }
    dend_11 { pt3dadd( -79.049, 236.504, -65.486, 0.37 ) }
    dend_11 { pt3dadd( -78.7495, 237.05, -65.1229, 0.07 ) }
    dend_11 { pt3dadd( -78.25, 237.808, -64.6254, 0.07 ) }
    dend_11 { pt3dadd( -77.838, 238.353, -64.3024, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -56.3701, -105.918, -49.0689, 0.37 ) }
    dend_29 { pt3dadd( -56.2276, -108.02, -48.9035, 0.37 ) }
    dend_29 { pt3dadd( -56.1425, -109.02, -48.815, 0.07 ) }
    dend_29 { pt3dadd( -56.0642, -109.827, -48.7405, 1.32 ) }
    dend_29 { pt3dadd( -56.0316, -110.235, -48.7122, 1.32 ) }
    dend_29 { pt3dadd( -55.9876, -111.644, -48.6463, 0.22 ) }
    dend_29 { pt3dadd( -55.9924, -112.436, -48.6209, 0.07 ) }
    dend_29 { pt3dadd( -56.0421, -113.145, -48.5868, 1.32 ) }
    dend_29 { pt3dadd( -56.0583, -113.302, -48.5782, 1.32 ) }
    dend_29 { pt3dadd( -56.21, -114.38, -48.4885, 0.15 ) }
    dend_29 { pt3dadd( -56.508, -115.839, -48.2944, 0.15 ) }
    dend_29 { pt3dadd( -56.6982, -116.604, -48.1388, 0.15 ) }
    dend_29 { pt3dadd( -56.8998, -117.382, -47.9469, 1.1 ) }
    dend_29 { pt3dadd( -57.0213, -117.842, -47.811, 1.32 ) }
    dend_29 { pt3dadd( -57.2686, -118.84, -47.4839, 0.22 ) }
    dend_29 { pt3dadd( -57.521, -120.085, -47.0576, 0.22 ) }
    dend_29 { pt3dadd( -57.6511, -120.836, -46.8189, 0.95 ) }
    dend_29 { pt3dadd( -57.7089, -121.246, -46.7162, 0.95 ) }
    dend_29 { pt3dadd( -57.829, -122.127, -46.5743, 0.07 ) }
    dend_29 { pt3dadd( -57.9304, -122.827, -46.5141, 0.07 ) }
    dend_29 { pt3dadd( -58.0513, -123.86, -46.5038, 1.54 ) }
    dend_29 { pt3dadd( -58.1057, -124.513, -46.5456, 1.32 ) }
    dend_29 { pt3dadd( -58.1739, -125.565, -46.6558, 0.15 ) }
    dend_29 { pt3dadd( -58.2407, -126.754, -46.8164, 0.15 ) }
    dend_29 { pt3dadd( -58.3243, -127.84, -47.0001, 1.54 ) }
    dend_29 { pt3dadd( -58.3926, -128.519, -47.1357, 1.54 ) }
    dend_29 { pt3dadd( -58.605, -130.535, -47.5616, 0.07 ) }
    dend_29 { pt3dadd( -58.705, -131.383, -47.7499, 0.88 ) }
    dend_29 { pt3dadd( -58.7961, -132.166, -47.9268, 0.07 ) }
    dend_29 { pt3dadd( -58.952, -133.66, -48.2466, 0.07 ) }
    dend_29 { pt3dadd( -59.0663, -134.779, -48.46, 2.06 ) }
    dend_29 { pt3dadd( -59.2192, -136.175, -48.6698, 1.03 ) }
    dend_29 { pt3dadd( -59.3416, -137.518, -48.7908, 0.07 ) }
    dend_29 { pt3dadd( -59.4015, -138.43, -48.8277, 0.07 ) }
    dend_29 { pt3dadd( -59.4186, -138.912, -48.8258, 0.81 ) }
    dend_29 { pt3dadd( -59.4226, -139.905, -48.7904, 0.59 ) }
    dend_29 { pt3dadd( -59.437, -140.697, -48.7597, 0.15 ) }
    dend_29 { pt3dadd( -59.4849, -141.966, -48.7322, 1.84 ) }
    dend_29 { pt3dadd( -59.566, -143.496, -48.7268, 0.07 ) }
    dend_29 { pt3dadd( -59.6062, -143.92, -48.7357, 0.59 ) }
    dend_29 { pt3dadd( -59.7275, -144.965, -48.7907, 0.59 ) }
    dend_29 { pt3dadd( -59.8742, -145.997, -48.87, 1.69 ) }
    dend_29 { pt3dadd( -59.9802, -146.684, -48.9587, 1.69 ) }
    dend_29 { pt3dadd( -60.1031, -147.426, -49.0678, 1.1 ) }
    dend_29 { pt3dadd( -60.2369, -148.202, -49.1933, 0.15 ) }
    dend_29 { pt3dadd( -60.3489, -148.849, -49.3082, 0.81 ) }
    dend_29 { pt3dadd( -60.4922, -149.766, -49.4651, 0.59 ) }
    dend_29 { pt3dadd( -60.7075, -151.239, -49.6978, 0.15 ) }
    dend_29 { pt3dadd( -60.8032, -151.933, -49.815, 0.15 ) }
    dend_29 { pt3dadd( -60.9764, -153.171, -50.0259, 1.62 ) }
    dend_29 { pt3dadd( -61.0043, -153.391, -50.0558, 1.62 ) }
    dend_29 { pt3dadd( -61.2, -154.994, -50.2144, 0.44 ) }
    dend_29 { pt3dadd( -61.3175, -156.037, -50.2629, 0.22 ) }
    dend_29 { pt3dadd( -61.4181, -156.995, -50.2631, 1.03 ) }
    dend_29 { pt3dadd( -61.5032, -157.871, -50.2463, 1.4 ) }
    dend_29 { pt3dadd( -61.6512, -159.617, -50.1506, 0.22 ) }
    dend_29 { pt3dadd( -61.8132, -161.621, -50.0003, 0.22 ) }
    dend_29 { pt3dadd( -61.9099, -163.009, -49.8688, 1.03 ) }
    dend_29 { pt3dadd( -61.9484, -163.634, -49.7945, 1.47 ) }
    dend_29 { pt3dadd( -61.9848, -164.191, -49.718, 1.47 ) }
    dend_29 { pt3dadd( -62.1006, -165.534, -49.5466, 0.15 ) }
    dend_29 { pt3dadd( -62.1987, -166.233, -49.4708, 0.29 ) }
    dend_29 { pt3dadd( -62.4259, -167.399, -49.3415, 0.07 ) }
    dend_29 { pt3dadd( -62.6277, -168.197, -49.2852, 1.47 ) }
    dend_29 { pt3dadd( -62.7947, -168.775, -49.2629, 1.47 ) }
    dend_29 { pt3dadd( -63.1794, -169.969, -49.2931, 0.15 ) }
    dend_29 { pt3dadd( -63.3446, -170.441, -49.335, 0.15 ) }
    dend_29 { pt3dadd( -63.6229, -171.202, -49.3902, 1.25 ) }
    dend_29 { pt3dadd( -63.929, -172.064, -49.4393, 1.62 ) }
    dend_29 { pt3dadd( -64.3972, -173.57, -49.5699, 0.07 ) }
    dend_29 { pt3dadd( -64.6208, -174.443, -49.6592, 0.37 ) }
    dend_29 { pt3dadd( -64.7298, -175.011, -49.7187, 0.15 ) }
    dend_29 { pt3dadd( -64.9135, -176.375, -49.8598, 1.25 ) }
    dend_29 { pt3dadd( -64.9724, -177.339, -49.9858, 0.37 ) }
    dend_29 { pt3dadd( -64.9673, -178.4, -50.1263, 0.22 ) }
    dend_29 { pt3dadd( -64.8515, -179.501, -50.2922, 0.22 ) }
    dend_29 { pt3dadd( -64.7393, -180.11, -50.3863, 1.47 ) }
    dend_29 { pt3dadd( -64.6147, -180.595, -50.4787, 1.25 ) }
    dend_29 { pt3dadd( -64.2032, -181.816, -50.7551, 0.07 ) }
    dend_29 { pt3dadd( -64.1118, -182.05, -50.7997, 0.37 ) }
    dend_29 { pt3dadd( -63.575, -183.354, -50.9736, 0.07 ) }
    dend_29 { pt3dadd( -63.2406, -184.149, -51.0805, 0.81 ) }
    dend_29 { pt3dadd( -63.1126, -184.471, -51.1202, 0.81 ) }
    dend_29 { pt3dadd( -62.8829, -185.094, -51.1848, 0.07 ) }
    dend_29 { pt3dadd( -62.6283, -185.895, -51.2394, 0.07 ) }
    dend_29 { pt3dadd( -62.4471, -186.577, -51.2879, 0.88 ) }
    dend_29 { pt3dadd( -62.3087, -187.213, -51.3209, 0.07 ) }
    dend_29 { pt3dadd( -62.1867, -187.83, -51.3634, 0.66 ) }
    dend_29 { pt3dadd( -62.0787, -188.437, -51.4061, 0.07 ) }
    dend_29 { pt3dadd( -61.9342, -189.191, -51.4371, 0.07 ) }
    dend_29 { pt3dadd( -61.846, -189.602, -51.4378, 0.07 ) }
    dend_29 { pt3dadd( -61.6398, -190.42, -51.3803, 1.03 ) }
    dend_29 { pt3dadd( -61.3019, -191.708, -51.1676, 0.07 ) }
    dend_29 { pt3dadd( -61.1184, -192.373, -51.0051, 0.44 ) }
    dend_29 { pt3dadd( -60.7782, -193.591, -50.6264, 0.07 ) }
    dend_29 { pt3dadd( -60.596, -194.223, -50.4023, 0.59 ) }
    dend_29 { pt3dadd( -60.2679, -195.444, -49.9446, 0.07 ) }
    dend_29 { pt3dadd( -60.033, -196.513, -49.5172, 0.07 ) }
    dend_29 { pt3dadd( -59.7896, -197.9, -48.9019, 0.07 ) }
    dend_29 { pt3dadd( -59.6215, -199.159, -48.3287, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -59.5544, -199.999, -47.9468, 0.22 ) }
    dend_29 { pt3dadd( -59.4904, -200.75, -47.6258, 1.62 ) }
    dend_29 { pt3dadd( -59.3587, -201.708, -47.2862, 0.37 ) }
    dend_29 { pt3dadd( -59.1435, -202.234, -47.1654, 1.1 ) }
    dend_29 { pt3dadd( -59.8685, -201.541, -47.2364, 0.07 ) }
    dend_29 { pt3dadd( -60.575, -200.978, -47.2742, 0.07 ) }
    dend_29 { pt3dadd( -61.005, -200.595, -47.3036, 0.88 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -56.3701, -105.918, -49.0689, 0.37 ) }
    dend_28 { pt3dadd( -58.3615, -107.94, -50.5934, 0.37 ) }
    dend_28 { pt3dadd( -59.1232, -108.657, -51.0302, 0.59 ) }
    dend_28 { pt3dadd( -60.5823, -109.917, -51.5026, 0.07 ) }
    dend_28 { pt3dadd( -62.0827, -111.088, -51.6168, 0.07 ) }
    dend_28 { pt3dadd( -63.0099, -111.725, -51.5839, 0.07 ) }
    dend_28 { pt3dadd( -63.877, -112.248, -51.664, 0.81 ) }
    dend_28 { pt3dadd( -65.3932, -112.929, -51.8565, 0.29 ) }
    dend_28 { pt3dadd( -67.1475, -113.484, -53.044, 0.29 ) }
    dend_28 { pt3dadd( -68.0299, -113.649, -54.1434, 0.59 ) }
    dend_28 { pt3dadd( -68.7051, -113.74, -55.1649, 0.95 ) }
    dend_28 { pt3dadd( -70.8656, -114.081, -59.3226, 0.44 ) }
    dend_28 { pt3dadd( -71.8483, -114.279, -61.541, 0.73 ) }
    dend_28 { pt3dadd( -72.7906, -114.558, -64.009, 0.15 ) }
    dend_28 { pt3dadd( -73.178, -114.719, -65.1745, 0.15 ) }
    dend_28 { pt3dadd( -73.4108, -114.86, -65.9056, 0.51 ) }
    dend_28 { pt3dadd( -74.1816, -115.664, -68.4434, 0.07 ) }
    dend_28 { pt3dadd( -74.28, -115.824, -68.7639, 0.07 ) }
    dend_28 { pt3dadd( -74.574, -116.435, -69.7628, 1.03 ) }
    dend_28 { pt3dadd( -74.956, -117.315, -70.9878, 0.15 ) }
    dend_28 { pt3dadd( -75.3474, -118.2, -72.1249, 0.95 ) }
    dend_28 { pt3dadd( -76.2953, -120.113, -74.4419, 0.37 ) }
    dend_28 { pt3dadd( -76.6936, -120.836, -75.2596, 0.81 ) }
    dend_28 { pt3dadd( -77.3011, -121.902, -76.4832, 0.07 ) }
    dend_28 { pt3dadd( -77.9858, -123.069, -77.8188, 0.07 ) }
    dend_28 { pt3dadd( -78.3682, -123.725, -78.5615, 0.29 ) }
    dend_28 { pt3dadd( -78.8363, -124.444, -79.4686, 0.95 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 34/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -179.236, -89.497, -27.4655, 0.07 ) }
    dend_14 { pt3dadd( -180.311, -90.317, -27.5909, 0.07 ) }
    dend_14 { pt3dadd( -181.477, -91.3332, -27.7533, 0.07 ) }
    dend_14 { pt3dadd( -182.289, -92.1211, -27.8732, 0.07 ) }
    dend_14 { pt3dadd( -182.63, -92.4958, -27.9249, 0.88 ) }
    dend_14 { pt3dadd( -182.983, -92.9337, -27.9989, 0.88 ) }
    dend_14 { pt3dadd( -183.57, -93.727, -28.1874, 0.07 ) }
    dend_14 { pt3dadd( -183.821, -94.1261, -28.308, 0.07 ) }
    dend_14 { pt3dadd( -184.403, -95.0726, -28.6349, 0.66 ) }
    dend_14 { pt3dadd( -184.756, -95.6098, -28.8492, 1.1 ) }
    dend_14 { pt3dadd( -185.529, -96.6659, -29.3086, 0.07 ) }
    dend_14 { pt3dadd( -186.466, -97.7933, -29.8232, 0.07 ) }
    dend_14 { pt3dadd( -187.337, -98.6968, -30.2481, 0.66 ) }
    dend_14 { pt3dadd( -188.089, -99.3549, -30.5731, 1.4 ) }
    dend_14 { pt3dadd( -189.286, -100.22, -31.0497, 0.22 ) }
    dend_14 { pt3dadd( -190.199, -100.747, -31.3845, 0.22 ) }
    dend_14 { pt3dadd( -191.077, -101.123, -31.6477, 0.59 ) }
    dend_14 { pt3dadd( -191.8, -101.371, -31.8329, 0.07 ) }
    dend_14 { pt3dadd( -192.712, -101.64, -32.1009, 0.07 ) }
    dend_14 { pt3dadd( -193.753, -101.917, -32.4337, 0.81 ) }
    dend_14 { pt3dadd( -194.794, -102.197, -32.7857, 0.22 ) }
    dend_14 { pt3dadd( -196.4, -102.716, -33.3706, 0.22 ) }
    dend_14 { pt3dadd( -197.264, -103.068, -33.7202, 1.4 ) }
    dend_14 { pt3dadd( -198.66, -103.777, -34.3216, 0.07 ) }
    dend_14 { pt3dadd( -199.244, -104.145, -34.5815, 0.81 ) }
    dend_14 { pt3dadd( -199.896, -104.676, -34.8813, 0.07 ) }
    dend_14 { pt3dadd( -200.585, -105.404, -35.2195, 0.07 ) }
    dend_14 { pt3dadd( -200.855, -105.756, -35.3784, 0.07 ) }
    dend_14 { pt3dadd( -201.279, -106.366, -35.6024, 0.81 ) }
    dend_14 { pt3dadd( -201.535, -106.766, -35.6867, 0.07 ) }
    dend_14 { pt3dadd( -202.286, -108.021, -35.8651, 0.44 ) }
    dend_14 { pt3dadd( -202.682, -108.644, -35.936, 0.07 ) }
    dend_14 { pt3dadd( -203.162, -109.34, -36.0, 0.29 ) }
    dend_14 { pt3dadd( -203.797, -110.182, -36.0584, 0.07 ) }
    dend_14 { pt3dadd( -205.016, -111.679, -36.1822, 0.07 ) }
    dend_14 { pt3dadd( -205.79, -112.561, -36.2718, 1.76 ) }
    dend_14 { pt3dadd( -207.147, -114.007, -36.45, 0.22 ) }
    dend_14 { pt3dadd( -208.034, -114.904, -36.5987, 0.51 ) }
    dend_14 { pt3dadd( -208.531, -115.39, -36.6778, 0.07 ) }
    dend_14 { pt3dadd( -209.37, -116.144, -36.8437, 0.07 ) }
    dend_14 { pt3dadd( -209.64, -116.365, -36.9017, 0.81 ) }
    dend_14 { pt3dadd( -210.611, -117.118, -37.0867, 0.07 ) }
    dend_14 { pt3dadd( -211.573, -117.873, -37.2586, 0.07 ) }
    dend_14 { pt3dadd( -212.685, -118.775, -37.4531, 1.47 ) }
    dend_14 { pt3dadd( -213.903, -119.794, -37.6401, 0.15 ) }
    dend_14 { pt3dadd( -214.61, -120.387, -37.7221, 0.15 ) }
    dend_14 { pt3dadd( -215.139, -120.832, -37.7753, 0.88 ) }
    dend_14 { pt3dadd( -215.966, -121.521, -37.8694, 0.07 ) }
    dend_14 { pt3dadd( -216.917, -122.308, -38.0029, 0.07 ) }
    dend_14 { pt3dadd( -217.453, -122.748, -38.0826, 0.07 ) }
    dend_14 { pt3dadd( -217.899, -123.1, -38.1301, 0.81 ) }
    dend_14 { pt3dadd( -218.841, -123.796, -38.2037, 0.07 ) }
    dend_14 { pt3dadd( -220.028, -124.592, -38.301, 0.07 ) }
    dend_14 { pt3dadd( -220.705, -124.976, -38.3488, 0.95 ) }
    dend_14 { pt3dadd( -222.023, -125.6, -38.4422, 0.07 ) }
    dend_14 { pt3dadd( -223.457, -126.176, -38.4838, 0.88 ) }
    dend_14 { pt3dadd( -224.227, -126.435, -38.476, 0.22 ) }
    dend_14 { pt3dadd( -225.236, -126.688, -38.408, 0.07 ) }
    dend_14 { pt3dadd( -227.158, -127.04, -38.1328, 0.07 ) }
    dend_14 { pt3dadd( -227.945, -127.144, -37.9861, 1.18 ) }
    dend_14 { pt3dadd( -229.446, -127.269, -37.6496, 0.15 ) }
    dend_14 { pt3dadd( -230.882, -127.364, -37.2842, 0.15 ) }
    dend_14 { pt3dadd( -232.113, -127.434, -36.9712, 1.54 ) }
    dend_14 { pt3dadd( -234.068, -127.45, -36.4878, 0.07 ) }
    dend_14 { pt3dadd( -234.838, -127.416, -36.3221, 0.07 ) }
    dend_14 { pt3dadd( -235.416, -127.357, -36.2299, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( -236.516, -127.155, -36.144, 0.07 ) }
    dend_14 { pt3dadd( -237.787, -126.804, -36.1304, 0.81 ) }
    dend_14 { pt3dadd( -239.219, -126.239, -36.2376, 0.07 ) }
    dend_14 { pt3dadd( -239.651, -126.005, -36.2942, 0.07 ) }
    dend_14 { pt3dadd( -240.108, -125.715, -36.354, 0.37 ) }
    dend_14 { pt3dadd( -241.17, -124.974, -36.517, 0.07 ) }
    dend_14 { pt3dadd( -241.675, -124.593, -36.5927, 0.88 ) }
    dend_14 { pt3dadd( -242.584, -123.913, -36.7127, 0.07 ) }
    dend_14 { pt3dadd( -243.453, -123.347, -36.8143, 0.29 ) }
    dend_14 { pt3dadd( -244.473, -122.73, -36.9667, 0.07 ) }
    dend_14 { pt3dadd( -245.063, -122.401, -37.0758, 0.95 ) }
    dend_14 { pt3dadd( -246.13, -121.851, -37.29, 0.07 ) }
    dend_14 { pt3dadd( -246.394, -121.735, -37.3398, 0.07 ) }
    dend_14 { pt3dadd( -247.196, -121.415, -37.51, 0.44 ) }
    dend_14 { pt3dadd( -248.245, -121.025, -37.7404, 0.07 ) }
    dend_14 { pt3dadd( -249.724, -120.516, -38.1164, 0.07 ) }
    dend_14 { pt3dadd( -250.937, -120.129, -38.4346, 1.25 ) }
    dend_14 { pt3dadd( -252.129, -119.787, -38.7711, 0.07 ) }
    dend_14 { pt3dadd( -252.987, -119.562, -39.0171, 0.07 ) }
    dend_14 { pt3dadd( -254.0, -119.342, -39.3277, 0.37 ) }
    dend_14 { pt3dadd( -255.096, -119.182, -39.6592, 0.07 ) }
    dend_14 { pt3dadd( -256.041, -119.131, -39.9504, 0.07 ) }
    dend_14 { pt3dadd( -256.602, -119.164, -40.1217, 0.37 ) }
    dend_14 { pt3dadd( -257.312, -119.309, -40.3159, 0.07 ) }
    dend_14 { pt3dadd( -258.577, -119.712, -40.5945, 0.07 ) }
    dend_14 { pt3dadd( -259.745, -120.207, -40.7884, 0.07 ) }
    dend_14 { pt3dadd( -261.001, -120.864, -40.9107, 1.69 ) }
    dend_14 { pt3dadd( -262.419, -121.753, -40.9944, 0.07 ) }
    dend_14 { pt3dadd( -264.564, -123.35, -40.9906, 0.07 ) }
    dend_14 { pt3dadd( -265.915, -124.436, -40.9385, 0.07 ) }
    dend_14 { pt3dadd( -267.022, -125.417, -40.8406, 1.32 ) }
    dend_14 { pt3dadd( -268.082, -126.464, -40.7084, 0.07 ) }
    dend_14 { pt3dadd( -268.825, -127.274, -40.5805, 0.07 ) }
    dend_14 { pt3dadd( -269.879, -128.531, -40.2935, 1.62 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -179.236, -89.497, -27.4655, 0.07 ) }
    dend_13 { pt3dadd( -179.988, -88.2189, -27.1786, 0.07 ) }
    dend_13 { pt3dadd( -180.478, -87.4307, -26.9918, 1.03 ) }
    dend_13 { pt3dadd( -180.998, -86.6111, -26.8035, 0.07 ) }
    dend_13 { pt3dadd( -181.29, -86.1583, -26.6915, 0.29 ) }
    dend_13 { pt3dadd( -181.559, -85.7652, -26.596, 0.07 ) }
    dend_13 { pt3dadd( -182.226, -84.7971, -26.372, 0.07 ) }
    dend_13 { pt3dadd( -182.604, -84.2654, -26.2627, 0.95 ) }
    dend_13 { pt3dadd( -182.997, -83.7116, -26.1605, 0.95 ) }
    dend_13 { pt3dadd( -183.475, -82.9973, -26.062, 0.07 ) }
    dend_13 { pt3dadd( -184.195, -81.8527, -25.9271, 0.07 ) }
    dend_13 { pt3dadd( -184.522, -81.3224, -25.8756, 0.59 ) }
    dend_13 { pt3dadd( -184.941, -80.6094, -25.8283, 0.07 ) }
    dend_13 { pt3dadd( -185.318, -79.9593, -25.8084, 0.37 ) }
    dend_13 { pt3dadd( -185.666, -79.3405, -25.804, 0.07 ) }
    dend_13 { pt3dadd( -185.816, -79.0536, -25.8168, 0.07 ) }
    dend_13 { pt3dadd( -185.957, -78.7447, -25.8353, 1.03 ) }
    dend_13 { pt3dadd( -186.202, -78.2487, -25.8708, 1.03 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_43 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_24 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_41 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_27 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_28 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_18 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_6 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_42 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_23, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 9
    dend_7 nseg = 3
    dend_40 nseg = 13
    dend_39 nseg = 5
    dend_36 nseg = 5
    dend_35 nseg = 11
    dend_33 nseg = 19
    dend_32 nseg = 13
    dend_24 nseg = 3
    dend_22 nseg = 3
    dend_15 nseg = 3
    dend_41 nseg = 3
    dend_27 nseg = 5
    dend_26 nseg = 3
    dend_12 nseg = 9
    dend_11 nseg = 13
    dend_29 nseg = 5
    dend_28 nseg = 3
    dend_14 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_LBC_040eb0bc59_0_0


