// Cell: cACint209_L23_BP_898fda8796_0_0
/*
{
  "id" : "cACint209_L23_BP_898fda8796_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.496303, -10.6623, 12.1785, 1.66", "-0.97487, -12.5337, 13.7291, 1.66", "-1.79674, -15.7476, 16.3921, 1.39", "-5.06534, -28.5293, 26.9829, 1.11", "-5.63873, -30.7715, 28.8408, 1.11", "-6.36494, -33.6114, 31.1939, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.627386, 13.4669, 1.66761, 0.83", "0.630778, 15.3126, 2.47294, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.36494, -33.6114, 31.1939, 0.83", "-8.57722, -40.8972, 28.5981, 0.83", "-9.10398, -42.632, 27.98, 0.83", "-10.4486, -47.0603, 26.4023, 0.83", "-11.0514, -49.0455, 25.695, 0.83", "-12.3477, -53.3146, 24.1741, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.36494, -33.6114, 31.1939, 0.83", "-6.53974, -35.4135, 31.4543, 0.83", "-6.70146, -37.045, 31.6653, 0.83", "-6.98625, -39.174, 31.9221, 0.83", "-7.56698, -44.0461, 32.3687, 0.83", "-8.00025, -48.0712, 32.6697, 0.55", "-8.75501, -54.8943, 33.0306, 0.55", "-9.03137, -58.2985, 33.2283, 0.83", "-9.25809, -62.2009, 33.4484, 0.55", "-9.41784, -68.6001, 33.9745, 0.55", "-9.42375, -70.432, 34.1425, 0.55", "-9.42094, -75.4018, 34.624, 0.55", "-9.37759, -81.674, 35.3855, 0.55", "-9.35089, -85.4301, 35.8844, 0.55", "-9.35719, -90.4279, 36.6006, 0.55", "-9.66791, -99.3966, 38.0258, 0.55", "-9.96946, -104.117, 38.7771, 0.55", "-10.2771, -107.631, 39.2975, 0.55", "-10.6502, -110.051, 39.5736, 0.55", "-11.0941, -112.158, 39.7851, 0.55", "-12.1572, -116.364, 40.3261, 0.55", "-12.7364, -118.464, 40.6213, 0.55", "-13.6205, -121.672, 41.2137, 0.55", "-14.8104, -125.968, 42.0828, 0.55", "-16.5919, -132.159, 43.4442, 0.55", "-18.1493, -137.738, 44.7504, 0.55", "-19.5409, -142.601, 46.0014, 0.83", "-20.8626, -147.246, 47.3663, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.630778, 15.3126, 2.47294, 0.83", "-0.93206, 22.7898, -0.753745, 0.83", "-1.26351, 24.7631, -1.55076, 0.83", "-1.67848, 27.1816, -2.55055, 0.83", "-1.97545, 29.1807, -3.329, 0.83", "-2.41528, 32.3782, -4.51403, 0.83", "-2.91149, 36.5622, -5.99095, 0.83", "-3.21921, 39.5345, -6.79675, 0.83", "-3.54112, 42.752, -7.73148, 0.83", "-3.86747, 46.058, -8.83064, 0.55", "-3.97267, 47.105, -9.18468, 0.55", "-4.18298, 48.8949, -9.79298, 0.55", "-4.55254, 52.6344, -11.0132, 0.55", "-4.83654, 55.346, -11.8584, 0.55", "-5.49296, 62.1438, -13.984, 0.55", "-5.85733, 65.2113, -15.0598, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.630778, 15.3126, 2.47294, 0.83", "1.47277, 17.778, 3.43335, 0.83", "2.0823, 19.7231, 4.25986, 0.83", "2.95513, 22.7911, 5.66607, 0.83", "3.76207, 25.7483, 7.04883, 0.83", "4.67553, 29.4926, 8.63259, 0.83", "5.36271, 32.3154, 9.74834, 0.83", "5.80345, 34.4511, 10.5928, 0.83", "6.26337, 36.7943, 11.4341, 0.83", "6.3624, 37.4325, 11.6244, 0.83", "7.51098, 44.77, 13.4087, 0.83", "7.7247, 46.3302, 13.6802, 0.83", "7.99981, 48.4523, 13.9346, 0.83", "8.21993, 50.2895, 14.1106, 0.83", "8.44176, 52.4206, 14.2763, 0.83", "8.74253, 55.1121, 14.4886, 0.83", "8.98104, 57.886, 14.6919, 0.83", "9.14582, 59.4705, 14.8119, 0.83", "9.46876, 61.9209, 14.9996, 0.83", "9.74531, 64.3305, 15.1865, 0.83", "10.0818, 66.8629, 15.3564, 0.83", "10.519, 70.1723, 15.6149, 0.83", "10.8002, 72.334, 15.885, 0.83", "10.9312, 73.5302, 16.0665, 0.83", "11.0488, 74.8832, 16.3403, 0.83", "11.2137, 76.8847, 16.8667, 0.83", "11.3135, 79.8234, 17.8219, 0.55", "11.4538, 83.6772, 19.237, 0.55", "11.4353, 84.8112, 19.6691, 0.55", "11.3872, 87.1963, 20.5628, 0.55", "11.3416, 88.1965, 20.9201, 0.55", "11.2254, 90.0723, 21.5833, 0.55", "11.1457, 92.0294, 22.1841, 0.55", "11.1647, 94.873, 22.8992, 0.55", "11.1851, 96.7471, 23.3416, 0.55", "11.1766, 98.4528, 23.6856, 0.55", "11.2245, 100.585, 24.1114, 0.55", "11.4078, 102.804, 24.5217, 0.55", "11.7466, 105.83, 25.1338, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.3477, -53.3146, 24.1741, 0.83", "-14.1436, -58.3993, 26.2768, 0.83", "-15.5435, -62.427, 27.7482, 0.83", "-17.2067, -67.2832, 29.3087, 0.83", "-18.5836, -71.2956, 30.4617, 0.83", "-19.4203, -73.734, 31.1624, 0.83", "-20.4179, -76.6413, 31.9979, 0.83", "-21.0531, -78.7459, 32.4532, 0.83", "-21.7673, -81.1476, 32.8657, 0.83", "-22.5958, -84.2154, 32.932, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.3477, -53.3146, 24.1741, 0.55", "-9.57305, -54.0592, 31.1003, 0.55", "-6.38166, -54.8295, 38.4265, 0.55", "-4.76051, -55.2208, 42.148, 0.55", "-2.71864, -55.7136, 46.8353, 0.28", "-2.38133, -55.795, 47.6097, 0.83", "-0.611779, -56.2221, 51.6719, 0.28", "-0.279931, -56.2497, 52.3585, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.85733, 65.2113, -15.0598, 0.55", "-5.49522, 68.3667, -15.4189, 0.55", "-5.12929, 71.7005, -15.8896, 0.55", "-4.86545, 74.0441, -16.1983, 0.55", "-4.42912, 77.5615, -16.6507, 0.83", "-4.11374, 80.0617, -16.9583, 0.55", "-3.79382, 82.3928, -17.2404, 0.55", "-3.47775, 84.5736, -17.4432, 1.11", "-2.93097, 88.36, -17.9136, 0.55", "-2.78852, 89.6271, -18.0874, 0.55", "-2.61997, 91.2256, -18.3232, 1.11", "-2.42454, 93.2095, -18.6279, 0.55", "-2.32158, 94.506, -18.8222, 1.11", "-2.03585, 98.4638, -19.3658, 0.55", "-1.99435, 100.551, -19.7791, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.85733, 65.2113, -15.0598, 0.28", "-6.77137, 69.2285, -19.0818, 0.28", "-6.88128, 69.8305, -19.6689, 0.55", "-7.73047, 75.1564, -24.6425, 0.28", "-8.42122, 80.1266, -29.5642, 1.11", "-8.72128, 82.7135, -32.2761, 0.28", "-8.72128, 82.7135, -32.2761, 0.55", "-8.60456, 85.8676, -34.9528, 0.28", "-8.43161, 87.0783, -35.856, 1.11", "-6.43821, 92.4623, -38.3779, 0.55", "-4.07207, 96.66, -39.0496, 0.28", "0.186335, 103.228, -39.3082, 1.11", "4.13845, 108.799, -38.9296, 0.28", "4.246, 108.928, -38.8925, 0.55", "7.66531, 112.599, -37.1439, 0.28", "7.997, 112.922, -36.9014, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-22.5958, -84.2154, 32.932, 0.83", "-22.5308, -88.7511, 34.4716, 0.83", "-22.4937, -92.3901, 35.9535, 0.83", "-22.4293, -94.0945, 36.6559, 0.83", "-22.4049, -95.074, 37.144, 0.83", "-22.4063, -97.7502, 38.5447, 0.83", "-22.4186, -99.3328, 39.2595, 0.83", "-22.4152, -102.341, 40.3241, 0.83", "-22.327, -104.43, 41.0674, 0.83", "-22.0022, -108.002, 42.2118, 0.83", "-21.7402, -109.842, 42.6768, 0.83", "-20.9888, -114.373, 43.3867, 0.83", "-20.3503, -118.417, 43.758, 0.83", "-19.9102, -121.761, 43.7786, 0.83", "-19.7081, -124.179, 43.7253, 0.83", "-19.6748, -124.667, 43.6989, 0.83", "-19.5965, -127.463, 43.6928, 0.28", "-19.6261, -128.201, 43.7444, 0.83", "-19.8309, -130.105, 43.8282, 0.28", "-20.2401, -133.483, 43.9248, 0.28", "-20.3359, -134.208, 43.9728, 0.28", "-20.6246, -136.52, 44.1433, 0.83", "-20.8292, -138.565, 44.3211, 0.28", "-20.9828, -140.206, 44.4861, 0.83", "-21.0524, -141.521, 44.6531, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-22.5958, -84.2154, 32.932, 0.55", "-26.4424, -91.1487, 30.6226, 0.55", "-28.193, -94.1111, 29.7357, 0.55", "-32.0372, -100.385, 28.041, 0.55", "-33.749, -103.063, 27.3868, 0.55", "-35.5117, -105.66, 26.8271, 0.28", "-36.2994, -106.82, 26.5769, 0.55", "-38.3656, -109.48, 26.2231, 0.28", "-39.7355, -111.205, 26.0452, 0.55", "-41.4514, -113.199, 26.0515, 0.28", "-44.1723, -116.182, 26.0541, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "axon_0", "dend_7", "dend_6", "dend_2", "dend_1", "axon_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BP_898fda8796_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.496303, -10.6623, 12.1785, 1.66 ) }
    dend_5 { pt3dadd( -0.97487, -12.5337, 13.7291, 1.66 ) }
    dend_5 { pt3dadd( -1.79674, -15.7476, 16.3921, 1.39 ) }
    dend_5 { pt3dadd( -5.06534, -28.5293, 26.9829, 1.11 ) }
    dend_5 { pt3dadd( -5.63873, -30.7715, 28.8408, 1.11 ) }
    dend_5 { pt3dadd( -6.36494, -33.6114, 31.1939, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.627386, 13.4669, 1.66761, 0.83 ) }
    dend_0 { pt3dadd( 0.630778, 15.3126, 2.47294, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.36494, -33.6114, 31.1939, 0.83 ) }
    dend_7 { pt3dadd( -8.57722, -40.8972, 28.5981, 0.83 ) }
    dend_7 { pt3dadd( -9.10398, -42.632, 27.98, 0.83 ) }
    dend_7 { pt3dadd( -10.4486, -47.0603, 26.4023, 0.83 ) }
    dend_7 { pt3dadd( -11.0514, -49.0455, 25.695, 0.83 ) }
    dend_7 { pt3dadd( -12.3477, -53.3146, 24.1741, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.36494, -33.6114, 31.1939, 0.83 ) }
    dend_6 { pt3dadd( -6.53974, -35.4135, 31.4543, 0.83 ) }
    dend_6 { pt3dadd( -6.70146, -37.045, 31.6653, 0.83 ) }
    dend_6 { pt3dadd( -6.98625, -39.174, 31.9221, 0.83 ) }
    dend_6 { pt3dadd( -7.56698, -44.0461, 32.3687, 0.83 ) }
    dend_6 { pt3dadd( -8.00025, -48.0712, 32.6697, 0.55 ) }
    dend_6 { pt3dadd( -8.75501, -54.8943, 33.0306, 0.55 ) }
    dend_6 { pt3dadd( -9.03137, -58.2985, 33.2283, 0.83 ) }
    dend_6 { pt3dadd( -9.25809, -62.2009, 33.4484, 0.55 ) }
    dend_6 { pt3dadd( -9.41784, -68.6001, 33.9745, 0.55 ) }
    dend_6 { pt3dadd( -9.42375, -70.432, 34.1425, 0.55 ) }
    dend_6 { pt3dadd( -9.42094, -75.4018, 34.624, 0.55 ) }
    dend_6 { pt3dadd( -9.37759, -81.674, 35.3855, 0.55 ) }
    dend_6 { pt3dadd( -9.35089, -85.4301, 35.8844, 0.55 ) }
    dend_6 { pt3dadd( -9.35719, -90.4279, 36.6006, 0.55 ) }
    dend_6 { pt3dadd( -9.66791, -99.3966, 38.0258, 0.55 ) }
    dend_6 { pt3dadd( -9.96946, -104.117, 38.7771, 0.55 ) }
    dend_6 { pt3dadd( -10.2771, -107.631, 39.2975, 0.55 ) }
    dend_6 { pt3dadd( -10.6502, -110.051, 39.5736, 0.55 ) }
    dend_6 { pt3dadd( -11.0941, -112.158, 39.7851, 0.55 ) }
    dend_6 { pt3dadd( -12.1572, -116.364, 40.3261, 0.55 ) }
    dend_6 { pt3dadd( -12.7364, -118.464, 40.6213, 0.55 ) }
    dend_6 { pt3dadd( -13.6205, -121.672, 41.2137, 0.55 ) }
    dend_6 { pt3dadd( -14.8104, -125.968, 42.0828, 0.55 ) }
    dend_6 { pt3dadd( -16.5919, -132.159, 43.4442, 0.55 ) }
    dend_6 { pt3dadd( -18.1493, -137.738, 44.7504, 0.55 ) }
    dend_6 { pt3dadd( -19.5409, -142.601, 46.0014, 0.83 ) }
    dend_6 { pt3dadd( -20.8626, -147.246, 47.3663, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.630778, 15.3126, 2.47294, 0.83 ) }
    dend_2 { pt3dadd( -0.93206, 22.7898, -0.753745, 0.83 ) }
    dend_2 { pt3dadd( -1.26351, 24.7631, -1.55076, 0.83 ) }
    dend_2 { pt3dadd( -1.67848, 27.1816, -2.55055, 0.83 ) }
    dend_2 { pt3dadd( -1.97545, 29.1807, -3.329, 0.83 ) }
    dend_2 { pt3dadd( -2.41528, 32.3782, -4.51403, 0.83 ) }
    dend_2 { pt3dadd( -2.91149, 36.5622, -5.99095, 0.83 ) }
    dend_2 { pt3dadd( -3.21921, 39.5345, -6.79675, 0.83 ) }
    dend_2 { pt3dadd( -3.54112, 42.752, -7.73148, 0.83 ) }
    dend_2 { pt3dadd( -3.86747, 46.058, -8.83064, 0.55 ) }
    dend_2 { pt3dadd( -3.97267, 47.105, -9.18468, 0.55 ) }
    dend_2 { pt3dadd( -4.18298, 48.8949, -9.79298, 0.55 ) }
    dend_2 { pt3dadd( -4.55254, 52.6344, -11.0132, 0.55 ) }
    dend_2 { pt3dadd( -4.83654, 55.346, -11.8584, 0.55 ) }
    dend_2 { pt3dadd( -5.49296, 62.1438, -13.984, 0.55 ) }
    dend_2 { pt3dadd( -5.85733, 65.2113, -15.0598, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.630778, 15.3126, 2.47294, 0.83 ) }
    dend_1 { pt3dadd( 1.47277, 17.778, 3.43335, 0.83 ) }
    dend_1 { pt3dadd( 2.0823, 19.7231, 4.25986, 0.83 ) }
    dend_1 { pt3dadd( 2.95513, 22.7911, 5.66607, 0.83 ) }
    dend_1 { pt3dadd( 3.76207, 25.7483, 7.04883, 0.83 ) }
    dend_1 { pt3dadd( 4.67553, 29.4926, 8.63259, 0.83 ) }
    dend_1 { pt3dadd( 5.36271, 32.3154, 9.74834, 0.83 ) }
    dend_1 { pt3dadd( 5.80345, 34.4511, 10.5928, 0.83 ) }
    dend_1 { pt3dadd( 6.26337, 36.7943, 11.4341, 0.83 ) }
    dend_1 { pt3dadd( 6.3624, 37.4325, 11.6244, 0.83 ) }
    dend_1 { pt3dadd( 7.51098, 44.77, 13.4087, 0.83 ) }
    dend_1 { pt3dadd( 7.7247, 46.3302, 13.6802, 0.83 ) }
    dend_1 { pt3dadd( 7.99981, 48.4523, 13.9346, 0.83 ) }
    dend_1 { pt3dadd( 8.21993, 50.2895, 14.1106, 0.83 ) }
    dend_1 { pt3dadd( 8.44176, 52.4206, 14.2763, 0.83 ) }
    dend_1 { pt3dadd( 8.74253, 55.1121, 14.4886, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 8.98104, 57.886, 14.6919, 0.83 ) }
    dend_1 { pt3dadd( 9.14582, 59.4705, 14.8119, 0.83 ) }
    dend_1 { pt3dadd( 9.46876, 61.9209, 14.9996, 0.83 ) }
    dend_1 { pt3dadd( 9.74531, 64.3305, 15.1865, 0.83 ) }
    dend_1 { pt3dadd( 10.0818, 66.8629, 15.3564, 0.83 ) }
    dend_1 { pt3dadd( 10.519, 70.1723, 15.6149, 0.83 ) }
    dend_1 { pt3dadd( 10.8002, 72.334, 15.885, 0.83 ) }
    dend_1 { pt3dadd( 10.9312, 73.5302, 16.0665, 0.83 ) }
    dend_1 { pt3dadd( 11.0488, 74.8832, 16.3403, 0.83 ) }
    dend_1 { pt3dadd( 11.2137, 76.8847, 16.8667, 0.83 ) }
    dend_1 { pt3dadd( 11.3135, 79.8234, 17.8219, 0.55 ) }
    dend_1 { pt3dadd( 11.4538, 83.6772, 19.237, 0.55 ) }
    dend_1 { pt3dadd( 11.4353, 84.8112, 19.6691, 0.55 ) }
    dend_1 { pt3dadd( 11.3872, 87.1963, 20.5628, 0.55 ) }
    dend_1 { pt3dadd( 11.3416, 88.1965, 20.9201, 0.55 ) }
    dend_1 { pt3dadd( 11.2254, 90.0723, 21.5833, 0.55 ) }
    dend_1 { pt3dadd( 11.1457, 92.0294, 22.1841, 0.55 ) }
    dend_1 { pt3dadd( 11.1647, 94.873, 22.8992, 0.55 ) }
    dend_1 { pt3dadd( 11.1851, 96.7471, 23.3416, 0.55 ) }
    dend_1 { pt3dadd( 11.1766, 98.4528, 23.6856, 0.55 ) }
    dend_1 { pt3dadd( 11.2245, 100.585, 24.1114, 0.55 ) }
    dend_1 { pt3dadd( 11.4078, 102.804, 24.5217, 0.55 ) }
    dend_1 { pt3dadd( 11.7466, 105.83, 25.1338, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.3477, -53.3146, 24.1741, 0.83 ) }
    dend_9 { pt3dadd( -14.1436, -58.3993, 26.2768, 0.83 ) }
    dend_9 { pt3dadd( -15.5435, -62.427, 27.7482, 0.83 ) }
    dend_9 { pt3dadd( -17.2067, -67.2832, 29.3087, 0.83 ) }
    dend_9 { pt3dadd( -18.5836, -71.2956, 30.4617, 0.83 ) }
    dend_9 { pt3dadd( -19.4203, -73.734, 31.1624, 0.83 ) }
    dend_9 { pt3dadd( -20.4179, -76.6413, 31.9979, 0.83 ) }
    dend_9 { pt3dadd( -21.0531, -78.7459, 32.4532, 0.83 ) }
    dend_9 { pt3dadd( -21.7673, -81.1476, 32.8657, 0.83 ) }
    dend_9 { pt3dadd( -22.5958, -84.2154, 32.932, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.3477, -53.3146, 24.1741, 0.55 ) }
    dend_8 { pt3dadd( -9.57305, -54.0592, 31.1003, 0.55 ) }
    dend_8 { pt3dadd( -6.38166, -54.8295, 38.4265, 0.55 ) }
    dend_8 { pt3dadd( -4.76051, -55.2208, 42.148, 0.55 ) }
    dend_8 { pt3dadd( -2.71864, -55.7136, 46.8353, 0.28 ) }
    dend_8 { pt3dadd( -2.38133, -55.795, 47.6097, 0.83 ) }
    dend_8 { pt3dadd( -0.611779, -56.2221, 51.6719, 0.28 ) }
    dend_8 { pt3dadd( -0.279931, -56.2497, 52.3585, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.85733, 65.2113, -15.0598, 0.55 ) }
    dend_4 { pt3dadd( -5.49522, 68.3667, -15.4189, 0.55 ) }
    dend_4 { pt3dadd( -5.12929, 71.7005, -15.8896, 0.55 ) }
    dend_4 { pt3dadd( -4.86545, 74.0441, -16.1983, 0.55 ) }
    dend_4 { pt3dadd( -4.42912, 77.5615, -16.6507, 0.83 ) }
    dend_4 { pt3dadd( -4.11374, 80.0617, -16.9583, 0.55 ) }
    dend_4 { pt3dadd( -3.79382, 82.3928, -17.2404, 0.55 ) }
    dend_4 { pt3dadd( -3.47775, 84.5736, -17.4432, 1.11 ) }
    dend_4 { pt3dadd( -2.93097, 88.36, -17.9136, 0.55 ) }
    dend_4 { pt3dadd( -2.78852, 89.6271, -18.0874, 0.55 ) }
    dend_4 { pt3dadd( -2.61997, 91.2256, -18.3232, 1.11 ) }
    dend_4 { pt3dadd( -2.42454, 93.2095, -18.6279, 0.55 ) }
    dend_4 { pt3dadd( -2.32158, 94.506, -18.8222, 1.11 ) }
    dend_4 { pt3dadd( -2.03585, 98.4638, -19.3658, 0.55 ) }
    dend_4 { pt3dadd( -1.99435, 100.551, -19.7791, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.85733, 65.2113, -15.0598, 0.28 ) }
    dend_3 { pt3dadd( -6.77137, 69.2285, -19.0818, 0.28 ) }
    dend_3 { pt3dadd( -6.88128, 69.8305, -19.6689, 0.55 ) }
    dend_3 { pt3dadd( -7.73047, 75.1564, -24.6425, 0.28 ) }
    dend_3 { pt3dadd( -8.42122, 80.1266, -29.5642, 1.11 ) }
    dend_3 { pt3dadd( -8.72128, 82.7135, -32.2761, 0.28 ) }
    dend_3 { pt3dadd( -8.72128, 82.7135, -32.2761, 0.55 ) }
    dend_3 { pt3dadd( -8.60456, 85.8676, -34.9528, 0.28 ) }
    dend_3 { pt3dadd( -8.43161, 87.0783, -35.856, 1.11 ) }
    dend_3 { pt3dadd( -6.43821, 92.4623, -38.3779, 0.55 ) }
    dend_3 { pt3dadd( -4.07207, 96.66, -39.0496, 0.28 ) }
    dend_3 { pt3dadd( 0.186335, 103.228, -39.3082, 1.11 ) }
    dend_3 { pt3dadd( 4.13845, 108.799, -38.9296, 0.28 ) }
    dend_3 { pt3dadd( 4.246, 108.928, -38.8925, 0.55 ) }
    dend_3 { pt3dadd( 7.66531, 112.599, -37.1439, 0.28 ) }
    dend_3 { pt3dadd( 7.997, 112.922, -36.9014, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -22.5958, -84.2154, 32.932, 0.83 ) }
    dend_11 { pt3dadd( -22.5308, -88.7511, 34.4716, 0.83 ) }
    dend_11 { pt3dadd( -22.4937, -92.3901, 35.9535, 0.83 ) }
    dend_11 { pt3dadd( -22.4293, -94.0945, 36.6559, 0.83 ) }
    dend_11 { pt3dadd( -22.4049, -95.074, 37.144, 0.83 ) }
    dend_11 { pt3dadd( -22.4063, -97.7502, 38.5447, 0.83 ) }
    dend_11 { pt3dadd( -22.4186, -99.3328, 39.2595, 0.83 ) }
    dend_11 { pt3dadd( -22.4152, -102.341, 40.3241, 0.83 ) }
    dend_11 { pt3dadd( -22.327, -104.43, 41.0674, 0.83 ) }
    dend_11 { pt3dadd( -22.0022, -108.002, 42.2118, 0.83 ) }
    dend_11 { pt3dadd( -21.7402, -109.842, 42.6768, 0.83 ) }
    dend_11 { pt3dadd( -20.9888, -114.373, 43.3867, 0.83 ) }
    dend_11 { pt3dadd( -20.3503, -118.417, 43.758, 0.83 ) }
    dend_11 { pt3dadd( -19.9102, -121.761, 43.7786, 0.83 ) }
    dend_11 { pt3dadd( -19.7081, -124.179, 43.7253, 0.83 ) }
    dend_11 { pt3dadd( -19.6748, -124.667, 43.6989, 0.83 ) }
    dend_11 { pt3dadd( -19.5965, -127.463, 43.6928, 0.28 ) }
    dend_11 { pt3dadd( -19.6261, -128.201, 43.7444, 0.83 ) }
    dend_11 { pt3dadd( -19.8309, -130.105, 43.8282, 0.28 ) }
    dend_11 { pt3dadd( -20.2401, -133.483, 43.9248, 0.28 ) }
    dend_11 { pt3dadd( -20.3359, -134.208, 43.9728, 0.28 ) }
    dend_11 { pt3dadd( -20.6246, -136.52, 44.1433, 0.83 ) }
    dend_11 { pt3dadd( -20.8292, -138.565, 44.3211, 0.28 ) }
    dend_11 { pt3dadd( -20.9828, -140.206, 44.4861, 0.83 ) }
    dend_11 { pt3dadd( -21.0524, -141.521, 44.6531, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -22.5958, -84.2154, 32.932, 0.55 ) }
    dend_10 { pt3dadd( -26.4424, -91.1487, 30.6226, 0.55 ) }
    dend_10 { pt3dadd( -28.193, -94.1111, 29.7357, 0.55 ) }
    dend_10 { pt3dadd( -32.0372, -100.385, 28.041, 0.55 ) }
    dend_10 { pt3dadd( -33.749, -103.063, 27.3868, 0.55 ) }
    dend_10 { pt3dadd( -35.5117, -105.66, 26.8271, 0.28 ) }
    dend_10 { pt3dadd( -36.2994, -106.82, 26.5769, 0.55 ) }
    dend_10 { pt3dadd( -38.3656, -109.48, 26.2231, 0.28 ) }
    dend_10 { pt3dadd( -39.7355, -111.205, 26.0452, 0.55 ) }
    dend_10 { pt3dadd( -41.4514, -113.199, 26.0515, 0.28 ) }
    dend_10 { pt3dadd( -44.1723, -116.182, 26.0541, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_5 = new SectionList()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BP_898fda8796_0_0


