// Cell: Cell_478513398
/*
{
  "id" : "Cell_478513398",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "493.359, 537.222, 31.92, 13.139", "499.928, 537.222, 31.92, 13.139", "506.498, 537.222, 31.92, 13.139" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "499.928, 537.222, 31.92, 1.0", "505.77, 551.038, 31.92, 1.0", "511.611, 564.854, 31.92, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996194535352856
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "500.78, 539.937, 45.6005, 0.2288", "500.935, 540.432, 46.4293, 0.2988" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996194535352856
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "503.973, 533.673, 30.7695, 0.2288", "504.861, 532.959, 30.434, 0.3468", "505.912, 532.657, 30.2358, 0.4336", "507.037, 532.487, 30.0532, 0.4482", "507.88, 531.82, 29.9928, 0.4982", "508.19, 530.747, 29.9284, 0.709", "508.484, 529.709, 29.7287, 0.756", "509.117, 528.852, 29.4258, 0.6806", "509.659, 527.852, 29.1802, 0.6444", "510.322, 526.921, 29.0016, 0.5304", "511.195, 526.184, 28.8946, 0.5474", "511.725, 525.18, 28.901, 0.6154", "512.068, 524.089, 28.966, 0.5642", "512.281, 522.967, 29.0612, 0.642", "512.29, 521.825, 29.2099, 0.6352", "512.323, 520.751, 29.5095, 0.668" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996194535352856
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "494.47, 537.751, 30.6491, 0.4576", "493.518, 537.198, 29.6702, 0.4002", "492.549, 536.732, 29.2342, 0.3702", "491.692, 536.146, 28.6807, 0.4324" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996194535352856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "504.843, 534.818, 31.9945, 0.2288", "505.956, 534.926, 31.8707, 0.3462", "507.086, 534.984, 31.7904, 0.4278", "508.191, 535.234, 31.6627, 0.4602", "509.289, 535.381, 31.4672, 0.411", "510.43, 535.376, 31.3186, 0.3918", "511.562, 535.282, 31.1914, 0.465", "512.625, 534.868, 31.1539, 0.5298", "513.508, 534.341, 31.3502, 0.5364", "514.193, 533.564, 31.6921, 0.642", "515.029, 532.785, 31.9438, 0.8416" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996194535352856
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "496.283, 532.088, 33.586, 1.795", "495.264, 531.575, 33.9122, 0.4542", "494.247, 531.105, 34.1107, 0.51", "493.421, 530.345, 34.2611, 0.499", "492.628, 529.617, 34.5344, 0.5758", "491.895, 528.83, 34.918, 0.7042", "491.116, 528.005, 35.3287, 0.7812", "490.24, 527.273, 35.7437, 0.791", "489.306, 526.67, 36.2314, 0.7676", "488.63, 525.904, 36.8382, 0.697", "488.106, 524.908, 37.3789, 0.6992", "487.895, 523.793, 37.8585, 0.7438", "487.31, 522.901, 38.3947, 1.0864", "487.069, 521.845, 38.9458, 1.3754", "486.319, 519.696, 39.7393, 1.1438", "486.079, 518.6, 40.0669, 1.2164", "485.639, 517.565, 40.3648, 1.154", "485.069, 516.574, 40.5558, 1.0788", "484.332, 515.7, 40.6714, 0.9712", "483.499, 514.918, 40.7366, 0.8468", "482.572, 514.29, 40.7095, 0.7096", "481.527, 513.856, 40.6532, 0.6882", "480.438, 513.508, 40.6809, 0.6606", "479.336, 513.331, 40.8789, 0.5518" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49996194535352856
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "511.611, 564.854, 31.92, 1.0", "517.452, 578.67, 31.92, 1.0", "523.294, 592.486, 31.92, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "500.935, 540.432, 46.4293, 0.2988", "501.09, 540.928, 50.591, 0.2288", "501.246, 541.423, 53.7001, 0.2748", "501.401, 541.919, 55.0449, 0.2752", "501.556, 542.413, 56.5928, 0.2756", "501.711, 542.908, 58.2162, 0.2766", "501.758, 542.256, 59.5434, 0.2784", "501.56, 541.23, 60.494, 0.2816", "501.085, 540.756, 61.3382, 0.2874" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "500.935, 540.432, 46.4293, 0.2988", "500.462, 540.998, 46.5399, 0.3144" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "512.323, 520.751, 29.5095, 0.668", "512.237, 519.145, 29.8012, 0.739", "512.01, 518.079, 30.1451, 0.8218", "511.852, 517.0, 30.5122, 0.7528", "511.829, 515.869, 30.7863, 0.561", "511.855, 514.728, 30.8924, 0.5164", "512.016, 513.656, 30.7566, 0.526", "511.982, 512.585, 30.4363, 0.5534", "511.857, 511.458, 30.0922, 0.5572", "511.895, 510.318, 29.7867, 0.5638", "512.219, 509.225, 29.5322, 0.5776", "512.657, 508.186, 29.2799, 0.5964", "513.024, 507.124, 29.0284, 0.6634", "513.352, 506.031, 28.8532, 0.6322", "513.62, 504.947, 28.7921, 0.6428", "513.661, 503.824, 28.6728, 0.5572", "513.693, 502.695, 28.5026, 0.4532", "513.865, 501.594, 28.2811, 0.4522", "514.531, 500.688, 28.0568, 0.4348", "515.362, 499.904, 27.8951, 0.4782", "516.264, 499.203, 27.8039, 0.6476", "516.977, 498.309, 27.7978, 0.7604", "517.849, 497.571, 27.8681, 0.801", "518.899, 497.129, 28.0196, 0.7794", "519.836, 496.544, 28.3007, 0.7518", "520.464, 495.598, 28.6, 0.6404", "520.535, 494.472, 28.9271, 0.727", "520.615, 493.383, 29.3112, 0.8378" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "512.323, 520.751, 29.5095, 0.668", "512.74, 519.374, 31.9852, 0.9152", "513.359, 518.488, 33.152, 0.6362", "513.902, 517.595, 33.6834, 0.5956", "514.031, 516.477, 34.1944, 0.506", "513.503, 515.602, 34.7855, 0.4104", "512.824, 514.99, 35.4312, 0.3486", "512.742, 513.856, 35.8655, 0.3604", "512.737, 512.74, 36.0298, 0.455", "512.716, 511.607, 36.0212, 0.5064", "512.576, 510.5, 35.9262, 0.5158", "512.081, 509.525, 35.8459, 0.493", "511.235, 508.793, 35.6815, 0.4186", "510.272, 508.182, 35.551, 0.435", "509.309, 507.573, 35.4796, 0.403", "508.454, 506.815, 35.4494, 0.4184", "507.712, 505.948, 35.4516, 0.541", "507.128, 504.97, 35.4886, 0.5408", "506.674, 503.921, 35.5746, 0.5004", "506.316, 502.86, 35.6745, 0.3918", "506.137, 501.761, 35.7871, 0.3546", "505.905, 500.674, 36.0562, 0.4026", "505.868, 499.676, 36.6058, 0.3826", "505.807, 498.784, 37.4382, 0.4158", "505.395, 497.932, 38.4031, 0.3664", "504.457, 497.755, 39.3568, 0.355", "503.464, 498.292, 40.2312, 0.4018", "502.66, 498.397, 41.123, 0.3874", "502.836, 497.88, 42.105, 0.3948", "503.541, 497.142, 43.0192, 0.4714", "503.603, 496.124, 43.7856, 0.5378", "503.03, 495.187, 44.4259, 0.5702", "502.148, 494.485, 44.898, 0.6126", "501.301, 493.746, 45.2424, 0.5484", "500.701, 492.799, 45.3998, 0.4368", "500.136, 491.812, 45.4272, 0.423", "499.454, 490.898, 45.3989, 0.3734", "498.886, 489.94, 45.2936, 0.3988", "498.602, 488.846, 45.2346, 0.3338", "498.602, 487.739, 45.334, 0.3", "498.862, 486.635, 45.4961, 0.2746", "499.356, 485.622, 45.6554, 0.2746", "499.997, 484.73, 45.971, 0.2748", "500.802, 484.029, 46.4458, 0.2748", "501.468, 483.213, 47.0257, 0.2752", "500.701, 482.638, 47.6927, 0.2756", "499.848, 481.944, 48.312, 0.2766", "499.449, 481.714, 48.697, 0.2782", "499.448, 480.63, 48.9359, 0.2814", "499.809, 479.578, 48.9726, 0.287", "499.96, 478.53, 48.9639, 0.2988", "499.891, 477.517, 48.7343, 0.3144", "500.276, 476.578, 48.3748, 0.3738", "500.678, 475.69, 47.98, 0.3346", "501.358, 474.936, 47.5034, 0.3012", "502.176, 474.26, 46.9216, 0.2768", "502.77, 473.317, 46.3562, 0.2788", "503.103, 472.358, 45.7783, 0.2824", "503.154, 471.275, 45.2869, 0.2894", "504.018, 470.886, 44.7661, 0.3014", "504.916, 471.408, 44.3114, 0.3266", "505.48, 472.324, 44.0283, 0.3606", "506.085, 473.268, 43.8852, 0.4848", "507.029, 473.897, 43.867, 0.4176", "508.053, 474.384, 43.9085, 0.3652", "509.105, 474.464, 43.974, 0.374", "510.081, 474.914, 44.0062, 0.335", "511.039, 475.392, 43.8984, 0.302", "511.891, 476.07, 43.7909, 0.2784", "512.75, 476.557, 43.7116, 0.2816", "513.592, 476.934, 43.5481, 0.2874", "514.531, 477.311, 43.2992, 0.2994", "515.508, 477.506, 42.877, 0.3164", "516.561, 477.522, 42.3794, 0.3728", "517.607, 477.533, 41.8225, 0.356", "518.576, 477.849, 40.88, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "491.692, 536.146, 28.6807, 0.4324", "490.869, 536.268, 27.54, 0.2288", "489.728, 536.316, 27.2, 0.354", "488.585, 536.37, 27.0675, 0.4728", "487.529, 536.729, 26.8922, 0.3942", "486.984, 537.626, 26.6556, 0.3272", "486.961, 538.759, 26.3407, 0.2778", "486.451, 539.668, 25.9073, 0.2806", "485.507, 539.616, 25.2702, 0.2856", "484.617, 539.459, 24.3788, 0.295", "484.648, 539.446, 23.1875, 0.3132", "484.85, 540.426, 22.0146, 0.342", "485.022, 541.556, 21.0511, 0.4198", "485.249, 542.677, 20.2614, 0.4452", "485.04, 543.224, 19.5625, 0.3834", "484.698, 544.227, 18.9043, 0.3396", "483.999, 543.886, 18.0907, 0.3734", "483.46, 543.514, 17.174, 0.334", "483.442, 543.365, 15.9788, 0.3002", "482.822, 543.524, 14.7866, 0.275", "481.711, 543.629, 13.8536, 0.2754", "480.567, 543.629, 13.2006, 0.2762", "479.423, 543.629, 12.7948, 0.2776", "478.279, 543.629, 12.5754, 0.2802", "477.143, 543.74, 12.4974, 0.285", "476.184, 543.972, 12.3805, 0.2938", "475.263, 544.121, 12.2274, 0.3112", "474.352, 543.866, 12.2937, 0.3382", "473.264, 543.791, 12.3683, 0.413", "472.248, 543.371, 12.596, 0.4328", "471.16, 543.107, 12.8774, 0.3594", "470.201, 543.171, 13.2253, 0.3", "469.373, 543.696, 13.4761, 0.2746", "469.037, 544.465, 13.9454, 0.2748", "468.324, 545.22, 14.3327, 0.2748", "467.62, 545.77, 14.7301, 0.2752", "466.668, 546.06, 15.2236, 0.2756", "466.227, 546.793, 15.8084, 0.2766", "466.638, 547.168, 16.4562, 0.2784", "466.22, 547.843, 16.949, 0.2818", "465.722, 548.344, 17.5009, 0.288", "464.866, 548.933, 17.9311, 0.2994", "463.824, 549.242, 18.1009, 0.3214", "463.341, 550.138, 18.0175, 0.3572", "462.652, 550.482, 17.6888, 0.4476", "461.669, 550.607, 17.2236, 0.4988", "460.987, 551.036, 16.8579, 0.4724", "460.432, 551.554, 16.5617, 0.5552", "459.893, 552.43, 16.4659, 0.5266", "459.451, 553.098, 16.4457, 0.4434", "458.967, 553.69, 16.5587, 0.4352", "457.902, 554.026, 16.7534, 0.396", "457.038, 554.627, 17.0664, 0.4416", "456.559, 555.39, 17.3491, 0.4088", "456.296, 556.464, 17.6408, 0.4592", "456.257, 557.544, 17.9652, 0.471", "456.734, 558.51, 18.2483, 0.4322", "457.197, 559.418, 18.6367, 0.4256", "457.402, 560.314, 19.1132, 0.554", "456.48, 560.524, 19.5875, 0.566", "455.904, 560.887, 20.2828, 0.542", "455.884, 561.834, 20.9439, 0.4942", "455.873, 562.766, 21.5212, 0.4206", "456.076, 563.803, 21.8744, 0.4404", "456.677, 564.577, 22.2564, 0.4054", "456.914, 565.272, 22.6073, 0.4588", "456.637, 566.203, 22.8278, 0.4418", "456.505, 567.22, 23.0542, 0.5158", "456.654, 568.068, 23.4599, 0.5978", "456.112, 568.809, 23.7703, 0.5616", "455.94, 569.736, 24.1808, 0.492", "455.732, 570.49, 24.5378, 0.3748", "455.016, 571.071, 24.9342, 0.3296", "454.58, 572.104, 25.182, 0.3244", "454.173, 572.888, 25.2867, 0.3926", "454.138, 573.82, 25.318, 0.369", "453.71, 574.671, 25.0892, 0.3668", "453.714, 575.473, 24.5886, 0.3892", "454.659, 575.68, 23.9827, 0.5328", "455.15, 576.347, 23.2677, 0.5318", "455.805, 576.969, 22.5676, 0.4542", "456.441, 577.678, 21.9557, 0.4492", "456.815, 578.334, 21.4255, 0.4526", "457.257, 579.16, 21.1355, 0.3968", "457.356, 580.275, 20.9345, 0.3654", "457.142, 581.357, 20.6853, 0.416", "456.69, 582.26, 20.4003, 0.4384", "455.934, 582.959, 20.1176, 0.3698", "455.238, 583.44, 19.8176, 0.319", "454.303, 583.692, 19.6073, 0.3112", "453.366, 584.129, 19.4496, 0.3368", "452.578, 584.46, 19.1916, 0.4168", "451.521, 584.535, 18.8793, 0.4086", "450.667, 584.249, 18.7138, 0.466", "449.753, 584.317, 18.4815, 0.4488", "448.731, 584.401, 18.3122, 0.5588", "448.033, 585.201, 18.0779, 0.533", "447.422, 586.122, 17.9611, 0.455", "446.648, 586.759, 17.9423, 0.4578", "445.927, 587.33, 18.0509, 0.4338", "445.171, 587.483, 18.0605, 0.531", "444.253, 587.799, 18.1889, 0.4802", "443.373, 588.393, 18.3785, 0.3644", "443.271, 589.324, 18.7135, 0.2542", "442.842, 590.075, 19.88, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "491.692, 536.146, 28.6807, 0.4324", "490.94, 535.542, 28.1789, 0.4326", "490.11, 534.755, 27.7823, 0.5348", "489.253, 534.016, 27.5247, 0.458", "488.439, 533.25, 27.4024, 0.4658" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "515.029, 532.785, 31.9438, 0.8416", "515.201, 532.391, 33.9136, 0.4576", "515.737, 531.389, 34.0046, 0.385", "516.326, 530.419, 34.0337, 0.3488", "517.201, 529.729, 34.0469, 0.3598", "518.154, 529.128, 34.043, 0.4588", "518.747, 528.196, 34.02, 0.4886", "518.841, 527.082, 33.9741, 0.6046", "518.578, 525.973, 33.899, 0.7526", "518.169, 524.907, 33.7932, 0.8952", "517.907, 523.809, 33.6493, 0.8854", "518.06, 522.698, 33.4586, 0.8238", "518.458, 521.643, 33.175, 0.9222", "518.909, 520.711, 32.7158, 0.986", "519.488, 519.822, 32.165, 0.9948", "520.125, 518.913, 31.6022, 0.8558", "520.229, 517.884, 31.0766, 0.895", "519.871, 516.83, 30.6001, 0.899", "519.602, 515.739, 30.2215, 0.7828", "519.313, 514.636, 29.9715, 0.708", "518.812, 513.632, 29.8539, 0.8028", "518.194, 512.692, 29.827, 0.7612", "517.5, 511.791, 29.7746, 0.8228", "516.839, 510.925, 29.5694, 0.7226", "516.719, 509.92, 29.2006, 0.6614", "516.917, 508.813, 28.8022, 0.8578", "517.281, 507.732, 28.4178, 0.8618", "517.654, 506.678, 27.9977, 0.7876", "517.768, 505.562, 27.5875, 0.8172", "517.789, 504.421, 27.238, 0.7468", "517.867, 503.28, 26.9186, 0.7676", "518.201, 502.218, 26.5396, 0.7576", "518.776, 501.259, 26.113, 0.7466", "519.576, 500.508, 25.6304, 0.6894", "520.029, 499.559, 25.0723, 0.533", "520.281, 498.537, 24.4551, 0.4876", "521.066, 497.781, 24.0311, 0.5884", "521.959, 497.078, 23.7003, 0.793", "522.919, 496.523, 23.3862, 0.8578", "523.781, 495.839, 23.0929, 0.6746", "524.161, 494.781, 22.8925, 0.6628", "524.201, 493.658, 22.8687, 0.6506", "524.285, 492.651, 23.0726, 0.5814", "524.685, 491.595, 23.3069, 0.4506", "525.227, 490.588, 23.5016, 0.4488", "525.897, 489.698, 23.703, 0.4208", "525.865, 488.631, 23.6359, 0.4886", "525.94, 487.56, 23.373, 0.4906", "526.216, 486.453, 23.0967, 0.638", "526.161, 485.359, 22.8163, 0.6702", "525.471, 484.493, 22.4956, 0.7574", "524.714, 483.642, 22.2382, 0.7854", "524.092, 482.687, 22.086, 0.8002", "523.701, 481.615, 22.0064, 0.7792", "523.471, 480.495, 21.9704, 0.7456", "523.263, 479.375, 21.9729, 0.6584", "523.246, 478.233, 22.0347, 0.6162", "523.141, 477.097, 22.1374, 0.6456", "522.862, 475.99, 22.2634, 0.634", "522.821, 474.852, 22.3867, 0.4764", "522.883, 473.789, 22.4108, 0.3864", "523.237, 472.76, 22.6526, 0.3828", "523.255, 471.879, 22.9825, 0.4986", "523.095, 471.117, 23.5654, 0.5768", "523.695, 470.647, 24.2868, 0.6978", "524.378, 470.518, 25.1611, 0.581", "524.85, 470.468, 26.1832, 0.418", "525.396, 469.788, 27.0185, 0.3146", "525.742, 468.77, 27.4948, 0.3014", "525.779, 467.73, 27.7173, 0.325", "525.782, 466.821, 27.7662, 0.3648", "525.594, 465.789, 27.5073, 0.457", "525.492, 464.672, 27.1038, 0.5398", "525.654, 463.63, 26.665, 0.435", "525.782, 463.351, 25.8851, 0.3502", "525.782, 462.295, 25.2893, 0.3474", "525.983, 461.205, 24.8758, 0.2796", "526.354, 460.689, 23.8, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "515.029, 532.785, 31.9438, 0.8416", "516.133, 532.181, 32.0564, 0.9658", "517.094, 531.563, 32.0183, 0.7868", "518.097, 531.016, 31.8035, 0.6118", "519.147, 531.222, 31.3155, 0.6688" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "479.336, 513.331, 40.8789, 0.5518", "479.349, 513.084, 42.441, 0.2288", "479.479, 513.436, 45.0568, 0.2838", "479.922, 514.15, 46.1745, 0.2918", "480.671, 514.826, 47.3497, 0.3064", "481.6, 515.198, 48.5024, 0.3342", "482.6, 515.018, 49.6017, 0.382", "483.478, 514.406, 50.556, 0.4884", "484.293, 513.703, 51.3612, 0.6006", "485.272, 513.246, 52.0349, 0.5354", "486.372, 513.213, 52.5176, 0.595", "487.488, 513.43, 52.9071, 0.517", "488.554, 513.735, 53.3322, 0.6014", "489.538, 514.258, 53.8065, 0.5598", "490.447, 514.828, 54.3763, 0.5306", "491.316, 514.922, 55.1264, 0.472", "492.149, 514.331, 55.8984, 0.386", "492.952, 513.52, 56.5659, 0.3442", "493.748, 512.726, 57.1799, 0.382", "494.728, 512.259, 57.7732, 0.3498", "495.776, 512.387, 58.3741, 0.329", "496.889, 512.45, 58.9215, 0.3306", "497.987, 512.192, 59.4588, 0.3682", "499.038, 511.811, 60.0446, 0.4988", "500.141, 511.874, 60.585, 0.4446", "501.018, 512.4, 61.2424, 0.41", "501.776, 512.16, 62.1155, 0.4826", "502.724, 511.934, 63.07, 0.4122", "503.798, 511.731, 63.961, 0.3604", "504.856, 512.075, 64.745, 0.3412", "505.932, 512.464, 65.3481, 0.3888", "507.076, 512.504, 65.7924, 0.532", "508.197, 512.68, 66.1388, 0.5306", "508.947, 513.53, 66.4882, 0.451", "509.363, 514.553, 66.9402, 0.448", "510.008, 515.471, 67.4257, 0.4268", "511.051, 515.738, 68.0576, 0.4646", "512.147, 515.852, 68.7688, 0.6162", "513.143, 516.208, 69.5876, 0.7314", "514.172, 516.522, 70.4491, 0.606", "515.096, 516.581, 71.3642, 0.4174", "514.912, 517.566, 72.291, 0.313", "514.198, 518.428, 73.1581, 0.2998", "513.975, 519.289, 74.0681, 0.3162", "514.406, 520.117, 75.0767, 0.3774", "514.531, 521.051, 76.1079, 0.3412", "514.258, 522.108, 77.044, 0.3138", "514.182, 523.015, 77.9976, 0.2996", "514.688, 523.893, 78.925, 0.323", "515.453, 524.605, 79.7824, 0.354", "516.435, 525.131, 80.4507, 0.473", "517.516, 525.392, 80.8774, 0.3946", "518.523, 525.047, 81.2795, 0.3278", "519.631, 524.991, 81.6567, 0.2792", "520.672, 525.424, 82.0462, 0.2828", "521.722, 525.872, 82.4771, 0.291", "522.688, 526.372, 83.0505, 0.2994", "523.224, 527.057, 83.8499, 0.3474", "523.378, 527.956, 84.761, 0.2796", "524.182, 528.528, 86.8, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "479.336, 513.331, 40.8789, 0.5518", "478.136, 512.728, 41.1928, 0.4012", "477.186, 512.098, 41.5716, 0.3302", "476.182, 511.709, 42.1056, 0.3326", "475.219, 511.217, 42.7316, 0.3714" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "501.085, 540.756, 61.3382, 0.2874", "500.068, 541.316, 61.6694, 0.2994", "499.47, 540.558, 61.5572, 0.3152", "499.231, 539.763, 61.0168, 0.3754", "498.975, 538.875, 60.4464, 0.3376", "498.585, 538.436, 59.6408, 0.3068", "497.847, 537.607, 58.9716, 0.287", "497.079, 537.055, 58.2672, 0.2988", "495.973, 537.099, 57.6778, 0.3142", "495.139, 537.656, 57.146, 0.3734", "494.483, 538.468, 56.5799, 0.334", "493.945, 539.413, 56.0675, 0.3002", "493.408, 539.404, 55.3658, 0.2748", "492.891, 539.642, 54.6893, 0.275", "492.212, 540.421, 54.1993, 0.2754", "491.285, 540.742, 54.2041, 0.2762", "490.431, 541.315, 54.5538, 0.2778", "490.318, 542.027, 55.2983, 0.2804", "489.8, 541.913, 56.3816, 0.2856", "488.734, 541.987, 57.4636, 0.2944", "488.591, 542.509, 58.6967, 0.3136", "487.66, 542.795, 59.7906, 0.3362", "486.576, 543.057, 60.5466, 0.4406", "485.668, 543.594, 61.0579, 0.3304", "484.714, 544.086, 61.88, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "501.085, 540.756, 61.3382, 0.2874", "500.958, 539.986, 65.1756, 0.2288", "500.887, 538.879, 65.7381, 0.413", "500.898, 537.753, 65.9414, 0.4328", "501.165, 536.782, 66.2421, 0.3592", "501.378, 535.679, 66.5302, 0.3", "501.853, 534.925, 66.6579, 0.2746", "502.07, 533.844, 66.7946, 0.2746", "502.615, 532.994, 67.0992, 0.2744", "503.076, 532.005, 67.3492, 0.2744", "503.474, 530.985, 67.6304, 0.2742", "503.424, 529.929, 67.9846, 0.274", "503.246, 529.214, 68.6076, 0.2736", "502.699, 528.908, 69.4154, 0.2728", "501.875, 528.144, 70.1182, 0.2712", "501.499, 527.266, 70.7694, 0.2684", "500.685, 526.679, 71.444, 0.2626", "499.811, 526.216, 72.133, 0.2542", "498.801, 525.897, 72.7157, 0.2288", "497.869, 526.354, 73.92, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "500.462, 540.998, 46.5399, 0.3144", "499.733, 539.882, 46.662, 0.3738", "499.174, 538.956, 46.6544, 0.3346", "498.291, 538.299, 46.5469, 0.3012", "497.508, 537.504, 46.4722, 0.2768", "496.701, 536.713, 46.4388, 0.2788", "496.193, 535.74, 46.5144, 0.2826", "495.662, 534.786, 46.7244, 0.2894", "495.111, 533.963, 47.1184, 0.3018", "494.33, 533.276, 47.453, 0.3262", "493.868, 532.297, 47.6675, 0.3644", "493.595, 531.293, 47.8078, 0.4696", "493.121, 530.277, 47.8822, 0.4972", "492.724, 529.232, 47.9052, 0.6754", "492.286, 528.182, 47.9178, 0.6186", "491.647, 527.28, 47.9273, 0.5614", "490.956, 526.471, 47.8601, 0.451", "490.586, 525.407, 47.8498, 0.4972", "489.921, 524.614, 47.9962, 0.5078", "489.147, 523.958, 48.242, 0.6646", "488.464, 523.41, 48.7634, 0.7454", "487.455, 522.922, 49.2789, 0.7704", "486.447, 522.56, 49.8313, 0.7356", "485.419, 522.509, 50.1858, 0.6092", "484.666, 522.766, 50.673, 0.6742", "483.973, 523.422, 51.2588, 0.715", "482.869, 523.61, 51.7586, 0.7196", "482.085, 524.042, 52.3849, 0.6158", "481.036, 524.285, 53.027, 0.5102", "480.026, 524.63, 53.6701, 0.5796", "478.896, 524.532, 54.1391, 0.5648", "477.794, 524.317, 54.544, 0.5472", "476.807, 523.981, 54.994, 0.4666", "476.078, 523.215, 55.4355, 0.5508", "475.725, 522.132, 55.7962, 0.4874", "475.003, 521.33, 56.0218, 0.5208", "474.218, 520.703, 56.3419, 0.5352", "473.323, 520.177, 56.5746, 0.5654", "472.399, 520.396, 56.931, 0.604", "471.441, 520.401, 57.4479, 0.5312", "470.397, 520.291, 58.0681, 0.4112", "469.498, 520.294, 58.7611, 0.3436", "468.741, 520.583, 59.4429, 0.3812", "467.648, 520.917, 59.9514, 0.3482", "466.729, 520.84, 60.4047, 0.3264", "465.839, 520.291, 60.6502, 0.3246", "465.113, 519.893, 60.6382, 0.3618", "464.053, 519.834, 60.6511, 0.4638", "463.111, 520.177, 60.6466, 0.4926", "462.086, 519.885, 60.6491, 0.637", "461.31, 519.325, 60.8779, 0.6916", "460.387, 518.789, 61.1489, 0.6828", "459.303, 518.575, 61.4729, 0.5158", "458.483, 518.652, 62.0133, 0.479", "457.777, 518.954, 62.6699, 0.4606", "456.645, 518.918, 63.1854, 0.4118", "455.611, 519.263, 63.497, 0.3932", "454.852, 519.948, 63.6138, 0.467", "453.912, 519.807, 63.5211, 0.5358", "452.832, 519.792, 63.3226, 0.5354", "451.977, 519.376, 63.0672, 0.7", "451.292, 518.707, 62.9723, 0.659", "450.388, 518.035, 62.9118, 0.6616", "449.54, 517.327, 62.9048, 0.514", "448.719, 516.659, 62.9121, 0.5232", "448.038, 516.745, 63.1145, 0.5396", "446.956, 516.974, 63.2498, 0.5734", "446.365, 516.474, 63.49, 0.6186", "445.53, 515.785, 63.6308, 0.5596", "445.09, 514.904, 63.5916, 0.457", "444.149, 514.373, 63.5894, 0.4616", "443.112, 514.092, 63.7056, 0.4406", "442.092, 513.77, 63.9461, 0.5438", "441.181, 513.367, 64.1514, 0.5042", "440.204, 513.354, 64.4238, 0.4072", "439.298, 512.706, 64.7038, 0.3426", "438.286, 512.395, 64.916, 0.3494", "437.352, 512.398, 64.969, 0.4334", "436.777, 511.824, 65.1927, 0.4714", "436.079, 511.334, 65.5189, 0.427", "435.363, 510.642, 65.7255, 0.4458", "434.254, 510.449, 65.933, 0.4462", "433.245, 510.179, 66.164, 0.3852", "432.414, 509.733, 66.3524, 0.3426", "431.672, 509.194, 66.4244, 0.3792", "431.137, 508.65, 66.3816, 0.3448", "430.438, 508.201, 66.4434, 0.3198", "429.596, 507.489, 66.43, 0.3136", "428.732, 506.874, 66.4292, 0.3362", "428.01, 506.342, 66.2144, 0.4406", "427.245, 505.758, 66.0486, 0.3304", "426.369, 505.534, 65.24, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "500.462, 540.998, 46.5399, 0.3144", "499.949, 540.275, 47.3012, 0.4576", "499.608, 539.213, 47.6554, 0.485", "499.188, 538.173, 47.8195, 0.4086", "498.425, 537.38, 48.0936, 0.393", "497.569, 536.934, 48.4336, 0.4396", "496.53, 537.002, 48.8631, 0.6168", "495.632, 537.592, 49.3382, 0.7324", "494.985, 538.453, 49.8728, 0.608", "494.78, 539.53, 50.2776, 0.4208", "494.78, 540.666, 50.5576, 0.3196", "495.021, 541.676, 50.8757, 0.3118", "495.537, 542.304, 51.3164, 0.3396", "495.76, 543.166, 51.5693, 0.4154", "495.926, 544.086, 51.8151, 0.4374", "495.692, 545.081, 51.9624, 0.3678", "495.581, 545.948, 51.8574, 0.3156", "495.426, 546.856, 51.8944, 0.3046", "494.836, 547.747, 51.9702, 0.325", "494.123, 548.549, 52.1466, 0.3936", "494.078, 549.472, 52.5734, 0.3708", "494.105, 550.439, 53.1625, 0.3706", "494.722, 551.385, 53.667, 0.396", "495.337, 552.236, 54.1122, 0.5454", "495.81, 553.077, 54.5947, 0.5548", "496.29, 553.757, 54.8498, 0.498", "496.753, 554.765, 54.9629, 0.5258", "497.203, 555.645, 55.0511, 0.616", "497.638, 556.551, 55.127, 0.5964", "497.54, 557.581, 55.3636, 0.551", "496.988, 558.433, 55.6525, 0.5106", "496.954, 559.174, 56.0241, 0.4534", "496.717, 560.063, 56.3693, 0.4894", "496.267, 560.753, 56.4281, 0.5526", "495.779, 561.658, 56.5043, 0.4588", "495.698, 562.72, 56.4746, 0.394", "495.49, 563.654, 56.5757, 0.4294", "495.508, 564.752, 56.6642, 0.4274", "495.88, 565.684, 56.6796, 0.524", "496.427, 566.636, 56.6994, 0.4442", "496.673, 567.696, 56.7137, 0.4092", "496.534, 568.719, 56.7291, 0.4812", "496.22, 569.693, 56.6269, 0.4096", "495.971, 570.767, 56.5832, 0.3568", "495.886, 571.75, 56.7521, 0.3272", "495.354, 572.499, 57.1732, 0.399", "495.072, 573.469, 57.7195, 0.3758", "495.203, 574.565, 58.221, 0.4034", "495.659, 575.589, 58.6631, 0.3424", "496.086, 576.532, 59.1058, 0.3154", "496.648, 577.378, 59.4045, 0.3044", "497.027, 578.372, 59.4166, 0.3246", "497.602, 579.322, 59.3418, 0.3928", "498.309, 580.122, 59.2886, 0.3704", "498.753, 580.974, 59.3586, 0.3636", "499.267, 581.699, 59.2838, 0.413", "499.634, 581.956, 59.1794, 0.4328", "500.714, 582.182, 59.1184, 0.3594", "501.555, 582.373, 59.2984, 0.3", "501.733, 582.448, 59.4098, 0.2746", "502.178, 582.779, 59.4944, 0.2746", "502.398, 583.233, 59.5398, 0.2746", "502.96, 584.206, 59.6025, 0.2746", "503.246, 585.289, 59.6621, 0.2748", "503.248, 586.424, 59.761, 0.2748", "503.529, 587.439, 59.9228, 0.2752", "503.701, 588.46, 60.044, 0.2756", "503.272, 589.336, 60.2535, 0.2764", "502.557, 590.154, 60.4862, 0.2782", "502.013, 590.786, 60.9734, 0.2812", "501.277, 591.554, 61.3458, 0.2868", "500.745, 591.863, 61.9578, 0.2982", "499.691, 591.747, 62.5425, 0.3132", "498.68, 591.335, 63.0249, 0.3716", "497.686, 591.737, 63.4556, 0.3304", "497.016, 592.203, 63.9699, 0.2938", "497.268, 593.158, 64.456, 0.2626", "498.062, 593.858, 64.7458, 0.2542", "498.83, 594.41, 65.0686, 0.2288", "499.585, 594.994, 65.24, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "520.615, 493.383, 29.3112, 0.8378", "520.607, 492.643, 29.6414, 0.8256", "520.969, 491.69, 29.902, 0.7164", "521.298, 490.782, 30.074, 0.7054", "521.044, 489.76, 30.0748, 0.67", "520.641, 488.992, 29.9046, 0.6782", "519.727, 488.431, 29.783, 0.7932", "519.193, 487.64, 29.5005, 0.7492", "518.69, 486.754, 29.2538, 0.7722", "518.625, 485.63, 29.1586, 0.766", "518.974, 484.694, 29.2608, 0.7618", "519.55, 483.945, 29.4356, 0.7192", "520.545, 483.502, 29.6615, 0.5794", "521.261, 483.049, 29.9986, 0.6168", "521.488, 482.099, 30.0518, 0.619", "521.779, 481.091, 30.0258, 0.4908", "521.674, 480.062, 29.7788, 0.4378", "521.656, 478.94, 29.584, 0.3588", "521.466, 477.835, 29.3983, 0.3474", "521.146, 476.918, 29.0363, 0.357", "520.664, 476.27, 28.5404, 0.4538", "520.294, 475.267, 28.082, 0.4792", "519.781, 474.376, 27.6807, 0.5876", "519.319, 473.504, 27.3185, 0.7196", "518.661, 472.938, 27.0517, 0.8404", "517.901, 472.757, 26.7695, 0.7526", "517.198, 472.125, 26.4857, 0.7304", "516.638, 471.357, 26.4233, 0.6926", "516.079, 470.43, 26.3715, 0.6068", "515.557, 469.44, 26.425, 0.5234", "515.029, 468.479, 26.5609, 0.4586", "514.358, 467.588, 26.7077, 0.3602", "513.617, 466.888, 26.8439, 0.3016", "513.146, 465.901, 26.9236, 0.2774", "512.61, 465.005, 26.8507, 0.2798", "512.182, 464.0, 26.6386, 0.2844", "511.472, 463.121, 26.4116, 0.2924", "511.076, 462.353, 26.0262, 0.309", "510.464, 461.666, 25.6725, 0.3328", "510.135, 460.664, 25.4093, 0.4092", "509.975, 459.647, 25.2208, 0.3948", "510.225, 458.708, 24.9757, 0.4394", "511.072, 458.332, 24.6719, 0.4048", "511.757, 457.829, 24.4343, 0.4518", "512.833, 458.005, 24.2629, 0.4576", "513.898, 458.373, 24.1351, 0.4062", "514.988, 458.63, 24.0698, 0.3828", "516.112, 458.522, 24.1434, 0.4482", "517.148, 458.512, 24.2923, 0.499", "517.901, 458.337, 24.6166, 0.4776", "518.794, 458.206, 24.9549, 0.5422", "519.383, 457.515, 25.3278, 0.6116", "520.061, 456.975, 25.4464, 0.757", "520.769, 456.191, 25.6304, 0.7172", "521.604, 455.742, 25.9799, 0.5424", "522.562, 455.655, 26.2542, 0.4808", "523.151, 455.77, 26.8088, 0.4652", "524.084, 455.631, 27.4273, 0.4152", "524.953, 455.198, 27.9209, 0.4238", "525.906, 455.183, 28.3662, 0.4068", "526.328, 455.083, 28.9386, 0.305", "527.042, 455.426, 29.96, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "520.615, 493.383, 29.3112, 0.8378", "520.925, 492.671, 30.466, 0.4576", "521.661, 491.836, 30.4226, 0.7242", "522.633, 491.25, 30.4004, 0.741", "523.532, 490.569, 30.3383, 0.8622", "524.209, 489.657, 30.214, 0.8796", "524.901, 488.792, 29.9793, 0.7744", "525.383, 487.835, 29.6663, 0.5602", "525.292, 486.746, 29.3493, 0.4838", "524.753, 485.743, 29.1309, 0.6158", "524.032, 484.856, 29.0184, 0.677", "523.32, 483.965, 29.0144, 0.7652", "522.727, 482.988, 29.1158, 0.823", "522.087, 482.043, 29.3059, 0.7564", "521.393, 481.145, 29.5837, 0.5614", "520.967, 480.201, 30.0283, 0.548", "520.622, 479.378, 30.697, 0.4342", "520.482, 478.712, 31.4026, 0.427", "520.164, 477.649, 31.985, 0.3388", "519.693, 476.683, 32.5128, 0.3092", "519.74, 475.84, 33.18, 0.2914", "520.055, 475.196, 34.0701, 0.3068", "519.886, 474.229, 34.9524, 0.329", "519.131, 473.425, 35.7386, 0.401", "518.256, 472.736, 36.44, 0.3846", "517.523, 471.886, 37.0068, 0.3958", "517.331, 470.804, 37.452, 0.4438", "517.332, 469.681, 37.6474, 0.6292", "517.412, 468.548, 37.6978, 0.733", "517.74, 467.453, 37.7054, 0.7182", "517.97, 466.333, 37.6928, 0.7818", "518.207, 465.215, 37.6751, 0.6866", "518.115, 464.078, 37.6821, 0.63", "517.565, 463.138, 37.8036, 0.6292", "516.987, 462.151, 37.8812, 0.5788", "516.875, 461.015, 37.8767, 0.4938", "516.772, 459.921, 37.618, 0.5244", "517.159, 458.894, 37.385, 0.5834", "517.8, 458.159, 37.1196, 0.6808", "517.803, 457.135, 36.9141, 0.692", "517.272, 456.273, 36.7024, 0.6186", "516.709, 455.965, 36.734, 0.483", "515.944, 455.198, 36.68, 0.6864" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "488.439, 533.25, 27.4024, 0.4658", "488.378, 532.052, 27.1013, 0.4364", "488.145, 530.972, 26.7502, 0.366", "487.979, 529.965, 26.2613, 0.3122", "487.728, 528.973, 25.7244, 0.2972", "487.171, 528.006, 25.3527, 0.3172", "486.786, 527.004, 25.1842, 0.3496", "486.94, 525.9, 25.1346, 0.434", "487.534, 524.945, 25.1534, 0.4714", "488.392, 524.189, 25.216, 0.4328", "489.404, 523.658, 25.2647, 0.428" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "488.439, 533.25, 27.4024, 0.4658", "487.869, 532.924, 28.5051, 0.4576", "486.835, 532.466, 27.87, 0.387", "485.827, 532.444, 27.5366, 0.3534", "484.76, 532.659, 27.1593, 0.3632", "483.682, 532.964, 26.8098, 0.4898", "482.706, 533.493, 26.6469, 0.4256", "481.824, 534.205, 26.621, 0.3862", "480.802, 534.504, 26.7711, 0.384", "479.929, 533.82, 26.9746, 0.4932", "478.969, 533.26, 27.2146, 0.603", "477.932, 532.786, 27.3247, 0.5714", "476.911, 532.518, 27.1746, 0.51", "475.943, 532.003, 26.8787, 0.4088", "475.057, 531.305, 26.5408, 0.3888" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "519.147, 531.222, 31.3155, 0.6688", "519.169, 531.76, 30.6096, 0.7544", "519.766, 532.652, 29.7951, 0.7822", "520.44, 533.4, 28.8666, 0.7822", "521.273, 534.02, 27.902, 0.575", "521.966, 534.841, 26.9767, 0.51", "522.927, 535.431, 26.1832, 0.4424", "523.984, 535.734, 25.4549, 0.5172", "525.113, 535.827, 24.8342, 0.599", "526.201, 535.711, 24.2319, 0.5696", "527.25, 535.275, 23.6964, 0.4782", "528.307, 534.99, 23.1414, 0.4886", "529.42, 535.159, 22.606, 0.551", "530.456, 535.564, 22.0477, 0.4556", "531.534, 535.646, 21.5114, 0.3886", "532.081, 534.873, 20.973, 0.4184", "531.854, 533.901, 20.3476, 0.4128", "532.375, 533.007, 19.6605, 0.4674", "533.182, 532.295, 18.965, 0.4814", "533.983, 531.485, 18.3627, 0.475", "534.659, 530.623, 17.779, 0.3916", "535.435, 530.268, 17.1611, 0.3542", "536.185, 530.957, 16.6234, 0.4018", "536.885, 531.836, 16.2042, 0.3812", "537.831, 532.435, 15.8273, 0.4134", "538.858, 532.858, 15.4402, 0.3608", "539.87, 533.302, 15.0493, 0.3508", "540.896, 533.786, 14.7848, 0.3642", "542.008, 533.638, 14.6282, 0.4622", "543.112, 533.665, 14.4226, 0.5184", "544.182, 534.047, 14.2775, 0.5454", "545.23, 534.505, 14.1981, 0.5124", "546.266, 534.993, 14.162, 0.6252", "547.292, 535.498, 14.1472, 0.6762", "548.279, 536.07, 14.1693, 0.6236", "549.219, 536.661, 14.2899, 0.5542", "550.18, 537.28, 14.3761, 0.5178", "551.16, 537.82, 14.3264, 0.4594", "552.061, 538.505, 14.1936, 0.5362", "552.992, 539.171, 14.0507, 0.4664", "553.935, 539.816, 13.9016, 0.4516", "554.97, 540.303, 13.7512, 0.5552", "556.099, 540.486, 13.6087, 0.5682", "557.281, 540.781, 13.3811, 0.5474", "558.233, 541.15, 13.0428, 0.4978", "559.255, 541.455, 12.8915, 0.4582", "560.331, 541.435, 12.7517, 0.3594", "561.328, 541.254, 12.4777, 0.3002", "562.246, 541.582, 12.2292, 0.2748", "563.292, 541.444, 12.0166, 0.275", "564.323, 541.328, 11.8249, 0.2754", "565.444, 541.226, 11.7378, 0.276", "566.401, 541.32, 11.9817, 0.2772", "567.039, 542.095, 12.3243, 0.2794", "567.68, 541.687, 12.8437, 0.2836", "568.772, 541.684, 13.346, 0.2912", "569.917, 541.684, 13.7227, 0.3066", "571.055, 541.763, 13.9656, 0.3286", "572.138, 541.912, 14.0386, 0.4002", "573.183, 541.684, 14.008, 0.3846", "573.938, 541.295, 14.0689, 0.3896", "575.026, 541.068, 14.0586, 0.462", "575.831, 540.461, 14.0056, 0.5194", "576.709, 540.568, 13.8435, 0.541", "577.617, 540.392, 13.8162, 0.5342", "578.682, 540.192, 13.8419, 0.5204", "579.482, 539.62, 13.7516, 0.5014", "580.164, 539.089, 13.7397, 0.4342", "581.104, 538.781, 13.6523, 0.465", "581.763, 538.072, 13.6389, 0.4532", "582.516, 537.794, 13.8435, 0.5368", "583.393, 538.019, 14.1086, 0.6374", "584.026, 538.214, 14.3218, 0.631", "584.983, 538.252, 14.5412, 0.6408", "585.733, 538.56, 14.6361, 0.5534", "586.479, 538.778, 14.6395, 0.4458", "587.276, 539.16, 14.6411, 0.4398", "588.091, 539.167, 14.8384, 0.4056", "589.188, 539.326, 14.9476, 0.453", "590.131, 539.794, 15.0226, 0.4608", "591.045, 540.285, 15.1391, 0.4062", "591.51, 540.754, 15.1664, 0.4126", "591.911, 541.512, 15.199, 0.3588", "592.523, 541.798, 15.2948, 0.3484", "593.091, 542.472, 15.5486, 0.3538", "593.906, 543.057, 15.6344, 0.4726", "594.975, 542.85, 15.5823, 0.3938", "595.956, 542.6, 15.3667, 0.3264", "596.948, 542.599, 15.1102, 0.2764", "597.622, 543.282, 14.9857, 0.2778", "598.104, 544.118, 15.0245, 0.2806", "599.121, 544.307, 15.0879, 0.2858", "599.982, 544.312, 15.3044, 0.2952", "600.607, 544.086, 15.3128, 0.314", "601.5, 544.43, 15.1998, 0.3422", "602.308, 544.515, 15.1172, 0.4262", "602.802, 545.022, 15.3129, 0.4286", "603.579, 545.733, 15.5303, 0.4904", "604.566, 546.008, 15.6271, 0.556", "605.48, 546.133, 15.8623, 0.4584", "606.365, 546.42, 15.9051, 0.4248", "607.237, 546.154, 15.8397, 0.3348", "607.693, 545.506, 15.6675, 0.3018", "608.378, 545.116, 15.6285, 0.2778", "609.341, 544.782, 15.3828, 0.2806", "610.216, 544.887, 14.9427, 0.2858", "611.326, 544.813, 14.5173, 0.295", "612.089, 544.393, 13.9773, 0.3134", "612.555, 543.589, 13.6371, 0.3426", "613.133, 542.733, 13.2041, 0.421", "613.696, 541.868, 12.8584, 0.4474", "614.147, 541.059, 12.4693, 0.3866", "614.336, 540.023, 12.2402, 0.351", "614.787, 539.071, 12.0701, 0.3662", "615.263, 538.173, 11.8419, 0.4596", "615.884, 537.279, 11.6013, 0.5444", "616.708, 536.939, 11.3737, 0.4434", "617.396, 537.545, 11.1317, 0.3662", "617.875, 538.241, 10.8671, 0.3756", "618.199, 539.248, 10.7517, 0.339", "618.745, 540.023, 10.5892, 0.305", "619.477, 540.884, 10.4416, 0.305", "620.162, 541.455, 10.36, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "519.147, 531.222, 31.3155, 0.6688", "519.818, 531.263, 30.6384, 0.4576", "520.878, 531.253, 29.7223, 0.807", "521.975, 531.135, 29.323, 0.8046", "522.957, 530.584, 28.9341, 0.7306", "523.732, 529.75, 28.6012, 0.7034", "524.169, 528.736, 28.2568, 0.8036", "524.35, 527.613, 27.9947, 0.9448", "524.191, 526.481, 27.8595, 0.9668", "524.074, 525.344, 27.8209, 1.0266", "523.823, 524.229, 27.8501, 1.0442", "524.17, 523.148, 27.9065, 1.074" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "475.219, 511.217, 42.7316, 0.3714", "474.805, 511.148, 43.7186, 0.2288", "473.748, 510.941, 43.7324, 0.4464", "472.662, 511.144, 43.7296, 0.4896", "471.566, 511.453, 43.6708, 0.4898", "470.5, 511.615, 43.4826, 0.4202", "469.779, 512.356, 43.2233, 0.4022", "469.372, 513.38, 42.9433, 0.5152", "469.317, 514.493, 42.8123, 0.4732", "469.572, 515.54, 42.9019, 0.4714", "469.498, 516.612, 43.1561, 0.556", "468.947, 517.586, 43.4459, 0.7442", "468.408, 518.592, 43.6719, 0.712", "467.904, 519.62, 43.8046, 0.6718", "467.405, 520.65, 43.8298, 0.732", "466.947, 521.697, 43.7567, 0.6466", "466.378, 522.651, 43.5442, 0.5302", "465.488, 523.325, 43.2625, 0.5678", "464.425, 523.61, 42.9279, 0.551", "463.379, 524.063, 42.6488, 0.4834", "462.447, 524.72, 42.483, 0.535", "461.52, 525.343, 42.4738, 0.457", "460.686, 526.083, 42.4234, 0.4702", "459.783, 526.776, 42.39, 0.4144", "458.866, 527.463, 42.4074, 0.4708", "457.971, 528.173, 42.4614, 0.4874", "457.148, 528.964, 42.5718, 0.4874", "456.921, 530.038, 42.8159, 0.4082", "456.966, 531.181, 43.0749, 0.416", "457.228, 532.294, 43.3185, 0.367", "457.358, 533.428, 43.5568, 0.3558", "457.281, 534.513, 43.878, 0.4048", "456.923, 535.495, 44.2733, 0.3866", "456.312, 536.461, 44.5508, 0.4242", "455.604, 537.359, 44.7129, 0.3756", "455.036, 538.352, 44.7588, 0.4028", "454.387, 539.285, 44.6709, 0.3414", "453.655, 540.106, 44.3948, 0.3136", "453.068, 541.057, 44.0756, 0.3008", "453.223, 542.182, 43.7293, 0.318", "453.469, 543.254, 43.3017, 0.3806", "453.271, 544.341, 42.8907, 0.3472", "452.441, 545.1, 42.4934, 0.3256", "451.398, 545.425, 42.0356, 0.3168", "450.347, 545.356, 41.4778, 0.3784", "449.266, 545.138, 40.917, 0.3432", "448.227, 545.209, 40.3424, 0.3172", "447.389, 545.859, 39.8023, 0.3074", "446.797, 546.827, 39.4428, 0.3304", "446.431, 547.885, 39.291, 0.403", "446.22, 548.987, 39.2694, 0.391", "445.839, 550.062, 39.2591, 0.3952", "445.225, 550.984, 39.2426, 0.5034", "444.314, 551.639, 39.1681, 0.4456", "443.375, 552.282, 39.0838, 0.448", "442.579, 553.092, 39.0247, 0.3786", "441.948, 553.999, 39.0533, 0.3786", "441.339, 554.864, 39.2106, 0.4416", "440.491, 555.573, 39.3159, 0.4806", "439.46, 555.948, 39.2308, 0.4732", "438.365, 556.209, 38.9908, 0.3882", "437.363, 556.588, 38.5608, 0.3484", "436.686, 557.247, 37.91, 0.3896", "436.238, 558.177, 37.1781, 0.365", "436.128, 559.26, 36.4988, 0.3522", "436.274, 560.384, 35.9828, 0.398", "436.753, 561.401, 35.6611, 0.374", "437.175, 562.445, 35.5163, 0.4", "437.51, 563.505, 35.3634, 0.336", "437.873, 564.579, 35.1988, 0.304", "438.201, 565.674, 35.0308, 0.2822", "438.21, 566.805, 34.8314, 0.2886", "437.803, 567.829, 34.5428, 0.3016", "437.223, 568.789, 34.2126, 0.3192", "436.781, 569.787, 33.8447, 0.383", "436.243, 570.724, 33.4544, 0.3516", "435.393, 571.459, 33.1842, 0.3338", "434.44, 572.018, 33.152, 0.332", "433.779, 572.923, 33.2556, 0.4076", "433.163, 573.888, 33.4435, 0.3918", "432.284, 574.606, 33.7126, 0.4336", "431.274, 575.048, 34.1312, 0.3942", "430.257, 575.546, 34.5834, 0.4322", "429.158, 575.589, 35.0865, 0.4208", "428.061, 575.326, 35.5888, 0.339", "426.961, 575.345, 36.115, 0.2542", "426.026, 575.661, 37.52, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "475.219, 511.217, 42.7316, 0.3714", "474.132, 510.591, 43.3037, 0.5064", "473.141, 510.112, 43.8743, 0.451", "472.279, 509.543, 44.5024, 0.4594", "471.77, 508.649, 45.138, 0.3934", "471.513, 507.559, 45.6448, 0.4368", "471.542, 506.422, 46.0004, 0.4002", "471.598, 505.281, 46.2258, 0.4432", "471.82, 504.194, 46.2868, 0.4418", "472.281, 503.162, 46.2924, 0.3758", "472.34, 502.05, 46.3733, 0.3318", "471.865, 501.065, 46.5984, 0.3282", "471.02, 500.318, 46.8969, 0.4006", "470.013, 499.84, 47.3077, 0.379", "468.969, 499.688, 47.8727, 0.4094", "467.867, 499.545, 48.335, 0.3532", "466.761, 499.283, 48.7953, 0.3368", "465.766, 499.242, 49.4273, 0.3374", "464.748, 499.235, 50.1827, 0.4176", "463.615, 499.194, 50.8455, 0.4116", "462.634, 498.985, 51.6163, 0.4644", "461.662, 498.549, 52.4269, 0.4818", "460.589, 498.177, 53.1252, 0.4458", "459.578, 497.646, 53.7104, 0.4816", "458.814, 496.915, 54.3407, 0.5088" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "489.404, 523.658, 25.2647, 0.428", "489.794, 523.127, 25.3214, 0.5524", "490.31, 522.122, 25.41, 0.593" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "489.404, 523.658, 25.2647, 0.428", "490.762, 523.502, 24.873, 0.2288", "491.899, 523.485, 25.56, 0.5708", "493.035, 523.422, 25.8221, 0.5968", "493.987, 523.163, 26.2602, 0.6008", "495.063, 523.247, 26.7173, 0.5938", "496.188, 523.395, 27.1104, 0.6512", "497.254, 523.133, 27.4634, 0.6442", "498.319, 522.729, 27.6712, 0.4968", "499.335, 522.207, 27.7153, 0.4188", "500.418, 521.849, 27.6006, 0.4686", "501.344, 521.25, 27.3175, 0.5328", "501.785, 520.384, 26.7951, 0.56", "502.133, 519.429, 26.0939, 0.5986", "502.47, 518.368, 25.4024, 0.499", "502.414, 517.254, 24.7696, 0.459", "502.304, 516.153, 24.1206, 0.5982", "502.602, 515.116, 23.4553, 0.505", "503.37, 514.497, 22.7254, 0.4376", "504.409, 514.286, 21.9805, 0.4864", "505.46, 513.997, 21.2412, 0.4192", "506.49, 513.627, 20.5315, 0.3746", "507.551, 513.236, 19.9399, 0.3616", "508.634, 513.412, 19.449, 0.457", "509.715, 513.698, 19.0108, 0.5104", "510.822, 513.531, 18.6685, 0.5232", "511.87, 513.083, 18.4134, 0.5066", "512.883, 512.606, 18.261, 0.4434", "513.643, 511.786, 18.0398, 0.4834", "514.238, 510.848, 17.6907, 0.4806", "515.084, 510.234, 17.175, 0.62", "515.974, 509.844, 16.4752, 0.6358", "516.73, 509.046, 15.7712, 0.699", "517.609, 508.341, 15.1196, 0.6504", "518.511, 507.66, 14.5495, 0.678", "519.362, 506.93, 14.1911, 0.617", "520.737, 506.449, 13.8146, 0.5902", "521.688, 506.948, 13.5843, 0.5792", "522.313, 507.364, 13.1302, 0.5992", "521.68, 507.931, 12.5219, 0.6688", "522.326, 508.555, 11.9907, 0.6406", "523.357, 508.532, 11.6626, 0.6656", "523.595, 508.0, 11.1991, 0.565", "524.334, 507.522, 10.9852, 0.6356", "525.245, 507.177, 10.8088, 0.661", "525.897, 507.007, 10.9587, 0.5338", "526.583, 506.449, 11.76, 0.6864" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "475.057, 531.305, 26.5408, 0.3888", "473.797, 530.606, 26.3899, 0.4542", "472.958, 530.684, 26.1306, 0.5348", "472.141, 530.715, 25.8661, 0.4244", "471.182, 530.877, 25.877, 0.3362", "470.091, 531.045, 25.9424, 0.2944", "469.559, 530.702, 26.2784, 0.3126", "468.491, 530.871, 26.5513, 0.3396", "467.544, 531.259, 26.8222, 0.4216", "466.622, 531.507, 26.9684, 0.4188", "465.563, 531.839, 27.0637, 0.4786", "465.079, 532.522, 26.9025, 0.5032", "464.693, 533.311, 26.8293, 0.5102", "464.298, 534.141, 26.9294, 0.4812", "464.231, 534.997, 26.8463, 0.4028", "463.897, 535.929, 26.6787, 0.3764", "463.348, 536.451, 26.3594, 0.4366", "462.701, 536.547, 25.8179, 0.4772", "462.072, 536.948, 25.3639, 0.4376", "461.022, 536.941, 24.9733, 0.4654", "460.033, 536.718, 24.717, 0.4836", "459.22, 536.967, 24.3932, 0.4494", "458.647, 537.881, 24.139, 0.4882", "457.841, 538.247, 24.128, 0.5206", "456.779, 538.624, 24.1345, 0.5434", "455.862, 538.905, 24.0422, 0.5384", "455.378, 539.618, 23.8423, 0.5294", "454.671, 540.384, 23.7198, 0.5112", "453.758, 540.333, 23.5177, 0.4844", "453.102, 540.426, 23.2072, 0.4026", "452.516, 540.4, 23.2048, 0.4058", "451.429, 540.32, 23.1345, 0.3466", "450.511, 540.122, 22.9978, 0.3248", "449.685, 539.979, 22.5628, 0.3152", "449.543, 540.197, 21.7293, 0.3756", "448.482, 540.257, 20.9005, 0.3378", "447.408, 540.618, 20.1818, 0.3074", "446.607, 540.654, 19.5012, 0.2884", "446.557, 540.73, 18.7261, 0.3", "446.465, 541.461, 18.4563, 0.3228", "446.046, 541.986, 18.3563, 0.3586", "445.352, 541.77, 18.2246, 0.4576", "444.339, 541.482, 18.1524, 0.4812", "443.525, 541.896, 18.028, 0.6146", "442.845, 542.378, 18.0768, 0.657", "442.275, 542.83, 17.8386, 0.5868", "442.133, 543.659, 17.5078, 0.4916", "441.93, 544.219, 17.5173, 0.3742", "441.916, 545.235, 17.5387, 0.3274", "441.497, 546.153, 17.492, 0.3274", "441.016, 547.005, 17.5459, 0.3622", "440.227, 547.51, 17.4113, 0.4878", "439.751, 548.153, 17.2301, 0.423", "439.469, 548.753, 17.0412, 0.3754", "439.068, 548.875, 16.7115, 0.393", "438.613, 549.342, 16.4271, 0.3696", "438.534, 550.168, 16.1009, 0.3682", "437.977, 550.512, 15.5179, 0.3916", "437.343, 551.065, 14.914, 0.5374", "436.577, 550.607, 14.2474, 0.5402", "435.839, 550.836, 13.6118, 0.4696", "435.215, 551.305, 13.2561, 0.4786", "434.396, 551.932, 12.9371, 0.5032", "434.109, 552.782, 12.7833, 0.5102", "433.384, 553.372, 12.7744, 0.4812", "433.004, 554.355, 12.8279, 0.4028", "433.22, 554.957, 13.0374, 0.3764", "432.757, 555.764, 13.0302, 0.4366", "431.974, 556.503, 12.9929, 0.4766", "431.123, 556.884, 13.0556, 0.441", "430.059, 557.014, 12.9864, 0.4492", "429.691, 556.335, 12.9699, 0.5628", "428.858, 555.823, 12.8616, 0.752", "428.184, 555.382, 12.9936, 0.7502", "427.266, 555.069, 13.0425, 0.6276", "426.255, 554.743, 13.1515, 0.5214", "425.335, 554.219, 13.3296, 0.4238", "424.435, 554.039, 13.5769, 0.4464", "423.624, 553.623, 13.7523, 0.4152", "423.001, 553.238, 14.0471, 0.483", "422.022, 552.895, 14.56, 0.4576" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "475.057, 531.305, 26.5408, 0.3888", "473.761, 530.662, 25.7578, 0.2288", "472.768, 530.177, 26.2629, 0.3334", "471.97, 529.372, 26.4712, 0.41", "471.231, 528.562, 26.7572, 0.3976", "470.245, 528.355, 27.0163, 0.4384", "469.113, 528.482, 27.1723, 0.4328", "468.003, 528.461, 27.2017, 0.3594", "466.917, 528.189, 27.2468, 0.3002", "465.845, 527.852, 27.368, 0.2752", "464.727, 527.649, 27.4989, 0.2756", "463.606, 527.614, 27.6838, 0.2764", "462.483, 527.616, 27.9057, 0.278", "461.352, 527.631, 28.1182, 0.281", "460.223, 527.74, 28.2069, 0.2866", "459.184, 528.008, 28.091, 0.2968", "458.07, 528.053, 27.8993, 0.3156", "457.087, 527.548, 27.67, 0.3524", "456.21, 526.831, 27.4754, 0.4104", "455.509, 525.953, 27.4596, 0.567", "454.83, 525.046, 27.6114, 0.6196", "454.176, 524.125, 27.7947, 0.4986", "453.335, 523.43, 28.147, 0.4208", "452.457, 523.046, 28.73, 0.479", "451.632, 522.461, 29.4168, 0.5192", "450.818, 521.67, 30.0073, 0.6934", "449.925, 520.959, 30.4592, 0.7632", "449.236, 520.045, 30.7994, 0.976", "448.481, 519.186, 31.0369, 0.9662", "447.665, 518.385, 31.2094, 0.8526", "446.826, 517.612, 31.3782, 0.6468", "445.9, 516.983, 31.6378, 0.6982", "444.899, 516.481, 31.9718, 0.7528", "443.896, 515.99, 32.3551, 0.8228", "442.844, 515.588, 32.7043, 0.646", "441.724, 515.641, 32.9602, 0.6632", "440.677, 515.63, 33.308, 0.6212", "439.866, 515.08, 33.6014, 0.6722", "439.299, 514.091, 33.7602, 0.6", "438.61, 513.188, 33.8316, 0.589", "437.842, 512.339, 33.833, 0.4306", "437.128, 511.449, 33.7641, 0.3474", "436.335, 510.663, 33.5832, 0.3166", "435.567, 509.85, 33.343, 0.3468", "435.218, 508.809, 33.1078, 0.436", "435.136, 507.689, 32.8555, 0.4404", "434.805, 506.634, 32.6799, 0.5434", "433.974, 505.939, 32.5506, 0.5034", "432.886, 505.669, 32.5069, 0.4058", "431.774, 505.488, 32.5332, 0.3398", "430.771, 505.168, 32.5685, 0.3442", "429.787, 504.73, 32.8737, 0.4236", "428.966, 504.123, 33.5636, 0.4536", "428.444, 503.433, 34.6195, 0.3926", "428.267, 502.956, 36.0097, 0.387", "427.823, 502.586, 37.5794, 0.3136", "426.885, 502.265, 39.0457, 0.2542", "426.483, 502.902, 42.0, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "524.17, 523.148, 27.9065, 1.074", "525.565, 522.575, 28.614, 0.7484", "526.549, 521.996, 28.947, 0.713", "527.576, 521.504, 29.1973, 0.7074", "528.623, 521.086, 29.3793, 0.6344", "529.664, 520.755, 29.3661, 0.5742", "530.633, 520.486, 29.092, 0.5546", "531.696, 520.305, 28.744, 0.5292", "532.836, 520.29, 28.4936, 0.6576", "533.98, 520.282, 28.3791, 0.7308", "535.091, 520.235, 28.4466, 0.7512", "536.107, 520.009, 28.7451, 0.663", "537.049, 519.509, 29.1749, 0.653", "537.99, 518.928, 29.6044, 0.577", "539.009, 518.476, 29.9312, 0.4844", "540.052, 518.144, 30.0238, 0.5368", "540.935, 517.621, 29.8329, 0.4616", "541.667, 516.817, 29.5165, 0.4726", "542.516, 516.073, 29.2281, 0.4486", "543.48, 515.461, 29.0245, 0.39", "544.391, 514.774, 28.9234, 0.3516", "545.302, 514.084, 28.9279, 0.3956", "546.1, 513.279, 29.022, 0.3758", "546.906, 512.514, 29.2225, 0.3736", "547.699, 511.776, 29.5246, 0.431", "547.959, 510.766, 29.8564, 0.4674", "547.969, 509.638, 30.0689, 0.4182", "547.93, 508.543, 30.0782, 0.4356", "547.732, 507.436, 29.9986, 0.3968", "547.732, 506.301, 29.8925, 0.442", "547.38, 505.24, 29.7814, 0.4156", "546.795, 504.258, 29.6912, 0.443", "546.24, 503.259, 29.6402, 0.5814", "545.591, 502.321, 29.6136, 0.6414", "544.956, 501.403, 29.542, 0.563", "544.208, 500.548, 29.4935, 0.4232", "543.367, 499.795, 29.5635, 0.366", "542.578, 499.025, 29.7892, 0.4234", "541.721, 498.314, 30.147, 0.4222", "541.068, 497.418, 30.4452, 0.4858", "540.685, 496.369, 30.6726, 0.5112", "540.469, 495.309, 31.0218, 0.5508", "541.227, 494.838, 31.5518, 0.4322", "542.027, 494.208, 33.04, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "524.17, 523.148, 27.9065, 1.074", "524.665, 522.644, 26.5969, 0.6864", "525.38, 521.766, 26.45, 0.7522", "525.943, 520.774, 26.3995, 0.6636", "526.318, 519.717, 26.4126, 0.6602", "527.029, 518.875, 26.3247, 0.5592", "527.922, 518.169, 26.1981, 0.6028", "528.953, 517.681, 26.0501, 0.7076", "529.902, 517.046, 25.8725, 0.786", "530.73, 516.259, 25.648, 0.8072", "530.951, 515.161, 25.3599, 0.7634", "530.693, 514.091, 24.9444, 0.8566", "530.597, 513.082, 24.3328, 0.8692", "530.617, 511.98, 23.6608, 0.755", "530.748, 510.985, 22.8769, 0.5246", "531.49, 510.155, 22.1638, 0.417", "532.492, 509.686, 21.5122, 0.4954", "533.56, 509.443, 20.9327, 0.437", "534.613, 509.8, 20.4497, 0.4022", "535.667, 510.21, 20.0884, 0.4374", "536.759, 510.436, 19.9638, 0.4778", "537.789, 510.834, 20.0176, 0.4436", "538.794, 511.374, 20.1144, 0.4538", "539.854, 511.768, 20.1717, 0.5712", "540.969, 511.649, 20.1262, 0.7688", "542.089, 511.754, 20.1059, 0.7748", "543.16, 512.143, 19.9937, 0.705", "544.198, 512.542, 19.759, 0.51", "545.261, 512.959, 19.5271, 0.468", "546.357, 513.266, 19.3052, 0.4408", "547.35, 513.822, 19.0686, 0.3738", "548.419, 514.063, 18.7482, 0.328", "549.43, 513.601, 18.3684, 0.3214", "550.201, 512.772, 17.9959, 0.3868", "550.635, 511.72, 17.5928, 0.3598", "550.802, 510.607, 17.1093, 0.3428", "550.712, 509.633, 16.4426, 0.3794", "550.094, 508.835, 15.6345, 0.345", "549.875, 508.031, 14.6799, 0.3204", "550.256, 507.888, 13.5727, 0.3136", "551.185, 508.438, 12.6073, 0.3418", "552.219, 508.732, 11.9338, 0.4238", "553.175, 508.304, 11.4996, 0.4322", "553.909, 507.469, 11.1101, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "458.814, 496.915, 54.3407, 0.5088", "457.865, 496.678, 55.3972, 0.2288", "456.843, 496.201, 54.5482, 0.2954", "456.165, 495.502, 54.0994, 0.3142", "455.138, 495.138, 53.601, 0.3438", "454.034, 495.1, 53.1079, 0.4232", "452.9, 494.987, 52.7335, 0.4516", "451.811, 494.636, 52.4941, 0.3952", "450.715, 494.313, 52.3849, 0.3612", "449.594, 494.095, 52.3914, 0.4146", "448.507, 493.742, 52.4734, 0.4046", "447.442, 493.462, 52.6193, 0.4588", "446.511, 493.992, 52.8514, 0.4342", "446.072, 495.009, 53.1969, 0.5382", "445.535, 496.017, 53.5587, 0.4626", "444.841, 496.899, 53.9554, 0.4818", "443.878, 497.434, 54.4387, 0.4296", "442.824, 497.747, 55.0001, 0.5298", "441.93, 498.314, 55.6511, 0.4474", "441.128, 498.643, 56.3562, 0.4512", "440.112, 498.892, 57.0581, 0.3844", "439.04, 499.095, 57.7494, 0.3906", "437.975, 498.797, 58.3654, 0.4576", "436.902, 498.413, 58.865, 0.541", "435.87, 498.006, 59.3334, 0.436", "434.885, 497.443, 59.726, 0.3586", "433.823, 497.029, 60.0589, 0.3306", "432.689, 496.915, 60.3352, 0.405", "431.574, 496.676, 60.5696, 0.387", "430.44, 496.531, 60.825, 0.4252", "429.348, 496.658, 61.196, 0.3776", "428.658, 497.385, 61.7434, 0.4066", "428.124, 498.336, 62.349, 0.3482", "427.146, 498.708, 63.0104, 0.3262", "426.03, 498.53, 63.481, 0.3254", "424.909, 498.481, 63.8565, 0.3582", "423.99, 499.081, 64.2614, 0.4806", "423.388, 500.024, 64.6601, 0.4086", "423.068, 501.119, 65.0191, 0.3542", "422.524, 502.076, 65.392, 0.327", "421.786, 502.689, 65.9686, 0.3754", "421.211, 503.378, 66.6725, 0.445", "420.497, 504.115, 67.1983, 0.6706", "419.435, 504.293, 67.5156, 0.6206", "418.331, 504.383, 67.839, 0.741", "417.29, 504.368, 68.2388, 0.6162", "416.257, 503.995, 68.64, 0.703", "415.222, 503.565, 69.0236, 0.691", "414.166, 503.162, 69.3703, 0.8218", "413.146, 502.652, 69.6172, 0.7786", "412.208, 502.0, 69.7514, 0.7124", "411.246, 501.393, 69.7939, 0.5236", "410.193, 500.957, 69.7701, 0.4932", "409.142, 500.561, 69.6623, 0.4878", "408.065, 500.351, 69.515, 0.4582", "406.939, 500.5, 69.4218, 0.4982", "405.845, 500.74, 69.4431, 0.5702", "404.732, 500.847, 69.5456, 0.486", "403.605, 500.714, 69.6343, 0.4704", "402.477, 500.616, 69.7306, 0.445", "401.335, 500.613, 69.8228, 0.382", "400.192, 500.608, 69.8732, 0.3432", "399.076, 500.571, 69.8398, 0.349", "397.979, 500.343, 69.7917, 0.4398", "396.929, 499.914, 69.8432, 0.4478", "395.9, 499.471, 70.0381, 0.5566", "394.801, 499.223, 70.322, 0.529", "393.694, 498.951, 70.667, 0.449", "392.63, 498.546, 71.0979, 0.4394", "391.727, 497.931, 71.6696, 0.4344", "391.345, 496.943, 72.3324, 0.3626", "391.435, 496.1, 73.2609, 0.306", "391.249, 495.156, 74.3291, 0.2852", "390.804, 494.152, 75.3841, 0.2966", "389.954, 493.769, 76.4893, 0.305", "388.915, 493.685, 77.5326, 0.3814", "388.503, 493.293, 80.08, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "458.814, 496.915, 54.3407, 0.5088", "458.362, 496.225, 54.9721, 0.5204", "457.647, 495.406, 55.589, 0.5014", "457.447, 494.326, 56.1324, 0.4338", "457.674, 493.213, 56.5782, 0.4646", "457.758, 492.076, 56.9495, 0.4512", "457.483, 490.981, 57.3062, 0.5406", "457.105, 489.933, 57.7203, 0.6086", "456.586, 488.918, 58.1232, 0.7514", "456.434, 487.797, 58.5514, 0.7056", "456.199, 486.867, 59.1788, 0.5272", "455.382, 486.141, 59.8307, 0.4218", "454.31, 485.956, 60.4968, 0.5052", "453.222, 485.859, 61.1509, 0.4492", "452.206, 485.361, 61.7142, 0.4544", "451.355, 484.597, 62.1298, 0.3906" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "490.31, 522.122, 25.41, 0.593", "490.468, 521.322, 23.4475, 0.2288", "491.018, 520.479, 22.6304, 0.4588", "491.083, 519.367, 22.2995, 0.5196", "490.544, 518.385, 22.0347, 0.5116", "489.632, 517.729, 21.8487, 0.6252", "488.715, 517.059, 21.6141, 0.67", "487.872, 516.318, 21.3021, 0.6418", "487.05, 515.556, 20.9675, 0.444", "486.781, 514.754, 20.382, 0.3254", "486.823, 513.895, 19.6862, 0.2746", "486.119, 513.042, 19.2332, 0.2746", "485.404, 512.237, 18.9953, 0.2746", "484.475, 511.597, 18.8084, 0.2746", "483.387, 511.347, 18.6349, 0.2746", "482.428, 511.417, 18.321, 0.2746", "481.833, 511.137, 17.7547, 0.2746", "481.542, 510.207, 17.2009, 0.2746", "481.029, 509.283, 16.8607, 0.2746", "480.049, 508.765, 16.7177, 0.2746", "479.024, 508.926, 16.7606, 0.2746", "477.939, 509.182, 16.8858, 0.2744", "476.998, 508.759, 16.9437, 0.2744", "475.971, 508.437, 17.044, 0.2742", "474.878, 508.397, 17.2386, 0.274", "473.865, 508.423, 17.2553, 0.2736", "472.841, 508.715, 17.1587, 0.2728", "471.922, 509.052, 17.2656, 0.2712", "471.289, 508.669, 17.6849, 0.2684", "470.354, 508.203, 18.1189, 0.2626", "469.628, 507.51, 18.3071, 0.2542", "468.574, 507.205, 18.5659, 0.2288", "467.628, 507.529, 19.453, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "490.31, 522.122, 25.41, 0.593", "490.628, 521.021, 25.6526, 0.4478", "491.26, 520.081, 25.8059, 0.3322", "491.664, 519.093, 25.7104, 0.287", "491.702, 518.081, 25.3634, 0.2988", "491.759, 516.975, 24.938, 0.3144", "492.025, 515.91, 24.6098, 0.3738", "492.587, 514.918, 24.2565, 0.3346", "492.771, 513.937, 23.8319, 0.3012", "491.93, 513.475, 23.2449, 0.2768", "490.815, 513.416, 22.6282, 0.2788", "489.767, 513.306, 21.9288, 0.2826", "489.079, 512.76, 21.1108, 0.2894", "488.858, 511.701, 20.3515, 0.3018", "488.606, 510.597, 19.7422, 0.326", "488.154, 509.565, 19.2264, 0.3656", "487.633, 508.568, 18.8266, 0.4646", "487.035, 507.621, 18.5707, 0.524", "486.178, 506.943, 18.3008, 0.55", "485.169, 506.579, 17.917, 0.5496", "484.109, 506.251, 17.4966, 0.5558", "483.151, 505.685, 17.0686, 0.5328", "482.387, 504.877, 16.6237, 0.6578", "481.745, 503.938, 16.2262, 0.7624", "481.304, 502.926, 15.8594, 0.6582", "481.18, 501.836, 15.5061, 0.539", "481.251, 500.714, 15.1967, 0.4172", "481.552, 499.651, 15.0213, 0.3964", "482.063, 498.651, 15.015, 0.5056", "482.651, 497.676, 15.0862, 0.4494", "483.274, 496.717, 15.1958, 0.4562", "483.745, 495.709, 15.3627, 0.3876", "483.912, 494.614, 15.5552, 0.426", "483.911, 493.471, 15.666, 0.379", "483.904, 492.328, 15.6896, 0.4092", "483.859, 491.22, 15.5741, 0.353", "483.615, 490.21, 15.2942, 0.3364", "483.258, 489.137, 15.0858, 0.3366", "483.53, 488.075, 15.0401, 0.4164", "484.398, 487.345, 15.0499, 0.4078", "485.482, 486.98, 15.0995, 0.4648", "486.079, 486.381, 15.1817, 0.4452", "486.547, 485.364, 15.2762, 0.5592", "486.517, 484.24, 15.3676, 0.498", "486.276, 483.154, 15.5188, 0.5654", "486.205, 482.024, 15.6636, 0.497", "486.205, 480.883, 15.7507, 0.394", "486.237, 479.752, 15.7465, 0.3172", "486.21, 478.644, 15.8005, 0.3064", "486.182, 477.514, 15.8488, 0.3342", "486.065, 476.378, 15.8449, 0.3818", "485.732, 475.291, 15.7981, 0.4892", "485.623, 474.177, 15.6944, 0.5954", "485.938, 473.124, 15.4812, 0.5574", "486.16, 472.026, 15.2228, 0.4842", "486.199, 470.893, 14.9516, 0.3604", "486.198, 469.84, 14.5913, 0.302", "486.164, 468.751, 14.3445, 0.2782", "485.962, 467.642, 14.2314, 0.2814", "485.828, 466.539, 14.2476, 0.2874", "486.066, 465.443, 14.267, 0.298", "486.59, 464.455, 14.1886, 0.3192", "487.004, 463.413, 14.0207, 0.3518", "487.098, 462.3, 13.7689, 0.444", "487.05, 461.178, 13.4568, 0.4612", "486.74, 460.088, 13.1847, 0.553", "486.302, 459.031, 12.9811, 0.661", "485.934, 457.949, 12.8384, 0.7064", "485.678, 456.835, 12.7343, 0.626", "485.327, 455.747, 12.6481, 0.5898", "485.056, 454.637, 12.5594, 0.4322", "484.849, 453.514, 12.4331, 0.3502", "484.731, 452.417, 12.1985, 0.3228", "484.283, 451.379, 11.9602, 0.3534", "483.6, 450.464, 11.7473, 0.4718", "483.052, 449.462, 11.5575, 0.3922", "482.561, 448.429, 11.3807, 0.3236", "482.143, 447.396, 11.154, 0.2712", "481.94, 446.32, 10.8715, 0.2684", "481.211, 445.494, 10.575, 0.2626", "480.137, 445.136, 10.4188, 0.2542", "479.049, 444.919, 10.4315, 0.2288", "477.964, 444.558, 10.64, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "451.355, 484.597, 62.1298, 0.3906", "450.87, 484.338, 62.6545, 0.401", "450.253, 483.661, 62.8303, 0.4826", "449.388, 483.126, 63.026, 0.5598", "448.62, 482.469, 63.126, 0.6056", "447.77, 481.833, 63.2388, 0.7042", "446.958, 481.233, 63.5048, 0.5928", "446.477, 480.296, 63.7986, 0.441", "446.077, 479.574, 63.8462, 0.3518", "445.844, 478.492, 63.9873, 0.3964", "445.589, 477.796, 64.3644, 0.3762", "445.71, 476.688, 64.6696, 0.38", "445.931, 475.732, 65.1081, 0.4144", "446.046, 474.737, 65.6706, 0.5756", "446.389, 473.758, 66.2242, 0.6304", "446.391, 472.715, 66.6168, 0.543", "446.327, 471.642, 66.9166, 0.3848", "446.158, 470.731, 67.324, 0.3", "446.054, 469.994, 67.851, 0.2746", "445.931, 468.871, 68.3371, 0.2748", "445.198, 468.267, 68.7156, 0.275", "444.451, 467.956, 68.9954, 0.2754", "443.651, 467.444, 69.4954, 0.2762", "443.529, 466.806, 70.3038, 0.2774", "442.679, 466.288, 71.2046, 0.2798", "442.076, 466.18, 72.2753, 0.2844", "441.21, 466.294, 73.2631, 0.2928", "440.249, 465.912, 74.1894, 0.3094", "439.286, 465.615, 75.0224, 0.3338", "438.839, 464.988, 75.8111, 0.4096", "438.392, 464.266, 76.442, 0.4032", "438.171, 463.18, 76.8247, 0.4186", "437.602, 462.218, 77.0084, 0.5416", "436.602, 461.901, 77.1179, 0.5418", "435.663, 461.39, 77.2397, 0.5024", "435.326, 460.382, 77.4178, 0.3954", "434.835, 459.43, 77.5715, 0.3614", "434.262, 458.515, 77.7305, 0.415" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "451.355, 484.597, 62.1298, 0.3906", "450.162, 483.644, 62.6282, 0.4576", "449.83, 482.805, 63.6076, 0.4268", "450.544, 481.959, 64.0144, 0.4456", "451.5, 481.356, 64.4087, 0.4458", "452.431, 480.745, 64.7996, 0.3846", "453.389, 480.123, 65.0731, 0.3418", "454.438, 479.692, 65.2282, 0.3776", "455.568, 479.62, 65.2571, 0.3416", "456.698, 479.728, 65.263, 0.3146", "457.832, 479.681, 65.2394, 0.3014", "458.945, 479.945, 65.1781, 0.3252", "460.034, 480.282, 65.077, 0.3636", "461.106, 480.626, 64.8956, 0.4622", "462.193, 480.895, 64.6643, 0.5136", "463.336, 480.938, 64.4577, 0.5602", "464.477, 480.943, 64.2648, 0.4246", "465.61, 480.979, 64.0679, 0.3366", "466.731, 481.135, 63.894, 0.2952", "467.815, 481.467, 63.7423, 0.3138", "468.9, 481.812, 63.6605, 0.3432", "469.914, 482.34, 63.6367, 0.422", "470.891, 482.919, 63.691, 0.4496", "471.823, 483.545, 63.8473, 0.3904", "472.774, 484.165, 64.0324, 0.3582", "473.779, 484.706, 64.1693, 0.379", "474.762, 485.268, 64.2258, 0.4844", "475.635, 485.941, 64.283, 0.5856", "476.399, 486.684, 64.4686, 0.5442", "477.21, 487.452, 64.6601, 0.4348", "478.092, 488.154, 64.7458, 0.3898", "479.056, 488.726, 64.7251, 0.4562", "480.048, 489.291, 64.6766, 0.5382", "481.042, 489.856, 64.6234, 0.431", "481.992, 490.473, 64.573, 0.3482", "482.836, 491.247, 64.5585, 0.3176", "483.743, 491.931, 64.5943, 0.3502", "484.789, 492.173, 64.6584, 0.435", "485.905, 491.975, 64.7212, 0.4744", "486.997, 491.806, 64.8824, 0.4324", "488.053, 491.805, 65.2481, 0.4558", "489.047, 492.24, 65.7188, 0.466", "489.865, 493.008, 66.236, 0.4156", "490.409, 493.895, 66.8744, 0.4296", "490.958, 494.725, 67.6318, 0.393", "491.833, 495.359, 68.3488, 0.3992", "492.895, 495.77, 68.9422, 0.5094", "493.908, 496.267, 69.456, 0.4628", "494.639, 497.052, 69.9978, 0.4508", "495.059, 498.023, 70.6093, 0.5252", "495.632, 498.95, 71.211, 0.6506", "496.464, 499.68, 71.8217, 0.716", "497.46, 500.088, 72.4618, 0.5048", "498.445, 500.309, 73.1578, 0.3534", "499.375, 500.674, 73.8634, 0.2792", "500.324, 500.32, 74.4019, 0.2834", "501.257, 499.658, 74.7379, 0.2906", "502.11, 498.901, 74.8846, 0.3054", "502.936, 498.166, 74.8054, 0.3266", "503.882, 497.573, 74.5903, 0.3964", "504.829, 496.988, 74.2955, 0.3772", "505.704, 496.267, 74.0468, 0.3762", "506.643, 495.617, 73.8934, 0.436", "507.703, 495.21, 73.8536, 0.4764", "508.791, 495.128, 73.9945, 0.4358", "509.924, 495.137, 74.1675, 0.463", "511.035, 495.207, 74.2619, 0.4732", "512.125, 495.504, 74.3834, 0.46", "513.211, 495.604, 74.6222, 0.3626", "514.284, 495.763, 74.9512, 0.3062", "515.363, 495.868, 75.3309, 0.286", "516.32, 495.336, 75.5538, 0.297", "517.068, 494.487, 75.684, 0.3108", "517.857, 493.662, 75.752, 0.3672", "518.621, 492.866, 75.693, 0.322", "519.352, 491.99, 75.6459, 0.2796", "519.678, 490.919, 75.7238, 0.2288", "520.062, 490.09, 76.72, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "434.262, 458.515, 77.7305, 0.415", "434.046, 458.007, 78.0965, 0.4576", "433.526, 457.823, 77.04, 0.3612", "432.62, 457.274, 76.6024, 0.3036", "431.757, 457.424, 76.1533, 0.2814", "430.792, 457.83, 75.7176, 0.2872", "429.788, 458.23, 75.2441, 0.299", "428.748, 458.511, 74.727, 0.3144", "427.77, 459.022, 74.2669, 0.374", "427.086, 459.774, 73.8214, 0.335", "426.478, 460.345, 73.2225, 0.3022", "425.472, 460.781, 72.816, 0.2786", "424.888, 461.358, 72.707, 0.2822", "424.036, 461.508, 72.4419, 0.2884", "423.257, 461.948, 72.161, 0.3012", "422.249, 462.011, 72.0418, 0.3186", "421.564, 462.396, 72.2971, 0.382", "420.509, 462.648, 72.6505, 0.3494", "419.898, 463.36, 73.2082, 0.3298", "419.516, 464.226, 73.8968, 0.3246", "419.341, 465.337, 74.5304, 0.3928", "419.165, 466.227, 75.1251, 0.3708", "419.207, 467.235, 75.675, 0.3642", "419.047, 468.322, 76.0564, 0.4138", "419.068, 469.357, 76.3193, 0.4342", "418.965, 470.259, 76.6618, 0.3622", "418.842, 471.243, 76.7452, 0.3052", "418.701, 472.068, 76.4991, 0.2844", "417.939, 472.806, 76.1432, 0.2926", "417.141, 473.47, 75.6512, 0.3092", "416.247, 474.053, 75.1038, 0.3334", "415.471, 474.591, 74.7572, 0.41", "414.738, 474.798, 74.4246, 0.3976", "414.19, 475.218, 74.0536, 0.4384", "413.327, 475.322, 73.836, 0.4328", "412.426, 475.218, 73.6392, 0.3594", "411.618, 475.445, 73.4079, 0.3", "410.78, 475.539, 73.0766, 0.2746", "410.089, 476.064, 72.6214, 0.2748", "409.467, 476.836, 72.4035, 0.2748", "408.905, 477.713, 72.1608, 0.2752", "408.25, 478.002, 72.1767, 0.2756", "407.85, 479.008, 72.1599, 0.2766", "407.33, 479.659, 72.0636, 0.2782", "406.546, 480.244, 71.7584, 0.2814", "405.77, 480.642, 71.3409, 0.287", "404.945, 481.362, 71.0424, 0.2988", "404.176, 482.03, 70.7395, 0.3144", "403.115, 482.306, 70.6558, 0.3738", "402.286, 482.196, 70.9094, 0.3346", "402.078, 482.616, 71.3947, 0.3014", "401.241, 483.224, 71.6803, 0.2772", "400.097, 483.226, 71.7987, 0.2796", "399.714, 483.993, 71.6668, 0.284", "399.232, 484.596, 71.1911, 0.2918", "398.708, 485.319, 70.5074, 0.3076", "398.007, 484.951, 69.7309, 0.3302", "397.43, 485.666, 69.2709, 0.4046", "396.735, 486.344, 68.8576, 0.3862", "395.826, 486.772, 68.4432, 0.4234", "394.802, 487.219, 68.1584, 0.3742", "393.909, 487.231, 67.8485, 0.4004", "393.097, 487.275, 67.4324, 0.3366", "392.366, 487.888, 67.1558, 0.305", "391.813, 488.559, 66.6991, 0.284", "392.122, 489.402, 66.2578, 0.2918", "392.299, 490.106, 65.9971, 0.3076", "392.66, 490.885, 65.6603, 0.3302", "392.353, 491.577, 65.1714, 0.4044", "391.982, 491.504, 64.3384, 0.386", "391.439, 492.147, 63.7104, 0.4218", "391.44, 492.694, 62.9933, 0.3774", "390.346, 492.644, 62.466, 0.3762", "389.678, 492.709, 61.999, 0.4372", "388.822, 492.721, 61.6745, 0.4724", "387.97, 492.129, 61.4242, 0.4584", "387.225, 491.298, 61.18, 0.3598", "386.274, 490.722, 60.9319, 0.301", "385.201, 490.512, 60.6234, 0.2766", "384.266, 490.664, 60.249, 0.2782", "383.266, 491.098, 59.9752, 0.2814", "382.324, 491.554, 59.8578, 0.287", "381.526, 491.909, 59.7965, 0.2986", "380.692, 492.263, 59.9841, 0.3138", "379.623, 492.073, 60.3081, 0.3728", "378.589, 491.64, 60.6676, 0.3328", "377.488, 491.733, 60.9952, 0.2982", "376.471, 491.832, 61.3295, 0.2712", "375.718, 492.532, 61.6216, 0.2684", "374.621, 492.719, 61.8108, 0.2626", "373.884, 493.293, 61.9475, 0.2542", "373.474, 493.762, 62.3431, 0.2288", "372.486, 494.208, 63.0, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "434.262, 458.515, 77.7305, 0.415", "434.13, 457.307, 77.9612, 0.4054", "434.023, 456.256, 78.2163, 0.46", "433.91, 455.184, 78.6027, 0.438", "433.462, 454.168, 79.0059, 0.5388" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "433.462, 454.168, 79.0059, 0.5388", "432.481, 453.785, 79.5542, 0.4576", "431.577, 453.3, 78.5305, 0.3604", "430.604, 452.969, 78.0388, 0.3022", "429.848, 452.699, 77.289, 0.2786", "428.738, 452.633, 76.6139, 0.2822", "427.702, 452.367, 76.0007, 0.2886", "427.513, 452.856, 75.1162, 0.3004", "427.44, 453.633, 74.2664, 0.3236", "426.388, 453.532, 73.5521, 0.361", "425.734, 452.641, 72.9868, 0.456", "425.091, 451.835, 72.3128, 0.5084", "424.055, 451.543, 71.657, 0.5198", "423.305, 451.882, 70.9246, 0.5", "422.594, 452.466, 70.3455, 0.4316", "422.15, 453.011, 69.5923, 0.4602", "421.587, 452.269, 68.7571, 0.4444", "421.003, 451.489, 68.1744, 0.5208", "421.634, 450.668, 67.6208, 0.607", "422.126, 450.036, 67.0398, 0.5788", "422.62, 449.236, 66.5132, 0.5234", "422.82, 448.134, 66.0366, 0.435", "422.525, 447.098, 65.529, 0.4308", "421.857, 446.83, 64.9256, 0.5638", "421.43, 446.154, 64.1598, 0.5842", "421.102, 445.388, 63.3203, 0.5764", "420.237, 445.269, 62.5486, 0.554", "419.179, 445.594, 61.9833, 0.5518", "418.089, 445.895, 61.5188, 0.5852", "417.204, 445.695, 61.0484, 0.4656", "416.416, 444.914, 60.7281, 0.438", "415.671, 444.251, 60.5066, 0.3602", "414.955, 443.41, 60.2106, 0.3436", "414.586, 442.777, 59.6154, 0.381", "415.041, 441.817, 59.05, 0.3478", "415.749, 441.223, 58.3274, 0.3268", "416.648, 440.897, 57.5274, 0.319", "416.934, 440.669, 56.4637, 0.3826", "417.854, 441.026, 55.4022, 0.3504", "418.327, 441.518, 54.2584, 0.332", "418.246, 442.418, 53.1566, 0.3282", "417.935, 443.444, 52.2427, 0.4008", "417.451, 444.399, 51.6289, 0.3794", "417.331, 445.427, 51.0479, 0.41", "418.09, 445.931, 50.5039, 0.3542", "419.138, 445.789, 50.0016, 0.3388", "420.126, 445.358, 49.4886, 0.341", "421.227, 445.462, 48.998, 0.4238", "422.231, 445.842, 48.5355, 0.4244", "423.24, 446.046, 48.2364, 0.4826", "423.942, 446.604, 47.8806, 0.5404", "424.327, 447.607, 47.6577, 0.435", "424.585, 448.674, 47.3617, 0.3554", "424.559, 449.578, 47.0282, 0.331", "424.424, 450.583, 46.4685, 0.376", "424.171, 450.954, 45.6184, 0.4786", "423.935, 451.191, 44.4553, 0.5746", "423.852, 450.976, 43.0419, 0.524", "424.423, 450.968, 41.5915, 0.3966", "425.534, 450.965, 40.409, 0.3232", "425.807, 451.537, 39.4302, 0.3122", "426.371, 451.149, 38.6747, 0.37", "427.167, 451.495, 37.9795, 0.3276", "427.398, 452.404, 37.6065, 0.2882", "426.917, 453.006, 37.1616, 0.2542", "425.9, 453.265, 36.8631, 0.2288", "424.996, 453.71, 36.68, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "433.462, 454.168, 79.0059, 0.5388", "432.693, 453.839, 79.5119, 0.4948", "431.85, 453.464, 80.1184, 0.3898", "430.977, 453.05, 80.5356, 0.3094", "430.477, 453.071, 81.2622, 0.2918", "429.68, 453.363, 82.0537, 0.3076", "429.145, 452.693, 82.7557, 0.3306", "428.962, 451.615, 83.2754, 0.405", "428.241, 450.766, 83.6539, 0.3872", "427.451, 449.942, 83.9297, 0.4238", "426.535, 449.514, 84.1806, 0.3822", "425.466, 449.249, 84.3839, 0.3792", "424.593, 448.984, 84.539, 0.4726", "423.731, 448.553, 84.6625, 0.3936", "423.051, 447.965, 85.057, 0.3262", "422.492, 447.635, 85.5123, 0.2762" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "422.492, 447.635, 85.5123, 0.2762", "421.447, 447.465, 85.4, 0.2288", "420.348, 447.375, 84.4119, 0.2766", "419.692, 447.45, 83.8793, 0.2782", "418.694, 446.957, 83.4, 0.2814", "417.634, 446.984, 82.8688, 0.287", "416.891, 447.502, 82.2189, 0.2988", "415.859, 447.782, 81.6416, 0.3142", "415.085, 448.199, 81.2045, 0.3734", "414.241, 448.63, 80.7744, 0.3338", "413.421, 449.378, 80.4916, 0.3", "412.479, 449.744, 80.3662, 0.2746", "411.412, 449.574, 80.1912, 0.2746", "410.328, 449.423, 79.9691, 0.2748", "409.385, 449.67, 79.7096, 0.2748", "408.4, 449.87, 79.55, 0.275", "407.318, 450.05, 79.3366, 0.2756", "406.18, 450.124, 79.1857, 0.2764", "405.086, 450.417, 79.1112, 0.278", "404.168, 450.797, 79.0728, 0.281", "403.496, 451.625, 79.0101, 0.2864", "403.043, 452.191, 79.1118, 0.2964", "402.273, 453.01, 79.2025, 0.316", "401.512, 453.607, 79.242, 0.3472", "400.581, 454.177, 79.1753, 0.4292", "399.589, 454.747, 79.0854, 0.4638", "398.804, 455.371, 79.009, 0.4114", "398.021, 455.645, 78.717, 0.4232", "397.009, 455.757, 78.5064, 0.374", "396.128, 456.312, 78.2356, 0.3998", "395.472, 456.984, 78.0301, 0.3356", "394.71, 457.796, 77.8618, 0.303", "394.103, 458.666, 77.9089, 0.2802", "393.447, 459.341, 78.0444, 0.2852", "392.529, 459.891, 78.1105, 0.2942", "392.0, 460.602, 77.9797, 0.3116", "391.611, 461.362, 78.0528, 0.3392", "391.048, 461.994, 78.0587, 0.4146", "390.188, 462.34, 78.1533, 0.4358", "389.106, 462.614, 78.2396, 0.3652", "388.155, 462.405, 78.4109, 0.3108", "387.189, 462.405, 78.4241, 0.2944", "386.21, 462.111, 78.2863, 0.3124", "385.217, 462.206, 78.162, 0.339", "384.362, 462.509, 78.1858, 0.422", "383.46, 462.91, 78.3317, 0.4132", "382.618, 463.088, 78.4409, 0.4982", "381.809, 463.557, 78.4846, 0.3942", "380.862, 464.17, 78.4916, 0.3274", "379.921, 464.81, 78.4966, 0.2782", "379.579, 465.808, 78.5523, 0.2814", "378.781, 466.324, 78.6313, 0.287", "377.888, 466.785, 78.7396, 0.2988", "377.526, 467.73, 78.897, 0.3142", "376.981, 468.649, 79.0227, 0.3734", "376.919, 469.752, 79.0712, 0.3338", "376.52, 470.786, 79.1367, 0.3", "376.66, 471.814, 79.07, 0.2746", "376.378, 472.66, 79.1389, 0.2746", "376.093, 473.727, 79.1924, 0.2746", "375.457, 474.575, 79.3456, 0.2746", "375.511, 475.436, 79.3456, 0.2744", "375.319, 476.383, 79.4058, 0.2744", "375.1, 477.5, 79.4528, 0.2742", "374.675, 478.313, 79.2921, 0.274", "374.738, 479.341, 79.1958, 0.2736", "374.774, 480.472, 79.1582, 0.2728", "374.667, 481.495, 79.1958, 0.2712", "373.985, 482.411, 79.193, 0.2684", "373.574, 483.451, 79.1224, 0.2626", "372.737, 484.182, 79.0135, 0.2542", "371.794, 484.327, 78.7982, 0.2288", "370.77, 484.255, 78.12, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "422.492, 447.635, 85.5123, 0.2762", "421.564, 446.652, 86.0398, 0.2774", "421.096, 446.042, 86.7429, 0.2798", "420.953, 445.307, 87.5563, 0.2844", "420.948, 444.24, 88.328, 0.2926", "420.649, 443.305, 88.9823, 0.3094", "420.158, 442.736, 89.588, 0.3336", "419.292, 442.212, 89.8744, 0.4104", "418.408, 441.513, 90.0376, 0.3982", "417.677, 440.655, 90.111, 0.4394", "416.958, 439.953, 90.1905, 0.4348", "416.179, 439.132, 90.281, 0.363", "415.576, 438.173, 90.4445, 0.3068", "414.969, 437.23, 90.6634, 0.287", "414.344, 436.367, 91.0154, 0.2988", "413.77, 435.426, 91.3119, 0.3142", "413.267, 434.833, 91.8246, 0.3734", "413.327, 433.713, 92.3292, 0.3338", "413.037, 433.01, 93.0037, 0.3", "412.339, 432.33, 93.7448, 0.2746", "411.579, 431.695, 94.4138, 0.2746", "411.116, 430.851, 94.7792, 0.2746", "410.46, 429.959, 95.0961, 0.2746", "409.711, 429.286, 95.489, 0.2746", "409.146, 428.546, 95.9269, 0.2748", "409.094, 427.856, 96.6014, 0.275", "409.043, 426.849, 97.2801, 0.2752", "408.777, 425.748, 97.8334, 0.2758", "408.211, 424.797, 98.3304, 0.2768", "407.836, 423.739, 98.7266, 0.2788", "407.421, 423.148, 98.8439, 0.2824", "407.035, 422.24, 98.9744, 0.289", "406.516, 421.34, 99.0934, 0.3024", "405.952, 420.758, 99.4966, 0.321", "405.553, 420.144, 100.184, 0.386", "404.82, 419.861, 101.03, 0.3584", "403.938, 419.625, 101.899, 0.3402", "403.488, 418.674, 102.623, 0.3746", "402.939, 417.951, 102.982, 0.336", "402.688, 417.072, 103.305, 0.3038", "402.574, 416.008, 103.552, 0.2816", "402.345, 414.967, 103.665, 0.2876", "402.345, 414.315, 103.449, 0.2986", "402.214, 413.476, 103.087, 0.32", "401.785, 412.779, 103.101, 0.3548", "401.434, 411.787, 103.146, 0.4434", "400.972, 411.509, 103.307, 0.4898" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "400.972, 411.509, 103.307, 0.4898", "401.099, 411.039, 102.729, 0.4576", "400.568, 409.785, 102.868, 0.4162", "400.148, 408.842, 102.913, 0.4024", "400.057, 408.399, 102.699, 0.479", "400.103, 407.318, 102.546, 0.5828", "399.98, 406.27, 102.347, 0.5028", "399.866, 405.177, 102.218, 0.5328", "399.646, 404.213, 102.238, 0.4108", "399.485, 403.323, 102.116, 0.3592", "399.764, 402.358, 102.04, 0.3318", "400.322, 402.003, 101.759, 0.4072", "400.831, 401.319, 101.414, 0.3912", "401.137, 400.397, 101.0, 0.4318", "401.565, 399.447, 100.707, 0.3954", "402.232, 398.869, 100.628, 0.411", "403.0, 398.313, 100.679, 0.4962", "403.626, 397.722, 100.658, 0.6084", "404.248, 396.835, 100.587, 0.5812", "404.861, 396.049, 100.479, 0.5294", "405.404, 395.491, 100.445, 0.44", "406.443, 395.585, 100.446, 0.4696", "407.263, 394.957, 100.538, 0.4916", "407.826, 394.369, 100.749, 0.4638", "408.378, 393.462, 100.885, 0.5158", "408.71, 392.505, 100.859, 0.568", "409.201, 391.767, 100.841, 0.6506", "409.91, 391.068, 100.922, 0.6442", "410.833, 390.762, 100.817, 0.4904", "411.535, 390.142, 100.683, 0.4368", "412.007, 389.356, 100.46, 0.3572", "412.553, 388.712, 100.46, 0.3426", "413.248, 387.919, 100.421, 0.356", "413.818, 387.175, 100.398, 0.4144", "414.242, 386.293, 100.24, 0.5876", "414.474, 385.384, 99.9314, 0.593", "415.122, 384.824, 99.575, 0.7644", "415.787, 384.498, 99.1441, 0.7566", "416.525, 384.03, 98.6843, 0.72", "417.268, 383.358, 98.4038, 0.5312", "418.096, 382.687, 98.0759, 0.538", "418.776, 381.784, 97.8093, 0.422", "419.249, 381.63, 97.3445, 0.3734", "419.969, 380.937, 97.1138, 0.3888", "420.221, 380.104, 96.971, 0.3636", "420.755, 379.311, 97.0609, 0.3498", "421.135, 378.54, 97.3524, 0.3926", "421.852, 378.067, 97.6312, 0.3692", "421.793, 376.982, 97.9157, 0.3674", "421.908, 376.395, 98.4043, 0.39", "422.384, 375.429, 98.6958, 0.5354", "423.15, 374.794, 98.7521, 0.5306", "423.876, 374.237, 98.6958, 0.4818", "424.846, 374.073, 98.8722, 0.356", "425.955, 374.088, 99.0833, 0.2938", "426.871, 373.863, 99.1253, 0.2626", "427.493, 373.308, 99.4241, 0.2542", "427.704, 372.467, 99.9188, 0.2288", "427.284, 371.457, 100.8, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "400.972, 411.509, 103.307, 0.4898", "400.092, 411.146, 103.783, 0.4618", "399.427, 410.825, 104.481, 0.506", "398.365, 410.569, 105.072, 0.5782", "397.768, 409.629, 105.499, 0.5308", "397.147, 408.854, 105.956, 0.4094", "396.754, 407.893, 106.284, 0.345", "396.222, 406.97, 106.621, 0.3614", "396.043, 405.977, 107.058, 0.4192", "395.582, 405.367, 107.745, 0.6218", "395.119, 405.15, 108.772, 0.5358", "394.456, 404.397, 109.696, 0.5562", "393.681, 404.243, 110.786, 0.4074", "392.648, 404.349, 111.792, 0.3518", "391.883, 403.811, 112.743, 0.323", "391.51, 403.054, 113.659, 0.3662", "390.645, 402.5, 114.307, 0.4358", "389.654, 402.078, 114.764, 0.616", "388.931, 401.333, 114.975, 0.7014", "388.786, 400.482, 115.269, 0.6946", "388.146, 399.966, 115.287, 0.5674", "387.694, 400.065, 115.552, 0.431", "386.885, 399.896, 115.799, 0.3812", "386.28, 399.145, 115.938, 0.4466", "385.625, 398.638, 116.114, 0.4896", "384.818, 397.978, 116.372, 0.4912", "384.064, 397.721, 116.454, 0.4152", "383.365, 397.376, 116.712, 0.4302", "382.828, 396.679, 117.157, 0.3866", "381.888, 396.578, 117.716, 0.4244", "380.787, 396.349, 118.126, 0.3762", "379.766, 396.266, 118.585, 0.4038", "378.893, 396.109, 119.084, 0.3432", "378.34, 395.564, 119.6, 0.3174", "377.365, 395.206, 119.996, 0.3062", "376.93, 394.333, 120.29, 0.3354", "376.481, 393.536, 120.465, 0.3778", "376.143, 392.862, 120.554, 0.5118", "375.889, 391.97, 120.909, 0.492", "375.703, 391.269, 121.516, 0.3848", "374.939, 391.134, 122.34, 0.3", "374.158, 390.551, 123.108, 0.2746", "373.245, 390.104, 123.682, 0.2746", "372.486, 389.762, 123.957, 0.2748", "372.372, 388.776, 123.932, 0.2748", "371.945, 387.987, 123.97, 0.2752", "371.349, 387.582, 124.262, 0.2758", "370.608, 387.032, 124.515, 0.2766", "370.169, 386.209, 124.676, 0.2786", "369.617, 385.544, 124.731, 0.2818", "369.073, 384.74, 124.968, 0.2882", "368.056, 384.332, 125.17, 0.2994", "367.307, 383.552, 125.385, 0.3228", "366.947, 382.757, 125.873, 0.3536", "366.685, 381.716, 126.342, 0.4722", "366.182, 380.99, 126.941, 0.3932", "365.241, 380.358, 127.332, 0.3254", "364.707, 380.151, 128.044, 0.2746", "364.262, 380.062, 128.734, 0.2746", "364.135, 379.656, 129.281, 0.2746", "363.679, 379.237, 129.827, 0.2746", "363.116, 378.56, 130.553, 0.2746", "362.277, 378.227, 131.448, 0.2746", "361.501, 378.092, 132.46, 0.2746", "360.81, 377.663, 133.412, 0.2746", "360.08, 377.062, 134.253, 0.2746", "359.191, 376.4, 134.874, 0.2748", "358.742, 375.35, 135.249, 0.2748", "358.116, 374.404, 135.444, 0.2752", "357.723, 373.752, 135.35, 0.2756", "356.936, 373.125, 135.131, 0.2766", "356.677, 372.386, 135.262, 0.2782", "355.787, 372.037, 135.353, 0.2814", "355.085, 371.583, 135.604, 0.287", "354.371, 371.084, 135.997, 0.2988", "353.813, 370.274, 136.288, 0.3142", "353.371, 369.443, 136.514, 0.3734", "352.695, 368.665, 136.61, 0.3338", "352.294, 367.717, 136.786, 0.3", "351.621, 367.133, 136.982, 0.2746", "350.939, 366.635, 136.926, 0.2746", "350.499, 365.78, 136.922, 0.2746", "350.031, 364.803, 136.924, 0.2748", "349.63, 363.916, 137.059, 0.2748", "349.458, 362.929, 137.204, 0.2752", "348.711, 362.304, 137.488, 0.2756", "348.335, 361.682, 138.061, 0.2766", "347.77, 360.806, 138.609, 0.2782", "347.755, 360.36, 138.817, 0.2814", "346.611, 359.942, 138.948, 0.287", "346.042, 359.034, 139.062, 0.2988", "345.366, 358.28, 139.143, 0.3142", "344.543, 357.682, 139.281, 0.3734", "343.71, 357.034, 139.429, 0.3338", "342.826, 356.34, 139.668, 0.3", "342.236, 355.46, 139.948, 0.2746", "341.745, 354.513, 140.266, 0.2746", "341.148, 353.766, 140.675, 0.2746", "340.392, 353.046, 141.069, 0.2746", "339.259, 352.994, 141.426, 0.2746", "338.743, 352.131, 141.819, 0.2746", "338.402, 351.42, 142.31, 0.2746", "337.755, 350.666, 142.852, 0.2746", "337.138, 349.914, 143.132, 0.2746", "336.692, 349.022, 143.482, 0.2748", "336.222, 348.374, 143.63, 0.2748", "335.997, 347.487, 143.861, 0.2752", "335.878, 346.537, 144.073, 0.2756", "335.473, 345.576, 144.212, 0.2766", "334.904, 344.64, 144.244, 0.2782", "334.135, 343.894, 144.333, 0.2814", "333.134, 343.663, 144.398, 0.287", "332.6, 342.729, 144.426, 0.2988", "331.99, 341.777, 144.437, 0.3142", "331.262, 340.905, 144.446, 0.3734", "330.365, 340.214, 144.488, 0.3338", "329.582, 339.536, 144.427, 0.3", "329.029, 338.654, 144.55, 0.2746", "328.366, 337.91, 144.872, 0.2746", "327.445, 337.371, 145.212, 0.2746", "326.531, 336.774, 145.51, 0.2746", "325.809, 336.041, 145.809, 0.2746", "325.145, 335.36, 146.099, 0.2746", "324.832, 334.28, 146.323, 0.2746", "324.34, 333.362, 146.553, 0.2746", "323.62, 332.874, 146.707, 0.2746", "322.804, 332.152, 146.948, 0.2746", "322.244, 331.355, 147.339, 0.2746", "321.863, 330.707, 147.848, 0.2746", "321.132, 330.029, 148.4, 0.2746", "320.879, 329.586, 149.194, 0.2746", "320.138, 329.014, 149.776, 0.2746", "319.314, 328.606, 150.089, 0.2746", "318.27, 328.251, 150.314, 0.2746", "317.138, 328.161, 150.453, 0.2746", "316.068, 327.985, 150.609, 0.2746", "315.396, 327.494, 150.896, 0.2746", "314.721, 326.884, 151.349, 0.2746", "314.172, 326.128, 151.82, 0.2746", "313.914, 325.431, 152.271, 0.2746", "313.767, 324.565, 152.714, 0.2746", "313.342, 323.68, 152.986, 0.2746", "313.037, 322.801, 153.295, 0.2748", "312.669, 322.265, 153.26, 0.275", "312.457, 321.758, 152.963, 0.2752", "311.883, 321.342, 152.855, 0.276", "311.494, 320.592, 152.881, 0.277", "310.783, 319.971, 152.84, 0.2792", "309.917, 319.616, 152.913, 0.2832", "309.621, 319.857, 153.367, 0.2906", "308.986, 319.452, 153.974, 0.3036", "308.422, 319.086, 154.563, 0.3308", "308.079, 318.625, 155.231, 0.368", "307.965, 317.642, 155.63, 0.5002", "307.737, 316.661, 156.024, 0.4396", "307.84, 315.619, 156.203, 0.4368", "307.85, 314.65, 156.138, 0.357", "307.85, 313.79, 156.373, 0.344", "307.85, 312.948, 156.85, 0.3506", "307.348, 312.008, 157.289, 0.4432", "306.542, 311.241, 157.616, 0.4536", "305.906, 310.469, 157.972, 0.5678" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "305.906, 310.469, 157.972, 0.5678", "305.591, 309.906, 157.457, 0.2288", "305.19, 309.281, 157.11, 0.41", "305.086, 308.497, 157.101, 0.3976", "305.017, 307.422, 157.18, 0.4384", "305.132, 306.462, 157.333, 0.4328", "305.443, 305.629, 157.26, 0.3594", "304.875, 304.722, 157.209, 0.3", "304.248, 303.82, 157.125, 0.2746", "303.681, 303.587, 156.756, 0.2746", "303.448, 302.739, 156.676, 0.2746", "303.645, 301.888, 156.715, 0.2746", "303.516, 301.215, 156.566, 0.2746", "303.043, 300.446, 156.46, 0.2746", "302.931, 299.383, 156.534, 0.2746", "302.82, 298.478, 156.779, 0.2746", "302.132, 297.783, 156.8, 0.2746", "301.68, 297.488, 156.621, 0.2746", "301.003, 296.686, 156.516, 0.2746", "300.323, 296.067, 156.307, 0.2746", "299.331, 295.706, 156.16, 0.2746", "298.228, 295.495, 156.059, 0.2746", "297.279, 295.266, 155.864, 0.2746", "296.145, 295.266, 155.748, 0.2748", "295.059, 295.511, 155.611, 0.275", "294.126, 295.84, 155.389, 0.2754", "293.118, 295.953, 155.135, 0.276", "292.105, 296.176, 154.96, 0.2772", "291.212, 296.389, 154.71, 0.2794", "290.517, 296.866, 154.312, 0.2836", "289.401, 297.035, 154.023, 0.291", "288.395, 297.211, 153.837, 0.306", "287.397, 297.211, 153.638, 0.3278", "286.556, 297.175, 153.673, 0.3986", "285.755, 297.618, 153.819, 0.3814", "284.941, 298.086, 153.968, 0.3836", "284.255, 298.612, 154.074, 0.4506", "283.283, 298.727, 154.123, 0.4984", "282.402, 299.312, 154.161, 0.5014", "281.564, 299.156, 153.913, 0.465", "280.646, 299.608, 153.664, 0.3718", "279.848, 299.987, 153.551, 0.3242", "279.392, 300.745, 153.284, 0.3142", "278.294, 300.665, 153.08, 0.3734", "277.526, 301.213, 152.92, 0.3338", "276.671, 301.434, 152.608, 0.3", "275.828, 302.01, 152.181, 0.2746", "274.883, 302.245, 151.759, 0.2746", "274.451, 301.65, 151.308, 0.2746", "273.642, 300.922, 151.051, 0.2746", "273.266, 300.075, 150.967, 0.2748", "273.28, 299.207, 151.038, 0.275", "273.207, 298.657, 150.838, 0.2752", "273.374, 297.993, 150.977, 0.2758", "273.415, 297.056, 151.167, 0.2768", "272.99, 296.684, 151.619, 0.2786", "273.123, 295.586, 151.997, 0.2822", "273.188, 294.453, 152.265, 0.2888", "273.188, 293.33, 152.423, 0.3006", "272.757, 292.506, 152.298, 0.3236", "272.224, 291.734, 151.992, 0.3624", "271.361, 291.068, 151.617, 0.4524", "270.46, 290.852, 151.477, 0.5314", "269.505, 290.6, 151.446, 0.418", "268.819, 289.888, 151.262, 0.3244", "268.322, 289.148, 151.251, 0.2728", "268.036, 288.408, 151.074, 0.2712", "267.757, 287.613, 150.772, 0.2684", "267.702, 286.839, 150.238, 0.2626", "268.039, 285.876, 149.92, 0.2542", "267.993, 284.882, 149.774, 0.2288", "267.81, 283.826, 150.08, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "305.906, 310.469, 157.972, 0.5678", "305.58, 309.91, 158.186, 0.5496", "305.202, 309.354, 158.11, 0.4866", "304.658, 308.419, 158.178, 0.5122", "304.299, 307.722, 158.605, 0.554", "303.529, 307.024, 159.104, 0.6606" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "303.529, 307.024, 159.104, 0.6606", "303.079, 306.749, 160.103, 0.4576", "302.095, 306.336, 158.995, 0.3622", "301.04, 306.006, 158.561, 0.3052", "299.981, 305.887, 158.021, 0.2844", "299.811, 305.378, 157.235, 0.2928", "299.106, 305.003, 156.334, 0.3078", "298.336, 304.989, 155.691, 0.3384", "297.404, 305.212, 155.387, 0.382", "296.41, 305.105, 155.002, 0.527", "294.987, 304.799, 154.564, 0.4842", "293.374, 304.972, 154.267, 0.5454", "292.352, 304.876, 153.959, 0.434", "291.435, 305.223, 153.786, 0.403", "290.595, 305.9, 153.598, 0.4084", "289.797, 306.414, 153.395, 0.571", "289.113, 306.989, 153.031, 0.591", "288.346, 307.474, 152.576, 0.62", "287.615, 307.659, 152.491, 0.484", "286.818, 307.85, 152.362, 0.4668", "286.041, 308.041, 151.924, 0.4384", "285.414, 308.181, 151.349, 0.3698", "284.605, 308.422, 151.038, 0.3192", "283.942, 308.422, 150.52, 0.3112", "283.091, 308.392, 149.786, 0.3382", "282.022, 308.194, 149.238, 0.413", "281.106, 308.419, 148.693, 0.4328", "280.177, 308.257, 148.081, 0.3594", "279.301, 307.77, 147.652, 0.3002", "278.858, 307.501, 147.636, 0.2748", "277.954, 307.266, 147.688, 0.2752", "277.384, 306.864, 147.423, 0.2758", "276.734, 306.425, 146.944, 0.2768", "275.942, 306.275, 146.467, 0.2786", "275.607, 305.667, 145.867, 0.282", "275.094, 304.908, 145.477, 0.2884", "274.145, 304.397, 145.119, 0.2998", "274.447, 303.961, 144.667, 0.3234", "274.339, 303.19, 144.086, 0.3546", "273.757, 302.356, 143.597, 0.474", "273.039, 302.006, 143.172, 0.3962", "272.486, 301.368, 142.614, 0.331", "272.043, 300.857, 142.112, 0.285", "271.482, 300.127, 141.942, 0.2938", "270.918, 299.355, 141.694, 0.3112", "270.194, 298.68, 141.403, 0.3384", "269.544, 297.838, 141.121, 0.413", "268.563, 297.58, 140.723, 0.4328", "267.665, 297.326, 140.253, 0.3596", "267.01, 296.994, 139.779, 0.3004", "266.483, 296.299, 139.388, 0.2754", "265.887, 295.905, 138.863, 0.2762", "265.322, 295.139, 138.554, 0.2776", "265.431, 294.542, 138.456, 0.2804", "264.716, 293.969, 138.169, 0.2852", "264.156, 293.139, 137.679, 0.2942", "263.882, 292.462, 136.923, 0.3118", "263.564, 291.618, 136.124, 0.3396", "263.113, 290.737, 135.403, 0.4154", "263.129, 289.824, 134.704, 0.4374", "263.43, 288.811, 134.169, 0.3676", "263.69, 287.781, 133.645, 0.3164", "263.48, 286.811, 133.1, 0.2994", "263.779, 285.772, 132.721, 0.3474", "264.116, 284.734, 132.406, 0.2796", "263.921, 283.941, 131.6, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "303.529, 307.024, 159.104, 0.6606", "303.051, 306.592, 159.825, 0.4868", "302.108, 306.204, 160.464, 0.3672", "301.089, 305.901, 160.915, 0.3046", "300.212, 305.358, 161.258, 0.3324", "299.426, 304.813, 161.327, 0.3712", "298.71, 304.305, 161.314, 0.5044", "297.567, 303.616, 161.887, 0.43", "296.635, 303.075, 162.119, 0.5144", "295.953, 302.321, 162.306, 0.4968", "295.41, 301.487, 162.448, 0.3934", "295.382, 300.458, 162.737, 0.3162", "295.471, 299.532, 163.191, 0.3044", "294.71, 298.897, 163.677, 0.3306", "293.733, 298.343, 164.137, 0.3752", "293.0, 297.701, 164.686, 0.4762", "292.179, 297.374, 165.381, 0.5762", "291.142, 297.28, 166.009, 0.4974", "290.158, 297.337, 166.323, 0.4914", "289.424, 297.135, 166.748, 0.4846", "288.623, 296.325, 167.017, 0.4524", "288.052, 295.61, 167.045, 0.4876", "287.425, 295.471, 166.767, 0.5496", "286.909, 295.232, 166.429, 0.4514", "285.997, 294.746, 166.273, 0.3886", "285.546, 294.636, 166.558, 0.3808", "284.753, 294.008, 166.918, 0.524", "284.194, 293.306, 167.396, 0.4832", "283.44, 292.698, 167.958, 0.521", "282.522, 292.167, 168.577, 0.497", "281.49, 291.715, 169.084, 0.6808", "280.617, 291.258, 169.418, 0.6002", "279.993, 290.938, 169.976, 0.6664", "279.337, 290.356, 170.55, 0.6572", "278.988, 289.89, 171.386, 0.5946", "278.557, 289.286, 172.318, 0.47", "278.232, 288.397, 173.189, 0.5094", "278.052, 287.827, 174.077, 0.4146", "277.695, 287.308, 174.343, 0.3662", "277.203, 286.951, 174.267, 0.345", "276.647, 286.458, 174.136, 0.4314", "275.684, 285.992, 173.9, 0.437", "274.807, 285.444, 173.736, 0.5132", "274.003, 285.087, 173.773, 0.563", "273.497, 284.354, 174.036, 0.6414", "273.41, 283.622, 174.586, 0.626", "273.715, 283.046, 175.32, 0.4618", "273.313, 282.023, 175.991, 0.3596", "273.029, 281.127, 176.401, 0.3328", "272.319, 280.453, 176.781, 0.4074", "271.643, 279.732, 177.113, 0.3992", "270.768, 279.122, 177.432, 0.4104", "270.005, 278.575, 177.708, 0.531", "269.517, 277.666, 177.743, 0.499", "268.81, 276.968, 177.769, 0.536", "267.943, 276.371, 177.792, 0.5944", "267.147, 275.797, 177.669, 0.5246", "266.335, 275.074, 177.576, 0.5738", "265.775, 274.304, 177.714, 0.4826", "264.939, 273.759, 177.784, 0.5124", "263.987, 273.574, 177.896, 0.5184", "262.879, 273.715, 178.037, 0.5394", "262.124, 273.646, 178.019, 0.5312", "261.404, 273.533, 178.324, 0.5148", "260.832, 272.986, 178.781, 0.4908", "260.253, 272.2, 179.193, 0.4146", "259.977, 271.194, 179.597, 0.4276", "259.802, 270.102, 179.917, 0.3894", "259.305, 269.325, 180.24, 0.3924", "258.471, 268.603, 180.527, 0.4966", "257.581, 268.348, 180.592, 0.4394", "256.607, 268.003, 180.644, 0.4066", "256.225, 267.425, 181.018, 0.4464", "255.398, 266.907, 181.386, 0.4892", "254.776, 266.48, 181.8, 0.4906", "254.769, 265.444, 182.218, 0.4142", "254.883, 264.336, 182.508, 0.4268", "255.081, 263.443, 182.841, 0.388", "254.883, 262.661, 182.827, 0.3898", "254.758, 261.617, 182.903, 0.4918", "254.456, 260.989, 183.195, 0.4304", "254.37, 260.273, 183.236, 0.3902", "253.716, 259.611, 183.184, 0.415", "253.006, 258.871, 183.278, 0.4364", "252.425, 257.993, 183.541, 0.3662", "251.622, 257.233, 183.843, 0.3124", "250.801, 256.526, 184.096, 0.2988", "250.536, 255.502, 184.426, 0.3142", "249.989, 254.858, 184.873, 0.3734", "249.608, 254.654, 185.225, 0.3338", "248.539, 254.074, 185.422, 0.3", "247.675, 253.403, 185.574, 0.2746", "246.746, 252.879, 185.659, 0.2746", "245.745, 252.595, 185.63, 0.2746", "244.781, 252.074, 185.574, 0.2746", "243.933, 251.451, 185.504, 0.2746", "242.872, 251.109, 185.356, 0.2746", "242.83, 250.034, 185.217, 0.2746", "242.986, 249.057, 185.021, 0.2746", "243.016, 248.248, 184.638, 0.2746", "243.486, 248.104, 184.03, 0.2746", "243.318, 247.156, 183.503, 0.2746", "243.045, 246.181, 183.12, 0.2746", "242.39, 245.751, 182.943, 0.2746", "241.54, 245.131, 182.695, 0.2746", "240.773, 244.698, 182.629, 0.2746", "240.121, 243.886, 182.517, 0.2748", "239.84, 243.214, 182.092, 0.275", "238.863, 242.833, 181.827, 0.2752", "238.159, 242.003, 181.625, 0.2758", "237.468, 241.41, 181.301, 0.2768", "236.559, 241.114, 180.769, 0.2788", "235.704, 240.677, 180.364, 0.2824", "235.438, 240.217, 179.626, 0.2888", "234.991, 239.581, 178.645, 0.302", "234.481, 238.674, 177.734, 0.32", "234.126, 237.655, 176.905, 0.3846", "233.818, 236.723, 176.367, 0.3544", "233.055, 236.189, 176.0, 0.3388", "232.882, 235.906, 175.319, 0.3422", "232.007, 235.645, 174.755, 0.4204", "232.011, 234.732, 174.053, 0.4462", "232.59, 234.072, 173.578, 0.3854", "233.012, 233.736, 172.968, 0.3432", "233.89, 233.395, 171.249, 0.3462", "234.51, 233.343, 170.389, 0.3228", "235.216, 232.721, 169.775, 0.3176", "235.181, 231.774, 169.318, 0.3502", "234.978, 231.104, 168.85, 0.4348", "234.749, 230.402, 168.553, 0.4742", "234.704, 229.632, 168.342, 0.4306", "234.464, 228.587, 168.176, 0.4596", "235.131, 227.99, 167.957, 0.4372", "235.966, 227.409, 167.491, 0.5372", "236.423, 227.084, 166.699, 0.492", "237.0, 226.668, 165.705, 0.3848", "237.38, 226.617, 164.549, 0.3", "237.399, 225.716, 163.806, 0.2746", "237.714, 224.907, 163.54, 0.2746", "238.037, 224.273, 163.61, 0.2746", "238.824, 223.723, 163.547, 0.2746", "239.161, 222.823, 163.377, 0.2748", "239.103, 221.835, 163.123, 0.2748", "239.878, 221.226, 162.631, 0.2752", "240.121, 220.498, 161.874, 0.2756", "240.436, 219.522, 161.086, 0.2766", "241.127, 218.704, 160.484, 0.2782", "240.985, 218.011, 159.715, 0.2814", "241.353, 217.177, 158.966, 0.2872", "241.27, 216.144, 158.42, 0.299", "241.613, 215.662, 157.849, 0.3148", "241.948, 214.657, 157.443, 0.3746", "242.974, 214.287, 157.159, 0.3362", "242.506, 213.994, 157.15, 0.3042", "242.544, 213.136, 157.281, 0.2822", "242.789, 212.383, 157.12, 0.2888", "243.279, 211.863, 156.787, 0.3008", "243.637, 211.411, 156.115, 0.324", "243.993, 210.772, 155.275, 0.363", "244.829, 210.383, 154.467, 0.4536", "245.429, 209.545, 153.922, 0.5336", "245.517, 208.505, 153.568, 0.4224", "246.174, 207.97, 153.259, 0.3324", "246.101, 206.931, 153.097, 0.2874", "246.169, 205.817, 153.008, 0.2994", "246.596, 205.161, 152.725, 0.3164", "247.11, 204.289, 152.418, 0.3728", "247.228, 203.153, 152.204, 0.356", "247.562, 202.488, 152.32, 0.2288" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_288",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_289",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_18", "dend_7", "dend_0", "apic_0", "dend_27", "dend_24", "dend_20", "dend_19", "dend_17", "dend_8", "dend_6", "dend_1", "apic_20", "apic_1", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_12", "dend_9", "dend_5", "dend_2", "apic_19", "apic_2", "dend_14", "dend_13", "dend_11", "dend_10", "dend_4", "dend_3", "apic_18", "apic_3", "dend_16", "dend_15", "apic_5", "apic_4", "apic_17", "apic_6", "apic_16", "apic_7", "apic_15", "apic_8", "apic_14", "apic_9", "apic_13", "apic_10", "apic_12", "apic_11" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_18", "dend_7", "dend_0", "dend_27", "dend_24", "dend_20", "dend_19", "dend_17", "dend_8", "dend_6", "dend_1", "dend_29", "dend_28", "dend_26", "dend_25", "dend_22", "dend_21", "dend_12", "dend_9", "dend_5", "dend_2", "dend_14", "dend_13", "dend_11", "dend_10", "dend_4", "dend_3", "dend_16", "dend_15" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_19", "apic_2", "apic_18", "apic_3", "apic_5", "apic_4", "apic_17", "apic_6", "apic_16", "apic_7", "apic_15", "apic_8", "apic_14", "apic_9", "apic_13", "apic_10", "apic_12", "apic_11" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11769",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_6", "apic_6", "apic_6", "apic_6", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.687595"
  }, {
    "group" : "apic",
    "value" : "3.687595"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "84.43818"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.9162713E-7",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.0795842E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.5538481",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "8.116303E-10",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.047299676",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.2670752E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0027538422",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.18435536",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "8.758792E-4",
    "erev" : "-91.0273"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.384848E-4",
    "erev" : "-91.0273"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "4.3626576E-7",
    "erev" : "-91.0273"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "9.728836E-5",
    "erev" : "-91.0273"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.981895E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "7.633297E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513398",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513398

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_19, id: apic_19, parent: apic_1
create apic_19
public apic_19
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_18, id: apic_18, parent: apic_2
create apic_18
public apic_18
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_17, id: apic_17, parent: apic_5
create apic_17
public apic_17
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_16, id: apic_16, parent: apic_6
create apic_16
public apic_16
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_15, id: apic_15, parent: apic_7
create apic_15
public apic_15
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_14, id: apic_14, parent: apic_8
create apic_14
public apic_14
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_288, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_288
// Group: {name=ModelViewParmSubset_289, groups=[], sections=[dend_23, dend_18, dend_7, dend_0, apic_0, dend_27, dend_24, dend_20, dend_19, dend_17, dend_8, dend_6, dend_1, apic_20, apic_1, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_12, dend_9, dend_5, dend_2, apic_19, apic_2, dend_14, dend_13, dend_11, dend_10, dend_4, dend_3, apic_18, apic_3, dend_16, dend_15, apic_5, apic_4, apic_17, apic_6, apic_16, apic_7, apic_15, apic_8, apic_14, apic_9, apic_13, apic_10, apic_12, apic_11]}
objref ModelViewParmSubset_289
// Group: {name=dend, groups=[], sections=[dend_23, dend_18, dend_7, dend_0, dend_27, dend_24, dend_20, dend_19, dend_17, dend_8, dend_6, dend_1, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_12, dend_9, dend_5, dend_2, dend_14, dend_13, dend_11, dend_10, dend_4, dend_3, dend_16, dend_15]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_19, apic_2, apic_18, apic_3, apic_5, apic_4, apic_17, apic_6, apic_16, apic_7, apic_15, apic_8, apic_14, apic_9, apic_13, apic_10, apic_12, apic_11]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_11769, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_11769
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_6, apic_6, apic_6, apic_6, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513398
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49996194535352856)
    connect dend_23(0), soma_0(0.49996194535352856)
    connect dend_18(0), soma_0(0.49996194535352856)
    connect dend_7(0), soma_0(0.49996194535352856)
    connect dend_0(0), soma_0(0.49996194535352856)
    connect apic_0(0), soma_0(0.49996194535352856)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_19(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_18(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_17(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_16(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_15(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_14(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 493.359, 537.222, 31.92, 13.139 ) }
    soma_0 { pt3dadd( 499.928, 537.222, 31.92, 13.139 ) }
    soma_0 { pt3dadd( 506.498, 537.222, 31.92, 13.139 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 499.928, 537.222, 31.92, 1.0 ) }
    axon_0 { pt3dadd( 505.77, 551.038, 31.92, 1.0 ) }
    axon_0 { pt3dadd( 511.611, 564.854, 31.92, 1.0 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 500.78, 539.937, 45.6005, 0.2288 ) }
    dend_23 { pt3dadd( 500.935, 540.432, 46.4293, 0.2988 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 8/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 503.973, 533.673, 30.7695, 0.2288 ) }
    dend_18 { pt3dadd( 504.861, 532.959, 30.434, 0.3468 ) }
    dend_18 { pt3dadd( 505.912, 532.657, 30.2358, 0.4336 ) }
    dend_18 { pt3dadd( 507.037, 532.487, 30.0532, 0.4482 ) }
    dend_18 { pt3dadd( 507.88, 531.82, 29.9928, 0.4982 ) }
    dend_18 { pt3dadd( 508.19, 530.747, 29.9284, 0.709 ) }
    dend_18 { pt3dadd( 508.484, 529.709, 29.7287, 0.756 ) }
    dend_18 { pt3dadd( 509.117, 528.852, 29.4258, 0.6806 ) }
    dend_18 { pt3dadd( 509.659, 527.852, 29.1802, 0.6444 ) }
    dend_18 { pt3dadd( 510.322, 526.921, 29.0016, 0.5304 ) }
    dend_18 { pt3dadd( 511.195, 526.184, 28.8946, 0.5474 ) }
    dend_18 { pt3dadd( 511.725, 525.18, 28.901, 0.6154 ) }
    dend_18 { pt3dadd( 512.068, 524.089, 28.966, 0.5642 ) }
    dend_18 { pt3dadd( 512.281, 522.967, 29.0612, 0.642 ) }
    dend_18 { pt3dadd( 512.29, 521.825, 29.2099, 0.6352 ) }
    dend_18 { pt3dadd( 512.323, 520.751, 29.5095, 0.668 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 24/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 494.47, 537.751, 30.6491, 0.4576 ) }
    dend_7 { pt3dadd( 493.518, 537.198, 29.6702, 0.4002 ) }
    dend_7 { pt3dadd( 492.549, 536.732, 29.2342, 0.3702 ) }
    dend_7 { pt3dadd( 491.692, 536.146, 28.6807, 0.4324 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 504.843, 534.818, 31.9945, 0.2288 ) }
    dend_0 { pt3dadd( 505.956, 534.926, 31.8707, 0.3462 ) }
    dend_0 { pt3dadd( 507.086, 534.984, 31.7904, 0.4278 ) }
    dend_0 { pt3dadd( 508.191, 535.234, 31.6627, 0.4602 ) }
    dend_0 { pt3dadd( 509.289, 535.381, 31.4672, 0.411 ) }
    dend_0 { pt3dadd( 510.43, 535.376, 31.3186, 0.3918 ) }
    dend_0 { pt3dadd( 511.562, 535.282, 31.1914, 0.465 ) }
    dend_0 { pt3dadd( 512.625, 534.868, 31.1539, 0.5298 ) }
    dend_0 { pt3dadd( 513.508, 534.341, 31.3502, 0.5364 ) }
    dend_0 { pt3dadd( 514.193, 533.564, 31.6921, 0.642 ) }
    dend_0 { pt3dadd( 515.029, 532.785, 31.9438, 0.8416 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 39/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 496.283, 532.088, 33.586, 1.795 ) }
    apic_0 { pt3dadd( 495.264, 531.575, 33.9122, 0.4542 ) }
    apic_0 { pt3dadd( 494.247, 531.105, 34.1107, 0.51 ) }
    apic_0 { pt3dadd( 493.421, 530.345, 34.2611, 0.499 ) }
    apic_0 { pt3dadd( 492.628, 529.617, 34.5344, 0.5758 ) }
    apic_0 { pt3dadd( 491.895, 528.83, 34.918, 0.7042 ) }
    apic_0 { pt3dadd( 491.116, 528.005, 35.3287, 0.7812 ) }
    apic_0 { pt3dadd( 490.24, 527.273, 35.7437, 0.791 ) }
    apic_0 { pt3dadd( 489.306, 526.67, 36.2314, 0.7676 ) }
    apic_0 { pt3dadd( 488.63, 525.904, 36.8382, 0.697 ) }
    apic_0 { pt3dadd( 488.106, 524.908, 37.3789, 0.6992 ) }
    apic_0 { pt3dadd( 487.895, 523.793, 37.8585, 0.7438 ) }
    apic_0 { pt3dadd( 487.31, 522.901, 38.3947, 1.0864 ) }
    apic_0 { pt3dadd( 487.069, 521.845, 38.9458, 1.3754 ) }
    apic_0 { pt3dadd( 486.319, 519.696, 39.7393, 1.1438 ) }
    apic_0 { pt3dadd( 486.079, 518.6, 40.0669, 1.2164 ) }
    apic_0 { pt3dadd( 485.639, 517.565, 40.3648, 1.154 ) }
    apic_0 { pt3dadd( 485.069, 516.574, 40.5558, 1.0788 ) }
    apic_0 { pt3dadd( 484.332, 515.7, 40.6714, 0.9712 ) }
    apic_0 { pt3dadd( 483.499, 514.918, 40.7366, 0.8468 ) }
    apic_0 { pt3dadd( 482.572, 514.29, 40.7095, 0.7096 ) }
    apic_0 { pt3dadd( 481.527, 513.856, 40.6532, 0.6882 ) }
    apic_0 { pt3dadd( 480.438, 513.508, 40.6809, 0.6606 ) }
    apic_0 { pt3dadd( 479.336, 513.331, 40.8789, 0.5518 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 63/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 511.611, 564.854, 31.92, 1.0 ) }
    axon_1 { pt3dadd( 517.452, 578.67, 31.92, 1.0 ) }
    axon_1 { pt3dadd( 523.294, 592.486, 31.92, 1.0 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 66/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 500.935, 540.432, 46.4293, 0.2988 ) }
    dend_27 { pt3dadd( 501.09, 540.928, 50.591, 0.2288 ) }
    dend_27 { pt3dadd( 501.246, 541.423, 53.7001, 0.2748 ) }
    dend_27 { pt3dadd( 501.401, 541.919, 55.0449, 0.2752 ) }
    dend_27 { pt3dadd( 501.556, 542.413, 56.5928, 0.2756 ) }
    dend_27 { pt3dadd( 501.711, 542.908, 58.2162, 0.2766 ) }
    dend_27 { pt3dadd( 501.758, 542.256, 59.5434, 0.2784 ) }
    dend_27 { pt3dadd( 501.56, 541.23, 60.494, 0.2816 ) }
    dend_27 { pt3dadd( 501.085, 540.756, 61.3382, 0.2874 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 500.935, 540.432, 46.4293, 0.2988 ) }
    dend_24 { pt3dadd( 500.462, 540.998, 46.5399, 0.3144 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 77/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 512.323, 520.751, 29.5095, 0.668 ) }
    dend_20 { pt3dadd( 512.237, 519.145, 29.8012, 0.739 ) }
    dend_20 { pt3dadd( 512.01, 518.079, 30.1451, 0.8218 ) }
    dend_20 { pt3dadd( 511.852, 517.0, 30.5122, 0.7528 ) }
    dend_20 { pt3dadd( 511.829, 515.869, 30.7863, 0.561 ) }
    dend_20 { pt3dadd( 511.855, 514.728, 30.8924, 0.5164 ) }
    dend_20 { pt3dadd( 512.016, 513.656, 30.7566, 0.526 ) }
    dend_20 { pt3dadd( 511.982, 512.585, 30.4363, 0.5534 ) }
    dend_20 { pt3dadd( 511.857, 511.458, 30.0922, 0.5572 ) }
    dend_20 { pt3dadd( 511.895, 510.318, 29.7867, 0.5638 ) }
    dend_20 { pt3dadd( 512.219, 509.225, 29.5322, 0.5776 ) }
    dend_20 { pt3dadd( 512.657, 508.186, 29.2799, 0.5964 ) }
    dend_20 { pt3dadd( 513.024, 507.124, 29.0284, 0.6634 ) }
    dend_20 { pt3dadd( 513.352, 506.031, 28.8532, 0.6322 ) }
    dend_20 { pt3dadd( 513.62, 504.947, 28.7921, 0.6428 ) }
    dend_20 { pt3dadd( 513.661, 503.824, 28.6728, 0.5572 ) }
    dend_20 { pt3dadd( 513.693, 502.695, 28.5026, 0.4532 ) }
    dend_20 { pt3dadd( 513.865, 501.594, 28.2811, 0.4522 ) }
    dend_20 { pt3dadd( 514.531, 500.688, 28.0568, 0.4348 ) }
    dend_20 { pt3dadd( 515.362, 499.904, 27.8951, 0.4782 ) }
    dend_20 { pt3dadd( 516.264, 499.203, 27.8039, 0.6476 ) }
    dend_20 { pt3dadd( 516.977, 498.309, 27.7978, 0.7604 ) }
    dend_20 { pt3dadd( 517.849, 497.571, 27.8681, 0.801 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_20 { pt3dadd( 518.899, 497.129, 28.0196, 0.7794 ) }
    dend_20 { pt3dadd( 519.836, 496.544, 28.3007, 0.7518 ) }
    dend_20 { pt3dadd( 520.464, 495.598, 28.6, 0.6404 ) }
    dend_20 { pt3dadd( 520.535, 494.472, 28.9271, 0.727 ) }
    dend_20 { pt3dadd( 520.615, 493.383, 29.3112, 0.8378 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 512.323, 520.751, 29.5095, 0.668 ) }
    dend_19 { pt3dadd( 512.74, 519.374, 31.9852, 0.9152 ) }
    dend_19 { pt3dadd( 513.359, 518.488, 33.152, 0.6362 ) }
    dend_19 { pt3dadd( 513.902, 517.595, 33.6834, 0.5956 ) }
    dend_19 { pt3dadd( 514.031, 516.477, 34.1944, 0.506 ) }
    dend_19 { pt3dadd( 513.503, 515.602, 34.7855, 0.4104 ) }
    dend_19 { pt3dadd( 512.824, 514.99, 35.4312, 0.3486 ) }
    dend_19 { pt3dadd( 512.742, 513.856, 35.8655, 0.3604 ) }
    dend_19 { pt3dadd( 512.737, 512.74, 36.0298, 0.455 ) }
    dend_19 { pt3dadd( 512.716, 511.607, 36.0212, 0.5064 ) }
    dend_19 { pt3dadd( 512.576, 510.5, 35.9262, 0.5158 ) }
    dend_19 { pt3dadd( 512.081, 509.525, 35.8459, 0.493 ) }
    dend_19 { pt3dadd( 511.235, 508.793, 35.6815, 0.4186 ) }
    dend_19 { pt3dadd( 510.272, 508.182, 35.551, 0.435 ) }
    dend_19 { pt3dadd( 509.309, 507.573, 35.4796, 0.403 ) }
    dend_19 { pt3dadd( 508.454, 506.815, 35.4494, 0.4184 ) }
    dend_19 { pt3dadd( 507.712, 505.948, 35.4516, 0.541 ) }
    dend_19 { pt3dadd( 507.128, 504.97, 35.4886, 0.5408 ) }
    dend_19 { pt3dadd( 506.674, 503.921, 35.5746, 0.5004 ) }
    dend_19 { pt3dadd( 506.316, 502.86, 35.6745, 0.3918 ) }
    dend_19 { pt3dadd( 506.137, 501.761, 35.7871, 0.3546 ) }
    dend_19 { pt3dadd( 505.905, 500.674, 36.0562, 0.4026 ) }
    dend_19 { pt3dadd( 505.868, 499.676, 36.6058, 0.3826 ) }
    dend_19 { pt3dadd( 505.807, 498.784, 37.4382, 0.4158 ) }
    dend_19 { pt3dadd( 505.395, 497.932, 38.4031, 0.3664 ) }
    dend_19 { pt3dadd( 504.457, 497.755, 39.3568, 0.355 ) }
    dend_19 { pt3dadd( 503.464, 498.292, 40.2312, 0.4018 ) }
    dend_19 { pt3dadd( 502.66, 498.397, 41.123, 0.3874 ) }
    dend_19 { pt3dadd( 502.836, 497.88, 42.105, 0.3948 ) }
    dend_19 { pt3dadd( 503.541, 497.142, 43.0192, 0.4714 ) }
    dend_19 { pt3dadd( 503.603, 496.124, 43.7856, 0.5378 ) }
    dend_19 { pt3dadd( 503.03, 495.187, 44.4259, 0.5702 ) }
    dend_19 { pt3dadd( 502.148, 494.485, 44.898, 0.6126 ) }
    dend_19 { pt3dadd( 501.301, 493.746, 45.2424, 0.5484 ) }
    dend_19 { pt3dadd( 500.701, 492.799, 45.3998, 0.4368 ) }
    dend_19 { pt3dadd( 500.136, 491.812, 45.4272, 0.423 ) }
    dend_19 { pt3dadd( 499.454, 490.898, 45.3989, 0.3734 ) }
    dend_19 { pt3dadd( 498.886, 489.94, 45.2936, 0.3988 ) }
    dend_19 { pt3dadd( 498.602, 488.846, 45.2346, 0.3338 ) }
    dend_19 { pt3dadd( 498.602, 487.739, 45.334, 0.3 ) }
    dend_19 { pt3dadd( 498.862, 486.635, 45.4961, 0.2746 ) }
    dend_19 { pt3dadd( 499.356, 485.622, 45.6554, 0.2746 ) }
    dend_19 { pt3dadd( 499.997, 484.73, 45.971, 0.2748 ) }
    dend_19 { pt3dadd( 500.802, 484.029, 46.4458, 0.2748 ) }
    dend_19 { pt3dadd( 501.468, 483.213, 47.0257, 0.2752 ) }
    dend_19 { pt3dadd( 500.701, 482.638, 47.6927, 0.2756 ) }
    dend_19 { pt3dadd( 499.848, 481.944, 48.312, 0.2766 ) }
    dend_19 { pt3dadd( 499.449, 481.714, 48.697, 0.2782 ) }
    dend_19 { pt3dadd( 499.448, 480.63, 48.9359, 0.2814 ) }
    dend_19 { pt3dadd( 499.809, 479.578, 48.9726, 0.287 ) }
    dend_19 { pt3dadd( 499.96, 478.53, 48.9639, 0.2988 ) }
    dend_19 { pt3dadd( 499.891, 477.517, 48.7343, 0.3144 ) }
    dend_19 { pt3dadd( 500.276, 476.578, 48.3748, 0.3738 ) }
    dend_19 { pt3dadd( 500.678, 475.69, 47.98, 0.3346 ) }
    dend_19 { pt3dadd( 501.358, 474.936, 47.5034, 0.3012 ) }
    dend_19 { pt3dadd( 502.176, 474.26, 46.9216, 0.2768 ) }
    dend_19 { pt3dadd( 502.77, 473.317, 46.3562, 0.2788 ) }
    dend_19 { pt3dadd( 503.103, 472.358, 45.7783, 0.2824 ) }
    dend_19 { pt3dadd( 503.154, 471.275, 45.2869, 0.2894 ) }
    dend_19 { pt3dadd( 504.018, 470.886, 44.7661, 0.3014 ) }
    dend_19 { pt3dadd( 504.916, 471.408, 44.3114, 0.3266 ) }
    dend_19 { pt3dadd( 505.48, 472.324, 44.0283, 0.3606 ) }
    dend_19 { pt3dadd( 506.085, 473.268, 43.8852, 0.4848 ) }
    dend_19 { pt3dadd( 507.029, 473.897, 43.867, 0.4176 ) }
    dend_19 { pt3dadd( 508.053, 474.384, 43.9085, 0.3652 ) }
    dend_19 { pt3dadd( 509.105, 474.464, 43.974, 0.374 ) }
    dend_19 { pt3dadd( 510.081, 474.914, 44.0062, 0.335 ) }
    dend_19 { pt3dadd( 511.039, 475.392, 43.8984, 0.302 ) }
    dend_19 { pt3dadd( 511.891, 476.07, 43.7909, 0.2784 ) }
    dend_19 { pt3dadd( 512.75, 476.557, 43.7116, 0.2816 ) }
    dend_19 { pt3dadd( 513.592, 476.934, 43.5481, 0.2874 ) }
    dend_19 { pt3dadd( 514.531, 477.311, 43.2992, 0.2994 ) }
    dend_19 { pt3dadd( 515.508, 477.506, 42.877, 0.3164 ) }
    dend_19 { pt3dadd( 516.561, 477.522, 42.3794, 0.3728 ) }
    dend_19 { pt3dadd( 517.607, 477.533, 41.8225, 0.356 ) }
    dend_19 { pt3dadd( 518.576, 477.849, 40.88, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 81/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 491.692, 536.146, 28.6807, 0.4324 ) }
    dend_17 { pt3dadd( 490.869, 536.268, 27.54, 0.2288 ) }
    dend_17 { pt3dadd( 489.728, 536.316, 27.2, 0.354 ) }
    dend_17 { pt3dadd( 488.585, 536.37, 27.0675, 0.4728 ) }
    dend_17 { pt3dadd( 487.529, 536.729, 26.8922, 0.3942 ) }
    dend_17 { pt3dadd( 486.984, 537.626, 26.6556, 0.3272 ) }
    dend_17 { pt3dadd( 486.961, 538.759, 26.3407, 0.2778 ) }
    dend_17 { pt3dadd( 486.451, 539.668, 25.9073, 0.2806 ) }
    dend_17 { pt3dadd( 485.507, 539.616, 25.2702, 0.2856 ) }
    dend_17 { pt3dadd( 484.617, 539.459, 24.3788, 0.295 ) }
    dend_17 { pt3dadd( 484.648, 539.446, 23.1875, 0.3132 ) }
    dend_17 { pt3dadd( 484.85, 540.426, 22.0146, 0.342 ) }
    dend_17 { pt3dadd( 485.022, 541.556, 21.0511, 0.4198 ) }
    dend_17 { pt3dadd( 485.249, 542.677, 20.2614, 0.4452 ) }
    dend_17 { pt3dadd( 485.04, 543.224, 19.5625, 0.3834 ) }
    dend_17 { pt3dadd( 484.698, 544.227, 18.9043, 0.3396 ) }
    dend_17 { pt3dadd( 483.999, 543.886, 18.0907, 0.3734 ) }
    dend_17 { pt3dadd( 483.46, 543.514, 17.174, 0.334 ) }
    dend_17 { pt3dadd( 483.442, 543.365, 15.9788, 0.3002 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_17 { pt3dadd( 482.822, 543.524, 14.7866, 0.275 ) }
    dend_17 { pt3dadd( 481.711, 543.629, 13.8536, 0.2754 ) }
    dend_17 { pt3dadd( 480.567, 543.629, 13.2006, 0.2762 ) }
    dend_17 { pt3dadd( 479.423, 543.629, 12.7948, 0.2776 ) }
    dend_17 { pt3dadd( 478.279, 543.629, 12.5754, 0.2802 ) }
    dend_17 { pt3dadd( 477.143, 543.74, 12.4974, 0.285 ) }
    dend_17 { pt3dadd( 476.184, 543.972, 12.3805, 0.2938 ) }
    dend_17 { pt3dadd( 475.263, 544.121, 12.2274, 0.3112 ) }
    dend_17 { pt3dadd( 474.352, 543.866, 12.2937, 0.3382 ) }
    dend_17 { pt3dadd( 473.264, 543.791, 12.3683, 0.413 ) }
    dend_17 { pt3dadd( 472.248, 543.371, 12.596, 0.4328 ) }
    dend_17 { pt3dadd( 471.16, 543.107, 12.8774, 0.3594 ) }
    dend_17 { pt3dadd( 470.201, 543.171, 13.2253, 0.3 ) }
    dend_17 { pt3dadd( 469.373, 543.696, 13.4761, 0.2746 ) }
    dend_17 { pt3dadd( 469.037, 544.465, 13.9454, 0.2748 ) }
    dend_17 { pt3dadd( 468.324, 545.22, 14.3327, 0.2748 ) }
    dend_17 { pt3dadd( 467.62, 545.77, 14.7301, 0.2752 ) }
    dend_17 { pt3dadd( 466.668, 546.06, 15.2236, 0.2756 ) }
    dend_17 { pt3dadd( 466.227, 546.793, 15.8084, 0.2766 ) }
    dend_17 { pt3dadd( 466.638, 547.168, 16.4562, 0.2784 ) }
    dend_17 { pt3dadd( 466.22, 547.843, 16.949, 0.2818 ) }
    dend_17 { pt3dadd( 465.722, 548.344, 17.5009, 0.288 ) }
    dend_17 { pt3dadd( 464.866, 548.933, 17.9311, 0.2994 ) }
    dend_17 { pt3dadd( 463.824, 549.242, 18.1009, 0.3214 ) }
    dend_17 { pt3dadd( 463.341, 550.138, 18.0175, 0.3572 ) }
    dend_17 { pt3dadd( 462.652, 550.482, 17.6888, 0.4476 ) }
    dend_17 { pt3dadd( 461.669, 550.607, 17.2236, 0.4988 ) }
    dend_17 { pt3dadd( 460.987, 551.036, 16.8579, 0.4724 ) }
    dend_17 { pt3dadd( 460.432, 551.554, 16.5617, 0.5552 ) }
    dend_17 { pt3dadd( 459.893, 552.43, 16.4659, 0.5266 ) }
    dend_17 { pt3dadd( 459.451, 553.098, 16.4457, 0.4434 ) }
    dend_17 { pt3dadd( 458.967, 553.69, 16.5587, 0.4352 ) }
    dend_17 { pt3dadd( 457.902, 554.026, 16.7534, 0.396 ) }
    dend_17 { pt3dadd( 457.038, 554.627, 17.0664, 0.4416 ) }
    dend_17 { pt3dadd( 456.559, 555.39, 17.3491, 0.4088 ) }
    dend_17 { pt3dadd( 456.296, 556.464, 17.6408, 0.4592 ) }
    dend_17 { pt3dadd( 456.257, 557.544, 17.9652, 0.471 ) }
    dend_17 { pt3dadd( 456.734, 558.51, 18.2483, 0.4322 ) }
    dend_17 { pt3dadd( 457.197, 559.418, 18.6367, 0.4256 ) }
    dend_17 { pt3dadd( 457.402, 560.314, 19.1132, 0.554 ) }
    dend_17 { pt3dadd( 456.48, 560.524, 19.5875, 0.566 ) }
    dend_17 { pt3dadd( 455.904, 560.887, 20.2828, 0.542 ) }
    dend_17 { pt3dadd( 455.884, 561.834, 20.9439, 0.4942 ) }
    dend_17 { pt3dadd( 455.873, 562.766, 21.5212, 0.4206 ) }
    dend_17 { pt3dadd( 456.076, 563.803, 21.8744, 0.4404 ) }
    dend_17 { pt3dadd( 456.677, 564.577, 22.2564, 0.4054 ) }
    dend_17 { pt3dadd( 456.914, 565.272, 22.6073, 0.4588 ) }
    dend_17 { pt3dadd( 456.637, 566.203, 22.8278, 0.4418 ) }
    dend_17 { pt3dadd( 456.505, 567.22, 23.0542, 0.5158 ) }
    dend_17 { pt3dadd( 456.654, 568.068, 23.4599, 0.5978 ) }
    dend_17 { pt3dadd( 456.112, 568.809, 23.7703, 0.5616 ) }
    dend_17 { pt3dadd( 455.94, 569.736, 24.1808, 0.492 ) }
    dend_17 { pt3dadd( 455.732, 570.49, 24.5378, 0.3748 ) }
    dend_17 { pt3dadd( 455.016, 571.071, 24.9342, 0.3296 ) }
    dend_17 { pt3dadd( 454.58, 572.104, 25.182, 0.3244 ) }
    dend_17 { pt3dadd( 454.173, 572.888, 25.2867, 0.3926 ) }
    dend_17 { pt3dadd( 454.138, 573.82, 25.318, 0.369 ) }
    dend_17 { pt3dadd( 453.71, 574.671, 25.0892, 0.3668 ) }
    dend_17 { pt3dadd( 453.714, 575.473, 24.5886, 0.3892 ) }
    dend_17 { pt3dadd( 454.659, 575.68, 23.9827, 0.5328 ) }
    dend_17 { pt3dadd( 455.15, 576.347, 23.2677, 0.5318 ) }
    dend_17 { pt3dadd( 455.805, 576.969, 22.5676, 0.4542 ) }
    dend_17 { pt3dadd( 456.441, 577.678, 21.9557, 0.4492 ) }
    dend_17 { pt3dadd( 456.815, 578.334, 21.4255, 0.4526 ) }
    dend_17 { pt3dadd( 457.257, 579.16, 21.1355, 0.3968 ) }
    dend_17 { pt3dadd( 457.356, 580.275, 20.9345, 0.3654 ) }
    dend_17 { pt3dadd( 457.142, 581.357, 20.6853, 0.416 ) }
    dend_17 { pt3dadd( 456.69, 582.26, 20.4003, 0.4384 ) }
    dend_17 { pt3dadd( 455.934, 582.959, 20.1176, 0.3698 ) }
    dend_17 { pt3dadd( 455.238, 583.44, 19.8176, 0.319 ) }
    dend_17 { pt3dadd( 454.303, 583.692, 19.6073, 0.3112 ) }
    dend_17 { pt3dadd( 453.366, 584.129, 19.4496, 0.3368 ) }
    dend_17 { pt3dadd( 452.578, 584.46, 19.1916, 0.4168 ) }
    dend_17 { pt3dadd( 451.521, 584.535, 18.8793, 0.4086 ) }
    dend_17 { pt3dadd( 450.667, 584.249, 18.7138, 0.466 ) }
    dend_17 { pt3dadd( 449.753, 584.317, 18.4815, 0.4488 ) }
    dend_17 { pt3dadd( 448.731, 584.401, 18.3122, 0.5588 ) }
    dend_17 { pt3dadd( 448.033, 585.201, 18.0779, 0.533 ) }
    dend_17 { pt3dadd( 447.422, 586.122, 17.9611, 0.455 ) }
    dend_17 { pt3dadd( 446.648, 586.759, 17.9423, 0.4578 ) }
    dend_17 { pt3dadd( 445.927, 587.33, 18.0509, 0.4338 ) }
    dend_17 { pt3dadd( 445.171, 587.483, 18.0605, 0.531 ) }
    dend_17 { pt3dadd( 444.253, 587.799, 18.1889, 0.4802 ) }
    dend_17 { pt3dadd( 443.373, 588.393, 18.3785, 0.3644 ) }
    dend_17 { pt3dadd( 443.271, 589.324, 18.7135, 0.2542 ) }
    dend_17 { pt3dadd( 442.842, 590.075, 19.88, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 491.692, 536.146, 28.6807, 0.4324 ) }
    dend_8 { pt3dadd( 490.94, 535.542, 28.1789, 0.4326 ) }
    dend_8 { pt3dadd( 490.11, 534.755, 27.7823, 0.5348 ) }
    dend_8 { pt3dadd( 489.253, 534.016, 27.5247, 0.458 ) }
    dend_8 { pt3dadd( 488.439, 533.25, 27.4024, 0.4658 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 91/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 515.029, 532.785, 31.9438, 0.8416 ) }
    dend_6 { pt3dadd( 515.201, 532.391, 33.9136, 0.4576 ) }
    dend_6 { pt3dadd( 515.737, 531.389, 34.0046, 0.385 ) }
    dend_6 { pt3dadd( 516.326, 530.419, 34.0337, 0.3488 ) }
    dend_6 { pt3dadd( 517.201, 529.729, 34.0469, 0.3598 ) }
    dend_6 { pt3dadd( 518.154, 529.128, 34.043, 0.4588 ) }
    dend_6 { pt3dadd( 518.747, 528.196, 34.02, 0.4886 ) }
    dend_6 { pt3dadd( 518.841, 527.082, 33.9741, 0.6046 ) }
    dend_6 { pt3dadd( 518.578, 525.973, 33.899, 0.7526 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( 518.169, 524.907, 33.7932, 0.8952 ) }
    dend_6 { pt3dadd( 517.907, 523.809, 33.6493, 0.8854 ) }
    dend_6 { pt3dadd( 518.06, 522.698, 33.4586, 0.8238 ) }
    dend_6 { pt3dadd( 518.458, 521.643, 33.175, 0.9222 ) }
    dend_6 { pt3dadd( 518.909, 520.711, 32.7158, 0.986 ) }
    dend_6 { pt3dadd( 519.488, 519.822, 32.165, 0.9948 ) }
    dend_6 { pt3dadd( 520.125, 518.913, 31.6022, 0.8558 ) }
    dend_6 { pt3dadd( 520.229, 517.884, 31.0766, 0.895 ) }
    dend_6 { pt3dadd( 519.871, 516.83, 30.6001, 0.899 ) }
    dend_6 { pt3dadd( 519.602, 515.739, 30.2215, 0.7828 ) }
    dend_6 { pt3dadd( 519.313, 514.636, 29.9715, 0.708 ) }
    dend_6 { pt3dadd( 518.812, 513.632, 29.8539, 0.8028 ) }
    dend_6 { pt3dadd( 518.194, 512.692, 29.827, 0.7612 ) }
    dend_6 { pt3dadd( 517.5, 511.791, 29.7746, 0.8228 ) }
    dend_6 { pt3dadd( 516.839, 510.925, 29.5694, 0.7226 ) }
    dend_6 { pt3dadd( 516.719, 509.92, 29.2006, 0.6614 ) }
    dend_6 { pt3dadd( 516.917, 508.813, 28.8022, 0.8578 ) }
    dend_6 { pt3dadd( 517.281, 507.732, 28.4178, 0.8618 ) }
    dend_6 { pt3dadd( 517.654, 506.678, 27.9977, 0.7876 ) }
    dend_6 { pt3dadd( 517.768, 505.562, 27.5875, 0.8172 ) }
    dend_6 { pt3dadd( 517.789, 504.421, 27.238, 0.7468 ) }
    dend_6 { pt3dadd( 517.867, 503.28, 26.9186, 0.7676 ) }
    dend_6 { pt3dadd( 518.201, 502.218, 26.5396, 0.7576 ) }
    dend_6 { pt3dadd( 518.776, 501.259, 26.113, 0.7466 ) }
    dend_6 { pt3dadd( 519.576, 500.508, 25.6304, 0.6894 ) }
    dend_6 { pt3dadd( 520.029, 499.559, 25.0723, 0.533 ) }
    dend_6 { pt3dadd( 520.281, 498.537, 24.4551, 0.4876 ) }
    dend_6 { pt3dadd( 521.066, 497.781, 24.0311, 0.5884 ) }
    dend_6 { pt3dadd( 521.959, 497.078, 23.7003, 0.793 ) }
    dend_6 { pt3dadd( 522.919, 496.523, 23.3862, 0.8578 ) }
    dend_6 { pt3dadd( 523.781, 495.839, 23.0929, 0.6746 ) }
    dend_6 { pt3dadd( 524.161, 494.781, 22.8925, 0.6628 ) }
    dend_6 { pt3dadd( 524.201, 493.658, 22.8687, 0.6506 ) }
    dend_6 { pt3dadd( 524.285, 492.651, 23.0726, 0.5814 ) }
    dend_6 { pt3dadd( 524.685, 491.595, 23.3069, 0.4506 ) }
    dend_6 { pt3dadd( 525.227, 490.588, 23.5016, 0.4488 ) }
    dend_6 { pt3dadd( 525.897, 489.698, 23.703, 0.4208 ) }
    dend_6 { pt3dadd( 525.865, 488.631, 23.6359, 0.4886 ) }
    dend_6 { pt3dadd( 525.94, 487.56, 23.373, 0.4906 ) }
    dend_6 { pt3dadd( 526.216, 486.453, 23.0967, 0.638 ) }
    dend_6 { pt3dadd( 526.161, 485.359, 22.8163, 0.6702 ) }
    dend_6 { pt3dadd( 525.471, 484.493, 22.4956, 0.7574 ) }
    dend_6 { pt3dadd( 524.714, 483.642, 22.2382, 0.7854 ) }
    dend_6 { pt3dadd( 524.092, 482.687, 22.086, 0.8002 ) }
    dend_6 { pt3dadd( 523.701, 481.615, 22.0064, 0.7792 ) }
    dend_6 { pt3dadd( 523.471, 480.495, 21.9704, 0.7456 ) }
    dend_6 { pt3dadd( 523.263, 479.375, 21.9729, 0.6584 ) }
    dend_6 { pt3dadd( 523.246, 478.233, 22.0347, 0.6162 ) }
    dend_6 { pt3dadd( 523.141, 477.097, 22.1374, 0.6456 ) }
    dend_6 { pt3dadd( 522.862, 475.99, 22.2634, 0.634 ) }
    dend_6 { pt3dadd( 522.821, 474.852, 22.3867, 0.4764 ) }
    dend_6 { pt3dadd( 522.883, 473.789, 22.4108, 0.3864 ) }
    dend_6 { pt3dadd( 523.237, 472.76, 22.6526, 0.3828 ) }
    dend_6 { pt3dadd( 523.255, 471.879, 22.9825, 0.4986 ) }
    dend_6 { pt3dadd( 523.095, 471.117, 23.5654, 0.5768 ) }
    dend_6 { pt3dadd( 523.695, 470.647, 24.2868, 0.6978 ) }
    dend_6 { pt3dadd( 524.378, 470.518, 25.1611, 0.581 ) }
    dend_6 { pt3dadd( 524.85, 470.468, 26.1832, 0.418 ) }
    dend_6 { pt3dadd( 525.396, 469.788, 27.0185, 0.3146 ) }
    dend_6 { pt3dadd( 525.742, 468.77, 27.4948, 0.3014 ) }
    dend_6 { pt3dadd( 525.779, 467.73, 27.7173, 0.325 ) }
    dend_6 { pt3dadd( 525.782, 466.821, 27.7662, 0.3648 ) }
    dend_6 { pt3dadd( 525.594, 465.789, 27.5073, 0.457 ) }
    dend_6 { pt3dadd( 525.492, 464.672, 27.1038, 0.5398 ) }
    dend_6 { pt3dadd( 525.654, 463.63, 26.665, 0.435 ) }
    dend_6 { pt3dadd( 525.782, 463.351, 25.8851, 0.3502 ) }
    dend_6 { pt3dadd( 525.782, 462.295, 25.2893, 0.3474 ) }
    dend_6 { pt3dadd( 525.983, 461.205, 24.8758, 0.2796 ) }
    dend_6 { pt3dadd( 526.354, 460.689, 23.8, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 69/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 515.029, 532.785, 31.9438, 0.8416 ) }
    dend_1 { pt3dadd( 516.133, 532.181, 32.0564, 0.9658 ) }
    dend_1 { pt3dadd( 517.094, 531.563, 32.0183, 0.7868 ) }
    dend_1 { pt3dadd( 518.097, 531.016, 31.8035, 0.6118 ) }
    dend_1 { pt3dadd( 519.147, 531.222, 31.3155, 0.6688 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 74/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 479.336, 513.331, 40.8789, 0.5518 ) }
    apic_20 { pt3dadd( 479.349, 513.084, 42.441, 0.2288 ) }
    apic_20 { pt3dadd( 479.479, 513.436, 45.0568, 0.2838 ) }
    apic_20 { pt3dadd( 479.922, 514.15, 46.1745, 0.2918 ) }
    apic_20 { pt3dadd( 480.671, 514.826, 47.3497, 0.3064 ) }
    apic_20 { pt3dadd( 481.6, 515.198, 48.5024, 0.3342 ) }
    apic_20 { pt3dadd( 482.6, 515.018, 49.6017, 0.382 ) }
    apic_20 { pt3dadd( 483.478, 514.406, 50.556, 0.4884 ) }
    apic_20 { pt3dadd( 484.293, 513.703, 51.3612, 0.6006 ) }
    apic_20 { pt3dadd( 485.272, 513.246, 52.0349, 0.5354 ) }
    apic_20 { pt3dadd( 486.372, 513.213, 52.5176, 0.595 ) }
    apic_20 { pt3dadd( 487.488, 513.43, 52.9071, 0.517 ) }
    apic_20 { pt3dadd( 488.554, 513.735, 53.3322, 0.6014 ) }
    apic_20 { pt3dadd( 489.538, 514.258, 53.8065, 0.5598 ) }
    apic_20 { pt3dadd( 490.447, 514.828, 54.3763, 0.5306 ) }
    apic_20 { pt3dadd( 491.316, 514.922, 55.1264, 0.472 ) }
    apic_20 { pt3dadd( 492.149, 514.331, 55.8984, 0.386 ) }
    apic_20 { pt3dadd( 492.952, 513.52, 56.5659, 0.3442 ) }
    apic_20 { pt3dadd( 493.748, 512.726, 57.1799, 0.382 ) }
    apic_20 { pt3dadd( 494.728, 512.259, 57.7732, 0.3498 ) }
    apic_20 { pt3dadd( 495.776, 512.387, 58.3741, 0.329 ) }
    apic_20 { pt3dadd( 496.889, 512.45, 58.9215, 0.3306 ) }
    apic_20 { pt3dadd( 497.987, 512.192, 59.4588, 0.3682 ) }
    apic_20 { pt3dadd( 499.038, 511.811, 60.0446, 0.4988 ) }
    apic_20 { pt3dadd( 500.141, 511.874, 60.585, 0.4446 ) }
    apic_20 { pt3dadd( 501.018, 512.4, 61.2424, 0.41 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_20 { pt3dadd( 501.776, 512.16, 62.1155, 0.4826 ) }
    apic_20 { pt3dadd( 502.724, 511.934, 63.07, 0.4122 ) }
    apic_20 { pt3dadd( 503.798, 511.731, 63.961, 0.3604 ) }
    apic_20 { pt3dadd( 504.856, 512.075, 64.745, 0.3412 ) }
    apic_20 { pt3dadd( 505.932, 512.464, 65.3481, 0.3888 ) }
    apic_20 { pt3dadd( 507.076, 512.504, 65.7924, 0.532 ) }
    apic_20 { pt3dadd( 508.197, 512.68, 66.1388, 0.5306 ) }
    apic_20 { pt3dadd( 508.947, 513.53, 66.4882, 0.451 ) }
    apic_20 { pt3dadd( 509.363, 514.553, 66.9402, 0.448 ) }
    apic_20 { pt3dadd( 510.008, 515.471, 67.4257, 0.4268 ) }
    apic_20 { pt3dadd( 511.051, 515.738, 68.0576, 0.4646 ) }
    apic_20 { pt3dadd( 512.147, 515.852, 68.7688, 0.6162 ) }
    apic_20 { pt3dadd( 513.143, 516.208, 69.5876, 0.7314 ) }
    apic_20 { pt3dadd( 514.172, 516.522, 70.4491, 0.606 ) }
    apic_20 { pt3dadd( 515.096, 516.581, 71.3642, 0.4174 ) }
    apic_20 { pt3dadd( 514.912, 517.566, 72.291, 0.313 ) }
    apic_20 { pt3dadd( 514.198, 518.428, 73.1581, 0.2998 ) }
    apic_20 { pt3dadd( 513.975, 519.289, 74.0681, 0.3162 ) }
    apic_20 { pt3dadd( 514.406, 520.117, 75.0767, 0.3774 ) }
    apic_20 { pt3dadd( 514.531, 521.051, 76.1079, 0.3412 ) }
    apic_20 { pt3dadd( 514.258, 522.108, 77.044, 0.3138 ) }
    apic_20 { pt3dadd( 514.182, 523.015, 77.9976, 0.2996 ) }
    apic_20 { pt3dadd( 514.688, 523.893, 78.925, 0.323 ) }
    apic_20 { pt3dadd( 515.453, 524.605, 79.7824, 0.354 ) }
    apic_20 { pt3dadd( 516.435, 525.131, 80.4507, 0.473 ) }
    apic_20 { pt3dadd( 517.516, 525.392, 80.8774, 0.3946 ) }
    apic_20 { pt3dadd( 518.523, 525.047, 81.2795, 0.3278 ) }
    apic_20 { pt3dadd( 519.631, 524.991, 81.6567, 0.2792 ) }
    apic_20 { pt3dadd( 520.672, 525.424, 82.0462, 0.2828 ) }
    apic_20 { pt3dadd( 521.722, 525.872, 82.4771, 0.291 ) }
    apic_20 { pt3dadd( 522.688, 526.372, 83.0505, 0.2994 ) }
    apic_20 { pt3dadd( 523.224, 527.057, 83.8499, 0.3474 ) }
    apic_20 { pt3dadd( 523.378, 527.956, 84.761, 0.2796 ) }
    apic_20 { pt3dadd( 524.182, 528.528, 86.8, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 34/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 479.336, 513.331, 40.8789, 0.5518 ) }
    apic_1 { pt3dadd( 478.136, 512.728, 41.1928, 0.4012 ) }
    apic_1 { pt3dadd( 477.186, 512.098, 41.5716, 0.3302 ) }
    apic_1 { pt3dadd( 476.182, 511.709, 42.1056, 0.3326 ) }
    apic_1 { pt3dadd( 475.219, 511.217, 42.7316, 0.3714 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 39/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 501.085, 540.756, 61.3382, 0.2874 ) }
    dend_29 { pt3dadd( 500.068, 541.316, 61.6694, 0.2994 ) }
    dend_29 { pt3dadd( 499.47, 540.558, 61.5572, 0.3152 ) }
    dend_29 { pt3dadd( 499.231, 539.763, 61.0168, 0.3754 ) }
    dend_29 { pt3dadd( 498.975, 538.875, 60.4464, 0.3376 ) }
    dend_29 { pt3dadd( 498.585, 538.436, 59.6408, 0.3068 ) }
    dend_29 { pt3dadd( 497.847, 537.607, 58.9716, 0.287 ) }
    dend_29 { pt3dadd( 497.079, 537.055, 58.2672, 0.2988 ) }
    dend_29 { pt3dadd( 495.973, 537.099, 57.6778, 0.3142 ) }
    dend_29 { pt3dadd( 495.139, 537.656, 57.146, 0.3734 ) }
    dend_29 { pt3dadd( 494.483, 538.468, 56.5799, 0.334 ) }
    dend_29 { pt3dadd( 493.945, 539.413, 56.0675, 0.3002 ) }
    dend_29 { pt3dadd( 493.408, 539.404, 55.3658, 0.2748 ) }
    dend_29 { pt3dadd( 492.891, 539.642, 54.6893, 0.275 ) }
    dend_29 { pt3dadd( 492.212, 540.421, 54.1993, 0.2754 ) }
    dend_29 { pt3dadd( 491.285, 540.742, 54.2041, 0.2762 ) }
    dend_29 { pt3dadd( 490.431, 541.315, 54.5538, 0.2778 ) }
    dend_29 { pt3dadd( 490.318, 542.027, 55.2983, 0.2804 ) }
    dend_29 { pt3dadd( 489.8, 541.913, 56.3816, 0.2856 ) }
    dend_29 { pt3dadd( 488.734, 541.987, 57.4636, 0.2944 ) }
    dend_29 { pt3dadd( 488.591, 542.509, 58.6967, 0.3136 ) }
    dend_29 { pt3dadd( 487.66, 542.795, 59.7906, 0.3362 ) }
    dend_29 { pt3dadd( 486.576, 543.057, 60.5466, 0.4406 ) }
    dend_29 { pt3dadd( 485.668, 543.594, 61.0579, 0.3304 ) }
    dend_29 { pt3dadd( 484.714, 544.086, 61.88, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 501.085, 540.756, 61.3382, 0.2874 ) }
    dend_28 { pt3dadd( 500.958, 539.986, 65.1756, 0.2288 ) }
    dend_28 { pt3dadd( 500.887, 538.879, 65.7381, 0.413 ) }
    dend_28 { pt3dadd( 500.898, 537.753, 65.9414, 0.4328 ) }
    dend_28 { pt3dadd( 501.165, 536.782, 66.2421, 0.3592 ) }
    dend_28 { pt3dadd( 501.378, 535.679, 66.5302, 0.3 ) }
    dend_28 { pt3dadd( 501.853, 534.925, 66.6579, 0.2746 ) }
    dend_28 { pt3dadd( 502.07, 533.844, 66.7946, 0.2746 ) }
    dend_28 { pt3dadd( 502.615, 532.994, 67.0992, 0.2744 ) }
    dend_28 { pt3dadd( 503.076, 532.005, 67.3492, 0.2744 ) }
    dend_28 { pt3dadd( 503.474, 530.985, 67.6304, 0.2742 ) }
    dend_28 { pt3dadd( 503.424, 529.929, 67.9846, 0.274 ) }
    dend_28 { pt3dadd( 503.246, 529.214, 68.6076, 0.2736 ) }
    dend_28 { pt3dadd( 502.699, 528.908, 69.4154, 0.2728 ) }
    dend_28 { pt3dadd( 501.875, 528.144, 70.1182, 0.2712 ) }
    dend_28 { pt3dadd( 501.499, 527.266, 70.7694, 0.2684 ) }
    dend_28 { pt3dadd( 500.685, 526.679, 71.444, 0.2626 ) }
    dend_28 { pt3dadd( 499.811, 526.216, 72.133, 0.2542 ) }
    dend_28 { pt3dadd( 498.801, 525.897, 72.7157, 0.2288 ) }
    dend_28 { pt3dadd( 497.869, 526.354, 73.92, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 84/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 500.462, 540.998, 46.5399, 0.3144 ) }
    dend_26 { pt3dadd( 499.733, 539.882, 46.662, 0.3738 ) }
    dend_26 { pt3dadd( 499.174, 538.956, 46.6544, 0.3346 ) }
    dend_26 { pt3dadd( 498.291, 538.299, 46.5469, 0.3012 ) }
    dend_26 { pt3dadd( 497.508, 537.504, 46.4722, 0.2768 ) }
    dend_26 { pt3dadd( 496.701, 536.713, 46.4388, 0.2788 ) }
    dend_26 { pt3dadd( 496.193, 535.74, 46.5144, 0.2826 ) }
    dend_26 { pt3dadd( 495.662, 534.786, 46.7244, 0.2894 ) }
    dend_26 { pt3dadd( 495.111, 533.963, 47.1184, 0.3018 ) }
    dend_26 { pt3dadd( 494.33, 533.276, 47.453, 0.3262 ) }
    dend_26 { pt3dadd( 493.868, 532.297, 47.6675, 0.3644 ) }
    dend_26 { pt3dadd( 493.595, 531.293, 47.8078, 0.4696 ) }
    dend_26 { pt3dadd( 493.121, 530.277, 47.8822, 0.4972 ) }
    dend_26 { pt3dadd( 492.724, 529.232, 47.9052, 0.6754 ) }
    dend_26 { pt3dadd( 492.286, 528.182, 47.9178, 0.6186 ) }
    dend_26 { pt3dadd( 491.647, 527.28, 47.9273, 0.5614 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 490.956, 526.471, 47.8601, 0.451 ) }
    dend_26 { pt3dadd( 490.586, 525.407, 47.8498, 0.4972 ) }
    dend_26 { pt3dadd( 489.921, 524.614, 47.9962, 0.5078 ) }
    dend_26 { pt3dadd( 489.147, 523.958, 48.242, 0.6646 ) }
    dend_26 { pt3dadd( 488.464, 523.41, 48.7634, 0.7454 ) }
    dend_26 { pt3dadd( 487.455, 522.922, 49.2789, 0.7704 ) }
    dend_26 { pt3dadd( 486.447, 522.56, 49.8313, 0.7356 ) }
    dend_26 { pt3dadd( 485.419, 522.509, 50.1858, 0.6092 ) }
    dend_26 { pt3dadd( 484.666, 522.766, 50.673, 0.6742 ) }
    dend_26 { pt3dadd( 483.973, 523.422, 51.2588, 0.715 ) }
    dend_26 { pt3dadd( 482.869, 523.61, 51.7586, 0.7196 ) }
    dend_26 { pt3dadd( 482.085, 524.042, 52.3849, 0.6158 ) }
    dend_26 { pt3dadd( 481.036, 524.285, 53.027, 0.5102 ) }
    dend_26 { pt3dadd( 480.026, 524.63, 53.6701, 0.5796 ) }
    dend_26 { pt3dadd( 478.896, 524.532, 54.1391, 0.5648 ) }
    dend_26 { pt3dadd( 477.794, 524.317, 54.544, 0.5472 ) }
    dend_26 { pt3dadd( 476.807, 523.981, 54.994, 0.4666 ) }
    dend_26 { pt3dadd( 476.078, 523.215, 55.4355, 0.5508 ) }
    dend_26 { pt3dadd( 475.725, 522.132, 55.7962, 0.4874 ) }
    dend_26 { pt3dadd( 475.003, 521.33, 56.0218, 0.5208 ) }
    dend_26 { pt3dadd( 474.218, 520.703, 56.3419, 0.5352 ) }
    dend_26 { pt3dadd( 473.323, 520.177, 56.5746, 0.5654 ) }
    dend_26 { pt3dadd( 472.399, 520.396, 56.931, 0.604 ) }
    dend_26 { pt3dadd( 471.441, 520.401, 57.4479, 0.5312 ) }
    dend_26 { pt3dadd( 470.397, 520.291, 58.0681, 0.4112 ) }
    dend_26 { pt3dadd( 469.498, 520.294, 58.7611, 0.3436 ) }
    dend_26 { pt3dadd( 468.741, 520.583, 59.4429, 0.3812 ) }
    dend_26 { pt3dadd( 467.648, 520.917, 59.9514, 0.3482 ) }
    dend_26 { pt3dadd( 466.729, 520.84, 60.4047, 0.3264 ) }
    dend_26 { pt3dadd( 465.839, 520.291, 60.6502, 0.3246 ) }
    dend_26 { pt3dadd( 465.113, 519.893, 60.6382, 0.3618 ) }
    dend_26 { pt3dadd( 464.053, 519.834, 60.6511, 0.4638 ) }
    dend_26 { pt3dadd( 463.111, 520.177, 60.6466, 0.4926 ) }
    dend_26 { pt3dadd( 462.086, 519.885, 60.6491, 0.637 ) }
    dend_26 { pt3dadd( 461.31, 519.325, 60.8779, 0.6916 ) }
    dend_26 { pt3dadd( 460.387, 518.789, 61.1489, 0.6828 ) }
    dend_26 { pt3dadd( 459.303, 518.575, 61.4729, 0.5158 ) }
    dend_26 { pt3dadd( 458.483, 518.652, 62.0133, 0.479 ) }
    dend_26 { pt3dadd( 457.777, 518.954, 62.6699, 0.4606 ) }
    dend_26 { pt3dadd( 456.645, 518.918, 63.1854, 0.4118 ) }
    dend_26 { pt3dadd( 455.611, 519.263, 63.497, 0.3932 ) }
    dend_26 { pt3dadd( 454.852, 519.948, 63.6138, 0.467 ) }
    dend_26 { pt3dadd( 453.912, 519.807, 63.5211, 0.5358 ) }
    dend_26 { pt3dadd( 452.832, 519.792, 63.3226, 0.5354 ) }
    dend_26 { pt3dadd( 451.977, 519.376, 63.0672, 0.7 ) }
    dend_26 { pt3dadd( 451.292, 518.707, 62.9723, 0.659 ) }
    dend_26 { pt3dadd( 450.388, 518.035, 62.9118, 0.6616 ) }
    dend_26 { pt3dadd( 449.54, 517.327, 62.9048, 0.514 ) }
    dend_26 { pt3dadd( 448.719, 516.659, 62.9121, 0.5232 ) }
    dend_26 { pt3dadd( 448.038, 516.745, 63.1145, 0.5396 ) }
    dend_26 { pt3dadd( 446.956, 516.974, 63.2498, 0.5734 ) }
    dend_26 { pt3dadd( 446.365, 516.474, 63.49, 0.6186 ) }
    dend_26 { pt3dadd( 445.53, 515.785, 63.6308, 0.5596 ) }
    dend_26 { pt3dadd( 445.09, 514.904, 63.5916, 0.457 ) }
    dend_26 { pt3dadd( 444.149, 514.373, 63.5894, 0.4616 ) }
    dend_26 { pt3dadd( 443.112, 514.092, 63.7056, 0.4406 ) }
    dend_26 { pt3dadd( 442.092, 513.77, 63.9461, 0.5438 ) }
    dend_26 { pt3dadd( 441.181, 513.367, 64.1514, 0.5042 ) }
    dend_26 { pt3dadd( 440.204, 513.354, 64.4238, 0.4072 ) }
    dend_26 { pt3dadd( 439.298, 512.706, 64.7038, 0.3426 ) }
    dend_26 { pt3dadd( 438.286, 512.395, 64.916, 0.3494 ) }
    dend_26 { pt3dadd( 437.352, 512.398, 64.969, 0.4334 ) }
    dend_26 { pt3dadd( 436.777, 511.824, 65.1927, 0.4714 ) }
    dend_26 { pt3dadd( 436.079, 511.334, 65.5189, 0.427 ) }
    dend_26 { pt3dadd( 435.363, 510.642, 65.7255, 0.4458 ) }
    dend_26 { pt3dadd( 434.254, 510.449, 65.933, 0.4462 ) }
    dend_26 { pt3dadd( 433.245, 510.179, 66.164, 0.3852 ) }
    dend_26 { pt3dadd( 432.414, 509.733, 66.3524, 0.3426 ) }
    dend_26 { pt3dadd( 431.672, 509.194, 66.4244, 0.3792 ) }
    dend_26 { pt3dadd( 431.137, 508.65, 66.3816, 0.3448 ) }
    dend_26 { pt3dadd( 430.438, 508.201, 66.4434, 0.3198 ) }
    dend_26 { pt3dadd( 429.596, 507.489, 66.43, 0.3136 ) }
    dend_26 { pt3dadd( 428.732, 506.874, 66.4292, 0.3362 ) }
    dend_26 { pt3dadd( 428.01, 506.342, 66.2144, 0.4406 ) }
    dend_26 { pt3dadd( 427.245, 505.758, 66.0486, 0.3304 ) }
    dend_26 { pt3dadd( 426.369, 505.534, 65.24, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 76/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 500.462, 540.998, 46.5399, 0.3144 ) }
    dend_25 { pt3dadd( 499.949, 540.275, 47.3012, 0.4576 ) }
    dend_25 { pt3dadd( 499.608, 539.213, 47.6554, 0.485 ) }
    dend_25 { pt3dadd( 499.188, 538.173, 47.8195, 0.4086 ) }
    dend_25 { pt3dadd( 498.425, 537.38, 48.0936, 0.393 ) }
    dend_25 { pt3dadd( 497.569, 536.934, 48.4336, 0.4396 ) }
    dend_25 { pt3dadd( 496.53, 537.002, 48.8631, 0.6168 ) }
    dend_25 { pt3dadd( 495.632, 537.592, 49.3382, 0.7324 ) }
    dend_25 { pt3dadd( 494.985, 538.453, 49.8728, 0.608 ) }
    dend_25 { pt3dadd( 494.78, 539.53, 50.2776, 0.4208 ) }
    dend_25 { pt3dadd( 494.78, 540.666, 50.5576, 0.3196 ) }
    dend_25 { pt3dadd( 495.021, 541.676, 50.8757, 0.3118 ) }
    dend_25 { pt3dadd( 495.537, 542.304, 51.3164, 0.3396 ) }
    dend_25 { pt3dadd( 495.76, 543.166, 51.5693, 0.4154 ) }
    dend_25 { pt3dadd( 495.926, 544.086, 51.8151, 0.4374 ) }
    dend_25 { pt3dadd( 495.692, 545.081, 51.9624, 0.3678 ) }
    dend_25 { pt3dadd( 495.581, 545.948, 51.8574, 0.3156 ) }
    dend_25 { pt3dadd( 495.426, 546.856, 51.8944, 0.3046 ) }
    dend_25 { pt3dadd( 494.836, 547.747, 51.9702, 0.325 ) }
    dend_25 { pt3dadd( 494.123, 548.549, 52.1466, 0.3936 ) }
    dend_25 { pt3dadd( 494.078, 549.472, 52.5734, 0.3708 ) }
    dend_25 { pt3dadd( 494.105, 550.439, 53.1625, 0.3706 ) }
    dend_25 { pt3dadd( 494.722, 551.385, 53.667, 0.396 ) }
    dend_25 { pt3dadd( 495.337, 552.236, 54.1122, 0.5454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_25 { pt3dadd( 495.81, 553.077, 54.5947, 0.5548 ) }
    dend_25 { pt3dadd( 496.29, 553.757, 54.8498, 0.498 ) }
    dend_25 { pt3dadd( 496.753, 554.765, 54.9629, 0.5258 ) }
    dend_25 { pt3dadd( 497.203, 555.645, 55.0511, 0.616 ) }
    dend_25 { pt3dadd( 497.638, 556.551, 55.127, 0.5964 ) }
    dend_25 { pt3dadd( 497.54, 557.581, 55.3636, 0.551 ) }
    dend_25 { pt3dadd( 496.988, 558.433, 55.6525, 0.5106 ) }
    dend_25 { pt3dadd( 496.954, 559.174, 56.0241, 0.4534 ) }
    dend_25 { pt3dadd( 496.717, 560.063, 56.3693, 0.4894 ) }
    dend_25 { pt3dadd( 496.267, 560.753, 56.4281, 0.5526 ) }
    dend_25 { pt3dadd( 495.779, 561.658, 56.5043, 0.4588 ) }
    dend_25 { pt3dadd( 495.698, 562.72, 56.4746, 0.394 ) }
    dend_25 { pt3dadd( 495.49, 563.654, 56.5757, 0.4294 ) }
    dend_25 { pt3dadd( 495.508, 564.752, 56.6642, 0.4274 ) }
    dend_25 { pt3dadd( 495.88, 565.684, 56.6796, 0.524 ) }
    dend_25 { pt3dadd( 496.427, 566.636, 56.6994, 0.4442 ) }
    dend_25 { pt3dadd( 496.673, 567.696, 56.7137, 0.4092 ) }
    dend_25 { pt3dadd( 496.534, 568.719, 56.7291, 0.4812 ) }
    dend_25 { pt3dadd( 496.22, 569.693, 56.6269, 0.4096 ) }
    dend_25 { pt3dadd( 495.971, 570.767, 56.5832, 0.3568 ) }
    dend_25 { pt3dadd( 495.886, 571.75, 56.7521, 0.3272 ) }
    dend_25 { pt3dadd( 495.354, 572.499, 57.1732, 0.399 ) }
    dend_25 { pt3dadd( 495.072, 573.469, 57.7195, 0.3758 ) }
    dend_25 { pt3dadd( 495.203, 574.565, 58.221, 0.4034 ) }
    dend_25 { pt3dadd( 495.659, 575.589, 58.6631, 0.3424 ) }
    dend_25 { pt3dadd( 496.086, 576.532, 59.1058, 0.3154 ) }
    dend_25 { pt3dadd( 496.648, 577.378, 59.4045, 0.3044 ) }
    dend_25 { pt3dadd( 497.027, 578.372, 59.4166, 0.3246 ) }
    dend_25 { pt3dadd( 497.602, 579.322, 59.3418, 0.3928 ) }
    dend_25 { pt3dadd( 498.309, 580.122, 59.2886, 0.3704 ) }
    dend_25 { pt3dadd( 498.753, 580.974, 59.3586, 0.3636 ) }
    dend_25 { pt3dadd( 499.267, 581.699, 59.2838, 0.413 ) }
    dend_25 { pt3dadd( 499.634, 581.956, 59.1794, 0.4328 ) }
    dend_25 { pt3dadd( 500.714, 582.182, 59.1184, 0.3594 ) }
    dend_25 { pt3dadd( 501.555, 582.373, 59.2984, 0.3 ) }
    dend_25 { pt3dadd( 501.733, 582.448, 59.4098, 0.2746 ) }
    dend_25 { pt3dadd( 502.178, 582.779, 59.4944, 0.2746 ) }
    dend_25 { pt3dadd( 502.398, 583.233, 59.5398, 0.2746 ) }
    dend_25 { pt3dadd( 502.96, 584.206, 59.6025, 0.2746 ) }
    dend_25 { pt3dadd( 503.246, 585.289, 59.6621, 0.2748 ) }
    dend_25 { pt3dadd( 503.248, 586.424, 59.761, 0.2748 ) }
    dend_25 { pt3dadd( 503.529, 587.439, 59.9228, 0.2752 ) }
    dend_25 { pt3dadd( 503.701, 588.46, 60.044, 0.2756 ) }
    dend_25 { pt3dadd( 503.272, 589.336, 60.2535, 0.2764 ) }
    dend_25 { pt3dadd( 502.557, 590.154, 60.4862, 0.2782 ) }
    dend_25 { pt3dadd( 502.013, 590.786, 60.9734, 0.2812 ) }
    dend_25 { pt3dadd( 501.277, 591.554, 61.3458, 0.2868 ) }
    dend_25 { pt3dadd( 500.745, 591.863, 61.9578, 0.2982 ) }
    dend_25 { pt3dadd( 499.691, 591.747, 62.5425, 0.3132 ) }
    dend_25 { pt3dadd( 498.68, 591.335, 63.0249, 0.3716 ) }
    dend_25 { pt3dadd( 497.686, 591.737, 63.4556, 0.3304 ) }
    dend_25 { pt3dadd( 497.016, 592.203, 63.9699, 0.2938 ) }
    dend_25 { pt3dadd( 497.268, 593.158, 64.456, 0.2626 ) }
    dend_25 { pt3dadd( 498.062, 593.858, 64.7458, 0.2542 ) }
    dend_25 { pt3dadd( 498.83, 594.41, 65.0686, 0.2288 ) }
    dend_25 { pt3dadd( 499.585, 594.994, 65.24, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 520.615, 493.383, 29.3112, 0.8378 ) }
    dend_22 { pt3dadd( 520.607, 492.643, 29.6414, 0.8256 ) }
    dend_22 { pt3dadd( 520.969, 491.69, 29.902, 0.7164 ) }
    dend_22 { pt3dadd( 521.298, 490.782, 30.074, 0.7054 ) }
    dend_22 { pt3dadd( 521.044, 489.76, 30.0748, 0.67 ) }
    dend_22 { pt3dadd( 520.641, 488.992, 29.9046, 0.6782 ) }
    dend_22 { pt3dadd( 519.727, 488.431, 29.783, 0.7932 ) }
    dend_22 { pt3dadd( 519.193, 487.64, 29.5005, 0.7492 ) }
    dend_22 { pt3dadd( 518.69, 486.754, 29.2538, 0.7722 ) }
    dend_22 { pt3dadd( 518.625, 485.63, 29.1586, 0.766 ) }
    dend_22 { pt3dadd( 518.974, 484.694, 29.2608, 0.7618 ) }
    dend_22 { pt3dadd( 519.55, 483.945, 29.4356, 0.7192 ) }
    dend_22 { pt3dadd( 520.545, 483.502, 29.6615, 0.5794 ) }
    dend_22 { pt3dadd( 521.261, 483.049, 29.9986, 0.6168 ) }
    dend_22 { pt3dadd( 521.488, 482.099, 30.0518, 0.619 ) }
    dend_22 { pt3dadd( 521.779, 481.091, 30.0258, 0.4908 ) }
    dend_22 { pt3dadd( 521.674, 480.062, 29.7788, 0.4378 ) }
    dend_22 { pt3dadd( 521.656, 478.94, 29.584, 0.3588 ) }
    dend_22 { pt3dadd( 521.466, 477.835, 29.3983, 0.3474 ) }
    dend_22 { pt3dadd( 521.146, 476.918, 29.0363, 0.357 ) }
    dend_22 { pt3dadd( 520.664, 476.27, 28.5404, 0.4538 ) }
    dend_22 { pt3dadd( 520.294, 475.267, 28.082, 0.4792 ) }
    dend_22 { pt3dadd( 519.781, 474.376, 27.6807, 0.5876 ) }
    dend_22 { pt3dadd( 519.319, 473.504, 27.3185, 0.7196 ) }
    dend_22 { pt3dadd( 518.661, 472.938, 27.0517, 0.8404 ) }
    dend_22 { pt3dadd( 517.901, 472.757, 26.7695, 0.7526 ) }
    dend_22 { pt3dadd( 517.198, 472.125, 26.4857, 0.7304 ) }
    dend_22 { pt3dadd( 516.638, 471.357, 26.4233, 0.6926 ) }
    dend_22 { pt3dadd( 516.079, 470.43, 26.3715, 0.6068 ) }
    dend_22 { pt3dadd( 515.557, 469.44, 26.425, 0.5234 ) }
    dend_22 { pt3dadd( 515.029, 468.479, 26.5609, 0.4586 ) }
    dend_22 { pt3dadd( 514.358, 467.588, 26.7077, 0.3602 ) }
    dend_22 { pt3dadd( 513.617, 466.888, 26.8439, 0.3016 ) }
    dend_22 { pt3dadd( 513.146, 465.901, 26.9236, 0.2774 ) }
    dend_22 { pt3dadd( 512.61, 465.005, 26.8507, 0.2798 ) }
    dend_22 { pt3dadd( 512.182, 464.0, 26.6386, 0.2844 ) }
    dend_22 { pt3dadd( 511.472, 463.121, 26.4116, 0.2924 ) }
    dend_22 { pt3dadd( 511.076, 462.353, 26.0262, 0.309 ) }
    dend_22 { pt3dadd( 510.464, 461.666, 25.6725, 0.3328 ) }
    dend_22 { pt3dadd( 510.135, 460.664, 25.4093, 0.4092 ) }
    dend_22 { pt3dadd( 509.975, 459.647, 25.2208, 0.3948 ) }
    dend_22 { pt3dadd( 510.225, 458.708, 24.9757, 0.4394 ) }
    dend_22 { pt3dadd( 511.072, 458.332, 24.6719, 0.4048 ) }
    dend_22 { pt3dadd( 511.757, 457.829, 24.4343, 0.4518 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_22 { pt3dadd( 512.833, 458.005, 24.2629, 0.4576 ) }
    dend_22 { pt3dadd( 513.898, 458.373, 24.1351, 0.4062 ) }
    dend_22 { pt3dadd( 514.988, 458.63, 24.0698, 0.3828 ) }
    dend_22 { pt3dadd( 516.112, 458.522, 24.1434, 0.4482 ) }
    dend_22 { pt3dadd( 517.148, 458.512, 24.2923, 0.499 ) }
    dend_22 { pt3dadd( 517.901, 458.337, 24.6166, 0.4776 ) }
    dend_22 { pt3dadd( 518.794, 458.206, 24.9549, 0.5422 ) }
    dend_22 { pt3dadd( 519.383, 457.515, 25.3278, 0.6116 ) }
    dend_22 { pt3dadd( 520.061, 456.975, 25.4464, 0.757 ) }
    dend_22 { pt3dadd( 520.769, 456.191, 25.6304, 0.7172 ) }
    dend_22 { pt3dadd( 521.604, 455.742, 25.9799, 0.5424 ) }
    dend_22 { pt3dadd( 522.562, 455.655, 26.2542, 0.4808 ) }
    dend_22 { pt3dadd( 523.151, 455.77, 26.8088, 0.4652 ) }
    dend_22 { pt3dadd( 524.084, 455.631, 27.4273, 0.4152 ) }
    dend_22 { pt3dadd( 524.953, 455.198, 27.9209, 0.4238 ) }
    dend_22 { pt3dadd( 525.906, 455.183, 28.3662, 0.4068 ) }
    dend_22 { pt3dadd( 526.328, 455.083, 28.9386, 0.305 ) }
    dend_22 { pt3dadd( 527.042, 455.426, 29.96, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 520.615, 493.383, 29.3112, 0.8378 ) }
    dend_21 { pt3dadd( 520.925, 492.671, 30.466, 0.4576 ) }
    dend_21 { pt3dadd( 521.661, 491.836, 30.4226, 0.7242 ) }
    dend_21 { pt3dadd( 522.633, 491.25, 30.4004, 0.741 ) }
    dend_21 { pt3dadd( 523.532, 490.569, 30.3383, 0.8622 ) }
    dend_21 { pt3dadd( 524.209, 489.657, 30.214, 0.8796 ) }
    dend_21 { pt3dadd( 524.901, 488.792, 29.9793, 0.7744 ) }
    dend_21 { pt3dadd( 525.383, 487.835, 29.6663, 0.5602 ) }
    dend_21 { pt3dadd( 525.292, 486.746, 29.3493, 0.4838 ) }
    dend_21 { pt3dadd( 524.753, 485.743, 29.1309, 0.6158 ) }
    dend_21 { pt3dadd( 524.032, 484.856, 29.0184, 0.677 ) }
    dend_21 { pt3dadd( 523.32, 483.965, 29.0144, 0.7652 ) }
    dend_21 { pt3dadd( 522.727, 482.988, 29.1158, 0.823 ) }
    dend_21 { pt3dadd( 522.087, 482.043, 29.3059, 0.7564 ) }
    dend_21 { pt3dadd( 521.393, 481.145, 29.5837, 0.5614 ) }
    dend_21 { pt3dadd( 520.967, 480.201, 30.0283, 0.548 ) }
    dend_21 { pt3dadd( 520.622, 479.378, 30.697, 0.4342 ) }
    dend_21 { pt3dadd( 520.482, 478.712, 31.4026, 0.427 ) }
    dend_21 { pt3dadd( 520.164, 477.649, 31.985, 0.3388 ) }
    dend_21 { pt3dadd( 519.693, 476.683, 32.5128, 0.3092 ) }
    dend_21 { pt3dadd( 519.74, 475.84, 33.18, 0.2914 ) }
    dend_21 { pt3dadd( 520.055, 475.196, 34.0701, 0.3068 ) }
    dend_21 { pt3dadd( 519.886, 474.229, 34.9524, 0.329 ) }
    dend_21 { pt3dadd( 519.131, 473.425, 35.7386, 0.401 ) }
    dend_21 { pt3dadd( 518.256, 472.736, 36.44, 0.3846 ) }
    dend_21 { pt3dadd( 517.523, 471.886, 37.0068, 0.3958 ) }
    dend_21 { pt3dadd( 517.331, 470.804, 37.452, 0.4438 ) }
    dend_21 { pt3dadd( 517.332, 469.681, 37.6474, 0.6292 ) }
    dend_21 { pt3dadd( 517.412, 468.548, 37.6978, 0.733 ) }
    dend_21 { pt3dadd( 517.74, 467.453, 37.7054, 0.7182 ) }
    dend_21 { pt3dadd( 517.97, 466.333, 37.6928, 0.7818 ) }
    dend_21 { pt3dadd( 518.207, 465.215, 37.6751, 0.6866 ) }
    dend_21 { pt3dadd( 518.115, 464.078, 37.6821, 0.63 ) }
    dend_21 { pt3dadd( 517.565, 463.138, 37.8036, 0.6292 ) }
    dend_21 { pt3dadd( 516.987, 462.151, 37.8812, 0.5788 ) }
    dend_21 { pt3dadd( 516.875, 461.015, 37.8767, 0.4938 ) }
    dend_21 { pt3dadd( 516.772, 459.921, 37.618, 0.5244 ) }
    dend_21 { pt3dadd( 517.159, 458.894, 37.385, 0.5834 ) }
    dend_21 { pt3dadd( 517.8, 458.159, 37.1196, 0.6808 ) }
    dend_21 { pt3dadd( 517.803, 457.135, 36.9141, 0.692 ) }
    dend_21 { pt3dadd( 517.272, 456.273, 36.7024, 0.6186 ) }
    dend_21 { pt3dadd( 516.709, 455.965, 36.734, 0.483 ) }
    dend_21 { pt3dadd( 515.944, 455.198, 36.68, 0.6864 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 488.439, 533.25, 27.4024, 0.4658 ) }
    dend_12 { pt3dadd( 488.378, 532.052, 27.1013, 0.4364 ) }
    dend_12 { pt3dadd( 488.145, 530.972, 26.7502, 0.366 ) }
    dend_12 { pt3dadd( 487.979, 529.965, 26.2613, 0.3122 ) }
    dend_12 { pt3dadd( 487.728, 528.973, 25.7244, 0.2972 ) }
    dend_12 { pt3dadd( 487.171, 528.006, 25.3527, 0.3172 ) }
    dend_12 { pt3dadd( 486.786, 527.004, 25.1842, 0.3496 ) }
    dend_12 { pt3dadd( 486.94, 525.9, 25.1346, 0.434 ) }
    dend_12 { pt3dadd( 487.534, 524.945, 25.1534, 0.4714 ) }
    dend_12 { pt3dadd( 488.392, 524.189, 25.216, 0.4328 ) }
    dend_12 { pt3dadd( 489.404, 523.658, 25.2647, 0.428 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 72/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 488.439, 533.25, 27.4024, 0.4658 ) }
    dend_9 { pt3dadd( 487.869, 532.924, 28.5051, 0.4576 ) }
    dend_9 { pt3dadd( 486.835, 532.466, 27.87, 0.387 ) }
    dend_9 { pt3dadd( 485.827, 532.444, 27.5366, 0.3534 ) }
    dend_9 { pt3dadd( 484.76, 532.659, 27.1593, 0.3632 ) }
    dend_9 { pt3dadd( 483.682, 532.964, 26.8098, 0.4898 ) }
    dend_9 { pt3dadd( 482.706, 533.493, 26.6469, 0.4256 ) }
    dend_9 { pt3dadd( 481.824, 534.205, 26.621, 0.3862 ) }
    dend_9 { pt3dadd( 480.802, 534.504, 26.7711, 0.384 ) }
    dend_9 { pt3dadd( 479.929, 533.82, 26.9746, 0.4932 ) }
    dend_9 { pt3dadd( 478.969, 533.26, 27.2146, 0.603 ) }
    dend_9 { pt3dadd( 477.932, 532.786, 27.3247, 0.5714 ) }
    dend_9 { pt3dadd( 476.911, 532.518, 27.1746, 0.51 ) }
    dend_9 { pt3dadd( 475.943, 532.003, 26.8787, 0.4088 ) }
    dend_9 { pt3dadd( 475.057, 531.305, 26.5408, 0.3888 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 87/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 519.147, 531.222, 31.3155, 0.6688 ) }
    dend_5 { pt3dadd( 519.169, 531.76, 30.6096, 0.7544 ) }
    dend_5 { pt3dadd( 519.766, 532.652, 29.7951, 0.7822 ) }
    dend_5 { pt3dadd( 520.44, 533.4, 28.8666, 0.7822 ) }
    dend_5 { pt3dadd( 521.273, 534.02, 27.902, 0.575 ) }
    dend_5 { pt3dadd( 521.966, 534.841, 26.9767, 0.51 ) }
    dend_5 { pt3dadd( 522.927, 535.431, 26.1832, 0.4424 ) }
    dend_5 { pt3dadd( 523.984, 535.734, 25.4549, 0.5172 ) }
    dend_5 { pt3dadd( 525.113, 535.827, 24.8342, 0.599 ) }
    dend_5 { pt3dadd( 526.201, 535.711, 24.2319, 0.5696 ) }
    dend_5 { pt3dadd( 527.25, 535.275, 23.6964, 0.4782 ) }
    dend_5 { pt3dadd( 528.307, 534.99, 23.1414, 0.4886 ) }
    dend_5 { pt3dadd( 529.42, 535.159, 22.606, 0.551 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 530.456, 535.564, 22.0477, 0.4556 ) }
    dend_5 { pt3dadd( 531.534, 535.646, 21.5114, 0.3886 ) }
    dend_5 { pt3dadd( 532.081, 534.873, 20.973, 0.4184 ) }
    dend_5 { pt3dadd( 531.854, 533.901, 20.3476, 0.4128 ) }
    dend_5 { pt3dadd( 532.375, 533.007, 19.6605, 0.4674 ) }
    dend_5 { pt3dadd( 533.182, 532.295, 18.965, 0.4814 ) }
    dend_5 { pt3dadd( 533.983, 531.485, 18.3627, 0.475 ) }
    dend_5 { pt3dadd( 534.659, 530.623, 17.779, 0.3916 ) }
    dend_5 { pt3dadd( 535.435, 530.268, 17.1611, 0.3542 ) }
    dend_5 { pt3dadd( 536.185, 530.957, 16.6234, 0.4018 ) }
    dend_5 { pt3dadd( 536.885, 531.836, 16.2042, 0.3812 ) }
    dend_5 { pt3dadd( 537.831, 532.435, 15.8273, 0.4134 ) }
    dend_5 { pt3dadd( 538.858, 532.858, 15.4402, 0.3608 ) }
    dend_5 { pt3dadd( 539.87, 533.302, 15.0493, 0.3508 ) }
    dend_5 { pt3dadd( 540.896, 533.786, 14.7848, 0.3642 ) }
    dend_5 { pt3dadd( 542.008, 533.638, 14.6282, 0.4622 ) }
    dend_5 { pt3dadd( 543.112, 533.665, 14.4226, 0.5184 ) }
    dend_5 { pt3dadd( 544.182, 534.047, 14.2775, 0.5454 ) }
    dend_5 { pt3dadd( 545.23, 534.505, 14.1981, 0.5124 ) }
    dend_5 { pt3dadd( 546.266, 534.993, 14.162, 0.6252 ) }
    dend_5 { pt3dadd( 547.292, 535.498, 14.1472, 0.6762 ) }
    dend_5 { pt3dadd( 548.279, 536.07, 14.1693, 0.6236 ) }
    dend_5 { pt3dadd( 549.219, 536.661, 14.2899, 0.5542 ) }
    dend_5 { pt3dadd( 550.18, 537.28, 14.3761, 0.5178 ) }
    dend_5 { pt3dadd( 551.16, 537.82, 14.3264, 0.4594 ) }
    dend_5 { pt3dadd( 552.061, 538.505, 14.1936, 0.5362 ) }
    dend_5 { pt3dadd( 552.992, 539.171, 14.0507, 0.4664 ) }
    dend_5 { pt3dadd( 553.935, 539.816, 13.9016, 0.4516 ) }
    dend_5 { pt3dadd( 554.97, 540.303, 13.7512, 0.5552 ) }
    dend_5 { pt3dadd( 556.099, 540.486, 13.6087, 0.5682 ) }
    dend_5 { pt3dadd( 557.281, 540.781, 13.3811, 0.5474 ) }
    dend_5 { pt3dadd( 558.233, 541.15, 13.0428, 0.4978 ) }
    dend_5 { pt3dadd( 559.255, 541.455, 12.8915, 0.4582 ) }
    dend_5 { pt3dadd( 560.331, 541.435, 12.7517, 0.3594 ) }
    dend_5 { pt3dadd( 561.328, 541.254, 12.4777, 0.3002 ) }
    dend_5 { pt3dadd( 562.246, 541.582, 12.2292, 0.2748 ) }
    dend_5 { pt3dadd( 563.292, 541.444, 12.0166, 0.275 ) }
    dend_5 { pt3dadd( 564.323, 541.328, 11.8249, 0.2754 ) }
    dend_5 { pt3dadd( 565.444, 541.226, 11.7378, 0.276 ) }
    dend_5 { pt3dadd( 566.401, 541.32, 11.9817, 0.2772 ) }
    dend_5 { pt3dadd( 567.039, 542.095, 12.3243, 0.2794 ) }
    dend_5 { pt3dadd( 567.68, 541.687, 12.8437, 0.2836 ) }
    dend_5 { pt3dadd( 568.772, 541.684, 13.346, 0.2912 ) }
    dend_5 { pt3dadd( 569.917, 541.684, 13.7227, 0.3066 ) }
    dend_5 { pt3dadd( 571.055, 541.763, 13.9656, 0.3286 ) }
    dend_5 { pt3dadd( 572.138, 541.912, 14.0386, 0.4002 ) }
    dend_5 { pt3dadd( 573.183, 541.684, 14.008, 0.3846 ) }
    dend_5 { pt3dadd( 573.938, 541.295, 14.0689, 0.3896 ) }
    dend_5 { pt3dadd( 575.026, 541.068, 14.0586, 0.462 ) }
    dend_5 { pt3dadd( 575.831, 540.461, 14.0056, 0.5194 ) }
    dend_5 { pt3dadd( 576.709, 540.568, 13.8435, 0.541 ) }
    dend_5 { pt3dadd( 577.617, 540.392, 13.8162, 0.5342 ) }
    dend_5 { pt3dadd( 578.682, 540.192, 13.8419, 0.5204 ) }
    dend_5 { pt3dadd( 579.482, 539.62, 13.7516, 0.5014 ) }
    dend_5 { pt3dadd( 580.164, 539.089, 13.7397, 0.4342 ) }
    dend_5 { pt3dadd( 581.104, 538.781, 13.6523, 0.465 ) }
    dend_5 { pt3dadd( 581.763, 538.072, 13.6389, 0.4532 ) }
    dend_5 { pt3dadd( 582.516, 537.794, 13.8435, 0.5368 ) }
    dend_5 { pt3dadd( 583.393, 538.019, 14.1086, 0.6374 ) }
    dend_5 { pt3dadd( 584.026, 538.214, 14.3218, 0.631 ) }
    dend_5 { pt3dadd( 584.983, 538.252, 14.5412, 0.6408 ) }
    dend_5 { pt3dadd( 585.733, 538.56, 14.6361, 0.5534 ) }
    dend_5 { pt3dadd( 586.479, 538.778, 14.6395, 0.4458 ) }
    dend_5 { pt3dadd( 587.276, 539.16, 14.6411, 0.4398 ) }
    dend_5 { pt3dadd( 588.091, 539.167, 14.8384, 0.4056 ) }
    dend_5 { pt3dadd( 589.188, 539.326, 14.9476, 0.453 ) }
    dend_5 { pt3dadd( 590.131, 539.794, 15.0226, 0.4608 ) }
    dend_5 { pt3dadd( 591.045, 540.285, 15.1391, 0.4062 ) }
    dend_5 { pt3dadd( 591.51, 540.754, 15.1664, 0.4126 ) }
    dend_5 { pt3dadd( 591.911, 541.512, 15.199, 0.3588 ) }
    dend_5 { pt3dadd( 592.523, 541.798, 15.2948, 0.3484 ) }
    dend_5 { pt3dadd( 593.091, 542.472, 15.5486, 0.3538 ) }
    dend_5 { pt3dadd( 593.906, 543.057, 15.6344, 0.4726 ) }
    dend_5 { pt3dadd( 594.975, 542.85, 15.5823, 0.3938 ) }
    dend_5 { pt3dadd( 595.956, 542.6, 15.3667, 0.3264 ) }
    dend_5 { pt3dadd( 596.948, 542.599, 15.1102, 0.2764 ) }
    dend_5 { pt3dadd( 597.622, 543.282, 14.9857, 0.2778 ) }
    dend_5 { pt3dadd( 598.104, 544.118, 15.0245, 0.2806 ) }
    dend_5 { pt3dadd( 599.121, 544.307, 15.0879, 0.2858 ) }
    dend_5 { pt3dadd( 599.982, 544.312, 15.3044, 0.2952 ) }
    dend_5 { pt3dadd( 600.607, 544.086, 15.3128, 0.314 ) }
    dend_5 { pt3dadd( 601.5, 544.43, 15.1998, 0.3422 ) }
    dend_5 { pt3dadd( 602.308, 544.515, 15.1172, 0.4262 ) }
    dend_5 { pt3dadd( 602.802, 545.022, 15.3129, 0.4286 ) }
    dend_5 { pt3dadd( 603.579, 545.733, 15.5303, 0.4904 ) }
    dend_5 { pt3dadd( 604.566, 546.008, 15.6271, 0.556 ) }
    dend_5 { pt3dadd( 605.48, 546.133, 15.8623, 0.4584 ) }
    dend_5 { pt3dadd( 606.365, 546.42, 15.9051, 0.4248 ) }
    dend_5 { pt3dadd( 607.237, 546.154, 15.8397, 0.3348 ) }
    dend_5 { pt3dadd( 607.693, 545.506, 15.6675, 0.3018 ) }
    dend_5 { pt3dadd( 608.378, 545.116, 15.6285, 0.2778 ) }
    dend_5 { pt3dadd( 609.341, 544.782, 15.3828, 0.2806 ) }
    dend_5 { pt3dadd( 610.216, 544.887, 14.9427, 0.2858 ) }
    dend_5 { pt3dadd( 611.326, 544.813, 14.5173, 0.295 ) }
    dend_5 { pt3dadd( 612.089, 544.393, 13.9773, 0.3134 ) }
    dend_5 { pt3dadd( 612.555, 543.589, 13.6371, 0.3426 ) }
    dend_5 { pt3dadd( 613.133, 542.733, 13.2041, 0.421 ) }
    dend_5 { pt3dadd( 613.696, 541.868, 12.8584, 0.4474 ) }
    dend_5 { pt3dadd( 614.147, 541.059, 12.4693, 0.3866 ) }
    dend_5 { pt3dadd( 614.336, 540.023, 12.2402, 0.351 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( 614.787, 539.071, 12.0701, 0.3662 ) }
    dend_5 { pt3dadd( 615.263, 538.173, 11.8419, 0.4596 ) }
    dend_5 { pt3dadd( 615.884, 537.279, 11.6013, 0.5444 ) }
    dend_5 { pt3dadd( 616.708, 536.939, 11.3737, 0.4434 ) }
    dend_5 { pt3dadd( 617.396, 537.545, 11.1317, 0.3662 ) }
    dend_5 { pt3dadd( 617.875, 538.241, 10.8671, 0.3756 ) }
    dend_5 { pt3dadd( 618.199, 539.248, 10.7517, 0.339 ) }
    dend_5 { pt3dadd( 618.745, 540.023, 10.5892, 0.305 ) }
    dend_5 { pt3dadd( 619.477, 540.884, 10.4416, 0.305 ) }
    dend_5 { pt3dadd( 620.162, 541.455, 10.36, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 10/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 519.147, 531.222, 31.3155, 0.6688 ) }
    dend_2 { pt3dadd( 519.818, 531.263, 30.6384, 0.4576 ) }
    dend_2 { pt3dadd( 520.878, 531.253, 29.7223, 0.807 ) }
    dend_2 { pt3dadd( 521.975, 531.135, 29.323, 0.8046 ) }
    dend_2 { pt3dadd( 522.957, 530.584, 28.9341, 0.7306 ) }
    dend_2 { pt3dadd( 523.732, 529.75, 28.6012, 0.7034 ) }
    dend_2 { pt3dadd( 524.169, 528.736, 28.2568, 0.8036 ) }
    dend_2 { pt3dadd( 524.35, 527.613, 27.9947, 0.9448 ) }
    dend_2 { pt3dadd( 524.191, 526.481, 27.8595, 0.9668 ) }
    dend_2 { pt3dadd( 524.074, 525.344, 27.8209, 1.0266 ) }
    dend_2 { pt3dadd( 523.823, 524.229, 27.8501, 1.0442 ) }
    dend_2 { pt3dadd( 524.17, 523.148, 27.9065, 1.074 ) }
    // Section: apic_19, id: apic_19, parent: apic_1 (entry count 22/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 475.219, 511.217, 42.7316, 0.3714 ) }
    apic_19 { pt3dadd( 474.805, 511.148, 43.7186, 0.2288 ) }
    apic_19 { pt3dadd( 473.748, 510.941, 43.7324, 0.4464 ) }
    apic_19 { pt3dadd( 472.662, 511.144, 43.7296, 0.4896 ) }
    apic_19 { pt3dadd( 471.566, 511.453, 43.6708, 0.4898 ) }
    apic_19 { pt3dadd( 470.5, 511.615, 43.4826, 0.4202 ) }
    apic_19 { pt3dadd( 469.779, 512.356, 43.2233, 0.4022 ) }
    apic_19 { pt3dadd( 469.372, 513.38, 42.9433, 0.5152 ) }
    apic_19 { pt3dadd( 469.317, 514.493, 42.8123, 0.4732 ) }
    apic_19 { pt3dadd( 469.572, 515.54, 42.9019, 0.4714 ) }
    apic_19 { pt3dadd( 469.498, 516.612, 43.1561, 0.556 ) }
    apic_19 { pt3dadd( 468.947, 517.586, 43.4459, 0.7442 ) }
    apic_19 { pt3dadd( 468.408, 518.592, 43.6719, 0.712 ) }
    apic_19 { pt3dadd( 467.904, 519.62, 43.8046, 0.6718 ) }
    apic_19 { pt3dadd( 467.405, 520.65, 43.8298, 0.732 ) }
    apic_19 { pt3dadd( 466.947, 521.697, 43.7567, 0.6466 ) }
    apic_19 { pt3dadd( 466.378, 522.651, 43.5442, 0.5302 ) }
    apic_19 { pt3dadd( 465.488, 523.325, 43.2625, 0.5678 ) }
    apic_19 { pt3dadd( 464.425, 523.61, 42.9279, 0.551 ) }
    apic_19 { pt3dadd( 463.379, 524.063, 42.6488, 0.4834 ) }
    apic_19 { pt3dadd( 462.447, 524.72, 42.483, 0.535 ) }
    apic_19 { pt3dadd( 461.52, 525.343, 42.4738, 0.457 ) }
    apic_19 { pt3dadd( 460.686, 526.083, 42.4234, 0.4702 ) }
    apic_19 { pt3dadd( 459.783, 526.776, 42.39, 0.4144 ) }
    apic_19 { pt3dadd( 458.866, 527.463, 42.4074, 0.4708 ) }
    apic_19 { pt3dadd( 457.971, 528.173, 42.4614, 0.4874 ) }
    apic_19 { pt3dadd( 457.148, 528.964, 42.5718, 0.4874 ) }
    apic_19 { pt3dadd( 456.921, 530.038, 42.8159, 0.4082 ) }
    apic_19 { pt3dadd( 456.966, 531.181, 43.0749, 0.416 ) }
    apic_19 { pt3dadd( 457.228, 532.294, 43.3185, 0.367 ) }
    apic_19 { pt3dadd( 457.358, 533.428, 43.5568, 0.3558 ) }
    apic_19 { pt3dadd( 457.281, 534.513, 43.878, 0.4048 ) }
    apic_19 { pt3dadd( 456.923, 535.495, 44.2733, 0.3866 ) }
    apic_19 { pt3dadd( 456.312, 536.461, 44.5508, 0.4242 ) }
    apic_19 { pt3dadd( 455.604, 537.359, 44.7129, 0.3756 ) }
    apic_19 { pt3dadd( 455.036, 538.352, 44.7588, 0.4028 ) }
    apic_19 { pt3dadd( 454.387, 539.285, 44.6709, 0.3414 ) }
    apic_19 { pt3dadd( 453.655, 540.106, 44.3948, 0.3136 ) }
    apic_19 { pt3dadd( 453.068, 541.057, 44.0756, 0.3008 ) }
    apic_19 { pt3dadd( 453.223, 542.182, 43.7293, 0.318 ) }
    apic_19 { pt3dadd( 453.469, 543.254, 43.3017, 0.3806 ) }
    apic_19 { pt3dadd( 453.271, 544.341, 42.8907, 0.3472 ) }
    apic_19 { pt3dadd( 452.441, 545.1, 42.4934, 0.3256 ) }
    apic_19 { pt3dadd( 451.398, 545.425, 42.0356, 0.3168 ) }
    apic_19 { pt3dadd( 450.347, 545.356, 41.4778, 0.3784 ) }
    apic_19 { pt3dadd( 449.266, 545.138, 40.917, 0.3432 ) }
    apic_19 { pt3dadd( 448.227, 545.209, 40.3424, 0.3172 ) }
    apic_19 { pt3dadd( 447.389, 545.859, 39.8023, 0.3074 ) }
    apic_19 { pt3dadd( 446.797, 546.827, 39.4428, 0.3304 ) }
    apic_19 { pt3dadd( 446.431, 547.885, 39.291, 0.403 ) }
    apic_19 { pt3dadd( 446.22, 548.987, 39.2694, 0.391 ) }
    apic_19 { pt3dadd( 445.839, 550.062, 39.2591, 0.3952 ) }
    apic_19 { pt3dadd( 445.225, 550.984, 39.2426, 0.5034 ) }
    apic_19 { pt3dadd( 444.314, 551.639, 39.1681, 0.4456 ) }
    apic_19 { pt3dadd( 443.375, 552.282, 39.0838, 0.448 ) }
    apic_19 { pt3dadd( 442.579, 553.092, 39.0247, 0.3786 ) }
    apic_19 { pt3dadd( 441.948, 553.999, 39.0533, 0.3786 ) }
    apic_19 { pt3dadd( 441.339, 554.864, 39.2106, 0.4416 ) }
    apic_19 { pt3dadd( 440.491, 555.573, 39.3159, 0.4806 ) }
    apic_19 { pt3dadd( 439.46, 555.948, 39.2308, 0.4732 ) }
    apic_19 { pt3dadd( 438.365, 556.209, 38.9908, 0.3882 ) }
    apic_19 { pt3dadd( 437.363, 556.588, 38.5608, 0.3484 ) }
    apic_19 { pt3dadd( 436.686, 557.247, 37.91, 0.3896 ) }
    apic_19 { pt3dadd( 436.238, 558.177, 37.1781, 0.365 ) }
    apic_19 { pt3dadd( 436.128, 559.26, 36.4988, 0.3522 ) }
    apic_19 { pt3dadd( 436.274, 560.384, 35.9828, 0.398 ) }
    apic_19 { pt3dadd( 436.753, 561.401, 35.6611, 0.374 ) }
    apic_19 { pt3dadd( 437.175, 562.445, 35.5163, 0.4 ) }
    apic_19 { pt3dadd( 437.51, 563.505, 35.3634, 0.336 ) }
    apic_19 { pt3dadd( 437.873, 564.579, 35.1988, 0.304 ) }
    apic_19 { pt3dadd( 438.201, 565.674, 35.0308, 0.2822 ) }
    apic_19 { pt3dadd( 438.21, 566.805, 34.8314, 0.2886 ) }
    apic_19 { pt3dadd( 437.803, 567.829, 34.5428, 0.3016 ) }
    apic_19 { pt3dadd( 437.223, 568.789, 34.2126, 0.3192 ) }
    apic_19 { pt3dadd( 436.781, 569.787, 33.8447, 0.383 ) }
    apic_19 { pt3dadd( 436.243, 570.724, 33.4544, 0.3516 ) }
    apic_19 { pt3dadd( 435.393, 571.459, 33.1842, 0.3338 ) }
    apic_19 { pt3dadd( 434.44, 572.018, 33.152, 0.332 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_19 { pt3dadd( 433.779, 572.923, 33.2556, 0.4076 ) }
    apic_19 { pt3dadd( 433.163, 573.888, 33.4435, 0.3918 ) }
    apic_19 { pt3dadd( 432.284, 574.606, 33.7126, 0.4336 ) }
    apic_19 { pt3dadd( 431.274, 575.048, 34.1312, 0.3942 ) }
    apic_19 { pt3dadd( 430.257, 575.546, 34.5834, 0.4322 ) }
    apic_19 { pt3dadd( 429.158, 575.589, 35.0865, 0.4208 ) }
    apic_19 { pt3dadd( 428.061, 575.326, 35.5888, 0.339 ) }
    apic_19 { pt3dadd( 426.961, 575.345, 36.115, 0.2542 ) }
    apic_19 { pt3dadd( 426.026, 575.661, 37.52, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 9/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 475.219, 511.217, 42.7316, 0.3714 ) }
    apic_2 { pt3dadd( 474.132, 510.591, 43.3037, 0.5064 ) }
    apic_2 { pt3dadd( 473.141, 510.112, 43.8743, 0.451 ) }
    apic_2 { pt3dadd( 472.279, 509.543, 44.5024, 0.4594 ) }
    apic_2 { pt3dadd( 471.77, 508.649, 45.138, 0.3934 ) }
    apic_2 { pt3dadd( 471.513, 507.559, 45.6448, 0.4368 ) }
    apic_2 { pt3dadd( 471.542, 506.422, 46.0004, 0.4002 ) }
    apic_2 { pt3dadd( 471.598, 505.281, 46.2258, 0.4432 ) }
    apic_2 { pt3dadd( 471.82, 504.194, 46.2868, 0.4418 ) }
    apic_2 { pt3dadd( 472.281, 503.162, 46.2924, 0.3758 ) }
    apic_2 { pt3dadd( 472.34, 502.05, 46.3733, 0.3318 ) }
    apic_2 { pt3dadd( 471.865, 501.065, 46.5984, 0.3282 ) }
    apic_2 { pt3dadd( 471.02, 500.318, 46.8969, 0.4006 ) }
    apic_2 { pt3dadd( 470.013, 499.84, 47.3077, 0.379 ) }
    apic_2 { pt3dadd( 468.969, 499.688, 47.8727, 0.4094 ) }
    apic_2 { pt3dadd( 467.867, 499.545, 48.335, 0.3532 ) }
    apic_2 { pt3dadd( 466.761, 499.283, 48.7953, 0.3368 ) }
    apic_2 { pt3dadd( 465.766, 499.242, 49.4273, 0.3374 ) }
    apic_2 { pt3dadd( 464.748, 499.235, 50.1827, 0.4176 ) }
    apic_2 { pt3dadd( 463.615, 499.194, 50.8455, 0.4116 ) }
    apic_2 { pt3dadd( 462.634, 498.985, 51.6163, 0.4644 ) }
    apic_2 { pt3dadd( 461.662, 498.549, 52.4269, 0.4818 ) }
    apic_2 { pt3dadd( 460.589, 498.177, 53.1252, 0.4458 ) }
    apic_2 { pt3dadd( 459.578, 497.646, 53.7104, 0.4816 ) }
    apic_2 { pt3dadd( 458.814, 496.915, 54.3407, 0.5088 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 34/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 489.404, 523.658, 25.2647, 0.428 ) }
    dend_14 { pt3dadd( 489.794, 523.127, 25.3214, 0.5524 ) }
    dend_14 { pt3dadd( 490.31, 522.122, 25.41, 0.593 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 489.404, 523.658, 25.2647, 0.428 ) }
    dend_13 { pt3dadd( 490.762, 523.502, 24.873, 0.2288 ) }
    dend_13 { pt3dadd( 491.899, 523.485, 25.56, 0.5708 ) }
    dend_13 { pt3dadd( 493.035, 523.422, 25.8221, 0.5968 ) }
    dend_13 { pt3dadd( 493.987, 523.163, 26.2602, 0.6008 ) }
    dend_13 { pt3dadd( 495.063, 523.247, 26.7173, 0.5938 ) }
    dend_13 { pt3dadd( 496.188, 523.395, 27.1104, 0.6512 ) }
    dend_13 { pt3dadd( 497.254, 523.133, 27.4634, 0.6442 ) }
    dend_13 { pt3dadd( 498.319, 522.729, 27.6712, 0.4968 ) }
    dend_13 { pt3dadd( 499.335, 522.207, 27.7153, 0.4188 ) }
    dend_13 { pt3dadd( 500.418, 521.849, 27.6006, 0.4686 ) }
    dend_13 { pt3dadd( 501.344, 521.25, 27.3175, 0.5328 ) }
    dend_13 { pt3dadd( 501.785, 520.384, 26.7951, 0.56 ) }
    dend_13 { pt3dadd( 502.133, 519.429, 26.0939, 0.5986 ) }
    dend_13 { pt3dadd( 502.47, 518.368, 25.4024, 0.499 ) }
    dend_13 { pt3dadd( 502.414, 517.254, 24.7696, 0.459 ) }
    dend_13 { pt3dadd( 502.304, 516.153, 24.1206, 0.5982 ) }
    dend_13 { pt3dadd( 502.602, 515.116, 23.4553, 0.505 ) }
    dend_13 { pt3dadd( 503.37, 514.497, 22.7254, 0.4376 ) }
    dend_13 { pt3dadd( 504.409, 514.286, 21.9805, 0.4864 ) }
    dend_13 { pt3dadd( 505.46, 513.997, 21.2412, 0.4192 ) }
    dend_13 { pt3dadd( 506.49, 513.627, 20.5315, 0.3746 ) }
    dend_13 { pt3dadd( 507.551, 513.236, 19.9399, 0.3616 ) }
    dend_13 { pt3dadd( 508.634, 513.412, 19.449, 0.457 ) }
    dend_13 { pt3dadd( 509.715, 513.698, 19.0108, 0.5104 ) }
    dend_13 { pt3dadd( 510.822, 513.531, 18.6685, 0.5232 ) }
    dend_13 { pt3dadd( 511.87, 513.083, 18.4134, 0.5066 ) }
    dend_13 { pt3dadd( 512.883, 512.606, 18.261, 0.4434 ) }
    dend_13 { pt3dadd( 513.643, 511.786, 18.0398, 0.4834 ) }
    dend_13 { pt3dadd( 514.238, 510.848, 17.6907, 0.4806 ) }
    dend_13 { pt3dadd( 515.084, 510.234, 17.175, 0.62 ) }
    dend_13 { pt3dadd( 515.974, 509.844, 16.4752, 0.6358 ) }
    dend_13 { pt3dadd( 516.73, 509.046, 15.7712, 0.699 ) }
    dend_13 { pt3dadd( 517.609, 508.341, 15.1196, 0.6504 ) }
    dend_13 { pt3dadd( 518.511, 507.66, 14.5495, 0.678 ) }
    dend_13 { pt3dadd( 519.362, 506.93, 14.1911, 0.617 ) }
    dend_13 { pt3dadd( 520.737, 506.449, 13.8146, 0.5902 ) }
    dend_13 { pt3dadd( 521.688, 506.948, 13.5843, 0.5792 ) }
    dend_13 { pt3dadd( 522.313, 507.364, 13.1302, 0.5992 ) }
    dend_13 { pt3dadd( 521.68, 507.931, 12.5219, 0.6688 ) }
    dend_13 { pt3dadd( 522.326, 508.555, 11.9907, 0.6406 ) }
    dend_13 { pt3dadd( 523.357, 508.532, 11.6626, 0.6656 ) }
    dend_13 { pt3dadd( 523.595, 508.0, 11.1991, 0.565 ) }
    dend_13 { pt3dadd( 524.334, 507.522, 10.9852, 0.6356 ) }
    dend_13 { pt3dadd( 525.245, 507.177, 10.8088, 0.661 ) }
    dend_13 { pt3dadd( 525.897, 507.007, 10.9587, 0.5338 ) }
    dend_13 { pt3dadd( 526.583, 506.449, 11.76, 0.6864 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 475.057, 531.305, 26.5408, 0.3888 ) }
    dend_11 { pt3dadd( 473.797, 530.606, 26.3899, 0.4542 ) }
    dend_11 { pt3dadd( 472.958, 530.684, 26.1306, 0.5348 ) }
    dend_11 { pt3dadd( 472.141, 530.715, 25.8661, 0.4244 ) }
    dend_11 { pt3dadd( 471.182, 530.877, 25.877, 0.3362 ) }
    dend_11 { pt3dadd( 470.091, 531.045, 25.9424, 0.2944 ) }
    dend_11 { pt3dadd( 469.559, 530.702, 26.2784, 0.3126 ) }
    dend_11 { pt3dadd( 468.491, 530.871, 26.5513, 0.3396 ) }
    dend_11 { pt3dadd( 467.544, 531.259, 26.8222, 0.4216 ) }
    dend_11 { pt3dadd( 466.622, 531.507, 26.9684, 0.4188 ) }
    dend_11 { pt3dadd( 465.563, 531.839, 27.0637, 0.4786 ) }
    dend_11 { pt3dadd( 465.079, 532.522, 26.9025, 0.5032 ) }
    dend_11 { pt3dadd( 464.693, 533.311, 26.8293, 0.5102 ) }
    dend_11 { pt3dadd( 464.298, 534.141, 26.9294, 0.4812 ) }
    dend_11 { pt3dadd( 464.231, 534.997, 26.8463, 0.4028 ) }
    dend_11 { pt3dadd( 463.897, 535.929, 26.6787, 0.3764 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_11 { pt3dadd( 463.348, 536.451, 26.3594, 0.4366 ) }
    dend_11 { pt3dadd( 462.701, 536.547, 25.8179, 0.4772 ) }
    dend_11 { pt3dadd( 462.072, 536.948, 25.3639, 0.4376 ) }
    dend_11 { pt3dadd( 461.022, 536.941, 24.9733, 0.4654 ) }
    dend_11 { pt3dadd( 460.033, 536.718, 24.717, 0.4836 ) }
    dend_11 { pt3dadd( 459.22, 536.967, 24.3932, 0.4494 ) }
    dend_11 { pt3dadd( 458.647, 537.881, 24.139, 0.4882 ) }
    dend_11 { pt3dadd( 457.841, 538.247, 24.128, 0.5206 ) }
    dend_11 { pt3dadd( 456.779, 538.624, 24.1345, 0.5434 ) }
    dend_11 { pt3dadd( 455.862, 538.905, 24.0422, 0.5384 ) }
    dend_11 { pt3dadd( 455.378, 539.618, 23.8423, 0.5294 ) }
    dend_11 { pt3dadd( 454.671, 540.384, 23.7198, 0.5112 ) }
    dend_11 { pt3dadd( 453.758, 540.333, 23.5177, 0.4844 ) }
    dend_11 { pt3dadd( 453.102, 540.426, 23.2072, 0.4026 ) }
    dend_11 { pt3dadd( 452.516, 540.4, 23.2048, 0.4058 ) }
    dend_11 { pt3dadd( 451.429, 540.32, 23.1345, 0.3466 ) }
    dend_11 { pt3dadd( 450.511, 540.122, 22.9978, 0.3248 ) }
    dend_11 { pt3dadd( 449.685, 539.979, 22.5628, 0.3152 ) }
    dend_11 { pt3dadd( 449.543, 540.197, 21.7293, 0.3756 ) }
    dend_11 { pt3dadd( 448.482, 540.257, 20.9005, 0.3378 ) }
    dend_11 { pt3dadd( 447.408, 540.618, 20.1818, 0.3074 ) }
    dend_11 { pt3dadd( 446.607, 540.654, 19.5012, 0.2884 ) }
    dend_11 { pt3dadd( 446.557, 540.73, 18.7261, 0.3 ) }
    dend_11 { pt3dadd( 446.465, 541.461, 18.4563, 0.3228 ) }
    dend_11 { pt3dadd( 446.046, 541.986, 18.3563, 0.3586 ) }
    dend_11 { pt3dadd( 445.352, 541.77, 18.2246, 0.4576 ) }
    dend_11 { pt3dadd( 444.339, 541.482, 18.1524, 0.4812 ) }
    dend_11 { pt3dadd( 443.525, 541.896, 18.028, 0.6146 ) }
    dend_11 { pt3dadd( 442.845, 542.378, 18.0768, 0.657 ) }
    dend_11 { pt3dadd( 442.275, 542.83, 17.8386, 0.5868 ) }
    dend_11 { pt3dadd( 442.133, 543.659, 17.5078, 0.4916 ) }
    dend_11 { pt3dadd( 441.93, 544.219, 17.5173, 0.3742 ) }
    dend_11 { pt3dadd( 441.916, 545.235, 17.5387, 0.3274 ) }
    dend_11 { pt3dadd( 441.497, 546.153, 17.492, 0.3274 ) }
    dend_11 { pt3dadd( 441.016, 547.005, 17.5459, 0.3622 ) }
    dend_11 { pt3dadd( 440.227, 547.51, 17.4113, 0.4878 ) }
    dend_11 { pt3dadd( 439.751, 548.153, 17.2301, 0.423 ) }
    dend_11 { pt3dadd( 439.469, 548.753, 17.0412, 0.3754 ) }
    dend_11 { pt3dadd( 439.068, 548.875, 16.7115, 0.393 ) }
    dend_11 { pt3dadd( 438.613, 549.342, 16.4271, 0.3696 ) }
    dend_11 { pt3dadd( 438.534, 550.168, 16.1009, 0.3682 ) }
    dend_11 { pt3dadd( 437.977, 550.512, 15.5179, 0.3916 ) }
    dend_11 { pt3dadd( 437.343, 551.065, 14.914, 0.5374 ) }
    dend_11 { pt3dadd( 436.577, 550.607, 14.2474, 0.5402 ) }
    dend_11 { pt3dadd( 435.839, 550.836, 13.6118, 0.4696 ) }
    dend_11 { pt3dadd( 435.215, 551.305, 13.2561, 0.4786 ) }
    dend_11 { pt3dadd( 434.396, 551.932, 12.9371, 0.5032 ) }
    dend_11 { pt3dadd( 434.109, 552.782, 12.7833, 0.5102 ) }
    dend_11 { pt3dadd( 433.384, 553.372, 12.7744, 0.4812 ) }
    dend_11 { pt3dadd( 433.004, 554.355, 12.8279, 0.4028 ) }
    dend_11 { pt3dadd( 433.22, 554.957, 13.0374, 0.3764 ) }
    dend_11 { pt3dadd( 432.757, 555.764, 13.0302, 0.4366 ) }
    dend_11 { pt3dadd( 431.974, 556.503, 12.9929, 0.4766 ) }
    dend_11 { pt3dadd( 431.123, 556.884, 13.0556, 0.441 ) }
    dend_11 { pt3dadd( 430.059, 557.014, 12.9864, 0.4492 ) }
    dend_11 { pt3dadd( 429.691, 556.335, 12.9699, 0.5628 ) }
    dend_11 { pt3dadd( 428.858, 555.823, 12.8616, 0.752 ) }
    dend_11 { pt3dadd( 428.184, 555.382, 12.9936, 0.7502 ) }
    dend_11 { pt3dadd( 427.266, 555.069, 13.0425, 0.6276 ) }
    dend_11 { pt3dadd( 426.255, 554.743, 13.1515, 0.5214 ) }
    dend_11 { pt3dadd( 425.335, 554.219, 13.3296, 0.4238 ) }
    dend_11 { pt3dadd( 424.435, 554.039, 13.5769, 0.4464 ) }
    dend_11 { pt3dadd( 423.624, 553.623, 13.7523, 0.4152 ) }
    dend_11 { pt3dadd( 423.001, 553.238, 14.0471, 0.483 ) }
    dend_11 { pt3dadd( 422.022, 552.895, 14.56, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 65/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 475.057, 531.305, 26.5408, 0.3888 ) }
    dend_10 { pt3dadd( 473.761, 530.662, 25.7578, 0.2288 ) }
    dend_10 { pt3dadd( 472.768, 530.177, 26.2629, 0.3334 ) }
    dend_10 { pt3dadd( 471.97, 529.372, 26.4712, 0.41 ) }
    dend_10 { pt3dadd( 471.231, 528.562, 26.7572, 0.3976 ) }
    dend_10 { pt3dadd( 470.245, 528.355, 27.0163, 0.4384 ) }
    dend_10 { pt3dadd( 469.113, 528.482, 27.1723, 0.4328 ) }
    dend_10 { pt3dadd( 468.003, 528.461, 27.2017, 0.3594 ) }
    dend_10 { pt3dadd( 466.917, 528.189, 27.2468, 0.3002 ) }
    dend_10 { pt3dadd( 465.845, 527.852, 27.368, 0.2752 ) }
    dend_10 { pt3dadd( 464.727, 527.649, 27.4989, 0.2756 ) }
    dend_10 { pt3dadd( 463.606, 527.614, 27.6838, 0.2764 ) }
    dend_10 { pt3dadd( 462.483, 527.616, 27.9057, 0.278 ) }
    dend_10 { pt3dadd( 461.352, 527.631, 28.1182, 0.281 ) }
    dend_10 { pt3dadd( 460.223, 527.74, 28.2069, 0.2866 ) }
    dend_10 { pt3dadd( 459.184, 528.008, 28.091, 0.2968 ) }
    dend_10 { pt3dadd( 458.07, 528.053, 27.8993, 0.3156 ) }
    dend_10 { pt3dadd( 457.087, 527.548, 27.67, 0.3524 ) }
    dend_10 { pt3dadd( 456.21, 526.831, 27.4754, 0.4104 ) }
    dend_10 { pt3dadd( 455.509, 525.953, 27.4596, 0.567 ) }
    dend_10 { pt3dadd( 454.83, 525.046, 27.6114, 0.6196 ) }
    dend_10 { pt3dadd( 454.176, 524.125, 27.7947, 0.4986 ) }
    dend_10 { pt3dadd( 453.335, 523.43, 28.147, 0.4208 ) }
    dend_10 { pt3dadd( 452.457, 523.046, 28.73, 0.479 ) }
    dend_10 { pt3dadd( 451.632, 522.461, 29.4168, 0.5192 ) }
    dend_10 { pt3dadd( 450.818, 521.67, 30.0073, 0.6934 ) }
    dend_10 { pt3dadd( 449.925, 520.959, 30.4592, 0.7632 ) }
    dend_10 { pt3dadd( 449.236, 520.045, 30.7994, 0.976 ) }
    dend_10 { pt3dadd( 448.481, 519.186, 31.0369, 0.9662 ) }
    dend_10 { pt3dadd( 447.665, 518.385, 31.2094, 0.8526 ) }
    dend_10 { pt3dadd( 446.826, 517.612, 31.3782, 0.6468 ) }
    dend_10 { pt3dadd( 445.9, 516.983, 31.6378, 0.6982 ) }
    dend_10 { pt3dadd( 444.899, 516.481, 31.9718, 0.7528 ) }
    dend_10 { pt3dadd( 443.896, 515.99, 32.3551, 0.8228 ) }
    dend_10 { pt3dadd( 442.844, 515.588, 32.7043, 0.646 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 441.724, 515.641, 32.9602, 0.6632 ) }
    dend_10 { pt3dadd( 440.677, 515.63, 33.308, 0.6212 ) }
    dend_10 { pt3dadd( 439.866, 515.08, 33.6014, 0.6722 ) }
    dend_10 { pt3dadd( 439.299, 514.091, 33.7602, 0.6 ) }
    dend_10 { pt3dadd( 438.61, 513.188, 33.8316, 0.589 ) }
    dend_10 { pt3dadd( 437.842, 512.339, 33.833, 0.4306 ) }
    dend_10 { pt3dadd( 437.128, 511.449, 33.7641, 0.3474 ) }
    dend_10 { pt3dadd( 436.335, 510.663, 33.5832, 0.3166 ) }
    dend_10 { pt3dadd( 435.567, 509.85, 33.343, 0.3468 ) }
    dend_10 { pt3dadd( 435.218, 508.809, 33.1078, 0.436 ) }
    dend_10 { pt3dadd( 435.136, 507.689, 32.8555, 0.4404 ) }
    dend_10 { pt3dadd( 434.805, 506.634, 32.6799, 0.5434 ) }
    dend_10 { pt3dadd( 433.974, 505.939, 32.5506, 0.5034 ) }
    dend_10 { pt3dadd( 432.886, 505.669, 32.5069, 0.4058 ) }
    dend_10 { pt3dadd( 431.774, 505.488, 32.5332, 0.3398 ) }
    dend_10 { pt3dadd( 430.771, 505.168, 32.5685, 0.3442 ) }
    dend_10 { pt3dadd( 429.787, 504.73, 32.8737, 0.4236 ) }
    dend_10 { pt3dadd( 428.966, 504.123, 33.5636, 0.4536 ) }
    dend_10 { pt3dadd( 428.444, 503.433, 34.6195, 0.3926 ) }
    dend_10 { pt3dadd( 428.267, 502.956, 36.0097, 0.387 ) }
    dend_10 { pt3dadd( 427.823, 502.586, 37.5794, 0.3136 ) }
    dend_10 { pt3dadd( 426.885, 502.265, 39.0457, 0.2542 ) }
    dend_10 { pt3dadd( 426.483, 502.902, 42.0, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 23/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 524.17, 523.148, 27.9065, 1.074 ) }
    dend_4 { pt3dadd( 525.565, 522.575, 28.614, 0.7484 ) }
    dend_4 { pt3dadd( 526.549, 521.996, 28.947, 0.713 ) }
    dend_4 { pt3dadd( 527.576, 521.504, 29.1973, 0.7074 ) }
    dend_4 { pt3dadd( 528.623, 521.086, 29.3793, 0.6344 ) }
    dend_4 { pt3dadd( 529.664, 520.755, 29.3661, 0.5742 ) }
    dend_4 { pt3dadd( 530.633, 520.486, 29.092, 0.5546 ) }
    dend_4 { pt3dadd( 531.696, 520.305, 28.744, 0.5292 ) }
    dend_4 { pt3dadd( 532.836, 520.29, 28.4936, 0.6576 ) }
    dend_4 { pt3dadd( 533.98, 520.282, 28.3791, 0.7308 ) }
    dend_4 { pt3dadd( 535.091, 520.235, 28.4466, 0.7512 ) }
    dend_4 { pt3dadd( 536.107, 520.009, 28.7451, 0.663 ) }
    dend_4 { pt3dadd( 537.049, 519.509, 29.1749, 0.653 ) }
    dend_4 { pt3dadd( 537.99, 518.928, 29.6044, 0.577 ) }
    dend_4 { pt3dadd( 539.009, 518.476, 29.9312, 0.4844 ) }
    dend_4 { pt3dadd( 540.052, 518.144, 30.0238, 0.5368 ) }
    dend_4 { pt3dadd( 540.935, 517.621, 29.8329, 0.4616 ) }
    dend_4 { pt3dadd( 541.667, 516.817, 29.5165, 0.4726 ) }
    dend_4 { pt3dadd( 542.516, 516.073, 29.2281, 0.4486 ) }
    dend_4 { pt3dadd( 543.48, 515.461, 29.0245, 0.39 ) }
    dend_4 { pt3dadd( 544.391, 514.774, 28.9234, 0.3516 ) }
    dend_4 { pt3dadd( 545.302, 514.084, 28.9279, 0.3956 ) }
    dend_4 { pt3dadd( 546.1, 513.279, 29.022, 0.3758 ) }
    dend_4 { pt3dadd( 546.906, 512.514, 29.2225, 0.3736 ) }
    dend_4 { pt3dadd( 547.699, 511.776, 29.5246, 0.431 ) }
    dend_4 { pt3dadd( 547.959, 510.766, 29.8564, 0.4674 ) }
    dend_4 { pt3dadd( 547.969, 509.638, 30.0689, 0.4182 ) }
    dend_4 { pt3dadd( 547.93, 508.543, 30.0782, 0.4356 ) }
    dend_4 { pt3dadd( 547.732, 507.436, 29.9986, 0.3968 ) }
    dend_4 { pt3dadd( 547.732, 506.301, 29.8925, 0.442 ) }
    dend_4 { pt3dadd( 547.38, 505.24, 29.7814, 0.4156 ) }
    dend_4 { pt3dadd( 546.795, 504.258, 29.6912, 0.443 ) }
    dend_4 { pt3dadd( 546.24, 503.259, 29.6402, 0.5814 ) }
    dend_4 { pt3dadd( 545.591, 502.321, 29.6136, 0.6414 ) }
    dend_4 { pt3dadd( 544.956, 501.403, 29.542, 0.563 ) }
    dend_4 { pt3dadd( 544.208, 500.548, 29.4935, 0.4232 ) }
    dend_4 { pt3dadd( 543.367, 499.795, 29.5635, 0.366 ) }
    dend_4 { pt3dadd( 542.578, 499.025, 29.7892, 0.4234 ) }
    dend_4 { pt3dadd( 541.721, 498.314, 30.147, 0.4222 ) }
    dend_4 { pt3dadd( 541.068, 497.418, 30.4452, 0.4858 ) }
    dend_4 { pt3dadd( 540.685, 496.369, 30.6726, 0.5112 ) }
    dend_4 { pt3dadd( 540.469, 495.309, 31.0218, 0.5508 ) }
    dend_4 { pt3dadd( 541.227, 494.838, 31.5518, 0.4322 ) }
    dend_4 { pt3dadd( 542.027, 494.208, 33.04, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 67/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 524.17, 523.148, 27.9065, 1.074 ) }
    dend_3 { pt3dadd( 524.665, 522.644, 26.5969, 0.6864 ) }
    dend_3 { pt3dadd( 525.38, 521.766, 26.45, 0.7522 ) }
    dend_3 { pt3dadd( 525.943, 520.774, 26.3995, 0.6636 ) }
    dend_3 { pt3dadd( 526.318, 519.717, 26.4126, 0.6602 ) }
    dend_3 { pt3dadd( 527.029, 518.875, 26.3247, 0.5592 ) }
    dend_3 { pt3dadd( 527.922, 518.169, 26.1981, 0.6028 ) }
    dend_3 { pt3dadd( 528.953, 517.681, 26.0501, 0.7076 ) }
    dend_3 { pt3dadd( 529.902, 517.046, 25.8725, 0.786 ) }
    dend_3 { pt3dadd( 530.73, 516.259, 25.648, 0.8072 ) }
    dend_3 { pt3dadd( 530.951, 515.161, 25.3599, 0.7634 ) }
    dend_3 { pt3dadd( 530.693, 514.091, 24.9444, 0.8566 ) }
    dend_3 { pt3dadd( 530.597, 513.082, 24.3328, 0.8692 ) }
    dend_3 { pt3dadd( 530.617, 511.98, 23.6608, 0.755 ) }
    dend_3 { pt3dadd( 530.748, 510.985, 22.8769, 0.5246 ) }
    dend_3 { pt3dadd( 531.49, 510.155, 22.1638, 0.417 ) }
    dend_3 { pt3dadd( 532.492, 509.686, 21.5122, 0.4954 ) }
    dend_3 { pt3dadd( 533.56, 509.443, 20.9327, 0.437 ) }
    dend_3 { pt3dadd( 534.613, 509.8, 20.4497, 0.4022 ) }
    dend_3 { pt3dadd( 535.667, 510.21, 20.0884, 0.4374 ) }
    dend_3 { pt3dadd( 536.759, 510.436, 19.9638, 0.4778 ) }
    dend_3 { pt3dadd( 537.789, 510.834, 20.0176, 0.4436 ) }
    dend_3 { pt3dadd( 538.794, 511.374, 20.1144, 0.4538 ) }
    dend_3 { pt3dadd( 539.854, 511.768, 20.1717, 0.5712 ) }
    dend_3 { pt3dadd( 540.969, 511.649, 20.1262, 0.7688 ) }
    dend_3 { pt3dadd( 542.089, 511.754, 20.1059, 0.7748 ) }
    dend_3 { pt3dadd( 543.16, 512.143, 19.9937, 0.705 ) }
    dend_3 { pt3dadd( 544.198, 512.542, 19.759, 0.51 ) }
    dend_3 { pt3dadd( 545.261, 512.959, 19.5271, 0.468 ) }
    dend_3 { pt3dadd( 546.357, 513.266, 19.3052, 0.4408 ) }
    dend_3 { pt3dadd( 547.35, 513.822, 19.0686, 0.3738 ) }
    dend_3 { pt3dadd( 548.419, 514.063, 18.7482, 0.328 ) }
    dend_3 { pt3dadd( 549.43, 513.601, 18.3684, 0.3214 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_3 { pt3dadd( 550.201, 512.772, 17.9959, 0.3868 ) }
    dend_3 { pt3dadd( 550.635, 511.72, 17.5928, 0.3598 ) }
    dend_3 { pt3dadd( 550.802, 510.607, 17.1093, 0.3428 ) }
    dend_3 { pt3dadd( 550.712, 509.633, 16.4426, 0.3794 ) }
    dend_3 { pt3dadd( 550.094, 508.835, 15.6345, 0.345 ) }
    dend_3 { pt3dadd( 549.875, 508.031, 14.6799, 0.3204 ) }
    dend_3 { pt3dadd( 550.256, 507.888, 13.5727, 0.3136 ) }
    dend_3 { pt3dadd( 551.185, 508.438, 12.6073, 0.3418 ) }
    dend_3 { pt3dadd( 552.219, 508.732, 11.9338, 0.4238 ) }
    dend_3 { pt3dadd( 553.175, 508.304, 11.4996, 0.4322 ) }
    dend_3 { pt3dadd( 553.909, 507.469, 11.1101, 0.4576 ) }
    // Section: apic_18, id: apic_18, parent: apic_2 (entry count 11/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 458.814, 496.915, 54.3407, 0.5088 ) }
    apic_18 { pt3dadd( 457.865, 496.678, 55.3972, 0.2288 ) }
    apic_18 { pt3dadd( 456.843, 496.201, 54.5482, 0.2954 ) }
    apic_18 { pt3dadd( 456.165, 495.502, 54.0994, 0.3142 ) }
    apic_18 { pt3dadd( 455.138, 495.138, 53.601, 0.3438 ) }
    apic_18 { pt3dadd( 454.034, 495.1, 53.1079, 0.4232 ) }
    apic_18 { pt3dadd( 452.9, 494.987, 52.7335, 0.4516 ) }
    apic_18 { pt3dadd( 451.811, 494.636, 52.4941, 0.3952 ) }
    apic_18 { pt3dadd( 450.715, 494.313, 52.3849, 0.3612 ) }
    apic_18 { pt3dadd( 449.594, 494.095, 52.3914, 0.4146 ) }
    apic_18 { pt3dadd( 448.507, 493.742, 52.4734, 0.4046 ) }
    apic_18 { pt3dadd( 447.442, 493.462, 52.6193, 0.4588 ) }
    apic_18 { pt3dadd( 446.511, 493.992, 52.8514, 0.4342 ) }
    apic_18 { pt3dadd( 446.072, 495.009, 53.1969, 0.5382 ) }
    apic_18 { pt3dadd( 445.535, 496.017, 53.5587, 0.4626 ) }
    apic_18 { pt3dadd( 444.841, 496.899, 53.9554, 0.4818 ) }
    apic_18 { pt3dadd( 443.878, 497.434, 54.4387, 0.4296 ) }
    apic_18 { pt3dadd( 442.824, 497.747, 55.0001, 0.5298 ) }
    apic_18 { pt3dadd( 441.93, 498.314, 55.6511, 0.4474 ) }
    apic_18 { pt3dadd( 441.128, 498.643, 56.3562, 0.4512 ) }
    apic_18 { pt3dadd( 440.112, 498.892, 57.0581, 0.3844 ) }
    apic_18 { pt3dadd( 439.04, 499.095, 57.7494, 0.3906 ) }
    apic_18 { pt3dadd( 437.975, 498.797, 58.3654, 0.4576 ) }
    apic_18 { pt3dadd( 436.902, 498.413, 58.865, 0.541 ) }
    apic_18 { pt3dadd( 435.87, 498.006, 59.3334, 0.436 ) }
    apic_18 { pt3dadd( 434.885, 497.443, 59.726, 0.3586 ) }
    apic_18 { pt3dadd( 433.823, 497.029, 60.0589, 0.3306 ) }
    apic_18 { pt3dadd( 432.689, 496.915, 60.3352, 0.405 ) }
    apic_18 { pt3dadd( 431.574, 496.676, 60.5696, 0.387 ) }
    apic_18 { pt3dadd( 430.44, 496.531, 60.825, 0.4252 ) }
    apic_18 { pt3dadd( 429.348, 496.658, 61.196, 0.3776 ) }
    apic_18 { pt3dadd( 428.658, 497.385, 61.7434, 0.4066 ) }
    apic_18 { pt3dadd( 428.124, 498.336, 62.349, 0.3482 ) }
    apic_18 { pt3dadd( 427.146, 498.708, 63.0104, 0.3262 ) }
    apic_18 { pt3dadd( 426.03, 498.53, 63.481, 0.3254 ) }
    apic_18 { pt3dadd( 424.909, 498.481, 63.8565, 0.3582 ) }
    apic_18 { pt3dadd( 423.99, 499.081, 64.2614, 0.4806 ) }
    apic_18 { pt3dadd( 423.388, 500.024, 64.6601, 0.4086 ) }
    apic_18 { pt3dadd( 423.068, 501.119, 65.0191, 0.3542 ) }
    apic_18 { pt3dadd( 422.524, 502.076, 65.392, 0.327 ) }
    apic_18 { pt3dadd( 421.786, 502.689, 65.9686, 0.3754 ) }
    apic_18 { pt3dadd( 421.211, 503.378, 66.6725, 0.445 ) }
    apic_18 { pt3dadd( 420.497, 504.115, 67.1983, 0.6706 ) }
    apic_18 { pt3dadd( 419.435, 504.293, 67.5156, 0.6206 ) }
    apic_18 { pt3dadd( 418.331, 504.383, 67.839, 0.741 ) }
    apic_18 { pt3dadd( 417.29, 504.368, 68.2388, 0.6162 ) }
    apic_18 { pt3dadd( 416.257, 503.995, 68.64, 0.703 ) }
    apic_18 { pt3dadd( 415.222, 503.565, 69.0236, 0.691 ) }
    apic_18 { pt3dadd( 414.166, 503.162, 69.3703, 0.8218 ) }
    apic_18 { pt3dadd( 413.146, 502.652, 69.6172, 0.7786 ) }
    apic_18 { pt3dadd( 412.208, 502.0, 69.7514, 0.7124 ) }
    apic_18 { pt3dadd( 411.246, 501.393, 69.7939, 0.5236 ) }
    apic_18 { pt3dadd( 410.193, 500.957, 69.7701, 0.4932 ) }
    apic_18 { pt3dadd( 409.142, 500.561, 69.6623, 0.4878 ) }
    apic_18 { pt3dadd( 408.065, 500.351, 69.515, 0.4582 ) }
    apic_18 { pt3dadd( 406.939, 500.5, 69.4218, 0.4982 ) }
    apic_18 { pt3dadd( 405.845, 500.74, 69.4431, 0.5702 ) }
    apic_18 { pt3dadd( 404.732, 500.847, 69.5456, 0.486 ) }
    apic_18 { pt3dadd( 403.605, 500.714, 69.6343, 0.4704 ) }
    apic_18 { pt3dadd( 402.477, 500.616, 69.7306, 0.445 ) }
    apic_18 { pt3dadd( 401.335, 500.613, 69.8228, 0.382 ) }
    apic_18 { pt3dadd( 400.192, 500.608, 69.8732, 0.3432 ) }
    apic_18 { pt3dadd( 399.076, 500.571, 69.8398, 0.349 ) }
    apic_18 { pt3dadd( 397.979, 500.343, 69.7917, 0.4398 ) }
    apic_18 { pt3dadd( 396.929, 499.914, 69.8432, 0.4478 ) }
    apic_18 { pt3dadd( 395.9, 499.471, 70.0381, 0.5566 ) }
    apic_18 { pt3dadd( 394.801, 499.223, 70.322, 0.529 ) }
    apic_18 { pt3dadd( 393.694, 498.951, 70.667, 0.449 ) }
    apic_18 { pt3dadd( 392.63, 498.546, 71.0979, 0.4394 ) }
    apic_18 { pt3dadd( 391.727, 497.931, 71.6696, 0.4344 ) }
    apic_18 { pt3dadd( 391.345, 496.943, 72.3324, 0.3626 ) }
    apic_18 { pt3dadd( 391.435, 496.1, 73.2609, 0.306 ) }
    apic_18 { pt3dadd( 391.249, 495.156, 74.3291, 0.2852 ) }
    apic_18 { pt3dadd( 390.804, 494.152, 75.3841, 0.2966 ) }
    apic_18 { pt3dadd( 389.954, 493.769, 76.4893, 0.305 ) }
    apic_18 { pt3dadd( 388.915, 493.685, 77.5326, 0.3814 ) }
    apic_18 { pt3dadd( 388.503, 493.293, 80.08, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 88/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 458.814, 496.915, 54.3407, 0.5088 ) }
    apic_3 { pt3dadd( 458.362, 496.225, 54.9721, 0.5204 ) }
    apic_3 { pt3dadd( 457.647, 495.406, 55.589, 0.5014 ) }
    apic_3 { pt3dadd( 457.447, 494.326, 56.1324, 0.4338 ) }
    apic_3 { pt3dadd( 457.674, 493.213, 56.5782, 0.4646 ) }
    apic_3 { pt3dadd( 457.758, 492.076, 56.9495, 0.4512 ) }
    apic_3 { pt3dadd( 457.483, 490.981, 57.3062, 0.5406 ) }
    apic_3 { pt3dadd( 457.105, 489.933, 57.7203, 0.6086 ) }
    apic_3 { pt3dadd( 456.586, 488.918, 58.1232, 0.7514 ) }
    apic_3 { pt3dadd( 456.434, 487.797, 58.5514, 0.7056 ) }
    apic_3 { pt3dadd( 456.199, 486.867, 59.1788, 0.5272 ) }
    apic_3 { pt3dadd( 455.382, 486.141, 59.8307, 0.4218 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_3 { pt3dadd( 454.31, 485.956, 60.4968, 0.5052 ) }
    apic_3 { pt3dadd( 453.222, 485.859, 61.1509, 0.4492 ) }
    apic_3 { pt3dadd( 452.206, 485.361, 61.7142, 0.4544 ) }
    apic_3 { pt3dadd( 451.355, 484.597, 62.1298, 0.3906 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 4/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 490.31, 522.122, 25.41, 0.593 ) }
    dend_16 { pt3dadd( 490.468, 521.322, 23.4475, 0.2288 ) }
    dend_16 { pt3dadd( 491.018, 520.479, 22.6304, 0.4588 ) }
    dend_16 { pt3dadd( 491.083, 519.367, 22.2995, 0.5196 ) }
    dend_16 { pt3dadd( 490.544, 518.385, 22.0347, 0.5116 ) }
    dend_16 { pt3dadd( 489.632, 517.729, 21.8487, 0.6252 ) }
    dend_16 { pt3dadd( 488.715, 517.059, 21.6141, 0.67 ) }
    dend_16 { pt3dadd( 487.872, 516.318, 21.3021, 0.6418 ) }
    dend_16 { pt3dadd( 487.05, 515.556, 20.9675, 0.444 ) }
    dend_16 { pt3dadd( 486.781, 514.754, 20.382, 0.3254 ) }
    dend_16 { pt3dadd( 486.823, 513.895, 19.6862, 0.2746 ) }
    dend_16 { pt3dadd( 486.119, 513.042, 19.2332, 0.2746 ) }
    dend_16 { pt3dadd( 485.404, 512.237, 18.9953, 0.2746 ) }
    dend_16 { pt3dadd( 484.475, 511.597, 18.8084, 0.2746 ) }
    dend_16 { pt3dadd( 483.387, 511.347, 18.6349, 0.2746 ) }
    dend_16 { pt3dadd( 482.428, 511.417, 18.321, 0.2746 ) }
    dend_16 { pt3dadd( 481.833, 511.137, 17.7547, 0.2746 ) }
    dend_16 { pt3dadd( 481.542, 510.207, 17.2009, 0.2746 ) }
    dend_16 { pt3dadd( 481.029, 509.283, 16.8607, 0.2746 ) }
    dend_16 { pt3dadd( 480.049, 508.765, 16.7177, 0.2746 ) }
    dend_16 { pt3dadd( 479.024, 508.926, 16.7606, 0.2746 ) }
    dend_16 { pt3dadd( 477.939, 509.182, 16.8858, 0.2744 ) }
    dend_16 { pt3dadd( 476.998, 508.759, 16.9437, 0.2744 ) }
    dend_16 { pt3dadd( 475.971, 508.437, 17.044, 0.2742 ) }
    dend_16 { pt3dadd( 474.878, 508.397, 17.2386, 0.274 ) }
    dend_16 { pt3dadd( 473.865, 508.423, 17.2553, 0.2736 ) }
    dend_16 { pt3dadd( 472.841, 508.715, 17.1587, 0.2728 ) }
    dend_16 { pt3dadd( 471.922, 509.052, 17.2656, 0.2712 ) }
    dend_16 { pt3dadd( 471.289, 508.669, 17.6849, 0.2684 ) }
    dend_16 { pt3dadd( 470.354, 508.203, 18.1189, 0.2626 ) }
    dend_16 { pt3dadd( 469.628, 507.51, 18.3071, 0.2542 ) }
    dend_16 { pt3dadd( 468.574, 507.205, 18.5659, 0.2288 ) }
    dend_16 { pt3dadd( 467.628, 507.529, 19.453, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 490.31, 522.122, 25.41, 0.593 ) }
    dend_15 { pt3dadd( 490.628, 521.021, 25.6526, 0.4478 ) }
    dend_15 { pt3dadd( 491.26, 520.081, 25.8059, 0.3322 ) }
    dend_15 { pt3dadd( 491.664, 519.093, 25.7104, 0.287 ) }
    dend_15 { pt3dadd( 491.702, 518.081, 25.3634, 0.2988 ) }
    dend_15 { pt3dadd( 491.759, 516.975, 24.938, 0.3144 ) }
    dend_15 { pt3dadd( 492.025, 515.91, 24.6098, 0.3738 ) }
    dend_15 { pt3dadd( 492.587, 514.918, 24.2565, 0.3346 ) }
    dend_15 { pt3dadd( 492.771, 513.937, 23.8319, 0.3012 ) }
    dend_15 { pt3dadd( 491.93, 513.475, 23.2449, 0.2768 ) }
    dend_15 { pt3dadd( 490.815, 513.416, 22.6282, 0.2788 ) }
    dend_15 { pt3dadd( 489.767, 513.306, 21.9288, 0.2826 ) }
    dend_15 { pt3dadd( 489.079, 512.76, 21.1108, 0.2894 ) }
    dend_15 { pt3dadd( 488.858, 511.701, 20.3515, 0.3018 ) }
    dend_15 { pt3dadd( 488.606, 510.597, 19.7422, 0.326 ) }
    dend_15 { pt3dadd( 488.154, 509.565, 19.2264, 0.3656 ) }
    dend_15 { pt3dadd( 487.633, 508.568, 18.8266, 0.4646 ) }
    dend_15 { pt3dadd( 487.035, 507.621, 18.5707, 0.524 ) }
    dend_15 { pt3dadd( 486.178, 506.943, 18.3008, 0.55 ) }
    dend_15 { pt3dadd( 485.169, 506.579, 17.917, 0.5496 ) }
    dend_15 { pt3dadd( 484.109, 506.251, 17.4966, 0.5558 ) }
    dend_15 { pt3dadd( 483.151, 505.685, 17.0686, 0.5328 ) }
    dend_15 { pt3dadd( 482.387, 504.877, 16.6237, 0.6578 ) }
    dend_15 { pt3dadd( 481.745, 503.938, 16.2262, 0.7624 ) }
    dend_15 { pt3dadd( 481.304, 502.926, 15.8594, 0.6582 ) }
    dend_15 { pt3dadd( 481.18, 501.836, 15.5061, 0.539 ) }
    dend_15 { pt3dadd( 481.251, 500.714, 15.1967, 0.4172 ) }
    dend_15 { pt3dadd( 481.552, 499.651, 15.0213, 0.3964 ) }
    dend_15 { pt3dadd( 482.063, 498.651, 15.015, 0.5056 ) }
    dend_15 { pt3dadd( 482.651, 497.676, 15.0862, 0.4494 ) }
    dend_15 { pt3dadd( 483.274, 496.717, 15.1958, 0.4562 ) }
    dend_15 { pt3dadd( 483.745, 495.709, 15.3627, 0.3876 ) }
    dend_15 { pt3dadd( 483.912, 494.614, 15.5552, 0.426 ) }
    dend_15 { pt3dadd( 483.911, 493.471, 15.666, 0.379 ) }
    dend_15 { pt3dadd( 483.904, 492.328, 15.6896, 0.4092 ) }
    dend_15 { pt3dadd( 483.859, 491.22, 15.5741, 0.353 ) }
    dend_15 { pt3dadd( 483.615, 490.21, 15.2942, 0.3364 ) }
    dend_15 { pt3dadd( 483.258, 489.137, 15.0858, 0.3366 ) }
    dend_15 { pt3dadd( 483.53, 488.075, 15.0401, 0.4164 ) }
    dend_15 { pt3dadd( 484.398, 487.345, 15.0499, 0.4078 ) }
    dend_15 { pt3dadd( 485.482, 486.98, 15.0995, 0.4648 ) }
    dend_15 { pt3dadd( 486.079, 486.381, 15.1817, 0.4452 ) }
    dend_15 { pt3dadd( 486.547, 485.364, 15.2762, 0.5592 ) }
    dend_15 { pt3dadd( 486.517, 484.24, 15.3676, 0.498 ) }
    dend_15 { pt3dadd( 486.276, 483.154, 15.5188, 0.5654 ) }
    dend_15 { pt3dadd( 486.205, 482.024, 15.6636, 0.497 ) }
    dend_15 { pt3dadd( 486.205, 480.883, 15.7507, 0.394 ) }
    dend_15 { pt3dadd( 486.237, 479.752, 15.7465, 0.3172 ) }
    dend_15 { pt3dadd( 486.21, 478.644, 15.8005, 0.3064 ) }
    dend_15 { pt3dadd( 486.182, 477.514, 15.8488, 0.3342 ) }
    dend_15 { pt3dadd( 486.065, 476.378, 15.8449, 0.3818 ) }
    dend_15 { pt3dadd( 485.732, 475.291, 15.7981, 0.4892 ) }
    dend_15 { pt3dadd( 485.623, 474.177, 15.6944, 0.5954 ) }
    dend_15 { pt3dadd( 485.938, 473.124, 15.4812, 0.5574 ) }
    dend_15 { pt3dadd( 486.16, 472.026, 15.2228, 0.4842 ) }
    dend_15 { pt3dadd( 486.199, 470.893, 14.9516, 0.3604 ) }
    dend_15 { pt3dadd( 486.198, 469.84, 14.5913, 0.302 ) }
    dend_15 { pt3dadd( 486.164, 468.751, 14.3445, 0.2782 ) }
    dend_15 { pt3dadd( 485.962, 467.642, 14.2314, 0.2814 ) }
    dend_15 { pt3dadd( 485.828, 466.539, 14.2476, 0.2874 ) }
    dend_15 { pt3dadd( 486.066, 465.443, 14.267, 0.298 ) }
    dend_15 { pt3dadd( 486.59, 464.455, 14.1886, 0.3192 ) }
    dend_15 { pt3dadd( 487.004, 463.413, 14.0207, 0.3518 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( 487.098, 462.3, 13.7689, 0.444 ) }
    dend_15 { pt3dadd( 487.05, 461.178, 13.4568, 0.4612 ) }
    dend_15 { pt3dadd( 486.74, 460.088, 13.1847, 0.553 ) }
    dend_15 { pt3dadd( 486.302, 459.031, 12.9811, 0.661 ) }
    dend_15 { pt3dadd( 485.934, 457.949, 12.8384, 0.7064 ) }
    dend_15 { pt3dadd( 485.678, 456.835, 12.7343, 0.626 ) }
    dend_15 { pt3dadd( 485.327, 455.747, 12.6481, 0.5898 ) }
    dend_15 { pt3dadd( 485.056, 454.637, 12.5594, 0.4322 ) }
    dend_15 { pt3dadd( 484.849, 453.514, 12.4331, 0.3502 ) }
    dend_15 { pt3dadd( 484.731, 452.417, 12.1985, 0.3228 ) }
    dend_15 { pt3dadd( 484.283, 451.379, 11.9602, 0.3534 ) }
    dend_15 { pt3dadd( 483.6, 450.464, 11.7473, 0.4718 ) }
    dend_15 { pt3dadd( 483.052, 449.462, 11.5575, 0.3922 ) }
    dend_15 { pt3dadd( 482.561, 448.429, 11.3807, 0.3236 ) }
    dend_15 { pt3dadd( 482.143, 447.396, 11.154, 0.2712 ) }
    dend_15 { pt3dadd( 481.94, 446.32, 10.8715, 0.2684 ) }
    dend_15 { pt3dadd( 481.211, 445.494, 10.575, 0.2626 ) }
    dend_15 { pt3dadd( 480.137, 445.136, 10.4188, 0.2542 ) }
    dend_15 { pt3dadd( 479.049, 444.919, 10.4315, 0.2288 ) }
    dend_15 { pt3dadd( 477.964, 444.558, 10.64, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 20/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 451.355, 484.597, 62.1298, 0.3906 ) }
    apic_5 { pt3dadd( 450.87, 484.338, 62.6545, 0.401 ) }
    apic_5 { pt3dadd( 450.253, 483.661, 62.8303, 0.4826 ) }
    apic_5 { pt3dadd( 449.388, 483.126, 63.026, 0.5598 ) }
    apic_5 { pt3dadd( 448.62, 482.469, 63.126, 0.6056 ) }
    apic_5 { pt3dadd( 447.77, 481.833, 63.2388, 0.7042 ) }
    apic_5 { pt3dadd( 446.958, 481.233, 63.5048, 0.5928 ) }
    apic_5 { pt3dadd( 446.477, 480.296, 63.7986, 0.441 ) }
    apic_5 { pt3dadd( 446.077, 479.574, 63.8462, 0.3518 ) }
    apic_5 { pt3dadd( 445.844, 478.492, 63.9873, 0.3964 ) }
    apic_5 { pt3dadd( 445.589, 477.796, 64.3644, 0.3762 ) }
    apic_5 { pt3dadd( 445.71, 476.688, 64.6696, 0.38 ) }
    apic_5 { pt3dadd( 445.931, 475.732, 65.1081, 0.4144 ) }
    apic_5 { pt3dadd( 446.046, 474.737, 65.6706, 0.5756 ) }
    apic_5 { pt3dadd( 446.389, 473.758, 66.2242, 0.6304 ) }
    apic_5 { pt3dadd( 446.391, 472.715, 66.6168, 0.543 ) }
    apic_5 { pt3dadd( 446.327, 471.642, 66.9166, 0.3848 ) }
    apic_5 { pt3dadd( 446.158, 470.731, 67.324, 0.3 ) }
    apic_5 { pt3dadd( 446.054, 469.994, 67.851, 0.2746 ) }
    apic_5 { pt3dadd( 445.931, 468.871, 68.3371, 0.2748 ) }
    apic_5 { pt3dadd( 445.198, 468.267, 68.7156, 0.275 ) }
    apic_5 { pt3dadd( 444.451, 467.956, 68.9954, 0.2754 ) }
    apic_5 { pt3dadd( 443.651, 467.444, 69.4954, 0.2762 ) }
    apic_5 { pt3dadd( 443.529, 466.806, 70.3038, 0.2774 ) }
    apic_5 { pt3dadd( 442.679, 466.288, 71.2046, 0.2798 ) }
    apic_5 { pt3dadd( 442.076, 466.18, 72.2753, 0.2844 ) }
    apic_5 { pt3dadd( 441.21, 466.294, 73.2631, 0.2928 ) }
    apic_5 { pt3dadd( 440.249, 465.912, 74.1894, 0.3094 ) }
    apic_5 { pt3dadd( 439.286, 465.615, 75.0224, 0.3338 ) }
    apic_5 { pt3dadd( 438.839, 464.988, 75.8111, 0.4096 ) }
    apic_5 { pt3dadd( 438.392, 464.266, 76.442, 0.4032 ) }
    apic_5 { pt3dadd( 438.171, 463.18, 76.8247, 0.4186 ) }
    apic_5 { pt3dadd( 437.602, 462.218, 77.0084, 0.5416 ) }
    apic_5 { pt3dadd( 436.602, 461.901, 77.1179, 0.5418 ) }
    apic_5 { pt3dadd( 435.663, 461.39, 77.2397, 0.5024 ) }
    apic_5 { pt3dadd( 435.326, 460.382, 77.4178, 0.3954 ) }
    apic_5 { pt3dadd( 434.835, 459.43, 77.5715, 0.3614 ) }
    apic_5 { pt3dadd( 434.262, 458.515, 77.7305, 0.415 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 58/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 451.355, 484.597, 62.1298, 0.3906 ) }
    apic_4 { pt3dadd( 450.162, 483.644, 62.6282, 0.4576 ) }
    apic_4 { pt3dadd( 449.83, 482.805, 63.6076, 0.4268 ) }
    apic_4 { pt3dadd( 450.544, 481.959, 64.0144, 0.4456 ) }
    apic_4 { pt3dadd( 451.5, 481.356, 64.4087, 0.4458 ) }
    apic_4 { pt3dadd( 452.431, 480.745, 64.7996, 0.3846 ) }
    apic_4 { pt3dadd( 453.389, 480.123, 65.0731, 0.3418 ) }
    apic_4 { pt3dadd( 454.438, 479.692, 65.2282, 0.3776 ) }
    apic_4 { pt3dadd( 455.568, 479.62, 65.2571, 0.3416 ) }
    apic_4 { pt3dadd( 456.698, 479.728, 65.263, 0.3146 ) }
    apic_4 { pt3dadd( 457.832, 479.681, 65.2394, 0.3014 ) }
    apic_4 { pt3dadd( 458.945, 479.945, 65.1781, 0.3252 ) }
    apic_4 { pt3dadd( 460.034, 480.282, 65.077, 0.3636 ) }
    apic_4 { pt3dadd( 461.106, 480.626, 64.8956, 0.4622 ) }
    apic_4 { pt3dadd( 462.193, 480.895, 64.6643, 0.5136 ) }
    apic_4 { pt3dadd( 463.336, 480.938, 64.4577, 0.5602 ) }
    apic_4 { pt3dadd( 464.477, 480.943, 64.2648, 0.4246 ) }
    apic_4 { pt3dadd( 465.61, 480.979, 64.0679, 0.3366 ) }
    apic_4 { pt3dadd( 466.731, 481.135, 63.894, 0.2952 ) }
    apic_4 { pt3dadd( 467.815, 481.467, 63.7423, 0.3138 ) }
    apic_4 { pt3dadd( 468.9, 481.812, 63.6605, 0.3432 ) }
    apic_4 { pt3dadd( 469.914, 482.34, 63.6367, 0.422 ) }
    apic_4 { pt3dadd( 470.891, 482.919, 63.691, 0.4496 ) }
    apic_4 { pt3dadd( 471.823, 483.545, 63.8473, 0.3904 ) }
    apic_4 { pt3dadd( 472.774, 484.165, 64.0324, 0.3582 ) }
    apic_4 { pt3dadd( 473.779, 484.706, 64.1693, 0.379 ) }
    apic_4 { pt3dadd( 474.762, 485.268, 64.2258, 0.4844 ) }
    apic_4 { pt3dadd( 475.635, 485.941, 64.283, 0.5856 ) }
    apic_4 { pt3dadd( 476.399, 486.684, 64.4686, 0.5442 ) }
    apic_4 { pt3dadd( 477.21, 487.452, 64.6601, 0.4348 ) }
    apic_4 { pt3dadd( 478.092, 488.154, 64.7458, 0.3898 ) }
    apic_4 { pt3dadd( 479.056, 488.726, 64.7251, 0.4562 ) }
    apic_4 { pt3dadd( 480.048, 489.291, 64.6766, 0.5382 ) }
    apic_4 { pt3dadd( 481.042, 489.856, 64.6234, 0.431 ) }
    apic_4 { pt3dadd( 481.992, 490.473, 64.573, 0.3482 ) }
    apic_4 { pt3dadd( 482.836, 491.247, 64.5585, 0.3176 ) }
    apic_4 { pt3dadd( 483.743, 491.931, 64.5943, 0.3502 ) }
    apic_4 { pt3dadd( 484.789, 492.173, 64.6584, 0.435 ) }
    apic_4 { pt3dadd( 485.905, 491.975, 64.7212, 0.4744 ) }
    apic_4 { pt3dadd( 486.997, 491.806, 64.8824, 0.4324 ) }
    apic_4 { pt3dadd( 488.053, 491.805, 65.2481, 0.4558 ) }
    apic_4 { pt3dadd( 489.047, 492.24, 65.7188, 0.466 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_4 { pt3dadd( 489.865, 493.008, 66.236, 0.4156 ) }
    apic_4 { pt3dadd( 490.409, 493.895, 66.8744, 0.4296 ) }
    apic_4 { pt3dadd( 490.958, 494.725, 67.6318, 0.393 ) }
    apic_4 { pt3dadd( 491.833, 495.359, 68.3488, 0.3992 ) }
    apic_4 { pt3dadd( 492.895, 495.77, 68.9422, 0.5094 ) }
    apic_4 { pt3dadd( 493.908, 496.267, 69.456, 0.4628 ) }
    apic_4 { pt3dadd( 494.639, 497.052, 69.9978, 0.4508 ) }
    apic_4 { pt3dadd( 495.059, 498.023, 70.6093, 0.5252 ) }
    apic_4 { pt3dadd( 495.632, 498.95, 71.211, 0.6506 ) }
    apic_4 { pt3dadd( 496.464, 499.68, 71.8217, 0.716 ) }
    apic_4 { pt3dadd( 497.46, 500.088, 72.4618, 0.5048 ) }
    apic_4 { pt3dadd( 498.445, 500.309, 73.1578, 0.3534 ) }
    apic_4 { pt3dadd( 499.375, 500.674, 73.8634, 0.2792 ) }
    apic_4 { pt3dadd( 500.324, 500.32, 74.4019, 0.2834 ) }
    apic_4 { pt3dadd( 501.257, 499.658, 74.7379, 0.2906 ) }
    apic_4 { pt3dadd( 502.11, 498.901, 74.8846, 0.3054 ) }
    apic_4 { pt3dadd( 502.936, 498.166, 74.8054, 0.3266 ) }
    apic_4 { pt3dadd( 503.882, 497.573, 74.5903, 0.3964 ) }
    apic_4 { pt3dadd( 504.829, 496.988, 74.2955, 0.3772 ) }
    apic_4 { pt3dadd( 505.704, 496.267, 74.0468, 0.3762 ) }
    apic_4 { pt3dadd( 506.643, 495.617, 73.8934, 0.436 ) }
    apic_4 { pt3dadd( 507.703, 495.21, 73.8536, 0.4764 ) }
    apic_4 { pt3dadd( 508.791, 495.128, 73.9945, 0.4358 ) }
    apic_4 { pt3dadd( 509.924, 495.137, 74.1675, 0.463 ) }
    apic_4 { pt3dadd( 511.035, 495.207, 74.2619, 0.4732 ) }
    apic_4 { pt3dadd( 512.125, 495.504, 74.3834, 0.46 ) }
    apic_4 { pt3dadd( 513.211, 495.604, 74.6222, 0.3626 ) }
    apic_4 { pt3dadd( 514.284, 495.763, 74.9512, 0.3062 ) }
    apic_4 { pt3dadd( 515.363, 495.868, 75.3309, 0.286 ) }
    apic_4 { pt3dadd( 516.32, 495.336, 75.5538, 0.297 ) }
    apic_4 { pt3dadd( 517.068, 494.487, 75.684, 0.3108 ) }
    apic_4 { pt3dadd( 517.857, 493.662, 75.752, 0.3672 ) }
    apic_4 { pt3dadd( 518.621, 492.866, 75.693, 0.322 ) }
    apic_4 { pt3dadd( 519.352, 491.99, 75.6459, 0.2796 ) }
    apic_4 { pt3dadd( 519.678, 490.919, 75.7238, 0.2288 ) }
    apic_4 { pt3dadd( 520.062, 490.09, 76.72, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_5 (entry count 36/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 434.262, 458.515, 77.7305, 0.415 ) }
    apic_17 { pt3dadd( 434.046, 458.007, 78.0965, 0.4576 ) }
    apic_17 { pt3dadd( 433.526, 457.823, 77.04, 0.3612 ) }
    apic_17 { pt3dadd( 432.62, 457.274, 76.6024, 0.3036 ) }
    apic_17 { pt3dadd( 431.757, 457.424, 76.1533, 0.2814 ) }
    apic_17 { pt3dadd( 430.792, 457.83, 75.7176, 0.2872 ) }
    apic_17 { pt3dadd( 429.788, 458.23, 75.2441, 0.299 ) }
    apic_17 { pt3dadd( 428.748, 458.511, 74.727, 0.3144 ) }
    apic_17 { pt3dadd( 427.77, 459.022, 74.2669, 0.374 ) }
    apic_17 { pt3dadd( 427.086, 459.774, 73.8214, 0.335 ) }
    apic_17 { pt3dadd( 426.478, 460.345, 73.2225, 0.3022 ) }
    apic_17 { pt3dadd( 425.472, 460.781, 72.816, 0.2786 ) }
    apic_17 { pt3dadd( 424.888, 461.358, 72.707, 0.2822 ) }
    apic_17 { pt3dadd( 424.036, 461.508, 72.4419, 0.2884 ) }
    apic_17 { pt3dadd( 423.257, 461.948, 72.161, 0.3012 ) }
    apic_17 { pt3dadd( 422.249, 462.011, 72.0418, 0.3186 ) }
    apic_17 { pt3dadd( 421.564, 462.396, 72.2971, 0.382 ) }
    apic_17 { pt3dadd( 420.509, 462.648, 72.6505, 0.3494 ) }
    apic_17 { pt3dadd( 419.898, 463.36, 73.2082, 0.3298 ) }
    apic_17 { pt3dadd( 419.516, 464.226, 73.8968, 0.3246 ) }
    apic_17 { pt3dadd( 419.341, 465.337, 74.5304, 0.3928 ) }
    apic_17 { pt3dadd( 419.165, 466.227, 75.1251, 0.3708 ) }
    apic_17 { pt3dadd( 419.207, 467.235, 75.675, 0.3642 ) }
    apic_17 { pt3dadd( 419.047, 468.322, 76.0564, 0.4138 ) }
    apic_17 { pt3dadd( 419.068, 469.357, 76.3193, 0.4342 ) }
    apic_17 { pt3dadd( 418.965, 470.259, 76.6618, 0.3622 ) }
    apic_17 { pt3dadd( 418.842, 471.243, 76.7452, 0.3052 ) }
    apic_17 { pt3dadd( 418.701, 472.068, 76.4991, 0.2844 ) }
    apic_17 { pt3dadd( 417.939, 472.806, 76.1432, 0.2926 ) }
    apic_17 { pt3dadd( 417.141, 473.47, 75.6512, 0.3092 ) }
    apic_17 { pt3dadd( 416.247, 474.053, 75.1038, 0.3334 ) }
    apic_17 { pt3dadd( 415.471, 474.591, 74.7572, 0.41 ) }
    apic_17 { pt3dadd( 414.738, 474.798, 74.4246, 0.3976 ) }
    apic_17 { pt3dadd( 414.19, 475.218, 74.0536, 0.4384 ) }
    apic_17 { pt3dadd( 413.327, 475.322, 73.836, 0.4328 ) }
    apic_17 { pt3dadd( 412.426, 475.218, 73.6392, 0.3594 ) }
    apic_17 { pt3dadd( 411.618, 475.445, 73.4079, 0.3 ) }
    apic_17 { pt3dadd( 410.78, 475.539, 73.0766, 0.2746 ) }
    apic_17 { pt3dadd( 410.089, 476.064, 72.6214, 0.2748 ) }
    apic_17 { pt3dadd( 409.467, 476.836, 72.4035, 0.2748 ) }
    apic_17 { pt3dadd( 408.905, 477.713, 72.1608, 0.2752 ) }
    apic_17 { pt3dadd( 408.25, 478.002, 72.1767, 0.2756 ) }
    apic_17 { pt3dadd( 407.85, 479.008, 72.1599, 0.2766 ) }
    apic_17 { pt3dadd( 407.33, 479.659, 72.0636, 0.2782 ) }
    apic_17 { pt3dadd( 406.546, 480.244, 71.7584, 0.2814 ) }
    apic_17 { pt3dadd( 405.77, 480.642, 71.3409, 0.287 ) }
    apic_17 { pt3dadd( 404.945, 481.362, 71.0424, 0.2988 ) }
    apic_17 { pt3dadd( 404.176, 482.03, 70.7395, 0.3144 ) }
    apic_17 { pt3dadd( 403.115, 482.306, 70.6558, 0.3738 ) }
    apic_17 { pt3dadd( 402.286, 482.196, 70.9094, 0.3346 ) }
    apic_17 { pt3dadd( 402.078, 482.616, 71.3947, 0.3014 ) }
    apic_17 { pt3dadd( 401.241, 483.224, 71.6803, 0.2772 ) }
    apic_17 { pt3dadd( 400.097, 483.226, 71.7987, 0.2796 ) }
    apic_17 { pt3dadd( 399.714, 483.993, 71.6668, 0.284 ) }
    apic_17 { pt3dadd( 399.232, 484.596, 71.1911, 0.2918 ) }
    apic_17 { pt3dadd( 398.708, 485.319, 70.5074, 0.3076 ) }
    apic_17 { pt3dadd( 398.007, 484.951, 69.7309, 0.3302 ) }
    apic_17 { pt3dadd( 397.43, 485.666, 69.2709, 0.4046 ) }
    apic_17 { pt3dadd( 396.735, 486.344, 68.8576, 0.3862 ) }
    apic_17 { pt3dadd( 395.826, 486.772, 68.4432, 0.4234 ) }
    apic_17 { pt3dadd( 394.802, 487.219, 68.1584, 0.3742 ) }
    apic_17 { pt3dadd( 393.909, 487.231, 67.8485, 0.4004 ) }
    apic_17 { pt3dadd( 393.097, 487.275, 67.4324, 0.3366 ) }
    apic_17 { pt3dadd( 392.366, 487.888, 67.1558, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_17 { pt3dadd( 391.813, 488.559, 66.6991, 0.284 ) }
    apic_17 { pt3dadd( 392.122, 489.402, 66.2578, 0.2918 ) }
    apic_17 { pt3dadd( 392.299, 490.106, 65.9971, 0.3076 ) }
    apic_17 { pt3dadd( 392.66, 490.885, 65.6603, 0.3302 ) }
    apic_17 { pt3dadd( 392.353, 491.577, 65.1714, 0.4044 ) }
    apic_17 { pt3dadd( 391.982, 491.504, 64.3384, 0.386 ) }
    apic_17 { pt3dadd( 391.439, 492.147, 63.7104, 0.4218 ) }
    apic_17 { pt3dadd( 391.44, 492.694, 62.9933, 0.3774 ) }
    apic_17 { pt3dadd( 390.346, 492.644, 62.466, 0.3762 ) }
    apic_17 { pt3dadd( 389.678, 492.709, 61.999, 0.4372 ) }
    apic_17 { pt3dadd( 388.822, 492.721, 61.6745, 0.4724 ) }
    apic_17 { pt3dadd( 387.97, 492.129, 61.4242, 0.4584 ) }
    apic_17 { pt3dadd( 387.225, 491.298, 61.18, 0.3598 ) }
    apic_17 { pt3dadd( 386.274, 490.722, 60.9319, 0.301 ) }
    apic_17 { pt3dadd( 385.201, 490.512, 60.6234, 0.2766 ) }
    apic_17 { pt3dadd( 384.266, 490.664, 60.249, 0.2782 ) }
    apic_17 { pt3dadd( 383.266, 491.098, 59.9752, 0.2814 ) }
    apic_17 { pt3dadd( 382.324, 491.554, 59.8578, 0.287 ) }
    apic_17 { pt3dadd( 381.526, 491.909, 59.7965, 0.2986 ) }
    apic_17 { pt3dadd( 380.692, 492.263, 59.9841, 0.3138 ) }
    apic_17 { pt3dadd( 379.623, 492.073, 60.3081, 0.3728 ) }
    apic_17 { pt3dadd( 378.589, 491.64, 60.6676, 0.3328 ) }
    apic_17 { pt3dadd( 377.488, 491.733, 60.9952, 0.2982 ) }
    apic_17 { pt3dadd( 376.471, 491.832, 61.3295, 0.2712 ) }
    apic_17 { pt3dadd( 375.718, 492.532, 61.6216, 0.2684 ) }
    apic_17 { pt3dadd( 374.621, 492.719, 61.8108, 0.2626 ) }
    apic_17 { pt3dadd( 373.884, 493.293, 61.9475, 0.2542 ) }
    apic_17 { pt3dadd( 373.474, 493.762, 62.3431, 0.2288 ) }
    apic_17 { pt3dadd( 372.486, 494.208, 63.0, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 29/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 434.262, 458.515, 77.7305, 0.415 ) }
    apic_6 { pt3dadd( 434.13, 457.307, 77.9612, 0.4054 ) }
    apic_6 { pt3dadd( 434.023, 456.256, 78.2163, 0.46 ) }
    apic_6 { pt3dadd( 433.91, 455.184, 78.6027, 0.438 ) }
    apic_6 { pt3dadd( 433.462, 454.168, 79.0059, 0.5388 ) }
    // Section: apic_16, id: apic_16, parent: apic_6 (entry count 34/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 433.462, 454.168, 79.0059, 0.5388 ) }
    apic_16 { pt3dadd( 432.481, 453.785, 79.5542, 0.4576 ) }
    apic_16 { pt3dadd( 431.577, 453.3, 78.5305, 0.3604 ) }
    apic_16 { pt3dadd( 430.604, 452.969, 78.0388, 0.3022 ) }
    apic_16 { pt3dadd( 429.848, 452.699, 77.289, 0.2786 ) }
    apic_16 { pt3dadd( 428.738, 452.633, 76.6139, 0.2822 ) }
    apic_16 { pt3dadd( 427.702, 452.367, 76.0007, 0.2886 ) }
    apic_16 { pt3dadd( 427.513, 452.856, 75.1162, 0.3004 ) }
    apic_16 { pt3dadd( 427.44, 453.633, 74.2664, 0.3236 ) }
    apic_16 { pt3dadd( 426.388, 453.532, 73.5521, 0.361 ) }
    apic_16 { pt3dadd( 425.734, 452.641, 72.9868, 0.456 ) }
    apic_16 { pt3dadd( 425.091, 451.835, 72.3128, 0.5084 ) }
    apic_16 { pt3dadd( 424.055, 451.543, 71.657, 0.5198 ) }
    apic_16 { pt3dadd( 423.305, 451.882, 70.9246, 0.5 ) }
    apic_16 { pt3dadd( 422.594, 452.466, 70.3455, 0.4316 ) }
    apic_16 { pt3dadd( 422.15, 453.011, 69.5923, 0.4602 ) }
    apic_16 { pt3dadd( 421.587, 452.269, 68.7571, 0.4444 ) }
    apic_16 { pt3dadd( 421.003, 451.489, 68.1744, 0.5208 ) }
    apic_16 { pt3dadd( 421.634, 450.668, 67.6208, 0.607 ) }
    apic_16 { pt3dadd( 422.126, 450.036, 67.0398, 0.5788 ) }
    apic_16 { pt3dadd( 422.62, 449.236, 66.5132, 0.5234 ) }
    apic_16 { pt3dadd( 422.82, 448.134, 66.0366, 0.435 ) }
    apic_16 { pt3dadd( 422.525, 447.098, 65.529, 0.4308 ) }
    apic_16 { pt3dadd( 421.857, 446.83, 64.9256, 0.5638 ) }
    apic_16 { pt3dadd( 421.43, 446.154, 64.1598, 0.5842 ) }
    apic_16 { pt3dadd( 421.102, 445.388, 63.3203, 0.5764 ) }
    apic_16 { pt3dadd( 420.237, 445.269, 62.5486, 0.554 ) }
    apic_16 { pt3dadd( 419.179, 445.594, 61.9833, 0.5518 ) }
    apic_16 { pt3dadd( 418.089, 445.895, 61.5188, 0.5852 ) }
    apic_16 { pt3dadd( 417.204, 445.695, 61.0484, 0.4656 ) }
    apic_16 { pt3dadd( 416.416, 444.914, 60.7281, 0.438 ) }
    apic_16 { pt3dadd( 415.671, 444.251, 60.5066, 0.3602 ) }
    apic_16 { pt3dadd( 414.955, 443.41, 60.2106, 0.3436 ) }
    apic_16 { pt3dadd( 414.586, 442.777, 59.6154, 0.381 ) }
    apic_16 { pt3dadd( 415.041, 441.817, 59.05, 0.3478 ) }
    apic_16 { pt3dadd( 415.749, 441.223, 58.3274, 0.3268 ) }
    apic_16 { pt3dadd( 416.648, 440.897, 57.5274, 0.319 ) }
    apic_16 { pt3dadd( 416.934, 440.669, 56.4637, 0.3826 ) }
    apic_16 { pt3dadd( 417.854, 441.026, 55.4022, 0.3504 ) }
    apic_16 { pt3dadd( 418.327, 441.518, 54.2584, 0.332 ) }
    apic_16 { pt3dadd( 418.246, 442.418, 53.1566, 0.3282 ) }
    apic_16 { pt3dadd( 417.935, 443.444, 52.2427, 0.4008 ) }
    apic_16 { pt3dadd( 417.451, 444.399, 51.6289, 0.3794 ) }
    apic_16 { pt3dadd( 417.331, 445.427, 51.0479, 0.41 ) }
    apic_16 { pt3dadd( 418.09, 445.931, 50.5039, 0.3542 ) }
    apic_16 { pt3dadd( 419.138, 445.789, 50.0016, 0.3388 ) }
    apic_16 { pt3dadd( 420.126, 445.358, 49.4886, 0.341 ) }
    apic_16 { pt3dadd( 421.227, 445.462, 48.998, 0.4238 ) }
    apic_16 { pt3dadd( 422.231, 445.842, 48.5355, 0.4244 ) }
    apic_16 { pt3dadd( 423.24, 446.046, 48.2364, 0.4826 ) }
    apic_16 { pt3dadd( 423.942, 446.604, 47.8806, 0.5404 ) }
    apic_16 { pt3dadd( 424.327, 447.607, 47.6577, 0.435 ) }
    apic_16 { pt3dadd( 424.585, 448.674, 47.3617, 0.3554 ) }
    apic_16 { pt3dadd( 424.559, 449.578, 47.0282, 0.331 ) }
    apic_16 { pt3dadd( 424.424, 450.583, 46.4685, 0.376 ) }
    apic_16 { pt3dadd( 424.171, 450.954, 45.6184, 0.4786 ) }
    apic_16 { pt3dadd( 423.935, 451.191, 44.4553, 0.5746 ) }
    apic_16 { pt3dadd( 423.852, 450.976, 43.0419, 0.524 ) }
    apic_16 { pt3dadd( 424.423, 450.968, 41.5915, 0.3966 ) }
    apic_16 { pt3dadd( 425.534, 450.965, 40.409, 0.3232 ) }
    apic_16 { pt3dadd( 425.807, 451.537, 39.4302, 0.3122 ) }
    apic_16 { pt3dadd( 426.371, 451.149, 38.6747, 0.37 ) }
    apic_16 { pt3dadd( 427.167, 451.495, 37.9795, 0.3276 ) }
    apic_16 { pt3dadd( 427.398, 452.404, 37.6065, 0.2882 ) }
    apic_16 { pt3dadd( 426.917, 453.006, 37.1616, 0.2542 ) }
    apic_16 { pt3dadd( 425.9, 453.265, 36.8631, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_16 { pt3dadd( 424.996, 453.71, 36.68, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 1/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 433.462, 454.168, 79.0059, 0.5388 ) }
    apic_7 { pt3dadd( 432.693, 453.839, 79.5119, 0.4948 ) }
    apic_7 { pt3dadd( 431.85, 453.464, 80.1184, 0.3898 ) }
    apic_7 { pt3dadd( 430.977, 453.05, 80.5356, 0.3094 ) }
    apic_7 { pt3dadd( 430.477, 453.071, 81.2622, 0.2918 ) }
    apic_7 { pt3dadd( 429.68, 453.363, 82.0537, 0.3076 ) }
    apic_7 { pt3dadd( 429.145, 452.693, 82.7557, 0.3306 ) }
    apic_7 { pt3dadd( 428.962, 451.615, 83.2754, 0.405 ) }
    apic_7 { pt3dadd( 428.241, 450.766, 83.6539, 0.3872 ) }
    apic_7 { pt3dadd( 427.451, 449.942, 83.9297, 0.4238 ) }
    apic_7 { pt3dadd( 426.535, 449.514, 84.1806, 0.3822 ) }
    apic_7 { pt3dadd( 425.466, 449.249, 84.3839, 0.3792 ) }
    apic_7 { pt3dadd( 424.593, 448.984, 84.539, 0.4726 ) }
    apic_7 { pt3dadd( 423.731, 448.553, 84.6625, 0.3936 ) }
    apic_7 { pt3dadd( 423.051, 447.965, 85.057, 0.3262 ) }
    apic_7 { pt3dadd( 422.492, 447.635, 85.5123, 0.2762 ) }
    // Section: apic_15, id: apic_15, parent: apic_7 (entry count 17/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 422.492, 447.635, 85.5123, 0.2762 ) }
    apic_15 { pt3dadd( 421.447, 447.465, 85.4, 0.2288 ) }
    apic_15 { pt3dadd( 420.348, 447.375, 84.4119, 0.2766 ) }
    apic_15 { pt3dadd( 419.692, 447.45, 83.8793, 0.2782 ) }
    apic_15 { pt3dadd( 418.694, 446.957, 83.4, 0.2814 ) }
    apic_15 { pt3dadd( 417.634, 446.984, 82.8688, 0.287 ) }
    apic_15 { pt3dadd( 416.891, 447.502, 82.2189, 0.2988 ) }
    apic_15 { pt3dadd( 415.859, 447.782, 81.6416, 0.3142 ) }
    apic_15 { pt3dadd( 415.085, 448.199, 81.2045, 0.3734 ) }
    apic_15 { pt3dadd( 414.241, 448.63, 80.7744, 0.3338 ) }
    apic_15 { pt3dadd( 413.421, 449.378, 80.4916, 0.3 ) }
    apic_15 { pt3dadd( 412.479, 449.744, 80.3662, 0.2746 ) }
    apic_15 { pt3dadd( 411.412, 449.574, 80.1912, 0.2746 ) }
    apic_15 { pt3dadd( 410.328, 449.423, 79.9691, 0.2748 ) }
    apic_15 { pt3dadd( 409.385, 449.67, 79.7096, 0.2748 ) }
    apic_15 { pt3dadd( 408.4, 449.87, 79.55, 0.275 ) }
    apic_15 { pt3dadd( 407.318, 450.05, 79.3366, 0.2756 ) }
    apic_15 { pt3dadd( 406.18, 450.124, 79.1857, 0.2764 ) }
    apic_15 { pt3dadd( 405.086, 450.417, 79.1112, 0.278 ) }
    apic_15 { pt3dadd( 404.168, 450.797, 79.0728, 0.281 ) }
    apic_15 { pt3dadd( 403.496, 451.625, 79.0101, 0.2864 ) }
    apic_15 { pt3dadd( 403.043, 452.191, 79.1118, 0.2964 ) }
    apic_15 { pt3dadd( 402.273, 453.01, 79.2025, 0.316 ) }
    apic_15 { pt3dadd( 401.512, 453.607, 79.242, 0.3472 ) }
    apic_15 { pt3dadd( 400.581, 454.177, 79.1753, 0.4292 ) }
    apic_15 { pt3dadd( 399.589, 454.747, 79.0854, 0.4638 ) }
    apic_15 { pt3dadd( 398.804, 455.371, 79.009, 0.4114 ) }
    apic_15 { pt3dadd( 398.021, 455.645, 78.717, 0.4232 ) }
    apic_15 { pt3dadd( 397.009, 455.757, 78.5064, 0.374 ) }
    apic_15 { pt3dadd( 396.128, 456.312, 78.2356, 0.3998 ) }
    apic_15 { pt3dadd( 395.472, 456.984, 78.0301, 0.3356 ) }
    apic_15 { pt3dadd( 394.71, 457.796, 77.8618, 0.303 ) }
    apic_15 { pt3dadd( 394.103, 458.666, 77.9089, 0.2802 ) }
    apic_15 { pt3dadd( 393.447, 459.341, 78.0444, 0.2852 ) }
    apic_15 { pt3dadd( 392.529, 459.891, 78.1105, 0.2942 ) }
    apic_15 { pt3dadd( 392.0, 460.602, 77.9797, 0.3116 ) }
    apic_15 { pt3dadd( 391.611, 461.362, 78.0528, 0.3392 ) }
    apic_15 { pt3dadd( 391.048, 461.994, 78.0587, 0.4146 ) }
    apic_15 { pt3dadd( 390.188, 462.34, 78.1533, 0.4358 ) }
    apic_15 { pt3dadd( 389.106, 462.614, 78.2396, 0.3652 ) }
    apic_15 { pt3dadd( 388.155, 462.405, 78.4109, 0.3108 ) }
    apic_15 { pt3dadd( 387.189, 462.405, 78.4241, 0.2944 ) }
    apic_15 { pt3dadd( 386.21, 462.111, 78.2863, 0.3124 ) }
    apic_15 { pt3dadd( 385.217, 462.206, 78.162, 0.339 ) }
    apic_15 { pt3dadd( 384.362, 462.509, 78.1858, 0.422 ) }
    apic_15 { pt3dadd( 383.46, 462.91, 78.3317, 0.4132 ) }
    apic_15 { pt3dadd( 382.618, 463.088, 78.4409, 0.4982 ) }
    apic_15 { pt3dadd( 381.809, 463.557, 78.4846, 0.3942 ) }
    apic_15 { pt3dadd( 380.862, 464.17, 78.4916, 0.3274 ) }
    apic_15 { pt3dadd( 379.921, 464.81, 78.4966, 0.2782 ) }
    apic_15 { pt3dadd( 379.579, 465.808, 78.5523, 0.2814 ) }
    apic_15 { pt3dadd( 378.781, 466.324, 78.6313, 0.287 ) }
    apic_15 { pt3dadd( 377.888, 466.785, 78.7396, 0.2988 ) }
    apic_15 { pt3dadd( 377.526, 467.73, 78.897, 0.3142 ) }
    apic_15 { pt3dadd( 376.981, 468.649, 79.0227, 0.3734 ) }
    apic_15 { pt3dadd( 376.919, 469.752, 79.0712, 0.3338 ) }
    apic_15 { pt3dadd( 376.52, 470.786, 79.1367, 0.3 ) }
    apic_15 { pt3dadd( 376.66, 471.814, 79.07, 0.2746 ) }
    apic_15 { pt3dadd( 376.378, 472.66, 79.1389, 0.2746 ) }
    apic_15 { pt3dadd( 376.093, 473.727, 79.1924, 0.2746 ) }
    apic_15 { pt3dadd( 375.457, 474.575, 79.3456, 0.2746 ) }
    apic_15 { pt3dadd( 375.511, 475.436, 79.3456, 0.2744 ) }
    apic_15 { pt3dadd( 375.319, 476.383, 79.4058, 0.2744 ) }
    apic_15 { pt3dadd( 375.1, 477.5, 79.4528, 0.2742 ) }
    apic_15 { pt3dadd( 374.675, 478.313, 79.2921, 0.274 ) }
    apic_15 { pt3dadd( 374.738, 479.341, 79.1958, 0.2736 ) }
    apic_15 { pt3dadd( 374.774, 480.472, 79.1582, 0.2728 ) }
    apic_15 { pt3dadd( 374.667, 481.495, 79.1958, 0.2712 ) }
    apic_15 { pt3dadd( 373.985, 482.411, 79.193, 0.2684 ) }
    apic_15 { pt3dadd( 373.574, 483.451, 79.1224, 0.2626 ) }
    apic_15 { pt3dadd( 372.737, 484.182, 79.0135, 0.2542 ) }
    apic_15 { pt3dadd( 371.794, 484.327, 78.7982, 0.2288 ) }
    apic_15 { pt3dadd( 370.77, 484.255, 78.12, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 90/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 422.492, 447.635, 85.5123, 0.2762 ) }
    apic_8 { pt3dadd( 421.564, 446.652, 86.0398, 0.2774 ) }
    apic_8 { pt3dadd( 421.096, 446.042, 86.7429, 0.2798 ) }
    apic_8 { pt3dadd( 420.953, 445.307, 87.5563, 0.2844 ) }
    apic_8 { pt3dadd( 420.948, 444.24, 88.328, 0.2926 ) }
    apic_8 { pt3dadd( 420.649, 443.305, 88.9823, 0.3094 ) }
    apic_8 { pt3dadd( 420.158, 442.736, 89.588, 0.3336 ) }
    apic_8 { pt3dadd( 419.292, 442.212, 89.8744, 0.4104 ) }
    apic_8 { pt3dadd( 418.408, 441.513, 90.0376, 0.3982 ) }
    apic_8 { pt3dadd( 417.677, 440.655, 90.111, 0.4394 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_8 { pt3dadd( 416.958, 439.953, 90.1905, 0.4348 ) }
    apic_8 { pt3dadd( 416.179, 439.132, 90.281, 0.363 ) }
    apic_8 { pt3dadd( 415.576, 438.173, 90.4445, 0.3068 ) }
    apic_8 { pt3dadd( 414.969, 437.23, 90.6634, 0.287 ) }
    apic_8 { pt3dadd( 414.344, 436.367, 91.0154, 0.2988 ) }
    apic_8 { pt3dadd( 413.77, 435.426, 91.3119, 0.3142 ) }
    apic_8 { pt3dadd( 413.267, 434.833, 91.8246, 0.3734 ) }
    apic_8 { pt3dadd( 413.327, 433.713, 92.3292, 0.3338 ) }
    apic_8 { pt3dadd( 413.037, 433.01, 93.0037, 0.3 ) }
    apic_8 { pt3dadd( 412.339, 432.33, 93.7448, 0.2746 ) }
    apic_8 { pt3dadd( 411.579, 431.695, 94.4138, 0.2746 ) }
    apic_8 { pt3dadd( 411.116, 430.851, 94.7792, 0.2746 ) }
    apic_8 { pt3dadd( 410.46, 429.959, 95.0961, 0.2746 ) }
    apic_8 { pt3dadd( 409.711, 429.286, 95.489, 0.2746 ) }
    apic_8 { pt3dadd( 409.146, 428.546, 95.9269, 0.2748 ) }
    apic_8 { pt3dadd( 409.094, 427.856, 96.6014, 0.275 ) }
    apic_8 { pt3dadd( 409.043, 426.849, 97.2801, 0.2752 ) }
    apic_8 { pt3dadd( 408.777, 425.748, 97.8334, 0.2758 ) }
    apic_8 { pt3dadd( 408.211, 424.797, 98.3304, 0.2768 ) }
    apic_8 { pt3dadd( 407.836, 423.739, 98.7266, 0.2788 ) }
    apic_8 { pt3dadd( 407.421, 423.148, 98.8439, 0.2824 ) }
    apic_8 { pt3dadd( 407.035, 422.24, 98.9744, 0.289 ) }
    apic_8 { pt3dadd( 406.516, 421.34, 99.0934, 0.3024 ) }
    apic_8 { pt3dadd( 405.952, 420.758, 99.4966, 0.321 ) }
    apic_8 { pt3dadd( 405.553, 420.144, 100.184, 0.386 ) }
    apic_8 { pt3dadd( 404.82, 419.861, 101.03, 0.3584 ) }
    apic_8 { pt3dadd( 403.938, 419.625, 101.899, 0.3402 ) }
    apic_8 { pt3dadd( 403.488, 418.674, 102.623, 0.3746 ) }
    apic_8 { pt3dadd( 402.939, 417.951, 102.982, 0.336 ) }
    apic_8 { pt3dadd( 402.688, 417.072, 103.305, 0.3038 ) }
    apic_8 { pt3dadd( 402.574, 416.008, 103.552, 0.2816 ) }
    apic_8 { pt3dadd( 402.345, 414.967, 103.665, 0.2876 ) }
    apic_8 { pt3dadd( 402.345, 414.315, 103.449, 0.2986 ) }
    apic_8 { pt3dadd( 402.214, 413.476, 103.087, 0.32 ) }
    apic_8 { pt3dadd( 401.785, 412.779, 103.101, 0.3548 ) }
    apic_8 { pt3dadd( 401.434, 411.787, 103.146, 0.4434 ) }
    apic_8 { pt3dadd( 400.972, 411.509, 103.307, 0.4898 ) }
    // Section: apic_14, id: apic_14, parent: apic_8 (entry count 37/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 400.972, 411.509, 103.307, 0.4898 ) }
    apic_14 { pt3dadd( 401.099, 411.039, 102.729, 0.4576 ) }
    apic_14 { pt3dadd( 400.568, 409.785, 102.868, 0.4162 ) }
    apic_14 { pt3dadd( 400.148, 408.842, 102.913, 0.4024 ) }
    apic_14 { pt3dadd( 400.057, 408.399, 102.699, 0.479 ) }
    apic_14 { pt3dadd( 400.103, 407.318, 102.546, 0.5828 ) }
    apic_14 { pt3dadd( 399.98, 406.27, 102.347, 0.5028 ) }
    apic_14 { pt3dadd( 399.866, 405.177, 102.218, 0.5328 ) }
    apic_14 { pt3dadd( 399.646, 404.213, 102.238, 0.4108 ) }
    apic_14 { pt3dadd( 399.485, 403.323, 102.116, 0.3592 ) }
    apic_14 { pt3dadd( 399.764, 402.358, 102.04, 0.3318 ) }
    apic_14 { pt3dadd( 400.322, 402.003, 101.759, 0.4072 ) }
    apic_14 { pt3dadd( 400.831, 401.319, 101.414, 0.3912 ) }
    apic_14 { pt3dadd( 401.137, 400.397, 101.0, 0.4318 ) }
    apic_14 { pt3dadd( 401.565, 399.447, 100.707, 0.3954 ) }
    apic_14 { pt3dadd( 402.232, 398.869, 100.628, 0.411 ) }
    apic_14 { pt3dadd( 403.0, 398.313, 100.679, 0.4962 ) }
    apic_14 { pt3dadd( 403.626, 397.722, 100.658, 0.6084 ) }
    apic_14 { pt3dadd( 404.248, 396.835, 100.587, 0.5812 ) }
    apic_14 { pt3dadd( 404.861, 396.049, 100.479, 0.5294 ) }
    apic_14 { pt3dadd( 405.404, 395.491, 100.445, 0.44 ) }
    apic_14 { pt3dadd( 406.443, 395.585, 100.446, 0.4696 ) }
    apic_14 { pt3dadd( 407.263, 394.957, 100.538, 0.4916 ) }
    apic_14 { pt3dadd( 407.826, 394.369, 100.749, 0.4638 ) }
    apic_14 { pt3dadd( 408.378, 393.462, 100.885, 0.5158 ) }
    apic_14 { pt3dadd( 408.71, 392.505, 100.859, 0.568 ) }
    apic_14 { pt3dadd( 409.201, 391.767, 100.841, 0.6506 ) }
    apic_14 { pt3dadd( 409.91, 391.068, 100.922, 0.6442 ) }
    apic_14 { pt3dadd( 410.833, 390.762, 100.817, 0.4904 ) }
    apic_14 { pt3dadd( 411.535, 390.142, 100.683, 0.4368 ) }
    apic_14 { pt3dadd( 412.007, 389.356, 100.46, 0.3572 ) }
    apic_14 { pt3dadd( 412.553, 388.712, 100.46, 0.3426 ) }
    apic_14 { pt3dadd( 413.248, 387.919, 100.421, 0.356 ) }
    apic_14 { pt3dadd( 413.818, 387.175, 100.398, 0.4144 ) }
    apic_14 { pt3dadd( 414.242, 386.293, 100.24, 0.5876 ) }
    apic_14 { pt3dadd( 414.474, 385.384, 99.9314, 0.593 ) }
    apic_14 { pt3dadd( 415.122, 384.824, 99.575, 0.7644 ) }
    apic_14 { pt3dadd( 415.787, 384.498, 99.1441, 0.7566 ) }
    apic_14 { pt3dadd( 416.525, 384.03, 98.6843, 0.72 ) }
    apic_14 { pt3dadd( 417.268, 383.358, 98.4038, 0.5312 ) }
    apic_14 { pt3dadd( 418.096, 382.687, 98.0759, 0.538 ) }
    apic_14 { pt3dadd( 418.776, 381.784, 97.8093, 0.422 ) }
    apic_14 { pt3dadd( 419.249, 381.63, 97.3445, 0.3734 ) }
    apic_14 { pt3dadd( 419.969, 380.937, 97.1138, 0.3888 ) }
    apic_14 { pt3dadd( 420.221, 380.104, 96.971, 0.3636 ) }
    apic_14 { pt3dadd( 420.755, 379.311, 97.0609, 0.3498 ) }
    apic_14 { pt3dadd( 421.135, 378.54, 97.3524, 0.3926 ) }
    apic_14 { pt3dadd( 421.852, 378.067, 97.6312, 0.3692 ) }
    apic_14 { pt3dadd( 421.793, 376.982, 97.9157, 0.3674 ) }
    apic_14 { pt3dadd( 421.908, 376.395, 98.4043, 0.39 ) }
    apic_14 { pt3dadd( 422.384, 375.429, 98.6958, 0.5354 ) }
    apic_14 { pt3dadd( 423.15, 374.794, 98.7521, 0.5306 ) }
    apic_14 { pt3dadd( 423.876, 374.237, 98.6958, 0.4818 ) }
    apic_14 { pt3dadd( 424.846, 374.073, 98.8722, 0.356 ) }
    apic_14 { pt3dadd( 425.955, 374.088, 99.0833, 0.2938 ) }
    apic_14 { pt3dadd( 426.871, 373.863, 99.1253, 0.2626 ) }
    apic_14 { pt3dadd( 427.493, 373.308, 99.4241, 0.2542 ) }
    apic_14 { pt3dadd( 427.704, 372.467, 99.9188, 0.2288 ) }
    apic_14 { pt3dadd( 427.284, 371.457, 100.8, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 96/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 400.972, 411.509, 103.307, 0.4898 ) }
    apic_9 { pt3dadd( 400.092, 411.146, 103.783, 0.4618 ) }
    apic_9 { pt3dadd( 399.427, 410.825, 104.481, 0.506 ) }
    apic_9 { pt3dadd( 398.365, 410.569, 105.072, 0.5782 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_9 { pt3dadd( 397.768, 409.629, 105.499, 0.5308 ) }
    apic_9 { pt3dadd( 397.147, 408.854, 105.956, 0.4094 ) }
    apic_9 { pt3dadd( 396.754, 407.893, 106.284, 0.345 ) }
    apic_9 { pt3dadd( 396.222, 406.97, 106.621, 0.3614 ) }
    apic_9 { pt3dadd( 396.043, 405.977, 107.058, 0.4192 ) }
    apic_9 { pt3dadd( 395.582, 405.367, 107.745, 0.6218 ) }
    apic_9 { pt3dadd( 395.119, 405.15, 108.772, 0.5358 ) }
    apic_9 { pt3dadd( 394.456, 404.397, 109.696, 0.5562 ) }
    apic_9 { pt3dadd( 393.681, 404.243, 110.786, 0.4074 ) }
    apic_9 { pt3dadd( 392.648, 404.349, 111.792, 0.3518 ) }
    apic_9 { pt3dadd( 391.883, 403.811, 112.743, 0.323 ) }
    apic_9 { pt3dadd( 391.51, 403.054, 113.659, 0.3662 ) }
    apic_9 { pt3dadd( 390.645, 402.5, 114.307, 0.4358 ) }
    apic_9 { pt3dadd( 389.654, 402.078, 114.764, 0.616 ) }
    apic_9 { pt3dadd( 388.931, 401.333, 114.975, 0.7014 ) }
    apic_9 { pt3dadd( 388.786, 400.482, 115.269, 0.6946 ) }
    apic_9 { pt3dadd( 388.146, 399.966, 115.287, 0.5674 ) }
    apic_9 { pt3dadd( 387.694, 400.065, 115.552, 0.431 ) }
    apic_9 { pt3dadd( 386.885, 399.896, 115.799, 0.3812 ) }
    apic_9 { pt3dadd( 386.28, 399.145, 115.938, 0.4466 ) }
    apic_9 { pt3dadd( 385.625, 398.638, 116.114, 0.4896 ) }
    apic_9 { pt3dadd( 384.818, 397.978, 116.372, 0.4912 ) }
    apic_9 { pt3dadd( 384.064, 397.721, 116.454, 0.4152 ) }
    apic_9 { pt3dadd( 383.365, 397.376, 116.712, 0.4302 ) }
    apic_9 { pt3dadd( 382.828, 396.679, 117.157, 0.3866 ) }
    apic_9 { pt3dadd( 381.888, 396.578, 117.716, 0.4244 ) }
    apic_9 { pt3dadd( 380.787, 396.349, 118.126, 0.3762 ) }
    apic_9 { pt3dadd( 379.766, 396.266, 118.585, 0.4038 ) }
    apic_9 { pt3dadd( 378.893, 396.109, 119.084, 0.3432 ) }
    apic_9 { pt3dadd( 378.34, 395.564, 119.6, 0.3174 ) }
    apic_9 { pt3dadd( 377.365, 395.206, 119.996, 0.3062 ) }
    apic_9 { pt3dadd( 376.93, 394.333, 120.29, 0.3354 ) }
    apic_9 { pt3dadd( 376.481, 393.536, 120.465, 0.3778 ) }
    apic_9 { pt3dadd( 376.143, 392.862, 120.554, 0.5118 ) }
    apic_9 { pt3dadd( 375.889, 391.97, 120.909, 0.492 ) }
    apic_9 { pt3dadd( 375.703, 391.269, 121.516, 0.3848 ) }
    apic_9 { pt3dadd( 374.939, 391.134, 122.34, 0.3 ) }
    apic_9 { pt3dadd( 374.158, 390.551, 123.108, 0.2746 ) }
    apic_9 { pt3dadd( 373.245, 390.104, 123.682, 0.2746 ) }
    apic_9 { pt3dadd( 372.486, 389.762, 123.957, 0.2748 ) }
    apic_9 { pt3dadd( 372.372, 388.776, 123.932, 0.2748 ) }
    apic_9 { pt3dadd( 371.945, 387.987, 123.97, 0.2752 ) }
    apic_9 { pt3dadd( 371.349, 387.582, 124.262, 0.2758 ) }
    apic_9 { pt3dadd( 370.608, 387.032, 124.515, 0.2766 ) }
    apic_9 { pt3dadd( 370.169, 386.209, 124.676, 0.2786 ) }
    apic_9 { pt3dadd( 369.617, 385.544, 124.731, 0.2818 ) }
    apic_9 { pt3dadd( 369.073, 384.74, 124.968, 0.2882 ) }
    apic_9 { pt3dadd( 368.056, 384.332, 125.17, 0.2994 ) }
    apic_9 { pt3dadd( 367.307, 383.552, 125.385, 0.3228 ) }
    apic_9 { pt3dadd( 366.947, 382.757, 125.873, 0.3536 ) }
    apic_9 { pt3dadd( 366.685, 381.716, 126.342, 0.4722 ) }
    apic_9 { pt3dadd( 366.182, 380.99, 126.941, 0.3932 ) }
    apic_9 { pt3dadd( 365.241, 380.358, 127.332, 0.3254 ) }
    apic_9 { pt3dadd( 364.707, 380.151, 128.044, 0.2746 ) }
    apic_9 { pt3dadd( 364.262, 380.062, 128.734, 0.2746 ) }
    apic_9 { pt3dadd( 364.135, 379.656, 129.281, 0.2746 ) }
    apic_9 { pt3dadd( 363.679, 379.237, 129.827, 0.2746 ) }
    apic_9 { pt3dadd( 363.116, 378.56, 130.553, 0.2746 ) }
    apic_9 { pt3dadd( 362.277, 378.227, 131.448, 0.2746 ) }
    apic_9 { pt3dadd( 361.501, 378.092, 132.46, 0.2746 ) }
    apic_9 { pt3dadd( 360.81, 377.663, 133.412, 0.2746 ) }
    apic_9 { pt3dadd( 360.08, 377.062, 134.253, 0.2746 ) }
    apic_9 { pt3dadd( 359.191, 376.4, 134.874, 0.2748 ) }
    apic_9 { pt3dadd( 358.742, 375.35, 135.249, 0.2748 ) }
    apic_9 { pt3dadd( 358.116, 374.404, 135.444, 0.2752 ) }
    apic_9 { pt3dadd( 357.723, 373.752, 135.35, 0.2756 ) }
    apic_9 { pt3dadd( 356.936, 373.125, 135.131, 0.2766 ) }
    apic_9 { pt3dadd( 356.677, 372.386, 135.262, 0.2782 ) }
    apic_9 { pt3dadd( 355.787, 372.037, 135.353, 0.2814 ) }
    apic_9 { pt3dadd( 355.085, 371.583, 135.604, 0.287 ) }
    apic_9 { pt3dadd( 354.371, 371.084, 135.997, 0.2988 ) }
    apic_9 { pt3dadd( 353.813, 370.274, 136.288, 0.3142 ) }
    apic_9 { pt3dadd( 353.371, 369.443, 136.514, 0.3734 ) }
    apic_9 { pt3dadd( 352.695, 368.665, 136.61, 0.3338 ) }
    apic_9 { pt3dadd( 352.294, 367.717, 136.786, 0.3 ) }
    apic_9 { pt3dadd( 351.621, 367.133, 136.982, 0.2746 ) }
    apic_9 { pt3dadd( 350.939, 366.635, 136.926, 0.2746 ) }
    apic_9 { pt3dadd( 350.499, 365.78, 136.922, 0.2746 ) }
    apic_9 { pt3dadd( 350.031, 364.803, 136.924, 0.2748 ) }
    apic_9 { pt3dadd( 349.63, 363.916, 137.059, 0.2748 ) }
    apic_9 { pt3dadd( 349.458, 362.929, 137.204, 0.2752 ) }
    apic_9 { pt3dadd( 348.711, 362.304, 137.488, 0.2756 ) }
    apic_9 { pt3dadd( 348.335, 361.682, 138.061, 0.2766 ) }
    apic_9 { pt3dadd( 347.77, 360.806, 138.609, 0.2782 ) }
    apic_9 { pt3dadd( 347.755, 360.36, 138.817, 0.2814 ) }
    apic_9 { pt3dadd( 346.611, 359.942, 138.948, 0.287 ) }
    apic_9 { pt3dadd( 346.042, 359.034, 139.062, 0.2988 ) }
    apic_9 { pt3dadd( 345.366, 358.28, 139.143, 0.3142 ) }
    apic_9 { pt3dadd( 344.543, 357.682, 139.281, 0.3734 ) }
    apic_9 { pt3dadd( 343.71, 357.034, 139.429, 0.3338 ) }
    apic_9 { pt3dadd( 342.826, 356.34, 139.668, 0.3 ) }
    apic_9 { pt3dadd( 342.236, 355.46, 139.948, 0.2746 ) }
    apic_9 { pt3dadd( 341.745, 354.513, 140.266, 0.2746 ) }
    apic_9 { pt3dadd( 341.148, 353.766, 140.675, 0.2746 ) }
    apic_9 { pt3dadd( 340.392, 353.046, 141.069, 0.2746 ) }
    apic_9 { pt3dadd( 339.259, 352.994, 141.426, 0.2746 ) }
    apic_9 { pt3dadd( 338.743, 352.131, 141.819, 0.2746 ) }
    apic_9 { pt3dadd( 338.402, 351.42, 142.31, 0.2746 ) }
    apic_9 { pt3dadd( 337.755, 350.666, 142.852, 0.2746 ) }
    apic_9 { pt3dadd( 337.138, 349.914, 143.132, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_9 { pt3dadd( 336.692, 349.022, 143.482, 0.2748 ) }
    apic_9 { pt3dadd( 336.222, 348.374, 143.63, 0.2748 ) }
    apic_9 { pt3dadd( 335.997, 347.487, 143.861, 0.2752 ) }
    apic_9 { pt3dadd( 335.878, 346.537, 144.073, 0.2756 ) }
    apic_9 { pt3dadd( 335.473, 345.576, 144.212, 0.2766 ) }
    apic_9 { pt3dadd( 334.904, 344.64, 144.244, 0.2782 ) }
    apic_9 { pt3dadd( 334.135, 343.894, 144.333, 0.2814 ) }
    apic_9 { pt3dadd( 333.134, 343.663, 144.398, 0.287 ) }
    apic_9 { pt3dadd( 332.6, 342.729, 144.426, 0.2988 ) }
    apic_9 { pt3dadd( 331.99, 341.777, 144.437, 0.3142 ) }
    apic_9 { pt3dadd( 331.262, 340.905, 144.446, 0.3734 ) }
    apic_9 { pt3dadd( 330.365, 340.214, 144.488, 0.3338 ) }
    apic_9 { pt3dadd( 329.582, 339.536, 144.427, 0.3 ) }
    apic_9 { pt3dadd( 329.029, 338.654, 144.55, 0.2746 ) }
    apic_9 { pt3dadd( 328.366, 337.91, 144.872, 0.2746 ) }
    apic_9 { pt3dadd( 327.445, 337.371, 145.212, 0.2746 ) }
    apic_9 { pt3dadd( 326.531, 336.774, 145.51, 0.2746 ) }
    apic_9 { pt3dadd( 325.809, 336.041, 145.809, 0.2746 ) }
    apic_9 { pt3dadd( 325.145, 335.36, 146.099, 0.2746 ) }
    apic_9 { pt3dadd( 324.832, 334.28, 146.323, 0.2746 ) }
    apic_9 { pt3dadd( 324.34, 333.362, 146.553, 0.2746 ) }
    apic_9 { pt3dadd( 323.62, 332.874, 146.707, 0.2746 ) }
    apic_9 { pt3dadd( 322.804, 332.152, 146.948, 0.2746 ) }
    apic_9 { pt3dadd( 322.244, 331.355, 147.339, 0.2746 ) }
    apic_9 { pt3dadd( 321.863, 330.707, 147.848, 0.2746 ) }
    apic_9 { pt3dadd( 321.132, 330.029, 148.4, 0.2746 ) }
    apic_9 { pt3dadd( 320.879, 329.586, 149.194, 0.2746 ) }
    apic_9 { pt3dadd( 320.138, 329.014, 149.776, 0.2746 ) }
    apic_9 { pt3dadd( 319.314, 328.606, 150.089, 0.2746 ) }
    apic_9 { pt3dadd( 318.27, 328.251, 150.314, 0.2746 ) }
    apic_9 { pt3dadd( 317.138, 328.161, 150.453, 0.2746 ) }
    apic_9 { pt3dadd( 316.068, 327.985, 150.609, 0.2746 ) }
    apic_9 { pt3dadd( 315.396, 327.494, 150.896, 0.2746 ) }
    apic_9 { pt3dadd( 314.721, 326.884, 151.349, 0.2746 ) }
    apic_9 { pt3dadd( 314.172, 326.128, 151.82, 0.2746 ) }
    apic_9 { pt3dadd( 313.914, 325.431, 152.271, 0.2746 ) }
    apic_9 { pt3dadd( 313.767, 324.565, 152.714, 0.2746 ) }
    apic_9 { pt3dadd( 313.342, 323.68, 152.986, 0.2746 ) }
    apic_9 { pt3dadd( 313.037, 322.801, 153.295, 0.2748 ) }
    apic_9 { pt3dadd( 312.669, 322.265, 153.26, 0.275 ) }
    apic_9 { pt3dadd( 312.457, 321.758, 152.963, 0.2752 ) }
    apic_9 { pt3dadd( 311.883, 321.342, 152.855, 0.276 ) }
    apic_9 { pt3dadd( 311.494, 320.592, 152.881, 0.277 ) }
    apic_9 { pt3dadd( 310.783, 319.971, 152.84, 0.2792 ) }
    apic_9 { pt3dadd( 309.917, 319.616, 152.913, 0.2832 ) }
    apic_9 { pt3dadd( 309.621, 319.857, 153.367, 0.2906 ) }
    apic_9 { pt3dadd( 308.986, 319.452, 153.974, 0.3036 ) }
    apic_9 { pt3dadd( 308.422, 319.086, 154.563, 0.3308 ) }
    apic_9 { pt3dadd( 308.079, 318.625, 155.231, 0.368 ) }
    apic_9 { pt3dadd( 307.965, 317.642, 155.63, 0.5002 ) }
    apic_9 { pt3dadd( 307.737, 316.661, 156.024, 0.4396 ) }
    apic_9 { pt3dadd( 307.84, 315.619, 156.203, 0.4368 ) }
    apic_9 { pt3dadd( 307.85, 314.65, 156.138, 0.357 ) }
    apic_9 { pt3dadd( 307.85, 313.79, 156.373, 0.344 ) }
    apic_9 { pt3dadd( 307.85, 312.948, 156.85, 0.3506 ) }
    apic_9 { pt3dadd( 307.348, 312.008, 157.289, 0.4432 ) }
    apic_9 { pt3dadd( 306.542, 311.241, 157.616, 0.4536 ) }
    apic_9 { pt3dadd( 305.906, 310.469, 157.972, 0.5678 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 58/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 305.906, 310.469, 157.972, 0.5678 ) }
    apic_13 { pt3dadd( 305.591, 309.906, 157.457, 0.2288 ) }
    apic_13 { pt3dadd( 305.19, 309.281, 157.11, 0.41 ) }
    apic_13 { pt3dadd( 305.086, 308.497, 157.101, 0.3976 ) }
    apic_13 { pt3dadd( 305.017, 307.422, 157.18, 0.4384 ) }
    apic_13 { pt3dadd( 305.132, 306.462, 157.333, 0.4328 ) }
    apic_13 { pt3dadd( 305.443, 305.629, 157.26, 0.3594 ) }
    apic_13 { pt3dadd( 304.875, 304.722, 157.209, 0.3 ) }
    apic_13 { pt3dadd( 304.248, 303.82, 157.125, 0.2746 ) }
    apic_13 { pt3dadd( 303.681, 303.587, 156.756, 0.2746 ) }
    apic_13 { pt3dadd( 303.448, 302.739, 156.676, 0.2746 ) }
    apic_13 { pt3dadd( 303.645, 301.888, 156.715, 0.2746 ) }
    apic_13 { pt3dadd( 303.516, 301.215, 156.566, 0.2746 ) }
    apic_13 { pt3dadd( 303.043, 300.446, 156.46, 0.2746 ) }
    apic_13 { pt3dadd( 302.931, 299.383, 156.534, 0.2746 ) }
    apic_13 { pt3dadd( 302.82, 298.478, 156.779, 0.2746 ) }
    apic_13 { pt3dadd( 302.132, 297.783, 156.8, 0.2746 ) }
    apic_13 { pt3dadd( 301.68, 297.488, 156.621, 0.2746 ) }
    apic_13 { pt3dadd( 301.003, 296.686, 156.516, 0.2746 ) }
    apic_13 { pt3dadd( 300.323, 296.067, 156.307, 0.2746 ) }
    apic_13 { pt3dadd( 299.331, 295.706, 156.16, 0.2746 ) }
    apic_13 { pt3dadd( 298.228, 295.495, 156.059, 0.2746 ) }
    apic_13 { pt3dadd( 297.279, 295.266, 155.864, 0.2746 ) }
    apic_13 { pt3dadd( 296.145, 295.266, 155.748, 0.2748 ) }
    apic_13 { pt3dadd( 295.059, 295.511, 155.611, 0.275 ) }
    apic_13 { pt3dadd( 294.126, 295.84, 155.389, 0.2754 ) }
    apic_13 { pt3dadd( 293.118, 295.953, 155.135, 0.276 ) }
    apic_13 { pt3dadd( 292.105, 296.176, 154.96, 0.2772 ) }
    apic_13 { pt3dadd( 291.212, 296.389, 154.71, 0.2794 ) }
    apic_13 { pt3dadd( 290.517, 296.866, 154.312, 0.2836 ) }
    apic_13 { pt3dadd( 289.401, 297.035, 154.023, 0.291 ) }
    apic_13 { pt3dadd( 288.395, 297.211, 153.837, 0.306 ) }
    apic_13 { pt3dadd( 287.397, 297.211, 153.638, 0.3278 ) }
    apic_13 { pt3dadd( 286.556, 297.175, 153.673, 0.3986 ) }
    apic_13 { pt3dadd( 285.755, 297.618, 153.819, 0.3814 ) }
    apic_13 { pt3dadd( 284.941, 298.086, 153.968, 0.3836 ) }
    apic_13 { pt3dadd( 284.255, 298.612, 154.074, 0.4506 ) }
    apic_13 { pt3dadd( 283.283, 298.727, 154.123, 0.4984 ) }
    apic_13 { pt3dadd( 282.402, 299.312, 154.161, 0.5014 ) }
    apic_13 { pt3dadd( 281.564, 299.156, 153.913, 0.465 ) }
    apic_13 { pt3dadd( 280.646, 299.608, 153.664, 0.3718 ) }
    apic_13 { pt3dadd( 279.848, 299.987, 153.551, 0.3242 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_13 { pt3dadd( 279.392, 300.745, 153.284, 0.3142 ) }
    apic_13 { pt3dadd( 278.294, 300.665, 153.08, 0.3734 ) }
    apic_13 { pt3dadd( 277.526, 301.213, 152.92, 0.3338 ) }
    apic_13 { pt3dadd( 276.671, 301.434, 152.608, 0.3 ) }
    apic_13 { pt3dadd( 275.828, 302.01, 152.181, 0.2746 ) }
    apic_13 { pt3dadd( 274.883, 302.245, 151.759, 0.2746 ) }
    apic_13 { pt3dadd( 274.451, 301.65, 151.308, 0.2746 ) }
    apic_13 { pt3dadd( 273.642, 300.922, 151.051, 0.2746 ) }
    apic_13 { pt3dadd( 273.266, 300.075, 150.967, 0.2748 ) }
    apic_13 { pt3dadd( 273.28, 299.207, 151.038, 0.275 ) }
    apic_13 { pt3dadd( 273.207, 298.657, 150.838, 0.2752 ) }
    apic_13 { pt3dadd( 273.374, 297.993, 150.977, 0.2758 ) }
    apic_13 { pt3dadd( 273.415, 297.056, 151.167, 0.2768 ) }
    apic_13 { pt3dadd( 272.99, 296.684, 151.619, 0.2786 ) }
    apic_13 { pt3dadd( 273.123, 295.586, 151.997, 0.2822 ) }
    apic_13 { pt3dadd( 273.188, 294.453, 152.265, 0.2888 ) }
    apic_13 { pt3dadd( 273.188, 293.33, 152.423, 0.3006 ) }
    apic_13 { pt3dadd( 272.757, 292.506, 152.298, 0.3236 ) }
    apic_13 { pt3dadd( 272.224, 291.734, 151.992, 0.3624 ) }
    apic_13 { pt3dadd( 271.361, 291.068, 151.617, 0.4524 ) }
    apic_13 { pt3dadd( 270.46, 290.852, 151.477, 0.5314 ) }
    apic_13 { pt3dadd( 269.505, 290.6, 151.446, 0.418 ) }
    apic_13 { pt3dadd( 268.819, 289.888, 151.262, 0.3244 ) }
    apic_13 { pt3dadd( 268.322, 289.148, 151.251, 0.2728 ) }
    apic_13 { pt3dadd( 268.036, 288.408, 151.074, 0.2712 ) }
    apic_13 { pt3dadd( 267.757, 287.613, 150.772, 0.2684 ) }
    apic_13 { pt3dadd( 267.702, 286.839, 150.238, 0.2626 ) }
    apic_13 { pt3dadd( 268.039, 285.876, 149.92, 0.2542 ) }
    apic_13 { pt3dadd( 267.993, 284.882, 149.774, 0.2288 ) }
    apic_13 { pt3dadd( 267.81, 283.826, 150.08, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 30/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 305.906, 310.469, 157.972, 0.5678 ) }
    apic_10 { pt3dadd( 305.58, 309.91, 158.186, 0.5496 ) }
    apic_10 { pt3dadd( 305.202, 309.354, 158.11, 0.4866 ) }
    apic_10 { pt3dadd( 304.658, 308.419, 158.178, 0.5122 ) }
    apic_10 { pt3dadd( 304.299, 307.722, 158.605, 0.554 ) }
    apic_10 { pt3dadd( 303.529, 307.024, 159.104, 0.6606 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 36/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 303.529, 307.024, 159.104, 0.6606 ) }
    apic_12 { pt3dadd( 303.079, 306.749, 160.103, 0.4576 ) }
    apic_12 { pt3dadd( 302.095, 306.336, 158.995, 0.3622 ) }
    apic_12 { pt3dadd( 301.04, 306.006, 158.561, 0.3052 ) }
    apic_12 { pt3dadd( 299.981, 305.887, 158.021, 0.2844 ) }
    apic_12 { pt3dadd( 299.811, 305.378, 157.235, 0.2928 ) }
    apic_12 { pt3dadd( 299.106, 305.003, 156.334, 0.3078 ) }
    apic_12 { pt3dadd( 298.336, 304.989, 155.691, 0.3384 ) }
    apic_12 { pt3dadd( 297.404, 305.212, 155.387, 0.382 ) }
    apic_12 { pt3dadd( 296.41, 305.105, 155.002, 0.527 ) }
    apic_12 { pt3dadd( 294.987, 304.799, 154.564, 0.4842 ) }
    apic_12 { pt3dadd( 293.374, 304.972, 154.267, 0.5454 ) }
    apic_12 { pt3dadd( 292.352, 304.876, 153.959, 0.434 ) }
    apic_12 { pt3dadd( 291.435, 305.223, 153.786, 0.403 ) }
    apic_12 { pt3dadd( 290.595, 305.9, 153.598, 0.4084 ) }
    apic_12 { pt3dadd( 289.797, 306.414, 153.395, 0.571 ) }
    apic_12 { pt3dadd( 289.113, 306.989, 153.031, 0.591 ) }
    apic_12 { pt3dadd( 288.346, 307.474, 152.576, 0.62 ) }
    apic_12 { pt3dadd( 287.615, 307.659, 152.491, 0.484 ) }
    apic_12 { pt3dadd( 286.818, 307.85, 152.362, 0.4668 ) }
    apic_12 { pt3dadd( 286.041, 308.041, 151.924, 0.4384 ) }
    apic_12 { pt3dadd( 285.414, 308.181, 151.349, 0.3698 ) }
    apic_12 { pt3dadd( 284.605, 308.422, 151.038, 0.3192 ) }
    apic_12 { pt3dadd( 283.942, 308.422, 150.52, 0.3112 ) }
    apic_12 { pt3dadd( 283.091, 308.392, 149.786, 0.3382 ) }
    apic_12 { pt3dadd( 282.022, 308.194, 149.238, 0.413 ) }
    apic_12 { pt3dadd( 281.106, 308.419, 148.693, 0.4328 ) }
    apic_12 { pt3dadd( 280.177, 308.257, 148.081, 0.3594 ) }
    apic_12 { pt3dadd( 279.301, 307.77, 147.652, 0.3002 ) }
    apic_12 { pt3dadd( 278.858, 307.501, 147.636, 0.2748 ) }
    apic_12 { pt3dadd( 277.954, 307.266, 147.688, 0.2752 ) }
    apic_12 { pt3dadd( 277.384, 306.864, 147.423, 0.2758 ) }
    apic_12 { pt3dadd( 276.734, 306.425, 146.944, 0.2768 ) }
    apic_12 { pt3dadd( 275.942, 306.275, 146.467, 0.2786 ) }
    apic_12 { pt3dadd( 275.607, 305.667, 145.867, 0.282 ) }
    apic_12 { pt3dadd( 275.094, 304.908, 145.477, 0.2884 ) }
    apic_12 { pt3dadd( 274.145, 304.397, 145.119, 0.2998 ) }
    apic_12 { pt3dadd( 274.447, 303.961, 144.667, 0.3234 ) }
    apic_12 { pt3dadd( 274.339, 303.19, 144.086, 0.3546 ) }
    apic_12 { pt3dadd( 273.757, 302.356, 143.597, 0.474 ) }
    apic_12 { pt3dadd( 273.039, 302.006, 143.172, 0.3962 ) }
    apic_12 { pt3dadd( 272.486, 301.368, 142.614, 0.331 ) }
    apic_12 { pt3dadd( 272.043, 300.857, 142.112, 0.285 ) }
    apic_12 { pt3dadd( 271.482, 300.127, 141.942, 0.2938 ) }
    apic_12 { pt3dadd( 270.918, 299.355, 141.694, 0.3112 ) }
    apic_12 { pt3dadd( 270.194, 298.68, 141.403, 0.3384 ) }
    apic_12 { pt3dadd( 269.544, 297.838, 141.121, 0.413 ) }
    apic_12 { pt3dadd( 268.563, 297.58, 140.723, 0.4328 ) }
    apic_12 { pt3dadd( 267.665, 297.326, 140.253, 0.3596 ) }
    apic_12 { pt3dadd( 267.01, 296.994, 139.779, 0.3004 ) }
    apic_12 { pt3dadd( 266.483, 296.299, 139.388, 0.2754 ) }
    apic_12 { pt3dadd( 265.887, 295.905, 138.863, 0.2762 ) }
    apic_12 { pt3dadd( 265.322, 295.139, 138.554, 0.2776 ) }
    apic_12 { pt3dadd( 265.431, 294.542, 138.456, 0.2804 ) }
    apic_12 { pt3dadd( 264.716, 293.969, 138.169, 0.2852 ) }
    apic_12 { pt3dadd( 264.156, 293.139, 137.679, 0.2942 ) }
    apic_12 { pt3dadd( 263.882, 292.462, 136.923, 0.3118 ) }
    apic_12 { pt3dadd( 263.564, 291.618, 136.124, 0.3396 ) }
    apic_12 { pt3dadd( 263.113, 290.737, 135.403, 0.4154 ) }
    apic_12 { pt3dadd( 263.129, 289.824, 134.704, 0.4374 ) }
    apic_12 { pt3dadd( 263.43, 288.811, 134.169, 0.3676 ) }
    apic_12 { pt3dadd( 263.69, 287.781, 133.645, 0.3164 ) }
    apic_12 { pt3dadd( 263.48, 286.811, 133.1, 0.2994 ) }
    apic_12 { pt3dadd( 263.779, 285.772, 132.721, 0.3474 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_12 { pt3dadd( 264.116, 284.734, 132.406, 0.2796 ) }
    apic_12 { pt3dadd( 263.921, 283.941, 131.6, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 2/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 303.529, 307.024, 159.104, 0.6606 ) }
    apic_11 { pt3dadd( 303.051, 306.592, 159.825, 0.4868 ) }
    apic_11 { pt3dadd( 302.108, 306.204, 160.464, 0.3672 ) }
    apic_11 { pt3dadd( 301.089, 305.901, 160.915, 0.3046 ) }
    apic_11 { pt3dadd( 300.212, 305.358, 161.258, 0.3324 ) }
    apic_11 { pt3dadd( 299.426, 304.813, 161.327, 0.3712 ) }
    apic_11 { pt3dadd( 298.71, 304.305, 161.314, 0.5044 ) }
    apic_11 { pt3dadd( 297.567, 303.616, 161.887, 0.43 ) }
    apic_11 { pt3dadd( 296.635, 303.075, 162.119, 0.5144 ) }
    apic_11 { pt3dadd( 295.953, 302.321, 162.306, 0.4968 ) }
    apic_11 { pt3dadd( 295.41, 301.487, 162.448, 0.3934 ) }
    apic_11 { pt3dadd( 295.382, 300.458, 162.737, 0.3162 ) }
    apic_11 { pt3dadd( 295.471, 299.532, 163.191, 0.3044 ) }
    apic_11 { pt3dadd( 294.71, 298.897, 163.677, 0.3306 ) }
    apic_11 { pt3dadd( 293.733, 298.343, 164.137, 0.3752 ) }
    apic_11 { pt3dadd( 293.0, 297.701, 164.686, 0.4762 ) }
    apic_11 { pt3dadd( 292.179, 297.374, 165.381, 0.5762 ) }
    apic_11 { pt3dadd( 291.142, 297.28, 166.009, 0.4974 ) }
    apic_11 { pt3dadd( 290.158, 297.337, 166.323, 0.4914 ) }
    apic_11 { pt3dadd( 289.424, 297.135, 166.748, 0.4846 ) }
    apic_11 { pt3dadd( 288.623, 296.325, 167.017, 0.4524 ) }
    apic_11 { pt3dadd( 288.052, 295.61, 167.045, 0.4876 ) }
    apic_11 { pt3dadd( 287.425, 295.471, 166.767, 0.5496 ) }
    apic_11 { pt3dadd( 286.909, 295.232, 166.429, 0.4514 ) }
    apic_11 { pt3dadd( 285.997, 294.746, 166.273, 0.3886 ) }
    apic_11 { pt3dadd( 285.546, 294.636, 166.558, 0.3808 ) }
    apic_11 { pt3dadd( 284.753, 294.008, 166.918, 0.524 ) }
    apic_11 { pt3dadd( 284.194, 293.306, 167.396, 0.4832 ) }
    apic_11 { pt3dadd( 283.44, 292.698, 167.958, 0.521 ) }
    apic_11 { pt3dadd( 282.522, 292.167, 168.577, 0.497 ) }
    apic_11 { pt3dadd( 281.49, 291.715, 169.084, 0.6808 ) }
    apic_11 { pt3dadd( 280.617, 291.258, 169.418, 0.6002 ) }
    apic_11 { pt3dadd( 279.993, 290.938, 169.976, 0.6664 ) }
    apic_11 { pt3dadd( 279.337, 290.356, 170.55, 0.6572 ) }
    apic_11 { pt3dadd( 278.988, 289.89, 171.386, 0.5946 ) }
    apic_11 { pt3dadd( 278.557, 289.286, 172.318, 0.47 ) }
    apic_11 { pt3dadd( 278.232, 288.397, 173.189, 0.5094 ) }
    apic_11 { pt3dadd( 278.052, 287.827, 174.077, 0.4146 ) }
    apic_11 { pt3dadd( 277.695, 287.308, 174.343, 0.3662 ) }
    apic_11 { pt3dadd( 277.203, 286.951, 174.267, 0.345 ) }
    apic_11 { pt3dadd( 276.647, 286.458, 174.136, 0.4314 ) }
    apic_11 { pt3dadd( 275.684, 285.992, 173.9, 0.437 ) }
    apic_11 { pt3dadd( 274.807, 285.444, 173.736, 0.5132 ) }
    apic_11 { pt3dadd( 274.003, 285.087, 173.773, 0.563 ) }
    apic_11 { pt3dadd( 273.497, 284.354, 174.036, 0.6414 ) }
    apic_11 { pt3dadd( 273.41, 283.622, 174.586, 0.626 ) }
    apic_11 { pt3dadd( 273.715, 283.046, 175.32, 0.4618 ) }
    apic_11 { pt3dadd( 273.313, 282.023, 175.991, 0.3596 ) }
    apic_11 { pt3dadd( 273.029, 281.127, 176.401, 0.3328 ) }
    apic_11 { pt3dadd( 272.319, 280.453, 176.781, 0.4074 ) }
    apic_11 { pt3dadd( 271.643, 279.732, 177.113, 0.3992 ) }
    apic_11 { pt3dadd( 270.768, 279.122, 177.432, 0.4104 ) }
    apic_11 { pt3dadd( 270.005, 278.575, 177.708, 0.531 ) }
    apic_11 { pt3dadd( 269.517, 277.666, 177.743, 0.499 ) }
    apic_11 { pt3dadd( 268.81, 276.968, 177.769, 0.536 ) }
    apic_11 { pt3dadd( 267.943, 276.371, 177.792, 0.5944 ) }
    apic_11 { pt3dadd( 267.147, 275.797, 177.669, 0.5246 ) }
    apic_11 { pt3dadd( 266.335, 275.074, 177.576, 0.5738 ) }
    apic_11 { pt3dadd( 265.775, 274.304, 177.714, 0.4826 ) }
    apic_11 { pt3dadd( 264.939, 273.759, 177.784, 0.5124 ) }
    apic_11 { pt3dadd( 263.987, 273.574, 177.896, 0.5184 ) }
    apic_11 { pt3dadd( 262.879, 273.715, 178.037, 0.5394 ) }
    apic_11 { pt3dadd( 262.124, 273.646, 178.019, 0.5312 ) }
    apic_11 { pt3dadd( 261.404, 273.533, 178.324, 0.5148 ) }
    apic_11 { pt3dadd( 260.832, 272.986, 178.781, 0.4908 ) }
    apic_11 { pt3dadd( 260.253, 272.2, 179.193, 0.4146 ) }
    apic_11 { pt3dadd( 259.977, 271.194, 179.597, 0.4276 ) }
    apic_11 { pt3dadd( 259.802, 270.102, 179.917, 0.3894 ) }
    apic_11 { pt3dadd( 259.305, 269.325, 180.24, 0.3924 ) }
    apic_11 { pt3dadd( 258.471, 268.603, 180.527, 0.4966 ) }
    apic_11 { pt3dadd( 257.581, 268.348, 180.592, 0.4394 ) }
    apic_11 { pt3dadd( 256.607, 268.003, 180.644, 0.4066 ) }
    apic_11 { pt3dadd( 256.225, 267.425, 181.018, 0.4464 ) }
    apic_11 { pt3dadd( 255.398, 266.907, 181.386, 0.4892 ) }
    apic_11 { pt3dadd( 254.776, 266.48, 181.8, 0.4906 ) }
    apic_11 { pt3dadd( 254.769, 265.444, 182.218, 0.4142 ) }
    apic_11 { pt3dadd( 254.883, 264.336, 182.508, 0.4268 ) }
    apic_11 { pt3dadd( 255.081, 263.443, 182.841, 0.388 ) }
    apic_11 { pt3dadd( 254.883, 262.661, 182.827, 0.3898 ) }
    apic_11 { pt3dadd( 254.758, 261.617, 182.903, 0.4918 ) }
    apic_11 { pt3dadd( 254.456, 260.989, 183.195, 0.4304 ) }
    apic_11 { pt3dadd( 254.37, 260.273, 183.236, 0.3902 ) }
    apic_11 { pt3dadd( 253.716, 259.611, 183.184, 0.415 ) }
    apic_11 { pt3dadd( 253.006, 258.871, 183.278, 0.4364 ) }
    apic_11 { pt3dadd( 252.425, 257.993, 183.541, 0.3662 ) }
    apic_11 { pt3dadd( 251.622, 257.233, 183.843, 0.3124 ) }
    apic_11 { pt3dadd( 250.801, 256.526, 184.096, 0.2988 ) }
    apic_11 { pt3dadd( 250.536, 255.502, 184.426, 0.3142 ) }
    apic_11 { pt3dadd( 249.989, 254.858, 184.873, 0.3734 ) }
    apic_11 { pt3dadd( 249.608, 254.654, 185.225, 0.3338 ) }
    apic_11 { pt3dadd( 248.539, 254.074, 185.422, 0.3 ) }
    apic_11 { pt3dadd( 247.675, 253.403, 185.574, 0.2746 ) }
    apic_11 { pt3dadd( 246.746, 252.879, 185.659, 0.2746 ) }
    apic_11 { pt3dadd( 245.745, 252.595, 185.63, 0.2746 ) }
    apic_11 { pt3dadd( 244.781, 252.074, 185.574, 0.2746 ) }
    apic_11 { pt3dadd( 243.933, 251.451, 185.504, 0.2746 ) }
    apic_11 { pt3dadd( 242.872, 251.109, 185.356, 0.2746 ) }
    apic_11 { pt3dadd( 242.83, 250.034, 185.217, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_11 { pt3dadd( 242.986, 249.057, 185.021, 0.2746 ) }
    apic_11 { pt3dadd( 243.016, 248.248, 184.638, 0.2746 ) }
    apic_11 { pt3dadd( 243.486, 248.104, 184.03, 0.2746 ) }
    apic_11 { pt3dadd( 243.318, 247.156, 183.503, 0.2746 ) }
    apic_11 { pt3dadd( 243.045, 246.181, 183.12, 0.2746 ) }
    apic_11 { pt3dadd( 242.39, 245.751, 182.943, 0.2746 ) }
    apic_11 { pt3dadd( 241.54, 245.131, 182.695, 0.2746 ) }
    apic_11 { pt3dadd( 240.773, 244.698, 182.629, 0.2746 ) }
    apic_11 { pt3dadd( 240.121, 243.886, 182.517, 0.2748 ) }
    apic_11 { pt3dadd( 239.84, 243.214, 182.092, 0.275 ) }
    apic_11 { pt3dadd( 238.863, 242.833, 181.827, 0.2752 ) }
    apic_11 { pt3dadd( 238.159, 242.003, 181.625, 0.2758 ) }
    apic_11 { pt3dadd( 237.468, 241.41, 181.301, 0.2768 ) }
    apic_11 { pt3dadd( 236.559, 241.114, 180.769, 0.2788 ) }
    apic_11 { pt3dadd( 235.704, 240.677, 180.364, 0.2824 ) }
    apic_11 { pt3dadd( 235.438, 240.217, 179.626, 0.2888 ) }
    apic_11 { pt3dadd( 234.991, 239.581, 178.645, 0.302 ) }
    apic_11 { pt3dadd( 234.481, 238.674, 177.734, 0.32 ) }
    apic_11 { pt3dadd( 234.126, 237.655, 176.905, 0.3846 ) }
    apic_11 { pt3dadd( 233.818, 236.723, 176.367, 0.3544 ) }
    apic_11 { pt3dadd( 233.055, 236.189, 176.0, 0.3388 ) }
    apic_11 { pt3dadd( 232.882, 235.906, 175.319, 0.3422 ) }
    apic_11 { pt3dadd( 232.007, 235.645, 174.755, 0.4204 ) }
    apic_11 { pt3dadd( 232.011, 234.732, 174.053, 0.4462 ) }
    apic_11 { pt3dadd( 232.59, 234.072, 173.578, 0.3854 ) }
    apic_11 { pt3dadd( 233.012, 233.736, 172.968, 0.3432 ) }
    apic_11 { pt3dadd( 233.89, 233.395, 171.249, 0.3462 ) }
    apic_11 { pt3dadd( 234.51, 233.343, 170.389, 0.3228 ) }
    apic_11 { pt3dadd( 235.216, 232.721, 169.775, 0.3176 ) }
    apic_11 { pt3dadd( 235.181, 231.774, 169.318, 0.3502 ) }
    apic_11 { pt3dadd( 234.978, 231.104, 168.85, 0.4348 ) }
    apic_11 { pt3dadd( 234.749, 230.402, 168.553, 0.4742 ) }
    apic_11 { pt3dadd( 234.704, 229.632, 168.342, 0.4306 ) }
    apic_11 { pt3dadd( 234.464, 228.587, 168.176, 0.4596 ) }
    apic_11 { pt3dadd( 235.131, 227.99, 167.957, 0.4372 ) }
    apic_11 { pt3dadd( 235.966, 227.409, 167.491, 0.5372 ) }
    apic_11 { pt3dadd( 236.423, 227.084, 166.699, 0.492 ) }
    apic_11 { pt3dadd( 237.0, 226.668, 165.705, 0.3848 ) }
    apic_11 { pt3dadd( 237.38, 226.617, 164.549, 0.3 ) }
    apic_11 { pt3dadd( 237.399, 225.716, 163.806, 0.2746 ) }
    apic_11 { pt3dadd( 237.714, 224.907, 163.54, 0.2746 ) }
    apic_11 { pt3dadd( 238.037, 224.273, 163.61, 0.2746 ) }
    apic_11 { pt3dadd( 238.824, 223.723, 163.547, 0.2746 ) }
    apic_11 { pt3dadd( 239.161, 222.823, 163.377, 0.2748 ) }
    apic_11 { pt3dadd( 239.103, 221.835, 163.123, 0.2748 ) }
    apic_11 { pt3dadd( 239.878, 221.226, 162.631, 0.2752 ) }
    apic_11 { pt3dadd( 240.121, 220.498, 161.874, 0.2756 ) }
    apic_11 { pt3dadd( 240.436, 219.522, 161.086, 0.2766 ) }
    apic_11 { pt3dadd( 241.127, 218.704, 160.484, 0.2782 ) }
    apic_11 { pt3dadd( 240.985, 218.011, 159.715, 0.2814 ) }
    apic_11 { pt3dadd( 241.353, 217.177, 158.966, 0.2872 ) }
    apic_11 { pt3dadd( 241.27, 216.144, 158.42, 0.299 ) }
    apic_11 { pt3dadd( 241.613, 215.662, 157.849, 0.3148 ) }
    apic_11 { pt3dadd( 241.948, 214.657, 157.443, 0.3746 ) }
    apic_11 { pt3dadd( 242.974, 214.287, 157.159, 0.3362 ) }
    apic_11 { pt3dadd( 242.506, 213.994, 157.15, 0.3042 ) }
    apic_11 { pt3dadd( 242.544, 213.136, 157.281, 0.2822 ) }
    apic_11 { pt3dadd( 242.789, 212.383, 157.12, 0.2888 ) }
    apic_11 { pt3dadd( 243.279, 211.863, 156.787, 0.3008 ) }
    apic_11 { pt3dadd( 243.637, 211.411, 156.115, 0.324 ) }
    apic_11 { pt3dadd( 243.993, 210.772, 155.275, 0.363 ) }
    apic_11 { pt3dadd( 244.829, 210.383, 154.467, 0.4536 ) }
    apic_11 { pt3dadd( 245.429, 209.545, 153.922, 0.5336 ) }
    apic_11 { pt3dadd( 245.517, 208.505, 153.568, 0.4224 ) }
    apic_11 { pt3dadd( 246.174, 207.97, 153.259, 0.3324 ) }
    apic_11 { pt3dadd( 246.101, 206.931, 153.097, 0.2874 ) }
    apic_11 { pt3dadd( 246.169, 205.817, 153.008, 0.2994 ) }
    apic_11 { pt3dadd( 246.596, 205.161, 152.725, 0.3164 ) }
    apic_11 { pt3dadd( 247.11, 204.289, 152.418, 0.3728 ) }
    apic_11 { pt3dadd( 247.228, 203.153, 152.204, 0.356 ) }
    apic_11 { pt3dadd( 247.562, 202.488, 152.32, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_288, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_288 = new SectionList()
    soma_0 ModelViewParmSubset_288.append()
    axon_0 ModelViewParmSubset_288.append()
    axon_1 ModelViewParmSubset_288.append()

    // Group: {name=ModelViewParmSubset_289, groups=[], sections=[dend_23, dend_18, dend_7, dend_0, apic_0, dend_27, dend_24, dend_20, dend_19, dend_17, dend_8, dend_6, dend_1, apic_20, apic_1, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_12, dend_9, dend_5, dend_2, apic_19, apic_2, dend_14, dend_13, dend_11, dend_10, dend_4, dend_3, apic_18, apic_3, dend_16, dend_15, apic_5, apic_4, apic_17, apic_6, apic_16, apic_7, apic_15, apic_8, apic_14, apic_9, apic_13, apic_10, apic_12, apic_11]}
    ModelViewParmSubset_289 = new SectionList()
    dend_23 ModelViewParmSubset_289.append()
    dend_18 ModelViewParmSubset_289.append()
    dend_7 ModelViewParmSubset_289.append()
    dend_0 ModelViewParmSubset_289.append()
    apic_0 ModelViewParmSubset_289.append()
    dend_27 ModelViewParmSubset_289.append()
    dend_24 ModelViewParmSubset_289.append()
    dend_20 ModelViewParmSubset_289.append()
    dend_19 ModelViewParmSubset_289.append()
    dend_17 ModelViewParmSubset_289.append()
    dend_8 ModelViewParmSubset_289.append()
    dend_6 ModelViewParmSubset_289.append()
    dend_1 ModelViewParmSubset_289.append()
    apic_20 ModelViewParmSubset_289.append()
    apic_1 ModelViewParmSubset_289.append()
    dend_29 ModelViewParmSubset_289.append()
    dend_28 ModelViewParmSubset_289.append()
    dend_26 ModelViewParmSubset_289.append()
    dend_25 ModelViewParmSubset_289.append()
    dend_22 ModelViewParmSubset_289.append()
    dend_21 ModelViewParmSubset_289.append()
    dend_12 ModelViewParmSubset_289.append()
    dend_9 ModelViewParmSubset_289.append()
    dend_5 ModelViewParmSubset_289.append()
    dend_2 ModelViewParmSubset_289.append()
    apic_19 ModelViewParmSubset_289.append()
    apic_2 ModelViewParmSubset_289.append()
    dend_14 ModelViewParmSubset_289.append()
    dend_13 ModelViewParmSubset_289.append()
    dend_11 ModelViewParmSubset_289.append()
    dend_10 ModelViewParmSubset_289.append()
    dend_4 ModelViewParmSubset_289.append()
    dend_3 ModelViewParmSubset_289.append()
    apic_18 ModelViewParmSubset_289.append()
    apic_3 ModelViewParmSubset_289.append()
    dend_16 ModelViewParmSubset_289.append()
    dend_15 ModelViewParmSubset_289.append()
    apic_5 ModelViewParmSubset_289.append()
    apic_4 ModelViewParmSubset_289.append()
    apic_17 ModelViewParmSubset_289.append()
    apic_6 ModelViewParmSubset_289.append()
    apic_16 ModelViewParmSubset_289.append()
    apic_7 ModelViewParmSubset_289.append()
    apic_15 ModelViewParmSubset_289.append()
    apic_8 ModelViewParmSubset_289.append()
    apic_14 ModelViewParmSubset_289.append()
    apic_9 ModelViewParmSubset_289.append()
    apic_13 ModelViewParmSubset_289.append()
    apic_10 ModelViewParmSubset_289.append()
    apic_12 ModelViewParmSubset_289.append()
    apic_11 ModelViewParmSubset_289.append()

    // Group: {name=dend, groups=[], sections=[dend_23, dend_18, dend_7, dend_0, dend_27, dend_24, dend_20, dend_19, dend_17, dend_8, dend_6, dend_1, dend_29, dend_28, dend_26, dend_25, dend_22, dend_21, dend_12, dend_9, dend_5, dend_2, dend_14, dend_13, dend_11, dend_10, dend_4, dend_3, dend_16, dend_15]}
    dend = new SectionList()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_19, apic_2, apic_18, apic_3, apic_5, apic_4, apic_17, apic_6, apic_16, apic_7, apic_15, apic_8, apic_14, apic_9, apic_13, apic_10, apic_12, apic_11]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_19 apic.append()
    apic_2 apic.append()
    apic_18 apic.append()
    apic_3 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_17 apic.append()
    apic_6 apic.append()
    apic_16 apic.append()
    apic_7 apic.append()
    apic_15 apic.append()
    apic_8 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_14 apic.append()
    apic_9 apic.append()
    apic_13 apic.append()
    apic_10 apic.append()
    apic_12 apic.append()
    apic_11 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_11769, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_11769 = new SectionList()
    soma_0 OneSecGrp_SectionRef_11769.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_6, apic_6, apic_6, apic_6, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.687595  // units: uF/cm2
    forsec apic cm = 3.687595  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 84.43818  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 4.9162713E-7  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 1.0795842E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.5538481  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 8.116303E-10  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.047299676  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 2.2670752E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0027538422  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.18435536  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 8.758792E-4  // units: S cm-2
        e_pas_nml2 = -91.0273  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.384848E-4  // units: S cm-2
        e_pas_nml2 = -91.0273  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 4.3626576E-7  // units: S cm-2
        e_pas_nml2 = -91.0273  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 9.728836E-5  // units: S cm-2
        e_pas_nml2 = -91.0273  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.981895E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 7.633297E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513398
    forsec soma {
        insert CaDynamics_478513398
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 5
    dend_17 nseg = 5
    dend_6 nseg = 5
    apic_20 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 5
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_5 nseg = 7
    apic_19 nseg = 5
    dend_13 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    apic_18 nseg = 5
    dend_15 nseg = 5
    apic_5 nseg = 3
    apic_4 nseg = 5
    apic_17 nseg = 5
    apic_16 nseg = 3
    apic_15 nseg = 3
    apic_8 nseg = 3
    apic_14 nseg = 3
    apic_9 nseg = 9
    apic_13 nseg = 3
    apic_12 nseg = 3
    apic_11 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513398


