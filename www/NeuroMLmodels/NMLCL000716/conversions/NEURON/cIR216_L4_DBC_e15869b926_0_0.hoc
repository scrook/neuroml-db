// Cell: cIR216_L4_DBC_e15869b926_0_0
/*
{
  "id" : "cIR216_L4_DBC_e15869b926_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.7707, 14.3445, 1.63673, 2.6356", "1.65855, 13.0663, 1.48326, 4.68599", "1.5464, 11.788, 1.32978, 5.81905", "1.43425, 10.5097, 1.1763, 6.95808", "1.32209, 9.23142, 1.02283, 8.17562", "1.20994, 7.95314, 0.869351, 9.23498", "1.09779, 6.67486, 0.715875, 9.66374", "0.985636, 5.39658, 0.562399, 9.75915", "0.873483, 4.1183, 0.408922, 9.85456", "0.76133, 2.84002, 0.255446, 9.99274", "0.649178, 1.56175, 0.101969, 10.3671", "0.537025, 0.283466, -0.051507, 11.1059", "0.424873, -0.994813, -0.204983, 11.9164", "0.31272, -2.27309, -0.35846, 12.7207", "0.200568, -3.55137, -0.511936, 12.9931", "0.0884149, -4.82965, -0.665413, 12.8706", "-0.0237377, -6.10793, -0.818889, 12.7481", "-0.13589, -7.38621, -0.972365, 11.5655", "-0.248043, -8.66449, -1.12584, 9.82802", "-0.360195, -9.94277, -1.27932, 4.98087", "-0.472348, -11.221, -1.43279, 2.92263" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.24391, 16.2776, 5.96094, 3.33", "0.981545, 22.9005, 6.96272, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-7.08609, -3.39236, 6.39094, 1.33", "-9.16935, -3.5199, 6.65331, 0.67", "-10.3116, -3.8006, 6.75763, 0.67", "-11.5843, -4.12268, 6.85285, 0.67", "-13.9764, -4.50251, 7.00735, 0.67", "-15.51, -4.65207, 7.09542, 0.67", "-18.3936, -4.7539, 7.24278, 0.67", "-22.2038, -4.71471, 7.39436, 0.67", "-23.5181, -4.70419, 7.46451, 0.67", "-25.6447, -4.72623, 7.60417, 0.67", "-26.7289, -4.82048, 7.58539, 0.67", "-28.238, -5.00456, 7.31858, 0.67", "-29.2762, -5.08507, 7.00175, 0.67", "-30.7786, -5.12102, 6.49537, 0.67", "-32.5464, -5.25377, 5.91281, 0.67", "-36.874, -5.53403, 4.72804, 0.67", "-38.9693, -5.52625, 4.32746, 0.67", "-41.1598, -5.30171, 4.15046, 0.67", "-43.0655, -4.96487, 4.20699, 0.67", "-44.1504, -4.70356, 4.31805, 0.67", "-46.8741, -3.85629, 4.7949, 0.67", "-50.0415, -2.74132, 5.55683, 0.67", "-53.4316, -1.45219, 6.35352, 0.67", "-55.9529, -0.394889, 6.9161, 0.33", "-56.6954, -0.0400586, 7.07183, 0.67", "-58.4794, 0.826593, 7.40089, 1.33", "-62.6123, 2.81388, 7.98756, 0.67", "-63.4707, 3.22909, 8.02922, 0.67", "-65.7317, 4.27886, 7.87977, 1.33", "-67.7646, 5.20745, 7.63099, 0.67", "-70.8149, 6.50127, 7.19059, 0.67", "-73.3661, 7.40426, 6.76899, 0.67", "-76.4974, 8.33757, 6.10869, 0.67", "-77.6861, 8.64767, 5.84543, 1.33", "-79.7331, 9.08747, 5.36019, 0.33", "-81.0286, 9.34268, 5.07233, 1.33", "-83.9761, 10.0214, 4.40259, 0.67", "-86.5883, 10.3683, 3.97062, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.04391, -9.46239, 0.670944, 2.67", "6.98355, -12.7126, 2.86005, 2.0", "10.4911, -18.59, 6.81871, 2.0", "13.7188, -23.9986, 10.4615, 2.0", "15.0142, -26.1692, 11.9235, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999788066063
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.472348, -11.221, -1.43279, 0.67", "-1.78337, -26.1636, -1.43279, 0.67", "-3.0944, -41.1062, -1.43279, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.981545, 22.9005, 6.96272, 2.67", "0.372874, 24.4355, 8.12672, 2.67" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.981545, 22.9005, 6.96272, 1.33", "-0.166258, 22.0369, -5.2917, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-86.5883, 10.3683, 3.97062, 0.67", "-91.243, 12.7038, 4.07054, 0.67", "-96.9861, 14.7898, 2.99398, 0.67", "-100.059, 15.4837, 2.07903, 0.33", "-101.271, 15.7398, 1.68499, 0.67", "-103.048, 16.0388, 0.949983, 0.67", "-105.681, 16.4265, -0.212577, 0.67", "-112.192, 17.0102, -3.61416, 0.67", "-116.296, 17.4277, -6.00428, 0.67", "-118.66, 17.7471, -7.42003, 0.67", "-123.442, 18.6597, -10.1671, 2.0", "-125.673, 19.231, -11.4439, 0.33", "-127.804, 19.9596, -12.5938, 0.67", "-129.337, 20.5881, -13.2451, 1.33", "-132.65, 22.2356, -14.892, 0.33", "-134.187, 23.0202, -15.6228, 2.0" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-86.5883, 10.3683, 3.97062, 0.33", "-86.3639, 8.98515, 4.41411, 0.33", "-86.1856, 7.88671, 4.7663, 0.67" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.0142, -26.1692, 11.9235, 1.33", "17.1414, -30.7139, 3.78874, 1.33", "17.9647, -32.4728, 0.640286, 0.67", "18.5024, -33.6215, -1.41587, 0.67", "18.919, -34.5115, -3.00908, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.0142, -26.1692, 11.9235, 0.67", "14.7197, -30.0501, 12.0793, 0.67", "14.7323, -32.8484, 12.4509, 0.67", "14.8031, -36.7222, 13.0983, 0.67", "15.0244, -41.2707, 13.8921, 1.33", "15.2293, -45.2013, 14.5698, 1.33", "15.7386, -52.19, 15.7169, 1.33", "16.153, -54.8773, 16.1513, 1.33", "16.7879, -58.2926, 16.7168, 1.33", "17.2601, -60.9395, 17.1227, 1.33", "17.7441, -63.8157, 17.5951, 1.33", "18.193, -67.0684, 18.0129, 1.33", "18.8956, -72.9539, 18.3062, 0.67", "19.1794, -75.6602, 18.4394, 1.33", "19.3939, -77.5527, 18.5274, 1.33", "19.8456, -82.7113, 19.0128, 1.33", "20.0255, -85.6119, 19.2775, 1.33", "20.0483, -89.2937, 19.6285, 0.67", "19.8975, -93.7551, 20.1129, 1.33", "19.7748, -96.5957, 20.3769, 0.67", "19.3034, -104.754, 21.0095, 1.33", "19.0338, -108.642, 21.3226, 1.33", "18.9381, -111.426, 21.5088, 1.33", "18.9029, -114.089, 21.6479, 1.33", "18.9542, -117.803, 21.921, 1.33", "19.0496, -119.801, 22.0931, 1.33", "19.644, -125.188, 22.4588, 2.0", "20.2596, -128.973, 22.917, 1.33", "20.6047, -130.591, 23.1253, 2.0", "21.6988, -135.366, 23.8833, 2.0", "22.1308, -137.177, 24.3508, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.0944, -41.1062, -1.43279, 0.33", "-4.40542, -56.0488, -1.43279, 0.33", "-5.71644, -70.9914, -1.43279, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "0.372874, 24.4355, 8.12672, 0.67", "0.703478, 26.4326, 9.63102, 0.67", "1.26862, 29.8463, 12.2025, 0.67", "2.60937, 37.9452, 18.3031, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "0.372874, 24.4355, 8.12672, 2.67", "1.77281, 29.5437, 3.38269, 2.67", "2.71334, 32.9755, 0.195468, 2.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.166258, 22.0369, -5.2917, 1.33", "-1.71898, 25.3862, -10.7964, 1.33", "-2.64979, 27.394, -14.0962, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.166258, 22.0369, -5.2917, 0.67", "2.51278, 19.0845, -4.96159, 0.67", "5.46209, 16.151, -4.1942, 0.33", "7.36234, 14.4797, -3.60631, 0.67", "8.92606, 13.2161, -3.11434, 0.67", "10.4688, 11.9548, -2.62323, 0.33", "11.4613, 11.1815, -2.32032, 0.67", "15.0669, 8.93254, -1.60895, 0.33", "16.3282, 8.23186, -1.40057, 0.67", "18.9277, 6.78158, -1.1428, 0.33", "20.3761, 6.04495, -1.1294, 0.67", "21.9616, 5.31677, -1.27595, 0.33", "24.2974, 4.45338, -1.70241, 0.67", "26.1955, 3.86993, -2.33293, 0.33", "27.6687, 3.4365, -2.83385, 0.67", "28.6201, 3.2451, -3.16257, 0.33", "29.987, 3.0399, -3.61217, 1.33", "33.6913, 2.4725, -4.71139, 0.33", "35.8617, 2.26299, -5.16405, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-134.187, 23.0202, -15.6228, 0.33", "-135.085, 21.0876, -15.8147, 0.33", "-135.773, 19.6072, -15.9617, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-134.187, 23.0202, -15.6228, 0.33", "-136.47, 23.0667, -14.8746, 0.33", "-137.232, 23.0822, -14.6252, 0.67", "-139.441, 23.1272, -13.901, 0.33", "-141.356, 23.1662, -13.2736, 0.67", "-142.723, 23.1941, -12.8255, 0.33", "-143.56, 23.2111, -12.5513, 0.67" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "18.919, -34.5115, -3.00908, 0.67", "21.7985, -36.4501, -7.12085, 0.67", "23.9711, -37.8849, -9.73345, 0.67", "28.959, -40.3709, -14.8385, 1.33", "30.7012, -40.8198, -16.3066, 0.67", "34.979, -41.3001, -19.3155, 0.67", "37.3322, -41.4505, -20.5989, 1.33", "40.4274, -41.4749, -22.0944, 0.67", "44.1059, -41.2044, -23.2272, 0.67", "49.6532, -39.9657, -24.1759, 0.67", "51.9386, -39.2185, -24.4476, 0.67", "56.2313, -37.4852, -24.6389, 0.67", "62.2955, -34.4138, -24.8504, 1.33", "65.4006, -32.6407, -25.0022, 0.67", "68.9441, -30.3537, -25.2647, 1.33", "70.5556, -29.1788, -25.6926, 0.67", "71.6071, -28.3359, -26.1875, 1.33", "72.9517, -27.0785, -27.0813, 0.67", "75.2302, -24.8951, -28.8025, 0.67", "77.8582, -22.5967, -30.9085, 1.33", "82.7361, -18.9797, -34.5915, 0.67", "85.2414, -17.2352, -36.3976, 0.33", "87.4699, -15.7361, -38.1358, 0.33", "89.2092, -14.7383, -39.6998, 0.67", "91.2715, -13.6684, -41.8959, 0.67", "93.3497, -12.7398, -44.1519, 0.67", "94.2876, -12.319, -45.1541, 0.67", "99.0647, -10.1827, -50.401, 2.0", "103.707, -8.30683, -55.6914, 0.33", "106.505, -7.20334, -59.1482, 0.67", "107.503, -6.85394, -60.4726, 0.33", "108.481, -6.49744, -61.8608, 0.67", "109.427, -6.16186, -63.226, 0.33", "112.327, -5.07362, -66.7312, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "18.919, -34.5115, -3.00908, 0.67", "20.3561, -40.1826, -5.17618, 0.67", "21.6401, -44.7786, -7.06039, 0.67", "22.2284, -46.7274, -7.84237, 0.67", "24.0987, -53.2453, -10.2934, 1.33", "24.7115, -55.4611, -11.0583, 2.0", "25.7323, -59.2956, -12.2933, 0.67", "26.4118, -62.0018, -13.2469, 1.33", "26.9911, -64.8862, -14.1874, 0.67", "27.7901, -69.482, -15.4209, 0.67", "28.2876, -73.004, -16.0548, 1.33", "28.6103, -75.3735, -16.5297, 0.33", "28.8603, -77.5213, -16.9891, 0.33", "29.0524, -80.2685, -17.5993, 0.67", "29.1478, -81.96, -18.0473, 1.33", "29.3906, -85.2909, -19.0083, 0.67", "29.6788, -89.5196, -19.9851, 0.67", "29.9769, -94.2836, -20.8305, 1.33", "30.2081, -98.7367, -21.4092, 0.67", "30.2433, -101.188, -21.6324, 2.67", "30.1417, -103.964, -21.574, 0.67", "29.6405, -109.983, -21.2033, 0.67", "29.3466, -112.133, -20.9867, 0.33", "28.9819, -114.603, -20.7267, 0.67", "28.737, -116.343, -20.5889, 0.33", "27.8828, -122.675, -20.415, 2.0", "27.1607, -129.562, -20.8467, 0.67", "27.0576, -131.092, -21.0809, 0.67", "27.0308, -133.556, -21.463, 0.67", "27.1058, -136.619, -21.9711, 1.33", "27.2044, -139.347, -22.4795, 0.67", "27.437, -143.492, -23.4751, 0.67", "27.5413, -145.63, -23.8925, 1.33", "27.6965, -148.743, -24.5568, 0.67", "27.9229, -153.453, -25.7949, 0.67", "28.0022, -155.134, -26.1992, 0.67", "28.1284, -157.728, -26.7377, 0.67", "28.1852, -160.205, -27.1995, 0.67", "28.2104, -161.546, -27.5116, 1.33", "28.15, -164.946, -28.4497, 0.67", "28.2488, -169.778, -29.8043, 2.0", "28.3544, -173.882, -30.691, 0.67", "28.3703, -175.328, -30.9222, 0.67", "28.286, -180.865, -31.5708, 1.33", "28.2502, -183.172, -31.7599, 0.67", "28.1519, -186.836, -31.911, 0.67", "27.9474, -191.262, -32.0412, 1.33", "27.7392, -195.738, -31.8892, 0.67", "27.5596, -198.993, -31.6739, 0.67", "27.3717, -202.259, -31.4676, 0.67", "27.2429, -204.96, -31.5214, 0.67", "27.104, -208.069, -31.8481, 2.0", "27.1046, -212.625, -32.6715, 0.67", "27.2211, -217.205, -33.6781, 0.67", "27.3786, -221.128, -34.4994, 2.0", "27.6421, -226.337, -35.4624, 0.67", "27.9458, -229.466, -35.9593, 1.33", "28.3258, -232.817, -36.3683, 0.67", "28.4607, -234.349, -36.4871, 0.67", "29.032, -239.499, -36.5701, 2.0", "29.3759, -242.757, -36.4615, 0.67", "29.6766, -245.363, -36.3548, 0.67", "30.5095, -252.636, -36.2456, 0.67", "30.7174, -254.631, -36.2986, 0.67", "31.0572, -258.032, -36.5446, 0.67", "31.3656, -260.746, -37.0356, 0.67", "31.6198, -263.863, -37.6282, 2.0", "31.7622, -266.231, -38.1203, 0.67", "32.0995, -270.28, -38.9977, 1.33", "32.2812, -272.648, -39.5398, 0.67", "32.4201, -277.399, -40.7674, 0.67", "32.5058, -281.753, -41.9859, 1.33", "32.5331, -284.852, -42.9342, 2.0" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "22.1308, -137.177, 24.3508, 1.33", "20.5888, -138.462, 25.5637, 1.33", "19.4119, -139.443, 26.4895, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "22.1308, -137.177, 24.3508, 0.67", "22.1511, -140.832, 23.4416, 0.67", "22.1721, -144.605, 22.5026, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "2.60937, 37.9452, 18.3031, 0.33", "3.47278, 39.8178, 21.2236, 0.33", "3.91439, 40.6456, 22.6406, 0.67", "5.32123, 42.7985, 27.0717, 0.67", "5.98119, 43.8085, 29.1503, 0.33", "6.42248, 44.4839, 30.5402, 0.33", "7.54233, 46.1976, 34.0674, 0.67", "7.88292, 46.9709, 35.645, 0.33", "8.54059, 48.2484, 38.7077, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "2.60937, 37.9452, 18.3031, 0.67", "2.41868, 40.5822, 20.6874, 0.67", "2.26292, 42.7361, 22.635, 0.33", "2.14896, 44.3119, 24.0599, 0.67", "1.83138, 48.7036, 28.0307, 0.33" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "2.71334, 32.9755, 0.195468, 0.67", "5.23464, 35.4459, -3.60263, 0.67", "6.18536, 36.3775, -5.0348, 0.67", "8.28476, 38.4345, -8.19734, 0.67", "9.07288, 39.2067, -9.38456, 1.33" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "2.71334, 32.9755, 0.195468, 2.0", "1.33966, 37.5062, 0.697933, 2.0" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.64979, 27.394, -14.0962, 0.67", "-1.01837, 33.5112, -11.2896, 0.67", "-0.326185, 35.4865, -10.3993, 0.67", "2.2922, 41.5106, -7.84227, 0.33", "3.00715, 42.9949, -7.25148, 0.33", "4.3627, 45.7342, -6.22331, 1.33", "5.18073, 47.3362, -5.71861, 0.67", "6.61792, 50.4148, -4.73106, 0.33", "7.94813, 52.7175, -4.30124, 1.33", "8.94675, 54.0968, -4.2592, 0.33", "9.66358, 55.0137, -4.2462, 0.67", "11.393, 57.1396, -4.46843, 0.33", "12.8381, 58.9572, -4.8147, 0.67", "14.8051, 61.4763, -5.45741, 1.33", "16.3165, 63.5769, -5.8269, 0.33", "17.2233, 64.857, -5.96365, 0.67", "20.4867, 69.6194, -6.1681, 0.33", "21.5706, 71.3641, -6.12461, 0.33", "22.5727, 73.215, -6.03495, 0.67", "24.6851, 77.8609, -5.70273, 0.33", "25.4377, 79.6594, -5.53573, 0.33", "25.956, 81.034, -5.34707, 0.67", "26.6648, 83.2149, -4.89901, 2.0", "27.3206, 85.4544, -4.57851, 0.33", "27.7266, 86.9577, -4.44049, 0.33", "28.0754, 88.0132, -4.31665, 0.67", "28.6741, 89.6709, -4.10308, 0.33", "28.9735, 90.4284, -3.98551, 0.67", "30.0551, 92.8656, -3.51076, 0.33", "30.8825, 94.6028, -3.09011, 0.33", "33.3486, 99.6975, -1.61374, 0.33", "34.6057, 102.274, -0.721196, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.64979, 27.394, -14.0962, 0.67", "-3.94011, 29.5758, -18.8649, 0.67", "-4.62326, 30.7309, -21.3896, 0.67", "-7.05871, 34.849, -30.3902, 2.0" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "112.327, -5.07362, -66.7312, 0.33", "112.679, -4.13932, -69.1753, 0.33", "112.777, -3.87854, -69.8575, 0.67", "113.569, -1.77454, -75.3617, 0.33", "113.939, -0.791868, -77.9324, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "112.327, -5.07362, -66.7312, 0.33", "114.828, -5.63306, -65.937, 0.33", "115.239, -5.72675, -65.8152, 0.67", "118.286, -6.49068, -65.7989, 0.33", "120.543, -7.17625, -66.1208, 1.33", "124.36, -8.58999, -66.7143, 0.33", "125.808, -9.22969, -66.9472, 0.33", "128.881, -11.1027, -67.6125, 1.33", "135.272, -16.175, -69.8273, 0.33", "136.439, -17.6546, -70.4543, 0.33", "138.13, -20.4541, -71.6432, 0.67", "139.036, -22.3354, -72.3749, 0.67", "140.188, -25.1811, -73.1461, 0.33", "141.369, -28.6964, -73.8692, 0.67", "143.527, -35.7779, -74.5556, 0.33", "143.659, -36.1926, -74.6119, 0.67", "145.129, -40.433, -75.4473, 0.33", "146.115, -43.2728, -75.9678, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "32.5331, -284.852, -42.9342, 0.33", "34.0892, -285.739, -41.9651, 0.33", "34.6223, -286.084, -41.613, 0.67", "35.0657, -286.524, -41.2422, 0.67", "35.8135, -287.302, -40.6124, 0.33", "37.0017, -288.507, -39.7058, 2.0", "38.5973, -290.122, -38.349, 0.33", "39.0193, -290.606, -37.934, 1.33", "41.9832, -294.316, -34.759, 0.67", "42.5868, -295.145, -34.0692, 0.33", "43.2753, -296.165, -33.2265, 1.33", "45.1467, -299.093, -30.8232, 0.67", "45.6859, -299.954, -29.8886, 0.67", "45.9431, -300.339, -29.2799, 1.33", "46.2207, -300.767, -28.1799, 0.33", "46.4462, -301.398, -26.6976, 0.33", "46.5088, -302.115, -25.3249, 0.33", "46.6806, -304.335, -21.1111, 0.67", "46.7291, -304.716, -20.3303, 0.67", "46.7884, -305.358, -19.006, 0.67", "46.7878, -306.245, -17.3481, 0.33", "46.6182, -307.731, -15.3111, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "32.5331, -284.852, -42.9342, 0.67", "32.603, -286.718, -43.7541, 0.67", "32.6984, -289.264, -44.8729, 0.67", "32.8285, -292.737, -46.3991, 0.33", "32.8988, -294.614, -47.2237, 2.0", "33.0061, -297.481, -48.4833, 0.33", "33.0567, -298.831, -49.0765, 0.33" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "22.1721, -144.605, 22.5026, 0.33", "18.1758, -147.214, 25.8284, 0.33", "16.9391, -148.139, 26.6793, 0.33", "14.7375, -150.025, 27.937, 0.33", "13.7928, -150.953, 28.4202, 0.33", "11.6584, -153.011, 29.1164, 0.67", "10.3113, -154.312, 29.4524, 0.67", "8.6291, -155.974, 29.5998, 1.33", "6.87662, -157.814, 29.7255, 0.33", "5.68225, -159.169, 29.7371, 0.33", "2.40184, -162.994, 29.6485, 0.33", "1.30495, -164.37, 29.4427, 1.33", "-0.0879407, -166.254, 29.0946, 0.33", "-1.32754, -168.064, 28.6845, 0.33", "-3.57714, -171.54, 27.733, 0.67", "-4.95171, -173.887, 26.9945, 1.33", "-7.07226, -178.936, 25.1968, 0.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "22.1721, -144.605, 22.5026, 0.67", "22.3264, -148.45, 22.981, 0.67", "22.4206, -150.829, 23.3885, 1.33", "22.6999, -158.858, 24.9404, 0.67", "22.8233, -160.646, 25.2861, 0.67", "22.9303, -162.361, 25.5571, 0.67", "23.0906, -166.194, 25.9805, 0.67", "23.1559, -168.253, 26.2122, 1.33", "23.2628, -171.3, 26.535, 0.67", "23.4948, -175.728, 26.8779, 0.67", "23.6137, -179.072, 26.9538, 0.67", "23.698, -181.922, 26.7263, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "9.07288, 39.2067, -9.38456, 1.33", "11.8722, 41.1199, -7.47359, 0.33", "12.8426, 41.7831, -6.81109, 1.33", "15.8609, 43.846, -4.75061, 0.33", "17.9648, 45.2838, -3.31438, 0.67" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "9.07288, 39.2067, -9.38456, 1.33", "9.02243, 40.1204, -13.609, 1.33", "9.75087, 42.3721, -22.095, 0.67", "11.1153, 45.3565, -32.1513, 1.33", "11.7655, 46.3912, -36.234, 1.33", "14.2375, 49.5898, -48.8808, 0.67", "15.2833, 50.6117, -53.2293, 1.33", "18.6564, 53.4492, -65.0566, 0.67", "19.4033, 53.9744, -66.9563, 1.33", "23.1246, 55.8725, -74.3866, 0.67", "25.2313, 56.5694, -77.9707, 1.33", "31.5955, 57.6527, -87.4523, 0.67", "32.7017, 57.7292, -88.9212, 1.33", "35.4761, 57.7425, -91.6245, 0.67", "37.4856, 57.6871, -93.2201, 1.33", "42.6523, 57.394, -95.6538, 0.33", "44.5224, 57.1504, -96.2487, 0.67", "47.0172, 56.9426, -96.5812, 0.33", "47.9919, 56.8946, -96.7045, 0.33", "52.466, 56.659, -97.2933, 2.0", "57.3562, 56.6519, -97.9164, 0.67", "62.9476, 57.1488, -98.7071, 0.33", "67.2936, 57.8147, -99.3971, 1.33", "69.9426, 58.4135, -99.8331, 1.33", "73.8469, 59.49, -100.499, 0.33", "75.8773, 60.241, -100.957, 1.33", "81.1783, 62.6903, -102.425, 0.33", "82.1609, 63.1881, -102.626, 1.33", "84.483, 64.434, -103.043, 0.33", "85.4044, 65.0291, -103.188, 0.67", "89.6652, 68.1836, -103.794, 0.33", "90.5296, 68.8603, -103.86, 0.67", "95.1192, 72.5123, -103.84, 0.33", "96.7237, 73.7739, -103.769, 1.33", "98.8568, 75.3949, -103.595, 0.33", "99.2664, 75.693, -103.602, 0.67", "103.119, 78.3948, -104.212, 0.33", "104.395, 79.2723, -104.465, 1.33", "107.977, 81.3473, -105.26, 0.33", "109.614, 82.0638, -105.424, 0.67", "117.055, 84.0203, -105.319, 0.67", "120.427, 84.1061, -104.785, 0.33", "128.732, 83.3886, -102.955, 2.0", "134.363, 82.4608, -101.177, 0.33", "137.749, 81.5712, -99.6669, 0.33", "140.191, 80.8155, -98.2645, 0.67", "145.695, 78.934, -94.2833, 0.33" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "1.33966, 37.5062, 0.697933, 2.0", "-0.421163, 42.2853, -4.15113, 2.0" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "1.33966, 37.5062, 0.697933, 0.67", "1.74933, 42.6859, 1.78266, 0.67", "2.09526, 46.5463, 2.48174, 0.67", "2.32672, 50.0636, 3.079, 0.67", "2.5472, 54.2168, 3.64018, 0.67", "2.7284, 59.7543, 4.26024, 0.67", "2.8483, 63.2625, 4.59209, 1.33", "3.0451, 72.1629, 5.30843, 0.67", "3.02287, 75.6726, 5.36556, 0.67", "3.02789, 81.1823, 5.33252, 0.67", "3.12592, 84.0672, 5.27333, 0.67", "3.28324, 86.2776, 5.16248, 1.33", "3.70511, 89.7674, 5.19812, 0.67", "4.85973, 96.6771, 6.01424, 0.67", "6.11411, 102.084, 6.96885, 0.67", "7.06888, 105.276, 7.92165, 1.33", "7.79464, 107.263, 8.72673, 0.67", "9.04451, 110.37, 10.4844, 0.67", "9.86822, 111.81, 11.7817, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "34.6057, 102.274, -0.721196, 0.33", "35.4758, 102.369, -1.39846, 0.33", "36.7665, 102.51, -2.40302, 0.67", "37.6302, 102.605, -3.07522, 0.33", "38.1152, 102.658, -3.45269, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "34.6057, 102.274, -0.721196, 1.33", "34.7963, 103.336, -1.25033, 1.33", "35.0893, 105.038, -2.26714, 0.33", "35.1393, 105.31, -2.46301, 0.67", "35.3721, 106.691, -3.58606, 0.33", "35.4841, 107.225, -3.95384, 0.67", "36.3578, 110.661, -5.97197, 0.33", "36.5014, 111.065, -6.18519, 0.67", "37.2647, 112.806, -7.02523, 0.33", "38.0312, 114.529, -7.62786, 0.67", "39.9609, 118.856, -8.60487, 0.33", "40.1775, 119.337, -8.65597, 0.67", "41.5542, 121.875, -8.39653, 0.33", "43.7001, 125.964, -8.08645, 1.33", "44.2737, 127.089, -7.98576, 0.33", "44.4232, 127.516, -8.12095, 0.67", "44.9518, 129.607, -9.27493, 0.67" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.05871, 34.849, -30.3902, 0.33", "-7.07775, 36.262, -31.6715, 0.33", "-7.18667, 37.4553, -32.6636, 0.33", "-7.43182, 39.1011, -33.9012, 0.67", "-7.49794, 39.8498, -34.4595, 0.33", "-7.63796, 41.1533, -35.4263, 1.33", "-7.99496, 43.7037, -37.4248, 0.33", "-8.25765, 45.1663, -38.5341, 1.33", "-8.52517, 46.1596, -39.3076, 0.33", "-9.48425, 48.8856, -41.3437, 0.33", "-9.99189, 50.0898, -42.2202, 0.33", "-10.9577, 51.9424, -43.4563, 1.33", "-11.8053, 53.333, -44.3077, 0.33", "-12.4749, 54.3745, -44.9616, 0.33", "-12.7771, 54.8022, -45.213, 1.33", "-13.6834, 55.9344, -45.7962, 0.33", "-14.2822, 56.762, -46.2044, 2.0", "-16.0604, 59.3873, -47.4252, 0.33", "-16.3582, 59.7922, -47.563, 0.67", "-17.1683, 60.832, -47.7551, 0.33", "-17.4344, 61.145, -47.7512, 0.67", "-18.2757, 62.0854, -47.5975, 0.33", "-18.7875, 62.6363, -47.4841, 0.67", "-22.1915, 66.09, -46.5019, 0.33", "-22.9216, 66.9199, -46.349, 2.67", "-25.2113, 69.7686, -46.0294, 0.33", "-25.5535, 70.2378, -46.0136, 0.67", "-26.8183, 72.1331, -46.1097, 0.33", "-27.2938, 72.9552, -46.2438, 0.67", "-28.648, 75.7856, -47.078, 0.33", "-29.0182, 76.5906, -47.3323, 0.67", "-29.4082, 77.4828, -47.6469, 2.0", "-29.8938, 78.6276, -48.0357, 0.33", "-30.2208, 79.4808, -48.2757, 2.0", "-30.7036, 80.8143, -48.6572, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.05871, 34.849, -30.3902, 0.67", "-7.60754, 35.6771, -33.011, 0.67", "-8.70295, 36.496, -35.3279, 0.33", "-12.4485, 38.3907, -40.5892, 0.67", "-14.1897, 39.0203, -42.5266, 0.67", "-15.306, 39.3029, -43.5839, 0.33", "-16.6847, 39.5717, -44.7713, 0.33", "-20.0749, 40.1205, -47.2392, 0.33", "-22.4533, 40.3353, -48.7154, 1.33", "-24.7714, 40.2042, -49.892, 0.33", "-27.3897, 39.8234, -51.2496, 0.67", "-28.7144, 39.5639, -51.9367, 0.33", "-30.9816, 39.0919, -53.0889, 0.33", "-31.9637, 38.9541, -53.6983, 0.67", "-33.7969, 38.8077, -55.1258, 0.33", "-34.6354, 38.8087, -55.9331, 0.33", "-35.3997, 38.8234, -57.0273, 1.33", "-36.5099, 38.7853, -59.2354, 1.33", "-38.3245, 38.335, -64.6367, 0.33", "-38.9332, 38.1785, -66.6945, 0.33", "-39.119, 38.1008, -67.5002, 0.67", "-39.9695, 37.3482, -72.2288, 0.33", "-40.1143, 37.0681, -73.4448, 1.33", "-40.4262, 35.3034, -78.5211, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "113.939, -0.791868, -77.9324, 0.33", "114.903, 0.327462, -77.9273, 0.33", "115.584, 1.11896, -77.9238, 0.67", "116.426, 2.09819, -77.9193, 0.33", "117.15, 2.93867, -77.9156, 0.67", "118.417, 4.41146, -77.9089, 0.33", "118.417, 4.41146, -77.9089, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "113.939, -0.791868, -77.9324, 0.33", "113.872, -0.172788, -78.9431, 0.33", "113.811, 0.305202, -79.6944, 1.33", "113.163, 4.76872, -86.05, 0.33", "113.029, 5.3886, -87.0282, 2.0", "112.346, 8.23598, -91.5318, 0.33", "112.081, 9.34327, -93.2832, 1.33", "111.532, 11.4141, -96.6935, 0.33", "111.124, 12.7606, -98.9334, 1.33", "109.423, 17.0546, -105.462, 0.33", "109.014, 17.9246, -106.972, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "33.0567, -298.831, -49.0765, 0.33", "30.7797, -298.531, -47.917, 0.33", "26.6499, -297.988, -45.814, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "33.0567, -298.831, -49.0765, 0.33", "33.4687, -301.31, -48.9013, 0.33", "33.7564, -303.487, -48.7478, 0.67", "34.1926, -307.214, -48.5235, 0.33", "34.5756, -311.487, -48.3402, 1.33", "34.6506, -313.213, -48.3203, 1.33", "34.722, -316.295, -48.3643, 0.67", "34.6446, -317.868, -48.3702, 0.67", "34.4663, -319.611, -48.3893, 0.33", "34.2734, -320.835, -48.4273, 0.67", "33.7946, -323.407, -48.7293, 0.33", "33.1472, -326.143, -49.1044, 0.67", "32.4184, -328.672, -49.3779, 0.33", "31.8687, -330.656, -49.7396, 1.33", "31.208, -332.969, -50.1725, 1.33", "30.559, -335.275, -50.6143, 0.67", "29.6424, -338.477, -51.2776, 0.67", "28.038, -343.682, -52.558, 0.67", "26.5726, -348.8, -54.0797, 2.0" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.07226, -178.936, 25.1968, 0.33", "-3.59895, -177.569, 29.5396, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.07226, -178.936, 25.1968, 0.33", "-7.66536, -180.289, 25.6487, 0.33", "-8.22087, -181.498, 26.0285, 1.33", "-9.34169, -183.678, 26.6532, 0.33", "-11.5865, -187.907, 27.7553, 0.33", "-12.1577, -188.947, 28.0389, 2.0", "-13.1117, -190.711, 28.6732, 0.33", "-13.2291, -190.906, 28.7548, 0.67", "-13.8464, -191.875, 29.2438, 0.33", "-14.3667, -192.596, 29.6618, 0.33", "-15.0434, -193.696, 30.112, 1.33", "-16.8358, -196.868, 31.9724, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "23.698, -181.922, 26.7263, 0.33", "21.9448, -180.522, 27.2932, 0.33", "20.2162, -179.141, 27.8522, 0.33", "17.6962, -177.128, 28.6671, 0.33", "16.7371, -176.362, 28.9772, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "23.698, -181.922, 26.7263, 0.67", "24.3153, -183.173, 29.7196, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "17.9648, 45.2838, -3.31438, 0.67", "17.0026, 48.1449, -5.88116, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "17.9648, 45.2838, -3.31438, 0.67", "19.4962, 44.6188, -2.54022, 0.67", "21.7751, 43.8063, -1.39301, 0.33", "23.0321, 43.5212, -0.688643, 0.67", "24.5421, 43.355, 0.151506, 0.33", "27.8097, 43.2625, 1.76187, 1.33", "29.3421, 43.3324, 2.5746, 0.33", "30.6948, 43.488, 3.27593, 0.67", "32.9338, 43.9576, 4.38116, 0.33", "34.2664, 44.323, 5.07895, 1.33", "36.3841, 45.052, 6.15533, 0.33", "39.5809, 46.3624, 7.64037, 1.33", "41.6715, 47.2754, 8.62309, 0.67", "42.4008, 47.6152, 8.94522, 0.67", "44.6885, 48.751, 10.0264, 0.33", "45.7789, 49.3617, 10.6024, 0.33", "46.8048, 49.9953, 11.1463, 0.33", "48.0038, 50.6983, 11.6575, 0.33", "48.7958, 51.1937, 11.9872, 1.33", "51.3895, 52.8404, 13.0422, 0.33", "52.6195, 53.6729, 13.4958, 0.67", "54.176, 54.6225, 14.1156, 0.67", "55.7942, 55.4372, 14.8002, 0.33", "57.8998, 56.4101, 15.6889, 1.33", "60.2154, 57.4268, 16.6368, 0.67", "62.0839, 58.2233, 17.3243, 0.67", "64.3966, 59.1797, 18.3503, 0.67", "66.7126, 60.1925, 19.6405, 0.67" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-0.421163, 42.2853, -4.15113, 0.67", "0.494048, 48.4511, -8.13499, 0.67", "0.814526, 50.2292, -9.43323, 0.67", "2.47479, 55.9767, -13.5747, 1.33", "3.76951, 60.4588, -16.8043, 1.33", "4.44973, 62.8136, -18.5011, 0.67", "5.24451, 65.565, -20.4836, 1.33", "6.25851, 68.5255, -22.827, 0.33", "8.33236, 72.7678, -26.4509, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-0.421163, 42.2853, -4.15113, 1.33", "-2.80252, 44.7539, -1.8729, 1.33", "-8.08546, 50.2302, 3.18125, 0.67", "-9.80008, 52.0076, 4.82162, 0.67", "-13.3826, 55.7213, 8.24896, 1.33" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "44.9518, 129.607, -9.27493, 0.33", "44.0009, 130.761, -9.03383, 0.33", "43.8076, 130.995, -8.98481, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "44.9518, 129.607, -9.27493, 0.33", "45.5809, 132.424, -9.67696, 0.33", "45.9297, 133.489, -10.1219, 0.67", "46.8115, 136.207, -11.421, 0.33", "47.2548, 137.513, -12.0945, 0.67", "47.9541, 139.375, -13.0798, 0.33", "49.3186, 142.569, -14.81, 0.67", "50.9907, 145.938, -16.9647, 0.33", "51.9451, 147.692, -18.1485, 0.33", "52.3305, 148.314, -18.5914, 0.67", "53.111, 149.723, -19.626, 0.33", "53.6512, 150.943, -20.4688, 0.67", "54.673, 154.132, -22.2307, 0.33", "54.9642, 155.485, -22.8671, 0.67", "55.1196, 156.243, -23.2428, 0.67", "55.8761, 161.054, -25.5998, 0.33", "55.9602, 162.023, -26.0813, 0.33", "56.0307, 164.849, -27.4686, 0.67", "56.0112, 165.933, -27.9977, 0.33", "55.938, 168.438, -29.2577, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-30.7036, 80.8143, -48.6572, 0.33", "-31.0245, 82.2605, -49.1949, 0.33", "-31.2686, 83.3604, -49.6038, 0.67", "-31.9611, 86.481, -50.7639, 0.33", "-32.4192, 88.5455, -51.5314, 1.33", "-33.0051, 91.1858, -52.5129, 0.33", "-33.5432, 93.6106, -53.4143, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-30.7036, 80.8143, -48.6572, 0.33", "-32.6232, 82.0069, -48.1196, 0.33", "-35.3908, 84.1069, -47.734, 0.67", "-36.3788, 84.9638, -47.6562, 0.33", "-37.0243, 85.6974, -47.7803, 0.67", "-37.8226, 86.697, -48.0632, 0.33", "-38.6155, 87.7484, -48.41, 1.33", "-40.9504, 91.3024, -49.8218, 0.33", "-42.208, 93.4075, -50.7728, 0.67", "-44.9129, 98.0366, -52.9043, 0.33", "-45.2195, 98.5556, -53.1479, 0.67", "-46.1438, 100.155, -53.887, 0.33", "-46.6043, 101.004, -54.2655, 0.67", "-47.6783, 103.066, -55.1753, 0.33", "-48.2558, 104.009, -55.489, 0.67", "-49.5789, 105.74, -55.8089, 0.33", "-50.1526, 106.461, -55.9601, 0.33", "-50.7241, 107.161, -56.1309, 0.67", "-51.6222, 108.221, -56.4159, 0.33", "-52.9272, 109.735, -56.8376, 0.67", "-54.207, 111.079, -57.2864, 0.33", "-54.7295, 111.591, -57.4644, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-40.4262, 35.3034, -78.5211, 0.33", "-45.8104, 38.4234, -84.9523, 0.33", "-46.8432, 39.0382, -86.3106, 2.0", "-51.1792, 41.6546, -92.1327, 0.33", "-51.7214, 41.9433, -92.8073, 0.67", "-52.6341, 42.3917, -93.8694, 0.33", "-56.0212, 44.0432, -97.4674, 1.33", "-57.6004, 44.7341, -99.1055, 0.33", "-58.6654, 45.1818, -100.004, 0.67", "-62.7291, 46.9571, -102.535, 0.33", "-64.6346, 47.8122, -103.575, 1.33", "-67.9715, 49.4285, -105.122, 0.33", "-70.66, 50.7629, -106.158, 0.33", "-73.5514, 52.3171, -107.236, 0.67", "-77.305, 54.4978, -108.62, 0.33", "-79.0721, 55.6341, -109.251, 1.33", "-82.4818, 57.9107, -110.451, 0.33", "-83.2331, 58.4502, -110.782, 0.67", "-84.4809, 59.4436, -111.446, 0.33", "-85.4751, 60.3009, -112.086, 0.67", "-86.4266, 61.128, -112.829, 0.33", "-87.2358, 61.8346, -113.544, 0.67", "-90.6326, 64.8433, -117.046, 0.33", "-90.6326, 64.8433, -117.046, 0.67", "-91.8116, 66.0133, -118.485, 0.33", "-92.235, 66.4272, -119.033, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-40.4262, 35.3034, -78.5211, 0.33", "-40.8417, 35.1667, -81.9791, 0.33", "-41.6111, 34.9412, -85.6764, 0.67", "-42.814, 34.5513, -90.7204, 0.33", "-43.0704, 34.44, -91.6347, 0.67", "-44.9329, 33.4724, -97.8003, 0.33", "-47.1227, 31.9688, -104.647, 2.67", "-48.9261, 30.2792, -111.154, 0.33", "-49.0786, 30.0751, -111.723, 0.67", "-49.7688, 28.6321, -115.039, 0.33", "-49.9292, 28.1391, -115.849, 1.33", "-50.5879, 25.4947, -118.761, 0.33", "-51.3501, 21.5357, -122.079, 2.0", "-51.417, 18.9723, -124.274, 0.33", "-51.4456, 18.5199, -124.688, 0.67", "-51.6877, 16.2906, -126.856, 0.33", "-51.817, 15.8771, -127.278, 0.67", "-52.7619, 14.1924, -129.057, 0.33", "-54.0949, 12.6615, -130.621, 0.67", "-56.6301, 10.4552, -133.225, 0.33", "-57.5564, 9.77354, -133.959, 0.67", "-60.3333, 7.93088, -136.008, 0.33", "-60.9611, 7.51635, -136.441, 0.67", "-64.5491, 5.26342, -138.571, 0.33", "-65.6431, 4.61539, -139.076, 0.67", "-69.9009, 2.62601, -140.618, 0.67" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "26.5726, -348.8, -54.0797, 0.33", "21.1023, -353.183, -52.5244, 0.33", "18.6324, -355.27, -52.113, 0.67", "17.6155, -356.146, -52.0514, 0.33", "16.5368, -357.156, -52.321, 0.33", "15.192, -358.683, -53.1098, 0.33", "14.6888, -359.403, -53.6771, 0.67", "13.9806, -360.873, -55.438, 0.33", "13.5545, -362.03, -56.8376, 0.67", "12.7871, -366.102, -62.1341, 0.33", "12.7309, -367.545, -64.0021, 0.67", "12.9029, -370.059, -67.269, 0.33", "12.9983, -370.772, -68.2048, 0.67", "13.543, -373.286, -71.5022, 0.33", "14.3771, -376.401, -75.3036, 0.67", "14.6937, -377.768, -76.5971, 0.33", "14.8486, -378.269, -77.1191, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "26.5726, -348.8, -54.0797, 0.67", "26.2144, -352.116, -53.8089, 0.67", "25.9605, -355.177, -53.6731, 0.67", "25.8722, -357.281, -53.6359, 0.33", "25.7676, -363.776, -53.7562, 2.67", "25.9652, -369.323, -54.18, 0.67", "26.2546, -373.44, -54.6025, 0.33", "26.3526, -374.412, -54.7392, 0.67", "26.7776, -378.077, -55.4091, 0.33", "27.5761, -384.016, -56.8441, 0.33", "28.2286, -388.223, -58.1446, 0.67", "28.7377, -391.762, -59.2609, 0.33", "29.4322, -396.646, -60.6976, 0.33", "29.8975, -400.427, -61.8583, 0.33", "30.0868, -402.603, -62.5686, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "24.3153, -183.173, 29.7196, 0.33", "22.9809, -185.207, 30.1888, 0.33", "21.9428, -186.79, 30.5539, 0.33", "20.7976, -188.535, 30.9566, 0.33", "20.0609, -189.658, 31.2156, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "24.3153, -183.173, 29.7196, 0.67", "25.5231, -185.737, 30.2408, 0.67", "27.4477, -189.824, 31.0714, 1.33", "28.5483, -192.161, 31.5464, 0.67", "30.5732, -196.46, 32.4202, 1.33", "31.7594, -198.979, 32.9321, 0.67" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "66.7126, 60.1925, 19.6405, 0.33", "68.6846, 59.4081, 21.4557, 0.33", "71.0253, 58.477, 23.6104, 0.33", "75.2271, 56.8057, 27.4783, 0.33", "77.2255, 56.0109, 29.3178, 0.33", "78.3505, 55.5634, 30.3534, 0.33", "79.8202, 54.9788, 31.7063, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "66.7126, 60.1925, 19.6405, 0.67", "69.379, 61.2023, 21.2401, 0.67", "72.4455, 62.3637, 23.0798, 0.67", "74.3239, 63.0751, 24.2066, 0.67", "75.9916, 63.7067, 25.2072, 0.67", "83.2727, 66.4643, 29.5752, 0.67" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "8.33236, 72.7678, -26.4509, 0.33", "11.1319, 74.995, -27.7755, 0.33", "12.3982, 76.1453, -28.2977, 0.33", "13.6881, 76.6509, -27.6898, 0.33", "15.3306, 77.2032, -26.8747, 0.33", "17.2938, 77.9243, -25.8945, 1.33", "19.2035, 78.6895, -24.9677, 0.33", "20.7012, 79.2974, -24.2218, 0.67", "30.3303, 83.6125, -19.1684, 0.33", "31.8099, 84.342, -18.3969, 0.67", "33.2612, 85.0758, -17.6574, 0.33", "34.3073, 85.6681, -17.2126, 0.67", "35.9995, 86.7664, -16.7348, 0.33", "36.6017, 87.2982, -16.7097, 0.67", "37.4281, 88.4588, -17.0548, 0.33", "37.8644, 89.1064, -17.2454, 0.67", "39.9343, 92.1558, -18.2213, 0.33", "41.3768, 94.4231, -18.9355, 0.33", "41.8005, 95.0609, -19.1636, 0.67", "43.9445, 97.9871, -20.4109, 0.33", "44.642, 98.7416, -20.7996, 1.33", "46.2244, 100.109, -21.6966, 0.33", "47.2973, 100.822, -22.3258, 1.33", "50.3395, 102.294, -23.6546, 0.67", "52.3718, 102.95, -24.3729, 0.67", "56.4979, 103.758, -25.642, 0.67", "57.9944, 104.013, -26.0624, 1.33", "59.2256, 104.199, -26.3904, 0.33", "63.8445, 104.927, -27.5923, 1.33", "67.9316, 105.753, -28.5966, 0.33", "70.9415, 106.595, -29.4113, 0.67", "72.3628, 107.139, -29.8667, 0.33", "73.058, 107.454, -30.1178, 0.67", "74.0704, 108.081, -30.5928, 0.33", "74.728, 108.702, -31.0334, 1.33", "75.9705, 110.443, -31.834, 0.33", "76.9225, 112.001, -32.4437, 0.33", "77.2638, 112.576, -32.7022, 0.67", "78.1832, 114.181, -33.4939, 0.33", "78.6447, 115.039, -33.9363, 0.67", "79.1193, 115.942, -34.4219, 0.33", "79.7728, 117.197, -35.1536, 0.33", "80.5579, 118.547, -36.0655, 0.67", "81.2733, 119.894, -36.9842, 0.33", "81.4053, 120.153, -37.1848, 0.67" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "8.33236, 72.7678, -26.4509, 0.33", "12.3375, 72.7559, -28.1035, 0.33", "13.8334, 72.8156, -28.758, 0.67", "18.429, 73.1537, -30.5547, 0.33", "19.5829, 73.2775, -31.0276, 1.33", "20.9892, 73.4646, -31.6185, 0.33", "21.8631, 73.6099, -31.9862, 0.67", "22.8448, 73.892, -32.3753, 0.33", "25.7347, 75.2882, -34.1044, 1.33", "26.673, 76.2684, -35.1005, 0.33", "26.7873, 76.4654, -35.309, 0.67", "27.0722, 77.1799, -36.0785, 0.33", "27.3734, 78.1706, -37.179, 0.67", "27.9041, 81.1737, -40.5562, 0.33", "27.9666, 82.761, -42.3758, 0.67", "28.0346, 84.8238, -44.7512, 0.33", "28.0821, 86.4849, -46.7745, 1.33" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-13.3826, 55.7213, 8.24896, 0.33", "-15.3035, 56.3578, 9.67531, 0.33", "-18.0114, 57.1222, 11.8462, 0.33", "-18.5494, 57.2731, 12.2867, 0.67", "-23.1832, 58.3899, 15.9665, 0.33", "-24.8686, 58.7877, 17.2545, 0.67", "-26.8265, 59.2558, 18.7276, 0.33", "-27.1187, 59.3125, 18.9321, 0.67", "-28.5395, 59.4437, 19.9748, 0.33", "-30.8155, 59.5211, 21.7002, 0.33", "-32.9601, 59.6008, 23.3517, 0.33", "-33.654, 59.6251, 23.8435, 1.33", "-37.1971, 59.7887, 26.1814, 0.33", "-39.4035, 59.8496, 27.6859, 0.33", "-40.8209, 59.7787, 28.7318, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-13.3826, 55.7213, 8.24896, 0.67", "-13.9749, 59.2944, 8.58021, 0.67", "-14.7055, 63.8586, 8.88291, 0.67", "-15.0873, 66.872, 8.94932, 0.67", "-15.5732, 71.8571, 8.95024, 0.67", "-15.7908, 74.4195, 8.92441, 0.67", "-15.9497, 77.6968, 8.7017, 0.67", "-15.9604, 79.6992, 8.42077, 1.33", "-15.8376, 82.5784, 7.86155, 0.67", "-15.6666, 85.5079, 7.41428, 2.0", "-15.538, 87.5567, 7.05575, 1.33", "-15.1142, 92.8563, 6.15643, 1.33", "-14.9541, 95.2239, 5.8056, 0.67", "-14.7879, 99.2675, 5.29099, 0.67", "-14.8309, 105.326, 4.79601, 1.33", "-14.9993, 109.569, 4.55635, 1.33" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-33.5432, 93.6106, -53.4143, 0.33", "-27.6904, 97.2636, -58.0046, 0.33", "-27.3806, 97.457, -58.2476, 0.67", "-26.5316, 97.9869, -58.9135, 0.33", "-26.0016, 98.3177, -59.3292, 0.67", "-23.5456, 99.8506, -61.2554, 0.33", "-21.2328, 101.294, -63.0693, 2.0" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-33.5432, 93.6106, -53.4143, 0.33", "-35.0785, 94.6168, -53.994, 0.33", "-35.3922, 94.8224, -54.1125, 0.67" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "28.0821, 86.4849, -46.7745, 0.33", "29.8299, 85.4509, -45.6128, 0.33", "30.1341, 85.271, -45.4107, 0.67", "31.4623, 84.4853, -44.5279, 0.33", "31.7664, 84.3054, -44.3257, 0.67", "34.7271, 82.5541, -42.358, 0.33", "37.4734, 80.9295, -40.5327, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "28.0821, 86.4849, -46.7745, 0.67", "21.3657, 95.8558, -54.7196, 0.67", "20.1934, 98.0622, -56.5134, 1.33", "19.3022, 100.668, -58.6404, 0.33", "19.0305, 101.852, -59.6207, 0.67", "18.7101, 103.97, -61.2792, 0.67", "18.4375, 108.983, -65.1781, 0.67", "19.4226, 112.1, -67.6849, 0.33", "20.2254, 114.439, -69.7263, 0.33", "20.7421, 115.668, -70.8331, 0.67", "21.3395, 117.27, -72.2126, 0.67", "22.3037, 119.904, -74.3873, 0.33", "23.1545, 122.446, -76.4181, 1.33", "23.8541, 126.063, -79.0675, 0.33", "24.0386, 127.346, -79.8814, 0.67", "24.7942, 131.491, -82.2971, 0.33", "24.971, 132.344, -82.7349, 0.67", "26.2012, 137.748, -84.8076, 0.33", "26.5001, 138.355, -84.9422, 0.67", "28.1939, 140.215, -84.9662, 0.33", "31.6842, 142.841, -84.6385, 0.67", "33.733, 144.192, -84.3758, 0.33", "34.6836, 144.816, -84.2537, 0.67", "40.9575, 149.006, -83.4034, 0.67", "43.7662, 151.21, -83.1569, 0.33", "48.1357, 155.259, -83.0743, 0.33", "49.8012, 157.14, -83.1933, 0.67", "52.8111, 160.796, -83.555, 0.33", "54.3789, 163.063, -83.8903, 0.67", "56.2809, 166.928, -84.826, 0.67", "57.3904, 169.34, -85.6494, 0.33", "57.5595, 169.907, -85.8992, 0.67" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-40.8209, 59.7787, 28.7318, 0.67", "-43.1777, 58.844, 30.0274, 0.67", "-43.7038, 58.6237, 30.3075, 0.67", "-44.6376, 58.2012, 30.8012, 0.33", "-45.644, 57.7359, 31.3157, 0.67", "-46.4196, 57.3559, 31.7025, 0.33", "-46.7444, 57.1798, 31.9011, 0.67", "-47.5719, 56.7037, 32.5305, 0.33", "-47.9054, 56.489, 32.791, 0.67", "-48.5944, 55.9462, 33.4263, 0.33", "-48.832, 55.7163, 33.6844, 0.67", "-50.1867, 54.3656, 35.2638, 0.33", "-50.7614, 53.7874, 35.9655, 0.67", "-51.8324, 52.6521, 37.3682, 0.67", "-52.9149, 51.4965, 38.8092, 0.67", "-53.6765, 50.5898, 39.9084, 0.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-40.8209, 59.7787, 28.7318, 1.33", "-42.7681, 58.1631, 29.2979, 1.33" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-14.9993, 109.569, 4.55635, 0.67", "-14.5551, 111.538, 5.60283, 0.67", "-13.9226, 114.342, 7.09313, 0.67" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-14.9993, 109.569, 4.55635, 0.67", "-16.4292, 110.963, 4.64245, 0.67", "-17.7111, 112.367, 4.61982, 0.33", "-18.7568, 113.835, 4.67111, 0.67", "-19.8624, 115.572, 4.76828, 0.33", "-22.377, 119.798, 5.06381, 0.67", "-24.2553, 123.167, 5.33618, 0.33", "-25.3409, 125.622, 5.39827, 0.67", "-26.8602, 129.964, 5.34448, 0.33", "-27.0, 130.445, 5.33023, 0.67", "-27.4354, 132.16, 5.25796, 0.33", "-28.0081, 134.783, 5.24471, 2.0", "-29.2905, 140.858, 5.56307, 0.67", "-30.3438, 146.005, 5.97724, 1.33", "-30.885, 148.49, 6.01245, 0.33", "-30.986, 148.973, 6.00491, 0.67", "-31.8841, 153.057, 6.12184, 0.33", "-32.0887, 153.817, 6.20494, 0.67", "-32.8478, 156.139, 6.77138, 0.33", "-35.0357, 162.525, 8.50746, 0.67", "-35.5464, 163.967, 8.87202, 0.33", "-37.4106, 168.728, 9.85592, 0.67", "-38.9549, 172.002, 10.1905, 0.67", "-39.7704, 173.575, 10.5262, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-42.7681, 58.1631, 29.2979, 0.67", "-41.0815, 55.1754, 39.0259, 0.67", "-40.8837, 54.8251, 40.1665, 0.67", "-40.1163, 53.4656, 44.5929, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-42.7681, 58.1631, 29.2979, 0.33", "-42.6804, 57.1697, 30.5501, 0.33", "-42.4352, 55.4777, 32.3564, 0.33", "-42.0759, 52.9536, 34.6455, 0.67", "-41.8524, 51.0738, 36.2586, 0.33", "-41.5857, 48.0704, 38.8472, 0.33", "-41.4609, 46.6649, 40.0585, 0.33", "-41.3987, 44.1979, 42.3297, 0.67", "-41.5241, 42.6048, 43.8181, 0.67", "-41.6943, 41.1941, 44.9153, 0.67", "-41.6766, 40.4637, 45.4318, 0.67" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-13.9226, 114.342, 7.09313, 0.33", "-15.5251, 116.487, 6.54717, 0.33", "-15.971, 117.084, 6.39527, 0.67", "-18.2347, 120.114, 5.62401, 0.33", "-19.8701, 122.303, 5.06684, 0.67" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-13.9226, 114.342, 7.09313, 0.67", "-14.6678, 115.793, 9.78128, 0.67", "-18.0169, 121.292, 20.0547, 0.67", "-19.7681, 124.077, 25.8163, 0.33", "-20.7262, 125.644, 28.9822, 0.67", "-22.5454, 128.582, 34.8158, 0.33", "-23.7821, 130.578, 38.7816, 0.33", "-25.617, 133.103, 43.8803, 0.67", "-27.0486, 134.826, 47.8663, 0.33", "-28.1662, 136.202, 50.6133, 0.33", "-28.7559, 136.973, 52.4511, 0.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-39.7704, 173.575, 10.5262, 0.67", "-40.2767, 178.442, 6.73598, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-39.7704, 173.575, 10.5262, 0.67", "-40.689, 174.118, 9.40125, 0.67", "-41.4455, 174.566, 8.47476, 0.67", "-42.7319, 175.328, 6.89944, 0.33", "-44.3474, 176.284, 4.92085, 1.33", "-48.178, 178.552, 0.229611, 0.33", "-48.4396, 178.707, -0.0907358, 0.67" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-48.4396, 178.707, -0.0907358, 0.33", "-49.8998, 178.784, -2.77087, 0.33", "-50.1438, 178.804, -3.20388, 0.67", "-51.7438, 178.934, -6.0423, 0.33", "-52.63, 179.006, -7.61449, 0.67", "-55.1294, 179.209, -12.0485, 0.67", "-57.4501, 179.398, -16.1655, 0.33", "-57.6137, 179.422, -16.4759, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-48.4396, 178.707, -0.0907358, 0.67", "-53.2288, 184.659, 4.61421, 0.67", "-56.1695, 188.313, 7.50305, 0.33", "-56.7327, 189.013, 8.05638, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_26", "dend_12", "dend_1", "axon_1", "dend_80", "dend_49", "dend_33", "dend_32", "dend_29", "dend_28", "dend_20", "dend_13", "dend_11", "dend_2", "dend_82", "dend_81", "dend_73", "dend_50", "dend_43", "dend_34", "dend_22", "dend_21", "dend_19", "dend_14", "dend_8", "dend_3", "dend_75", "dend_74", "dend_52", "dend_51", "dend_47", "dend_44", "dend_38", "dend_35", "dend_24", "dend_23", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_79", "dend_76", "dend_68", "dend_53", "dend_46", "dend_45", "dend_40", "dend_39", "dend_37", "dend_36", "dend_17", "dend_16", "dend_6", "dend_5", "dend_78", "dend_77", "dend_72", "dend_69", "dend_63", "dend_54", "dend_42", "dend_41", "dend_71", "dend_70", "dend_67", "dend_64", "dend_60", "dend_55", "dend_66", "dend_65", "dend_62", "dend_61", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_80", "dend_80", "dend_80", "dend_49", "dend_49", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_2", "dend_2", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_73", "dend_73", "dend_73", "dend_73", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_DBC_e15869b926_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_30
create dend_48
public dend_48
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_80, id: dend_80, parent: dend_48
create dend_80
public dend_80
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_12
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_73, id: dend_73, parent: dend_49
create dend_73
public dend_73
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_68, id: dend_68, parent: dend_52
create dend_68
public dend_68
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_63, id: dend_63, parent: dend_53
create dend_63
public dend_63
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_25, dend_0, axon_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, axon_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.49999999788066063)
    connect dend_25(0), soma_0(0.49999999788066063)
    connect dend_0(0), soma_0(0.49999999788066063)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_80(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_73(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_68(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_63(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.7707, 14.3445, 1.63673, 2.6356 ) }
    soma_0 { pt3dadd( 1.65855, 13.0663, 1.48326, 4.68599 ) }
    soma_0 { pt3dadd( 1.5464, 11.788, 1.32978, 5.81905 ) }
    soma_0 { pt3dadd( 1.43425, 10.5097, 1.1763, 6.95808 ) }
    soma_0 { pt3dadd( 1.32209, 9.23142, 1.02283, 8.17562 ) }
    soma_0 { pt3dadd( 1.20994, 7.95314, 0.869351, 9.23498 ) }
    soma_0 { pt3dadd( 1.09779, 6.67486, 0.715875, 9.66374 ) }
    soma_0 { pt3dadd( 0.985636, 5.39658, 0.562399, 9.75915 ) }
    soma_0 { pt3dadd( 0.873483, 4.1183, 0.408922, 9.85456 ) }
    soma_0 { pt3dadd( 0.76133, 2.84002, 0.255446, 9.99274 ) }
    soma_0 { pt3dadd( 0.649178, 1.56175, 0.101969, 10.3671 ) }
    soma_0 { pt3dadd( 0.537025, 0.283466, -0.051507, 11.1059 ) }
    soma_0 { pt3dadd( 0.424873, -0.994813, -0.204983, 11.9164 ) }
    soma_0 { pt3dadd( 0.31272, -2.27309, -0.35846, 12.7207 ) }
    soma_0 { pt3dadd( 0.200568, -3.55137, -0.511936, 12.9931 ) }
    soma_0 { pt3dadd( 0.0884149, -4.82965, -0.665413, 12.8706 ) }
    soma_0 { pt3dadd( -0.0237377, -6.10793, -0.818889, 12.7481 ) }
    soma_0 { pt3dadd( -0.13589, -7.38621, -0.972365, 11.5655 ) }
    soma_0 { pt3dadd( -0.248043, -8.66449, -1.12584, 9.82802 ) }
    soma_0 { pt3dadd( -0.360195, -9.94277, -1.27932, 4.98087 ) }
    soma_0 { pt3dadd( -0.472348, -11.221, -1.43279, 2.92263 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.24391, 16.2776, 5.96094, 3.33 ) }
    dend_30 { pt3dadd( 0.981545, 22.9005, 6.96272, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -7.08609, -3.39236, 6.39094, 1.33 ) }
    dend_25 { pt3dadd( -9.16935, -3.5199, 6.65331, 0.67 ) }
    dend_25 { pt3dadd( -10.3116, -3.8006, 6.75763, 0.67 ) }
    dend_25 { pt3dadd( -11.5843, -4.12268, 6.85285, 0.67 ) }
    dend_25 { pt3dadd( -13.9764, -4.50251, 7.00735, 0.67 ) }
    dend_25 { pt3dadd( -15.51, -4.65207, 7.09542, 0.67 ) }
    dend_25 { pt3dadd( -18.3936, -4.7539, 7.24278, 0.67 ) }
    dend_25 { pt3dadd( -22.2038, -4.71471, 7.39436, 0.67 ) }
    dend_25 { pt3dadd( -23.5181, -4.70419, 7.46451, 0.67 ) }
    dend_25 { pt3dadd( -25.6447, -4.72623, 7.60417, 0.67 ) }
    dend_25 { pt3dadd( -26.7289, -4.82048, 7.58539, 0.67 ) }
    dend_25 { pt3dadd( -28.238, -5.00456, 7.31858, 0.67 ) }
    dend_25 { pt3dadd( -29.2762, -5.08507, 7.00175, 0.67 ) }
    dend_25 { pt3dadd( -30.7786, -5.12102, 6.49537, 0.67 ) }
    dend_25 { pt3dadd( -32.5464, -5.25377, 5.91281, 0.67 ) }
    dend_25 { pt3dadd( -36.874, -5.53403, 4.72804, 0.67 ) }
    dend_25 { pt3dadd( -38.9693, -5.52625, 4.32746, 0.67 ) }
    dend_25 { pt3dadd( -41.1598, -5.30171, 4.15046, 0.67 ) }
    dend_25 { pt3dadd( -43.0655, -4.96487, 4.20699, 0.67 ) }
    dend_25 { pt3dadd( -44.1504, -4.70356, 4.31805, 0.67 ) }
    dend_25 { pt3dadd( -46.8741, -3.85629, 4.7949, 0.67 ) }
    dend_25 { pt3dadd( -50.0415, -2.74132, 5.55683, 0.67 ) }
    dend_25 { pt3dadd( -53.4316, -1.45219, 6.35352, 0.67 ) }
    dend_25 { pt3dadd( -55.9529, -0.394889, 6.9161, 0.33 ) }
    dend_25 { pt3dadd( -56.6954, -0.0400586, 7.07183, 0.67 ) }
    dend_25 { pt3dadd( -58.4794, 0.826593, 7.40089, 1.33 ) }
    dend_25 { pt3dadd( -62.6123, 2.81388, 7.98756, 0.67 ) }
    dend_25 { pt3dadd( -63.4707, 3.22909, 8.02922, 0.67 ) }
    dend_25 { pt3dadd( -65.7317, 4.27886, 7.87977, 1.33 ) }
    dend_25 { pt3dadd( -67.7646, 5.20745, 7.63099, 0.67 ) }
    dend_25 { pt3dadd( -70.8149, 6.50127, 7.19059, 0.67 ) }
    dend_25 { pt3dadd( -73.3661, 7.40426, 6.76899, 0.67 ) }
    dend_25 { pt3dadd( -76.4974, 8.33757, 6.10869, 0.67 ) }
    dend_25 { pt3dadd( -77.6861, 8.64767, 5.84543, 1.33 ) }
    dend_25 { pt3dadd( -79.7331, 9.08747, 5.36019, 0.33 ) }
    dend_25 { pt3dadd( -81.0286, 9.34268, 5.07233, 1.33 ) }
    dend_25 { pt3dadd( -83.9761, 10.0214, 4.40259, 0.67 ) }
    dend_25 { pt3dadd( -86.5883, 10.3683, 3.97062, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.04391, -9.46239, 0.670944, 2.67 ) }
    dend_0 { pt3dadd( 6.98355, -12.7126, 2.86005, 2.0 ) }
    dend_0 { pt3dadd( 10.4911, -18.59, 6.81871, 2.0 ) }
    dend_0 { pt3dadd( 13.7188, -23.9986, 10.4615, 2.0 ) }
    dend_0 { pt3dadd( 15.0142, -26.1692, 11.9235, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.472348, -11.221, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -1.78337, -26.1636, -1.43279, 0.67 ) }
    axon_0 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_30 (entry count 69/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.981545, 22.9005, 6.96272, 2.67 ) }
    dend_48 { pt3dadd( 0.372874, 24.4355, 8.12672, 2.67 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 71/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.981545, 22.9005, 6.96272, 1.33 ) }
    dend_31 { pt3dadd( -0.166258, 22.0369, -5.2917, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -86.5883, 10.3683, 3.97062, 0.67 ) }
    dend_27 { pt3dadd( -91.243, 12.7038, 4.07054, 0.67 ) }
    dend_27 { pt3dadd( -96.9861, 14.7898, 2.99398, 0.67 ) }
    dend_27 { pt3dadd( -100.059, 15.4837, 2.07903, 0.33 ) }
    dend_27 { pt3dadd( -101.271, 15.7398, 1.68499, 0.67 ) }
    dend_27 { pt3dadd( -103.048, 16.0388, 0.949983, 0.67 ) }
    dend_27 { pt3dadd( -105.681, 16.4265, -0.212577, 0.67 ) }
    dend_27 { pt3dadd( -112.192, 17.0102, -3.61416, 0.67 ) }
    dend_27 { pt3dadd( -116.296, 17.4277, -6.00428, 0.67 ) }
    dend_27 { pt3dadd( -118.66, 17.7471, -7.42003, 0.67 ) }
    dend_27 { pt3dadd( -123.442, 18.6597, -10.1671, 2.0 ) }
    dend_27 { pt3dadd( -125.673, 19.231, -11.4439, 0.33 ) }
    dend_27 { pt3dadd( -127.804, 19.9596, -12.5938, 0.67 ) }
    dend_27 { pt3dadd( -129.337, 20.5881, -13.2451, 1.33 ) }
    dend_27 { pt3dadd( -132.65, 22.2356, -14.892, 0.33 ) }
    dend_27 { pt3dadd( -134.187, 23.0202, -15.6228, 2.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 89/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -86.5883, 10.3683, 3.97062, 0.33 ) }
    dend_26 { pt3dadd( -86.3639, 8.98515, 4.41411, 0.33 ) }
    dend_26 { pt3dadd( -86.1856, 7.88671, 4.7663, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.0142, -26.1692, 11.9235, 1.33 ) }
    dend_12 { pt3dadd( 17.1414, -30.7139, 3.78874, 1.33 ) }
    dend_12 { pt3dadd( 17.9647, -32.4728, 0.640286, 0.67 ) }
    dend_12 { pt3dadd( 18.5024, -33.6215, -1.41587, 0.67 ) }
    dend_12 { pt3dadd( 18.919, -34.5115, -3.00908, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 97/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.0142, -26.1692, 11.9235, 0.67 ) }
    dend_1 { pt3dadd( 14.7197, -30.0501, 12.0793, 0.67 ) }
    dend_1 { pt3dadd( 14.7323, -32.8484, 12.4509, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 14.8031, -36.7222, 13.0983, 0.67 ) }
    dend_1 { pt3dadd( 15.0244, -41.2707, 13.8921, 1.33 ) }
    dend_1 { pt3dadd( 15.2293, -45.2013, 14.5698, 1.33 ) }
    dend_1 { pt3dadd( 15.7386, -52.19, 15.7169, 1.33 ) }
    dend_1 { pt3dadd( 16.153, -54.8773, 16.1513, 1.33 ) }
    dend_1 { pt3dadd( 16.7879, -58.2926, 16.7168, 1.33 ) }
    dend_1 { pt3dadd( 17.2601, -60.9395, 17.1227, 1.33 ) }
    dend_1 { pt3dadd( 17.7441, -63.8157, 17.5951, 1.33 ) }
    dend_1 { pt3dadd( 18.193, -67.0684, 18.0129, 1.33 ) }
    dend_1 { pt3dadd( 18.8956, -72.9539, 18.3062, 0.67 ) }
    dend_1 { pt3dadd( 19.1794, -75.6602, 18.4394, 1.33 ) }
    dend_1 { pt3dadd( 19.3939, -77.5527, 18.5274, 1.33 ) }
    dend_1 { pt3dadd( 19.8456, -82.7113, 19.0128, 1.33 ) }
    dend_1 { pt3dadd( 20.0255, -85.6119, 19.2775, 1.33 ) }
    dend_1 { pt3dadd( 20.0483, -89.2937, 19.6285, 0.67 ) }
    dend_1 { pt3dadd( 19.8975, -93.7551, 20.1129, 1.33 ) }
    dend_1 { pt3dadd( 19.7748, -96.5957, 20.3769, 0.67 ) }
    dend_1 { pt3dadd( 19.3034, -104.754, 21.0095, 1.33 ) }
    dend_1 { pt3dadd( 19.0338, -108.642, 21.3226, 1.33 ) }
    dend_1 { pt3dadd( 18.9381, -111.426, 21.5088, 1.33 ) }
    dend_1 { pt3dadd( 18.9029, -114.089, 21.6479, 1.33 ) }
    dend_1 { pt3dadd( 18.9542, -117.803, 21.921, 1.33 ) }
    dend_1 { pt3dadd( 19.0496, -119.801, 22.0931, 1.33 ) }
    dend_1 { pt3dadd( 19.644, -125.188, 22.4588, 2.0 ) }
    dend_1 { pt3dadd( 20.2596, -128.973, 22.917, 1.33 ) }
    dend_1 { pt3dadd( 20.6047, -130.591, 23.1253, 2.0 ) }
    dend_1 { pt3dadd( 21.6988, -135.366, 23.8833, 2.0 ) }
    dend_1 { pt3dadd( 22.1308, -137.177, 24.3508, 2.0 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 28/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.0944, -41.1062, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -4.40542, -56.0488, -1.43279, 0.33 ) }
    axon_1 { pt3dadd( -5.71644, -70.9914, -1.43279, 0.33 ) }
    // Section: dend_80, id: dend_80, parent: dend_48 (entry count 31/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 0.372874, 24.4355, 8.12672, 0.67 ) }
    dend_80 { pt3dadd( 0.703478, 26.4326, 9.63102, 0.67 ) }
    dend_80 { pt3dadd( 1.26862, 29.8463, 12.2025, 0.67 ) }
    dend_80 { pt3dadd( 2.60937, 37.9452, 18.3031, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 35/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 0.372874, 24.4355, 8.12672, 2.67 ) }
    dend_49 { pt3dadd( 1.77281, 29.5437, 3.38269, 2.67 ) }
    dend_49 { pt3dadd( 2.71334, 32.9755, 0.195468, 2.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 38/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.166258, 22.0369, -5.2917, 1.33 ) }
    dend_33 { pt3dadd( -1.71898, 25.3862, -10.7964, 1.33 ) }
    dend_33 { pt3dadd( -2.64979, 27.394, -14.0962, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.166258, 22.0369, -5.2917, 0.67 ) }
    dend_32 { pt3dadd( 2.51278, 19.0845, -4.96159, 0.67 ) }
    dend_32 { pt3dadd( 5.46209, 16.151, -4.1942, 0.33 ) }
    dend_32 { pt3dadd( 7.36234, 14.4797, -3.60631, 0.67 ) }
    dend_32 { pt3dadd( 8.92606, 13.2161, -3.11434, 0.67 ) }
    dend_32 { pt3dadd( 10.4688, 11.9548, -2.62323, 0.33 ) }
    dend_32 { pt3dadd( 11.4613, 11.1815, -2.32032, 0.67 ) }
    dend_32 { pt3dadd( 15.0669, 8.93254, -1.60895, 0.33 ) }
    dend_32 { pt3dadd( 16.3282, 8.23186, -1.40057, 0.67 ) }
    dend_32 { pt3dadd( 18.9277, 6.78158, -1.1428, 0.33 ) }
    dend_32 { pt3dadd( 20.3761, 6.04495, -1.1294, 0.67 ) }
    dend_32 { pt3dadd( 21.9616, 5.31677, -1.27595, 0.33 ) }
    dend_32 { pt3dadd( 24.2974, 4.45338, -1.70241, 0.67 ) }
    dend_32 { pt3dadd( 26.1955, 3.86993, -2.33293, 0.33 ) }
    dend_32 { pt3dadd( 27.6687, 3.4365, -2.83385, 0.67 ) }
    dend_32 { pt3dadd( 28.6201, 3.2451, -3.16257, 0.33 ) }
    dend_32 { pt3dadd( 29.987, 3.0399, -3.61217, 1.33 ) }
    dend_32 { pt3dadd( 33.6913, 2.4725, -4.71139, 0.33 ) }
    dend_32 { pt3dadd( 35.8617, 2.26299, -5.16405, 0.67 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -134.187, 23.0202, -15.6228, 0.33 ) }
    dend_29 { pt3dadd( -135.085, 21.0876, -15.8147, 0.33 ) }
    dend_29 { pt3dadd( -135.773, 19.6072, -15.9617, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 63/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -134.187, 23.0202, -15.6228, 0.33 ) }
    dend_28 { pt3dadd( -136.47, 23.0667, -14.8746, 0.33 ) }
    dend_28 { pt3dadd( -137.232, 23.0822, -14.6252, 0.67 ) }
    dend_28 { pt3dadd( -139.441, 23.1272, -13.901, 0.33 ) }
    dend_28 { pt3dadd( -141.356, 23.1662, -13.2736, 0.67 ) }
    dend_28 { pt3dadd( -142.723, 23.1941, -12.8255, 0.33 ) }
    dend_28 { pt3dadd( -143.56, 23.2111, -12.5513, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_12 (entry count 70/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 18.919, -34.5115, -3.00908, 0.67 ) }
    dend_20 { pt3dadd( 21.7985, -36.4501, -7.12085, 0.67 ) }
    dend_20 { pt3dadd( 23.9711, -37.8849, -9.73345, 0.67 ) }
    dend_20 { pt3dadd( 28.959, -40.3709, -14.8385, 1.33 ) }
    dend_20 { pt3dadd( 30.7012, -40.8198, -16.3066, 0.67 ) }
    dend_20 { pt3dadd( 34.979, -41.3001, -19.3155, 0.67 ) }
    dend_20 { pt3dadd( 37.3322, -41.4505, -20.5989, 1.33 ) }
    dend_20 { pt3dadd( 40.4274, -41.4749, -22.0944, 0.67 ) }
    dend_20 { pt3dadd( 44.1059, -41.2044, -23.2272, 0.67 ) }
    dend_20 { pt3dadd( 49.6532, -39.9657, -24.1759, 0.67 ) }
    dend_20 { pt3dadd( 51.9386, -39.2185, -24.4476, 0.67 ) }
    dend_20 { pt3dadd( 56.2313, -37.4852, -24.6389, 0.67 ) }
    dend_20 { pt3dadd( 62.2955, -34.4138, -24.8504, 1.33 ) }
    dend_20 { pt3dadd( 65.4006, -32.6407, -25.0022, 0.67 ) }
    dend_20 { pt3dadd( 68.9441, -30.3537, -25.2647, 1.33 ) }
    dend_20 { pt3dadd( 70.5556, -29.1788, -25.6926, 0.67 ) }
    dend_20 { pt3dadd( 71.6071, -28.3359, -26.1875, 1.33 ) }
    dend_20 { pt3dadd( 72.9517, -27.0785, -27.0813, 0.67 ) }
    dend_20 { pt3dadd( 75.2302, -24.8951, -28.8025, 0.67 ) }
    dend_20 { pt3dadd( 77.8582, -22.5967, -30.9085, 1.33 ) }
    dend_20 { pt3dadd( 82.7361, -18.9797, -34.5915, 0.67 ) }
    dend_20 { pt3dadd( 85.2414, -17.2352, -36.3976, 0.33 ) }
    dend_20 { pt3dadd( 87.4699, -15.7361, -38.1358, 0.33 ) }
    dend_20 { pt3dadd( 89.2092, -14.7383, -39.6998, 0.67 ) }
    dend_20 { pt3dadd( 91.2715, -13.6684, -41.8959, 0.67 ) }
    dend_20 { pt3dadd( 93.3497, -12.7398, -44.1519, 0.67 ) }
    dend_20 { pt3dadd( 94.2876, -12.319, -45.1541, 0.67 ) }
    dend_20 { pt3dadd( 99.0647, -10.1827, -50.401, 2.0 ) }
    dend_20 { pt3dadd( 103.707, -8.30683, -55.6914, 0.33 ) }
    dend_20 { pt3dadd( 106.505, -7.20334, -59.1482, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_20 { pt3dadd( 107.503, -6.85394, -60.4726, 0.33 ) }
    dend_20 { pt3dadd( 108.481, -6.49744, -61.8608, 0.67 ) }
    dend_20 { pt3dadd( 109.427, -6.16186, -63.226, 0.33 ) }
    dend_20 { pt3dadd( 112.327, -5.07362, -66.7312, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 4/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 18.919, -34.5115, -3.00908, 0.67 ) }
    dend_13 { pt3dadd( 20.3561, -40.1826, -5.17618, 0.67 ) }
    dend_13 { pt3dadd( 21.6401, -44.7786, -7.06039, 0.67 ) }
    dend_13 { pt3dadd( 22.2284, -46.7274, -7.84237, 0.67 ) }
    dend_13 { pt3dadd( 24.0987, -53.2453, -10.2934, 1.33 ) }
    dend_13 { pt3dadd( 24.7115, -55.4611, -11.0583, 2.0 ) }
    dend_13 { pt3dadd( 25.7323, -59.2956, -12.2933, 0.67 ) }
    dend_13 { pt3dadd( 26.4118, -62.0018, -13.2469, 1.33 ) }
    dend_13 { pt3dadd( 26.9911, -64.8862, -14.1874, 0.67 ) }
    dend_13 { pt3dadd( 27.7901, -69.482, -15.4209, 0.67 ) }
    dend_13 { pt3dadd( 28.2876, -73.004, -16.0548, 1.33 ) }
    dend_13 { pt3dadd( 28.6103, -75.3735, -16.5297, 0.33 ) }
    dend_13 { pt3dadd( 28.8603, -77.5213, -16.9891, 0.33 ) }
    dend_13 { pt3dadd( 29.0524, -80.2685, -17.5993, 0.67 ) }
    dend_13 { pt3dadd( 29.1478, -81.96, -18.0473, 1.33 ) }
    dend_13 { pt3dadd( 29.3906, -85.2909, -19.0083, 0.67 ) }
    dend_13 { pt3dadd( 29.6788, -89.5196, -19.9851, 0.67 ) }
    dend_13 { pt3dadd( 29.9769, -94.2836, -20.8305, 1.33 ) }
    dend_13 { pt3dadd( 30.2081, -98.7367, -21.4092, 0.67 ) }
    dend_13 { pt3dadd( 30.2433, -101.188, -21.6324, 2.67 ) }
    dend_13 { pt3dadd( 30.1417, -103.964, -21.574, 0.67 ) }
    dend_13 { pt3dadd( 29.6405, -109.983, -21.2033, 0.67 ) }
    dend_13 { pt3dadd( 29.3466, -112.133, -20.9867, 0.33 ) }
    dend_13 { pt3dadd( 28.9819, -114.603, -20.7267, 0.67 ) }
    dend_13 { pt3dadd( 28.737, -116.343, -20.5889, 0.33 ) }
    dend_13 { pt3dadd( 27.8828, -122.675, -20.415, 2.0 ) }
    dend_13 { pt3dadd( 27.1607, -129.562, -20.8467, 0.67 ) }
    dend_13 { pt3dadd( 27.0576, -131.092, -21.0809, 0.67 ) }
    dend_13 { pt3dadd( 27.0308, -133.556, -21.463, 0.67 ) }
    dend_13 { pt3dadd( 27.1058, -136.619, -21.9711, 1.33 ) }
    dend_13 { pt3dadd( 27.2044, -139.347, -22.4795, 0.67 ) }
    dend_13 { pt3dadd( 27.437, -143.492, -23.4751, 0.67 ) }
    dend_13 { pt3dadd( 27.5413, -145.63, -23.8925, 1.33 ) }
    dend_13 { pt3dadd( 27.6965, -148.743, -24.5568, 0.67 ) }
    dend_13 { pt3dadd( 27.9229, -153.453, -25.7949, 0.67 ) }
    dend_13 { pt3dadd( 28.0022, -155.134, -26.1992, 0.67 ) }
    dend_13 { pt3dadd( 28.1284, -157.728, -26.7377, 0.67 ) }
    dend_13 { pt3dadd( 28.1852, -160.205, -27.1995, 0.67 ) }
    dend_13 { pt3dadd( 28.2104, -161.546, -27.5116, 1.33 ) }
    dend_13 { pt3dadd( 28.15, -164.946, -28.4497, 0.67 ) }
    dend_13 { pt3dadd( 28.2488, -169.778, -29.8043, 2.0 ) }
    dend_13 { pt3dadd( 28.3544, -173.882, -30.691, 0.67 ) }
    dend_13 { pt3dadd( 28.3703, -175.328, -30.9222, 0.67 ) }
    dend_13 { pt3dadd( 28.286, -180.865, -31.5708, 1.33 ) }
    dend_13 { pt3dadd( 28.2502, -183.172, -31.7599, 0.67 ) }
    dend_13 { pt3dadd( 28.1519, -186.836, -31.911, 0.67 ) }
    dend_13 { pt3dadd( 27.9474, -191.262, -32.0412, 1.33 ) }
    dend_13 { pt3dadd( 27.7392, -195.738, -31.8892, 0.67 ) }
    dend_13 { pt3dadd( 27.5596, -198.993, -31.6739, 0.67 ) }
    dend_13 { pt3dadd( 27.3717, -202.259, -31.4676, 0.67 ) }
    dend_13 { pt3dadd( 27.2429, -204.96, -31.5214, 0.67 ) }
    dend_13 { pt3dadd( 27.104, -208.069, -31.8481, 2.0 ) }
    dend_13 { pt3dadd( 27.1046, -212.625, -32.6715, 0.67 ) }
    dend_13 { pt3dadd( 27.2211, -217.205, -33.6781, 0.67 ) }
    dend_13 { pt3dadd( 27.3786, -221.128, -34.4994, 2.0 ) }
    dend_13 { pt3dadd( 27.6421, -226.337, -35.4624, 0.67 ) }
    dend_13 { pt3dadd( 27.9458, -229.466, -35.9593, 1.33 ) }
    dend_13 { pt3dadd( 28.3258, -232.817, -36.3683, 0.67 ) }
    dend_13 { pt3dadd( 28.4607, -234.349, -36.4871, 0.67 ) }
    dend_13 { pt3dadd( 29.032, -239.499, -36.5701, 2.0 ) }
    dend_13 { pt3dadd( 29.3759, -242.757, -36.4615, 0.67 ) }
    dend_13 { pt3dadd( 29.6766, -245.363, -36.3548, 0.67 ) }
    dend_13 { pt3dadd( 30.5095, -252.636, -36.2456, 0.67 ) }
    dend_13 { pt3dadd( 30.7174, -254.631, -36.2986, 0.67 ) }
    dend_13 { pt3dadd( 31.0572, -258.032, -36.5446, 0.67 ) }
    dend_13 { pt3dadd( 31.3656, -260.746, -37.0356, 0.67 ) }
    dend_13 { pt3dadd( 31.6198, -263.863, -37.6282, 2.0 ) }
    dend_13 { pt3dadd( 31.7622, -266.231, -38.1203, 0.67 ) }
    dend_13 { pt3dadd( 32.0995, -270.28, -38.9977, 1.33 ) }
    dend_13 { pt3dadd( 32.2812, -272.648, -39.5398, 0.67 ) }
    dend_13 { pt3dadd( 32.4201, -277.399, -40.7674, 0.67 ) }
    dend_13 { pt3dadd( 32.5058, -281.753, -41.9859, 1.33 ) }
    dend_13 { pt3dadd( 32.5331, -284.852, -42.9342, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 22.1308, -137.177, 24.3508, 1.33 ) }
    dend_11 { pt3dadd( 20.5888, -138.462, 25.5637, 1.33 ) }
    dend_11 { pt3dadd( 19.4119, -139.443, 26.4895, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 22.1308, -137.177, 24.3508, 0.67 ) }
    dend_2 { pt3dadd( 22.1511, -140.832, 23.4416, 0.67 ) }
    dend_2 { pt3dadd( 22.1721, -144.605, 22.5026, 2.0 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 2.60937, 37.9452, 18.3031, 0.33 ) }
    dend_82 { pt3dadd( 3.47278, 39.8178, 21.2236, 0.33 ) }
    dend_82 { pt3dadd( 3.91439, 40.6456, 22.6406, 0.67 ) }
    dend_82 { pt3dadd( 5.32123, 42.7985, 27.0717, 0.67 ) }
    dend_82 { pt3dadd( 5.98119, 43.8085, 29.1503, 0.33 ) }
    dend_82 { pt3dadd( 6.42248, 44.4839, 30.5402, 0.33 ) }
    dend_82 { pt3dadd( 7.54233, 46.1976, 34.0674, 0.67 ) }
    dend_82 { pt3dadd( 7.88292, 46.9709, 35.645, 0.33 ) }
    dend_82 { pt3dadd( 8.54059, 48.2484, 38.7077, 0.33 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 2.60937, 37.9452, 18.3031, 0.67 ) }
    dend_81 { pt3dadd( 2.41868, 40.5822, 20.6874, 0.67 ) }
    dend_81 { pt3dadd( 2.26292, 42.7361, 22.635, 0.33 ) }
    dend_81 { pt3dadd( 2.14896, 44.3119, 24.0599, 0.67 ) }
    dend_81 { pt3dadd( 1.83138, 48.7036, 28.0307, 0.33 ) }
    // Section: dend_73, id: dend_73, parent: dend_49 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 2.71334, 32.9755, 0.195468, 0.67 ) }
    dend_73 { pt3dadd( 5.23464, 35.4459, -3.60263, 0.67 ) }
    dend_73 { pt3dadd( 6.18536, 36.3775, -5.0348, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_73 { pt3dadd( 8.28476, 38.4345, -8.19734, 0.67 ) }
    dend_73 { pt3dadd( 9.07288, 39.2067, -9.38456, 1.33 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 2.71334, 32.9755, 0.195468, 2.0 ) }
    dend_50 { pt3dadd( 1.33966, 37.5062, 0.697933, 2.0 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 4/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.64979, 27.394, -14.0962, 0.67 ) }
    dend_43 { pt3dadd( -1.01837, 33.5112, -11.2896, 0.67 ) }
    dend_43 { pt3dadd( -0.326185, 35.4865, -10.3993, 0.67 ) }
    dend_43 { pt3dadd( 2.2922, 41.5106, -7.84227, 0.33 ) }
    dend_43 { pt3dadd( 3.00715, 42.9949, -7.25148, 0.33 ) }
    dend_43 { pt3dadd( 4.3627, 45.7342, -6.22331, 1.33 ) }
    dend_43 { pt3dadd( 5.18073, 47.3362, -5.71861, 0.67 ) }
    dend_43 { pt3dadd( 6.61792, 50.4148, -4.73106, 0.33 ) }
    dend_43 { pt3dadd( 7.94813, 52.7175, -4.30124, 1.33 ) }
    dend_43 { pt3dadd( 8.94675, 54.0968, -4.2592, 0.33 ) }
    dend_43 { pt3dadd( 9.66358, 55.0137, -4.2462, 0.67 ) }
    dend_43 { pt3dadd( 11.393, 57.1396, -4.46843, 0.33 ) }
    dend_43 { pt3dadd( 12.8381, 58.9572, -4.8147, 0.67 ) }
    dend_43 { pt3dadd( 14.8051, 61.4763, -5.45741, 1.33 ) }
    dend_43 { pt3dadd( 16.3165, 63.5769, -5.8269, 0.33 ) }
    dend_43 { pt3dadd( 17.2233, 64.857, -5.96365, 0.67 ) }
    dend_43 { pt3dadd( 20.4867, 69.6194, -6.1681, 0.33 ) }
    dend_43 { pt3dadd( 21.5706, 71.3641, -6.12461, 0.33 ) }
    dend_43 { pt3dadd( 22.5727, 73.215, -6.03495, 0.67 ) }
    dend_43 { pt3dadd( 24.6851, 77.8609, -5.70273, 0.33 ) }
    dend_43 { pt3dadd( 25.4377, 79.6594, -5.53573, 0.33 ) }
    dend_43 { pt3dadd( 25.956, 81.034, -5.34707, 0.67 ) }
    dend_43 { pt3dadd( 26.6648, 83.2149, -4.89901, 2.0 ) }
    dend_43 { pt3dadd( 27.3206, 85.4544, -4.57851, 0.33 ) }
    dend_43 { pt3dadd( 27.7266, 86.9577, -4.44049, 0.33 ) }
    dend_43 { pt3dadd( 28.0754, 88.0132, -4.31665, 0.67 ) }
    dend_43 { pt3dadd( 28.6741, 89.6709, -4.10308, 0.33 ) }
    dend_43 { pt3dadd( 28.9735, 90.4284, -3.98551, 0.67 ) }
    dend_43 { pt3dadd( 30.0551, 92.8656, -3.51076, 0.33 ) }
    dend_43 { pt3dadd( 30.8825, 94.6028, -3.09011, 0.33 ) }
    dend_43 { pt3dadd( 33.3486, 99.6975, -1.61374, 0.33 ) }
    dend_43 { pt3dadd( 34.6057, 102.274, -0.721196, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.64979, 27.394, -14.0962, 0.67 ) }
    dend_34 { pt3dadd( -3.94011, 29.5758, -18.8649, 0.67 ) }
    dend_34 { pt3dadd( -4.62326, 30.7309, -21.3896, 0.67 ) }
    dend_34 { pt3dadd( -7.05871, 34.849, -30.3902, 2.0 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 40/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 112.327, -5.07362, -66.7312, 0.33 ) }
    dend_22 { pt3dadd( 112.679, -4.13932, -69.1753, 0.33 ) }
    dend_22 { pt3dadd( 112.777, -3.87854, -69.8575, 0.67 ) }
    dend_22 { pt3dadd( 113.569, -1.77454, -75.3617, 0.33 ) }
    dend_22 { pt3dadd( 113.939, -0.791868, -77.9324, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 112.327, -5.07362, -66.7312, 0.33 ) }
    dend_21 { pt3dadd( 114.828, -5.63306, -65.937, 0.33 ) }
    dend_21 { pt3dadd( 115.239, -5.72675, -65.8152, 0.67 ) }
    dend_21 { pt3dadd( 118.286, -6.49068, -65.7989, 0.33 ) }
    dend_21 { pt3dadd( 120.543, -7.17625, -66.1208, 1.33 ) }
    dend_21 { pt3dadd( 124.36, -8.58999, -66.7143, 0.33 ) }
    dend_21 { pt3dadd( 125.808, -9.22969, -66.9472, 0.33 ) }
    dend_21 { pt3dadd( 128.881, -11.1027, -67.6125, 1.33 ) }
    dend_21 { pt3dadd( 135.272, -16.175, -69.8273, 0.33 ) }
    dend_21 { pt3dadd( 136.439, -17.6546, -70.4543, 0.33 ) }
    dend_21 { pt3dadd( 138.13, -20.4541, -71.6432, 0.67 ) }
    dend_21 { pt3dadd( 139.036, -22.3354, -72.3749, 0.67 ) }
    dend_21 { pt3dadd( 140.188, -25.1811, -73.1461, 0.33 ) }
    dend_21 { pt3dadd( 141.369, -28.6964, -73.8692, 0.67 ) }
    dend_21 { pt3dadd( 143.527, -35.7779, -74.5556, 0.33 ) }
    dend_21 { pt3dadd( 143.659, -36.1926, -74.6119, 0.67 ) }
    dend_21 { pt3dadd( 145.129, -40.433, -75.4473, 0.33 ) }
    dend_21 { pt3dadd( 146.115, -43.2728, -75.9678, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 32.5331, -284.852, -42.9342, 0.33 ) }
    dend_19 { pt3dadd( 34.0892, -285.739, -41.9651, 0.33 ) }
    dend_19 { pt3dadd( 34.6223, -286.084, -41.613, 0.67 ) }
    dend_19 { pt3dadd( 35.0657, -286.524, -41.2422, 0.67 ) }
    dend_19 { pt3dadd( 35.8135, -287.302, -40.6124, 0.33 ) }
    dend_19 { pt3dadd( 37.0017, -288.507, -39.7058, 2.0 ) }
    dend_19 { pt3dadd( 38.5973, -290.122, -38.349, 0.33 ) }
    dend_19 { pt3dadd( 39.0193, -290.606, -37.934, 1.33 ) }
    dend_19 { pt3dadd( 41.9832, -294.316, -34.759, 0.67 ) }
    dend_19 { pt3dadd( 42.5868, -295.145, -34.0692, 0.33 ) }
    dend_19 { pt3dadd( 43.2753, -296.165, -33.2265, 1.33 ) }
    dend_19 { pt3dadd( 45.1467, -299.093, -30.8232, 0.67 ) }
    dend_19 { pt3dadd( 45.6859, -299.954, -29.8886, 0.67 ) }
    dend_19 { pt3dadd( 45.9431, -300.339, -29.2799, 1.33 ) }
    dend_19 { pt3dadd( 46.2207, -300.767, -28.1799, 0.33 ) }
    dend_19 { pt3dadd( 46.4462, -301.398, -26.6976, 0.33 ) }
    dend_19 { pt3dadd( 46.5088, -302.115, -25.3249, 0.33 ) }
    dend_19 { pt3dadd( 46.6806, -304.335, -21.1111, 0.67 ) }
    dend_19 { pt3dadd( 46.7291, -304.716, -20.3303, 0.67 ) }
    dend_19 { pt3dadd( 46.7884, -305.358, -19.006, 0.67 ) }
    dend_19 { pt3dadd( 46.7878, -306.245, -17.3481, 0.33 ) }
    dend_19 { pt3dadd( 46.6182, -307.731, -15.3111, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 32.5331, -284.852, -42.9342, 0.67 ) }
    dend_14 { pt3dadd( 32.603, -286.718, -43.7541, 0.67 ) }
    dend_14 { pt3dadd( 32.6984, -289.264, -44.8729, 0.67 ) }
    dend_14 { pt3dadd( 32.8285, -292.737, -46.3991, 0.33 ) }
    dend_14 { pt3dadd( 32.8988, -294.614, -47.2237, 2.0 ) }
    dend_14 { pt3dadd( 33.0061, -297.481, -48.4833, 0.33 ) }
    dend_14 { pt3dadd( 33.0567, -298.831, -49.0765, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 92/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 22.1721, -144.605, 22.5026, 0.33 ) }
    dend_8 { pt3dadd( 18.1758, -147.214, 25.8284, 0.33 ) }
    dend_8 { pt3dadd( 16.9391, -148.139, 26.6793, 0.33 ) }
    dend_8 { pt3dadd( 14.7375, -150.025, 27.937, 0.33 ) }
    dend_8 { pt3dadd( 13.7928, -150.953, 28.4202, 0.33 ) }
    dend_8 { pt3dadd( 11.6584, -153.011, 29.1164, 0.67 ) }
    dend_8 { pt3dadd( 10.3113, -154.312, 29.4524, 0.67 ) }
    dend_8 { pt3dadd( 8.6291, -155.974, 29.5998, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 6.87662, -157.814, 29.7255, 0.33 ) }
    dend_8 { pt3dadd( 5.68225, -159.169, 29.7371, 0.33 ) }
    dend_8 { pt3dadd( 2.40184, -162.994, 29.6485, 0.33 ) }
    dend_8 { pt3dadd( 1.30495, -164.37, 29.4427, 1.33 ) }
    dend_8 { pt3dadd( -0.0879407, -166.254, 29.0946, 0.33 ) }
    dend_8 { pt3dadd( -1.32754, -168.064, 28.6845, 0.33 ) }
    dend_8 { pt3dadd( -3.57714, -171.54, 27.733, 0.67 ) }
    dend_8 { pt3dadd( -4.95171, -173.887, 26.9945, 1.33 ) }
    dend_8 { pt3dadd( -7.07226, -178.936, 25.1968, 0.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 22.1721, -144.605, 22.5026, 0.67 ) }
    dend_3 { pt3dadd( 22.3264, -148.45, 22.981, 0.67 ) }
    dend_3 { pt3dadd( 22.4206, -150.829, 23.3885, 1.33 ) }
    dend_3 { pt3dadd( 22.6999, -158.858, 24.9404, 0.67 ) }
    dend_3 { pt3dadd( 22.8233, -160.646, 25.2861, 0.67 ) }
    dend_3 { pt3dadd( 22.9303, -162.361, 25.5571, 0.67 ) }
    dend_3 { pt3dadd( 23.0906, -166.194, 25.9805, 0.67 ) }
    dend_3 { pt3dadd( 23.1559, -168.253, 26.2122, 1.33 ) }
    dend_3 { pt3dadd( 23.2628, -171.3, 26.535, 0.67 ) }
    dend_3 { pt3dadd( 23.4948, -175.728, 26.8779, 0.67 ) }
    dend_3 { pt3dadd( 23.6137, -179.072, 26.9538, 0.67 ) }
    dend_3 { pt3dadd( 23.698, -181.922, 26.7263, 1.33 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 9.07288, 39.2067, -9.38456, 1.33 ) }
    dend_75 { pt3dadd( 11.8722, 41.1199, -7.47359, 0.33 ) }
    dend_75 { pt3dadd( 12.8426, 41.7831, -6.81109, 1.33 ) }
    dend_75 { pt3dadd( 15.8609, 43.846, -4.75061, 0.33 ) }
    dend_75 { pt3dadd( 17.9648, 45.2838, -3.31438, 0.67 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 9.07288, 39.2067, -9.38456, 1.33 ) }
    dend_74 { pt3dadd( 9.02243, 40.1204, -13.609, 1.33 ) }
    dend_74 { pt3dadd( 9.75087, 42.3721, -22.095, 0.67 ) }
    dend_74 { pt3dadd( 11.1153, 45.3565, -32.1513, 1.33 ) }
    dend_74 { pt3dadd( 11.7655, 46.3912, -36.234, 1.33 ) }
    dend_74 { pt3dadd( 14.2375, 49.5898, -48.8808, 0.67 ) }
    dend_74 { pt3dadd( 15.2833, 50.6117, -53.2293, 1.33 ) }
    dend_74 { pt3dadd( 18.6564, 53.4492, -65.0566, 0.67 ) }
    dend_74 { pt3dadd( 19.4033, 53.9744, -66.9563, 1.33 ) }
    dend_74 { pt3dadd( 23.1246, 55.8725, -74.3866, 0.67 ) }
    dend_74 { pt3dadd( 25.2313, 56.5694, -77.9707, 1.33 ) }
    dend_74 { pt3dadd( 31.5955, 57.6527, -87.4523, 0.67 ) }
    dend_74 { pt3dadd( 32.7017, 57.7292, -88.9212, 1.33 ) }
    dend_74 { pt3dadd( 35.4761, 57.7425, -91.6245, 0.67 ) }
    dend_74 { pt3dadd( 37.4856, 57.6871, -93.2201, 1.33 ) }
    dend_74 { pt3dadd( 42.6523, 57.394, -95.6538, 0.33 ) }
    dend_74 { pt3dadd( 44.5224, 57.1504, -96.2487, 0.67 ) }
    dend_74 { pt3dadd( 47.0172, 56.9426, -96.5812, 0.33 ) }
    dend_74 { pt3dadd( 47.9919, 56.8946, -96.7045, 0.33 ) }
    dend_74 { pt3dadd( 52.466, 56.659, -97.2933, 2.0 ) }
    dend_74 { pt3dadd( 57.3562, 56.6519, -97.9164, 0.67 ) }
    dend_74 { pt3dadd( 62.9476, 57.1488, -98.7071, 0.33 ) }
    dend_74 { pt3dadd( 67.2936, 57.8147, -99.3971, 1.33 ) }
    dend_74 { pt3dadd( 69.9426, 58.4135, -99.8331, 1.33 ) }
    dend_74 { pt3dadd( 73.8469, 59.49, -100.499, 0.33 ) }
    dend_74 { pt3dadd( 75.8773, 60.241, -100.957, 1.33 ) }
    dend_74 { pt3dadd( 81.1783, 62.6903, -102.425, 0.33 ) }
    dend_74 { pt3dadd( 82.1609, 63.1881, -102.626, 1.33 ) }
    dend_74 { pt3dadd( 84.483, 64.434, -103.043, 0.33 ) }
    dend_74 { pt3dadd( 85.4044, 65.0291, -103.188, 0.67 ) }
    dend_74 { pt3dadd( 89.6652, 68.1836, -103.794, 0.33 ) }
    dend_74 { pt3dadd( 90.5296, 68.8603, -103.86, 0.67 ) }
    dend_74 { pt3dadd( 95.1192, 72.5123, -103.84, 0.33 ) }
    dend_74 { pt3dadd( 96.7237, 73.7739, -103.769, 1.33 ) }
    dend_74 { pt3dadd( 98.8568, 75.3949, -103.595, 0.33 ) }
    dend_74 { pt3dadd( 99.2664, 75.693, -103.602, 0.67 ) }
    dend_74 { pt3dadd( 103.119, 78.3948, -104.212, 0.33 ) }
    dend_74 { pt3dadd( 104.395, 79.2723, -104.465, 1.33 ) }
    dend_74 { pt3dadd( 107.977, 81.3473, -105.26, 0.33 ) }
    dend_74 { pt3dadd( 109.614, 82.0638, -105.424, 0.67 ) }
    dend_74 { pt3dadd( 117.055, 84.0203, -105.319, 0.67 ) }
    dend_74 { pt3dadd( 120.427, 84.1061, -104.785, 0.33 ) }
    dend_74 { pt3dadd( 128.732, 83.3886, -102.955, 2.0 ) }
    dend_74 { pt3dadd( 134.363, 82.4608, -101.177, 0.33 ) }
    dend_74 { pt3dadd( 137.749, 81.5712, -99.6669, 0.33 ) }
    dend_74 { pt3dadd( 140.191, 80.8155, -98.2645, 0.67 ) }
    dend_74 { pt3dadd( 145.695, 78.934, -94.2833, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 73/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 1.33966, 37.5062, 0.697933, 2.0 ) }
    dend_52 { pt3dadd( -0.421163, 42.2853, -4.15113, 2.0 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 1.33966, 37.5062, 0.697933, 0.67 ) }
    dend_51 { pt3dadd( 1.74933, 42.6859, 1.78266, 0.67 ) }
    dend_51 { pt3dadd( 2.09526, 46.5463, 2.48174, 0.67 ) }
    dend_51 { pt3dadd( 2.32672, 50.0636, 3.079, 0.67 ) }
    dend_51 { pt3dadd( 2.5472, 54.2168, 3.64018, 0.67 ) }
    dend_51 { pt3dadd( 2.7284, 59.7543, 4.26024, 0.67 ) }
    dend_51 { pt3dadd( 2.8483, 63.2625, 4.59209, 1.33 ) }
    dend_51 { pt3dadd( 3.0451, 72.1629, 5.30843, 0.67 ) }
    dend_51 { pt3dadd( 3.02287, 75.6726, 5.36556, 0.67 ) }
    dend_51 { pt3dadd( 3.02789, 81.1823, 5.33252, 0.67 ) }
    dend_51 { pt3dadd( 3.12592, 84.0672, 5.27333, 0.67 ) }
    dend_51 { pt3dadd( 3.28324, 86.2776, 5.16248, 1.33 ) }
    dend_51 { pt3dadd( 3.70511, 89.7674, 5.19812, 0.67 ) }
    dend_51 { pt3dadd( 4.85973, 96.6771, 6.01424, 0.67 ) }
    dend_51 { pt3dadd( 6.11411, 102.084, 6.96885, 0.67 ) }
    dend_51 { pt3dadd( 7.06888, 105.276, 7.92165, 1.33 ) }
    dend_51 { pt3dadd( 7.79464, 107.263, 8.72673, 0.67 ) }
    dend_51 { pt3dadd( 9.04451, 110.37, 10.4844, 0.67 ) }
    dend_51 { pt3dadd( 9.86822, 111.81, 11.7817, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 94/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 34.6057, 102.274, -0.721196, 0.33 ) }
    dend_47 { pt3dadd( 35.4758, 102.369, -1.39846, 0.33 ) }
    dend_47 { pt3dadd( 36.7665, 102.51, -2.40302, 0.67 ) }
    dend_47 { pt3dadd( 37.6302, 102.605, -3.07522, 0.33 ) }
    dend_47 { pt3dadd( 38.1152, 102.658, -3.45269, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 99/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 34.6057, 102.274, -0.721196, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( 34.7963, 103.336, -1.25033, 1.33 ) }
    dend_44 { pt3dadd( 35.0893, 105.038, -2.26714, 0.33 ) }
    dend_44 { pt3dadd( 35.1393, 105.31, -2.46301, 0.67 ) }
    dend_44 { pt3dadd( 35.3721, 106.691, -3.58606, 0.33 ) }
    dend_44 { pt3dadd( 35.4841, 107.225, -3.95384, 0.67 ) }
    dend_44 { pt3dadd( 36.3578, 110.661, -5.97197, 0.33 ) }
    dend_44 { pt3dadd( 36.5014, 111.065, -6.18519, 0.67 ) }
    dend_44 { pt3dadd( 37.2647, 112.806, -7.02523, 0.33 ) }
    dend_44 { pt3dadd( 38.0312, 114.529, -7.62786, 0.67 ) }
    dend_44 { pt3dadd( 39.9609, 118.856, -8.60487, 0.33 ) }
    dend_44 { pt3dadd( 40.1775, 119.337, -8.65597, 0.67 ) }
    dend_44 { pt3dadd( 41.5542, 121.875, -8.39653, 0.33 ) }
    dend_44 { pt3dadd( 43.7001, 125.964, -8.08645, 1.33 ) }
    dend_44 { pt3dadd( 44.2737, 127.089, -7.98576, 0.33 ) }
    dend_44 { pt3dadd( 44.4232, 127.516, -8.12095, 0.67 ) }
    dend_44 { pt3dadd( 44.9518, 129.607, -9.27493, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.05871, 34.849, -30.3902, 0.33 ) }
    dend_38 { pt3dadd( -7.07775, 36.262, -31.6715, 0.33 ) }
    dend_38 { pt3dadd( -7.18667, 37.4553, -32.6636, 0.33 ) }
    dend_38 { pt3dadd( -7.43182, 39.1011, -33.9012, 0.67 ) }
    dend_38 { pt3dadd( -7.49794, 39.8498, -34.4595, 0.33 ) }
    dend_38 { pt3dadd( -7.63796, 41.1533, -35.4263, 1.33 ) }
    dend_38 { pt3dadd( -7.99496, 43.7037, -37.4248, 0.33 ) }
    dend_38 { pt3dadd( -8.25765, 45.1663, -38.5341, 1.33 ) }
    dend_38 { pt3dadd( -8.52517, 46.1596, -39.3076, 0.33 ) }
    dend_38 { pt3dadd( -9.48425, 48.8856, -41.3437, 0.33 ) }
    dend_38 { pt3dadd( -9.99189, 50.0898, -42.2202, 0.33 ) }
    dend_38 { pt3dadd( -10.9577, 51.9424, -43.4563, 1.33 ) }
    dend_38 { pt3dadd( -11.8053, 53.333, -44.3077, 0.33 ) }
    dend_38 { pt3dadd( -12.4749, 54.3745, -44.9616, 0.33 ) }
    dend_38 { pt3dadd( -12.7771, 54.8022, -45.213, 1.33 ) }
    dend_38 { pt3dadd( -13.6834, 55.9344, -45.7962, 0.33 ) }
    dend_38 { pt3dadd( -14.2822, 56.762, -46.2044, 2.0 ) }
    dend_38 { pt3dadd( -16.0604, 59.3873, -47.4252, 0.33 ) }
    dend_38 { pt3dadd( -16.3582, 59.7922, -47.563, 0.67 ) }
    dend_38 { pt3dadd( -17.1683, 60.832, -47.7551, 0.33 ) }
    dend_38 { pt3dadd( -17.4344, 61.145, -47.7512, 0.67 ) }
    dend_38 { pt3dadd( -18.2757, 62.0854, -47.5975, 0.33 ) }
    dend_38 { pt3dadd( -18.7875, 62.6363, -47.4841, 0.67 ) }
    dend_38 { pt3dadd( -22.1915, 66.09, -46.5019, 0.33 ) }
    dend_38 { pt3dadd( -22.9216, 66.9199, -46.349, 2.67 ) }
    dend_38 { pt3dadd( -25.2113, 69.7686, -46.0294, 0.33 ) }
    dend_38 { pt3dadd( -25.5535, 70.2378, -46.0136, 0.67 ) }
    dend_38 { pt3dadd( -26.8183, 72.1331, -46.1097, 0.33 ) }
    dend_38 { pt3dadd( -27.2938, 72.9552, -46.2438, 0.67 ) }
    dend_38 { pt3dadd( -28.648, 75.7856, -47.078, 0.33 ) }
    dend_38 { pt3dadd( -29.0182, 76.5906, -47.3323, 0.67 ) }
    dend_38 { pt3dadd( -29.4082, 77.4828, -47.6469, 2.0 ) }
    dend_38 { pt3dadd( -29.8938, 78.6276, -48.0357, 0.33 ) }
    dend_38 { pt3dadd( -30.2208, 79.4808, -48.2757, 2.0 ) }
    dend_38 { pt3dadd( -30.7036, 80.8143, -48.6572, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 51/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.05871, 34.849, -30.3902, 0.67 ) }
    dend_35 { pt3dadd( -7.60754, 35.6771, -33.011, 0.67 ) }
    dend_35 { pt3dadd( -8.70295, 36.496, -35.3279, 0.33 ) }
    dend_35 { pt3dadd( -12.4485, 38.3907, -40.5892, 0.67 ) }
    dend_35 { pt3dadd( -14.1897, 39.0203, -42.5266, 0.67 ) }
    dend_35 { pt3dadd( -15.306, 39.3029, -43.5839, 0.33 ) }
    dend_35 { pt3dadd( -16.6847, 39.5717, -44.7713, 0.33 ) }
    dend_35 { pt3dadd( -20.0749, 40.1205, -47.2392, 0.33 ) }
    dend_35 { pt3dadd( -22.4533, 40.3353, -48.7154, 1.33 ) }
    dend_35 { pt3dadd( -24.7714, 40.2042, -49.892, 0.33 ) }
    dend_35 { pt3dadd( -27.3897, 39.8234, -51.2496, 0.67 ) }
    dend_35 { pt3dadd( -28.7144, 39.5639, -51.9367, 0.33 ) }
    dend_35 { pt3dadd( -30.9816, 39.0919, -53.0889, 0.33 ) }
    dend_35 { pt3dadd( -31.9637, 38.9541, -53.6983, 0.67 ) }
    dend_35 { pt3dadd( -33.7969, 38.8077, -55.1258, 0.33 ) }
    dend_35 { pt3dadd( -34.6354, 38.8087, -55.9331, 0.33 ) }
    dend_35 { pt3dadd( -35.3997, 38.8234, -57.0273, 1.33 ) }
    dend_35 { pt3dadd( -36.5099, 38.7853, -59.2354, 1.33 ) }
    dend_35 { pt3dadd( -38.3245, 38.335, -64.6367, 0.33 ) }
    dend_35 { pt3dadd( -38.9332, 38.1785, -66.6945, 0.33 ) }
    dend_35 { pt3dadd( -39.119, 38.1008, -67.5002, 0.67 ) }
    dend_35 { pt3dadd( -39.9695, 37.3482, -72.2288, 0.33 ) }
    dend_35 { pt3dadd( -40.1143, 37.0681, -73.4448, 1.33 ) }
    dend_35 { pt3dadd( -40.4262, 35.3034, -78.5211, 1.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 75/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 113.939, -0.791868, -77.9324, 0.33 ) }
    dend_24 { pt3dadd( 114.903, 0.327462, -77.9273, 0.33 ) }
    dend_24 { pt3dadd( 115.584, 1.11896, -77.9238, 0.67 ) }
    dend_24 { pt3dadd( 116.426, 2.09819, -77.9193, 0.33 ) }
    dend_24 { pt3dadd( 117.15, 2.93867, -77.9156, 0.67 ) }
    dend_24 { pt3dadd( 118.417, 4.41146, -77.9089, 0.33 ) }
    dend_24 { pt3dadd( 118.417, 4.41146, -77.9089, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 82/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 113.939, -0.791868, -77.9324, 0.33 ) }
    dend_23 { pt3dadd( 113.872, -0.172788, -78.9431, 0.33 ) }
    dend_23 { pt3dadd( 113.811, 0.305202, -79.6944, 1.33 ) }
    dend_23 { pt3dadd( 113.163, 4.76872, -86.05, 0.33 ) }
    dend_23 { pt3dadd( 113.029, 5.3886, -87.0282, 2.0 ) }
    dend_23 { pt3dadd( 112.346, 8.23598, -91.5318, 0.33 ) }
    dend_23 { pt3dadd( 112.081, 9.34327, -93.2832, 1.33 ) }
    dend_23 { pt3dadd( 111.532, 11.4141, -96.6935, 0.33 ) }
    dend_23 { pt3dadd( 111.124, 12.7606, -98.9334, 1.33 ) }
    dend_23 { pt3dadd( 109.423, 17.0546, -105.462, 0.33 ) }
    dend_23 { pt3dadd( 109.014, 17.9246, -106.972, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 93/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 33.0567, -298.831, -49.0765, 0.33 ) }
    dend_18 { pt3dadd( 30.7797, -298.531, -47.917, 0.33 ) }
    dend_18 { pt3dadd( 26.6499, -297.988, -45.814, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 96/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 33.0567, -298.831, -49.0765, 0.33 ) }
    dend_15 { pt3dadd( 33.4687, -301.31, -48.9013, 0.33 ) }
    dend_15 { pt3dadd( 33.7564, -303.487, -48.7478, 0.67 ) }
    dend_15 { pt3dadd( 34.1926, -307.214, -48.5235, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 34.5756, -311.487, -48.3402, 1.33 ) }
    dend_15 { pt3dadd( 34.6506, -313.213, -48.3203, 1.33 ) }
    dend_15 { pt3dadd( 34.722, -316.295, -48.3643, 0.67 ) }
    dend_15 { pt3dadd( 34.6446, -317.868, -48.3702, 0.67 ) }
    dend_15 { pt3dadd( 34.4663, -319.611, -48.3893, 0.33 ) }
    dend_15 { pt3dadd( 34.2734, -320.835, -48.4273, 0.67 ) }
    dend_15 { pt3dadd( 33.7946, -323.407, -48.7293, 0.33 ) }
    dend_15 { pt3dadd( 33.1472, -326.143, -49.1044, 0.67 ) }
    dend_15 { pt3dadd( 32.4184, -328.672, -49.3779, 0.33 ) }
    dend_15 { pt3dadd( 31.8687, -330.656, -49.7396, 1.33 ) }
    dend_15 { pt3dadd( 31.208, -332.969, -50.1725, 1.33 ) }
    dend_15 { pt3dadd( 30.559, -335.275, -50.6143, 0.67 ) }
    dend_15 { pt3dadd( 29.6424, -338.477, -51.2776, 0.67 ) }
    dend_15 { pt3dadd( 28.038, -343.682, -52.558, 0.67 ) }
    dend_15 { pt3dadd( 26.5726, -348.8, -54.0797, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 15/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.07226, -178.936, 25.1968, 0.33 ) }
    dend_10 { pt3dadd( -3.59895, -177.569, 29.5396, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 17/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.07226, -178.936, 25.1968, 0.33 ) }
    dend_9 { pt3dadd( -7.66536, -180.289, 25.6487, 0.33 ) }
    dend_9 { pt3dadd( -8.22087, -181.498, 26.0285, 1.33 ) }
    dend_9 { pt3dadd( -9.34169, -183.678, 26.6532, 0.33 ) }
    dend_9 { pt3dadd( -11.5865, -187.907, 27.7553, 0.33 ) }
    dend_9 { pt3dadd( -12.1577, -188.947, 28.0389, 2.0 ) }
    dend_9 { pt3dadd( -13.1117, -190.711, 28.6732, 0.33 ) }
    dend_9 { pt3dadd( -13.2291, -190.906, 28.7548, 0.67 ) }
    dend_9 { pt3dadd( -13.8464, -191.875, 29.2438, 0.33 ) }
    dend_9 { pt3dadd( -14.3667, -192.596, 29.6618, 0.33 ) }
    dend_9 { pt3dadd( -15.0434, -193.696, 30.112, 1.33 ) }
    dend_9 { pt3dadd( -16.8358, -196.868, 31.9724, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 23.698, -181.922, 26.7263, 0.33 ) }
    dend_7 { pt3dadd( 21.9448, -180.522, 27.2932, 0.33 ) }
    dend_7 { pt3dadd( 20.2162, -179.141, 27.8522, 0.33 ) }
    dend_7 { pt3dadd( 17.6962, -177.128, 28.6671, 0.33 ) }
    dend_7 { pt3dadd( 16.7371, -176.362, 28.9772, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 34/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 23.698, -181.922, 26.7263, 0.67 ) }
    dend_4 { pt3dadd( 24.3153, -183.173, 29.7196, 0.67 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 36/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 17.9648, 45.2838, -3.31438, 0.67 ) }
    dend_79 { pt3dadd( 17.0026, 48.1449, -5.88116, 0.67 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 17.9648, 45.2838, -3.31438, 0.67 ) }
    dend_76 { pt3dadd( 19.4962, 44.6188, -2.54022, 0.67 ) }
    dend_76 { pt3dadd( 21.7751, 43.8063, -1.39301, 0.33 ) }
    dend_76 { pt3dadd( 23.0321, 43.5212, -0.688643, 0.67 ) }
    dend_76 { pt3dadd( 24.5421, 43.355, 0.151506, 0.33 ) }
    dend_76 { pt3dadd( 27.8097, 43.2625, 1.76187, 1.33 ) }
    dend_76 { pt3dadd( 29.3421, 43.3324, 2.5746, 0.33 ) }
    dend_76 { pt3dadd( 30.6948, 43.488, 3.27593, 0.67 ) }
    dend_76 { pt3dadd( 32.9338, 43.9576, 4.38116, 0.33 ) }
    dend_76 { pt3dadd( 34.2664, 44.323, 5.07895, 1.33 ) }
    dend_76 { pt3dadd( 36.3841, 45.052, 6.15533, 0.33 ) }
    dend_76 { pt3dadd( 39.5809, 46.3624, 7.64037, 1.33 ) }
    dend_76 { pt3dadd( 41.6715, 47.2754, 8.62309, 0.67 ) }
    dend_76 { pt3dadd( 42.4008, 47.6152, 8.94522, 0.67 ) }
    dend_76 { pt3dadd( 44.6885, 48.751, 10.0264, 0.33 ) }
    dend_76 { pt3dadd( 45.7789, 49.3617, 10.6024, 0.33 ) }
    dend_76 { pt3dadd( 46.8048, 49.9953, 11.1463, 0.33 ) }
    dend_76 { pt3dadd( 48.0038, 50.6983, 11.6575, 0.33 ) }
    dend_76 { pt3dadd( 48.7958, 51.1937, 11.9872, 1.33 ) }
    dend_76 { pt3dadd( 51.3895, 52.8404, 13.0422, 0.33 ) }
    dend_76 { pt3dadd( 52.6195, 53.6729, 13.4958, 0.67 ) }
    dend_76 { pt3dadd( 54.176, 54.6225, 14.1156, 0.67 ) }
    dend_76 { pt3dadd( 55.7942, 55.4372, 14.8002, 0.33 ) }
    dend_76 { pt3dadd( 57.8998, 56.4101, 15.6889, 1.33 ) }
    dend_76 { pt3dadd( 60.2154, 57.4268, 16.6368, 0.67 ) }
    dend_76 { pt3dadd( 62.0839, 58.2233, 17.3243, 0.67 ) }
    dend_76 { pt3dadd( 64.3966, 59.1797, 18.3503, 0.67 ) }
    dend_76 { pt3dadd( 66.7126, 60.1925, 19.6405, 0.67 ) }
    // Section: dend_68, id: dend_68, parent: dend_52 (entry count 66/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -0.421163, 42.2853, -4.15113, 0.67 ) }
    dend_68 { pt3dadd( 0.494048, 48.4511, -8.13499, 0.67 ) }
    dend_68 { pt3dadd( 0.814526, 50.2292, -9.43323, 0.67 ) }
    dend_68 { pt3dadd( 2.47479, 55.9767, -13.5747, 1.33 ) }
    dend_68 { pt3dadd( 3.76951, 60.4588, -16.8043, 1.33 ) }
    dend_68 { pt3dadd( 4.44973, 62.8136, -18.5011, 0.67 ) }
    dend_68 { pt3dadd( 5.24451, 65.565, -20.4836, 1.33 ) }
    dend_68 { pt3dadd( 6.25851, 68.5255, -22.827, 0.33 ) }
    dend_68 { pt3dadd( 8.33236, 72.7678, -26.4509, 1.33 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 75/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -0.421163, 42.2853, -4.15113, 1.33 ) }
    dend_53 { pt3dadd( -2.80252, 44.7539, -1.8729, 1.33 ) }
    dend_53 { pt3dadd( -8.08546, 50.2302, 3.18125, 0.67 ) }
    dend_53 { pt3dadd( -9.80008, 52.0076, 4.82162, 0.67 ) }
    dend_53 { pt3dadd( -13.3826, 55.7213, 8.24896, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 80/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 44.9518, 129.607, -9.27493, 0.33 ) }
    dend_46 { pt3dadd( 44.0009, 130.761, -9.03383, 0.33 ) }
    dend_46 { pt3dadd( 43.8076, 130.995, -8.98481, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 44.9518, 129.607, -9.27493, 0.33 ) }
    dend_45 { pt3dadd( 45.5809, 132.424, -9.67696, 0.33 ) }
    dend_45 { pt3dadd( 45.9297, 133.489, -10.1219, 0.67 ) }
    dend_45 { pt3dadd( 46.8115, 136.207, -11.421, 0.33 ) }
    dend_45 { pt3dadd( 47.2548, 137.513, -12.0945, 0.67 ) }
    dend_45 { pt3dadd( 47.9541, 139.375, -13.0798, 0.33 ) }
    dend_45 { pt3dadd( 49.3186, 142.569, -14.81, 0.67 ) }
    dend_45 { pt3dadd( 50.9907, 145.938, -16.9647, 0.33 ) }
    dend_45 { pt3dadd( 51.9451, 147.692, -18.1485, 0.33 ) }
    dend_45 { pt3dadd( 52.3305, 148.314, -18.5914, 0.67 ) }
    dend_45 { pt3dadd( 53.111, 149.723, -19.626, 0.33 ) }
    dend_45 { pt3dadd( 53.6512, 150.943, -20.4688, 0.67 ) }
    dend_45 { pt3dadd( 54.673, 154.132, -22.2307, 0.33 ) }
    dend_45 { pt3dadd( 54.9642, 155.485, -22.8671, 0.67 ) }
    dend_45 { pt3dadd( 55.1196, 156.243, -23.2428, 0.67 ) }
    dend_45 { pt3dadd( 55.8761, 161.054, -25.5998, 0.33 ) }
    dend_45 { pt3dadd( 55.9602, 162.023, -26.0813, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( 56.0307, 164.849, -27.4686, 0.67 ) }
    dend_45 { pt3dadd( 56.0112, 165.933, -27.9977, 0.33 ) }
    dend_45 { pt3dadd( 55.938, 168.438, -29.2577, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 3/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -30.7036, 80.8143, -48.6572, 0.33 ) }
    dend_40 { pt3dadd( -31.0245, 82.2605, -49.1949, 0.33 ) }
    dend_40 { pt3dadd( -31.2686, 83.3604, -49.6038, 0.67 ) }
    dend_40 { pt3dadd( -31.9611, 86.481, -50.7639, 0.33 ) }
    dend_40 { pt3dadd( -32.4192, 88.5455, -51.5314, 1.33 ) }
    dend_40 { pt3dadd( -33.0051, 91.1858, -52.5129, 0.33 ) }
    dend_40 { pt3dadd( -33.5432, 93.6106, -53.4143, 0.67 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -30.7036, 80.8143, -48.6572, 0.33 ) }
    dend_39 { pt3dadd( -32.6232, 82.0069, -48.1196, 0.33 ) }
    dend_39 { pt3dadd( -35.3908, 84.1069, -47.734, 0.67 ) }
    dend_39 { pt3dadd( -36.3788, 84.9638, -47.6562, 0.33 ) }
    dend_39 { pt3dadd( -37.0243, 85.6974, -47.7803, 0.67 ) }
    dend_39 { pt3dadd( -37.8226, 86.697, -48.0632, 0.33 ) }
    dend_39 { pt3dadd( -38.6155, 87.7484, -48.41, 1.33 ) }
    dend_39 { pt3dadd( -40.9504, 91.3024, -49.8218, 0.33 ) }
    dend_39 { pt3dadd( -42.208, 93.4075, -50.7728, 0.67 ) }
    dend_39 { pt3dadd( -44.9129, 98.0366, -52.9043, 0.33 ) }
    dend_39 { pt3dadd( -45.2195, 98.5556, -53.1479, 0.67 ) }
    dend_39 { pt3dadd( -46.1438, 100.155, -53.887, 0.33 ) }
    dend_39 { pt3dadd( -46.6043, 101.004, -54.2655, 0.67 ) }
    dend_39 { pt3dadd( -47.6783, 103.066, -55.1753, 0.33 ) }
    dend_39 { pt3dadd( -48.2558, 104.009, -55.489, 0.67 ) }
    dend_39 { pt3dadd( -49.5789, 105.74, -55.8089, 0.33 ) }
    dend_39 { pt3dadd( -50.1526, 106.461, -55.9601, 0.33 ) }
    dend_39 { pt3dadd( -50.7241, 107.161, -56.1309, 0.67 ) }
    dend_39 { pt3dadd( -51.6222, 108.221, -56.4159, 0.33 ) }
    dend_39 { pt3dadd( -52.9272, 109.735, -56.8376, 0.67 ) }
    dend_39 { pt3dadd( -54.207, 111.079, -57.2864, 0.33 ) }
    dend_39 { pt3dadd( -54.7295, 111.591, -57.4644, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 32/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -40.4262, 35.3034, -78.5211, 0.33 ) }
    dend_37 { pt3dadd( -45.8104, 38.4234, -84.9523, 0.33 ) }
    dend_37 { pt3dadd( -46.8432, 39.0382, -86.3106, 2.0 ) }
    dend_37 { pt3dadd( -51.1792, 41.6546, -92.1327, 0.33 ) }
    dend_37 { pt3dadd( -51.7214, 41.9433, -92.8073, 0.67 ) }
    dend_37 { pt3dadd( -52.6341, 42.3917, -93.8694, 0.33 ) }
    dend_37 { pt3dadd( -56.0212, 44.0432, -97.4674, 1.33 ) }
    dend_37 { pt3dadd( -57.6004, 44.7341, -99.1055, 0.33 ) }
    dend_37 { pt3dadd( -58.6654, 45.1818, -100.004, 0.67 ) }
    dend_37 { pt3dadd( -62.7291, 46.9571, -102.535, 0.33 ) }
    dend_37 { pt3dadd( -64.6346, 47.8122, -103.575, 1.33 ) }
    dend_37 { pt3dadd( -67.9715, 49.4285, -105.122, 0.33 ) }
    dend_37 { pt3dadd( -70.66, 50.7629, -106.158, 0.33 ) }
    dend_37 { pt3dadd( -73.5514, 52.3171, -107.236, 0.67 ) }
    dend_37 { pt3dadd( -77.305, 54.4978, -108.62, 0.33 ) }
    dend_37 { pt3dadd( -79.0721, 55.6341, -109.251, 1.33 ) }
    dend_37 { pt3dadd( -82.4818, 57.9107, -110.451, 0.33 ) }
    dend_37 { pt3dadd( -83.2331, 58.4502, -110.782, 0.67 ) }
    dend_37 { pt3dadd( -84.4809, 59.4436, -111.446, 0.33 ) }
    dend_37 { pt3dadd( -85.4751, 60.3009, -112.086, 0.67 ) }
    dend_37 { pt3dadd( -86.4266, 61.128, -112.829, 0.33 ) }
    dend_37 { pt3dadd( -87.2358, 61.8346, -113.544, 0.67 ) }
    dend_37 { pt3dadd( -90.6326, 64.8433, -117.046, 0.33 ) }
    dend_37 { pt3dadd( -90.6326, 64.8433, -117.046, 0.67 ) }
    dend_37 { pt3dadd( -91.8116, 66.0133, -118.485, 0.33 ) }
    dend_37 { pt3dadd( -92.235, 66.4272, -119.033, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -40.4262, 35.3034, -78.5211, 0.33 ) }
    dend_36 { pt3dadd( -40.8417, 35.1667, -81.9791, 0.33 ) }
    dend_36 { pt3dadd( -41.6111, 34.9412, -85.6764, 0.67 ) }
    dend_36 { pt3dadd( -42.814, 34.5513, -90.7204, 0.33 ) }
    dend_36 { pt3dadd( -43.0704, 34.44, -91.6347, 0.67 ) }
    dend_36 { pt3dadd( -44.9329, 33.4724, -97.8003, 0.33 ) }
    dend_36 { pt3dadd( -47.1227, 31.9688, -104.647, 2.67 ) }
    dend_36 { pt3dadd( -48.9261, 30.2792, -111.154, 0.33 ) }
    dend_36 { pt3dadd( -49.0786, 30.0751, -111.723, 0.67 ) }
    dend_36 { pt3dadd( -49.7688, 28.6321, -115.039, 0.33 ) }
    dend_36 { pt3dadd( -49.9292, 28.1391, -115.849, 1.33 ) }
    dend_36 { pt3dadd( -50.5879, 25.4947, -118.761, 0.33 ) }
    dend_36 { pt3dadd( -51.3501, 21.5357, -122.079, 2.0 ) }
    dend_36 { pt3dadd( -51.417, 18.9723, -124.274, 0.33 ) }
    dend_36 { pt3dadd( -51.4456, 18.5199, -124.688, 0.67 ) }
    dend_36 { pt3dadd( -51.6877, 16.2906, -126.856, 0.33 ) }
    dend_36 { pt3dadd( -51.817, 15.8771, -127.278, 0.67 ) }
    dend_36 { pt3dadd( -52.7619, 14.1924, -129.057, 0.33 ) }
    dend_36 { pt3dadd( -54.0949, 12.6615, -130.621, 0.67 ) }
    dend_36 { pt3dadd( -56.6301, 10.4552, -133.225, 0.33 ) }
    dend_36 { pt3dadd( -57.5564, 9.77354, -133.959, 0.67 ) }
    dend_36 { pt3dadd( -60.3333, 7.93088, -136.008, 0.33 ) }
    dend_36 { pt3dadd( -60.9611, 7.51635, -136.441, 0.67 ) }
    dend_36 { pt3dadd( -64.5491, 5.26342, -138.571, 0.33 ) }
    dend_36 { pt3dadd( -65.6431, 4.61539, -139.076, 0.67 ) }
    dend_36 { pt3dadd( -69.9009, 2.62601, -140.618, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 26.5726, -348.8, -54.0797, 0.33 ) }
    dend_17 { pt3dadd( 21.1023, -353.183, -52.5244, 0.33 ) }
    dend_17 { pt3dadd( 18.6324, -355.27, -52.113, 0.67 ) }
    dend_17 { pt3dadd( 17.6155, -356.146, -52.0514, 0.33 ) }
    dend_17 { pt3dadd( 16.5368, -357.156, -52.321, 0.33 ) }
    dend_17 { pt3dadd( 15.192, -358.683, -53.1098, 0.33 ) }
    dend_17 { pt3dadd( 14.6888, -359.403, -53.6771, 0.67 ) }
    dend_17 { pt3dadd( 13.9806, -360.873, -55.438, 0.33 ) }
    dend_17 { pt3dadd( 13.5545, -362.03, -56.8376, 0.67 ) }
    dend_17 { pt3dadd( 12.7871, -366.102, -62.1341, 0.33 ) }
    dend_17 { pt3dadd( 12.7309, -367.545, -64.0021, 0.67 ) }
    dend_17 { pt3dadd( 12.9029, -370.059, -67.269, 0.33 ) }
    dend_17 { pt3dadd( 12.9983, -370.772, -68.2048, 0.67 ) }
    dend_17 { pt3dadd( 13.543, -373.286, -71.5022, 0.33 ) }
    dend_17 { pt3dadd( 14.3771, -376.401, -75.3036, 0.67 ) }
    dend_17 { pt3dadd( 14.6937, -377.768, -76.5971, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 14.8486, -378.269, -77.1191, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 1/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 26.5726, -348.8, -54.0797, 0.67 ) }
    dend_16 { pt3dadd( 26.2144, -352.116, -53.8089, 0.67 ) }
    dend_16 { pt3dadd( 25.9605, -355.177, -53.6731, 0.67 ) }
    dend_16 { pt3dadd( 25.8722, -357.281, -53.6359, 0.33 ) }
    dend_16 { pt3dadd( 25.7676, -363.776, -53.7562, 2.67 ) }
    dend_16 { pt3dadd( 25.9652, -369.323, -54.18, 0.67 ) }
    dend_16 { pt3dadd( 26.2546, -373.44, -54.6025, 0.33 ) }
    dend_16 { pt3dadd( 26.3526, -374.412, -54.7392, 0.67 ) }
    dend_16 { pt3dadd( 26.7776, -378.077, -55.4091, 0.33 ) }
    dend_16 { pt3dadd( 27.5761, -384.016, -56.8441, 0.33 ) }
    dend_16 { pt3dadd( 28.2286, -388.223, -58.1446, 0.67 ) }
    dend_16 { pt3dadd( 28.7377, -391.762, -59.2609, 0.33 ) }
    dend_16 { pt3dadd( 29.4322, -396.646, -60.6976, 0.33 ) }
    dend_16 { pt3dadd( 29.8975, -400.427, -61.8583, 0.33 ) }
    dend_16 { pt3dadd( 30.0868, -402.603, -62.5686, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 24.3153, -183.173, 29.7196, 0.33 ) }
    dend_6 { pt3dadd( 22.9809, -185.207, 30.1888, 0.33 ) }
    dend_6 { pt3dadd( 21.9428, -186.79, 30.5539, 0.33 ) }
    dend_6 { pt3dadd( 20.7976, -188.535, 30.9566, 0.33 ) }
    dend_6 { pt3dadd( 20.0609, -189.658, 31.2156, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 24.3153, -183.173, 29.7196, 0.67 ) }
    dend_5 { pt3dadd( 25.5231, -185.737, 30.2408, 0.67 ) }
    dend_5 { pt3dadd( 27.4477, -189.824, 31.0714, 1.33 ) }
    dend_5 { pt3dadd( 28.5483, -192.161, 31.5464, 0.67 ) }
    dend_5 { pt3dadd( 30.5732, -196.46, 32.4202, 1.33 ) }
    dend_5 { pt3dadd( 31.7594, -198.979, 32.9321, 0.67 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 27/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 66.7126, 60.1925, 19.6405, 0.33 ) }
    dend_78 { pt3dadd( 68.6846, 59.4081, 21.4557, 0.33 ) }
    dend_78 { pt3dadd( 71.0253, 58.477, 23.6104, 0.33 ) }
    dend_78 { pt3dadd( 75.2271, 56.8057, 27.4783, 0.33 ) }
    dend_78 { pt3dadd( 77.2255, 56.0109, 29.3178, 0.33 ) }
    dend_78 { pt3dadd( 78.3505, 55.5634, 30.3534, 0.33 ) }
    dend_78 { pt3dadd( 79.8202, 54.9788, 31.7063, 0.67 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 34/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 66.7126, 60.1925, 19.6405, 0.67 ) }
    dend_77 { pt3dadd( 69.379, 61.2023, 21.2401, 0.67 ) }
    dend_77 { pt3dadd( 72.4455, 62.3637, 23.0798, 0.67 ) }
    dend_77 { pt3dadd( 74.3239, 63.0751, 24.2066, 0.67 ) }
    dend_77 { pt3dadd( 75.9916, 63.7067, 25.2072, 0.67 ) }
    dend_77 { pt3dadd( 83.2727, 66.4643, 29.5752, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 40/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 8.33236, 72.7678, -26.4509, 0.33 ) }
    dend_72 { pt3dadd( 11.1319, 74.995, -27.7755, 0.33 ) }
    dend_72 { pt3dadd( 12.3982, 76.1453, -28.2977, 0.33 ) }
    dend_72 { pt3dadd( 13.6881, 76.6509, -27.6898, 0.33 ) }
    dend_72 { pt3dadd( 15.3306, 77.2032, -26.8747, 0.33 ) }
    dend_72 { pt3dadd( 17.2938, 77.9243, -25.8945, 1.33 ) }
    dend_72 { pt3dadd( 19.2035, 78.6895, -24.9677, 0.33 ) }
    dend_72 { pt3dadd( 20.7012, 79.2974, -24.2218, 0.67 ) }
    dend_72 { pt3dadd( 30.3303, 83.6125, -19.1684, 0.33 ) }
    dend_72 { pt3dadd( 31.8099, 84.342, -18.3969, 0.67 ) }
    dend_72 { pt3dadd( 33.2612, 85.0758, -17.6574, 0.33 ) }
    dend_72 { pt3dadd( 34.3073, 85.6681, -17.2126, 0.67 ) }
    dend_72 { pt3dadd( 35.9995, 86.7664, -16.7348, 0.33 ) }
    dend_72 { pt3dadd( 36.6017, 87.2982, -16.7097, 0.67 ) }
    dend_72 { pt3dadd( 37.4281, 88.4588, -17.0548, 0.33 ) }
    dend_72 { pt3dadd( 37.8644, 89.1064, -17.2454, 0.67 ) }
    dend_72 { pt3dadd( 39.9343, 92.1558, -18.2213, 0.33 ) }
    dend_72 { pt3dadd( 41.3768, 94.4231, -18.9355, 0.33 ) }
    dend_72 { pt3dadd( 41.8005, 95.0609, -19.1636, 0.67 ) }
    dend_72 { pt3dadd( 43.9445, 97.9871, -20.4109, 0.33 ) }
    dend_72 { pt3dadd( 44.642, 98.7416, -20.7996, 1.33 ) }
    dend_72 { pt3dadd( 46.2244, 100.109, -21.6966, 0.33 ) }
    dend_72 { pt3dadd( 47.2973, 100.822, -22.3258, 1.33 ) }
    dend_72 { pt3dadd( 50.3395, 102.294, -23.6546, 0.67 ) }
    dend_72 { pt3dadd( 52.3718, 102.95, -24.3729, 0.67 ) }
    dend_72 { pt3dadd( 56.4979, 103.758, -25.642, 0.67 ) }
    dend_72 { pt3dadd( 57.9944, 104.013, -26.0624, 1.33 ) }
    dend_72 { pt3dadd( 59.2256, 104.199, -26.3904, 0.33 ) }
    dend_72 { pt3dadd( 63.8445, 104.927, -27.5923, 1.33 ) }
    dend_72 { pt3dadd( 67.9316, 105.753, -28.5966, 0.33 ) }
    dend_72 { pt3dadd( 70.9415, 106.595, -29.4113, 0.67 ) }
    dend_72 { pt3dadd( 72.3628, 107.139, -29.8667, 0.33 ) }
    dend_72 { pt3dadd( 73.058, 107.454, -30.1178, 0.67 ) }
    dend_72 { pt3dadd( 74.0704, 108.081, -30.5928, 0.33 ) }
    dend_72 { pt3dadd( 74.728, 108.702, -31.0334, 1.33 ) }
    dend_72 { pt3dadd( 75.9705, 110.443, -31.834, 0.33 ) }
    dend_72 { pt3dadd( 76.9225, 112.001, -32.4437, 0.33 ) }
    dend_72 { pt3dadd( 77.2638, 112.576, -32.7022, 0.67 ) }
    dend_72 { pt3dadd( 78.1832, 114.181, -33.4939, 0.33 ) }
    dend_72 { pt3dadd( 78.6447, 115.039, -33.9363, 0.67 ) }
    dend_72 { pt3dadd( 79.1193, 115.942, -34.4219, 0.33 ) }
    dend_72 { pt3dadd( 79.7728, 117.197, -35.1536, 0.33 ) }
    dend_72 { pt3dadd( 80.5579, 118.547, -36.0655, 0.67 ) }
    dend_72 { pt3dadd( 81.2733, 119.894, -36.9842, 0.33 ) }
    dend_72 { pt3dadd( 81.4053, 120.153, -37.1848, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 85/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 8.33236, 72.7678, -26.4509, 0.33 ) }
    dend_69 { pt3dadd( 12.3375, 72.7559, -28.1035, 0.33 ) }
    dend_69 { pt3dadd( 13.8334, 72.8156, -28.758, 0.67 ) }
    dend_69 { pt3dadd( 18.429, 73.1537, -30.5547, 0.33 ) }
    dend_69 { pt3dadd( 19.5829, 73.2775, -31.0276, 1.33 ) }
    dend_69 { pt3dadd( 20.9892, 73.4646, -31.6185, 0.33 ) }
    dend_69 { pt3dadd( 21.8631, 73.6099, -31.9862, 0.67 ) }
    dend_69 { pt3dadd( 22.8448, 73.892, -32.3753, 0.33 ) }
    dend_69 { pt3dadd( 25.7347, 75.2882, -34.1044, 1.33 ) }
    dend_69 { pt3dadd( 26.673, 76.2684, -35.1005, 0.33 ) }
    dend_69 { pt3dadd( 26.7873, 76.4654, -35.309, 0.67 ) }
    dend_69 { pt3dadd( 27.0722, 77.1799, -36.0785, 0.33 ) }
    dend_69 { pt3dadd( 27.3734, 78.1706, -37.179, 0.67 ) }
    dend_69 { pt3dadd( 27.9041, 81.1737, -40.5562, 0.33 ) }
    dend_69 { pt3dadd( 27.9666, 82.761, -42.3758, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_69 { pt3dadd( 28.0346, 84.8238, -44.7512, 0.33 ) }
    dend_69 { pt3dadd( 28.0821, 86.4849, -46.7745, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_53 (entry count 2/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -13.3826, 55.7213, 8.24896, 0.33 ) }
    dend_63 { pt3dadd( -15.3035, 56.3578, 9.67531, 0.33 ) }
    dend_63 { pt3dadd( -18.0114, 57.1222, 11.8462, 0.33 ) }
    dend_63 { pt3dadd( -18.5494, 57.2731, 12.2867, 0.67 ) }
    dend_63 { pt3dadd( -23.1832, 58.3899, 15.9665, 0.33 ) }
    dend_63 { pt3dadd( -24.8686, 58.7877, 17.2545, 0.67 ) }
    dend_63 { pt3dadd( -26.8265, 59.2558, 18.7276, 0.33 ) }
    dend_63 { pt3dadd( -27.1187, 59.3125, 18.9321, 0.67 ) }
    dend_63 { pt3dadd( -28.5395, 59.4437, 19.9748, 0.33 ) }
    dend_63 { pt3dadd( -30.8155, 59.5211, 21.7002, 0.33 ) }
    dend_63 { pt3dadd( -32.9601, 59.6008, 23.3517, 0.33 ) }
    dend_63 { pt3dadd( -33.654, 59.6251, 23.8435, 1.33 ) }
    dend_63 { pt3dadd( -37.1971, 59.7887, 26.1814, 0.33 ) }
    dend_63 { pt3dadd( -39.4035, 59.8496, 27.6859, 0.33 ) }
    dend_63 { pt3dadd( -40.8209, 59.7787, 28.7318, 1.33 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 17/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -13.3826, 55.7213, 8.24896, 0.67 ) }
    dend_54 { pt3dadd( -13.9749, 59.2944, 8.58021, 0.67 ) }
    dend_54 { pt3dadd( -14.7055, 63.8586, 8.88291, 0.67 ) }
    dend_54 { pt3dadd( -15.0873, 66.872, 8.94932, 0.67 ) }
    dend_54 { pt3dadd( -15.5732, 71.8571, 8.95024, 0.67 ) }
    dend_54 { pt3dadd( -15.7908, 74.4195, 8.92441, 0.67 ) }
    dend_54 { pt3dadd( -15.9497, 77.6968, 8.7017, 0.67 ) }
    dend_54 { pt3dadd( -15.9604, 79.6992, 8.42077, 1.33 ) }
    dend_54 { pt3dadd( -15.8376, 82.5784, 7.86155, 0.67 ) }
    dend_54 { pt3dadd( -15.6666, 85.5079, 7.41428, 2.0 ) }
    dend_54 { pt3dadd( -15.538, 87.5567, 7.05575, 1.33 ) }
    dend_54 { pt3dadd( -15.1142, 92.8563, 6.15643, 1.33 ) }
    dend_54 { pt3dadd( -14.9541, 95.2239, 5.8056, 0.67 ) }
    dend_54 { pt3dadd( -14.7879, 99.2675, 5.29099, 0.67 ) }
    dend_54 { pt3dadd( -14.8309, 105.326, 4.79601, 1.33 ) }
    dend_54 { pt3dadd( -14.9993, 109.569, 4.55635, 1.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -33.5432, 93.6106, -53.4143, 0.33 ) }
    dend_42 { pt3dadd( -27.6904, 97.2636, -58.0046, 0.33 ) }
    dend_42 { pt3dadd( -27.3806, 97.457, -58.2476, 0.67 ) }
    dend_42 { pt3dadd( -26.5316, 97.9869, -58.9135, 0.33 ) }
    dend_42 { pt3dadd( -26.0016, 98.3177, -59.3292, 0.67 ) }
    dend_42 { pt3dadd( -23.5456, 99.8506, -61.2554, 0.33 ) }
    dend_42 { pt3dadd( -21.2328, 101.294, -63.0693, 2.0 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -33.5432, 93.6106, -53.4143, 0.33 ) }
    dend_41 { pt3dadd( -35.0785, 94.6168, -53.994, 0.33 ) }
    dend_41 { pt3dadd( -35.3922, 94.8224, -54.1125, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 43/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 28.0821, 86.4849, -46.7745, 0.33 ) }
    dend_71 { pt3dadd( 29.8299, 85.4509, -45.6128, 0.33 ) }
    dend_71 { pt3dadd( 30.1341, 85.271, -45.4107, 0.67 ) }
    dend_71 { pt3dadd( 31.4623, 84.4853, -44.5279, 0.33 ) }
    dend_71 { pt3dadd( 31.7664, 84.3054, -44.3257, 0.67 ) }
    dend_71 { pt3dadd( 34.7271, 82.5541, -42.358, 0.33 ) }
    dend_71 { pt3dadd( 37.4734, 80.9295, -40.5327, 0.67 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 50/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 28.0821, 86.4849, -46.7745, 0.67 ) }
    dend_70 { pt3dadd( 21.3657, 95.8558, -54.7196, 0.67 ) }
    dend_70 { pt3dadd( 20.1934, 98.0622, -56.5134, 1.33 ) }
    dend_70 { pt3dadd( 19.3022, 100.668, -58.6404, 0.33 ) }
    dend_70 { pt3dadd( 19.0305, 101.852, -59.6207, 0.67 ) }
    dend_70 { pt3dadd( 18.7101, 103.97, -61.2792, 0.67 ) }
    dend_70 { pt3dadd( 18.4375, 108.983, -65.1781, 0.67 ) }
    dend_70 { pt3dadd( 19.4226, 112.1, -67.6849, 0.33 ) }
    dend_70 { pt3dadd( 20.2254, 114.439, -69.7263, 0.33 ) }
    dend_70 { pt3dadd( 20.7421, 115.668, -70.8331, 0.67 ) }
    dend_70 { pt3dadd( 21.3395, 117.27, -72.2126, 0.67 ) }
    dend_70 { pt3dadd( 22.3037, 119.904, -74.3873, 0.33 ) }
    dend_70 { pt3dadd( 23.1545, 122.446, -76.4181, 1.33 ) }
    dend_70 { pt3dadd( 23.8541, 126.063, -79.0675, 0.33 ) }
    dend_70 { pt3dadd( 24.0386, 127.346, -79.8814, 0.67 ) }
    dend_70 { pt3dadd( 24.7942, 131.491, -82.2971, 0.33 ) }
    dend_70 { pt3dadd( 24.971, 132.344, -82.7349, 0.67 ) }
    dend_70 { pt3dadd( 26.2012, 137.748, -84.8076, 0.33 ) }
    dend_70 { pt3dadd( 26.5001, 138.355, -84.9422, 0.67 ) }
    dend_70 { pt3dadd( 28.1939, 140.215, -84.9662, 0.33 ) }
    dend_70 { pt3dadd( 31.6842, 142.841, -84.6385, 0.67 ) }
    dend_70 { pt3dadd( 33.733, 144.192, -84.3758, 0.33 ) }
    dend_70 { pt3dadd( 34.6836, 144.816, -84.2537, 0.67 ) }
    dend_70 { pt3dadd( 40.9575, 149.006, -83.4034, 0.67 ) }
    dend_70 { pt3dadd( 43.7662, 151.21, -83.1569, 0.33 ) }
    dend_70 { pt3dadd( 48.1357, 155.259, -83.0743, 0.33 ) }
    dend_70 { pt3dadd( 49.8012, 157.14, -83.1933, 0.67 ) }
    dend_70 { pt3dadd( 52.8111, 160.796, -83.555, 0.33 ) }
    dend_70 { pt3dadd( 54.3789, 163.063, -83.8903, 0.67 ) }
    dend_70 { pt3dadd( 56.2809, 166.928, -84.826, 0.67 ) }
    dend_70 { pt3dadd( 57.3904, 169.34, -85.6494, 0.33 ) }
    dend_70 { pt3dadd( 57.5595, 169.907, -85.8992, 0.67 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 82/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -40.8209, 59.7787, 28.7318, 0.67 ) }
    dend_67 { pt3dadd( -43.1777, 58.844, 30.0274, 0.67 ) }
    dend_67 { pt3dadd( -43.7038, 58.6237, 30.3075, 0.67 ) }
    dend_67 { pt3dadd( -44.6376, 58.2012, 30.8012, 0.33 ) }
    dend_67 { pt3dadd( -45.644, 57.7359, 31.3157, 0.67 ) }
    dend_67 { pt3dadd( -46.4196, 57.3559, 31.7025, 0.33 ) }
    dend_67 { pt3dadd( -46.7444, 57.1798, 31.9011, 0.67 ) }
    dend_67 { pt3dadd( -47.5719, 56.7037, 32.5305, 0.33 ) }
    dend_67 { pt3dadd( -47.9054, 56.489, 32.791, 0.67 ) }
    dend_67 { pt3dadd( -48.5944, 55.9462, 33.4263, 0.33 ) }
    dend_67 { pt3dadd( -48.832, 55.7163, 33.6844, 0.67 ) }
    dend_67 { pt3dadd( -50.1867, 54.3656, 35.2638, 0.33 ) }
    dend_67 { pt3dadd( -50.7614, 53.7874, 35.9655, 0.67 ) }
    dend_67 { pt3dadd( -51.8324, 52.6521, 37.3682, 0.67 ) }
    dend_67 { pt3dadd( -52.9149, 51.4965, 38.8092, 0.67 ) }
    dend_67 { pt3dadd( -53.6765, 50.5898, 39.9084, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 98/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -40.8209, 59.7787, 28.7318, 1.33 ) }
    dend_64 { pt3dadd( -42.7681, 58.1631, 29.2979, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 0/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -14.9993, 109.569, 4.55635, 0.67 ) }
    dend_60 { pt3dadd( -14.5551, 111.538, 5.60283, 0.67 ) }
    dend_60 { pt3dadd( -13.9226, 114.342, 7.09313, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 3/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -14.9993, 109.569, 4.55635, 0.67 ) }
    dend_55 { pt3dadd( -16.4292, 110.963, 4.64245, 0.67 ) }
    dend_55 { pt3dadd( -17.7111, 112.367, 4.61982, 0.33 ) }
    dend_55 { pt3dadd( -18.7568, 113.835, 4.67111, 0.67 ) }
    dend_55 { pt3dadd( -19.8624, 115.572, 4.76828, 0.33 ) }
    dend_55 { pt3dadd( -22.377, 119.798, 5.06381, 0.67 ) }
    dend_55 { pt3dadd( -24.2553, 123.167, 5.33618, 0.33 ) }
    dend_55 { pt3dadd( -25.3409, 125.622, 5.39827, 0.67 ) }
    dend_55 { pt3dadd( -26.8602, 129.964, 5.34448, 0.33 ) }
    dend_55 { pt3dadd( -27.0, 130.445, 5.33023, 0.67 ) }
    dend_55 { pt3dadd( -27.4354, 132.16, 5.25796, 0.33 ) }
    dend_55 { pt3dadd( -28.0081, 134.783, 5.24471, 2.0 ) }
    dend_55 { pt3dadd( -29.2905, 140.858, 5.56307, 0.67 ) }
    dend_55 { pt3dadd( -30.3438, 146.005, 5.97724, 1.33 ) }
    dend_55 { pt3dadd( -30.885, 148.49, 6.01245, 0.33 ) }
    dend_55 { pt3dadd( -30.986, 148.973, 6.00491, 0.67 ) }
    dend_55 { pt3dadd( -31.8841, 153.057, 6.12184, 0.33 ) }
    dend_55 { pt3dadd( -32.0887, 153.817, 6.20494, 0.67 ) }
    dend_55 { pt3dadd( -32.8478, 156.139, 6.77138, 0.33 ) }
    dend_55 { pt3dadd( -35.0357, 162.525, 8.50746, 0.67 ) }
    dend_55 { pt3dadd( -35.5464, 163.967, 8.87202, 0.33 ) }
    dend_55 { pt3dadd( -37.4106, 168.728, 9.85592, 0.67 ) }
    dend_55 { pt3dadd( -38.9549, 172.002, 10.1905, 0.67 ) }
    dend_55 { pt3dadd( -39.7704, 173.575, 10.5262, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -42.7681, 58.1631, 29.2979, 0.67 ) }
    dend_66 { pt3dadd( -41.0815, 55.1754, 39.0259, 0.67 ) }
    dend_66 { pt3dadd( -40.8837, 54.8251, 40.1665, 0.67 ) }
    dend_66 { pt3dadd( -40.1163, 53.4656, 44.5929, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 31/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -42.7681, 58.1631, 29.2979, 0.33 ) }
    dend_65 { pt3dadd( -42.6804, 57.1697, 30.5501, 0.33 ) }
    dend_65 { pt3dadd( -42.4352, 55.4777, 32.3564, 0.33 ) }
    dend_65 { pt3dadd( -42.0759, 52.9536, 34.6455, 0.67 ) }
    dend_65 { pt3dadd( -41.8524, 51.0738, 36.2586, 0.33 ) }
    dend_65 { pt3dadd( -41.5857, 48.0704, 38.8472, 0.33 ) }
    dend_65 { pt3dadd( -41.4609, 46.6649, 40.0585, 0.33 ) }
    dend_65 { pt3dadd( -41.3987, 44.1979, 42.3297, 0.67 ) }
    dend_65 { pt3dadd( -41.5241, 42.6048, 43.8181, 0.67 ) }
    dend_65 { pt3dadd( -41.6943, 41.1941, 44.9153, 0.67 ) }
    dend_65 { pt3dadd( -41.6766, 40.4637, 45.4318, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 42/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -13.9226, 114.342, 7.09313, 0.33 ) }
    dend_62 { pt3dadd( -15.5251, 116.487, 6.54717, 0.33 ) }
    dend_62 { pt3dadd( -15.971, 117.084, 6.39527, 0.67 ) }
    dend_62 { pt3dadd( -18.2347, 120.114, 5.62401, 0.33 ) }
    dend_62 { pt3dadd( -19.8701, 122.303, 5.06684, 0.67 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 47/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -13.9226, 114.342, 7.09313, 0.67 ) }
    dend_61 { pt3dadd( -14.6678, 115.793, 9.78128, 0.67 ) }
    dend_61 { pt3dadd( -18.0169, 121.292, 20.0547, 0.67 ) }
    dend_61 { pt3dadd( -19.7681, 124.077, 25.8163, 0.33 ) }
    dend_61 { pt3dadd( -20.7262, 125.644, 28.9822, 0.67 ) }
    dend_61 { pt3dadd( -22.5454, 128.582, 34.8158, 0.33 ) }
    dend_61 { pt3dadd( -23.7821, 130.578, 38.7816, 0.33 ) }
    dend_61 { pt3dadd( -25.617, 133.103, 43.8803, 0.67 ) }
    dend_61 { pt3dadd( -27.0486, 134.826, 47.8663, 0.33 ) }
    dend_61 { pt3dadd( -28.1662, 136.202, 50.6133, 0.33 ) }
    dend_61 { pt3dadd( -28.7559, 136.973, 52.4511, 0.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -39.7704, 173.575, 10.5262, 0.67 ) }
    dend_59 { pt3dadd( -40.2767, 178.442, 6.73598, 0.67 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 60/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -39.7704, 173.575, 10.5262, 0.67 ) }
    dend_56 { pt3dadd( -40.689, 174.118, 9.40125, 0.67 ) }
    dend_56 { pt3dadd( -41.4455, 174.566, 8.47476, 0.67 ) }
    dend_56 { pt3dadd( -42.7319, 175.328, 6.89944, 0.33 ) }
    dend_56 { pt3dadd( -44.3474, 176.284, 4.92085, 1.33 ) }
    dend_56 { pt3dadd( -48.178, 178.552, 0.229611, 0.33 ) }
    dend_56 { pt3dadd( -48.4396, 178.707, -0.0907358, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 67/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -48.4396, 178.707, -0.0907358, 0.33 ) }
    dend_58 { pt3dadd( -49.8998, 178.784, -2.77087, 0.33 ) }
    dend_58 { pt3dadd( -50.1438, 178.804, -3.20388, 0.67 ) }
    dend_58 { pt3dadd( -51.7438, 178.934, -6.0423, 0.33 ) }
    dend_58 { pt3dadd( -52.63, 179.006, -7.61449, 0.67 ) }
    dend_58 { pt3dadd( -55.1294, 179.209, -12.0485, 0.67 ) }
    dend_58 { pt3dadd( -57.4501, 179.398, -16.1655, 0.33 ) }
    dend_58 { pt3dadd( -57.6137, 179.422, -16.4759, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 75/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -48.4396, 178.707, -0.0907358, 0.67 ) }
    dend_57 { pt3dadd( -53.2288, 184.659, 4.61421, 0.67 ) }
    dend_57 { pt3dadd( -56.1695, 188.313, 7.50305, 0.33 ) }
    dend_57 { pt3dadd( -56.7327, 189.013, 8.05638, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_30, dend_25, dend_0, axon_0, dend_48, dend_31, dend_27, dend_26, dend_12, dend_1, axon_1, dend_80, dend_49, dend_33, dend_32, dend_29, dend_28, dend_20, dend_13, dend_11, dend_2, dend_82, dend_81, dend_73, dend_50, dend_43, dend_34, dend_22, dend_21, dend_19, dend_14, dend_8, dend_3, dend_75, dend_74, dend_52, dend_51, dend_47, dend_44, dend_38, dend_35, dend_24, dend_23, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_79, dend_76, dend_68, dend_53, dend_46, dend_45, dend_40, dend_39, dend_37, dend_36, dend_17, dend_16, dend_6, dend_5, dend_78, dend_77, dend_72, dend_69, dend_63, dend_54, dend_42, dend_41, dend_71, dend_70, dend_67, dend_64, dend_60, dend_55, dend_66, dend_65, dend_62, dend_61, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_5 = new SectionList()
    dend_30 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_27 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_74 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_51 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_38 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_35 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_15 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_76 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_45 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_39 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_36 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_17 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_54 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_55 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_61 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_80 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_73 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_81 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_75 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_82 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_79 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_68 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_63 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_64 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_69 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_66 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_67 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_60 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_65 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_71 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_40 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_47 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_78 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_41 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_77 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_62 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_42 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_11 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_46 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_59 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_24 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_6 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_56 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_57 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_9 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_58 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_23 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_14 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_80, dend_80, dend_80, dend_49, dend_49, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_2, dend_2, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_73, dend_73, dend_73, dend_73, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 5
    dend_27 nseg = 3
    dend_1 nseg = 5
    dend_32 nseg = 3
    dend_20 nseg = 7
    dend_13 nseg = 13
    dend_43 nseg = 5
    dend_21 nseg = 3
    dend_19 nseg = 3
    dend_8 nseg = 3
    dend_74 nseg = 11
    dend_51 nseg = 3
    dend_38 nseg = 3
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_76 nseg = 3
    dend_45 nseg = 3
    dend_39 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_72 nseg = 5
    dend_54 nseg = 3
    dend_70 nseg = 5
    dend_55 nseg = 3
    dend_61 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_DBC_e15869b926_0_0


