// Cell: bNAC219_L6_LBC_dbef3c6e51_0_0
/*
{
  "id" : "bNAC219_L6_LBC_dbef3c6e51_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.84529, -4.87297, 0.0, 6.22486", "-6.02577, -4.47098, 0.0, 11.3263", "-5.20624, -4.06899, 0.0, 13.1262", "-4.38672, -3.66701, 0.0, 14.4968", "-3.56719, -3.26502, 0.0, 15.3488", "-2.74767, -2.86303, 0.0, 15.7521", "-1.92815, -2.46104, 0.0, 15.7984", "-1.10862, -2.05905, 0.0, 15.859", "-0.289096, -1.65706, 0.0, 15.958", "0.530429, -1.25507, 0.0, 16.0571", "1.34995, -0.853086, 0.0, 16.1345", "2.16948, -0.451097, 0.0, 16.3639", "2.989, -0.0491089, 0.0, 16.0828", "3.80853, 0.35288, 0.0, 15.4226", "4.62805, 0.754868, 0.0, 14.6331", "5.44758, 1.15686, 0.0, 13.8581", "6.2671, 1.55885, 0.0, 13.096", "7.08663, 1.96083, 0.0, 11.6592", "7.90615, 2.36282, 0.0, 9.60018", "8.72568, 2.76481, 0.0, 6.5333", "9.5452, 3.1668, 0.0, 3.66685" ]
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "10.8103, -1.01476, -5.53, 2.42", "10.8103, -1.01476, -5.53, 2.42", "11.968, -0.188484, -6.28919, 2.28", "13.0658, 0.716231, -6.9978, 2.06", "13.7892, 1.34522, -7.46175, 1.76", "14.7069, 2.17976, -8.02241, 2.06", "15.9019, 3.29626, -8.72033, 1.54", "16.7981, 4.19888, -9.20715, 1.54", "17.1003, 4.5363, -9.35892, 1.62", "17.7912, 5.35952, -9.67462, 1.62", "18.4186, 6.1319, -9.96048, 1.18", "19.0532, 6.88732, -10.2641, 2.28", "19.7332, 7.62059, -10.5608, 2.64", "20.5182, 8.35899, -10.8807, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.5103, -3.81475, -3.85, 5.0", "8.5103, -3.81475, -3.85, 5.0", "9.2821, -5.55651, -4.60704, 1.98", "9.65345, -6.39456, -4.9713, 1.98", "10.2611, -7.7658, -5.56731, 1.47", "10.9197, -9.25234, -6.21343, 2.06", "11.562, -10.7018, -6.84339, 2.57", "11.8574, -11.3212, -7.10371, 3.01" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.58973, -10.2848, 0.0, 3.01", "-1.58973, -10.2848, 0.0, 3.01", "-1.55204, -12.5632, 0.0374467, 1.76", "-1.52196, -14.3816, 0.0673327, 2.2", "-1.49693, -15.8944, 0.0921944, 2.86", "-1.47891, -16.9838, 0.110099, 3.09", "-1.46506, -17.821, 0.123859, 3.09", "-1.46222, -18.247, 0.132845, 3.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.39973, 1.67525, -0.84, 3.31", "-7.39973, 1.67525, -0.84, 3.31", "-8.73175, 2.44761, -0.959678, 1.76", "-9.54477, 2.91904, -1.03272, 1.98", "-10.1548, 3.27275, -1.08753, 1.98", "-11.1225, 3.83384, -1.17447, 2.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.35027, -0.324748, 9.36, 1.91", "6.39085, -0.309977, 9.38772, 1.91", "7.17126, -0.025882, 9.92095, 1.91", "8.06031, 0.297762, 10.5284, 1.91", "8.69336, 0.528212, 10.9609, 2.42", "9.26018, 0.734553, 11.3482, 2.57", "9.44478, 0.801755, 11.4744, 2.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.10969, 1.57527, 6.17, 2.2", "-4.2238, 1.65127, 6.26467, 2.2", "-5.60554, 2.57159, 7.41103, 2.2", "-6.94791, 3.46569, 8.52473, 2.06", "-7.8801, 4.0866, 9.29813, 1.84", "-8.89129, 4.76011, 10.1371, 1.91", "-10.2165, 5.64274, 11.2365, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997299839917
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.5452, 3.1668, 0.0, 0.993075", "23.0123, 9.77261, 0.0, 0.993075", "36.4794, 16.3784, 0.0, 0.993075" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "20.5182, 8.35899, -10.8807, 1.47", "21.0573, 8.58173, -11.8142, 1.47", "21.7229, 8.74117, -12.8935, 1.47", "22.4115, 8.81853, -14.0077, 1.47", "22.5974, 8.82231, -14.3262, 0.81", "22.7054, 8.82165, -14.5267, 0.81", "22.8029, 8.82406, -14.7225, 0.81", "23.1966, 8.83826, -15.6203, 1.18", "23.338, 8.81913, -15.9243, 1.18", "23.5676, 8.80458, -16.238, 1.18", "23.8971, 8.84897, -16.6041, 1.18", "24.2467, 8.90818, -16.9731, 1.18", "24.5413, 8.96297, -17.2961, 1.18", "25.194, 9.12725, -18.0667, 0.73", "25.9365, 9.36002, -18.9923, 1.03", "26.2723, 9.47665, -19.4173, 1.03", "26.6017, 9.55786, -19.8005, 1.1", "27.156, 9.60506, -20.3964, 1.1", "27.6226, 9.57723, -20.8575, 1.1", "28.0816, 9.48087, -21.1926, 1.1", "28.3803, 9.40293, -21.3816, 1.1", "29.2256, 9.23585, -21.9535, 1.1", "30.3358, 9.10545, -22.7606, 0.66", "31.1742, 9.05709, -23.5786, 0.81", "31.6424, 9.0507, -24.1309, 1.4", "32.2678, 9.0562, -24.9453, 2.5", "33.2595, 9.10302, -26.3651, 0.66", "33.9915, 9.18613, -27.4946, 2.79", "35.5072, 9.48398, -29.9853, 0.88", "36.0087, 9.62873, -30.8538, 0.95", "36.617, 9.85944, -31.9396, 2.42", "37.3417, 10.2127, -33.217, 0.95", "37.7527, 10.4561, -33.9688, 1.69", "38.6403, 11.0262, -35.5433, 0.66", "39.124, 11.3266, -36.316, 1.62", "39.522, 11.5681, -36.9532, 1.62", "40.0743, 11.8923, -37.8239, 0.88", "41.0023, 12.3031, -39.1353, 0.88", "41.4423, 12.4101, -39.6981, 1.62", "42.165, 12.4475, -40.5092, 0.66", "42.4669, 12.4321, -40.8279, 0.29", "43.2299, 12.3573, -41.5819, 1.47", "44.1695, 12.2611, -42.4266, 0.07", "45.1653, 12.2465, -43.2322, 1.47", "45.467, 12.2684, -43.4732, 1.47", "46.082, 12.3599, -43.9526, 0.07", "46.5907, 12.4496, -44.3211, 1.32", "46.892, 12.5103, -44.5101, 1.32", "47.9042, 12.8058, -45.1181, 0.22", "48.5228, 13.0492, -45.5635, 1.84", "48.6947, 13.1354, -45.7229, 2.2", "49.651, 13.7095, -46.8553, 0.22", "50.1068, 14.0046, -47.4922, 1.1", "51.0113, 14.5982, -48.882, 1.47", "51.9, 15.1713, -50.3926, 2.57", "52.5437, 15.5712, -51.5852, 2.57", "53.6683, 16.1918, -53.7815, 0.73", "54.1343, 16.4223, -54.7626, 0.15", "54.3032, 16.4847, -55.1092, 0.15", "54.6495, 16.5512, -55.7101, 1.91", "54.8569, 16.5822, -56.0364, 1.91", "55.5038, 16.6682, -56.975, 1.1", "56.2866, 16.8014, -58.0649, 0.15", "56.4179, 16.8358, -58.238, 0.15", "57.2167, 17.0868, -59.2852, 1.69", "58.1879, 17.4064, -60.5406, 1.25", "58.6485, 17.5591, -61.1302, 1.69", "59.4302, 17.8357, -62.1538, 0.59", "59.9457, 18.0257, -62.8386, 0.29", "60.7738, 18.38, -63.9919, 2.42", "61.75, 18.8171, -65.3668, 0.88", "61.9373, 18.9034, -65.6228, 1.1", "62.5215, 19.1678, -66.427, 1.25", "63.0002, 19.3488, -67.03, 1.4", "63.9745, 19.6163, -68.1398, 0.66", "64.6378, 19.7344, -68.7846, 1.1", "65.3398, 19.7756, -69.3948, 0.29", "66.0771, 19.7531, -69.9746, 1.91", "67.0819, 19.6508, -70.6665, 0.22", "67.9948, 19.5107, -71.2414, 0.81", "68.4803, 19.4206, -71.5184, 0.88", "69.1924, 19.2752, -71.9171, 0.07", "69.6664, 19.1713, -72.1864, 0.07", "70.4465, 18.9988, -72.6336, 1.54", "71.3851, 18.8143, -73.2142, 0.07", "71.9689, 18.7225, -73.6119, 1.1", "72.4608, 18.6557, -73.9697, 1.18", "73.1894, 18.5566, -74.5216, 0.29", "73.8231, 18.4721, -75.0427, 1.03", "74.5658, 18.3847, -75.7024, 1.69", "75.4008, 18.3132, -76.5021, 0.37", "76.023, 18.277, -77.1369, 0.07", "76.8539, 18.2684, -78.0014, 1.62", "77.7036, 18.3106, -78.9024, 0.22", "78.3988, 18.3936, -79.6485, 0.51", "78.931, 18.5174, -80.199, 0.95", "79.5461, 18.7952, -80.8086, 1.47", "80.041, 19.1439, -81.2849, 1.47", "80.8592, 19.8412, -82.0393, 0.22", "81.2017, 20.1532, -82.3279, 0.22", "81.8783, 20.8214, -82.8957, 1.84", "82.7652, 21.7499, -83.6975, 0.44", "83.525, 22.5964, -84.4869, 0.22", "83.8746, 22.9727, -84.8916, 0.22", "84.1151, 23.205, -85.1723, 0.66", "84.8204, 23.8083, -86.0054, 0.66", "85.6719, 24.4342, -87.0013, 1.91", "86.5978, 25.0233, -88.1017, 2.42", "87.4967, 25.5036, -89.1872, 2.28", "88.2599, 25.8362, -90.0914, 0.66", "88.4528, 25.8994, -90.325, 0.22", "88.9121, 25.9893, -90.8891, 0.22", "89.4715, 26.0202, -91.649, 0.73", "89.9818, 25.9493, -92.5823, 0.66", "90.1989, 25.8553, -93.304, 0.66", "90.3001, 25.7736, -94.0147, 0.66", "90.3603, 25.7788, -94.9124, 0.66", "90.3688, 25.8439, -95.3044, 0.66", "90.4133, 26.1677, -96.0895, 0.66", "90.506, 26.5153, -96.499, 0.66", "90.6618, 26.8372, -96.7205, 0.66", "91.1763, 27.6385, -97.0722, 0.73", "91.6254, 28.2578, -97.2919, 0.59", "91.9685, 28.6955, -97.4428, 0.29", "92.7544, 29.6312, -97.7511, 0.29", "93.1875, 30.0968, -97.9234, 1.1", "94.2441, 31.105, -98.3495, 0.29", "94.7274, 31.4999, -98.5431, 0.29", "95.3061, 31.9175, -98.8197, 0.29", "96.0788, 32.3909, -99.2531, 1.4", "96.9411, 32.7895, -99.8226, 0.29", "97.384, 32.9183, -100.132, 0.29", "98.0275, 32.9494, -100.593, 0.29", "98.9139, 32.9174, -101.259, 0.15", "99.3166, 32.8509, -101.573, 0.15", "100.045, 32.5558, -102.19, 0.15", "100.804, 31.9933, -102.854, 0.15", "101.405, 31.344, -103.358, 0.15" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "20.5182, 8.35899, -10.8807, 1.69", "21.2495, 9.95937, -11.0832, 1.69", "21.7674, 10.8422, -11.2067, 1.4", "22.5186, 11.9083, -11.3599, 1.4", "22.9785, 12.489, -11.446, 1.32", "23.628, 13.2857, -11.5592, 0.95", "24.4645, 14.3121, -11.7049, 0.66", "25.2373, 15.137, -11.8446, 1.47", "25.8719, 15.758, -11.9754, 1.91", "26.7601, 16.5778, -12.2058, 0.66", "27.3651, 17.1471, -12.3985, 0.37", "27.6295, 17.3973, -12.49, 0.37", "28.4305, 18.1305, -12.7599, 1.1", "29.1268, 18.7657, -12.9744, 1.25", "29.9646, 19.5131, -13.1946, 0.95", "30.8489, 20.2732, -13.3866, 1.76", "32.0153, 21.2833, -13.5769, 2.06", "33.3136, 22.4517, -13.7127, 2.57", "33.9802, 23.0926, -13.7364, 2.57", "35.3007, 24.468, -13.7114, 0.44", "36.0151, 25.2782, -13.6961, 0.22", "36.5793, 25.9699, -13.6971, 0.22", "36.9857, 26.5166, -13.7217, 0.22", "37.4254, 27.1447, -13.7861, 1.03", "37.9765, 27.9457, -13.9122, 1.76", "38.8311, 29.2137, -14.2113, 1.54", "39.5066, 30.1982, -14.5148, 1.54", "40.1641, 31.1175, -14.8436, 1.84", "40.7062, 31.8652, -15.1212, 1.98", "40.9811, 32.2395, -15.2623, 1.98", "41.7003, 33.1966, -15.6191, 0.95", "42.617, 34.3911, -16.0409, 0.59", "43.154, 35.0578, -16.2802, 0.81", "43.714, 35.7035, -16.5066, 0.88", "44.6101, 36.6241, -16.8324, 0.59", "45.2323, 37.1837, -17.0404, 1.1", "46.1718, 37.9339, -17.2963, 2.06", "47.0406, 38.5448, -17.4841, 1.4", "47.9511, 39.1382, -17.6464, 0.66", "48.8492, 39.6936, -17.7973, 0.29", "50.1416, 40.4387, -17.9798, 1.91", "50.8416, 40.8218, -18.0603, 2.57", "51.8496, 41.3266, -18.1387, 2.28", "52.9559, 41.8514, -18.1551, 1.69" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "11.8574, -11.3212, -7.10371, 1.1", "13.4397, -10.8536, -7.64947, 1.1", "14.4733, -10.5192, -8.03559, 0.81", "15.1968, -10.2966, -8.32526, 0.95", "16.4908, -9.94046, -8.84552, 2.06", "17.6617, -9.63315, -9.30307, 1.18", "18.5644, -9.40818, -9.64652, 0.73", "19.0126, -9.29868, -9.81811, 0.95", "19.7571, -9.12033, -10.0949, 1.18", "20.8153, -8.89616, -10.479, 0.51", "21.4553, -8.7847, -10.713, 0.51", "22.1197, -8.72364, -10.936, 1.84", "23.2828, -8.65565, -11.2552, 2.5" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "11.8574, -11.3212, -7.10371, 1.98", "11.7657, -12.8264, -7.83316, 1.98", "11.7055, -13.8141, -8.31181, 1.62", "11.5823, -15.8351, -9.29117, 1.18", "11.453, -17.9559, -10.3189, 1.76" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.46222, -18.247, 0.132845, 2.06", "-2.32993, -19.4653, -0.326403, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.46222, -18.247, 0.132845, 1.03", "-1.19117, -19.8462, 0.480666, 1.03", "-0.980329, -21.0902, 0.751227, 1.03", "-0.805749, -22.1203, 0.975264, 1.03", "-0.631279, -23.1497, 1.19915, 1.25" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-11.1225, 3.83384, -1.17447, 0.95", "-11.3633, 3.88514, -0.691104, 0.95", "-12.5218, 4.07599, 0.930798, 0.95", "-13.1326, 4.16599, 1.63249, 1.1", "-14.2175, 4.31988, 2.71565, 1.25", "-16.6133, 4.66254, 4.86697, 0.95", "-17.8891, 4.85823, 5.91908, 0.95", "-19.7072, 5.19098, 7.20222, 0.66", "-20.402, 5.33013, 7.62722, 0.37", "-21.5588, 5.58629, 8.3062, 1.18", "-22.1691, 5.72732, 8.63847, 1.54", "-23.6502, 6.07146, 9.43785, 0.73", "-25.0024, 6.38147, 10.3321, 0.66", "-26.1195, 6.63033, 11.1029, 0.51", "-27.152, 6.84489, 11.8607, 0.81", "-27.9878, 6.99917, 12.4884, 1.18", "-29.0945, 7.19987, 13.3387, 0.88", "-29.6953, 7.32134, 13.8185, 1.32", "-31.0417, 7.63376, 14.9739, 0.44", "-32.2794, 8.02705, 16.2529, 0.95", "-33.0002, 8.32795, 17.2054, 0.95", "-33.4149, 8.54682, 17.8895, 0.95", "-33.9421, 8.82814, 18.9177, 0.95", "-34.3504, 8.99553, 19.9153, 0.95", "-34.8196, 9.14837, 21.5404, 0.95", "-35.2036, 9.17889, 23.0244, 0.95", "-35.4777, 9.09926, 24.213, 0.73", "-35.7987, 8.90154, 25.2412, 1.03", "-36.0846, 8.71676, 25.8455, 0.59" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.1225, 3.83384, -1.17447, 2.13", "-11.8602, 4.21766, -1.40027, 2.13", "-12.9731, 4.79666, -1.74089, 2.13", "-13.8134, 5.23378, -1.99806, 1.84", "-15.0049, 5.85366, -2.36274, 2.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.44478, 0.801755, 11.4744, 1.62", "10.6202, 1.08396, 12.374, 1.62", "11.931, 1.39077, 13.3261, 0.88", "13.0737, 1.62012, 14.0997, 1.32", "13.7102, 1.75789, 14.4792, 2.06", "14.7997, 2.01561, 15.0505, 1.47", "15.8396, 2.27238, 15.5538, 1.76", "16.8304, 2.55117, 15.977, 1.4", "17.6606, 2.8081, 16.2488, 0.88", "18.7772, 3.20663, 16.5332, 0.81", "19.6116, 3.5084, 16.7119, 0.66", "20.5462, 3.83481, 16.8867, 0.81", "21.6119, 4.18748, 17.0653, 1.69", "22.9182, 4.61834, 17.2664, 1.69", "24.2358, 5.05076, 17.4695, 2.2", "25.5886, 5.43955, 17.6773, 0.73", "26.4944, 5.68791, 17.786, 0.59", "27.5197, 5.98465, 17.8796, 0.66", "28.3986, 6.22327, 17.9375, 0.73", "28.9161, 6.36219, 17.9775, 0.59", "29.923, 6.65525, 18.046, 0.59", "30.4979, 6.8608, 18.0842, 0.51", "31.8933, 7.42161, 18.1769, 0.51" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "9.44478, 0.801755, 11.4744, 0.81", "10.7158, -0.305565, 12.2023, 0.81", "11.9008, -1.29369, 12.9845, 0.66", "12.912, -2.14166, 13.6882, 0.73", "13.6653, -2.79669, 14.2477, 0.81", "14.2367, -3.30943, 14.6827, 0.73", "14.865, -3.87678, 15.1426, 0.81", "15.6664, -4.58818, 15.7282, 0.81", "16.1096, -4.97975, 16.0477, 0.73", "16.7808, -5.56999, 16.5207, 0.44", "17.5368, -6.22596, 17.0088, 1.84", "18.5784, -7.13966, 17.6629, 0.95", "19.3091, -7.81298, 18.1036, 0.44", "19.7128, -8.20993, 18.3437, 0.37", "20.2902, -8.76369, 18.6931, 0.81", "20.691, -9.14562, 18.9358, 1.32", "21.2968, -9.76131, 19.3512, 1.47", "21.8091, -10.3839, 19.7989, 1.47", "22.3078, -11.138, 20.3086, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.2165, 5.64274, 11.2365, 1.47", "-12.7179, 7.14709, 11.6425, 1.47", "-14.5666, 8.27408, 11.9521, 1.1", "-15.8885, 9.07985, 12.1735, 1.1", "-17.679, 10.1714, 12.4734, 1.1", "-18.933, 10.9357, 12.6834, 1.69", "-19.4805, 11.2695, 12.7751, 2.35", "-21.2649, 12.4616, 13.1073, 2.35" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-10.2165, 5.64274, 11.2365, 1.32", "-11.9542, 5.80339, 11.3806, 1.32", "-13.0534, 5.98626, 11.3655, 0.88", "-13.6082, 6.11052, 11.3338, 0.95", "-14.1717, 6.26664, 11.2903, 1.03", "-14.6723, 6.4111, 11.2635, 1.32", "-15.8403, 6.77066, 11.2374, 2.13", "-17.0293, 7.21865, 11.2342, 0.73", "-17.8601, 7.53781, 11.2675, 0.59", "-18.8839, 7.91058, 11.3422, 0.59", "-19.5511, 8.11095, 11.4177, 0.88", "-20.4361, 8.3266, 11.5639, 1.1", "-21.3593, 8.48552, 11.774, 0.88", "-22.7007, 8.59876, 12.0928, 0.81", "-23.8341, 8.60785, 12.3355, 0.81", "-24.9646, 8.5587, 12.5546, 0.88", "-25.9894, 8.47602, 12.701, 0.88", "-27.0023, 8.34451, 12.8246, 0.44", "-28.0234, 8.17426, 12.9209, 0.44", "-28.6619, 8.05457, 12.9818, 0.66", "-29.3818, 7.93479, 13.0541, 0.81", "-30.5794, 7.75108, 13.1399, 1.1", "-31.0434, 7.67343, 13.1619, 1.1", "-31.9498, 7.52578, 13.2113, 0.66", "-32.8678, 7.37193, 13.2741, 0.59", "-33.5296, 7.22195, 13.3066, 0.66", "-34.459, 6.93995, 13.3119, 0.37", "-35.0742, 6.70526, 13.2964, 0.37", "-35.708, 6.43767, 13.2593, 1.1", "-36.088, 6.24971, 13.228, 1.03", "-36.8465, 5.79841, 13.1166, 0.22", "-37.367, 5.45594, 13.0251, 0.44", "-37.7839, 5.18958, 12.9387, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.4794, 16.3784, 0.0, 0.797956", "49.9466, 22.9842, 0.0, 0.797956", "63.4137, 29.5901, 0.0, 0.797956" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "52.9559, 41.8514, -18.1551, 1.03", "53.0882, 42.7687, -18.2347, 1.03", "53.1831, 43.8037, -18.4949, 0.51", "53.2317, 44.3865, -18.6736, 0.51", "53.3326, 45.2591, -18.9555, 1.18", "53.4403, 45.9418, -19.2047, 1.62", "53.5791, 46.5688, -19.456, 1.91", "53.9159, 47.7437, -20.0729, 0.73", "54.0746, 48.1205, -20.312, 0.66", "54.3837, 48.6477, -20.6588, 0.81", "54.7878, 49.1801, -20.9956, 0.59", "55.2743, 49.7246, -21.315, 1.1", "55.7318, 50.2004, -21.5694, 2.06", "56.2612, 50.7319, -21.8122, 2.06", "56.7699, 51.271, -22.0434, 1.62", "57.2079, 51.7773, -22.2144, 0.81", "57.8954, 52.6368, -22.4499, 0.37", "58.3448, 53.2298, -22.6052, 0.37", "58.6285, 53.6021, -22.6991, 1.32", "59.0632, 54.1418, -22.8453, 2.2", "59.7999, 54.9544, -23.1013, 1.76", "60.7029, 55.8624, -23.4083, 0.07", "61.2804, 56.3935, -23.5983, 1.1", "61.6707, 56.7219, -23.7157, 2.35", "62.5206, 57.4022, -23.9494, 1.69", "63.3138, 58.0095, -24.1495, 0.37", "63.9626, 58.4878, -24.306, 0.59", "64.6951, 59.0178, -24.4411, 0.59", "65.5355, 59.6275, -24.5811, 2.06", "66.0921, 60.0447, -24.6715, 2.06", "67.0133, 60.7288, -24.8131, 1.18", "67.6566, 61.193, -24.9147, 0.59", "68.6018, 61.8523, -25.0848, 0.29", "69.8298, 62.7134, -25.3328, 2.86", "70.9582, 63.5261, -25.5883, 0.29", "71.5425, 63.9649, -25.7322, 0.29", "72.1328, 64.4543, -25.8891, 0.44", "72.7034, 65.0024, -26.0567, 1.1", "73.0909, 65.4535, -26.1934, 1.98", "73.3149, 65.7731, -26.2805, 2.13", "73.601, 66.2596, -26.4029, 2.13", "73.9552, 66.9789, -26.5604, 2.13", "74.4057, 68.0634, -26.7695, 0.37", "74.6994, 68.8818, -26.908, 0.15", "74.8571, 69.393, -26.9966, 0.15", "75.0627, 70.2147, -27.1454, 1.1", "75.183, 70.813, -27.2532, 2.06", "75.3227, 71.8551, -27.4331, 0.88", "75.356, 72.4178, -27.5206, 0.15", "75.377, 72.9683, -27.6065, 0.22", "75.4025, 73.5934, -27.718, 0.22", "75.4356, 74.107, -27.8156, 0.22", "75.5226, 74.8029, -27.9546, 1.1", "75.5807, 75.1251, -28.0317, 1.32", "75.6967, 75.6238, -28.1577, 0.81", "75.8496, 76.186, -28.301, 0.22", "75.9914, 76.6234, -28.4147, 0.22", "76.2478, 77.3893, -28.6451, 1.54", "76.4497, 77.9882, -28.8398, 1.54", "76.7383, 78.8658, -29.1254, 0.15", "76.9285, 79.4626, -29.3143, 0.07", "77.1101, 80.0008, -29.4809, 0.81", "77.4514, 80.9794, -29.7742, 0.15", "77.7461, 81.7582, -29.9944, 2.2", "77.8684, 82.0764, -30.0721, 2.13", "78.0678, 82.5602, -30.1874, 1.84", "78.4514, 83.4139, -30.3729, 0.88", "78.7413, 84.0072, -30.4943, 0.22", "78.9381, 84.3542, -30.5523, 0.22", "79.2254, 84.8153, -30.6324, 0.44", "79.6358, 85.4411, -30.7445, 0.07", "80.0396, 86.0289, -30.8528, 1.32", "80.2722, 86.3426, -30.9154, 1.62", "80.7117, 86.8981, -31.0312, 1.69", "81.3561, 87.6623, -31.1728, 0.22", "81.7292, 88.0576, -31.2413, 0.29", "82.2852, 88.5845, -31.3207, 0.29", "82.7533, 88.9863, -31.3738, 0.95", "83.2427, 89.3682, -31.4173, 1.54", "84.067, 89.9544, -31.4386, 1.32", "84.9916, 90.5724, -31.3989, 0.22", "85.6933, 91.0376, -31.3424, 0.22", "86.1212, 91.3168, -31.2927, 0.81", "86.6124, 91.6481, -31.2223, 1.1", "87.5108, 92.2833, -31.0657, 0.66", "88.0352, 92.7051, -30.948, 1.25", "88.722, 93.3182, -30.7903, 2.2", "89.0257, 93.6004, -30.7383, 2.5", "89.2785, 93.8402, -30.7089, 2.5", "90.091, 94.6297, -30.6617, 0.59", "90.9781, 95.5175, -30.6701, 0.22", "91.744, 96.3538, -30.7127, 0.22", "92.4466, 97.2293, -30.7963, 0.22", "92.7982, 97.7378, -30.8717, 1.62", "92.919, 97.947, -30.9156, 2.06", "93.0754, 98.2992, -31.0145, 2.06", "93.4999, 99.5596, -31.4283, 0.29", "93.681, 100.343, -31.6783, 0.95", "93.774, 100.911, -31.86, 1.03", "93.8589, 101.532, -32.0759, 0.15", "93.9429, 102.208, -32.3115, 0.15", "94.0059, 102.696, -32.4827, 1.32", "94.0678, 103.163, -32.6395, 1.76", "94.0957, 103.318, -32.6916, 1.69", "94.3682, 104.447, -33.1254, 0.22", "94.5535, 105.095, -33.3876, 0.29", "94.7449, 105.681, -33.6426, 1.03", "94.9037, 106.118, -33.8411, 1.69", "95.0776, 106.554, -34.0432, 1.91", "95.5432, 107.678, -34.5631, 0.15", "95.7795, 108.247, -34.8173, 0.66", "96.0567, 108.969, -35.1284, 0.15", "96.2165, 109.43, -35.3196, 1.18", "96.3383, 109.785, -35.4557, 1.32", "96.4331, 110.089, -35.5648, 1.32", "96.7365, 111.171, -35.9468, 0.15", "96.9725, 112.106, -36.2962, 1.76", "97.1208, 112.736, -36.5245, 1.76", "97.3335, 113.683, -36.8715, 0.44", "97.4514, 114.238, -37.0722, 0.73", "97.592, 114.873, -37.3014, 0.73", "97.6801, 115.275, -37.4433, 0.44", "97.8403, 116.025, -37.6931, 0.22", "97.9744, 116.64, -37.9016, 1.03", "98.0674, 117.053, -38.0461, 1.32", "98.3279, 117.979, -38.3579, 0.07", "98.6125, 118.841, -38.6562, 1.62", "98.7779, 119.31, -38.8214, 1.62", "99.1817, 120.425, -39.2413, 0.15", "99.2968, 120.731, -39.3574, 0.15", "99.5137, 121.288, -39.5629, 0.15", "99.7524, 121.856, -39.7613, 1.03", "99.9064, 122.189, -39.874, 1.98", "100.174, 122.721, -40.0384, 1.69", "100.602, 123.524, -40.259, 0.29", "100.967, 124.187, -40.4484, 0.29", "101.343, 124.852, -40.6328, 1.32", "101.506, 125.115, -40.7008, 1.54", "102.104, 126.038, -40.9323, 0.29", "102.46, 126.581, -41.0603, 0.44", "102.966, 127.423, -41.2621, 0.73", "103.283, 128.015, -41.4083, 1.18", "103.733, 128.998, -41.6505, 0.29", "103.931, 129.514, -41.7909, 0.15", "104.094, 130.021, -41.9504, 0.15", "104.352, 130.952, -42.2791, 2.13", "104.45, 131.319, -42.4181, 2.2", "104.591, 131.857, -42.6472, 2.2", "104.889, 132.996, -43.1612, 0.51", "105.154, 133.857, -43.5839, 0.51", "105.425, 134.593, -43.9691, 0.07", "105.754, 135.361, -44.3877, 0.66", "106.094, 136.114, -44.7967, 0.22", "106.384, 136.73, -45.1256, 1.1", "106.781, 137.566, -45.5474, 0.29", "107.088, 138.271, -45.8669, 1.32", "107.154, 138.441, -45.9388, 1.84", "107.318, 138.94, -46.1296, 1.47", "107.555, 139.754, -46.3957, 0.37", "107.661, 140.204, -46.5257, 0.15", "107.79, 141.011, -46.7042, 0.15", "107.837, 141.45, -46.7859, 0.15", "107.897, 142.051, -46.8903, 1.1", "107.956, 142.76, -46.9984, 1.76", "107.993, 143.192, -47.0515, 1.98", "108.092, 144.285, -47.1783, 0.66", "108.179, 145.163, -47.281, 0.59", "108.223, 145.648, -47.3348, 0.22", "108.287, 146.415, -47.4409, 0.29", "108.341, 147.172, -47.5562, 0.29", "108.389, 147.785, -47.6724, 1.18", "108.428, 148.31, -47.7913, 1.84", "108.458, 148.987, -47.9551, 1.4", "108.463, 149.706, -48.1222, 0.37", "108.457, 150.141, -48.2265, 0.29", "108.441, 150.646, -48.3455, 0.29", "108.432, 151.08, -48.4554, 0.66", "108.424, 151.624, -48.6112, 0.66", "108.416, 152.203, -48.7997, 0.22", "108.402, 152.84, -49.0216, 0.22", "108.355, 153.543, -49.2912, 1.62", "108.259, 154.235, -49.597, 1.62", "108.117, 155.06, -49.9858, 0.88", "107.973, 155.787, -50.3448, 0.37", "107.889, 156.182, -50.5492, 0.37", "107.723, 156.966, -50.9579, 1.91", "107.538, 157.993, -51.5254, 0.51", "107.449, 158.614, -51.8709, 0.37", "107.368, 159.272, -52.2532, 0.22", "107.269, 160.268, -52.8504, 0.66", "107.25, 160.555, -53.0203, 1.76", "107.245, 161.628, -53.6485, 0.29", "107.261, 161.972, -53.8337, 0.22", "107.286, 162.75, -54.2588, 1.25", "107.285, 162.992, -54.3938, 1.25", "107.27, 163.395, -54.6106, 0.22", "107.23, 163.857, -54.8775, 0.15", "107.161, 164.344, -55.1723, 0.15", "106.956, 165.384, -55.8351, 2.06", "106.668, 166.581, -56.6226, 0.44", "106.567, 166.943, -56.8645, 0.73", "106.362, 167.607, -57.2997, 0.22", "106.289, 167.836, -57.4359, 0.22", "106.091, 168.592, -57.8181, 1.62", "105.992, 169.2, -58.0395, 1.62", "105.946, 170.052, -58.2649, 0.15", "105.952, 170.548, -58.3777, 0.15", "105.997, 171.268, -58.5136, 0.22", "106.09, 172.298, -58.6958, 1.84", "106.148, 172.811, -58.7854, 1.84", "106.231, 173.654, -58.9218, 0.59", "106.275, 174.382, -59.0449, 0.37", "106.286, 174.775, -59.1148, 0.37", "106.283, 175.487, -59.2593, 0.37", "106.257, 176.355, -59.4563, 0.07", "106.221, 177.174, -59.662, 0.07", "106.197, 178.092, -59.926, 1.84", "106.197, 178.618, -60.106, 1.84", "106.233, 179.456, -60.4298, 0.37", "106.293, 180.17, -60.7497, 0.15", "106.374, 180.783, -61.0581, 0.15", "106.53, 181.706, -61.5719, 1.47", "106.611, 182.183, -61.866, 1.47", "106.667, 182.62, -62.136, 1.1", "106.701, 183.164, -62.4617, 0.81", "106.703, 183.752, -62.827, 1.62", "106.693, 184.052, -63.0134, 1.62", "106.619, 185.136, -63.6733, 0.07", "106.555, 185.889, -64.1396, 0.95", "106.479, 186.671, -64.6649, 0.07", "106.426, 187.136, -65.0008, 0.88", "106.36, 187.636, -65.4037, 0.07", "106.308, 188.027, -65.7413, 0.07", "106.224, 188.609, -66.2685, 1.84", "106.095, 189.432, -67.0369, 0.51", "105.998, 190.206, -67.7056, 1.18", "105.92, 191.033, -68.3512, 0.22", "105.882, 191.496, -68.6878, 0.22", "105.849, 192.107, -69.0854, 1.1", "105.851, 192.394, -69.2511, 1.18", "105.921, 193.437, -69.7819, 0.15", "106.005, 194.079, -70.0566, 1.1", "106.062, 194.489, -70.2091, 1.4", "106.088, 194.751, -70.2974, 1.4", "106.148, 195.715, -70.5815, 0.37", "106.156, 196.052, -70.6732, 0.37", "106.141, 196.852, -70.8886, 1.54", "106.087, 197.986, -71.1669, 0.07", "106.006, 198.901, -71.3701, 0.07", "105.911, 199.715, -71.5448, 1.69", "105.886, 199.876, -71.576, 1.69", "105.695, 200.967, -71.7751, 0.07", "105.464, 202.117, -71.9782, 0.07", "105.272, 202.946, -72.1053, 0.07", "105.094, 203.708, -72.2251, 1.69", "104.941, 204.322, -72.3174, 2.28", "104.594, 205.666, -72.5179, 0.22", "104.397, 206.41, -72.6203, 0.15", "104.153, 207.384, -72.7693, 0.15", "104.022, 207.951, -72.8601, 0.95", "103.901, 208.453, -72.9442, 1.18", "103.715, 209.256, -73.0925, 0.07", "103.662, 209.472, -73.133, 0.07", "103.512, 210.11, -73.2412, 1.1", "103.382, 210.659, -73.3241, 1.1", "103.257, 211.132, -73.3808, 0.07", "103.067, 211.825, -73.4679, 0.07", "102.812, 212.751, -73.5667, 1.62", "102.6, 213.509, -73.6438, 1.25", "102.389, 214.282, -73.7325, 0.07", "102.221, 214.897, -73.8044, 0.07", "101.923, 216.012, -73.9608, 1.69", "101.781, 216.57, -74.0516, 1.1", "101.647, 217.166, -74.1554, 0.59", "101.48, 217.965, -74.3147, 0.07", "101.377, 218.586, -74.4367, 1.03", "101.289, 219.5, -74.6173, 0.07", "101.259, 220.471, -74.8207, 0.07", "101.271, 221.017, -74.9277, 0.95", "101.334, 221.948, -75.0873, 0.07", "101.477, 223.207, -75.2747, 2.42", "101.69, 224.555, -75.4595, 0.07", "101.842, 225.256, -75.539, 0.07", "102.109, 226.144, -75.6419, 0.95", "102.227, 226.471, -75.6771, 1.18", "102.684, 227.436, -75.7741, 0.37", "102.881, 227.766, -75.8134, 0.07", "103.398, 228.548, -75.904, 0.07", "104.066, 229.495, -76.0356, 1.32", "104.562, 230.149, -76.1532, 1.91", "105.58, 231.456, -76.383, 0.15", "105.963, 231.951, -76.4683, 0.15", "106.191, 232.274, -76.5296, 0.15", "106.535, 232.849, -76.6425, 0.15", "106.783, 233.378, -76.76, 1.47", "106.97, 233.898, -76.8916, 1.25", "107.158, 234.768, -77.144, 0.22", "107.272, 235.438, -77.3494, 0.15", "107.354, 235.959, -77.5138, 0.29", "107.458, 236.796, -77.7876, 1.25", "107.543, 237.602, -78.0739, 2.35", "107.657, 238.654, -78.4769, 0.07", "107.685, 238.996, -78.6142, 1.1" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "52.9559, 41.8514, -18.1551, 0.73", "53.5274, 42.2036, -18.7987, 0.73", "54.59, 42.7557, -19.8664, 0.37", "55.1537, 42.9958, -20.398, 0.51", "55.9272, 43.2741, -21.126, 1.54", "56.7847, 43.5847, -21.9484, 0.07", "57.6102, 43.8996, -22.7186, 0.15", "58.1282, 44.0906, -23.1931, 0.15", "58.7228, 44.286, -23.7038, 1.32", "60.0291, 44.6317, -24.7172, 0.37", "60.7752, 44.7648, -25.2407, 1.25", "61.5403, 44.8756, -25.7086, 0.29", "62.3867, 44.9804, -26.178, 0.29", "63.0747, 45.0437, -26.5155, 1.03", "64.0813, 45.0747, -26.8755, 0.07", "65.1256, 45.0366, -27.0849, 0.07", "65.7527, 44.9908, -27.1635, 0.88", "65.9092, 44.9769, -27.1811, 1.03", "67.1661, 44.8892, -27.2866, 0.07", "68.5762, 44.8544, -27.4245, 2.13", "70.0828, 44.9152, -27.5902, 0.07", "70.6402, 44.9677, -27.6523, 0.37", "71.706, 45.1035, -27.7903, 0.07", "72.3383, 45.1978, -27.8851, 1.1", "73.3039, 45.3595, -28.0399, 0.07", "74.5073, 45.5858, -28.2633, 0.07", "75.3036, 45.7515, -28.4217, 1.47", "76.3121, 45.9819, -28.6077, 0.07", "77.1609, 46.1889, -28.7623, 0.07", "78.0401, 46.3928, -28.9388, 0.07", "78.6064, 46.5143, -29.0628, 1.25", "79.2257, 46.6443, -29.2131, 1.32", "79.8296, 46.7741, -29.3512, 1.32", "81.311, 47.1013, -29.6849, 0.07", "81.8517, 47.2149, -29.8137, 0.44", "82.6191, 47.3599, -30.0009, 0.07", "83.2965, 47.4747, -30.1659, 0.07", "84.3927, 47.6368, -30.4196, 1.76", "85.6196, 47.8038, -30.6873, 0.07", "86.5748, 47.9653, -30.8951, 0.07", "87.3254, 48.1225, -31.0705, 1.91", "88.5274, 48.4252, -31.3698, 0.07", "89.193, 48.6268, -31.5527, 0.07", "90.0434, 48.9256, -31.7954, 1.47", "91.3538, 49.4337, -32.1438, 0.07", "92.1416, 49.7529, -32.3263, 1.18", "92.7882, 49.9983, -32.4583, 1.18", "93.8668, 50.3723, -32.64, 0.07", "94.3781, 50.5283, -32.7095, 0.07", "95.19, 50.7335, -32.7989, 0.07", "96.6045, 51.0108, -32.931, 1.76", "97.7907, 51.2277, -33.0428, 0.07", "98.3554, 51.3393, -33.1046, 0.07", "98.9799, 51.4811, -33.1922, 0.66", "99.7819, 51.7026, -33.3326, 0.15", "100.613, 51.9947, -33.5124, 1.25", "101.216, 52.2635, -33.662, 1.25", "102.318, 52.8337, -33.9945, 0.07", "103.463, 53.4543, -34.3807, 1.62", "103.831, 53.6596, -34.5133, 1.32", "104.444, 53.9932, -34.727, 0.95", "105.24, 54.3963, -35.0212, 0.15", "106.442, 54.9471, -35.4554, 0.07", "107.282, 55.2947, -35.7431, 0.07", "107.484, 55.3655, -35.8077, 1.18", "108.507, 55.6364, -36.1281, 0.22", "109.606, 55.8136, -36.4654, 0.07", "110.634, 55.9061, -36.8114, 1.47", "111.303, 55.9506, -37.0506, 1.47", "112.604, 56.0116, -37.5894, 0.15", "113.4, 56.0352, -37.9493, 0.15", "114.403, 56.0462, -38.471, 1.47", "115.618, 56.0923, -39.15, 0.51", "116.411, 56.1631, -39.6473, 1.32", "117.087, 56.2763, -40.1095, 0.29", "117.485, 56.3925, -40.3928, 0.15", "118.138, 56.6672, -40.8587, 0.15", "118.772, 56.9908, -41.3164, 1.1", "119.077, 57.156, -41.5207, 1.18", "120.039, 57.7034, -42.1344, 0.07", "120.52, 57.9953, -42.4088, 0.59", "121.453, 58.582, -42.8921, 0.07", "121.869, 58.8689, -43.1087, 0.07", "122.46, 59.302, -43.4218, 1.76", "123.304, 60.0004, -43.8733, 0.07", "124.111, 60.7432, -44.2745, 0.07", "124.88, 61.4793, -44.6431, 1.4", "126.045, 62.6606, -45.1888, 0.07", "126.473, 63.0976, -45.3882, 0.51", "126.98, 63.601, -45.626, 0.07", "127.738, 64.3179, -45.9648, 0.07", "128.169, 64.6596, -46.1602, 1.54", "129.173, 65.2999, -46.5788, 0.07", "130.231, 65.845, -46.9747, 1.47", "131.113, 66.1925, -47.2828, 0.07", "131.503, 66.3075, -47.4123, 0.95", "133.424, 66.7708, -48.0648, 0.07", "133.897, 66.8555, -48.2285, 0.07", "134.414, 66.9129, -48.4062, 1.54", "135.74, 67.0131, -48.8834, 0.07", "136.296, 67.0545, -49.0876, 0.07", "137.319, 67.1608, -49.4833, 0.95", "138.393, 67.3252, -49.8811, 0.07", "138.768, 67.4048, -50.0537, 0.07", "139.236, 67.5261, -50.2943, 0.95", "140.355, 67.8994, -50.9206, 0.07", "141.205, 68.197, -51.3767, 0.07", "142.026, 68.4981, -51.7988, 1.4", "143.518, 69.1063, -52.5692, 0.07", "143.911, 69.2769, -52.7809, 0.07", "144.339, 69.4765, -53.0171, 0.66", "145.258, 69.9285, -53.5329, 0.07", "145.987, 70.2897, -53.9307, 1.25" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "23.2828, -8.65565, -11.2552, 0.22", "24.9186, -9.04023, -11.6808, 0.22", "25.9627, -9.30953, -11.9825, 0.59", "27.0328, -9.66942, -12.3104, 0.07", "28.3889, -10.1691, -12.6831, 1.47", "29.5081, -10.6245, -12.9557, 0.07", "29.8131, -10.7576, -13.0234, 0.07", "31.2411, -11.436, -13.3486, 1.76", "32.56, -12.0833, -13.6589, 0.07", "33.3607, -12.4922, -13.7997, 0.07", "34.2366, -12.975, -13.9321, 0.07", "34.7173, -13.2594, -13.9904, 1.03", "35.4901, -13.7234, -14.0776, 1.03", "36.3765, -14.292, -14.1349, 1.03", "37.2374, -14.8585, -14.1555, 0.07", "38.1346, -15.4882, -14.1637, 0.07", "38.8945, -16.0396, -14.1424, 0.66", "39.559, -16.5549, -14.0983, 0.07", "40.4559, -17.3078, -14.0, 0.95", "41.6753, -18.3682, -13.8607, 0.07", "42.0693, -18.7042, -13.8281, 0.07", "42.6918, -19.2021, -13.792, 1.1", "43.135, -19.5371, -13.7794, 1.76", "43.5341, -19.8311, -13.7849, 1.76", "44.6681, -20.658, -13.8267, 0.07", "45.4461, -21.2695, -13.852, 0.73", "46.2175, -21.9099, -13.8635, 0.07", "46.4653, -22.1238, -13.8701, 0.07", "47.0157, -22.5868, -13.9013, 1.1", "48.0425, -23.4298, -13.9827, 0.07", "48.5903, -23.8474, -14.0612, 1.18", "49.2158, -24.2759, -14.1841, 1.47", "49.7654, -24.6107, -14.3057, 1.47", "51.1418, -25.3398, -14.6183, 0.07", "51.8617, -25.6585, -14.7814, 0.66", "53.0028, -26.0593, -15.0329, 0.07", "53.613, -26.2354, -15.1268, 0.07", "54.5307, -26.4669, -15.2037, 1.25", "55.3055, -26.6502, -15.2089, 1.25", "56.0702, -26.8265, -15.165, 0.81", "56.6081, -26.9507, -15.1103, 0.07", "57.6747, -27.1888, -14.953, 0.07", "58.3072, -27.3269, -14.8725, 0.07", "58.9995, -27.4865, -14.8039, 0.81", "59.5424, -27.6199, -14.762, 1.03", "60.5203, -27.8863, -14.705, 1.03", "61.3205, -28.1391, -14.6775, 0.07", "62.2891, -28.4849, -14.6726, 0.07", "63.2985, -28.8822, -14.6941, 1.76", "63.7435, -29.0799, -14.7009, 1.76", "64.9807, -29.7054, -14.6876, 0.07", "65.467, -29.9739, -14.6738, 0.07", "65.8935, -30.2259, -14.6553, 0.07", "66.7075, -30.7163, -14.6068, 0.95", "67.522, -31.2157, -14.5639, 0.07", "68.863, -32.023, -14.5049, 0.07", "69.8283, -32.5795, -14.4702, 1.1", "70.3551, -32.8651, -14.4519, 1.1", "71.1289, -33.2681, -14.4405, 0.07", "71.5924, -33.5045, -14.4459, 0.66", "72.2898, -33.8375, -14.4957, 0.07", "72.7078, -34.0345, -14.5374, 0.07", "73.2747, -34.2973, -14.599, 0.59", "73.8347, -34.5534, -14.6611, 0.15", "74.865, -35.022, -14.7696, 1.84", "75.4936, -35.3143, -14.8313, 1.84", "76.8295, -35.9707, -14.9785, 0.07", "77.7216, -36.4139, -15.0771, 0.07", "78.7484, -36.9147, -15.1771, 0.07", "79.7589, -37.4109, -15.2556, 1.25", "80.2649, -37.6521, -15.2892, 1.25", "81.4518, -38.2195, -15.355, 0.07", "82.2335, -38.5927, -15.3881, 0.66", "82.8786, -38.9044, -15.3969, 0.07", "84.5948, -39.7427, -15.3946, 0.07", "85.7785, -40.3411, -15.38, 1.98", "86.6456, -40.7788, -15.3405, 1.1", "87.3308, -41.1226, -15.3, 0.15", "88.5234, -41.729, -15.2344, 0.15", "89.0633, -42.0035, -15.2082, 1.1", "90.1854, -42.5554, -15.1519, 0.81", "91.0944, -42.9936, -15.1289, 0.07", "91.8207, -43.3312, -15.1308, 0.44", "92.4953, -43.6434, -15.1537, 0.07", "93.0841, -43.9255, -15.1954, 0.51", "93.7983, -44.2664, -15.2829, 0.07", "94.6027, -44.6537, -15.4161, 0.37", "95.5418, -45.1038, -15.5954, 0.07", "96.4979, -45.549, -15.7908, 1.76", "96.949, -45.7453, -15.8924, 1.76", "98.377, -46.2907, -16.2297, 0.07", "98.8115, -46.437, -16.3323, 0.07", "99.6809, -46.6962, -16.5275, 0.73", "100.66, -46.9355, -16.7697, 0.07", "101.184, -47.0492, -16.9036, 0.07", "101.863, -47.2022, -17.0424, 0.07", "102.591, -47.3957, -17.1394, 0.07", "103.11, -47.5536, -17.1889, 1.25", "104.219, -47.9128, -17.3093, 0.07", "104.748, -48.0963, -17.3229, 0.51", "105.84, -48.4835, -17.313, 0.07", "106.863, -48.8456, -17.2724, 0.95", "107.535, -49.0734, -17.2009, 1.25", "108.76, -49.4857, -16.9819, 0.07", "110.211, -49.9798, -16.639, 0.81", "111.448, -50.4133, -16.3352, 0.07", "111.944, -50.5969, -16.2084, 0.37", "112.911, -50.985, -15.9109, 0.07", "114.029, -51.4863, -15.5249, 1.47", "115.013, -51.9908, -15.1386, 0.07", "115.483, -52.2452, -14.9661, 0.07", "116.229, -52.6848, -14.6689, 0.51", "117.038, -53.1926, -14.3545, 0.07", "118.08, -53.8943, -13.9832, 1.91", "119.328, -54.8164, -13.5441, 0.44", "119.571, -55.014, -13.4595, 0.07", "119.989, -55.3805, -13.3329, 0.88", "120.379, -55.7794, -13.244, 0.88", "120.74, -56.1984, -13.1964, 0.88", "121.257, -56.8375, -13.172, 0.07", "121.903, -57.6427, -13.1971, 0.73", "122.504, -58.406, -13.2279, 0.07", "122.986, -59.0235, -13.2602, 0.81", "123.34, -59.4703, -13.2833, 0.07", "123.967, -60.2519, -13.3264, 1.1", "124.551, -60.9819, -13.3754, 0.07", "124.856, -61.3518, -13.4115, 0.07", "125.26, -61.7883, -13.4498, 0.88" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "23.2828, -8.65565, -11.2552, 1.25", "24.3313, -8.49537, -11.7517, 1.25", "25.1943, -8.44363, -12.1312, 0.59", "25.8027, -8.42923, -12.3753, 0.59", "26.6016, -8.40762, -12.673, 1.1", "27.0469, -8.39018, -12.8305, 1.32", "28.5731, -8.30928, -13.3366, 0.44", "29.6111, -8.32233, -13.67, 0.44", "30.1765, -8.35343, -13.8469, 0.44", "31.0752, -8.394, -14.1155, 1.25", "31.7107, -8.39398, -14.321, 1.25", "32.2302, -8.36924, -14.51, 0.88", "33.5386, -8.24862, -15.0325, 0.22", "34.2576, -8.12829, -15.3387, 1.1", "35.0993, -7.91834, -15.7234, 0.73", "36.3001, -7.56926, -16.2822, 1.25", "36.879, -7.3908, -16.5548, 2.13", "37.398, -7.22107, -16.7957, 2.13", "38.7666, -6.727, -17.3976, 0.81", "40.1229, -6.31398, -18.032, 0.29", "40.4965, -6.22178, -18.2237, 0.15", "41.0205, -6.11805, -18.5058, 0.15", "41.4188, -6.06087, -18.7289, 0.15", "42.7514, -5.87777, -19.4937, 2.06", "44.4073, -5.65104, -20.4652, 0.66", "45.5663, -5.46172, -21.1585, 0.44", "46.6049, -5.25008, -21.7771, 1.69", "48.0224, -4.97089, -22.6117, 0.07", "48.9292, -4.82653, -23.1343, 1.18", "49.6174, -4.74479, -23.5163, 1.76", "50.5402, -4.64017, -23.9986, 1.76", "51.8827, -4.52656, -24.724, 0.15", "52.9449, -4.42902, -25.3597, 0.15", "53.6073, -4.35518, -25.8517, 0.51", "54.3177, -4.24887, -26.4661, 1.4", "54.9215, -4.12267, -27.0158, 1.76", "56.0667, -3.81202, -28.0686, 0.07", "57.256, -3.42371, -29.1789, 2.2", "59.0872, -2.77265, -30.8359, 0.81", "60.4189, -2.32587, -31.9987, 1.47", "61.97, -1.88591, -33.2731, 2.35", "63.5677, -1.52438, -34.439, 0.07", "63.9931, -1.44508, -34.7054, 0.07", "64.8791, -1.31885, -35.1695, 1.69", "66.3286, -1.19713, -35.7487, 0.15", "67.4972, -1.16337, -36.1696, 0.15", "68.9744, -1.17686, -36.6691, 2.06", "70.1583, -1.21564, -37.0711, 0.95", "71.0132, -1.2347, -37.374, 0.07", "71.7973, -1.24434, -37.6645, 0.51", "72.9288, -1.25247, -38.0754, 0.07", "73.6866, -1.26714, -38.3611, 0.88", "74.4722, -1.30119, -38.6848, 0.07", "75.7042, -1.39426, -39.1826, 2.2", "77.0432, -1.53784, -39.7441, 0.07", "77.9766, -1.63461, -40.1672, 0.81", "78.3453, -1.66782, -40.34, 0.88", "79.2801, -1.69092, -40.8943, 0.07", "79.9628, -1.66088, -41.3684, 0.07", "81.1548, -1.49206, -42.3411, 1.62", "82.2399, -1.19603, -43.4039, 0.07", "83.1624, -0.814186, -44.4396, 2.06", "84.6855, -0.0198265, -46.2682, 1.03", "85.1166, 0.248951, -46.8273, 1.03", "86.0008, 0.852894, -47.9907, 2.2", "87.5123, 1.97322, -49.9591, 0.59", "88.1186, 2.4505, -50.7269, 0.59", "88.7834, 2.94854, -51.4922, 1.4", "89.2584, 3.26542, -51.9487, 1.4", "90.4816, 4.02148, -53.0305, 0.07", "91.2572, 4.45827, -53.6459, 1.03", "91.7522, 4.71359, -54.0022, 1.47", "93.7185, 5.65498, -55.3667, 0.07", "95.2009, 6.36425, -56.4087, 1.91", "96.2372, 6.84448, -57.1234, 0.59", "96.9972, 7.19795, -57.6477, 1.32", "98.3685, 7.80977, -58.5276, 0.07", "99.2428, 8.18417, -59.0359, 0.95", "100.268, 8.64104, -59.5394, 0.07", "100.891, 8.91995, -59.8018, 0.44", "101.518, 9.19884, -60.0272, 0.07", "102.349, 9.59491, -60.3673, 1.25", "103.197, 10.0368, -60.7516, 0.07", "104.22, 10.6222, -61.277, 1.1", "104.577, 10.8291, -61.467, 1.1", "104.953, 11.048, -61.6817, 1.4", "106.776, 12.0725, -62.7345, 0.07", "107.458, 12.4399, -63.1431, 1.69", "107.847, 12.6401, -63.363, 1.69", "109.286, 13.3399, -64.2078, 0.07", "109.577, 13.4723, -64.3789, 0.59", "110.156, 13.698, -64.6867, 0.07", "111.06, 13.9274, -65.1025, 1.4", "111.391, 13.982, -65.2566, 1.4", "113.118, 14.1727, -66.1164, 0.29", "113.641, 14.1949, -66.3913, 0.95", "114.621, 14.1841, -66.9043, 0.07", "115.405, 14.1214, -67.2939, 1.25", "115.804, 14.0565, -67.4614, 1.25", "116.833, 13.8018, -67.8279, 0.07", "117.32, 13.6328, -67.956, 0.07", "117.606, 13.5142, -68.0368, 0.07", "118.208, 13.2098, -68.2019, 0.07", "118.923, 12.8354, -68.3988, 1.32", "119.18, 12.7048, -68.4788, 1.32", "119.981, 12.38, -68.7978, 0.07", "120.525, 12.2436, -69.0974, 0.07", "121.277, 12.2071, -69.6921, 0.07", "121.803, 12.3125, -70.25, 0.07", "122.36, 12.5095, -70.9541, 1.47", "123.35, 12.9038, -72.2115, 1.69", "124.038, 13.2004, -73.0815, 1.69", "125.184, 13.7021, -74.43, 0.88", "126.081, 14.0996, -75.4761, 0.51", "126.952, 14.427, -76.3831, 0.07", "127.931, 14.7612, -77.3345, 1.47", "128.393, 14.9034, -77.7626, 1.47", "129.228, 15.1572, -78.4562, 0.07", "131.45, 16.03, -80.3842, 0.95", "132.155, 16.4032, -81.0299, 0.73", "132.944, 16.9773, -81.8189, 0.07", "133.864, 17.8448, -82.8224, 0.07", "134.507, 18.6109, -83.562, 2.35", "135.674, 20.4275, -85.1206, 0.22", "136.05, 21.2035, -85.6692, 1.47", "136.415, 22.2518, -86.4009, 0.15", "136.639, 23.1931, -87.0978, 0.15", "136.763, 24.2107, -87.8629, 1.32", "136.85, 25.9136, -89.3215, 0.07", "136.871, 26.6824, -90.0261, 0.15", "136.875, 27.7537, -91.0896, 0.95", "136.891, 29.4099, -92.8503, 0.15", "136.922, 30.1116, -93.6011, 1.4", "137.121, 32.1927, -95.8752, 0.81", "137.273, 33.0378, -96.8018, 1.18", "137.448, 33.6079, -97.5348, 1.25", "138.072, 34.9608, -99.4664, 0.81", "138.622, 35.8351, -100.866, 0.51", "139.02, 36.3443, -101.772, 1.1", "139.32, 36.6641, -102.369, 1.1", "141.0, 38.0657, -105.243, 0.81", "141.572, 38.4312, -106.05, 1.03", "142.311, 38.8023, -106.918, 0.44", "142.852, 39.0599, -107.502, 0.29", "143.651, 39.51, -108.263, 0.95", "144.44, 39.9833, -108.944, 0.07", "145.07, 40.3621, -109.313, 0.51", "146.287, 41.0341, -109.996, 0.07", "146.993, 41.3629, -110.383, 0.59", "147.605, 41.6083, -110.738, 0.59" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "11.453, -17.9559, -10.3189, 0.81", "12.0623, -19.6553, -10.2819, 0.81", "12.3331, -20.7468, -10.2764, 0.37", "12.5439, -21.945, -10.2884, 1.18", "12.6535, -22.9305, -10.3298, 1.54", "12.7393, -24.4867, -10.4259, 1.25", "12.7606, -25.9939, -10.5453, 0.59", "12.6608, -26.9517, -10.6475, 0.88", "12.5072, -27.8541, -10.743, 0.66", "12.3181, -28.7934, -10.8107, 0.88", "12.1517, -29.5356, -10.8312, 0.88", "11.8275, -31.0162, -10.8262, 0.29", "11.4976, -32.7058, -10.7568, 1.1", "11.2479, -33.9417, -10.6523, 1.32", "10.974, -35.2206, -10.4944, 1.84", "10.7196, -36.3666, -10.3168, 1.69", "10.5276, -37.1138, -10.1935, 1.62", "10.0927, -38.4921, -9.96448, 0.66", "9.6569, -39.7404, -9.79377, 0.51", "9.37401, -40.4978, -9.71824, 0.51", "9.03099, -41.3617, -9.68102, 0.51", "8.63014, -42.353, -9.69671, 0.59", "8.15215, -43.4832, -9.77761, 1.47", "7.73729, -44.475, -9.9124, 1.84", "7.22117, -45.737, -10.1339, 1.84", "6.72951, -46.9568, -10.3857, 1.25", "6.09162, -48.6058, -10.746, 0.81", "5.72971, -49.6326, -10.9692, 0.81", "5.4414, -50.5792, -11.1589, 0.81", "5.02521, -52.229, -11.4556, 0.73", "4.7635, -53.6436, -11.6646, 1.1", "4.66881, -54.4037, -11.7388, 2.42", "4.59622, -55.3472, -11.7959, 2.42", "4.47301, -57.8918, -11.8769, 0.44", "4.44423, -58.7033, -11.8796, 0.29", "4.40694, -59.9971, -11.8652, 0.51", "4.36434, -61.0272, -11.844, 1.25", "4.34137, -61.677, -11.837, 1.32", "4.30562, -63.2105, -11.8318, 0.37", "4.27585, -64.1887, -11.8221, 0.37", "4.21676, -66.1413, -11.7968, 2.28", "4.1696, -67.3846, -11.7955, 2.64", "4.0984, -69.8555, -11.7989, 0.51", "4.09026, -70.9073, -11.8021, 0.07", "4.1078, -72.5212, -11.8282, 0.07", "4.14401, -74.0037, -11.8765, 1.62", "4.2065, -75.861, -11.9694, 0.66", "4.24503, -77.086, -12.047, 0.29", "4.26859, -78.3129, -12.1488, 0.29", "4.30871, -79.4533, -12.2767, 1.18", "4.39673, -81.0143, -12.5044, 1.4", "4.45626, -81.8582, -12.6612, 1.1", "4.56255, -83.123, -12.9206, 0.73", "4.64908, -84.5198, -13.2351, 1.47", "4.69977, -85.5599, -13.4683, 1.47", "4.75559, -87.0051, -13.7621, 0.95", "4.77745, -88.1008, -13.9621, 0.59", "4.7754, -88.7255, -14.0518, 0.37", "4.74203, -90.3782, -14.2354, 1.98", "4.72251, -91.2388, -14.2936, 1.98", "4.67453, -93.0697, -14.3465, 0.44", "4.64857, -94.269, -14.3467, 0.29", "4.62192, -95.5165, -14.3148, 0.29", "4.61205, -96.2931, -14.3099, 0.29", "4.58198, -97.1816, -14.3024, 0.29", "4.49349, -98.784, -14.2896, 2.2", "4.43573, -99.393, -14.279, 2.42", "4.30277, -100.316, -14.2646, 2.42", "4.07805, -101.462, -14.2125, 1.62", "3.40256, -103.959, -13.9358, 0.15", "3.18544, -104.581, -13.8137, 1.18", "2.78891, -105.55, -13.5451, 0.37", "2.60205, -106.019, -13.3984, 0.37", "2.1947, -107.171, -13.0086, 0.59", "1.83411, -108.476, -12.5578, 0.07", "1.57187, -110.011, -12.0733, 1.91", "1.51189, -110.93, -11.8418, 2.2", "1.58903, -112.64, -11.5383, 0.07", "1.77644, -113.983, -11.3683, 0.07", "2.02678, -115.056, -11.3012, 1.25", "2.30781, -115.947, -11.3005, 1.76", "2.96427, -117.662, -11.3773, 0.15", "3.60069, -119.1, -11.4729, 0.22", "3.97086, -119.896, -11.5673, 0.37", "4.40197, -120.827, -11.7298, 0.37", "4.91078, -121.982, -11.963, 0.07", "5.30271, -122.95, -12.1753, 0.95", "5.74918, -124.118, -12.4449, 1.84", "6.16668, -125.417, -12.7456, 1.54", "6.64339, -127.183, -13.1507, 0.15", "6.81018, -127.834, -13.2943, 0.15", "7.04799, -128.819, -13.4816, 0.88", "7.17039, -129.416, -13.5828, 0.88", "7.32565, -130.349, -13.7085, 0.07", "7.40143, -130.86, -13.757, 0.07", "7.49963, -131.553, -13.8257, 0.66", "7.53715, -131.909, -13.8839, 0.66", "7.59043, -132.805, -14.0574, 0.22", "7.60752, -133.472, -14.1941, 0.44", "7.6119, -135.003, -14.4912, 2.13", "7.58111, -136.358, -14.7584, 1.69", "7.46177, -138.091, -15.0802, 0.07", "7.3869, -138.748, -15.1879, 0.07", "7.2495, -139.718, -15.3162, 0.44", "7.08305, -140.821, -15.435, 0.59", "6.91492, -141.824, -15.4901, 0.07", "6.57858, -143.622, -15.5112, 1.76", "6.39787, -144.693, -15.4738, 1.25", "6.07786, -146.775, -15.3753, 0.22", "5.95329, -147.615, -15.3188, 0.22", "5.75315, -148.972, -15.2045, 1.62", "5.61012, -149.875, -15.1017, 1.62", "5.53424, -150.332, -15.0532, 1.62", "5.14462, -152.4, -14.8614, 0.29", "4.94714, -153.256, -14.7957, 0.29", "4.65275, -154.366, -14.7344, 1.62", "4.18184, -155.838, -14.7003, 1.03", "3.67817, -157.159, -14.6815, 0.07", "3.3489, -157.89, -14.6709, 0.59", "2.83654, -158.813, -14.6524, 0.07", "2.56945, -159.226, -14.6466, 0.07", "1.90166, -160.147, -14.6279, 1.1", "1.32754, -160.922, -14.6033, 0.07", "0.926607, -161.475, -14.5638, 0.07", "0.496914, -162.149, -14.5186, 1.03", "0.225235, -162.644, -14.5083, 1.32", "-0.117476, -163.411, -14.5235, 1.32", "-0.649119, -164.924, -14.5827, 0.15", "-0.832809, -165.527, -14.6149, 0.15", "-1.17759, -166.75, -14.6703, 1.18", "-1.56365, -168.207, -14.7324, 0.07", "-1.87822, -169.425, -14.7752, 1.4", "-2.07815, -170.184, -14.7772, 1.54", "-2.60476, -172.193, -14.6987, 0.15", "-2.94227, -173.506, -14.604, 0.15", "-3.16952, -174.49, -14.4945, 1.69", "-3.2621, -174.906, -14.4291, 1.76", "-3.6243, -176.5, -14.175, 0.07", "-3.89997, -177.668, -13.9905, 0.07", "-4.16286, -178.763, -13.829, 1.76", "-4.39788, -179.654, -13.7361, 1.76", "-4.71644, -180.7, -13.6736, 2.13", "-5.2969, -182.377, -13.6631, 0.07", "-5.68888, -183.377, -13.6999, 0.73", "-6.05488, -184.338, -13.7522, 0.73", "-6.53471, -185.785, -13.8219, 0.07", "-6.86276, -186.95, -13.8664, 0.07", "-7.16519, -188.339, -13.908, 1.76", "-7.40199, -189.792, -13.923, 1.4", "-7.62145, -191.67, -13.9052, 0.22", "-7.77829, -193.897, -13.8207, 0.22", "-7.81149, -195.272, -13.7294, 1.18", "-7.80779, -195.698, -13.6948, 1.47", "-7.76988, -196.815, -13.5943, 1.18", "-7.69071, -198.519, -13.4408, 0.22", "-7.67845, -199.459, -13.3422, 0.88", "-7.6967, -200.162, -13.2759, 0.07", "-7.70853, -200.344, -13.2593, 0.07", "-7.75803, -200.853, -13.2176, 0.07", "-7.9112, -202.237, -13.1132, 1.91", "-7.98879, -202.879, -13.092, 2.06", "-8.26773, -204.485, -13.0749, 0.07", "-8.42778, -205.202, -13.0764, 0.51", "-8.6454, -206.083, -13.084, 0.07", "-8.98225, -207.32, -13.0904, 0.44", "-9.38449, -208.667, -13.0485, 0.07", "-9.74547, -209.794, -12.9688, 0.44", "-10.22, -211.177, -12.8165, 1.98", "-10.3977, -211.661, -12.7523, 1.98", "-10.9169, -213.017, -12.5333, 1.47", "-11.3694, -214.168, -12.3422, 0.07", "-11.7676, -215.242, -12.1518, 0.07", "-12.1022, -216.227, -11.9997, 0.22", "-12.4478, -217.25, -11.8567, 1.69", "-12.6143, -217.745, -11.801, 1.69", "-13.3254, -219.979, -11.6033, 0.15", "-13.4223, -220.313, -11.58, 0.07", "-13.7063, -221.27, -11.4758, 0.59", "-14.0834, -222.528, -11.2687, 0.07", "-14.5771, -224.099, -10.9462, 1.76", "-15.1135, -225.661, -10.6088, 0.07", "-15.3881, -226.366, -10.4419, 0.07", "-16.0162, -227.766, -10.0701, 0.07", "-16.5649, -228.817, -9.75672, 1.18", "-17.0438, -229.595, -9.51042, 2.13", "-17.6165, -230.398, -9.24286, 1.54", "-18.485, -231.457, -8.89377, 0.07", "-19.1886, -232.225, -8.67899, 1.1", "-19.8266, -232.88, -8.54063, 1.25", "-20.9347, -233.889, -8.3132, 0.07", "-21.4925, -234.35, -8.18627, 0.07", "-21.8886, -234.66, -8.08598, 0.37", "-22.8331, -235.406, -7.82825, 0.07", "-23.6121, -236.054, -7.63276, 1.69", "-24.8172, -237.108, -7.35322, 0.07", "-25.7147, -237.921, -7.15085, 0.07", "-26.8434, -239.02, -6.92123, 1.47", "-27.6139, -239.849, -6.79091, 1.47", "-28.9041, -241.408, -6.60102, 0.15", "-29.6711, -242.434, -6.52015, 0.07", "-30.4657, -243.59, -6.45854, 2.13", "-31.159, -244.646, -6.40695, 1.18", "-32.0487, -245.957, -6.35869, 0.22", "-32.5949, -246.731, -6.32375, 0.22", "-33.7221, -248.319, -6.18061, 0.29", "-34.558, -249.478, -6.07229, 1.4", "-34.9167, -249.97, -6.03269, 1.25", "-36.0774, -251.544, -5.94168, 0.15", "-36.5196, -252.142, -5.91982, 0.51", "-37.1709, -253.036, -5.93123, 0.07", "-37.7037, -253.833, -5.98817, 0.07", "-38.2953, -254.82, -6.08573, 1.54", "-39.1355, -256.316, -6.26425, 0.07", "-39.4873, -256.981, -6.34277, 0.51", "-39.9777, -257.945, -6.45576, 0.07", "-40.539, -259.03, -6.55704, 1.47", "-40.8384, -259.603, -6.59033, 1.54", "-41.6117, -261.042, -6.65227, 0.07", "-42.1013, -261.951, -6.65236, 0.07", "-42.4391, -262.575, -6.64766, 1.47", "-43.0901, -263.789, -6.61029, 1.62", "-43.9169, -265.273, -6.52498, 0.15", "-44.3732, -266.066, -6.4593, 0.15", "-45.1841, -267.463, -6.30955, 0.59", "-45.6988, -268.337, -6.2232, 0.07", "-46.2342, -269.251, -6.11776, 0.07", "-46.9634, -270.601, -5.92837, 2.13", "-47.6639, -271.998, -5.69793, 0.15", "-48.1973, -273.193, -5.49279, 1.1", "-48.6036, -274.285, -5.31454, 1.69", "-48.9768, -275.666, -5.09595, 0.07", "-49.0834, -276.504, -4.96123, 0.44", "-49.0238, -277.381, -4.82371, 0.07", "-48.8778, -278.057, -4.71664, 0.07", "-48.4613, -279.373, -4.50028, 1.25", "-48.2454, -279.946, -4.40722, 1.25", "-47.619, -281.541, -4.14952, 0.07", "-47.0374, -283.108, -3.87654, 0.07", "-46.8868, -283.536, -3.78943, 0.81", "-46.6613, -284.247, -3.60122, 1.1", "-46.4228, -285.113, -3.30869, 1.4", "-46.0336, -286.966, -2.62448, 0.15", "-45.8568, -288.076, -2.19405, 0.15", "-45.7125, -289.351, -1.5785, 1.18", "-45.5851, -290.837, -0.775832, 0.15", "-45.5314, -291.971, -0.10687, 1.62", "-45.5221, -292.914, 0.483658, 1.98", "-45.5443, -293.277, 0.719888, 1.98", "-45.8218, -295.388, 2.12952, 0.15", "-45.9619, -296.08, 2.58469, 0.15", "-46.1873, -296.968, 3.15868, 0.95", "-46.3636, -297.578, 3.59403, 0.95", "-46.8116, -299.031, 4.69633, 0.07", "-47.2451, -300.309, 5.65999, 1.54", "-47.4121, -300.747, 5.99009, 1.54", "-47.9957, -302.111, 7.08181, 0.07", "-48.665, -303.513, 8.22362, 1.25", "-48.9587, -304.071, 8.66559, 1.25", "-49.4988, -305.041, 9.33677, 0.73", "-49.9376, -305.827, 9.77546, 0.07", "-50.358, -306.588, 10.1244, 0.07", "-50.9537, -307.607, 10.4868, 0.15", "-51.7073, -308.886, 10.8319, 1.84", "-52.6247, -310.464, 11.2204, 0.15", "-53.3316, -311.732, 11.5665, 0.15", "-53.6289, -312.297, 11.7273, 1.76", "-54.0059, -313.054, 11.9592, 1.54", "-54.8371, -314.711, 12.5109, 0.22", "-55.5297, -316.057, 13.0048, 0.22", "-56.2469, -317.495, 13.5893, 1.25", "-56.4574, -317.903, 13.7645, 1.32", "-56.7868, -318.507, 14.0214, 1.1", "-57.3234, -319.467, 14.4174, 0.07", "-57.735, -320.168, 14.7009, 0.07", "-58.4112, -321.33, 15.1161, 0.07", "-58.8422, -322.068, 15.3585, 1.1", "-59.4774, -323.173, 15.7408, 0.07", "-59.8919, -323.903, 16.0135, 1.62", "-60.7286, -325.397, 16.6012, 0.15", "-61.2503, -326.35, 16.9857, 0.15", "-61.7718, -327.299, 17.3828, 1.91", "-62.1114, -327.978, 17.6679, 1.91", "-62.6322, -329.118, 18.1482, 0.07", "-62.7799, -329.485, 18.3013, 0.37", "-62.9052, -329.904, 18.4605, 0.07", "-63.0794, -330.737, 18.7835, 0.07", "-63.1869, -331.467, 19.0613, 0.07", "-63.2782, -332.027, 19.276, 1.62", "-63.5886, -333.899, 19.9665, 0.15", "-63.8022, -335.06, 20.3821, 0.07", "-64.0856, -336.42, 20.8578, 1.47", "-64.2762, -337.2, 21.1198, 1.03", "-64.6757, -338.576, 21.5697, 0.15", "-65.0464, -339.695, 21.9146, 0.73", "-65.5028, -340.862, 22.2434, 0.07", "-65.7408, -341.426, 22.3961, 0.29", "-66.2337, -342.717, 22.7049, 0.07", "-66.4855, -343.477, 22.897, 1.03", "-66.6586, -344.125, 23.0677, 1.03", "-66.982, -345.207, 23.3465, 0.07", "-67.3538, -346.366, 23.6642, 0.07", "-67.7576, -347.53, 24.0298, 0.07", "-67.9588, -348.002, 24.1966, 1.47", "-68.1791, -348.427, 24.3829, 1.47", "-69.2647, -350.039, 25.2831, 0.07", "-69.9709, -350.904, 25.8654, 0.95", "-70.6636, -351.609, 26.4174, 0.07", "-71.7157, -352.539, 27.2089, 0.07", "-72.7422, -353.36, 27.9454, 2.06", "-74.3739, -354.513, 29.0547, 0.15", "-75.5272, -355.225, 29.7799, 0.07", "-76.5695, -355.819, 30.3485, 1.25", "-78.2443, -356.726, 31.15, 0.15", "-79.1902, -357.239, 31.5622, 0.15", "-80.3143, -357.885, 31.9865, 0.29", "-81.2485, -358.483, 32.3247, 0.44", "-82.495, -359.4, 32.8025, 2.06", "-83.0659, -359.916, 33.0575, 1.76", "-84.1962, -361.195, 33.6621, 0.07", "-84.9017, -362.195, 34.1176, 0.51", "-85.3988, -363.089, 34.5184, 0.07", "-85.8718, -364.137, 34.9895, 0.07", "-86.2451, -365.168, 35.476, 1.03", "-86.4049, -365.704, 35.7445, 0.66", "-86.6164, -366.534, 36.2064, 0.07", "-86.6968, -366.887, 36.4446, 0.07", "-86.7883, -367.347, 36.7795, 0.51", "-86.9612, -368.287, 37.4827, 0.07", "-87.1512, -369.184, 38.1578, 0.88", "-87.4824, -370.45, 39.1569, 1.69", "-87.9395, -371.871, 40.3167, 0.07", "-88.1265, -372.296, 40.6885, 0.07", "-88.4307, -372.862, 41.1937, 0.07", "-88.9781, -373.675, 41.9391, 0.81", "-89.4393, -374.262, 42.4911, 1.4", "-89.7907, -374.639, 42.8479, 1.25", "-90.8196, -375.714, 43.8395, 0.22", "-91.2129, -376.189, 44.2944, 0.22", "-91.571, -376.756, 44.8514, 0.95", "-91.8241, -377.313, 45.3836, 0.07", "-91.9736, -377.692, 45.7507, 0.37", "-92.3043, -378.52, 46.5923, 0.07", "-92.6237, -379.332, 47.4495, 0.73", "-92.9348, -380.1, 48.3709, 0.07", "-93.2111, -380.784, 49.1876, 0.66", "-93.5257, -381.455, 49.9939, 0.22", "-93.7704, -381.935, 50.5435, 1.1", "-94.2052, -382.707, 51.3714, 0.07", "-94.6297, -383.388, 52.0442, 0.07", "-95.3913, -384.608, 53.1398, 1.62", "-96.0278, -385.685, 54.0121, 0.07", "-96.2591, -386.116, 54.3109, 0.07", "-96.5413, -386.672, 54.6804, 0.59", "-97.0421, -387.609, 55.2391, 0.07", "-97.2099, -387.937, 55.4407, 0.07", "-97.4299, -388.416, 55.7563, 0.07", "-97.6728, -389.08, 56.1829, 0.73", "-97.9983, -390.216, 56.904, 0.07", "-98.2172, -391.27, 57.6165, 2.35", "-98.4979, -393.069, 59.0477, 0.07", "-98.5542, -393.364, 59.3683, 0.07", "-98.672, -393.841, 60.085, 0.44", "-98.8452, -394.348, 61.059, 0.07", "-99.2538, -395.071, 63.0103, 0.66", "-99.6354, -395.341, 64.5643, 0.66", "-100.448, -395.424, 66.9802, 0.07", "-100.859, -395.389, 67.9239, 0.07", "-101.46, -395.245, 69.0411, 0.07", "-101.919, -395.101, 69.741, 0.37", "-103.587, -394.546, 71.9081, 0.07", "-104.161, -394.386, 72.5916, 0.07", "-104.831, -394.224, 73.3521, 0.95", "-106.277, -393.874, 75.0301, 0.07", "-107.105, -393.669, 76.0209, 0.81", "-107.941, -393.447, 76.9863, 0.37", "-108.393, -393.281, 77.4643, 0.07", "-108.657, -393.144, 77.7769, 0.29", "-109.198, -392.743, 78.4259, 0.07", "-109.492, -392.462, 78.7211, 0.88", "-109.726, -392.173, 78.9393, 0.88", "-110.497, -391.249, 79.4464, 0.07", "-110.841, -390.911, 79.5919, 0.07", "-111.72, -390.367, 79.7477, 0.15", "-112.042, -390.265, 79.7521, 0.44", "-112.713, -390.201, 79.7051, 0.07", "-114.154, -390.218, 79.5745, 0.07", "-115.067, -390.302, 79.4666, 0.81", "-116.65, -390.511, 79.2562, 0.07", "-117.178, -390.606, 79.1805, 0.29", "-118.198, -390.806, 79.024, 0.07", "-119.898, -391.188, 78.7464, 0.07", "-120.39, -391.3, 78.6846, 0.73" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.453, -17.9559, -10.3189, 0.44", "10.4115, -18.1242, -9.50435, 0.44", "9.66678, -18.3102, -9.00746, 0.44", "9.43353, -18.3934, -8.86317, 1.1", "8.74748, -18.7066, -8.49169, 1.1", "8.14456, -19.0344, -8.20863, 0.15", "7.60875, -19.3526, -7.97535, 0.88", "7.36487, -19.5317, -7.89961, 0.95", "6.93139, -19.871, -7.79421, 0.59", "6.14993, -20.4949, -7.65724, 0.22", "5.54328, -20.9662, -7.59656, 0.81", "5.33114, -21.1058, -7.58242, 0.88", "4.62123, -21.5046, -7.58738, 0.15", "4.06284, -21.7765, -7.64227, 0.15", "3.0354, -22.2259, -7.78993, 1.03", "2.47886, -22.4664, -7.89751, 1.32", "1.67775, -22.8093, -8.08908, 1.32", "0.517435, -23.2755, -8.39202, 0.07", "-0.670659, -23.7308, -8.7114, 0.88", "-1.18911, -23.9281, -8.83694, 0.88", "-2.14468, -24.2997, -9.02813, 0.37", "-2.89534, -24.598, -9.16764, 0.37", "-3.62667, -24.8872, -9.29581, 0.37", "-4.24829, -25.0934, -9.36257, 1.18", "-4.72542, -25.2456, -9.40488, 1.4", "-5.0545, -25.3541, -9.43448, 1.32", "-5.9807, -25.6925, -9.53083, 0.22", "-6.40456, -25.879, -9.581, 0.22", "-7.17835, -26.2714, -9.68578, 1.18", "-8.20532, -26.846, -9.8585, 0.07", "-8.81577, -27.2036, -9.96008, 0.66", "-9.78947, -27.7933, -10.1035, 0.07", "-10.6146, -28.3249, -10.1918, 1.76", "-11.056, -28.618, -10.2202, 1.54", "-12.3315, -29.4801, -10.2403, 0.07", "-12.9876, -29.896, -10.2062, 0.95", "-13.5779, -30.2378, -10.1524, 0.95", "-14.367, -30.6502, -10.0568, 0.07", "-15.2725, -31.0926, -9.9514, 0.07", "-15.9717, -31.4264, -9.8751, 0.07", "-16.7722, -31.7915, -9.77744, 1.69", "-17.9813, -32.3674, -9.69048, 0.07", "-18.9044, -32.8294, -9.65398, 0.07", "-19.8958, -33.3359, -9.6412, 1.84", "-20.5577, -33.6766, -9.65906, 1.4", "-21.2428, -34.0417, -9.69721, 0.59", "-22.1885, -34.5915, -9.82222, 0.07", "-22.5616, -34.8169, -9.88932, 0.37", "-23.0971, -35.1389, -9.99713, 0.07", "-23.9594, -35.6066, -10.1397, 1.32", "-24.2929, -35.7743, -10.173, 1.32", "-26.0739, -36.6204, -10.2524, 0.07", "-26.7549, -36.9303, -10.2422, 1.18", "-27.0163, -37.0494, -10.2308, 1.18", "-28.295, -37.695, -10.1452, 0.07", "-29.1338, -38.1542, -10.0506, 0.88", "-29.9946, -38.6266, -9.94196, 0.07", "-30.9504, -39.1519, -9.79532, 1.47", "-31.3307, -39.3699, -9.74612, 1.98", "-32.7109, -40.2204, -9.64366, 0.15", "-33.2129, -40.5525, -9.63705, 0.37", "-33.9325, -41.028, -9.65586, 0.07", "-34.5293, -41.4249, -9.70291, 0.81", "-34.8605, -41.643, -9.74409, 1.25", "-35.8402, -42.2579, -9.89611, 0.15", "-36.8601, -42.86, -10.1133, 0.15", "-37.4553, -43.2213, -10.2624, 0.88", "-38.4266, -43.8813, -10.5675, 0.07", "-38.922, -44.241, -10.7433, 1.25", "-39.3068, -44.529, -10.8929, 1.25", "-40.4573, -45.4147, -11.4072, 0.07", "-40.8372, -45.714, -11.5902, 0.73", "-41.9614, -46.6232, -12.113, 0.07", "-42.4102, -46.9861, -12.3095, 0.07", "-43.1414, -47.5728, -12.616, 1.32", "-44.4802, -48.6139, -13.1384, 0.29", "-44.8855, -48.8895, -13.2725, 0.07", "-45.3162, -49.1355, -13.386, 0.59", "-46.0539, -49.4819, -13.508, 0.07", "-46.3771, -49.6202, -13.545, 0.07", "-47.1002, -49.9331, -13.5673, 1.18", "-48.1128, -50.3754, -13.5651, 0.15", "-49.0302, -50.7887, -13.5589, 0.15", "-49.6701, -51.0759, -13.5408, 0.66", "-50.4716, -51.4469, -13.4986, 0.07", "-51.744, -52.0468, -13.3951, 1.62", "-53.4416, -52.8404, -13.2019, 0.07", "-54.3315, -53.2408, -13.0847, 0.07", "-55.171, -53.5815, -12.9984, 0.07", "-55.9088, -53.8386, -12.934, 0.07", "-57.1289, -54.1717, -12.8412, 1.47", "-57.6476, -54.279, -12.81, 1.47", "-58.7342, -54.4966, -12.8556, 0.07", "-59.7928, -54.744, -13.0195, 0.07", "-60.8736, -55.0516, -13.3078, 0.07", "-61.9357, -55.416, -13.7045, 0.07", "-62.6712, -55.7183, -14.0361, 1.1", "-64.5672, -56.6046, -14.941, 0.44", "-65.2865, -56.9786, -15.298, 1.32", "-66.4595, -57.641, -15.8679, 1.32", "-67.826, -58.4472, -16.4962, 0.22", "-68.6075, -58.9052, -16.8095, 0.22", "-69.2967, -59.2975, -17.0269, 0.88", "-70.2829, -59.8484, -17.2423, 0.07", "-71.2084, -60.3785, -17.4062, 1.25", "-72.3143, -61.0502, -17.5551, 0.07", "-72.7909, -61.3475, -17.6023, 0.66", "-73.6064, -61.8672, -17.6714, 0.07", "-74.3876, -62.3847, -17.7342, 0.07", "-75.1084, -62.8737, -17.781, 1.47", "-76.4334, -63.7933, -17.8687, 0.07", "-76.8419, -64.0823, -17.899, 0.07", "-77.4104, -64.4772, -17.9203, 0.59", "-77.8708, -64.7761, -17.9185, 0.07", "-78.0516, -64.8834, -17.9165, 0.07", "-78.6397, -65.2082, -17.9219, 1.03", "-79.4107, -65.6272, -17.9161, 0.07", "-80.0176, -65.9707, -17.9192, 0.07", "-80.6424, -66.3259, -17.8904, 0.07", "-81.3328, -66.7169, -17.8118, 0.07", "-81.9554, -67.0665, -17.7093, 0.73", "-82.3464, -67.29, -17.6299, 0.88", "-82.6668, -67.4806, -17.5495, 0.88", "-83.7083, -68.1382, -17.2353, 0.07", "-84.0527, -68.3604, -17.1146, 0.07", "-84.3894, -68.579, -16.9901, 0.44", "-85.0957, -69.0137, -16.7802, 0.07", "-85.5017, -69.2301, -16.6842, 0.07", "-86.01, -69.4815, -16.6264, 1.25", "-86.8051, -69.8833, -16.6156, 0.07", "-87.331, -70.1736, -16.649, 0.07", "-87.9544, -70.5302, -16.7074, 0.95", "-88.4714, -70.8352, -16.7764, 0.95", "-89.4664, -71.4539, -16.9373, 0.15", "-89.9536, -71.7863, -17.0116, 0.81", "-91.0015, -72.5753, -17.1339, 0.07", "-91.6022, -73.0825, -17.1702, 0.44", "-92.3177, -73.754, -17.156, 0.07", "-92.6451, -74.0899, -17.1258, 0.07", "-93.276, -74.7871, -17.0166, 1.4", "-93.8917, -75.544, -16.8572, 0.07", "-94.28, -76.0618, -16.7031, 0.07", "-94.4463, -76.2958, -16.6261, 0.44", "-94.9587, -77.0369, -16.348, 0.07", "-95.572, -77.9358, -16.0077, 1.47", "-96.2345, -78.9227, -15.6255, 0.37", "-96.9789, -80.068, -15.1404, 0.07", "-97.0858, -80.2375, -15.0774, 0.07", "-97.4534, -80.852, -14.8714, 0.59", "-97.8178, -81.4989, -14.6705, 0.07", "-98.0769, -81.9823, -14.5336, 0.07", "-98.5118, -82.8658, -14.3333, 1.18", "-99.1314, -84.2919, -14.0449, 0.07", "-99.5292, -85.2394, -13.8247, 0.07", "-99.6834, -85.6083, -13.7282, 0.81", "-100.0, -86.3698, -13.499, 0.07", "-100.263, -86.9794, -13.3161, 0.07", "-100.56, -87.6693, -13.1021, 0.88", "-100.863, -88.4068, -12.8302, 0.07", "-100.982, -88.7187, -12.7333, 0.07", "-101.142, -89.185, -12.6305, 0.73", "-101.468, -90.2781, -12.5047, 0.07", "-101.658, -90.9151, -12.5018, 0.07", "-101.76, -91.2536, -12.51, 0.07", "-101.948, -91.851, -12.5498, 0.95", "-102.22, -92.6945, -12.6062, 0.07", "-102.463, -93.4019, -12.6231, 0.07", "-102.764, -94.2289, -12.6041, 0.07", "-103.146, -95.2406, -12.5533, 0.07", "-103.404, -95.8899, -12.5108, 1.25", "-104.074, -97.5244, -12.3578, 2.06", "-104.621, -98.8093, -12.1901, 0.15", "-104.757, -99.1261, -12.1457, 0.15", "-105.007, -99.7158, -12.0578, 0.44", "-105.3, -100.381, -11.9693, 0.07", "-105.465, -100.751, -11.9012, 0.07", "-105.729, -101.333, -11.7696, 0.59", "-105.829, -101.615, -11.7203, 0.59", "-105.988, -102.394, -11.6047, 0.07", "-106.053, -103.045, -11.52, 0.07", "-106.091, -103.61, -11.4621, 0.07", "-106.14, -104.579, -11.3886, 2.06", "-106.221, -106.087, -11.3085, 0.15", "-106.325, -107.491, -11.2369, 0.07", "-106.401, -108.079, -11.2452, 1.18", "-106.602, -109.256, -11.307, 0.07", "-106.72, -109.782, -11.3432, 0.07", "-106.927, -110.521, -11.4102, 0.07", "-107.19, -111.288, -11.48, 1.32", "-107.868, -113.123, -11.6677, 0.07", "-108.137, -113.917, -11.7598, 0.07", "-108.296, -114.486, -11.8441, 0.81", "-108.536, -115.378, -12.0033, 0.07", "-108.635, -115.736, -12.0711, 0.07", "-108.813, -116.34, -12.1927, 0.88", "-109.103, -117.328, -12.355, 0.07", "-109.344, -118.152, -12.5, 0.07", "-109.641, -119.272, -12.6896, 1.69", "-109.973, -120.708, -12.9103, 0.07", "-110.265, -121.976, -13.0991, 0.07", "-110.499, -123.013, -13.2331, 1.18", "-110.7, -124.022, -13.336, 0.07", "-110.807, -124.645, -13.3811, 0.07", "-110.848, -125.142, -13.4208, 0.66" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.32993, -19.4653, -0.326403, 1.1", "-2.74935, -20.113, -1.91268, 1.1", "-3.11376, -20.618, -3.05754, 1.03", "-3.51293, -21.0859, -4.11695, 1.03", "-4.04867, -21.6326, -5.36659, 1.4", "-4.43185, -21.9981, -6.18235, 1.62", "-4.88731, -22.3781, -7.05288, 1.84", "-5.40672, -22.818, -7.95276, 0.66", "-5.84258, -23.1305, -8.58148, 0.66", "-6.19399, -23.3305, -9.00534, 0.66", "-6.58947, -23.5129, -9.39929, 0.66", "-7.3332, -23.7654, -10.0397, 2.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.32993, -19.4653, -0.326403, 0.51", "-3.36121, -21.072, -0.335087, 0.51", "-4.23234, -22.2975, -0.299912, 1.18", "-5.10197, -23.3842, -0.275808, 1.76", "-6.1674, -24.6366, -0.293189, 1.03", "-6.91427, -25.4991, -0.349918, 1.03", "-7.47869, -26.1424, -0.420753, 1.25", "-8.33574, -27.0534, -0.603354, 0.59", "-9.08615, -27.8413, -0.80012, 0.95", "-10.2024, -29.0572, -1.13319, 1.18", "-11.4651, -30.4988, -1.5621, 1.25", "-12.4944, -31.7125, -1.94993, 1.4", "-13.4049, -32.8324, -2.33584, 1.69", "-13.7129, -33.2324, -2.47691, 1.69", "-14.4321, -34.214, -2.79272, 0.88", "-15.0448, -35.0673, -3.04838, 0.88", "-15.7012, -35.9567, -3.30186, 0.59", "-16.2723, -36.6858, -3.52089, 0.95", "-16.8328, -37.3374, -3.72976, 1.69", "-17.2192, -37.7375, -3.87131, 1.84", "-18.3435, -38.699, -4.27376, 0.51", "-19.2689, -39.426, -4.59648, 0.15", "-20.1097, -40.0621, -4.88467, 0.95", "-20.7689, -40.5427, -5.09985, 1.69", "-21.4428, -41.0051, -5.29264, 1.62", "-22.6345, -41.7747, -5.58758, 0.22", "-23.7628, -42.4863, -5.80713, 0.44", "-24.5311, -42.9964, -5.92676, 0.88", "-25.2465, -43.4986, -6.00526, 1.03", "-26.2151, -44.221, -6.08596, 0.15", "-26.9574, -44.827, -6.13047, 0.29", "-27.7603, -45.5402, -6.17702, 1.32", "-28.1932, -45.936, -6.21045, 1.69", "-29.2878, -46.9912, -6.31983, 0.95", "-30.3049, -48.0149, -6.44195, 0.51", "-31.1441, -48.8819, -6.56468, 0.15", "-32.3209, -50.0981, -6.74685, 1.54", "-33.054, -50.8263, -6.87126, 1.54", "-33.7357, -51.4571, -6.99385, 1.32", "-34.8561, -52.3667, -7.21096, 0.07", "-35.5488, -52.8588, -7.34867, 0.51", "-36.0977, -53.1977, -7.45713, 0.22", "-36.9557, -53.6706, -7.61889, 0.66", "-37.9914, -54.1978, -7.8199, 0.15", "-38.8642, -54.6089, -7.99881, 0.15", "-39.2295, -54.7647, -8.08224, 0.15", "-40.1269, -55.1526, -8.28918, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.631279, -23.1497, 1.19915, 0.81", "0.068571, -24.242, 1.47872, 0.81", "1.08132, -25.8398, 1.9123, 0.29", "2.06951, -27.412, 2.38683, 0.15", "2.70841, -28.4239, 2.73323, 0.88", "3.35782, -29.4401, 3.10713, 0.37", "4.08853, -30.5872, 3.53878, 0.15", "4.60684, -31.3857, 3.86074, 1.1", "5.44074, -32.6189, 4.40112, 1.25", "6.06223, -33.5186, 4.81007, 1.03", "6.98016, -34.8623, 5.43105, 0.15", "7.32726, -35.3868, 5.67479, 0.15", "7.89728, -36.2586, 6.05711, 0.73", "8.15279, -36.6596, 6.21322, 0.73", "8.58745, -37.368, 6.44247, 0.51", "9.52303, -38.9906, 6.86482, 0.22", "10.1347, -40.1242, 7.11623, 1.32", "10.7958, -41.4069, 7.35384, 0.73", "11.6517, -43.1487, 7.60218, 0.07", "12.0766, -44.0121, 7.70044, 0.15", "12.6846, -45.2144, 7.80007, 1.1", "13.0828, -45.998, 7.8304, 1.18", "13.604, -47.069, 7.85657, 0.44", "13.9571, -47.8541, 7.88066, 0.07", "14.1833, -48.4119, 7.92062, 0.73", "14.4863, -49.207, 8.03281, 0.44", "14.7577, -49.9678, 8.19757, 0.44", "14.9595, -50.6404, 8.37645, 0.37", "15.1542, -51.3983, 8.60905, 1.03", "15.3685, -52.2405, 8.87684, 1.25", "15.5054, -52.7539, 9.04927, 1.54", "15.8124, -53.813, 9.42991, 0.51", "16.1299, -54.7788, 9.78723, 0.44", "16.6847, -56.3172, 10.3979, 0.44", "17.1037, -57.4074, 10.8466, 0.59", "17.4156, -58.1706, 11.1681, 1.54", "17.705, -58.8322, 11.4594, 1.76", "18.0505, -59.5509, 11.7969, 1.25", "18.472, -60.3334, 12.1769, 1.47", "19.1423, -61.5023, 12.7259, 0.66", "19.5958, -62.2692, 13.0552, 0.73", "19.9648, -62.8564, 13.2811, 1.1", "20.5921, -63.8171, 13.6127, 1.69", "21.1628, -64.6688, 13.8704, 0.88", "21.8479, -65.6745, 14.1276, 0.22", "22.3744, -66.4582, 14.2917, 0.81", "22.9639, -67.3363, 14.449, 0.37", "23.6087, -68.3073, 14.601, 0.37", "24.0907, -69.0482, 14.6993, 0.66", "24.3122, -69.3993, 14.7418, 0.95", "24.6453, -69.9294, 14.7991, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.631279, -23.1497, 1.19915, 0.59", "-0.781939, -24.2303, 1.6064, 0.59", "-0.945239, -25.123, 1.92904, 0.59", "-1.04793, -25.737, 2.12587, 0.59", "-1.16555, -26.5073, 2.37964, 0.66", "-1.28988, -27.343, 2.66974, 0.95", "-1.45011, -28.447, 3.05395, 1.25", "-1.5459, -28.967, 3.21886, 0.95", "-1.78749, -30.115, 3.5506, 0.73", "-1.94979, -30.8723, 3.77706, 1.32", "-2.0916, -31.6067, 4.02041, 1.62", "-2.20424, -32.197, 4.22927, 1.62", "-2.42309, -33.2228, 4.61093, 0.59", "-2.64249, -34.1406, 4.95348, 0.59", "-2.89316, -35.1246, 5.34023, 0.81", "-3.16496, -36.1706, 5.74756, 1.1", "-3.28738, -36.6248, 5.92707, 2.06", "-3.58158, -37.7118, 6.36876, 1.03", "-3.83403, -38.7114, 6.76086, 0.51", "-4.03487, -39.5036, 7.0306, 1.1", "-4.29453, -40.5323, 7.33653, 0.66", "-4.56197, -41.6257, 7.64549, 2.13", "-4.77041, -42.4867, 7.91738, 2.13", "-4.92933, -43.1725, 8.13505, 2.13", "-5.06844, -43.7788, 8.32722, 2.13", "-5.40033, -45.1737, 8.75664, 1.76", "-5.65732, -46.3872, 9.16013, 2.42", "-5.91528, -47.6903, 9.66159, 2.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.0049, 5.85366, -2.36274, 1.03", "-14.683, 6.18285, -2.95379, 1.03", "-14.3851, 6.51704, -3.51723, 0.29", "-14.0766, 6.91109, -4.13788, 1.18", "-13.8685, 7.24057, -4.5939, 1.47", "-13.4765, 8.00521, -5.58135, 1.18", "-13.3346, 8.34617, -6.00632, 1.4", "-13.248, 8.70399, -6.42783, 1.4", "-13.22, 9.14348, -6.98293, 0.73", "-13.3042, 9.65842, -7.64359, 0.51", "-13.4017, 9.98033, -8.0531, 0.15", "-13.5609, 10.3643, -8.54168, 1.25", "-13.7611, 10.8659, -9.2336, 1.47", "-13.9693, 11.4829, -10.218, 1.18", "-14.0746, 11.8923, -10.9271, 0.51", "-14.1114, 12.2548, -11.579, 0.07", "-14.074, 12.7371, -12.4358, 1.25", "-13.9271, 13.3279, -13.4748, 0.37", "-13.7084, 13.7898, -14.325, 1.03", "-13.5746, 13.9799, -14.7055, 1.18", "-13.315, 14.2048, -15.275, 1.03", "-12.7959, 14.4865, -16.2773, 0.81", "-12.4416, 14.6013, -16.9283, 0.29", "-12.0039, 14.6715, -17.7454, 1.25", "-11.6453, 14.7049, -18.4597, 1.32", "-11.2437, 14.7229, -19.5218, 1.32", "-11.0668, 14.7307, -20.2464, 1.32", "-10.9505, 14.7365, -20.9077, 1.32", "-10.7965, 14.7366, -22.0792, 1.4", "-10.7563, 14.7253, -22.6493, 1.25", "-10.7649, 14.6944, -24.1247, 1.25", "-10.8195, 14.69, -25.2569, 1.25", "-10.8383, 14.7127, -26.2425, 1.25", "-10.7931, 14.7464, -27.1859, 1.25", "-10.7343, 14.8047, -27.9612, 1.25", "-10.6098, 14.9169, -28.9174, 0.59", "-10.5457, 15.0041, -29.3021, 0.95", "-10.4592, 15.3097, -30.1573, 0.66", "-10.394, 15.6527, -30.8975, 1.69", "-10.2332, 16.1845, -32.0071, 0.15", "-10.1779, 16.2997, -32.2552, 0.15", "-9.99707, 16.5494, -32.8771, 1.4", "-9.43323, 17.159, -34.5669, 0.29", "-9.1886, 17.3479, -35.1687, 1.4", "-8.71273, 17.6209, -36.1368, 0.51", "-8.35943, 17.7593, -36.6736, 0.95", "-7.75016, 17.9555, -37.4615, 0.07", "-7.29324, 18.0809, -37.995, 0.73", "-6.71699, 18.2375, -38.6186, 0.07", "-6.45495, 18.3192, -38.9515, 1.1", "-5.94964, 18.5302, -39.7457, 0.07", "-5.71745, 18.6417, -40.2143, 0.73", "-5.25854, 18.8781, -41.4123, 0.59", "-5.19947, 18.9101, -41.6193, 1.4", "-4.92686, 19.0704, -42.8078, 1.4", "-4.76327, 19.1849, -43.6348, 1.4", "-4.69802, 19.248, -44.0073, 1.03", "-4.57602, 19.3689, -44.5966, 1.03", "-4.39034, 19.5448, -45.2887, 0.66", "-4.07885, 19.84, -46.2282, 0.95", "-3.94274, 19.9762, -46.6303, 1.25", "-3.45097, 20.5709, -48.2255, 0.07", "-3.18417, 20.9862, -49.2174, 1.1", "-3.01697, 21.3421, -49.9748, 0.07", "-2.91202, 21.6487, -50.5799, 1.18", "-2.71927, 22.603, -52.3784, 1.18", "-2.68852, 22.8577, -52.8608, 1.25", "-2.66783, 23.2666, -53.5908, 0.37", "-2.6661, 23.4572, -53.9412, 0.37", "-2.70049, 23.9142, -54.907, 1.47", "-2.74847, 24.2998, -55.7917, 0.81", "-2.7973, 24.7413, -56.8031, 0.07", "-2.81845, 24.9877, -57.5787, 0.51", "-2.83708, 25.1759, -58.3793, 0.15", "-2.84564, 25.4277, -59.767, 0.73", "-2.84032, 25.488, -60.1717, 0.73", "-2.8361, 25.5864, -60.8641, 1.25", "-2.92441, 25.8563, -62.4887, 0.07", "-2.95233, 25.8983, -62.7168, 0.44", "-3.08231, 26.0755, -63.4404, 0.07", "-3.15965, 26.1824, -63.8047, 1.25", "-3.41366, 26.5246, -64.8303, 0.29", "-3.61709, 26.8156, -65.6307, 1.4", "-4.13182, 27.6255, -67.6648, 0.07", "-4.27109, 27.8869, -68.3055, 0.59", "-4.48466, 28.3918, -69.5682, 0.15", "-4.6153, 28.8164, -70.6319, 2.13", "-4.72616, 29.4628, -72.191, 0.66", "-4.74181, 29.7174, -72.7697, 0.51", "-4.72991, 30.1215, -73.573, 1.4", "-4.70666, 30.718, -74.766, 0.22", "-4.70797, 30.8647, -75.0365, 0.22", "-4.74376, 31.2865, -75.8026, 1.1", "-4.79561, 31.6029, -76.329, 0.59", "-4.83571, 31.8452, -76.7624, 1.1", "-4.86576, 32.5336, -78.1819, 0.37", "-4.84205, 32.6596, -78.4528, 0.59", "-4.68726, 32.9766, -79.2304, 0.07", "-4.48534, 33.2017, -79.8614, 0.73", "-4.00112, 33.6243, -81.1613, 1.32", "-3.42079, 33.9975, -82.4944, 0.07", "-3.07606, 34.1451, -83.1047, 0.81", "-2.74894, 34.2464, -83.6259, 0.37", "-2.47134, 34.2947, -83.9954, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.0049, 5.85366, -2.36274, 2.42", "-15.5889, 6.14229, -2.5184, 2.42", "-16.96, 6.81997, -2.88389, 1.47" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-21.2649, 12.4616, 13.1073, 0.88", "-21.3204, 14.2552, 13.265, 0.88", "-21.3215, 15.3832, 13.3801, 0.66", "-21.3241, 15.9042, 13.434, 0.66", "-21.3323, 16.8416, 13.5077, 0.66", "-21.3401, 17.6685, 13.5381, 0.59", "-21.3449, 18.2582, 13.5381, 0.59", "-21.3276, 19.0333, 13.5014, 0.81", "-21.3105, 19.6832, 13.4589, 1.32", "-21.2837, 21.0, 13.3255, 0.29", "-21.2755, 21.9786, 13.1732, 0.29", "-21.2905, 22.5204, 13.0597, 0.29", "-21.3168, 22.9852, 12.9411, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-21.2649, 12.4616, 13.1073, 0.95", "-24.0137, 13.1122, 13.527, 0.95", "-25.4601, 13.4926, 13.7754, 0.95", "-26.7309, 13.8647, 14.058, 0.95", "-27.4067, 14.0768, 14.2422, 1.03", "-28.3708, 14.3782, 14.5456, 0.88", "-30.0219, 14.8826, 15.0873, 0.51", "-31.4683, 15.3395, 15.6119, 1.03", "-32.5408, 15.6685, 15.9874, 1.32", "-33.6652, 16.0122, 16.3933, 1.32", "-35.3367, 16.5386, 16.9926, 1.4", "-36.1841, 16.8044, 17.308, 0.73", "-37.1659, 17.0914, 17.6675, 0.73", "-37.856, 17.2773, 17.8738, 0.88", "-38.7071, 17.4918, 18.0606, 0.44", "-40.3997, 17.9405, 18.3238, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "107.685, 238.996, -78.6142, 0.37", "107.527, 239.649, -79.1292, 0.37", "107.421, 240.18, -79.5349, 0.81", "107.309, 240.706, -79.918, 0.29", "107.183, 241.296, -80.3253, 0.07", "107.092, 241.749, -80.6262, 0.88", "107.006, 242.255, -80.9486, 0.07", "106.924, 242.84, -81.2907, 0.07", "106.869, 243.289, -81.526, 0.07", "106.837, 243.589, -81.6776, 1.18", "106.769, 244.276, -82.0626, 0.15", "106.714, 244.758, -82.3285, 0.59" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "107.685, 238.996, -78.6142, 0.15", "107.939, 239.566, -78.7523, 0.15", "108.276, 240.399, -78.9648, 0.15", "108.534, 241.121, -79.1794, 0.15", "108.637, 241.437, -79.2732, 1.18", "108.91, 242.367, -79.5314, 0.07", "109.129, 243.211, -79.7614, 0.07", "109.278, 243.97, -79.9624, 1.25", "109.464, 245.082, -80.2371, 0.07", "109.569, 245.758, -80.3738, 0.07", "109.68, 246.562, -80.5235, 0.73", "109.786, 247.249, -80.6442, 0.07", "109.901, 247.849, -80.7463, 0.07", "110.189, 249.148, -80.9419, 2.06", "110.541, 250.535, -81.1418, 0.07", "110.778, 251.283, -81.261, 0.88", "111.17, 252.311, -81.4298, 0.07", "111.477, 253.039, -81.5532, 0.07", "111.647, 253.424, -81.6259, 0.07", "112.005, 254.203, -81.8, 1.32", "112.394, 255.026, -81.9999, 0.22", "112.693, 255.731, -82.1804, 0.22", "112.927, 256.439, -82.3744, 0.07", "113.161, 257.385, -82.6662, 0.81", "113.294, 258.178, -82.9462, 0.81", "113.357, 258.915, -83.2156, 1.25", "113.392, 259.991, -83.6034, 0.07", "113.4, 260.717, -83.8598, 0.07", "113.401, 261.535, -84.1253, 0.95", "113.395, 262.824, -84.5116, 0.07", "113.394, 263.693, -84.7451, 1.54", "113.43, 264.979, -85.0713, 0.07", "113.521, 266.32, -85.3642, 0.07", "113.601, 267.059, -85.5231, 0.07", "113.728, 267.965, -85.7347, 0.95", "113.795, 268.437, -85.8563, 0.95", "113.93, 269.492, -86.1677, 0.07", "113.986, 270.216, -86.3885, 0.07", "114.029, 271.027, -86.6285, 0.88", "114.062, 272.503, -87.0426, 0.07", "114.066, 273.357, -87.2463, 0.95", "114.074, 274.067, -87.3864, 0.07", "114.136, 275.611, -87.5769, 0.07", "114.282, 276.725, -87.6252, 1.18", "114.448, 277.401, -87.5876, 1.18", "114.825, 278.495, -87.4366, 0.07", "115.119, 279.227, -87.3085, 0.07", "115.625, 280.497, -87.064, 0.07", "116.156, 281.979, -86.7638, 0.07", "116.411, 282.926, -86.5765, 0.07", "116.573, 283.747, -86.4268, 0.07", "116.75, 285.179, -86.2103, 0.07", "116.841, 286.799, -86.0242, 0.07", "116.851, 288.337, -85.9048, 0.07", "116.82, 290.144, -85.8149, 0.07", "116.829, 290.829, -85.8063, 0.22", "116.87, 291.788, -85.8045, 0.07", "116.999, 293.303, -85.829, 0.07", "117.126, 294.143, -85.8664, 0.37", "117.355, 295.239, -85.9567, 0.07", "117.689, 296.496, -86.1291, 0.88" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-7.3332, -23.7654, -10.0397, 1.1", "-7.94321, -24.9357, -10.8413, 1.1", "-8.50574, -26.0713, -11.5139, 0.81", "-8.82618, -26.7748, -11.882, 1.1", "-9.04817, -27.3381, -12.1248, 1.4", "-9.43137, -28.3702, -12.5441, 0.07", "-9.64397, -28.981, -12.7859, 0.15", "-9.91797, -29.9464, -13.1402, 1.91", "-10.088, -30.8166, -13.4708, 1.62", "-10.3083, -32.5322, -14.1982, 0.22", "-10.4223, -33.8409, -14.8244, 2.28", "-10.4671, -34.7089, -15.3197, 1.62", "-10.5027, -36.1937, -16.2849, 0.29", "-10.5388, -37.175, -16.9875, 1.03", "-10.6245, -38.1557, -17.7638, 0.59", "-10.7472, -38.8431, -18.362, 0.15", "-11.087, -39.8278, -19.242, 1.69", "-11.3937, -40.4203, -19.7758, 2.06", "-12.2019, -41.5686, -20.7617, 0.29", "-12.7395, -42.2127, -21.277, 0.29", "-13.516, -43.1029, -21.8605, 2.06", "-14.8188, -44.6429, -22.6402, 0.44", "-15.2124, -45.1283, -22.8294, 0.44", "-15.7552, -45.8563, -23.0478, 1.84", "-16.296, -46.6946, -23.2263, 1.62", "-16.9813, -47.9174, -23.4045, 0.22", "-17.6226, -49.1304, -23.5017, 0.22", "-18.1823, -50.2251, -23.5323, 1.98", "-18.8938, -51.5764, -23.5604, 0.66", "-19.4577, -52.5873, -23.604, 0.66", "-19.81, -53.1418, -23.6389, 0.22", "-20.4908, -54.0225, -23.7343, 1.98", "-20.9333, -54.4959, -23.7976, 1.98", "-21.5303, -54.9979, -23.8898, 1.47", "-22.8181, -55.8561, -24.1051, 0.15", "-23.8243, -56.4227, -24.2765, 0.15", "-24.9136, -57.0105, -24.4693, 2.06", "-25.6352, -57.3909, -24.6078, 2.06", "-26.9266, -58.0688, -24.8632, 0.44", "-27.767, -58.5359, -25.0445, 1.03", "-28.7946, -59.1464, -25.2736, 0.07", "-29.6099, -59.6892, -25.4817, 0.07", "-30.7411, -60.5486, -25.8008, 1.76", "-31.0113, -60.7923, -25.8828, 1.76", "-32.0544, -61.9222, -26.2437, 0.22", "-32.3177, -62.2321, -26.3495, 0.22", "-32.9207, -62.9731, -26.6279, 1.4", "-33.3268, -63.4566, -26.835, 1.84", "-34.1472, -64.4107, -27.2508, 0.37", "-34.5571, -64.8462, -27.4598, 0.37", "-35.2017, -65.4785, -27.7864, 0.07", "-35.8935, -66.1102, -28.127, 1.25", "-37.0003, -67.04, -28.6529, 0.29", "-37.7859, -67.6545, -29.0154, 1.91", "-38.3721, -68.1018, -29.3027, 1.25", "-39.2353, -68.7927, -29.7328, 0.15", "-40.1447, -69.596, -30.1996, 0.15", "-40.5935, -70.0378, -30.4283, 0.88", "-40.8716, -70.3805, -30.5932, 1.18", "-41.6856, -71.6547, -31.162, 0.22", "-42.0132, -72.3283, -31.4206, 0.22", "-42.1303, -72.6833, -31.543, 1.18", "-42.2713, -73.3441, -31.7582, 1.18", "-42.4667, -74.6815, -32.1566, 0.29", "-42.5464, -75.4793, -32.3648, 0.29", "-42.5809, -76.2007, -32.5086, 1.03", "-42.6114, -77.2738, -32.726, 1.84", "-42.6304, -78.3519, -32.9387, 0.44", "-42.6266, -79.0646, -33.0669, 0.44", "-42.6266, -79.5321, -33.1248, 0.07", "-42.6113, -80.8359, -33.2888, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.3332, -23.7654, -10.0397, 0.95", "-8.44405, -23.9857, -9.25089, 0.95", "-9.32053, -24.1853, -8.76818, 0.22", "-9.71147, -24.3023, -8.63176, 0.37", "-10.1619, -24.4726, -8.53258, 0.07", "-10.7889, -24.7468, -8.44296, 0.07", "-11.1771, -24.9346, -8.40587, 0.95", "-11.4648, -25.0925, -8.42106, 1.03", "-12.2446, -25.5474, -8.50473, 0.07", "-12.8595, -25.9304, -8.56675, 0.07", "-13.5161, -26.3621, -8.62409, 1.84", "-14.3409, -26.9229, -8.7005, 0.07", "-14.7299, -27.1833, -8.73382, 0.07", "-14.897, -27.2958, -8.74786, 0.81", "-15.2972, -27.5657, -8.77683, 0.07", "-15.7676, -27.87, -8.82628, 0.07", "-16.35, -28.2266, -8.9089, 0.51", "-16.6611, -28.409, -8.95929, 0.07", "-17.001, -28.602, -9.01703, 0.07", "-17.5523, -28.9013, -9.10912, 1.4", "-18.4101, -29.3646, -9.25813, 0.07", "-19.1466, -29.7675, -9.40367, 0.07", "-19.8969, -30.1812, -9.56565, 1.69", "-20.8576, -30.698, -9.81677, 0.07", "-21.4137, -30.9861, -9.99126, 0.07", "-21.6856, -31.1297, -10.0912, 1.1", "-22.3368, -31.4808, -10.3719, 0.07", "-22.8342, -31.7473, -10.6045, 0.07", "-23.4456, -32.0711, -10.9008, 0.88", "-24.1297, -32.4315, -11.246, 0.07", "-24.7855, -32.7707, -11.5824, 1.84", "-25.7061, -33.2204, -12.023, 0.07", "-26.3051, -33.497, -12.2963, 0.07", "-26.7157, -33.6755, -12.4792, 0.59", "-27.4287, -33.988, -12.7797, 0.07", "-27.9311, -34.2108, -12.9841, 0.07", "-28.4789, -34.4406, -13.1953, 1.54", "-29.4588, -34.8095, -13.539, 0.07", "-30.0637, -35.0107, -13.7464, 0.07", "-30.7408, -35.2198, -13.9511, 0.07", "-31.2421, -35.3782, -14.0719, 0.07", "-31.836, -35.5592, -14.1816, 1.18", "-32.4688, -35.7385, -14.2792, 0.07", "-33.0352, -35.9026, -14.3435, 0.07", "-33.9233, -36.2077, -14.3786, 0.07", "-34.5938, -36.4886, -14.3692, 1.18", "-35.3644, -36.875, -14.3341, 0.07", "-35.7615, -37.0996, -14.3058, 0.07", "-36.7057, -37.6702, -14.216, 0.07", "-38.2148, -38.595, -14.0452, 3.01", "-39.8917, -39.6183, -13.8421, 0.07", "-40.7115, -40.1137, -13.7515, 0.07", "-41.1287, -40.3666, -13.7144, 0.07", "-41.5819, -40.6288, -13.686, 0.73", "-42.2507, -40.9741, -13.6895, 0.07", "-42.5637, -41.1036, -13.7381, 0.81", "-43.3727, -41.366, -13.9385, 0.07", "-43.831, -41.4963, -14.081, 0.29", "-44.278, -41.6207, -14.2417, 0.07", "-44.8246, -41.7706, -14.4512, 0.95", "-45.6788, -42.0023, -14.8396, 0.07", "-46.172, -42.1408, -15.0869, 0.07", "-46.4517, -42.2274, -15.2216, 0.81", "-47.1704, -42.453, -15.5651, 0.07", "-47.5706, -42.5784, -15.7571, 1.1", "-48.6729, -42.9381, -16.2868, 0.07", "-49.2299, -43.1502, -16.5707, 0.07", "-50.2209, -43.5593, -17.117, 2.13" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.91528, -47.6903, 9.66159, 0.88", "-5.06715, -49.3811, 10.4799, 0.88", "-4.66199, -50.2018, 10.8827, 0.81", "-3.93434, -51.6694, 11.6022, 0.66", "-3.2589, -53.0212, 12.2591, 0.51", "-2.69343, -54.138, 12.7605, 0.44", "-2.21952, -55.0622, 13.1276, 0.07", "-1.90901, -55.6891, 13.3337, 0.07", "-1.69211, -56.1362, 13.4434, 1.18", "-1.14676, -57.2054, 13.6343, 1.4", "-0.211868, -58.8842, 13.9091, 0.37", "0.643882, -60.3219, 14.1686, 0.44", "1.15966, -61.1913, 14.3377, 0.73", "1.35419, -61.5357, 14.4114, 0.95", "2.02445, -62.7991, 14.723, 0.51", "2.99432, -64.7482, 15.3032, 0.22", "3.76698, -66.4038, 15.9079, 0.29", "4.18068, -67.3507, 16.3007, 0.29", "4.48572, -68.1059, 16.6342, 0.29", "4.73947, -68.8259, 16.9376, 0.29", "4.92688, -69.4711, 17.1954, 0.44", "5.13627, -70.4009, 17.5659, 1.4", "5.35178, -71.4967, 18.0023, 0.07", "5.554, -72.4254, 18.3654, 0.51", "5.73716, -73.1372, 18.6367, 1.03" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.91528, -47.6903, 9.66159, 1.47", "-6.16843, -48.5761, 10.0936, 1.47", "-6.32119, -49.0491, 10.318, 1.4", "-6.53776, -49.6326, 10.5836, 0.66", "-6.74902, -50.1388, 10.7956, 0.73", "-6.8794, -50.4571, 10.927, 1.1", "-7.0624, -50.933, 11.1103, 1.32", "-7.29261, -51.5987, 11.3693, 0.51", "-7.42684, -51.9772, 11.5062, 1.32", "-7.67278, -52.5826, 11.7053, 0.73", "-7.90917, -53.1056, 11.8513, 0.29", "-8.19742, -53.7025, 11.9986, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.96, 6.81997, -2.88389, 0.95", "-17.4702, 6.64479, -2.91442, 0.95", "-18.2995, 6.31964, -3.03889, 1.1", "-18.8289, 6.10362, -3.15191, 0.88", "-20.0126, 5.65145, -3.44918, 0.37", "-20.8364, 5.37726, -3.6624, 0.44", "-21.8006, 5.08509, -3.90331, 0.66", "-22.6004, 4.83769, -4.12738, 0.73", "-23.274, 4.61252, -4.32584, 0.66", "-24.0884, 4.32156, -4.53553, 0.66", "-24.9488, 3.98307, -4.70662, 0.51", "-25.8365, 3.62016, -4.83233, 1.18", "-26.8712, 3.1526, -4.93329, 1.91", "-27.9265, 2.60658, -5.00894, 1.4", "-29.4355, 1.75099, -5.11542, 0.51", "-30.2218, 1.27873, -5.185, 0.95", "-30.7806, 0.93988, -5.25363, 1.18", "-31.622, 0.473186, -5.3835, 0.73", "-32.4157, 0.114382, -5.52851, 0.37", "-33.0089, -0.080018, -5.65788, 0.37", "-33.7128, -0.214666, -5.83579, 1.1", "-34.3193, -0.283278, -5.98913, 1.25", "-35.0065, -0.338804, -6.15067, 1.62", "-35.9912, -0.392414, -6.3532, 0.81", "-36.8379, -0.461067, -6.5079, 0.51", "-37.7361, -0.608806, -6.67726, 0.51", "-38.7019, -0.829555, -6.8739, 0.59", "-39.5016, -1.06536, -7.05834, 1.32", "-40.0219, -1.26411, -7.19288, 1.98", "-41.1016, -1.78098, -7.50994, 1.76", "-42.601, -2.66524, -7.9988, 0.22", "-43.3783, -3.21164, -8.26579, 0.22", "-43.8135, -3.56265, -8.42242, 0.95", "-44.332, -4.0215, -8.60768, 0.88", "-44.8273, -4.49904, -8.77531, 0.44", "-45.3328, -4.99897, -8.93401, 0.66", "-46.2947, -5.94573, -9.19591, 1.91", "-46.708, -6.32393, -9.30321, 1.98", "-47.8554, -7.2408, -9.58435, 0.22", "-48.7647, -7.86846, -9.79777, 0.22", "-49.3671, -8.259, -9.93205, 0.51", "-50.1754, -8.75974, -10.1046, 1.84", "-50.8015, -9.13252, -10.2291, 1.91", "-51.5754, -9.58524, -10.3417, 1.54", "-52.9207, -10.3499, -10.4705, 0.37", "-53.7966, -10.8467, -10.5302, 0.37", "-54.4336, -11.2318, -10.5536, 0.88", "-54.888, -11.5318, -10.5538, 1.1", "-55.9927, -12.3448, -10.504, 0.15", "-56.8607, -13.0128, -10.4435, 0.15", "-57.5611, -13.5493, -10.3855, 1.69", "-58.1023, -13.9445, -10.3425, 1.54", "-59.3224, -14.8168, -10.2784, 0.15", "-59.8364, -15.195, -10.2628, 0.15", "-60.6429, -15.8189, -10.2936, 0.15", "-61.3227, -16.3793, -10.3419, 1.32", "-61.8782, -16.8482, -10.4041, 1.32", "-62.3798, -17.2911, -10.4922, 1.47", "-62.7283, -17.6345, -10.5837, 1.47", "-63.5019, -18.5093, -10.8064, 0.15", "-63.8403, -18.9499, -10.913, 0.15", "-64.1247, -19.3258, -11.0115, 0.81", "-64.4948, -19.7912, -11.1364, 1.18", "-65.1502, -20.5371, -11.3291, 0.07", "-65.7655, -21.1857, -11.4802, 0.07", "-66.1082, -21.5232, -11.5441, 1.1", "-66.6631, -22.0431, -11.6495, 1.54", "-67.3797, -22.6688, -11.7861, 1.4", "-68.5993, -23.6697, -12.01, 0.44", "-69.2912, -24.2145, -12.1305, 0.07", "-70.4558, -25.1218, -12.3166, 0.07", "-71.2175, -25.7115, -12.4227, 1.18", "-72.058, -26.3583, -12.5244, 2.28", "-73.0938, -27.112, -12.6421, 0.59", "-74.0233, -27.7569, -12.7349, 0.29", "-74.8982, -28.35, -12.7809, 0.29", "-76.1431, -29.2156, -12.7808, 0.07", "-77.1286, -29.9225, -12.7357, 1.69", "-77.7108, -30.3575, -12.6925, 1.76", "-78.8879, -31.2538, -12.6027, 0.07", "-79.916, -32.0443, -12.5261, 0.15", "-80.4185, -32.437, -12.5013, 0.15", "-81.2661, -33.1153, -12.4875, 1.32", "-82.0646, -33.7483, -12.5114, 1.32", "-83.0195, -34.4823, -12.5803, 0.07", "-84.0142, -35.2102, -12.6966, 0.37", "-84.9351, -35.8244, -12.8139, 1.84", "-85.645, -36.2515, -12.8927, 1.84", "-86.7604, -36.8609, -12.994, 0.07", "-87.5979, -37.2818, -13.0693, 0.37", "-88.7584, -37.8126, -13.164, 0.07", "-90.0343, -38.3505, -13.264, 1.91", "-90.5501, -38.5593, -13.2992, 1.91", "-91.7032, -39.0379, -13.3814, 0.51", "-92.6541, -39.4384, -13.4633, 0.15", "-93.315, -39.7327, -13.5264, 0.15", "-93.8558, -39.9907, -13.5843, 0.44", "-94.7017, -40.4432, -13.7002, 0.07", "-95.4282, -40.8524, -13.8018, 1.03", "-95.8501, -41.1065, -13.8638, 1.25", "-96.7809, -41.7197, -14.0041, 0.59", "-97.6206, -42.3094, -14.147, 1.03", "-98.2101, -42.7175, -14.2528, 1.54", "-99.3249, -43.4866, -14.4734, 0.07", "-99.9304, -43.9103, -14.5911, 0.07", "-100.801, -44.5288, -14.764, 0.07", "-101.042, -44.6963, -14.8102, 1.1", "-101.685, -45.1298, -14.9313, 1.32", "-102.475, -45.6566, -15.0848, 0.07", "-103.126, -46.0872, -15.2128, 0.07", "-103.838, -46.5508, -15.3719, 1.32", "-104.382, -46.9205, -15.51, 1.32", "-105.583, -47.8288, -15.879, 0.07", "-105.859, -48.0627, -15.9681, 0.51", "-106.585, -48.7215, -16.1992, 0.07", "-106.991, -49.1264, -16.3368, 0.95", "-107.39, -49.5966, -16.4681, 1.32", "-108.247, -50.7395, -16.7338, 0.07", "-108.835, -51.6284, -16.8748, 1.62", "-109.175, -52.1652, -16.9348, 2.06", "-109.419, -52.5666, -16.9461, 1.91", "-110.024, -53.5408, -16.8921, 0.73", "-110.405, -54.1421, -16.8075, 0.07", "-110.925, -54.9651, -16.607, 0.73", "-111.571, -55.9513, -16.3405, 0.07", "-112.249, -56.9531, -16.0591, 1.54", "-112.993, -57.9845, -15.7505, 0.07", "-113.651, -58.8264, -15.4938, 0.07", "-114.3, -59.608, -15.2459, 0.07", "-114.82, -60.1762, -15.0604, 1.69", "-115.471, -60.8151, -14.8423, 1.91", "-116.506, -61.7419, -14.5449, 0.07", "-117.112, -62.2225, -14.3882, 0.37", "-118.089, -62.9101, -14.1762, 0.15", "-118.723, -63.3001, -14.0669, 0.15", "-119.579, -63.7843, -13.9278, 1.69", "-120.387, -64.1952, -13.8224, 0.88", "-121.459, -64.715, -13.7824, 0.07", "-121.988, -64.967, -13.8039, 0.44", "-123.006, -65.4403, -13.9401, 0.07", "-123.388, -65.6138, -14.013, 0.73", "-123.846, -65.8013, -14.1228, 1.03", "-125.041, -66.2474, -14.4247, 0.07", "-125.652, -66.481, -14.587, 0.81", "-126.347, -66.7767, -14.7856, 0.07", "-127.17, -67.1829, -15.03, 0.07", "-128.031, -67.6751, -15.2989, 1.84", "-128.291, -67.8481, -15.3832, 1.84", "-129.377, -68.6757, -15.7385, 0.07", "-129.991, -69.2262, -15.9444, 0.37", "-130.514, -69.7782, -16.1174, 0.07", "-131.12, -70.4597, -16.3219, 1.32", "-131.467, -70.8788, -16.4277, 1.03", "-132.043, -71.5733, -16.5851, 0.22", "-132.776, -72.4068, -16.76, 0.07", "-133.391, -73.0567, -16.8984, 0.81", "-134.08, -73.7727, -17.0485, 1.25", "-134.785, -74.488, -17.1995, 1.25", "-135.924, -75.6131, -17.4399, 0.07", "-137.048, -76.6881, -17.6679, 0.07", "-137.704, -77.2838, -17.7999, 1.69", "-138.27, -77.776, -17.9036, 1.69", "-139.108, -78.4827, -18.0357, 0.07", "-139.663, -78.8996, -18.1195, 0.95", "-140.335, -79.3707, -18.2071, 0.15", "-140.51, -79.4887, -18.2265, 0.51", "-141.205, -79.9529, -18.3199, 0.07", "-141.698, -80.2929, -18.423, 0.07", "-142.209, -80.6643, -18.5604, 1.1", "-142.664, -81.0136, -18.6999, 1.47", "-143.163, -81.4319, -18.8628, 1.32", "-143.896, -82.0999, -19.1198, 0.07", "-144.507, -82.6957, -19.3383, 0.07", "-145.347, -83.5568, -19.618, 0.07", "-145.705, -83.9408, -19.7233, 1.25", "-146.256, -84.5598, -19.8622, 1.76", "-147.086, -85.4915, -20.0494, 0.07", "-147.517, -85.98, -20.1246, 0.44", "-148.157, -86.688, -20.1877, 0.07", "-148.885, -87.4273, -20.221, 1.03", "-149.725, -88.173, -20.2386, 0.07", "-150.351, -88.6448, -20.2109, 0.51", "-150.855, -88.9799, -20.1603, 0.07", "-152.016, -89.655, -20.0293, 0.07", "-152.947, -90.1249, -19.923, 1.47", "-154.377, -90.7178, -19.7907, 0.07", "-155.393, -91.0697, -19.7222, 1.4", "-155.98, -91.2515, -19.6899, 1.62", "-157.08, -91.5492, -19.6812, 0.07", "-157.825, -91.7305, -19.7241, 0.95", "-159.075, -92.013, -19.8617, 0.07", "-160.12, -92.1974, -20.0019, 0.07", "-160.976, -92.343, -20.1377, 1.47", "-161.813, -92.4622, -20.2655, 1.32", "-162.926, -92.605, -20.4201, 0.22", "-164.081, -92.7241, -20.5788, 0.22", "-165.01, -92.803, -20.701, 1.69", "-165.891, -92.8292, -20.8499, 0.07", "-166.68, -92.8036, -20.988, 0.07", "-167.184, -92.7502, -21.0635, 0.51", "-168.367, -92.5709, -21.2348, 0.07", "-168.582, -92.5259, -21.269, 0.59", "-169.609, -92.2537, -21.4732, 0.07", "-170.438, -91.9637, -21.6584, 1.18", "-171.217, -91.6479, -21.8348, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.96, 6.81997, -2.88389, 0.37", "-17.3169, 7.32362, -3.05832, 0.37", "-17.6363, 7.77464, -3.22722, 0.37", "-18.0717, 8.37745, -3.49443, 0.73", "-18.4689, 8.92093, -3.76759, 1.03", "-18.7109, 9.24869, -3.94499, 1.1", "-18.99, 9.63148, -4.15699, 0.95", "-19.3687, 10.1449, -4.46135, 0.95", "-19.9529, 10.9497, -4.94585, 1.25", "-20.4518, 11.6473, -5.35672, 1.62", "-21.0256, 12.4501, -5.80706, 1.76", "-21.4886, 13.0863, -6.14028, 1.32", "-22.2462, 14.1495, -6.61561, 0.95", "-22.5532, 14.6015, -6.77774, 0.95", "-22.9295, 15.1714, -6.92124, 0.95", "-23.2523, 15.6737, -7.00757, 0.88", "-23.6868, 16.3605, -7.08052, 0.73", "-24.4834, 17.6325, -7.15872, 0.22", "-25.0225, 18.5256, -7.16672, 0.51", "-25.5406, 19.4269, -7.16033, 1.76", "-25.79, 19.876, -7.14824, 1.47", "-26.3879, 20.9915, -7.10545, 0.29", "-26.5743, 21.3535, -7.08984, 0.07", "-27.1022, 22.3557, -7.04809, 0.95", "-27.4908, 23.0637, -7.03297, 1.62", "-27.956, 23.8663, -7.04015, 1.62", "-28.4485, 24.6521, -7.0673, 0.95", "-29.0755, 25.6175, -7.12807, 0.44", "-29.5083, 26.2686, -7.18692, 0.44", "-30.0456, 27.0584, -7.28336, 1.25", "-30.495, 27.7157, -7.37615, 1.69", "-30.9309, 28.3646, -7.4773, 0.95", "-31.5827, 29.379, -7.63295, 0.37", "-31.9213, 29.973, -7.72223, 0.07", "-32.2081, 30.5855, -7.80712, 1.03", "-32.4998, 31.3919, -7.90233, 0.59", "-32.7694, 32.396, -8.0162, 0.59", "-32.9546, 33.2999, -8.12586, 0.44", "-33.1062, 34.2586, -8.27738, 2.28", "-33.2005, 35.0893, -8.44804, 2.28", "-33.2348, 36.1047, -8.72638, 1.03", "-33.1817, 37.1642, -9.08484, 1.1", "-33.0945, 37.7773, -9.33513, 0.81", "-32.9343, 38.4964, -9.67506, 0.81", "-32.7564, 39.1006, -9.99319, 0.81", "-32.2832, 40.3715, -10.7451, 0.59", "-32.0404, 40.9544, -11.1151, 0.59", "-31.7545, 41.5938, -11.5313, 1.32", "-31.3764, 42.4607, -12.0752, 2.28", "-31.2648, 42.7409, -12.2384, 2.28", "-30.9704, 43.6274, -12.719, 1.4", "-30.693, 44.7206, -13.2825, 0.37", "-30.6158, 45.1666, -13.504, 0.37", "-30.5759, 45.6827, -13.7486, 1.18", "-30.5672, 46.2547, -14.0026, 1.18", "-30.5755, 46.8273, -14.2383, 1.4", "-30.5907, 47.253, -14.4016, 1.47", "-30.5969, 47.7574, -14.5952, 1.1", "-30.5996, 48.6238, -14.941, 0.15", "-30.6067, 49.3337, -15.2337, 0.15", "-30.6245, 50.1724, -15.5777, 1.69", "-30.6394, 50.7048, -15.7885, 1.76", "-30.6684, 51.7537, -16.1509, 0.22", "-30.6686, 52.4344, -16.3508, 0.29", "-30.661, 53.1004, -16.5123, 0.29", "-30.6397, 53.8368, -16.6448, 0.37", "-30.598, 54.6349, -16.7311, 1.18", "-30.5094, 55.5573, -16.7557, 0.22", "-30.3529, 56.6815, -16.7186, 0.22", "-30.2757, 57.1085, -16.6928, 0.22", "-30.11, 57.8815, -16.6378, 1.62", "-30.0022, 58.3581, -16.5952, 2.42", "-29.627, 60.0374, -16.4217, 0.22", "-29.5061, 60.6194, -16.3638, 0.22", "-29.4235, 61.0664, -16.3177, 0.95", "-29.3551, 61.4441, -16.2869, 0.95", "-29.1725, 62.5135, -16.2305, 0.15", "-28.9941, 63.6209, -16.1716, 0.15", "-28.91, 64.2319, -16.1457, 0.15", "-28.8095, 65.0879, -16.1189, 0.15", "-28.7264, 65.9295, -16.104, 2.5", "-28.6717, 66.5587, -16.1092, 3.16", "-28.6232, 67.2023, -16.1367, 3.16", "-28.5164, 69.0328, -16.2554, 0.73", "-28.4543, 70.6092, -16.3758, 0.59", "-28.4417, 71.4695, -16.4571, 0.22", "-28.456, 72.3402, -16.5687, 0.07", "-28.4853, 73.1426, -16.7013, 1.1", "-28.515, 73.6291, -16.7997, 1.1", "-28.5634, 74.1042, -16.9089, 1.1", "-28.7096, 75.2301, -17.212, 0.15", "-28.8607, 76.2649, -17.4915, 0.15", "-28.9743, 76.9237, -17.6657, 0.95", "-29.1306, 77.7877, -17.8801, 1.62", "-29.2805, 78.6183, -18.0664, 1.62", "-29.4828, 79.6636, -18.2737, 0.07", "-29.6167, 80.2923, -18.3769, 0.95", "-29.7012, 80.6697, -18.4225, 0.95", "-29.9331, 81.6763, -18.5205, 0.07", "-30.204, 82.8658, -18.6101, 0.07", "-30.3032, 83.2943, -18.6321, 1.18", "-30.4442, 83.8738, -18.6619, 1.18", "-30.7231, 84.9589, -18.7453, 0.15", "-30.8765, 85.5529, -18.7974, 0.88", "-31.004, 86.0225, -18.8439, 0.88", "-31.0904, 86.3287, -18.8828, 0.07", "-31.3876, 87.3814, -19.0321, 0.07", "-31.5751, 88.0783, -19.143, 1.18", "-31.7112, 88.6002, -19.2324, 1.62", "-31.8173, 89.0157, -19.31, 1.62", "-32.2609, 90.7626, -19.6429, 0.07", "-32.4287, 91.4426, -19.775, 0.07", "-32.5576, 91.9826, -19.8928, 1.18", "-32.6802, 92.5143, -20.0218, 1.18", "-32.8404, 93.2782, -20.2396, 0.15", "-33.0194, 94.2313, -20.5445, 0.15", "-33.1396, 95.0015, -20.8186, 1.69", "-33.2265, 95.5907, -21.0505, 2.06", "-33.2589, 95.8098, -21.1437, 2.06", "-33.4354, 97.0016, -21.6961, 0.44", "-33.5817, 97.9795, -22.1736, 0.59", "-33.7265, 99.0004, -22.696, 0.22", "-33.8782, 100.107, -23.2674, 0.59", "-33.9381, 100.539, -23.494, 0.22", "-34.0346, 101.22, -23.864, 1.76", "-34.1368, 101.902, -24.2344, 2.06", "-34.3242, 103.269, -24.9866, 0.22", "-34.465, 104.394, -25.5822, 0.66", "-34.5341, 105.015, -25.8979, 0.66", "-34.6312, 106.118, -26.4238, 1.91", "-34.7195, 107.209, -26.9056, 1.25", "-34.7979, 108.158, -27.2981, 0.07", "-34.8513, 108.841, -27.5564, 0.07", "-34.921, 109.828, -27.8761, 1.54", "-34.9933, 110.849, -28.1574, 0.15", "-35.0906, 111.938, -28.4221, 0.15", "-35.1655, 112.621, -28.5838, 1.1", "-35.2817, 113.479, -28.7759, 2.28", "-35.5488, 115.118, -29.1456, 0.29", "-35.7035, 115.974, -29.3265, 0.88", "-35.9359, 117.196, -29.5816, 0.07", "-36.0788, 118.03, -29.7595, 1.62", "-36.1601, 118.573, -29.8732, 1.62", "-36.2131, 119.119, -29.9854, 1.1", "-36.2459, 120.376, -30.2509, 0.07", "-36.2152, 120.915, -30.3602, 0.07", "-36.1047, 121.926, -30.5623, 1.54", "-36.0163, 122.645, -30.7021, 2.13", "-35.7608, 124.587, -31.0862, 0.22", "-35.6996, 125.032, -31.1793, 0.22", "-35.5506, 126.19, -31.4367, 0.81", "-35.472, 126.957, -31.6058, 0.07", "-35.4279, 127.655, -31.7584, 0.37", "-35.4175, 128.186, -31.9013, 0.07", "-35.4278, 128.613, -32.0299, 0.07", "-35.4658, 129.364, -32.2608, 1.62", "-35.51, 130.057, -32.4825, 2.28", "-35.5615, 130.847, -32.7513, 1.47", "-35.67, 132.216, -33.244, 0.29", "-35.7636, 133.022, -33.538, 0.44", "-35.8711, 133.668, -33.7692, 0.07", "-36.0397, 134.432, -34.04, 1.32", "-36.382, 135.726, -34.477, 0.07", "-36.5708, 136.309, -34.6567, 1.25", "-36.7651, 136.814, -34.7909, 1.25", "-37.1937, 137.833, -35.0251, 0.22", "-37.4801, 138.494, -35.1445, 0.51", "-37.6357, 138.893, -35.1954, 0.07", "-37.8304, 139.524, -35.2494, 0.29", "-37.9685, 140.203, -35.3053, 0.07", "-38.0834, 141.405, -35.4319, 2.5", "-38.0703, 142.127, -35.5494, 2.35", "-37.9351, 143.438, -35.8221, 0.07", "-37.8074, 144.179, -36.0005, 0.07", "-37.651, 144.788, -36.1703, 0.07", "-37.4171, 145.509, -36.401, 1.62", "-36.9673, 146.767, -36.8536, 0.07", "-36.7855, 147.305, -37.0496, 0.37", "-36.6915, 147.629, -37.1663, 0.37", "-36.4986, 148.48, -37.4571, 0.07", "-36.3907, 149.074, -37.6403, 1.4", "-36.2242, 150.159, -37.9348, 0.07", "-36.151, 150.808, -38.092, 0.07", "-36.0776, 151.887, -38.3538, 1.98", "-36.0216, 153.345, -38.7041, 0.07", "-36.0198, 154.128, -38.8831, 0.07", "-36.0461, 155.1, -39.1058, 1.4", "-36.1276, 156.121, -39.3425, 0.07", "-36.2383, 156.883, -39.5244, 0.22", "-36.3849, 157.549, -39.682, 0.07", "-36.6439, 158.43, -39.9028, 1.76", "-36.8144, 158.911, -40.0403, 1.76", "-37.3549, 160.217, -40.4432, 0.07", "-37.6777, 160.929, -40.6747, 1.1", "-38.037, 161.699, -40.9255, 0.07", "-38.351, 162.351, -41.1437, 0.07", "-38.6228, 162.926, -41.3787, 0.95", "-38.8337, 163.397, -41.59, 0.95", "-39.0822, 164.008, -41.9214, 0.07", "-39.2743, 164.513, -42.2213, 0.07", "-39.4967, 165.121, -42.5885, 1.54", "-39.9627, 166.356, -43.3267, 0.29", "-40.1037, 166.718, -43.5344, 1.18", "-40.5251, 167.787, -44.1227, 0.15", "-40.798, 168.418, -44.463, 0.15", "-41.1919, 169.238, -44.8966, 2.06", "-41.7078, 170.277, -45.4369, 0.15", "-41.9714, 170.809, -45.7114, 0.51", "-42.265, 171.394, -46.0516, 0.07", "-42.6144, 172.12, -46.4962, 1.69", "-43.064, 173.097, -47.1887, 0.29", "-43.4152, 173.908, -47.8311, 0.07", "-43.663, 174.496, -48.3122, 1.4", "-44.0557, 175.365, -49.0312, 1.4", "-44.248, 175.758, -49.3499, 2.06", "-44.8308, 176.916, -50.223, 0.22", "-45.1287, 177.45, -50.5942, 0.88", "-45.5138, 178.064, -50.9799, 0.07", "-46.0467, 178.802, -51.3942, 0.07", "-46.4995, 179.37, -51.6779, 1.54", "-46.6882, 179.597, -51.7794, 1.69", "-47.5929, 180.705, -52.1733, 0.07", "-47.9643, 181.206, -52.3408, 0.07", "-48.5224, 182.043, -52.6157, 0.07", "-48.7791, 182.475, -52.7469, 0.07", "-49.0909, 183.05, -52.9057, 1.18", "-49.3417, 183.553, -53.0353, 1.84", "-49.9325, 184.83, -53.3208, 0.07", "-50.1594, 185.346, -53.4429, 0.07", "-50.3571, 185.795, -53.5579, 1.32", "-50.5299, 186.152, -53.6536, 1.32", "-51.0165, 187.052, -53.9013, 0.15", "-51.5001, 187.88, -54.1271, 0.15", "-51.8319, 188.42, -54.2861, 0.15", "-52.1854, 188.99, -54.4748, 0.95", "-52.3243, 189.204, -54.5528, 1.25", "-52.555, 189.557, -54.6805, 0.73", "-52.9679, 190.21, -54.9037, 0.07", "-53.3854, 190.96, -55.13, 0.07", "-53.7423, 191.671, -55.305, 0.37", "-53.9842, 192.203, -55.4092, 0.07", "-54.3299, 192.997, -55.5502, 2.2", "-54.5516, 193.571, -55.6647, 1.84", "-55.0033, 194.972, -55.9532, 0.07", "-55.3012, 196.058, -56.1989, 0.07", "-55.4559, 196.739, -56.3783, 0.73", "-55.5777, 197.371, -56.5676, 1.47", "-55.81, 198.758, -57.0375, 0.07", "-55.8937, 199.256, -57.2256, 0.29", "-55.9968, 199.869, -57.4782, 0.07", "-56.0987, 200.479, -57.7452, 0.66", "-56.2073, 201.124, -58.0293, 0.07", "-56.3485, 201.842, -58.3191, 0.07", "-56.5424, 202.6, -58.5958, 1.84", "-56.6524, 202.995, -58.7485, 1.84", "-56.7185, 203.249, -58.8542, 1.84", "-56.9456, 204.187, -59.3046, 0.07", "-57.0728, 204.728, -59.5737, 0.07", "-57.1948, 205.282, -59.8596, 1.32", "-57.3644, 206.057, -60.2438, 0.07", "-57.5876, 206.954, -60.6737, 1.1", "-57.7923, 207.731, -61.0228, 0.07", "-58.0192, 208.564, -61.3711, 1.4", "-58.0884, 208.832, -61.4744, 1.76", "-58.3999, 210.057, -61.8883, 0.15", "-58.5481, 210.617, -62.0366, 0.44", "-58.7117, 211.21, -62.1555, 0.07", "-58.8861, 211.869, -62.2655, 0.07", "-59.1065, 212.72, -62.3968, 1.25", "-59.19, 213.06, -62.4421, 1.76", "-59.4846, 214.308, -62.5765, 0.07", "-59.727, 215.291, -62.666, 0.15", "-59.9812, 216.25, -62.7361, 1.47", "-60.1069, 216.723, -62.7603, 1.1", "-60.3635, 217.605, -62.794, 0.15", "-60.6061, 218.429, -62.8242, 0.07", "-60.8887, 219.345, -62.8443, 0.37", "-61.1833, 220.285, -62.8391, 0.07", "-61.4094, 220.997, -62.8168, 1.1", "-61.6028, 221.607, -62.8001, 1.69", "-61.8098, 222.27, -62.7851, 1.18", "-62.0444, 223.055, -62.7985, 0.07", "-62.3711, 224.136, -62.8542, 0.22", "-62.7099, 225.288, -62.9371, 0.22", "-62.918, 226.048, -63.0054, 1.03", "-63.0276, 226.518, -63.051, 1.03", "-63.2267, 227.445, -63.1565, 0.07", "-63.4377, 228.651, -63.3115, 0.07", "-63.5761, 229.503, -63.4402, 1.47", "-63.6247, 229.865, -63.4942, 1.47", "-63.7332, 230.819, -63.6268, 0.07", "-63.8189, 231.679, -63.7448, 1.25", "-63.8894, 232.46, -63.8438, 0.15", "-63.9707, 233.315, -63.9634, 0.66", "-64.0458, 233.977, -64.0608, 0.07", "-64.187, 234.943, -64.1998, 0.07", "-64.3411, 235.786, -64.3155, 1.76", "-64.5192, 236.605, -64.4173, 1.84", "-64.7846, 237.684, -64.5505, 0.07", "-64.9538, 238.272, -64.6186, 0.07", "-65.2507, 239.146, -64.7269, 0.73", "-65.5178, 239.827, -64.8226, 0.07", "-65.7393, 240.318, -64.9019, 0.29", "-65.8989, 240.642, -64.9629, 0.07", "-66.2547, 241.314, -65.1024, 0.07", "-66.5975, 241.942, -65.2519, 1.1", "-66.7694, 242.244, -65.3373, 1.25", "-67.0547, 242.736, -65.5568, 0.07", "-67.2909, 243.158, -65.791, 0.59", "-67.5694, 243.644, -66.0994, 0.07", "-67.8463, 244.095, -66.4489, 0.07", "-68.2127, 244.66, -66.9491, 1.32", "-68.9419, 245.798, -68.0643, 0.07", "-69.1331, 246.127, -68.4123, 0.07", "-69.3081, 246.488, -68.801, 0.37", "-69.5061, 247.075, -69.4276, 0.37", "-69.5546, 247.458, -69.7976, 1.1", "-69.5232, 247.819, -70.091, 1.1", "-69.3365, 248.685, -70.6601, 0.07", "-69.1514, 249.327, -71.0345, 1.1", "-68.9032, 250.07, -71.4188, 0.07", "-68.6435, 250.842, -71.7617, 1.54", "-68.279, 252.026, -72.2451, 0.07", "-68.1617, 252.487, -72.4128, 0.07", "-68.0367, 253.099, -72.6213, 1.1", "-67.9427, 253.782, -72.8391, 0.07", "-67.9014, 254.442, -73.0603, 1.18", "-67.9063, 255.519, -73.4592, 0.07", "-67.9787, 256.358, -73.8125, 0.07", "-68.0814, 256.947, -74.1172, 1.1", "-68.1438, 257.203, -74.2726, 1.1", "-68.4023, 258.047, -74.8953, 0.07", "-68.5063, 258.332, -75.13, 0.07", "-68.7948, 259.026, -75.727, 0.88", "-69.1045, 259.719, -76.3801, 0.37", "-69.3356, 260.232, -76.8622, 0.88", "-69.6977, 261.09, -77.6459, 0.07", "-69.9413, 261.702, -78.1741, 0.07", "-70.2066, 262.446, -78.7873, 1.76", "-70.6808, 263.873, -79.9026, 0.07", "-70.7826, 264.169, -80.1226, 0.07", "-71.0387, 264.87, -80.6246, 1.84", "-71.5412, 266.238, -81.5555, 0.07", "-71.6967, 266.639, -81.8145, 1.4", "-71.8193, 266.934, -81.9729, 1.4", "-72.147, 267.684, -82.285, 0.07", "-72.3751, 268.171, -82.4643, 0.73", "-72.6771, 268.751, -82.6399, 0.07", "-73.2835, 269.827, -82.9014, 2.72", "-74.0286, 271.065, -83.1823, 0.07", "-74.2819, 271.463, -83.2475, 0.81", "-74.6216, 271.936, -83.2898, 0.07", "-75.0871, 272.495, -83.3009, 0.07", "-75.339, 272.74, -83.2878, 0.95", "-76.1388, 273.341, -83.2334, 0.07", "-76.9159, 273.811, -83.1745, 0.07", "-77.6835, 274.227, -83.1237, 1.25", "-78.3319, 274.542, -83.081, 0.07", "-79.3113, 274.987, -83.0206, 0.07", "-80.1468, 275.353, -82.9576, 1.91", "-81.1698, 275.801, -82.8763, 0.07", "-81.5873, 275.993, -82.853, 0.07", "-82.002, 276.199, -82.8243, 0.88", "-82.398, 276.406, -82.795, 1.32", "-83.339, 276.943, -82.7021, 0.15", "-83.8234, 277.231, -82.6579, 0.66", "-84.4288, 277.609, -82.604, 0.07", "-84.7735, 277.825, -82.5777, 0.07", "-85.3076, 278.147, -82.5599, 0.07", "-85.5029, 278.254, -82.5535, 0.88", "-86.1405, 278.593, -82.5171, 0.07", "-86.916, 278.993, -82.4293, 0.95", "-87.5229, 279.336, -82.3257, 0.07", "-88.0559, 279.686, -82.1801, 0.29", "-88.4689, 280.124, -81.9526, 0.07", "-88.5979, 280.647, -81.6273, 0.07", "-88.591, 280.761, -81.551, 0.07", "-88.4505, 281.178, -81.2714, 0.37", "-88.1337, 281.84, -80.8283, 0.07", "-87.5956, 282.76, -80.2153, 0.07", "-87.1445, 283.422, -79.8118, 1.4" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-42.6113, -80.8359, -33.2888, 0.37", "-42.4127, -83.4873, -33.145, 0.37", "-42.2962, -84.7493, -33.0661, 0.07", "-42.1901, -85.7671, -32.9995, 1.32", "-42.1458, -86.2826, -32.9766, 1.32", "-42.0798, -88.0586, -32.9308, 0.22", "-42.08, -89.0575, -32.9167, 0.07", "-42.1348, -89.952, -32.8861, 1.32", "-42.1532, -90.1501, -32.8774, 1.32", "-42.3264, -91.5109, -32.7777, 0.15", "-42.6681, -93.3554, -32.5453, 0.15", "-42.8839, -94.3233, -32.3545, 0.15", "-43.1106, -95.3091, -32.1184, 1.1", "-43.2454, -95.8919, -31.9511, 1.32", "-43.515, -97.1568, -31.5501, 0.22", "-43.7809, -98.7364, -31.0325, 0.22", "-43.9158, -99.6889, -30.745, 0.95", "-43.9757, -100.207, -30.6229, 0.95", "-44.1064, -101.321, -30.4576, 0.07", "-44.2223, -102.205, -30.3902, 0.07", "-44.3651, -103.507, -30.3895, 1.54", "-44.4327, -104.33, -30.4502, 1.32", "-44.5215, -105.654, -30.6023, 0.15", "-44.6126, -107.149, -30.8193, 0.15", "-44.7267, -108.514, -31.0608, 1.54", "-44.8196, -109.367, -31.2359, 1.54", "-45.1091, -111.9, -31.7832, 0.07", "-45.2447, -112.965, -32.0237, 0.88", "-45.3688, -113.949, -32.2495, 0.07", "-45.582, -115.826, -32.6603, 0.07", "-45.7362, -117.232, -32.9363, 2.06", "-45.9363, -118.988, -33.2104, 1.03", "-46.0912, -120.679, -33.3773, 0.07", "-46.164, -121.826, -33.4372, 0.07", "-46.1827, -122.435, -33.444, 0.81", "-46.1801, -123.687, -33.4221, 0.59", "-46.1915, -124.686, -33.4006, 0.15", "-46.2424, -126.285, -33.3904, 1.84", "-46.3346, -128.214, -33.4103, 0.07", "-46.3828, -128.748, -33.4268, 0.59", "-46.5318, -130.064, -33.5064, 0.59", "-46.7143, -131.365, -33.6131, 1.69", "-46.8491, -132.229, -33.7276, 1.69", "-47.0063, -133.162, -33.8666, 1.1", "-47.178, -134.138, -34.0255, 0.15", "-47.3228, -134.952, -34.1706, 0.81", "-47.5085, -136.105, -34.3702, 0.59", "-47.7867, -137.957, -34.6685, 0.15", "-47.9114, -138.83, -34.8189, 0.15", "-48.1371, -140.386, -35.0891, 1.62", "-48.173, -140.663, -35.128, 1.62", "-48.4201, -142.681, -35.3402, 0.44", "-48.5639, -143.994, -35.4121, 0.22", "-48.6831, -145.202, -35.4245, 1.03", "-48.7821, -146.307, -35.4155, 1.4", "-48.9474, -148.51, -35.3233, 0.22", "-49.1238, -151.04, -35.1688, 0.22", "-49.2246, -152.792, -35.0295, 1.03", "-49.2624, -153.581, -34.9488, 1.47", "-49.2978, -154.285, -34.864, 1.47", "-49.4186, -155.981, -34.673, 0.15", "-49.5291, -156.865, -34.5869, 0.29", "-49.7909, -158.338, -34.4337, 0.07", "-50.0298, -159.345, -34.3642, 1.47", "-50.23, -160.075, -34.3348, 1.47", "-50.699, -161.581, -34.3637, 0.15", "-50.9032, -162.175, -34.4106, 0.15", "-51.246, -163.134, -34.4702, 1.25", "-51.6218, -164.222, -34.522, 1.62", "-52.2007, -166.118, -34.6734, 0.07", "-52.479, -167.217, -34.7821, 0.37", "-52.6154, -167.933, -34.8578, 0.15", "-52.8472, -169.649, -35.0443, 1.25", "-52.9265, -170.862, -35.2147, 0.37", "-52.9282, -172.196, -35.4105, 0.22", "-52.7962, -173.58, -35.6484, 0.22", "-52.6645, -174.345, -35.7872, 1.47", "-52.5178, -174.953, -35.9221, 1.25", "-52.0328, -176.484, -36.3245, 0.07", "-51.9238, -176.778, -36.3923, 0.37", "-51.2756, -178.416, -36.682, 0.07", "-50.8719, -179.414, -36.8603, 0.81", "-50.7171, -179.818, -36.9274, 0.81", "-50.4385, -180.6, -37.0408, 0.07", "-50.1279, -181.609, -37.148, 0.07", "-49.9072, -182.467, -37.2385, 0.88", "-49.7377, -183.266, -37.3053, 0.07", "-49.5893, -184.042, -37.3818, 0.66", "-49.4581, -184.806, -37.4571, 0.07", "-49.2804, -185.755, -37.5246, 0.07", "-49.1706, -186.272, -37.5423, 0.07", "-48.9092, -187.304, -37.5083, 1.03", "-48.4703, -188.929, -37.306, 0.07", "-48.228, -189.771, -37.1378, 0.44", "-47.772, -191.311, -36.7307, 0.07", "-47.5259, -192.112, -36.4863, 0.59", "-47.0777, -193.659, -35.9815, 0.07", "-46.7469, -195.014, -35.502, 0.07", "-46.3876, -196.773, -34.8002, 0.07", "-46.1251, -198.372, -34.1403, 0.07", "-46.005, -199.438, -33.6967, 0.22", "-45.8947, -200.391, -33.3255, 1.62", "-45.6988, -201.604, -32.9421, 0.37", "-45.422, -202.269, -32.8249, 1.1", "-46.3199, -201.397, -32.8319, 0.07", "-47.1917, -200.69, -32.803, 0.07", "-47.723, -200.209, -32.7923, 0.88" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-42.6113, -80.8359, -33.2888, 0.37", "-44.2389, -82.397, -34.204, 0.37", "-44.8372, -82.9615, -34.4438, 0.59", "-45.9217, -83.9795, -34.6301, 0.07", "-46.9745, -84.9565, -34.5431, 0.07", "-47.6101, -85.5019, -34.4073, 0.07", "-48.2283, -85.9485, -34.3543, 0.81", "-49.3297, -86.548, -34.2799, 0.29", "-50.7922, -87.0001, -34.8713, 0.29", "-51.6252, -87.1073, -35.5218, 0.59", "-52.2974, -87.1503, -36.1469, 0.95", "-54.6092, -87.2661, -38.7934, 0.44", "-55.7188, -87.3296, -40.2372, 0.73", "-56.8411, -87.4361, -41.8752, 0.15", "-57.3281, -87.5046, -42.6614, 0.15", "-57.6243, -87.5781, -43.1598, 0.51", "-58.6109, -88.068, -44.9228, 0.07", "-58.7335, -88.1747, -45.1502, 0.07", "-59.1012, -88.5914, -45.8704, 1.03", "-59.5617, -89.2029, -46.7607, 0.15", "-60.0127, -89.8254, -47.5864, 0.95", "-61.0351, -91.1858, -49.2511, 0.37", "-61.44, -91.7063, -49.8312, 0.81", "-62.0548, -92.4739, -50.6959, 0.07", "-62.7414, -93.3158, -51.6362, 0.07", "-63.124, -93.7895, -52.1594, 0.29", "-63.596, -94.3055, -52.7913, 0.95" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-171.217, -91.6479, -21.8348, 0.07", "-172.109, -92.3755, -21.9937, 0.07", "-173.076, -93.2637, -22.2192, 0.07", "-173.748, -93.9472, -22.4019, 0.07", "-174.03, -94.2704, -22.4907, 0.88", "-174.323, -94.6416, -22.6117, 0.88", "-174.818, -95.2974, -22.8815, 0.07", "-175.034, -95.6181, -23.0439, 0.07", "-175.543, -96.3678, -23.4636, 0.66", "-175.854, -96.7882, -23.7216, 1.1", "-176.538, -97.6107, -24.2486, 0.07", "-177.366, -98.491, -24.8149, 0.07", "-178.131, -99.202, -25.2622, 0.66", "-178.788, -99.7243, -25.5843, 1.4", "-179.834, -100.414, -26.0184, 0.22", "-180.631, -100.836, -26.2928, 0.22", "-181.392, -101.148, -26.4771, 0.59", "-182.016, -101.361, -26.5879, 0.07", "-182.809, -101.584, -26.7442, 0.07", "-183.719, -101.808, -26.9365, 0.81", "-184.633, -102.03, -27.1449, 0.22", "-186.045, -102.435, -27.5218, 0.22", "-186.809, -102.705, -27.7709, 1.4", "-188.043, -103.249, -28.2378, 0.07", "-188.56, -103.534, -28.4578, 0.81", "-189.133, -103.949, -28.7413, 0.07", "-189.739, -104.523, -29.1002, 0.07", "-189.978, -104.796, -29.2788, 0.07", "-190.348, -105.28, -29.5532, 0.81", "-190.563, -105.61, -29.686, 0.07", "-191.181, -106.663, -30.0416, 0.44", "-191.504, -107.192, -30.2008, 0.07", "-191.894, -107.789, -30.3614, 0.29", "-192.408, -108.521, -30.5331, 0.07", "-193.401, -109.821, -30.8416, 0.07", "-194.034, -110.588, -31.0291, 1.76", "-195.151, -111.843, -31.3492, 0.22", "-195.888, -112.616, -31.572, 0.51", "-196.3, -113.035, -31.6893, 0.07", "-197.003, -113.682, -31.8965, 0.07", "-197.231, -113.871, -31.9612, 0.81", "-198.047, -114.521, -32.1653, 0.07", "-198.854, -115.176, -32.3605, 0.07", "-199.784, -115.957, -32.5899, 1.47", "-200.799, -116.846, -32.8288, 0.15", "-201.384, -117.369, -32.9464, 0.15", "-201.82, -117.763, -33.0282, 0.88", "-202.504, -118.372, -33.1633, 0.07", "-203.295, -119.061, -33.3374, 0.07", "-203.741, -119.446, -33.4384, 0.07", "-204.11, -119.758, -33.5035, 0.81", "-204.886, -120.386, -33.608, 0.07", "-205.868, -121.108, -33.7231, 0.07", "-206.429, -121.463, -33.7647, 0.95", "-207.523, -122.053, -33.8153, 0.07", "-208.709, -122.623, -33.7962, 0.88", "-209.342, -122.894, -33.7491, 0.22", "-210.165, -123.192, -33.6197, 0.07", "-211.715, -123.686, -33.2237, 0.07", "-212.345, -123.862, -33.0242, 1.18", "-213.542, -124.153, -32.5802, 0.15", "-214.681, -124.42, -32.1144, 0.15", "-215.656, -124.64, -31.7124, 1.54", "-217.211, -124.906, -31.0609, 0.07", "-217.83, -124.972, -30.8137, 0.07", "-218.299, -124.986, -30.6456, 0.44", "-219.208, -124.915, -30.3743, 0.07", "-220.275, -124.717, -30.0999, 0.81", "-221.501, -124.322, -29.8457, 0.07", "-221.876, -124.144, -29.7723, 0.07", "-222.274, -123.921, -29.684, 0.37", "-223.205, -123.341, -29.481, 0.07", "-223.649, -123.041, -29.3756, 0.88", "-224.443, -122.511, -29.1748, 0.07", "-225.199, -122.078, -28.9933, 0.29", "-226.089, -121.6, -28.819, 0.07", "-226.608, -121.342, -28.7418, 0.95", "-227.545, -120.909, -28.6271, 0.07", "-227.776, -120.819, -28.6011, 0.07", "-228.479, -120.568, -28.546, 0.44", "-229.399, -120.263, -28.4871, 0.07", "-230.704, -119.854, -28.4553, 0.07", "-231.774, -119.542, -28.4447, 1.25", "-232.828, -119.261, -28.463, 0.07", "-233.587, -119.075, -28.4845, 0.07", "-234.485, -118.889, -28.5376, 0.37", "-235.454, -118.754, -28.611, 0.07", "-236.286, -118.709, -28.7006, 0.07", "-236.78, -118.735, -28.7683, 0.37", "-237.397, -118.859, -28.8622, 0.07", "-238.481, -119.216, -29.0123, 0.07", "-239.471, -119.664, -29.131, 0.07", "-240.518, -120.269, -29.2213, 1.69", "-241.687, -121.088, -29.317, 0.07", "-243.429, -122.568, -29.4213, 0.07", "-244.516, -123.579, -29.4675, 0.07", "-245.396, -124.495, -29.4842, 1.32", "-246.229, -125.472, -29.4966, 0.07", "-246.806, -126.229, -29.4965, 0.07", "-247.605, -127.416, -29.439, 1.62" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-171.217, -91.6479, -21.8348, 0.07", "-171.912, -90.5266, -21.3464, 0.07", "-172.364, -89.8375, -21.034, 1.03", "-172.843, -89.1204, -20.7137, 0.07", "-173.112, -88.7254, -20.5291, 0.29", "-173.36, -88.3829, -20.3691, 0.07", "-173.975, -87.5384, -19.9847, 0.07", "-174.324, -87.0732, -19.7851, 0.95", "-174.689, -86.5874, -19.5876, 0.95", "-175.135, -85.9553, -19.3655, 0.07", "-175.812, -84.9378, -19.0342, 0.07", "-176.119, -84.4647, -18.8911, 0.59", "-176.518, -83.8252, -18.7203, 0.07", "-176.877, -83.239, -18.586, 0.37", "-177.212, -82.6788, -18.4722, 0.07", "-177.358, -82.4168, -18.4337, 0.07", "-177.496, -82.1333, -18.3984, 1.03", "-177.736, -81.6779, -18.3452, 1.03" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_37", "dend_30", "dend_17", "dend_8", "dend_5", "dend_0", "dend_43", "dend_38", "dend_34", "dend_31", "dend_23", "dend_18", "dend_16", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_36", "dend_35", "dend_33", "dend_32", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_4", "dend_3", "dend_42", "dend_41", "dend_27", "dend_26", "dend_21", "dend_20", "dend_12", "dend_11", "dend_29", "dend_28", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_37", "dend_30", "dend_17", "dend_8", "dend_5", "dend_0", "dend_43", "dend_38", "dend_34", "dend_31", "dend_23", "dend_18", "dend_16", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_40", "dend_39", "dend_36", "dend_35", "dend_33", "dend_32", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_10", "dend_4", "dend_3", "dend_42", "dend_41", "dend_27", "dend_26", "dend_21", "dend_20", "dend_12", "dend_11", "dend_29", "dend_28", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_LBC_dbef3c6e51_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_23, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_37(0), soma_0(0.4999997299839917)
    connect dend_30(0), soma_0(0.4999997299839917)
    connect dend_17(0), soma_0(0.4999997299839917)
    connect dend_8(0), soma_0(0.4999997299839917)
    connect dend_5(0), soma_0(0.4999997299839917)
    connect dend_0(0), soma_0(0.4999997299839917)
    connect axon_0(0), soma_0(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.84529, -4.87297, 0.0, 6.22486 ) }
    soma_0 { pt3dadd( -6.02577, -4.47098, 0.0, 11.3263 ) }
    soma_0 { pt3dadd( -5.20624, -4.06899, 0.0, 13.1262 ) }
    soma_0 { pt3dadd( -4.38672, -3.66701, 0.0, 14.4968 ) }
    soma_0 { pt3dadd( -3.56719, -3.26502, 0.0, 15.3488 ) }
    soma_0 { pt3dadd( -2.74767, -2.86303, 0.0, 15.7521 ) }
    soma_0 { pt3dadd( -1.92815, -2.46104, 0.0, 15.7984 ) }
    soma_0 { pt3dadd( -1.10862, -2.05905, 0.0, 15.859 ) }
    soma_0 { pt3dadd( -0.289096, -1.65706, 0.0, 15.958 ) }
    soma_0 { pt3dadd( 0.530429, -1.25507, 0.0, 16.0571 ) }
    soma_0 { pt3dadd( 1.34995, -0.853086, 0.0, 16.1345 ) }
    soma_0 { pt3dadd( 2.16948, -0.451097, 0.0, 16.3639 ) }
    soma_0 { pt3dadd( 2.989, -0.0491089, 0.0, 16.0828 ) }
    soma_0 { pt3dadd( 3.80853, 0.35288, 0.0, 15.4226 ) }
    soma_0 { pt3dadd( 4.62805, 0.754868, 0.0, 14.6331 ) }
    soma_0 { pt3dadd( 5.44758, 1.15686, 0.0, 13.8581 ) }
    soma_0 { pt3dadd( 6.2671, 1.55885, 0.0, 13.096 ) }
    soma_0 { pt3dadd( 7.08663, 1.96083, 0.0, 11.6592 ) }
    soma_0 { pt3dadd( 7.90615, 2.36282, 0.0, 9.60018 ) }
    soma_0 { pt3dadd( 8.72568, 2.76481, 0.0, 6.5333 ) }
    soma_0 { pt3dadd( 9.5452, 3.1668, 0.0, 3.66685 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 21/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 10.8103, -1.01476, -5.53, 2.42 ) }
    dend_37 { pt3dadd( 10.8103, -1.01476, -5.53, 2.42 ) }
    dend_37 { pt3dadd( 11.968, -0.188484, -6.28919, 2.28 ) }
    dend_37 { pt3dadd( 13.0658, 0.716231, -6.9978, 2.06 ) }
    dend_37 { pt3dadd( 13.7892, 1.34522, -7.46175, 1.76 ) }
    dend_37 { pt3dadd( 14.7069, 2.17976, -8.02241, 2.06 ) }
    dend_37 { pt3dadd( 15.9019, 3.29626, -8.72033, 1.54 ) }
    dend_37 { pt3dadd( 16.7981, 4.19888, -9.20715, 1.54 ) }
    dend_37 { pt3dadd( 17.1003, 4.5363, -9.35892, 1.62 ) }
    dend_37 { pt3dadd( 17.7912, 5.35952, -9.67462, 1.62 ) }
    dend_37 { pt3dadd( 18.4186, 6.1319, -9.96048, 1.18 ) }
    dend_37 { pt3dadd( 19.0532, 6.88732, -10.2641, 2.28 ) }
    dend_37 { pt3dadd( 19.7332, 7.62059, -10.5608, 2.64 ) }
    dend_37 { pt3dadd( 20.5182, 8.35899, -10.8807, 2.72 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 35/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.5103, -3.81475, -3.85, 5.0 ) }
    dend_30 { pt3dadd( 8.5103, -3.81475, -3.85, 5.0 ) }
    dend_30 { pt3dadd( 9.2821, -5.55651, -4.60704, 1.98 ) }
    dend_30 { pt3dadd( 9.65345, -6.39456, -4.9713, 1.98 ) }
    dend_30 { pt3dadd( 10.2611, -7.7658, -5.56731, 1.47 ) }
    dend_30 { pt3dadd( 10.9197, -9.25234, -6.21343, 2.06 ) }
    dend_30 { pt3dadd( 11.562, -10.7018, -6.84339, 2.57 ) }
    dend_30 { pt3dadd( 11.8574, -11.3212, -7.10371, 3.01 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 43/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.58973, -10.2848, 0.0, 3.01 ) }
    dend_17 { pt3dadd( -1.58973, -10.2848, 0.0, 3.01 ) }
    dend_17 { pt3dadd( -1.55204, -12.5632, 0.0374467, 1.76 ) }
    dend_17 { pt3dadd( -1.52196, -14.3816, 0.0673327, 2.2 ) }
    dend_17 { pt3dadd( -1.49693, -15.8944, 0.0921944, 2.86 ) }
    dend_17 { pt3dadd( -1.47891, -16.9838, 0.110099, 3.09 ) }
    dend_17 { pt3dadd( -1.46506, -17.821, 0.123859, 3.09 ) }
    dend_17 { pt3dadd( -1.46222, -18.247, 0.132845, 3.09 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.39973, 1.67525, -0.84, 3.31 ) }
    dend_8 { pt3dadd( -7.39973, 1.67525, -0.84, 3.31 ) }
    dend_8 { pt3dadd( -8.73175, 2.44761, -0.959678, 1.76 ) }
    dend_8 { pt3dadd( -9.54477, 2.91904, -1.03272, 1.98 ) }
    dend_8 { pt3dadd( -10.1548, 3.27275, -1.08753, 1.98 ) }
    dend_8 { pt3dadd( -11.1225, 3.83384, -1.17447, 2.35 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 57/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.35027, -0.324748, 9.36, 1.91 ) }
    dend_5 { pt3dadd( 6.39085, -0.309977, 9.38772, 1.91 ) }
    dend_5 { pt3dadd( 7.17126, -0.025882, 9.92095, 1.91 ) }
    dend_5 { pt3dadd( 8.06031, 0.297762, 10.5284, 1.91 ) }
    dend_5 { pt3dadd( 8.69336, 0.528212, 10.9609, 2.42 ) }
    dend_5 { pt3dadd( 9.26018, 0.734553, 11.3482, 2.57 ) }
    dend_5 { pt3dadd( 9.44478, 0.801755, 11.4744, 2.72 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.10969, 1.57527, 6.17, 2.2 ) }
    dend_0 { pt3dadd( -4.2238, 1.65127, 6.26467, 2.2 ) }
    dend_0 { pt3dadd( -5.60554, 2.57159, 7.41103, 2.2 ) }
    dend_0 { pt3dadd( -6.94791, 3.46569, 8.52473, 2.06 ) }
    dend_0 { pt3dadd( -7.8801, 4.0866, 9.29813, 1.84 ) }
    dend_0 { pt3dadd( -8.89129, 4.76011, 10.1371, 1.91 ) }
    dend_0 { pt3dadd( -10.2165, 5.64274, 11.2365, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 71/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.5452, 3.1668, 0.0, 0.993075 ) }
    axon_0 { pt3dadd( 23.0123, 9.77261, 0.0, 0.993075 ) }
    axon_0 { pt3dadd( 36.4794, 16.3784, 0.0, 0.993075 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 74/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 20.5182, 8.35899, -10.8807, 1.47 ) }
    dend_43 { pt3dadd( 21.0573, 8.58173, -11.8142, 1.47 ) }
    dend_43 { pt3dadd( 21.7229, 8.74117, -12.8935, 1.47 ) }
    dend_43 { pt3dadd( 22.4115, 8.81853, -14.0077, 1.47 ) }
    dend_43 { pt3dadd( 22.5974, 8.82231, -14.3262, 0.81 ) }
    dend_43 { pt3dadd( 22.7054, 8.82165, -14.5267, 0.81 ) }
    dend_43 { pt3dadd( 22.8029, 8.82406, -14.7225, 0.81 ) }
    dend_43 { pt3dadd( 23.1966, 8.83826, -15.6203, 1.18 ) }
    dend_43 { pt3dadd( 23.338, 8.81913, -15.9243, 1.18 ) }
    dend_43 { pt3dadd( 23.5676, 8.80458, -16.238, 1.18 ) }
    dend_43 { pt3dadd( 23.8971, 8.84897, -16.6041, 1.18 ) }
    dend_43 { pt3dadd( 24.2467, 8.90818, -16.9731, 1.18 ) }
    dend_43 { pt3dadd( 24.5413, 8.96297, -17.2961, 1.18 ) }
    dend_43 { pt3dadd( 25.194, 9.12725, -18.0667, 0.73 ) }
    dend_43 { pt3dadd( 25.9365, 9.36002, -18.9923, 1.03 ) }
    dend_43 { pt3dadd( 26.2723, 9.47665, -19.4173, 1.03 ) }
    dend_43 { pt3dadd( 26.6017, 9.55786, -19.8005, 1.1 ) }
    dend_43 { pt3dadd( 27.156, 9.60506, -20.3964, 1.1 ) }
    dend_43 { pt3dadd( 27.6226, 9.57723, -20.8575, 1.1 ) }
    dend_43 { pt3dadd( 28.0816, 9.48087, -21.1926, 1.1 ) }
    dend_43 { pt3dadd( 28.3803, 9.40293, -21.3816, 1.1 ) }
    dend_43 { pt3dadd( 29.2256, 9.23585, -21.9535, 1.1 ) }
    dend_43 { pt3dadd( 30.3358, 9.10545, -22.7606, 0.66 ) }
    dend_43 { pt3dadd( 31.1742, 9.05709, -23.5786, 0.81 ) }
    dend_43 { pt3dadd( 31.6424, 9.0507, -24.1309, 1.4 ) }
    dend_43 { pt3dadd( 32.2678, 9.0562, -24.9453, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( 33.2595, 9.10302, -26.3651, 0.66 ) }
    dend_43 { pt3dadd( 33.9915, 9.18613, -27.4946, 2.79 ) }
    dend_43 { pt3dadd( 35.5072, 9.48398, -29.9853, 0.88 ) }
    dend_43 { pt3dadd( 36.0087, 9.62873, -30.8538, 0.95 ) }
    dend_43 { pt3dadd( 36.617, 9.85944, -31.9396, 2.42 ) }
    dend_43 { pt3dadd( 37.3417, 10.2127, -33.217, 0.95 ) }
    dend_43 { pt3dadd( 37.7527, 10.4561, -33.9688, 1.69 ) }
    dend_43 { pt3dadd( 38.6403, 11.0262, -35.5433, 0.66 ) }
    dend_43 { pt3dadd( 39.124, 11.3266, -36.316, 1.62 ) }
    dend_43 { pt3dadd( 39.522, 11.5681, -36.9532, 1.62 ) }
    dend_43 { pt3dadd( 40.0743, 11.8923, -37.8239, 0.88 ) }
    dend_43 { pt3dadd( 41.0023, 12.3031, -39.1353, 0.88 ) }
    dend_43 { pt3dadd( 41.4423, 12.4101, -39.6981, 1.62 ) }
    dend_43 { pt3dadd( 42.165, 12.4475, -40.5092, 0.66 ) }
    dend_43 { pt3dadd( 42.4669, 12.4321, -40.8279, 0.29 ) }
    dend_43 { pt3dadd( 43.2299, 12.3573, -41.5819, 1.47 ) }
    dend_43 { pt3dadd( 44.1695, 12.2611, -42.4266, 0.07 ) }
    dend_43 { pt3dadd( 45.1653, 12.2465, -43.2322, 1.47 ) }
    dend_43 { pt3dadd( 45.467, 12.2684, -43.4732, 1.47 ) }
    dend_43 { pt3dadd( 46.082, 12.3599, -43.9526, 0.07 ) }
    dend_43 { pt3dadd( 46.5907, 12.4496, -44.3211, 1.32 ) }
    dend_43 { pt3dadd( 46.892, 12.5103, -44.5101, 1.32 ) }
    dend_43 { pt3dadd( 47.9042, 12.8058, -45.1181, 0.22 ) }
    dend_43 { pt3dadd( 48.5228, 13.0492, -45.5635, 1.84 ) }
    dend_43 { pt3dadd( 48.6947, 13.1354, -45.7229, 2.2 ) }
    dend_43 { pt3dadd( 49.651, 13.7095, -46.8553, 0.22 ) }
    dend_43 { pt3dadd( 50.1068, 14.0046, -47.4922, 1.1 ) }
    dend_43 { pt3dadd( 51.0113, 14.5982, -48.882, 1.47 ) }
    dend_43 { pt3dadd( 51.9, 15.1713, -50.3926, 2.57 ) }
    dend_43 { pt3dadd( 52.5437, 15.5712, -51.5852, 2.57 ) }
    dend_43 { pt3dadd( 53.6683, 16.1918, -53.7815, 0.73 ) }
    dend_43 { pt3dadd( 54.1343, 16.4223, -54.7626, 0.15 ) }
    dend_43 { pt3dadd( 54.3032, 16.4847, -55.1092, 0.15 ) }
    dend_43 { pt3dadd( 54.6495, 16.5512, -55.7101, 1.91 ) }
    dend_43 { pt3dadd( 54.8569, 16.5822, -56.0364, 1.91 ) }
    dend_43 { pt3dadd( 55.5038, 16.6682, -56.975, 1.1 ) }
    dend_43 { pt3dadd( 56.2866, 16.8014, -58.0649, 0.15 ) }
    dend_43 { pt3dadd( 56.4179, 16.8358, -58.238, 0.15 ) }
    dend_43 { pt3dadd( 57.2167, 17.0868, -59.2852, 1.69 ) }
    dend_43 { pt3dadd( 58.1879, 17.4064, -60.5406, 1.25 ) }
    dend_43 { pt3dadd( 58.6485, 17.5591, -61.1302, 1.69 ) }
    dend_43 { pt3dadd( 59.4302, 17.8357, -62.1538, 0.59 ) }
    dend_43 { pt3dadd( 59.9457, 18.0257, -62.8386, 0.29 ) }
    dend_43 { pt3dadd( 60.7738, 18.38, -63.9919, 2.42 ) }
    dend_43 { pt3dadd( 61.75, 18.8171, -65.3668, 0.88 ) }
    dend_43 { pt3dadd( 61.9373, 18.9034, -65.6228, 1.1 ) }
    dend_43 { pt3dadd( 62.5215, 19.1678, -66.427, 1.25 ) }
    dend_43 { pt3dadd( 63.0002, 19.3488, -67.03, 1.4 ) }
    dend_43 { pt3dadd( 63.9745, 19.6163, -68.1398, 0.66 ) }
    dend_43 { pt3dadd( 64.6378, 19.7344, -68.7846, 1.1 ) }
    dend_43 { pt3dadd( 65.3398, 19.7756, -69.3948, 0.29 ) }
    dend_43 { pt3dadd( 66.0771, 19.7531, -69.9746, 1.91 ) }
    dend_43 { pt3dadd( 67.0819, 19.6508, -70.6665, 0.22 ) }
    dend_43 { pt3dadd( 67.9948, 19.5107, -71.2414, 0.81 ) }
    dend_43 { pt3dadd( 68.4803, 19.4206, -71.5184, 0.88 ) }
    dend_43 { pt3dadd( 69.1924, 19.2752, -71.9171, 0.07 ) }
    dend_43 { pt3dadd( 69.6664, 19.1713, -72.1864, 0.07 ) }
    dend_43 { pt3dadd( 70.4465, 18.9988, -72.6336, 1.54 ) }
    dend_43 { pt3dadd( 71.3851, 18.8143, -73.2142, 0.07 ) }
    dend_43 { pt3dadd( 71.9689, 18.7225, -73.6119, 1.1 ) }
    dend_43 { pt3dadd( 72.4608, 18.6557, -73.9697, 1.18 ) }
    dend_43 { pt3dadd( 73.1894, 18.5566, -74.5216, 0.29 ) }
    dend_43 { pt3dadd( 73.8231, 18.4721, -75.0427, 1.03 ) }
    dend_43 { pt3dadd( 74.5658, 18.3847, -75.7024, 1.69 ) }
    dend_43 { pt3dadd( 75.4008, 18.3132, -76.5021, 0.37 ) }
    dend_43 { pt3dadd( 76.023, 18.277, -77.1369, 0.07 ) }
    dend_43 { pt3dadd( 76.8539, 18.2684, -78.0014, 1.62 ) }
    dend_43 { pt3dadd( 77.7036, 18.3106, -78.9024, 0.22 ) }
    dend_43 { pt3dadd( 78.3988, 18.3936, -79.6485, 0.51 ) }
    dend_43 { pt3dadd( 78.931, 18.5174, -80.199, 0.95 ) }
    dend_43 { pt3dadd( 79.5461, 18.7952, -80.8086, 1.47 ) }
    dend_43 { pt3dadd( 80.041, 19.1439, -81.2849, 1.47 ) }
    dend_43 { pt3dadd( 80.8592, 19.8412, -82.0393, 0.22 ) }
    dend_43 { pt3dadd( 81.2017, 20.1532, -82.3279, 0.22 ) }
    dend_43 { pt3dadd( 81.8783, 20.8214, -82.8957, 1.84 ) }
    dend_43 { pt3dadd( 82.7652, 21.7499, -83.6975, 0.44 ) }
    dend_43 { pt3dadd( 83.525, 22.5964, -84.4869, 0.22 ) }
    dend_43 { pt3dadd( 83.8746, 22.9727, -84.8916, 0.22 ) }
    dend_43 { pt3dadd( 84.1151, 23.205, -85.1723, 0.66 ) }
    dend_43 { pt3dadd( 84.8204, 23.8083, -86.0054, 0.66 ) }
    dend_43 { pt3dadd( 85.6719, 24.4342, -87.0013, 1.91 ) }
    dend_43 { pt3dadd( 86.5978, 25.0233, -88.1017, 2.42 ) }
    dend_43 { pt3dadd( 87.4967, 25.5036, -89.1872, 2.28 ) }
    dend_43 { pt3dadd( 88.2599, 25.8362, -90.0914, 0.66 ) }
    dend_43 { pt3dadd( 88.4528, 25.8994, -90.325, 0.22 ) }
    dend_43 { pt3dadd( 88.9121, 25.9893, -90.8891, 0.22 ) }
    dend_43 { pt3dadd( 89.4715, 26.0202, -91.649, 0.73 ) }
    dend_43 { pt3dadd( 89.9818, 25.9493, -92.5823, 0.66 ) }
    dend_43 { pt3dadd( 90.1989, 25.8553, -93.304, 0.66 ) }
    dend_43 { pt3dadd( 90.3001, 25.7736, -94.0147, 0.66 ) }
    dend_43 { pt3dadd( 90.3603, 25.7788, -94.9124, 0.66 ) }
    dend_43 { pt3dadd( 90.3688, 25.8439, -95.3044, 0.66 ) }
    dend_43 { pt3dadd( 90.4133, 26.1677, -96.0895, 0.66 ) }
    dend_43 { pt3dadd( 90.506, 26.5153, -96.499, 0.66 ) }
    dend_43 { pt3dadd( 90.6618, 26.8372, -96.7205, 0.66 ) }
    dend_43 { pt3dadd( 91.1763, 27.6385, -97.0722, 0.73 ) }
    dend_43 { pt3dadd( 91.6254, 28.2578, -97.2919, 0.59 ) }
    dend_43 { pt3dadd( 91.9685, 28.6955, -97.4428, 0.29 ) }
    dend_43 { pt3dadd( 92.7544, 29.6312, -97.7511, 0.29 ) }
    dend_43 { pt3dadd( 93.1875, 30.0968, -97.9234, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_43 { pt3dadd( 94.2441, 31.105, -98.3495, 0.29 ) }
    dend_43 { pt3dadd( 94.7274, 31.4999, -98.5431, 0.29 ) }
    dend_43 { pt3dadd( 95.3061, 31.9175, -98.8197, 0.29 ) }
    dend_43 { pt3dadd( 96.0788, 32.3909, -99.2531, 1.4 ) }
    dend_43 { pt3dadd( 96.9411, 32.7895, -99.8226, 0.29 ) }
    dend_43 { pt3dadd( 97.384, 32.9183, -100.132, 0.29 ) }
    dend_43 { pt3dadd( 98.0275, 32.9494, -100.593, 0.29 ) }
    dend_43 { pt3dadd( 98.9139, 32.9174, -101.259, 0.15 ) }
    dend_43 { pt3dadd( 99.3166, 32.8509, -101.573, 0.15 ) }
    dend_43 { pt3dadd( 100.045, 32.5558, -102.19, 0.15 ) }
    dend_43 { pt3dadd( 100.804, 31.9933, -102.854, 0.15 ) }
    dend_43 { pt3dadd( 101.405, 31.344, -103.358, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 20.5182, 8.35899, -10.8807, 1.69 ) }
    dend_38 { pt3dadd( 21.2495, 9.95937, -11.0832, 1.69 ) }
    dend_38 { pt3dadd( 21.7674, 10.8422, -11.2067, 1.4 ) }
    dend_38 { pt3dadd( 22.5186, 11.9083, -11.3599, 1.4 ) }
    dend_38 { pt3dadd( 22.9785, 12.489, -11.446, 1.32 ) }
    dend_38 { pt3dadd( 23.628, 13.2857, -11.5592, 0.95 ) }
    dend_38 { pt3dadd( 24.4645, 14.3121, -11.7049, 0.66 ) }
    dend_38 { pt3dadd( 25.2373, 15.137, -11.8446, 1.47 ) }
    dend_38 { pt3dadd( 25.8719, 15.758, -11.9754, 1.91 ) }
    dend_38 { pt3dadd( 26.7601, 16.5778, -12.2058, 0.66 ) }
    dend_38 { pt3dadd( 27.3651, 17.1471, -12.3985, 0.37 ) }
    dend_38 { pt3dadd( 27.6295, 17.3973, -12.49, 0.37 ) }
    dend_38 { pt3dadd( 28.4305, 18.1305, -12.7599, 1.1 ) }
    dend_38 { pt3dadd( 29.1268, 18.7657, -12.9744, 1.25 ) }
    dend_38 { pt3dadd( 29.9646, 19.5131, -13.1946, 0.95 ) }
    dend_38 { pt3dadd( 30.8489, 20.2732, -13.3866, 1.76 ) }
    dend_38 { pt3dadd( 32.0153, 21.2833, -13.5769, 2.06 ) }
    dend_38 { pt3dadd( 33.3136, 22.4517, -13.7127, 2.57 ) }
    dend_38 { pt3dadd( 33.9802, 23.0926, -13.7364, 2.57 ) }
    dend_38 { pt3dadd( 35.3007, 24.468, -13.7114, 0.44 ) }
    dend_38 { pt3dadd( 36.0151, 25.2782, -13.6961, 0.22 ) }
    dend_38 { pt3dadd( 36.5793, 25.9699, -13.6971, 0.22 ) }
    dend_38 { pt3dadd( 36.9857, 26.5166, -13.7217, 0.22 ) }
    dend_38 { pt3dadd( 37.4254, 27.1447, -13.7861, 1.03 ) }
    dend_38 { pt3dadd( 37.9765, 27.9457, -13.9122, 1.76 ) }
    dend_38 { pt3dadd( 38.8311, 29.2137, -14.2113, 1.54 ) }
    dend_38 { pt3dadd( 39.5066, 30.1982, -14.5148, 1.54 ) }
    dend_38 { pt3dadd( 40.1641, 31.1175, -14.8436, 1.84 ) }
    dend_38 { pt3dadd( 40.7062, 31.8652, -15.1212, 1.98 ) }
    dend_38 { pt3dadd( 40.9811, 32.2395, -15.2623, 1.98 ) }
    dend_38 { pt3dadd( 41.7003, 33.1966, -15.6191, 0.95 ) }
    dend_38 { pt3dadd( 42.617, 34.3911, -16.0409, 0.59 ) }
    dend_38 { pt3dadd( 43.154, 35.0578, -16.2802, 0.81 ) }
    dend_38 { pt3dadd( 43.714, 35.7035, -16.5066, 0.88 ) }
    dend_38 { pt3dadd( 44.6101, 36.6241, -16.8324, 0.59 ) }
    dend_38 { pt3dadd( 45.2323, 37.1837, -17.0404, 1.1 ) }
    dend_38 { pt3dadd( 46.1718, 37.9339, -17.2963, 2.06 ) }
    dend_38 { pt3dadd( 47.0406, 38.5448, -17.4841, 1.4 ) }
    dend_38 { pt3dadd( 47.9511, 39.1382, -17.6464, 0.66 ) }
    dend_38 { pt3dadd( 48.8492, 39.6936, -17.7973, 0.29 ) }
    dend_38 { pt3dadd( 50.1416, 40.4387, -17.9798, 1.91 ) }
    dend_38 { pt3dadd( 50.8416, 40.8218, -18.0603, 2.57 ) }
    dend_38 { pt3dadd( 51.8496, 41.3266, -18.1387, 2.28 ) }
    dend_38 { pt3dadd( 52.9559, 41.8514, -18.1551, 1.69 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 56/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 11.8574, -11.3212, -7.10371, 1.1 ) }
    dend_34 { pt3dadd( 13.4397, -10.8536, -7.64947, 1.1 ) }
    dend_34 { pt3dadd( 14.4733, -10.5192, -8.03559, 0.81 ) }
    dend_34 { pt3dadd( 15.1968, -10.2966, -8.32526, 0.95 ) }
    dend_34 { pt3dadd( 16.4908, -9.94046, -8.84552, 2.06 ) }
    dend_34 { pt3dadd( 17.6617, -9.63315, -9.30307, 1.18 ) }
    dend_34 { pt3dadd( 18.5644, -9.40818, -9.64652, 0.73 ) }
    dend_34 { pt3dadd( 19.0126, -9.29868, -9.81811, 0.95 ) }
    dend_34 { pt3dadd( 19.7571, -9.12033, -10.0949, 1.18 ) }
    dend_34 { pt3dadd( 20.8153, -8.89616, -10.479, 0.51 ) }
    dend_34 { pt3dadd( 21.4553, -8.7847, -10.713, 0.51 ) }
    dend_34 { pt3dadd( 22.1197, -8.72364, -10.936, 1.84 ) }
    dend_34 { pt3dadd( 23.2828, -8.65565, -11.2552, 2.5 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 11.8574, -11.3212, -7.10371, 1.98 ) }
    dend_31 { pt3dadd( 11.7657, -12.8264, -7.83316, 1.98 ) }
    dend_31 { pt3dadd( 11.7055, -13.8141, -8.31181, 1.62 ) }
    dend_31 { pt3dadd( 11.5823, -15.8351, -9.29117, 1.18 ) }
    dend_31 { pt3dadd( 11.453, -17.9559, -10.3189, 1.76 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.46222, -18.247, 0.132845, 2.06 ) }
    dend_23 { pt3dadd( -2.32993, -19.4653, -0.326403, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.46222, -18.247, 0.132845, 1.03 ) }
    dend_18 { pt3dadd( -1.19117, -19.8462, 0.480666, 1.03 ) }
    dend_18 { pt3dadd( -0.980329, -21.0902, 0.751227, 1.03 ) }
    dend_18 { pt3dadd( -0.805749, -22.1203, 0.975264, 1.03 ) }
    dend_18 { pt3dadd( -0.631279, -23.1497, 1.19915, 1.25 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 81/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -11.1225, 3.83384, -1.17447, 0.95 ) }
    dend_16 { pt3dadd( -11.3633, 3.88514, -0.691104, 0.95 ) }
    dend_16 { pt3dadd( -12.5218, 4.07599, 0.930798, 0.95 ) }
    dend_16 { pt3dadd( -13.1326, 4.16599, 1.63249, 1.1 ) }
    dend_16 { pt3dadd( -14.2175, 4.31988, 2.71565, 1.25 ) }
    dend_16 { pt3dadd( -16.6133, 4.66254, 4.86697, 0.95 ) }
    dend_16 { pt3dadd( -17.8891, 4.85823, 5.91908, 0.95 ) }
    dend_16 { pt3dadd( -19.7072, 5.19098, 7.20222, 0.66 ) }
    dend_16 { pt3dadd( -20.402, 5.33013, 7.62722, 0.37 ) }
    dend_16 { pt3dadd( -21.5588, 5.58629, 8.3062, 1.18 ) }
    dend_16 { pt3dadd( -22.1691, 5.72732, 8.63847, 1.54 ) }
    dend_16 { pt3dadd( -23.6502, 6.07146, 9.43785, 0.73 ) }
    dend_16 { pt3dadd( -25.0024, 6.38147, 10.3321, 0.66 ) }
    dend_16 { pt3dadd( -26.1195, 6.63033, 11.1029, 0.51 ) }
    dend_16 { pt3dadd( -27.152, 6.84489, 11.8607, 0.81 ) }
    dend_16 { pt3dadd( -27.9878, 6.99917, 12.4884, 1.18 ) }
    dend_16 { pt3dadd( -29.0945, 7.19987, 13.3387, 0.88 ) }
    dend_16 { pt3dadd( -29.6953, 7.32134, 13.8185, 1.32 ) }
    dend_16 { pt3dadd( -31.0417, 7.63376, 14.9739, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -32.2794, 8.02705, 16.2529, 0.95 ) }
    dend_16 { pt3dadd( -33.0002, 8.32795, 17.2054, 0.95 ) }
    dend_16 { pt3dadd( -33.4149, 8.54682, 17.8895, 0.95 ) }
    dend_16 { pt3dadd( -33.9421, 8.82814, 18.9177, 0.95 ) }
    dend_16 { pt3dadd( -34.3504, 8.99553, 19.9153, 0.95 ) }
    dend_16 { pt3dadd( -34.8196, 9.14837, 21.5404, 0.95 ) }
    dend_16 { pt3dadd( -35.2036, 9.17889, 23.0244, 0.95 ) }
    dend_16 { pt3dadd( -35.4777, 9.09926, 24.213, 0.73 ) }
    dend_16 { pt3dadd( -35.7987, 8.90154, 25.2412, 1.03 ) }
    dend_16 { pt3dadd( -36.0846, 8.71676, 25.8455, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 10/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.1225, 3.83384, -1.17447, 2.13 ) }
    dend_9 { pt3dadd( -11.8602, 4.21766, -1.40027, 2.13 ) }
    dend_9 { pt3dadd( -12.9731, 4.79666, -1.74089, 2.13 ) }
    dend_9 { pt3dadd( -13.8134, 5.23378, -1.99806, 1.84 ) }
    dend_9 { pt3dadd( -15.0049, 5.85366, -2.36274, 2.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.44478, 0.801755, 11.4744, 1.62 ) }
    dend_7 { pt3dadd( 10.6202, 1.08396, 12.374, 1.62 ) }
    dend_7 { pt3dadd( 11.931, 1.39077, 13.3261, 0.88 ) }
    dend_7 { pt3dadd( 13.0737, 1.62012, 14.0997, 1.32 ) }
    dend_7 { pt3dadd( 13.7102, 1.75789, 14.4792, 2.06 ) }
    dend_7 { pt3dadd( 14.7997, 2.01561, 15.0505, 1.47 ) }
    dend_7 { pt3dadd( 15.8396, 2.27238, 15.5538, 1.76 ) }
    dend_7 { pt3dadd( 16.8304, 2.55117, 15.977, 1.4 ) }
    dend_7 { pt3dadd( 17.6606, 2.8081, 16.2488, 0.88 ) }
    dend_7 { pt3dadd( 18.7772, 3.20663, 16.5332, 0.81 ) }
    dend_7 { pt3dadd( 19.6116, 3.5084, 16.7119, 0.66 ) }
    dend_7 { pt3dadd( 20.5462, 3.83481, 16.8867, 0.81 ) }
    dend_7 { pt3dadd( 21.6119, 4.18748, 17.0653, 1.69 ) }
    dend_7 { pt3dadd( 22.9182, 4.61834, 17.2664, 1.69 ) }
    dend_7 { pt3dadd( 24.2358, 5.05076, 17.4695, 2.2 ) }
    dend_7 { pt3dadd( 25.5886, 5.43955, 17.6773, 0.73 ) }
    dend_7 { pt3dadd( 26.4944, 5.68791, 17.786, 0.59 ) }
    dend_7 { pt3dadd( 27.5197, 5.98465, 17.8796, 0.66 ) }
    dend_7 { pt3dadd( 28.3986, 6.22327, 17.9375, 0.73 ) }
    dend_7 { pt3dadd( 28.9161, 6.36219, 17.9775, 0.59 ) }
    dend_7 { pt3dadd( 29.923, 6.65525, 18.046, 0.59 ) }
    dend_7 { pt3dadd( 30.4979, 6.8608, 18.0842, 0.51 ) }
    dend_7 { pt3dadd( 31.8933, 7.42161, 18.1769, 0.51 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 9.44478, 0.801755, 11.4744, 0.81 ) }
    dend_6 { pt3dadd( 10.7158, -0.305565, 12.2023, 0.81 ) }
    dend_6 { pt3dadd( 11.9008, -1.29369, 12.9845, 0.66 ) }
    dend_6 { pt3dadd( 12.912, -2.14166, 13.6882, 0.73 ) }
    dend_6 { pt3dadd( 13.6653, -2.79669, 14.2477, 0.81 ) }
    dend_6 { pt3dadd( 14.2367, -3.30943, 14.6827, 0.73 ) }
    dend_6 { pt3dadd( 14.865, -3.87678, 15.1426, 0.81 ) }
    dend_6 { pt3dadd( 15.6664, -4.58818, 15.7282, 0.81 ) }
    dend_6 { pt3dadd( 16.1096, -4.97975, 16.0477, 0.73 ) }
    dend_6 { pt3dadd( 16.7808, -5.56999, 16.5207, 0.44 ) }
    dend_6 { pt3dadd( 17.5368, -6.22596, 17.0088, 1.84 ) }
    dend_6 { pt3dadd( 18.5784, -7.13966, 17.6629, 0.95 ) }
    dend_6 { pt3dadd( 19.3091, -7.81298, 18.1036, 0.44 ) }
    dend_6 { pt3dadd( 19.7128, -8.20993, 18.3437, 0.37 ) }
    dend_6 { pt3dadd( 20.2902, -8.76369, 18.6931, 0.81 ) }
    dend_6 { pt3dadd( 20.691, -9.14562, 18.9358, 1.32 ) }
    dend_6 { pt3dadd( 21.2968, -9.76131, 19.3512, 1.47 ) }
    dend_6 { pt3dadd( 21.8091, -10.3839, 19.7989, 1.47 ) }
    dend_6 { pt3dadd( 22.3078, -11.138, 20.3086, 0.07 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 57/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.2165, 5.64274, 11.2365, 1.47 ) }
    dend_2 { pt3dadd( -12.7179, 7.14709, 11.6425, 1.47 ) }
    dend_2 { pt3dadd( -14.5666, 8.27408, 11.9521, 1.1 ) }
    dend_2 { pt3dadd( -15.8885, 9.07985, 12.1735, 1.1 ) }
    dend_2 { pt3dadd( -17.679, 10.1714, 12.4734, 1.1 ) }
    dend_2 { pt3dadd( -18.933, 10.9357, 12.6834, 1.69 ) }
    dend_2 { pt3dadd( -19.4805, 11.2695, 12.7751, 2.35 ) }
    dend_2 { pt3dadd( -21.2649, 12.4616, 13.1073, 2.35 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -10.2165, 5.64274, 11.2365, 1.32 ) }
    dend_1 { pt3dadd( -11.9542, 5.80339, 11.3806, 1.32 ) }
    dend_1 { pt3dadd( -13.0534, 5.98626, 11.3655, 0.88 ) }
    dend_1 { pt3dadd( -13.6082, 6.11052, 11.3338, 0.95 ) }
    dend_1 { pt3dadd( -14.1717, 6.26664, 11.2903, 1.03 ) }
    dend_1 { pt3dadd( -14.6723, 6.4111, 11.2635, 1.32 ) }
    dend_1 { pt3dadd( -15.8403, 6.77066, 11.2374, 2.13 ) }
    dend_1 { pt3dadd( -17.0293, 7.21865, 11.2342, 0.73 ) }
    dend_1 { pt3dadd( -17.8601, 7.53781, 11.2675, 0.59 ) }
    dend_1 { pt3dadd( -18.8839, 7.91058, 11.3422, 0.59 ) }
    dend_1 { pt3dadd( -19.5511, 8.11095, 11.4177, 0.88 ) }
    dend_1 { pt3dadd( -20.4361, 8.3266, 11.5639, 1.1 ) }
    dend_1 { pt3dadd( -21.3593, 8.48552, 11.774, 0.88 ) }
    dend_1 { pt3dadd( -22.7007, 8.59876, 12.0928, 0.81 ) }
    dend_1 { pt3dadd( -23.8341, 8.60785, 12.3355, 0.81 ) }
    dend_1 { pt3dadd( -24.9646, 8.5587, 12.5546, 0.88 ) }
    dend_1 { pt3dadd( -25.9894, 8.47602, 12.701, 0.88 ) }
    dend_1 { pt3dadd( -27.0023, 8.34451, 12.8246, 0.44 ) }
    dend_1 { pt3dadd( -28.0234, 8.17426, 12.9209, 0.44 ) }
    dend_1 { pt3dadd( -28.6619, 8.05457, 12.9818, 0.66 ) }
    dend_1 { pt3dadd( -29.3818, 7.93479, 13.0541, 0.81 ) }
    dend_1 { pt3dadd( -30.5794, 7.75108, 13.1399, 1.1 ) }
    dend_1 { pt3dadd( -31.0434, 7.67343, 13.1619, 1.1 ) }
    dend_1 { pt3dadd( -31.9498, 7.52578, 13.2113, 0.66 ) }
    dend_1 { pt3dadd( -32.8678, 7.37193, 13.2741, 0.59 ) }
    dend_1 { pt3dadd( -33.5296, 7.22195, 13.3066, 0.66 ) }
    dend_1 { pt3dadd( -34.459, 6.93995, 13.3119, 0.37 ) }
    dend_1 { pt3dadd( -35.0742, 6.70526, 13.2964, 0.37 ) }
    dend_1 { pt3dadd( -35.708, 6.43767, 13.2593, 1.1 ) }
    dend_1 { pt3dadd( -36.088, 6.24971, 13.228, 1.03 ) }
    dend_1 { pt3dadd( -36.8465, 5.79841, 13.1166, 0.22 ) }
    dend_1 { pt3dadd( -37.367, 5.45594, 13.0251, 0.44 ) }
    dend_1 { pt3dadd( -37.7839, 5.18958, 12.9387, 0.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 98/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.4794, 16.3784, 0.0, 0.797956 ) }
    axon_1 { pt3dadd( 49.9466, 22.9842, 0.0, 0.797956 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    axon_1 { pt3dadd( 63.4137, 29.5901, 0.0, 0.797956 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 1/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 52.9559, 41.8514, -18.1551, 1.03 ) }
    dend_40 { pt3dadd( 53.0882, 42.7687, -18.2347, 1.03 ) }
    dend_40 { pt3dadd( 53.1831, 43.8037, -18.4949, 0.51 ) }
    dend_40 { pt3dadd( 53.2317, 44.3865, -18.6736, 0.51 ) }
    dend_40 { pt3dadd( 53.3326, 45.2591, -18.9555, 1.18 ) }
    dend_40 { pt3dadd( 53.4403, 45.9418, -19.2047, 1.62 ) }
    dend_40 { pt3dadd( 53.5791, 46.5688, -19.456, 1.91 ) }
    dend_40 { pt3dadd( 53.9159, 47.7437, -20.0729, 0.73 ) }
    dend_40 { pt3dadd( 54.0746, 48.1205, -20.312, 0.66 ) }
    dend_40 { pt3dadd( 54.3837, 48.6477, -20.6588, 0.81 ) }
    dend_40 { pt3dadd( 54.7878, 49.1801, -20.9956, 0.59 ) }
    dend_40 { pt3dadd( 55.2743, 49.7246, -21.315, 1.1 ) }
    dend_40 { pt3dadd( 55.7318, 50.2004, -21.5694, 2.06 ) }
    dend_40 { pt3dadd( 56.2612, 50.7319, -21.8122, 2.06 ) }
    dend_40 { pt3dadd( 56.7699, 51.271, -22.0434, 1.62 ) }
    dend_40 { pt3dadd( 57.2079, 51.7773, -22.2144, 0.81 ) }
    dend_40 { pt3dadd( 57.8954, 52.6368, -22.4499, 0.37 ) }
    dend_40 { pt3dadd( 58.3448, 53.2298, -22.6052, 0.37 ) }
    dend_40 { pt3dadd( 58.6285, 53.6021, -22.6991, 1.32 ) }
    dend_40 { pt3dadd( 59.0632, 54.1418, -22.8453, 2.2 ) }
    dend_40 { pt3dadd( 59.7999, 54.9544, -23.1013, 1.76 ) }
    dend_40 { pt3dadd( 60.7029, 55.8624, -23.4083, 0.07 ) }
    dend_40 { pt3dadd( 61.2804, 56.3935, -23.5983, 1.1 ) }
    dend_40 { pt3dadd( 61.6707, 56.7219, -23.7157, 2.35 ) }
    dend_40 { pt3dadd( 62.5206, 57.4022, -23.9494, 1.69 ) }
    dend_40 { pt3dadd( 63.3138, 58.0095, -24.1495, 0.37 ) }
    dend_40 { pt3dadd( 63.9626, 58.4878, -24.306, 0.59 ) }
    dend_40 { pt3dadd( 64.6951, 59.0178, -24.4411, 0.59 ) }
    dend_40 { pt3dadd( 65.5355, 59.6275, -24.5811, 2.06 ) }
    dend_40 { pt3dadd( 66.0921, 60.0447, -24.6715, 2.06 ) }
    dend_40 { pt3dadd( 67.0133, 60.7288, -24.8131, 1.18 ) }
    dend_40 { pt3dadd( 67.6566, 61.193, -24.9147, 0.59 ) }
    dend_40 { pt3dadd( 68.6018, 61.8523, -25.0848, 0.29 ) }
    dend_40 { pt3dadd( 69.8298, 62.7134, -25.3328, 2.86 ) }
    dend_40 { pt3dadd( 70.9582, 63.5261, -25.5883, 0.29 ) }
    dend_40 { pt3dadd( 71.5425, 63.9649, -25.7322, 0.29 ) }
    dend_40 { pt3dadd( 72.1328, 64.4543, -25.8891, 0.44 ) }
    dend_40 { pt3dadd( 72.7034, 65.0024, -26.0567, 1.1 ) }
    dend_40 { pt3dadd( 73.0909, 65.4535, -26.1934, 1.98 ) }
    dend_40 { pt3dadd( 73.3149, 65.7731, -26.2805, 2.13 ) }
    dend_40 { pt3dadd( 73.601, 66.2596, -26.4029, 2.13 ) }
    dend_40 { pt3dadd( 73.9552, 66.9789, -26.5604, 2.13 ) }
    dend_40 { pt3dadd( 74.4057, 68.0634, -26.7695, 0.37 ) }
    dend_40 { pt3dadd( 74.6994, 68.8818, -26.908, 0.15 ) }
    dend_40 { pt3dadd( 74.8571, 69.393, -26.9966, 0.15 ) }
    dend_40 { pt3dadd( 75.0627, 70.2147, -27.1454, 1.1 ) }
    dend_40 { pt3dadd( 75.183, 70.813, -27.2532, 2.06 ) }
    dend_40 { pt3dadd( 75.3227, 71.8551, -27.4331, 0.88 ) }
    dend_40 { pt3dadd( 75.356, 72.4178, -27.5206, 0.15 ) }
    dend_40 { pt3dadd( 75.377, 72.9683, -27.6065, 0.22 ) }
    dend_40 { pt3dadd( 75.4025, 73.5934, -27.718, 0.22 ) }
    dend_40 { pt3dadd( 75.4356, 74.107, -27.8156, 0.22 ) }
    dend_40 { pt3dadd( 75.5226, 74.8029, -27.9546, 1.1 ) }
    dend_40 { pt3dadd( 75.5807, 75.1251, -28.0317, 1.32 ) }
    dend_40 { pt3dadd( 75.6967, 75.6238, -28.1577, 0.81 ) }
    dend_40 { pt3dadd( 75.8496, 76.186, -28.301, 0.22 ) }
    dend_40 { pt3dadd( 75.9914, 76.6234, -28.4147, 0.22 ) }
    dend_40 { pt3dadd( 76.2478, 77.3893, -28.6451, 1.54 ) }
    dend_40 { pt3dadd( 76.4497, 77.9882, -28.8398, 1.54 ) }
    dend_40 { pt3dadd( 76.7383, 78.8658, -29.1254, 0.15 ) }
    dend_40 { pt3dadd( 76.9285, 79.4626, -29.3143, 0.07 ) }
    dend_40 { pt3dadd( 77.1101, 80.0008, -29.4809, 0.81 ) }
    dend_40 { pt3dadd( 77.4514, 80.9794, -29.7742, 0.15 ) }
    dend_40 { pt3dadd( 77.7461, 81.7582, -29.9944, 2.2 ) }
    dend_40 { pt3dadd( 77.8684, 82.0764, -30.0721, 2.13 ) }
    dend_40 { pt3dadd( 78.0678, 82.5602, -30.1874, 1.84 ) }
    dend_40 { pt3dadd( 78.4514, 83.4139, -30.3729, 0.88 ) }
    dend_40 { pt3dadd( 78.7413, 84.0072, -30.4943, 0.22 ) }
    dend_40 { pt3dadd( 78.9381, 84.3542, -30.5523, 0.22 ) }
    dend_40 { pt3dadd( 79.2254, 84.8153, -30.6324, 0.44 ) }
    dend_40 { pt3dadd( 79.6358, 85.4411, -30.7445, 0.07 ) }
    dend_40 { pt3dadd( 80.0396, 86.0289, -30.8528, 1.32 ) }
    dend_40 { pt3dadd( 80.2722, 86.3426, -30.9154, 1.62 ) }
    dend_40 { pt3dadd( 80.7117, 86.8981, -31.0312, 1.69 ) }
    dend_40 { pt3dadd( 81.3561, 87.6623, -31.1728, 0.22 ) }
    dend_40 { pt3dadd( 81.7292, 88.0576, -31.2413, 0.29 ) }
    dend_40 { pt3dadd( 82.2852, 88.5845, -31.3207, 0.29 ) }
    dend_40 { pt3dadd( 82.7533, 88.9863, -31.3738, 0.95 ) }
    dend_40 { pt3dadd( 83.2427, 89.3682, -31.4173, 1.54 ) }
    dend_40 { pt3dadd( 84.067, 89.9544, -31.4386, 1.32 ) }
    dend_40 { pt3dadd( 84.9916, 90.5724, -31.3989, 0.22 ) }
    dend_40 { pt3dadd( 85.6933, 91.0376, -31.3424, 0.22 ) }
    dend_40 { pt3dadd( 86.1212, 91.3168, -31.2927, 0.81 ) }
    dend_40 { pt3dadd( 86.6124, 91.6481, -31.2223, 1.1 ) }
    dend_40 { pt3dadd( 87.5108, 92.2833, -31.0657, 0.66 ) }
    dend_40 { pt3dadd( 88.0352, 92.7051, -30.948, 1.25 ) }
    dend_40 { pt3dadd( 88.722, 93.3182, -30.7903, 2.2 ) }
    dend_40 { pt3dadd( 89.0257, 93.6004, -30.7383, 2.5 ) }
    dend_40 { pt3dadd( 89.2785, 93.8402, -30.7089, 2.5 ) }
    dend_40 { pt3dadd( 90.091, 94.6297, -30.6617, 0.59 ) }
    dend_40 { pt3dadd( 90.9781, 95.5175, -30.6701, 0.22 ) }
    dend_40 { pt3dadd( 91.744, 96.3538, -30.7127, 0.22 ) }
    dend_40 { pt3dadd( 92.4466, 97.2293, -30.7963, 0.22 ) }
    dend_40 { pt3dadd( 92.7982, 97.7378, -30.8717, 1.62 ) }
    dend_40 { pt3dadd( 92.919, 97.947, -30.9156, 2.06 ) }
    dend_40 { pt3dadd( 93.0754, 98.2992, -31.0145, 2.06 ) }
    dend_40 { pt3dadd( 93.4999, 99.5596, -31.4283, 0.29 ) }
    dend_40 { pt3dadd( 93.681, 100.343, -31.6783, 0.95 ) }
    dend_40 { pt3dadd( 93.774, 100.911, -31.86, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_40 { pt3dadd( 93.8589, 101.532, -32.0759, 0.15 ) }
    dend_40 { pt3dadd( 93.9429, 102.208, -32.3115, 0.15 ) }
    dend_40 { pt3dadd( 94.0059, 102.696, -32.4827, 1.32 ) }
    dend_40 { pt3dadd( 94.0678, 103.163, -32.6395, 1.76 ) }
    dend_40 { pt3dadd( 94.0957, 103.318, -32.6916, 1.69 ) }
    dend_40 { pt3dadd( 94.3682, 104.447, -33.1254, 0.22 ) }
    dend_40 { pt3dadd( 94.5535, 105.095, -33.3876, 0.29 ) }
    dend_40 { pt3dadd( 94.7449, 105.681, -33.6426, 1.03 ) }
    dend_40 { pt3dadd( 94.9037, 106.118, -33.8411, 1.69 ) }
    dend_40 { pt3dadd( 95.0776, 106.554, -34.0432, 1.91 ) }
    dend_40 { pt3dadd( 95.5432, 107.678, -34.5631, 0.15 ) }
    dend_40 { pt3dadd( 95.7795, 108.247, -34.8173, 0.66 ) }
    dend_40 { pt3dadd( 96.0567, 108.969, -35.1284, 0.15 ) }
    dend_40 { pt3dadd( 96.2165, 109.43, -35.3196, 1.18 ) }
    dend_40 { pt3dadd( 96.3383, 109.785, -35.4557, 1.32 ) }
    dend_40 { pt3dadd( 96.4331, 110.089, -35.5648, 1.32 ) }
    dend_40 { pt3dadd( 96.7365, 111.171, -35.9468, 0.15 ) }
    dend_40 { pt3dadd( 96.9725, 112.106, -36.2962, 1.76 ) }
    dend_40 { pt3dadd( 97.1208, 112.736, -36.5245, 1.76 ) }
    dend_40 { pt3dadd( 97.3335, 113.683, -36.8715, 0.44 ) }
    dend_40 { pt3dadd( 97.4514, 114.238, -37.0722, 0.73 ) }
    dend_40 { pt3dadd( 97.592, 114.873, -37.3014, 0.73 ) }
    dend_40 { pt3dadd( 97.6801, 115.275, -37.4433, 0.44 ) }
    dend_40 { pt3dadd( 97.8403, 116.025, -37.6931, 0.22 ) }
    dend_40 { pt3dadd( 97.9744, 116.64, -37.9016, 1.03 ) }
    dend_40 { pt3dadd( 98.0674, 117.053, -38.0461, 1.32 ) }
    dend_40 { pt3dadd( 98.3279, 117.979, -38.3579, 0.07 ) }
    dend_40 { pt3dadd( 98.6125, 118.841, -38.6562, 1.62 ) }
    dend_40 { pt3dadd( 98.7779, 119.31, -38.8214, 1.62 ) }
    dend_40 { pt3dadd( 99.1817, 120.425, -39.2413, 0.15 ) }
    dend_40 { pt3dadd( 99.2968, 120.731, -39.3574, 0.15 ) }
    dend_40 { pt3dadd( 99.5137, 121.288, -39.5629, 0.15 ) }
    dend_40 { pt3dadd( 99.7524, 121.856, -39.7613, 1.03 ) }
    dend_40 { pt3dadd( 99.9064, 122.189, -39.874, 1.98 ) }
    dend_40 { pt3dadd( 100.174, 122.721, -40.0384, 1.69 ) }
    dend_40 { pt3dadd( 100.602, 123.524, -40.259, 0.29 ) }
    dend_40 { pt3dadd( 100.967, 124.187, -40.4484, 0.29 ) }
    dend_40 { pt3dadd( 101.343, 124.852, -40.6328, 1.32 ) }
    dend_40 { pt3dadd( 101.506, 125.115, -40.7008, 1.54 ) }
    dend_40 { pt3dadd( 102.104, 126.038, -40.9323, 0.29 ) }
    dend_40 { pt3dadd( 102.46, 126.581, -41.0603, 0.44 ) }
    dend_40 { pt3dadd( 102.966, 127.423, -41.2621, 0.73 ) }
    dend_40 { pt3dadd( 103.283, 128.015, -41.4083, 1.18 ) }
    dend_40 { pt3dadd( 103.733, 128.998, -41.6505, 0.29 ) }
    dend_40 { pt3dadd( 103.931, 129.514, -41.7909, 0.15 ) }
    dend_40 { pt3dadd( 104.094, 130.021, -41.9504, 0.15 ) }
    dend_40 { pt3dadd( 104.352, 130.952, -42.2791, 2.13 ) }
    dend_40 { pt3dadd( 104.45, 131.319, -42.4181, 2.2 ) }
    dend_40 { pt3dadd( 104.591, 131.857, -42.6472, 2.2 ) }
    dend_40 { pt3dadd( 104.889, 132.996, -43.1612, 0.51 ) }
    dend_40 { pt3dadd( 105.154, 133.857, -43.5839, 0.51 ) }
    dend_40 { pt3dadd( 105.425, 134.593, -43.9691, 0.07 ) }
    dend_40 { pt3dadd( 105.754, 135.361, -44.3877, 0.66 ) }
    dend_40 { pt3dadd( 106.094, 136.114, -44.7967, 0.22 ) }
    dend_40 { pt3dadd( 106.384, 136.73, -45.1256, 1.1 ) }
    dend_40 { pt3dadd( 106.781, 137.566, -45.5474, 0.29 ) }
    dend_40 { pt3dadd( 107.088, 138.271, -45.8669, 1.32 ) }
    dend_40 { pt3dadd( 107.154, 138.441, -45.9388, 1.84 ) }
    dend_40 { pt3dadd( 107.318, 138.94, -46.1296, 1.47 ) }
    dend_40 { pt3dadd( 107.555, 139.754, -46.3957, 0.37 ) }
    dend_40 { pt3dadd( 107.661, 140.204, -46.5257, 0.15 ) }
    dend_40 { pt3dadd( 107.79, 141.011, -46.7042, 0.15 ) }
    dend_40 { pt3dadd( 107.837, 141.45, -46.7859, 0.15 ) }
    dend_40 { pt3dadd( 107.897, 142.051, -46.8903, 1.1 ) }
    dend_40 { pt3dadd( 107.956, 142.76, -46.9984, 1.76 ) }
    dend_40 { pt3dadd( 107.993, 143.192, -47.0515, 1.98 ) }
    dend_40 { pt3dadd( 108.092, 144.285, -47.1783, 0.66 ) }
    dend_40 { pt3dadd( 108.179, 145.163, -47.281, 0.59 ) }
    dend_40 { pt3dadd( 108.223, 145.648, -47.3348, 0.22 ) }
    dend_40 { pt3dadd( 108.287, 146.415, -47.4409, 0.29 ) }
    dend_40 { pt3dadd( 108.341, 147.172, -47.5562, 0.29 ) }
    dend_40 { pt3dadd( 108.389, 147.785, -47.6724, 1.18 ) }
    dend_40 { pt3dadd( 108.428, 148.31, -47.7913, 1.84 ) }
    dend_40 { pt3dadd( 108.458, 148.987, -47.9551, 1.4 ) }
    dend_40 { pt3dadd( 108.463, 149.706, -48.1222, 0.37 ) }
    dend_40 { pt3dadd( 108.457, 150.141, -48.2265, 0.29 ) }
    dend_40 { pt3dadd( 108.441, 150.646, -48.3455, 0.29 ) }
    dend_40 { pt3dadd( 108.432, 151.08, -48.4554, 0.66 ) }
    dend_40 { pt3dadd( 108.424, 151.624, -48.6112, 0.66 ) }
    dend_40 { pt3dadd( 108.416, 152.203, -48.7997, 0.22 ) }
    dend_40 { pt3dadd( 108.402, 152.84, -49.0216, 0.22 ) }
    dend_40 { pt3dadd( 108.355, 153.543, -49.2912, 1.62 ) }
    dend_40 { pt3dadd( 108.259, 154.235, -49.597, 1.62 ) }
    dend_40 { pt3dadd( 108.117, 155.06, -49.9858, 0.88 ) }
    dend_40 { pt3dadd( 107.973, 155.787, -50.3448, 0.37 ) }
    dend_40 { pt3dadd( 107.889, 156.182, -50.5492, 0.37 ) }
    dend_40 { pt3dadd( 107.723, 156.966, -50.9579, 1.91 ) }
    dend_40 { pt3dadd( 107.538, 157.993, -51.5254, 0.51 ) }
    dend_40 { pt3dadd( 107.449, 158.614, -51.8709, 0.37 ) }
    dend_40 { pt3dadd( 107.368, 159.272, -52.2532, 0.22 ) }
    dend_40 { pt3dadd( 107.269, 160.268, -52.8504, 0.66 ) }
    dend_40 { pt3dadd( 107.25, 160.555, -53.0203, 1.76 ) }
    dend_40 { pt3dadd( 107.245, 161.628, -53.6485, 0.29 ) }
    dend_40 { pt3dadd( 107.261, 161.972, -53.8337, 0.22 ) }
    dend_40 { pt3dadd( 107.286, 162.75, -54.2588, 1.25 ) }
    dend_40 { pt3dadd( 107.285, 162.992, -54.3938, 1.25 ) }
    dend_40 { pt3dadd( 107.27, 163.395, -54.6106, 0.22 ) }
    dend_40 { pt3dadd( 107.23, 163.857, -54.8775, 0.15 ) }
    dend_40 { pt3dadd( 107.161, 164.344, -55.1723, 0.15 ) }
    dend_40 { pt3dadd( 106.956, 165.384, -55.8351, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_40 { pt3dadd( 106.668, 166.581, -56.6226, 0.44 ) }
    dend_40 { pt3dadd( 106.567, 166.943, -56.8645, 0.73 ) }
    dend_40 { pt3dadd( 106.362, 167.607, -57.2997, 0.22 ) }
    dend_40 { pt3dadd( 106.289, 167.836, -57.4359, 0.22 ) }
    dend_40 { pt3dadd( 106.091, 168.592, -57.8181, 1.62 ) }
    dend_40 { pt3dadd( 105.992, 169.2, -58.0395, 1.62 ) }
    dend_40 { pt3dadd( 105.946, 170.052, -58.2649, 0.15 ) }
    dend_40 { pt3dadd( 105.952, 170.548, -58.3777, 0.15 ) }
    dend_40 { pt3dadd( 105.997, 171.268, -58.5136, 0.22 ) }
    dend_40 { pt3dadd( 106.09, 172.298, -58.6958, 1.84 ) }
    dend_40 { pt3dadd( 106.148, 172.811, -58.7854, 1.84 ) }
    dend_40 { pt3dadd( 106.231, 173.654, -58.9218, 0.59 ) }
    dend_40 { pt3dadd( 106.275, 174.382, -59.0449, 0.37 ) }
    dend_40 { pt3dadd( 106.286, 174.775, -59.1148, 0.37 ) }
    dend_40 { pt3dadd( 106.283, 175.487, -59.2593, 0.37 ) }
    dend_40 { pt3dadd( 106.257, 176.355, -59.4563, 0.07 ) }
    dend_40 { pt3dadd( 106.221, 177.174, -59.662, 0.07 ) }
    dend_40 { pt3dadd( 106.197, 178.092, -59.926, 1.84 ) }
    dend_40 { pt3dadd( 106.197, 178.618, -60.106, 1.84 ) }
    dend_40 { pt3dadd( 106.233, 179.456, -60.4298, 0.37 ) }
    dend_40 { pt3dadd( 106.293, 180.17, -60.7497, 0.15 ) }
    dend_40 { pt3dadd( 106.374, 180.783, -61.0581, 0.15 ) }
    dend_40 { pt3dadd( 106.53, 181.706, -61.5719, 1.47 ) }
    dend_40 { pt3dadd( 106.611, 182.183, -61.866, 1.47 ) }
    dend_40 { pt3dadd( 106.667, 182.62, -62.136, 1.1 ) }
    dend_40 { pt3dadd( 106.701, 183.164, -62.4617, 0.81 ) }
    dend_40 { pt3dadd( 106.703, 183.752, -62.827, 1.62 ) }
    dend_40 { pt3dadd( 106.693, 184.052, -63.0134, 1.62 ) }
    dend_40 { pt3dadd( 106.619, 185.136, -63.6733, 0.07 ) }
    dend_40 { pt3dadd( 106.555, 185.889, -64.1396, 0.95 ) }
    dend_40 { pt3dadd( 106.479, 186.671, -64.6649, 0.07 ) }
    dend_40 { pt3dadd( 106.426, 187.136, -65.0008, 0.88 ) }
    dend_40 { pt3dadd( 106.36, 187.636, -65.4037, 0.07 ) }
    dend_40 { pt3dadd( 106.308, 188.027, -65.7413, 0.07 ) }
    dend_40 { pt3dadd( 106.224, 188.609, -66.2685, 1.84 ) }
    dend_40 { pt3dadd( 106.095, 189.432, -67.0369, 0.51 ) }
    dend_40 { pt3dadd( 105.998, 190.206, -67.7056, 1.18 ) }
    dend_40 { pt3dadd( 105.92, 191.033, -68.3512, 0.22 ) }
    dend_40 { pt3dadd( 105.882, 191.496, -68.6878, 0.22 ) }
    dend_40 { pt3dadd( 105.849, 192.107, -69.0854, 1.1 ) }
    dend_40 { pt3dadd( 105.851, 192.394, -69.2511, 1.18 ) }
    dend_40 { pt3dadd( 105.921, 193.437, -69.7819, 0.15 ) }
    dend_40 { pt3dadd( 106.005, 194.079, -70.0566, 1.1 ) }
    dend_40 { pt3dadd( 106.062, 194.489, -70.2091, 1.4 ) }
    dend_40 { pt3dadd( 106.088, 194.751, -70.2974, 1.4 ) }
    dend_40 { pt3dadd( 106.148, 195.715, -70.5815, 0.37 ) }
    dend_40 { pt3dadd( 106.156, 196.052, -70.6732, 0.37 ) }
    dend_40 { pt3dadd( 106.141, 196.852, -70.8886, 1.54 ) }
    dend_40 { pt3dadd( 106.087, 197.986, -71.1669, 0.07 ) }
    dend_40 { pt3dadd( 106.006, 198.901, -71.3701, 0.07 ) }
    dend_40 { pt3dadd( 105.911, 199.715, -71.5448, 1.69 ) }
    dend_40 { pt3dadd( 105.886, 199.876, -71.576, 1.69 ) }
    dend_40 { pt3dadd( 105.695, 200.967, -71.7751, 0.07 ) }
    dend_40 { pt3dadd( 105.464, 202.117, -71.9782, 0.07 ) }
    dend_40 { pt3dadd( 105.272, 202.946, -72.1053, 0.07 ) }
    dend_40 { pt3dadd( 105.094, 203.708, -72.2251, 1.69 ) }
    dend_40 { pt3dadd( 104.941, 204.322, -72.3174, 2.28 ) }
    dend_40 { pt3dadd( 104.594, 205.666, -72.5179, 0.22 ) }
    dend_40 { pt3dadd( 104.397, 206.41, -72.6203, 0.15 ) }
    dend_40 { pt3dadd( 104.153, 207.384, -72.7693, 0.15 ) }
    dend_40 { pt3dadd( 104.022, 207.951, -72.8601, 0.95 ) }
    dend_40 { pt3dadd( 103.901, 208.453, -72.9442, 1.18 ) }
    dend_40 { pt3dadd( 103.715, 209.256, -73.0925, 0.07 ) }
    dend_40 { pt3dadd( 103.662, 209.472, -73.133, 0.07 ) }
    dend_40 { pt3dadd( 103.512, 210.11, -73.2412, 1.1 ) }
    dend_40 { pt3dadd( 103.382, 210.659, -73.3241, 1.1 ) }
    dend_40 { pt3dadd( 103.257, 211.132, -73.3808, 0.07 ) }
    dend_40 { pt3dadd( 103.067, 211.825, -73.4679, 0.07 ) }
    dend_40 { pt3dadd( 102.812, 212.751, -73.5667, 1.62 ) }
    dend_40 { pt3dadd( 102.6, 213.509, -73.6438, 1.25 ) }
    dend_40 { pt3dadd( 102.389, 214.282, -73.7325, 0.07 ) }
    dend_40 { pt3dadd( 102.221, 214.897, -73.8044, 0.07 ) }
    dend_40 { pt3dadd( 101.923, 216.012, -73.9608, 1.69 ) }
    dend_40 { pt3dadd( 101.781, 216.57, -74.0516, 1.1 ) }
    dend_40 { pt3dadd( 101.647, 217.166, -74.1554, 0.59 ) }
    dend_40 { pt3dadd( 101.48, 217.965, -74.3147, 0.07 ) }
    dend_40 { pt3dadd( 101.377, 218.586, -74.4367, 1.03 ) }
    dend_40 { pt3dadd( 101.289, 219.5, -74.6173, 0.07 ) }
    dend_40 { pt3dadd( 101.259, 220.471, -74.8207, 0.07 ) }
    dend_40 { pt3dadd( 101.271, 221.017, -74.9277, 0.95 ) }
    dend_40 { pt3dadd( 101.334, 221.948, -75.0873, 0.07 ) }
    dend_40 { pt3dadd( 101.477, 223.207, -75.2747, 2.42 ) }
    dend_40 { pt3dadd( 101.69, 224.555, -75.4595, 0.07 ) }
    dend_40 { pt3dadd( 101.842, 225.256, -75.539, 0.07 ) }
    dend_40 { pt3dadd( 102.109, 226.144, -75.6419, 0.95 ) }
    dend_40 { pt3dadd( 102.227, 226.471, -75.6771, 1.18 ) }
    dend_40 { pt3dadd( 102.684, 227.436, -75.7741, 0.37 ) }
    dend_40 { pt3dadd( 102.881, 227.766, -75.8134, 0.07 ) }
    dend_40 { pt3dadd( 103.398, 228.548, -75.904, 0.07 ) }
    dend_40 { pt3dadd( 104.066, 229.495, -76.0356, 1.32 ) }
    dend_40 { pt3dadd( 104.562, 230.149, -76.1532, 1.91 ) }
    dend_40 { pt3dadd( 105.58, 231.456, -76.383, 0.15 ) }
    dend_40 { pt3dadd( 105.963, 231.951, -76.4683, 0.15 ) }
    dend_40 { pt3dadd( 106.191, 232.274, -76.5296, 0.15 ) }
    dend_40 { pt3dadd( 106.535, 232.849, -76.6425, 0.15 ) }
    dend_40 { pt3dadd( 106.783, 233.378, -76.76, 1.47 ) }
    dend_40 { pt3dadd( 106.97, 233.898, -76.8916, 1.25 ) }
    dend_40 { pt3dadd( 107.158, 234.768, -77.144, 0.22 ) }
    dend_40 { pt3dadd( 107.272, 235.438, -77.3494, 0.15 ) }
    dend_40 { pt3dadd( 107.354, 235.959, -77.5138, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_40 { pt3dadd( 107.458, 236.796, -77.7876, 1.25 ) }
    dend_40 { pt3dadd( 107.543, 237.602, -78.0739, 2.35 ) }
    dend_40 { pt3dadd( 107.657, 238.654, -78.4769, 0.07 ) }
    dend_40 { pt3dadd( 107.685, 238.996, -78.6142, 1.1 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 4/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 52.9559, 41.8514, -18.1551, 0.73 ) }
    dend_39 { pt3dadd( 53.5274, 42.2036, -18.7987, 0.73 ) }
    dend_39 { pt3dadd( 54.59, 42.7557, -19.8664, 0.37 ) }
    dend_39 { pt3dadd( 55.1537, 42.9958, -20.398, 0.51 ) }
    dend_39 { pt3dadd( 55.9272, 43.2741, -21.126, 1.54 ) }
    dend_39 { pt3dadd( 56.7847, 43.5847, -21.9484, 0.07 ) }
    dend_39 { pt3dadd( 57.6102, 43.8996, -22.7186, 0.15 ) }
    dend_39 { pt3dadd( 58.1282, 44.0906, -23.1931, 0.15 ) }
    dend_39 { pt3dadd( 58.7228, 44.286, -23.7038, 1.32 ) }
    dend_39 { pt3dadd( 60.0291, 44.6317, -24.7172, 0.37 ) }
    dend_39 { pt3dadd( 60.7752, 44.7648, -25.2407, 1.25 ) }
    dend_39 { pt3dadd( 61.5403, 44.8756, -25.7086, 0.29 ) }
    dend_39 { pt3dadd( 62.3867, 44.9804, -26.178, 0.29 ) }
    dend_39 { pt3dadd( 63.0747, 45.0437, -26.5155, 1.03 ) }
    dend_39 { pt3dadd( 64.0813, 45.0747, -26.8755, 0.07 ) }
    dend_39 { pt3dadd( 65.1256, 45.0366, -27.0849, 0.07 ) }
    dend_39 { pt3dadd( 65.7527, 44.9908, -27.1635, 0.88 ) }
    dend_39 { pt3dadd( 65.9092, 44.9769, -27.1811, 1.03 ) }
    dend_39 { pt3dadd( 67.1661, 44.8892, -27.2866, 0.07 ) }
    dend_39 { pt3dadd( 68.5762, 44.8544, -27.4245, 2.13 ) }
    dend_39 { pt3dadd( 70.0828, 44.9152, -27.5902, 0.07 ) }
    dend_39 { pt3dadd( 70.6402, 44.9677, -27.6523, 0.37 ) }
    dend_39 { pt3dadd( 71.706, 45.1035, -27.7903, 0.07 ) }
    dend_39 { pt3dadd( 72.3383, 45.1978, -27.8851, 1.1 ) }
    dend_39 { pt3dadd( 73.3039, 45.3595, -28.0399, 0.07 ) }
    dend_39 { pt3dadd( 74.5073, 45.5858, -28.2633, 0.07 ) }
    dend_39 { pt3dadd( 75.3036, 45.7515, -28.4217, 1.47 ) }
    dend_39 { pt3dadd( 76.3121, 45.9819, -28.6077, 0.07 ) }
    dend_39 { pt3dadd( 77.1609, 46.1889, -28.7623, 0.07 ) }
    dend_39 { pt3dadd( 78.0401, 46.3928, -28.9388, 0.07 ) }
    dend_39 { pt3dadd( 78.6064, 46.5143, -29.0628, 1.25 ) }
    dend_39 { pt3dadd( 79.2257, 46.6443, -29.2131, 1.32 ) }
    dend_39 { pt3dadd( 79.8296, 46.7741, -29.3512, 1.32 ) }
    dend_39 { pt3dadd( 81.311, 47.1013, -29.6849, 0.07 ) }
    dend_39 { pt3dadd( 81.8517, 47.2149, -29.8137, 0.44 ) }
    dend_39 { pt3dadd( 82.6191, 47.3599, -30.0009, 0.07 ) }
    dend_39 { pt3dadd( 83.2965, 47.4747, -30.1659, 0.07 ) }
    dend_39 { pt3dadd( 84.3927, 47.6368, -30.4196, 1.76 ) }
    dend_39 { pt3dadd( 85.6196, 47.8038, -30.6873, 0.07 ) }
    dend_39 { pt3dadd( 86.5748, 47.9653, -30.8951, 0.07 ) }
    dend_39 { pt3dadd( 87.3254, 48.1225, -31.0705, 1.91 ) }
    dend_39 { pt3dadd( 88.5274, 48.4252, -31.3698, 0.07 ) }
    dend_39 { pt3dadd( 89.193, 48.6268, -31.5527, 0.07 ) }
    dend_39 { pt3dadd( 90.0434, 48.9256, -31.7954, 1.47 ) }
    dend_39 { pt3dadd( 91.3538, 49.4337, -32.1438, 0.07 ) }
    dend_39 { pt3dadd( 92.1416, 49.7529, -32.3263, 1.18 ) }
    dend_39 { pt3dadd( 92.7882, 49.9983, -32.4583, 1.18 ) }
    dend_39 { pt3dadd( 93.8668, 50.3723, -32.64, 0.07 ) }
    dend_39 { pt3dadd( 94.3781, 50.5283, -32.7095, 0.07 ) }
    dend_39 { pt3dadd( 95.19, 50.7335, -32.7989, 0.07 ) }
    dend_39 { pt3dadd( 96.6045, 51.0108, -32.931, 1.76 ) }
    dend_39 { pt3dadd( 97.7907, 51.2277, -33.0428, 0.07 ) }
    dend_39 { pt3dadd( 98.3554, 51.3393, -33.1046, 0.07 ) }
    dend_39 { pt3dadd( 98.9799, 51.4811, -33.1922, 0.66 ) }
    dend_39 { pt3dadd( 99.7819, 51.7026, -33.3326, 0.15 ) }
    dend_39 { pt3dadd( 100.613, 51.9947, -33.5124, 1.25 ) }
    dend_39 { pt3dadd( 101.216, 52.2635, -33.662, 1.25 ) }
    dend_39 { pt3dadd( 102.318, 52.8337, -33.9945, 0.07 ) }
    dend_39 { pt3dadd( 103.463, 53.4543, -34.3807, 1.62 ) }
    dend_39 { pt3dadd( 103.831, 53.6596, -34.5133, 1.32 ) }
    dend_39 { pt3dadd( 104.444, 53.9932, -34.727, 0.95 ) }
    dend_39 { pt3dadd( 105.24, 54.3963, -35.0212, 0.15 ) }
    dend_39 { pt3dadd( 106.442, 54.9471, -35.4554, 0.07 ) }
    dend_39 { pt3dadd( 107.282, 55.2947, -35.7431, 0.07 ) }
    dend_39 { pt3dadd( 107.484, 55.3655, -35.8077, 1.18 ) }
    dend_39 { pt3dadd( 108.507, 55.6364, -36.1281, 0.22 ) }
    dend_39 { pt3dadd( 109.606, 55.8136, -36.4654, 0.07 ) }
    dend_39 { pt3dadd( 110.634, 55.9061, -36.8114, 1.47 ) }
    dend_39 { pt3dadd( 111.303, 55.9506, -37.0506, 1.47 ) }
    dend_39 { pt3dadd( 112.604, 56.0116, -37.5894, 0.15 ) }
    dend_39 { pt3dadd( 113.4, 56.0352, -37.9493, 0.15 ) }
    dend_39 { pt3dadd( 114.403, 56.0462, -38.471, 1.47 ) }
    dend_39 { pt3dadd( 115.618, 56.0923, -39.15, 0.51 ) }
    dend_39 { pt3dadd( 116.411, 56.1631, -39.6473, 1.32 ) }
    dend_39 { pt3dadd( 117.087, 56.2763, -40.1095, 0.29 ) }
    dend_39 { pt3dadd( 117.485, 56.3925, -40.3928, 0.15 ) }
    dend_39 { pt3dadd( 118.138, 56.6672, -40.8587, 0.15 ) }
    dend_39 { pt3dadd( 118.772, 56.9908, -41.3164, 1.1 ) }
    dend_39 { pt3dadd( 119.077, 57.156, -41.5207, 1.18 ) }
    dend_39 { pt3dadd( 120.039, 57.7034, -42.1344, 0.07 ) }
    dend_39 { pt3dadd( 120.52, 57.9953, -42.4088, 0.59 ) }
    dend_39 { pt3dadd( 121.453, 58.582, -42.8921, 0.07 ) }
    dend_39 { pt3dadd( 121.869, 58.8689, -43.1087, 0.07 ) }
    dend_39 { pt3dadd( 122.46, 59.302, -43.4218, 1.76 ) }
    dend_39 { pt3dadd( 123.304, 60.0004, -43.8733, 0.07 ) }
    dend_39 { pt3dadd( 124.111, 60.7432, -44.2745, 0.07 ) }
    dend_39 { pt3dadd( 124.88, 61.4793, -44.6431, 1.4 ) }
    dend_39 { pt3dadd( 126.045, 62.6606, -45.1888, 0.07 ) }
    dend_39 { pt3dadd( 126.473, 63.0976, -45.3882, 0.51 ) }
    dend_39 { pt3dadd( 126.98, 63.601, -45.626, 0.07 ) }
    dend_39 { pt3dadd( 127.738, 64.3179, -45.9648, 0.07 ) }
    dend_39 { pt3dadd( 128.169, 64.6596, -46.1602, 1.54 ) }
    dend_39 { pt3dadd( 129.173, 65.2999, -46.5788, 0.07 ) }
    dend_39 { pt3dadd( 130.231, 65.845, -46.9747, 1.47 ) }
    dend_39 { pt3dadd( 131.113, 66.1925, -47.2828, 0.07 ) }
    dend_39 { pt3dadd( 131.503, 66.3075, -47.4123, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_39 { pt3dadd( 133.424, 66.7708, -48.0648, 0.07 ) }
    dend_39 { pt3dadd( 133.897, 66.8555, -48.2285, 0.07 ) }
    dend_39 { pt3dadd( 134.414, 66.9129, -48.4062, 1.54 ) }
    dend_39 { pt3dadd( 135.74, 67.0131, -48.8834, 0.07 ) }
    dend_39 { pt3dadd( 136.296, 67.0545, -49.0876, 0.07 ) }
    dend_39 { pt3dadd( 137.319, 67.1608, -49.4833, 0.95 ) }
    dend_39 { pt3dadd( 138.393, 67.3252, -49.8811, 0.07 ) }
    dend_39 { pt3dadd( 138.768, 67.4048, -50.0537, 0.07 ) }
    dend_39 { pt3dadd( 139.236, 67.5261, -50.2943, 0.95 ) }
    dend_39 { pt3dadd( 140.355, 67.8994, -50.9206, 0.07 ) }
    dend_39 { pt3dadd( 141.205, 68.197, -51.3767, 0.07 ) }
    dend_39 { pt3dadd( 142.026, 68.4981, -51.7988, 1.4 ) }
    dend_39 { pt3dadd( 143.518, 69.1063, -52.5692, 0.07 ) }
    dend_39 { pt3dadd( 143.911, 69.2769, -52.7809, 0.07 ) }
    dend_39 { pt3dadd( 144.339, 69.4765, -53.0171, 0.66 ) }
    dend_39 { pt3dadd( 145.258, 69.9285, -53.5329, 0.07 ) }
    dend_39 { pt3dadd( 145.987, 70.2897, -53.9307, 1.25 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 23.2828, -8.65565, -11.2552, 0.22 ) }
    dend_36 { pt3dadd( 24.9186, -9.04023, -11.6808, 0.22 ) }
    dend_36 { pt3dadd( 25.9627, -9.30953, -11.9825, 0.59 ) }
    dend_36 { pt3dadd( 27.0328, -9.66942, -12.3104, 0.07 ) }
    dend_36 { pt3dadd( 28.3889, -10.1691, -12.6831, 1.47 ) }
    dend_36 { pt3dadd( 29.5081, -10.6245, -12.9557, 0.07 ) }
    dend_36 { pt3dadd( 29.8131, -10.7576, -13.0234, 0.07 ) }
    dend_36 { pt3dadd( 31.2411, -11.436, -13.3486, 1.76 ) }
    dend_36 { pt3dadd( 32.56, -12.0833, -13.6589, 0.07 ) }
    dend_36 { pt3dadd( 33.3607, -12.4922, -13.7997, 0.07 ) }
    dend_36 { pt3dadd( 34.2366, -12.975, -13.9321, 0.07 ) }
    dend_36 { pt3dadd( 34.7173, -13.2594, -13.9904, 1.03 ) }
    dend_36 { pt3dadd( 35.4901, -13.7234, -14.0776, 1.03 ) }
    dend_36 { pt3dadd( 36.3765, -14.292, -14.1349, 1.03 ) }
    dend_36 { pt3dadd( 37.2374, -14.8585, -14.1555, 0.07 ) }
    dend_36 { pt3dadd( 38.1346, -15.4882, -14.1637, 0.07 ) }
    dend_36 { pt3dadd( 38.8945, -16.0396, -14.1424, 0.66 ) }
    dend_36 { pt3dadd( 39.559, -16.5549, -14.0983, 0.07 ) }
    dend_36 { pt3dadd( 40.4559, -17.3078, -14.0, 0.95 ) }
    dend_36 { pt3dadd( 41.6753, -18.3682, -13.8607, 0.07 ) }
    dend_36 { pt3dadd( 42.0693, -18.7042, -13.8281, 0.07 ) }
    dend_36 { pt3dadd( 42.6918, -19.2021, -13.792, 1.1 ) }
    dend_36 { pt3dadd( 43.135, -19.5371, -13.7794, 1.76 ) }
    dend_36 { pt3dadd( 43.5341, -19.8311, -13.7849, 1.76 ) }
    dend_36 { pt3dadd( 44.6681, -20.658, -13.8267, 0.07 ) }
    dend_36 { pt3dadd( 45.4461, -21.2695, -13.852, 0.73 ) }
    dend_36 { pt3dadd( 46.2175, -21.9099, -13.8635, 0.07 ) }
    dend_36 { pt3dadd( 46.4653, -22.1238, -13.8701, 0.07 ) }
    dend_36 { pt3dadd( 47.0157, -22.5868, -13.9013, 1.1 ) }
    dend_36 { pt3dadd( 48.0425, -23.4298, -13.9827, 0.07 ) }
    dend_36 { pt3dadd( 48.5903, -23.8474, -14.0612, 1.18 ) }
    dend_36 { pt3dadd( 49.2158, -24.2759, -14.1841, 1.47 ) }
    dend_36 { pt3dadd( 49.7654, -24.6107, -14.3057, 1.47 ) }
    dend_36 { pt3dadd( 51.1418, -25.3398, -14.6183, 0.07 ) }
    dend_36 { pt3dadd( 51.8617, -25.6585, -14.7814, 0.66 ) }
    dend_36 { pt3dadd( 53.0028, -26.0593, -15.0329, 0.07 ) }
    dend_36 { pt3dadd( 53.613, -26.2354, -15.1268, 0.07 ) }
    dend_36 { pt3dadd( 54.5307, -26.4669, -15.2037, 1.25 ) }
    dend_36 { pt3dadd( 55.3055, -26.6502, -15.2089, 1.25 ) }
    dend_36 { pt3dadd( 56.0702, -26.8265, -15.165, 0.81 ) }
    dend_36 { pt3dadd( 56.6081, -26.9507, -15.1103, 0.07 ) }
    dend_36 { pt3dadd( 57.6747, -27.1888, -14.953, 0.07 ) }
    dend_36 { pt3dadd( 58.3072, -27.3269, -14.8725, 0.07 ) }
    dend_36 { pt3dadd( 58.9995, -27.4865, -14.8039, 0.81 ) }
    dend_36 { pt3dadd( 59.5424, -27.6199, -14.762, 1.03 ) }
    dend_36 { pt3dadd( 60.5203, -27.8863, -14.705, 1.03 ) }
    dend_36 { pt3dadd( 61.3205, -28.1391, -14.6775, 0.07 ) }
    dend_36 { pt3dadd( 62.2891, -28.4849, -14.6726, 0.07 ) }
    dend_36 { pt3dadd( 63.2985, -28.8822, -14.6941, 1.76 ) }
    dend_36 { pt3dadd( 63.7435, -29.0799, -14.7009, 1.76 ) }
    dend_36 { pt3dadd( 64.9807, -29.7054, -14.6876, 0.07 ) }
    dend_36 { pt3dadd( 65.467, -29.9739, -14.6738, 0.07 ) }
    dend_36 { pt3dadd( 65.8935, -30.2259, -14.6553, 0.07 ) }
    dend_36 { pt3dadd( 66.7075, -30.7163, -14.6068, 0.95 ) }
    dend_36 { pt3dadd( 67.522, -31.2157, -14.5639, 0.07 ) }
    dend_36 { pt3dadd( 68.863, -32.023, -14.5049, 0.07 ) }
    dend_36 { pt3dadd( 69.8283, -32.5795, -14.4702, 1.1 ) }
    dend_36 { pt3dadd( 70.3551, -32.8651, -14.4519, 1.1 ) }
    dend_36 { pt3dadd( 71.1289, -33.2681, -14.4405, 0.07 ) }
    dend_36 { pt3dadd( 71.5924, -33.5045, -14.4459, 0.66 ) }
    dend_36 { pt3dadd( 72.2898, -33.8375, -14.4957, 0.07 ) }
    dend_36 { pt3dadd( 72.7078, -34.0345, -14.5374, 0.07 ) }
    dend_36 { pt3dadd( 73.2747, -34.2973, -14.599, 0.59 ) }
    dend_36 { pt3dadd( 73.8347, -34.5534, -14.6611, 0.15 ) }
    dend_36 { pt3dadd( 74.865, -35.022, -14.7696, 1.84 ) }
    dend_36 { pt3dadd( 75.4936, -35.3143, -14.8313, 1.84 ) }
    dend_36 { pt3dadd( 76.8295, -35.9707, -14.9785, 0.07 ) }
    dend_36 { pt3dadd( 77.7216, -36.4139, -15.0771, 0.07 ) }
    dend_36 { pt3dadd( 78.7484, -36.9147, -15.1771, 0.07 ) }
    dend_36 { pt3dadd( 79.7589, -37.4109, -15.2556, 1.25 ) }
    dend_36 { pt3dadd( 80.2649, -37.6521, -15.2892, 1.25 ) }
    dend_36 { pt3dadd( 81.4518, -38.2195, -15.355, 0.07 ) }
    dend_36 { pt3dadd( 82.2335, -38.5927, -15.3881, 0.66 ) }
    dend_36 { pt3dadd( 82.8786, -38.9044, -15.3969, 0.07 ) }
    dend_36 { pt3dadd( 84.5948, -39.7427, -15.3946, 0.07 ) }
    dend_36 { pt3dadd( 85.7785, -40.3411, -15.38, 1.98 ) }
    dend_36 { pt3dadd( 86.6456, -40.7788, -15.3405, 1.1 ) }
    dend_36 { pt3dadd( 87.3308, -41.1226, -15.3, 0.15 ) }
    dend_36 { pt3dadd( 88.5234, -41.729, -15.2344, 0.15 ) }
    dend_36 { pt3dadd( 89.0633, -42.0035, -15.2082, 1.1 ) }
    dend_36 { pt3dadd( 90.1854, -42.5554, -15.1519, 0.81 ) }
    dend_36 { pt3dadd( 91.0944, -42.9936, -15.1289, 0.07 ) }
    dend_36 { pt3dadd( 91.8207, -43.3312, -15.1308, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 92.4953, -43.6434, -15.1537, 0.07 ) }
    dend_36 { pt3dadd( 93.0841, -43.9255, -15.1954, 0.51 ) }
    dend_36 { pt3dadd( 93.7983, -44.2664, -15.2829, 0.07 ) }
    dend_36 { pt3dadd( 94.6027, -44.6537, -15.4161, 0.37 ) }
    dend_36 { pt3dadd( 95.5418, -45.1038, -15.5954, 0.07 ) }
    dend_36 { pt3dadd( 96.4979, -45.549, -15.7908, 1.76 ) }
    dend_36 { pt3dadd( 96.949, -45.7453, -15.8924, 1.76 ) }
    dend_36 { pt3dadd( 98.377, -46.2907, -16.2297, 0.07 ) }
    dend_36 { pt3dadd( 98.8115, -46.437, -16.3323, 0.07 ) }
    dend_36 { pt3dadd( 99.6809, -46.6962, -16.5275, 0.73 ) }
    dend_36 { pt3dadd( 100.66, -46.9355, -16.7697, 0.07 ) }
    dend_36 { pt3dadd( 101.184, -47.0492, -16.9036, 0.07 ) }
    dend_36 { pt3dadd( 101.863, -47.2022, -17.0424, 0.07 ) }
    dend_36 { pt3dadd( 102.591, -47.3957, -17.1394, 0.07 ) }
    dend_36 { pt3dadd( 103.11, -47.5536, -17.1889, 1.25 ) }
    dend_36 { pt3dadd( 104.219, -47.9128, -17.3093, 0.07 ) }
    dend_36 { pt3dadd( 104.748, -48.0963, -17.3229, 0.51 ) }
    dend_36 { pt3dadd( 105.84, -48.4835, -17.313, 0.07 ) }
    dend_36 { pt3dadd( 106.863, -48.8456, -17.2724, 0.95 ) }
    dend_36 { pt3dadd( 107.535, -49.0734, -17.2009, 1.25 ) }
    dend_36 { pt3dadd( 108.76, -49.4857, -16.9819, 0.07 ) }
    dend_36 { pt3dadd( 110.211, -49.9798, -16.639, 0.81 ) }
    dend_36 { pt3dadd( 111.448, -50.4133, -16.3352, 0.07 ) }
    dend_36 { pt3dadd( 111.944, -50.5969, -16.2084, 0.37 ) }
    dend_36 { pt3dadd( 112.911, -50.985, -15.9109, 0.07 ) }
    dend_36 { pt3dadd( 114.029, -51.4863, -15.5249, 1.47 ) }
    dend_36 { pt3dadd( 115.013, -51.9908, -15.1386, 0.07 ) }
    dend_36 { pt3dadd( 115.483, -52.2452, -14.9661, 0.07 ) }
    dend_36 { pt3dadd( 116.229, -52.6848, -14.6689, 0.51 ) }
    dend_36 { pt3dadd( 117.038, -53.1926, -14.3545, 0.07 ) }
    dend_36 { pt3dadd( 118.08, -53.8943, -13.9832, 1.91 ) }
    dend_36 { pt3dadd( 119.328, -54.8164, -13.5441, 0.44 ) }
    dend_36 { pt3dadd( 119.571, -55.014, -13.4595, 0.07 ) }
    dend_36 { pt3dadd( 119.989, -55.3805, -13.3329, 0.88 ) }
    dend_36 { pt3dadd( 120.379, -55.7794, -13.244, 0.88 ) }
    dend_36 { pt3dadd( 120.74, -56.1984, -13.1964, 0.88 ) }
    dend_36 { pt3dadd( 121.257, -56.8375, -13.172, 0.07 ) }
    dend_36 { pt3dadd( 121.903, -57.6427, -13.1971, 0.73 ) }
    dend_36 { pt3dadd( 122.504, -58.406, -13.2279, 0.07 ) }
    dend_36 { pt3dadd( 122.986, -59.0235, -13.2602, 0.81 ) }
    dend_36 { pt3dadd( 123.34, -59.4703, -13.2833, 0.07 ) }
    dend_36 { pt3dadd( 123.967, -60.2519, -13.3264, 1.1 ) }
    dend_36 { pt3dadd( 124.551, -60.9819, -13.3754, 0.07 ) }
    dend_36 { pt3dadd( 124.856, -61.3518, -13.4115, 0.07 ) }
    dend_36 { pt3dadd( 125.26, -61.7883, -13.4498, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 45/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 23.2828, -8.65565, -11.2552, 1.25 ) }
    dend_35 { pt3dadd( 24.3313, -8.49537, -11.7517, 1.25 ) }
    dend_35 { pt3dadd( 25.1943, -8.44363, -12.1312, 0.59 ) }
    dend_35 { pt3dadd( 25.8027, -8.42923, -12.3753, 0.59 ) }
    dend_35 { pt3dadd( 26.6016, -8.40762, -12.673, 1.1 ) }
    dend_35 { pt3dadd( 27.0469, -8.39018, -12.8305, 1.32 ) }
    dend_35 { pt3dadd( 28.5731, -8.30928, -13.3366, 0.44 ) }
    dend_35 { pt3dadd( 29.6111, -8.32233, -13.67, 0.44 ) }
    dend_35 { pt3dadd( 30.1765, -8.35343, -13.8469, 0.44 ) }
    dend_35 { pt3dadd( 31.0752, -8.394, -14.1155, 1.25 ) }
    dend_35 { pt3dadd( 31.7107, -8.39398, -14.321, 1.25 ) }
    dend_35 { pt3dadd( 32.2302, -8.36924, -14.51, 0.88 ) }
    dend_35 { pt3dadd( 33.5386, -8.24862, -15.0325, 0.22 ) }
    dend_35 { pt3dadd( 34.2576, -8.12829, -15.3387, 1.1 ) }
    dend_35 { pt3dadd( 35.0993, -7.91834, -15.7234, 0.73 ) }
    dend_35 { pt3dadd( 36.3001, -7.56926, -16.2822, 1.25 ) }
    dend_35 { pt3dadd( 36.879, -7.3908, -16.5548, 2.13 ) }
    dend_35 { pt3dadd( 37.398, -7.22107, -16.7957, 2.13 ) }
    dend_35 { pt3dadd( 38.7666, -6.727, -17.3976, 0.81 ) }
    dend_35 { pt3dadd( 40.1229, -6.31398, -18.032, 0.29 ) }
    dend_35 { pt3dadd( 40.4965, -6.22178, -18.2237, 0.15 ) }
    dend_35 { pt3dadd( 41.0205, -6.11805, -18.5058, 0.15 ) }
    dend_35 { pt3dadd( 41.4188, -6.06087, -18.7289, 0.15 ) }
    dend_35 { pt3dadd( 42.7514, -5.87777, -19.4937, 2.06 ) }
    dend_35 { pt3dadd( 44.4073, -5.65104, -20.4652, 0.66 ) }
    dend_35 { pt3dadd( 45.5663, -5.46172, -21.1585, 0.44 ) }
    dend_35 { pt3dadd( 46.6049, -5.25008, -21.7771, 1.69 ) }
    dend_35 { pt3dadd( 48.0224, -4.97089, -22.6117, 0.07 ) }
    dend_35 { pt3dadd( 48.9292, -4.82653, -23.1343, 1.18 ) }
    dend_35 { pt3dadd( 49.6174, -4.74479, -23.5163, 1.76 ) }
    dend_35 { pt3dadd( 50.5402, -4.64017, -23.9986, 1.76 ) }
    dend_35 { pt3dadd( 51.8827, -4.52656, -24.724, 0.15 ) }
    dend_35 { pt3dadd( 52.9449, -4.42902, -25.3597, 0.15 ) }
    dend_35 { pt3dadd( 53.6073, -4.35518, -25.8517, 0.51 ) }
    dend_35 { pt3dadd( 54.3177, -4.24887, -26.4661, 1.4 ) }
    dend_35 { pt3dadd( 54.9215, -4.12267, -27.0158, 1.76 ) }
    dend_35 { pt3dadd( 56.0667, -3.81202, -28.0686, 0.07 ) }
    dend_35 { pt3dadd( 57.256, -3.42371, -29.1789, 2.2 ) }
    dend_35 { pt3dadd( 59.0872, -2.77265, -30.8359, 0.81 ) }
    dend_35 { pt3dadd( 60.4189, -2.32587, -31.9987, 1.47 ) }
    dend_35 { pt3dadd( 61.97, -1.88591, -33.2731, 2.35 ) }
    dend_35 { pt3dadd( 63.5677, -1.52438, -34.439, 0.07 ) }
    dend_35 { pt3dadd( 63.9931, -1.44508, -34.7054, 0.07 ) }
    dend_35 { pt3dadd( 64.8791, -1.31885, -35.1695, 1.69 ) }
    dend_35 { pt3dadd( 66.3286, -1.19713, -35.7487, 0.15 ) }
    dend_35 { pt3dadd( 67.4972, -1.16337, -36.1696, 0.15 ) }
    dend_35 { pt3dadd( 68.9744, -1.17686, -36.6691, 2.06 ) }
    dend_35 { pt3dadd( 70.1583, -1.21564, -37.0711, 0.95 ) }
    dend_35 { pt3dadd( 71.0132, -1.2347, -37.374, 0.07 ) }
    dend_35 { pt3dadd( 71.7973, -1.24434, -37.6645, 0.51 ) }
    dend_35 { pt3dadd( 72.9288, -1.25247, -38.0754, 0.07 ) }
    dend_35 { pt3dadd( 73.6866, -1.26714, -38.3611, 0.88 ) }
    dend_35 { pt3dadd( 74.4722, -1.30119, -38.6848, 0.07 ) }
    dend_35 { pt3dadd( 75.7042, -1.39426, -39.1826, 2.2 ) }
    dend_35 { pt3dadd( 77.0432, -1.53784, -39.7441, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 77.9766, -1.63461, -40.1672, 0.81 ) }
    dend_35 { pt3dadd( 78.3453, -1.66782, -40.34, 0.88 ) }
    dend_35 { pt3dadd( 79.2801, -1.69092, -40.8943, 0.07 ) }
    dend_35 { pt3dadd( 79.9628, -1.66088, -41.3684, 0.07 ) }
    dend_35 { pt3dadd( 81.1548, -1.49206, -42.3411, 1.62 ) }
    dend_35 { pt3dadd( 82.2399, -1.19603, -43.4039, 0.07 ) }
    dend_35 { pt3dadd( 83.1624, -0.814186, -44.4396, 2.06 ) }
    dend_35 { pt3dadd( 84.6855, -0.0198265, -46.2682, 1.03 ) }
    dend_35 { pt3dadd( 85.1166, 0.248951, -46.8273, 1.03 ) }
    dend_35 { pt3dadd( 86.0008, 0.852894, -47.9907, 2.2 ) }
    dend_35 { pt3dadd( 87.5123, 1.97322, -49.9591, 0.59 ) }
    dend_35 { pt3dadd( 88.1186, 2.4505, -50.7269, 0.59 ) }
    dend_35 { pt3dadd( 88.7834, 2.94854, -51.4922, 1.4 ) }
    dend_35 { pt3dadd( 89.2584, 3.26542, -51.9487, 1.4 ) }
    dend_35 { pt3dadd( 90.4816, 4.02148, -53.0305, 0.07 ) }
    dend_35 { pt3dadd( 91.2572, 4.45827, -53.6459, 1.03 ) }
    dend_35 { pt3dadd( 91.7522, 4.71359, -54.0022, 1.47 ) }
    dend_35 { pt3dadd( 93.7185, 5.65498, -55.3667, 0.07 ) }
    dend_35 { pt3dadd( 95.2009, 6.36425, -56.4087, 1.91 ) }
    dend_35 { pt3dadd( 96.2372, 6.84448, -57.1234, 0.59 ) }
    dend_35 { pt3dadd( 96.9972, 7.19795, -57.6477, 1.32 ) }
    dend_35 { pt3dadd( 98.3685, 7.80977, -58.5276, 0.07 ) }
    dend_35 { pt3dadd( 99.2428, 8.18417, -59.0359, 0.95 ) }
    dend_35 { pt3dadd( 100.268, 8.64104, -59.5394, 0.07 ) }
    dend_35 { pt3dadd( 100.891, 8.91995, -59.8018, 0.44 ) }
    dend_35 { pt3dadd( 101.518, 9.19884, -60.0272, 0.07 ) }
    dend_35 { pt3dadd( 102.349, 9.59491, -60.3673, 1.25 ) }
    dend_35 { pt3dadd( 103.197, 10.0368, -60.7516, 0.07 ) }
    dend_35 { pt3dadd( 104.22, 10.6222, -61.277, 1.1 ) }
    dend_35 { pt3dadd( 104.577, 10.8291, -61.467, 1.1 ) }
    dend_35 { pt3dadd( 104.953, 11.048, -61.6817, 1.4 ) }
    dend_35 { pt3dadd( 106.776, 12.0725, -62.7345, 0.07 ) }
    dend_35 { pt3dadd( 107.458, 12.4399, -63.1431, 1.69 ) }
    dend_35 { pt3dadd( 107.847, 12.6401, -63.363, 1.69 ) }
    dend_35 { pt3dadd( 109.286, 13.3399, -64.2078, 0.07 ) }
    dend_35 { pt3dadd( 109.577, 13.4723, -64.3789, 0.59 ) }
    dend_35 { pt3dadd( 110.156, 13.698, -64.6867, 0.07 ) }
    dend_35 { pt3dadd( 111.06, 13.9274, -65.1025, 1.4 ) }
    dend_35 { pt3dadd( 111.391, 13.982, -65.2566, 1.4 ) }
    dend_35 { pt3dadd( 113.118, 14.1727, -66.1164, 0.29 ) }
    dend_35 { pt3dadd( 113.641, 14.1949, -66.3913, 0.95 ) }
    dend_35 { pt3dadd( 114.621, 14.1841, -66.9043, 0.07 ) }
    dend_35 { pt3dadd( 115.405, 14.1214, -67.2939, 1.25 ) }
    dend_35 { pt3dadd( 115.804, 14.0565, -67.4614, 1.25 ) }
    dend_35 { pt3dadd( 116.833, 13.8018, -67.8279, 0.07 ) }
    dend_35 { pt3dadd( 117.32, 13.6328, -67.956, 0.07 ) }
    dend_35 { pt3dadd( 117.606, 13.5142, -68.0368, 0.07 ) }
    dend_35 { pt3dadd( 118.208, 13.2098, -68.2019, 0.07 ) }
    dend_35 { pt3dadd( 118.923, 12.8354, -68.3988, 1.32 ) }
    dend_35 { pt3dadd( 119.18, 12.7048, -68.4788, 1.32 ) }
    dend_35 { pt3dadd( 119.981, 12.38, -68.7978, 0.07 ) }
    dend_35 { pt3dadd( 120.525, 12.2436, -69.0974, 0.07 ) }
    dend_35 { pt3dadd( 121.277, 12.2071, -69.6921, 0.07 ) }
    dend_35 { pt3dadd( 121.803, 12.3125, -70.25, 0.07 ) }
    dend_35 { pt3dadd( 122.36, 12.5095, -70.9541, 1.47 ) }
    dend_35 { pt3dadd( 123.35, 12.9038, -72.2115, 1.69 ) }
    dend_35 { pt3dadd( 124.038, 13.2004, -73.0815, 1.69 ) }
    dend_35 { pt3dadd( 125.184, 13.7021, -74.43, 0.88 ) }
    dend_35 { pt3dadd( 126.081, 14.0996, -75.4761, 0.51 ) }
    dend_35 { pt3dadd( 126.952, 14.427, -76.3831, 0.07 ) }
    dend_35 { pt3dadd( 127.931, 14.7612, -77.3345, 1.47 ) }
    dend_35 { pt3dadd( 128.393, 14.9034, -77.7626, 1.47 ) }
    dend_35 { pt3dadd( 129.228, 15.1572, -78.4562, 0.07 ) }
    dend_35 { pt3dadd( 131.45, 16.03, -80.3842, 0.95 ) }
    dend_35 { pt3dadd( 132.155, 16.4032, -81.0299, 0.73 ) }
    dend_35 { pt3dadd( 132.944, 16.9773, -81.8189, 0.07 ) }
    dend_35 { pt3dadd( 133.864, 17.8448, -82.8224, 0.07 ) }
    dend_35 { pt3dadd( 134.507, 18.6109, -83.562, 2.35 ) }
    dend_35 { pt3dadd( 135.674, 20.4275, -85.1206, 0.22 ) }
    dend_35 { pt3dadd( 136.05, 21.2035, -85.6692, 1.47 ) }
    dend_35 { pt3dadd( 136.415, 22.2518, -86.4009, 0.15 ) }
    dend_35 { pt3dadd( 136.639, 23.1931, -87.0978, 0.15 ) }
    dend_35 { pt3dadd( 136.763, 24.2107, -87.8629, 1.32 ) }
    dend_35 { pt3dadd( 136.85, 25.9136, -89.3215, 0.07 ) }
    dend_35 { pt3dadd( 136.871, 26.6824, -90.0261, 0.15 ) }
    dend_35 { pt3dadd( 136.875, 27.7537, -91.0896, 0.95 ) }
    dend_35 { pt3dadd( 136.891, 29.4099, -92.8503, 0.15 ) }
    dend_35 { pt3dadd( 136.922, 30.1116, -93.6011, 1.4 ) }
    dend_35 { pt3dadd( 137.121, 32.1927, -95.8752, 0.81 ) }
    dend_35 { pt3dadd( 137.273, 33.0378, -96.8018, 1.18 ) }
    dend_35 { pt3dadd( 137.448, 33.6079, -97.5348, 1.25 ) }
    dend_35 { pt3dadd( 138.072, 34.9608, -99.4664, 0.81 ) }
    dend_35 { pt3dadd( 138.622, 35.8351, -100.866, 0.51 ) }
    dend_35 { pt3dadd( 139.02, 36.3443, -101.772, 1.1 ) }
    dend_35 { pt3dadd( 139.32, 36.6641, -102.369, 1.1 ) }
    dend_35 { pt3dadd( 141.0, 38.0657, -105.243, 0.81 ) }
    dend_35 { pt3dadd( 141.572, 38.4312, -106.05, 1.03 ) }
    dend_35 { pt3dadd( 142.311, 38.8023, -106.918, 0.44 ) }
    dend_35 { pt3dadd( 142.852, 39.0599, -107.502, 0.29 ) }
    dend_35 { pt3dadd( 143.651, 39.51, -108.263, 0.95 ) }
    dend_35 { pt3dadd( 144.44, 39.9833, -108.944, 0.07 ) }
    dend_35 { pt3dadd( 145.07, 40.3621, -109.313, 0.51 ) }
    dend_35 { pt3dadd( 146.287, 41.0341, -109.996, 0.07 ) }
    dend_35 { pt3dadd( 146.993, 41.3629, -110.383, 0.59 ) }
    dend_35 { pt3dadd( 147.605, 41.6083, -110.738, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 95/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 11.453, -17.9559, -10.3189, 0.81 ) }
    dend_33 { pt3dadd( 12.0623, -19.6553, -10.2819, 0.81 ) }
    dend_33 { pt3dadd( 12.3331, -20.7468, -10.2764, 0.37 ) }
    dend_33 { pt3dadd( 12.5439, -21.945, -10.2884, 1.18 ) }
    dend_33 { pt3dadd( 12.6535, -22.9305, -10.3298, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_33 { pt3dadd( 12.7393, -24.4867, -10.4259, 1.25 ) }
    dend_33 { pt3dadd( 12.7606, -25.9939, -10.5453, 0.59 ) }
    dend_33 { pt3dadd( 12.6608, -26.9517, -10.6475, 0.88 ) }
    dend_33 { pt3dadd( 12.5072, -27.8541, -10.743, 0.66 ) }
    dend_33 { pt3dadd( 12.3181, -28.7934, -10.8107, 0.88 ) }
    dend_33 { pt3dadd( 12.1517, -29.5356, -10.8312, 0.88 ) }
    dend_33 { pt3dadd( 11.8275, -31.0162, -10.8262, 0.29 ) }
    dend_33 { pt3dadd( 11.4976, -32.7058, -10.7568, 1.1 ) }
    dend_33 { pt3dadd( 11.2479, -33.9417, -10.6523, 1.32 ) }
    dend_33 { pt3dadd( 10.974, -35.2206, -10.4944, 1.84 ) }
    dend_33 { pt3dadd( 10.7196, -36.3666, -10.3168, 1.69 ) }
    dend_33 { pt3dadd( 10.5276, -37.1138, -10.1935, 1.62 ) }
    dend_33 { pt3dadd( 10.0927, -38.4921, -9.96448, 0.66 ) }
    dend_33 { pt3dadd( 9.6569, -39.7404, -9.79377, 0.51 ) }
    dend_33 { pt3dadd( 9.37401, -40.4978, -9.71824, 0.51 ) }
    dend_33 { pt3dadd( 9.03099, -41.3617, -9.68102, 0.51 ) }
    dend_33 { pt3dadd( 8.63014, -42.353, -9.69671, 0.59 ) }
    dend_33 { pt3dadd( 8.15215, -43.4832, -9.77761, 1.47 ) }
    dend_33 { pt3dadd( 7.73729, -44.475, -9.9124, 1.84 ) }
    dend_33 { pt3dadd( 7.22117, -45.737, -10.1339, 1.84 ) }
    dend_33 { pt3dadd( 6.72951, -46.9568, -10.3857, 1.25 ) }
    dend_33 { pt3dadd( 6.09162, -48.6058, -10.746, 0.81 ) }
    dend_33 { pt3dadd( 5.72971, -49.6326, -10.9692, 0.81 ) }
    dend_33 { pt3dadd( 5.4414, -50.5792, -11.1589, 0.81 ) }
    dend_33 { pt3dadd( 5.02521, -52.229, -11.4556, 0.73 ) }
    dend_33 { pt3dadd( 4.7635, -53.6436, -11.6646, 1.1 ) }
    dend_33 { pt3dadd( 4.66881, -54.4037, -11.7388, 2.42 ) }
    dend_33 { pt3dadd( 4.59622, -55.3472, -11.7959, 2.42 ) }
    dend_33 { pt3dadd( 4.47301, -57.8918, -11.8769, 0.44 ) }
    dend_33 { pt3dadd( 4.44423, -58.7033, -11.8796, 0.29 ) }
    dend_33 { pt3dadd( 4.40694, -59.9971, -11.8652, 0.51 ) }
    dend_33 { pt3dadd( 4.36434, -61.0272, -11.844, 1.25 ) }
    dend_33 { pt3dadd( 4.34137, -61.677, -11.837, 1.32 ) }
    dend_33 { pt3dadd( 4.30562, -63.2105, -11.8318, 0.37 ) }
    dend_33 { pt3dadd( 4.27585, -64.1887, -11.8221, 0.37 ) }
    dend_33 { pt3dadd( 4.21676, -66.1413, -11.7968, 2.28 ) }
    dend_33 { pt3dadd( 4.1696, -67.3846, -11.7955, 2.64 ) }
    dend_33 { pt3dadd( 4.0984, -69.8555, -11.7989, 0.51 ) }
    dend_33 { pt3dadd( 4.09026, -70.9073, -11.8021, 0.07 ) }
    dend_33 { pt3dadd( 4.1078, -72.5212, -11.8282, 0.07 ) }
    dend_33 { pt3dadd( 4.14401, -74.0037, -11.8765, 1.62 ) }
    dend_33 { pt3dadd( 4.2065, -75.861, -11.9694, 0.66 ) }
    dend_33 { pt3dadd( 4.24503, -77.086, -12.047, 0.29 ) }
    dend_33 { pt3dadd( 4.26859, -78.3129, -12.1488, 0.29 ) }
    dend_33 { pt3dadd( 4.30871, -79.4533, -12.2767, 1.18 ) }
    dend_33 { pt3dadd( 4.39673, -81.0143, -12.5044, 1.4 ) }
    dend_33 { pt3dadd( 4.45626, -81.8582, -12.6612, 1.1 ) }
    dend_33 { pt3dadd( 4.56255, -83.123, -12.9206, 0.73 ) }
    dend_33 { pt3dadd( 4.64908, -84.5198, -13.2351, 1.47 ) }
    dend_33 { pt3dadd( 4.69977, -85.5599, -13.4683, 1.47 ) }
    dend_33 { pt3dadd( 4.75559, -87.0051, -13.7621, 0.95 ) }
    dend_33 { pt3dadd( 4.77745, -88.1008, -13.9621, 0.59 ) }
    dend_33 { pt3dadd( 4.7754, -88.7255, -14.0518, 0.37 ) }
    dend_33 { pt3dadd( 4.74203, -90.3782, -14.2354, 1.98 ) }
    dend_33 { pt3dadd( 4.72251, -91.2388, -14.2936, 1.98 ) }
    dend_33 { pt3dadd( 4.67453, -93.0697, -14.3465, 0.44 ) }
    dend_33 { pt3dadd( 4.64857, -94.269, -14.3467, 0.29 ) }
    dend_33 { pt3dadd( 4.62192, -95.5165, -14.3148, 0.29 ) }
    dend_33 { pt3dadd( 4.61205, -96.2931, -14.3099, 0.29 ) }
    dend_33 { pt3dadd( 4.58198, -97.1816, -14.3024, 0.29 ) }
    dend_33 { pt3dadd( 4.49349, -98.784, -14.2896, 2.2 ) }
    dend_33 { pt3dadd( 4.43573, -99.393, -14.279, 2.42 ) }
    dend_33 { pt3dadd( 4.30277, -100.316, -14.2646, 2.42 ) }
    dend_33 { pt3dadd( 4.07805, -101.462, -14.2125, 1.62 ) }
    dend_33 { pt3dadd( 3.40256, -103.959, -13.9358, 0.15 ) }
    dend_33 { pt3dadd( 3.18544, -104.581, -13.8137, 1.18 ) }
    dend_33 { pt3dadd( 2.78891, -105.55, -13.5451, 0.37 ) }
    dend_33 { pt3dadd( 2.60205, -106.019, -13.3984, 0.37 ) }
    dend_33 { pt3dadd( 2.1947, -107.171, -13.0086, 0.59 ) }
    dend_33 { pt3dadd( 1.83411, -108.476, -12.5578, 0.07 ) }
    dend_33 { pt3dadd( 1.57187, -110.011, -12.0733, 1.91 ) }
    dend_33 { pt3dadd( 1.51189, -110.93, -11.8418, 2.2 ) }
    dend_33 { pt3dadd( 1.58903, -112.64, -11.5383, 0.07 ) }
    dend_33 { pt3dadd( 1.77644, -113.983, -11.3683, 0.07 ) }
    dend_33 { pt3dadd( 2.02678, -115.056, -11.3012, 1.25 ) }
    dend_33 { pt3dadd( 2.30781, -115.947, -11.3005, 1.76 ) }
    dend_33 { pt3dadd( 2.96427, -117.662, -11.3773, 0.15 ) }
    dend_33 { pt3dadd( 3.60069, -119.1, -11.4729, 0.22 ) }
    dend_33 { pt3dadd( 3.97086, -119.896, -11.5673, 0.37 ) }
    dend_33 { pt3dadd( 4.40197, -120.827, -11.7298, 0.37 ) }
    dend_33 { pt3dadd( 4.91078, -121.982, -11.963, 0.07 ) }
    dend_33 { pt3dadd( 5.30271, -122.95, -12.1753, 0.95 ) }
    dend_33 { pt3dadd( 5.74918, -124.118, -12.4449, 1.84 ) }
    dend_33 { pt3dadd( 6.16668, -125.417, -12.7456, 1.54 ) }
    dend_33 { pt3dadd( 6.64339, -127.183, -13.1507, 0.15 ) }
    dend_33 { pt3dadd( 6.81018, -127.834, -13.2943, 0.15 ) }
    dend_33 { pt3dadd( 7.04799, -128.819, -13.4816, 0.88 ) }
    dend_33 { pt3dadd( 7.17039, -129.416, -13.5828, 0.88 ) }
    dend_33 { pt3dadd( 7.32565, -130.349, -13.7085, 0.07 ) }
    dend_33 { pt3dadd( 7.40143, -130.86, -13.757, 0.07 ) }
    dend_33 { pt3dadd( 7.49963, -131.553, -13.8257, 0.66 ) }
    dend_33 { pt3dadd( 7.53715, -131.909, -13.8839, 0.66 ) }
    dend_33 { pt3dadd( 7.59043, -132.805, -14.0574, 0.22 ) }
    dend_33 { pt3dadd( 7.60752, -133.472, -14.1941, 0.44 ) }
    dend_33 { pt3dadd( 7.6119, -135.003, -14.4912, 2.13 ) }
    dend_33 { pt3dadd( 7.58111, -136.358, -14.7584, 1.69 ) }
    dend_33 { pt3dadd( 7.46177, -138.091, -15.0802, 0.07 ) }
    dend_33 { pt3dadd( 7.3869, -138.748, -15.1879, 0.07 ) }
    dend_33 { pt3dadd( 7.2495, -139.718, -15.3162, 0.44 ) }
    dend_33 { pt3dadd( 7.08305, -140.821, -15.435, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_33 { pt3dadd( 6.91492, -141.824, -15.4901, 0.07 ) }
    dend_33 { pt3dadd( 6.57858, -143.622, -15.5112, 1.76 ) }
    dend_33 { pt3dadd( 6.39787, -144.693, -15.4738, 1.25 ) }
    dend_33 { pt3dadd( 6.07786, -146.775, -15.3753, 0.22 ) }
    dend_33 { pt3dadd( 5.95329, -147.615, -15.3188, 0.22 ) }
    dend_33 { pt3dadd( 5.75315, -148.972, -15.2045, 1.62 ) }
    dend_33 { pt3dadd( 5.61012, -149.875, -15.1017, 1.62 ) }
    dend_33 { pt3dadd( 5.53424, -150.332, -15.0532, 1.62 ) }
    dend_33 { pt3dadd( 5.14462, -152.4, -14.8614, 0.29 ) }
    dend_33 { pt3dadd( 4.94714, -153.256, -14.7957, 0.29 ) }
    dend_33 { pt3dadd( 4.65275, -154.366, -14.7344, 1.62 ) }
    dend_33 { pt3dadd( 4.18184, -155.838, -14.7003, 1.03 ) }
    dend_33 { pt3dadd( 3.67817, -157.159, -14.6815, 0.07 ) }
    dend_33 { pt3dadd( 3.3489, -157.89, -14.6709, 0.59 ) }
    dend_33 { pt3dadd( 2.83654, -158.813, -14.6524, 0.07 ) }
    dend_33 { pt3dadd( 2.56945, -159.226, -14.6466, 0.07 ) }
    dend_33 { pt3dadd( 1.90166, -160.147, -14.6279, 1.1 ) }
    dend_33 { pt3dadd( 1.32754, -160.922, -14.6033, 0.07 ) }
    dend_33 { pt3dadd( 0.926607, -161.475, -14.5638, 0.07 ) }
    dend_33 { pt3dadd( 0.496914, -162.149, -14.5186, 1.03 ) }
    dend_33 { pt3dadd( 0.225235, -162.644, -14.5083, 1.32 ) }
    dend_33 { pt3dadd( -0.117476, -163.411, -14.5235, 1.32 ) }
    dend_33 { pt3dadd( -0.649119, -164.924, -14.5827, 0.15 ) }
    dend_33 { pt3dadd( -0.832809, -165.527, -14.6149, 0.15 ) }
    dend_33 { pt3dadd( -1.17759, -166.75, -14.6703, 1.18 ) }
    dend_33 { pt3dadd( -1.56365, -168.207, -14.7324, 0.07 ) }
    dend_33 { pt3dadd( -1.87822, -169.425, -14.7752, 1.4 ) }
    dend_33 { pt3dadd( -2.07815, -170.184, -14.7772, 1.54 ) }
    dend_33 { pt3dadd( -2.60476, -172.193, -14.6987, 0.15 ) }
    dend_33 { pt3dadd( -2.94227, -173.506, -14.604, 0.15 ) }
    dend_33 { pt3dadd( -3.16952, -174.49, -14.4945, 1.69 ) }
    dend_33 { pt3dadd( -3.2621, -174.906, -14.4291, 1.76 ) }
    dend_33 { pt3dadd( -3.6243, -176.5, -14.175, 0.07 ) }
    dend_33 { pt3dadd( -3.89997, -177.668, -13.9905, 0.07 ) }
    dend_33 { pt3dadd( -4.16286, -178.763, -13.829, 1.76 ) }
    dend_33 { pt3dadd( -4.39788, -179.654, -13.7361, 1.76 ) }
    dend_33 { pt3dadd( -4.71644, -180.7, -13.6736, 2.13 ) }
    dend_33 { pt3dadd( -5.2969, -182.377, -13.6631, 0.07 ) }
    dend_33 { pt3dadd( -5.68888, -183.377, -13.6999, 0.73 ) }
    dend_33 { pt3dadd( -6.05488, -184.338, -13.7522, 0.73 ) }
    dend_33 { pt3dadd( -6.53471, -185.785, -13.8219, 0.07 ) }
    dend_33 { pt3dadd( -6.86276, -186.95, -13.8664, 0.07 ) }
    dend_33 { pt3dadd( -7.16519, -188.339, -13.908, 1.76 ) }
    dend_33 { pt3dadd( -7.40199, -189.792, -13.923, 1.4 ) }
    dend_33 { pt3dadd( -7.62145, -191.67, -13.9052, 0.22 ) }
    dend_33 { pt3dadd( -7.77829, -193.897, -13.8207, 0.22 ) }
    dend_33 { pt3dadd( -7.81149, -195.272, -13.7294, 1.18 ) }
    dend_33 { pt3dadd( -7.80779, -195.698, -13.6948, 1.47 ) }
    dend_33 { pt3dadd( -7.76988, -196.815, -13.5943, 1.18 ) }
    dend_33 { pt3dadd( -7.69071, -198.519, -13.4408, 0.22 ) }
    dend_33 { pt3dadd( -7.67845, -199.459, -13.3422, 0.88 ) }
    dend_33 { pt3dadd( -7.6967, -200.162, -13.2759, 0.07 ) }
    dend_33 { pt3dadd( -7.70853, -200.344, -13.2593, 0.07 ) }
    dend_33 { pt3dadd( -7.75803, -200.853, -13.2176, 0.07 ) }
    dend_33 { pt3dadd( -7.9112, -202.237, -13.1132, 1.91 ) }
    dend_33 { pt3dadd( -7.98879, -202.879, -13.092, 2.06 ) }
    dend_33 { pt3dadd( -8.26773, -204.485, -13.0749, 0.07 ) }
    dend_33 { pt3dadd( -8.42778, -205.202, -13.0764, 0.51 ) }
    dend_33 { pt3dadd( -8.6454, -206.083, -13.084, 0.07 ) }
    dend_33 { pt3dadd( -8.98225, -207.32, -13.0904, 0.44 ) }
    dend_33 { pt3dadd( -9.38449, -208.667, -13.0485, 0.07 ) }
    dend_33 { pt3dadd( -9.74547, -209.794, -12.9688, 0.44 ) }
    dend_33 { pt3dadd( -10.22, -211.177, -12.8165, 1.98 ) }
    dend_33 { pt3dadd( -10.3977, -211.661, -12.7523, 1.98 ) }
    dend_33 { pt3dadd( -10.9169, -213.017, -12.5333, 1.47 ) }
    dend_33 { pt3dadd( -11.3694, -214.168, -12.3422, 0.07 ) }
    dend_33 { pt3dadd( -11.7676, -215.242, -12.1518, 0.07 ) }
    dend_33 { pt3dadd( -12.1022, -216.227, -11.9997, 0.22 ) }
    dend_33 { pt3dadd( -12.4478, -217.25, -11.8567, 1.69 ) }
    dend_33 { pt3dadd( -12.6143, -217.745, -11.801, 1.69 ) }
    dend_33 { pt3dadd( -13.3254, -219.979, -11.6033, 0.15 ) }
    dend_33 { pt3dadd( -13.4223, -220.313, -11.58, 0.07 ) }
    dend_33 { pt3dadd( -13.7063, -221.27, -11.4758, 0.59 ) }
    dend_33 { pt3dadd( -14.0834, -222.528, -11.2687, 0.07 ) }
    dend_33 { pt3dadd( -14.5771, -224.099, -10.9462, 1.76 ) }
    dend_33 { pt3dadd( -15.1135, -225.661, -10.6088, 0.07 ) }
    dend_33 { pt3dadd( -15.3881, -226.366, -10.4419, 0.07 ) }
    dend_33 { pt3dadd( -16.0162, -227.766, -10.0701, 0.07 ) }
    dend_33 { pt3dadd( -16.5649, -228.817, -9.75672, 1.18 ) }
    dend_33 { pt3dadd( -17.0438, -229.595, -9.51042, 2.13 ) }
    dend_33 { pt3dadd( -17.6165, -230.398, -9.24286, 1.54 ) }
    dend_33 { pt3dadd( -18.485, -231.457, -8.89377, 0.07 ) }
    dend_33 { pt3dadd( -19.1886, -232.225, -8.67899, 1.1 ) }
    dend_33 { pt3dadd( -19.8266, -232.88, -8.54063, 1.25 ) }
    dend_33 { pt3dadd( -20.9347, -233.889, -8.3132, 0.07 ) }
    dend_33 { pt3dadd( -21.4925, -234.35, -8.18627, 0.07 ) }
    dend_33 { pt3dadd( -21.8886, -234.66, -8.08598, 0.37 ) }
    dend_33 { pt3dadd( -22.8331, -235.406, -7.82825, 0.07 ) }
    dend_33 { pt3dadd( -23.6121, -236.054, -7.63276, 1.69 ) }
    dend_33 { pt3dadd( -24.8172, -237.108, -7.35322, 0.07 ) }
    dend_33 { pt3dadd( -25.7147, -237.921, -7.15085, 0.07 ) }
    dend_33 { pt3dadd( -26.8434, -239.02, -6.92123, 1.47 ) }
    dend_33 { pt3dadd( -27.6139, -239.849, -6.79091, 1.47 ) }
    dend_33 { pt3dadd( -28.9041, -241.408, -6.60102, 0.15 ) }
    dend_33 { pt3dadd( -29.6711, -242.434, -6.52015, 0.07 ) }
    dend_33 { pt3dadd( -30.4657, -243.59, -6.45854, 2.13 ) }
    dend_33 { pt3dadd( -31.159, -244.646, -6.40695, 1.18 ) }
    dend_33 { pt3dadd( -32.0487, -245.957, -6.35869, 0.22 ) }
    dend_33 { pt3dadd( -32.5949, -246.731, -6.32375, 0.22 ) }
    dend_33 { pt3dadd( -33.7221, -248.319, -6.18061, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_33 { pt3dadd( -34.558, -249.478, -6.07229, 1.4 ) }
    dend_33 { pt3dadd( -34.9167, -249.97, -6.03269, 1.25 ) }
    dend_33 { pt3dadd( -36.0774, -251.544, -5.94168, 0.15 ) }
    dend_33 { pt3dadd( -36.5196, -252.142, -5.91982, 0.51 ) }
    dend_33 { pt3dadd( -37.1709, -253.036, -5.93123, 0.07 ) }
    dend_33 { pt3dadd( -37.7037, -253.833, -5.98817, 0.07 ) }
    dend_33 { pt3dadd( -38.2953, -254.82, -6.08573, 1.54 ) }
    dend_33 { pt3dadd( -39.1355, -256.316, -6.26425, 0.07 ) }
    dend_33 { pt3dadd( -39.4873, -256.981, -6.34277, 0.51 ) }
    dend_33 { pt3dadd( -39.9777, -257.945, -6.45576, 0.07 ) }
    dend_33 { pt3dadd( -40.539, -259.03, -6.55704, 1.47 ) }
    dend_33 { pt3dadd( -40.8384, -259.603, -6.59033, 1.54 ) }
    dend_33 { pt3dadd( -41.6117, -261.042, -6.65227, 0.07 ) }
    dend_33 { pt3dadd( -42.1013, -261.951, -6.65236, 0.07 ) }
    dend_33 { pt3dadd( -42.4391, -262.575, -6.64766, 1.47 ) }
    dend_33 { pt3dadd( -43.0901, -263.789, -6.61029, 1.62 ) }
    dend_33 { pt3dadd( -43.9169, -265.273, -6.52498, 0.15 ) }
    dend_33 { pt3dadd( -44.3732, -266.066, -6.4593, 0.15 ) }
    dend_33 { pt3dadd( -45.1841, -267.463, -6.30955, 0.59 ) }
    dend_33 { pt3dadd( -45.6988, -268.337, -6.2232, 0.07 ) }
    dend_33 { pt3dadd( -46.2342, -269.251, -6.11776, 0.07 ) }
    dend_33 { pt3dadd( -46.9634, -270.601, -5.92837, 2.13 ) }
    dend_33 { pt3dadd( -47.6639, -271.998, -5.69793, 0.15 ) }
    dend_33 { pt3dadd( -48.1973, -273.193, -5.49279, 1.1 ) }
    dend_33 { pt3dadd( -48.6036, -274.285, -5.31454, 1.69 ) }
    dend_33 { pt3dadd( -48.9768, -275.666, -5.09595, 0.07 ) }
    dend_33 { pt3dadd( -49.0834, -276.504, -4.96123, 0.44 ) }
    dend_33 { pt3dadd( -49.0238, -277.381, -4.82371, 0.07 ) }
    dend_33 { pt3dadd( -48.8778, -278.057, -4.71664, 0.07 ) }
    dend_33 { pt3dadd( -48.4613, -279.373, -4.50028, 1.25 ) }
    dend_33 { pt3dadd( -48.2454, -279.946, -4.40722, 1.25 ) }
    dend_33 { pt3dadd( -47.619, -281.541, -4.14952, 0.07 ) }
    dend_33 { pt3dadd( -47.0374, -283.108, -3.87654, 0.07 ) }
    dend_33 { pt3dadd( -46.8868, -283.536, -3.78943, 0.81 ) }
    dend_33 { pt3dadd( -46.6613, -284.247, -3.60122, 1.1 ) }
    dend_33 { pt3dadd( -46.4228, -285.113, -3.30869, 1.4 ) }
    dend_33 { pt3dadd( -46.0336, -286.966, -2.62448, 0.15 ) }
    dend_33 { pt3dadd( -45.8568, -288.076, -2.19405, 0.15 ) }
    dend_33 { pt3dadd( -45.7125, -289.351, -1.5785, 1.18 ) }
    dend_33 { pt3dadd( -45.5851, -290.837, -0.775832, 0.15 ) }
    dend_33 { pt3dadd( -45.5314, -291.971, -0.10687, 1.62 ) }
    dend_33 { pt3dadd( -45.5221, -292.914, 0.483658, 1.98 ) }
    dend_33 { pt3dadd( -45.5443, -293.277, 0.719888, 1.98 ) }
    dend_33 { pt3dadd( -45.8218, -295.388, 2.12952, 0.15 ) }
    dend_33 { pt3dadd( -45.9619, -296.08, 2.58469, 0.15 ) }
    dend_33 { pt3dadd( -46.1873, -296.968, 3.15868, 0.95 ) }
    dend_33 { pt3dadd( -46.3636, -297.578, 3.59403, 0.95 ) }
    dend_33 { pt3dadd( -46.8116, -299.031, 4.69633, 0.07 ) }
    dend_33 { pt3dadd( -47.2451, -300.309, 5.65999, 1.54 ) }
    dend_33 { pt3dadd( -47.4121, -300.747, 5.99009, 1.54 ) }
    dend_33 { pt3dadd( -47.9957, -302.111, 7.08181, 0.07 ) }
    dend_33 { pt3dadd( -48.665, -303.513, 8.22362, 1.25 ) }
    dend_33 { pt3dadd( -48.9587, -304.071, 8.66559, 1.25 ) }
    dend_33 { pt3dadd( -49.4988, -305.041, 9.33677, 0.73 ) }
    dend_33 { pt3dadd( -49.9376, -305.827, 9.77546, 0.07 ) }
    dend_33 { pt3dadd( -50.358, -306.588, 10.1244, 0.07 ) }
    dend_33 { pt3dadd( -50.9537, -307.607, 10.4868, 0.15 ) }
    dend_33 { pt3dadd( -51.7073, -308.886, 10.8319, 1.84 ) }
    dend_33 { pt3dadd( -52.6247, -310.464, 11.2204, 0.15 ) }
    dend_33 { pt3dadd( -53.3316, -311.732, 11.5665, 0.15 ) }
    dend_33 { pt3dadd( -53.6289, -312.297, 11.7273, 1.76 ) }
    dend_33 { pt3dadd( -54.0059, -313.054, 11.9592, 1.54 ) }
    dend_33 { pt3dadd( -54.8371, -314.711, 12.5109, 0.22 ) }
    dend_33 { pt3dadd( -55.5297, -316.057, 13.0048, 0.22 ) }
    dend_33 { pt3dadd( -56.2469, -317.495, 13.5893, 1.25 ) }
    dend_33 { pt3dadd( -56.4574, -317.903, 13.7645, 1.32 ) }
    dend_33 { pt3dadd( -56.7868, -318.507, 14.0214, 1.1 ) }
    dend_33 { pt3dadd( -57.3234, -319.467, 14.4174, 0.07 ) }
    dend_33 { pt3dadd( -57.735, -320.168, 14.7009, 0.07 ) }
    dend_33 { pt3dadd( -58.4112, -321.33, 15.1161, 0.07 ) }
    dend_33 { pt3dadd( -58.8422, -322.068, 15.3585, 1.1 ) }
    dend_33 { pt3dadd( -59.4774, -323.173, 15.7408, 0.07 ) }
    dend_33 { pt3dadd( -59.8919, -323.903, 16.0135, 1.62 ) }
    dend_33 { pt3dadd( -60.7286, -325.397, 16.6012, 0.15 ) }
    dend_33 { pt3dadd( -61.2503, -326.35, 16.9857, 0.15 ) }
    dend_33 { pt3dadd( -61.7718, -327.299, 17.3828, 1.91 ) }
    dend_33 { pt3dadd( -62.1114, -327.978, 17.6679, 1.91 ) }
    dend_33 { pt3dadd( -62.6322, -329.118, 18.1482, 0.07 ) }
    dend_33 { pt3dadd( -62.7799, -329.485, 18.3013, 0.37 ) }
    dend_33 { pt3dadd( -62.9052, -329.904, 18.4605, 0.07 ) }
    dend_33 { pt3dadd( -63.0794, -330.737, 18.7835, 0.07 ) }
    dend_33 { pt3dadd( -63.1869, -331.467, 19.0613, 0.07 ) }
    dend_33 { pt3dadd( -63.2782, -332.027, 19.276, 1.62 ) }
    dend_33 { pt3dadd( -63.5886, -333.899, 19.9665, 0.15 ) }
    dend_33 { pt3dadd( -63.8022, -335.06, 20.3821, 0.07 ) }
    dend_33 { pt3dadd( -64.0856, -336.42, 20.8578, 1.47 ) }
    dend_33 { pt3dadd( -64.2762, -337.2, 21.1198, 1.03 ) }
    dend_33 { pt3dadd( -64.6757, -338.576, 21.5697, 0.15 ) }
    dend_33 { pt3dadd( -65.0464, -339.695, 21.9146, 0.73 ) }
    dend_33 { pt3dadd( -65.5028, -340.862, 22.2434, 0.07 ) }
    dend_33 { pt3dadd( -65.7408, -341.426, 22.3961, 0.29 ) }
    dend_33 { pt3dadd( -66.2337, -342.717, 22.7049, 0.07 ) }
    dend_33 { pt3dadd( -66.4855, -343.477, 22.897, 1.03 ) }
    dend_33 { pt3dadd( -66.6586, -344.125, 23.0677, 1.03 ) }
    dend_33 { pt3dadd( -66.982, -345.207, 23.3465, 0.07 ) }
    dend_33 { pt3dadd( -67.3538, -346.366, 23.6642, 0.07 ) }
    dend_33 { pt3dadd( -67.7576, -347.53, 24.0298, 0.07 ) }
    dend_33 { pt3dadd( -67.9588, -348.002, 24.1966, 1.47 ) }
    dend_33 { pt3dadd( -68.1791, -348.427, 24.3829, 1.47 ) }
    dend_33 { pt3dadd( -69.2647, -350.039, 25.2831, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_33 { pt3dadd( -69.9709, -350.904, 25.8654, 0.95 ) }
    dend_33 { pt3dadd( -70.6636, -351.609, 26.4174, 0.07 ) }
    dend_33 { pt3dadd( -71.7157, -352.539, 27.2089, 0.07 ) }
    dend_33 { pt3dadd( -72.7422, -353.36, 27.9454, 2.06 ) }
    dend_33 { pt3dadd( -74.3739, -354.513, 29.0547, 0.15 ) }
    dend_33 { pt3dadd( -75.5272, -355.225, 29.7799, 0.07 ) }
    dend_33 { pt3dadd( -76.5695, -355.819, 30.3485, 1.25 ) }
    dend_33 { pt3dadd( -78.2443, -356.726, 31.15, 0.15 ) }
    dend_33 { pt3dadd( -79.1902, -357.239, 31.5622, 0.15 ) }
    dend_33 { pt3dadd( -80.3143, -357.885, 31.9865, 0.29 ) }
    dend_33 { pt3dadd( -81.2485, -358.483, 32.3247, 0.44 ) }
    dend_33 { pt3dadd( -82.495, -359.4, 32.8025, 2.06 ) }
    dend_33 { pt3dadd( -83.0659, -359.916, 33.0575, 1.76 ) }
    dend_33 { pt3dadd( -84.1962, -361.195, 33.6621, 0.07 ) }
    dend_33 { pt3dadd( -84.9017, -362.195, 34.1176, 0.51 ) }
    dend_33 { pt3dadd( -85.3988, -363.089, 34.5184, 0.07 ) }
    dend_33 { pt3dadd( -85.8718, -364.137, 34.9895, 0.07 ) }
    dend_33 { pt3dadd( -86.2451, -365.168, 35.476, 1.03 ) }
    dend_33 { pt3dadd( -86.4049, -365.704, 35.7445, 0.66 ) }
    dend_33 { pt3dadd( -86.6164, -366.534, 36.2064, 0.07 ) }
    dend_33 { pt3dadd( -86.6968, -366.887, 36.4446, 0.07 ) }
    dend_33 { pt3dadd( -86.7883, -367.347, 36.7795, 0.51 ) }
    dend_33 { pt3dadd( -86.9612, -368.287, 37.4827, 0.07 ) }
    dend_33 { pt3dadd( -87.1512, -369.184, 38.1578, 0.88 ) }
    dend_33 { pt3dadd( -87.4824, -370.45, 39.1569, 1.69 ) }
    dend_33 { pt3dadd( -87.9395, -371.871, 40.3167, 0.07 ) }
    dend_33 { pt3dadd( -88.1265, -372.296, 40.6885, 0.07 ) }
    dend_33 { pt3dadd( -88.4307, -372.862, 41.1937, 0.07 ) }
    dend_33 { pt3dadd( -88.9781, -373.675, 41.9391, 0.81 ) }
    dend_33 { pt3dadd( -89.4393, -374.262, 42.4911, 1.4 ) }
    dend_33 { pt3dadd( -89.7907, -374.639, 42.8479, 1.25 ) }
    dend_33 { pt3dadd( -90.8196, -375.714, 43.8395, 0.22 ) }
    dend_33 { pt3dadd( -91.2129, -376.189, 44.2944, 0.22 ) }
    dend_33 { pt3dadd( -91.571, -376.756, 44.8514, 0.95 ) }
    dend_33 { pt3dadd( -91.8241, -377.313, 45.3836, 0.07 ) }
    dend_33 { pt3dadd( -91.9736, -377.692, 45.7507, 0.37 ) }
    dend_33 { pt3dadd( -92.3043, -378.52, 46.5923, 0.07 ) }
    dend_33 { pt3dadd( -92.6237, -379.332, 47.4495, 0.73 ) }
    dend_33 { pt3dadd( -92.9348, -380.1, 48.3709, 0.07 ) }
    dend_33 { pt3dadd( -93.2111, -380.784, 49.1876, 0.66 ) }
    dend_33 { pt3dadd( -93.5257, -381.455, 49.9939, 0.22 ) }
    dend_33 { pt3dadd( -93.7704, -381.935, 50.5435, 1.1 ) }
    dend_33 { pt3dadd( -94.2052, -382.707, 51.3714, 0.07 ) }
    dend_33 { pt3dadd( -94.6297, -383.388, 52.0442, 0.07 ) }
    dend_33 { pt3dadd( -95.3913, -384.608, 53.1398, 1.62 ) }
    dend_33 { pt3dadd( -96.0278, -385.685, 54.0121, 0.07 ) }
    dend_33 { pt3dadd( -96.2591, -386.116, 54.3109, 0.07 ) }
    dend_33 { pt3dadd( -96.5413, -386.672, 54.6804, 0.59 ) }
    dend_33 { pt3dadd( -97.0421, -387.609, 55.2391, 0.07 ) }
    dend_33 { pt3dadd( -97.2099, -387.937, 55.4407, 0.07 ) }
    dend_33 { pt3dadd( -97.4299, -388.416, 55.7563, 0.07 ) }
    dend_33 { pt3dadd( -97.6728, -389.08, 56.1829, 0.73 ) }
    dend_33 { pt3dadd( -97.9983, -390.216, 56.904, 0.07 ) }
    dend_33 { pt3dadd( -98.2172, -391.27, 57.6165, 2.35 ) }
    dend_33 { pt3dadd( -98.4979, -393.069, 59.0477, 0.07 ) }
    dend_33 { pt3dadd( -98.5542, -393.364, 59.3683, 0.07 ) }
    dend_33 { pt3dadd( -98.672, -393.841, 60.085, 0.44 ) }
    dend_33 { pt3dadd( -98.8452, -394.348, 61.059, 0.07 ) }
    dend_33 { pt3dadd( -99.2538, -395.071, 63.0103, 0.66 ) }
    dend_33 { pt3dadd( -99.6354, -395.341, 64.5643, 0.66 ) }
    dend_33 { pt3dadd( -100.448, -395.424, 66.9802, 0.07 ) }
    dend_33 { pt3dadd( -100.859, -395.389, 67.9239, 0.07 ) }
    dend_33 { pt3dadd( -101.46, -395.245, 69.0411, 0.07 ) }
    dend_33 { pt3dadd( -101.919, -395.101, 69.741, 0.37 ) }
    dend_33 { pt3dadd( -103.587, -394.546, 71.9081, 0.07 ) }
    dend_33 { pt3dadd( -104.161, -394.386, 72.5916, 0.07 ) }
    dend_33 { pt3dadd( -104.831, -394.224, 73.3521, 0.95 ) }
    dend_33 { pt3dadd( -106.277, -393.874, 75.0301, 0.07 ) }
    dend_33 { pt3dadd( -107.105, -393.669, 76.0209, 0.81 ) }
    dend_33 { pt3dadd( -107.941, -393.447, 76.9863, 0.37 ) }
    dend_33 { pt3dadd( -108.393, -393.281, 77.4643, 0.07 ) }
    dend_33 { pt3dadd( -108.657, -393.144, 77.7769, 0.29 ) }
    dend_33 { pt3dadd( -109.198, -392.743, 78.4259, 0.07 ) }
    dend_33 { pt3dadd( -109.492, -392.462, 78.7211, 0.88 ) }
    dend_33 { pt3dadd( -109.726, -392.173, 78.9393, 0.88 ) }
    dend_33 { pt3dadd( -110.497, -391.249, 79.4464, 0.07 ) }
    dend_33 { pt3dadd( -110.841, -390.911, 79.5919, 0.07 ) }
    dend_33 { pt3dadd( -111.72, -390.367, 79.7477, 0.15 ) }
    dend_33 { pt3dadd( -112.042, -390.265, 79.7521, 0.44 ) }
    dend_33 { pt3dadd( -112.713, -390.201, 79.7051, 0.07 ) }
    dend_33 { pt3dadd( -114.154, -390.218, 79.5745, 0.07 ) }
    dend_33 { pt3dadd( -115.067, -390.302, 79.4666, 0.81 ) }
    dend_33 { pt3dadd( -116.65, -390.511, 79.2562, 0.07 ) }
    dend_33 { pt3dadd( -117.178, -390.606, 79.1805, 0.29 ) }
    dend_33 { pt3dadd( -118.198, -390.806, 79.024, 0.07 ) }
    dend_33 { pt3dadd( -119.898, -391.188, 78.7464, 0.07 ) }
    dend_33 { pt3dadd( -120.39, -391.3, 78.6846, 0.73 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.453, -17.9559, -10.3189, 0.44 ) }
    dend_32 { pt3dadd( 10.4115, -18.1242, -9.50435, 0.44 ) }
    dend_32 { pt3dadd( 9.66678, -18.3102, -9.00746, 0.44 ) }
    dend_32 { pt3dadd( 9.43353, -18.3934, -8.86317, 1.1 ) }
    dend_32 { pt3dadd( 8.74748, -18.7066, -8.49169, 1.1 ) }
    dend_32 { pt3dadd( 8.14456, -19.0344, -8.20863, 0.15 ) }
    dend_32 { pt3dadd( 7.60875, -19.3526, -7.97535, 0.88 ) }
    dend_32 { pt3dadd( 7.36487, -19.5317, -7.89961, 0.95 ) }
    dend_32 { pt3dadd( 6.93139, -19.871, -7.79421, 0.59 ) }
    dend_32 { pt3dadd( 6.14993, -20.4949, -7.65724, 0.22 ) }
    dend_32 { pt3dadd( 5.54328, -20.9662, -7.59656, 0.81 ) }
    dend_32 { pt3dadd( 5.33114, -21.1058, -7.58242, 0.88 ) }
    dend_32 { pt3dadd( 4.62123, -21.5046, -7.58738, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_32 { pt3dadd( 4.06284, -21.7765, -7.64227, 0.15 ) }
    dend_32 { pt3dadd( 3.0354, -22.2259, -7.78993, 1.03 ) }
    dend_32 { pt3dadd( 2.47886, -22.4664, -7.89751, 1.32 ) }
    dend_32 { pt3dadd( 1.67775, -22.8093, -8.08908, 1.32 ) }
    dend_32 { pt3dadd( 0.517435, -23.2755, -8.39202, 0.07 ) }
    dend_32 { pt3dadd( -0.670659, -23.7308, -8.7114, 0.88 ) }
    dend_32 { pt3dadd( -1.18911, -23.9281, -8.83694, 0.88 ) }
    dend_32 { pt3dadd( -2.14468, -24.2997, -9.02813, 0.37 ) }
    dend_32 { pt3dadd( -2.89534, -24.598, -9.16764, 0.37 ) }
    dend_32 { pt3dadd( -3.62667, -24.8872, -9.29581, 0.37 ) }
    dend_32 { pt3dadd( -4.24829, -25.0934, -9.36257, 1.18 ) }
    dend_32 { pt3dadd( -4.72542, -25.2456, -9.40488, 1.4 ) }
    dend_32 { pt3dadd( -5.0545, -25.3541, -9.43448, 1.32 ) }
    dend_32 { pt3dadd( -5.9807, -25.6925, -9.53083, 0.22 ) }
    dend_32 { pt3dadd( -6.40456, -25.879, -9.581, 0.22 ) }
    dend_32 { pt3dadd( -7.17835, -26.2714, -9.68578, 1.18 ) }
    dend_32 { pt3dadd( -8.20532, -26.846, -9.8585, 0.07 ) }
    dend_32 { pt3dadd( -8.81577, -27.2036, -9.96008, 0.66 ) }
    dend_32 { pt3dadd( -9.78947, -27.7933, -10.1035, 0.07 ) }
    dend_32 { pt3dadd( -10.6146, -28.3249, -10.1918, 1.76 ) }
    dend_32 { pt3dadd( -11.056, -28.618, -10.2202, 1.54 ) }
    dend_32 { pt3dadd( -12.3315, -29.4801, -10.2403, 0.07 ) }
    dend_32 { pt3dadd( -12.9876, -29.896, -10.2062, 0.95 ) }
    dend_32 { pt3dadd( -13.5779, -30.2378, -10.1524, 0.95 ) }
    dend_32 { pt3dadd( -14.367, -30.6502, -10.0568, 0.07 ) }
    dend_32 { pt3dadd( -15.2725, -31.0926, -9.9514, 0.07 ) }
    dend_32 { pt3dadd( -15.9717, -31.4264, -9.8751, 0.07 ) }
    dend_32 { pt3dadd( -16.7722, -31.7915, -9.77744, 1.69 ) }
    dend_32 { pt3dadd( -17.9813, -32.3674, -9.69048, 0.07 ) }
    dend_32 { pt3dadd( -18.9044, -32.8294, -9.65398, 0.07 ) }
    dend_32 { pt3dadd( -19.8958, -33.3359, -9.6412, 1.84 ) }
    dend_32 { pt3dadd( -20.5577, -33.6766, -9.65906, 1.4 ) }
    dend_32 { pt3dadd( -21.2428, -34.0417, -9.69721, 0.59 ) }
    dend_32 { pt3dadd( -22.1885, -34.5915, -9.82222, 0.07 ) }
    dend_32 { pt3dadd( -22.5616, -34.8169, -9.88932, 0.37 ) }
    dend_32 { pt3dadd( -23.0971, -35.1389, -9.99713, 0.07 ) }
    dend_32 { pt3dadd( -23.9594, -35.6066, -10.1397, 1.32 ) }
    dend_32 { pt3dadd( -24.2929, -35.7743, -10.173, 1.32 ) }
    dend_32 { pt3dadd( -26.0739, -36.6204, -10.2524, 0.07 ) }
    dend_32 { pt3dadd( -26.7549, -36.9303, -10.2422, 1.18 ) }
    dend_32 { pt3dadd( -27.0163, -37.0494, -10.2308, 1.18 ) }
    dend_32 { pt3dadd( -28.295, -37.695, -10.1452, 0.07 ) }
    dend_32 { pt3dadd( -29.1338, -38.1542, -10.0506, 0.88 ) }
    dend_32 { pt3dadd( -29.9946, -38.6266, -9.94196, 0.07 ) }
    dend_32 { pt3dadd( -30.9504, -39.1519, -9.79532, 1.47 ) }
    dend_32 { pt3dadd( -31.3307, -39.3699, -9.74612, 1.98 ) }
    dend_32 { pt3dadd( -32.7109, -40.2204, -9.64366, 0.15 ) }
    dend_32 { pt3dadd( -33.2129, -40.5525, -9.63705, 0.37 ) }
    dend_32 { pt3dadd( -33.9325, -41.028, -9.65586, 0.07 ) }
    dend_32 { pt3dadd( -34.5293, -41.4249, -9.70291, 0.81 ) }
    dend_32 { pt3dadd( -34.8605, -41.643, -9.74409, 1.25 ) }
    dend_32 { pt3dadd( -35.8402, -42.2579, -9.89611, 0.15 ) }
    dend_32 { pt3dadd( -36.8601, -42.86, -10.1133, 0.15 ) }
    dend_32 { pt3dadd( -37.4553, -43.2213, -10.2624, 0.88 ) }
    dend_32 { pt3dadd( -38.4266, -43.8813, -10.5675, 0.07 ) }
    dend_32 { pt3dadd( -38.922, -44.241, -10.7433, 1.25 ) }
    dend_32 { pt3dadd( -39.3068, -44.529, -10.8929, 1.25 ) }
    dend_32 { pt3dadd( -40.4573, -45.4147, -11.4072, 0.07 ) }
    dend_32 { pt3dadd( -40.8372, -45.714, -11.5902, 0.73 ) }
    dend_32 { pt3dadd( -41.9614, -46.6232, -12.113, 0.07 ) }
    dend_32 { pt3dadd( -42.4102, -46.9861, -12.3095, 0.07 ) }
    dend_32 { pt3dadd( -43.1414, -47.5728, -12.616, 1.32 ) }
    dend_32 { pt3dadd( -44.4802, -48.6139, -13.1384, 0.29 ) }
    dend_32 { pt3dadd( -44.8855, -48.8895, -13.2725, 0.07 ) }
    dend_32 { pt3dadd( -45.3162, -49.1355, -13.386, 0.59 ) }
    dend_32 { pt3dadd( -46.0539, -49.4819, -13.508, 0.07 ) }
    dend_32 { pt3dadd( -46.3771, -49.6202, -13.545, 0.07 ) }
    dend_32 { pt3dadd( -47.1002, -49.9331, -13.5673, 1.18 ) }
    dend_32 { pt3dadd( -48.1128, -50.3754, -13.5651, 0.15 ) }
    dend_32 { pt3dadd( -49.0302, -50.7887, -13.5589, 0.15 ) }
    dend_32 { pt3dadd( -49.6701, -51.0759, -13.5408, 0.66 ) }
    dend_32 { pt3dadd( -50.4716, -51.4469, -13.4986, 0.07 ) }
    dend_32 { pt3dadd( -51.744, -52.0468, -13.3951, 1.62 ) }
    dend_32 { pt3dadd( -53.4416, -52.8404, -13.2019, 0.07 ) }
    dend_32 { pt3dadd( -54.3315, -53.2408, -13.0847, 0.07 ) }
    dend_32 { pt3dadd( -55.171, -53.5815, -12.9984, 0.07 ) }
    dend_32 { pt3dadd( -55.9088, -53.8386, -12.934, 0.07 ) }
    dend_32 { pt3dadd( -57.1289, -54.1717, -12.8412, 1.47 ) }
    dend_32 { pt3dadd( -57.6476, -54.279, -12.81, 1.47 ) }
    dend_32 { pt3dadd( -58.7342, -54.4966, -12.8556, 0.07 ) }
    dend_32 { pt3dadd( -59.7928, -54.744, -13.0195, 0.07 ) }
    dend_32 { pt3dadd( -60.8736, -55.0516, -13.3078, 0.07 ) }
    dend_32 { pt3dadd( -61.9357, -55.416, -13.7045, 0.07 ) }
    dend_32 { pt3dadd( -62.6712, -55.7183, -14.0361, 1.1 ) }
    dend_32 { pt3dadd( -64.5672, -56.6046, -14.941, 0.44 ) }
    dend_32 { pt3dadd( -65.2865, -56.9786, -15.298, 1.32 ) }
    dend_32 { pt3dadd( -66.4595, -57.641, -15.8679, 1.32 ) }
    dend_32 { pt3dadd( -67.826, -58.4472, -16.4962, 0.22 ) }
    dend_32 { pt3dadd( -68.6075, -58.9052, -16.8095, 0.22 ) }
    dend_32 { pt3dadd( -69.2967, -59.2975, -17.0269, 0.88 ) }
    dend_32 { pt3dadd( -70.2829, -59.8484, -17.2423, 0.07 ) }
    dend_32 { pt3dadd( -71.2084, -60.3785, -17.4062, 1.25 ) }
    dend_32 { pt3dadd( -72.3143, -61.0502, -17.5551, 0.07 ) }
    dend_32 { pt3dadd( -72.7909, -61.3475, -17.6023, 0.66 ) }
    dend_32 { pt3dadd( -73.6064, -61.8672, -17.6714, 0.07 ) }
    dend_32 { pt3dadd( -74.3876, -62.3847, -17.7342, 0.07 ) }
    dend_32 { pt3dadd( -75.1084, -62.8737, -17.781, 1.47 ) }
    dend_32 { pt3dadd( -76.4334, -63.7933, -17.8687, 0.07 ) }
    dend_32 { pt3dadd( -76.8419, -64.0823, -17.899, 0.07 ) }
    dend_32 { pt3dadd( -77.4104, -64.4772, -17.9203, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_32 { pt3dadd( -77.8708, -64.7761, -17.9185, 0.07 ) }
    dend_32 { pt3dadd( -78.0516, -64.8834, -17.9165, 0.07 ) }
    dend_32 { pt3dadd( -78.6397, -65.2082, -17.9219, 1.03 ) }
    dend_32 { pt3dadd( -79.4107, -65.6272, -17.9161, 0.07 ) }
    dend_32 { pt3dadd( -80.0176, -65.9707, -17.9192, 0.07 ) }
    dend_32 { pt3dadd( -80.6424, -66.3259, -17.8904, 0.07 ) }
    dend_32 { pt3dadd( -81.3328, -66.7169, -17.8118, 0.07 ) }
    dend_32 { pt3dadd( -81.9554, -67.0665, -17.7093, 0.73 ) }
    dend_32 { pt3dadd( -82.3464, -67.29, -17.6299, 0.88 ) }
    dend_32 { pt3dadd( -82.6668, -67.4806, -17.5495, 0.88 ) }
    dend_32 { pt3dadd( -83.7083, -68.1382, -17.2353, 0.07 ) }
    dend_32 { pt3dadd( -84.0527, -68.3604, -17.1146, 0.07 ) }
    dend_32 { pt3dadd( -84.3894, -68.579, -16.9901, 0.44 ) }
    dend_32 { pt3dadd( -85.0957, -69.0137, -16.7802, 0.07 ) }
    dend_32 { pt3dadd( -85.5017, -69.2301, -16.6842, 0.07 ) }
    dend_32 { pt3dadd( -86.01, -69.4815, -16.6264, 1.25 ) }
    dend_32 { pt3dadd( -86.8051, -69.8833, -16.6156, 0.07 ) }
    dend_32 { pt3dadd( -87.331, -70.1736, -16.649, 0.07 ) }
    dend_32 { pt3dadd( -87.9544, -70.5302, -16.7074, 0.95 ) }
    dend_32 { pt3dadd( -88.4714, -70.8352, -16.7764, 0.95 ) }
    dend_32 { pt3dadd( -89.4664, -71.4539, -16.9373, 0.15 ) }
    dend_32 { pt3dadd( -89.9536, -71.7863, -17.0116, 0.81 ) }
    dend_32 { pt3dadd( -91.0015, -72.5753, -17.1339, 0.07 ) }
    dend_32 { pt3dadd( -91.6022, -73.0825, -17.1702, 0.44 ) }
    dend_32 { pt3dadd( -92.3177, -73.754, -17.156, 0.07 ) }
    dend_32 { pt3dadd( -92.6451, -74.0899, -17.1258, 0.07 ) }
    dend_32 { pt3dadd( -93.276, -74.7871, -17.0166, 1.4 ) }
    dend_32 { pt3dadd( -93.8917, -75.544, -16.8572, 0.07 ) }
    dend_32 { pt3dadd( -94.28, -76.0618, -16.7031, 0.07 ) }
    dend_32 { pt3dadd( -94.4463, -76.2958, -16.6261, 0.44 ) }
    dend_32 { pt3dadd( -94.9587, -77.0369, -16.348, 0.07 ) }
    dend_32 { pt3dadd( -95.572, -77.9358, -16.0077, 1.47 ) }
    dend_32 { pt3dadd( -96.2345, -78.9227, -15.6255, 0.37 ) }
    dend_32 { pt3dadd( -96.9789, -80.068, -15.1404, 0.07 ) }
    dend_32 { pt3dadd( -97.0858, -80.2375, -15.0774, 0.07 ) }
    dend_32 { pt3dadd( -97.4534, -80.852, -14.8714, 0.59 ) }
    dend_32 { pt3dadd( -97.8178, -81.4989, -14.6705, 0.07 ) }
    dend_32 { pt3dadd( -98.0769, -81.9823, -14.5336, 0.07 ) }
    dend_32 { pt3dadd( -98.5118, -82.8658, -14.3333, 1.18 ) }
    dend_32 { pt3dadd( -99.1314, -84.2919, -14.0449, 0.07 ) }
    dend_32 { pt3dadd( -99.5292, -85.2394, -13.8247, 0.07 ) }
    dend_32 { pt3dadd( -99.6834, -85.6083, -13.7282, 0.81 ) }
    dend_32 { pt3dadd( -100.0, -86.3698, -13.499, 0.07 ) }
    dend_32 { pt3dadd( -100.263, -86.9794, -13.3161, 0.07 ) }
    dend_32 { pt3dadd( -100.56, -87.6693, -13.1021, 0.88 ) }
    dend_32 { pt3dadd( -100.863, -88.4068, -12.8302, 0.07 ) }
    dend_32 { pt3dadd( -100.982, -88.7187, -12.7333, 0.07 ) }
    dend_32 { pt3dadd( -101.142, -89.185, -12.6305, 0.73 ) }
    dend_32 { pt3dadd( -101.468, -90.2781, -12.5047, 0.07 ) }
    dend_32 { pt3dadd( -101.658, -90.9151, -12.5018, 0.07 ) }
    dend_32 { pt3dadd( -101.76, -91.2536, -12.51, 0.07 ) }
    dend_32 { pt3dadd( -101.948, -91.851, -12.5498, 0.95 ) }
    dend_32 { pt3dadd( -102.22, -92.6945, -12.6062, 0.07 ) }
    dend_32 { pt3dadd( -102.463, -93.4019, -12.6231, 0.07 ) }
    dend_32 { pt3dadd( -102.764, -94.2289, -12.6041, 0.07 ) }
    dend_32 { pt3dadd( -103.146, -95.2406, -12.5533, 0.07 ) }
    dend_32 { pt3dadd( -103.404, -95.8899, -12.5108, 1.25 ) }
    dend_32 { pt3dadd( -104.074, -97.5244, -12.3578, 2.06 ) }
    dend_32 { pt3dadd( -104.621, -98.8093, -12.1901, 0.15 ) }
    dend_32 { pt3dadd( -104.757, -99.1261, -12.1457, 0.15 ) }
    dend_32 { pt3dadd( -105.007, -99.7158, -12.0578, 0.44 ) }
    dend_32 { pt3dadd( -105.3, -100.381, -11.9693, 0.07 ) }
    dend_32 { pt3dadd( -105.465, -100.751, -11.9012, 0.07 ) }
    dend_32 { pt3dadd( -105.729, -101.333, -11.7696, 0.59 ) }
    dend_32 { pt3dadd( -105.829, -101.615, -11.7203, 0.59 ) }
    dend_32 { pt3dadd( -105.988, -102.394, -11.6047, 0.07 ) }
    dend_32 { pt3dadd( -106.053, -103.045, -11.52, 0.07 ) }
    dend_32 { pt3dadd( -106.091, -103.61, -11.4621, 0.07 ) }
    dend_32 { pt3dadd( -106.14, -104.579, -11.3886, 2.06 ) }
    dend_32 { pt3dadd( -106.221, -106.087, -11.3085, 0.15 ) }
    dend_32 { pt3dadd( -106.325, -107.491, -11.2369, 0.07 ) }
    dend_32 { pt3dadd( -106.401, -108.079, -11.2452, 1.18 ) }
    dend_32 { pt3dadd( -106.602, -109.256, -11.307, 0.07 ) }
    dend_32 { pt3dadd( -106.72, -109.782, -11.3432, 0.07 ) }
    dend_32 { pt3dadd( -106.927, -110.521, -11.4102, 0.07 ) }
    dend_32 { pt3dadd( -107.19, -111.288, -11.48, 1.32 ) }
    dend_32 { pt3dadd( -107.868, -113.123, -11.6677, 0.07 ) }
    dend_32 { pt3dadd( -108.137, -113.917, -11.7598, 0.07 ) }
    dend_32 { pt3dadd( -108.296, -114.486, -11.8441, 0.81 ) }
    dend_32 { pt3dadd( -108.536, -115.378, -12.0033, 0.07 ) }
    dend_32 { pt3dadd( -108.635, -115.736, -12.0711, 0.07 ) }
    dend_32 { pt3dadd( -108.813, -116.34, -12.1927, 0.88 ) }
    dend_32 { pt3dadd( -109.103, -117.328, -12.355, 0.07 ) }
    dend_32 { pt3dadd( -109.344, -118.152, -12.5, 0.07 ) }
    dend_32 { pt3dadd( -109.641, -119.272, -12.6896, 1.69 ) }
    dend_32 { pt3dadd( -109.973, -120.708, -12.9103, 0.07 ) }
    dend_32 { pt3dadd( -110.265, -121.976, -13.0991, 0.07 ) }
    dend_32 { pt3dadd( -110.499, -123.013, -13.2331, 1.18 ) }
    dend_32 { pt3dadd( -110.7, -124.022, -13.336, 0.07 ) }
    dend_32 { pt3dadd( -110.807, -124.645, -13.3811, 0.07 ) }
    dend_32 { pt3dadd( -110.848, -125.142, -13.4208, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.32993, -19.4653, -0.326403, 1.1 ) }
    dend_25 { pt3dadd( -2.74935, -20.113, -1.91268, 1.1 ) }
    dend_25 { pt3dadd( -3.11376, -20.618, -3.05754, 1.03 ) }
    dend_25 { pt3dadd( -3.51293, -21.0859, -4.11695, 1.03 ) }
    dend_25 { pt3dadd( -4.04867, -21.6326, -5.36659, 1.4 ) }
    dend_25 { pt3dadd( -4.43185, -21.9981, -6.18235, 1.62 ) }
    dend_25 { pt3dadd( -4.88731, -22.3781, -7.05288, 1.84 ) }
    dend_25 { pt3dadd( -5.40672, -22.818, -7.95276, 0.66 ) }
    dend_25 { pt3dadd( -5.84258, -23.1305, -8.58148, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_25 { pt3dadd( -6.19399, -23.3305, -9.00534, 0.66 ) }
    dend_25 { pt3dadd( -6.58947, -23.5129, -9.39929, 0.66 ) }
    dend_25 { pt3dadd( -7.3332, -23.7654, -10.0397, 2.2 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.32993, -19.4653, -0.326403, 0.51 ) }
    dend_24 { pt3dadd( -3.36121, -21.072, -0.335087, 0.51 ) }
    dend_24 { pt3dadd( -4.23234, -22.2975, -0.299912, 1.18 ) }
    dend_24 { pt3dadd( -5.10197, -23.3842, -0.275808, 1.76 ) }
    dend_24 { pt3dadd( -6.1674, -24.6366, -0.293189, 1.03 ) }
    dend_24 { pt3dadd( -6.91427, -25.4991, -0.349918, 1.03 ) }
    dend_24 { pt3dadd( -7.47869, -26.1424, -0.420753, 1.25 ) }
    dend_24 { pt3dadd( -8.33574, -27.0534, -0.603354, 0.59 ) }
    dend_24 { pt3dadd( -9.08615, -27.8413, -0.80012, 0.95 ) }
    dend_24 { pt3dadd( -10.2024, -29.0572, -1.13319, 1.18 ) }
    dend_24 { pt3dadd( -11.4651, -30.4988, -1.5621, 1.25 ) }
    dend_24 { pt3dadd( -12.4944, -31.7125, -1.94993, 1.4 ) }
    dend_24 { pt3dadd( -13.4049, -32.8324, -2.33584, 1.69 ) }
    dend_24 { pt3dadd( -13.7129, -33.2324, -2.47691, 1.69 ) }
    dend_24 { pt3dadd( -14.4321, -34.214, -2.79272, 0.88 ) }
    dend_24 { pt3dadd( -15.0448, -35.0673, -3.04838, 0.88 ) }
    dend_24 { pt3dadd( -15.7012, -35.9567, -3.30186, 0.59 ) }
    dend_24 { pt3dadd( -16.2723, -36.6858, -3.52089, 0.95 ) }
    dend_24 { pt3dadd( -16.8328, -37.3374, -3.72976, 1.69 ) }
    dend_24 { pt3dadd( -17.2192, -37.7375, -3.87131, 1.84 ) }
    dend_24 { pt3dadd( -18.3435, -38.699, -4.27376, 0.51 ) }
    dend_24 { pt3dadd( -19.2689, -39.426, -4.59648, 0.15 ) }
    dend_24 { pt3dadd( -20.1097, -40.0621, -4.88467, 0.95 ) }
    dend_24 { pt3dadd( -20.7689, -40.5427, -5.09985, 1.69 ) }
    dend_24 { pt3dadd( -21.4428, -41.0051, -5.29264, 1.62 ) }
    dend_24 { pt3dadd( -22.6345, -41.7747, -5.58758, 0.22 ) }
    dend_24 { pt3dadd( -23.7628, -42.4863, -5.80713, 0.44 ) }
    dend_24 { pt3dadd( -24.5311, -42.9964, -5.92676, 0.88 ) }
    dend_24 { pt3dadd( -25.2465, -43.4986, -6.00526, 1.03 ) }
    dend_24 { pt3dadd( -26.2151, -44.221, -6.08596, 0.15 ) }
    dend_24 { pt3dadd( -26.9574, -44.827, -6.13047, 0.29 ) }
    dend_24 { pt3dadd( -27.7603, -45.5402, -6.17702, 1.32 ) }
    dend_24 { pt3dadd( -28.1932, -45.936, -6.21045, 1.69 ) }
    dend_24 { pt3dadd( -29.2878, -46.9912, -6.31983, 0.95 ) }
    dend_24 { pt3dadd( -30.3049, -48.0149, -6.44195, 0.51 ) }
    dend_24 { pt3dadd( -31.1441, -48.8819, -6.56468, 0.15 ) }
    dend_24 { pt3dadd( -32.3209, -50.0981, -6.74685, 1.54 ) }
    dend_24 { pt3dadd( -33.054, -50.8263, -6.87126, 1.54 ) }
    dend_24 { pt3dadd( -33.7357, -51.4571, -6.99385, 1.32 ) }
    dend_24 { pt3dadd( -34.8561, -52.3667, -7.21096, 0.07 ) }
    dend_24 { pt3dadd( -35.5488, -52.8588, -7.34867, 0.51 ) }
    dend_24 { pt3dadd( -36.0977, -53.1977, -7.45713, 0.22 ) }
    dend_24 { pt3dadd( -36.9557, -53.6706, -7.61889, 0.66 ) }
    dend_24 { pt3dadd( -37.9914, -54.1978, -7.8199, 0.15 ) }
    dend_24 { pt3dadd( -38.8642, -54.6089, -7.99881, 0.15 ) }
    dend_24 { pt3dadd( -39.2295, -54.7647, -8.08224, 0.15 ) }
    dend_24 { pt3dadd( -40.1269, -55.1526, -8.28918, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 50/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.631279, -23.1497, 1.19915, 0.81 ) }
    dend_22 { pt3dadd( 0.068571, -24.242, 1.47872, 0.81 ) }
    dend_22 { pt3dadd( 1.08132, -25.8398, 1.9123, 0.29 ) }
    dend_22 { pt3dadd( 2.06951, -27.412, 2.38683, 0.15 ) }
    dend_22 { pt3dadd( 2.70841, -28.4239, 2.73323, 0.88 ) }
    dend_22 { pt3dadd( 3.35782, -29.4401, 3.10713, 0.37 ) }
    dend_22 { pt3dadd( 4.08853, -30.5872, 3.53878, 0.15 ) }
    dend_22 { pt3dadd( 4.60684, -31.3857, 3.86074, 1.1 ) }
    dend_22 { pt3dadd( 5.44074, -32.6189, 4.40112, 1.25 ) }
    dend_22 { pt3dadd( 6.06223, -33.5186, 4.81007, 1.03 ) }
    dend_22 { pt3dadd( 6.98016, -34.8623, 5.43105, 0.15 ) }
    dend_22 { pt3dadd( 7.32726, -35.3868, 5.67479, 0.15 ) }
    dend_22 { pt3dadd( 7.89728, -36.2586, 6.05711, 0.73 ) }
    dend_22 { pt3dadd( 8.15279, -36.6596, 6.21322, 0.73 ) }
    dend_22 { pt3dadd( 8.58745, -37.368, 6.44247, 0.51 ) }
    dend_22 { pt3dadd( 9.52303, -38.9906, 6.86482, 0.22 ) }
    dend_22 { pt3dadd( 10.1347, -40.1242, 7.11623, 1.32 ) }
    dend_22 { pt3dadd( 10.7958, -41.4069, 7.35384, 0.73 ) }
    dend_22 { pt3dadd( 11.6517, -43.1487, 7.60218, 0.07 ) }
    dend_22 { pt3dadd( 12.0766, -44.0121, 7.70044, 0.15 ) }
    dend_22 { pt3dadd( 12.6846, -45.2144, 7.80007, 1.1 ) }
    dend_22 { pt3dadd( 13.0828, -45.998, 7.8304, 1.18 ) }
    dend_22 { pt3dadd( 13.604, -47.069, 7.85657, 0.44 ) }
    dend_22 { pt3dadd( 13.9571, -47.8541, 7.88066, 0.07 ) }
    dend_22 { pt3dadd( 14.1833, -48.4119, 7.92062, 0.73 ) }
    dend_22 { pt3dadd( 14.4863, -49.207, 8.03281, 0.44 ) }
    dend_22 { pt3dadd( 14.7577, -49.9678, 8.19757, 0.44 ) }
    dend_22 { pt3dadd( 14.9595, -50.6404, 8.37645, 0.37 ) }
    dend_22 { pt3dadd( 15.1542, -51.3983, 8.60905, 1.03 ) }
    dend_22 { pt3dadd( 15.3685, -52.2405, 8.87684, 1.25 ) }
    dend_22 { pt3dadd( 15.5054, -52.7539, 9.04927, 1.54 ) }
    dend_22 { pt3dadd( 15.8124, -53.813, 9.42991, 0.51 ) }
    dend_22 { pt3dadd( 16.1299, -54.7788, 9.78723, 0.44 ) }
    dend_22 { pt3dadd( 16.6847, -56.3172, 10.3979, 0.44 ) }
    dend_22 { pt3dadd( 17.1037, -57.4074, 10.8466, 0.59 ) }
    dend_22 { pt3dadd( 17.4156, -58.1706, 11.1681, 1.54 ) }
    dend_22 { pt3dadd( 17.705, -58.8322, 11.4594, 1.76 ) }
    dend_22 { pt3dadd( 18.0505, -59.5509, 11.7969, 1.25 ) }
    dend_22 { pt3dadd( 18.472, -60.3334, 12.1769, 1.47 ) }
    dend_22 { pt3dadd( 19.1423, -61.5023, 12.7259, 0.66 ) }
    dend_22 { pt3dadd( 19.5958, -62.2692, 13.0552, 0.73 ) }
    dend_22 { pt3dadd( 19.9648, -62.8564, 13.2811, 1.1 ) }
    dend_22 { pt3dadd( 20.5921, -63.8171, 13.6127, 1.69 ) }
    dend_22 { pt3dadd( 21.1628, -64.6688, 13.8704, 0.88 ) }
    dend_22 { pt3dadd( 21.8479, -65.6745, 14.1276, 0.22 ) }
    dend_22 { pt3dadd( 22.3744, -66.4582, 14.2917, 0.81 ) }
    dend_22 { pt3dadd( 22.9639, -67.3363, 14.449, 0.37 ) }
    dend_22 { pt3dadd( 23.6087, -68.3073, 14.601, 0.37 ) }
    dend_22 { pt3dadd( 24.0907, -69.0482, 14.6993, 0.66 ) }
    dend_22 { pt3dadd( 24.3122, -69.3993, 14.7418, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( 24.6453, -69.9294, 14.7991, 0.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 1/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.631279, -23.1497, 1.19915, 0.59 ) }
    dend_19 { pt3dadd( -0.781939, -24.2303, 1.6064, 0.59 ) }
    dend_19 { pt3dadd( -0.945239, -25.123, 1.92904, 0.59 ) }
    dend_19 { pt3dadd( -1.04793, -25.737, 2.12587, 0.59 ) }
    dend_19 { pt3dadd( -1.16555, -26.5073, 2.37964, 0.66 ) }
    dend_19 { pt3dadd( -1.28988, -27.343, 2.66974, 0.95 ) }
    dend_19 { pt3dadd( -1.45011, -28.447, 3.05395, 1.25 ) }
    dend_19 { pt3dadd( -1.5459, -28.967, 3.21886, 0.95 ) }
    dend_19 { pt3dadd( -1.78749, -30.115, 3.5506, 0.73 ) }
    dend_19 { pt3dadd( -1.94979, -30.8723, 3.77706, 1.32 ) }
    dend_19 { pt3dadd( -2.0916, -31.6067, 4.02041, 1.62 ) }
    dend_19 { pt3dadd( -2.20424, -32.197, 4.22927, 1.62 ) }
    dend_19 { pt3dadd( -2.42309, -33.2228, 4.61093, 0.59 ) }
    dend_19 { pt3dadd( -2.64249, -34.1406, 4.95348, 0.59 ) }
    dend_19 { pt3dadd( -2.89316, -35.1246, 5.34023, 0.81 ) }
    dend_19 { pt3dadd( -3.16496, -36.1706, 5.74756, 1.1 ) }
    dend_19 { pt3dadd( -3.28738, -36.6248, 5.92707, 2.06 ) }
    dend_19 { pt3dadd( -3.58158, -37.7118, 6.36876, 1.03 ) }
    dend_19 { pt3dadd( -3.83403, -38.7114, 6.76086, 0.51 ) }
    dend_19 { pt3dadd( -4.03487, -39.5036, 7.0306, 1.1 ) }
    dend_19 { pt3dadd( -4.29453, -40.5323, 7.33653, 0.66 ) }
    dend_19 { pt3dadd( -4.56197, -41.6257, 7.64549, 2.13 ) }
    dend_19 { pt3dadd( -4.77041, -42.4867, 7.91738, 2.13 ) }
    dend_19 { pt3dadd( -4.92933, -43.1725, 8.13505, 2.13 ) }
    dend_19 { pt3dadd( -5.06844, -43.7788, 8.32722, 2.13 ) }
    dend_19 { pt3dadd( -5.40033, -45.1737, 8.75664, 1.76 ) }
    dend_19 { pt3dadd( -5.65732, -46.3872, 9.16013, 2.42 ) }
    dend_19 { pt3dadd( -5.91528, -47.6903, 9.66159, 2.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 29/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.0049, 5.85366, -2.36274, 1.03 ) }
    dend_15 { pt3dadd( -14.683, 6.18285, -2.95379, 1.03 ) }
    dend_15 { pt3dadd( -14.3851, 6.51704, -3.51723, 0.29 ) }
    dend_15 { pt3dadd( -14.0766, 6.91109, -4.13788, 1.18 ) }
    dend_15 { pt3dadd( -13.8685, 7.24057, -4.5939, 1.47 ) }
    dend_15 { pt3dadd( -13.4765, 8.00521, -5.58135, 1.18 ) }
    dend_15 { pt3dadd( -13.3346, 8.34617, -6.00632, 1.4 ) }
    dend_15 { pt3dadd( -13.248, 8.70399, -6.42783, 1.4 ) }
    dend_15 { pt3dadd( -13.22, 9.14348, -6.98293, 0.73 ) }
    dend_15 { pt3dadd( -13.3042, 9.65842, -7.64359, 0.51 ) }
    dend_15 { pt3dadd( -13.4017, 9.98033, -8.0531, 0.15 ) }
    dend_15 { pt3dadd( -13.5609, 10.3643, -8.54168, 1.25 ) }
    dend_15 { pt3dadd( -13.7611, 10.8659, -9.2336, 1.47 ) }
    dend_15 { pt3dadd( -13.9693, 11.4829, -10.218, 1.18 ) }
    dend_15 { pt3dadd( -14.0746, 11.8923, -10.9271, 0.51 ) }
    dend_15 { pt3dadd( -14.1114, 12.2548, -11.579, 0.07 ) }
    dend_15 { pt3dadd( -14.074, 12.7371, -12.4358, 1.25 ) }
    dend_15 { pt3dadd( -13.9271, 13.3279, -13.4748, 0.37 ) }
    dend_15 { pt3dadd( -13.7084, 13.7898, -14.325, 1.03 ) }
    dend_15 { pt3dadd( -13.5746, 13.9799, -14.7055, 1.18 ) }
    dend_15 { pt3dadd( -13.315, 14.2048, -15.275, 1.03 ) }
    dend_15 { pt3dadd( -12.7959, 14.4865, -16.2773, 0.81 ) }
    dend_15 { pt3dadd( -12.4416, 14.6013, -16.9283, 0.29 ) }
    dend_15 { pt3dadd( -12.0039, 14.6715, -17.7454, 1.25 ) }
    dend_15 { pt3dadd( -11.6453, 14.7049, -18.4597, 1.32 ) }
    dend_15 { pt3dadd( -11.2437, 14.7229, -19.5218, 1.32 ) }
    dend_15 { pt3dadd( -11.0668, 14.7307, -20.2464, 1.32 ) }
    dend_15 { pt3dadd( -10.9505, 14.7365, -20.9077, 1.32 ) }
    dend_15 { pt3dadd( -10.7965, 14.7366, -22.0792, 1.4 ) }
    dend_15 { pt3dadd( -10.7563, 14.7253, -22.6493, 1.25 ) }
    dend_15 { pt3dadd( -10.7649, 14.6944, -24.1247, 1.25 ) }
    dend_15 { pt3dadd( -10.8195, 14.69, -25.2569, 1.25 ) }
    dend_15 { pt3dadd( -10.8383, 14.7127, -26.2425, 1.25 ) }
    dend_15 { pt3dadd( -10.7931, 14.7464, -27.1859, 1.25 ) }
    dend_15 { pt3dadd( -10.7343, 14.8047, -27.9612, 1.25 ) }
    dend_15 { pt3dadd( -10.6098, 14.9169, -28.9174, 0.59 ) }
    dend_15 { pt3dadd( -10.5457, 15.0041, -29.3021, 0.95 ) }
    dend_15 { pt3dadd( -10.4592, 15.3097, -30.1573, 0.66 ) }
    dend_15 { pt3dadd( -10.394, 15.6527, -30.8975, 1.69 ) }
    dend_15 { pt3dadd( -10.2332, 16.1845, -32.0071, 0.15 ) }
    dend_15 { pt3dadd( -10.1779, 16.2997, -32.2552, 0.15 ) }
    dend_15 { pt3dadd( -9.99707, 16.5494, -32.8771, 1.4 ) }
    dend_15 { pt3dadd( -9.43323, 17.159, -34.5669, 0.29 ) }
    dend_15 { pt3dadd( -9.1886, 17.3479, -35.1687, 1.4 ) }
    dend_15 { pt3dadd( -8.71273, 17.6209, -36.1368, 0.51 ) }
    dend_15 { pt3dadd( -8.35943, 17.7593, -36.6736, 0.95 ) }
    dend_15 { pt3dadd( -7.75016, 17.9555, -37.4615, 0.07 ) }
    dend_15 { pt3dadd( -7.29324, 18.0809, -37.995, 0.73 ) }
    dend_15 { pt3dadd( -6.71699, 18.2375, -38.6186, 0.07 ) }
    dend_15 { pt3dadd( -6.45495, 18.3192, -38.9515, 1.1 ) }
    dend_15 { pt3dadd( -5.94964, 18.5302, -39.7457, 0.07 ) }
    dend_15 { pt3dadd( -5.71745, 18.6417, -40.2143, 0.73 ) }
    dend_15 { pt3dadd( -5.25854, 18.8781, -41.4123, 0.59 ) }
    dend_15 { pt3dadd( -5.19947, 18.9101, -41.6193, 1.4 ) }
    dend_15 { pt3dadd( -4.92686, 19.0704, -42.8078, 1.4 ) }
    dend_15 { pt3dadd( -4.76327, 19.1849, -43.6348, 1.4 ) }
    dend_15 { pt3dadd( -4.69802, 19.248, -44.0073, 1.03 ) }
    dend_15 { pt3dadd( -4.57602, 19.3689, -44.5966, 1.03 ) }
    dend_15 { pt3dadd( -4.39034, 19.5448, -45.2887, 0.66 ) }
    dend_15 { pt3dadd( -4.07885, 19.84, -46.2282, 0.95 ) }
    dend_15 { pt3dadd( -3.94274, 19.9762, -46.6303, 1.25 ) }
    dend_15 { pt3dadd( -3.45097, 20.5709, -48.2255, 0.07 ) }
    dend_15 { pt3dadd( -3.18417, 20.9862, -49.2174, 1.1 ) }
    dend_15 { pt3dadd( -3.01697, 21.3421, -49.9748, 0.07 ) }
    dend_15 { pt3dadd( -2.91202, 21.6487, -50.5799, 1.18 ) }
    dend_15 { pt3dadd( -2.71927, 22.603, -52.3784, 1.18 ) }
    dend_15 { pt3dadd( -2.68852, 22.8577, -52.8608, 1.25 ) }
    dend_15 { pt3dadd( -2.66783, 23.2666, -53.5908, 0.37 ) }
    dend_15 { pt3dadd( -2.6661, 23.4572, -53.9412, 0.37 ) }
    dend_15 { pt3dadd( -2.70049, 23.9142, -54.907, 1.47 ) }
    dend_15 { pt3dadd( -2.74847, 24.2998, -55.7917, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_15 { pt3dadd( -2.7973, 24.7413, -56.8031, 0.07 ) }
    dend_15 { pt3dadd( -2.81845, 24.9877, -57.5787, 0.51 ) }
    dend_15 { pt3dadd( -2.83708, 25.1759, -58.3793, 0.15 ) }
    dend_15 { pt3dadd( -2.84564, 25.4277, -59.767, 0.73 ) }
    dend_15 { pt3dadd( -2.84032, 25.488, -60.1717, 0.73 ) }
    dend_15 { pt3dadd( -2.8361, 25.5864, -60.8641, 1.25 ) }
    dend_15 { pt3dadd( -2.92441, 25.8563, -62.4887, 0.07 ) }
    dend_15 { pt3dadd( -2.95233, 25.8983, -62.7168, 0.44 ) }
    dend_15 { pt3dadd( -3.08231, 26.0755, -63.4404, 0.07 ) }
    dend_15 { pt3dadd( -3.15965, 26.1824, -63.8047, 1.25 ) }
    dend_15 { pt3dadd( -3.41366, 26.5246, -64.8303, 0.29 ) }
    dend_15 { pt3dadd( -3.61709, 26.8156, -65.6307, 1.4 ) }
    dend_15 { pt3dadd( -4.13182, 27.6255, -67.6648, 0.07 ) }
    dend_15 { pt3dadd( -4.27109, 27.8869, -68.3055, 0.59 ) }
    dend_15 { pt3dadd( -4.48466, 28.3918, -69.5682, 0.15 ) }
    dend_15 { pt3dadd( -4.6153, 28.8164, -70.6319, 2.13 ) }
    dend_15 { pt3dadd( -4.72616, 29.4628, -72.191, 0.66 ) }
    dend_15 { pt3dadd( -4.74181, 29.7174, -72.7697, 0.51 ) }
    dend_15 { pt3dadd( -4.72991, 30.1215, -73.573, 1.4 ) }
    dend_15 { pt3dadd( -4.70666, 30.718, -74.766, 0.22 ) }
    dend_15 { pt3dadd( -4.70797, 30.8647, -75.0365, 0.22 ) }
    dend_15 { pt3dadd( -4.74376, 31.2865, -75.8026, 1.1 ) }
    dend_15 { pt3dadd( -4.79561, 31.6029, -76.329, 0.59 ) }
    dend_15 { pt3dadd( -4.83571, 31.8452, -76.7624, 1.1 ) }
    dend_15 { pt3dadd( -4.86576, 32.5336, -78.1819, 0.37 ) }
    dend_15 { pt3dadd( -4.84205, 32.6596, -78.4528, 0.59 ) }
    dend_15 { pt3dadd( -4.68726, 32.9766, -79.2304, 0.07 ) }
    dend_15 { pt3dadd( -4.48534, 33.2017, -79.8614, 0.73 ) }
    dend_15 { pt3dadd( -4.00112, 33.6243, -81.1613, 1.32 ) }
    dend_15 { pt3dadd( -3.42079, 33.9975, -82.4944, 0.07 ) }
    dend_15 { pt3dadd( -3.07606, 34.1451, -83.1047, 0.81 ) }
    dend_15 { pt3dadd( -2.74894, 34.2464, -83.6259, 0.37 ) }
    dend_15 { pt3dadd( -2.47134, 34.2947, -83.9954, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.0049, 5.85366, -2.36274, 2.42 ) }
    dend_10 { pt3dadd( -15.5889, 6.14229, -2.5184, 2.42 ) }
    dend_10 { pt3dadd( -16.96, 6.81997, -2.88389, 1.47 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -21.2649, 12.4616, 13.1073, 0.88 ) }
    dend_4 { pt3dadd( -21.3204, 14.2552, 13.265, 0.88 ) }
    dend_4 { pt3dadd( -21.3215, 15.3832, 13.3801, 0.66 ) }
    dend_4 { pt3dadd( -21.3241, 15.9042, 13.434, 0.66 ) }
    dend_4 { pt3dadd( -21.3323, 16.8416, 13.5077, 0.66 ) }
    dend_4 { pt3dadd( -21.3401, 17.6685, 13.5381, 0.59 ) }
    dend_4 { pt3dadd( -21.3449, 18.2582, 13.5381, 0.59 ) }
    dend_4 { pt3dadd( -21.3276, 19.0333, 13.5014, 0.81 ) }
    dend_4 { pt3dadd( -21.3105, 19.6832, 13.4589, 1.32 ) }
    dend_4 { pt3dadd( -21.2837, 21.0, 13.3255, 0.29 ) }
    dend_4 { pt3dadd( -21.2755, 21.9786, 13.1732, 0.29 ) }
    dend_4 { pt3dadd( -21.2905, 22.5204, 13.0597, 0.29 ) }
    dend_4 { pt3dadd( -21.3168, 22.9852, 12.9411, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 49/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -21.2649, 12.4616, 13.1073, 0.95 ) }
    dend_3 { pt3dadd( -24.0137, 13.1122, 13.527, 0.95 ) }
    dend_3 { pt3dadd( -25.4601, 13.4926, 13.7754, 0.95 ) }
    dend_3 { pt3dadd( -26.7309, 13.8647, 14.058, 0.95 ) }
    dend_3 { pt3dadd( -27.4067, 14.0768, 14.2422, 1.03 ) }
    dend_3 { pt3dadd( -28.3708, 14.3782, 14.5456, 0.88 ) }
    dend_3 { pt3dadd( -30.0219, 14.8826, 15.0873, 0.51 ) }
    dend_3 { pt3dadd( -31.4683, 15.3395, 15.6119, 1.03 ) }
    dend_3 { pt3dadd( -32.5408, 15.6685, 15.9874, 1.32 ) }
    dend_3 { pt3dadd( -33.6652, 16.0122, 16.3933, 1.32 ) }
    dend_3 { pt3dadd( -35.3367, 16.5386, 16.9926, 1.4 ) }
    dend_3 { pt3dadd( -36.1841, 16.8044, 17.308, 0.73 ) }
    dend_3 { pt3dadd( -37.1659, 17.0914, 17.6675, 0.73 ) }
    dend_3 { pt3dadd( -37.856, 17.2773, 17.8738, 0.88 ) }
    dend_3 { pt3dadd( -38.7071, 17.4918, 18.0606, 0.44 ) }
    dend_3 { pt3dadd( -40.3997, 17.9405, 18.3238, 0.44 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 65/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 107.685, 238.996, -78.6142, 0.37 ) }
    dend_42 { pt3dadd( 107.527, 239.649, -79.1292, 0.37 ) }
    dend_42 { pt3dadd( 107.421, 240.18, -79.5349, 0.81 ) }
    dend_42 { pt3dadd( 107.309, 240.706, -79.918, 0.29 ) }
    dend_42 { pt3dadd( 107.183, 241.296, -80.3253, 0.07 ) }
    dend_42 { pt3dadd( 107.092, 241.749, -80.6262, 0.88 ) }
    dend_42 { pt3dadd( 107.006, 242.255, -80.9486, 0.07 ) }
    dend_42 { pt3dadd( 106.924, 242.84, -81.2907, 0.07 ) }
    dend_42 { pt3dadd( 106.869, 243.289, -81.526, 0.07 ) }
    dend_42 { pt3dadd( 106.837, 243.589, -81.6776, 1.18 ) }
    dend_42 { pt3dadd( 106.769, 244.276, -82.0626, 0.15 ) }
    dend_42 { pt3dadd( 106.714, 244.758, -82.3285, 0.59 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 107.685, 238.996, -78.6142, 0.15 ) }
    dend_41 { pt3dadd( 107.939, 239.566, -78.7523, 0.15 ) }
    dend_41 { pt3dadd( 108.276, 240.399, -78.9648, 0.15 ) }
    dend_41 { pt3dadd( 108.534, 241.121, -79.1794, 0.15 ) }
    dend_41 { pt3dadd( 108.637, 241.437, -79.2732, 1.18 ) }
    dend_41 { pt3dadd( 108.91, 242.367, -79.5314, 0.07 ) }
    dend_41 { pt3dadd( 109.129, 243.211, -79.7614, 0.07 ) }
    dend_41 { pt3dadd( 109.278, 243.97, -79.9624, 1.25 ) }
    dend_41 { pt3dadd( 109.464, 245.082, -80.2371, 0.07 ) }
    dend_41 { pt3dadd( 109.569, 245.758, -80.3738, 0.07 ) }
    dend_41 { pt3dadd( 109.68, 246.562, -80.5235, 0.73 ) }
    dend_41 { pt3dadd( 109.786, 247.249, -80.6442, 0.07 ) }
    dend_41 { pt3dadd( 109.901, 247.849, -80.7463, 0.07 ) }
    dend_41 { pt3dadd( 110.189, 249.148, -80.9419, 2.06 ) }
    dend_41 { pt3dadd( 110.541, 250.535, -81.1418, 0.07 ) }
    dend_41 { pt3dadd( 110.778, 251.283, -81.261, 0.88 ) }
    dend_41 { pt3dadd( 111.17, 252.311, -81.4298, 0.07 ) }
    dend_41 { pt3dadd( 111.477, 253.039, -81.5532, 0.07 ) }
    dend_41 { pt3dadd( 111.647, 253.424, -81.6259, 0.07 ) }
    dend_41 { pt3dadd( 112.005, 254.203, -81.8, 1.32 ) }
    dend_41 { pt3dadd( 112.394, 255.026, -81.9999, 0.22 ) }
    dend_41 { pt3dadd( 112.693, 255.731, -82.1804, 0.22 ) }
    dend_41 { pt3dadd( 112.927, 256.439, -82.3744, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_41 { pt3dadd( 113.161, 257.385, -82.6662, 0.81 ) }
    dend_41 { pt3dadd( 113.294, 258.178, -82.9462, 0.81 ) }
    dend_41 { pt3dadd( 113.357, 258.915, -83.2156, 1.25 ) }
    dend_41 { pt3dadd( 113.392, 259.991, -83.6034, 0.07 ) }
    dend_41 { pt3dadd( 113.4, 260.717, -83.8598, 0.07 ) }
    dend_41 { pt3dadd( 113.401, 261.535, -84.1253, 0.95 ) }
    dend_41 { pt3dadd( 113.395, 262.824, -84.5116, 0.07 ) }
    dend_41 { pt3dadd( 113.394, 263.693, -84.7451, 1.54 ) }
    dend_41 { pt3dadd( 113.43, 264.979, -85.0713, 0.07 ) }
    dend_41 { pt3dadd( 113.521, 266.32, -85.3642, 0.07 ) }
    dend_41 { pt3dadd( 113.601, 267.059, -85.5231, 0.07 ) }
    dend_41 { pt3dadd( 113.728, 267.965, -85.7347, 0.95 ) }
    dend_41 { pt3dadd( 113.795, 268.437, -85.8563, 0.95 ) }
    dend_41 { pt3dadd( 113.93, 269.492, -86.1677, 0.07 ) }
    dend_41 { pt3dadd( 113.986, 270.216, -86.3885, 0.07 ) }
    dend_41 { pt3dadd( 114.029, 271.027, -86.6285, 0.88 ) }
    dend_41 { pt3dadd( 114.062, 272.503, -87.0426, 0.07 ) }
    dend_41 { pt3dadd( 114.066, 273.357, -87.2463, 0.95 ) }
    dend_41 { pt3dadd( 114.074, 274.067, -87.3864, 0.07 ) }
    dend_41 { pt3dadd( 114.136, 275.611, -87.5769, 0.07 ) }
    dend_41 { pt3dadd( 114.282, 276.725, -87.6252, 1.18 ) }
    dend_41 { pt3dadd( 114.448, 277.401, -87.5876, 1.18 ) }
    dend_41 { pt3dadd( 114.825, 278.495, -87.4366, 0.07 ) }
    dend_41 { pt3dadd( 115.119, 279.227, -87.3085, 0.07 ) }
    dend_41 { pt3dadd( 115.625, 280.497, -87.064, 0.07 ) }
    dend_41 { pt3dadd( 116.156, 281.979, -86.7638, 0.07 ) }
    dend_41 { pt3dadd( 116.411, 282.926, -86.5765, 0.07 ) }
    dend_41 { pt3dadd( 116.573, 283.747, -86.4268, 0.07 ) }
    dend_41 { pt3dadd( 116.75, 285.179, -86.2103, 0.07 ) }
    dend_41 { pt3dadd( 116.841, 286.799, -86.0242, 0.07 ) }
    dend_41 { pt3dadd( 116.851, 288.337, -85.9048, 0.07 ) }
    dend_41 { pt3dadd( 116.82, 290.144, -85.8149, 0.07 ) }
    dend_41 { pt3dadd( 116.829, 290.829, -85.8063, 0.22 ) }
    dend_41 { pt3dadd( 116.87, 291.788, -85.8045, 0.07 ) }
    dend_41 { pt3dadd( 116.999, 293.303, -85.829, 0.07 ) }
    dend_41 { pt3dadd( 117.126, 294.143, -85.8664, 0.37 ) }
    dend_41 { pt3dadd( 117.355, 295.239, -85.9567, 0.07 ) }
    dend_41 { pt3dadd( 117.689, 296.496, -86.1291, 0.88 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -7.3332, -23.7654, -10.0397, 1.1 ) }
    dend_27 { pt3dadd( -7.94321, -24.9357, -10.8413, 1.1 ) }
    dend_27 { pt3dadd( -8.50574, -26.0713, -11.5139, 0.81 ) }
    dend_27 { pt3dadd( -8.82618, -26.7748, -11.882, 1.1 ) }
    dend_27 { pt3dadd( -9.04817, -27.3381, -12.1248, 1.4 ) }
    dend_27 { pt3dadd( -9.43137, -28.3702, -12.5441, 0.07 ) }
    dend_27 { pt3dadd( -9.64397, -28.981, -12.7859, 0.15 ) }
    dend_27 { pt3dadd( -9.91797, -29.9464, -13.1402, 1.91 ) }
    dend_27 { pt3dadd( -10.088, -30.8166, -13.4708, 1.62 ) }
    dend_27 { pt3dadd( -10.3083, -32.5322, -14.1982, 0.22 ) }
    dend_27 { pt3dadd( -10.4223, -33.8409, -14.8244, 2.28 ) }
    dend_27 { pt3dadd( -10.4671, -34.7089, -15.3197, 1.62 ) }
    dend_27 { pt3dadd( -10.5027, -36.1937, -16.2849, 0.29 ) }
    dend_27 { pt3dadd( -10.5388, -37.175, -16.9875, 1.03 ) }
    dend_27 { pt3dadd( -10.6245, -38.1557, -17.7638, 0.59 ) }
    dend_27 { pt3dadd( -10.7472, -38.8431, -18.362, 0.15 ) }
    dend_27 { pt3dadd( -11.087, -39.8278, -19.242, 1.69 ) }
    dend_27 { pt3dadd( -11.3937, -40.4203, -19.7758, 2.06 ) }
    dend_27 { pt3dadd( -12.2019, -41.5686, -20.7617, 0.29 ) }
    dend_27 { pt3dadd( -12.7395, -42.2127, -21.277, 0.29 ) }
    dend_27 { pt3dadd( -13.516, -43.1029, -21.8605, 2.06 ) }
    dend_27 { pt3dadd( -14.8188, -44.6429, -22.6402, 0.44 ) }
    dend_27 { pt3dadd( -15.2124, -45.1283, -22.8294, 0.44 ) }
    dend_27 { pt3dadd( -15.7552, -45.8563, -23.0478, 1.84 ) }
    dend_27 { pt3dadd( -16.296, -46.6946, -23.2263, 1.62 ) }
    dend_27 { pt3dadd( -16.9813, -47.9174, -23.4045, 0.22 ) }
    dend_27 { pt3dadd( -17.6226, -49.1304, -23.5017, 0.22 ) }
    dend_27 { pt3dadd( -18.1823, -50.2251, -23.5323, 1.98 ) }
    dend_27 { pt3dadd( -18.8938, -51.5764, -23.5604, 0.66 ) }
    dend_27 { pt3dadd( -19.4577, -52.5873, -23.604, 0.66 ) }
    dend_27 { pt3dadd( -19.81, -53.1418, -23.6389, 0.22 ) }
    dend_27 { pt3dadd( -20.4908, -54.0225, -23.7343, 1.98 ) }
    dend_27 { pt3dadd( -20.9333, -54.4959, -23.7976, 1.98 ) }
    dend_27 { pt3dadd( -21.5303, -54.9979, -23.8898, 1.47 ) }
    dend_27 { pt3dadd( -22.8181, -55.8561, -24.1051, 0.15 ) }
    dend_27 { pt3dadd( -23.8243, -56.4227, -24.2765, 0.15 ) }
    dend_27 { pt3dadd( -24.9136, -57.0105, -24.4693, 2.06 ) }
    dend_27 { pt3dadd( -25.6352, -57.3909, -24.6078, 2.06 ) }
    dend_27 { pt3dadd( -26.9266, -58.0688, -24.8632, 0.44 ) }
    dend_27 { pt3dadd( -27.767, -58.5359, -25.0445, 1.03 ) }
    dend_27 { pt3dadd( -28.7946, -59.1464, -25.2736, 0.07 ) }
    dend_27 { pt3dadd( -29.6099, -59.6892, -25.4817, 0.07 ) }
    dend_27 { pt3dadd( -30.7411, -60.5486, -25.8008, 1.76 ) }
    dend_27 { pt3dadd( -31.0113, -60.7923, -25.8828, 1.76 ) }
    dend_27 { pt3dadd( -32.0544, -61.9222, -26.2437, 0.22 ) }
    dend_27 { pt3dadd( -32.3177, -62.2321, -26.3495, 0.22 ) }
    dend_27 { pt3dadd( -32.9207, -62.9731, -26.6279, 1.4 ) }
    dend_27 { pt3dadd( -33.3268, -63.4566, -26.835, 1.84 ) }
    dend_27 { pt3dadd( -34.1472, -64.4107, -27.2508, 0.37 ) }
    dend_27 { pt3dadd( -34.5571, -64.8462, -27.4598, 0.37 ) }
    dend_27 { pt3dadd( -35.2017, -65.4785, -27.7864, 0.07 ) }
    dend_27 { pt3dadd( -35.8935, -66.1102, -28.127, 1.25 ) }
    dend_27 { pt3dadd( -37.0003, -67.04, -28.6529, 0.29 ) }
    dend_27 { pt3dadd( -37.7859, -67.6545, -29.0154, 1.91 ) }
    dend_27 { pt3dadd( -38.3721, -68.1018, -29.3027, 1.25 ) }
    dend_27 { pt3dadd( -39.2353, -68.7927, -29.7328, 0.15 ) }
    dend_27 { pt3dadd( -40.1447, -69.596, -30.1996, 0.15 ) }
    dend_27 { pt3dadd( -40.5935, -70.0378, -30.4283, 0.88 ) }
    dend_27 { pt3dadd( -40.8716, -70.3805, -30.5932, 1.18 ) }
    dend_27 { pt3dadd( -41.6856, -71.6547, -31.162, 0.22 ) }
    dend_27 { pt3dadd( -42.0132, -72.3283, -31.4206, 0.22 ) }
    dend_27 { pt3dadd( -42.1303, -72.6833, -31.543, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_27 { pt3dadd( -42.2713, -73.3441, -31.7582, 1.18 ) }
    dend_27 { pt3dadd( -42.4667, -74.6815, -32.1566, 0.29 ) }
    dend_27 { pt3dadd( -42.5464, -75.4793, -32.3648, 0.29 ) }
    dend_27 { pt3dadd( -42.5809, -76.2007, -32.5086, 1.03 ) }
    dend_27 { pt3dadd( -42.6114, -77.2738, -32.726, 1.84 ) }
    dend_27 { pt3dadd( -42.6304, -78.3519, -32.9387, 0.44 ) }
    dend_27 { pt3dadd( -42.6266, -79.0646, -33.0669, 0.44 ) }
    dend_27 { pt3dadd( -42.6266, -79.5321, -33.1248, 0.07 ) }
    dend_27 { pt3dadd( -42.6113, -80.8359, -33.2888, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.3332, -23.7654, -10.0397, 0.95 ) }
    dend_26 { pt3dadd( -8.44405, -23.9857, -9.25089, 0.95 ) }
    dend_26 { pt3dadd( -9.32053, -24.1853, -8.76818, 0.22 ) }
    dend_26 { pt3dadd( -9.71147, -24.3023, -8.63176, 0.37 ) }
    dend_26 { pt3dadd( -10.1619, -24.4726, -8.53258, 0.07 ) }
    dend_26 { pt3dadd( -10.7889, -24.7468, -8.44296, 0.07 ) }
    dend_26 { pt3dadd( -11.1771, -24.9346, -8.40587, 0.95 ) }
    dend_26 { pt3dadd( -11.4648, -25.0925, -8.42106, 1.03 ) }
    dend_26 { pt3dadd( -12.2446, -25.5474, -8.50473, 0.07 ) }
    dend_26 { pt3dadd( -12.8595, -25.9304, -8.56675, 0.07 ) }
    dend_26 { pt3dadd( -13.5161, -26.3621, -8.62409, 1.84 ) }
    dend_26 { pt3dadd( -14.3409, -26.9229, -8.7005, 0.07 ) }
    dend_26 { pt3dadd( -14.7299, -27.1833, -8.73382, 0.07 ) }
    dend_26 { pt3dadd( -14.897, -27.2958, -8.74786, 0.81 ) }
    dend_26 { pt3dadd( -15.2972, -27.5657, -8.77683, 0.07 ) }
    dend_26 { pt3dadd( -15.7676, -27.87, -8.82628, 0.07 ) }
    dend_26 { pt3dadd( -16.35, -28.2266, -8.9089, 0.51 ) }
    dend_26 { pt3dadd( -16.6611, -28.409, -8.95929, 0.07 ) }
    dend_26 { pt3dadd( -17.001, -28.602, -9.01703, 0.07 ) }
    dend_26 { pt3dadd( -17.5523, -28.9013, -9.10912, 1.4 ) }
    dend_26 { pt3dadd( -18.4101, -29.3646, -9.25813, 0.07 ) }
    dend_26 { pt3dadd( -19.1466, -29.7675, -9.40367, 0.07 ) }
    dend_26 { pt3dadd( -19.8969, -30.1812, -9.56565, 1.69 ) }
    dend_26 { pt3dadd( -20.8576, -30.698, -9.81677, 0.07 ) }
    dend_26 { pt3dadd( -21.4137, -30.9861, -9.99126, 0.07 ) }
    dend_26 { pt3dadd( -21.6856, -31.1297, -10.0912, 1.1 ) }
    dend_26 { pt3dadd( -22.3368, -31.4808, -10.3719, 0.07 ) }
    dend_26 { pt3dadd( -22.8342, -31.7473, -10.6045, 0.07 ) }
    dend_26 { pt3dadd( -23.4456, -32.0711, -10.9008, 0.88 ) }
    dend_26 { pt3dadd( -24.1297, -32.4315, -11.246, 0.07 ) }
    dend_26 { pt3dadd( -24.7855, -32.7707, -11.5824, 1.84 ) }
    dend_26 { pt3dadd( -25.7061, -33.2204, -12.023, 0.07 ) }
    dend_26 { pt3dadd( -26.3051, -33.497, -12.2963, 0.07 ) }
    dend_26 { pt3dadd( -26.7157, -33.6755, -12.4792, 0.59 ) }
    dend_26 { pt3dadd( -27.4287, -33.988, -12.7797, 0.07 ) }
    dend_26 { pt3dadd( -27.9311, -34.2108, -12.9841, 0.07 ) }
    dend_26 { pt3dadd( -28.4789, -34.4406, -13.1953, 1.54 ) }
    dend_26 { pt3dadd( -29.4588, -34.8095, -13.539, 0.07 ) }
    dend_26 { pt3dadd( -30.0637, -35.0107, -13.7464, 0.07 ) }
    dend_26 { pt3dadd( -30.7408, -35.2198, -13.9511, 0.07 ) }
    dend_26 { pt3dadd( -31.2421, -35.3782, -14.0719, 0.07 ) }
    dend_26 { pt3dadd( -31.836, -35.5592, -14.1816, 1.18 ) }
    dend_26 { pt3dadd( -32.4688, -35.7385, -14.2792, 0.07 ) }
    dend_26 { pt3dadd( -33.0352, -35.9026, -14.3435, 0.07 ) }
    dend_26 { pt3dadd( -33.9233, -36.2077, -14.3786, 0.07 ) }
    dend_26 { pt3dadd( -34.5938, -36.4886, -14.3692, 1.18 ) }
    dend_26 { pt3dadd( -35.3644, -36.875, -14.3341, 0.07 ) }
    dend_26 { pt3dadd( -35.7615, -37.0996, -14.3058, 0.07 ) }
    dend_26 { pt3dadd( -36.7057, -37.6702, -14.216, 0.07 ) }
    dend_26 { pt3dadd( -38.2148, -38.595, -14.0452, 3.01 ) }
    dend_26 { pt3dadd( -39.8917, -39.6183, -13.8421, 0.07 ) }
    dend_26 { pt3dadd( -40.7115, -40.1137, -13.7515, 0.07 ) }
    dend_26 { pt3dadd( -41.1287, -40.3666, -13.7144, 0.07 ) }
    dend_26 { pt3dadd( -41.5819, -40.6288, -13.686, 0.73 ) }
    dend_26 { pt3dadd( -42.2507, -40.9741, -13.6895, 0.07 ) }
    dend_26 { pt3dadd( -42.5637, -41.1036, -13.7381, 0.81 ) }
    dend_26 { pt3dadd( -43.3727, -41.366, -13.9385, 0.07 ) }
    dend_26 { pt3dadd( -43.831, -41.4963, -14.081, 0.29 ) }
    dend_26 { pt3dadd( -44.278, -41.6207, -14.2417, 0.07 ) }
    dend_26 { pt3dadd( -44.8246, -41.7706, -14.4512, 0.95 ) }
    dend_26 { pt3dadd( -45.6788, -42.0023, -14.8396, 0.07 ) }
    dend_26 { pt3dadd( -46.172, -42.1408, -15.0869, 0.07 ) }
    dend_26 { pt3dadd( -46.4517, -42.2274, -15.2216, 0.81 ) }
    dend_26 { pt3dadd( -47.1704, -42.453, -15.5651, 0.07 ) }
    dend_26 { pt3dadd( -47.5706, -42.5784, -15.7571, 1.1 ) }
    dend_26 { pt3dadd( -48.6729, -42.9381, -16.2868, 0.07 ) }
    dend_26 { pt3dadd( -49.2299, -43.1502, -16.5707, 0.07 ) }
    dend_26 { pt3dadd( -50.2209, -43.5593, -17.117, 2.13 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 77/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.91528, -47.6903, 9.66159, 0.88 ) }
    dend_21 { pt3dadd( -5.06715, -49.3811, 10.4799, 0.88 ) }
    dend_21 { pt3dadd( -4.66199, -50.2018, 10.8827, 0.81 ) }
    dend_21 { pt3dadd( -3.93434, -51.6694, 11.6022, 0.66 ) }
    dend_21 { pt3dadd( -3.2589, -53.0212, 12.2591, 0.51 ) }
    dend_21 { pt3dadd( -2.69343, -54.138, 12.7605, 0.44 ) }
    dend_21 { pt3dadd( -2.21952, -55.0622, 13.1276, 0.07 ) }
    dend_21 { pt3dadd( -1.90901, -55.6891, 13.3337, 0.07 ) }
    dend_21 { pt3dadd( -1.69211, -56.1362, 13.4434, 1.18 ) }
    dend_21 { pt3dadd( -1.14676, -57.2054, 13.6343, 1.4 ) }
    dend_21 { pt3dadd( -0.211868, -58.8842, 13.9091, 0.37 ) }
    dend_21 { pt3dadd( 0.643882, -60.3219, 14.1686, 0.44 ) }
    dend_21 { pt3dadd( 1.15966, -61.1913, 14.3377, 0.73 ) }
    dend_21 { pt3dadd( 1.35419, -61.5357, 14.4114, 0.95 ) }
    dend_21 { pt3dadd( 2.02445, -62.7991, 14.723, 0.51 ) }
    dend_21 { pt3dadd( 2.99432, -64.7482, 15.3032, 0.22 ) }
    dend_21 { pt3dadd( 3.76698, -66.4038, 15.9079, 0.29 ) }
    dend_21 { pt3dadd( 4.18068, -67.3507, 16.3007, 0.29 ) }
    dend_21 { pt3dadd( 4.48572, -68.1059, 16.6342, 0.29 ) }
    dend_21 { pt3dadd( 4.73947, -68.8259, 16.9376, 0.29 ) }
    dend_21 { pt3dadd( 4.92688, -69.4711, 17.1954, 0.44 ) }
    dend_21 { pt3dadd( 5.13627, -70.4009, 17.5659, 1.4 ) }
    dend_21 { pt3dadd( 5.35178, -71.4967, 18.0023, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_21 { pt3dadd( 5.554, -72.4254, 18.3654, 0.51 ) }
    dend_21 { pt3dadd( 5.73716, -73.1372, 18.6367, 1.03 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.91528, -47.6903, 9.66159, 1.47 ) }
    dend_20 { pt3dadd( -6.16843, -48.5761, 10.0936, 1.47 ) }
    dend_20 { pt3dadd( -6.32119, -49.0491, 10.318, 1.4 ) }
    dend_20 { pt3dadd( -6.53776, -49.6326, 10.5836, 0.66 ) }
    dend_20 { pt3dadd( -6.74902, -50.1388, 10.7956, 0.73 ) }
    dend_20 { pt3dadd( -6.8794, -50.4571, 10.927, 1.1 ) }
    dend_20 { pt3dadd( -7.0624, -50.933, 11.1103, 1.32 ) }
    dend_20 { pt3dadd( -7.29261, -51.5987, 11.3693, 0.51 ) }
    dend_20 { pt3dadd( -7.42684, -51.9772, 11.5062, 1.32 ) }
    dend_20 { pt3dadd( -7.67278, -52.5826, 11.7053, 0.73 ) }
    dend_20 { pt3dadd( -7.90917, -53.1056, 11.8513, 0.29 ) }
    dend_20 { pt3dadd( -8.19742, -53.7025, 11.9986, 0.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 14/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.96, 6.81997, -2.88389, 0.95 ) }
    dend_12 { pt3dadd( -17.4702, 6.64479, -2.91442, 0.95 ) }
    dend_12 { pt3dadd( -18.2995, 6.31964, -3.03889, 1.1 ) }
    dend_12 { pt3dadd( -18.8289, 6.10362, -3.15191, 0.88 ) }
    dend_12 { pt3dadd( -20.0126, 5.65145, -3.44918, 0.37 ) }
    dend_12 { pt3dadd( -20.8364, 5.37726, -3.6624, 0.44 ) }
    dend_12 { pt3dadd( -21.8006, 5.08509, -3.90331, 0.66 ) }
    dend_12 { pt3dadd( -22.6004, 4.83769, -4.12738, 0.73 ) }
    dend_12 { pt3dadd( -23.274, 4.61252, -4.32584, 0.66 ) }
    dend_12 { pt3dadd( -24.0884, 4.32156, -4.53553, 0.66 ) }
    dend_12 { pt3dadd( -24.9488, 3.98307, -4.70662, 0.51 ) }
    dend_12 { pt3dadd( -25.8365, 3.62016, -4.83233, 1.18 ) }
    dend_12 { pt3dadd( -26.8712, 3.1526, -4.93329, 1.91 ) }
    dend_12 { pt3dadd( -27.9265, 2.60658, -5.00894, 1.4 ) }
    dend_12 { pt3dadd( -29.4355, 1.75099, -5.11542, 0.51 ) }
    dend_12 { pt3dadd( -30.2218, 1.27873, -5.185, 0.95 ) }
    dend_12 { pt3dadd( -30.7806, 0.93988, -5.25363, 1.18 ) }
    dend_12 { pt3dadd( -31.622, 0.473186, -5.3835, 0.73 ) }
    dend_12 { pt3dadd( -32.4157, 0.114382, -5.52851, 0.37 ) }
    dend_12 { pt3dadd( -33.0089, -0.080018, -5.65788, 0.37 ) }
    dend_12 { pt3dadd( -33.7128, -0.214666, -5.83579, 1.1 ) }
    dend_12 { pt3dadd( -34.3193, -0.283278, -5.98913, 1.25 ) }
    dend_12 { pt3dadd( -35.0065, -0.338804, -6.15067, 1.62 ) }
    dend_12 { pt3dadd( -35.9912, -0.392414, -6.3532, 0.81 ) }
    dend_12 { pt3dadd( -36.8379, -0.461067, -6.5079, 0.51 ) }
    dend_12 { pt3dadd( -37.7361, -0.608806, -6.67726, 0.51 ) }
    dend_12 { pt3dadd( -38.7019, -0.829555, -6.8739, 0.59 ) }
    dend_12 { pt3dadd( -39.5016, -1.06536, -7.05834, 1.32 ) }
    dend_12 { pt3dadd( -40.0219, -1.26411, -7.19288, 1.98 ) }
    dend_12 { pt3dadd( -41.1016, -1.78098, -7.50994, 1.76 ) }
    dend_12 { pt3dadd( -42.601, -2.66524, -7.9988, 0.22 ) }
    dend_12 { pt3dadd( -43.3783, -3.21164, -8.26579, 0.22 ) }
    dend_12 { pt3dadd( -43.8135, -3.56265, -8.42242, 0.95 ) }
    dend_12 { pt3dadd( -44.332, -4.0215, -8.60768, 0.88 ) }
    dend_12 { pt3dadd( -44.8273, -4.49904, -8.77531, 0.44 ) }
    dend_12 { pt3dadd( -45.3328, -4.99897, -8.93401, 0.66 ) }
    dend_12 { pt3dadd( -46.2947, -5.94573, -9.19591, 1.91 ) }
    dend_12 { pt3dadd( -46.708, -6.32393, -9.30321, 1.98 ) }
    dend_12 { pt3dadd( -47.8554, -7.2408, -9.58435, 0.22 ) }
    dend_12 { pt3dadd( -48.7647, -7.86846, -9.79777, 0.22 ) }
    dend_12 { pt3dadd( -49.3671, -8.259, -9.93205, 0.51 ) }
    dend_12 { pt3dadd( -50.1754, -8.75974, -10.1046, 1.84 ) }
    dend_12 { pt3dadd( -50.8015, -9.13252, -10.2291, 1.91 ) }
    dend_12 { pt3dadd( -51.5754, -9.58524, -10.3417, 1.54 ) }
    dend_12 { pt3dadd( -52.9207, -10.3499, -10.4705, 0.37 ) }
    dend_12 { pt3dadd( -53.7966, -10.8467, -10.5302, 0.37 ) }
    dend_12 { pt3dadd( -54.4336, -11.2318, -10.5536, 0.88 ) }
    dend_12 { pt3dadd( -54.888, -11.5318, -10.5538, 1.1 ) }
    dend_12 { pt3dadd( -55.9927, -12.3448, -10.504, 0.15 ) }
    dend_12 { pt3dadd( -56.8607, -13.0128, -10.4435, 0.15 ) }
    dend_12 { pt3dadd( -57.5611, -13.5493, -10.3855, 1.69 ) }
    dend_12 { pt3dadd( -58.1023, -13.9445, -10.3425, 1.54 ) }
    dend_12 { pt3dadd( -59.3224, -14.8168, -10.2784, 0.15 ) }
    dend_12 { pt3dadd( -59.8364, -15.195, -10.2628, 0.15 ) }
    dend_12 { pt3dadd( -60.6429, -15.8189, -10.2936, 0.15 ) }
    dend_12 { pt3dadd( -61.3227, -16.3793, -10.3419, 1.32 ) }
    dend_12 { pt3dadd( -61.8782, -16.8482, -10.4041, 1.32 ) }
    dend_12 { pt3dadd( -62.3798, -17.2911, -10.4922, 1.47 ) }
    dend_12 { pt3dadd( -62.7283, -17.6345, -10.5837, 1.47 ) }
    dend_12 { pt3dadd( -63.5019, -18.5093, -10.8064, 0.15 ) }
    dend_12 { pt3dadd( -63.8403, -18.9499, -10.913, 0.15 ) }
    dend_12 { pt3dadd( -64.1247, -19.3258, -11.0115, 0.81 ) }
    dend_12 { pt3dadd( -64.4948, -19.7912, -11.1364, 1.18 ) }
    dend_12 { pt3dadd( -65.1502, -20.5371, -11.3291, 0.07 ) }
    dend_12 { pt3dadd( -65.7655, -21.1857, -11.4802, 0.07 ) }
    dend_12 { pt3dadd( -66.1082, -21.5232, -11.5441, 1.1 ) }
    dend_12 { pt3dadd( -66.6631, -22.0431, -11.6495, 1.54 ) }
    dend_12 { pt3dadd( -67.3797, -22.6688, -11.7861, 1.4 ) }
    dend_12 { pt3dadd( -68.5993, -23.6697, -12.01, 0.44 ) }
    dend_12 { pt3dadd( -69.2912, -24.2145, -12.1305, 0.07 ) }
    dend_12 { pt3dadd( -70.4558, -25.1218, -12.3166, 0.07 ) }
    dend_12 { pt3dadd( -71.2175, -25.7115, -12.4227, 1.18 ) }
    dend_12 { pt3dadd( -72.058, -26.3583, -12.5244, 2.28 ) }
    dend_12 { pt3dadd( -73.0938, -27.112, -12.6421, 0.59 ) }
    dend_12 { pt3dadd( -74.0233, -27.7569, -12.7349, 0.29 ) }
    dend_12 { pt3dadd( -74.8982, -28.35, -12.7809, 0.29 ) }
    dend_12 { pt3dadd( -76.1431, -29.2156, -12.7808, 0.07 ) }
    dend_12 { pt3dadd( -77.1286, -29.9225, -12.7357, 1.69 ) }
    dend_12 { pt3dadd( -77.7108, -30.3575, -12.6925, 1.76 ) }
    dend_12 { pt3dadd( -78.8879, -31.2538, -12.6027, 0.07 ) }
    dend_12 { pt3dadd( -79.916, -32.0443, -12.5261, 0.15 ) }
    dend_12 { pt3dadd( -80.4185, -32.437, -12.5013, 0.15 ) }
    dend_12 { pt3dadd( -81.2661, -33.1153, -12.4875, 1.32 ) }
    dend_12 { pt3dadd( -82.0646, -33.7483, -12.5114, 1.32 ) }
    dend_12 { pt3dadd( -83.0195, -34.4823, -12.5803, 0.07 ) }
    dend_12 { pt3dadd( -84.0142, -35.2102, -12.6966, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( -84.9351, -35.8244, -12.8139, 1.84 ) }
    dend_12 { pt3dadd( -85.645, -36.2515, -12.8927, 1.84 ) }
    dend_12 { pt3dadd( -86.7604, -36.8609, -12.994, 0.07 ) }
    dend_12 { pt3dadd( -87.5979, -37.2818, -13.0693, 0.37 ) }
    dend_12 { pt3dadd( -88.7584, -37.8126, -13.164, 0.07 ) }
    dend_12 { pt3dadd( -90.0343, -38.3505, -13.264, 1.91 ) }
    dend_12 { pt3dadd( -90.5501, -38.5593, -13.2992, 1.91 ) }
    dend_12 { pt3dadd( -91.7032, -39.0379, -13.3814, 0.51 ) }
    dend_12 { pt3dadd( -92.6541, -39.4384, -13.4633, 0.15 ) }
    dend_12 { pt3dadd( -93.315, -39.7327, -13.5264, 0.15 ) }
    dend_12 { pt3dadd( -93.8558, -39.9907, -13.5843, 0.44 ) }
    dend_12 { pt3dadd( -94.7017, -40.4432, -13.7002, 0.07 ) }
    dend_12 { pt3dadd( -95.4282, -40.8524, -13.8018, 1.03 ) }
    dend_12 { pt3dadd( -95.8501, -41.1065, -13.8638, 1.25 ) }
    dend_12 { pt3dadd( -96.7809, -41.7197, -14.0041, 0.59 ) }
    dend_12 { pt3dadd( -97.6206, -42.3094, -14.147, 1.03 ) }
    dend_12 { pt3dadd( -98.2101, -42.7175, -14.2528, 1.54 ) }
    dend_12 { pt3dadd( -99.3249, -43.4866, -14.4734, 0.07 ) }
    dend_12 { pt3dadd( -99.9304, -43.9103, -14.5911, 0.07 ) }
    dend_12 { pt3dadd( -100.801, -44.5288, -14.764, 0.07 ) }
    dend_12 { pt3dadd( -101.042, -44.6963, -14.8102, 1.1 ) }
    dend_12 { pt3dadd( -101.685, -45.1298, -14.9313, 1.32 ) }
    dend_12 { pt3dadd( -102.475, -45.6566, -15.0848, 0.07 ) }
    dend_12 { pt3dadd( -103.126, -46.0872, -15.2128, 0.07 ) }
    dend_12 { pt3dadd( -103.838, -46.5508, -15.3719, 1.32 ) }
    dend_12 { pt3dadd( -104.382, -46.9205, -15.51, 1.32 ) }
    dend_12 { pt3dadd( -105.583, -47.8288, -15.879, 0.07 ) }
    dend_12 { pt3dadd( -105.859, -48.0627, -15.9681, 0.51 ) }
    dend_12 { pt3dadd( -106.585, -48.7215, -16.1992, 0.07 ) }
    dend_12 { pt3dadd( -106.991, -49.1264, -16.3368, 0.95 ) }
    dend_12 { pt3dadd( -107.39, -49.5966, -16.4681, 1.32 ) }
    dend_12 { pt3dadd( -108.247, -50.7395, -16.7338, 0.07 ) }
    dend_12 { pt3dadd( -108.835, -51.6284, -16.8748, 1.62 ) }
    dend_12 { pt3dadd( -109.175, -52.1652, -16.9348, 2.06 ) }
    dend_12 { pt3dadd( -109.419, -52.5666, -16.9461, 1.91 ) }
    dend_12 { pt3dadd( -110.024, -53.5408, -16.8921, 0.73 ) }
    dend_12 { pt3dadd( -110.405, -54.1421, -16.8075, 0.07 ) }
    dend_12 { pt3dadd( -110.925, -54.9651, -16.607, 0.73 ) }
    dend_12 { pt3dadd( -111.571, -55.9513, -16.3405, 0.07 ) }
    dend_12 { pt3dadd( -112.249, -56.9531, -16.0591, 1.54 ) }
    dend_12 { pt3dadd( -112.993, -57.9845, -15.7505, 0.07 ) }
    dend_12 { pt3dadd( -113.651, -58.8264, -15.4938, 0.07 ) }
    dend_12 { pt3dadd( -114.3, -59.608, -15.2459, 0.07 ) }
    dend_12 { pt3dadd( -114.82, -60.1762, -15.0604, 1.69 ) }
    dend_12 { pt3dadd( -115.471, -60.8151, -14.8423, 1.91 ) }
    dend_12 { pt3dadd( -116.506, -61.7419, -14.5449, 0.07 ) }
    dend_12 { pt3dadd( -117.112, -62.2225, -14.3882, 0.37 ) }
    dend_12 { pt3dadd( -118.089, -62.9101, -14.1762, 0.15 ) }
    dend_12 { pt3dadd( -118.723, -63.3001, -14.0669, 0.15 ) }
    dend_12 { pt3dadd( -119.579, -63.7843, -13.9278, 1.69 ) }
    dend_12 { pt3dadd( -120.387, -64.1952, -13.8224, 0.88 ) }
    dend_12 { pt3dadd( -121.459, -64.715, -13.7824, 0.07 ) }
    dend_12 { pt3dadd( -121.988, -64.967, -13.8039, 0.44 ) }
    dend_12 { pt3dadd( -123.006, -65.4403, -13.9401, 0.07 ) }
    dend_12 { pt3dadd( -123.388, -65.6138, -14.013, 0.73 ) }
    dend_12 { pt3dadd( -123.846, -65.8013, -14.1228, 1.03 ) }
    dend_12 { pt3dadd( -125.041, -66.2474, -14.4247, 0.07 ) }
    dend_12 { pt3dadd( -125.652, -66.481, -14.587, 0.81 ) }
    dend_12 { pt3dadd( -126.347, -66.7767, -14.7856, 0.07 ) }
    dend_12 { pt3dadd( -127.17, -67.1829, -15.03, 0.07 ) }
    dend_12 { pt3dadd( -128.031, -67.6751, -15.2989, 1.84 ) }
    dend_12 { pt3dadd( -128.291, -67.8481, -15.3832, 1.84 ) }
    dend_12 { pt3dadd( -129.377, -68.6757, -15.7385, 0.07 ) }
    dend_12 { pt3dadd( -129.991, -69.2262, -15.9444, 0.37 ) }
    dend_12 { pt3dadd( -130.514, -69.7782, -16.1174, 0.07 ) }
    dend_12 { pt3dadd( -131.12, -70.4597, -16.3219, 1.32 ) }
    dend_12 { pt3dadd( -131.467, -70.8788, -16.4277, 1.03 ) }
    dend_12 { pt3dadd( -132.043, -71.5733, -16.5851, 0.22 ) }
    dend_12 { pt3dadd( -132.776, -72.4068, -16.76, 0.07 ) }
    dend_12 { pt3dadd( -133.391, -73.0567, -16.8984, 0.81 ) }
    dend_12 { pt3dadd( -134.08, -73.7727, -17.0485, 1.25 ) }
    dend_12 { pt3dadd( -134.785, -74.488, -17.1995, 1.25 ) }
    dend_12 { pt3dadd( -135.924, -75.6131, -17.4399, 0.07 ) }
    dend_12 { pt3dadd( -137.048, -76.6881, -17.6679, 0.07 ) }
    dend_12 { pt3dadd( -137.704, -77.2838, -17.7999, 1.69 ) }
    dend_12 { pt3dadd( -138.27, -77.776, -17.9036, 1.69 ) }
    dend_12 { pt3dadd( -139.108, -78.4827, -18.0357, 0.07 ) }
    dend_12 { pt3dadd( -139.663, -78.8996, -18.1195, 0.95 ) }
    dend_12 { pt3dadd( -140.335, -79.3707, -18.2071, 0.15 ) }
    dend_12 { pt3dadd( -140.51, -79.4887, -18.2265, 0.51 ) }
    dend_12 { pt3dadd( -141.205, -79.9529, -18.3199, 0.07 ) }
    dend_12 { pt3dadd( -141.698, -80.2929, -18.423, 0.07 ) }
    dend_12 { pt3dadd( -142.209, -80.6643, -18.5604, 1.1 ) }
    dend_12 { pt3dadd( -142.664, -81.0136, -18.6999, 1.47 ) }
    dend_12 { pt3dadd( -143.163, -81.4319, -18.8628, 1.32 ) }
    dend_12 { pt3dadd( -143.896, -82.0999, -19.1198, 0.07 ) }
    dend_12 { pt3dadd( -144.507, -82.6957, -19.3383, 0.07 ) }
    dend_12 { pt3dadd( -145.347, -83.5568, -19.618, 0.07 ) }
    dend_12 { pt3dadd( -145.705, -83.9408, -19.7233, 1.25 ) }
    dend_12 { pt3dadd( -146.256, -84.5598, -19.8622, 1.76 ) }
    dend_12 { pt3dadd( -147.086, -85.4915, -20.0494, 0.07 ) }
    dend_12 { pt3dadd( -147.517, -85.98, -20.1246, 0.44 ) }
    dend_12 { pt3dadd( -148.157, -86.688, -20.1877, 0.07 ) }
    dend_12 { pt3dadd( -148.885, -87.4273, -20.221, 1.03 ) }
    dend_12 { pt3dadd( -149.725, -88.173, -20.2386, 0.07 ) }
    dend_12 { pt3dadd( -150.351, -88.6448, -20.2109, 0.51 ) }
    dend_12 { pt3dadd( -150.855, -88.9799, -20.1603, 0.07 ) }
    dend_12 { pt3dadd( -152.016, -89.655, -20.0293, 0.07 ) }
    dend_12 { pt3dadd( -152.947, -90.1249, -19.923, 1.47 ) }
    dend_12 { pt3dadd( -154.377, -90.7178, -19.7907, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_12 { pt3dadd( -155.393, -91.0697, -19.7222, 1.4 ) }
    dend_12 { pt3dadd( -155.98, -91.2515, -19.6899, 1.62 ) }
    dend_12 { pt3dadd( -157.08, -91.5492, -19.6812, 0.07 ) }
    dend_12 { pt3dadd( -157.825, -91.7305, -19.7241, 0.95 ) }
    dend_12 { pt3dadd( -159.075, -92.013, -19.8617, 0.07 ) }
    dend_12 { pt3dadd( -160.12, -92.1974, -20.0019, 0.07 ) }
    dend_12 { pt3dadd( -160.976, -92.343, -20.1377, 1.47 ) }
    dend_12 { pt3dadd( -161.813, -92.4622, -20.2655, 1.32 ) }
    dend_12 { pt3dadd( -162.926, -92.605, -20.4201, 0.22 ) }
    dend_12 { pt3dadd( -164.081, -92.7241, -20.5788, 0.22 ) }
    dend_12 { pt3dadd( -165.01, -92.803, -20.701, 1.69 ) }
    dend_12 { pt3dadd( -165.891, -92.8292, -20.8499, 0.07 ) }
    dend_12 { pt3dadd( -166.68, -92.8036, -20.988, 0.07 ) }
    dend_12 { pt3dadd( -167.184, -92.7502, -21.0635, 0.51 ) }
    dend_12 { pt3dadd( -168.367, -92.5709, -21.2348, 0.07 ) }
    dend_12 { pt3dadd( -168.582, -92.5259, -21.269, 0.59 ) }
    dend_12 { pt3dadd( -169.609, -92.2537, -21.4732, 0.07 ) }
    dend_12 { pt3dadd( -170.438, -91.9637, -21.6584, 1.18 ) }
    dend_12 { pt3dadd( -171.217, -91.6479, -21.8348, 1.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 19/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.96, 6.81997, -2.88389, 0.37 ) }
    dend_11 { pt3dadd( -17.3169, 7.32362, -3.05832, 0.37 ) }
    dend_11 { pt3dadd( -17.6363, 7.77464, -3.22722, 0.37 ) }
    dend_11 { pt3dadd( -18.0717, 8.37745, -3.49443, 0.73 ) }
    dend_11 { pt3dadd( -18.4689, 8.92093, -3.76759, 1.03 ) }
    dend_11 { pt3dadd( -18.7109, 9.24869, -3.94499, 1.1 ) }
    dend_11 { pt3dadd( -18.99, 9.63148, -4.15699, 0.95 ) }
    dend_11 { pt3dadd( -19.3687, 10.1449, -4.46135, 0.95 ) }
    dend_11 { pt3dadd( -19.9529, 10.9497, -4.94585, 1.25 ) }
    dend_11 { pt3dadd( -20.4518, 11.6473, -5.35672, 1.62 ) }
    dend_11 { pt3dadd( -21.0256, 12.4501, -5.80706, 1.76 ) }
    dend_11 { pt3dadd( -21.4886, 13.0863, -6.14028, 1.32 ) }
    dend_11 { pt3dadd( -22.2462, 14.1495, -6.61561, 0.95 ) }
    dend_11 { pt3dadd( -22.5532, 14.6015, -6.77774, 0.95 ) }
    dend_11 { pt3dadd( -22.9295, 15.1714, -6.92124, 0.95 ) }
    dend_11 { pt3dadd( -23.2523, 15.6737, -7.00757, 0.88 ) }
    dend_11 { pt3dadd( -23.6868, 16.3605, -7.08052, 0.73 ) }
    dend_11 { pt3dadd( -24.4834, 17.6325, -7.15872, 0.22 ) }
    dend_11 { pt3dadd( -25.0225, 18.5256, -7.16672, 0.51 ) }
    dend_11 { pt3dadd( -25.5406, 19.4269, -7.16033, 1.76 ) }
    dend_11 { pt3dadd( -25.79, 19.876, -7.14824, 1.47 ) }
    dend_11 { pt3dadd( -26.3879, 20.9915, -7.10545, 0.29 ) }
    dend_11 { pt3dadd( -26.5743, 21.3535, -7.08984, 0.07 ) }
    dend_11 { pt3dadd( -27.1022, 22.3557, -7.04809, 0.95 ) }
    dend_11 { pt3dadd( -27.4908, 23.0637, -7.03297, 1.62 ) }
    dend_11 { pt3dadd( -27.956, 23.8663, -7.04015, 1.62 ) }
    dend_11 { pt3dadd( -28.4485, 24.6521, -7.0673, 0.95 ) }
    dend_11 { pt3dadd( -29.0755, 25.6175, -7.12807, 0.44 ) }
    dend_11 { pt3dadd( -29.5083, 26.2686, -7.18692, 0.44 ) }
    dend_11 { pt3dadd( -30.0456, 27.0584, -7.28336, 1.25 ) }
    dend_11 { pt3dadd( -30.495, 27.7157, -7.37615, 1.69 ) }
    dend_11 { pt3dadd( -30.9309, 28.3646, -7.4773, 0.95 ) }
    dend_11 { pt3dadd( -31.5827, 29.379, -7.63295, 0.37 ) }
    dend_11 { pt3dadd( -31.9213, 29.973, -7.72223, 0.07 ) }
    dend_11 { pt3dadd( -32.2081, 30.5855, -7.80712, 1.03 ) }
    dend_11 { pt3dadd( -32.4998, 31.3919, -7.90233, 0.59 ) }
    dend_11 { pt3dadd( -32.7694, 32.396, -8.0162, 0.59 ) }
    dend_11 { pt3dadd( -32.9546, 33.2999, -8.12586, 0.44 ) }
    dend_11 { pt3dadd( -33.1062, 34.2586, -8.27738, 2.28 ) }
    dend_11 { pt3dadd( -33.2005, 35.0893, -8.44804, 2.28 ) }
    dend_11 { pt3dadd( -33.2348, 36.1047, -8.72638, 1.03 ) }
    dend_11 { pt3dadd( -33.1817, 37.1642, -9.08484, 1.1 ) }
    dend_11 { pt3dadd( -33.0945, 37.7773, -9.33513, 0.81 ) }
    dend_11 { pt3dadd( -32.9343, 38.4964, -9.67506, 0.81 ) }
    dend_11 { pt3dadd( -32.7564, 39.1006, -9.99319, 0.81 ) }
    dend_11 { pt3dadd( -32.2832, 40.3715, -10.7451, 0.59 ) }
    dend_11 { pt3dadd( -32.0404, 40.9544, -11.1151, 0.59 ) }
    dend_11 { pt3dadd( -31.7545, 41.5938, -11.5313, 1.32 ) }
    dend_11 { pt3dadd( -31.3764, 42.4607, -12.0752, 2.28 ) }
    dend_11 { pt3dadd( -31.2648, 42.7409, -12.2384, 2.28 ) }
    dend_11 { pt3dadd( -30.9704, 43.6274, -12.719, 1.4 ) }
    dend_11 { pt3dadd( -30.693, 44.7206, -13.2825, 0.37 ) }
    dend_11 { pt3dadd( -30.6158, 45.1666, -13.504, 0.37 ) }
    dend_11 { pt3dadd( -30.5759, 45.6827, -13.7486, 1.18 ) }
    dend_11 { pt3dadd( -30.5672, 46.2547, -14.0026, 1.18 ) }
    dend_11 { pt3dadd( -30.5755, 46.8273, -14.2383, 1.4 ) }
    dend_11 { pt3dadd( -30.5907, 47.253, -14.4016, 1.47 ) }
    dend_11 { pt3dadd( -30.5969, 47.7574, -14.5952, 1.1 ) }
    dend_11 { pt3dadd( -30.5996, 48.6238, -14.941, 0.15 ) }
    dend_11 { pt3dadd( -30.6067, 49.3337, -15.2337, 0.15 ) }
    dend_11 { pt3dadd( -30.6245, 50.1724, -15.5777, 1.69 ) }
    dend_11 { pt3dadd( -30.6394, 50.7048, -15.7885, 1.76 ) }
    dend_11 { pt3dadd( -30.6684, 51.7537, -16.1509, 0.22 ) }
    dend_11 { pt3dadd( -30.6686, 52.4344, -16.3508, 0.29 ) }
    dend_11 { pt3dadd( -30.661, 53.1004, -16.5123, 0.29 ) }
    dend_11 { pt3dadd( -30.6397, 53.8368, -16.6448, 0.37 ) }
    dend_11 { pt3dadd( -30.598, 54.6349, -16.7311, 1.18 ) }
    dend_11 { pt3dadd( -30.5094, 55.5573, -16.7557, 0.22 ) }
    dend_11 { pt3dadd( -30.3529, 56.6815, -16.7186, 0.22 ) }
    dend_11 { pt3dadd( -30.2757, 57.1085, -16.6928, 0.22 ) }
    dend_11 { pt3dadd( -30.11, 57.8815, -16.6378, 1.62 ) }
    dend_11 { pt3dadd( -30.0022, 58.3581, -16.5952, 2.42 ) }
    dend_11 { pt3dadd( -29.627, 60.0374, -16.4217, 0.22 ) }
    dend_11 { pt3dadd( -29.5061, 60.6194, -16.3638, 0.22 ) }
    dend_11 { pt3dadd( -29.4235, 61.0664, -16.3177, 0.95 ) }
    dend_11 { pt3dadd( -29.3551, 61.4441, -16.2869, 0.95 ) }
    dend_11 { pt3dadd( -29.1725, 62.5135, -16.2305, 0.15 ) }
    dend_11 { pt3dadd( -28.9941, 63.6209, -16.1716, 0.15 ) }
    dend_11 { pt3dadd( -28.91, 64.2319, -16.1457, 0.15 ) }
    dend_11 { pt3dadd( -28.8095, 65.0879, -16.1189, 0.15 ) }
    dend_11 { pt3dadd( -28.7264, 65.9295, -16.104, 2.5 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_11 { pt3dadd( -28.6717, 66.5587, -16.1092, 3.16 ) }
    dend_11 { pt3dadd( -28.6232, 67.2023, -16.1367, 3.16 ) }
    dend_11 { pt3dadd( -28.5164, 69.0328, -16.2554, 0.73 ) }
    dend_11 { pt3dadd( -28.4543, 70.6092, -16.3758, 0.59 ) }
    dend_11 { pt3dadd( -28.4417, 71.4695, -16.4571, 0.22 ) }
    dend_11 { pt3dadd( -28.456, 72.3402, -16.5687, 0.07 ) }
    dend_11 { pt3dadd( -28.4853, 73.1426, -16.7013, 1.1 ) }
    dend_11 { pt3dadd( -28.515, 73.6291, -16.7997, 1.1 ) }
    dend_11 { pt3dadd( -28.5634, 74.1042, -16.9089, 1.1 ) }
    dend_11 { pt3dadd( -28.7096, 75.2301, -17.212, 0.15 ) }
    dend_11 { pt3dadd( -28.8607, 76.2649, -17.4915, 0.15 ) }
    dend_11 { pt3dadd( -28.9743, 76.9237, -17.6657, 0.95 ) }
    dend_11 { pt3dadd( -29.1306, 77.7877, -17.8801, 1.62 ) }
    dend_11 { pt3dadd( -29.2805, 78.6183, -18.0664, 1.62 ) }
    dend_11 { pt3dadd( -29.4828, 79.6636, -18.2737, 0.07 ) }
    dend_11 { pt3dadd( -29.6167, 80.2923, -18.3769, 0.95 ) }
    dend_11 { pt3dadd( -29.7012, 80.6697, -18.4225, 0.95 ) }
    dend_11 { pt3dadd( -29.9331, 81.6763, -18.5205, 0.07 ) }
    dend_11 { pt3dadd( -30.204, 82.8658, -18.6101, 0.07 ) }
    dend_11 { pt3dadd( -30.3032, 83.2943, -18.6321, 1.18 ) }
    dend_11 { pt3dadd( -30.4442, 83.8738, -18.6619, 1.18 ) }
    dend_11 { pt3dadd( -30.7231, 84.9589, -18.7453, 0.15 ) }
    dend_11 { pt3dadd( -30.8765, 85.5529, -18.7974, 0.88 ) }
    dend_11 { pt3dadd( -31.004, 86.0225, -18.8439, 0.88 ) }
    dend_11 { pt3dadd( -31.0904, 86.3287, -18.8828, 0.07 ) }
    dend_11 { pt3dadd( -31.3876, 87.3814, -19.0321, 0.07 ) }
    dend_11 { pt3dadd( -31.5751, 88.0783, -19.143, 1.18 ) }
    dend_11 { pt3dadd( -31.7112, 88.6002, -19.2324, 1.62 ) }
    dend_11 { pt3dadd( -31.8173, 89.0157, -19.31, 1.62 ) }
    dend_11 { pt3dadd( -32.2609, 90.7626, -19.6429, 0.07 ) }
    dend_11 { pt3dadd( -32.4287, 91.4426, -19.775, 0.07 ) }
    dend_11 { pt3dadd( -32.5576, 91.9826, -19.8928, 1.18 ) }
    dend_11 { pt3dadd( -32.6802, 92.5143, -20.0218, 1.18 ) }
    dend_11 { pt3dadd( -32.8404, 93.2782, -20.2396, 0.15 ) }
    dend_11 { pt3dadd( -33.0194, 94.2313, -20.5445, 0.15 ) }
    dend_11 { pt3dadd( -33.1396, 95.0015, -20.8186, 1.69 ) }
    dend_11 { pt3dadd( -33.2265, 95.5907, -21.0505, 2.06 ) }
    dend_11 { pt3dadd( -33.2589, 95.8098, -21.1437, 2.06 ) }
    dend_11 { pt3dadd( -33.4354, 97.0016, -21.6961, 0.44 ) }
    dend_11 { pt3dadd( -33.5817, 97.9795, -22.1736, 0.59 ) }
    dend_11 { pt3dadd( -33.7265, 99.0004, -22.696, 0.22 ) }
    dend_11 { pt3dadd( -33.8782, 100.107, -23.2674, 0.59 ) }
    dend_11 { pt3dadd( -33.9381, 100.539, -23.494, 0.22 ) }
    dend_11 { pt3dadd( -34.0346, 101.22, -23.864, 1.76 ) }
    dend_11 { pt3dadd( -34.1368, 101.902, -24.2344, 2.06 ) }
    dend_11 { pt3dadd( -34.3242, 103.269, -24.9866, 0.22 ) }
    dend_11 { pt3dadd( -34.465, 104.394, -25.5822, 0.66 ) }
    dend_11 { pt3dadd( -34.5341, 105.015, -25.8979, 0.66 ) }
    dend_11 { pt3dadd( -34.6312, 106.118, -26.4238, 1.91 ) }
    dend_11 { pt3dadd( -34.7195, 107.209, -26.9056, 1.25 ) }
    dend_11 { pt3dadd( -34.7979, 108.158, -27.2981, 0.07 ) }
    dend_11 { pt3dadd( -34.8513, 108.841, -27.5564, 0.07 ) }
    dend_11 { pt3dadd( -34.921, 109.828, -27.8761, 1.54 ) }
    dend_11 { pt3dadd( -34.9933, 110.849, -28.1574, 0.15 ) }
    dend_11 { pt3dadd( -35.0906, 111.938, -28.4221, 0.15 ) }
    dend_11 { pt3dadd( -35.1655, 112.621, -28.5838, 1.1 ) }
    dend_11 { pt3dadd( -35.2817, 113.479, -28.7759, 2.28 ) }
    dend_11 { pt3dadd( -35.5488, 115.118, -29.1456, 0.29 ) }
    dend_11 { pt3dadd( -35.7035, 115.974, -29.3265, 0.88 ) }
    dend_11 { pt3dadd( -35.9359, 117.196, -29.5816, 0.07 ) }
    dend_11 { pt3dadd( -36.0788, 118.03, -29.7595, 1.62 ) }
    dend_11 { pt3dadd( -36.1601, 118.573, -29.8732, 1.62 ) }
    dend_11 { pt3dadd( -36.2131, 119.119, -29.9854, 1.1 ) }
    dend_11 { pt3dadd( -36.2459, 120.376, -30.2509, 0.07 ) }
    dend_11 { pt3dadd( -36.2152, 120.915, -30.3602, 0.07 ) }
    dend_11 { pt3dadd( -36.1047, 121.926, -30.5623, 1.54 ) }
    dend_11 { pt3dadd( -36.0163, 122.645, -30.7021, 2.13 ) }
    dend_11 { pt3dadd( -35.7608, 124.587, -31.0862, 0.22 ) }
    dend_11 { pt3dadd( -35.6996, 125.032, -31.1793, 0.22 ) }
    dend_11 { pt3dadd( -35.5506, 126.19, -31.4367, 0.81 ) }
    dend_11 { pt3dadd( -35.472, 126.957, -31.6058, 0.07 ) }
    dend_11 { pt3dadd( -35.4279, 127.655, -31.7584, 0.37 ) }
    dend_11 { pt3dadd( -35.4175, 128.186, -31.9013, 0.07 ) }
    dend_11 { pt3dadd( -35.4278, 128.613, -32.0299, 0.07 ) }
    dend_11 { pt3dadd( -35.4658, 129.364, -32.2608, 1.62 ) }
    dend_11 { pt3dadd( -35.51, 130.057, -32.4825, 2.28 ) }
    dend_11 { pt3dadd( -35.5615, 130.847, -32.7513, 1.47 ) }
    dend_11 { pt3dadd( -35.67, 132.216, -33.244, 0.29 ) }
    dend_11 { pt3dadd( -35.7636, 133.022, -33.538, 0.44 ) }
    dend_11 { pt3dadd( -35.8711, 133.668, -33.7692, 0.07 ) }
    dend_11 { pt3dadd( -36.0397, 134.432, -34.04, 1.32 ) }
    dend_11 { pt3dadd( -36.382, 135.726, -34.477, 0.07 ) }
    dend_11 { pt3dadd( -36.5708, 136.309, -34.6567, 1.25 ) }
    dend_11 { pt3dadd( -36.7651, 136.814, -34.7909, 1.25 ) }
    dend_11 { pt3dadd( -37.1937, 137.833, -35.0251, 0.22 ) }
    dend_11 { pt3dadd( -37.4801, 138.494, -35.1445, 0.51 ) }
    dend_11 { pt3dadd( -37.6357, 138.893, -35.1954, 0.07 ) }
    dend_11 { pt3dadd( -37.8304, 139.524, -35.2494, 0.29 ) }
    dend_11 { pt3dadd( -37.9685, 140.203, -35.3053, 0.07 ) }
    dend_11 { pt3dadd( -38.0834, 141.405, -35.4319, 2.5 ) }
    dend_11 { pt3dadd( -38.0703, 142.127, -35.5494, 2.35 ) }
    dend_11 { pt3dadd( -37.9351, 143.438, -35.8221, 0.07 ) }
    dend_11 { pt3dadd( -37.8074, 144.179, -36.0005, 0.07 ) }
    dend_11 { pt3dadd( -37.651, 144.788, -36.1703, 0.07 ) }
    dend_11 { pt3dadd( -37.4171, 145.509, -36.401, 1.62 ) }
    dend_11 { pt3dadd( -36.9673, 146.767, -36.8536, 0.07 ) }
    dend_11 { pt3dadd( -36.7855, 147.305, -37.0496, 0.37 ) }
    dend_11 { pt3dadd( -36.6915, 147.629, -37.1663, 0.37 ) }
    dend_11 { pt3dadd( -36.4986, 148.48, -37.4571, 0.07 ) }
    dend_11 { pt3dadd( -36.3907, 149.074, -37.6403, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -36.2242, 150.159, -37.9348, 0.07 ) }
    dend_11 { pt3dadd( -36.151, 150.808, -38.092, 0.07 ) }
    dend_11 { pt3dadd( -36.0776, 151.887, -38.3538, 1.98 ) }
    dend_11 { pt3dadd( -36.0216, 153.345, -38.7041, 0.07 ) }
    dend_11 { pt3dadd( -36.0198, 154.128, -38.8831, 0.07 ) }
    dend_11 { pt3dadd( -36.0461, 155.1, -39.1058, 1.4 ) }
    dend_11 { pt3dadd( -36.1276, 156.121, -39.3425, 0.07 ) }
    dend_11 { pt3dadd( -36.2383, 156.883, -39.5244, 0.22 ) }
    dend_11 { pt3dadd( -36.3849, 157.549, -39.682, 0.07 ) }
    dend_11 { pt3dadd( -36.6439, 158.43, -39.9028, 1.76 ) }
    dend_11 { pt3dadd( -36.8144, 158.911, -40.0403, 1.76 ) }
    dend_11 { pt3dadd( -37.3549, 160.217, -40.4432, 0.07 ) }
    dend_11 { pt3dadd( -37.6777, 160.929, -40.6747, 1.1 ) }
    dend_11 { pt3dadd( -38.037, 161.699, -40.9255, 0.07 ) }
    dend_11 { pt3dadd( -38.351, 162.351, -41.1437, 0.07 ) }
    dend_11 { pt3dadd( -38.6228, 162.926, -41.3787, 0.95 ) }
    dend_11 { pt3dadd( -38.8337, 163.397, -41.59, 0.95 ) }
    dend_11 { pt3dadd( -39.0822, 164.008, -41.9214, 0.07 ) }
    dend_11 { pt3dadd( -39.2743, 164.513, -42.2213, 0.07 ) }
    dend_11 { pt3dadd( -39.4967, 165.121, -42.5885, 1.54 ) }
    dend_11 { pt3dadd( -39.9627, 166.356, -43.3267, 0.29 ) }
    dend_11 { pt3dadd( -40.1037, 166.718, -43.5344, 1.18 ) }
    dend_11 { pt3dadd( -40.5251, 167.787, -44.1227, 0.15 ) }
    dend_11 { pt3dadd( -40.798, 168.418, -44.463, 0.15 ) }
    dend_11 { pt3dadd( -41.1919, 169.238, -44.8966, 2.06 ) }
    dend_11 { pt3dadd( -41.7078, 170.277, -45.4369, 0.15 ) }
    dend_11 { pt3dadd( -41.9714, 170.809, -45.7114, 0.51 ) }
    dend_11 { pt3dadd( -42.265, 171.394, -46.0516, 0.07 ) }
    dend_11 { pt3dadd( -42.6144, 172.12, -46.4962, 1.69 ) }
    dend_11 { pt3dadd( -43.064, 173.097, -47.1887, 0.29 ) }
    dend_11 { pt3dadd( -43.4152, 173.908, -47.8311, 0.07 ) }
    dend_11 { pt3dadd( -43.663, 174.496, -48.3122, 1.4 ) }
    dend_11 { pt3dadd( -44.0557, 175.365, -49.0312, 1.4 ) }
    dend_11 { pt3dadd( -44.248, 175.758, -49.3499, 2.06 ) }
    dend_11 { pt3dadd( -44.8308, 176.916, -50.223, 0.22 ) }
    dend_11 { pt3dadd( -45.1287, 177.45, -50.5942, 0.88 ) }
    dend_11 { pt3dadd( -45.5138, 178.064, -50.9799, 0.07 ) }
    dend_11 { pt3dadd( -46.0467, 178.802, -51.3942, 0.07 ) }
    dend_11 { pt3dadd( -46.4995, 179.37, -51.6779, 1.54 ) }
    dend_11 { pt3dadd( -46.6882, 179.597, -51.7794, 1.69 ) }
    dend_11 { pt3dadd( -47.5929, 180.705, -52.1733, 0.07 ) }
    dend_11 { pt3dadd( -47.9643, 181.206, -52.3408, 0.07 ) }
    dend_11 { pt3dadd( -48.5224, 182.043, -52.6157, 0.07 ) }
    dend_11 { pt3dadd( -48.7791, 182.475, -52.7469, 0.07 ) }
    dend_11 { pt3dadd( -49.0909, 183.05, -52.9057, 1.18 ) }
    dend_11 { pt3dadd( -49.3417, 183.553, -53.0353, 1.84 ) }
    dend_11 { pt3dadd( -49.9325, 184.83, -53.3208, 0.07 ) }
    dend_11 { pt3dadd( -50.1594, 185.346, -53.4429, 0.07 ) }
    dend_11 { pt3dadd( -50.3571, 185.795, -53.5579, 1.32 ) }
    dend_11 { pt3dadd( -50.5299, 186.152, -53.6536, 1.32 ) }
    dend_11 { pt3dadd( -51.0165, 187.052, -53.9013, 0.15 ) }
    dend_11 { pt3dadd( -51.5001, 187.88, -54.1271, 0.15 ) }
    dend_11 { pt3dadd( -51.8319, 188.42, -54.2861, 0.15 ) }
    dend_11 { pt3dadd( -52.1854, 188.99, -54.4748, 0.95 ) }
    dend_11 { pt3dadd( -52.3243, 189.204, -54.5528, 1.25 ) }
    dend_11 { pt3dadd( -52.555, 189.557, -54.6805, 0.73 ) }
    dend_11 { pt3dadd( -52.9679, 190.21, -54.9037, 0.07 ) }
    dend_11 { pt3dadd( -53.3854, 190.96, -55.13, 0.07 ) }
    dend_11 { pt3dadd( -53.7423, 191.671, -55.305, 0.37 ) }
    dend_11 { pt3dadd( -53.9842, 192.203, -55.4092, 0.07 ) }
    dend_11 { pt3dadd( -54.3299, 192.997, -55.5502, 2.2 ) }
    dend_11 { pt3dadd( -54.5516, 193.571, -55.6647, 1.84 ) }
    dend_11 { pt3dadd( -55.0033, 194.972, -55.9532, 0.07 ) }
    dend_11 { pt3dadd( -55.3012, 196.058, -56.1989, 0.07 ) }
    dend_11 { pt3dadd( -55.4559, 196.739, -56.3783, 0.73 ) }
    dend_11 { pt3dadd( -55.5777, 197.371, -56.5676, 1.47 ) }
    dend_11 { pt3dadd( -55.81, 198.758, -57.0375, 0.07 ) }
    dend_11 { pt3dadd( -55.8937, 199.256, -57.2256, 0.29 ) }
    dend_11 { pt3dadd( -55.9968, 199.869, -57.4782, 0.07 ) }
    dend_11 { pt3dadd( -56.0987, 200.479, -57.7452, 0.66 ) }
    dend_11 { pt3dadd( -56.2073, 201.124, -58.0293, 0.07 ) }
    dend_11 { pt3dadd( -56.3485, 201.842, -58.3191, 0.07 ) }
    dend_11 { pt3dadd( -56.5424, 202.6, -58.5958, 1.84 ) }
    dend_11 { pt3dadd( -56.6524, 202.995, -58.7485, 1.84 ) }
    dend_11 { pt3dadd( -56.7185, 203.249, -58.8542, 1.84 ) }
    dend_11 { pt3dadd( -56.9456, 204.187, -59.3046, 0.07 ) }
    dend_11 { pt3dadd( -57.0728, 204.728, -59.5737, 0.07 ) }
    dend_11 { pt3dadd( -57.1948, 205.282, -59.8596, 1.32 ) }
    dend_11 { pt3dadd( -57.3644, 206.057, -60.2438, 0.07 ) }
    dend_11 { pt3dadd( -57.5876, 206.954, -60.6737, 1.1 ) }
    dend_11 { pt3dadd( -57.7923, 207.731, -61.0228, 0.07 ) }
    dend_11 { pt3dadd( -58.0192, 208.564, -61.3711, 1.4 ) }
    dend_11 { pt3dadd( -58.0884, 208.832, -61.4744, 1.76 ) }
    dend_11 { pt3dadd( -58.3999, 210.057, -61.8883, 0.15 ) }
    dend_11 { pt3dadd( -58.5481, 210.617, -62.0366, 0.44 ) }
    dend_11 { pt3dadd( -58.7117, 211.21, -62.1555, 0.07 ) }
    dend_11 { pt3dadd( -58.8861, 211.869, -62.2655, 0.07 ) }
    dend_11 { pt3dadd( -59.1065, 212.72, -62.3968, 1.25 ) }
    dend_11 { pt3dadd( -59.19, 213.06, -62.4421, 1.76 ) }
    dend_11 { pt3dadd( -59.4846, 214.308, -62.5765, 0.07 ) }
    dend_11 { pt3dadd( -59.727, 215.291, -62.666, 0.15 ) }
    dend_11 { pt3dadd( -59.9812, 216.25, -62.7361, 1.47 ) }
    dend_11 { pt3dadd( -60.1069, 216.723, -62.7603, 1.1 ) }
    dend_11 { pt3dadd( -60.3635, 217.605, -62.794, 0.15 ) }
    dend_11 { pt3dadd( -60.6061, 218.429, -62.8242, 0.07 ) }
    dend_11 { pt3dadd( -60.8887, 219.345, -62.8443, 0.37 ) }
    dend_11 { pt3dadd( -61.1833, 220.285, -62.8391, 0.07 ) }
    dend_11 { pt3dadd( -61.4094, 220.997, -62.8168, 1.1 ) }
    dend_11 { pt3dadd( -61.6028, 221.607, -62.8001, 1.69 ) }
    dend_11 { pt3dadd( -61.8098, 222.27, -62.7851, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_11 { pt3dadd( -62.0444, 223.055, -62.7985, 0.07 ) }
    dend_11 { pt3dadd( -62.3711, 224.136, -62.8542, 0.22 ) }
    dend_11 { pt3dadd( -62.7099, 225.288, -62.9371, 0.22 ) }
    dend_11 { pt3dadd( -62.918, 226.048, -63.0054, 1.03 ) }
    dend_11 { pt3dadd( -63.0276, 226.518, -63.051, 1.03 ) }
    dend_11 { pt3dadd( -63.2267, 227.445, -63.1565, 0.07 ) }
    dend_11 { pt3dadd( -63.4377, 228.651, -63.3115, 0.07 ) }
    dend_11 { pt3dadd( -63.5761, 229.503, -63.4402, 1.47 ) }
    dend_11 { pt3dadd( -63.6247, 229.865, -63.4942, 1.47 ) }
    dend_11 { pt3dadd( -63.7332, 230.819, -63.6268, 0.07 ) }
    dend_11 { pt3dadd( -63.8189, 231.679, -63.7448, 1.25 ) }
    dend_11 { pt3dadd( -63.8894, 232.46, -63.8438, 0.15 ) }
    dend_11 { pt3dadd( -63.9707, 233.315, -63.9634, 0.66 ) }
    dend_11 { pt3dadd( -64.0458, 233.977, -64.0608, 0.07 ) }
    dend_11 { pt3dadd( -64.187, 234.943, -64.1998, 0.07 ) }
    dend_11 { pt3dadd( -64.3411, 235.786, -64.3155, 1.76 ) }
    dend_11 { pt3dadd( -64.5192, 236.605, -64.4173, 1.84 ) }
    dend_11 { pt3dadd( -64.7846, 237.684, -64.5505, 0.07 ) }
    dend_11 { pt3dadd( -64.9538, 238.272, -64.6186, 0.07 ) }
    dend_11 { pt3dadd( -65.2507, 239.146, -64.7269, 0.73 ) }
    dend_11 { pt3dadd( -65.5178, 239.827, -64.8226, 0.07 ) }
    dend_11 { pt3dadd( -65.7393, 240.318, -64.9019, 0.29 ) }
    dend_11 { pt3dadd( -65.8989, 240.642, -64.9629, 0.07 ) }
    dend_11 { pt3dadd( -66.2547, 241.314, -65.1024, 0.07 ) }
    dend_11 { pt3dadd( -66.5975, 241.942, -65.2519, 1.1 ) }
    dend_11 { pt3dadd( -66.7694, 242.244, -65.3373, 1.25 ) }
    dend_11 { pt3dadd( -67.0547, 242.736, -65.5568, 0.07 ) }
    dend_11 { pt3dadd( -67.2909, 243.158, -65.791, 0.59 ) }
    dend_11 { pt3dadd( -67.5694, 243.644, -66.0994, 0.07 ) }
    dend_11 { pt3dadd( -67.8463, 244.095, -66.4489, 0.07 ) }
    dend_11 { pt3dadd( -68.2127, 244.66, -66.9491, 1.32 ) }
    dend_11 { pt3dadd( -68.9419, 245.798, -68.0643, 0.07 ) }
    dend_11 { pt3dadd( -69.1331, 246.127, -68.4123, 0.07 ) }
    dend_11 { pt3dadd( -69.3081, 246.488, -68.801, 0.37 ) }
    dend_11 { pt3dadd( -69.5061, 247.075, -69.4276, 0.37 ) }
    dend_11 { pt3dadd( -69.5546, 247.458, -69.7976, 1.1 ) }
    dend_11 { pt3dadd( -69.5232, 247.819, -70.091, 1.1 ) }
    dend_11 { pt3dadd( -69.3365, 248.685, -70.6601, 0.07 ) }
    dend_11 { pt3dadd( -69.1514, 249.327, -71.0345, 1.1 ) }
    dend_11 { pt3dadd( -68.9032, 250.07, -71.4188, 0.07 ) }
    dend_11 { pt3dadd( -68.6435, 250.842, -71.7617, 1.54 ) }
    dend_11 { pt3dadd( -68.279, 252.026, -72.2451, 0.07 ) }
    dend_11 { pt3dadd( -68.1617, 252.487, -72.4128, 0.07 ) }
    dend_11 { pt3dadd( -68.0367, 253.099, -72.6213, 1.1 ) }
    dend_11 { pt3dadd( -67.9427, 253.782, -72.8391, 0.07 ) }
    dend_11 { pt3dadd( -67.9014, 254.442, -73.0603, 1.18 ) }
    dend_11 { pt3dadd( -67.9063, 255.519, -73.4592, 0.07 ) }
    dend_11 { pt3dadd( -67.9787, 256.358, -73.8125, 0.07 ) }
    dend_11 { pt3dadd( -68.0814, 256.947, -74.1172, 1.1 ) }
    dend_11 { pt3dadd( -68.1438, 257.203, -74.2726, 1.1 ) }
    dend_11 { pt3dadd( -68.4023, 258.047, -74.8953, 0.07 ) }
    dend_11 { pt3dadd( -68.5063, 258.332, -75.13, 0.07 ) }
    dend_11 { pt3dadd( -68.7948, 259.026, -75.727, 0.88 ) }
    dend_11 { pt3dadd( -69.1045, 259.719, -76.3801, 0.37 ) }
    dend_11 { pt3dadd( -69.3356, 260.232, -76.8622, 0.88 ) }
    dend_11 { pt3dadd( -69.6977, 261.09, -77.6459, 0.07 ) }
    dend_11 { pt3dadd( -69.9413, 261.702, -78.1741, 0.07 ) }
    dend_11 { pt3dadd( -70.2066, 262.446, -78.7873, 1.76 ) }
    dend_11 { pt3dadd( -70.6808, 263.873, -79.9026, 0.07 ) }
    dend_11 { pt3dadd( -70.7826, 264.169, -80.1226, 0.07 ) }
    dend_11 { pt3dadd( -71.0387, 264.87, -80.6246, 1.84 ) }
    dend_11 { pt3dadd( -71.5412, 266.238, -81.5555, 0.07 ) }
    dend_11 { pt3dadd( -71.6967, 266.639, -81.8145, 1.4 ) }
    dend_11 { pt3dadd( -71.8193, 266.934, -81.9729, 1.4 ) }
    dend_11 { pt3dadd( -72.147, 267.684, -82.285, 0.07 ) }
    dend_11 { pt3dadd( -72.3751, 268.171, -82.4643, 0.73 ) }
    dend_11 { pt3dadd( -72.6771, 268.751, -82.6399, 0.07 ) }
    dend_11 { pt3dadd( -73.2835, 269.827, -82.9014, 2.72 ) }
    dend_11 { pt3dadd( -74.0286, 271.065, -83.1823, 0.07 ) }
    dend_11 { pt3dadd( -74.2819, 271.463, -83.2475, 0.81 ) }
    dend_11 { pt3dadd( -74.6216, 271.936, -83.2898, 0.07 ) }
    dend_11 { pt3dadd( -75.0871, 272.495, -83.3009, 0.07 ) }
    dend_11 { pt3dadd( -75.339, 272.74, -83.2878, 0.95 ) }
    dend_11 { pt3dadd( -76.1388, 273.341, -83.2334, 0.07 ) }
    dend_11 { pt3dadd( -76.9159, 273.811, -83.1745, 0.07 ) }
    dend_11 { pt3dadd( -77.6835, 274.227, -83.1237, 1.25 ) }
    dend_11 { pt3dadd( -78.3319, 274.542, -83.081, 0.07 ) }
    dend_11 { pt3dadd( -79.3113, 274.987, -83.0206, 0.07 ) }
    dend_11 { pt3dadd( -80.1468, 275.353, -82.9576, 1.91 ) }
    dend_11 { pt3dadd( -81.1698, 275.801, -82.8763, 0.07 ) }
    dend_11 { pt3dadd( -81.5873, 275.993, -82.853, 0.07 ) }
    dend_11 { pt3dadd( -82.002, 276.199, -82.8243, 0.88 ) }
    dend_11 { pt3dadd( -82.398, 276.406, -82.795, 1.32 ) }
    dend_11 { pt3dadd( -83.339, 276.943, -82.7021, 0.15 ) }
    dend_11 { pt3dadd( -83.8234, 277.231, -82.6579, 0.66 ) }
    dend_11 { pt3dadd( -84.4288, 277.609, -82.604, 0.07 ) }
    dend_11 { pt3dadd( -84.7735, 277.825, -82.5777, 0.07 ) }
    dend_11 { pt3dadd( -85.3076, 278.147, -82.5599, 0.07 ) }
    dend_11 { pt3dadd( -85.5029, 278.254, -82.5535, 0.88 ) }
    dend_11 { pt3dadd( -86.1405, 278.593, -82.5171, 0.07 ) }
    dend_11 { pt3dadd( -86.916, 278.993, -82.4293, 0.95 ) }
    dend_11 { pt3dadd( -87.5229, 279.336, -82.3257, 0.07 ) }
    dend_11 { pt3dadd( -88.0559, 279.686, -82.1801, 0.29 ) }
    dend_11 { pt3dadd( -88.4689, 280.124, -81.9526, 0.07 ) }
    dend_11 { pt3dadd( -88.5979, 280.647, -81.6273, 0.07 ) }
    dend_11 { pt3dadd( -88.591, 280.761, -81.551, 0.07 ) }
    dend_11 { pt3dadd( -88.4505, 281.178, -81.2714, 0.37 ) }
    dend_11 { pt3dadd( -88.1337, 281.84, -80.8283, 0.07 ) }
    dend_11 { pt3dadd( -87.5956, 282.76, -80.2153, 0.07 ) }
    dend_11 { pt3dadd( -87.1445, 283.422, -79.8118, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 0/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -42.6113, -80.8359, -33.2888, 0.37 ) }
    dend_29 { pt3dadd( -42.4127, -83.4873, -33.145, 0.37 ) }
    dend_29 { pt3dadd( -42.2962, -84.7493, -33.0661, 0.07 ) }
    dend_29 { pt3dadd( -42.1901, -85.7671, -32.9995, 1.32 ) }
    dend_29 { pt3dadd( -42.1458, -86.2826, -32.9766, 1.32 ) }
    dend_29 { pt3dadd( -42.0798, -88.0586, -32.9308, 0.22 ) }
    dend_29 { pt3dadd( -42.08, -89.0575, -32.9167, 0.07 ) }
    dend_29 { pt3dadd( -42.1348, -89.952, -32.8861, 1.32 ) }
    dend_29 { pt3dadd( -42.1532, -90.1501, -32.8774, 1.32 ) }
    dend_29 { pt3dadd( -42.3264, -91.5109, -32.7777, 0.15 ) }
    dend_29 { pt3dadd( -42.6681, -93.3554, -32.5453, 0.15 ) }
    dend_29 { pt3dadd( -42.8839, -94.3233, -32.3545, 0.15 ) }
    dend_29 { pt3dadd( -43.1106, -95.3091, -32.1184, 1.1 ) }
    dend_29 { pt3dadd( -43.2454, -95.8919, -31.9511, 1.32 ) }
    dend_29 { pt3dadd( -43.515, -97.1568, -31.5501, 0.22 ) }
    dend_29 { pt3dadd( -43.7809, -98.7364, -31.0325, 0.22 ) }
    dend_29 { pt3dadd( -43.9158, -99.6889, -30.745, 0.95 ) }
    dend_29 { pt3dadd( -43.9757, -100.207, -30.6229, 0.95 ) }
    dend_29 { pt3dadd( -44.1064, -101.321, -30.4576, 0.07 ) }
    dend_29 { pt3dadd( -44.2223, -102.205, -30.3902, 0.07 ) }
    dend_29 { pt3dadd( -44.3651, -103.507, -30.3895, 1.54 ) }
    dend_29 { pt3dadd( -44.4327, -104.33, -30.4502, 1.32 ) }
    dend_29 { pt3dadd( -44.5215, -105.654, -30.6023, 0.15 ) }
    dend_29 { pt3dadd( -44.6126, -107.149, -30.8193, 0.15 ) }
    dend_29 { pt3dadd( -44.7267, -108.514, -31.0608, 1.54 ) }
    dend_29 { pt3dadd( -44.8196, -109.367, -31.2359, 1.54 ) }
    dend_29 { pt3dadd( -45.1091, -111.9, -31.7832, 0.07 ) }
    dend_29 { pt3dadd( -45.2447, -112.965, -32.0237, 0.88 ) }
    dend_29 { pt3dadd( -45.3688, -113.949, -32.2495, 0.07 ) }
    dend_29 { pt3dadd( -45.582, -115.826, -32.6603, 0.07 ) }
    dend_29 { pt3dadd( -45.7362, -117.232, -32.9363, 2.06 ) }
    dend_29 { pt3dadd( -45.9363, -118.988, -33.2104, 1.03 ) }
    dend_29 { pt3dadd( -46.0912, -120.679, -33.3773, 0.07 ) }
    dend_29 { pt3dadd( -46.164, -121.826, -33.4372, 0.07 ) }
    dend_29 { pt3dadd( -46.1827, -122.435, -33.444, 0.81 ) }
    dend_29 { pt3dadd( -46.1801, -123.687, -33.4221, 0.59 ) }
    dend_29 { pt3dadd( -46.1915, -124.686, -33.4006, 0.15 ) }
    dend_29 { pt3dadd( -46.2424, -126.285, -33.3904, 1.84 ) }
    dend_29 { pt3dadd( -46.3346, -128.214, -33.4103, 0.07 ) }
    dend_29 { pt3dadd( -46.3828, -128.748, -33.4268, 0.59 ) }
    dend_29 { pt3dadd( -46.5318, -130.064, -33.5064, 0.59 ) }
    dend_29 { pt3dadd( -46.7143, -131.365, -33.6131, 1.69 ) }
    dend_29 { pt3dadd( -46.8491, -132.229, -33.7276, 1.69 ) }
    dend_29 { pt3dadd( -47.0063, -133.162, -33.8666, 1.1 ) }
    dend_29 { pt3dadd( -47.178, -134.138, -34.0255, 0.15 ) }
    dend_29 { pt3dadd( -47.3228, -134.952, -34.1706, 0.81 ) }
    dend_29 { pt3dadd( -47.5085, -136.105, -34.3702, 0.59 ) }
    dend_29 { pt3dadd( -47.7867, -137.957, -34.6685, 0.15 ) }
    dend_29 { pt3dadd( -47.9114, -138.83, -34.8189, 0.15 ) }
    dend_29 { pt3dadd( -48.1371, -140.386, -35.0891, 1.62 ) }
    dend_29 { pt3dadd( -48.173, -140.663, -35.128, 1.62 ) }
    dend_29 { pt3dadd( -48.4201, -142.681, -35.3402, 0.44 ) }
    dend_29 { pt3dadd( -48.5639, -143.994, -35.4121, 0.22 ) }
    dend_29 { pt3dadd( -48.6831, -145.202, -35.4245, 1.03 ) }
    dend_29 { pt3dadd( -48.7821, -146.307, -35.4155, 1.4 ) }
    dend_29 { pt3dadd( -48.9474, -148.51, -35.3233, 0.22 ) }
    dend_29 { pt3dadd( -49.1238, -151.04, -35.1688, 0.22 ) }
    dend_29 { pt3dadd( -49.2246, -152.792, -35.0295, 1.03 ) }
    dend_29 { pt3dadd( -49.2624, -153.581, -34.9488, 1.47 ) }
    dend_29 { pt3dadd( -49.2978, -154.285, -34.864, 1.47 ) }
    dend_29 { pt3dadd( -49.4186, -155.981, -34.673, 0.15 ) }
    dend_29 { pt3dadd( -49.5291, -156.865, -34.5869, 0.29 ) }
    dend_29 { pt3dadd( -49.7909, -158.338, -34.4337, 0.07 ) }
    dend_29 { pt3dadd( -50.0298, -159.345, -34.3642, 1.47 ) }
    dend_29 { pt3dadd( -50.23, -160.075, -34.3348, 1.47 ) }
    dend_29 { pt3dadd( -50.699, -161.581, -34.3637, 0.15 ) }
    dend_29 { pt3dadd( -50.9032, -162.175, -34.4106, 0.15 ) }
    dend_29 { pt3dadd( -51.246, -163.134, -34.4702, 1.25 ) }
    dend_29 { pt3dadd( -51.6218, -164.222, -34.522, 1.62 ) }
    dend_29 { pt3dadd( -52.2007, -166.118, -34.6734, 0.07 ) }
    dend_29 { pt3dadd( -52.479, -167.217, -34.7821, 0.37 ) }
    dend_29 { pt3dadd( -52.6154, -167.933, -34.8578, 0.15 ) }
    dend_29 { pt3dadd( -52.8472, -169.649, -35.0443, 1.25 ) }
    dend_29 { pt3dadd( -52.9265, -170.862, -35.2147, 0.37 ) }
    dend_29 { pt3dadd( -52.9282, -172.196, -35.4105, 0.22 ) }
    dend_29 { pt3dadd( -52.7962, -173.58, -35.6484, 0.22 ) }
    dend_29 { pt3dadd( -52.6645, -174.345, -35.7872, 1.47 ) }
    dend_29 { pt3dadd( -52.5178, -174.953, -35.9221, 1.25 ) }
    dend_29 { pt3dadd( -52.0328, -176.484, -36.3245, 0.07 ) }
    dend_29 { pt3dadd( -51.9238, -176.778, -36.3923, 0.37 ) }
    dend_29 { pt3dadd( -51.2756, -178.416, -36.682, 0.07 ) }
    dend_29 { pt3dadd( -50.8719, -179.414, -36.8603, 0.81 ) }
    dend_29 { pt3dadd( -50.7171, -179.818, -36.9274, 0.81 ) }
    dend_29 { pt3dadd( -50.4385, -180.6, -37.0408, 0.07 ) }
    dend_29 { pt3dadd( -50.1279, -181.609, -37.148, 0.07 ) }
    dend_29 { pt3dadd( -49.9072, -182.467, -37.2385, 0.88 ) }
    dend_29 { pt3dadd( -49.7377, -183.266, -37.3053, 0.07 ) }
    dend_29 { pt3dadd( -49.5893, -184.042, -37.3818, 0.66 ) }
    dend_29 { pt3dadd( -49.4581, -184.806, -37.4571, 0.07 ) }
    dend_29 { pt3dadd( -49.2804, -185.755, -37.5246, 0.07 ) }
    dend_29 { pt3dadd( -49.1706, -186.272, -37.5423, 0.07 ) }
    dend_29 { pt3dadd( -48.9092, -187.304, -37.5083, 1.03 ) }
    dend_29 { pt3dadd( -48.4703, -188.929, -37.306, 0.07 ) }
    dend_29 { pt3dadd( -48.228, -189.771, -37.1378, 0.44 ) }
    dend_29 { pt3dadd( -47.772, -191.311, -36.7307, 0.07 ) }
    dend_29 { pt3dadd( -47.5259, -192.112, -36.4863, 0.59 ) }
    dend_29 { pt3dadd( -47.0777, -193.659, -35.9815, 0.07 ) }
    dend_29 { pt3dadd( -46.7469, -195.014, -35.502, 0.07 ) }
    dend_29 { pt3dadd( -46.3876, -196.773, -34.8002, 0.07 ) }
    dend_29 { pt3dadd( -46.1251, -198.372, -34.1403, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -46.005, -199.438, -33.6967, 0.22 ) }
    dend_29 { pt3dadd( -45.8947, -200.391, -33.3255, 1.62 ) }
    dend_29 { pt3dadd( -45.6988, -201.604, -32.9421, 0.37 ) }
    dend_29 { pt3dadd( -45.422, -202.269, -32.8249, 1.1 ) }
    dend_29 { pt3dadd( -46.3199, -201.397, -32.8319, 0.07 ) }
    dend_29 { pt3dadd( -47.1917, -200.69, -32.803, 0.07 ) }
    dend_29 { pt3dadd( -47.723, -200.209, -32.7923, 0.88 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -42.6113, -80.8359, -33.2888, 0.37 ) }
    dend_28 { pt3dadd( -44.2389, -82.397, -34.204, 0.37 ) }
    dend_28 { pt3dadd( -44.8372, -82.9615, -34.4438, 0.59 ) }
    dend_28 { pt3dadd( -45.9217, -83.9795, -34.6301, 0.07 ) }
    dend_28 { pt3dadd( -46.9745, -84.9565, -34.5431, 0.07 ) }
    dend_28 { pt3dadd( -47.6101, -85.5019, -34.4073, 0.07 ) }
    dend_28 { pt3dadd( -48.2283, -85.9485, -34.3543, 0.81 ) }
    dend_28 { pt3dadd( -49.3297, -86.548, -34.2799, 0.29 ) }
    dend_28 { pt3dadd( -50.7922, -87.0001, -34.8713, 0.29 ) }
    dend_28 { pt3dadd( -51.6252, -87.1073, -35.5218, 0.59 ) }
    dend_28 { pt3dadd( -52.2974, -87.1503, -36.1469, 0.95 ) }
    dend_28 { pt3dadd( -54.6092, -87.2661, -38.7934, 0.44 ) }
    dend_28 { pt3dadd( -55.7188, -87.3296, -40.2372, 0.73 ) }
    dend_28 { pt3dadd( -56.8411, -87.4361, -41.8752, 0.15 ) }
    dend_28 { pt3dadd( -57.3281, -87.5046, -42.6614, 0.15 ) }
    dend_28 { pt3dadd( -57.6243, -87.5781, -43.1598, 0.51 ) }
    dend_28 { pt3dadd( -58.6109, -88.068, -44.9228, 0.07 ) }
    dend_28 { pt3dadd( -58.7335, -88.1747, -45.1502, 0.07 ) }
    dend_28 { pt3dadd( -59.1012, -88.5914, -45.8704, 1.03 ) }
    dend_28 { pt3dadd( -59.5617, -89.2029, -46.7607, 0.15 ) }
    dend_28 { pt3dadd( -60.0127, -89.8254, -47.5864, 0.95 ) }
    dend_28 { pt3dadd( -61.0351, -91.1858, -49.2511, 0.37 ) }
    dend_28 { pt3dadd( -61.44, -91.7063, -49.8312, 0.81 ) }
    dend_28 { pt3dadd( -62.0548, -92.4739, -50.6959, 0.07 ) }
    dend_28 { pt3dadd( -62.7414, -93.3158, -51.6362, 0.07 ) }
    dend_28 { pt3dadd( -63.124, -93.7895, -52.1594, 0.29 ) }
    dend_28 { pt3dadd( -63.596, -94.3055, -52.7913, 0.95 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 34/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -171.217, -91.6479, -21.8348, 0.07 ) }
    dend_14 { pt3dadd( -172.109, -92.3755, -21.9937, 0.07 ) }
    dend_14 { pt3dadd( -173.076, -93.2637, -22.2192, 0.07 ) }
    dend_14 { pt3dadd( -173.748, -93.9472, -22.4019, 0.07 ) }
    dend_14 { pt3dadd( -174.03, -94.2704, -22.4907, 0.88 ) }
    dend_14 { pt3dadd( -174.323, -94.6416, -22.6117, 0.88 ) }
    dend_14 { pt3dadd( -174.818, -95.2974, -22.8815, 0.07 ) }
    dend_14 { pt3dadd( -175.034, -95.6181, -23.0439, 0.07 ) }
    dend_14 { pt3dadd( -175.543, -96.3678, -23.4636, 0.66 ) }
    dend_14 { pt3dadd( -175.854, -96.7882, -23.7216, 1.1 ) }
    dend_14 { pt3dadd( -176.538, -97.6107, -24.2486, 0.07 ) }
    dend_14 { pt3dadd( -177.366, -98.491, -24.8149, 0.07 ) }
    dend_14 { pt3dadd( -178.131, -99.202, -25.2622, 0.66 ) }
    dend_14 { pt3dadd( -178.788, -99.7243, -25.5843, 1.4 ) }
    dend_14 { pt3dadd( -179.834, -100.414, -26.0184, 0.22 ) }
    dend_14 { pt3dadd( -180.631, -100.836, -26.2928, 0.22 ) }
    dend_14 { pt3dadd( -181.392, -101.148, -26.4771, 0.59 ) }
    dend_14 { pt3dadd( -182.016, -101.361, -26.5879, 0.07 ) }
    dend_14 { pt3dadd( -182.809, -101.584, -26.7442, 0.07 ) }
    dend_14 { pt3dadd( -183.719, -101.808, -26.9365, 0.81 ) }
    dend_14 { pt3dadd( -184.633, -102.03, -27.1449, 0.22 ) }
    dend_14 { pt3dadd( -186.045, -102.435, -27.5218, 0.22 ) }
    dend_14 { pt3dadd( -186.809, -102.705, -27.7709, 1.4 ) }
    dend_14 { pt3dadd( -188.043, -103.249, -28.2378, 0.07 ) }
    dend_14 { pt3dadd( -188.56, -103.534, -28.4578, 0.81 ) }
    dend_14 { pt3dadd( -189.133, -103.949, -28.7413, 0.07 ) }
    dend_14 { pt3dadd( -189.739, -104.523, -29.1002, 0.07 ) }
    dend_14 { pt3dadd( -189.978, -104.796, -29.2788, 0.07 ) }
    dend_14 { pt3dadd( -190.348, -105.28, -29.5532, 0.81 ) }
    dend_14 { pt3dadd( -190.563, -105.61, -29.686, 0.07 ) }
    dend_14 { pt3dadd( -191.181, -106.663, -30.0416, 0.44 ) }
    dend_14 { pt3dadd( -191.504, -107.192, -30.2008, 0.07 ) }
    dend_14 { pt3dadd( -191.894, -107.789, -30.3614, 0.29 ) }
    dend_14 { pt3dadd( -192.408, -108.521, -30.5331, 0.07 ) }
    dend_14 { pt3dadd( -193.401, -109.821, -30.8416, 0.07 ) }
    dend_14 { pt3dadd( -194.034, -110.588, -31.0291, 1.76 ) }
    dend_14 { pt3dadd( -195.151, -111.843, -31.3492, 0.22 ) }
    dend_14 { pt3dadd( -195.888, -112.616, -31.572, 0.51 ) }
    dend_14 { pt3dadd( -196.3, -113.035, -31.6893, 0.07 ) }
    dend_14 { pt3dadd( -197.003, -113.682, -31.8965, 0.07 ) }
    dend_14 { pt3dadd( -197.231, -113.871, -31.9612, 0.81 ) }
    dend_14 { pt3dadd( -198.047, -114.521, -32.1653, 0.07 ) }
    dend_14 { pt3dadd( -198.854, -115.176, -32.3605, 0.07 ) }
    dend_14 { pt3dadd( -199.784, -115.957, -32.5899, 1.47 ) }
    dend_14 { pt3dadd( -200.799, -116.846, -32.8288, 0.15 ) }
    dend_14 { pt3dadd( -201.384, -117.369, -32.9464, 0.15 ) }
    dend_14 { pt3dadd( -201.82, -117.763, -33.0282, 0.88 ) }
    dend_14 { pt3dadd( -202.504, -118.372, -33.1633, 0.07 ) }
    dend_14 { pt3dadd( -203.295, -119.061, -33.3374, 0.07 ) }
    dend_14 { pt3dadd( -203.741, -119.446, -33.4384, 0.07 ) }
    dend_14 { pt3dadd( -204.11, -119.758, -33.5035, 0.81 ) }
    dend_14 { pt3dadd( -204.886, -120.386, -33.608, 0.07 ) }
    dend_14 { pt3dadd( -205.868, -121.108, -33.7231, 0.07 ) }
    dend_14 { pt3dadd( -206.429, -121.463, -33.7647, 0.95 ) }
    dend_14 { pt3dadd( -207.523, -122.053, -33.8153, 0.07 ) }
    dend_14 { pt3dadd( -208.709, -122.623, -33.7962, 0.88 ) }
    dend_14 { pt3dadd( -209.342, -122.894, -33.7491, 0.22 ) }
    dend_14 { pt3dadd( -210.165, -123.192, -33.6197, 0.07 ) }
    dend_14 { pt3dadd( -211.715, -123.686, -33.2237, 0.07 ) }
    dend_14 { pt3dadd( -212.345, -123.862, -33.0242, 1.18 ) }
    dend_14 { pt3dadd( -213.542, -124.153, -32.5802, 0.15 ) }
    dend_14 { pt3dadd( -214.681, -124.42, -32.1144, 0.15 ) }
    dend_14 { pt3dadd( -215.656, -124.64, -31.7124, 1.54 ) }
    dend_14 { pt3dadd( -217.211, -124.906, -31.0609, 0.07 ) }
    dend_14 { pt3dadd( -217.83, -124.972, -30.8137, 0.07 ) }
    dend_14 { pt3dadd( -218.299, -124.986, -30.6456, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( -219.208, -124.915, -30.3743, 0.07 ) }
    dend_14 { pt3dadd( -220.275, -124.717, -30.0999, 0.81 ) }
    dend_14 { pt3dadd( -221.501, -124.322, -29.8457, 0.07 ) }
    dend_14 { pt3dadd( -221.876, -124.144, -29.7723, 0.07 ) }
    dend_14 { pt3dadd( -222.274, -123.921, -29.684, 0.37 ) }
    dend_14 { pt3dadd( -223.205, -123.341, -29.481, 0.07 ) }
    dend_14 { pt3dadd( -223.649, -123.041, -29.3756, 0.88 ) }
    dend_14 { pt3dadd( -224.443, -122.511, -29.1748, 0.07 ) }
    dend_14 { pt3dadd( -225.199, -122.078, -28.9933, 0.29 ) }
    dend_14 { pt3dadd( -226.089, -121.6, -28.819, 0.07 ) }
    dend_14 { pt3dadd( -226.608, -121.342, -28.7418, 0.95 ) }
    dend_14 { pt3dadd( -227.545, -120.909, -28.6271, 0.07 ) }
    dend_14 { pt3dadd( -227.776, -120.819, -28.6011, 0.07 ) }
    dend_14 { pt3dadd( -228.479, -120.568, -28.546, 0.44 ) }
    dend_14 { pt3dadd( -229.399, -120.263, -28.4871, 0.07 ) }
    dend_14 { pt3dadd( -230.704, -119.854, -28.4553, 0.07 ) }
    dend_14 { pt3dadd( -231.774, -119.542, -28.4447, 1.25 ) }
    dend_14 { pt3dadd( -232.828, -119.261, -28.463, 0.07 ) }
    dend_14 { pt3dadd( -233.587, -119.075, -28.4845, 0.07 ) }
    dend_14 { pt3dadd( -234.485, -118.889, -28.5376, 0.37 ) }
    dend_14 { pt3dadd( -235.454, -118.754, -28.611, 0.07 ) }
    dend_14 { pt3dadd( -236.286, -118.709, -28.7006, 0.07 ) }
    dend_14 { pt3dadd( -236.78, -118.735, -28.7683, 0.37 ) }
    dend_14 { pt3dadd( -237.397, -118.859, -28.8622, 0.07 ) }
    dend_14 { pt3dadd( -238.481, -119.216, -29.0123, 0.07 ) }
    dend_14 { pt3dadd( -239.471, -119.664, -29.131, 0.07 ) }
    dend_14 { pt3dadd( -240.518, -120.269, -29.2213, 1.69 ) }
    dend_14 { pt3dadd( -241.687, -121.088, -29.317, 0.07 ) }
    dend_14 { pt3dadd( -243.429, -122.568, -29.4213, 0.07 ) }
    dend_14 { pt3dadd( -244.516, -123.579, -29.4675, 0.07 ) }
    dend_14 { pt3dadd( -245.396, -124.495, -29.4842, 1.32 ) }
    dend_14 { pt3dadd( -246.229, -125.472, -29.4966, 0.07 ) }
    dend_14 { pt3dadd( -246.806, -126.229, -29.4965, 0.07 ) }
    dend_14 { pt3dadd( -247.605, -127.416, -29.439, 1.62 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -171.217, -91.6479, -21.8348, 0.07 ) }
    dend_13 { pt3dadd( -171.912, -90.5266, -21.3464, 0.07 ) }
    dend_13 { pt3dadd( -172.364, -89.8375, -21.034, 1.03 ) }
    dend_13 { pt3dadd( -172.843, -89.1204, -20.7137, 0.07 ) }
    dend_13 { pt3dadd( -173.112, -88.7254, -20.5291, 0.29 ) }
    dend_13 { pt3dadd( -173.36, -88.3829, -20.3691, 0.07 ) }
    dend_13 { pt3dadd( -173.975, -87.5384, -19.9847, 0.07 ) }
    dend_13 { pt3dadd( -174.324, -87.0732, -19.7851, 0.95 ) }
    dend_13 { pt3dadd( -174.689, -86.5874, -19.5876, 0.95 ) }
    dend_13 { pt3dadd( -175.135, -85.9553, -19.3655, 0.07 ) }
    dend_13 { pt3dadd( -175.812, -84.9378, -19.0342, 0.07 ) }
    dend_13 { pt3dadd( -176.119, -84.4647, -18.8911, 0.59 ) }
    dend_13 { pt3dadd( -176.518, -83.8252, -18.7203, 0.07 ) }
    dend_13 { pt3dadd( -176.877, -83.239, -18.586, 0.37 ) }
    dend_13 { pt3dadd( -177.212, -82.6788, -18.4722, 0.07 ) }
    dend_13 { pt3dadd( -177.358, -82.4168, -18.4337, 0.07 ) }
    dend_13 { pt3dadd( -177.496, -82.1333, -18.3984, 1.03 ) }
    dend_13 { pt3dadd( -177.736, -81.6779, -18.3452, 1.03 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_37, dend_30, dend_17, dend_8, dend_5, dend_0, dend_43, dend_38, dend_34, dend_31, dend_23, dend_18, dend_16, dend_9, dend_7, dend_6, dend_2, dend_1, dend_40, dend_39, dend_36, dend_35, dend_33, dend_32, dend_25, dend_24, dend_22, dend_19, dend_15, dend_10, dend_4, dend_3, dend_42, dend_41, dend_27, dend_26, dend_21, dend_20, dend_12, dend_11, dend_29, dend_28, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_43 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_39 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_36 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_24 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_41 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_27 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_12 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_14 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_30 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_18 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_37 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_34 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_6 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_19 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_20 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_28 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_42 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_23, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 7
    dend_38 nseg = 3
    dend_40 nseg = 11
    dend_39 nseg = 5
    dend_36 nseg = 5
    dend_35 nseg = 9
    dend_33 nseg = 23
    dend_32 nseg = 9
    dend_24 nseg = 3
    dend_22 nseg = 3
    dend_15 nseg = 5
    dend_41 nseg = 3
    dend_27 nseg = 3
    dend_26 nseg = 3
    dend_12 nseg = 9
    dend_11 nseg = 15
    dend_29 nseg = 7
    dend_14 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_LBC_dbef3c6e51_0_0


