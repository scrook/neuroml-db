// Cell: cSTUT189_L1_NGCDA_e1a52c74bf_0_0
/*
{
  "id" : "cSTUT189_L1_NGCDA_e1a52c74bf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.63214, -6.9024, 0.0, 2.40877", "-2.37453, -6.15806, 0.0, 3.98527", "-2.11692, -5.41372, 0.0, 5.71963", "-1.85931, -4.66938, 0.0, 7.14871", "-1.6017, -3.92504, 0.0, 8.48816", "-1.34409, -3.18071, 0.0, 9.45022", "-1.08649, -2.43637, 0.0, 10.3031", "-0.828875, -1.69203, 0.0, 11.0833", "-0.571265, -0.94769, 0.0, 11.8333", "-0.313656, -0.203352, 0.0, 12.495", "-0.0560457, 0.540986, 0.0, 13.0677", "0.201564, 1.28532, 0.0, 13.4325", "0.459174, 2.02966, 0.0, 13.7484", "0.716784, 2.774, 0.0, 13.6296", "0.974394, 3.51834, 0.0, 13.0732", "1.232, 4.26268, 0.0, 12.5169", "1.48961, 5.00702, 0.0, 11.8182", "1.74722, 5.75135, 0.0, 10.2852", "2.00483, 6.49569, 0.0, 8.55166", "2.26244, 7.24003, 0.0, 5.92911", "2.52005, 7.98437, 0.0, 3.37983" ]
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.98039, -6.46982, -0.78, 3.42", "-1.98039, -6.46982, -0.78, 3.42", "-2.94488, -7.08863, -1.30149, 2.96", "-4.77009, -8.01832, -1.78825, 2.28", "-6.50348, -8.73464, -1.89601, 1.59", "-8.50756, -9.3576, -1.65789, 1.37", "-10.1014, -9.72404, -1.34527, 1.59", "-12.3194, -10.132, -0.735042, 2.05", "-13.8914, -10.3161, -0.121811, 2.28", "-15.1486, -10.3702, 0.537931, 2.05", "-16.8224, -10.305, 1.62448, 1.59", "-18.1499, -10.1355, 2.63187, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000058842509
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.4896, 3.36268, 6.55, 2.73", "6.0027, 3.64698, 8.12206, 2.73", "6.56928, 3.96091, 9.85807, 2.73", "7.21108, 4.31653, 11.8245, 2.28", "7.73397, 4.60626, 13.4266, 2.28", "8.09988, 4.809, 14.5477, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000058842509
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.17039, 3.43869, 2.95, 0.68", "-6.98413, 3.47108, 3.18868, 0.68", "-8.59988, 3.53538, 3.6626, 1.14", "-9.97084, 3.58996, 4.06472, 0.91", "-11.3905, 3.64646, 4.4811, 1.14", "-12.1421, 3.67638, 4.70157, 1.82", "-12.9689, 3.70929, 4.94409, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000058842509
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.52005, 7.98437, 0.0, 0.940293", "7.42592, 22.1594, 0.0, 0.940293", "12.3318, 36.3345, 0.0, 0.940293" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-18.1499, -10.1355, 2.63187, 0.91", "-18.2514, -10.4514, 1.56123, 0.91", "-18.4436, -11.0502, -0.467775, 0.91", "-18.6306, -11.6323, -2.44046, 1.14", "-18.7573, -12.0271, -3.77814, 0.68" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-18.1499, -10.1355, 2.63187, 0.91", "-19.291, -10.6904, 2.09872, 0.91", "-19.9334, -11.0028, 1.79862, 0.68", "-20.8907, -11.4684, 1.35132, 0.68", "-21.993, -12.0045, 0.83629, 0.68", "-22.8599, -12.426, 0.431267, 1.59" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.09988, 4.809, 14.5477, 1.82", "7.64014, 4.21325, 15.8306, 1.82", "6.95457, 3.51385, 17.6075, 1.59", "8.02538, 3.2389, 16.1307, 1.82", "8.95542, 2.52748, 15.3284, 1.82", "10.131, 1.47219, 14.3515, 1.37", "13.0428, -1.14145, 11.9322, 0.91", "14.4498, -2.34571, 10.7148, 0.91", "15.8266, -3.43127, 9.47417, 0.91", "17.0767, -4.34256, 8.27209, 0.68", "18.4861, -5.33446, 6.79268, 0.68" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.09988, 4.809, 14.5477, 2.05", "8.99544, 3.90029, 13.9711, 2.05", "9.90324, 2.68371, 13.0405, 1.59", "10.5206, 1.73204, 12.2795, 0.91", "11.3673, 0.450354, 11.3186, 0.91", "12.2347, -0.789643, 10.4467, 1.37", "12.9567, -1.72189, 9.81324, 1.59", "13.6398, -2.69811, 9.07408, 1.14", "14.455, -3.93926, 8.03204, 0.91", "15.0385, -4.85754, 7.27889, 0.91", "15.51, -5.53212, 6.80594, 0.91", "16.1686, -6.30652, 6.41398, 1.37" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.9689, 3.70929, 4.94409, 1.37", "-13.825, 3.69876, 3.87484, 1.37", "-14.6354, 4.01632, 2.76797, 1.14", "-15.4966, 4.60464, 1.53589, 0.91", "-16.2044, 5.25299, 0.508806, 1.14", "-16.9438, 6.07273, -0.549213, 0.68", "-17.8747, 7.213, -1.78707, 0.68", "-18.6806, 8.40681, -2.88798, 0.46", "-19.1133, 9.16949, -3.46728, 0.91", "-19.4819, 9.94788, -3.96278, 1.37", "-20.1588, 11.5925, -4.88415, 1.14", "-20.6726, 12.8184, -5.48845, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-12.9689, 3.70929, 4.94409, 0.68", "-13.8544, 4.54282, 5.26825, 0.68", "-14.8585, 5.38321, 5.67002, 0.68", "-16.0117, 6.31135, 6.19623, 0.91", "-16.8751, 7.02509, 6.66062, 0.91", "-17.4285, 7.52874, 6.98452, 0.91", "-17.936, 7.99069, 7.28161, 0.68", "-18.6833, 8.67781, 7.68444, 0.68", "-19.3789, 9.21103, 8.00508, 0.46", "-19.8733, 9.55458, 8.34573, 0.46", "-20.4482, 10.0678, 9.1776, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "12.3318, 36.3345, 0.0, 0.23", "17.2377, 50.5096, 0.0, 0.23", "22.1435, 64.6846, 0.0, 0.23" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-18.7573, -12.0271, -3.77814, 1.37", "-18.4978, -12.7762, -4.72795, 1.37", "-18.2643, -13.4501, -5.58252, 1.82", "-17.8766, -14.569, -7.00125, 0.91" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-18.7573, -12.0271, -3.77814, 0.91", "-17.4234, -10.6317, -7.4466, 0.91", "-16.8227, -10.0033, -9.09875, 0.68", "-16.1912, -9.34261, -10.8357, 0.68", "-15.9031, -9.04121, -11.628, 1.37", "-15.4473, -8.56446, -12.8814, 2.05", "-15.0547, -8.1537, -13.9612, 1.14" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-22.8599, -12.426, 0.431267, 1.59", "-24.7451, -11.8155, 1.83262, 1.59", "-26.5658, -10.9149, 3.03953, 1.59", "-27.8207, -10.1594, 3.92916, 0.91", "-29.0175, -9.35011, 4.90076, 0.91", "-30.4493, -8.29912, 6.19852, 0.91", "-31.7475, -7.25978, 7.57672, 1.37", "-32.8373, -6.01466, 9.02749, 0.68", "-33.4215, -5.03518, 10.0347, 0.68", "-33.6513, -3.84671, 11.4415, 0.23", "-33.3639, -3.50323, 12.1799, 0.68", "-32.0787, -3.24787, 14.0198, 0.23", "-31.1418, -3.27124, 15.1625, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-22.8599, -12.426, 0.431267, 0.91", "-23.7217, -13.586, -1.12843, 0.91", "-24.7519, -14.9726, -2.99303, 0.91", "-25.3636, -15.7959, -4.10006, 0.91", "-25.7104, -16.2628, -4.7278, 0.91" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "16.1686, -6.30652, 6.41398, 0.68", "16.0194, -4.96848, 6.86751, 0.68", "15.8222, -3.47328, 7.34861, 0.68", "15.6639, -2.06049, 7.83682, 0.68", "15.4822, -0.487808, 8.47375, 0.91", "15.1135, 1.51674, 9.41318, 0.68", "14.8381, 2.55361, 9.9678, 0.68", "14.3774, 3.90763, 10.7754, 0.68", "13.8482, 5.12187, 11.5663, 0.68", "13.256, 6.25485, 12.4331, 0.68", "12.3561, 7.73601, 13.8415, 0.23", "11.7695, 8.55514, 14.8058, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "16.1686, -6.30652, 6.41398, 0.46", "17.4816, -7.17441, 6.87003, 0.46", "19.4531, -8.1307, 7.06325, 0.46", "20.9923, -8.87725, 7.2141, 0.68", "22.3617, -9.54152, 7.34832, 0.68", "24.2964, -10.4799, 7.53794, 0.68", "26.0065, -11.3094, 7.70554, 0.91", "27.6436, -11.8349, 7.5904, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-20.6726, 12.8184, -5.48845, 0.68", "-22.2767, 13.9405, -5.88472, 0.68", "-23.841, 14.9086, -6.41914, 0.68", "-25.3602, 15.7467, -7.04062, 0.68", "-27.0998, 16.5431, -7.87825, 1.14", "-28.3144, 16.8943, -8.58068, 0.68", "-29.9217, 16.994, -9.69915, 0.68", "-30.6823, 16.6665, -10.4467, 0.91", "-31.2855, 16.1381, -11.1713, 2.05", "-32.0635, 15.3136, -12.1469, 0.46", "-33.0197, 14.0846, -13.5306, 0.68", "-33.891, 12.8083, -14.9084, 0.46", "-34.7188, 11.4635, -16.2818, 0.68", "-35.1837, 10.6042, -17.1472, 0.46", "-35.7347, 9.39149, -18.4215, 0.46", "-35.977, 8.46068, -19.4088, 0.46", "-35.9538, 8.01873, -19.8635, 0.46", "-35.6622, 7.15188, -20.7903, 0.91", "-35.0414, 6.16195, -21.9526, 0.23", "-34.5448, 5.55329, -22.7738, 0.68", "-34.0428, 5.05052, -23.5653, 1.14", "-33.2161, 4.37906, -25.0132, 0.68", "-32.706, 3.99121, -26.093, 0.68", "-31.9454, 3.36862, -28.2047, 0.91", "-31.658, 3.01728, -29.3947, 0.68", "-31.5122, 2.62488, -30.5626, 0.68", "-31.4759, 2.13616, -31.8492, 0.68", "-31.5726, 1.3154, -33.7121, 0.68", "-31.7088, 0.689855, -34.9313, 1.59", "-31.8854, -0.109732, -36.2979, 0.68", "-31.9728, -1.06486, -37.8067, 0.68", "-31.9417, -1.89255, -39.1079, 1.59", "-31.8427, -2.47118, -40.0964, 0.91", "-31.5953, -3.21282, -41.5482, 0.68", "-31.3262, -3.69949, -42.6211, 1.14", "-30.91, -4.24791, -43.9561, 0.46", "-30.2672, -4.92202, -45.5623, 0.46", "-29.8732, -5.31875, -46.4055, 0.46", "-29.3888, -5.83912, -47.3313, 1.59", "-28.704, -6.61751, -48.5427, 0.91", "-28.2054, -7.28623, -49.5095, 0.91", "-27.7829, -7.91188, -50.2802, 1.14", "-27.1242, -8.81238, -51.3037, 0.46", "-26.7133, -9.34247, -51.8638, 0.91", "-25.7446, -10.5537, -53.0384, 0.23", "-25.1785, -11.2899, -53.7048, 0.23", "-24.2365, -12.5358, -54.828, 0.23", "-23.7116, -13.241, -55.4995, 0.23", "-23.0334, -14.111, -56.356, 1.37", "-21.5956, -15.8744, -58.0062, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-20.6726, 12.8184, -5.48845, 0.68", "-21.3147, 14.3351, -5.59174, 0.68", "-22.0556, 15.7892, -5.68951, 0.68", "-22.6463, 16.8423, -5.74261, 0.68", "-23.3466, 18.1228, -5.77875, 0.68", "-23.8516, 19.2137, -5.78434, 0.68", "-24.1256, 19.8516, -5.7974, 0.46", "-24.3382, 20.272, -5.8068, 0.68", "-25.085, 21.5979, -5.86326, 0.91", "-25.6972, 22.7247, -5.94809, 0.46", "-26.3325, 24.0802, -6.05905, 0.46", "-26.8235, 25.1426, -6.12041, 0.46", "-27.2942, 26.0043, -6.15616, 0.91", "-27.8447, 26.7426, -6.18248, 0.91", "-28.8274, 27.7298, -6.21076, 0.23", "-29.9569, 28.5703, -6.2232, 0.23", "-31.149, 29.2722, -6.24036, 0.23", "-32.3462, 29.8918, -6.29558, 0.68", "-34.0833, 30.6701, -6.52943, 0.46", "-34.5274, 30.8501, -6.61959, 0.91", "-35.9083, 31.3783, -6.97176, 2.05", "-36.8364, 31.7548, -7.27611, 1.14", "-38.6965, 32.6638, -8.12671, 0.46", "-39.814, 33.4198, -8.8168, 0.46", "-40.5013, 34.1934, -9.46144, 0.46", "-40.8818, 34.9611, -10.0167, 0.46", "-40.993, 35.8295, -10.5694, 0.46", "-40.8731, 36.6026, -11.0416, 0.91", "-40.2618, 37.8431, -11.8022, 0.91", "-39.3353, 38.9584, -12.5232, 0.46", "-38.6787, 39.5064, -12.9206, 0.46", "-37.7443, 40.1598, -13.3908, 0.46", "-36.2976, 41.0076, -13.9322, 0.91", "-35.1528, 41.6469, -14.2612, 0.23", "-34.0009, 42.2892, -14.5445, 0.23", "-32.9468, 42.9352, -14.8267, 1.14", "-31.949, 43.6933, -15.1987, 0.23", "-31.0289, 44.6372, -15.6673, 0.23", "-30.5237, 45.316, -16.0431, 0.23", "-29.957, 46.2827, -16.6436, 0.46", "-29.4694, 47.2085, -17.2839, 0.46", "-29.0874, 47.893, -17.8502, 0.46", "-28.7702, 48.4087, -18.2743, 0.46", "-28.158, 49.2451, -18.9923, 0.46", "-27.5963, 49.8308, -19.5033, 0.46", "-26.9752, 50.3157, -19.9611, 1.14", "-26.1248, 50.8281, -20.4996, 0.46", "-24.2667, 51.678, -21.6206, 0.23", "-23.0721, 52.1112, -22.3555, 0.23", "-22.6632, 52.2292, -22.5997, 0.46", "-21.4026, 52.513, -23.3092, 0.68", "-20.1128, 52.6742, -23.9956, 0.23", "-18.8785, 52.6983, -24.5847, 0.23", "-17.9578, 52.6328, -25.0281, 0.23", "-17.1178, 52.5516, -25.4904, 0.68", "-16.1433, 52.4329, -26.1103, 0.46", "-14.7293, 52.1912, -27.0653, 0.46", "-13.1113, 51.8306, -28.1977, 0.46", "-11.71, 51.4082, -29.235, 1.14", "-10.3844, 50.8728, -30.4027, 0.23", "-9.17771, 50.3061, -31.6537, 0.23", "-8.56133, 50.0119, -32.4032, 0.23", "-8.28883, 49.9088, -32.7668, 0.23", "-7.84275, 49.7556, -33.4007, 0.68", "-6.53135, 49.4516, -35.3127, 0.46", "-5.31942, 49.3398, -36.9711, 0.91", "-4.41195, 49.4121, -38.2959, 0.68", "-3.69897, 49.6127, -39.4432, 0.68", "-3.08451, 49.8968, -40.5793, 0.68", "-2.55746, 50.2275, -41.7399, 0.68", "-2.07131, 50.6665, -43.1892, 0.68", "-1.80181, 51.1349, -44.7665, 0.68", "-1.67248, 51.5279, -46.1213, 0.68", "-1.56634, 51.9228, -47.7725, 0.68", "-1.48555, 52.3179, -49.8662, 0.68", "-1.38211, 52.5107, -51.6739, 0.68", "-1.3037, 52.5489, -52.586, 0.68", "-1.13325, 52.4819, -53.7766, 0.68", "-0.826115, 52.2471, -55.1431, 0.68", "-0.641415, 52.0438, -55.7628, 0.68", "-0.388827, 51.2723, -56.7641, 0.68", "-0.349569, 50.716, -57.2001, 0.91", "-0.335018, 49.9371, -57.7663, 0.91", "-0.317611, 49.0016, -58.4077, 0.46", "-0.295067, 48.5646, -58.7468, 0.46", "-0.223035, 47.5214, -59.8765, 0.68", "-0.213034, 46.7228, -61.1911, 0.23", "-0.249059, 46.1737, -62.5612, 0.23", "-0.253588, 45.8544, -63.6951, 0.91", "-0.188446, 45.4734, -65.6926, 0.68", "-0.106244, 45.2331, -67.7779, 0.68", "-0.0696007, 45.1808, -69.5123, 0.68", "-0.12209, 45.2695, -71.37, 0.68", "-0.349123, 45.5361, -73.3213, 0.68", "-0.581325, 45.8732, -74.501, 0.68", "-0.862632, 46.5548, -75.6169, 0.68", "-1.05488, 47.5515, -76.7079, 0.46", "-1.11483, 48.7342, -77.7743, 0.46", "-1.17311, 49.9306, -78.6916, 0.46", "-1.26364, 51.3463, -79.6883, 0.46", "-1.3272, 52.7613, -80.7511, 0.46", "-1.19543, 54.4059, -82.044, 0.46", "-0.974454, 55.3781, -82.9438, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.4482, 10.0678, 9.1776, 0.68", "-21.0277, 10.8049, 8.92452, 0.68", "-21.563, 11.4858, 8.69076, 0.68", "-21.7883, 11.7724, 8.59234, 0.68", "-22.097, 12.1651, 8.45751, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-20.4482, 10.0678, 9.1776, 0.68", "-20.1708, 10.064, 9.63216, 0.68", "-19.2271, 10.0511, 11.1779, 0.68", "-18.5106, 10.0413, 12.3517, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.8766, -14.569, -7.00125, 0.68", "-17.628, -15.5486, -5.33529, 0.68", "-17.4436, -16.2754, -4.09917, 0.68", "-17.278, -16.9277, -2.98971, 0.68", "-17.0648, -17.7679, -1.56084, 0.68", "-16.8998, -18.4177, -0.455691, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-17.8766, -14.569, -7.00125, 0.46", "-18.7646, -15.0355, -7.27922, 0.46", "-19.5145, -15.5841, -7.57696, 0.46", "-20.135, -16.2005, -7.9376, 0.46", "-20.6597, -16.8444, -8.41023, 0.46", "-21.3169, -17.7634, -9.00665, 1.14", "-21.9156, -18.6005, -9.54991, 1.37", "-22.4939, -19.6798, -10.2197, 0.91", "-22.9938, -20.9094, -10.947, 0.91", "-23.2865, -21.9891, -11.6226, 0.91", "-23.493, -23.439, -12.6026, 1.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.0547, -8.1537, -13.9612, 0.46", "-14.9074, -6.07229, -13.366, 0.46", "-14.9899, -3.97348, -12.5629, 0.46", "-15.0404, -2.93288, -12.1125, 0.46", "-15.0956, -1.96745, -11.6605, 0.46", "-15.1793, -0.852359, -11.0322, 0.46", "-15.2445, -0.127986, -10.5833, 0.46", "-15.5025, 1.34305, -9.44621, 0.46", "-15.7957, 2.64902, -8.30193, 0.23", "-16.0445, 3.37624, -7.61733, 0.46", "-16.6384, 4.70675, -6.18353, 0.46", "-16.8437, 5.0686, -5.7282, 0.91", "-17.2917, 5.76329, -4.77039, 1.59", "-17.6655, 6.20649, -4.10803, 0.68", "-19.6139, 8.3046, -0.848019, 0.23", "-20.6373, 9.43775, 0.841998, 0.23", "-21.2007, 10.0664, 1.73561, 0.23", "-21.8199, 10.7169, 2.63899, 1.37", "-23.5375, 12.3393, 4.87714, 0.23", "-24.9714, 13.7003, 6.70605, 0.23", "-25.883, 14.5967, 7.81965, 0.46", "-26.7753, 15.4998, 8.7937, 0.23", "-27.9904, 16.702, 9.99772, 0.23", "-29.0353, 17.6326, 10.95, 1.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-15.0547, -8.1537, -13.9612, 0.46", "-14.4628, -7.32015, -15.4517, 0.46", "-13.8515, -6.596, -16.9266, 0.46", "-13.4786, -6.23626, -17.7373, 0.46", "-12.4922, -5.38513, -19.8296, 0.68", "-11.7786, -4.9004, -21.2172, 1.59", "-11.1108, -4.53128, -22.4089, 1.59", "-10.4181, -4.22913, -23.6542, 0.46", "-9.53994, -3.95552, -25.0575, 0.46", "-9.09121, -3.83871, -25.6637, 0.46", "-7.99994, -3.6155, -26.8081, 1.37", "-6.81431, -3.34485, -27.9263, 0.68", "-5.85184, -3.0879, -28.8298, 0.68", "-4.85767, -2.71125, -29.8248, 0.68", "-4.30339, -2.44401, -30.4081, 1.59", "-3.03825, -1.7136, -31.8047, 0.23", "-2.18635, -1.07869, -32.8159, 0.68", "-1.12705, -0.23071, -34.1249, 0.68", "-0.34042, 0.438418, -35.1488, 0.68", "0.221978, 0.925285, -35.9557, 0.68", "0.742375, 1.41594, -36.7563, 1.59", "1.87491, 2.74136, -38.5593, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-25.7104, -16.2628, -4.7278, 0.23", "-25.0281, -17.5683, -4.1636, 0.23", "-24.6173, -18.3542, -3.82396, 0.23", "-24.2288, -19.0974, -3.50275, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-25.7104, -16.2628, -4.7278, 0.68", "-27.3446, -16.7019, -6.39926, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "27.6436, -11.8349, 7.5904, 0.46", "28.698, -11.3864, 6.83246, 0.46", "29.2538, -10.9012, 6.25668, 0.46", "29.8759, -10.3361, 5.58371, 0.46", "30.5674, -9.80814, 4.88941, 0.46", "31.402, -9.38895, 4.31375, 0.68", "32.198, -9.06793, 3.97321, 0.46", "33.6496, -8.40648, 3.60937, 0.46", "34.2674, -8.12963, 3.47683, 0.46", "35.3426, -7.76184, 3.2033, 0.46", "37.438, -7.2783, 2.69018, 0.68", "38.7901, -6.97627, 2.34012, 0.46", "40.2362, -6.41116, 1.90482, 0.46", "41.234, -5.98134, 1.59564, 0.68", "42.5832, -5.28848, 1.09785, 1.82", "43.9758, -4.43489, 0.463517, 0.46", "45.0929, -3.65216, -0.200503, 0.23", "47.6714, -1.84092, -1.84056, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "27.6436, -11.8349, 7.5904, 0.46", "29.2778, -12.6209, 7.36216, 0.46", "30.3032, -12.8742, 7.08794, 0.23", "31.3291, -12.9998, 6.75638, 0.23", "32.8729, -13.0496, 6.22248, 0.23", "34.2466, -13.0892, 5.78199, 0.23", "35.2564, -13.1301, 5.46973, 0.23", "37.107, -12.9999, 4.78077, 0.23", "37.5552, -12.8859, 4.55249, 0.46", "36.8416, -13.3562, 5.17803, 0.46", "36.1587, -14.0068, 5.95315, 0.46", "35.6662, -14.5777, 6.64354, 0.68", "34.788, -15.6884, 8.00687, 0.68", "33.9618, -16.7507, 9.31241, 0.68", "33.3471, -17.488, 10.2109, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.5106, 10.0413, 12.3517, 0.68", "-19.2142, 10.4784, 12.7042, 0.68", "-19.6377, 10.7506, 12.944, 0.68", "-20.1285, 11.094, 13.2613, 0.68", "-20.7472, 11.6335, 13.8138, 0.68", "-21.0514, 12.0145, 14.2023, 0.68", "-21.3554, 12.4709, 14.6369, 0.68", "-21.3665, 12.4969, 14.6603, 0.68", "-21.4499, 13.0976, 15.1861, 0.91", "-21.2824, 13.7216, 15.6665, 0.91", "-21.0003, 14.2439, 16.0351, 0.68", "-20.6265, 14.7264, 16.3669, 0.68", "-20.2521, 15.1023, 16.6387, 0.68", "-19.7072, 15.63, 17.0204, 0.91", "-18.7124, 16.5294, 17.6654, 0.68", "-18.1522, 16.9062, 17.9477, 0.68", "-17.5343, 17.2101, 18.2169, 0.68", "-17.0364, 17.3982, 18.4084, 0.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-18.5106, 10.0413, 12.3517, 0.68", "-17.1456, 10.3337, 12.7517, 0.68", "-15.7192, 10.6775, 13.3178, 0.68", "-14.671, 10.9255, 13.8445, 0.68", "-13.973, 11.0938, 14.242, 0.68", "-12.6527, 11.4636, 15.0675, 0.68", "-12.1211, 11.6021, 15.4399, 0.68", "-10.9426, 11.9405, 16.4131, 0.68", "-10.3302, 12.0873, 17.0114, 0.68", "-9.9865, 12.1513, 17.3983, 1.14", "-9.32971, 12.3189, 18.2667, 0.68", "-8.76857, 12.6064, 19.3256, 0.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.493, -23.439, -12.6026, 0.68", "-24.3449, -23.987, -13.6199, 0.68", "-24.9942, -24.4047, -14.3952, 0.68", "-25.3311, -24.6214, -14.7975, 0.68", "-26.2964, -25.2424, -15.9503, 0.46", "-27.2131, -25.8321, -17.0449, 0.46" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-23.493, -23.439, -12.6026, 1.14", "-23.0837, -24.5755, -11.8981, 1.14", "-22.7348, -25.4523, -11.2815, 0.46", "-22.3839, -26.1585, -10.7233, 0.46", "-22.0752, -26.633, -10.2694, 0.91", "-21.7173, -26.9899, -9.76144, 0.91", "-21.0862, -27.4007, -8.88823, 0.23", "-20.4096, -27.4823, -8.09763, 0.23", "-19.8785, -27.3924, -7.42136, 1.14", "-19.0941, -27.2083, -6.32858, 0.68", "-18.3868, -27.0761, -5.19044, 0.68", "-18.0953, -27.0536, -4.553, 0.68", "-17.9066, -27.0287, -3.84898, 1.59", "-17.7114, -27.0356, -2.70896, 1.59", "-17.568, -27.1654, -1.22401, 1.37", "-17.5123, -27.3796, -0.0501138, 1.37", "-17.5503, -27.811, 1.69533, 0.91", "-17.713, -28.3171, 3.47108, 0.91", "-17.8528, -28.7703, 4.58593, 0.91", "-17.9151, -29.4007, 5.66496, 0.91", "-17.8655, -29.9028, 6.1766, 0.46", "-17.7183, -30.5655, 6.6328, 0.46", "-17.4968, -31.1561, 6.95794, 0.46", "-17.0052, -32.2231, 7.53849, 0.68", "-16.6235, -32.9536, 7.99833, 0.23", "-16.2333, -33.5861, 8.4396, 0.23", "-15.6768, -34.3426, 9.07413, 0.23", "-14.8904, -35.3246, 10.0253, 0.23", "-14.1264, -36.2981, 11.0351, 0.46", "-13.5405, -37.1143, 11.9889, 0.23", "-12.9591, -37.9659, 13.0036, 0.46", "-12.2891, -38.8882, 14.1745, 0.68", "-11.8114, -39.5555, 15.0448, 0.68", "-11.6305, -39.8938, 15.5154, 0.91", "-11.2598, -40.6147, 16.7273, 0.91" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-27.3446, -16.7019, -6.39926, 0.68", "-27.2848, -18.754, -6.55668, 0.68", "-27.3266, -19.5474, -6.691, 0.68", "-27.4334, -20.6425, -6.95978, 1.37", "-27.7229, -22.2654, -7.38959, 1.37", "-28.0528, -23.6611, -7.77926, 1.37", "-28.2609, -24.4519, -7.99107, 1.37", "-28.5937, -25.6732, -8.3328, 0.91", "-28.8095, -26.449, -8.50132, 0.91", "-29.1574, -27.719, -8.66557, 1.14", "-29.5162, -29.0382, -8.68245, 0.91", "-29.9124, -30.8467, -8.54288, 1.14", "-30.1463, -32.5537, -8.26449, 0.68", "-30.2079, -33.358, -8.06817, 0.68", "-30.2841, -34.5524, -7.71602, 1.37", "-30.317, -35.9116, -7.24435, 0.68", "-30.3651, -36.6867, -6.93131, 0.46", "-30.4874, -37.8011, -6.47633, 0.46", "-30.5939, -38.6435, -6.174, 1.14", "-30.7331, -39.8831, -5.7591, 0.23", "-30.8384, -40.9049, -5.40411, 0.23", "-30.951, -42.1413, -4.98777, 0.23", "-31.0698, -43.3919, -4.60696, 0.23", "-31.179, -44.8657, -4.1797, 1.37", "-31.3119, -47.0373, -3.54277, 0.23", "-31.3669, -48.5832, -3.07647, 0.23", "-31.4173, -49.8952, -2.67313, 1.59", "-31.4955, -52.275, -1.89813, 0.23", "-31.5179, -52.5227, -1.81593, 0.46", "-31.7348, -53.9688, -1.3888, 0.23", "-31.8262, -54.4679, -1.27083, 0.46", "-32.2617, -56.3674, -0.906047, 0.23", "-32.3508, -56.6825, -0.855524, 0.46", "-32.7838, -57.9539, -0.723037, 0.23", "-33.2131, -59.0661, -0.652891, 0.68", "-33.9717, -60.7271, -0.664174, 0.68", "-34.7365, -62.0111, -0.798219, 0.23", "-35.2565, -62.6926, -0.953992, 0.46", "-36.1626, -63.6743, -1.32243, 0.23", "-36.4043, -63.8941, -1.44621, 0.23", "-37.5294, -64.7817, -2.13079, 0.46", "-39.317, -65.9953, -3.49217, 0.23", "-40.1046, -66.463, -4.19158, 0.68", "-41.356, -67.1444, -5.44326, 0.46", "-41.9342, -67.4377, -6.07995, 1.37", "-42.8775, -67.983, -7.26701, 0.68", "-43.6474, -68.5554, -8.5233, 0.68", "-44.1179, -69.0004, -9.45202, 0.46", "-44.8793, -69.6986, -10.8981, 0.46", "-45.025, -69.8322, -11.179, 0.68", "-45.8816, -70.5875, -12.7832, 0.68", "-46.5416, -71.175, -13.9979, 0.23", "-47.8593, -72.5993, -16.3344, 0.23", "-48.571, -73.4797, -17.6865, 0.23" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-27.3446, -16.7019, -6.39926, 0.46", "-27.7978, -16.5913, -6.36721, 0.46", "-29.1763, -16.2548, -6.26972, 0.91", "-29.4939, -16.1773, -6.24726, 1.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-29.4939, -16.1773, -6.24726, 0.91", "-30.8617, -14.2519, -6.63999, 0.91", "-32.1052, -12.3497, -7.00346, 0.68", "-32.7235, -11.3202, -7.11053, 0.46", "-33.4208, -10.1728, -7.13321, 0.46", "-33.7595, -9.65699, -7.12602, 0.68", "-34.4548, -8.65542, -7.0989, 1.82", "-35.3476, -7.31529, -7.02042, 0.46", "-36.4617, -5.57501, -6.8403, 0.46", "-37.4571, -4.07802, -6.70509, 0.46", "-38.3431, -2.74989, -6.58131, 0.91", "-38.9043, -2.01189, -6.52221, 0.46", "-39.387, -1.44493, -6.49103, 0.46", "-40.5106, -0.338502, -6.43096, 0.46", "-41.4672, 0.525755, -6.36951, 0.46", "-42.8298, 1.68591, -6.26673, 1.37", "-45.0343, 3.40062, -6.15485, 0.46", "-45.8623, 3.9849, -6.13475, 0.46", "-48.1585, 5.49394, -6.04944, 0.46", "-49.9214, 6.63468, -5.98214, 0.46", "-52.042, 8.08951, -5.84167, 0.46", "-53.879, 9.42867, -5.63523, 1.82", "-55.1688, 10.4176, -5.46445, 0.91", "-56.8435, 11.7123, -5.23657, 0.68", "-58.1978, 12.8228, -5.05901, 0.91", "-60.6964, 14.8423, -4.65903, 0.23", "-61.9092, 15.9466, -4.27426, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-29.4939, -16.1773, -6.24726, 0.46", "-30.0401, -17.001, -5.1905, 0.46", "-30.1656, -17.1805, -4.9627, 0.46", "-30.6789, -17.8972, -4.12426, 0.46", "-31.2126, -18.6174, -3.34684, 0.46", "-31.6392, -19.1943, -2.81031, 0.46", "-32.0565, -19.7435, -2.36676, 0.46", "-32.3223, -20.1333, -2.12698, 0.68", "-32.6737, -20.7469, -1.87599, 1.82", "-32.8852, -21.1727, -1.76552, 1.82", "-33.4338, -22.299, -1.5806, 0.23", "-33.8251, -23.1796, -1.46079, 0.23", "-34.3933, -24.6713, -1.17341, 0.46", "-34.7373, -25.6946, -0.900453, 0.46", "-34.8063, -25.9246, -0.824419, 0.46", "-35.0818, -26.8452, -0.447932, 0.23", "-35.3562, -27.7699, 0.00160313, 0.46", "-35.9317, -29.3987, 0.930649, 0.46", "-36.207, -29.9625, 1.29093, 0.46", "-36.5992, -30.6589, 1.75115, 1.82", "-37.2347, -31.6373, 2.36991, 0.46", "-37.8914, -32.5523, 2.88856, 0.46", "-38.6483, -33.5387, 3.36171, 0.46", "-39.4079, -34.5725, 3.73677, 0.23", "-39.7709, -35.0584, 3.90583, 0.23", "-40.4943, -35.9796, 4.23646, 0.68", "-41.1253, -36.7368, 4.51077, 0.23", "-41.7002, -37.4238, 4.761, 0.68", "-42.5547, -38.5238, 5.16558, 0.23", "-43.5515, -39.8509, 5.7044, 0.23", "-44.1837, -40.6224, 6.04739, 0.23", "-44.9979, -41.5145, 6.51759, 0.68" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-44.9979, -41.5145, 6.51759, 0.46", "-46.3944, -42.2965, 6.33885, 0.46", "-47.097, -42.69, 6.24892, 1.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-44.9979, -41.5145, 6.51759, 0.23", "-46.3437, -41.2847, 4.90038, 0.23", "-47.0915, -41.1571, 4.00179, 0.23", "-48.3042, -40.9501, 2.54458, 0.23", "-48.908, -40.847, 1.81907, 0.23", "-50.0008, -40.6605, 0.505989, 0.23", "-50.9163, -40.5042, -0.594177, 1.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_16", "dend_9", "dend_0", "dend_28", "dend_17", "dend_15", "dend_10", "dend_6", "dend_1", "dend_32", "dend_29", "dend_27", "dend_18", "dend_14", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_19", "dend_13", "dend_12", "dend_4", "dend_3", "dend_35", "dend_34", "dend_25", "dend_20", "dend_24", "dend_21", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_16", "dend_9", "dend_0", "dend_28", "dend_17", "dend_15", "dend_10", "dend_6", "dend_1", "dend_32", "dend_29", "dend_27", "dend_18", "dend_14", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_36", "dend_33", "dend_31", "dend_30", "dend_26", "dend_19", "dend_13", "dend_12", "dend_4", "dend_3", "dend_35", "dend_34", "dend_25", "dend_20", "dend_24", "dend_21", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L1_NGCDA_e1a52c74bf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_28, id: dend_28, parent: dend_16
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_17
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_16(0), soma_0(0.450000058842509)
    connect dend_9(0), soma_0(0.450000058842509)
    connect dend_0(0), soma_0(0.450000058842509)
    connect axon_0(0), soma_0(1.0)
    connect dend_28(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.63214, -6.9024, 0.0, 2.40877 ) }
    soma_0 { pt3dadd( -2.37453, -6.15806, 0.0, 3.98527 ) }
    soma_0 { pt3dadd( -2.11692, -5.41372, 0.0, 5.71963 ) }
    soma_0 { pt3dadd( -1.85931, -4.66938, 0.0, 7.14871 ) }
    soma_0 { pt3dadd( -1.6017, -3.92504, 0.0, 8.48816 ) }
    soma_0 { pt3dadd( -1.34409, -3.18071, 0.0, 9.45022 ) }
    soma_0 { pt3dadd( -1.08649, -2.43637, 0.0, 10.3031 ) }
    soma_0 { pt3dadd( -0.828875, -1.69203, 0.0, 11.0833 ) }
    soma_0 { pt3dadd( -0.571265, -0.94769, 0.0, 11.8333 ) }
    soma_0 { pt3dadd( -0.313656, -0.203352, 0.0, 12.495 ) }
    soma_0 { pt3dadd( -0.0560457, 0.540986, 0.0, 13.0677 ) }
    soma_0 { pt3dadd( 0.201564, 1.28532, 0.0, 13.4325 ) }
    soma_0 { pt3dadd( 0.459174, 2.02966, 0.0, 13.7484 ) }
    soma_0 { pt3dadd( 0.716784, 2.774, 0.0, 13.6296 ) }
    soma_0 { pt3dadd( 0.974394, 3.51834, 0.0, 13.0732 ) }
    soma_0 { pt3dadd( 1.232, 4.26268, 0.0, 12.5169 ) }
    soma_0 { pt3dadd( 1.48961, 5.00702, 0.0, 11.8182 ) }
    soma_0 { pt3dadd( 1.74722, 5.75135, 0.0, 10.2852 ) }
    soma_0 { pt3dadd( 2.00483, 6.49569, 0.0, 8.55166 ) }
    soma_0 { pt3dadd( 2.26244, 7.24003, 0.0, 5.92911 ) }
    soma_0 { pt3dadd( 2.52005, 7.98437, 0.0, 3.37983 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 21/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.98039, -6.46982, -0.78, 3.42 ) }
    dend_16 { pt3dadd( -1.98039, -6.46982, -0.78, 3.42 ) }
    dend_16 { pt3dadd( -2.94488, -7.08863, -1.30149, 2.96 ) }
    dend_16 { pt3dadd( -4.77009, -8.01832, -1.78825, 2.28 ) }
    dend_16 { pt3dadd( -6.50348, -8.73464, -1.89601, 1.59 ) }
    dend_16 { pt3dadd( -8.50756, -9.3576, -1.65789, 1.37 ) }
    dend_16 { pt3dadd( -10.1014, -9.72404, -1.34527, 1.59 ) }
    dend_16 { pt3dadd( -12.3194, -10.132, -0.735042, 2.05 ) }
    dend_16 { pt3dadd( -13.8914, -10.3161, -0.121811, 2.28 ) }
    dend_16 { pt3dadd( -15.1486, -10.3702, 0.537931, 2.05 ) }
    dend_16 { pt3dadd( -16.8224, -10.305, 1.62448, 1.59 ) }
    dend_16 { pt3dadd( -18.1499, -10.1355, 2.63187, 1.82 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 33/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.4896, 3.36268, 6.55, 2.73 ) }
    dend_9 { pt3dadd( 6.0027, 3.64698, 8.12206, 2.73 ) }
    dend_9 { pt3dadd( 6.56928, 3.96091, 9.85807, 2.73 ) }
    dend_9 { pt3dadd( 7.21108, 4.31653, 11.8245, 2.28 ) }
    dend_9 { pt3dadd( 7.73397, 4.60626, 13.4266, 2.28 ) }
    dend_9 { pt3dadd( 8.09988, 4.809, 14.5477, 2.28 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 39/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.17039, 3.43869, 2.95, 0.68 ) }
    dend_0 { pt3dadd( -6.98413, 3.47108, 3.18868, 0.68 ) }
    dend_0 { pt3dadd( -8.59988, 3.53538, 3.6626, 1.14 ) }
    dend_0 { pt3dadd( -9.97084, 3.58996, 4.06472, 0.91 ) }
    dend_0 { pt3dadd( -11.3905, 3.64646, 4.4811, 1.14 ) }
    dend_0 { pt3dadd( -12.1421, 3.67638, 4.70157, 1.82 ) }
    dend_0 { pt3dadd( -12.9689, 3.70929, 4.94409, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 46/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.52005, 7.98437, 0.0, 0.940293 ) }
    axon_0 { pt3dadd( 7.42592, 22.1594, 0.0, 0.940293 ) }
    axon_0 { pt3dadd( 12.3318, 36.3345, 0.0, 0.940293 ) }
    // Section: dend_28, id: dend_28, parent: dend_16 (entry count 49/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -18.1499, -10.1355, 2.63187, 0.91 ) }
    dend_28 { pt3dadd( -18.2514, -10.4514, 1.56123, 0.91 ) }
    dend_28 { pt3dadd( -18.4436, -11.0502, -0.467775, 0.91 ) }
    dend_28 { pt3dadd( -18.6306, -11.6323, -2.44046, 1.14 ) }
    dend_28 { pt3dadd( -18.7573, -12.0271, -3.77814, 0.68 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 54/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -18.1499, -10.1355, 2.63187, 0.91 ) }
    dend_17 { pt3dadd( -19.291, -10.6904, 2.09872, 0.91 ) }
    dend_17 { pt3dadd( -19.9334, -11.0028, 1.79862, 0.68 ) }
    dend_17 { pt3dadd( -20.8907, -11.4684, 1.35132, 0.68 ) }
    dend_17 { pt3dadd( -21.993, -12.0045, 0.83629, 0.68 ) }
    dend_17 { pt3dadd( -22.8599, -12.426, 0.431267, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 60/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.09988, 4.809, 14.5477, 1.82 ) }
    dend_15 { pt3dadd( 7.64014, 4.21325, 15.8306, 1.82 ) }
    dend_15 { pt3dadd( 6.95457, 3.51385, 17.6075, 1.59 ) }
    dend_15 { pt3dadd( 8.02538, 3.2389, 16.1307, 1.82 ) }
    dend_15 { pt3dadd( 8.95542, 2.52748, 15.3284, 1.82 ) }
    dend_15 { pt3dadd( 10.131, 1.47219, 14.3515, 1.37 ) }
    dend_15 { pt3dadd( 13.0428, -1.14145, 11.9322, 0.91 ) }
    dend_15 { pt3dadd( 14.4498, -2.34571, 10.7148, 0.91 ) }
    dend_15 { pt3dadd( 15.8266, -3.43127, 9.47417, 0.91 ) }
    dend_15 { pt3dadd( 17.0767, -4.34256, 8.27209, 0.68 ) }
    dend_15 { pt3dadd( 18.4861, -5.33446, 6.79268, 0.68 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.09988, 4.809, 14.5477, 2.05 ) }
    dend_10 { pt3dadd( 8.99544, 3.90029, 13.9711, 2.05 ) }
    dend_10 { pt3dadd( 9.90324, 2.68371, 13.0405, 1.59 ) }
    dend_10 { pt3dadd( 10.5206, 1.73204, 12.2795, 0.91 ) }
    dend_10 { pt3dadd( 11.3673, 0.450354, 11.3186, 0.91 ) }
    dend_10 { pt3dadd( 12.2347, -0.789643, 10.4467, 1.37 ) }
    dend_10 { pt3dadd( 12.9567, -1.72189, 9.81324, 1.59 ) }
    dend_10 { pt3dadd( 13.6398, -2.69811, 9.07408, 1.14 ) }
    dend_10 { pt3dadd( 14.455, -3.93926, 8.03204, 0.91 ) }
    dend_10 { pt3dadd( 15.0385, -4.85754, 7.27889, 0.91 ) }
    dend_10 { pt3dadd( 15.51, -5.53212, 6.80594, 0.91 ) }
    dend_10 { pt3dadd( 16.1686, -6.30652, 6.41398, 1.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.9689, 3.70929, 4.94409, 1.37 ) }
    dend_6 { pt3dadd( -13.825, 3.69876, 3.87484, 1.37 ) }
    dend_6 { pt3dadd( -14.6354, 4.01632, 2.76797, 1.14 ) }
    dend_6 { pt3dadd( -15.4966, 4.60464, 1.53589, 0.91 ) }
    dend_6 { pt3dadd( -16.2044, 5.25299, 0.508806, 1.14 ) }
    dend_6 { pt3dadd( -16.9438, 6.07273, -0.549213, 0.68 ) }
    dend_6 { pt3dadd( -17.8747, 7.213, -1.78707, 0.68 ) }
    dend_6 { pt3dadd( -18.6806, 8.40681, -2.88798, 0.46 ) }
    dend_6 { pt3dadd( -19.1133, 9.16949, -3.46728, 0.91 ) }
    dend_6 { pt3dadd( -19.4819, 9.94788, -3.96278, 1.37 ) }
    dend_6 { pt3dadd( -20.1588, 11.5925, -4.88415, 1.14 ) }
    dend_6 { pt3dadd( -20.6726, 12.8184, -5.48845, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 95/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -12.9689, 3.70929, 4.94409, 0.68 ) }
    dend_1 { pt3dadd( -13.8544, 4.54282, 5.26825, 0.68 ) }
    dend_1 { pt3dadd( -14.8585, 5.38321, 5.67002, 0.68 ) }
    dend_1 { pt3dadd( -16.0117, 6.31135, 6.19623, 0.91 ) }
    dend_1 { pt3dadd( -16.8751, 7.02509, 6.66062, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -17.4285, 7.52874, 6.98452, 0.91 ) }
    dend_1 { pt3dadd( -17.936, 7.99069, 7.28161, 0.68 ) }
    dend_1 { pt3dadd( -18.6833, 8.67781, 7.68444, 0.68 ) }
    dend_1 { pt3dadd( -19.3789, 9.21103, 8.00508, 0.46 ) }
    dend_1 { pt3dadd( -19.8733, 9.55458, 8.34573, 0.46 ) }
    dend_1 { pt3dadd( -20.4482, 10.0678, 9.1776, 0.91 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 6/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 12.3318, 36.3345, 0.0, 0.23 ) }
    axon_1 { pt3dadd( 17.2377, 50.5096, 0.0, 0.23 ) }
    axon_1 { pt3dadd( 22.1435, 64.6846, 0.0, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 9/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -18.7573, -12.0271, -3.77814, 1.37 ) }
    dend_32 { pt3dadd( -18.4978, -12.7762, -4.72795, 1.37 ) }
    dend_32 { pt3dadd( -18.2643, -13.4501, -5.58252, 1.82 ) }
    dend_32 { pt3dadd( -17.8766, -14.569, -7.00125, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 13/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -18.7573, -12.0271, -3.77814, 0.91 ) }
    dend_29 { pt3dadd( -17.4234, -10.6317, -7.4466, 0.91 ) }
    dend_29 { pt3dadd( -16.8227, -10.0033, -9.09875, 0.68 ) }
    dend_29 { pt3dadd( -16.1912, -9.34261, -10.8357, 0.68 ) }
    dend_29 { pt3dadd( -15.9031, -9.04121, -11.628, 1.37 ) }
    dend_29 { pt3dadd( -15.4473, -8.56446, -12.8814, 2.05 ) }
    dend_29 { pt3dadd( -15.0547, -8.1537, -13.9612, 1.14 ) }
    // Section: dend_27, id: dend_27, parent: dend_17 (entry count 20/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -22.8599, -12.426, 0.431267, 1.59 ) }
    dend_27 { pt3dadd( -24.7451, -11.8155, 1.83262, 1.59 ) }
    dend_27 { pt3dadd( -26.5658, -10.9149, 3.03953, 1.59 ) }
    dend_27 { pt3dadd( -27.8207, -10.1594, 3.92916, 0.91 ) }
    dend_27 { pt3dadd( -29.0175, -9.35011, 4.90076, 0.91 ) }
    dend_27 { pt3dadd( -30.4493, -8.29912, 6.19852, 0.91 ) }
    dend_27 { pt3dadd( -31.7475, -7.25978, 7.57672, 1.37 ) }
    dend_27 { pt3dadd( -32.8373, -6.01466, 9.02749, 0.68 ) }
    dend_27 { pt3dadd( -33.4215, -5.03518, 10.0347, 0.68 ) }
    dend_27 { pt3dadd( -33.6513, -3.84671, 11.4415, 0.23 ) }
    dend_27 { pt3dadd( -33.3639, -3.50323, 12.1799, 0.68 ) }
    dend_27 { pt3dadd( -32.0787, -3.24787, 14.0198, 0.23 ) }
    dend_27 { pt3dadd( -31.1418, -3.27124, 15.1625, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 33/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -22.8599, -12.426, 0.431267, 0.91 ) }
    dend_18 { pt3dadd( -23.7217, -13.586, -1.12843, 0.91 ) }
    dend_18 { pt3dadd( -24.7519, -14.9726, -2.99303, 0.91 ) }
    dend_18 { pt3dadd( -25.3636, -15.7959, -4.10006, 0.91 ) }
    dend_18 { pt3dadd( -25.7104, -16.2628, -4.7278, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 16.1686, -6.30652, 6.41398, 0.68 ) }
    dend_14 { pt3dadd( 16.0194, -4.96848, 6.86751, 0.68 ) }
    dend_14 { pt3dadd( 15.8222, -3.47328, 7.34861, 0.68 ) }
    dend_14 { pt3dadd( 15.6639, -2.06049, 7.83682, 0.68 ) }
    dend_14 { pt3dadd( 15.4822, -0.487808, 8.47375, 0.91 ) }
    dend_14 { pt3dadd( 15.1135, 1.51674, 9.41318, 0.68 ) }
    dend_14 { pt3dadd( 14.8381, 2.55361, 9.9678, 0.68 ) }
    dend_14 { pt3dadd( 14.3774, 3.90763, 10.7754, 0.68 ) }
    dend_14 { pt3dadd( 13.8482, 5.12187, 11.5663, 0.68 ) }
    dend_14 { pt3dadd( 13.256, 6.25485, 12.4331, 0.68 ) }
    dend_14 { pt3dadd( 12.3561, 7.73601, 13.8415, 0.23 ) }
    dend_14 { pt3dadd( 11.7695, 8.55514, 14.8058, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 16.1686, -6.30652, 6.41398, 0.46 ) }
    dend_11 { pt3dadd( 17.4816, -7.17441, 6.87003, 0.46 ) }
    dend_11 { pt3dadd( 19.4531, -8.1307, 7.06325, 0.46 ) }
    dend_11 { pt3dadd( 20.9923, -8.87725, 7.2141, 0.68 ) }
    dend_11 { pt3dadd( 22.3617, -9.54152, 7.34832, 0.68 ) }
    dend_11 { pt3dadd( 24.2964, -10.4799, 7.53794, 0.68 ) }
    dend_11 { pt3dadd( 26.0065, -11.3094, 7.70554, 0.91 ) }
    dend_11 { pt3dadd( 27.6436, -11.8349, 7.5904, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -20.6726, 12.8184, -5.48845, 0.68 ) }
    dend_8 { pt3dadd( -22.2767, 13.9405, -5.88472, 0.68 ) }
    dend_8 { pt3dadd( -23.841, 14.9086, -6.41914, 0.68 ) }
    dend_8 { pt3dadd( -25.3602, 15.7467, -7.04062, 0.68 ) }
    dend_8 { pt3dadd( -27.0998, 16.5431, -7.87825, 1.14 ) }
    dend_8 { pt3dadd( -28.3144, 16.8943, -8.58068, 0.68 ) }
    dend_8 { pt3dadd( -29.9217, 16.994, -9.69915, 0.68 ) }
    dend_8 { pt3dadd( -30.6823, 16.6665, -10.4467, 0.91 ) }
    dend_8 { pt3dadd( -31.2855, 16.1381, -11.1713, 2.05 ) }
    dend_8 { pt3dadd( -32.0635, 15.3136, -12.1469, 0.46 ) }
    dend_8 { pt3dadd( -33.0197, 14.0846, -13.5306, 0.68 ) }
    dend_8 { pt3dadd( -33.891, 12.8083, -14.9084, 0.46 ) }
    dend_8 { pt3dadd( -34.7188, 11.4635, -16.2818, 0.68 ) }
    dend_8 { pt3dadd( -35.1837, 10.6042, -17.1472, 0.46 ) }
    dend_8 { pt3dadd( -35.7347, 9.39149, -18.4215, 0.46 ) }
    dend_8 { pt3dadd( -35.977, 8.46068, -19.4088, 0.46 ) }
    dend_8 { pt3dadd( -35.9538, 8.01873, -19.8635, 0.46 ) }
    dend_8 { pt3dadd( -35.6622, 7.15188, -20.7903, 0.91 ) }
    dend_8 { pt3dadd( -35.0414, 6.16195, -21.9526, 0.23 ) }
    dend_8 { pt3dadd( -34.5448, 5.55329, -22.7738, 0.68 ) }
    dend_8 { pt3dadd( -34.0428, 5.05052, -23.5653, 1.14 ) }
    dend_8 { pt3dadd( -33.2161, 4.37906, -25.0132, 0.68 ) }
    dend_8 { pt3dadd( -32.706, 3.99121, -26.093, 0.68 ) }
    dend_8 { pt3dadd( -31.9454, 3.36862, -28.2047, 0.91 ) }
    dend_8 { pt3dadd( -31.658, 3.01728, -29.3947, 0.68 ) }
    dend_8 { pt3dadd( -31.5122, 2.62488, -30.5626, 0.68 ) }
    dend_8 { pt3dadd( -31.4759, 2.13616, -31.8492, 0.68 ) }
    dend_8 { pt3dadd( -31.5726, 1.3154, -33.7121, 0.68 ) }
    dend_8 { pt3dadd( -31.7088, 0.689855, -34.9313, 1.59 ) }
    dend_8 { pt3dadd( -31.8854, -0.109732, -36.2979, 0.68 ) }
    dend_8 { pt3dadd( -31.9728, -1.06486, -37.8067, 0.68 ) }
    dend_8 { pt3dadd( -31.9417, -1.89255, -39.1079, 1.59 ) }
    dend_8 { pt3dadd( -31.8427, -2.47118, -40.0964, 0.91 ) }
    dend_8 { pt3dadd( -31.5953, -3.21282, -41.5482, 0.68 ) }
    dend_8 { pt3dadd( -31.3262, -3.69949, -42.6211, 1.14 ) }
    dend_8 { pt3dadd( -30.91, -4.24791, -43.9561, 0.46 ) }
    dend_8 { pt3dadd( -30.2672, -4.92202, -45.5623, 0.46 ) }
    dend_8 { pt3dadd( -29.8732, -5.31875, -46.4055, 0.46 ) }
    dend_8 { pt3dadd( -29.3888, -5.83912, -47.3313, 1.59 ) }
    dend_8 { pt3dadd( -28.704, -6.61751, -48.5427, 0.91 ) }
    dend_8 { pt3dadd( -28.2054, -7.28623, -49.5095, 0.91 ) }
    dend_8 { pt3dadd( -27.7829, -7.91188, -50.2802, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_8 { pt3dadd( -27.1242, -8.81238, -51.3037, 0.46 ) }
    dend_8 { pt3dadd( -26.7133, -9.34247, -51.8638, 0.91 ) }
    dend_8 { pt3dadd( -25.7446, -10.5537, -53.0384, 0.23 ) }
    dend_8 { pt3dadd( -25.1785, -11.2899, -53.7048, 0.23 ) }
    dend_8 { pt3dadd( -24.2365, -12.5358, -54.828, 0.23 ) }
    dend_8 { pt3dadd( -23.7116, -13.241, -55.4995, 0.23 ) }
    dend_8 { pt3dadd( -23.0334, -14.111, -56.356, 1.37 ) }
    dend_8 { pt3dadd( -21.5956, -15.8744, -58.0062, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 8/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -20.6726, 12.8184, -5.48845, 0.68 ) }
    dend_7 { pt3dadd( -21.3147, 14.3351, -5.59174, 0.68 ) }
    dend_7 { pt3dadd( -22.0556, 15.7892, -5.68951, 0.68 ) }
    dend_7 { pt3dadd( -22.6463, 16.8423, -5.74261, 0.68 ) }
    dend_7 { pt3dadd( -23.3466, 18.1228, -5.77875, 0.68 ) }
    dend_7 { pt3dadd( -23.8516, 19.2137, -5.78434, 0.68 ) }
    dend_7 { pt3dadd( -24.1256, 19.8516, -5.7974, 0.46 ) }
    dend_7 { pt3dadd( -24.3382, 20.272, -5.8068, 0.68 ) }
    dend_7 { pt3dadd( -25.085, 21.5979, -5.86326, 0.91 ) }
    dend_7 { pt3dadd( -25.6972, 22.7247, -5.94809, 0.46 ) }
    dend_7 { pt3dadd( -26.3325, 24.0802, -6.05905, 0.46 ) }
    dend_7 { pt3dadd( -26.8235, 25.1426, -6.12041, 0.46 ) }
    dend_7 { pt3dadd( -27.2942, 26.0043, -6.15616, 0.91 ) }
    dend_7 { pt3dadd( -27.8447, 26.7426, -6.18248, 0.91 ) }
    dend_7 { pt3dadd( -28.8274, 27.7298, -6.21076, 0.23 ) }
    dend_7 { pt3dadd( -29.9569, 28.5703, -6.2232, 0.23 ) }
    dend_7 { pt3dadd( -31.149, 29.2722, -6.24036, 0.23 ) }
    dend_7 { pt3dadd( -32.3462, 29.8918, -6.29558, 0.68 ) }
    dend_7 { pt3dadd( -34.0833, 30.6701, -6.52943, 0.46 ) }
    dend_7 { pt3dadd( -34.5274, 30.8501, -6.61959, 0.91 ) }
    dend_7 { pt3dadd( -35.9083, 31.3783, -6.97176, 2.05 ) }
    dend_7 { pt3dadd( -36.8364, 31.7548, -7.27611, 1.14 ) }
    dend_7 { pt3dadd( -38.6965, 32.6638, -8.12671, 0.46 ) }
    dend_7 { pt3dadd( -39.814, 33.4198, -8.8168, 0.46 ) }
    dend_7 { pt3dadd( -40.5013, 34.1934, -9.46144, 0.46 ) }
    dend_7 { pt3dadd( -40.8818, 34.9611, -10.0167, 0.46 ) }
    dend_7 { pt3dadd( -40.993, 35.8295, -10.5694, 0.46 ) }
    dend_7 { pt3dadd( -40.8731, 36.6026, -11.0416, 0.91 ) }
    dend_7 { pt3dadd( -40.2618, 37.8431, -11.8022, 0.91 ) }
    dend_7 { pt3dadd( -39.3353, 38.9584, -12.5232, 0.46 ) }
    dend_7 { pt3dadd( -38.6787, 39.5064, -12.9206, 0.46 ) }
    dend_7 { pt3dadd( -37.7443, 40.1598, -13.3908, 0.46 ) }
    dend_7 { pt3dadd( -36.2976, 41.0076, -13.9322, 0.91 ) }
    dend_7 { pt3dadd( -35.1528, 41.6469, -14.2612, 0.23 ) }
    dend_7 { pt3dadd( -34.0009, 42.2892, -14.5445, 0.23 ) }
    dend_7 { pt3dadd( -32.9468, 42.9352, -14.8267, 1.14 ) }
    dend_7 { pt3dadd( -31.949, 43.6933, -15.1987, 0.23 ) }
    dend_7 { pt3dadd( -31.0289, 44.6372, -15.6673, 0.23 ) }
    dend_7 { pt3dadd( -30.5237, 45.316, -16.0431, 0.23 ) }
    dend_7 { pt3dadd( -29.957, 46.2827, -16.6436, 0.46 ) }
    dend_7 { pt3dadd( -29.4694, 47.2085, -17.2839, 0.46 ) }
    dend_7 { pt3dadd( -29.0874, 47.893, -17.8502, 0.46 ) }
    dend_7 { pt3dadd( -28.7702, 48.4087, -18.2743, 0.46 ) }
    dend_7 { pt3dadd( -28.158, 49.2451, -18.9923, 0.46 ) }
    dend_7 { pt3dadd( -27.5963, 49.8308, -19.5033, 0.46 ) }
    dend_7 { pt3dadd( -26.9752, 50.3157, -19.9611, 1.14 ) }
    dend_7 { pt3dadd( -26.1248, 50.8281, -20.4996, 0.46 ) }
    dend_7 { pt3dadd( -24.2667, 51.678, -21.6206, 0.23 ) }
    dend_7 { pt3dadd( -23.0721, 52.1112, -22.3555, 0.23 ) }
    dend_7 { pt3dadd( -22.6632, 52.2292, -22.5997, 0.46 ) }
    dend_7 { pt3dadd( -21.4026, 52.513, -23.3092, 0.68 ) }
    dend_7 { pt3dadd( -20.1128, 52.6742, -23.9956, 0.23 ) }
    dend_7 { pt3dadd( -18.8785, 52.6983, -24.5847, 0.23 ) }
    dend_7 { pt3dadd( -17.9578, 52.6328, -25.0281, 0.23 ) }
    dend_7 { pt3dadd( -17.1178, 52.5516, -25.4904, 0.68 ) }
    dend_7 { pt3dadd( -16.1433, 52.4329, -26.1103, 0.46 ) }
    dend_7 { pt3dadd( -14.7293, 52.1912, -27.0653, 0.46 ) }
    dend_7 { pt3dadd( -13.1113, 51.8306, -28.1977, 0.46 ) }
    dend_7 { pt3dadd( -11.71, 51.4082, -29.235, 1.14 ) }
    dend_7 { pt3dadd( -10.3844, 50.8728, -30.4027, 0.23 ) }
    dend_7 { pt3dadd( -9.17771, 50.3061, -31.6537, 0.23 ) }
    dend_7 { pt3dadd( -8.56133, 50.0119, -32.4032, 0.23 ) }
    dend_7 { pt3dadd( -8.28883, 49.9088, -32.7668, 0.23 ) }
    dend_7 { pt3dadd( -7.84275, 49.7556, -33.4007, 0.68 ) }
    dend_7 { pt3dadd( -6.53135, 49.4516, -35.3127, 0.46 ) }
    dend_7 { pt3dadd( -5.31942, 49.3398, -36.9711, 0.91 ) }
    dend_7 { pt3dadd( -4.41195, 49.4121, -38.2959, 0.68 ) }
    dend_7 { pt3dadd( -3.69897, 49.6127, -39.4432, 0.68 ) }
    dend_7 { pt3dadd( -3.08451, 49.8968, -40.5793, 0.68 ) }
    dend_7 { pt3dadd( -2.55746, 50.2275, -41.7399, 0.68 ) }
    dend_7 { pt3dadd( -2.07131, 50.6665, -43.1892, 0.68 ) }
    dend_7 { pt3dadd( -1.80181, 51.1349, -44.7665, 0.68 ) }
    dend_7 { pt3dadd( -1.67248, 51.5279, -46.1213, 0.68 ) }
    dend_7 { pt3dadd( -1.56634, 51.9228, -47.7725, 0.68 ) }
    dend_7 { pt3dadd( -1.48555, 52.3179, -49.8662, 0.68 ) }
    dend_7 { pt3dadd( -1.38211, 52.5107, -51.6739, 0.68 ) }
    dend_7 { pt3dadd( -1.3037, 52.5489, -52.586, 0.68 ) }
    dend_7 { pt3dadd( -1.13325, 52.4819, -53.7766, 0.68 ) }
    dend_7 { pt3dadd( -0.826115, 52.2471, -55.1431, 0.68 ) }
    dend_7 { pt3dadd( -0.641415, 52.0438, -55.7628, 0.68 ) }
    dend_7 { pt3dadd( -0.388827, 51.2723, -56.7641, 0.68 ) }
    dend_7 { pt3dadd( -0.349569, 50.716, -57.2001, 0.91 ) }
    dend_7 { pt3dadd( -0.335018, 49.9371, -57.7663, 0.91 ) }
    dend_7 { pt3dadd( -0.317611, 49.0016, -58.4077, 0.46 ) }
    dend_7 { pt3dadd( -0.295067, 48.5646, -58.7468, 0.46 ) }
    dend_7 { pt3dadd( -0.223035, 47.5214, -59.8765, 0.68 ) }
    dend_7 { pt3dadd( -0.213034, 46.7228, -61.1911, 0.23 ) }
    dend_7 { pt3dadd( -0.249059, 46.1737, -62.5612, 0.23 ) }
    dend_7 { pt3dadd( -0.253588, 45.8544, -63.6951, 0.91 ) }
    dend_7 { pt3dadd( -0.188446, 45.4734, -65.6926, 0.68 ) }
    dend_7 { pt3dadd( -0.106244, 45.2331, -67.7779, 0.68 ) }
    dend_7 { pt3dadd( -0.0696007, 45.1808, -69.5123, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( -0.12209, 45.2695, -71.37, 0.68 ) }
    dend_7 { pt3dadd( -0.349123, 45.5361, -73.3213, 0.68 ) }
    dend_7 { pt3dadd( -0.581325, 45.8732, -74.501, 0.68 ) }
    dend_7 { pt3dadd( -0.862632, 46.5548, -75.6169, 0.68 ) }
    dend_7 { pt3dadd( -1.05488, 47.5515, -76.7079, 0.46 ) }
    dend_7 { pt3dadd( -1.11483, 48.7342, -77.7743, 0.46 ) }
    dend_7 { pt3dadd( -1.17311, 49.9306, -78.6916, 0.46 ) }
    dend_7 { pt3dadd( -1.26364, 51.3463, -79.6883, 0.46 ) }
    dend_7 { pt3dadd( -1.3272, 52.7613, -80.7511, 0.46 ) }
    dend_7 { pt3dadd( -1.19543, 54.4059, -82.044, 0.46 ) }
    dend_7 { pt3dadd( -0.974454, 55.3781, -82.9438, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.4482, 10.0678, 9.1776, 0.68 ) }
    dend_5 { pt3dadd( -21.0277, 10.8049, 8.92452, 0.68 ) }
    dend_5 { pt3dadd( -21.563, 11.4858, 8.69076, 0.68 ) }
    dend_5 { pt3dadd( -21.7883, 11.7724, 8.59234, 0.68 ) }
    dend_5 { pt3dadd( -22.097, 12.1651, 8.45751, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 16/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -20.4482, 10.0678, 9.1776, 0.68 ) }
    dend_2 { pt3dadd( -20.1708, 10.064, 9.63216, 0.68 ) }
    dend_2 { pt3dadd( -19.2271, 10.0511, 11.1779, 0.68 ) }
    dend_2 { pt3dadd( -18.5106, 10.0413, 12.3517, 0.91 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.8766, -14.569, -7.00125, 0.68 ) }
    dend_36 { pt3dadd( -17.628, -15.5486, -5.33529, 0.68 ) }
    dend_36 { pt3dadd( -17.4436, -16.2754, -4.09917, 0.68 ) }
    dend_36 { pt3dadd( -17.278, -16.9277, -2.98971, 0.68 ) }
    dend_36 { pt3dadd( -17.0648, -17.7679, -1.56084, 0.68 ) }
    dend_36 { pt3dadd( -16.8998, -18.4177, -0.455691, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -17.8766, -14.569, -7.00125, 0.46 ) }
    dend_33 { pt3dadd( -18.7646, -15.0355, -7.27922, 0.46 ) }
    dend_33 { pt3dadd( -19.5145, -15.5841, -7.57696, 0.46 ) }
    dend_33 { pt3dadd( -20.135, -16.2005, -7.9376, 0.46 ) }
    dend_33 { pt3dadd( -20.6597, -16.8444, -8.41023, 0.46 ) }
    dend_33 { pt3dadd( -21.3169, -17.7634, -9.00665, 1.14 ) }
    dend_33 { pt3dadd( -21.9156, -18.6005, -9.54991, 1.37 ) }
    dend_33 { pt3dadd( -22.4939, -19.6798, -10.2197, 0.91 ) }
    dend_33 { pt3dadd( -22.9938, -20.9094, -10.947, 0.91 ) }
    dend_33 { pt3dadd( -23.2865, -21.9891, -11.6226, 0.91 ) }
    dend_33 { pt3dadd( -23.493, -23.439, -12.6026, 1.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 37/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.0547, -8.1537, -13.9612, 0.46 ) }
    dend_31 { pt3dadd( -14.9074, -6.07229, -13.366, 0.46 ) }
    dend_31 { pt3dadd( -14.9899, -3.97348, -12.5629, 0.46 ) }
    dend_31 { pt3dadd( -15.0404, -2.93288, -12.1125, 0.46 ) }
    dend_31 { pt3dadd( -15.0956, -1.96745, -11.6605, 0.46 ) }
    dend_31 { pt3dadd( -15.1793, -0.852359, -11.0322, 0.46 ) }
    dend_31 { pt3dadd( -15.2445, -0.127986, -10.5833, 0.46 ) }
    dend_31 { pt3dadd( -15.5025, 1.34305, -9.44621, 0.46 ) }
    dend_31 { pt3dadd( -15.7957, 2.64902, -8.30193, 0.23 ) }
    dend_31 { pt3dadd( -16.0445, 3.37624, -7.61733, 0.46 ) }
    dend_31 { pt3dadd( -16.6384, 4.70675, -6.18353, 0.46 ) }
    dend_31 { pt3dadd( -16.8437, 5.0686, -5.7282, 0.91 ) }
    dend_31 { pt3dadd( -17.2917, 5.76329, -4.77039, 1.59 ) }
    dend_31 { pt3dadd( -17.6655, 6.20649, -4.10803, 0.68 ) }
    dend_31 { pt3dadd( -19.6139, 8.3046, -0.848019, 0.23 ) }
    dend_31 { pt3dadd( -20.6373, 9.43775, 0.841998, 0.23 ) }
    dend_31 { pt3dadd( -21.2007, 10.0664, 1.73561, 0.23 ) }
    dend_31 { pt3dadd( -21.8199, 10.7169, 2.63899, 1.37 ) }
    dend_31 { pt3dadd( -23.5375, 12.3393, 4.87714, 0.23 ) }
    dend_31 { pt3dadd( -24.9714, 13.7003, 6.70605, 0.23 ) }
    dend_31 { pt3dadd( -25.883, 14.5967, 7.81965, 0.46 ) }
    dend_31 { pt3dadd( -26.7753, 15.4998, 8.7937, 0.23 ) }
    dend_31 { pt3dadd( -27.9904, 16.702, 9.99772, 0.23 ) }
    dend_31 { pt3dadd( -29.0353, 17.6326, 10.95, 1.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -15.0547, -8.1537, -13.9612, 0.46 ) }
    dend_30 { pt3dadd( -14.4628, -7.32015, -15.4517, 0.46 ) }
    dend_30 { pt3dadd( -13.8515, -6.596, -16.9266, 0.46 ) }
    dend_30 { pt3dadd( -13.4786, -6.23626, -17.7373, 0.46 ) }
    dend_30 { pt3dadd( -12.4922, -5.38513, -19.8296, 0.68 ) }
    dend_30 { pt3dadd( -11.7786, -4.9004, -21.2172, 1.59 ) }
    dend_30 { pt3dadd( -11.1108, -4.53128, -22.4089, 1.59 ) }
    dend_30 { pt3dadd( -10.4181, -4.22913, -23.6542, 0.46 ) }
    dend_30 { pt3dadd( -9.53994, -3.95552, -25.0575, 0.46 ) }
    dend_30 { pt3dadd( -9.09121, -3.83871, -25.6637, 0.46 ) }
    dend_30 { pt3dadd( -7.99994, -3.6155, -26.8081, 1.37 ) }
    dend_30 { pt3dadd( -6.81431, -3.34485, -27.9263, 0.68 ) }
    dend_30 { pt3dadd( -5.85184, -3.0879, -28.8298, 0.68 ) }
    dend_30 { pt3dadd( -4.85767, -2.71125, -29.8248, 0.68 ) }
    dend_30 { pt3dadd( -4.30339, -2.44401, -30.4081, 1.59 ) }
    dend_30 { pt3dadd( -3.03825, -1.7136, -31.8047, 0.23 ) }
    dend_30 { pt3dadd( -2.18635, -1.07869, -32.8159, 0.68 ) }
    dend_30 { pt3dadd( -1.12705, -0.23071, -34.1249, 0.68 ) }
    dend_30 { pt3dadd( -0.34042, 0.438418, -35.1488, 0.68 ) }
    dend_30 { pt3dadd( 0.221978, 0.925285, -35.9557, 0.68 ) }
    dend_30 { pt3dadd( 0.742375, 1.41594, -36.7563, 1.59 ) }
    dend_30 { pt3dadd( 1.87491, 2.74136, -38.5593, 0.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 83/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -25.7104, -16.2628, -4.7278, 0.23 ) }
    dend_26 { pt3dadd( -25.0281, -17.5683, -4.1636, 0.23 ) }
    dend_26 { pt3dadd( -24.6173, -18.3542, -3.82396, 0.23 ) }
    dend_26 { pt3dadd( -24.2288, -19.0974, -3.50275, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -25.7104, -16.2628, -4.7278, 0.68 ) }
    dend_19 { pt3dadd( -27.3446, -16.7019, -6.39926, 0.68 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 27.6436, -11.8349, 7.5904, 0.46 ) }
    dend_13 { pt3dadd( 28.698, -11.3864, 6.83246, 0.46 ) }
    dend_13 { pt3dadd( 29.2538, -10.9012, 6.25668, 0.46 ) }
    dend_13 { pt3dadd( 29.8759, -10.3361, 5.58371, 0.46 ) }
    dend_13 { pt3dadd( 30.5674, -9.80814, 4.88941, 0.46 ) }
    dend_13 { pt3dadd( 31.402, -9.38895, 4.31375, 0.68 ) }
    dend_13 { pt3dadd( 32.198, -9.06793, 3.97321, 0.46 ) }
    dend_13 { pt3dadd( 33.6496, -8.40648, 3.60937, 0.46 ) }
    dend_13 { pt3dadd( 34.2674, -8.12963, 3.47683, 0.46 ) }
    dend_13 { pt3dadd( 35.3426, -7.76184, 3.2033, 0.46 ) }
    dend_13 { pt3dadd( 37.438, -7.2783, 2.69018, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_13 { pt3dadd( 38.7901, -6.97627, 2.34012, 0.46 ) }
    dend_13 { pt3dadd( 40.2362, -6.41116, 1.90482, 0.46 ) }
    dend_13 { pt3dadd( 41.234, -5.98134, 1.59564, 0.68 ) }
    dend_13 { pt3dadd( 42.5832, -5.28848, 1.09785, 1.82 ) }
    dend_13 { pt3dadd( 43.9758, -4.43489, 0.463517, 0.46 ) }
    dend_13 { pt3dadd( 45.0929, -3.65216, -0.200503, 0.23 ) }
    dend_13 { pt3dadd( 47.6714, -1.84092, -1.84056, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 27.6436, -11.8349, 7.5904, 0.46 ) }
    dend_12 { pt3dadd( 29.2778, -12.6209, 7.36216, 0.46 ) }
    dend_12 { pt3dadd( 30.3032, -12.8742, 7.08794, 0.23 ) }
    dend_12 { pt3dadd( 31.3291, -12.9998, 6.75638, 0.23 ) }
    dend_12 { pt3dadd( 32.8729, -13.0496, 6.22248, 0.23 ) }
    dend_12 { pt3dadd( 34.2466, -13.0892, 5.78199, 0.23 ) }
    dend_12 { pt3dadd( 35.2564, -13.1301, 5.46973, 0.23 ) }
    dend_12 { pt3dadd( 37.107, -12.9999, 4.78077, 0.23 ) }
    dend_12 { pt3dadd( 37.5552, -12.8859, 4.55249, 0.46 ) }
    dend_12 { pt3dadd( 36.8416, -13.3562, 5.17803, 0.46 ) }
    dend_12 { pt3dadd( 36.1587, -14.0068, 5.95315, 0.46 ) }
    dend_12 { pt3dadd( 35.6662, -14.5777, 6.64354, 0.68 ) }
    dend_12 { pt3dadd( 34.788, -15.6884, 8.00687, 0.68 ) }
    dend_12 { pt3dadd( 33.9618, -16.7507, 9.31241, 0.68 ) }
    dend_12 { pt3dadd( 33.3471, -17.488, 10.2109, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 22/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.5106, 10.0413, 12.3517, 0.68 ) }
    dend_4 { pt3dadd( -19.2142, 10.4784, 12.7042, 0.68 ) }
    dend_4 { pt3dadd( -19.6377, 10.7506, 12.944, 0.68 ) }
    dend_4 { pt3dadd( -20.1285, 11.094, 13.2613, 0.68 ) }
    dend_4 { pt3dadd( -20.7472, 11.6335, 13.8138, 0.68 ) }
    dend_4 { pt3dadd( -21.0514, 12.0145, 14.2023, 0.68 ) }
    dend_4 { pt3dadd( -21.3554, 12.4709, 14.6369, 0.68 ) }
    dend_4 { pt3dadd( -21.3665, 12.4969, 14.6603, 0.68 ) }
    dend_4 { pt3dadd( -21.4499, 13.0976, 15.1861, 0.91 ) }
    dend_4 { pt3dadd( -21.2824, 13.7216, 15.6665, 0.91 ) }
    dend_4 { pt3dadd( -21.0003, 14.2439, 16.0351, 0.68 ) }
    dend_4 { pt3dadd( -20.6265, 14.7264, 16.3669, 0.68 ) }
    dend_4 { pt3dadd( -20.2521, 15.1023, 16.6387, 0.68 ) }
    dend_4 { pt3dadd( -19.7072, 15.63, 17.0204, 0.91 ) }
    dend_4 { pt3dadd( -18.7124, 16.5294, 17.6654, 0.68 ) }
    dend_4 { pt3dadd( -18.1522, 16.9062, 17.9477, 0.68 ) }
    dend_4 { pt3dadd( -17.5343, 17.2101, 18.2169, 0.68 ) }
    dend_4 { pt3dadd( -17.0364, 17.3982, 18.4084, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -18.5106, 10.0413, 12.3517, 0.68 ) }
    dend_3 { pt3dadd( -17.1456, 10.3337, 12.7517, 0.68 ) }
    dend_3 { pt3dadd( -15.7192, 10.6775, 13.3178, 0.68 ) }
    dend_3 { pt3dadd( -14.671, 10.9255, 13.8445, 0.68 ) }
    dend_3 { pt3dadd( -13.973, 11.0938, 14.242, 0.68 ) }
    dend_3 { pt3dadd( -12.6527, 11.4636, 15.0675, 0.68 ) }
    dend_3 { pt3dadd( -12.1211, 11.6021, 15.4399, 0.68 ) }
    dend_3 { pt3dadd( -10.9426, 11.9405, 16.4131, 0.68 ) }
    dend_3 { pt3dadd( -10.3302, 12.0873, 17.0114, 0.68 ) }
    dend_3 { pt3dadd( -9.9865, 12.1513, 17.3983, 1.14 ) }
    dend_3 { pt3dadd( -9.32971, 12.3189, 18.2667, 0.68 ) }
    dend_3 { pt3dadd( -8.76857, 12.6064, 19.3256, 0.68 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 52/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.493, -23.439, -12.6026, 0.68 ) }
    dend_35 { pt3dadd( -24.3449, -23.987, -13.6199, 0.68 ) }
    dend_35 { pt3dadd( -24.9942, -24.4047, -14.3952, 0.68 ) }
    dend_35 { pt3dadd( -25.3311, -24.6214, -14.7975, 0.68 ) }
    dend_35 { pt3dadd( -26.2964, -25.2424, -15.9503, 0.46 ) }
    dend_35 { pt3dadd( -27.2131, -25.8321, -17.0449, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 58/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -23.493, -23.439, -12.6026, 1.14 ) }
    dend_34 { pt3dadd( -23.0837, -24.5755, -11.8981, 1.14 ) }
    dend_34 { pt3dadd( -22.7348, -25.4523, -11.2815, 0.46 ) }
    dend_34 { pt3dadd( -22.3839, -26.1585, -10.7233, 0.46 ) }
    dend_34 { pt3dadd( -22.0752, -26.633, -10.2694, 0.91 ) }
    dend_34 { pt3dadd( -21.7173, -26.9899, -9.76144, 0.91 ) }
    dend_34 { pt3dadd( -21.0862, -27.4007, -8.88823, 0.23 ) }
    dend_34 { pt3dadd( -20.4096, -27.4823, -8.09763, 0.23 ) }
    dend_34 { pt3dadd( -19.8785, -27.3924, -7.42136, 1.14 ) }
    dend_34 { pt3dadd( -19.0941, -27.2083, -6.32858, 0.68 ) }
    dend_34 { pt3dadd( -18.3868, -27.0761, -5.19044, 0.68 ) }
    dend_34 { pt3dadd( -18.0953, -27.0536, -4.553, 0.68 ) }
    dend_34 { pt3dadd( -17.9066, -27.0287, -3.84898, 1.59 ) }
    dend_34 { pt3dadd( -17.7114, -27.0356, -2.70896, 1.59 ) }
    dend_34 { pt3dadd( -17.568, -27.1654, -1.22401, 1.37 ) }
    dend_34 { pt3dadd( -17.5123, -27.3796, -0.0501138, 1.37 ) }
    dend_34 { pt3dadd( -17.5503, -27.811, 1.69533, 0.91 ) }
    dend_34 { pt3dadd( -17.713, -28.3171, 3.47108, 0.91 ) }
    dend_34 { pt3dadd( -17.8528, -28.7703, 4.58593, 0.91 ) }
    dend_34 { pt3dadd( -17.9151, -29.4007, 5.66496, 0.91 ) }
    dend_34 { pt3dadd( -17.8655, -29.9028, 6.1766, 0.46 ) }
    dend_34 { pt3dadd( -17.7183, -30.5655, 6.6328, 0.46 ) }
    dend_34 { pt3dadd( -17.4968, -31.1561, 6.95794, 0.46 ) }
    dend_34 { pt3dadd( -17.0052, -32.2231, 7.53849, 0.68 ) }
    dend_34 { pt3dadd( -16.6235, -32.9536, 7.99833, 0.23 ) }
    dend_34 { pt3dadd( -16.2333, -33.5861, 8.4396, 0.23 ) }
    dend_34 { pt3dadd( -15.6768, -34.3426, 9.07413, 0.23 ) }
    dend_34 { pt3dadd( -14.8904, -35.3246, 10.0253, 0.23 ) }
    dend_34 { pt3dadd( -14.1264, -36.2981, 11.0351, 0.46 ) }
    dend_34 { pt3dadd( -13.5405, -37.1143, 11.9889, 0.23 ) }
    dend_34 { pt3dadd( -12.9591, -37.9659, 13.0036, 0.46 ) }
    dend_34 { pt3dadd( -12.2891, -38.8882, 14.1745, 0.68 ) }
    dend_34 { pt3dadd( -11.8114, -39.5555, 15.0448, 0.68 ) }
    dend_34 { pt3dadd( -11.6305, -39.8938, 15.5154, 0.91 ) }
    dend_34 { pt3dadd( -11.2598, -40.6147, 16.7273, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -27.3446, -16.7019, -6.39926, 0.68 ) }
    dend_25 { pt3dadd( -27.2848, -18.754, -6.55668, 0.68 ) }
    dend_25 { pt3dadd( -27.3266, -19.5474, -6.691, 0.68 ) }
    dend_25 { pt3dadd( -27.4334, -20.6425, -6.95978, 1.37 ) }
    dend_25 { pt3dadd( -27.7229, -22.2654, -7.38959, 1.37 ) }
    dend_25 { pt3dadd( -28.0528, -23.6611, -7.77926, 1.37 ) }
    dend_25 { pt3dadd( -28.2609, -24.4519, -7.99107, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( -28.5937, -25.6732, -8.3328, 0.91 ) }
    dend_25 { pt3dadd( -28.8095, -26.449, -8.50132, 0.91 ) }
    dend_25 { pt3dadd( -29.1574, -27.719, -8.66557, 1.14 ) }
    dend_25 { pt3dadd( -29.5162, -29.0382, -8.68245, 0.91 ) }
    dend_25 { pt3dadd( -29.9124, -30.8467, -8.54288, 1.14 ) }
    dend_25 { pt3dadd( -30.1463, -32.5537, -8.26449, 0.68 ) }
    dend_25 { pt3dadd( -30.2079, -33.358, -8.06817, 0.68 ) }
    dend_25 { pt3dadd( -30.2841, -34.5524, -7.71602, 1.37 ) }
    dend_25 { pt3dadd( -30.317, -35.9116, -7.24435, 0.68 ) }
    dend_25 { pt3dadd( -30.3651, -36.6867, -6.93131, 0.46 ) }
    dend_25 { pt3dadd( -30.4874, -37.8011, -6.47633, 0.46 ) }
    dend_25 { pt3dadd( -30.5939, -38.6435, -6.174, 1.14 ) }
    dend_25 { pt3dadd( -30.7331, -39.8831, -5.7591, 0.23 ) }
    dend_25 { pt3dadd( -30.8384, -40.9049, -5.40411, 0.23 ) }
    dend_25 { pt3dadd( -30.951, -42.1413, -4.98777, 0.23 ) }
    dend_25 { pt3dadd( -31.0698, -43.3919, -4.60696, 0.23 ) }
    dend_25 { pt3dadd( -31.179, -44.8657, -4.1797, 1.37 ) }
    dend_25 { pt3dadd( -31.3119, -47.0373, -3.54277, 0.23 ) }
    dend_25 { pt3dadd( -31.3669, -48.5832, -3.07647, 0.23 ) }
    dend_25 { pt3dadd( -31.4173, -49.8952, -2.67313, 1.59 ) }
    dend_25 { pt3dadd( -31.4955, -52.275, -1.89813, 0.23 ) }
    dend_25 { pt3dadd( -31.5179, -52.5227, -1.81593, 0.46 ) }
    dend_25 { pt3dadd( -31.7348, -53.9688, -1.3888, 0.23 ) }
    dend_25 { pt3dadd( -31.8262, -54.4679, -1.27083, 0.46 ) }
    dend_25 { pt3dadd( -32.2617, -56.3674, -0.906047, 0.23 ) }
    dend_25 { pt3dadd( -32.3508, -56.6825, -0.855524, 0.46 ) }
    dend_25 { pt3dadd( -32.7838, -57.9539, -0.723037, 0.23 ) }
    dend_25 { pt3dadd( -33.2131, -59.0661, -0.652891, 0.68 ) }
    dend_25 { pt3dadd( -33.9717, -60.7271, -0.664174, 0.68 ) }
    dend_25 { pt3dadd( -34.7365, -62.0111, -0.798219, 0.23 ) }
    dend_25 { pt3dadd( -35.2565, -62.6926, -0.953992, 0.46 ) }
    dend_25 { pt3dadd( -36.1626, -63.6743, -1.32243, 0.23 ) }
    dend_25 { pt3dadd( -36.4043, -63.8941, -1.44621, 0.23 ) }
    dend_25 { pt3dadd( -37.5294, -64.7817, -2.13079, 0.46 ) }
    dend_25 { pt3dadd( -39.317, -65.9953, -3.49217, 0.23 ) }
    dend_25 { pt3dadd( -40.1046, -66.463, -4.19158, 0.68 ) }
    dend_25 { pt3dadd( -41.356, -67.1444, -5.44326, 0.46 ) }
    dend_25 { pt3dadd( -41.9342, -67.4377, -6.07995, 1.37 ) }
    dend_25 { pt3dadd( -42.8775, -67.983, -7.26701, 0.68 ) }
    dend_25 { pt3dadd( -43.6474, -68.5554, -8.5233, 0.68 ) }
    dend_25 { pt3dadd( -44.1179, -69.0004, -9.45202, 0.46 ) }
    dend_25 { pt3dadd( -44.8793, -69.6986, -10.8981, 0.46 ) }
    dend_25 { pt3dadd( -45.025, -69.8322, -11.179, 0.68 ) }
    dend_25 { pt3dadd( -45.8816, -70.5875, -12.7832, 0.68 ) }
    dend_25 { pt3dadd( -46.5416, -71.175, -13.9979, 0.23 ) }
    dend_25 { pt3dadd( -47.8593, -72.5993, -16.3344, 0.23 ) }
    dend_25 { pt3dadd( -48.571, -73.4797, -17.6865, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 47/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -27.3446, -16.7019, -6.39926, 0.46 ) }
    dend_20 { pt3dadd( -27.7978, -16.5913, -6.36721, 0.46 ) }
    dend_20 { pt3dadd( -29.1763, -16.2548, -6.26972, 0.91 ) }
    dend_20 { pt3dadd( -29.4939, -16.1773, -6.24726, 1.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -29.4939, -16.1773, -6.24726, 0.91 ) }
    dend_24 { pt3dadd( -30.8617, -14.2519, -6.63999, 0.91 ) }
    dend_24 { pt3dadd( -32.1052, -12.3497, -7.00346, 0.68 ) }
    dend_24 { pt3dadd( -32.7235, -11.3202, -7.11053, 0.46 ) }
    dend_24 { pt3dadd( -33.4208, -10.1728, -7.13321, 0.46 ) }
    dend_24 { pt3dadd( -33.7595, -9.65699, -7.12602, 0.68 ) }
    dend_24 { pt3dadd( -34.4548, -8.65542, -7.0989, 1.82 ) }
    dend_24 { pt3dadd( -35.3476, -7.31529, -7.02042, 0.46 ) }
    dend_24 { pt3dadd( -36.4617, -5.57501, -6.8403, 0.46 ) }
    dend_24 { pt3dadd( -37.4571, -4.07802, -6.70509, 0.46 ) }
    dend_24 { pt3dadd( -38.3431, -2.74989, -6.58131, 0.91 ) }
    dend_24 { pt3dadd( -38.9043, -2.01189, -6.52221, 0.46 ) }
    dend_24 { pt3dadd( -39.387, -1.44493, -6.49103, 0.46 ) }
    dend_24 { pt3dadd( -40.5106, -0.338502, -6.43096, 0.46 ) }
    dend_24 { pt3dadd( -41.4672, 0.525755, -6.36951, 0.46 ) }
    dend_24 { pt3dadd( -42.8298, 1.68591, -6.26673, 1.37 ) }
    dend_24 { pt3dadd( -45.0343, 3.40062, -6.15485, 0.46 ) }
    dend_24 { pt3dadd( -45.8623, 3.9849, -6.13475, 0.46 ) }
    dend_24 { pt3dadd( -48.1585, 5.49394, -6.04944, 0.46 ) }
    dend_24 { pt3dadd( -49.9214, 6.63468, -5.98214, 0.46 ) }
    dend_24 { pt3dadd( -52.042, 8.08951, -5.84167, 0.46 ) }
    dend_24 { pt3dadd( -53.879, 9.42867, -5.63523, 1.82 ) }
    dend_24 { pt3dadd( -55.1688, 10.4176, -5.46445, 0.91 ) }
    dend_24 { pt3dadd( -56.8435, 11.7123, -5.23657, 0.68 ) }
    dend_24 { pt3dadd( -58.1978, 12.8228, -5.05901, 0.91 ) }
    dend_24 { pt3dadd( -60.6964, 14.8423, -4.65903, 0.23 ) }
    dend_24 { pt3dadd( -61.9092, 15.9466, -4.27426, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -29.4939, -16.1773, -6.24726, 0.46 ) }
    dend_21 { pt3dadd( -30.0401, -17.001, -5.1905, 0.46 ) }
    dend_21 { pt3dadd( -30.1656, -17.1805, -4.9627, 0.46 ) }
    dend_21 { pt3dadd( -30.6789, -17.8972, -4.12426, 0.46 ) }
    dend_21 { pt3dadd( -31.2126, -18.6174, -3.34684, 0.46 ) }
    dend_21 { pt3dadd( -31.6392, -19.1943, -2.81031, 0.46 ) }
    dend_21 { pt3dadd( -32.0565, -19.7435, -2.36676, 0.46 ) }
    dend_21 { pt3dadd( -32.3223, -20.1333, -2.12698, 0.68 ) }
    dend_21 { pt3dadd( -32.6737, -20.7469, -1.87599, 1.82 ) }
    dend_21 { pt3dadd( -32.8852, -21.1727, -1.76552, 1.82 ) }
    dend_21 { pt3dadd( -33.4338, -22.299, -1.5806, 0.23 ) }
    dend_21 { pt3dadd( -33.8251, -23.1796, -1.46079, 0.23 ) }
    dend_21 { pt3dadd( -34.3933, -24.6713, -1.17341, 0.46 ) }
    dend_21 { pt3dadd( -34.7373, -25.6946, -0.900453, 0.46 ) }
    dend_21 { pt3dadd( -34.8063, -25.9246, -0.824419, 0.46 ) }
    dend_21 { pt3dadd( -35.0818, -26.8452, -0.447932, 0.23 ) }
    dend_21 { pt3dadd( -35.3562, -27.7699, 0.00160313, 0.46 ) }
    dend_21 { pt3dadd( -35.9317, -29.3987, 0.930649, 0.46 ) }
    dend_21 { pt3dadd( -36.207, -29.9625, 1.29093, 0.46 ) }
    dend_21 { pt3dadd( -36.5992, -30.6589, 1.75115, 1.82 ) }
    dend_21 { pt3dadd( -37.2347, -31.6373, 2.36991, 0.46 ) }
    dend_21 { pt3dadd( -37.8914, -32.5523, 2.88856, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -38.6483, -33.5387, 3.36171, 0.46 ) }
    dend_21 { pt3dadd( -39.4079, -34.5725, 3.73677, 0.23 ) }
    dend_21 { pt3dadd( -39.7709, -35.0584, 3.90583, 0.23 ) }
    dend_21 { pt3dadd( -40.4943, -35.9796, 4.23646, 0.68 ) }
    dend_21 { pt3dadd( -41.1253, -36.7368, 4.51077, 0.23 ) }
    dend_21 { pt3dadd( -41.7002, -37.4238, 4.761, 0.68 ) }
    dend_21 { pt3dadd( -42.5547, -38.5238, 5.16558, 0.23 ) }
    dend_21 { pt3dadd( -43.5515, -39.8509, 5.7044, 0.23 ) }
    dend_21 { pt3dadd( -44.1837, -40.6224, 6.04739, 0.23 ) }
    dend_21 { pt3dadd( -44.9979, -41.5145, 6.51759, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 10/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -44.9979, -41.5145, 6.51759, 0.46 ) }
    dend_23 { pt3dadd( -46.3944, -42.2965, 6.33885, 0.46 ) }
    dend_23 { pt3dadd( -47.097, -42.69, 6.24892, 1.59 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -44.9979, -41.5145, 6.51759, 0.23 ) }
    dend_22 { pt3dadd( -46.3437, -41.2847, 4.90038, 0.23 ) }
    dend_22 { pt3dadd( -47.0915, -41.1571, 4.00179, 0.23 ) }
    dend_22 { pt3dadd( -48.3042, -40.9501, 2.54458, 0.23 ) }
    dend_22 { pt3dadd( -48.908, -40.847, 1.81907, 0.23 ) }
    dend_22 { pt3dadd( -50.0008, -40.6605, 0.505989, 0.23 ) }
    dend_22 { pt3dadd( -50.9163, -40.5042, -0.594177, 1.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_16, dend_9, dend_0, dend_28, dend_17, dend_15, dend_10, dend_6, dend_1, dend_32, dend_29, dend_27, dend_18, dend_14, dend_11, dend_8, dend_7, dend_5, dend_2, dend_36, dend_33, dend_31, dend_30, dend_26, dend_19, dend_13, dend_12, dend_4, dend_3, dend_35, dend_34, dend_25, dend_20, dend_24, dend_21, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_31 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_25 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_9 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_16 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_10 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_28 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_32 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_15 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_18 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_29 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_11 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_22 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_0 all.append()
    axon_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_31 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L1_NGCDA_e1a52c74bf_0_0


