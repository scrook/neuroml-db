// Cell: cNAC187_L6_BTC_c021ea90e3_0_0
/*
{
  "id" : "cNAC187_L6_BTC_c021ea90e3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -12.5959, -4.59, 1.84", "3.21969, -12.5959, -4.59, 1.84", "3.41376, -13.2391, -4.62612, 1.84", "3.82773, -14.6111, -4.70317, 2.14", "4.09272, -15.4893, -4.75249, 1.92", "4.42966, -16.606, -4.8152, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -13.0559, -1.64, 2.43", "0.219697, -13.0559, -1.64, 2.43", "-0.526286, -14.8327, -1.8639, 1.92", "-1.14705, -16.3112, -2.05021, 2.14", "-1.53135, -17.2265, -2.16556, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 12.5441, 0.0, 3.02", "1.5397, 12.5441, 0.0, 3.02", "1.81098, 13.5609, -0.061566, 2.36", "2.17308, 14.8187, -0.129073, 2.36", "2.77462, 16.8393, -0.225827, 2.29", "3.23763, 18.337, -0.306526, 2.21", "3.71231, 19.8186, -0.390117, 2.29", "4.12898, 21.0948, -0.464719, 2.43", "4.60654, 22.5064, -0.552816, 2.36", "5.00772, 23.6102, -0.614497, 2.51", "5.43821, 24.687, -0.675277, 3.17", "5.71779, 25.3496, -0.702882, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475778", "-3.29794, 27.9334, 0.0, 0.475778", "-5.29297, 42.8002, 0.0, 0.475778" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.42966, -16.606, -4.8152, 0.88", "3.74899, -16.606, -5.19256, 0.88", "3.09068, -16.666, -5.5492, 0.81", "2.43621, -16.7821, -5.91384, 0.81", "1.68073, -16.9733, -6.34943, 0.96", "0.964726, -17.2074, -6.78239, 1.4", "0.275264, -17.4959, -7.23774, 1.77", "-0.333442, -17.7936, -7.66565, 0.44", "-0.85798, -18.1222, -8.05339, 0.44", "-1.14833, -18.3655, -8.2669, 0.44", "-1.37634, -18.6517, -8.46165, 0.66", "-1.6435, -19.2009, -8.79958, 1.03", "-7.04767, -20.3372, -13.28, 1.03", "-11.7403, -21.1353, -18.5634, 1.03", "-15.2412, -20.9494, -24.7504, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.42966, -16.606, -4.8152, 1.11", "5.01587, -17.3257, -4.76897, 1.11", "5.53508, -17.9999, -4.68675, 1.25", "5.73607, -18.2744, -4.63807, 1.7", "6.08844, -18.7782, -4.539, 1.77", "6.68927, -19.6411, -4.36958, 1.33", "7.15327, -20.3138, -4.24466, 1.03", "7.50319, -20.8414, -4.12387, 1.03", "7.85134, -21.389, -4.01315, 1.03", "8.14683, -21.8743, -3.9427, 1.33", "8.57541, -22.6221, -3.8896, 1.33", "8.96688, -23.3549, -3.90863, 0.74", "9.35093, -24.1314, -3.99968, 0.74", "9.74928, -24.9272, -4.12838, 0.88", "10.0488, -25.5238, -4.23726, 1.33", "10.2857, -25.9765, -4.30036, 2.06", "10.7872, -26.918, -4.38861, 0.96", "11.2161, -27.6699, -4.41515, 0.74", "11.546, -28.2143, -4.4063, 1.18", "11.7762, -28.5765, -4.36777, 1.55", "12.3768, -29.5038, -4.24149, 0.88", "12.7326, -30.0616, -4.18505, 0.81", "13.2111, -30.8376, -4.16475, 0.88", "13.4692, -31.2843, -4.19379, 1.4", "13.6825, -31.6953, -4.26187, 1.4", "13.9864, -32.3455, -4.42216, 0.81", "14.2621, -32.9914, -4.63309, 0.88", "14.4799, -33.5074, -4.82276, 0.52", "14.6088, -33.8027, -4.94015, 0.96", "14.8484, -34.2896, -5.12057, 1.92", "15.1825, -34.9023, -5.31395, 0.74", "15.5205, -35.4746, -5.46985, 0.74", "15.873, -36.0169, -5.59399, 0.96", "16.2302, -36.5103, -5.70634, 1.55", "16.8768, -37.3161, -5.9129, 0.81", "17.4341, -37.9469, -6.08985, 0.81", "17.9707, -38.5137, -6.26083, 1.25", "18.5022, -39.0579, -6.42821, 1.4", "19.2865, -39.8667, -6.64457, 0.81", "19.9561, -40.5911, -6.79783, 0.81", "20.3359, -41.009, -6.8734, 1.18", "20.7742, -41.4641, -6.94495, 1.55", "21.2431, -41.9483, -6.99943, 1.55", "21.8104, -42.5761, -7.04183, 0.59", "22.356, -43.2414, -7.02351, 0.81", "22.7075, -43.7069, -6.96844, 1.33", "23.2325, -44.4346, -6.85634, 0.37", "23.5149, -44.856, -6.76727, 0.22", "26.9464, -49.3964, -7.18835, 0.22", "31.0112, -53.1937, -8.46282, 0.22", "35.4171, -56.813, -8.70094, 0.22", "39.5526, -60.6651, -7.90978, 0.22", "44.1191, -63.8831, -6.74407, 0.22", "48.2024, -67.8355, -6.22217, 0.22", "52.0461, -72.0352, -6.61707, 0.22", "55.7587, -76.2286, -7.71218, 0.22", "59.6971, -80.353, -7.92635, 0.22", "63.299, -84.7591, -8.35068, 0.22", "66.5323, -89.3619, -9.31329, 0.22", "69.3908, -93.9448, -11.1555, 0.22", "72.9046, -97.8686, -13.3519, 0.22", "75.4876, -102.032, -16.2788, 0.22", "78.5115, -106.47, -18.2086, 0.22", "81.0164, -111.473, -19.3312, 0.22", "84.1548, -116.232, -19.6009, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.53135, -17.2265, -2.16556, 0.96", "-3.02549, -18.1539, -2.04224, 0.96", "-3.84309, -18.6884, -1.98598, 0.96", "-4.68003, -19.266, -1.93979, 1.25", "-5.12178, -19.5921, -1.92143, 1.25", "-5.93645, -20.2192, -1.90551, 0.96", "-6.71108, -20.8254, -1.90884, 0.96", "-7.39652, -21.3772, -1.92787, 1.47", "-8.26383, -22.0165, -1.95872, 1.62", "-9.33787, -22.6989, -1.98481, 0.96", "-10.2206, -23.1841, -2.0064, 0.96", "-11.4711, -23.7619, -2.0266, 1.11", "-12.3706, -24.0935, -2.03016, 1.4", "-13.9479, -24.5453, -2.02449, 1.33", "-15.2543, -24.8405, -2.03056, 0.96", "-16.5953, -25.1122, -2.04978, 1.18", "-17.2697, -25.2456, -2.06339, 1.18", "-18.9914, -25.6169, -2.12098, 0.88", "-19.9777, -25.8954, -2.17612, 0.88", "-20.6517, -26.1577, -2.24603, 1.03", "-21.8924, -26.8074, -2.40372, 1.25", "-22.6816, -27.3149, -2.50542, 0.88", "-23.438, -27.8879, -2.60228, 0.88", "-24.1109, -28.4579, -2.68401, 1.11", "-24.8724, -29.0856, -2.77874, 1.25", "-25.8735, -29.861, -2.96177, 0.88", "-26.6458, -30.4492, -3.20026, 1.03", "-27.2078, -30.8947, -3.46621, 1.4", "-27.9107, -31.463, -3.93171, 1.18", "-28.7964, -32.1422, -4.70815, 1.25", "-29.4468, -32.6906, -5.66613, 1.4", "-28.9094, -32.7633, -6.84125, 1.4", "-28.0971, -32.58, -7.47612, 1.47", "-26.3779, -32.0765, -8.4409, 0.52", "-25.4143, -31.7803, -8.79638, 0.52", "-24.3754, -31.4584, -9.04427, 0.59", "-22.5831, -30.9456, -9.26005, 0.59", "-21.4714, -30.6621, -9.28864, 0.66", "-20.2625, -30.428, -9.21794, 0.74", "-18.6308, -30.184, -9.04647, 0.59", "-17.3972, -30.0674, -8.87876, 0.88", "-15.7267, -29.9902, -8.59395, 0.37", "-14.8387, -30.0149, -8.42194, 0.37", "-13.9634, -30.1154, -8.20788, 0.37", "-21.8913, -36.6629, -10.4174, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.53135, -17.2265, -2.16556, 1.4", "-1.42797, -18.1869, -2.03454, 1.4", "-1.31382, -19.1746, -1.91599, 1.03", "-1.19838, -20.1348, -1.80158, 1.33", "-1.06675, -21.2441, -1.66335, 1.25", "-0.941529, -22.252, -1.52448, 1.25", "-0.822001, -23.2128, -1.37647, 1.11", "-0.720546, -24.1371, -1.24185, 1.84", "-0.651842, -24.7342, -1.16414, 1.62", "-0.510431, -25.8741, -1.00151, 1.18", "-0.367091, -27.083, -0.813075, 1.11", "-0.229177, -28.2991, -0.615384, 1.25", "-0.14552, -29.1032, -0.49023, 1.55", "-0.060966, -29.9781, -0.347294, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.71779, 25.3496, -0.702882, 2.88", "5.80825, 26.1783, -0.624073, 2.88", "5.92243, 27.2244, -0.524594, 2.58", "6.05147, 28.4065, -0.412167, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.71779, 25.3496, -0.702882, 1.62", "7.00073, 24.8793, -0.893426, 1.62", "8.49177, 24.1746, -1.04667, 0.96", "9.47315, 23.635, -1.11473, 0.96", "10.5484, 22.9602, -1.16578, 1.11", "11.1224, 22.5672, -1.18178, 1.25", "12.2096, 21.7468, -1.20607, 0.96", "13.4932, 20.5772, -1.19321, 0.81", "14.2033, 19.8895, -1.17487, 0.81", "14.824, 19.3085, -1.16561, 0.81", "15.4162, 18.7915, -1.19529, 0.88", "16.4174, 18.0091, -1.29498, 0.74", "17.5003, 17.28, -1.44342, 0.59", "18.4601, 16.7153, -1.58295, 0.74", "19.1356, 16.3446, -1.67202, 0.66", "19.8417, 15.9582, -1.72774, 0.66", "20.8462, 15.3949, -1.75461, 0.96", "21.8744, 14.8205, -1.7236, 1.11", "23.1347, 14.054, -1.63036, 0.81", "24.1388, 13.3708, -1.52802, 0.81", "25.1067, 12.6618, -1.42946, 0.52", "25.7384, 12.1601, -1.39419, 0.52", "26.2197, 11.7408, -1.43477, 0.52", "26.8492, 11.1404, -1.63353, 0.74", "27.596, 10.3854, -2.05054, 0.96", "28.0777, 9.86652, -2.40035, 1.03", "28.6903, 9.18804, -2.90924, 0.81", "29.4599, 8.36801, -3.51418, 0.52", "30.1101, 7.64165, -4.05232, 0.88", "30.4385, 7.27902, -4.32738, 1.11", "31.1278, 6.55634, -4.87152, 0.81", "31.8347, 5.89874, -5.31383, 0.22", "32.7796, 5.17435, -5.67619, 0.15", "40.0405, -0.625447, -6.69018, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-15.2412, -20.9494, -24.7504, 0.15", "-20.3272, -21.6184, -29.3836, 0.15", "-25.7136, -21.7981, -33.7121, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-15.2412, -20.9494, -24.7504, 0.59", "-19.9805, -22.1658, -33.192, 0.15", "-24.7904, -22.429, -41.6772, 0.15", "-31.4697, -21.3928, -48.7138, 0.15", "-39.1887, -21.4014, -54.682, 0.15", "-45.8997, -22.2074, -61.7186, 0.15", "-52.4587, -24.8666, -68.4349, 0.15", "-59.444, -26.724, -74.989, 0.15", "-66.0992, -29.3354, -81.6291, 0.15", "-73.0015, -32.0169, -87.9828, 0.15", "-80.9906, -33.0803, -93.4824, 0.15", "-88.4123, -34.0307, -99.7447, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "84.1548, -116.232, -19.6009, 0.15", "90.6032, -123.717, -21.9541, 0.15", "96.6104, -131.856, -22.8557, 0.15", "102.681, -139.968, -22.1565, 0.15", "108.844, -147.936, -20.8635, 0.15", "115.133, -155.911, -20.866, 0.15", "122.313, -163.093, -20.7819, 0.15", "131.081, -168.214, -20.5522, 0.15", "138.457, -175.096, -21.7254, 0.15", "145.684, -182.229, -21.8846, 0.15", "152.352, -189.689, -23.6299, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "84.1548, -116.232, -19.6009, 0.59", "89.0363, -122.728, -19.5686, 0.15", "92.8415, -129.838, -20.5707, 0.15", "95.1296, -137.485, -22.0906, 0.15", "96.649, -145.464, -22.3528, 0.15", "99.0465, -153.11, -23.7019, 0.15", "101.585, -160.785, -24.5306, 0.15", "105.416, -167.782, -26.0758, 0.15", "109.139, -174.705, -28.136, 0.15", "113.069, -181.813, -28.3638, 0.15", "116.154, -189.328, -28.5945, 0.15", "119.78, -196.566, -29.2911, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-21.8913, -36.6629, -10.4174, 0.15", "-29.9921, -42.5311, -10.2422, 0.15", "-37.2071, -49.4616, -10.2321, 0.15", "-43.0202, -57.4202, -8.51228, 0.15", "-49.0706, -65.3876, -8.49666, 0.15", "-55.3469, -73.0919, -9.65459, 0.15", "-59.7345, -82.0728, -10.0821, 0.15", "-64.4556, -90.8487, -10.9669, 0.15", "-68.607, -99.9305, -10.3546, 0.15", "-73.3424, -108.576, -8.64418, 0.15", "-77.5966, -117.106, -5.60492, 0.15", "-80.8924, -126.281, -3.3613, 0.15", "-85.0587, -135.365, -2.88894, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-21.8913, -36.6629, -10.4174, 0.59", "-26.298, -42.0725, -15.1255, 0.15", "-29.9385, -47.7209, -20.1941, 0.15", "-34.3053, -52.867, -25.2237, 0.15", "-37.4776, -58.0689, -31.031, 0.15", "-39.9129, -63.3134, -37.1477, 0.15", "-42.8723, -69.0736, -42.5245, 0.15", "-44.6086, -75.1759, -48.0559, 0.15", "-46.1914, -81.7471, -53.0721, 0.15", "-46.705, -87.6914, -59.0093, 0.15", "-47.943, -93.6891, -64.7836, 0.15", "-49.0475, -98.9881, -71.2295, 0.15", "-49.3593, -104.835, -77.2767, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.060966, -29.9781, -0.347294, 0.44", "-1.04036, -32.2668, 1.23867, 0.44", "-1.48646, -33.2235, 2.00301, 0.44", "-2.03353, -34.5079, 3.25743, 0.44", "-2.40656, -35.6207, 4.46286, 0.66", "-2.64391, -36.6503, 5.49467, 0.66", "-2.74206, -37.3853, 6.1318, 0.44", "-2.76452, -38.3722, 6.97197, 0.52", "-2.61464, -39.8095, 7.94112, 0.66", "-2.29008, -41.3861, 8.65356, 0.66", "-1.8251, -43.2167, 9.27477, 0.88", "-1.34452, -45.0974, 9.78388, 1.11", "-0.940253, -46.8752, 10.1691, 0.74", "-0.719205, -48.1983, 10.3279, 0.29", "-0.605587, -49.5551, 10.358, 0.22", "-0.595351, -50.3616, 10.3283, 0.22", "-0.671286, -51.4225, 10.2779, 0.22", "-0.794057, -52.4225, 10.2123, 0.22", "-1.06697, -54.5709, 10.0556, 0.29", "-1.21711, -56.2347, 9.93365, 0.52", "-1.2563, -57.4105, 9.84442, 0.52", "-1.17844, -59.0242, 9.71851, 0.44", "-0.878139, -61.4139, 9.55416, 0.29", "-0.666898, -62.5804, 9.4982, 0.66", "-0.474906, -63.398, 9.5202, 1.77", "-0.08741, -64.8787, 9.65237, 1.18", "0.362406, -66.7679, 9.95105, 0.52", "0.73632, -68.5276, 10.3283, 0.52", "0.962552, -69.6663, 10.6243, 0.81", "1.34306, -71.3685, 11.0773, 0.96", "1.72958, -72.8529, 11.5, 0.52", "2.31376, -74.8609, 12.1588, 0.22", "2.62226, -75.8019, 12.5113, 0.29", "3.07797, -77.0347, 13.0343, 0.29", "3.72647, -78.7902, 13.8057, 0.22", "4.16103, -79.9394, 14.3339, 0.37", "4.59677, -81.1257, 14.8956, 0.74", "4.95716, -82.2653, 15.4431, 1.03", "5.22135, -83.556, 16.0423, 1.25", "5.46925, -86.0851, 17.1757, 0.37", "5.5248, -87.5576, 17.8343, 1.18", "5.56321, -88.9176, 18.4007, 2.65", "5.66906, -91.1366, 19.2337, 2.21", "5.8474, -93.2849, 19.9777, 0.96", "6.07479, -95.058, 20.5393, 0.29", "6.28845, -96.3142, 20.9299, 0.29", "6.48265, -97.4863, 21.2914, 0.66", "6.70467, -98.8877, 21.7895, 0.44", "6.89994, -100.134, 22.2741, 0.22", "7.00559, -100.76, 22.5358, 0.22", "7.10935, -101.521, 22.8367, 0.22", "7.22032, -103.073, 23.3999, 0.29", "7.27776, -104.246, 23.7938, 0.29", "7.33428, -105.051, 24.0292, 0.22", "7.41172, -105.979, 24.2487, 0.22", "7.53324, -106.793, 24.4127, 0.81", "7.71286, -107.561, 24.5346, 1.55", "8.23476, -109.219, 24.7756, 1.84", "9.12268, -111.701, 25.1064, 0.15", "9.39418, -112.482, 25.2308, 0.15", "9.62002, -113.134, 25.3417, 0.15", "9.87129, -113.923, 25.4836, 0.15", "10.214, -115.092, 25.6948, 0.88", "10.4853, -116.064, 25.8611, 1.92", "11.0438, -117.993, 26.1221, 1.99", "11.1961, -118.486, 26.1763, 1.99", "11.8455, -120.766, 26.3706, 0.15", "12.0039, -121.397, 26.4054, 0.15", "12.1412, -122.047, 26.4152, 0.37", "12.2462, -122.709, 26.4096, 0.37", "12.4572, -124.279, 26.3951, 0.15", "12.558, -125.254, 26.4125, 0.15", "12.6778, -126.403, 26.4575, 0.22", "12.7361, -127.073, 26.5124, 0.22", "12.7857, -128.284, 26.657, 0.15", "12.7871, -129.211, 26.7942, 0.15", "12.7754, -129.945, 26.9188, 0.59", "12.8035, -130.723, 27.0576, 1.03", "12.9178, -131.926, 27.2399, 0.22", "13.1035, -133.191, 27.4229, 0.07", "13.2604, -134.001, 27.5484, 0.07", "13.3833, -134.511, 27.6381, 0.66", "13.7791, -135.84, 27.9361, 0.96", "14.6371, -138.235, 28.5356, 0.22", "15.2041, -139.532, 28.9007, 0.22", "15.6391, -140.369, 29.1882, 0.44", "16.1704, -141.313, 29.5488, 1.25", "16.6734, -142.134, 29.8715, 1.92", "17.4102, -143.165, 30.2931, 1.11", "18.2133, -144.145, 30.7292, 0.22", "18.844, -144.913, 31.0452, 0.22", "19.5304, -145.822, 31.3803, 0.52", "20.3369, -147.087, 31.8141, 0.22", "21.0663, -148.462, 32.3108, 0.22", "21.5705, -149.574, 32.7468, 0.22", "21.7889, -150.142, 32.9765, 0.81", "22.2564, -151.491, 33.555, 1.77", "23.0736, -154.055, 34.7471, 0.37", "23.4914, -155.398, 35.3935, 0.15", "23.677, -156.016, 35.6789, 0.15", "23.9156, -156.785, 36.0141, 0.37", "24.223, -157.722, 36.4188, 1.18", "24.6111, -158.828, 36.8816, 1.55", "25.2154, -160.526, 37.5097, 0.81", "25.5909, -161.72, 37.8851, 0.15", "25.7961, -162.49, 38.1184, 0.22", "26.0845, -163.651, 38.4519, 0.15", "26.3215, -164.719, 38.7449, 0.96", "26.5853, -165.902, 39.0648, 1.18", "27.0067, -167.724, 39.5348, 0.22", "27.2391, -168.58, 39.7437, 0.22", "27.5792, -169.655, 39.9992, 0.37", "27.6863, -169.953, 40.063, 0.37", "28.1136, -171.035, 40.2872, 0.22", "28.3395, -171.534, 40.4, 0.22", "28.8062, -172.387, 40.5563, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.060966, -29.9781, -0.347294, 1.84", "-0.301372, -31.2784, -0.85959, 1.84", "-0.513559, -32.8378, -1.42665, 1.55", "-0.671493, -34.5203, -1.98517, 1.55", "-0.815814, -36.279, -2.50716, 1.55", "-0.958746, -38.0255, -2.95667, 1.47", "-1.09089, -39.5555, -3.31208, 0.96", "-1.19713, -40.776, -3.53904, 1.55", "-1.41202, -42.9663, -3.82119, 1.25", "-1.65515, -45.2297, -4.04077, 1.47", "-1.93405, -47.5633, -4.20681, 1.03", "-2.16294, -49.1407, -4.29252, 1.18", "-2.54267, -51.3669, -4.36826, 1.99", "-2.93631, -53.2572, -4.39875, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "6.05147, 28.4065, -0.412167, 2.14", "7.0742, 29.863, 0.0653666, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.05147, 28.4065, -0.412167, 1.47", "5.89174, 28.9292, 0.0364125, 1.47", "5.76181, 29.2428, 0.31117, 1.18", "5.59441, 29.5307, 0.579573, 1.18", "5.3602, 29.8268, 0.884643, 1.47", "5.12179, 30.0426, 1.13735, 1.47", "4.98029, 30.1236, 1.25684, 1.47", "4.61908, 30.1749, 1.45336, 1.47", "4.13575, 30.1043, 1.61479, 1.03", "3.84649, 30.0059, 1.67233, 1.62", "3.58239, 29.8789, 1.70429, 1.77", "3.24635, 29.6719, 1.73368, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "40.0405, -0.625447, -6.69018, 0.15", "47.2098, -5.96068, -7.44785, 0.15", "54.7844, -10.6964, -8.24587, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "40.0405, -0.625447, -6.69018, 0.59", "46.6265, -5.67296, -8.48554, 0.15", "52.2501, -11.696, -10.5288, 0.15", "56.5076, -18.5457, -13.1808, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-25.7136, -21.7981, -33.7121, 0.15", "-34.2403, -18.188, -37.9535, 0.15", "-41.0021, -13.7392, -44.1351, 0.15", "-46.1467, -7.88007, -50.6871, 0.15", "-52.6471, -2.57549, -56.4605, 0.15", "-59.8275, 1.81571, -62.1951, 0.15", "-66.7213, 5.77497, -68.5611, 0.15", "-72.469, 10.5134, -75.5064, 0.15", "-78.1378, 16.148, -81.8184, 0.15", "-83.1076, 20.407, -89.6215, 0.15", "-89.5402, 23.9812, -96.6623, 0.15", "-96.9965, 28.8275, -101.626, 0.15", "-104.565, 33.146, -106.898, 0.15", "-111.366, 38.9181, -111.813, 0.15", "-119.143, 44.2225, -115.701, 0.15", "-127.618, 49.4969, -117.719, 0.15", "-135.326, 56.1321, -118.258, 0.15", "-143.162, 62.4254, -119.905, 0.15", "-151.469, 68.3132, -119.657, 0.15", "-159.64, 74.3892, -119.449, 0.15", "-167.49, 80.5999, -121.327, 0.15", "-174.738, 87.478, -123.299, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-25.7136, -21.7981, -33.7121, 0.59", "-30.7561, -26.6935, -41.5963, 0.15", "-36.4495, -30.2914, -49.7321, 0.15", "-41.6573, -35.05, -57.5925, 0.15", "-46.4944, -39.9582, -65.5965, 0.15", "-50.5037, -44.4701, -74.2636, 0.15", "-55.2929, -49.4778, -82.2346, 0.15", "-58.9934, -54.857, -90.5366, 0.15", "-63.3801, -59.5977, -98.8932, 0.15", "-66.8665, -66.7298, -105.859, 0.15", "-69.2917, -74.6149, -112.455, 0.15", "-71.6609, -82.6742, -118.857, 0.15", "-75.3625, -90.3832, -125.055, 0.15", "-77.8568, -99.283, -130.166, 0.15", "-81.9756, -108.298, -133.817, 0.15", "-87.4793, -116.423, -137.72, 0.15", "-92.7061, -124.354, -142.339, 0.15", "-96.3321, -132.247, -148.348, 0.15", "-99.971, -140.136, -154.354, 0.15", "-102.59, -149.701, -157.987, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-88.4123, -34.0307, -99.7447, 0.15", "-96.6051, -35.9559, -106.791, 0.15", "-105.495, -37.9263, -112.92, 0.15", "-115.165, -39.4555, -117.882, 0.15", "-123.925, -39.388, -124.496, 0.15", "-133.043, -38.0692, -130.462, 0.15", "-142.862, -39.1205, -135.254, 0.15", "-152.763, -41.0015, -139.602, 0.15", "-161.752, -44.2008, -145.027, 0.15", "-170.132, -49.3585, -149.89, 0.15", "-178.288, -54.7816, -154.846, 0.15", "-185.366, -62.2956, -158.576, 0.15", "-191.997, -69.6185, -163.36, 0.15", "-198.33, -77.0117, -168.43, 0.15", "-204.138, -85.6035, -172.025, 0.15", "-208.987, -95.2342, -174.078, 0.15", "-214.406, -104.352, -176.902, 0.15", "-217.857, -114.527, -179.147, 0.15", "-220.415, -124.35, -183.324, 0.15", "-220.933, -134.931, -186.197, 0.15", "-223.602, -145.287, -188.668, 0.15", "-226.8, -155.753, -189.506, 0.15", "-229.364, -166.158, -191.883, 0.15", "-233.646, -175.926, -194.476, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-88.4123, -34.0307, -99.7447, 0.59", "-93.2564, -34.6128, -107.132, 0.15", "-97.7444, -35.5086, -114.711, 0.15", "-102.973, -37.0667, -121.683, 0.15", "-107.556, -39.8489, -128.728, 0.15", "-111.615, -41.8118, -136.347, 0.15", "-114.154, -44.7553, -144.301, 0.15", "-117.675, -46.1004, -152.312, 0.15", "-121.695, -47.1436, -160.131, 0.15", "-125.859, -48.6292, -167.801, 0.15", "-128.673, -51.2649, -175.771, 0.15", "-131.765, -55.5415, -182.879, 0.15", "-134.405, -58.8588, -190.651, 0.15", "-136.381, -61.7457, -198.784, 0.15", "-138.402, -64.5262, -206.942, 0.15", "-139.639, -66.6957, -215.436, 0.15", "-142.132, -68.0785, -223.818, 0.15", "-145.576, -68.8864, -231.934, 0.15", "-147.589, -70.9904, -240.294, 0.15", "-150.573, -73.9678, -248.079, 0.15", "-154.654, -77.1718, -255.253, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-85.0587, -135.365, -2.88894, 0.15", "-92.2578, -146.643, -2.0632, 0.15", "-98.023, -158.598, -0.179351, 0.15", "-102.764, -171.082, 0.998381, 0.15", "-107.977, -182.934, 4.47085, 0.15", "-112.754, -194.835, 8.3777, 0.15", "-115.197, -207.56, 11.8134, 0.15", "-117.666, -220.717, 12.5328, 0.15", "-120.981, -233.602, 10.891, 0.15", "-125.18, -245.77, 7.14708, 0.15", "-128.507, -257.019, 0.659123, 0.15", "-132.581, -267.137, -7.1354, 0.15", "-137.027, -277.046, -14.9931, 0.15", "-142.924, -285.852, -23.2027, 0.15", "-148.156, -292.464, -33.6245, 0.15", "-153.276, -298.959, -44.1749, 0.15", "-155.891, -306.569, -54.8969, 0.15", "-156.972, -315.261, -65.045, 0.15", "-157.995, -323.769, -75.3543, 0.15", "-161.102, -331.966, -85.4963, 0.15", "-164.946, -339.139, -96.1489, 0.15", "-170.896, -345.727, -106.194, 0.15", "-177.242, -352.08, -116.148, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-85.0587, -135.365, -2.88894, 0.59", "-89.8477, -142.851, -2.26932, 0.15", "-94.4817, -150.46, -2.27117, 0.15", "-100.247, -157.078, -0.746757, 0.15", "-105.754, -163.877, 0.929762, 0.15", "-111.838, -170.09, 2.865, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-49.3593, -104.835, -77.2767, 0.15", "-50.2766, -108.716, -80.6333, 0.15", "-51.8312, -112.856, -83.3928, 0.15", "-53.0681, -116.665, -86.7305, 0.15", "-54.7161, -121.017, -89.0793, 0.15", "-56.5582, -125.66, -90.5693, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-49.3593, -104.835, -77.2767, 0.59", "-52.0667, -108.817, -81.8457, 0.15", "-54.6778, -112.89, -86.3915, 0.15", "-56.7156, -118.168, -89.8623, 0.15", "-58.1363, -124.141, -92.3878, 0.15", "-58.2653, -130.421, -94.5344, 0.15", "-57.7994, -136.772, -96.4065, 0.15", "-56.5297, -142.979, -98.3895, 0.15", "-56.0038, -149.533, -99.2971, 0.15", "-54.5539, -155.782, -101.006, 0.15", "-54.202, -162.01, -103.277, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "28.8062, -172.387, 40.5563, 0.22", "28.5649, -173.008, 40.4624, 0.22", "28.2421, -173.839, 40.3369, 0.22", "27.9619, -174.56, 40.2279, 0.22", "27.4619, -175.847, 40.0334, 0.22", "27.2363, -176.428, 39.9456, 0.15", "27.0113, -177.007, 39.8581, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "28.8062, -172.387, 40.5563, 1.18", "29.1931, -173.447, 40.9977, 1.18", "29.6112, -174.672, 41.4641, 0.29", "29.9696, -175.799, 41.8878, 0.15", "30.1583, -176.442, 42.1245, 0.15", "30.3292, -177.074, 42.3509, 0.29", "30.5367, -177.975, 42.6778, 0.66", "30.6993, -178.91, 43.0204, 1.4", "30.8096, -180.297, 43.5198, 0.22", "30.825, -181.262, 43.8602, 0.22", "30.8159, -181.684, 44.0048, 0.22", "30.7781, -182.584, 44.2849, 0.22", "30.7296, -183.36, 44.5075, 0.66", "30.6385, -184.331, 44.7643, 0.15", "30.5178, -185.152, 44.9743, 0.15", "30.3376, -186.154, 45.2324, 0.52", "30.108, -187.395, 45.5635, 0.29", "30.0184, -187.888, 45.6979, 0.15", "29.9285, -188.389, 45.8446, 0.15", "29.7496, -189.304, 46.1065, 0.15", "29.6134, -189.922, 46.2777, 0.29", "29.4339, -190.768, 46.5225, 1.11", "29.2772, -191.629, 46.7803, 1.77", "29.1231, -192.824, 47.1355, 1.77", "29.02, -194.075, 47.5096, 1.33", "28.925, -195.812, 48.0214, 0.15", "28.883, -196.969, 48.3742, 0.22", "28.8605, -197.801, 48.6365, 0.66", "28.845, -198.603, 48.8973, 0.81", "28.8498, -200.093, 49.3942, 0.15", "28.9105, -200.968, 49.6909, 0.22", "29.0284, -201.705, 49.9413, 0.22", "29.2174, -202.651, 50.247, 0.22", "29.3407, -203.204, 50.4168, 0.66", "29.6416, -204.287, 50.7342, 1.4", "30.1899, -205.809, 51.1939, 0.88", "30.5608, -206.758, 51.4877, 0.15", "30.9264, -207.668, 51.763, 0.15", "31.2008, -208.328, 51.9577, 0.22", "31.6239, -209.363, 52.272, 0.29", "31.9204, -210.173, 52.515, 0.15", "32.2129, -211.291, 52.8317, 0.15", "32.2745, -211.68, 52.9415, 0.15", "32.352, -212.498, 53.1936, 0.22", "32.3899, -213.69, 53.58, 0.22", "32.3834, -214.205, 53.7512, 0.22", "32.3672, -215.29, 54.1037, 0.37", "32.3829, -216.397, 54.4728, 0.22", "32.4105, -217.141, 54.7112, 0.88", "32.5323, -218.801, 55.211, 2.06", "32.7459, -220.738, 55.687, 0.59", "32.9462, -222.05, 55.9227, 0.22", "33.1164, -222.915, 56.0105, 0.22", "33.2786, -223.68, 56.0553, 0.22", "33.506, -224.732, 56.0686, 0.59", "33.8564, -226.221, 55.9814, 0.07", "34.0893, -227.122, 55.8181, 0.15", "34.3694, -228.188, 55.5234, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.93631, -53.2572, -4.39875, 0.74", "-3.07039, -55.334, -4.78621, 0.74", "-3.19618, -57.1832, -5.16173, 0.74", "-3.29657, -58.2293, -5.37675, 0.81", "-3.53063, -59.955, -5.74647, 0.88", "-3.70601, -61.064, -5.98686, 0.81", "-3.97093, -62.4962, -6.30515, 1.18", "-4.20546, -63.5609, -6.56662, 1.18", "-4.57796, -64.8657, -6.8912, 1.03", "-5.0356, -66.2505, -7.2538, 1.11", "-5.45026, -67.3334, -7.54124, 0.74", "-5.98716, -68.552, -7.84941, 1.11", "-6.47476, -69.589, -8.09262, 0.81", "-7.05227, -70.812, -8.35355, 0.81", "-7.23171, -71.2583, -8.4364, 0.81", "-7.52254, -72.1995, -8.58186, 0.88", "-7.75266, -73.2417, -8.69286, 0.88", "-8.00676, -74.9625, -8.79506, 1.11", "-8.09442, -75.7834, -8.79687, 1.33", "-8.28061, -77.7692, -8.64953, 0.74", "-8.36306, -78.9473, -8.53865, 0.74", "-8.41101, -80.6792, -8.34345, 0.88", "-8.40495, -81.6982, -8.19543, 1.25", "-8.40131, -82.7495, -7.99719, 1.03", "-8.47898, -84.1549, -7.63584, 0.74", "-8.61711, -95.3053, -7.93622, 0.74", "-9.61738, -106.351, -6.73893, 0.74", "-10.2213, -117.365, -5.07048, 0.74", "-10.4169, -127.894, -1.39047, 0.74", "-9.62295, -138.48, 2.03642, 0.74", "-9.51179, -148.744, 6.40391, 0.74", "-11.3144, -159.324, 9.44569, 0.74", "-10.9647, -170.232, 11.7536, 0.74", "-10.0255, -181.049, 14.3163, 0.74", "-9.18136, -191.924, 16.6506, 0.74", "-8.2418, -202.824, 18.8313, 0.74", "-7.86733, -213.408, 22.3334, 0.74", "-9.5819, -223.332, 27.1313, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.93631, -53.2572, -4.39875, 1.03", "-2.90645, -53.8883, -4.06811, 1.03", "-2.87234, -54.8224, -3.62779, 1.03", "-2.85572, -55.5438, -3.35526, 1.03", "-2.81704, -56.6104, -3.02244, 1.03", "-2.75826, -57.5107, -2.7927, 0.96", "-2.69199, -58.1482, -2.64707, 0.96", "-2.61121, -58.6835, -2.55318, 0.96", "-2.29458, -60.1389, -2.36678, 0.88", "-2.02865, -60.9994, -2.28246, 0.88", "-1.54959, -62.1146, -2.17543, 0.88", "-0.930995, -63.2145, -2.05273, 0.81", "-0.412527, -63.9563, -1.94512, 0.81", "0.00997759, -64.4581, -1.84382, 0.81", "0.656761, -65.1015, -1.67467, 0.88", "1.32853, -65.7645, -1.46929, 1.03", "1.7695, -66.2562, -1.30466, 1.03", "2.30345, -67.0113, -1.06506, 0.81", "2.66672, -67.7181, -0.863759, 1.4", "2.83388, -68.1604, -0.751162, 1.92", "3.15478, -69.3414, -0.519247, 1.4", "3.45966, -70.7336, -0.343096, 0.88", "3.65033, -71.7116, -0.273531, 0.88", "3.84027, -72.7313, -0.251375, 1.03", "3.95503, -73.2991, -0.261379, 1.03", "4.1645, -74.2236, -0.30932, 0.81", "4.38402, -75.0754, -0.399025, 1.18", "4.44569, -75.3327, -0.435369, 1.18", "4.52489, -75.8367, -0.503799, 0.74", "4.5227, -76.4932, -0.558547, 0.44", "4.46214, -76.8843, -0.568028, 0.44", "4.3043, -77.4594, -0.551433, 0.66", "4.05137, -78.223, -0.51632, 0.81", "3.81784, -78.9141, -0.484688, 0.96", "3.4594, -79.9953, -0.438417, 1.33", "3.23287, -80.7098, -0.411041, 0.88", "3.03071, -81.4116, -0.37811, 1.11", "2.81984, -82.2338, -0.318866, 1.18", "2.63414, -83.0147, -0.244231, 1.18", "2.3806, -84.1052, -0.118483, 0.52", "2.1348, -85.2365, 0.0455804, 0.52", "1.95645, -86.0805, 0.180987, 0.74", "1.79709, -86.8662, 0.315704, 0.96", "1.65709, -87.6013, 0.434098, 1.62", "1.52777, -88.3352, 0.536004, 1.62", "1.38452, -89.2523, 0.633504, 1.33", "1.28847, -90.0054, 0.680516, 0.44", "1.22179, -90.4524, 0.685972, 0.59", "1.05054, -91.289, 0.6819, 0.59", "0.808044, -92.1871, 0.683926, 0.88", "0.570257, -92.8784, 0.693213, 1.25", "0.396246, -93.2991, 0.7093, 2.21", "-0.0486969, -94.2803, 0.784788, 1.84", "-0.575893, -95.3877, 0.908822, 1.33", "-1.06281, -96.4013, 1.07075, 0.66", "-1.30058, -96.934, 1.16591, 0.44", "-1.53462, -97.5074, 1.27145, 0.44", "-1.75644, -98.1205, 1.38266, 0.81", "-1.97397, -98.9014, 1.50742, 1.11", "-2.15003, -99.7729, 1.61468, 0.74", "-2.30285, -100.716, 1.7096, 0.37", "-2.41439, -101.443, 1.76428, 0.37", "-2.49136, -101.902, 1.79481, 0.74", "-2.62624, -102.597, 1.84395, 0.88", "-2.8511, -103.613, 1.93634, 0.44", "-2.98032, -104.084, 2.0028, 0.44", "-3.13739, -104.535, 2.11402, 0.59", "-3.35867, -105.032, 2.28946, 0.96", "-3.57149, -105.436, 2.47294, 1.25", "-3.81304, -105.856, 2.70825, 1.25", "-4.09216, -106.358, 3.02262, 0.81", "-4.25996, -106.759, 3.26137, 1.11", "-4.41699, -107.454, 3.57879, 0.22", "-4.44333, -107.774, 3.66849, 0.22", "-4.45367, -108.282, 3.768, 0.22", "-4.46291, -108.741, 3.83123, 0.74", "-4.48121, -109.203, 3.88298, 1.18", "-4.55747, -110.255, 4.00228, 0.66", "-4.66546, -111.164, 4.12784, 0.37", "-4.85219, -111.961, 4.27158, 0.66", "-5.06095, -112.626, 4.43185, 0.66", "-5.23771, -113.133, 4.5873, 1.25", "-5.40777, -113.611, 4.772, 2.06", "-5.64142, -114.315, 5.0995, 2.21", "-6.02064, -115.632, 5.75865, 1.03", "-6.20349, -116.386, 6.13011, 0.59", "-6.35411, -117.172, 6.47366, 0.37", "-6.43846, -117.755, 6.70576, 0.66", "-6.50528, -118.463, 6.96368, 0.37", "-6.52958, -119.23, 7.23203, 0.29", "-6.51465, -119.73, 7.39259, 0.52", "-6.49949, -120.598, 7.66353, 0.22", "-6.48173, -121.041, 7.84499, 0.22", "-6.43527, -121.522, 8.11517, 0.29", "-6.35931, -121.962, 8.4569, 0.96", "-6.27134, -122.385, 8.84986, 1.77", "-6.18442, -122.803, 9.23718, 1.77", "-5.9936, -123.776, 10.0374, 0.29", "-5.91743, -124.204, 10.3027, 0.29", "-5.86586, -124.583, 10.4646, 0.29", "-5.80694, -125.163, 10.614, 0.29", "-5.77046, -125.93, 10.7126, 0.29", "-5.79297, -126.829, 10.737, 0.29", "-5.84043, -127.273, 10.7231, 0.29", "-5.96651, -127.931, 10.7012, 0.29", "-6.17681, -128.7, 10.7021, 0.29", "-6.44318, -129.5, 10.7523, 0.29", "-6.62817, -130.0, 10.8069, 1.03", "-6.86127, -130.583, 10.8924, 1.92", "-7.25785, -131.564, 11.0564, 3.02", "-7.69528, -132.664, 11.265, 2.36", "-8.18624, -133.929, 11.5313, 0.22", "-8.35462, -134.398, 11.6406, 0.22", "-8.55504, -135.033, 11.8006, 0.22", "-8.63149, -135.315, 11.8745, 0.52", "-8.73235, -135.779, 12.0068, 0.96", "-8.86311, -136.461, 12.2029, 0.44", "-9.01959, -137.314, 12.4374, 0.22", "-9.11664, -137.862, 12.5792, 0.37", "-9.22571, -138.506, 12.7338, 0.81", "-9.3309, -139.069, 12.8624, 0.96", "-9.49802, -139.834, 13.015, 1.25", "-9.66806, -140.565, 13.1324, 0.66", "-9.74239, -140.908, 13.1722, 0.22", "-9.8806, -141.66, 13.2382, 0.22", "-9.92796, -142.016, 13.2682, 0.44", "-10.0153, -142.93, 13.3537, 0.22", "-10.0438, -143.564, 13.4347, 0.22", "-10.0555, -144.327, 13.5627, 0.29", "-10.068, -144.956, 13.6804, 0.52", "-10.0819, -145.608, 13.8044, 0.52", "-10.1141, -146.298, 13.9376, 0.52", "-10.1705, -146.95, 14.064, 1.18", "-10.2542, -147.552, 14.1766, 2.43", "-10.4429, -148.585, 14.3662, 1.33", "-10.6167, -149.421, 14.5062, 0.59", "-10.7652, -150.102, 14.609, 0.81", "-10.8932, -150.692, 14.6922, 0.15", "-10.98, -151.084, 14.7439, 0.15", "-11.0166, -151.282, 14.7715, 0.15", "-11.0598, -151.529, 14.8151, 0.22", "-11.1632, -152.003, 14.9101, 0.37", "-11.3205, -152.554, 15.0027, 0.37", "-11.5415, -153.143, 15.0649, 0.22", "-11.8438, -153.775, 15.0945, 0.22", "-12.0559, -154.138, 15.0879, 0.22", "-12.2909, -154.474, 15.0677, 0.74", "-12.6696, -154.958, 15.0198, 1.77", "-13.1218, -155.506, 14.9503, 2.21", "-13.4583, -155.899, 14.9149, 2.21", "-14.1971, -156.745, 14.8746, 0.37", "-14.6588, -157.309, 14.8795, 0.37", "-15.0115, -157.793, 14.916, 0.22", "-15.3028, -158.249, 14.9921, 0.22", "-15.6364, -158.812, 15.1293, 0.22", "-15.8235, -159.142, 15.2357, 0.81", "-16.1033, -159.64, 15.4661, 1.25", "-16.4376, -160.205, 15.7996, 0.88", "-16.8331, -160.804, 16.2048, 0.22", "-17.0383, -161.108, 16.4139, 0.22", "-17.261, -161.477, 16.6342, 0.22", "-17.4776, -161.933, 16.8768, 0.22", "-17.6477, -162.535, 17.1212, 0.44", "-17.7376, -163.11, 17.2886, 1.47", "-17.8124, -163.739, 17.4135, 1.47", "-17.9139, -164.53, 17.524, 0.44", "-18.0129, -165.269, 17.5941, 0.96", "-18.1881, -166.344, 17.6562, 0.22", "-18.295, -166.914, 17.6836, 0.22", "-18.496, -167.779, 17.7303, 0.22", "-18.6849, -168.423, 17.757, 0.22", "-18.8502, -168.894, 17.7694, 0.22", "-19.0785, -169.455, 17.7754, 0.22", "-19.4084, -170.202, 17.7927, 0.22", "-19.6034, -170.67, 17.8098, 0.81", "-19.8807, -171.395, 17.8471, 1.77", "-20.1348, -172.1, 17.9042, 1.18", "-20.5904, -173.459, 18.0479, 0.22", "-20.7247, -173.912, 18.1144, 0.22", "-20.9323, -174.692, 18.2686, 0.88", "-21.1547, -175.662, 18.5215, 0.15", "-21.2583, -176.23, 18.7237, 0.15", "-21.3124, -176.786, 18.9586, 0.29", "-21.3083, -177.35, 19.2302, 0.74", "-21.2835, -177.78, 19.4478, 1.4", "-21.2249, -178.424, 19.8038, 0.59", "-21.1392, -179.28, 20.2812, 0.15", "-21.0774, -179.933, 20.6293, 0.15", "-21.0182, -180.523, 20.9323, 0.15", "-20.9443, -181.066, 21.1826, 0.29", "-20.8258, -181.747, 21.4866, 0.96", "-20.6837, -182.496, 21.8175, 0.44", "-20.5684, -183.101, 22.0881, 0.22", "-20.4305, -183.829, 22.4441, 0.22", "-20.2793, -184.527, 22.7987, 0.15", "-20.1337, -185.123, 23.0927, 0.15", "-20.0362, -185.525, 23.2814, 0.15", "-19.959, -185.926, 23.4506, 0.29", "-19.8822, -186.64, 23.6991, 0.44", "-19.8645, -187.343, 23.894, 0.44", "-19.9026, -188.314, 24.1236, 0.44", "-19.9643, -189.118, 24.2628, 0.44", "-20.071, -190.106, 24.3932, 0.88", "-20.1946, -190.876, 24.4668, 1.03", "-20.3636, -191.613, 24.5191, 0.37", "-20.5635, -192.229, 24.5601, 0.15", "-20.8254, -192.823, 24.6112, 0.15", "-21.1038, -193.329, 24.6651, 0.37", "-21.52, -193.957, 24.7489, 0.22", "-21.8678, -194.403, 24.8177, 0.81", "-22.497, -195.088, 24.9346, 1.25", "-23.2726, -195.799, 25.0654, 0.88", "-23.7993, -196.215, 25.1434, 0.22", "-24.3301, -196.598, 25.1957, 0.22", "-24.8597, -196.971, 25.2189, 0.74", "-25.5877, -197.513, 25.1996, 1.47", "-26.164, -197.99, 25.1356, 0.37", "-26.9955, -198.779, 24.9456, 0.22", "-27.5366, -199.396, 24.7405, 0.29", "-27.9535, -200.002, 24.5034, 0.29", "-28.2288, -200.58, 24.2536, 0.29", "-28.4153, -201.219, 23.9693, 0.37", "-28.5527, -202.067, 23.623, 0.22", "-28.6079, -203.021, 23.2817, 0.22", "-28.6077, -203.487, 23.1391, 0.22", "-28.5842, -204.201, 22.9836, 0.37", "-28.5682, -204.739, 22.9164, 0.59", "-28.5759, -206.026, 22.8442, 0.66", "-28.6201, -206.913, 22.8497, 0.88", "-28.6732, -207.51, 22.9067, 0.88", "-28.8089, -208.581, 23.0581, 0.52", "-28.9844, -209.742, 23.2618, 0.22", "-29.1539, -210.907, 23.5205, 0.22", "-29.2223, -211.384, 23.6493, 0.81", "-29.4146, -212.65, 24.024, 1.25", "-29.5082, -213.378, 24.242, 1.03", "-29.5558, -213.848, 24.3794, 1.03", "-29.6312, -215.002, 24.7356, 0.22", "-29.663, -215.854, 25.0002, 0.22", "-29.6965, -216.428, 25.162, 0.22", "-29.7892, -217.362, 25.3829, 0.22", "-29.8815, -217.895, 25.5029, 0.22", "-30.1368, -218.875, 25.6955, 0.22", "-30.3955, -219.528, 25.7956, 0.74", "-30.7039, -220.153, 25.8635, 1.11", "-30.9697, -220.616, 25.8761, 1.11", "-31.5557, -221.494, 25.8174, 0.74", "-32.0066, -222.126, 25.6962, 1.4", "-32.7139, -223.089, 25.3886, 0.66", "-33.1921, -223.761, 25.1186, 0.07", "-33.7668, -224.616, 24.7429, 0.07", "-34.1405, -225.197, 24.4778, 0.22", "-34.5415, -225.887, 24.1702, 0.22", "-34.8079, -226.376, 23.9721, 0.44", "-35.1248, -227.02, 23.7554, 0.44", "-35.5488, -227.89, 23.5933, 0.44", "-35.8277, -228.458, 23.5882, 0.22", "-36.2216, -229.256, 23.6845, 0.15", "-36.4722, -229.701, 23.8013, 0.37", "-36.6622, -229.976, 23.9154, 0.37", "-37.1685, -230.623, 24.2705, 0.15", "-37.6557, -231.176, 24.6402, 0.15", "-37.8182, -231.34, 24.7623, 0.52", "-38.2836, -231.714, 25.0727, 1.03", "-38.9285, -232.173, 25.4505, 0.15", "-39.4121, -232.485, 25.6827, 0.15", "-39.888, -232.778, 25.85, 0.15", "-40.1984, -232.984, 25.9285, 0.59", "-40.8698, -233.483, 26.0584, 0.15", "-41.0901, -233.66, 26.0877, 0.15", "-41.4317, -233.978, 26.1174, 0.66", "-41.7203, -234.282, 26.1398, 0.81", "-42.5042, -235.222, 26.1978, 0.15", "-43.1121, -236.038, 26.2411, 0.15", "-43.6288, -236.811, 26.2764, 0.29", "-44.3347, -237.921, 26.322, 0.22", "-44.9388, -238.924, 26.3609, 0.15", "-45.1837, -239.335, 26.3766, 0.66", "-45.5813, -239.968, 26.3868, 0.81", "-46.0916, -240.694, 26.3798, 0.44", "-46.4078, -241.123, 26.3708, 1.03", "-46.7563, -241.535, 26.3557, 1.25", "-47.7201, -242.559, 26.2964, 0.52", "-48.4791, -243.285, 26.2389, 0.22", "-48.9708, -243.692, 26.1907, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.0742, 29.863, 0.0653666, 0.96", "8.28782, 30.7448, 0.271856, 0.96", "8.8775, 31.1718, 0.374439, 1.03", "9.57404, 31.7277, 0.592939, 1.03", "10.1913, 32.2203, 0.786566, 1.62", "10.7894, 32.6977, 0.974196, 1.33", "11.6292, 33.368, 1.23764, 1.03", "12.2511, 33.8821, 1.45442, 0.96", "13.4063, 34.8693, 1.91771, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.0742, 29.863, 0.0653666, 0.88", "7.80066, 31.4273, 0.0980045, 0.88", "8.66659, 32.9914, 0.195691, 0.81", "9.10249, 33.7177, 0.217362, 0.66", "9.55192, 34.4674, 0.203716, 1.11", "10.1199, 35.4771, 0.137908, 0.74", "10.5159, 36.2247, 0.0552918, 0.52", "11.084, 37.2581, -0.178455, 0.22", "11.3788, 38.0776, -0.465683, 0.29", "11.4202, 38.6477, -0.796975, 0.29", "11.3137, 39.2361, -1.29133, 0.66", "11.2049, 39.5274, -1.60779, 0.66", "10.8487, 40.2107, -2.42198, 0.81", "10.3854, 41.0692, -3.46036, 1.18", "10.0617, 41.7927, -4.27705, 1.03", "9.79902, 42.6506, -5.17037, 0.81", "9.64903, 43.5665, -6.03736, 1.11", "9.59415, 44.8273, -7.12509, 0.88", "9.66135, 45.8834, -7.97114, 0.66", "9.79495, 46.863, -8.68642, 0.66", "9.89529, 47.6968, -9.22906, 0.66", "9.95273, 48.4634, -9.68519, 0.66", "9.99603, 49.3802, -10.2259, 0.81", "10.0178, 50.0772, -10.6685, 1.18", "10.0109, 50.845, -11.1638, 1.18", "9.96223, 52.5541, -12.2132, 0.52", "9.90098, 53.4565, -12.7791, 0.52", "9.85782, 54.1719, -13.2146, 0.52", "9.8528, 54.6901, -13.4951, 1.03", "9.9431, 55.6315, -13.9353, 1.03", "10.2706, 56.7798, -14.3722, 0.66", "12.4591, 65.725, -19.4202, 0.66", "13.8396, 75.1521, -23.8377, 0.66", "13.2208, 84.1731, -29.1789, 0.66", "11.8771, 92.9861, -34.73, 0.66", "10.8526, 101.262, -41.1133, 0.66", "7.82233, 108.937, -47.6094, 0.66", "5.85995, 116.145, -54.9909, 0.66", "4.86361, 123.655, -62.2639, 0.66", "2.72376, 131.724, -68.6354, 0.66", "0.973326, 138.81, -76.1859, 0.66", "1.4664, 146.003, -83.8215, 0.66", "1.26373, 153.369, -91.3051, 0.66", "0.964324, 160.551, -98.9608, 0.66", "1.02817, 167.28, -107.024, 0.66", "0.584666, 172.857, -115.911, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "3.24635, 29.6719, 1.73368, 0.96", "2.36035, 30.2394, 1.69772, 0.96", "1.50771, 30.5859, 1.72247, 0.66", "0.302592, 30.6894, 1.85621, 0.52", "-0.18353, 30.4414, 1.98871, 0.52", "-0.829538, 29.6053, 2.2863, 0.52", "-1.15278, 29.1452, 2.45682, 0.88", "-1.82752, 28.0527, 2.87426, 1.11", "-2.44961, 27.0559, 3.26944, 1.25", "-2.98621, 26.2977, 3.56988, 1.25", "-4.12944, 24.938, 4.08392, 0.66", "-4.80105, 24.259, 4.3231, 0.96", "-5.5529, 23.6239, 4.55554, 1.33", "-6.54583, 22.9249, 4.83308, 1.33", "-8.06782, 22.0114, 5.24556, 1.33", "-9.74633, 21.086, 5.72762, 0.88", "-10.7599, 20.5718, 6.00686, 0.88", "-11.9115, 19.9797, 6.31787, 1.4", "-12.6571, 19.58, 6.53041, 1.55", "-13.8102, 18.9235, 6.89728, 2.06", "-14.697, 18.3477, 7.2855, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.24635, 29.6719, 1.73368, 0.74", "2.96971, 28.6172, 1.59523, 0.74", "2.58026, 27.277, 1.47212, 0.52", "2.22698, 26.109, 1.40586, 0.88", "1.84439, 24.8704, 1.41699, 0.44", "1.5903, 24.0761, 1.46731, 0.44", "1.39336, 23.4798, 1.52575, 0.37", "1.03191, 22.4185, 1.70623, 0.88", "0.702459, 21.3111, 1.96587, 0.44", "0.38821, 20.0928, 2.28099, 0.44", "0.21609, 19.2188, 2.4987, 0.74", "0.11442, 18.5307, 2.6688, 1.11", "-0.0435324, 17.0324, 3.05498, 0.96", "-0.123643, 15.643, 3.45349, 1.18", "-0.15269, 14.4585, 3.84237, 1.18", "-0.168069, 13.1129, 4.33281, 0.88", "-0.171053, 12.0021, 4.78643, 0.66", "-0.172391, 11.1015, 5.20753, 0.66", "-0.171268, 10.1449, 5.68662, 0.66", "-0.17225, 9.05293, 6.25551, 0.66", "-0.164644, 7.80478, 6.88862, 0.66", "-0.174158, 6.03844, 7.66153, 0.52", "-0.178102, 5.08002, 7.99779, 0.52", "-0.168687, 3.41509, 8.43766, 0.52", "-0.153062, 2.26132, 8.63837, 0.52", "-0.120368, 1.07808, 8.76166, 0.52", "-0.0674739, -0.455751, 8.86611, 0.96", "-0.0637199, -1.23678, 8.90327, 1.11", "-0.0867789, -2.03883, 8.93484, 1.11", "-0.212041, -4.01938, 9.03284, 0.44", "-0.304256, -4.9585, 9.07615, 0.44", "-0.555297, -6.63847, 9.18507, 0.66", "-0.776933, -7.78333, 9.26851, 0.52", "-0.918671, -8.37634, 9.2987, 0.88", "-1.05957, -8.89724, 9.31394, 1.33", "-1.3715, -10.059, 9.30822, 0.96", "-1.76817, -11.7254, 9.25642, 0.59", "-1.99921, -12.914, 9.18181, 0.59", "-2.10799, -13.6835, 9.12992, 0.96", "-2.21951, -14.7606, 9.06501, 0.52", "-2.31417, -16.217, 9.00323, 0.22", "-2.3491, -17.1501, 8.99049, 0.29", "-2.39573, -17.9829, 8.99609, 0.29", "-2.46231, -18.6212, 9.01901, 1.03", "-2.61191, -19.5871, 9.06696, 1.84", "-2.93297, -21.0044, 9.16357, 0.74", "-3.38496, -22.4709, 9.29854, 0.29", "-3.95534, -23.8149, 9.46545, 0.29", "-4.32664, -24.5328, 9.57548, 0.29", "-4.59636, -25.0089, 9.65508, 0.88", "-4.96688, -25.6389, 9.76673, 1.47", "-5.36199, -26.3363, 9.88048, 0.88", "-6.23286, -28.1028, 10.1269, 0.22", "-6.49762, -28.781, 10.2006, 0.15", "-6.76429, -29.6343, 10.2881, 0.37", "-6.98909, -30.4002, 10.3753, 0.22", "-7.34553, -31.5462, 10.5265, 0.22", "-7.69098, -32.4973, 10.6728, 0.52", "-7.92509, -33.0283, 10.7734, 0.96", "-8.50475, -34.0042, 11.0077, 1.62", "-9.33997, -35.115, 11.3249, 0.96", "-10.3008, -36.2314, 11.6914, 0.59", "-11.0634, -37.0491, 11.9928, 0.88", "-11.7923, -37.8242, 12.2807, 1.55", "-12.428, -38.5111, 12.5284, 1.55", "-13.3657, -39.6082, 12.8831, 0.37", "-14.1178, -40.617, 13.1976, 0.22", "-14.5347, -41.2441, 13.3876, 0.44", "-15.1046, -42.1947, 13.6637, 1.11", "-15.36, -42.6934, 13.7917, 1.11", "-15.8662, -43.8444, 14.0629, 0.44", "-16.2656, -44.8758, 14.2609, 0.22", "-16.5867, -45.8328, 14.3919, 0.29", "-16.7764, -46.4199, 14.4401, 0.15", "-17.094, -47.4149, 14.4849, 0.29", "-17.2206, -47.8129, 14.493, 0.96", "-17.5254, -48.7473, 14.4922, 1.62", "-18.0227, -50.3303, 14.4641, 2.06", "-18.4881, -51.8779, 14.4508, 1.4", "-18.7074, -52.625, 14.4562, 0.59", "-19.0464, -53.7936, 14.4913, 0.22", "-19.247, -54.5757, 14.5261, 0.22", "-19.4208, -55.3625, 14.5776, 0.66", "-19.5853, -56.2291, 14.6416, 0.74", "-19.7389, -57.1576, 14.7233, 0.22", "-19.9209, -58.1971, 14.8375, 0.15", "-20.0762, -59.0508, 14.9622, 0.22", "-20.1745, -59.6477, 15.0634, 0.66", "-20.2981, -60.3937, 15.2088, 1.25", "-20.4872, -61.4209, 15.4301, 1.47", "-20.7582, -62.6534, 15.7144, 0.88", "-21.0387, -63.7021, 15.9643, 0.22", "-21.271, -64.4256, 16.1383, 0.22", "-21.5268, -65.1232, 16.3025, 0.22", "-21.9903, -66.2204, 16.5506, 0.37", "-22.4372, -67.1638, 16.7422, 0.37", "-22.9359, -68.1584, 16.9267, 0.52", "-23.2389, -68.7565, 17.0344, 0.22", "-23.5185, -69.3375, 17.1415, 0.37", "-23.7535, -69.926, 17.246, 0.74", "-24.0458, -70.9701, 17.4214, 0.22", "-24.2445, -72.0913, 17.5934, 0.22", "-24.355, -72.9924, 17.7125, 0.29", "-24.4387, -73.6634, 17.7925, 0.52", "-24.5638, -74.6301, 17.8973, 1.11", "-24.6779, -75.4842, 17.98, 1.7", "-24.8527, -76.667, 18.0778, 1.33", "-25.0525, -78.0102, 18.1619, 0.22", "-25.1808, -79.0743, 18.224, 0.22", "-25.2203, -79.4423, 18.245, 0.22", "-25.2621, -79.8713, 18.27, 0.29", "-25.3227, -80.5346, 18.3114, 0.52", "-25.389, -81.389, 18.37, 0.22", "-25.4672, -82.1019, 18.4304, 0.22", "-25.5817, -82.6974, 18.4874, 0.22", "-25.7976, -83.3153, 18.5592, 0.81", "-26.0691, -83.8214, 18.6302, 1.47", "-26.3274, -84.1983, 18.6902, 1.47", "-27.0145, -85.0825, 18.841, 0.22", "-27.3975, -85.5634, 18.9239, 0.22", "-27.8488, -86.1736, 19.0239, 0.37", "-28.3981, -86.9924, 19.1495, 0.44", "-28.7553, -87.5682, 19.2341, 0.22", "-28.895, -87.8197, 19.2639, 0.22", "-29.0608, -88.1479, 19.2951, 0.22", "-29.3707, -88.7952, 19.3494, 0.22", "-29.6205, -89.3168, 19.3917, 0.74", "-29.9258, -89.9602, 19.4438, 1.47", "-30.4042, -90.8735, 19.5385, 1.99", "-30.8934, -91.703, 19.662, 1.77", "-31.7449, -92.9789, 19.9059, 0.66", "-32.2512, -93.6573, 20.0633, 0.15", "-32.7928, -94.3348, 20.2358, 0.15", "-33.3749, -95.0545, 20.4215, 0.22", "-33.8877, -95.658, 20.5822, 0.22", "-34.4243, -96.2783, 20.7167, 0.29", "-34.8789, -96.8183, 20.7981, 0.81", "-35.4823, -97.6027, 20.8582, 1.47", "-36.1425, -98.5705, 20.852, 0.52", "-36.6774, -99.563, 20.7644, 0.22", "-37.0124, -100.364, 20.6543, 0.22", "-37.2145, -101.026, 20.5626, 0.22", "-37.2884, -101.367, 20.5132, 0.22", "-37.3718, -101.927, 20.4326, 0.29", "-37.4709, -102.777, 20.3087, 0.74", "-37.5444, -103.421, 20.2104, 1.03", "-37.7642, -104.783, 20.0227, 0.37", "-37.9618, -105.709, 19.9056, 0.88", "-38.1792, -106.596, 19.8031, 1.18", "-38.3897, -107.401, 19.7163, 1.18", "-38.7839, -108.882, 19.591, 0.29", "-39.1562, -110.155, 19.5182, 0.29", "-39.4355, -111.026, 19.5023, 0.37", "-39.6495, -111.632, 19.5252, 0.88", "-39.8715, -112.248, 19.5792, 0.66", "-40.1375, -113.087, 19.6915, 0.22", "-40.3121, -113.769, 19.8116, 0.22", "-40.4541, -114.523, 19.9463, 0.37", "-40.5285, -115.059, 20.0451, 0.66", "-40.6285, -115.905, 20.2103, 1.11", "-40.7494, -116.911, 20.414, 0.66", "-40.8437, -117.545, 20.5458, 0.29", "-40.9873, -118.425, 20.7421, 0.22", "-41.0967, -119.024, 20.8655, 0.29", "-41.297, -120.077, 21.0338, 0.96", "-41.4489, -120.83, 21.1153, 1.03", "-41.7048, -122.13, 21.1899, 0.81", "-41.8901, -123.178, 21.1972, 0.29", "-42.0535, -124.047, 21.1708, 0.22", "-42.234, -124.958, 21.1179, 0.29", "-42.3972, -125.754, 21.0512, 0.74", "-42.5396, -126.455, 20.9884, 0.52", "-42.8819, -127.988, 20.8632, 0.29", "-43.2645, -129.411, 20.7983, 0.29", "-43.6865, -130.701, 20.8288, 0.29", "-43.9488, -131.397, 20.8787, 0.29", "-44.229, -132.071, 20.9427, 1.03", "-44.5173, -132.723, 21.0086, 1.7", "-45.0251, -133.862, 21.1311, 1.4", "-45.7867, -135.571, 21.3313, 0.44", "-46.2363, -136.541, 21.4695, 0.15", "-46.4378, -136.966, 21.5349, 0.37", "-46.7635, -137.644, 21.6312, 0.59", "-47.073, -138.313, 21.7068, 0.59", "-47.644, -139.573, 21.8029, 0.22", "-48.0893, -140.512, 21.8457, 0.22", "-48.4288, -141.206, 21.8764, 0.22", "-48.6958, -141.763, 21.8963, 0.88", "-48.9473, -142.325, 21.9357, 1.47", "-49.295, -143.156, 22.0051, 1.84", "-50.2508, -145.6, 22.2423, 0.22", "-50.3912, -145.98, 22.2761, 0.22", "-50.5736, -146.489, 22.3269, 0.22", "-51.0034, -147.619, 22.4373, 0.22", "-51.308, -148.33, 22.5051, 0.22", "-51.5724, -148.877, 22.546, 0.74", "-52.0714, -149.848, 22.5747, 1.33", "-52.7262, -151.014, 22.5855, 0.22", "-53.1258, -151.674, 22.5783, 0.22", "-53.568, -152.414, 22.5782, 0.22", "-53.8743, -153.011, 22.6277, 0.15", "-54.0765, -153.493, 22.7089, 0.15", "-54.3411, -154.186, 22.9028, 0.37", "-54.4587, -154.527, 23.0257, 0.96", "-54.878, -155.803, 23.5619, 2.14", "-55.3775, -157.283, 24.2506, 0.66", "-55.7647, -158.299, 24.7825, 0.15", "-56.1503, -159.157, 25.292, 0.15", "-56.4058, -159.655, 25.6207, 0.44", "-56.6608, -160.11, 25.939, 1.03", "-57.0956, -160.85, 26.4611, 1.55", "-57.6315, -161.762, 27.1247, 0.44", "-57.9795, -162.407, 27.5363, 0.22", "-58.2182, -162.922, 27.813, 0.22", "-58.5671, -163.732, 28.1868, 0.22", "-58.8924, -164.507, 28.491, 0.29", "-59.2669, -165.404, 28.7734, 0.29", "-59.7448, -166.539, 29.0485, 0.15", "-60.1143, -167.383, 29.2098, 0.22", "-60.523, -168.255, 29.3113, 0.88", "-61.1323, -169.483, 29.3574, 0.74", "-61.5542, -170.275, 29.3281, 0.88", "-61.9988, -171.093, 29.2376, 1.77", "-62.5009, -172.021, 29.0694, 2.29", "-63.2378, -173.447, 28.7019, 0.07", "-63.658, -174.321, 28.404, 0.15", "-63.8997, -174.873, 28.1635, 0.15", "-64.0185, -175.179, 28.0143, 0.15", "-64.188, -175.774, 27.7176, 0.15", "-64.2535, -176.242, 27.5045, 0.15", "-64.3029, -177.074, 27.2185, 0.15", "-64.3129, -177.382, 27.1332, 0.15", "-64.3318, -178.257, 26.9286, 0.66", "-64.3942, -179.846, 26.6064, 0.29", "-64.4625, -180.881, 26.4378, 0.22", "-64.5396, -181.828, 26.318, 0.22", "-64.6406, -182.649, 26.2489, 0.22", "-64.7328, -183.067, 26.2314, 0.59", "-64.8835, -183.466, 26.2357, 0.74", "-65.1152, -183.856, 26.2851, 0.37", "-65.4741, -184.317, 26.3971, 0.15", "-66.232, -185.176, 26.673, 0.15", "-66.6669, -185.625, 26.8419, 0.22", "-67.1112, -186.082, 27.0166, 0.29", "-67.5637, -186.568, 27.2135, 0.22", "-68.1298, -187.239, 27.4839, 0.22", "-68.7353, -188.059, 27.8017, 0.29", "-69.1375, -188.682, 28.0396, 0.29", "-69.648, -189.458, 28.3342, 0.22", "-70.0875, -190.069, 28.5623, 0.37", "-70.529, -190.646, 28.7613, 0.74", "-70.8495, -191.06, 28.8983, 1.03", "-71.4865, -191.897, 29.1701, 0.22", "-72.0536, -192.682, 29.4108, 0.22", "-72.5453, -193.373, 29.6035, 0.15", "-72.9166, -193.921, 29.7327, 0.15", "-73.1743, -194.338, 29.8214, 0.15", "-73.5642, -195.072, 29.94, 0.22", "-74.0777, -196.195, 30.0731, 0.29", "-74.4542, -197.194, 30.1697, 0.74", "-74.8082, -198.326, 30.2855, 0.74", "-75.0576, -199.217, 30.3815, 0.37", "-75.2982, -200.169, 30.4872, 0.37", "-75.4695, -200.9, 30.5872, 1.4", "-75.7206, -201.947, 30.7542, 2.95", "-76.1191, -203.412, 31.031, 1.18", "-76.4942, -204.551, 31.2797, 0.22", "-76.976, -205.865, 31.6134, 0.29", "-77.3443, -206.838, 31.8821, 0.74", "-77.6255, -207.56, 32.0824, 1.33", "-78.1175, -208.651, 32.3816, 0.81", "-78.5717, -209.549, 32.574, 1.18", "-79.315, -211.039, 32.8092, 0.66", "-79.7563, -212.02, 32.9109, 0.29", "-79.9156, -212.405, 32.9357, 0.44", "-80.513, -214.011, 33.0073, 0.29", "-80.9299, -215.214, 33.0255, 0.81", "-81.5425, -216.95, 32.9809, 0.22", "-81.8799, -217.741, 32.9045, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "54.7844, -10.6964, -8.24587, 0.15", "62.6123, -16.1498, -9.51067, 0.15", "70.032, -22.169, -10.6653, 0.15", "77.6217, -27.6412, -12.916, 0.15", "85.4426, -33.1498, -13.9671, 0.15", "93.7799, -37.2614, -16.4569, 0.15", "102.008, -41.4148, -19.2243, 0.15", "109.758, -46.7231, -21.316, 0.15", "116.224, -53.3763, -23.875, 0.15", "123.783, -59.2157, -25.0494, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "54.7844, -10.6964, -8.24587, 0.59", "64.1168, -15.2516, -6.53649, 0.15", "73.3018, -20.1518, -4.99174, 0.15", "82.6047, -24.4239, -2.54829, 0.15", "91.9374, -28.3512, 0.322399, 0.15", "101.432, -32.6655, 1.73996, 0.15", "110.644, -37.5766, 3.0736, 0.15", "119.261, -43.2732, 5.08834, 0.15", "127.451, -49.752, 6.39489, 0.15", "134.92, -56.9806, 8.04499, 0.15", "141.484, -64.5249, 11.3271, 0.15", "148.976, -71.3887, 14.0694, 0.15", "156.499, -78.5897, 15.5913, 0.15", "163.609, -86.2883, 16.5587, 0.15", "171.997, -92.6423, 16.7469, 0.15", "181.897, -96.1643, 17.3416, 0.15", "191.78, -99.6302, 18.3766, 0.15", "202.077, -101.802, 18.2355, 0.15", "212.243, -104.488, 18.6823, 0.15", "222.569, -105.968, 17.2843, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "56.5076, -18.5457, -13.1808, 0.15", "62.3403, -25.5114, -15.6789, 0.15", "67.7068, -33.0642, -17.3935, 0.15", "73.372, -40.1224, -20.0149, 0.15", "77.4413, -48.5732, -20.9144, 0.15", "81.1213, -57.2289, -20.3495, 0.15", "84.7849, -65.9064, -20.6012, 0.15", "89.5363, -73.824, -22.4773, 0.15", "95.3732, -81.1929, -23.1196, 0.15", "100.044, -89.3757, -23.2218, 0.15", "105.693, -96.8967, -22.6636, 0.15", "110.801, -104.806, -22.2847, 0.15", "115.602, -112.861, -23.1989, 0.15", "118.688, -121.648, -24.6313, 0.15", "122.299, -130.336, -25.1561, 0.15", "127.472, -138.186, -24.5265, 0.15", "132.275, -146.196, -25.773, 0.15", "138.222, -153.473, -26.4483, 0.15", "143.734, -161.112, -26.2377, 0.15", "149.051, -168.793, -27.47, 0.15", "154.389, -176.548, -27.8722, 0.15", "159.085, -184.525, -29.6317, 0.15", "163.309, -192.905, -30.4716, 0.15", "167.238, -201.464, -30.1463, 0.15", "171.01, -210.027, -31.2532, 0.15", "175.254, -218.395, -32.1234, 0.15", "178.361, -227.289, -32.2651, 0.15", "181.839, -235.947, -30.9499, 0.15", "186.499, -243.594, -28.0192, 0.15", "191.825, -250.205, -23.9306, 0.15", "197.873, -255.9, -19.4856, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "56.5076, -18.5457, -13.1808, 0.59", "61.2148, -22.6145, -12.8656, 0.15", "66.613, -25.7203, -12.7015, 0.15", "72.1101, -28.633, -12.3678, 0.15", "76.8187, -32.6885, -12.81, 0.15", "81.0791, -37.1735, -13.5492, 0.15", "85.7583, -41.1764, -14.4955, 0.15", "90.8765, -44.5475, -15.615, 0.15", "96.4041, -47.243, -16.6112, 0.15", "102.024, -49.9295, -16.7306, 0.15", "107.339, -53.1433, -16.2444, 0.15", "112.71, -55.9097, -14.7244, 0.15", "117.386, -59.3365, -12.4435, 0.15", "121.204, -63.1512, -9.33159, 0.15", "123.841, -66.9467, -5.15355, 0.15", "126.69, -70.9505, -1.32404, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-111.838, -170.09, 2.865, 0.15", "-118.289, -177.722, 3.65125, 0.15", "-124.152, -185.798, 2.7102, 0.15", "-130.52, -193.54, 2.75046, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-111.838, -170.09, 2.865, 0.59", "-117.572, -177.964, 4.34145, 0.15", "-121.536, -186.775, 6.26688, 0.15", "-125.938, -195.19, 8.8879, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-56.5582, -125.66, -90.5693, 0.15", "-60.561, -135.723, -96.2929, 0.15", "-64.8382, -146.454, -100.367, 0.15", "-68.3424, -156.877, -105.765, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-56.5582, -125.66, -90.5693, 0.59", "-58.816, -133.269, -95.8705, 0.15", "-59.1628, -141.291, -101.033, 0.15", "-60.8179, -149.147, -106.194, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "34.3694, -228.188, 55.5234, 0.15", "35.1356, -228.787, 55.4497, 0.15", "35.4887, -229.063, 55.4157, 0.37", "36.0807, -229.526, 55.3587, 1.18", "36.5116, -229.862, 55.3172, 0.88", "37.2685, -230.454, 55.2444, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "34.3694, -228.188, 55.5234, 0.22", "34.5012, -229.343, 55.2178, 0.22", "34.5843, -230.202, 54.9554, 0.81", "34.6389, -231.036, 54.7037, 1.18", "34.6504, -232.304, 54.3516, 0.22", "34.5657, -233.384, 54.0898, 0.22", "34.4092, -234.455, 53.8605, 0.29", "34.1879, -235.467, 53.6759, 0.66", "33.8763, -236.489, 53.5381, 0.81", "33.4593, -237.597, 53.4449, 0.22", "32.8297, -239.036, 53.4094, 0.22", "32.5127, -239.744, 53.4321, 0.29", "32.208, -240.455, 53.4783, 0.96", "31.9362, -241.153, 53.5474, 1.7", "31.4371, -242.686, 53.7422, 0.52", "31.1015, -244.06, 53.9595, 0.22", "30.9853, -244.783, 54.0978, 0.15", "30.8604, -245.935, 54.3614, 0.22", "30.7808, -246.944, 54.5828, 0.15", "30.7227, -247.802, 54.7679, 0.15", "30.6853, -248.386, 54.8877, 0.15", "30.6511, -249.038, 55.0037, 0.37", "30.5957, -249.884, 55.1027, 0.59", "30.4561, -251.443, 55.1698, 0.07", "30.3454, -252.329, 55.1478, 0.07", "30.2108, -253.293, 55.0854, 0.15", "30.1231, -253.956, 55.0281, 0.66", "30.023, -254.772, 54.9531, 0.74", "29.8801, -256.146, 54.8476, 0.15", "29.805, -257.026, 54.8177, 0.22", "29.7491, -257.745, 54.8017, 0.15", "29.6832, -258.369, 54.7988, 0.81", "29.5872, -259.028, 54.8099, 0.66", "29.375, -260.141, 54.829, 0.15", "29.1704, -261.029, 54.8283, 0.22", "28.8822, -262.136, 54.8106, 0.52", "28.5894, -263.026, 54.8082, 0.59", "28.1823, -264.191, 54.8591, 0.07", "27.8581, -265.114, 54.9326, 0.22", "27.7385, -265.447, 54.9627, 0.22", "27.4645, -266.206, 55.0414, 0.96", "26.9384, -267.646, 55.2212, 0.07", "26.5166, -268.904, 55.4412, 0.07", "26.3386, -269.48, 55.5972, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-9.5819, -223.332, 27.1313, 0.15", "-9.37629, -230.943, 28.6052, 0.15", "-9.96397, -238.575, 29.8507, 0.15", "-10.5495, -246.175, 31.275, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-9.5819, -223.332, 27.1313, 0.59", "-9.89721, -232.422, 28.8432, 0.15", "-11.6382, -241.509, 29.0891, 0.15", "-13.3202, -250.285, 31.4992, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "13.4063, 34.8693, 1.91771, 0.52", "14.2489, 35.4787, 1.95299, 0.52", "15.1778, 35.7448, 2.0286, 0.37", "15.8364, 35.8336, 2.11474, 0.37", "16.1774, 35.871, 2.15738, 0.52", "16.8248, 35.9655, 2.2157, 0.52", "17.8483, 36.1624, 2.26619, 0.44", "18.3634, 36.2481, 2.26397, 0.44", "18.9413, 36.3843, 2.2481, 0.66", "19.4137, 36.5782, 2.23978, 0.66", "19.9628, 36.9335, 2.2422, 0.88", "20.2763, 37.2415, 2.26126, 1.03", "20.8347, 37.9903, 2.35857, 0.52", "21.2199, 38.5847, 2.46519, 0.52", "21.5318, 39.1017, 2.57975, 0.52", "21.8019, 39.5551, 2.70755, 0.52", "22.2564, 40.2777, 2.93062, 0.22", "22.6843, 40.9493, 3.15695, 0.44", "23.1044, 41.6156, 3.38666, 0.74", "23.5618, 42.3568, 3.6067, 1.18", "23.9053, 42.907, 3.74018, 0.88", "24.4846, 43.7791, 3.92828, 0.29", "29.1494, 49.7733, 5.59643, 0.29", "34.1543, 55.5234, 7.13251, 0.29", "38.1179, 61.9523, 8.98507, 0.29", "41.2868, 68.5023, 11.7287, 0.29", "44.1798, 75.2479, 14.2977, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "13.4063, 34.8693, 1.91771, 0.88", "13.9995, 36.2142, 3.29582, 0.88", "14.4595, 37.0843, 4.2056, 0.81", "15.1098, 38.0897, 5.20749, 0.96", "15.9, 39.1263, 6.19144, 1.33", "16.9069, 40.3652, 7.27716, 1.33", "17.5067, 41.0975, 7.89062, 1.33", "18.2103, 41.9565, 8.52885, 1.33", "19.1397, 43.0498, 9.28396, 1.18", "20.0548, 44.0876, 9.97471, 1.03", "20.8627, 44.9866, 10.5999, 0.88", "21.8407, 46.1123, 11.3894, 1.4", "22.9878, 47.536, 12.3713, 0.74", "23.8968, 48.7236, 13.1898, 1.25", "24.8665, 49.9906, 14.0885, 1.77", "26.1741, 51.6477, 15.232, 0.96", "27.328, 53.0339, 16.1222, 0.59", "28.2336, 54.0804, 16.7144, 0.74", "28.9425, 54.8877, 17.1124, 0.96", "30.1917, 56.362, 17.7588, 1.11", "31.0668, 57.4658, 18.2158, 1.4", "31.8192, 58.4902, 18.6403, 1.4", "33.012, 60.1656, 19.4183, 0.96", "33.4756, 60.8728, 19.8015, 0.96", "34.315, 62.3259, 20.7376, 1.18", "34.9014, 63.4927, 21.6413, 1.18", "35.4704, 64.6425, 22.6663, 1.03", "35.8859, 65.3884, 23.3941, 0.96", "36.5192, 66.346, 24.3591, 0.81", "37.3144, 67.3609, 25.3624, 0.74", "38.2802, 68.4242, 26.3582, 0.96", "39.3549, 69.539, 27.3169, 1.25", "40.5973, 70.7993, 28.3112, 1.55", "41.6983, 71.9409, 29.1095, 0.88", "42.9812, 73.3168, 29.8966, 0.59", "43.7572, 74.2316, 30.3164, 0.81", "44.5704, 75.3239, 30.7095, 0.96", "45.4009, 76.5517, 31.1188, 1.33", "46.5821, 78.5289, 31.7169, 1.55", "47.5615, 80.3212, 32.187, 1.7", "48.4843, 82.104, 32.5589, 1.62", "49.5101, 84.1388, 32.8856, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.584666, 172.857, -115.911, 0.15", "0.126197, 182.049, -123.46, 0.15", "1.2953, 191.601, -130.466, 0.15", "0.164896, 201.54, -136.916, 0.15", "-0.732792, 211.786, -142.908, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.584666, 172.857, -115.911, 0.59", "-1.31911, 180.918, -121.812, 0.15", "-3.7063, 188.437, -128.23, 0.15", "-5.7099, 197.509, -132.367, 0.15", "-6.28247, 206.835, -136.383, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-14.697, 18.3477, 7.2855, 0.81", "-12.9936, 19.25, 8.25869, 0.81", "-12.0287, 19.8508, 8.72672, 0.44", "-10.6438, 20.9172, 9.4301, 0.59", "-9.53375, 21.8887, 10.0602, 0.59", "-8.6213, 22.7392, 10.6188, 0.88", "-7.93149, 23.4056, 11.0654, 1.11", "-7.05493, 24.2428, 11.4835, 1.11", "-6.24838, 25.2639, 11.8764, 0.29", "-6.11287, 25.9112, 12.1106, 0.29", "-6.4054, 26.4357, 12.3581, 0.29", "-6.64311, 26.7095, 12.5099, 0.29", "-6.89327, 27.0214, 12.7446, 0.29", "-7.22374, 27.5536, 13.2961, 0.59", "-7.37551, 28.044, 13.9226, 1.11", "-7.47899, 28.8043, 15.0209, 1.84", "-7.49518, 29.4021, 16.009, 1.84", "-7.46191, 30.1333, 17.325, 0.96", "-7.4119, 30.6069, 18.2706, 0.74", "-7.32824, 31.1272, 19.2971, 0.74", "-7.27292, 31.7504, 20.4434, 0.74", "-7.28632, 32.2747, 21.3112, 1.11", "-7.32572, 32.9707, 22.249, 1.47", "-7.35612, 33.7255, 23.1229, 1.47", "-7.36582, 34.76, 24.2021, 0.74", "-7.35295, 36.1469, 25.5547, 0.52", "-7.32885, 36.9046, 26.2759, 0.52", "-7.29759, 37.9436, 27.3092, 0.37", "-7.23135, 38.7193, 28.2481, 0.37", "-7.17232, 38.9048, 28.7012, 0.37", "-7.08499, 38.9392, 29.315, 0.37", "-7.01876, 38.9112, 29.7798, 0.37", "-6.98299, 38.8923, 30.9505, 0.37", "-7.11253, 38.9925, 31.8616, 0.37", "-7.40267, 39.3855, 33.1112, 0.37", "-7.64692, 39.7821, 33.9478, 0.37", "-7.95676, 40.278, 34.782, 0.59", "-8.32187, 40.8754, 35.6157, 0.88", "-9.0041, 42.0622, 36.9344, 0.88", "-9.6086, 43.0935, 37.9154, 0.59", "-10.3746, 44.4137, 38.9972, 0.59", "-10.8041, 45.2518, 39.608, 0.29", "-11.1865, 46.1672, 40.1994, 0.29", "-11.5345, 47.2424, 40.8168, 0.29", "-11.7273, 48.0476, 41.232, 0.96", "-11.8562, 48.8384, 41.6482, 1.84", "-11.9902, 50.0559, 42.2785, 0.37", "-12.1079, 50.9953, 42.7905, 0.81", "-12.3327, 52.1032, 43.4579, 1.55", "-12.6566, 53.2045, 44.2256, 0.22", "-12.9477, 54.03, 44.8344, 0.22", "-13.1784, 54.6108, 45.3035, 0.22", "-13.4076, 55.3442, 45.8994, 0.29", "-13.534, 56.0566, 46.4407, 0.29", "-13.5841, 56.8883, 47.0406, 0.59", "-13.5506, 58.1121, 47.9296, 1.77", "-13.4813, 58.9808, 48.5593, 2.14", "-13.2422, 60.5965, 49.7283, 0.29", "-13.0821, 61.3635, 50.2714, 0.29", "-12.9203, 62.1095, 50.7858, 0.29", "-12.8166, 62.5311, 51.0807, 0.29", "-12.6702, 63.112, 51.5306, 0.88", "-12.4858, 63.8235, 52.1425, 1.62", "-12.3185, 64.3953, 52.7058, 1.62", "-12.0534, 65.1364, 53.4302, 2.21", "-11.2714, 66.8955, 55.1188, 0.22", "-10.9094, 67.6083, 55.7871, 0.22", "-10.6454, 68.0834, 56.2348, 0.22", "-10.3592, 68.5629, 56.6777, 0.22", "-9.78764, 69.4536, 57.4684, 0.44", "-9.06863, 70.434, 58.3033, 0.66", "-8.95261, 70.5963, 58.4258, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-14.697, 18.3477, 7.2855, 0.96", "-14.386, 17.5548, 7.84662, 0.96", "-14.0425, 16.7267, 8.41912, 0.37", "-13.9703, 16.4137, 8.58891, 0.29", "-13.9092, 15.8232, 8.83441, 0.22", "-13.9192, 15.4235, 8.98231, 0.22", "-13.9868, 14.7977, 9.19963, 0.52", "-14.1331, 14.0367, 9.44751, 0.74", "-14.4751, 12.9823, 9.7361, 0.52", "-14.7608, 12.2159, 9.92549, 1.11", "-15.2091, 11.0443, 10.211, 1.62", "-15.599, 10.0033, 10.4558, 1.33", "-16.1152, 8.53328, 10.8009, 1.11", "-16.7845, 6.52074, 11.2767, 0.44", "-17.1189, 5.45657, 11.5238, 0.44", "-17.4629, 4.35265, 11.7651, 0.44", "-17.7371, 3.47002, 11.9329, 0.96", "-18.1386, 2.1954, 12.1627, 1.47", "-18.6379, 0.721644, 12.4074, 1.7", "-19.2594, -0.909495, 12.6831, 1.7", "-19.9336, -2.34603, 12.9364, 1.7", "-20.6715, -3.67415, 13.1769, 0.59", "-21.4353, -4.89321, 13.4236, 0.44", "-22.1748, -5.97169, 13.6758, 0.44", "-22.6271, -6.59364, 13.8649, 0.44", "-23.3133, -7.51781, 14.2548, 0.44", "-23.5344, -7.83924, 14.4405, 0.44", "-23.7268, -8.2559, 14.7144, 0.44", "-23.8956, -8.91585, 15.1342, 0.44", "-23.9877, -9.35604, 15.3961, 0.88", "-24.2424, -10.4023, 15.9452, 1.4", "-24.4778, -11.122, 16.2879, 1.4", "-24.9922, -12.2732, 16.7887, 0.66", "-25.4517, -13.1187, 17.1204, 0.22", "-25.9484, -13.9422, 17.441, 0.22", "-26.2408, -14.4138, 17.6333, 1.03", "-26.737, -15.223, 17.9791, 2.36", "-27.2777, -16.169, 18.4149, 2.65", "-28.1451, -17.8599, 19.2878, 0.81", "-28.476, -18.8133, 19.7944, 0.22", "-28.5731, -19.2821, 20.0511, 0.22", "-28.6255, -19.7314, 20.3076, 0.66", "-28.6448, -20.2867, 20.6408, 0.66", "-28.6337, -20.6326, 20.8658, 0.66", "-28.5464, -21.5844, 21.5536, 0.22", "-28.5441, -22.0703, 21.8956, 0.22", "-28.578, -22.2933, 22.0558, 0.22", "-28.703, -22.6631, 22.3258, 0.22", "-28.9461, -23.1636, 22.6724, 0.22", "-29.0796, -23.3741, 22.8043, 0.22", "-29.4632, -23.8702, 23.0739, 0.22", "-29.6949, -24.1628, 23.1928, 0.29", "-30.2874, -24.9235, 23.4271, 0.29", "-30.569, -25.3264, 23.5292, 0.59", "-31.033, -26.0792, 23.6969, 0.88", "-31.4322, -26.834, 23.8706, 0.66", "-31.8245, -27.8198, 24.1206, 0.22", "-31.9514, -28.2945, 24.2656, 0.22", "-32.1712, -29.4691, 24.6979, 0.59", "-32.3012, -30.4572, 25.1114, 1.03", "-32.4048, -31.4367, 25.5465, 1.62", "-32.5536, -32.7513, 26.1658, 0.59", "-32.7505, -34.0964, 26.7875, 0.22", "-32.9477, -35.0287, 27.2112, 0.52", "-33.1197, -35.5773, 27.4624, 1.25", "-33.5035, -36.4701, 27.8852, 2.14", "-33.9559, -37.2738, 28.2662, 1.33", "-34.6842, -38.3141, 28.7979, 0.52", "-35.114, -38.894, 29.1197, 0.22", "-35.571, -39.5463, 29.5175, 0.44", "-35.9124, -40.0697, 29.8781, 0.44", "-36.1994, -40.6178, 30.266, 0.22", "-36.4196, -41.1623, 30.5851, 0.22", "-36.6617, -41.8477, 30.9326, 0.22", "-36.82, -42.3367, 31.1267, 0.52", "-37.0427, -43.0285, 31.3416, 0.74", "-37.4889, -44.14, 31.6587, 0.81", "-38.0355, -45.0839, 31.9898, 0.22", "-38.519, -45.6216, 32.2427, 0.22", "-38.779, -45.834, 32.3855, 0.22", "-39.185, -46.1508, 32.6411, 0.66", "-39.8773, -46.6885, 33.1533, 1.33", "-40.4397, -47.1646, 33.6375, 1.55", "-40.9826, -47.7347, 34.169, 0.88", "-41.6191, -48.5259, 34.7576, 0.15", "-42.2522, -49.357, 35.2985, 0.29", "-42.5849, -49.821, 35.567, 0.88", "-42.9238, -50.3064, 35.7923, 1.25", "-43.2904, -50.8294, 36.0076, 1.33", "-44.2735, -52.2003, 36.5532, 0.22", "-44.7072, -52.808, 36.7919, 0.74", "-45.1188, -53.3891, 37.0228, 1.25", "-45.7653, -54.4022, 37.4147, 0.44", "-46.1168, -55.1791, 37.7273, 0.22", "-46.2448, -55.6517, 37.9147, 0.22", "-46.3189, -56.3255, 38.1558, 0.96", "-46.3378, -56.7581, 38.3068, 1.55", "-46.3462, -57.6371, 38.6144, 1.33", "-46.3459, -59.6413, 39.3503, 0.15", "-46.3629, -60.1237, 39.5227, 0.37", "-46.4455, -61.0204, 39.8507, 0.15", "-46.5804, -61.7725, 40.1541, 0.15", "-46.7631, -62.4542, 40.4575, 0.52", "-47.022, -63.1788, 40.8049, 1.18", "-47.4147, -64.0467, 41.2517, 2.06", "-47.9453, -65.1496, 41.8488, 0.96", "-48.514, -66.2806, 42.4832, 0.22", "-48.9371, -67.0822, 42.9292, 0.22", "-49.4539, -68.025, 43.4646, 0.22", "-49.7901, -68.6303, 43.8127, 0.22", "-50.2974, -69.5287, 44.3607, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "126.69, -70.9505, -1.32404, 0.15", "134.864, -77.8752, -0.952834, 0.15", "142.122, -85.7504, -0.517619, 0.15", "149.777, -93.254, -0.534358, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "126.69, -70.9505, -1.32404, 0.59", "132.163, -74.8926, -0.236582, 0.15", "137.463, -78.7657, 1.65712, 0.15", "141.683, -83.8536, 3.38241, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "44.1798, 75.2479, 14.2977, 0.15", "51.1654, 81.7373, 14.6267, 0.15", "57.1733, 89.0068, 13.1854, 0.15", "62.1859, 96.3964, 9.82602, 0.15", "66.1162, 104.058, 5.71998, 0.15", "69.5731, 111.049, 0.22414, 0.15", "74.1271, 117.914, -4.58679, 0.15", "78.7678, 125.073, -8.85697, 0.15", "83.3758, 132.18, -13.2474, 0.15", "87.3303, 140.224, -16.5137, 0.15", "89.0316, 149.046, -19.7225, 0.15", "90.5659, 158.431, -20.4907, 0.15", "92.5109, 167.761, -20.0622, 0.15", "92.4926, 177.268, -19.2744, 0.15", "92.6796, 186.648, -17.5429, 0.15", "93.9175, 195.92, -15.6669, 0.15", "94.4494, 205.446, -15.6501, 0.15", "95.4396, 214.899, -16.4751, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "44.1798, 75.2479, 14.2977, 0.59", "45.4816, 85.5032, 19.1718, 0.15", "45.9631, 96.1447, 23.3127, 0.15", "44.7152, 106.106, 28.7745, 0.15", "42.4351, 116.661, 32.519, 0.15", "39.4119, 126.472, 37.5408, 0.15", "36.4604, 136.684, 41.7397, 0.15", "33.1539, 147.147, 44.9346, 0.15", "31.6766, 157.227, 50.1151, 0.15", "29.9408, 167.283, 55.2608, 0.15", "28.5905, 177.913, 59.2357, 0.15", "27.4197, 189.023, 61.6481, 0.15", "25.5834, 199.336, 66.2188, 0.15", "22.7179, 208.085, 72.991, 0.15", "20.2363, 216.174, 80.6747, 0.15", "18.4045, 224.459, 88.3309, 0.15", "18.7395, 233.589, 95.1979, 0.15", "20.5454, 241.717, 103.027, 0.15", "22.0839, 250.648, 109.99, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "49.5101, 84.1388, 32.8856, 0.66", "50.7555, 86.9302, 33.2273, 0.66", "51.4828, 88.3703, 33.4219, 0.66", "52.3841, 90.0976, 33.6588, 0.44", "53.0226, 91.355, 33.8527, 0.37", "53.8227, 93.0301, 34.1442, 0.37", "54.4797, 94.5315, 34.4549, 0.37", "54.792, 95.251, 34.6438, 0.59", "55.3012, 96.5853, 34.9963, 1.11", "55.9588, 98.7638, 35.5105, 0.37", "56.284, 100.521, 35.9547, 0.59", "56.4807, 102.693, 36.5352, 0.37", "56.5751, 104.843, 37.1731, 0.44", "56.6226, 106.018, 37.5602, 0.22", "56.6973, 107.069, 37.9604, 0.22", "57.0361, 109.82, 39.1453, 0.22", "57.3501, 111.263, 39.8439, 0.22", "57.6084, 111.997, 40.2444, 0.44", "58.1621, 113.071, 40.8983, 0.66", "59.1864, 114.551, 41.8579, 0.22", "59.6938, 115.142, 42.2529, 0.22", "60.4057, 115.854, 42.7388, 0.66", "61.0045, 116.44, 43.1691, 1.03", "62.3585, 117.788, 44.166, 0.22", "63.5007, 118.989, 45.0159, 0.66", "64.1814, 119.758, 45.5438, 0.81", "65.6971, 121.528, 46.752, 1.03", "66.8413, 122.886, 47.6873, 0.74", "67.9561, 124.217, 48.6313, 0.37", "68.7711, 125.14, 49.3363, 0.37", "69.4636, 125.907, 49.9349, 0.29", "70.1913, 126.696, 50.5558, 0.29", "70.8081, 127.35, 51.0606, 0.66", "71.7036, 128.297, 51.8216, 1.25", "73.3036, 129.951, 53.1863, 0.29", "73.7967, 130.456, 53.5961, 0.29", "74.8408, 131.564, 54.4265, 0.88", "75.844, 132.707, 55.2026, 0.52", "76.6668, 133.697, 55.8177, 1.11", "77.8102, 135.131, 56.6391, 0.66", "78.8739, 136.53, 57.4228, 0.29", "79.6445, 137.509, 57.9994, 0.59", "81.0392, 139.149, 59.0515, 0.22", "81.6962, 139.852, 59.554, 0.59", "82.6191, 140.762, 60.2567, 1.18", "83.7645, 141.806, 61.1591, 0.22", "84.5317, 142.467, 61.7739, 0.22", "85.1776, 143.016, 62.2907, 0.22", "85.8599, 143.647, 62.8657, 0.22", "86.3089, 144.156, 63.2476, 0.22", "86.8123, 144.885, 63.6666, 0.37", "87.5332, 146.212, 64.2642, 0.37", "87.9821, 147.2, 64.6571, 0.22", "88.4605, 148.417, 65.1164, 0.52", "89.0513, 150.093, 65.7738, 0.52", "89.4367, 151.188, 66.2497, 0.96", "89.8295, 152.213, 66.7643, 1.77", "90.2821, 153.274, 67.3697, 1.77", "90.9462, 154.725, 68.2377, 0.22", "91.4422, 155.737, 68.8519, 0.22", "91.9313, 156.646, 69.4553, 0.22", "92.4492, 157.54, 70.0588, 0.22", "92.9617, 158.349, 70.5868, 0.22", "93.5979, 159.353, 71.1708, 0.22", "94.307, 160.461, 71.7229, 0.22", "94.6764, 161.066, 71.99, 0.66", "95.2211, 161.988, 72.3827, 0.81", "96.0013, 163.361, 72.9851, 0.22", "96.6009, 164.415, 73.4982, 0.22", "97.0862, 165.342, 73.9486, 0.74", "97.6366, 166.563, 74.4858, 0.88", "97.9309, 167.338, 74.796, 1.11", "98.5164, 169.273, 75.5247, 1.11", "98.9422, 171.095, 76.1513, 0.37", "99.3322, 173.151, 76.8531, 0.22", "99.5239, 174.446, 77.303, 0.29", "99.663, 175.629, 77.7412, 0.29", "99.7927, 176.817, 78.2398, 0.37", "99.9604, 177.882, 78.8291, 0.37", "100.15, 178.566, 79.3881, 0.22", "100.453, 179.202, 80.1201, 0.22", "100.947, 179.996, 81.2124, 0.22", "101.476, 180.689, 82.2625, 0.29", "102.287, 181.673, 83.806, 0.22", "102.78, 182.286, 84.7173, 1.4", "103.292, 183.019, 85.6744, 2.21", "103.613, 183.644, 86.3539, 1.7", "103.944, 184.612, 87.2728, 0.96", "104.208, 185.819, 88.396, 0.96", "104.317, 186.517, 89.0791, 1.47", "104.425, 187.227, 89.8283, 1.47", "104.653, 188.565, 91.3377, 0.22", "104.832, 189.392, 92.2841, 0.22", "105.055, 190.281, 93.2476, 0.22", "105.339, 191.171, 94.1399, 0.22", "105.633, 191.925, 94.8632, 0.22", "105.911, 192.508, 95.355, 0.88", "106.405, 193.41, 96.0312, 1.99", "107.186, 194.73, 96.9074, 1.55", "108.172, 196.373, 97.8547, 0.22", "108.908, 197.598, 98.5227, 0.22", "109.918, 199.178, 99.4028, 0.29", "110.559, 200.124, 99.942, 0.59", "111.634, 201.487, 100.745, 0.96", "112.968, 202.935, 101.639, 0.15", "114.119, 204.064, 102.387, 1.18", "115.616, 205.447, 103.348, 1.18", "116.894, 206.575, 104.175, 1.4", "118.745, 208.143, 105.376, 0.22", "119.589, 208.858, 105.918, 0.37", "120.467, 209.647, 106.5, 1.03", "120.852, 210.039, 106.769, 0.88", "121.354, 210.629, 107.177, 0.74", "122.008, 211.48, 107.798, 0.96", "122.806, 212.812, 108.727, 0.22", "123.521, 214.074, 109.551, 0.96", "123.925, 214.731, 109.97, 0.74", "124.634, 215.816, 110.715, 0.22", "125.341, 216.859, 111.464, 0.29", "126.4, 218.372, 112.574, 0.29", "127.162, 219.374, 113.325, 0.29", "128.408, 220.911, 114.441, 0.22", "129.047, 221.68, 114.977, 0.66", "129.58, 222.355, 115.409, 1.55", "129.926, 222.774, 115.675, 1.55", "131.26, 224.277, 116.632, 0.15", "132.312, 225.514, 117.36, 0.15", "133.22, 226.637, 117.951, 0.15", "134.023, 227.63, 118.396, 0.15", "134.766, 228.581, 118.78, 0.15", "135.33, 229.387, 119.083, 0.88", "136.01, 230.46, 119.456, 1.18", "136.803, 231.841, 119.898, 1.18", "137.937, 233.846, 120.537, 0.22", "139.14, 235.921, 121.233, 0.22", "139.874, 237.262, 121.663, 1.18", "140.221, 237.913, 121.874, 1.92", "140.773, 239.001, 122.239, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "49.5101, 84.1388, 32.8856, 0.44", "49.9359, 84.5115, 33.4978, 0.44", "50.3819, 84.918, 34.1528, 0.44", "50.5914, 85.1016, 34.4916, 0.96", "51.0316, 85.466, 35.2778, 1.7", "51.4135, 85.7718, 35.9843, 1.99", "51.9907, 86.2059, 37.0503, 1.11", "52.3965, 86.4695, 37.7657, 0.37", "52.8077, 86.6873, 38.4114, 0.37", "53.3531, 86.9348, 39.1855, 0.37", "53.739, 87.083, 39.6487, 0.37", "54.1414, 87.2194, 40.0701, 0.44", "54.7723, 87.402, 40.6588, 0.96", "55.6158, 87.6169, 41.3727, 1.62", "56.4555, 87.8543, 42.0809, 1.18", "57.5369, 88.2079, 43.0361, 0.29", "58.0586, 88.4006, 43.553, 0.44", "58.4131, 88.5538, 43.9593, 0.59", "58.916, 88.7968, 44.6231, 0.29", "59.535, 89.151, 45.548, 0.29", "60.1975, 89.6066, 46.623, 0.59", "60.639, 89.9855, 47.3532, 1.03", "61.1739, 90.5242, 48.205, 1.7", "61.6879, 91.0969, 48.9918, 1.7", "62.3068, 91.8071, 49.9321, 0.96", "62.6923, 92.2166, 50.4942, 1.33", "63.4223, 92.97, 51.5511, 1.62", "64.0277, 93.5639, 52.3807, 0.52", "64.5062, 94.0195, 53.0165, 0.22", "65.0304, 94.506, 53.6913, 0.22", "65.7221, 95.0959, 54.5322, 0.22", "66.2811, 95.5584, 55.1512, 0.74", "66.8221, 96.0159, 55.6824, 1.33", "67.3388, 96.4931, 56.1077, 1.77", "68.1573, 97.324, 56.6724, 0.44", "68.9499, 98.2114, 57.1378, 0.22", "69.5866, 98.9675, 57.484, 0.66", "70.0836, 99.5495, 57.7622, 0.29", "70.5056, 100.031, 58.0215, 0.29", "70.7594, 100.299, 58.205, 0.22", "71.0787, 100.621, 58.4857, 0.22", "71.5116, 101.042, 58.9395, 0.52", "72.0136, 101.477, 59.5249, 0.88", "72.4591, 101.804, 60.0513, 0.88", "72.9814, 102.164, 60.6563, 0.22", "73.4469, 102.508, 61.192, 0.22", "73.6791, 102.691, 61.4531, 0.52", "74.0948, 103.034, 61.9147, 1.4", "74.6653, 103.479, 62.5329, 1.18", "75.5596, 104.126, 63.4848, 0.22", "76.2421, 104.577, 64.1597, 0.59", "76.7534, 104.903, 64.6571, 0.22", "77.3508, 105.293, 65.2082, 0.88", "78.137, 105.849, 65.8844, 1.55", "78.4508, 106.085, 66.1252, 1.55", "79.5848, 106.965, 66.8661, 0.88", "80.1491, 107.411, 67.1893, 0.44", "80.6745, 107.844, 67.4716, 0.22", "81.2042, 108.272, 67.7603, 0.22", "81.7555, 108.714, 68.0686, 0.37", "82.3467, 109.171, 68.4202, 1.11", "83.0873, 109.729, 68.8985, 1.18", "83.7622, 110.239, 69.3537, 0.29", "84.6724, 110.93, 69.9978, 0.22", "85.1541, 111.309, 70.3632, 0.22", "85.6236, 111.714, 70.7465, 1.11", "85.9388, 112.031, 71.0265, 1.18", "86.5291, 112.756, 71.6007, 0.29", "87.0245, 113.452, 72.1615, 0.29", "87.3078, 113.882, 72.5334, 1.03", "87.6559, 114.405, 73.0663, 1.92", "87.9064, 114.733, 73.4469, 1.92", "88.7573, 115.663, 74.6765, 0.15", "89.2197, 116.084, 75.3279, 0.15", "89.4959, 116.322, 75.7154, 0.37", "89.896, 116.66, 76.2604, 1.11", "90.5699, 117.234, 77.177, 1.47", "91.2238, 117.769, 78.073, 0.44", "91.9098, 118.303, 79.026, 0.22", "92.4492, 118.714, 79.7881, 0.74", "92.859, 119.009, 80.4153, 0.88", "93.5204, 119.367, 81.5466, 0.22", "93.7974, 119.447, 82.1079, 0.22", "94.0546, 119.422, 82.6849, 0.44", "94.2994, 119.321, 83.2663, 0.81", "94.5932, 119.148, 83.9847, 1.03", "95.0751, 118.872, 85.1486, 0.81", "95.4611, 118.682, 86.0925, 0.22", "95.7466, 118.605, 86.7518, 0.22", "96.0079, 118.614, 87.2789, 0.22", "96.5582, 118.785, 88.2509, 0.37", "97.2141, 119.128, 89.2694, 0.22", "97.4789, 119.305, 89.6196, 0.96", "98.0106, 119.689, 90.2116, 1.84", "99.1285, 120.507, 91.2587, 0.22", "99.7041, 120.931, 91.7029, 0.22", "99.9674, 121.139, 91.8613, 0.22", "100.482, 121.598, 92.1008, 0.22", "100.98, 122.09, 92.294, 0.44", "101.646, 122.807, 92.551, 1.18", "102.188, 123.42, 92.7938, 1.62", "102.695, 124.003, 93.0752, 1.7", "103.438, 124.936, 93.5565, 1.25", "104.325, 126.11, 94.2331, 0.29", "104.845, 126.776, 94.7025, 1.03", "105.294, 127.296, 95.1464, 1.47", "106.126, 128.171, 96.0416, 0.22", "106.792, 128.795, 96.7881, 0.88", "107.293, 129.226, 97.3655, 0.44", "108.048, 129.858, 98.2173, 0.22", "108.598, 130.345, 98.8163, 0.22", "109.031, 130.759, 99.2713, 1.03", "109.541, 131.302, 99.7995, 1.47", "109.988, 131.833, 100.231, 1.25", "110.694, 132.754, 100.828, 0.52", "111.5, 133.863, 101.424, 0.37", "111.941, 134.447, 101.722, 1.03", "112.216, 134.77, 101.886, 1.4", "113.116, 135.71, 102.383, 0.96", "113.759, 136.271, 102.726, 0.81", "114.753, 137.016, 103.251, 0.22", "115.373, 137.413, 103.587, 0.22", "115.88, 137.719, 103.896, 0.74", "116.245, 137.946, 104.141, 0.81", "116.909, 138.416, 104.624, 0.22", "117.226, 138.684, 104.855, 0.22", "117.711, 139.125, 105.175, 0.88", "118.465, 139.875, 105.637, 1.33", "119.107, 140.545, 105.976, 1.7", "119.944, 141.463, 106.354, 1.47", "120.883, 142.538, 106.711, 0.22", "121.458, 143.213, 106.902, 0.22", "122.142, 144.05, 107.07, 0.29", "122.622, 144.695, 107.124, 0.15", "122.949, 145.191, 107.114, 0.15", "123.378, 145.937, 107.03, 0.59", "123.758, 146.662, 106.913, 0.37", "124.283, 147.632, 106.74, 0.22", "124.886, 148.648, 106.55, 0.22", "125.206, 149.143, 106.468, 1.11", "125.91, 150.137, 106.306, 0.22", "126.467, 150.862, 106.179, 0.07", "126.99, 151.552, 106.045, 0.07", "127.289, 151.982, 105.967, 0.88", "127.501, 152.348, 105.899, 1.11", "127.82, 153.144, 105.721, 0.81", "128.007, 154.026, 105.507, 0.37", "128.113, 155.312, 105.208, 0.15", "128.097, 156.41, 104.984, 0.15", "128.004, 157.378, 104.81, 0.15", "127.881, 158.296, 104.679, 0.59", "127.639, 159.632, 104.524, 0.29", "127.468, 160.354, 104.455, 0.66", "127.237, 161.198, 104.402, 1.47", "126.847, 162.524, 104.342, 0.22", "126.569, 163.478, 104.312, 0.15", "126.292, 164.505, 104.316, 0.15", "126.109, 165.228, 104.334, 0.44", "125.971, 165.895, 104.356, 0.44", "125.797, 166.909, 104.409, 0.22", "125.735, 167.357, 104.426, 0.15", "125.586, 168.279, 104.389, 0.15", "125.529, 168.633, 104.35, 0.15", "125.426, 169.15, 104.226, 0.44", "125.33, 169.543, 104.098, 0.44", "125.016, 170.69, 103.717, 0.15", "124.786, 171.512, 103.485, 0.22", "124.63, 172.073, 103.343, 0.29", "124.431, 173.01, 103.208, 0.29", "124.347, 173.752, 103.179, 0.74", "124.341, 174.65, 103.24, 0.66", "124.415, 175.45, 103.364, 1.55", "124.492, 175.882, 103.448, 1.55", "124.853, 177.209, 103.749, 0.15", "125.179, 178.151, 103.995, 0.22", "125.529, 179.039, 104.235, 0.22", "125.772, 179.594, 104.39, 0.22", "126.13, 180.332, 104.615, 0.37", "126.87, 181.752, 105.082, 0.22", "127.517, 183.006, 105.495, 0.15", "127.795, 183.596, 105.684, 1.18", "128.102, 184.332, 105.903, 2.21", "128.205, 184.608, 105.977, 2.21", "128.69, 186.203, 106.317, 0.22", "128.966, 187.425, 106.468, 0.22", "129.215, 188.759, 106.526, 0.22", "129.289, 189.205, 106.522, 0.66", "129.343, 189.529, 106.502, 1.25", "129.546, 190.61, 106.392, 1.62", "129.823, 191.906, 106.191, 0.22", "130.19, 193.198, 105.946, 0.22", "130.355, 193.69, 105.833, 0.37", "130.627, 194.421, 105.666, 0.88", "130.841, 194.981, 105.53, 0.88", "131.159, 195.775, 105.295, 0.22", "131.498, 196.673, 104.968, 0.15", "131.719, 197.381, 104.678, 0.15", "131.859, 197.709, 104.493, 0.52", "132.194, 198.385, 104.052, 0.88", "132.609, 199.153, 103.515, 0.22", "132.93, 199.677, 103.128, 0.22", "133.707, 200.939, 102.171, 0.15", "135.039, 203.118, 100.621, 0.22", "135.459, 203.807, 100.171, 0.44", "135.903, 204.55, 99.753, 0.22", "136.365, 205.365, 99.3784, 0.29", "136.717, 206.039, 99.1297, 0.22", "137.249, 207.235, 98.7956, 0.15", "137.41, 207.808, 98.7127, 0.15", "137.694, 208.826, 98.5808, 0.15", "137.844, 209.378, 98.5298, 0.29", "137.979, 209.933, 98.51, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.95261, 70.5963, 58.4258, 0.07", "-9.04595, 70.9513, 58.4322, 0.07", "-9.12321, 71.2818, 58.4568, 0.07", "-9.23658, 71.9121, 58.5487, 0.07", "-9.30675, 72.4415, 58.6315, 0.29", "-9.34305, 72.8569, 58.7022, 0.07", "-9.36654, 73.5286, 58.8203, 0.07", "-9.35584, 73.8599, 58.8882, 0.52", "-9.29792, 74.6907, 59.0755, 1.03", "-9.21921, 75.5903, 59.3031, 0.15", "-9.18998, 75.9559, 59.3974, 0.15", "-9.16439, 76.4134, 59.5084, 0.15", "-9.15009, 76.8314, 59.5909, 0.15", "-9.16163, 77.2083, 59.6624, 0.07", "-9.19186, 77.5045, 59.7206, 0.07", "-9.23456, 77.8856, 59.8031, 0.44", "-9.25826, 78.1038, 59.8567, 0.74", "-9.27192, 78.3451, 59.9282, 0.74", "-9.25659, 79.1281, 60.1968, 0.15", "-9.21845, 79.6005, 60.3711, 0.15", "-9.1503, 80.1774, 60.5874, 0.37", "-9.07424, 80.7146, 60.7918, 1.7", "-8.9884, 81.3073, 61.0052, 1.03", "-8.8621, 82.1037, 61.283, 0.15", "-8.7359, 82.7981, 61.5296, 0.15", "-8.68303, 83.0821, 61.628, 0.66", "-8.61249, 83.4413, 61.7567, 1.03", "-8.47279, 84.0432, 61.9654, 0.15", "-8.28239, 84.763, 62.2139, 0.15", "-8.13184, 85.2469, 62.4, 0.15", "-7.99605, 85.633, 62.554, 0.29", "-7.84848, 86.0405, 62.7122, 0.29", "-7.72799, 86.4262, 62.8446, 0.74", "-7.61976, 86.8882, 62.9904, 0.81", "-7.57026, 87.2095, 63.0798, 0.81", "-7.50125, 88.106, 63.298, 0.15", "-7.51339, 88.5682, 63.4171, 0.74", "-7.65318, 89.5812, 63.6824, 0.15", "-7.79541, 90.0786, 63.8209, 0.15", "-8.0193, 90.5225, 63.9427, 0.15", "-8.23977, 90.8384, 64.0259, 0.29", "-8.69419, 91.3298, 64.1645, 0.15", "-8.85085, 91.4705, 64.2036, 0.52", "-9.40175, 91.8737, 64.3381, 1.4", "-10.4334, 92.5448, 64.5881, 0.15", "-10.7177, 92.7016, 64.6566, 0.15", "-10.8605, 92.7666, 64.6975, 0.15", "-11.4936, 92.9879, 64.9089, 0.81", "-12.1905, 93.1531, 65.1727, 0.15", "-12.4368, 93.1789, 65.2771, 0.15", "-12.797, 93.185, 65.4329, 1.18", "-13.8238, 93.1705, 65.8681, 0.07", "-14.496, 93.1439, 66.1371, 0.07", "-14.8076, 93.1294, 66.2497, 0.59", "-15.1277, 93.1271, 66.3474, 1.77", "-16.1993, 93.1434, 66.6346, 0.07", "-16.6874, 93.1574, 66.7543, 0.07", "-17.0064, 93.1632, 66.8173, 0.37", "-17.3238, 93.1722, 66.8662, 0.52", "-18.0493, 93.1835, 66.9779, 0.07", "-18.7367, 93.1945, 67.0696, 0.07", "-19.0175, 93.1915, 67.0983, 0.07", "-19.2488, 93.1824, 67.1215, 0.29", "-19.7781, 93.1355, 67.1818, 0.66", "-20.4001, 93.0313, 67.2678, 0.07", "-20.8599, 92.9272, 67.3341, 0.29", "-21.2721, 92.8279, 67.3964, 0.88", "-22.145, 92.6344, 67.5538, 0.15", "-22.5933, 92.5413, 67.6506, 0.52", "-23.5351, 92.351, 67.87, 0.07", "-23.8395, 92.2941, 67.9408, 0.59", "-24.2555, 92.2178, 68.0416, 1.47", "-25.238, 92.0517, 68.2868, 0.07", "-25.6094, 91.9915, 68.3835, 0.07", "-26.174, 91.9012, 68.5339, 0.07", "-26.3473, 91.8739, 68.5781, 0.37", "-26.7109, 91.8193, 68.6589, 0.81", "-27.3912, 91.7268, 68.7895, 0.07", "-27.927, 91.6624, 68.8658, 0.07", "-28.1989, 91.6515, 68.8938, 0.44", "-28.4812, 91.6604, 68.9184, 0.88", "-29.2553, 91.7349, 68.9612, 0.15", "-29.666, 91.8007, 68.9681, 0.37", "-29.8911, 91.8469, 68.9613, 0.37", "-30.8124, 92.0321, 68.8968, 0.15", "-31.1141, 92.0888, 68.8716, 0.15", "-31.568, 92.1778, 68.8254, 0.37", "-32.382, 92.3294, 68.7229, 0.07", "-32.9037, 92.4317, 68.6516, 0.29", "-33.3763, 92.53, 68.5889, 0.07", "-33.8444, 92.6355, 68.5267, 0.07", "-34.8452, 92.8722, 68.3904, 0.07", "-36.1726, 93.196, 68.2107, 0.07", "-36.5997, 93.3074, 68.1528, 0.07", "-37.2127, 93.4776, 68.0765, 0.07", "-37.5806, 93.5882, 68.0372, 0.59", "-38.1357, 93.7525, 67.98, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-8.95261, 70.5963, 58.4258, 0.37", "-8.19325, 69.9945, 59.1376, 0.37", "-7.65385, 69.6221, 59.5617, 0.37", "-7.26075, 69.3869, 59.8314, 0.59", "-6.55844, 68.985, 60.2229, 0.22", "-6.03841, 68.6767, 60.4723, 0.22", "-5.67227, 68.4251, 60.6367, 0.15", "-5.31996, 68.1721, 60.8096, 0.15", "-4.85037, 67.7992, 61.017, 0.15", "-4.43356, 67.4125, 61.2001, 0.59", "-4.16591, 67.0891, 61.3255, 0.88", "-3.58046, 66.1916, 61.6404, 0.15", "-3.21446, 65.5109, 61.9081, 0.15", "-3.03899, 65.1173, 62.0607, 0.44", "-2.89687, 64.7302, 62.2088, 0.81", "-2.71106, 64.1422, 62.435, 0.07", "-2.50255, 63.4144, 62.6951, 0.22", "-2.29721, 62.6446, 62.9443, 0.22", "-2.01597, 61.5591, 63.2593, 0.07", "-1.79856, 60.6584, 63.5046, 0.07", "-1.58973, 59.8039, 63.7263, 0.07", "-1.46634, 59.3242, 63.8347, 0.29", "-1.1609, 58.1594, 64.0809, 0.07", "-1.01594, 57.6135, 64.1811, 0.88", "-0.829986, 56.9274, 64.3102, 1.25", "-0.699949, 56.4822, 64.3892, 1.25", "-0.257107, 55.0458, 64.6292, 0.07", "0.037429, 54.0959, 64.779, 0.07", "0.204941, 53.5612, 64.8545, 0.07", "0.302531, 53.2467, 64.8973, 0.52", "0.556151, 52.4029, 65.0034, 0.66", "0.673194, 51.9625, 65.0536, 0.22", "0.813663, 51.3799, 65.1088, 0.52", "0.915768, 50.8882, 65.1436, 0.29", "1.08009, 49.9593, 65.214, 0.07", "1.19658, 49.1501, 65.2794, 0.07", "1.26664, 48.5552, 65.3373, 0.22", "1.30501, 48.1413, 65.3834, 0.22", "1.40044, 46.9909, 65.5176, 0.07", "1.42045, 46.6894, 65.5551, 0.37", "1.43946, 46.3386, 65.6024, 0.59", "1.47413, 45.5192, 65.7235, 0.07", "1.49764, 44.8547, 65.8307, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-50.2974, -69.5287, 44.3607, 0.15", "-51.3917, -69.7591, 44.2534, 0.15", "-52.4589, -69.9716, 44.1267, 0.15", "-53.4304, -70.1589, 43.9863, 0.15", "-54.4248, -70.3477, 43.8314, 0.37", "-55.5204, -70.5494, 43.65, 0.15", "-56.6209, -70.743, 43.46, 0.07", "-57.177, -70.84, 43.3666, 0.22", "-58.8234, -71.1318, 43.0147, 0.15", "-58.9386, -71.1488, 42.9865, 0.59", "-59.6708, -71.2444, 42.8061, 1.11", "-60.0019, -71.2883, 42.7246, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-50.2974, -69.5287, 44.3607, 0.59", "-50.7262, -70.6306, 44.7183, 0.59", "-51.0562, -71.4286, 44.9863, 0.96", "-51.4935, -72.6787, 45.4174, 1.47", "-51.7252, -73.5215, 45.7028, 1.47", "-52.0509, -75.0416, 46.2201, 0.22", "-52.1916, -75.6085, 46.4208, 0.15", "-52.3797, -76.1378, 46.6282, 0.15", "-52.7506, -77.0289, 47.0118, 0.15", "-53.0902, -77.7808, 47.3502, 0.37", "-53.4783, -78.5327, 47.7467, 0.37", "-54.2536, -79.8443, 48.5842, 0.22", "-54.7269, -80.5847, 49.1348, 0.22", "-55.0121, -81.0205, 49.4799, 0.96", "-55.7324, -82.1016, 50.3974, 2.06", "-56.4161, -83.1362, 51.3351, 1.11", "-57.3024, -84.5118, 52.6327, 0.22", "-57.9331, -85.5767, 53.6608, 0.22", "-58.219, -86.0501, 54.1092, 0.22", "-58.459, -86.4263, 54.4573, 0.22", "-58.684, -86.7474, 54.753, 0.22", "-59.0579, -87.2191, 55.1265, 0.22", "-59.5382, -87.73, 55.4609, 0.22", "-60.332, -88.5081, 55.9169, 0.22", "-61.0092, -89.2007, 56.2852, 0.22", "-61.4325, -89.6737, 56.512, 0.66", "-62.2368, -90.6781, 56.9725, 1.11", "-63.3696, -92.1933, 57.6667, 0.29", "-64.3498, -93.5147, 58.2608, 0.22", "-65.172, -94.6171, 58.7599, 0.22", "-65.5649, -95.1201, 58.9703, 0.29", "-66.5567, -96.3701, 59.4625, 0.22", "-67.0065, -96.9341, 59.6799, 0.96", "-67.7804, -97.8897, 60.0364, 1.84", "-69.0918, -99.4536, 60.6128, 0.29", "-70.1926, -100.656, 61.0945, 0.22", "-70.9312, -101.428, 61.4324, 0.22", "-71.3945, -101.914, 61.6556, 0.22", "-71.8092, -102.406, 61.8866, 0.37", "-72.4209, -103.288, 62.2968, 0.52", "-73.0122, -104.387, 62.7372, 0.29", "-73.4488, -105.387, 63.1188, 0.29", "-73.68, -105.988, 63.3133, 0.29", "-74.0967, -107.184, 63.6744, 0.44", "-74.5231, -108.6, 64.0968, 0.52", "-75.0415, -110.599, 64.6691, 0.15", "-75.2753, -111.607, 64.953, 0.59", "-75.688, -113.245, 65.4408, 1.7", "-76.274, -115.229, 66.0893, 0.15", "-76.5957, -116.146, 66.438, 0.44", "-76.8223, -116.767, 66.7026, 0.44", "-77.1643, -117.642, 67.1241, 0.07", "-77.4847, -118.393, 67.4996, 0.07", "-77.7767, -118.949, 67.7896, 0.07", "-78.2409, -119.693, 68.1666, 0.29", "-79.0773, -120.907, 68.7524, 0.52", "-79.6892, -121.77, 69.172, 0.22", "-80.2129, -122.493, 69.5281, 0.22", "-80.8026, -123.284, 69.9322, 0.37", "-81.395, -124.03, 70.3551, 0.74", "-82.319, -125.064, 71.0027, 1.33", "-83.3338, -126.045, 71.6736, 0.22", "-84.1066, -126.728, 72.1532, 0.15", "-84.7114, -127.232, 72.5185, 0.29", "-85.5464, -127.913, 73.0314, 0.15", "-86.2227, -128.44, 73.4238, 0.59", "-86.9501, -128.951, 73.8389, 0.74", "-88.0359, -129.638, 74.3983, 0.07", "-89.0584, -130.256, 74.9135, 0.15", "-89.7878, -130.688, 75.2762, 0.15", "-90.3858, -131.044, 75.5662, 0.15", "-91.0678, -131.446, 75.8681, 0.15", "-92.0299, -132.01, 76.254, 0.29", "-92.8189, -132.448, 76.5271, 0.74", "-93.9976, -133.096, 76.8764, 1.03", "-95.1619, -133.753, 77.1856, 0.29", "-96.7944, -134.692, 77.6335, 0.22", "-97.8027, -135.301, 77.8928, 0.88", "-98.9394, -135.969, 78.1869, 1.33", "-99.9408, -136.533, 78.4332, 1.47", "-101.855, -137.552, 78.8958, 0.22", "-102.856, -138.048, 79.1296, 0.22", "-104.022, -138.609, 79.4193, 1.03", "-105.269, -139.188, 79.7227, 1.55", "-107.064, -140.033, 80.1677, 0.74", "-108.822, -140.925, 80.669, 0.22", "-109.718, -141.447, 80.9471, 0.22", "-110.529, -141.959, 81.1969, 0.22", "-111.461, -142.606, 81.5119, 0.15", "-112.306, -143.312, 81.8282, 0.37", "-113.333, -144.358, 82.2895, 0.15", "-114.013, -145.214, 82.6464, 0.15", "-114.843, -146.417, 83.1666, 0.22", "-115.2, -146.983, 83.4065, 0.15", "-115.717, -147.868, 83.7942, 0.15", "-116.005, -148.431, 84.0571, 0.74", "-116.306, -149.128, 84.4026, 0.88", "-116.813, -150.611, 85.2289, 0.15", "-116.997, -151.181, 85.5594, 0.22", "-117.317, -151.822, 85.9613, 0.22", "-118.006, -152.811, 86.6308, 0.22", "-118.23, -153.077, 86.8221, 0.22", "-118.794, -153.653, 87.247, 0.88", "-119.785, -154.518, 87.8565, 1.84", "-121.39, -155.721, 88.6666, 0.15", "-122.355, -156.414, 89.0612, 0.15", "-123.077, -156.92, 89.2762, 0.29", "-124.12, -157.701, 89.6006, 0.74", "-125.021, -158.434, 89.9118, 1.11", "-125.849, -159.185, 90.2498, 0.52", "-126.98, -160.27, 90.7634, 0.22", "-128.801, -161.875, 91.6103, 0.29", "-130.274, -163.081, 92.3468, 0.15", "-131.098, -163.719, 92.7953, 0.37", "-132.179, -164.488, 93.4283, 1.18", "-133.662, -165.494, 94.4057, 0.44", "-134.979, -166.28, 95.3629, 0.29", "-135.916, -166.804, 96.0982, 0.15", "-136.676, -167.198, 96.6663, 0.88", "-137.799, -167.768, 97.5121, 1.03", "-139.358, -168.535, 98.7546, 0.22", "-140.804, -169.254, 100.063, 0.22", "-141.486, -169.589, 100.727, 0.59", "-142.281, -169.96, 101.511, 0.96", "-143.394, -170.395, 102.596, 0.37", "-144.885, -170.841, 104.037, 0.15", "-146.095, -171.063, 105.17, 0.59", "-146.83, -171.141, 105.851, 1.77", "-148.69, -171.247, 107.571, 0.22", "-149.857, -171.289, 108.671, 0.22", "-150.715, -171.305, 109.444, 0.37", "-151.579, -171.34, 110.155, 0.37", "-152.265, -171.4, 110.695, 0.37", "-153.183, -171.508, 111.447, 0.81", "-153.955, -171.667, 112.156, 0.81", "-155.114, -172.139, 113.389, 0.29", "-155.746, -172.532, 114.216, 0.29", "-156.09, -172.891, 114.921, 0.29", "-156.192, -173.077, 115.314, 0.29", "-156.398, -173.754, 116.933, 0.29", "-156.432, -174.03, 117.606, 0.44", "-156.468, -174.546, 118.854, 0.44", "-156.606, -175.257, 120.579, 0.81", "-156.863, -175.843, 122.074, 0.81", "-157.183, -176.295, 123.233, 0.81", "-157.455, -176.544, 123.898, 0.22", "-158.222, -177.096, 125.425, 0.22", "-159.245, -177.701, 127.079, 0.22", "-160.269, -178.255, 128.497, 0.81", "-161.289, -178.81, 129.761, 0.52", "-162.892, -179.727, 131.51, 0.22", "-163.614, -180.161, 132.191, 0.22", "-164.184, -180.524, 132.612, 0.52", "-165.241, -181.219, 133.125, 0.15", "-165.755, -181.56, 133.245, 0.59", "-167.118, -182.486, 133.317, 0.15", "-168.087, -183.181, 133.154, 0.37", "-169.156, -183.954, 132.856, 0.15", "-170.112, -184.583, 132.492, 0.37", "-170.721, -184.887, 132.157, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "140.773, 239.001, 122.239, 0.96", "141.762, 240.37, 122.747, 0.96", "142.424, 241.394, 123.112, 1.25", "142.998, 242.404, 123.457, 0.66", "143.339, 243.061, 123.674, 0.22", "143.742, 243.868, 123.939, 0.15", "144.006, 244.376, 124.107, 0.37", "144.527, 245.455, 124.456, 0.15", "144.913, 246.203, 124.703, 0.37", "145.221, 246.731, 124.884, 0.88", "145.62, 247.312, 125.062, 0.88", "146.613, 248.529, 125.323, 0.22", "147.314, 249.321, 125.478, 0.22", "148.056, 250.045, 125.602, 0.22", "148.582, 250.508, 125.666, 0.22", "149.731, 251.45, 125.743, 1.25", "150.961, 252.4, 125.72, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "140.773, 239.001, 122.239, 0.29", "140.629, 240.023, 122.595, 0.29", "140.652, 240.535, 122.775, 0.22", "140.714, 240.962, 122.919, 0.66", "140.838, 241.597, 123.121, 0.22", "140.982, 242.218, 123.311, 0.15", "141.116, 242.799, 123.479, 0.15", "141.322, 243.539, 123.665, 0.15", "141.567, 244.323, 123.834, 0.22", "141.812, 245.037, 123.969, 0.29", "142.035, 245.632, 124.07, 0.22", "142.297, 246.236, 124.17, 0.29", "142.739, 247.043, 124.324, 0.22", "143.178, 247.735, 124.471, 0.66", "143.448, 248.13, 124.564, 1.11", "143.788, 248.615, 124.678, 1.18", "144.264, 249.293, 124.828, 0.37", "144.782, 250.04, 124.989, 0.37", "145.179, 250.699, 125.12, 0.22", "145.488, 251.412, 125.245, 0.22", "145.659, 251.948, 125.318, 0.22", "145.765, 252.397, 125.371, 0.59", "145.819, 252.723, 125.413, 1.03", "145.907, 253.451, 125.524, 1.18", "146.058, 254.819, 125.803, 0.44", "146.13, 255.404, 125.942, 0.88", "146.203, 256.061, 126.122, 1.7", "146.279, 256.82, 126.353, 2.29", "146.346, 257.499, 126.575, 2.29", "146.393, 257.997, 126.763, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "146.393, 257.997, 126.763, 0.22", "147.55, 260.377, 127.323, 0.22", "148.093, 261.494, 127.586, 0.22", "148.668, 262.676, 127.864, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "146.393, 257.997, 126.763, 0.29", "147.275, 258.911, 127.497, 0.29", "147.861, 259.519, 127.985, 0.29", "148.451, 260.131, 128.477, 0.29", "148.951, 260.648, 128.893, 0.52", "149.46, 261.176, 129.317, 0.52", "150.301, 262.049, 130.018, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_BTC_c021ea90e3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -12.5959, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -12.5959, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.41376, -13.2391, -4.62612, 1.84 ) }
    dend_58 { pt3dadd( 3.82773, -14.6111, -4.70317, 2.14 ) }
    dend_58 { pt3dadd( 4.09272, -15.4893, -4.75249, 1.92 ) }
    dend_58 { pt3dadd( 4.42966, -16.606, -4.8152, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -13.0559, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -13.0559, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.526286, -14.8327, -1.8639, 1.92 ) }
    dend_35 { pt3dadd( -1.14705, -16.3112, -2.05021, 2.14 ) }
    dend_35 { pt3dadd( -1.53135, -17.2265, -2.16556, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 12.5441, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 12.5441, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.81098, 13.5609, -0.061566, 2.36 ) }
    dend_0 { pt3dadd( 2.17308, 14.8187, -0.129073, 2.36 ) }
    dend_0 { pt3dadd( 2.77462, 16.8393, -0.225827, 2.29 ) }
    dend_0 { pt3dadd( 3.23763, 18.337, -0.306526, 2.21 ) }
    dend_0 { pt3dadd( 3.71231, 19.8186, -0.390117, 2.29 ) }
    dend_0 { pt3dadd( 4.12898, 21.0948, -0.464719, 2.43 ) }
    dend_0 { pt3dadd( 4.60654, 22.5064, -0.552816, 2.36 ) }
    dend_0 { pt3dadd( 5.00772, 23.6102, -0.614497, 2.51 ) }
    dend_0 { pt3dadd( 5.43821, 24.687, -0.675277, 3.17 ) }
    dend_0 { pt3dadd( 5.71779, 25.3496, -0.702882, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475778 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475778 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475778 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.42966, -16.606, -4.8152, 0.88 ) }
    dend_62 { pt3dadd( 3.74899, -16.606, -5.19256, 0.88 ) }
    dend_62 { pt3dadd( 3.09068, -16.666, -5.5492, 0.81 ) }
    dend_62 { pt3dadd( 2.43621, -16.7821, -5.91384, 0.81 ) }
    dend_62 { pt3dadd( 1.68073, -16.9733, -6.34943, 0.96 ) }
    dend_62 { pt3dadd( 0.964726, -17.2074, -6.78239, 1.4 ) }
    dend_62 { pt3dadd( 0.275264, -17.4959, -7.23774, 1.77 ) }
    dend_62 { pt3dadd( -0.333442, -17.7936, -7.66565, 0.44 ) }
    dend_62 { pt3dadd( -0.85798, -18.1222, -8.05339, 0.44 ) }
    dend_62 { pt3dadd( -1.14833, -18.3655, -8.2669, 0.44 ) }
    dend_62 { pt3dadd( -1.37634, -18.6517, -8.46165, 0.66 ) }
    dend_62 { pt3dadd( -1.6435, -19.2009, -8.79958, 1.03 ) }
    dend_62 { pt3dadd( -7.04767, -20.3372, -13.28, 1.03 ) }
    dend_62 { pt3dadd( -11.7403, -21.1353, -18.5634, 1.03 ) }
    dend_62 { pt3dadd( -15.2412, -20.9494, -24.7504, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.42966, -16.606, -4.8152, 1.11 ) }
    dend_59 { pt3dadd( 5.01587, -17.3257, -4.76897, 1.11 ) }
    dend_59 { pt3dadd( 5.53508, -17.9999, -4.68675, 1.25 ) }
    dend_59 { pt3dadd( 5.73607, -18.2744, -4.63807, 1.7 ) }
    dend_59 { pt3dadd( 6.08844, -18.7782, -4.539, 1.77 ) }
    dend_59 { pt3dadd( 6.68927, -19.6411, -4.36958, 1.33 ) }
    dend_59 { pt3dadd( 7.15327, -20.3138, -4.24466, 1.03 ) }
    dend_59 { pt3dadd( 7.50319, -20.8414, -4.12387, 1.03 ) }
    dend_59 { pt3dadd( 7.85134, -21.389, -4.01315, 1.03 ) }
    dend_59 { pt3dadd( 8.14683, -21.8743, -3.9427, 1.33 ) }
    dend_59 { pt3dadd( 8.57541, -22.6221, -3.8896, 1.33 ) }
    dend_59 { pt3dadd( 8.96688, -23.3549, -3.90863, 0.74 ) }
    dend_59 { pt3dadd( 9.35093, -24.1314, -3.99968, 0.74 ) }
    dend_59 { pt3dadd( 9.74928, -24.9272, -4.12838, 0.88 ) }
    dend_59 { pt3dadd( 10.0488, -25.5238, -4.23726, 1.33 ) }
    dend_59 { pt3dadd( 10.2857, -25.9765, -4.30036, 2.06 ) }
    dend_59 { pt3dadd( 10.7872, -26.918, -4.38861, 0.96 ) }
    dend_59 { pt3dadd( 11.2161, -27.6699, -4.41515, 0.74 ) }
    dend_59 { pt3dadd( 11.546, -28.2143, -4.4063, 1.18 ) }
    dend_59 { pt3dadd( 11.7762, -28.5765, -4.36777, 1.55 ) }
    dend_59 { pt3dadd( 12.3768, -29.5038, -4.24149, 0.88 ) }
    dend_59 { pt3dadd( 12.7326, -30.0616, -4.18505, 0.81 ) }
    dend_59 { pt3dadd( 13.2111, -30.8376, -4.16475, 0.88 ) }
    dend_59 { pt3dadd( 13.4692, -31.2843, -4.19379, 1.4 ) }
    dend_59 { pt3dadd( 13.6825, -31.6953, -4.26187, 1.4 ) }
    dend_59 { pt3dadd( 13.9864, -32.3455, -4.42216, 0.81 ) }
    dend_59 { pt3dadd( 14.2621, -32.9914, -4.63309, 0.88 ) }
    dend_59 { pt3dadd( 14.4799, -33.5074, -4.82276, 0.52 ) }
    dend_59 { pt3dadd( 14.6088, -33.8027, -4.94015, 0.96 ) }
    dend_59 { pt3dadd( 14.8484, -34.2896, -5.12057, 1.92 ) }
    dend_59 { pt3dadd( 15.1825, -34.9023, -5.31395, 0.74 ) }
    dend_59 { pt3dadd( 15.5205, -35.4746, -5.46985, 0.74 ) }
    dend_59 { pt3dadd( 15.873, -36.0169, -5.59399, 0.96 ) }
    dend_59 { pt3dadd( 16.2302, -36.5103, -5.70634, 1.55 ) }
    dend_59 { pt3dadd( 16.8768, -37.3161, -5.9129, 0.81 ) }
    dend_59 { pt3dadd( 17.4341, -37.9469, -6.08985, 0.81 ) }
    dend_59 { pt3dadd( 17.9707, -38.5137, -6.26083, 1.25 ) }
    dend_59 { pt3dadd( 18.5022, -39.0579, -6.42821, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 19.2865, -39.8667, -6.64457, 0.81 ) }
    dend_59 { pt3dadd( 19.9561, -40.5911, -6.79783, 0.81 ) }
    dend_59 { pt3dadd( 20.3359, -41.009, -6.8734, 1.18 ) }
    dend_59 { pt3dadd( 20.7742, -41.4641, -6.94495, 1.55 ) }
    dend_59 { pt3dadd( 21.2431, -41.9483, -6.99943, 1.55 ) }
    dend_59 { pt3dadd( 21.8104, -42.5761, -7.04183, 0.59 ) }
    dend_59 { pt3dadd( 22.356, -43.2414, -7.02351, 0.81 ) }
    dend_59 { pt3dadd( 22.7075, -43.7069, -6.96844, 1.33 ) }
    dend_59 { pt3dadd( 23.2325, -44.4346, -6.85634, 0.37 ) }
    dend_59 { pt3dadd( 23.5149, -44.856, -6.76727, 0.22 ) }
    dend_59 { pt3dadd( 26.9464, -49.3964, -7.18835, 0.22 ) }
    dend_59 { pt3dadd( 31.0112, -53.1937, -8.46282, 0.22 ) }
    dend_59 { pt3dadd( 35.4171, -56.813, -8.70094, 0.22 ) }
    dend_59 { pt3dadd( 39.5526, -60.6651, -7.90978, 0.22 ) }
    dend_59 { pt3dadd( 44.1191, -63.8831, -6.74407, 0.22 ) }
    dend_59 { pt3dadd( 48.2024, -67.8355, -6.22217, 0.22 ) }
    dend_59 { pt3dadd( 52.0461, -72.0352, -6.61707, 0.22 ) }
    dend_59 { pt3dadd( 55.7587, -76.2286, -7.71218, 0.22 ) }
    dend_59 { pt3dadd( 59.6971, -80.353, -7.92635, 0.22 ) }
    dend_59 { pt3dadd( 63.299, -84.7591, -8.35068, 0.22 ) }
    dend_59 { pt3dadd( 66.5323, -89.3619, -9.31329, 0.22 ) }
    dend_59 { pt3dadd( 69.3908, -93.9448, -11.1555, 0.22 ) }
    dend_59 { pt3dadd( 72.9046, -97.8686, -13.3519, 0.22 ) }
    dend_59 { pt3dadd( 75.4876, -102.032, -16.2788, 0.22 ) }
    dend_59 { pt3dadd( 78.5115, -106.47, -18.2086, 0.22 ) }
    dend_59 { pt3dadd( 81.0164, -111.473, -19.3312, 0.22 ) }
    dend_59 { pt3dadd( 84.1548, -116.232, -19.6009, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.53135, -17.2265, -2.16556, 0.96 ) }
    dend_47 { pt3dadd( -3.02549, -18.1539, -2.04224, 0.96 ) }
    dend_47 { pt3dadd( -3.84309, -18.6884, -1.98598, 0.96 ) }
    dend_47 { pt3dadd( -4.68003, -19.266, -1.93979, 1.25 ) }
    dend_47 { pt3dadd( -5.12178, -19.5921, -1.92143, 1.25 ) }
    dend_47 { pt3dadd( -5.93645, -20.2192, -1.90551, 0.96 ) }
    dend_47 { pt3dadd( -6.71108, -20.8254, -1.90884, 0.96 ) }
    dend_47 { pt3dadd( -7.39652, -21.3772, -1.92787, 1.47 ) }
    dend_47 { pt3dadd( -8.26383, -22.0165, -1.95872, 1.62 ) }
    dend_47 { pt3dadd( -9.33787, -22.6989, -1.98481, 0.96 ) }
    dend_47 { pt3dadd( -10.2206, -23.1841, -2.0064, 0.96 ) }
    dend_47 { pt3dadd( -11.4711, -23.7619, -2.0266, 1.11 ) }
    dend_47 { pt3dadd( -12.3706, -24.0935, -2.03016, 1.4 ) }
    dend_47 { pt3dadd( -13.9479, -24.5453, -2.02449, 1.33 ) }
    dend_47 { pt3dadd( -15.2543, -24.8405, -2.03056, 0.96 ) }
    dend_47 { pt3dadd( -16.5953, -25.1122, -2.04978, 1.18 ) }
    dend_47 { pt3dadd( -17.2697, -25.2456, -2.06339, 1.18 ) }
    dend_47 { pt3dadd( -18.9914, -25.6169, -2.12098, 0.88 ) }
    dend_47 { pt3dadd( -19.9777, -25.8954, -2.17612, 0.88 ) }
    dend_47 { pt3dadd( -20.6517, -26.1577, -2.24603, 1.03 ) }
    dend_47 { pt3dadd( -21.8924, -26.8074, -2.40372, 1.25 ) }
    dend_47 { pt3dadd( -22.6816, -27.3149, -2.50542, 0.88 ) }
    dend_47 { pt3dadd( -23.438, -27.8879, -2.60228, 0.88 ) }
    dend_47 { pt3dadd( -24.1109, -28.4579, -2.68401, 1.11 ) }
    dend_47 { pt3dadd( -24.8724, -29.0856, -2.77874, 1.25 ) }
    dend_47 { pt3dadd( -25.8735, -29.861, -2.96177, 0.88 ) }
    dend_47 { pt3dadd( -26.6458, -30.4492, -3.20026, 1.03 ) }
    dend_47 { pt3dadd( -27.2078, -30.8947, -3.46621, 1.4 ) }
    dend_47 { pt3dadd( -27.9107, -31.463, -3.93171, 1.18 ) }
    dend_47 { pt3dadd( -28.7964, -32.1422, -4.70815, 1.25 ) }
    dend_47 { pt3dadd( -29.4468, -32.6906, -5.66613, 1.4 ) }
    dend_47 { pt3dadd( -28.9094, -32.7633, -6.84125, 1.4 ) }
    dend_47 { pt3dadd( -28.0971, -32.58, -7.47612, 1.47 ) }
    dend_47 { pt3dadd( -26.3779, -32.0765, -8.4409, 0.52 ) }
    dend_47 { pt3dadd( -25.4143, -31.7803, -8.79638, 0.52 ) }
    dend_47 { pt3dadd( -24.3754, -31.4584, -9.04427, 0.59 ) }
    dend_47 { pt3dadd( -22.5831, -30.9456, -9.26005, 0.59 ) }
    dend_47 { pt3dadd( -21.4714, -30.6621, -9.28864, 0.66 ) }
    dend_47 { pt3dadd( -20.2625, -30.428, -9.21794, 0.74 ) }
    dend_47 { pt3dadd( -18.6308, -30.184, -9.04647, 0.59 ) }
    dend_47 { pt3dadd( -17.3972, -30.0674, -8.87876, 0.88 ) }
    dend_47 { pt3dadd( -15.7267, -29.9902, -8.59395, 0.37 ) }
    dend_47 { pt3dadd( -14.8387, -30.0149, -8.42194, 0.37 ) }
    dend_47 { pt3dadd( -13.9634, -30.1154, -8.20788, 0.37 ) }
    dend_47 { pt3dadd( -21.8913, -36.6629, -10.4174, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.53135, -17.2265, -2.16556, 1.4 ) }
    dend_36 { pt3dadd( -1.42797, -18.1869, -2.03454, 1.4 ) }
    dend_36 { pt3dadd( -1.31382, -19.1746, -1.91599, 1.03 ) }
    dend_36 { pt3dadd( -1.19838, -20.1348, -1.80158, 1.33 ) }
    dend_36 { pt3dadd( -1.06675, -21.2441, -1.66335, 1.25 ) }
    dend_36 { pt3dadd( -0.941529, -22.252, -1.52448, 1.25 ) }
    dend_36 { pt3dadd( -0.822001, -23.2128, -1.37647, 1.11 ) }
    dend_36 { pt3dadd( -0.720546, -24.1371, -1.24185, 1.84 ) }
    dend_36 { pt3dadd( -0.651842, -24.7342, -1.16414, 1.62 ) }
    dend_36 { pt3dadd( -0.510431, -25.8741, -1.00151, 1.18 ) }
    dend_36 { pt3dadd( -0.367091, -27.083, -0.813075, 1.11 ) }
    dend_36 { pt3dadd( -0.229177, -28.2991, -0.615384, 1.25 ) }
    dend_36 { pt3dadd( -0.14552, -29.1032, -0.49023, 1.55 ) }
    dend_36 { pt3dadd( -0.060966, -29.9781, -0.347294, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.71779, 25.3496, -0.702882, 2.88 ) }
    dend_10 { pt3dadd( 5.80825, 26.1783, -0.624073, 2.88 ) }
    dend_10 { pt3dadd( 5.92243, 27.2244, -0.524594, 2.58 ) }
    dend_10 { pt3dadd( 6.05147, 28.4065, -0.412167, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.71779, 25.3496, -0.702882, 1.62 ) }
    dend_1 { pt3dadd( 7.00073, 24.8793, -0.893426, 1.62 ) }
    dend_1 { pt3dadd( 8.49177, 24.1746, -1.04667, 0.96 ) }
    dend_1 { pt3dadd( 9.47315, 23.635, -1.11473, 0.96 ) }
    dend_1 { pt3dadd( 10.5484, 22.9602, -1.16578, 1.11 ) }
    dend_1 { pt3dadd( 11.1224, 22.5672, -1.18178, 1.25 ) }
    dend_1 { pt3dadd( 12.2096, 21.7468, -1.20607, 0.96 ) }
    dend_1 { pt3dadd( 13.4932, 20.5772, -1.19321, 0.81 ) }
    dend_1 { pt3dadd( 14.2033, 19.8895, -1.17487, 0.81 ) }
    dend_1 { pt3dadd( 14.824, 19.3085, -1.16561, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 15.4162, 18.7915, -1.19529, 0.88 ) }
    dend_1 { pt3dadd( 16.4174, 18.0091, -1.29498, 0.74 ) }
    dend_1 { pt3dadd( 17.5003, 17.28, -1.44342, 0.59 ) }
    dend_1 { pt3dadd( 18.4601, 16.7153, -1.58295, 0.74 ) }
    dend_1 { pt3dadd( 19.1356, 16.3446, -1.67202, 0.66 ) }
    dend_1 { pt3dadd( 19.8417, 15.9582, -1.72774, 0.66 ) }
    dend_1 { pt3dadd( 20.8462, 15.3949, -1.75461, 0.96 ) }
    dend_1 { pt3dadd( 21.8744, 14.8205, -1.7236, 1.11 ) }
    dend_1 { pt3dadd( 23.1347, 14.054, -1.63036, 0.81 ) }
    dend_1 { pt3dadd( 24.1388, 13.3708, -1.52802, 0.81 ) }
    dend_1 { pt3dadd( 25.1067, 12.6618, -1.42946, 0.52 ) }
    dend_1 { pt3dadd( 25.7384, 12.1601, -1.39419, 0.52 ) }
    dend_1 { pt3dadd( 26.2197, 11.7408, -1.43477, 0.52 ) }
    dend_1 { pt3dadd( 26.8492, 11.1404, -1.63353, 0.74 ) }
    dend_1 { pt3dadd( 27.596, 10.3854, -2.05054, 0.96 ) }
    dend_1 { pt3dadd( 28.0777, 9.86652, -2.40035, 1.03 ) }
    dend_1 { pt3dadd( 28.6903, 9.18804, -2.90924, 0.81 ) }
    dend_1 { pt3dadd( 29.4599, 8.36801, -3.51418, 0.52 ) }
    dend_1 { pt3dadd( 30.1101, 7.64165, -4.05232, 0.88 ) }
    dend_1 { pt3dadd( 30.4385, 7.27902, -4.32738, 1.11 ) }
    dend_1 { pt3dadd( 31.1278, 6.55634, -4.87152, 0.81 ) }
    dend_1 { pt3dadd( 31.8347, 5.89874, -5.31383, 0.22 ) }
    dend_1 { pt3dadd( 32.7796, 5.17435, -5.67619, 0.15 ) }
    dend_1 { pt3dadd( 40.0405, -0.625447, -6.69018, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -15.2412, -20.9494, -24.7504, 0.15 ) }
    dend_66 { pt3dadd( -20.3272, -21.6184, -29.3836, 0.15 ) }
    dend_66 { pt3dadd( -25.7136, -21.7981, -33.7121, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -15.2412, -20.9494, -24.7504, 0.59 ) }
    dend_63 { pt3dadd( -19.9805, -22.1658, -33.192, 0.15 ) }
    dend_63 { pt3dadd( -24.7904, -22.429, -41.6772, 0.15 ) }
    dend_63 { pt3dadd( -31.4697, -21.3928, -48.7138, 0.15 ) }
    dend_63 { pt3dadd( -39.1887, -21.4014, -54.682, 0.15 ) }
    dend_63 { pt3dadd( -45.8997, -22.2074, -61.7186, 0.15 ) }
    dend_63 { pt3dadd( -52.4587, -24.8666, -68.4349, 0.15 ) }
    dend_63 { pt3dadd( -59.444, -26.724, -74.989, 0.15 ) }
    dend_63 { pt3dadd( -66.0992, -29.3354, -81.6291, 0.15 ) }
    dend_63 { pt3dadd( -73.0015, -32.0169, -87.9828, 0.15 ) }
    dend_63 { pt3dadd( -80.9906, -33.0803, -93.4824, 0.15 ) }
    dend_63 { pt3dadd( -88.4123, -34.0307, -99.7447, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 84.1548, -116.232, -19.6009, 0.15 ) }
    dend_61 { pt3dadd( 90.6032, -123.717, -21.9541, 0.15 ) }
    dend_61 { pt3dadd( 96.6104, -131.856, -22.8557, 0.15 ) }
    dend_61 { pt3dadd( 102.681, -139.968, -22.1565, 0.15 ) }
    dend_61 { pt3dadd( 108.844, -147.936, -20.8635, 0.15 ) }
    dend_61 { pt3dadd( 115.133, -155.911, -20.866, 0.15 ) }
    dend_61 { pt3dadd( 122.313, -163.093, -20.7819, 0.15 ) }
    dend_61 { pt3dadd( 131.081, -168.214, -20.5522, 0.15 ) }
    dend_61 { pt3dadd( 138.457, -175.096, -21.7254, 0.15 ) }
    dend_61 { pt3dadd( 145.684, -182.229, -21.8846, 0.15 ) }
    dend_61 { pt3dadd( 152.352, -189.689, -23.6299, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 84.1548, -116.232, -19.6009, 0.59 ) }
    dend_60 { pt3dadd( 89.0363, -122.728, -19.5686, 0.15 ) }
    dend_60 { pt3dadd( 92.8415, -129.838, -20.5707, 0.15 ) }
    dend_60 { pt3dadd( 95.1296, -137.485, -22.0906, 0.15 ) }
    dend_60 { pt3dadd( 96.649, -145.464, -22.3528, 0.15 ) }
    dend_60 { pt3dadd( 99.0465, -153.11, -23.7019, 0.15 ) }
    dend_60 { pt3dadd( 101.585, -160.785, -24.5306, 0.15 ) }
    dend_60 { pt3dadd( 105.416, -167.782, -26.0758, 0.15 ) }
    dend_60 { pt3dadd( 109.139, -174.705, -28.136, 0.15 ) }
    dend_60 { pt3dadd( 113.069, -181.813, -28.3638, 0.15 ) }
    dend_60 { pt3dadd( 116.154, -189.328, -28.5945, 0.15 ) }
    dend_60 { pt3dadd( 119.78, -196.566, -29.2911, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -21.8913, -36.6629, -10.4174, 0.15 ) }
    dend_53 { pt3dadd( -29.9921, -42.5311, -10.2422, 0.15 ) }
    dend_53 { pt3dadd( -37.2071, -49.4616, -10.2321, 0.15 ) }
    dend_53 { pt3dadd( -43.0202, -57.4202, -8.51228, 0.15 ) }
    dend_53 { pt3dadd( -49.0706, -65.3876, -8.49666, 0.15 ) }
    dend_53 { pt3dadd( -55.3469, -73.0919, -9.65459, 0.15 ) }
    dend_53 { pt3dadd( -59.7345, -82.0728, -10.0821, 0.15 ) }
    dend_53 { pt3dadd( -64.4556, -90.8487, -10.9669, 0.15 ) }
    dend_53 { pt3dadd( -68.607, -99.9305, -10.3546, 0.15 ) }
    dend_53 { pt3dadd( -73.3424, -108.576, -8.64418, 0.15 ) }
    dend_53 { pt3dadd( -77.5966, -117.106, -5.60492, 0.15 ) }
    dend_53 { pt3dadd( -80.8924, -126.281, -3.3613, 0.15 ) }
    dend_53 { pt3dadd( -85.0587, -135.365, -2.88894, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -21.8913, -36.6629, -10.4174, 0.59 ) }
    dend_48 { pt3dadd( -26.298, -42.0725, -15.1255, 0.15 ) }
    dend_48 { pt3dadd( -29.9385, -47.7209, -20.1941, 0.15 ) }
    dend_48 { pt3dadd( -34.3053, -52.867, -25.2237, 0.15 ) }
    dend_48 { pt3dadd( -37.4776, -58.0689, -31.031, 0.15 ) }
    dend_48 { pt3dadd( -39.9129, -63.3134, -37.1477, 0.15 ) }
    dend_48 { pt3dadd( -42.8723, -69.0736, -42.5245, 0.15 ) }
    dend_48 { pt3dadd( -44.6086, -75.1759, -48.0559, 0.15 ) }
    dend_48 { pt3dadd( -46.1914, -81.7471, -53.0721, 0.15 ) }
    dend_48 { pt3dadd( -46.705, -87.6914, -59.0093, 0.15 ) }
    dend_48 { pt3dadd( -47.943, -93.6891, -64.7836, 0.15 ) }
    dend_48 { pt3dadd( -49.0475, -98.9881, -71.2295, 0.15 ) }
    dend_48 { pt3dadd( -49.3593, -104.835, -77.2767, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.060966, -29.9781, -0.347294, 0.44 ) }
    dend_42 { pt3dadd( -1.04036, -32.2668, 1.23867, 0.44 ) }
    dend_42 { pt3dadd( -1.48646, -33.2235, 2.00301, 0.44 ) }
    dend_42 { pt3dadd( -2.03353, -34.5079, 3.25743, 0.44 ) }
    dend_42 { pt3dadd( -2.40656, -35.6207, 4.46286, 0.66 ) }
    dend_42 { pt3dadd( -2.64391, -36.6503, 5.49467, 0.66 ) }
    dend_42 { pt3dadd( -2.74206, -37.3853, 6.1318, 0.44 ) }
    dend_42 { pt3dadd( -2.76452, -38.3722, 6.97197, 0.52 ) }
    dend_42 { pt3dadd( -2.61464, -39.8095, 7.94112, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -2.29008, -41.3861, 8.65356, 0.66 ) }
    dend_42 { pt3dadd( -1.8251, -43.2167, 9.27477, 0.88 ) }
    dend_42 { pt3dadd( -1.34452, -45.0974, 9.78388, 1.11 ) }
    dend_42 { pt3dadd( -0.940253, -46.8752, 10.1691, 0.74 ) }
    dend_42 { pt3dadd( -0.719205, -48.1983, 10.3279, 0.29 ) }
    dend_42 { pt3dadd( -0.605587, -49.5551, 10.358, 0.22 ) }
    dend_42 { pt3dadd( -0.595351, -50.3616, 10.3283, 0.22 ) }
    dend_42 { pt3dadd( -0.671286, -51.4225, 10.2779, 0.22 ) }
    dend_42 { pt3dadd( -0.794057, -52.4225, 10.2123, 0.22 ) }
    dend_42 { pt3dadd( -1.06697, -54.5709, 10.0556, 0.29 ) }
    dend_42 { pt3dadd( -1.21711, -56.2347, 9.93365, 0.52 ) }
    dend_42 { pt3dadd( -1.2563, -57.4105, 9.84442, 0.52 ) }
    dend_42 { pt3dadd( -1.17844, -59.0242, 9.71851, 0.44 ) }
    dend_42 { pt3dadd( -0.878139, -61.4139, 9.55416, 0.29 ) }
    dend_42 { pt3dadd( -0.666898, -62.5804, 9.4982, 0.66 ) }
    dend_42 { pt3dadd( -0.474906, -63.398, 9.5202, 1.77 ) }
    dend_42 { pt3dadd( -0.08741, -64.8787, 9.65237, 1.18 ) }
    dend_42 { pt3dadd( 0.362406, -66.7679, 9.95105, 0.52 ) }
    dend_42 { pt3dadd( 0.73632, -68.5276, 10.3283, 0.52 ) }
    dend_42 { pt3dadd( 0.962552, -69.6663, 10.6243, 0.81 ) }
    dend_42 { pt3dadd( 1.34306, -71.3685, 11.0773, 0.96 ) }
    dend_42 { pt3dadd( 1.72958, -72.8529, 11.5, 0.52 ) }
    dend_42 { pt3dadd( 2.31376, -74.8609, 12.1588, 0.22 ) }
    dend_42 { pt3dadd( 2.62226, -75.8019, 12.5113, 0.29 ) }
    dend_42 { pt3dadd( 3.07797, -77.0347, 13.0343, 0.29 ) }
    dend_42 { pt3dadd( 3.72647, -78.7902, 13.8057, 0.22 ) }
    dend_42 { pt3dadd( 4.16103, -79.9394, 14.3339, 0.37 ) }
    dend_42 { pt3dadd( 4.59677, -81.1257, 14.8956, 0.74 ) }
    dend_42 { pt3dadd( 4.95716, -82.2653, 15.4431, 1.03 ) }
    dend_42 { pt3dadd( 5.22135, -83.556, 16.0423, 1.25 ) }
    dend_42 { pt3dadd( 5.46925, -86.0851, 17.1757, 0.37 ) }
    dend_42 { pt3dadd( 5.5248, -87.5576, 17.8343, 1.18 ) }
    dend_42 { pt3dadd( 5.56321, -88.9176, 18.4007, 2.65 ) }
    dend_42 { pt3dadd( 5.66906, -91.1366, 19.2337, 2.21 ) }
    dend_42 { pt3dadd( 5.8474, -93.2849, 19.9777, 0.96 ) }
    dend_42 { pt3dadd( 6.07479, -95.058, 20.5393, 0.29 ) }
    dend_42 { pt3dadd( 6.28845, -96.3142, 20.9299, 0.29 ) }
    dend_42 { pt3dadd( 6.48265, -97.4863, 21.2914, 0.66 ) }
    dend_42 { pt3dadd( 6.70467, -98.8877, 21.7895, 0.44 ) }
    dend_42 { pt3dadd( 6.89994, -100.134, 22.2741, 0.22 ) }
    dend_42 { pt3dadd( 7.00559, -100.76, 22.5358, 0.22 ) }
    dend_42 { pt3dadd( 7.10935, -101.521, 22.8367, 0.22 ) }
    dend_42 { pt3dadd( 7.22032, -103.073, 23.3999, 0.29 ) }
    dend_42 { pt3dadd( 7.27776, -104.246, 23.7938, 0.29 ) }
    dend_42 { pt3dadd( 7.33428, -105.051, 24.0292, 0.22 ) }
    dend_42 { pt3dadd( 7.41172, -105.979, 24.2487, 0.22 ) }
    dend_42 { pt3dadd( 7.53324, -106.793, 24.4127, 0.81 ) }
    dend_42 { pt3dadd( 7.71286, -107.561, 24.5346, 1.55 ) }
    dend_42 { pt3dadd( 8.23476, -109.219, 24.7756, 1.84 ) }
    dend_42 { pt3dadd( 9.12268, -111.701, 25.1064, 0.15 ) }
    dend_42 { pt3dadd( 9.39418, -112.482, 25.2308, 0.15 ) }
    dend_42 { pt3dadd( 9.62002, -113.134, 25.3417, 0.15 ) }
    dend_42 { pt3dadd( 9.87129, -113.923, 25.4836, 0.15 ) }
    dend_42 { pt3dadd( 10.214, -115.092, 25.6948, 0.88 ) }
    dend_42 { pt3dadd( 10.4853, -116.064, 25.8611, 1.92 ) }
    dend_42 { pt3dadd( 11.0438, -117.993, 26.1221, 1.99 ) }
    dend_42 { pt3dadd( 11.1961, -118.486, 26.1763, 1.99 ) }
    dend_42 { pt3dadd( 11.8455, -120.766, 26.3706, 0.15 ) }
    dend_42 { pt3dadd( 12.0039, -121.397, 26.4054, 0.15 ) }
    dend_42 { pt3dadd( 12.1412, -122.047, 26.4152, 0.37 ) }
    dend_42 { pt3dadd( 12.2462, -122.709, 26.4096, 0.37 ) }
    dend_42 { pt3dadd( 12.4572, -124.279, 26.3951, 0.15 ) }
    dend_42 { pt3dadd( 12.558, -125.254, 26.4125, 0.15 ) }
    dend_42 { pt3dadd( 12.6778, -126.403, 26.4575, 0.22 ) }
    dend_42 { pt3dadd( 12.7361, -127.073, 26.5124, 0.22 ) }
    dend_42 { pt3dadd( 12.7857, -128.284, 26.657, 0.15 ) }
    dend_42 { pt3dadd( 12.7871, -129.211, 26.7942, 0.15 ) }
    dend_42 { pt3dadd( 12.7754, -129.945, 26.9188, 0.59 ) }
    dend_42 { pt3dadd( 12.8035, -130.723, 27.0576, 1.03 ) }
    dend_42 { pt3dadd( 12.9178, -131.926, 27.2399, 0.22 ) }
    dend_42 { pt3dadd( 13.1035, -133.191, 27.4229, 0.07 ) }
    dend_42 { pt3dadd( 13.2604, -134.001, 27.5484, 0.07 ) }
    dend_42 { pt3dadd( 13.3833, -134.511, 27.6381, 0.66 ) }
    dend_42 { pt3dadd( 13.7791, -135.84, 27.9361, 0.96 ) }
    dend_42 { pt3dadd( 14.6371, -138.235, 28.5356, 0.22 ) }
    dend_42 { pt3dadd( 15.2041, -139.532, 28.9007, 0.22 ) }
    dend_42 { pt3dadd( 15.6391, -140.369, 29.1882, 0.44 ) }
    dend_42 { pt3dadd( 16.1704, -141.313, 29.5488, 1.25 ) }
    dend_42 { pt3dadd( 16.6734, -142.134, 29.8715, 1.92 ) }
    dend_42 { pt3dadd( 17.4102, -143.165, 30.2931, 1.11 ) }
    dend_42 { pt3dadd( 18.2133, -144.145, 30.7292, 0.22 ) }
    dend_42 { pt3dadd( 18.844, -144.913, 31.0452, 0.22 ) }
    dend_42 { pt3dadd( 19.5304, -145.822, 31.3803, 0.52 ) }
    dend_42 { pt3dadd( 20.3369, -147.087, 31.8141, 0.22 ) }
    dend_42 { pt3dadd( 21.0663, -148.462, 32.3108, 0.22 ) }
    dend_42 { pt3dadd( 21.5705, -149.574, 32.7468, 0.22 ) }
    dend_42 { pt3dadd( 21.7889, -150.142, 32.9765, 0.81 ) }
    dend_42 { pt3dadd( 22.2564, -151.491, 33.555, 1.77 ) }
    dend_42 { pt3dadd( 23.0736, -154.055, 34.7471, 0.37 ) }
    dend_42 { pt3dadd( 23.4914, -155.398, 35.3935, 0.15 ) }
    dend_42 { pt3dadd( 23.677, -156.016, 35.6789, 0.15 ) }
    dend_42 { pt3dadd( 23.9156, -156.785, 36.0141, 0.37 ) }
    dend_42 { pt3dadd( 24.223, -157.722, 36.4188, 1.18 ) }
    dend_42 { pt3dadd( 24.6111, -158.828, 36.8816, 1.55 ) }
    dend_42 { pt3dadd( 25.2154, -160.526, 37.5097, 0.81 ) }
    dend_42 { pt3dadd( 25.5909, -161.72, 37.8851, 0.15 ) }
    dend_42 { pt3dadd( 25.7961, -162.49, 38.1184, 0.22 ) }
    dend_42 { pt3dadd( 26.0845, -163.651, 38.4519, 0.15 ) }
    dend_42 { pt3dadd( 26.3215, -164.719, 38.7449, 0.96 ) }
    dend_42 { pt3dadd( 26.5853, -165.902, 39.0648, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 27.0067, -167.724, 39.5348, 0.22 ) }
    dend_42 { pt3dadd( 27.2391, -168.58, 39.7437, 0.22 ) }
    dend_42 { pt3dadd( 27.5792, -169.655, 39.9992, 0.37 ) }
    dend_42 { pt3dadd( 27.6863, -169.953, 40.063, 0.37 ) }
    dend_42 { pt3dadd( 28.1136, -171.035, 40.2872, 0.22 ) }
    dend_42 { pt3dadd( 28.3395, -171.534, 40.4, 0.22 ) }
    dend_42 { pt3dadd( 28.8062, -172.387, 40.5563, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.060966, -29.9781, -0.347294, 1.84 ) }
    dend_37 { pt3dadd( -0.301372, -31.2784, -0.85959, 1.84 ) }
    dend_37 { pt3dadd( -0.513559, -32.8378, -1.42665, 1.55 ) }
    dend_37 { pt3dadd( -0.671493, -34.5203, -1.98517, 1.55 ) }
    dend_37 { pt3dadd( -0.815814, -36.279, -2.50716, 1.55 ) }
    dend_37 { pt3dadd( -0.958746, -38.0255, -2.95667, 1.47 ) }
    dend_37 { pt3dadd( -1.09089, -39.5555, -3.31208, 0.96 ) }
    dend_37 { pt3dadd( -1.19713, -40.776, -3.53904, 1.55 ) }
    dend_37 { pt3dadd( -1.41202, -42.9663, -3.82119, 1.25 ) }
    dend_37 { pt3dadd( -1.65515, -45.2297, -4.04077, 1.47 ) }
    dend_37 { pt3dadd( -1.93405, -47.5633, -4.20681, 1.03 ) }
    dend_37 { pt3dadd( -2.16294, -49.1407, -4.29252, 1.18 ) }
    dend_37 { pt3dadd( -2.54267, -51.3669, -4.36826, 1.99 ) }
    dend_37 { pt3dadd( -2.93631, -53.2572, -4.39875, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 6.05147, 28.4065, -0.412167, 2.14 ) }
    dend_20 { pt3dadd( 7.0742, 29.863, 0.0653666, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.05147, 28.4065, -0.412167, 1.47 ) }
    dend_11 { pt3dadd( 5.89174, 28.9292, 0.0364125, 1.47 ) }
    dend_11 { pt3dadd( 5.76181, 29.2428, 0.31117, 1.18 ) }
    dend_11 { pt3dadd( 5.59441, 29.5307, 0.579573, 1.18 ) }
    dend_11 { pt3dadd( 5.3602, 29.8268, 0.884643, 1.47 ) }
    dend_11 { pt3dadd( 5.12179, 30.0426, 1.13735, 1.47 ) }
    dend_11 { pt3dadd( 4.98029, 30.1236, 1.25684, 1.47 ) }
    dend_11 { pt3dadd( 4.61908, 30.1749, 1.45336, 1.47 ) }
    dend_11 { pt3dadd( 4.13575, 30.1043, 1.61479, 1.03 ) }
    dend_11 { pt3dadd( 3.84649, 30.0059, 1.67233, 1.62 ) }
    dend_11 { pt3dadd( 3.58239, 29.8789, 1.70429, 1.77 ) }
    dend_11 { pt3dadd( 3.24635, 29.6719, 1.73368, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 40.0405, -0.625447, -6.69018, 0.15 ) }
    dend_7 { pt3dadd( 47.2098, -5.96068, -7.44785, 0.15 ) }
    dend_7 { pt3dadd( 54.7844, -10.6964, -8.24587, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 40.0405, -0.625447, -6.69018, 0.59 ) }
    dend_2 { pt3dadd( 46.6265, -5.67296, -8.48554, 0.15 ) }
    dend_2 { pt3dadd( 52.2501, -11.696, -10.5288, 0.15 ) }
    dend_2 { pt3dadd( 56.5076, -18.5457, -13.1808, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -25.7136, -21.7981, -33.7121, 0.15 ) }
    dend_68 { pt3dadd( -34.2403, -18.188, -37.9535, 0.15 ) }
    dend_68 { pt3dadd( -41.0021, -13.7392, -44.1351, 0.15 ) }
    dend_68 { pt3dadd( -46.1467, -7.88007, -50.6871, 0.15 ) }
    dend_68 { pt3dadd( -52.6471, -2.57549, -56.4605, 0.15 ) }
    dend_68 { pt3dadd( -59.8275, 1.81571, -62.1951, 0.15 ) }
    dend_68 { pt3dadd( -66.7213, 5.77497, -68.5611, 0.15 ) }
    dend_68 { pt3dadd( -72.469, 10.5134, -75.5064, 0.15 ) }
    dend_68 { pt3dadd( -78.1378, 16.148, -81.8184, 0.15 ) }
    dend_68 { pt3dadd( -83.1076, 20.407, -89.6215, 0.15 ) }
    dend_68 { pt3dadd( -89.5402, 23.9812, -96.6623, 0.15 ) }
    dend_68 { pt3dadd( -96.9965, 28.8275, -101.626, 0.15 ) }
    dend_68 { pt3dadd( -104.565, 33.146, -106.898, 0.15 ) }
    dend_68 { pt3dadd( -111.366, 38.9181, -111.813, 0.15 ) }
    dend_68 { pt3dadd( -119.143, 44.2225, -115.701, 0.15 ) }
    dend_68 { pt3dadd( -127.618, 49.4969, -117.719, 0.15 ) }
    dend_68 { pt3dadd( -135.326, 56.1321, -118.258, 0.15 ) }
    dend_68 { pt3dadd( -143.162, 62.4254, -119.905, 0.15 ) }
    dend_68 { pt3dadd( -151.469, 68.3132, -119.657, 0.15 ) }
    dend_68 { pt3dadd( -159.64, 74.3892, -119.449, 0.15 ) }
    dend_68 { pt3dadd( -167.49, 80.5999, -121.327, 0.15 ) }
    dend_68 { pt3dadd( -174.738, 87.478, -123.299, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -25.7136, -21.7981, -33.7121, 0.59 ) }
    dend_67 { pt3dadd( -30.7561, -26.6935, -41.5963, 0.15 ) }
    dend_67 { pt3dadd( -36.4495, -30.2914, -49.7321, 0.15 ) }
    dend_67 { pt3dadd( -41.6573, -35.05, -57.5925, 0.15 ) }
    dend_67 { pt3dadd( -46.4944, -39.9582, -65.5965, 0.15 ) }
    dend_67 { pt3dadd( -50.5037, -44.4701, -74.2636, 0.15 ) }
    dend_67 { pt3dadd( -55.2929, -49.4778, -82.2346, 0.15 ) }
    dend_67 { pt3dadd( -58.9934, -54.857, -90.5366, 0.15 ) }
    dend_67 { pt3dadd( -63.3801, -59.5977, -98.8932, 0.15 ) }
    dend_67 { pt3dadd( -66.8665, -66.7298, -105.859, 0.15 ) }
    dend_67 { pt3dadd( -69.2917, -74.6149, -112.455, 0.15 ) }
    dend_67 { pt3dadd( -71.6609, -82.6742, -118.857, 0.15 ) }
    dend_67 { pt3dadd( -75.3625, -90.3832, -125.055, 0.15 ) }
    dend_67 { pt3dadd( -77.8568, -99.283, -130.166, 0.15 ) }
    dend_67 { pt3dadd( -81.9756, -108.298, -133.817, 0.15 ) }
    dend_67 { pt3dadd( -87.4793, -116.423, -137.72, 0.15 ) }
    dend_67 { pt3dadd( -92.7061, -124.354, -142.339, 0.15 ) }
    dend_67 { pt3dadd( -96.3321, -132.247, -148.348, 0.15 ) }
    dend_67 { pt3dadd( -99.971, -140.136, -154.354, 0.15 ) }
    dend_67 { pt3dadd( -102.59, -149.701, -157.987, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -88.4123, -34.0307, -99.7447, 0.15 ) }
    dend_65 { pt3dadd( -96.6051, -35.9559, -106.791, 0.15 ) }
    dend_65 { pt3dadd( -105.495, -37.9263, -112.92, 0.15 ) }
    dend_65 { pt3dadd( -115.165, -39.4555, -117.882, 0.15 ) }
    dend_65 { pt3dadd( -123.925, -39.388, -124.496, 0.15 ) }
    dend_65 { pt3dadd( -133.043, -38.0692, -130.462, 0.15 ) }
    dend_65 { pt3dadd( -142.862, -39.1205, -135.254, 0.15 ) }
    dend_65 { pt3dadd( -152.763, -41.0015, -139.602, 0.15 ) }
    dend_65 { pt3dadd( -161.752, -44.2008, -145.027, 0.15 ) }
    dend_65 { pt3dadd( -170.132, -49.3585, -149.89, 0.15 ) }
    dend_65 { pt3dadd( -178.288, -54.7816, -154.846, 0.15 ) }
    dend_65 { pt3dadd( -185.366, -62.2956, -158.576, 0.15 ) }
    dend_65 { pt3dadd( -191.997, -69.6185, -163.36, 0.15 ) }
    dend_65 { pt3dadd( -198.33, -77.0117, -168.43, 0.15 ) }
    dend_65 { pt3dadd( -204.138, -85.6035, -172.025, 0.15 ) }
    dend_65 { pt3dadd( -208.987, -95.2342, -174.078, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -214.406, -104.352, -176.902, 0.15 ) }
    dend_65 { pt3dadd( -217.857, -114.527, -179.147, 0.15 ) }
    dend_65 { pt3dadd( -220.415, -124.35, -183.324, 0.15 ) }
    dend_65 { pt3dadd( -220.933, -134.931, -186.197, 0.15 ) }
    dend_65 { pt3dadd( -223.602, -145.287, -188.668, 0.15 ) }
    dend_65 { pt3dadd( -226.8, -155.753, -189.506, 0.15 ) }
    dend_65 { pt3dadd( -229.364, -166.158, -191.883, 0.15 ) }
    dend_65 { pt3dadd( -233.646, -175.926, -194.476, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -88.4123, -34.0307, -99.7447, 0.59 ) }
    dend_64 { pt3dadd( -93.2564, -34.6128, -107.132, 0.15 ) }
    dend_64 { pt3dadd( -97.7444, -35.5086, -114.711, 0.15 ) }
    dend_64 { pt3dadd( -102.973, -37.0667, -121.683, 0.15 ) }
    dend_64 { pt3dadd( -107.556, -39.8489, -128.728, 0.15 ) }
    dend_64 { pt3dadd( -111.615, -41.8118, -136.347, 0.15 ) }
    dend_64 { pt3dadd( -114.154, -44.7553, -144.301, 0.15 ) }
    dend_64 { pt3dadd( -117.675, -46.1004, -152.312, 0.15 ) }
    dend_64 { pt3dadd( -121.695, -47.1436, -160.131, 0.15 ) }
    dend_64 { pt3dadd( -125.859, -48.6292, -167.801, 0.15 ) }
    dend_64 { pt3dadd( -128.673, -51.2649, -175.771, 0.15 ) }
    dend_64 { pt3dadd( -131.765, -55.5415, -182.879, 0.15 ) }
    dend_64 { pt3dadd( -134.405, -58.8588, -190.651, 0.15 ) }
    dend_64 { pt3dadd( -136.381, -61.7457, -198.784, 0.15 ) }
    dend_64 { pt3dadd( -138.402, -64.5262, -206.942, 0.15 ) }
    dend_64 { pt3dadd( -139.639, -66.6957, -215.436, 0.15 ) }
    dend_64 { pt3dadd( -142.132, -68.0785, -223.818, 0.15 ) }
    dend_64 { pt3dadd( -145.576, -68.8864, -231.934, 0.15 ) }
    dend_64 { pt3dadd( -147.589, -70.9904, -240.294, 0.15 ) }
    dend_64 { pt3dadd( -150.573, -73.9678, -248.079, 0.15 ) }
    dend_64 { pt3dadd( -154.654, -77.1718, -255.253, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -85.0587, -135.365, -2.88894, 0.15 ) }
    dend_57 { pt3dadd( -92.2578, -146.643, -2.0632, 0.15 ) }
    dend_57 { pt3dadd( -98.023, -158.598, -0.179351, 0.15 ) }
    dend_57 { pt3dadd( -102.764, -171.082, 0.998381, 0.15 ) }
    dend_57 { pt3dadd( -107.977, -182.934, 4.47085, 0.15 ) }
    dend_57 { pt3dadd( -112.754, -194.835, 8.3777, 0.15 ) }
    dend_57 { pt3dadd( -115.197, -207.56, 11.8134, 0.15 ) }
    dend_57 { pt3dadd( -117.666, -220.717, 12.5328, 0.15 ) }
    dend_57 { pt3dadd( -120.981, -233.602, 10.891, 0.15 ) }
    dend_57 { pt3dadd( -125.18, -245.77, 7.14708, 0.15 ) }
    dend_57 { pt3dadd( -128.507, -257.019, 0.659123, 0.15 ) }
    dend_57 { pt3dadd( -132.581, -267.137, -7.1354, 0.15 ) }
    dend_57 { pt3dadd( -137.027, -277.046, -14.9931, 0.15 ) }
    dend_57 { pt3dadd( -142.924, -285.852, -23.2027, 0.15 ) }
    dend_57 { pt3dadd( -148.156, -292.464, -33.6245, 0.15 ) }
    dend_57 { pt3dadd( -153.276, -298.959, -44.1749, 0.15 ) }
    dend_57 { pt3dadd( -155.891, -306.569, -54.8969, 0.15 ) }
    dend_57 { pt3dadd( -156.972, -315.261, -65.045, 0.15 ) }
    dend_57 { pt3dadd( -157.995, -323.769, -75.3543, 0.15 ) }
    dend_57 { pt3dadd( -161.102, -331.966, -85.4963, 0.15 ) }
    dend_57 { pt3dadd( -164.946, -339.139, -96.1489, 0.15 ) }
    dend_57 { pt3dadd( -170.896, -345.727, -106.194, 0.15 ) }
    dend_57 { pt3dadd( -177.242, -352.08, -116.148, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -85.0587, -135.365, -2.88894, 0.59 ) }
    dend_54 { pt3dadd( -89.8477, -142.851, -2.26932, 0.15 ) }
    dend_54 { pt3dadd( -94.4817, -150.46, -2.27117, 0.15 ) }
    dend_54 { pt3dadd( -100.247, -157.078, -0.746757, 0.15 ) }
    dend_54 { pt3dadd( -105.754, -163.877, 0.929762, 0.15 ) }
    dend_54 { pt3dadd( -111.838, -170.09, 2.865, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -49.3593, -104.835, -77.2767, 0.15 ) }
    dend_50 { pt3dadd( -50.2766, -108.716, -80.6333, 0.15 ) }
    dend_50 { pt3dadd( -51.8312, -112.856, -83.3928, 0.15 ) }
    dend_50 { pt3dadd( -53.0681, -116.665, -86.7305, 0.15 ) }
    dend_50 { pt3dadd( -54.7161, -121.017, -89.0793, 0.15 ) }
    dend_50 { pt3dadd( -56.5582, -125.66, -90.5693, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -49.3593, -104.835, -77.2767, 0.59 ) }
    dend_49 { pt3dadd( -52.0667, -108.817, -81.8457, 0.15 ) }
    dend_49 { pt3dadd( -54.6778, -112.89, -86.3915, 0.15 ) }
    dend_49 { pt3dadd( -56.7156, -118.168, -89.8623, 0.15 ) }
    dend_49 { pt3dadd( -58.1363, -124.141, -92.3878, 0.15 ) }
    dend_49 { pt3dadd( -58.2653, -130.421, -94.5344, 0.15 ) }
    dend_49 { pt3dadd( -57.7994, -136.772, -96.4065, 0.15 ) }
    dend_49 { pt3dadd( -56.5297, -142.979, -98.3895, 0.15 ) }
    dend_49 { pt3dadd( -56.0038, -149.533, -99.2971, 0.15 ) }
    dend_49 { pt3dadd( -54.5539, -155.782, -101.006, 0.15 ) }
    dend_49 { pt3dadd( -54.202, -162.01, -103.277, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 28.8062, -172.387, 40.5563, 0.22 ) }
    dend_46 { pt3dadd( 28.5649, -173.008, 40.4624, 0.22 ) }
    dend_46 { pt3dadd( 28.2421, -173.839, 40.3369, 0.22 ) }
    dend_46 { pt3dadd( 27.9619, -174.56, 40.2279, 0.22 ) }
    dend_46 { pt3dadd( 27.4619, -175.847, 40.0334, 0.22 ) }
    dend_46 { pt3dadd( 27.2363, -176.428, 39.9456, 0.15 ) }
    dend_46 { pt3dadd( 27.0113, -177.007, 39.8581, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 28.8062, -172.387, 40.5563, 1.18 ) }
    dend_43 { pt3dadd( 29.1931, -173.447, 40.9977, 1.18 ) }
    dend_43 { pt3dadd( 29.6112, -174.672, 41.4641, 0.29 ) }
    dend_43 { pt3dadd( 29.9696, -175.799, 41.8878, 0.15 ) }
    dend_43 { pt3dadd( 30.1583, -176.442, 42.1245, 0.15 ) }
    dend_43 { pt3dadd( 30.3292, -177.074, 42.3509, 0.29 ) }
    dend_43 { pt3dadd( 30.5367, -177.975, 42.6778, 0.66 ) }
    dend_43 { pt3dadd( 30.6993, -178.91, 43.0204, 1.4 ) }
    dend_43 { pt3dadd( 30.8096, -180.297, 43.5198, 0.22 ) }
    dend_43 { pt3dadd( 30.825, -181.262, 43.8602, 0.22 ) }
    dend_43 { pt3dadd( 30.8159, -181.684, 44.0048, 0.22 ) }
    dend_43 { pt3dadd( 30.7781, -182.584, 44.2849, 0.22 ) }
    dend_43 { pt3dadd( 30.7296, -183.36, 44.5075, 0.66 ) }
    dend_43 { pt3dadd( 30.6385, -184.331, 44.7643, 0.15 ) }
    dend_43 { pt3dadd( 30.5178, -185.152, 44.9743, 0.15 ) }
    dend_43 { pt3dadd( 30.3376, -186.154, 45.2324, 0.52 ) }
    dend_43 { pt3dadd( 30.108, -187.395, 45.5635, 0.29 ) }
    dend_43 { pt3dadd( 30.0184, -187.888, 45.6979, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 29.9285, -188.389, 45.8446, 0.15 ) }
    dend_43 { pt3dadd( 29.7496, -189.304, 46.1065, 0.15 ) }
    dend_43 { pt3dadd( 29.6134, -189.922, 46.2777, 0.29 ) }
    dend_43 { pt3dadd( 29.4339, -190.768, 46.5225, 1.11 ) }
    dend_43 { pt3dadd( 29.2772, -191.629, 46.7803, 1.77 ) }
    dend_43 { pt3dadd( 29.1231, -192.824, 47.1355, 1.77 ) }
    dend_43 { pt3dadd( 29.02, -194.075, 47.5096, 1.33 ) }
    dend_43 { pt3dadd( 28.925, -195.812, 48.0214, 0.15 ) }
    dend_43 { pt3dadd( 28.883, -196.969, 48.3742, 0.22 ) }
    dend_43 { pt3dadd( 28.8605, -197.801, 48.6365, 0.66 ) }
    dend_43 { pt3dadd( 28.845, -198.603, 48.8973, 0.81 ) }
    dend_43 { pt3dadd( 28.8498, -200.093, 49.3942, 0.15 ) }
    dend_43 { pt3dadd( 28.9105, -200.968, 49.6909, 0.22 ) }
    dend_43 { pt3dadd( 29.0284, -201.705, 49.9413, 0.22 ) }
    dend_43 { pt3dadd( 29.2174, -202.651, 50.247, 0.22 ) }
    dend_43 { pt3dadd( 29.3407, -203.204, 50.4168, 0.66 ) }
    dend_43 { pt3dadd( 29.6416, -204.287, 50.7342, 1.4 ) }
    dend_43 { pt3dadd( 30.1899, -205.809, 51.1939, 0.88 ) }
    dend_43 { pt3dadd( 30.5608, -206.758, 51.4877, 0.15 ) }
    dend_43 { pt3dadd( 30.9264, -207.668, 51.763, 0.15 ) }
    dend_43 { pt3dadd( 31.2008, -208.328, 51.9577, 0.22 ) }
    dend_43 { pt3dadd( 31.6239, -209.363, 52.272, 0.29 ) }
    dend_43 { pt3dadd( 31.9204, -210.173, 52.515, 0.15 ) }
    dend_43 { pt3dadd( 32.2129, -211.291, 52.8317, 0.15 ) }
    dend_43 { pt3dadd( 32.2745, -211.68, 52.9415, 0.15 ) }
    dend_43 { pt3dadd( 32.352, -212.498, 53.1936, 0.22 ) }
    dend_43 { pt3dadd( 32.3899, -213.69, 53.58, 0.22 ) }
    dend_43 { pt3dadd( 32.3834, -214.205, 53.7512, 0.22 ) }
    dend_43 { pt3dadd( 32.3672, -215.29, 54.1037, 0.37 ) }
    dend_43 { pt3dadd( 32.3829, -216.397, 54.4728, 0.22 ) }
    dend_43 { pt3dadd( 32.4105, -217.141, 54.7112, 0.88 ) }
    dend_43 { pt3dadd( 32.5323, -218.801, 55.211, 2.06 ) }
    dend_43 { pt3dadd( 32.7459, -220.738, 55.687, 0.59 ) }
    dend_43 { pt3dadd( 32.9462, -222.05, 55.9227, 0.22 ) }
    dend_43 { pt3dadd( 33.1164, -222.915, 56.0105, 0.22 ) }
    dend_43 { pt3dadd( 33.2786, -223.68, 56.0553, 0.22 ) }
    dend_43 { pt3dadd( 33.506, -224.732, 56.0686, 0.59 ) }
    dend_43 { pt3dadd( 33.8564, -226.221, 55.9814, 0.07 ) }
    dend_43 { pt3dadd( 34.0893, -227.122, 55.8181, 0.15 ) }
    dend_43 { pt3dadd( 34.3694, -228.188, 55.5234, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.93631, -53.2572, -4.39875, 0.74 ) }
    dend_39 { pt3dadd( -3.07039, -55.334, -4.78621, 0.74 ) }
    dend_39 { pt3dadd( -3.19618, -57.1832, -5.16173, 0.74 ) }
    dend_39 { pt3dadd( -3.29657, -58.2293, -5.37675, 0.81 ) }
    dend_39 { pt3dadd( -3.53063, -59.955, -5.74647, 0.88 ) }
    dend_39 { pt3dadd( -3.70601, -61.064, -5.98686, 0.81 ) }
    dend_39 { pt3dadd( -3.97093, -62.4962, -6.30515, 1.18 ) }
    dend_39 { pt3dadd( -4.20546, -63.5609, -6.56662, 1.18 ) }
    dend_39 { pt3dadd( -4.57796, -64.8657, -6.8912, 1.03 ) }
    dend_39 { pt3dadd( -5.0356, -66.2505, -7.2538, 1.11 ) }
    dend_39 { pt3dadd( -5.45026, -67.3334, -7.54124, 0.74 ) }
    dend_39 { pt3dadd( -5.98716, -68.552, -7.84941, 1.11 ) }
    dend_39 { pt3dadd( -6.47476, -69.589, -8.09262, 0.81 ) }
    dend_39 { pt3dadd( -7.05227, -70.812, -8.35355, 0.81 ) }
    dend_39 { pt3dadd( -7.23171, -71.2583, -8.4364, 0.81 ) }
    dend_39 { pt3dadd( -7.52254, -72.1995, -8.58186, 0.88 ) }
    dend_39 { pt3dadd( -7.75266, -73.2417, -8.69286, 0.88 ) }
    dend_39 { pt3dadd( -8.00676, -74.9625, -8.79506, 1.11 ) }
    dend_39 { pt3dadd( -8.09442, -75.7834, -8.79687, 1.33 ) }
    dend_39 { pt3dadd( -8.28061, -77.7692, -8.64953, 0.74 ) }
    dend_39 { pt3dadd( -8.36306, -78.9473, -8.53865, 0.74 ) }
    dend_39 { pt3dadd( -8.41101, -80.6792, -8.34345, 0.88 ) }
    dend_39 { pt3dadd( -8.40495, -81.6982, -8.19543, 1.25 ) }
    dend_39 { pt3dadd( -8.40131, -82.7495, -7.99719, 1.03 ) }
    dend_39 { pt3dadd( -8.47898, -84.1549, -7.63584, 0.74 ) }
    dend_39 { pt3dadd( -8.61711, -95.3053, -7.93622, 0.74 ) }
    dend_39 { pt3dadd( -9.61738, -106.351, -6.73893, 0.74 ) }
    dend_39 { pt3dadd( -10.2213, -117.365, -5.07048, 0.74 ) }
    dend_39 { pt3dadd( -10.4169, -127.894, -1.39047, 0.74 ) }
    dend_39 { pt3dadd( -9.62295, -138.48, 2.03642, 0.74 ) }
    dend_39 { pt3dadd( -9.51179, -148.744, 6.40391, 0.74 ) }
    dend_39 { pt3dadd( -11.3144, -159.324, 9.44569, 0.74 ) }
    dend_39 { pt3dadd( -10.9647, -170.232, 11.7536, 0.74 ) }
    dend_39 { pt3dadd( -10.0255, -181.049, 14.3163, 0.74 ) }
    dend_39 { pt3dadd( -9.18136, -191.924, 16.6506, 0.74 ) }
    dend_39 { pt3dadd( -8.2418, -202.824, 18.8313, 0.74 ) }
    dend_39 { pt3dadd( -7.86733, -213.408, 22.3334, 0.74 ) }
    dend_39 { pt3dadd( -9.5819, -223.332, 27.1313, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.93631, -53.2572, -4.39875, 1.03 ) }
    dend_38 { pt3dadd( -2.90645, -53.8883, -4.06811, 1.03 ) }
    dend_38 { pt3dadd( -2.87234, -54.8224, -3.62779, 1.03 ) }
    dend_38 { pt3dadd( -2.85572, -55.5438, -3.35526, 1.03 ) }
    dend_38 { pt3dadd( -2.81704, -56.6104, -3.02244, 1.03 ) }
    dend_38 { pt3dadd( -2.75826, -57.5107, -2.7927, 0.96 ) }
    dend_38 { pt3dadd( -2.69199, -58.1482, -2.64707, 0.96 ) }
    dend_38 { pt3dadd( -2.61121, -58.6835, -2.55318, 0.96 ) }
    dend_38 { pt3dadd( -2.29458, -60.1389, -2.36678, 0.88 ) }
    dend_38 { pt3dadd( -2.02865, -60.9994, -2.28246, 0.88 ) }
    dend_38 { pt3dadd( -1.54959, -62.1146, -2.17543, 0.88 ) }
    dend_38 { pt3dadd( -0.930995, -63.2145, -2.05273, 0.81 ) }
    dend_38 { pt3dadd( -0.412527, -63.9563, -1.94512, 0.81 ) }
    dend_38 { pt3dadd( 0.00997759, -64.4581, -1.84382, 0.81 ) }
    dend_38 { pt3dadd( 0.656761, -65.1015, -1.67467, 0.88 ) }
    dend_38 { pt3dadd( 1.32853, -65.7645, -1.46929, 1.03 ) }
    dend_38 { pt3dadd( 1.7695, -66.2562, -1.30466, 1.03 ) }
    dend_38 { pt3dadd( 2.30345, -67.0113, -1.06506, 0.81 ) }
    dend_38 { pt3dadd( 2.66672, -67.7181, -0.863759, 1.4 ) }
    dend_38 { pt3dadd( 2.83388, -68.1604, -0.751162, 1.92 ) }
    dend_38 { pt3dadd( 3.15478, -69.3414, -0.519247, 1.4 ) }
    dend_38 { pt3dadd( 3.45966, -70.7336, -0.343096, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 3.65033, -71.7116, -0.273531, 0.88 ) }
    dend_38 { pt3dadd( 3.84027, -72.7313, -0.251375, 1.03 ) }
    dend_38 { pt3dadd( 3.95503, -73.2991, -0.261379, 1.03 ) }
    dend_38 { pt3dadd( 4.1645, -74.2236, -0.30932, 0.81 ) }
    dend_38 { pt3dadd( 4.38402, -75.0754, -0.399025, 1.18 ) }
    dend_38 { pt3dadd( 4.44569, -75.3327, -0.435369, 1.18 ) }
    dend_38 { pt3dadd( 4.52489, -75.8367, -0.503799, 0.74 ) }
    dend_38 { pt3dadd( 4.5227, -76.4932, -0.558547, 0.44 ) }
    dend_38 { pt3dadd( 4.46214, -76.8843, -0.568028, 0.44 ) }
    dend_38 { pt3dadd( 4.3043, -77.4594, -0.551433, 0.66 ) }
    dend_38 { pt3dadd( 4.05137, -78.223, -0.51632, 0.81 ) }
    dend_38 { pt3dadd( 3.81784, -78.9141, -0.484688, 0.96 ) }
    dend_38 { pt3dadd( 3.4594, -79.9953, -0.438417, 1.33 ) }
    dend_38 { pt3dadd( 3.23287, -80.7098, -0.411041, 0.88 ) }
    dend_38 { pt3dadd( 3.03071, -81.4116, -0.37811, 1.11 ) }
    dend_38 { pt3dadd( 2.81984, -82.2338, -0.318866, 1.18 ) }
    dend_38 { pt3dadd( 2.63414, -83.0147, -0.244231, 1.18 ) }
    dend_38 { pt3dadd( 2.3806, -84.1052, -0.118483, 0.52 ) }
    dend_38 { pt3dadd( 2.1348, -85.2365, 0.0455804, 0.52 ) }
    dend_38 { pt3dadd( 1.95645, -86.0805, 0.180987, 0.74 ) }
    dend_38 { pt3dadd( 1.79709, -86.8662, 0.315704, 0.96 ) }
    dend_38 { pt3dadd( 1.65709, -87.6013, 0.434098, 1.62 ) }
    dend_38 { pt3dadd( 1.52777, -88.3352, 0.536004, 1.62 ) }
    dend_38 { pt3dadd( 1.38452, -89.2523, 0.633504, 1.33 ) }
    dend_38 { pt3dadd( 1.28847, -90.0054, 0.680516, 0.44 ) }
    dend_38 { pt3dadd( 1.22179, -90.4524, 0.685972, 0.59 ) }
    dend_38 { pt3dadd( 1.05054, -91.289, 0.6819, 0.59 ) }
    dend_38 { pt3dadd( 0.808044, -92.1871, 0.683926, 0.88 ) }
    dend_38 { pt3dadd( 0.570257, -92.8784, 0.693213, 1.25 ) }
    dend_38 { pt3dadd( 0.396246, -93.2991, 0.7093, 2.21 ) }
    dend_38 { pt3dadd( -0.0486969, -94.2803, 0.784788, 1.84 ) }
    dend_38 { pt3dadd( -0.575893, -95.3877, 0.908822, 1.33 ) }
    dend_38 { pt3dadd( -1.06281, -96.4013, 1.07075, 0.66 ) }
    dend_38 { pt3dadd( -1.30058, -96.934, 1.16591, 0.44 ) }
    dend_38 { pt3dadd( -1.53462, -97.5074, 1.27145, 0.44 ) }
    dend_38 { pt3dadd( -1.75644, -98.1205, 1.38266, 0.81 ) }
    dend_38 { pt3dadd( -1.97397, -98.9014, 1.50742, 1.11 ) }
    dend_38 { pt3dadd( -2.15003, -99.7729, 1.61468, 0.74 ) }
    dend_38 { pt3dadd( -2.30285, -100.716, 1.7096, 0.37 ) }
    dend_38 { pt3dadd( -2.41439, -101.443, 1.76428, 0.37 ) }
    dend_38 { pt3dadd( -2.49136, -101.902, 1.79481, 0.74 ) }
    dend_38 { pt3dadd( -2.62624, -102.597, 1.84395, 0.88 ) }
    dend_38 { pt3dadd( -2.8511, -103.613, 1.93634, 0.44 ) }
    dend_38 { pt3dadd( -2.98032, -104.084, 2.0028, 0.44 ) }
    dend_38 { pt3dadd( -3.13739, -104.535, 2.11402, 0.59 ) }
    dend_38 { pt3dadd( -3.35867, -105.032, 2.28946, 0.96 ) }
    dend_38 { pt3dadd( -3.57149, -105.436, 2.47294, 1.25 ) }
    dend_38 { pt3dadd( -3.81304, -105.856, 2.70825, 1.25 ) }
    dend_38 { pt3dadd( -4.09216, -106.358, 3.02262, 0.81 ) }
    dend_38 { pt3dadd( -4.25996, -106.759, 3.26137, 1.11 ) }
    dend_38 { pt3dadd( -4.41699, -107.454, 3.57879, 0.22 ) }
    dend_38 { pt3dadd( -4.44333, -107.774, 3.66849, 0.22 ) }
    dend_38 { pt3dadd( -4.45367, -108.282, 3.768, 0.22 ) }
    dend_38 { pt3dadd( -4.46291, -108.741, 3.83123, 0.74 ) }
    dend_38 { pt3dadd( -4.48121, -109.203, 3.88298, 1.18 ) }
    dend_38 { pt3dadd( -4.55747, -110.255, 4.00228, 0.66 ) }
    dend_38 { pt3dadd( -4.66546, -111.164, 4.12784, 0.37 ) }
    dend_38 { pt3dadd( -4.85219, -111.961, 4.27158, 0.66 ) }
    dend_38 { pt3dadd( -5.06095, -112.626, 4.43185, 0.66 ) }
    dend_38 { pt3dadd( -5.23771, -113.133, 4.5873, 1.25 ) }
    dend_38 { pt3dadd( -5.40777, -113.611, 4.772, 2.06 ) }
    dend_38 { pt3dadd( -5.64142, -114.315, 5.0995, 2.21 ) }
    dend_38 { pt3dadd( -6.02064, -115.632, 5.75865, 1.03 ) }
    dend_38 { pt3dadd( -6.20349, -116.386, 6.13011, 0.59 ) }
    dend_38 { pt3dadd( -6.35411, -117.172, 6.47366, 0.37 ) }
    dend_38 { pt3dadd( -6.43846, -117.755, 6.70576, 0.66 ) }
    dend_38 { pt3dadd( -6.50528, -118.463, 6.96368, 0.37 ) }
    dend_38 { pt3dadd( -6.52958, -119.23, 7.23203, 0.29 ) }
    dend_38 { pt3dadd( -6.51465, -119.73, 7.39259, 0.52 ) }
    dend_38 { pt3dadd( -6.49949, -120.598, 7.66353, 0.22 ) }
    dend_38 { pt3dadd( -6.48173, -121.041, 7.84499, 0.22 ) }
    dend_38 { pt3dadd( -6.43527, -121.522, 8.11517, 0.29 ) }
    dend_38 { pt3dadd( -6.35931, -121.962, 8.4569, 0.96 ) }
    dend_38 { pt3dadd( -6.27134, -122.385, 8.84986, 1.77 ) }
    dend_38 { pt3dadd( -6.18442, -122.803, 9.23718, 1.77 ) }
    dend_38 { pt3dadd( -5.9936, -123.776, 10.0374, 0.29 ) }
    dend_38 { pt3dadd( -5.91743, -124.204, 10.3027, 0.29 ) }
    dend_38 { pt3dadd( -5.86586, -124.583, 10.4646, 0.29 ) }
    dend_38 { pt3dadd( -5.80694, -125.163, 10.614, 0.29 ) }
    dend_38 { pt3dadd( -5.77046, -125.93, 10.7126, 0.29 ) }
    dend_38 { pt3dadd( -5.79297, -126.829, 10.737, 0.29 ) }
    dend_38 { pt3dadd( -5.84043, -127.273, 10.7231, 0.29 ) }
    dend_38 { pt3dadd( -5.96651, -127.931, 10.7012, 0.29 ) }
    dend_38 { pt3dadd( -6.17681, -128.7, 10.7021, 0.29 ) }
    dend_38 { pt3dadd( -6.44318, -129.5, 10.7523, 0.29 ) }
    dend_38 { pt3dadd( -6.62817, -130.0, 10.8069, 1.03 ) }
    dend_38 { pt3dadd( -6.86127, -130.583, 10.8924, 1.92 ) }
    dend_38 { pt3dadd( -7.25785, -131.564, 11.0564, 3.02 ) }
    dend_38 { pt3dadd( -7.69528, -132.664, 11.265, 2.36 ) }
    dend_38 { pt3dadd( -8.18624, -133.929, 11.5313, 0.22 ) }
    dend_38 { pt3dadd( -8.35462, -134.398, 11.6406, 0.22 ) }
    dend_38 { pt3dadd( -8.55504, -135.033, 11.8006, 0.22 ) }
    dend_38 { pt3dadd( -8.63149, -135.315, 11.8745, 0.52 ) }
    dend_38 { pt3dadd( -8.73235, -135.779, 12.0068, 0.96 ) }
    dend_38 { pt3dadd( -8.86311, -136.461, 12.2029, 0.44 ) }
    dend_38 { pt3dadd( -9.01959, -137.314, 12.4374, 0.22 ) }
    dend_38 { pt3dadd( -9.11664, -137.862, 12.5792, 0.37 ) }
    dend_38 { pt3dadd( -9.22571, -138.506, 12.7338, 0.81 ) }
    dend_38 { pt3dadd( -9.3309, -139.069, 12.8624, 0.96 ) }
    dend_38 { pt3dadd( -9.49802, -139.834, 13.015, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -9.66806, -140.565, 13.1324, 0.66 ) }
    dend_38 { pt3dadd( -9.74239, -140.908, 13.1722, 0.22 ) }
    dend_38 { pt3dadd( -9.8806, -141.66, 13.2382, 0.22 ) }
    dend_38 { pt3dadd( -9.92796, -142.016, 13.2682, 0.44 ) }
    dend_38 { pt3dadd( -10.0153, -142.93, 13.3537, 0.22 ) }
    dend_38 { pt3dadd( -10.0438, -143.564, 13.4347, 0.22 ) }
    dend_38 { pt3dadd( -10.0555, -144.327, 13.5627, 0.29 ) }
    dend_38 { pt3dadd( -10.068, -144.956, 13.6804, 0.52 ) }
    dend_38 { pt3dadd( -10.0819, -145.608, 13.8044, 0.52 ) }
    dend_38 { pt3dadd( -10.1141, -146.298, 13.9376, 0.52 ) }
    dend_38 { pt3dadd( -10.1705, -146.95, 14.064, 1.18 ) }
    dend_38 { pt3dadd( -10.2542, -147.552, 14.1766, 2.43 ) }
    dend_38 { pt3dadd( -10.4429, -148.585, 14.3662, 1.33 ) }
    dend_38 { pt3dadd( -10.6167, -149.421, 14.5062, 0.59 ) }
    dend_38 { pt3dadd( -10.7652, -150.102, 14.609, 0.81 ) }
    dend_38 { pt3dadd( -10.8932, -150.692, 14.6922, 0.15 ) }
    dend_38 { pt3dadd( -10.98, -151.084, 14.7439, 0.15 ) }
    dend_38 { pt3dadd( -11.0166, -151.282, 14.7715, 0.15 ) }
    dend_38 { pt3dadd( -11.0598, -151.529, 14.8151, 0.22 ) }
    dend_38 { pt3dadd( -11.1632, -152.003, 14.9101, 0.37 ) }
    dend_38 { pt3dadd( -11.3205, -152.554, 15.0027, 0.37 ) }
    dend_38 { pt3dadd( -11.5415, -153.143, 15.0649, 0.22 ) }
    dend_38 { pt3dadd( -11.8438, -153.775, 15.0945, 0.22 ) }
    dend_38 { pt3dadd( -12.0559, -154.138, 15.0879, 0.22 ) }
    dend_38 { pt3dadd( -12.2909, -154.474, 15.0677, 0.74 ) }
    dend_38 { pt3dadd( -12.6696, -154.958, 15.0198, 1.77 ) }
    dend_38 { pt3dadd( -13.1218, -155.506, 14.9503, 2.21 ) }
    dend_38 { pt3dadd( -13.4583, -155.899, 14.9149, 2.21 ) }
    dend_38 { pt3dadd( -14.1971, -156.745, 14.8746, 0.37 ) }
    dend_38 { pt3dadd( -14.6588, -157.309, 14.8795, 0.37 ) }
    dend_38 { pt3dadd( -15.0115, -157.793, 14.916, 0.22 ) }
    dend_38 { pt3dadd( -15.3028, -158.249, 14.9921, 0.22 ) }
    dend_38 { pt3dadd( -15.6364, -158.812, 15.1293, 0.22 ) }
    dend_38 { pt3dadd( -15.8235, -159.142, 15.2357, 0.81 ) }
    dend_38 { pt3dadd( -16.1033, -159.64, 15.4661, 1.25 ) }
    dend_38 { pt3dadd( -16.4376, -160.205, 15.7996, 0.88 ) }
    dend_38 { pt3dadd( -16.8331, -160.804, 16.2048, 0.22 ) }
    dend_38 { pt3dadd( -17.0383, -161.108, 16.4139, 0.22 ) }
    dend_38 { pt3dadd( -17.261, -161.477, 16.6342, 0.22 ) }
    dend_38 { pt3dadd( -17.4776, -161.933, 16.8768, 0.22 ) }
    dend_38 { pt3dadd( -17.6477, -162.535, 17.1212, 0.44 ) }
    dend_38 { pt3dadd( -17.7376, -163.11, 17.2886, 1.47 ) }
    dend_38 { pt3dadd( -17.8124, -163.739, 17.4135, 1.47 ) }
    dend_38 { pt3dadd( -17.9139, -164.53, 17.524, 0.44 ) }
    dend_38 { pt3dadd( -18.0129, -165.269, 17.5941, 0.96 ) }
    dend_38 { pt3dadd( -18.1881, -166.344, 17.6562, 0.22 ) }
    dend_38 { pt3dadd( -18.295, -166.914, 17.6836, 0.22 ) }
    dend_38 { pt3dadd( -18.496, -167.779, 17.7303, 0.22 ) }
    dend_38 { pt3dadd( -18.6849, -168.423, 17.757, 0.22 ) }
    dend_38 { pt3dadd( -18.8502, -168.894, 17.7694, 0.22 ) }
    dend_38 { pt3dadd( -19.0785, -169.455, 17.7754, 0.22 ) }
    dend_38 { pt3dadd( -19.4084, -170.202, 17.7927, 0.22 ) }
    dend_38 { pt3dadd( -19.6034, -170.67, 17.8098, 0.81 ) }
    dend_38 { pt3dadd( -19.8807, -171.395, 17.8471, 1.77 ) }
    dend_38 { pt3dadd( -20.1348, -172.1, 17.9042, 1.18 ) }
    dend_38 { pt3dadd( -20.5904, -173.459, 18.0479, 0.22 ) }
    dend_38 { pt3dadd( -20.7247, -173.912, 18.1144, 0.22 ) }
    dend_38 { pt3dadd( -20.9323, -174.692, 18.2686, 0.88 ) }
    dend_38 { pt3dadd( -21.1547, -175.662, 18.5215, 0.15 ) }
    dend_38 { pt3dadd( -21.2583, -176.23, 18.7237, 0.15 ) }
    dend_38 { pt3dadd( -21.3124, -176.786, 18.9586, 0.29 ) }
    dend_38 { pt3dadd( -21.3083, -177.35, 19.2302, 0.74 ) }
    dend_38 { pt3dadd( -21.2835, -177.78, 19.4478, 1.4 ) }
    dend_38 { pt3dadd( -21.2249, -178.424, 19.8038, 0.59 ) }
    dend_38 { pt3dadd( -21.1392, -179.28, 20.2812, 0.15 ) }
    dend_38 { pt3dadd( -21.0774, -179.933, 20.6293, 0.15 ) }
    dend_38 { pt3dadd( -21.0182, -180.523, 20.9323, 0.15 ) }
    dend_38 { pt3dadd( -20.9443, -181.066, 21.1826, 0.29 ) }
    dend_38 { pt3dadd( -20.8258, -181.747, 21.4866, 0.96 ) }
    dend_38 { pt3dadd( -20.6837, -182.496, 21.8175, 0.44 ) }
    dend_38 { pt3dadd( -20.5684, -183.101, 22.0881, 0.22 ) }
    dend_38 { pt3dadd( -20.4305, -183.829, 22.4441, 0.22 ) }
    dend_38 { pt3dadd( -20.2793, -184.527, 22.7987, 0.15 ) }
    dend_38 { pt3dadd( -20.1337, -185.123, 23.0927, 0.15 ) }
    dend_38 { pt3dadd( -20.0362, -185.525, 23.2814, 0.15 ) }
    dend_38 { pt3dadd( -19.959, -185.926, 23.4506, 0.29 ) }
    dend_38 { pt3dadd( -19.8822, -186.64, 23.6991, 0.44 ) }
    dend_38 { pt3dadd( -19.8645, -187.343, 23.894, 0.44 ) }
    dend_38 { pt3dadd( -19.9026, -188.314, 24.1236, 0.44 ) }
    dend_38 { pt3dadd( -19.9643, -189.118, 24.2628, 0.44 ) }
    dend_38 { pt3dadd( -20.071, -190.106, 24.3932, 0.88 ) }
    dend_38 { pt3dadd( -20.1946, -190.876, 24.4668, 1.03 ) }
    dend_38 { pt3dadd( -20.3636, -191.613, 24.5191, 0.37 ) }
    dend_38 { pt3dadd( -20.5635, -192.229, 24.5601, 0.15 ) }
    dend_38 { pt3dadd( -20.8254, -192.823, 24.6112, 0.15 ) }
    dend_38 { pt3dadd( -21.1038, -193.329, 24.6651, 0.37 ) }
    dend_38 { pt3dadd( -21.52, -193.957, 24.7489, 0.22 ) }
    dend_38 { pt3dadd( -21.8678, -194.403, 24.8177, 0.81 ) }
    dend_38 { pt3dadd( -22.497, -195.088, 24.9346, 1.25 ) }
    dend_38 { pt3dadd( -23.2726, -195.799, 25.0654, 0.88 ) }
    dend_38 { pt3dadd( -23.7993, -196.215, 25.1434, 0.22 ) }
    dend_38 { pt3dadd( -24.3301, -196.598, 25.1957, 0.22 ) }
    dend_38 { pt3dadd( -24.8597, -196.971, 25.2189, 0.74 ) }
    dend_38 { pt3dadd( -25.5877, -197.513, 25.1996, 1.47 ) }
    dend_38 { pt3dadd( -26.164, -197.99, 25.1356, 0.37 ) }
    dend_38 { pt3dadd( -26.9955, -198.779, 24.9456, 0.22 ) }
    dend_38 { pt3dadd( -27.5366, -199.396, 24.7405, 0.29 ) }
    dend_38 { pt3dadd( -27.9535, -200.002, 24.5034, 0.29 ) }
    dend_38 { pt3dadd( -28.2288, -200.58, 24.2536, 0.29 ) }
    dend_38 { pt3dadd( -28.4153, -201.219, 23.9693, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -28.5527, -202.067, 23.623, 0.22 ) }
    dend_38 { pt3dadd( -28.6079, -203.021, 23.2817, 0.22 ) }
    dend_38 { pt3dadd( -28.6077, -203.487, 23.1391, 0.22 ) }
    dend_38 { pt3dadd( -28.5842, -204.201, 22.9836, 0.37 ) }
    dend_38 { pt3dadd( -28.5682, -204.739, 22.9164, 0.59 ) }
    dend_38 { pt3dadd( -28.5759, -206.026, 22.8442, 0.66 ) }
    dend_38 { pt3dadd( -28.6201, -206.913, 22.8497, 0.88 ) }
    dend_38 { pt3dadd( -28.6732, -207.51, 22.9067, 0.88 ) }
    dend_38 { pt3dadd( -28.8089, -208.581, 23.0581, 0.52 ) }
    dend_38 { pt3dadd( -28.9844, -209.742, 23.2618, 0.22 ) }
    dend_38 { pt3dadd( -29.1539, -210.907, 23.5205, 0.22 ) }
    dend_38 { pt3dadd( -29.2223, -211.384, 23.6493, 0.81 ) }
    dend_38 { pt3dadd( -29.4146, -212.65, 24.024, 1.25 ) }
    dend_38 { pt3dadd( -29.5082, -213.378, 24.242, 1.03 ) }
    dend_38 { pt3dadd( -29.5558, -213.848, 24.3794, 1.03 ) }
    dend_38 { pt3dadd( -29.6312, -215.002, 24.7356, 0.22 ) }
    dend_38 { pt3dadd( -29.663, -215.854, 25.0002, 0.22 ) }
    dend_38 { pt3dadd( -29.6965, -216.428, 25.162, 0.22 ) }
    dend_38 { pt3dadd( -29.7892, -217.362, 25.3829, 0.22 ) }
    dend_38 { pt3dadd( -29.8815, -217.895, 25.5029, 0.22 ) }
    dend_38 { pt3dadd( -30.1368, -218.875, 25.6955, 0.22 ) }
    dend_38 { pt3dadd( -30.3955, -219.528, 25.7956, 0.74 ) }
    dend_38 { pt3dadd( -30.7039, -220.153, 25.8635, 1.11 ) }
    dend_38 { pt3dadd( -30.9697, -220.616, 25.8761, 1.11 ) }
    dend_38 { pt3dadd( -31.5557, -221.494, 25.8174, 0.74 ) }
    dend_38 { pt3dadd( -32.0066, -222.126, 25.6962, 1.4 ) }
    dend_38 { pt3dadd( -32.7139, -223.089, 25.3886, 0.66 ) }
    dend_38 { pt3dadd( -33.1921, -223.761, 25.1186, 0.07 ) }
    dend_38 { pt3dadd( -33.7668, -224.616, 24.7429, 0.07 ) }
    dend_38 { pt3dadd( -34.1405, -225.197, 24.4778, 0.22 ) }
    dend_38 { pt3dadd( -34.5415, -225.887, 24.1702, 0.22 ) }
    dend_38 { pt3dadd( -34.8079, -226.376, 23.9721, 0.44 ) }
    dend_38 { pt3dadd( -35.1248, -227.02, 23.7554, 0.44 ) }
    dend_38 { pt3dadd( -35.5488, -227.89, 23.5933, 0.44 ) }
    dend_38 { pt3dadd( -35.8277, -228.458, 23.5882, 0.22 ) }
    dend_38 { pt3dadd( -36.2216, -229.256, 23.6845, 0.15 ) }
    dend_38 { pt3dadd( -36.4722, -229.701, 23.8013, 0.37 ) }
    dend_38 { pt3dadd( -36.6622, -229.976, 23.9154, 0.37 ) }
    dend_38 { pt3dadd( -37.1685, -230.623, 24.2705, 0.15 ) }
    dend_38 { pt3dadd( -37.6557, -231.176, 24.6402, 0.15 ) }
    dend_38 { pt3dadd( -37.8182, -231.34, 24.7623, 0.52 ) }
    dend_38 { pt3dadd( -38.2836, -231.714, 25.0727, 1.03 ) }
    dend_38 { pt3dadd( -38.9285, -232.173, 25.4505, 0.15 ) }
    dend_38 { pt3dadd( -39.4121, -232.485, 25.6827, 0.15 ) }
    dend_38 { pt3dadd( -39.888, -232.778, 25.85, 0.15 ) }
    dend_38 { pt3dadd( -40.1984, -232.984, 25.9285, 0.59 ) }
    dend_38 { pt3dadd( -40.8698, -233.483, 26.0584, 0.15 ) }
    dend_38 { pt3dadd( -41.0901, -233.66, 26.0877, 0.15 ) }
    dend_38 { pt3dadd( -41.4317, -233.978, 26.1174, 0.66 ) }
    dend_38 { pt3dadd( -41.7203, -234.282, 26.1398, 0.81 ) }
    dend_38 { pt3dadd( -42.5042, -235.222, 26.1978, 0.15 ) }
    dend_38 { pt3dadd( -43.1121, -236.038, 26.2411, 0.15 ) }
    dend_38 { pt3dadd( -43.6288, -236.811, 26.2764, 0.29 ) }
    dend_38 { pt3dadd( -44.3347, -237.921, 26.322, 0.22 ) }
    dend_38 { pt3dadd( -44.9388, -238.924, 26.3609, 0.15 ) }
    dend_38 { pt3dadd( -45.1837, -239.335, 26.3766, 0.66 ) }
    dend_38 { pt3dadd( -45.5813, -239.968, 26.3868, 0.81 ) }
    dend_38 { pt3dadd( -46.0916, -240.694, 26.3798, 0.44 ) }
    dend_38 { pt3dadd( -46.4078, -241.123, 26.3708, 1.03 ) }
    dend_38 { pt3dadd( -46.7563, -241.535, 26.3557, 1.25 ) }
    dend_38 { pt3dadd( -47.7201, -242.559, 26.2964, 0.52 ) }
    dend_38 { pt3dadd( -48.4791, -243.285, 26.2389, 0.22 ) }
    dend_38 { pt3dadd( -48.9708, -243.692, 26.1907, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.0742, 29.863, 0.0653666, 0.96 ) }
    dend_24 { pt3dadd( 8.28782, 30.7448, 0.271856, 0.96 ) }
    dend_24 { pt3dadd( 8.8775, 31.1718, 0.374439, 1.03 ) }
    dend_24 { pt3dadd( 9.57404, 31.7277, 0.592939, 1.03 ) }
    dend_24 { pt3dadd( 10.1913, 32.2203, 0.786566, 1.62 ) }
    dend_24 { pt3dadd( 10.7894, 32.6977, 0.974196, 1.33 ) }
    dend_24 { pt3dadd( 11.6292, 33.368, 1.23764, 1.03 ) }
    dend_24 { pt3dadd( 12.2511, 33.8821, 1.45442, 0.96 ) }
    dend_24 { pt3dadd( 13.4063, 34.8693, 1.91771, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.0742, 29.863, 0.0653666, 0.88 ) }
    dend_21 { pt3dadd( 7.80066, 31.4273, 0.0980045, 0.88 ) }
    dend_21 { pt3dadd( 8.66659, 32.9914, 0.195691, 0.81 ) }
    dend_21 { pt3dadd( 9.10249, 33.7177, 0.217362, 0.66 ) }
    dend_21 { pt3dadd( 9.55192, 34.4674, 0.203716, 1.11 ) }
    dend_21 { pt3dadd( 10.1199, 35.4771, 0.137908, 0.74 ) }
    dend_21 { pt3dadd( 10.5159, 36.2247, 0.0552918, 0.52 ) }
    dend_21 { pt3dadd( 11.084, 37.2581, -0.178455, 0.22 ) }
    dend_21 { pt3dadd( 11.3788, 38.0776, -0.465683, 0.29 ) }
    dend_21 { pt3dadd( 11.4202, 38.6477, -0.796975, 0.29 ) }
    dend_21 { pt3dadd( 11.3137, 39.2361, -1.29133, 0.66 ) }
    dend_21 { pt3dadd( 11.2049, 39.5274, -1.60779, 0.66 ) }
    dend_21 { pt3dadd( 10.8487, 40.2107, -2.42198, 0.81 ) }
    dend_21 { pt3dadd( 10.3854, 41.0692, -3.46036, 1.18 ) }
    dend_21 { pt3dadd( 10.0617, 41.7927, -4.27705, 1.03 ) }
    dend_21 { pt3dadd( 9.79902, 42.6506, -5.17037, 0.81 ) }
    dend_21 { pt3dadd( 9.64903, 43.5665, -6.03736, 1.11 ) }
    dend_21 { pt3dadd( 9.59415, 44.8273, -7.12509, 0.88 ) }
    dend_21 { pt3dadd( 9.66135, 45.8834, -7.97114, 0.66 ) }
    dend_21 { pt3dadd( 9.79495, 46.863, -8.68642, 0.66 ) }
    dend_21 { pt3dadd( 9.89529, 47.6968, -9.22906, 0.66 ) }
    dend_21 { pt3dadd( 9.95273, 48.4634, -9.68519, 0.66 ) }
    dend_21 { pt3dadd( 9.99603, 49.3802, -10.2259, 0.81 ) }
    dend_21 { pt3dadd( 10.0178, 50.0772, -10.6685, 1.18 ) }
    dend_21 { pt3dadd( 10.0109, 50.845, -11.1638, 1.18 ) }
    dend_21 { pt3dadd( 9.96223, 52.5541, -12.2132, 0.52 ) }
    dend_21 { pt3dadd( 9.90098, 53.4565, -12.7791, 0.52 ) }
    dend_21 { pt3dadd( 9.85782, 54.1719, -13.2146, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 9.8528, 54.6901, -13.4951, 1.03 ) }
    dend_21 { pt3dadd( 9.9431, 55.6315, -13.9353, 1.03 ) }
    dend_21 { pt3dadd( 10.2706, 56.7798, -14.3722, 0.66 ) }
    dend_21 { pt3dadd( 12.4591, 65.725, -19.4202, 0.66 ) }
    dend_21 { pt3dadd( 13.8396, 75.1521, -23.8377, 0.66 ) }
    dend_21 { pt3dadd( 13.2208, 84.1731, -29.1789, 0.66 ) }
    dend_21 { pt3dadd( 11.8771, 92.9861, -34.73, 0.66 ) }
    dend_21 { pt3dadd( 10.8526, 101.262, -41.1133, 0.66 ) }
    dend_21 { pt3dadd( 7.82233, 108.937, -47.6094, 0.66 ) }
    dend_21 { pt3dadd( 5.85995, 116.145, -54.9909, 0.66 ) }
    dend_21 { pt3dadd( 4.86361, 123.655, -62.2639, 0.66 ) }
    dend_21 { pt3dadd( 2.72376, 131.724, -68.6354, 0.66 ) }
    dend_21 { pt3dadd( 0.973326, 138.81, -76.1859, 0.66 ) }
    dend_21 { pt3dadd( 1.4664, 146.003, -83.8215, 0.66 ) }
    dend_21 { pt3dadd( 1.26373, 153.369, -91.3051, 0.66 ) }
    dend_21 { pt3dadd( 0.964324, 160.551, -98.9608, 0.66 ) }
    dend_21 { pt3dadd( 1.02817, 167.28, -107.024, 0.66 ) }
    dend_21 { pt3dadd( 0.584666, 172.857, -115.911, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 3.24635, 29.6719, 1.73368, 0.96 ) }
    dend_13 { pt3dadd( 2.36035, 30.2394, 1.69772, 0.96 ) }
    dend_13 { pt3dadd( 1.50771, 30.5859, 1.72247, 0.66 ) }
    dend_13 { pt3dadd( 0.302592, 30.6894, 1.85621, 0.52 ) }
    dend_13 { pt3dadd( -0.18353, 30.4414, 1.98871, 0.52 ) }
    dend_13 { pt3dadd( -0.829538, 29.6053, 2.2863, 0.52 ) }
    dend_13 { pt3dadd( -1.15278, 29.1452, 2.45682, 0.88 ) }
    dend_13 { pt3dadd( -1.82752, 28.0527, 2.87426, 1.11 ) }
    dend_13 { pt3dadd( -2.44961, 27.0559, 3.26944, 1.25 ) }
    dend_13 { pt3dadd( -2.98621, 26.2977, 3.56988, 1.25 ) }
    dend_13 { pt3dadd( -4.12944, 24.938, 4.08392, 0.66 ) }
    dend_13 { pt3dadd( -4.80105, 24.259, 4.3231, 0.96 ) }
    dend_13 { pt3dadd( -5.5529, 23.6239, 4.55554, 1.33 ) }
    dend_13 { pt3dadd( -6.54583, 22.9249, 4.83308, 1.33 ) }
    dend_13 { pt3dadd( -8.06782, 22.0114, 5.24556, 1.33 ) }
    dend_13 { pt3dadd( -9.74633, 21.086, 5.72762, 0.88 ) }
    dend_13 { pt3dadd( -10.7599, 20.5718, 6.00686, 0.88 ) }
    dend_13 { pt3dadd( -11.9115, 19.9797, 6.31787, 1.4 ) }
    dend_13 { pt3dadd( -12.6571, 19.58, 6.53041, 1.55 ) }
    dend_13 { pt3dadd( -13.8102, 18.9235, 6.89728, 2.06 ) }
    dend_13 { pt3dadd( -14.697, 18.3477, 7.2855, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.24635, 29.6719, 1.73368, 0.74 ) }
    dend_12 { pt3dadd( 2.96971, 28.6172, 1.59523, 0.74 ) }
    dend_12 { pt3dadd( 2.58026, 27.277, 1.47212, 0.52 ) }
    dend_12 { pt3dadd( 2.22698, 26.109, 1.40586, 0.88 ) }
    dend_12 { pt3dadd( 1.84439, 24.8704, 1.41699, 0.44 ) }
    dend_12 { pt3dadd( 1.5903, 24.0761, 1.46731, 0.44 ) }
    dend_12 { pt3dadd( 1.39336, 23.4798, 1.52575, 0.37 ) }
    dend_12 { pt3dadd( 1.03191, 22.4185, 1.70623, 0.88 ) }
    dend_12 { pt3dadd( 0.702459, 21.3111, 1.96587, 0.44 ) }
    dend_12 { pt3dadd( 0.38821, 20.0928, 2.28099, 0.44 ) }
    dend_12 { pt3dadd( 0.21609, 19.2188, 2.4987, 0.74 ) }
    dend_12 { pt3dadd( 0.11442, 18.5307, 2.6688, 1.11 ) }
    dend_12 { pt3dadd( -0.0435324, 17.0324, 3.05498, 0.96 ) }
    dend_12 { pt3dadd( -0.123643, 15.643, 3.45349, 1.18 ) }
    dend_12 { pt3dadd( -0.15269, 14.4585, 3.84237, 1.18 ) }
    dend_12 { pt3dadd( -0.168069, 13.1129, 4.33281, 0.88 ) }
    dend_12 { pt3dadd( -0.171053, 12.0021, 4.78643, 0.66 ) }
    dend_12 { pt3dadd( -0.172391, 11.1015, 5.20753, 0.66 ) }
    dend_12 { pt3dadd( -0.171268, 10.1449, 5.68662, 0.66 ) }
    dend_12 { pt3dadd( -0.17225, 9.05293, 6.25551, 0.66 ) }
    dend_12 { pt3dadd( -0.164644, 7.80478, 6.88862, 0.66 ) }
    dend_12 { pt3dadd( -0.174158, 6.03844, 7.66153, 0.52 ) }
    dend_12 { pt3dadd( -0.178102, 5.08002, 7.99779, 0.52 ) }
    dend_12 { pt3dadd( -0.168687, 3.41509, 8.43766, 0.52 ) }
    dend_12 { pt3dadd( -0.153062, 2.26132, 8.63837, 0.52 ) }
    dend_12 { pt3dadd( -0.120368, 1.07808, 8.76166, 0.52 ) }
    dend_12 { pt3dadd( -0.0674739, -0.455751, 8.86611, 0.96 ) }
    dend_12 { pt3dadd( -0.0637199, -1.23678, 8.90327, 1.11 ) }
    dend_12 { pt3dadd( -0.0867789, -2.03883, 8.93484, 1.11 ) }
    dend_12 { pt3dadd( -0.212041, -4.01938, 9.03284, 0.44 ) }
    dend_12 { pt3dadd( -0.304256, -4.9585, 9.07615, 0.44 ) }
    dend_12 { pt3dadd( -0.555297, -6.63847, 9.18507, 0.66 ) }
    dend_12 { pt3dadd( -0.776933, -7.78333, 9.26851, 0.52 ) }
    dend_12 { pt3dadd( -0.918671, -8.37634, 9.2987, 0.88 ) }
    dend_12 { pt3dadd( -1.05957, -8.89724, 9.31394, 1.33 ) }
    dend_12 { pt3dadd( -1.3715, -10.059, 9.30822, 0.96 ) }
    dend_12 { pt3dadd( -1.76817, -11.7254, 9.25642, 0.59 ) }
    dend_12 { pt3dadd( -1.99921, -12.914, 9.18181, 0.59 ) }
    dend_12 { pt3dadd( -2.10799, -13.6835, 9.12992, 0.96 ) }
    dend_12 { pt3dadd( -2.21951, -14.7606, 9.06501, 0.52 ) }
    dend_12 { pt3dadd( -2.31417, -16.217, 9.00323, 0.22 ) }
    dend_12 { pt3dadd( -2.3491, -17.1501, 8.99049, 0.29 ) }
    dend_12 { pt3dadd( -2.39573, -17.9829, 8.99609, 0.29 ) }
    dend_12 { pt3dadd( -2.46231, -18.6212, 9.01901, 1.03 ) }
    dend_12 { pt3dadd( -2.61191, -19.5871, 9.06696, 1.84 ) }
    dend_12 { pt3dadd( -2.93297, -21.0044, 9.16357, 0.74 ) }
    dend_12 { pt3dadd( -3.38496, -22.4709, 9.29854, 0.29 ) }
    dend_12 { pt3dadd( -3.95534, -23.8149, 9.46545, 0.29 ) }
    dend_12 { pt3dadd( -4.32664, -24.5328, 9.57548, 0.29 ) }
    dend_12 { pt3dadd( -4.59636, -25.0089, 9.65508, 0.88 ) }
    dend_12 { pt3dadd( -4.96688, -25.6389, 9.76673, 1.47 ) }
    dend_12 { pt3dadd( -5.36199, -26.3363, 9.88048, 0.88 ) }
    dend_12 { pt3dadd( -6.23286, -28.1028, 10.1269, 0.22 ) }
    dend_12 { pt3dadd( -6.49762, -28.781, 10.2006, 0.15 ) }
    dend_12 { pt3dadd( -6.76429, -29.6343, 10.2881, 0.37 ) }
    dend_12 { pt3dadd( -6.98909, -30.4002, 10.3753, 0.22 ) }
    dend_12 { pt3dadd( -7.34553, -31.5462, 10.5265, 0.22 ) }
    dend_12 { pt3dadd( -7.69098, -32.4973, 10.6728, 0.52 ) }
    dend_12 { pt3dadd( -7.92509, -33.0283, 10.7734, 0.96 ) }
    dend_12 { pt3dadd( -8.50475, -34.0042, 11.0077, 1.62 ) }
    dend_12 { pt3dadd( -9.33997, -35.115, 11.3249, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -10.3008, -36.2314, 11.6914, 0.59 ) }
    dend_12 { pt3dadd( -11.0634, -37.0491, 11.9928, 0.88 ) }
    dend_12 { pt3dadd( -11.7923, -37.8242, 12.2807, 1.55 ) }
    dend_12 { pt3dadd( -12.428, -38.5111, 12.5284, 1.55 ) }
    dend_12 { pt3dadd( -13.3657, -39.6082, 12.8831, 0.37 ) }
    dend_12 { pt3dadd( -14.1178, -40.617, 13.1976, 0.22 ) }
    dend_12 { pt3dadd( -14.5347, -41.2441, 13.3876, 0.44 ) }
    dend_12 { pt3dadd( -15.1046, -42.1947, 13.6637, 1.11 ) }
    dend_12 { pt3dadd( -15.36, -42.6934, 13.7917, 1.11 ) }
    dend_12 { pt3dadd( -15.8662, -43.8444, 14.0629, 0.44 ) }
    dend_12 { pt3dadd( -16.2656, -44.8758, 14.2609, 0.22 ) }
    dend_12 { pt3dadd( -16.5867, -45.8328, 14.3919, 0.29 ) }
    dend_12 { pt3dadd( -16.7764, -46.4199, 14.4401, 0.15 ) }
    dend_12 { pt3dadd( -17.094, -47.4149, 14.4849, 0.29 ) }
    dend_12 { pt3dadd( -17.2206, -47.8129, 14.493, 0.96 ) }
    dend_12 { pt3dadd( -17.5254, -48.7473, 14.4922, 1.62 ) }
    dend_12 { pt3dadd( -18.0227, -50.3303, 14.4641, 2.06 ) }
    dend_12 { pt3dadd( -18.4881, -51.8779, 14.4508, 1.4 ) }
    dend_12 { pt3dadd( -18.7074, -52.625, 14.4562, 0.59 ) }
    dend_12 { pt3dadd( -19.0464, -53.7936, 14.4913, 0.22 ) }
    dend_12 { pt3dadd( -19.247, -54.5757, 14.5261, 0.22 ) }
    dend_12 { pt3dadd( -19.4208, -55.3625, 14.5776, 0.66 ) }
    dend_12 { pt3dadd( -19.5853, -56.2291, 14.6416, 0.74 ) }
    dend_12 { pt3dadd( -19.7389, -57.1576, 14.7233, 0.22 ) }
    dend_12 { pt3dadd( -19.9209, -58.1971, 14.8375, 0.15 ) }
    dend_12 { pt3dadd( -20.0762, -59.0508, 14.9622, 0.22 ) }
    dend_12 { pt3dadd( -20.1745, -59.6477, 15.0634, 0.66 ) }
    dend_12 { pt3dadd( -20.2981, -60.3937, 15.2088, 1.25 ) }
    dend_12 { pt3dadd( -20.4872, -61.4209, 15.4301, 1.47 ) }
    dend_12 { pt3dadd( -20.7582, -62.6534, 15.7144, 0.88 ) }
    dend_12 { pt3dadd( -21.0387, -63.7021, 15.9643, 0.22 ) }
    dend_12 { pt3dadd( -21.271, -64.4256, 16.1383, 0.22 ) }
    dend_12 { pt3dadd( -21.5268, -65.1232, 16.3025, 0.22 ) }
    dend_12 { pt3dadd( -21.9903, -66.2204, 16.5506, 0.37 ) }
    dend_12 { pt3dadd( -22.4372, -67.1638, 16.7422, 0.37 ) }
    dend_12 { pt3dadd( -22.9359, -68.1584, 16.9267, 0.52 ) }
    dend_12 { pt3dadd( -23.2389, -68.7565, 17.0344, 0.22 ) }
    dend_12 { pt3dadd( -23.5185, -69.3375, 17.1415, 0.37 ) }
    dend_12 { pt3dadd( -23.7535, -69.926, 17.246, 0.74 ) }
    dend_12 { pt3dadd( -24.0458, -70.9701, 17.4214, 0.22 ) }
    dend_12 { pt3dadd( -24.2445, -72.0913, 17.5934, 0.22 ) }
    dend_12 { pt3dadd( -24.355, -72.9924, 17.7125, 0.29 ) }
    dend_12 { pt3dadd( -24.4387, -73.6634, 17.7925, 0.52 ) }
    dend_12 { pt3dadd( -24.5638, -74.6301, 17.8973, 1.11 ) }
    dend_12 { pt3dadd( -24.6779, -75.4842, 17.98, 1.7 ) }
    dend_12 { pt3dadd( -24.8527, -76.667, 18.0778, 1.33 ) }
    dend_12 { pt3dadd( -25.0525, -78.0102, 18.1619, 0.22 ) }
    dend_12 { pt3dadd( -25.1808, -79.0743, 18.224, 0.22 ) }
    dend_12 { pt3dadd( -25.2203, -79.4423, 18.245, 0.22 ) }
    dend_12 { pt3dadd( -25.2621, -79.8713, 18.27, 0.29 ) }
    dend_12 { pt3dadd( -25.3227, -80.5346, 18.3114, 0.52 ) }
    dend_12 { pt3dadd( -25.389, -81.389, 18.37, 0.22 ) }
    dend_12 { pt3dadd( -25.4672, -82.1019, 18.4304, 0.22 ) }
    dend_12 { pt3dadd( -25.5817, -82.6974, 18.4874, 0.22 ) }
    dend_12 { pt3dadd( -25.7976, -83.3153, 18.5592, 0.81 ) }
    dend_12 { pt3dadd( -26.0691, -83.8214, 18.6302, 1.47 ) }
    dend_12 { pt3dadd( -26.3274, -84.1983, 18.6902, 1.47 ) }
    dend_12 { pt3dadd( -27.0145, -85.0825, 18.841, 0.22 ) }
    dend_12 { pt3dadd( -27.3975, -85.5634, 18.9239, 0.22 ) }
    dend_12 { pt3dadd( -27.8488, -86.1736, 19.0239, 0.37 ) }
    dend_12 { pt3dadd( -28.3981, -86.9924, 19.1495, 0.44 ) }
    dend_12 { pt3dadd( -28.7553, -87.5682, 19.2341, 0.22 ) }
    dend_12 { pt3dadd( -28.895, -87.8197, 19.2639, 0.22 ) }
    dend_12 { pt3dadd( -29.0608, -88.1479, 19.2951, 0.22 ) }
    dend_12 { pt3dadd( -29.3707, -88.7952, 19.3494, 0.22 ) }
    dend_12 { pt3dadd( -29.6205, -89.3168, 19.3917, 0.74 ) }
    dend_12 { pt3dadd( -29.9258, -89.9602, 19.4438, 1.47 ) }
    dend_12 { pt3dadd( -30.4042, -90.8735, 19.5385, 1.99 ) }
    dend_12 { pt3dadd( -30.8934, -91.703, 19.662, 1.77 ) }
    dend_12 { pt3dadd( -31.7449, -92.9789, 19.9059, 0.66 ) }
    dend_12 { pt3dadd( -32.2512, -93.6573, 20.0633, 0.15 ) }
    dend_12 { pt3dadd( -32.7928, -94.3348, 20.2358, 0.15 ) }
    dend_12 { pt3dadd( -33.3749, -95.0545, 20.4215, 0.22 ) }
    dend_12 { pt3dadd( -33.8877, -95.658, 20.5822, 0.22 ) }
    dend_12 { pt3dadd( -34.4243, -96.2783, 20.7167, 0.29 ) }
    dend_12 { pt3dadd( -34.8789, -96.8183, 20.7981, 0.81 ) }
    dend_12 { pt3dadd( -35.4823, -97.6027, 20.8582, 1.47 ) }
    dend_12 { pt3dadd( -36.1425, -98.5705, 20.852, 0.52 ) }
    dend_12 { pt3dadd( -36.6774, -99.563, 20.7644, 0.22 ) }
    dend_12 { pt3dadd( -37.0124, -100.364, 20.6543, 0.22 ) }
    dend_12 { pt3dadd( -37.2145, -101.026, 20.5626, 0.22 ) }
    dend_12 { pt3dadd( -37.2884, -101.367, 20.5132, 0.22 ) }
    dend_12 { pt3dadd( -37.3718, -101.927, 20.4326, 0.29 ) }
    dend_12 { pt3dadd( -37.4709, -102.777, 20.3087, 0.74 ) }
    dend_12 { pt3dadd( -37.5444, -103.421, 20.2104, 1.03 ) }
    dend_12 { pt3dadd( -37.7642, -104.783, 20.0227, 0.37 ) }
    dend_12 { pt3dadd( -37.9618, -105.709, 19.9056, 0.88 ) }
    dend_12 { pt3dadd( -38.1792, -106.596, 19.8031, 1.18 ) }
    dend_12 { pt3dadd( -38.3897, -107.401, 19.7163, 1.18 ) }
    dend_12 { pt3dadd( -38.7839, -108.882, 19.591, 0.29 ) }
    dend_12 { pt3dadd( -39.1562, -110.155, 19.5182, 0.29 ) }
    dend_12 { pt3dadd( -39.4355, -111.026, 19.5023, 0.37 ) }
    dend_12 { pt3dadd( -39.6495, -111.632, 19.5252, 0.88 ) }
    dend_12 { pt3dadd( -39.8715, -112.248, 19.5792, 0.66 ) }
    dend_12 { pt3dadd( -40.1375, -113.087, 19.6915, 0.22 ) }
    dend_12 { pt3dadd( -40.3121, -113.769, 19.8116, 0.22 ) }
    dend_12 { pt3dadd( -40.4541, -114.523, 19.9463, 0.37 ) }
    dend_12 { pt3dadd( -40.5285, -115.059, 20.0451, 0.66 ) }
    dend_12 { pt3dadd( -40.6285, -115.905, 20.2103, 1.11 ) }
    dend_12 { pt3dadd( -40.7494, -116.911, 20.414, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -40.8437, -117.545, 20.5458, 0.29 ) }
    dend_12 { pt3dadd( -40.9873, -118.425, 20.7421, 0.22 ) }
    dend_12 { pt3dadd( -41.0967, -119.024, 20.8655, 0.29 ) }
    dend_12 { pt3dadd( -41.297, -120.077, 21.0338, 0.96 ) }
    dend_12 { pt3dadd( -41.4489, -120.83, 21.1153, 1.03 ) }
    dend_12 { pt3dadd( -41.7048, -122.13, 21.1899, 0.81 ) }
    dend_12 { pt3dadd( -41.8901, -123.178, 21.1972, 0.29 ) }
    dend_12 { pt3dadd( -42.0535, -124.047, 21.1708, 0.22 ) }
    dend_12 { pt3dadd( -42.234, -124.958, 21.1179, 0.29 ) }
    dend_12 { pt3dadd( -42.3972, -125.754, 21.0512, 0.74 ) }
    dend_12 { pt3dadd( -42.5396, -126.455, 20.9884, 0.52 ) }
    dend_12 { pt3dadd( -42.8819, -127.988, 20.8632, 0.29 ) }
    dend_12 { pt3dadd( -43.2645, -129.411, 20.7983, 0.29 ) }
    dend_12 { pt3dadd( -43.6865, -130.701, 20.8288, 0.29 ) }
    dend_12 { pt3dadd( -43.9488, -131.397, 20.8787, 0.29 ) }
    dend_12 { pt3dadd( -44.229, -132.071, 20.9427, 1.03 ) }
    dend_12 { pt3dadd( -44.5173, -132.723, 21.0086, 1.7 ) }
    dend_12 { pt3dadd( -45.0251, -133.862, 21.1311, 1.4 ) }
    dend_12 { pt3dadd( -45.7867, -135.571, 21.3313, 0.44 ) }
    dend_12 { pt3dadd( -46.2363, -136.541, 21.4695, 0.15 ) }
    dend_12 { pt3dadd( -46.4378, -136.966, 21.5349, 0.37 ) }
    dend_12 { pt3dadd( -46.7635, -137.644, 21.6312, 0.59 ) }
    dend_12 { pt3dadd( -47.073, -138.313, 21.7068, 0.59 ) }
    dend_12 { pt3dadd( -47.644, -139.573, 21.8029, 0.22 ) }
    dend_12 { pt3dadd( -48.0893, -140.512, 21.8457, 0.22 ) }
    dend_12 { pt3dadd( -48.4288, -141.206, 21.8764, 0.22 ) }
    dend_12 { pt3dadd( -48.6958, -141.763, 21.8963, 0.88 ) }
    dend_12 { pt3dadd( -48.9473, -142.325, 21.9357, 1.47 ) }
    dend_12 { pt3dadd( -49.295, -143.156, 22.0051, 1.84 ) }
    dend_12 { pt3dadd( -50.2508, -145.6, 22.2423, 0.22 ) }
    dend_12 { pt3dadd( -50.3912, -145.98, 22.2761, 0.22 ) }
    dend_12 { pt3dadd( -50.5736, -146.489, 22.3269, 0.22 ) }
    dend_12 { pt3dadd( -51.0034, -147.619, 22.4373, 0.22 ) }
    dend_12 { pt3dadd( -51.308, -148.33, 22.5051, 0.22 ) }
    dend_12 { pt3dadd( -51.5724, -148.877, 22.546, 0.74 ) }
    dend_12 { pt3dadd( -52.0714, -149.848, 22.5747, 1.33 ) }
    dend_12 { pt3dadd( -52.7262, -151.014, 22.5855, 0.22 ) }
    dend_12 { pt3dadd( -53.1258, -151.674, 22.5783, 0.22 ) }
    dend_12 { pt3dadd( -53.568, -152.414, 22.5782, 0.22 ) }
    dend_12 { pt3dadd( -53.8743, -153.011, 22.6277, 0.15 ) }
    dend_12 { pt3dadd( -54.0765, -153.493, 22.7089, 0.15 ) }
    dend_12 { pt3dadd( -54.3411, -154.186, 22.9028, 0.37 ) }
    dend_12 { pt3dadd( -54.4587, -154.527, 23.0257, 0.96 ) }
    dend_12 { pt3dadd( -54.878, -155.803, 23.5619, 2.14 ) }
    dend_12 { pt3dadd( -55.3775, -157.283, 24.2506, 0.66 ) }
    dend_12 { pt3dadd( -55.7647, -158.299, 24.7825, 0.15 ) }
    dend_12 { pt3dadd( -56.1503, -159.157, 25.292, 0.15 ) }
    dend_12 { pt3dadd( -56.4058, -159.655, 25.6207, 0.44 ) }
    dend_12 { pt3dadd( -56.6608, -160.11, 25.939, 1.03 ) }
    dend_12 { pt3dadd( -57.0956, -160.85, 26.4611, 1.55 ) }
    dend_12 { pt3dadd( -57.6315, -161.762, 27.1247, 0.44 ) }
    dend_12 { pt3dadd( -57.9795, -162.407, 27.5363, 0.22 ) }
    dend_12 { pt3dadd( -58.2182, -162.922, 27.813, 0.22 ) }
    dend_12 { pt3dadd( -58.5671, -163.732, 28.1868, 0.22 ) }
    dend_12 { pt3dadd( -58.8924, -164.507, 28.491, 0.29 ) }
    dend_12 { pt3dadd( -59.2669, -165.404, 28.7734, 0.29 ) }
    dend_12 { pt3dadd( -59.7448, -166.539, 29.0485, 0.15 ) }
    dend_12 { pt3dadd( -60.1143, -167.383, 29.2098, 0.22 ) }
    dend_12 { pt3dadd( -60.523, -168.255, 29.3113, 0.88 ) }
    dend_12 { pt3dadd( -61.1323, -169.483, 29.3574, 0.74 ) }
    dend_12 { pt3dadd( -61.5542, -170.275, 29.3281, 0.88 ) }
    dend_12 { pt3dadd( -61.9988, -171.093, 29.2376, 1.77 ) }
    dend_12 { pt3dadd( -62.5009, -172.021, 29.0694, 2.29 ) }
    dend_12 { pt3dadd( -63.2378, -173.447, 28.7019, 0.07 ) }
    dend_12 { pt3dadd( -63.658, -174.321, 28.404, 0.15 ) }
    dend_12 { pt3dadd( -63.8997, -174.873, 28.1635, 0.15 ) }
    dend_12 { pt3dadd( -64.0185, -175.179, 28.0143, 0.15 ) }
    dend_12 { pt3dadd( -64.188, -175.774, 27.7176, 0.15 ) }
    dend_12 { pt3dadd( -64.2535, -176.242, 27.5045, 0.15 ) }
    dend_12 { pt3dadd( -64.3029, -177.074, 27.2185, 0.15 ) }
    dend_12 { pt3dadd( -64.3129, -177.382, 27.1332, 0.15 ) }
    dend_12 { pt3dadd( -64.3318, -178.257, 26.9286, 0.66 ) }
    dend_12 { pt3dadd( -64.3942, -179.846, 26.6064, 0.29 ) }
    dend_12 { pt3dadd( -64.4625, -180.881, 26.4378, 0.22 ) }
    dend_12 { pt3dadd( -64.5396, -181.828, 26.318, 0.22 ) }
    dend_12 { pt3dadd( -64.6406, -182.649, 26.2489, 0.22 ) }
    dend_12 { pt3dadd( -64.7328, -183.067, 26.2314, 0.59 ) }
    dend_12 { pt3dadd( -64.8835, -183.466, 26.2357, 0.74 ) }
    dend_12 { pt3dadd( -65.1152, -183.856, 26.2851, 0.37 ) }
    dend_12 { pt3dadd( -65.4741, -184.317, 26.3971, 0.15 ) }
    dend_12 { pt3dadd( -66.232, -185.176, 26.673, 0.15 ) }
    dend_12 { pt3dadd( -66.6669, -185.625, 26.8419, 0.22 ) }
    dend_12 { pt3dadd( -67.1112, -186.082, 27.0166, 0.29 ) }
    dend_12 { pt3dadd( -67.5637, -186.568, 27.2135, 0.22 ) }
    dend_12 { pt3dadd( -68.1298, -187.239, 27.4839, 0.22 ) }
    dend_12 { pt3dadd( -68.7353, -188.059, 27.8017, 0.29 ) }
    dend_12 { pt3dadd( -69.1375, -188.682, 28.0396, 0.29 ) }
    dend_12 { pt3dadd( -69.648, -189.458, 28.3342, 0.22 ) }
    dend_12 { pt3dadd( -70.0875, -190.069, 28.5623, 0.37 ) }
    dend_12 { pt3dadd( -70.529, -190.646, 28.7613, 0.74 ) }
    dend_12 { pt3dadd( -70.8495, -191.06, 28.8983, 1.03 ) }
    dend_12 { pt3dadd( -71.4865, -191.897, 29.1701, 0.22 ) }
    dend_12 { pt3dadd( -72.0536, -192.682, 29.4108, 0.22 ) }
    dend_12 { pt3dadd( -72.5453, -193.373, 29.6035, 0.15 ) }
    dend_12 { pt3dadd( -72.9166, -193.921, 29.7327, 0.15 ) }
    dend_12 { pt3dadd( -73.1743, -194.338, 29.8214, 0.15 ) }
    dend_12 { pt3dadd( -73.5642, -195.072, 29.94, 0.22 ) }
    dend_12 { pt3dadd( -74.0777, -196.195, 30.0731, 0.29 ) }
    dend_12 { pt3dadd( -74.4542, -197.194, 30.1697, 0.74 ) }
    dend_12 { pt3dadd( -74.8082, -198.326, 30.2855, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -75.0576, -199.217, 30.3815, 0.37 ) }
    dend_12 { pt3dadd( -75.2982, -200.169, 30.4872, 0.37 ) }
    dend_12 { pt3dadd( -75.4695, -200.9, 30.5872, 1.4 ) }
    dend_12 { pt3dadd( -75.7206, -201.947, 30.7542, 2.95 ) }
    dend_12 { pt3dadd( -76.1191, -203.412, 31.031, 1.18 ) }
    dend_12 { pt3dadd( -76.4942, -204.551, 31.2797, 0.22 ) }
    dend_12 { pt3dadd( -76.976, -205.865, 31.6134, 0.29 ) }
    dend_12 { pt3dadd( -77.3443, -206.838, 31.8821, 0.74 ) }
    dend_12 { pt3dadd( -77.6255, -207.56, 32.0824, 1.33 ) }
    dend_12 { pt3dadd( -78.1175, -208.651, 32.3816, 0.81 ) }
    dend_12 { pt3dadd( -78.5717, -209.549, 32.574, 1.18 ) }
    dend_12 { pt3dadd( -79.315, -211.039, 32.8092, 0.66 ) }
    dend_12 { pt3dadd( -79.7563, -212.02, 32.9109, 0.29 ) }
    dend_12 { pt3dadd( -79.9156, -212.405, 32.9357, 0.44 ) }
    dend_12 { pt3dadd( -80.513, -214.011, 33.0073, 0.29 ) }
    dend_12 { pt3dadd( -80.9299, -215.214, 33.0255, 0.81 ) }
    dend_12 { pt3dadd( -81.5425, -216.95, 32.9809, 0.22 ) }
    dend_12 { pt3dadd( -81.8799, -217.741, 32.9045, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 54.7844, -10.6964, -8.24587, 0.15 ) }
    dend_9 { pt3dadd( 62.6123, -16.1498, -9.51067, 0.15 ) }
    dend_9 { pt3dadd( 70.032, -22.169, -10.6653, 0.15 ) }
    dend_9 { pt3dadd( 77.6217, -27.6412, -12.916, 0.15 ) }
    dend_9 { pt3dadd( 85.4426, -33.1498, -13.9671, 0.15 ) }
    dend_9 { pt3dadd( 93.7799, -37.2614, -16.4569, 0.15 ) }
    dend_9 { pt3dadd( 102.008, -41.4148, -19.2243, 0.15 ) }
    dend_9 { pt3dadd( 109.758, -46.7231, -21.316, 0.15 ) }
    dend_9 { pt3dadd( 116.224, -53.3763, -23.875, 0.15 ) }
    dend_9 { pt3dadd( 123.783, -59.2157, -25.0494, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 54.7844, -10.6964, -8.24587, 0.59 ) }
    dend_8 { pt3dadd( 64.1168, -15.2516, -6.53649, 0.15 ) }
    dend_8 { pt3dadd( 73.3018, -20.1518, -4.99174, 0.15 ) }
    dend_8 { pt3dadd( 82.6047, -24.4239, -2.54829, 0.15 ) }
    dend_8 { pt3dadd( 91.9374, -28.3512, 0.322399, 0.15 ) }
    dend_8 { pt3dadd( 101.432, -32.6655, 1.73996, 0.15 ) }
    dend_8 { pt3dadd( 110.644, -37.5766, 3.0736, 0.15 ) }
    dend_8 { pt3dadd( 119.261, -43.2732, 5.08834, 0.15 ) }
    dend_8 { pt3dadd( 127.451, -49.752, 6.39489, 0.15 ) }
    dend_8 { pt3dadd( 134.92, -56.9806, 8.04499, 0.15 ) }
    dend_8 { pt3dadd( 141.484, -64.5249, 11.3271, 0.15 ) }
    dend_8 { pt3dadd( 148.976, -71.3887, 14.0694, 0.15 ) }
    dend_8 { pt3dadd( 156.499, -78.5897, 15.5913, 0.15 ) }
    dend_8 { pt3dadd( 163.609, -86.2883, 16.5587, 0.15 ) }
    dend_8 { pt3dadd( 171.997, -92.6423, 16.7469, 0.15 ) }
    dend_8 { pt3dadd( 181.897, -96.1643, 17.3416, 0.15 ) }
    dend_8 { pt3dadd( 191.78, -99.6302, 18.3766, 0.15 ) }
    dend_8 { pt3dadd( 202.077, -101.802, 18.2355, 0.15 ) }
    dend_8 { pt3dadd( 212.243, -104.488, 18.6823, 0.15 ) }
    dend_8 { pt3dadd( 222.569, -105.968, 17.2843, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 56.5076, -18.5457, -13.1808, 0.15 ) }
    dend_6 { pt3dadd( 62.3403, -25.5114, -15.6789, 0.15 ) }
    dend_6 { pt3dadd( 67.7068, -33.0642, -17.3935, 0.15 ) }
    dend_6 { pt3dadd( 73.372, -40.1224, -20.0149, 0.15 ) }
    dend_6 { pt3dadd( 77.4413, -48.5732, -20.9144, 0.15 ) }
    dend_6 { pt3dadd( 81.1213, -57.2289, -20.3495, 0.15 ) }
    dend_6 { pt3dadd( 84.7849, -65.9064, -20.6012, 0.15 ) }
    dend_6 { pt3dadd( 89.5363, -73.824, -22.4773, 0.15 ) }
    dend_6 { pt3dadd( 95.3732, -81.1929, -23.1196, 0.15 ) }
    dend_6 { pt3dadd( 100.044, -89.3757, -23.2218, 0.15 ) }
    dend_6 { pt3dadd( 105.693, -96.8967, -22.6636, 0.15 ) }
    dend_6 { pt3dadd( 110.801, -104.806, -22.2847, 0.15 ) }
    dend_6 { pt3dadd( 115.602, -112.861, -23.1989, 0.15 ) }
    dend_6 { pt3dadd( 118.688, -121.648, -24.6313, 0.15 ) }
    dend_6 { pt3dadd( 122.299, -130.336, -25.1561, 0.15 ) }
    dend_6 { pt3dadd( 127.472, -138.186, -24.5265, 0.15 ) }
    dend_6 { pt3dadd( 132.275, -146.196, -25.773, 0.15 ) }
    dend_6 { pt3dadd( 138.222, -153.473, -26.4483, 0.15 ) }
    dend_6 { pt3dadd( 143.734, -161.112, -26.2377, 0.15 ) }
    dend_6 { pt3dadd( 149.051, -168.793, -27.47, 0.15 ) }
    dend_6 { pt3dadd( 154.389, -176.548, -27.8722, 0.15 ) }
    dend_6 { pt3dadd( 159.085, -184.525, -29.6317, 0.15 ) }
    dend_6 { pt3dadd( 163.309, -192.905, -30.4716, 0.15 ) }
    dend_6 { pt3dadd( 167.238, -201.464, -30.1463, 0.15 ) }
    dend_6 { pt3dadd( 171.01, -210.027, -31.2532, 0.15 ) }
    dend_6 { pt3dadd( 175.254, -218.395, -32.1234, 0.15 ) }
    dend_6 { pt3dadd( 178.361, -227.289, -32.2651, 0.15 ) }
    dend_6 { pt3dadd( 181.839, -235.947, -30.9499, 0.15 ) }
    dend_6 { pt3dadd( 186.499, -243.594, -28.0192, 0.15 ) }
    dend_6 { pt3dadd( 191.825, -250.205, -23.9306, 0.15 ) }
    dend_6 { pt3dadd( 197.873, -255.9, -19.4856, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 56.5076, -18.5457, -13.1808, 0.59 ) }
    dend_3 { pt3dadd( 61.2148, -22.6145, -12.8656, 0.15 ) }
    dend_3 { pt3dadd( 66.613, -25.7203, -12.7015, 0.15 ) }
    dend_3 { pt3dadd( 72.1101, -28.633, -12.3678, 0.15 ) }
    dend_3 { pt3dadd( 76.8187, -32.6885, -12.81, 0.15 ) }
    dend_3 { pt3dadd( 81.0791, -37.1735, -13.5492, 0.15 ) }
    dend_3 { pt3dadd( 85.7583, -41.1764, -14.4955, 0.15 ) }
    dend_3 { pt3dadd( 90.8765, -44.5475, -15.615, 0.15 ) }
    dend_3 { pt3dadd( 96.4041, -47.243, -16.6112, 0.15 ) }
    dend_3 { pt3dadd( 102.024, -49.9295, -16.7306, 0.15 ) }
    dend_3 { pt3dadd( 107.339, -53.1433, -16.2444, 0.15 ) }
    dend_3 { pt3dadd( 112.71, -55.9097, -14.7244, 0.15 ) }
    dend_3 { pt3dadd( 117.386, -59.3365, -12.4435, 0.15 ) }
    dend_3 { pt3dadd( 121.204, -63.1512, -9.33159, 0.15 ) }
    dend_3 { pt3dadd( 123.841, -66.9467, -5.15355, 0.15 ) }
    dend_3 { pt3dadd( 126.69, -70.9505, -1.32404, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -111.838, -170.09, 2.865, 0.15 ) }
    dend_56 { pt3dadd( -118.289, -177.722, 3.65125, 0.15 ) }
    dend_56 { pt3dadd( -124.152, -185.798, 2.7102, 0.15 ) }
    dend_56 { pt3dadd( -130.52, -193.54, 2.75046, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -111.838, -170.09, 2.865, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -117.572, -177.964, 4.34145, 0.15 ) }
    dend_55 { pt3dadd( -121.536, -186.775, 6.26688, 0.15 ) }
    dend_55 { pt3dadd( -125.938, -195.19, 8.8879, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -56.5582, -125.66, -90.5693, 0.15 ) }
    dend_52 { pt3dadd( -60.561, -135.723, -96.2929, 0.15 ) }
    dend_52 { pt3dadd( -64.8382, -146.454, -100.367, 0.15 ) }
    dend_52 { pt3dadd( -68.3424, -156.877, -105.765, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -56.5582, -125.66, -90.5693, 0.59 ) }
    dend_51 { pt3dadd( -58.816, -133.269, -95.8705, 0.15 ) }
    dend_51 { pt3dadd( -59.1628, -141.291, -101.033, 0.15 ) }
    dend_51 { pt3dadd( -60.8179, -149.147, -106.194, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 34.3694, -228.188, 55.5234, 0.15 ) }
    dend_45 { pt3dadd( 35.1356, -228.787, 55.4497, 0.15 ) }
    dend_45 { pt3dadd( 35.4887, -229.063, 55.4157, 0.37 ) }
    dend_45 { pt3dadd( 36.0807, -229.526, 55.3587, 1.18 ) }
    dend_45 { pt3dadd( 36.5116, -229.862, 55.3172, 0.88 ) }
    dend_45 { pt3dadd( 37.2685, -230.454, 55.2444, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 34.3694, -228.188, 55.5234, 0.22 ) }
    dend_44 { pt3dadd( 34.5012, -229.343, 55.2178, 0.22 ) }
    dend_44 { pt3dadd( 34.5843, -230.202, 54.9554, 0.81 ) }
    dend_44 { pt3dadd( 34.6389, -231.036, 54.7037, 1.18 ) }
    dend_44 { pt3dadd( 34.6504, -232.304, 54.3516, 0.22 ) }
    dend_44 { pt3dadd( 34.5657, -233.384, 54.0898, 0.22 ) }
    dend_44 { pt3dadd( 34.4092, -234.455, 53.8605, 0.29 ) }
    dend_44 { pt3dadd( 34.1879, -235.467, 53.6759, 0.66 ) }
    dend_44 { pt3dadd( 33.8763, -236.489, 53.5381, 0.81 ) }
    dend_44 { pt3dadd( 33.4593, -237.597, 53.4449, 0.22 ) }
    dend_44 { pt3dadd( 32.8297, -239.036, 53.4094, 0.22 ) }
    dend_44 { pt3dadd( 32.5127, -239.744, 53.4321, 0.29 ) }
    dend_44 { pt3dadd( 32.208, -240.455, 53.4783, 0.96 ) }
    dend_44 { pt3dadd( 31.9362, -241.153, 53.5474, 1.7 ) }
    dend_44 { pt3dadd( 31.4371, -242.686, 53.7422, 0.52 ) }
    dend_44 { pt3dadd( 31.1015, -244.06, 53.9595, 0.22 ) }
    dend_44 { pt3dadd( 30.9853, -244.783, 54.0978, 0.15 ) }
    dend_44 { pt3dadd( 30.8604, -245.935, 54.3614, 0.22 ) }
    dend_44 { pt3dadd( 30.7808, -246.944, 54.5828, 0.15 ) }
    dend_44 { pt3dadd( 30.7227, -247.802, 54.7679, 0.15 ) }
    dend_44 { pt3dadd( 30.6853, -248.386, 54.8877, 0.15 ) }
    dend_44 { pt3dadd( 30.6511, -249.038, 55.0037, 0.37 ) }
    dend_44 { pt3dadd( 30.5957, -249.884, 55.1027, 0.59 ) }
    dend_44 { pt3dadd( 30.4561, -251.443, 55.1698, 0.07 ) }
    dend_44 { pt3dadd( 30.3454, -252.329, 55.1478, 0.07 ) }
    dend_44 { pt3dadd( 30.2108, -253.293, 55.0854, 0.15 ) }
    dend_44 { pt3dadd( 30.1231, -253.956, 55.0281, 0.66 ) }
    dend_44 { pt3dadd( 30.023, -254.772, 54.9531, 0.74 ) }
    dend_44 { pt3dadd( 29.8801, -256.146, 54.8476, 0.15 ) }
    dend_44 { pt3dadd( 29.805, -257.026, 54.8177, 0.22 ) }
    dend_44 { pt3dadd( 29.7491, -257.745, 54.8017, 0.15 ) }
    dend_44 { pt3dadd( 29.6832, -258.369, 54.7988, 0.81 ) }
    dend_44 { pt3dadd( 29.5872, -259.028, 54.8099, 0.66 ) }
    dend_44 { pt3dadd( 29.375, -260.141, 54.829, 0.15 ) }
    dend_44 { pt3dadd( 29.1704, -261.029, 54.8283, 0.22 ) }
    dend_44 { pt3dadd( 28.8822, -262.136, 54.8106, 0.52 ) }
    dend_44 { pt3dadd( 28.5894, -263.026, 54.8082, 0.59 ) }
    dend_44 { pt3dadd( 28.1823, -264.191, 54.8591, 0.07 ) }
    dend_44 { pt3dadd( 27.8581, -265.114, 54.9326, 0.22 ) }
    dend_44 { pt3dadd( 27.7385, -265.447, 54.9627, 0.22 ) }
    dend_44 { pt3dadd( 27.4645, -266.206, 55.0414, 0.96 ) }
    dend_44 { pt3dadd( 26.9384, -267.646, 55.2212, 0.07 ) }
    dend_44 { pt3dadd( 26.5166, -268.904, 55.4412, 0.07 ) }
    dend_44 { pt3dadd( 26.3386, -269.48, 55.5972, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -9.5819, -223.332, 27.1313, 0.15 ) }
    dend_41 { pt3dadd( -9.37629, -230.943, 28.6052, 0.15 ) }
    dend_41 { pt3dadd( -9.96397, -238.575, 29.8507, 0.15 ) }
    dend_41 { pt3dadd( -10.5495, -246.175, 31.275, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -9.5819, -223.332, 27.1313, 0.59 ) }
    dend_40 { pt3dadd( -9.89721, -232.422, 28.8432, 0.15 ) }
    dend_40 { pt3dadd( -11.6382, -241.509, 29.0891, 0.15 ) }
    dend_40 { pt3dadd( -13.3202, -250.285, 31.4992, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 13.4063, 34.8693, 1.91771, 0.52 ) }
    dend_32 { pt3dadd( 14.2489, 35.4787, 1.95299, 0.52 ) }
    dend_32 { pt3dadd( 15.1778, 35.7448, 2.0286, 0.37 ) }
    dend_32 { pt3dadd( 15.8364, 35.8336, 2.11474, 0.37 ) }
    dend_32 { pt3dadd( 16.1774, 35.871, 2.15738, 0.52 ) }
    dend_32 { pt3dadd( 16.8248, 35.9655, 2.2157, 0.52 ) }
    dend_32 { pt3dadd( 17.8483, 36.1624, 2.26619, 0.44 ) }
    dend_32 { pt3dadd( 18.3634, 36.2481, 2.26397, 0.44 ) }
    dend_32 { pt3dadd( 18.9413, 36.3843, 2.2481, 0.66 ) }
    dend_32 { pt3dadd( 19.4137, 36.5782, 2.23978, 0.66 ) }
    dend_32 { pt3dadd( 19.9628, 36.9335, 2.2422, 0.88 ) }
    dend_32 { pt3dadd( 20.2763, 37.2415, 2.26126, 1.03 ) }
    dend_32 { pt3dadd( 20.8347, 37.9903, 2.35857, 0.52 ) }
    dend_32 { pt3dadd( 21.2199, 38.5847, 2.46519, 0.52 ) }
    dend_32 { pt3dadd( 21.5318, 39.1017, 2.57975, 0.52 ) }
    dend_32 { pt3dadd( 21.8019, 39.5551, 2.70755, 0.52 ) }
    dend_32 { pt3dadd( 22.2564, 40.2777, 2.93062, 0.22 ) }
    dend_32 { pt3dadd( 22.6843, 40.9493, 3.15695, 0.44 ) }
    dend_32 { pt3dadd( 23.1044, 41.6156, 3.38666, 0.74 ) }
    dend_32 { pt3dadd( 23.5618, 42.3568, 3.6067, 1.18 ) }
    dend_32 { pt3dadd( 23.9053, 42.907, 3.74018, 0.88 ) }
    dend_32 { pt3dadd( 24.4846, 43.7791, 3.92828, 0.29 ) }
    dend_32 { pt3dadd( 29.1494, 49.7733, 5.59643, 0.29 ) }
    dend_32 { pt3dadd( 34.1543, 55.5234, 7.13251, 0.29 ) }
    dend_32 { pt3dadd( 38.1179, 61.9523, 8.98507, 0.29 ) }
    dend_32 { pt3dadd( 41.2868, 68.5023, 11.7287, 0.29 ) }
    dend_32 { pt3dadd( 44.1798, 75.2479, 14.2977, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 13.4063, 34.8693, 1.91771, 0.88 ) }
    dend_25 { pt3dadd( 13.9995, 36.2142, 3.29582, 0.88 ) }
    dend_25 { pt3dadd( 14.4595, 37.0843, 4.2056, 0.81 ) }
    dend_25 { pt3dadd( 15.1098, 38.0897, 5.20749, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 15.9, 39.1263, 6.19144, 1.33 ) }
    dend_25 { pt3dadd( 16.9069, 40.3652, 7.27716, 1.33 ) }
    dend_25 { pt3dadd( 17.5067, 41.0975, 7.89062, 1.33 ) }
    dend_25 { pt3dadd( 18.2103, 41.9565, 8.52885, 1.33 ) }
    dend_25 { pt3dadd( 19.1397, 43.0498, 9.28396, 1.18 ) }
    dend_25 { pt3dadd( 20.0548, 44.0876, 9.97471, 1.03 ) }
    dend_25 { pt3dadd( 20.8627, 44.9866, 10.5999, 0.88 ) }
    dend_25 { pt3dadd( 21.8407, 46.1123, 11.3894, 1.4 ) }
    dend_25 { pt3dadd( 22.9878, 47.536, 12.3713, 0.74 ) }
    dend_25 { pt3dadd( 23.8968, 48.7236, 13.1898, 1.25 ) }
    dend_25 { pt3dadd( 24.8665, 49.9906, 14.0885, 1.77 ) }
    dend_25 { pt3dadd( 26.1741, 51.6477, 15.232, 0.96 ) }
    dend_25 { pt3dadd( 27.328, 53.0339, 16.1222, 0.59 ) }
    dend_25 { pt3dadd( 28.2336, 54.0804, 16.7144, 0.74 ) }
    dend_25 { pt3dadd( 28.9425, 54.8877, 17.1124, 0.96 ) }
    dend_25 { pt3dadd( 30.1917, 56.362, 17.7588, 1.11 ) }
    dend_25 { pt3dadd( 31.0668, 57.4658, 18.2158, 1.4 ) }
    dend_25 { pt3dadd( 31.8192, 58.4902, 18.6403, 1.4 ) }
    dend_25 { pt3dadd( 33.012, 60.1656, 19.4183, 0.96 ) }
    dend_25 { pt3dadd( 33.4756, 60.8728, 19.8015, 0.96 ) }
    dend_25 { pt3dadd( 34.315, 62.3259, 20.7376, 1.18 ) }
    dend_25 { pt3dadd( 34.9014, 63.4927, 21.6413, 1.18 ) }
    dend_25 { pt3dadd( 35.4704, 64.6425, 22.6663, 1.03 ) }
    dend_25 { pt3dadd( 35.8859, 65.3884, 23.3941, 0.96 ) }
    dend_25 { pt3dadd( 36.5192, 66.346, 24.3591, 0.81 ) }
    dend_25 { pt3dadd( 37.3144, 67.3609, 25.3624, 0.74 ) }
    dend_25 { pt3dadd( 38.2802, 68.4242, 26.3582, 0.96 ) }
    dend_25 { pt3dadd( 39.3549, 69.539, 27.3169, 1.25 ) }
    dend_25 { pt3dadd( 40.5973, 70.7993, 28.3112, 1.55 ) }
    dend_25 { pt3dadd( 41.6983, 71.9409, 29.1095, 0.88 ) }
    dend_25 { pt3dadd( 42.9812, 73.3168, 29.8966, 0.59 ) }
    dend_25 { pt3dadd( 43.7572, 74.2316, 30.3164, 0.81 ) }
    dend_25 { pt3dadd( 44.5704, 75.3239, 30.7095, 0.96 ) }
    dend_25 { pt3dadd( 45.4009, 76.5517, 31.1188, 1.33 ) }
    dend_25 { pt3dadd( 46.5821, 78.5289, 31.7169, 1.55 ) }
    dend_25 { pt3dadd( 47.5615, 80.3212, 32.187, 1.7 ) }
    dend_25 { pt3dadd( 48.4843, 82.104, 32.5589, 1.62 ) }
    dend_25 { pt3dadd( 49.5101, 84.1388, 32.8856, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.584666, 172.857, -115.911, 0.15 ) }
    dend_23 { pt3dadd( 0.126197, 182.049, -123.46, 0.15 ) }
    dend_23 { pt3dadd( 1.2953, 191.601, -130.466, 0.15 ) }
    dend_23 { pt3dadd( 0.164896, 201.54, -136.916, 0.15 ) }
    dend_23 { pt3dadd( -0.732792, 211.786, -142.908, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.584666, 172.857, -115.911, 0.59 ) }
    dend_22 { pt3dadd( -1.31911, 180.918, -121.812, 0.15 ) }
    dend_22 { pt3dadd( -3.7063, 188.437, -128.23, 0.15 ) }
    dend_22 { pt3dadd( -5.7099, 197.509, -132.367, 0.15 ) }
    dend_22 { pt3dadd( -6.28247, 206.835, -136.383, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -14.697, 18.3477, 7.2855, 0.81 ) }
    dend_17 { pt3dadd( -12.9936, 19.25, 8.25869, 0.81 ) }
    dend_17 { pt3dadd( -12.0287, 19.8508, 8.72672, 0.44 ) }
    dend_17 { pt3dadd( -10.6438, 20.9172, 9.4301, 0.59 ) }
    dend_17 { pt3dadd( -9.53375, 21.8887, 10.0602, 0.59 ) }
    dend_17 { pt3dadd( -8.6213, 22.7392, 10.6188, 0.88 ) }
    dend_17 { pt3dadd( -7.93149, 23.4056, 11.0654, 1.11 ) }
    dend_17 { pt3dadd( -7.05493, 24.2428, 11.4835, 1.11 ) }
    dend_17 { pt3dadd( -6.24838, 25.2639, 11.8764, 0.29 ) }
    dend_17 { pt3dadd( -6.11287, 25.9112, 12.1106, 0.29 ) }
    dend_17 { pt3dadd( -6.4054, 26.4357, 12.3581, 0.29 ) }
    dend_17 { pt3dadd( -6.64311, 26.7095, 12.5099, 0.29 ) }
    dend_17 { pt3dadd( -6.89327, 27.0214, 12.7446, 0.29 ) }
    dend_17 { pt3dadd( -7.22374, 27.5536, 13.2961, 0.59 ) }
    dend_17 { pt3dadd( -7.37551, 28.044, 13.9226, 1.11 ) }
    dend_17 { pt3dadd( -7.47899, 28.8043, 15.0209, 1.84 ) }
    dend_17 { pt3dadd( -7.49518, 29.4021, 16.009, 1.84 ) }
    dend_17 { pt3dadd( -7.46191, 30.1333, 17.325, 0.96 ) }
    dend_17 { pt3dadd( -7.4119, 30.6069, 18.2706, 0.74 ) }
    dend_17 { pt3dadd( -7.32824, 31.1272, 19.2971, 0.74 ) }
    dend_17 { pt3dadd( -7.27292, 31.7504, 20.4434, 0.74 ) }
    dend_17 { pt3dadd( -7.28632, 32.2747, 21.3112, 1.11 ) }
    dend_17 { pt3dadd( -7.32572, 32.9707, 22.249, 1.47 ) }
    dend_17 { pt3dadd( -7.35612, 33.7255, 23.1229, 1.47 ) }
    dend_17 { pt3dadd( -7.36582, 34.76, 24.2021, 0.74 ) }
    dend_17 { pt3dadd( -7.35295, 36.1469, 25.5547, 0.52 ) }
    dend_17 { pt3dadd( -7.32885, 36.9046, 26.2759, 0.52 ) }
    dend_17 { pt3dadd( -7.29759, 37.9436, 27.3092, 0.37 ) }
    dend_17 { pt3dadd( -7.23135, 38.7193, 28.2481, 0.37 ) }
    dend_17 { pt3dadd( -7.17232, 38.9048, 28.7012, 0.37 ) }
    dend_17 { pt3dadd( -7.08499, 38.9392, 29.315, 0.37 ) }
    dend_17 { pt3dadd( -7.01876, 38.9112, 29.7798, 0.37 ) }
    dend_17 { pt3dadd( -6.98299, 38.8923, 30.9505, 0.37 ) }
    dend_17 { pt3dadd( -7.11253, 38.9925, 31.8616, 0.37 ) }
    dend_17 { pt3dadd( -7.40267, 39.3855, 33.1112, 0.37 ) }
    dend_17 { pt3dadd( -7.64692, 39.7821, 33.9478, 0.37 ) }
    dend_17 { pt3dadd( -7.95676, 40.278, 34.782, 0.59 ) }
    dend_17 { pt3dadd( -8.32187, 40.8754, 35.6157, 0.88 ) }
    dend_17 { pt3dadd( -9.0041, 42.0622, 36.9344, 0.88 ) }
    dend_17 { pt3dadd( -9.6086, 43.0935, 37.9154, 0.59 ) }
    dend_17 { pt3dadd( -10.3746, 44.4137, 38.9972, 0.59 ) }
    dend_17 { pt3dadd( -10.8041, 45.2518, 39.608, 0.29 ) }
    dend_17 { pt3dadd( -11.1865, 46.1672, 40.1994, 0.29 ) }
    dend_17 { pt3dadd( -11.5345, 47.2424, 40.8168, 0.29 ) }
    dend_17 { pt3dadd( -11.7273, 48.0476, 41.232, 0.96 ) }
    dend_17 { pt3dadd( -11.8562, 48.8384, 41.6482, 1.84 ) }
    dend_17 { pt3dadd( -11.9902, 50.0559, 42.2785, 0.37 ) }
    dend_17 { pt3dadd( -12.1079, 50.9953, 42.7905, 0.81 ) }
    dend_17 { pt3dadd( -12.3327, 52.1032, 43.4579, 1.55 ) }
    dend_17 { pt3dadd( -12.6566, 53.2045, 44.2256, 0.22 ) }
    dend_17 { pt3dadd( -12.9477, 54.03, 44.8344, 0.22 ) }
    dend_17 { pt3dadd( -13.1784, 54.6108, 45.3035, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( -13.4076, 55.3442, 45.8994, 0.29 ) }
    dend_17 { pt3dadd( -13.534, 56.0566, 46.4407, 0.29 ) }
    dend_17 { pt3dadd( -13.5841, 56.8883, 47.0406, 0.59 ) }
    dend_17 { pt3dadd( -13.5506, 58.1121, 47.9296, 1.77 ) }
    dend_17 { pt3dadd( -13.4813, 58.9808, 48.5593, 2.14 ) }
    dend_17 { pt3dadd( -13.2422, 60.5965, 49.7283, 0.29 ) }
    dend_17 { pt3dadd( -13.0821, 61.3635, 50.2714, 0.29 ) }
    dend_17 { pt3dadd( -12.9203, 62.1095, 50.7858, 0.29 ) }
    dend_17 { pt3dadd( -12.8166, 62.5311, 51.0807, 0.29 ) }
    dend_17 { pt3dadd( -12.6702, 63.112, 51.5306, 0.88 ) }
    dend_17 { pt3dadd( -12.4858, 63.8235, 52.1425, 1.62 ) }
    dend_17 { pt3dadd( -12.3185, 64.3953, 52.7058, 1.62 ) }
    dend_17 { pt3dadd( -12.0534, 65.1364, 53.4302, 2.21 ) }
    dend_17 { pt3dadd( -11.2714, 66.8955, 55.1188, 0.22 ) }
    dend_17 { pt3dadd( -10.9094, 67.6083, 55.7871, 0.22 ) }
    dend_17 { pt3dadd( -10.6454, 68.0834, 56.2348, 0.22 ) }
    dend_17 { pt3dadd( -10.3592, 68.5629, 56.6777, 0.22 ) }
    dend_17 { pt3dadd( -9.78764, 69.4536, 57.4684, 0.44 ) }
    dend_17 { pt3dadd( -9.06863, 70.434, 58.3033, 0.66 ) }
    dend_17 { pt3dadd( -8.95261, 70.5963, 58.4258, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -14.697, 18.3477, 7.2855, 0.96 ) }
    dend_14 { pt3dadd( -14.386, 17.5548, 7.84662, 0.96 ) }
    dend_14 { pt3dadd( -14.0425, 16.7267, 8.41912, 0.37 ) }
    dend_14 { pt3dadd( -13.9703, 16.4137, 8.58891, 0.29 ) }
    dend_14 { pt3dadd( -13.9092, 15.8232, 8.83441, 0.22 ) }
    dend_14 { pt3dadd( -13.9192, 15.4235, 8.98231, 0.22 ) }
    dend_14 { pt3dadd( -13.9868, 14.7977, 9.19963, 0.52 ) }
    dend_14 { pt3dadd( -14.1331, 14.0367, 9.44751, 0.74 ) }
    dend_14 { pt3dadd( -14.4751, 12.9823, 9.7361, 0.52 ) }
    dend_14 { pt3dadd( -14.7608, 12.2159, 9.92549, 1.11 ) }
    dend_14 { pt3dadd( -15.2091, 11.0443, 10.211, 1.62 ) }
    dend_14 { pt3dadd( -15.599, 10.0033, 10.4558, 1.33 ) }
    dend_14 { pt3dadd( -16.1152, 8.53328, 10.8009, 1.11 ) }
    dend_14 { pt3dadd( -16.7845, 6.52074, 11.2767, 0.44 ) }
    dend_14 { pt3dadd( -17.1189, 5.45657, 11.5238, 0.44 ) }
    dend_14 { pt3dadd( -17.4629, 4.35265, 11.7651, 0.44 ) }
    dend_14 { pt3dadd( -17.7371, 3.47002, 11.9329, 0.96 ) }
    dend_14 { pt3dadd( -18.1386, 2.1954, 12.1627, 1.47 ) }
    dend_14 { pt3dadd( -18.6379, 0.721644, 12.4074, 1.7 ) }
    dend_14 { pt3dadd( -19.2594, -0.909495, 12.6831, 1.7 ) }
    dend_14 { pt3dadd( -19.9336, -2.34603, 12.9364, 1.7 ) }
    dend_14 { pt3dadd( -20.6715, -3.67415, 13.1769, 0.59 ) }
    dend_14 { pt3dadd( -21.4353, -4.89321, 13.4236, 0.44 ) }
    dend_14 { pt3dadd( -22.1748, -5.97169, 13.6758, 0.44 ) }
    dend_14 { pt3dadd( -22.6271, -6.59364, 13.8649, 0.44 ) }
    dend_14 { pt3dadd( -23.3133, -7.51781, 14.2548, 0.44 ) }
    dend_14 { pt3dadd( -23.5344, -7.83924, 14.4405, 0.44 ) }
    dend_14 { pt3dadd( -23.7268, -8.2559, 14.7144, 0.44 ) }
    dend_14 { pt3dadd( -23.8956, -8.91585, 15.1342, 0.44 ) }
    dend_14 { pt3dadd( -23.9877, -9.35604, 15.3961, 0.88 ) }
    dend_14 { pt3dadd( -24.2424, -10.4023, 15.9452, 1.4 ) }
    dend_14 { pt3dadd( -24.4778, -11.122, 16.2879, 1.4 ) }
    dend_14 { pt3dadd( -24.9922, -12.2732, 16.7887, 0.66 ) }
    dend_14 { pt3dadd( -25.4517, -13.1187, 17.1204, 0.22 ) }
    dend_14 { pt3dadd( -25.9484, -13.9422, 17.441, 0.22 ) }
    dend_14 { pt3dadd( -26.2408, -14.4138, 17.6333, 1.03 ) }
    dend_14 { pt3dadd( -26.737, -15.223, 17.9791, 2.36 ) }
    dend_14 { pt3dadd( -27.2777, -16.169, 18.4149, 2.65 ) }
    dend_14 { pt3dadd( -28.1451, -17.8599, 19.2878, 0.81 ) }
    dend_14 { pt3dadd( -28.476, -18.8133, 19.7944, 0.22 ) }
    dend_14 { pt3dadd( -28.5731, -19.2821, 20.0511, 0.22 ) }
    dend_14 { pt3dadd( -28.6255, -19.7314, 20.3076, 0.66 ) }
    dend_14 { pt3dadd( -28.6448, -20.2867, 20.6408, 0.66 ) }
    dend_14 { pt3dadd( -28.6337, -20.6326, 20.8658, 0.66 ) }
    dend_14 { pt3dadd( -28.5464, -21.5844, 21.5536, 0.22 ) }
    dend_14 { pt3dadd( -28.5441, -22.0703, 21.8956, 0.22 ) }
    dend_14 { pt3dadd( -28.578, -22.2933, 22.0558, 0.22 ) }
    dend_14 { pt3dadd( -28.703, -22.6631, 22.3258, 0.22 ) }
    dend_14 { pt3dadd( -28.9461, -23.1636, 22.6724, 0.22 ) }
    dend_14 { pt3dadd( -29.0796, -23.3741, 22.8043, 0.22 ) }
    dend_14 { pt3dadd( -29.4632, -23.8702, 23.0739, 0.22 ) }
    dend_14 { pt3dadd( -29.6949, -24.1628, 23.1928, 0.29 ) }
    dend_14 { pt3dadd( -30.2874, -24.9235, 23.4271, 0.29 ) }
    dend_14 { pt3dadd( -30.569, -25.3264, 23.5292, 0.59 ) }
    dend_14 { pt3dadd( -31.033, -26.0792, 23.6969, 0.88 ) }
    dend_14 { pt3dadd( -31.4322, -26.834, 23.8706, 0.66 ) }
    dend_14 { pt3dadd( -31.8245, -27.8198, 24.1206, 0.22 ) }
    dend_14 { pt3dadd( -31.9514, -28.2945, 24.2656, 0.22 ) }
    dend_14 { pt3dadd( -32.1712, -29.4691, 24.6979, 0.59 ) }
    dend_14 { pt3dadd( -32.3012, -30.4572, 25.1114, 1.03 ) }
    dend_14 { pt3dadd( -32.4048, -31.4367, 25.5465, 1.62 ) }
    dend_14 { pt3dadd( -32.5536, -32.7513, 26.1658, 0.59 ) }
    dend_14 { pt3dadd( -32.7505, -34.0964, 26.7875, 0.22 ) }
    dend_14 { pt3dadd( -32.9477, -35.0287, 27.2112, 0.52 ) }
    dend_14 { pt3dadd( -33.1197, -35.5773, 27.4624, 1.25 ) }
    dend_14 { pt3dadd( -33.5035, -36.4701, 27.8852, 2.14 ) }
    dend_14 { pt3dadd( -33.9559, -37.2738, 28.2662, 1.33 ) }
    dend_14 { pt3dadd( -34.6842, -38.3141, 28.7979, 0.52 ) }
    dend_14 { pt3dadd( -35.114, -38.894, 29.1197, 0.22 ) }
    dend_14 { pt3dadd( -35.571, -39.5463, 29.5175, 0.44 ) }
    dend_14 { pt3dadd( -35.9124, -40.0697, 29.8781, 0.44 ) }
    dend_14 { pt3dadd( -36.1994, -40.6178, 30.266, 0.22 ) }
    dend_14 { pt3dadd( -36.4196, -41.1623, 30.5851, 0.22 ) }
    dend_14 { pt3dadd( -36.6617, -41.8477, 30.9326, 0.22 ) }
    dend_14 { pt3dadd( -36.82, -42.3367, 31.1267, 0.52 ) }
    dend_14 { pt3dadd( -37.0427, -43.0285, 31.3416, 0.74 ) }
    dend_14 { pt3dadd( -37.4889, -44.14, 31.6587, 0.81 ) }
    dend_14 { pt3dadd( -38.0355, -45.0839, 31.9898, 0.22 ) }
    dend_14 { pt3dadd( -38.519, -45.6216, 32.2427, 0.22 ) }
    dend_14 { pt3dadd( -38.779, -45.834, 32.3855, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -39.185, -46.1508, 32.6411, 0.66 ) }
    dend_14 { pt3dadd( -39.8773, -46.6885, 33.1533, 1.33 ) }
    dend_14 { pt3dadd( -40.4397, -47.1646, 33.6375, 1.55 ) }
    dend_14 { pt3dadd( -40.9826, -47.7347, 34.169, 0.88 ) }
    dend_14 { pt3dadd( -41.6191, -48.5259, 34.7576, 0.15 ) }
    dend_14 { pt3dadd( -42.2522, -49.357, 35.2985, 0.29 ) }
    dend_14 { pt3dadd( -42.5849, -49.821, 35.567, 0.88 ) }
    dend_14 { pt3dadd( -42.9238, -50.3064, 35.7923, 1.25 ) }
    dend_14 { pt3dadd( -43.2904, -50.8294, 36.0076, 1.33 ) }
    dend_14 { pt3dadd( -44.2735, -52.2003, 36.5532, 0.22 ) }
    dend_14 { pt3dadd( -44.7072, -52.808, 36.7919, 0.74 ) }
    dend_14 { pt3dadd( -45.1188, -53.3891, 37.0228, 1.25 ) }
    dend_14 { pt3dadd( -45.7653, -54.4022, 37.4147, 0.44 ) }
    dend_14 { pt3dadd( -46.1168, -55.1791, 37.7273, 0.22 ) }
    dend_14 { pt3dadd( -46.2448, -55.6517, 37.9147, 0.22 ) }
    dend_14 { pt3dadd( -46.3189, -56.3255, 38.1558, 0.96 ) }
    dend_14 { pt3dadd( -46.3378, -56.7581, 38.3068, 1.55 ) }
    dend_14 { pt3dadd( -46.3462, -57.6371, 38.6144, 1.33 ) }
    dend_14 { pt3dadd( -46.3459, -59.6413, 39.3503, 0.15 ) }
    dend_14 { pt3dadd( -46.3629, -60.1237, 39.5227, 0.37 ) }
    dend_14 { pt3dadd( -46.4455, -61.0204, 39.8507, 0.15 ) }
    dend_14 { pt3dadd( -46.5804, -61.7725, 40.1541, 0.15 ) }
    dend_14 { pt3dadd( -46.7631, -62.4542, 40.4575, 0.52 ) }
    dend_14 { pt3dadd( -47.022, -63.1788, 40.8049, 1.18 ) }
    dend_14 { pt3dadd( -47.4147, -64.0467, 41.2517, 2.06 ) }
    dend_14 { pt3dadd( -47.9453, -65.1496, 41.8488, 0.96 ) }
    dend_14 { pt3dadd( -48.514, -66.2806, 42.4832, 0.22 ) }
    dend_14 { pt3dadd( -48.9371, -67.0822, 42.9292, 0.22 ) }
    dend_14 { pt3dadd( -49.4539, -68.025, 43.4646, 0.22 ) }
    dend_14 { pt3dadd( -49.7901, -68.6303, 43.8127, 0.22 ) }
    dend_14 { pt3dadd( -50.2974, -69.5287, 44.3607, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 126.69, -70.9505, -1.32404, 0.15 ) }
    dend_5 { pt3dadd( 134.864, -77.8752, -0.952834, 0.15 ) }
    dend_5 { pt3dadd( 142.122, -85.7504, -0.517619, 0.15 ) }
    dend_5 { pt3dadd( 149.777, -93.254, -0.534358, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 126.69, -70.9505, -1.32404, 0.59 ) }
    dend_4 { pt3dadd( 132.163, -74.8926, -0.236582, 0.15 ) }
    dend_4 { pt3dadd( 137.463, -78.7657, 1.65712, 0.15 ) }
    dend_4 { pt3dadd( 141.683, -83.8536, 3.38241, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 44.1798, 75.2479, 14.2977, 0.15 ) }
    dend_34 { pt3dadd( 51.1654, 81.7373, 14.6267, 0.15 ) }
    dend_34 { pt3dadd( 57.1733, 89.0068, 13.1854, 0.15 ) }
    dend_34 { pt3dadd( 62.1859, 96.3964, 9.82602, 0.15 ) }
    dend_34 { pt3dadd( 66.1162, 104.058, 5.71998, 0.15 ) }
    dend_34 { pt3dadd( 69.5731, 111.049, 0.22414, 0.15 ) }
    dend_34 { pt3dadd( 74.1271, 117.914, -4.58679, 0.15 ) }
    dend_34 { pt3dadd( 78.7678, 125.073, -8.85697, 0.15 ) }
    dend_34 { pt3dadd( 83.3758, 132.18, -13.2474, 0.15 ) }
    dend_34 { pt3dadd( 87.3303, 140.224, -16.5137, 0.15 ) }
    dend_34 { pt3dadd( 89.0316, 149.046, -19.7225, 0.15 ) }
    dend_34 { pt3dadd( 90.5659, 158.431, -20.4907, 0.15 ) }
    dend_34 { pt3dadd( 92.5109, 167.761, -20.0622, 0.15 ) }
    dend_34 { pt3dadd( 92.4926, 177.268, -19.2744, 0.15 ) }
    dend_34 { pt3dadd( 92.6796, 186.648, -17.5429, 0.15 ) }
    dend_34 { pt3dadd( 93.9175, 195.92, -15.6669, 0.15 ) }
    dend_34 { pt3dadd( 94.4494, 205.446, -15.6501, 0.15 ) }
    dend_34 { pt3dadd( 95.4396, 214.899, -16.4751, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 44.1798, 75.2479, 14.2977, 0.59 ) }
    dend_33 { pt3dadd( 45.4816, 85.5032, 19.1718, 0.15 ) }
    dend_33 { pt3dadd( 45.9631, 96.1447, 23.3127, 0.15 ) }
    dend_33 { pt3dadd( 44.7152, 106.106, 28.7745, 0.15 ) }
    dend_33 { pt3dadd( 42.4351, 116.661, 32.519, 0.15 ) }
    dend_33 { pt3dadd( 39.4119, 126.472, 37.5408, 0.15 ) }
    dend_33 { pt3dadd( 36.4604, 136.684, 41.7397, 0.15 ) }
    dend_33 { pt3dadd( 33.1539, 147.147, 44.9346, 0.15 ) }
    dend_33 { pt3dadd( 31.6766, 157.227, 50.1151, 0.15 ) }
    dend_33 { pt3dadd( 29.9408, 167.283, 55.2608, 0.15 ) }
    dend_33 { pt3dadd( 28.5905, 177.913, 59.2357, 0.15 ) }
    dend_33 { pt3dadd( 27.4197, 189.023, 61.6481, 0.15 ) }
    dend_33 { pt3dadd( 25.5834, 199.336, 66.2188, 0.15 ) }
    dend_33 { pt3dadd( 22.7179, 208.085, 72.991, 0.15 ) }
    dend_33 { pt3dadd( 20.2363, 216.174, 80.6747, 0.15 ) }
    dend_33 { pt3dadd( 18.4045, 224.459, 88.3309, 0.15 ) }
    dend_33 { pt3dadd( 18.7395, 233.589, 95.1979, 0.15 ) }
    dend_33 { pt3dadd( 20.5454, 241.717, 103.027, 0.15 ) }
    dend_33 { pt3dadd( 22.0839, 250.648, 109.99, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 49.5101, 84.1388, 32.8856, 0.66 ) }
    dend_27 { pt3dadd( 50.7555, 86.9302, 33.2273, 0.66 ) }
    dend_27 { pt3dadd( 51.4828, 88.3703, 33.4219, 0.66 ) }
    dend_27 { pt3dadd( 52.3841, 90.0976, 33.6588, 0.44 ) }
    dend_27 { pt3dadd( 53.0226, 91.355, 33.8527, 0.37 ) }
    dend_27 { pt3dadd( 53.8227, 93.0301, 34.1442, 0.37 ) }
    dend_27 { pt3dadd( 54.4797, 94.5315, 34.4549, 0.37 ) }
    dend_27 { pt3dadd( 54.792, 95.251, 34.6438, 0.59 ) }
    dend_27 { pt3dadd( 55.3012, 96.5853, 34.9963, 1.11 ) }
    dend_27 { pt3dadd( 55.9588, 98.7638, 35.5105, 0.37 ) }
    dend_27 { pt3dadd( 56.284, 100.521, 35.9547, 0.59 ) }
    dend_27 { pt3dadd( 56.4807, 102.693, 36.5352, 0.37 ) }
    dend_27 { pt3dadd( 56.5751, 104.843, 37.1731, 0.44 ) }
    dend_27 { pt3dadd( 56.6226, 106.018, 37.5602, 0.22 ) }
    dend_27 { pt3dadd( 56.6973, 107.069, 37.9604, 0.22 ) }
    dend_27 { pt3dadd( 57.0361, 109.82, 39.1453, 0.22 ) }
    dend_27 { pt3dadd( 57.3501, 111.263, 39.8439, 0.22 ) }
    dend_27 { pt3dadd( 57.6084, 111.997, 40.2444, 0.44 ) }
    dend_27 { pt3dadd( 58.1621, 113.071, 40.8983, 0.66 ) }
    dend_27 { pt3dadd( 59.1864, 114.551, 41.8579, 0.22 ) }
    dend_27 { pt3dadd( 59.6938, 115.142, 42.2529, 0.22 ) }
    dend_27 { pt3dadd( 60.4057, 115.854, 42.7388, 0.66 ) }
    dend_27 { pt3dadd( 61.0045, 116.44, 43.1691, 1.03 ) }
    dend_27 { pt3dadd( 62.3585, 117.788, 44.166, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 63.5007, 118.989, 45.0159, 0.66 ) }
    dend_27 { pt3dadd( 64.1814, 119.758, 45.5438, 0.81 ) }
    dend_27 { pt3dadd( 65.6971, 121.528, 46.752, 1.03 ) }
    dend_27 { pt3dadd( 66.8413, 122.886, 47.6873, 0.74 ) }
    dend_27 { pt3dadd( 67.9561, 124.217, 48.6313, 0.37 ) }
    dend_27 { pt3dadd( 68.7711, 125.14, 49.3363, 0.37 ) }
    dend_27 { pt3dadd( 69.4636, 125.907, 49.9349, 0.29 ) }
    dend_27 { pt3dadd( 70.1913, 126.696, 50.5558, 0.29 ) }
    dend_27 { pt3dadd( 70.8081, 127.35, 51.0606, 0.66 ) }
    dend_27 { pt3dadd( 71.7036, 128.297, 51.8216, 1.25 ) }
    dend_27 { pt3dadd( 73.3036, 129.951, 53.1863, 0.29 ) }
    dend_27 { pt3dadd( 73.7967, 130.456, 53.5961, 0.29 ) }
    dend_27 { pt3dadd( 74.8408, 131.564, 54.4265, 0.88 ) }
    dend_27 { pt3dadd( 75.844, 132.707, 55.2026, 0.52 ) }
    dend_27 { pt3dadd( 76.6668, 133.697, 55.8177, 1.11 ) }
    dend_27 { pt3dadd( 77.8102, 135.131, 56.6391, 0.66 ) }
    dend_27 { pt3dadd( 78.8739, 136.53, 57.4228, 0.29 ) }
    dend_27 { pt3dadd( 79.6445, 137.509, 57.9994, 0.59 ) }
    dend_27 { pt3dadd( 81.0392, 139.149, 59.0515, 0.22 ) }
    dend_27 { pt3dadd( 81.6962, 139.852, 59.554, 0.59 ) }
    dend_27 { pt3dadd( 82.6191, 140.762, 60.2567, 1.18 ) }
    dend_27 { pt3dadd( 83.7645, 141.806, 61.1591, 0.22 ) }
    dend_27 { pt3dadd( 84.5317, 142.467, 61.7739, 0.22 ) }
    dend_27 { pt3dadd( 85.1776, 143.016, 62.2907, 0.22 ) }
    dend_27 { pt3dadd( 85.8599, 143.647, 62.8657, 0.22 ) }
    dend_27 { pt3dadd( 86.3089, 144.156, 63.2476, 0.22 ) }
    dend_27 { pt3dadd( 86.8123, 144.885, 63.6666, 0.37 ) }
    dend_27 { pt3dadd( 87.5332, 146.212, 64.2642, 0.37 ) }
    dend_27 { pt3dadd( 87.9821, 147.2, 64.6571, 0.22 ) }
    dend_27 { pt3dadd( 88.4605, 148.417, 65.1164, 0.52 ) }
    dend_27 { pt3dadd( 89.0513, 150.093, 65.7738, 0.52 ) }
    dend_27 { pt3dadd( 89.4367, 151.188, 66.2497, 0.96 ) }
    dend_27 { pt3dadd( 89.8295, 152.213, 66.7643, 1.77 ) }
    dend_27 { pt3dadd( 90.2821, 153.274, 67.3697, 1.77 ) }
    dend_27 { pt3dadd( 90.9462, 154.725, 68.2377, 0.22 ) }
    dend_27 { pt3dadd( 91.4422, 155.737, 68.8519, 0.22 ) }
    dend_27 { pt3dadd( 91.9313, 156.646, 69.4553, 0.22 ) }
    dend_27 { pt3dadd( 92.4492, 157.54, 70.0588, 0.22 ) }
    dend_27 { pt3dadd( 92.9617, 158.349, 70.5868, 0.22 ) }
    dend_27 { pt3dadd( 93.5979, 159.353, 71.1708, 0.22 ) }
    dend_27 { pt3dadd( 94.307, 160.461, 71.7229, 0.22 ) }
    dend_27 { pt3dadd( 94.6764, 161.066, 71.99, 0.66 ) }
    dend_27 { pt3dadd( 95.2211, 161.988, 72.3827, 0.81 ) }
    dend_27 { pt3dadd( 96.0013, 163.361, 72.9851, 0.22 ) }
    dend_27 { pt3dadd( 96.6009, 164.415, 73.4982, 0.22 ) }
    dend_27 { pt3dadd( 97.0862, 165.342, 73.9486, 0.74 ) }
    dend_27 { pt3dadd( 97.6366, 166.563, 74.4858, 0.88 ) }
    dend_27 { pt3dadd( 97.9309, 167.338, 74.796, 1.11 ) }
    dend_27 { pt3dadd( 98.5164, 169.273, 75.5247, 1.11 ) }
    dend_27 { pt3dadd( 98.9422, 171.095, 76.1513, 0.37 ) }
    dend_27 { pt3dadd( 99.3322, 173.151, 76.8531, 0.22 ) }
    dend_27 { pt3dadd( 99.5239, 174.446, 77.303, 0.29 ) }
    dend_27 { pt3dadd( 99.663, 175.629, 77.7412, 0.29 ) }
    dend_27 { pt3dadd( 99.7927, 176.817, 78.2398, 0.37 ) }
    dend_27 { pt3dadd( 99.9604, 177.882, 78.8291, 0.37 ) }
    dend_27 { pt3dadd( 100.15, 178.566, 79.3881, 0.22 ) }
    dend_27 { pt3dadd( 100.453, 179.202, 80.1201, 0.22 ) }
    dend_27 { pt3dadd( 100.947, 179.996, 81.2124, 0.22 ) }
    dend_27 { pt3dadd( 101.476, 180.689, 82.2625, 0.29 ) }
    dend_27 { pt3dadd( 102.287, 181.673, 83.806, 0.22 ) }
    dend_27 { pt3dadd( 102.78, 182.286, 84.7173, 1.4 ) }
    dend_27 { pt3dadd( 103.292, 183.019, 85.6744, 2.21 ) }
    dend_27 { pt3dadd( 103.613, 183.644, 86.3539, 1.7 ) }
    dend_27 { pt3dadd( 103.944, 184.612, 87.2728, 0.96 ) }
    dend_27 { pt3dadd( 104.208, 185.819, 88.396, 0.96 ) }
    dend_27 { pt3dadd( 104.317, 186.517, 89.0791, 1.47 ) }
    dend_27 { pt3dadd( 104.425, 187.227, 89.8283, 1.47 ) }
    dend_27 { pt3dadd( 104.653, 188.565, 91.3377, 0.22 ) }
    dend_27 { pt3dadd( 104.832, 189.392, 92.2841, 0.22 ) }
    dend_27 { pt3dadd( 105.055, 190.281, 93.2476, 0.22 ) }
    dend_27 { pt3dadd( 105.339, 191.171, 94.1399, 0.22 ) }
    dend_27 { pt3dadd( 105.633, 191.925, 94.8632, 0.22 ) }
    dend_27 { pt3dadd( 105.911, 192.508, 95.355, 0.88 ) }
    dend_27 { pt3dadd( 106.405, 193.41, 96.0312, 1.99 ) }
    dend_27 { pt3dadd( 107.186, 194.73, 96.9074, 1.55 ) }
    dend_27 { pt3dadd( 108.172, 196.373, 97.8547, 0.22 ) }
    dend_27 { pt3dadd( 108.908, 197.598, 98.5227, 0.22 ) }
    dend_27 { pt3dadd( 109.918, 199.178, 99.4028, 0.29 ) }
    dend_27 { pt3dadd( 110.559, 200.124, 99.942, 0.59 ) }
    dend_27 { pt3dadd( 111.634, 201.487, 100.745, 0.96 ) }
    dend_27 { pt3dadd( 112.968, 202.935, 101.639, 0.15 ) }
    dend_27 { pt3dadd( 114.119, 204.064, 102.387, 1.18 ) }
    dend_27 { pt3dadd( 115.616, 205.447, 103.348, 1.18 ) }
    dend_27 { pt3dadd( 116.894, 206.575, 104.175, 1.4 ) }
    dend_27 { pt3dadd( 118.745, 208.143, 105.376, 0.22 ) }
    dend_27 { pt3dadd( 119.589, 208.858, 105.918, 0.37 ) }
    dend_27 { pt3dadd( 120.467, 209.647, 106.5, 1.03 ) }
    dend_27 { pt3dadd( 120.852, 210.039, 106.769, 0.88 ) }
    dend_27 { pt3dadd( 121.354, 210.629, 107.177, 0.74 ) }
    dend_27 { pt3dadd( 122.008, 211.48, 107.798, 0.96 ) }
    dend_27 { pt3dadd( 122.806, 212.812, 108.727, 0.22 ) }
    dend_27 { pt3dadd( 123.521, 214.074, 109.551, 0.96 ) }
    dend_27 { pt3dadd( 123.925, 214.731, 109.97, 0.74 ) }
    dend_27 { pt3dadd( 124.634, 215.816, 110.715, 0.22 ) }
    dend_27 { pt3dadd( 125.341, 216.859, 111.464, 0.29 ) }
    dend_27 { pt3dadd( 126.4, 218.372, 112.574, 0.29 ) }
    dend_27 { pt3dadd( 127.162, 219.374, 113.325, 0.29 ) }
    dend_27 { pt3dadd( 128.408, 220.911, 114.441, 0.22 ) }
    dend_27 { pt3dadd( 129.047, 221.68, 114.977, 0.66 ) }
    dend_27 { pt3dadd( 129.58, 222.355, 115.409, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 129.926, 222.774, 115.675, 1.55 ) }
    dend_27 { pt3dadd( 131.26, 224.277, 116.632, 0.15 ) }
    dend_27 { pt3dadd( 132.312, 225.514, 117.36, 0.15 ) }
    dend_27 { pt3dadd( 133.22, 226.637, 117.951, 0.15 ) }
    dend_27 { pt3dadd( 134.023, 227.63, 118.396, 0.15 ) }
    dend_27 { pt3dadd( 134.766, 228.581, 118.78, 0.15 ) }
    dend_27 { pt3dadd( 135.33, 229.387, 119.083, 0.88 ) }
    dend_27 { pt3dadd( 136.01, 230.46, 119.456, 1.18 ) }
    dend_27 { pt3dadd( 136.803, 231.841, 119.898, 1.18 ) }
    dend_27 { pt3dadd( 137.937, 233.846, 120.537, 0.22 ) }
    dend_27 { pt3dadd( 139.14, 235.921, 121.233, 0.22 ) }
    dend_27 { pt3dadd( 139.874, 237.262, 121.663, 1.18 ) }
    dend_27 { pt3dadd( 140.221, 237.913, 121.874, 1.92 ) }
    dend_27 { pt3dadd( 140.773, 239.001, 122.239, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 49.5101, 84.1388, 32.8856, 0.44 ) }
    dend_26 { pt3dadd( 49.9359, 84.5115, 33.4978, 0.44 ) }
    dend_26 { pt3dadd( 50.3819, 84.918, 34.1528, 0.44 ) }
    dend_26 { pt3dadd( 50.5914, 85.1016, 34.4916, 0.96 ) }
    dend_26 { pt3dadd( 51.0316, 85.466, 35.2778, 1.7 ) }
    dend_26 { pt3dadd( 51.4135, 85.7718, 35.9843, 1.99 ) }
    dend_26 { pt3dadd( 51.9907, 86.2059, 37.0503, 1.11 ) }
    dend_26 { pt3dadd( 52.3965, 86.4695, 37.7657, 0.37 ) }
    dend_26 { pt3dadd( 52.8077, 86.6873, 38.4114, 0.37 ) }
    dend_26 { pt3dadd( 53.3531, 86.9348, 39.1855, 0.37 ) }
    dend_26 { pt3dadd( 53.739, 87.083, 39.6487, 0.37 ) }
    dend_26 { pt3dadd( 54.1414, 87.2194, 40.0701, 0.44 ) }
    dend_26 { pt3dadd( 54.7723, 87.402, 40.6588, 0.96 ) }
    dend_26 { pt3dadd( 55.6158, 87.6169, 41.3727, 1.62 ) }
    dend_26 { pt3dadd( 56.4555, 87.8543, 42.0809, 1.18 ) }
    dend_26 { pt3dadd( 57.5369, 88.2079, 43.0361, 0.29 ) }
    dend_26 { pt3dadd( 58.0586, 88.4006, 43.553, 0.44 ) }
    dend_26 { pt3dadd( 58.4131, 88.5538, 43.9593, 0.59 ) }
    dend_26 { pt3dadd( 58.916, 88.7968, 44.6231, 0.29 ) }
    dend_26 { pt3dadd( 59.535, 89.151, 45.548, 0.29 ) }
    dend_26 { pt3dadd( 60.1975, 89.6066, 46.623, 0.59 ) }
    dend_26 { pt3dadd( 60.639, 89.9855, 47.3532, 1.03 ) }
    dend_26 { pt3dadd( 61.1739, 90.5242, 48.205, 1.7 ) }
    dend_26 { pt3dadd( 61.6879, 91.0969, 48.9918, 1.7 ) }
    dend_26 { pt3dadd( 62.3068, 91.8071, 49.9321, 0.96 ) }
    dend_26 { pt3dadd( 62.6923, 92.2166, 50.4942, 1.33 ) }
    dend_26 { pt3dadd( 63.4223, 92.97, 51.5511, 1.62 ) }
    dend_26 { pt3dadd( 64.0277, 93.5639, 52.3807, 0.52 ) }
    dend_26 { pt3dadd( 64.5062, 94.0195, 53.0165, 0.22 ) }
    dend_26 { pt3dadd( 65.0304, 94.506, 53.6913, 0.22 ) }
    dend_26 { pt3dadd( 65.7221, 95.0959, 54.5322, 0.22 ) }
    dend_26 { pt3dadd( 66.2811, 95.5584, 55.1512, 0.74 ) }
    dend_26 { pt3dadd( 66.8221, 96.0159, 55.6824, 1.33 ) }
    dend_26 { pt3dadd( 67.3388, 96.4931, 56.1077, 1.77 ) }
    dend_26 { pt3dadd( 68.1573, 97.324, 56.6724, 0.44 ) }
    dend_26 { pt3dadd( 68.9499, 98.2114, 57.1378, 0.22 ) }
    dend_26 { pt3dadd( 69.5866, 98.9675, 57.484, 0.66 ) }
    dend_26 { pt3dadd( 70.0836, 99.5495, 57.7622, 0.29 ) }
    dend_26 { pt3dadd( 70.5056, 100.031, 58.0215, 0.29 ) }
    dend_26 { pt3dadd( 70.7594, 100.299, 58.205, 0.22 ) }
    dend_26 { pt3dadd( 71.0787, 100.621, 58.4857, 0.22 ) }
    dend_26 { pt3dadd( 71.5116, 101.042, 58.9395, 0.52 ) }
    dend_26 { pt3dadd( 72.0136, 101.477, 59.5249, 0.88 ) }
    dend_26 { pt3dadd( 72.4591, 101.804, 60.0513, 0.88 ) }
    dend_26 { pt3dadd( 72.9814, 102.164, 60.6563, 0.22 ) }
    dend_26 { pt3dadd( 73.4469, 102.508, 61.192, 0.22 ) }
    dend_26 { pt3dadd( 73.6791, 102.691, 61.4531, 0.52 ) }
    dend_26 { pt3dadd( 74.0948, 103.034, 61.9147, 1.4 ) }
    dend_26 { pt3dadd( 74.6653, 103.479, 62.5329, 1.18 ) }
    dend_26 { pt3dadd( 75.5596, 104.126, 63.4848, 0.22 ) }
    dend_26 { pt3dadd( 76.2421, 104.577, 64.1597, 0.59 ) }
    dend_26 { pt3dadd( 76.7534, 104.903, 64.6571, 0.22 ) }
    dend_26 { pt3dadd( 77.3508, 105.293, 65.2082, 0.88 ) }
    dend_26 { pt3dadd( 78.137, 105.849, 65.8844, 1.55 ) }
    dend_26 { pt3dadd( 78.4508, 106.085, 66.1252, 1.55 ) }
    dend_26 { pt3dadd( 79.5848, 106.965, 66.8661, 0.88 ) }
    dend_26 { pt3dadd( 80.1491, 107.411, 67.1893, 0.44 ) }
    dend_26 { pt3dadd( 80.6745, 107.844, 67.4716, 0.22 ) }
    dend_26 { pt3dadd( 81.2042, 108.272, 67.7603, 0.22 ) }
    dend_26 { pt3dadd( 81.7555, 108.714, 68.0686, 0.37 ) }
    dend_26 { pt3dadd( 82.3467, 109.171, 68.4202, 1.11 ) }
    dend_26 { pt3dadd( 83.0873, 109.729, 68.8985, 1.18 ) }
    dend_26 { pt3dadd( 83.7622, 110.239, 69.3537, 0.29 ) }
    dend_26 { pt3dadd( 84.6724, 110.93, 69.9978, 0.22 ) }
    dend_26 { pt3dadd( 85.1541, 111.309, 70.3632, 0.22 ) }
    dend_26 { pt3dadd( 85.6236, 111.714, 70.7465, 1.11 ) }
    dend_26 { pt3dadd( 85.9388, 112.031, 71.0265, 1.18 ) }
    dend_26 { pt3dadd( 86.5291, 112.756, 71.6007, 0.29 ) }
    dend_26 { pt3dadd( 87.0245, 113.452, 72.1615, 0.29 ) }
    dend_26 { pt3dadd( 87.3078, 113.882, 72.5334, 1.03 ) }
    dend_26 { pt3dadd( 87.6559, 114.405, 73.0663, 1.92 ) }
    dend_26 { pt3dadd( 87.9064, 114.733, 73.4469, 1.92 ) }
    dend_26 { pt3dadd( 88.7573, 115.663, 74.6765, 0.15 ) }
    dend_26 { pt3dadd( 89.2197, 116.084, 75.3279, 0.15 ) }
    dend_26 { pt3dadd( 89.4959, 116.322, 75.7154, 0.37 ) }
    dend_26 { pt3dadd( 89.896, 116.66, 76.2604, 1.11 ) }
    dend_26 { pt3dadd( 90.5699, 117.234, 77.177, 1.47 ) }
    dend_26 { pt3dadd( 91.2238, 117.769, 78.073, 0.44 ) }
    dend_26 { pt3dadd( 91.9098, 118.303, 79.026, 0.22 ) }
    dend_26 { pt3dadd( 92.4492, 118.714, 79.7881, 0.74 ) }
    dend_26 { pt3dadd( 92.859, 119.009, 80.4153, 0.88 ) }
    dend_26 { pt3dadd( 93.5204, 119.367, 81.5466, 0.22 ) }
    dend_26 { pt3dadd( 93.7974, 119.447, 82.1079, 0.22 ) }
    dend_26 { pt3dadd( 94.0546, 119.422, 82.6849, 0.44 ) }
    dend_26 { pt3dadd( 94.2994, 119.321, 83.2663, 0.81 ) }
    dend_26 { pt3dadd( 94.5932, 119.148, 83.9847, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 95.0751, 118.872, 85.1486, 0.81 ) }
    dend_26 { pt3dadd( 95.4611, 118.682, 86.0925, 0.22 ) }
    dend_26 { pt3dadd( 95.7466, 118.605, 86.7518, 0.22 ) }
    dend_26 { pt3dadd( 96.0079, 118.614, 87.2789, 0.22 ) }
    dend_26 { pt3dadd( 96.5582, 118.785, 88.2509, 0.37 ) }
    dend_26 { pt3dadd( 97.2141, 119.128, 89.2694, 0.22 ) }
    dend_26 { pt3dadd( 97.4789, 119.305, 89.6196, 0.96 ) }
    dend_26 { pt3dadd( 98.0106, 119.689, 90.2116, 1.84 ) }
    dend_26 { pt3dadd( 99.1285, 120.507, 91.2587, 0.22 ) }
    dend_26 { pt3dadd( 99.7041, 120.931, 91.7029, 0.22 ) }
    dend_26 { pt3dadd( 99.9674, 121.139, 91.8613, 0.22 ) }
    dend_26 { pt3dadd( 100.482, 121.598, 92.1008, 0.22 ) }
    dend_26 { pt3dadd( 100.98, 122.09, 92.294, 0.44 ) }
    dend_26 { pt3dadd( 101.646, 122.807, 92.551, 1.18 ) }
    dend_26 { pt3dadd( 102.188, 123.42, 92.7938, 1.62 ) }
    dend_26 { pt3dadd( 102.695, 124.003, 93.0752, 1.7 ) }
    dend_26 { pt3dadd( 103.438, 124.936, 93.5565, 1.25 ) }
    dend_26 { pt3dadd( 104.325, 126.11, 94.2331, 0.29 ) }
    dend_26 { pt3dadd( 104.845, 126.776, 94.7025, 1.03 ) }
    dend_26 { pt3dadd( 105.294, 127.296, 95.1464, 1.47 ) }
    dend_26 { pt3dadd( 106.126, 128.171, 96.0416, 0.22 ) }
    dend_26 { pt3dadd( 106.792, 128.795, 96.7881, 0.88 ) }
    dend_26 { pt3dadd( 107.293, 129.226, 97.3655, 0.44 ) }
    dend_26 { pt3dadd( 108.048, 129.858, 98.2173, 0.22 ) }
    dend_26 { pt3dadd( 108.598, 130.345, 98.8163, 0.22 ) }
    dend_26 { pt3dadd( 109.031, 130.759, 99.2713, 1.03 ) }
    dend_26 { pt3dadd( 109.541, 131.302, 99.7995, 1.47 ) }
    dend_26 { pt3dadd( 109.988, 131.833, 100.231, 1.25 ) }
    dend_26 { pt3dadd( 110.694, 132.754, 100.828, 0.52 ) }
    dend_26 { pt3dadd( 111.5, 133.863, 101.424, 0.37 ) }
    dend_26 { pt3dadd( 111.941, 134.447, 101.722, 1.03 ) }
    dend_26 { pt3dadd( 112.216, 134.77, 101.886, 1.4 ) }
    dend_26 { pt3dadd( 113.116, 135.71, 102.383, 0.96 ) }
    dend_26 { pt3dadd( 113.759, 136.271, 102.726, 0.81 ) }
    dend_26 { pt3dadd( 114.753, 137.016, 103.251, 0.22 ) }
    dend_26 { pt3dadd( 115.373, 137.413, 103.587, 0.22 ) }
    dend_26 { pt3dadd( 115.88, 137.719, 103.896, 0.74 ) }
    dend_26 { pt3dadd( 116.245, 137.946, 104.141, 0.81 ) }
    dend_26 { pt3dadd( 116.909, 138.416, 104.624, 0.22 ) }
    dend_26 { pt3dadd( 117.226, 138.684, 104.855, 0.22 ) }
    dend_26 { pt3dadd( 117.711, 139.125, 105.175, 0.88 ) }
    dend_26 { pt3dadd( 118.465, 139.875, 105.637, 1.33 ) }
    dend_26 { pt3dadd( 119.107, 140.545, 105.976, 1.7 ) }
    dend_26 { pt3dadd( 119.944, 141.463, 106.354, 1.47 ) }
    dend_26 { pt3dadd( 120.883, 142.538, 106.711, 0.22 ) }
    dend_26 { pt3dadd( 121.458, 143.213, 106.902, 0.22 ) }
    dend_26 { pt3dadd( 122.142, 144.05, 107.07, 0.29 ) }
    dend_26 { pt3dadd( 122.622, 144.695, 107.124, 0.15 ) }
    dend_26 { pt3dadd( 122.949, 145.191, 107.114, 0.15 ) }
    dend_26 { pt3dadd( 123.378, 145.937, 107.03, 0.59 ) }
    dend_26 { pt3dadd( 123.758, 146.662, 106.913, 0.37 ) }
    dend_26 { pt3dadd( 124.283, 147.632, 106.74, 0.22 ) }
    dend_26 { pt3dadd( 124.886, 148.648, 106.55, 0.22 ) }
    dend_26 { pt3dadd( 125.206, 149.143, 106.468, 1.11 ) }
    dend_26 { pt3dadd( 125.91, 150.137, 106.306, 0.22 ) }
    dend_26 { pt3dadd( 126.467, 150.862, 106.179, 0.07 ) }
    dend_26 { pt3dadd( 126.99, 151.552, 106.045, 0.07 ) }
    dend_26 { pt3dadd( 127.289, 151.982, 105.967, 0.88 ) }
    dend_26 { pt3dadd( 127.501, 152.348, 105.899, 1.11 ) }
    dend_26 { pt3dadd( 127.82, 153.144, 105.721, 0.81 ) }
    dend_26 { pt3dadd( 128.007, 154.026, 105.507, 0.37 ) }
    dend_26 { pt3dadd( 128.113, 155.312, 105.208, 0.15 ) }
    dend_26 { pt3dadd( 128.097, 156.41, 104.984, 0.15 ) }
    dend_26 { pt3dadd( 128.004, 157.378, 104.81, 0.15 ) }
    dend_26 { pt3dadd( 127.881, 158.296, 104.679, 0.59 ) }
    dend_26 { pt3dadd( 127.639, 159.632, 104.524, 0.29 ) }
    dend_26 { pt3dadd( 127.468, 160.354, 104.455, 0.66 ) }
    dend_26 { pt3dadd( 127.237, 161.198, 104.402, 1.47 ) }
    dend_26 { pt3dadd( 126.847, 162.524, 104.342, 0.22 ) }
    dend_26 { pt3dadd( 126.569, 163.478, 104.312, 0.15 ) }
    dend_26 { pt3dadd( 126.292, 164.505, 104.316, 0.15 ) }
    dend_26 { pt3dadd( 126.109, 165.228, 104.334, 0.44 ) }
    dend_26 { pt3dadd( 125.971, 165.895, 104.356, 0.44 ) }
    dend_26 { pt3dadd( 125.797, 166.909, 104.409, 0.22 ) }
    dend_26 { pt3dadd( 125.735, 167.357, 104.426, 0.15 ) }
    dend_26 { pt3dadd( 125.586, 168.279, 104.389, 0.15 ) }
    dend_26 { pt3dadd( 125.529, 168.633, 104.35, 0.15 ) }
    dend_26 { pt3dadd( 125.426, 169.15, 104.226, 0.44 ) }
    dend_26 { pt3dadd( 125.33, 169.543, 104.098, 0.44 ) }
    dend_26 { pt3dadd( 125.016, 170.69, 103.717, 0.15 ) }
    dend_26 { pt3dadd( 124.786, 171.512, 103.485, 0.22 ) }
    dend_26 { pt3dadd( 124.63, 172.073, 103.343, 0.29 ) }
    dend_26 { pt3dadd( 124.431, 173.01, 103.208, 0.29 ) }
    dend_26 { pt3dadd( 124.347, 173.752, 103.179, 0.74 ) }
    dend_26 { pt3dadd( 124.341, 174.65, 103.24, 0.66 ) }
    dend_26 { pt3dadd( 124.415, 175.45, 103.364, 1.55 ) }
    dend_26 { pt3dadd( 124.492, 175.882, 103.448, 1.55 ) }
    dend_26 { pt3dadd( 124.853, 177.209, 103.749, 0.15 ) }
    dend_26 { pt3dadd( 125.179, 178.151, 103.995, 0.22 ) }
    dend_26 { pt3dadd( 125.529, 179.039, 104.235, 0.22 ) }
    dend_26 { pt3dadd( 125.772, 179.594, 104.39, 0.22 ) }
    dend_26 { pt3dadd( 126.13, 180.332, 104.615, 0.37 ) }
    dend_26 { pt3dadd( 126.87, 181.752, 105.082, 0.22 ) }
    dend_26 { pt3dadd( 127.517, 183.006, 105.495, 0.15 ) }
    dend_26 { pt3dadd( 127.795, 183.596, 105.684, 1.18 ) }
    dend_26 { pt3dadd( 128.102, 184.332, 105.903, 2.21 ) }
    dend_26 { pt3dadd( 128.205, 184.608, 105.977, 2.21 ) }
    dend_26 { pt3dadd( 128.69, 186.203, 106.317, 0.22 ) }
    dend_26 { pt3dadd( 128.966, 187.425, 106.468, 0.22 ) }
    dend_26 { pt3dadd( 129.215, 188.759, 106.526, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 129.289, 189.205, 106.522, 0.66 ) }
    dend_26 { pt3dadd( 129.343, 189.529, 106.502, 1.25 ) }
    dend_26 { pt3dadd( 129.546, 190.61, 106.392, 1.62 ) }
    dend_26 { pt3dadd( 129.823, 191.906, 106.191, 0.22 ) }
    dend_26 { pt3dadd( 130.19, 193.198, 105.946, 0.22 ) }
    dend_26 { pt3dadd( 130.355, 193.69, 105.833, 0.37 ) }
    dend_26 { pt3dadd( 130.627, 194.421, 105.666, 0.88 ) }
    dend_26 { pt3dadd( 130.841, 194.981, 105.53, 0.88 ) }
    dend_26 { pt3dadd( 131.159, 195.775, 105.295, 0.22 ) }
    dend_26 { pt3dadd( 131.498, 196.673, 104.968, 0.15 ) }
    dend_26 { pt3dadd( 131.719, 197.381, 104.678, 0.15 ) }
    dend_26 { pt3dadd( 131.859, 197.709, 104.493, 0.52 ) }
    dend_26 { pt3dadd( 132.194, 198.385, 104.052, 0.88 ) }
    dend_26 { pt3dadd( 132.609, 199.153, 103.515, 0.22 ) }
    dend_26 { pt3dadd( 132.93, 199.677, 103.128, 0.22 ) }
    dend_26 { pt3dadd( 133.707, 200.939, 102.171, 0.15 ) }
    dend_26 { pt3dadd( 135.039, 203.118, 100.621, 0.22 ) }
    dend_26 { pt3dadd( 135.459, 203.807, 100.171, 0.44 ) }
    dend_26 { pt3dadd( 135.903, 204.55, 99.753, 0.22 ) }
    dend_26 { pt3dadd( 136.365, 205.365, 99.3784, 0.29 ) }
    dend_26 { pt3dadd( 136.717, 206.039, 99.1297, 0.22 ) }
    dend_26 { pt3dadd( 137.249, 207.235, 98.7956, 0.15 ) }
    dend_26 { pt3dadd( 137.41, 207.808, 98.7127, 0.15 ) }
    dend_26 { pt3dadd( 137.694, 208.826, 98.5808, 0.15 ) }
    dend_26 { pt3dadd( 137.844, 209.378, 98.5298, 0.29 ) }
    dend_26 { pt3dadd( 137.979, 209.933, 98.51, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.95261, 70.5963, 58.4258, 0.07 ) }
    dend_19 { pt3dadd( -9.04595, 70.9513, 58.4322, 0.07 ) }
    dend_19 { pt3dadd( -9.12321, 71.2818, 58.4568, 0.07 ) }
    dend_19 { pt3dadd( -9.23658, 71.9121, 58.5487, 0.07 ) }
    dend_19 { pt3dadd( -9.30675, 72.4415, 58.6315, 0.29 ) }
    dend_19 { pt3dadd( -9.34305, 72.8569, 58.7022, 0.07 ) }
    dend_19 { pt3dadd( -9.36654, 73.5286, 58.8203, 0.07 ) }
    dend_19 { pt3dadd( -9.35584, 73.8599, 58.8882, 0.52 ) }
    dend_19 { pt3dadd( -9.29792, 74.6907, 59.0755, 1.03 ) }
    dend_19 { pt3dadd( -9.21921, 75.5903, 59.3031, 0.15 ) }
    dend_19 { pt3dadd( -9.18998, 75.9559, 59.3974, 0.15 ) }
    dend_19 { pt3dadd( -9.16439, 76.4134, 59.5084, 0.15 ) }
    dend_19 { pt3dadd( -9.15009, 76.8314, 59.5909, 0.15 ) }
    dend_19 { pt3dadd( -9.16163, 77.2083, 59.6624, 0.07 ) }
    dend_19 { pt3dadd( -9.19186, 77.5045, 59.7206, 0.07 ) }
    dend_19 { pt3dadd( -9.23456, 77.8856, 59.8031, 0.44 ) }
    dend_19 { pt3dadd( -9.25826, 78.1038, 59.8567, 0.74 ) }
    dend_19 { pt3dadd( -9.27192, 78.3451, 59.9282, 0.74 ) }
    dend_19 { pt3dadd( -9.25659, 79.1281, 60.1968, 0.15 ) }
    dend_19 { pt3dadd( -9.21845, 79.6005, 60.3711, 0.15 ) }
    dend_19 { pt3dadd( -9.1503, 80.1774, 60.5874, 0.37 ) }
    dend_19 { pt3dadd( -9.07424, 80.7146, 60.7918, 1.7 ) }
    dend_19 { pt3dadd( -8.9884, 81.3073, 61.0052, 1.03 ) }
    dend_19 { pt3dadd( -8.8621, 82.1037, 61.283, 0.15 ) }
    dend_19 { pt3dadd( -8.7359, 82.7981, 61.5296, 0.15 ) }
    dend_19 { pt3dadd( -8.68303, 83.0821, 61.628, 0.66 ) }
    dend_19 { pt3dadd( -8.61249, 83.4413, 61.7567, 1.03 ) }
    dend_19 { pt3dadd( -8.47279, 84.0432, 61.9654, 0.15 ) }
    dend_19 { pt3dadd( -8.28239, 84.763, 62.2139, 0.15 ) }
    dend_19 { pt3dadd( -8.13184, 85.2469, 62.4, 0.15 ) }
    dend_19 { pt3dadd( -7.99605, 85.633, 62.554, 0.29 ) }
    dend_19 { pt3dadd( -7.84848, 86.0405, 62.7122, 0.29 ) }
    dend_19 { pt3dadd( -7.72799, 86.4262, 62.8446, 0.74 ) }
    dend_19 { pt3dadd( -7.61976, 86.8882, 62.9904, 0.81 ) }
    dend_19 { pt3dadd( -7.57026, 87.2095, 63.0798, 0.81 ) }
    dend_19 { pt3dadd( -7.50125, 88.106, 63.298, 0.15 ) }
    dend_19 { pt3dadd( -7.51339, 88.5682, 63.4171, 0.74 ) }
    dend_19 { pt3dadd( -7.65318, 89.5812, 63.6824, 0.15 ) }
    dend_19 { pt3dadd( -7.79541, 90.0786, 63.8209, 0.15 ) }
    dend_19 { pt3dadd( -8.0193, 90.5225, 63.9427, 0.15 ) }
    dend_19 { pt3dadd( -8.23977, 90.8384, 64.0259, 0.29 ) }
    dend_19 { pt3dadd( -8.69419, 91.3298, 64.1645, 0.15 ) }
    dend_19 { pt3dadd( -8.85085, 91.4705, 64.2036, 0.52 ) }
    dend_19 { pt3dadd( -9.40175, 91.8737, 64.3381, 1.4 ) }
    dend_19 { pt3dadd( -10.4334, 92.5448, 64.5881, 0.15 ) }
    dend_19 { pt3dadd( -10.7177, 92.7016, 64.6566, 0.15 ) }
    dend_19 { pt3dadd( -10.8605, 92.7666, 64.6975, 0.15 ) }
    dend_19 { pt3dadd( -11.4936, 92.9879, 64.9089, 0.81 ) }
    dend_19 { pt3dadd( -12.1905, 93.1531, 65.1727, 0.15 ) }
    dend_19 { pt3dadd( -12.4368, 93.1789, 65.2771, 0.15 ) }
    dend_19 { pt3dadd( -12.797, 93.185, 65.4329, 1.18 ) }
    dend_19 { pt3dadd( -13.8238, 93.1705, 65.8681, 0.07 ) }
    dend_19 { pt3dadd( -14.496, 93.1439, 66.1371, 0.07 ) }
    dend_19 { pt3dadd( -14.8076, 93.1294, 66.2497, 0.59 ) }
    dend_19 { pt3dadd( -15.1277, 93.1271, 66.3474, 1.77 ) }
    dend_19 { pt3dadd( -16.1993, 93.1434, 66.6346, 0.07 ) }
    dend_19 { pt3dadd( -16.6874, 93.1574, 66.7543, 0.07 ) }
    dend_19 { pt3dadd( -17.0064, 93.1632, 66.8173, 0.37 ) }
    dend_19 { pt3dadd( -17.3238, 93.1722, 66.8662, 0.52 ) }
    dend_19 { pt3dadd( -18.0493, 93.1835, 66.9779, 0.07 ) }
    dend_19 { pt3dadd( -18.7367, 93.1945, 67.0696, 0.07 ) }
    dend_19 { pt3dadd( -19.0175, 93.1915, 67.0983, 0.07 ) }
    dend_19 { pt3dadd( -19.2488, 93.1824, 67.1215, 0.29 ) }
    dend_19 { pt3dadd( -19.7781, 93.1355, 67.1818, 0.66 ) }
    dend_19 { pt3dadd( -20.4001, 93.0313, 67.2678, 0.07 ) }
    dend_19 { pt3dadd( -20.8599, 92.9272, 67.3341, 0.29 ) }
    dend_19 { pt3dadd( -21.2721, 92.8279, 67.3964, 0.88 ) }
    dend_19 { pt3dadd( -22.145, 92.6344, 67.5538, 0.15 ) }
    dend_19 { pt3dadd( -22.5933, 92.5413, 67.6506, 0.52 ) }
    dend_19 { pt3dadd( -23.5351, 92.351, 67.87, 0.07 ) }
    dend_19 { pt3dadd( -23.8395, 92.2941, 67.9408, 0.59 ) }
    dend_19 { pt3dadd( -24.2555, 92.2178, 68.0416, 1.47 ) }
    dend_19 { pt3dadd( -25.238, 92.0517, 68.2868, 0.07 ) }
    dend_19 { pt3dadd( -25.6094, 91.9915, 68.3835, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -26.174, 91.9012, 68.5339, 0.07 ) }
    dend_19 { pt3dadd( -26.3473, 91.8739, 68.5781, 0.37 ) }
    dend_19 { pt3dadd( -26.7109, 91.8193, 68.6589, 0.81 ) }
    dend_19 { pt3dadd( -27.3912, 91.7268, 68.7895, 0.07 ) }
    dend_19 { pt3dadd( -27.927, 91.6624, 68.8658, 0.07 ) }
    dend_19 { pt3dadd( -28.1989, 91.6515, 68.8938, 0.44 ) }
    dend_19 { pt3dadd( -28.4812, 91.6604, 68.9184, 0.88 ) }
    dend_19 { pt3dadd( -29.2553, 91.7349, 68.9612, 0.15 ) }
    dend_19 { pt3dadd( -29.666, 91.8007, 68.9681, 0.37 ) }
    dend_19 { pt3dadd( -29.8911, 91.8469, 68.9613, 0.37 ) }
    dend_19 { pt3dadd( -30.8124, 92.0321, 68.8968, 0.15 ) }
    dend_19 { pt3dadd( -31.1141, 92.0888, 68.8716, 0.15 ) }
    dend_19 { pt3dadd( -31.568, 92.1778, 68.8254, 0.37 ) }
    dend_19 { pt3dadd( -32.382, 92.3294, 68.7229, 0.07 ) }
    dend_19 { pt3dadd( -32.9037, 92.4317, 68.6516, 0.29 ) }
    dend_19 { pt3dadd( -33.3763, 92.53, 68.5889, 0.07 ) }
    dend_19 { pt3dadd( -33.8444, 92.6355, 68.5267, 0.07 ) }
    dend_19 { pt3dadd( -34.8452, 92.8722, 68.3904, 0.07 ) }
    dend_19 { pt3dadd( -36.1726, 93.196, 68.2107, 0.07 ) }
    dend_19 { pt3dadd( -36.5997, 93.3074, 68.1528, 0.07 ) }
    dend_19 { pt3dadd( -37.2127, 93.4776, 68.0765, 0.07 ) }
    dend_19 { pt3dadd( -37.5806, 93.5882, 68.0372, 0.59 ) }
    dend_19 { pt3dadd( -38.1357, 93.7525, 67.98, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -8.95261, 70.5963, 58.4258, 0.37 ) }
    dend_18 { pt3dadd( -8.19325, 69.9945, 59.1376, 0.37 ) }
    dend_18 { pt3dadd( -7.65385, 69.6221, 59.5617, 0.37 ) }
    dend_18 { pt3dadd( -7.26075, 69.3869, 59.8314, 0.59 ) }
    dend_18 { pt3dadd( -6.55844, 68.985, 60.2229, 0.22 ) }
    dend_18 { pt3dadd( -6.03841, 68.6767, 60.4723, 0.22 ) }
    dend_18 { pt3dadd( -5.67227, 68.4251, 60.6367, 0.15 ) }
    dend_18 { pt3dadd( -5.31996, 68.1721, 60.8096, 0.15 ) }
    dend_18 { pt3dadd( -4.85037, 67.7992, 61.017, 0.15 ) }
    dend_18 { pt3dadd( -4.43356, 67.4125, 61.2001, 0.59 ) }
    dend_18 { pt3dadd( -4.16591, 67.0891, 61.3255, 0.88 ) }
    dend_18 { pt3dadd( -3.58046, 66.1916, 61.6404, 0.15 ) }
    dend_18 { pt3dadd( -3.21446, 65.5109, 61.9081, 0.15 ) }
    dend_18 { pt3dadd( -3.03899, 65.1173, 62.0607, 0.44 ) }
    dend_18 { pt3dadd( -2.89687, 64.7302, 62.2088, 0.81 ) }
    dend_18 { pt3dadd( -2.71106, 64.1422, 62.435, 0.07 ) }
    dend_18 { pt3dadd( -2.50255, 63.4144, 62.6951, 0.22 ) }
    dend_18 { pt3dadd( -2.29721, 62.6446, 62.9443, 0.22 ) }
    dend_18 { pt3dadd( -2.01597, 61.5591, 63.2593, 0.07 ) }
    dend_18 { pt3dadd( -1.79856, 60.6584, 63.5046, 0.07 ) }
    dend_18 { pt3dadd( -1.58973, 59.8039, 63.7263, 0.07 ) }
    dend_18 { pt3dadd( -1.46634, 59.3242, 63.8347, 0.29 ) }
    dend_18 { pt3dadd( -1.1609, 58.1594, 64.0809, 0.07 ) }
    dend_18 { pt3dadd( -1.01594, 57.6135, 64.1811, 0.88 ) }
    dend_18 { pt3dadd( -0.829986, 56.9274, 64.3102, 1.25 ) }
    dend_18 { pt3dadd( -0.699949, 56.4822, 64.3892, 1.25 ) }
    dend_18 { pt3dadd( -0.257107, 55.0458, 64.6292, 0.07 ) }
    dend_18 { pt3dadd( 0.037429, 54.0959, 64.779, 0.07 ) }
    dend_18 { pt3dadd( 0.204941, 53.5612, 64.8545, 0.07 ) }
    dend_18 { pt3dadd( 0.302531, 53.2467, 64.8973, 0.52 ) }
    dend_18 { pt3dadd( 0.556151, 52.4029, 65.0034, 0.66 ) }
    dend_18 { pt3dadd( 0.673194, 51.9625, 65.0536, 0.22 ) }
    dend_18 { pt3dadd( 0.813663, 51.3799, 65.1088, 0.52 ) }
    dend_18 { pt3dadd( 0.915768, 50.8882, 65.1436, 0.29 ) }
    dend_18 { pt3dadd( 1.08009, 49.9593, 65.214, 0.07 ) }
    dend_18 { pt3dadd( 1.19658, 49.1501, 65.2794, 0.07 ) }
    dend_18 { pt3dadd( 1.26664, 48.5552, 65.3373, 0.22 ) }
    dend_18 { pt3dadd( 1.30501, 48.1413, 65.3834, 0.22 ) }
    dend_18 { pt3dadd( 1.40044, 46.9909, 65.5176, 0.07 ) }
    dend_18 { pt3dadd( 1.42045, 46.6894, 65.5551, 0.37 ) }
    dend_18 { pt3dadd( 1.43946, 46.3386, 65.6024, 0.59 ) }
    dend_18 { pt3dadd( 1.47413, 45.5192, 65.7235, 0.07 ) }
    dend_18 { pt3dadd( 1.49764, 44.8547, 65.8307, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -50.2974, -69.5287, 44.3607, 0.15 ) }
    dend_16 { pt3dadd( -51.3917, -69.7591, 44.2534, 0.15 ) }
    dend_16 { pt3dadd( -52.4589, -69.9716, 44.1267, 0.15 ) }
    dend_16 { pt3dadd( -53.4304, -70.1589, 43.9863, 0.15 ) }
    dend_16 { pt3dadd( -54.4248, -70.3477, 43.8314, 0.37 ) }
    dend_16 { pt3dadd( -55.5204, -70.5494, 43.65, 0.15 ) }
    dend_16 { pt3dadd( -56.6209, -70.743, 43.46, 0.07 ) }
    dend_16 { pt3dadd( -57.177, -70.84, 43.3666, 0.22 ) }
    dend_16 { pt3dadd( -58.8234, -71.1318, 43.0147, 0.15 ) }
    dend_16 { pt3dadd( -58.9386, -71.1488, 42.9865, 0.59 ) }
    dend_16 { pt3dadd( -59.6708, -71.2444, 42.8061, 1.11 ) }
    dend_16 { pt3dadd( -60.0019, -71.2883, 42.7246, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -50.2974, -69.5287, 44.3607, 0.59 ) }
    dend_15 { pt3dadd( -50.7262, -70.6306, 44.7183, 0.59 ) }
    dend_15 { pt3dadd( -51.0562, -71.4286, 44.9863, 0.96 ) }
    dend_15 { pt3dadd( -51.4935, -72.6787, 45.4174, 1.47 ) }
    dend_15 { pt3dadd( -51.7252, -73.5215, 45.7028, 1.47 ) }
    dend_15 { pt3dadd( -52.0509, -75.0416, 46.2201, 0.22 ) }
    dend_15 { pt3dadd( -52.1916, -75.6085, 46.4208, 0.15 ) }
    dend_15 { pt3dadd( -52.3797, -76.1378, 46.6282, 0.15 ) }
    dend_15 { pt3dadd( -52.7506, -77.0289, 47.0118, 0.15 ) }
    dend_15 { pt3dadd( -53.0902, -77.7808, 47.3502, 0.37 ) }
    dend_15 { pt3dadd( -53.4783, -78.5327, 47.7467, 0.37 ) }
    dend_15 { pt3dadd( -54.2536, -79.8443, 48.5842, 0.22 ) }
    dend_15 { pt3dadd( -54.7269, -80.5847, 49.1348, 0.22 ) }
    dend_15 { pt3dadd( -55.0121, -81.0205, 49.4799, 0.96 ) }
    dend_15 { pt3dadd( -55.7324, -82.1016, 50.3974, 2.06 ) }
    dend_15 { pt3dadd( -56.4161, -83.1362, 51.3351, 1.11 ) }
    dend_15 { pt3dadd( -57.3024, -84.5118, 52.6327, 0.22 ) }
    dend_15 { pt3dadd( -57.9331, -85.5767, 53.6608, 0.22 ) }
    dend_15 { pt3dadd( -58.219, -86.0501, 54.1092, 0.22 ) }
    dend_15 { pt3dadd( -58.459, -86.4263, 54.4573, 0.22 ) }
    dend_15 { pt3dadd( -58.684, -86.7474, 54.753, 0.22 ) }
    dend_15 { pt3dadd( -59.0579, -87.2191, 55.1265, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -59.5382, -87.73, 55.4609, 0.22 ) }
    dend_15 { pt3dadd( -60.332, -88.5081, 55.9169, 0.22 ) }
    dend_15 { pt3dadd( -61.0092, -89.2007, 56.2852, 0.22 ) }
    dend_15 { pt3dadd( -61.4325, -89.6737, 56.512, 0.66 ) }
    dend_15 { pt3dadd( -62.2368, -90.6781, 56.9725, 1.11 ) }
    dend_15 { pt3dadd( -63.3696, -92.1933, 57.6667, 0.29 ) }
    dend_15 { pt3dadd( -64.3498, -93.5147, 58.2608, 0.22 ) }
    dend_15 { pt3dadd( -65.172, -94.6171, 58.7599, 0.22 ) }
    dend_15 { pt3dadd( -65.5649, -95.1201, 58.9703, 0.29 ) }
    dend_15 { pt3dadd( -66.5567, -96.3701, 59.4625, 0.22 ) }
    dend_15 { pt3dadd( -67.0065, -96.9341, 59.6799, 0.96 ) }
    dend_15 { pt3dadd( -67.7804, -97.8897, 60.0364, 1.84 ) }
    dend_15 { pt3dadd( -69.0918, -99.4536, 60.6128, 0.29 ) }
    dend_15 { pt3dadd( -70.1926, -100.656, 61.0945, 0.22 ) }
    dend_15 { pt3dadd( -70.9312, -101.428, 61.4324, 0.22 ) }
    dend_15 { pt3dadd( -71.3945, -101.914, 61.6556, 0.22 ) }
    dend_15 { pt3dadd( -71.8092, -102.406, 61.8866, 0.37 ) }
    dend_15 { pt3dadd( -72.4209, -103.288, 62.2968, 0.52 ) }
    dend_15 { pt3dadd( -73.0122, -104.387, 62.7372, 0.29 ) }
    dend_15 { pt3dadd( -73.4488, -105.387, 63.1188, 0.29 ) }
    dend_15 { pt3dadd( -73.68, -105.988, 63.3133, 0.29 ) }
    dend_15 { pt3dadd( -74.0967, -107.184, 63.6744, 0.44 ) }
    dend_15 { pt3dadd( -74.5231, -108.6, 64.0968, 0.52 ) }
    dend_15 { pt3dadd( -75.0415, -110.599, 64.6691, 0.15 ) }
    dend_15 { pt3dadd( -75.2753, -111.607, 64.953, 0.59 ) }
    dend_15 { pt3dadd( -75.688, -113.245, 65.4408, 1.7 ) }
    dend_15 { pt3dadd( -76.274, -115.229, 66.0893, 0.15 ) }
    dend_15 { pt3dadd( -76.5957, -116.146, 66.438, 0.44 ) }
    dend_15 { pt3dadd( -76.8223, -116.767, 66.7026, 0.44 ) }
    dend_15 { pt3dadd( -77.1643, -117.642, 67.1241, 0.07 ) }
    dend_15 { pt3dadd( -77.4847, -118.393, 67.4996, 0.07 ) }
    dend_15 { pt3dadd( -77.7767, -118.949, 67.7896, 0.07 ) }
    dend_15 { pt3dadd( -78.2409, -119.693, 68.1666, 0.29 ) }
    dend_15 { pt3dadd( -79.0773, -120.907, 68.7524, 0.52 ) }
    dend_15 { pt3dadd( -79.6892, -121.77, 69.172, 0.22 ) }
    dend_15 { pt3dadd( -80.2129, -122.493, 69.5281, 0.22 ) }
    dend_15 { pt3dadd( -80.8026, -123.284, 69.9322, 0.37 ) }
    dend_15 { pt3dadd( -81.395, -124.03, 70.3551, 0.74 ) }
    dend_15 { pt3dadd( -82.319, -125.064, 71.0027, 1.33 ) }
    dend_15 { pt3dadd( -83.3338, -126.045, 71.6736, 0.22 ) }
    dend_15 { pt3dadd( -84.1066, -126.728, 72.1532, 0.15 ) }
    dend_15 { pt3dadd( -84.7114, -127.232, 72.5185, 0.29 ) }
    dend_15 { pt3dadd( -85.5464, -127.913, 73.0314, 0.15 ) }
    dend_15 { pt3dadd( -86.2227, -128.44, 73.4238, 0.59 ) }
    dend_15 { pt3dadd( -86.9501, -128.951, 73.8389, 0.74 ) }
    dend_15 { pt3dadd( -88.0359, -129.638, 74.3983, 0.07 ) }
    dend_15 { pt3dadd( -89.0584, -130.256, 74.9135, 0.15 ) }
    dend_15 { pt3dadd( -89.7878, -130.688, 75.2762, 0.15 ) }
    dend_15 { pt3dadd( -90.3858, -131.044, 75.5662, 0.15 ) }
    dend_15 { pt3dadd( -91.0678, -131.446, 75.8681, 0.15 ) }
    dend_15 { pt3dadd( -92.0299, -132.01, 76.254, 0.29 ) }
    dend_15 { pt3dadd( -92.8189, -132.448, 76.5271, 0.74 ) }
    dend_15 { pt3dadd( -93.9976, -133.096, 76.8764, 1.03 ) }
    dend_15 { pt3dadd( -95.1619, -133.753, 77.1856, 0.29 ) }
    dend_15 { pt3dadd( -96.7944, -134.692, 77.6335, 0.22 ) }
    dend_15 { pt3dadd( -97.8027, -135.301, 77.8928, 0.88 ) }
    dend_15 { pt3dadd( -98.9394, -135.969, 78.1869, 1.33 ) }
    dend_15 { pt3dadd( -99.9408, -136.533, 78.4332, 1.47 ) }
    dend_15 { pt3dadd( -101.855, -137.552, 78.8958, 0.22 ) }
    dend_15 { pt3dadd( -102.856, -138.048, 79.1296, 0.22 ) }
    dend_15 { pt3dadd( -104.022, -138.609, 79.4193, 1.03 ) }
    dend_15 { pt3dadd( -105.269, -139.188, 79.7227, 1.55 ) }
    dend_15 { pt3dadd( -107.064, -140.033, 80.1677, 0.74 ) }
    dend_15 { pt3dadd( -108.822, -140.925, 80.669, 0.22 ) }
    dend_15 { pt3dadd( -109.718, -141.447, 80.9471, 0.22 ) }
    dend_15 { pt3dadd( -110.529, -141.959, 81.1969, 0.22 ) }
    dend_15 { pt3dadd( -111.461, -142.606, 81.5119, 0.15 ) }
    dend_15 { pt3dadd( -112.306, -143.312, 81.8282, 0.37 ) }
    dend_15 { pt3dadd( -113.333, -144.358, 82.2895, 0.15 ) }
    dend_15 { pt3dadd( -114.013, -145.214, 82.6464, 0.15 ) }
    dend_15 { pt3dadd( -114.843, -146.417, 83.1666, 0.22 ) }
    dend_15 { pt3dadd( -115.2, -146.983, 83.4065, 0.15 ) }
    dend_15 { pt3dadd( -115.717, -147.868, 83.7942, 0.15 ) }
    dend_15 { pt3dadd( -116.005, -148.431, 84.0571, 0.74 ) }
    dend_15 { pt3dadd( -116.306, -149.128, 84.4026, 0.88 ) }
    dend_15 { pt3dadd( -116.813, -150.611, 85.2289, 0.15 ) }
    dend_15 { pt3dadd( -116.997, -151.181, 85.5594, 0.22 ) }
    dend_15 { pt3dadd( -117.317, -151.822, 85.9613, 0.22 ) }
    dend_15 { pt3dadd( -118.006, -152.811, 86.6308, 0.22 ) }
    dend_15 { pt3dadd( -118.23, -153.077, 86.8221, 0.22 ) }
    dend_15 { pt3dadd( -118.794, -153.653, 87.247, 0.88 ) }
    dend_15 { pt3dadd( -119.785, -154.518, 87.8565, 1.84 ) }
    dend_15 { pt3dadd( -121.39, -155.721, 88.6666, 0.15 ) }
    dend_15 { pt3dadd( -122.355, -156.414, 89.0612, 0.15 ) }
    dend_15 { pt3dadd( -123.077, -156.92, 89.2762, 0.29 ) }
    dend_15 { pt3dadd( -124.12, -157.701, 89.6006, 0.74 ) }
    dend_15 { pt3dadd( -125.021, -158.434, 89.9118, 1.11 ) }
    dend_15 { pt3dadd( -125.849, -159.185, 90.2498, 0.52 ) }
    dend_15 { pt3dadd( -126.98, -160.27, 90.7634, 0.22 ) }
    dend_15 { pt3dadd( -128.801, -161.875, 91.6103, 0.29 ) }
    dend_15 { pt3dadd( -130.274, -163.081, 92.3468, 0.15 ) }
    dend_15 { pt3dadd( -131.098, -163.719, 92.7953, 0.37 ) }
    dend_15 { pt3dadd( -132.179, -164.488, 93.4283, 1.18 ) }
    dend_15 { pt3dadd( -133.662, -165.494, 94.4057, 0.44 ) }
    dend_15 { pt3dadd( -134.979, -166.28, 95.3629, 0.29 ) }
    dend_15 { pt3dadd( -135.916, -166.804, 96.0982, 0.15 ) }
    dend_15 { pt3dadd( -136.676, -167.198, 96.6663, 0.88 ) }
    dend_15 { pt3dadd( -137.799, -167.768, 97.5121, 1.03 ) }
    dend_15 { pt3dadd( -139.358, -168.535, 98.7546, 0.22 ) }
    dend_15 { pt3dadd( -140.804, -169.254, 100.063, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -141.486, -169.589, 100.727, 0.59 ) }
    dend_15 { pt3dadd( -142.281, -169.96, 101.511, 0.96 ) }
    dend_15 { pt3dadd( -143.394, -170.395, 102.596, 0.37 ) }
    dend_15 { pt3dadd( -144.885, -170.841, 104.037, 0.15 ) }
    dend_15 { pt3dadd( -146.095, -171.063, 105.17, 0.59 ) }
    dend_15 { pt3dadd( -146.83, -171.141, 105.851, 1.77 ) }
    dend_15 { pt3dadd( -148.69, -171.247, 107.571, 0.22 ) }
    dend_15 { pt3dadd( -149.857, -171.289, 108.671, 0.22 ) }
    dend_15 { pt3dadd( -150.715, -171.305, 109.444, 0.37 ) }
    dend_15 { pt3dadd( -151.579, -171.34, 110.155, 0.37 ) }
    dend_15 { pt3dadd( -152.265, -171.4, 110.695, 0.37 ) }
    dend_15 { pt3dadd( -153.183, -171.508, 111.447, 0.81 ) }
    dend_15 { pt3dadd( -153.955, -171.667, 112.156, 0.81 ) }
    dend_15 { pt3dadd( -155.114, -172.139, 113.389, 0.29 ) }
    dend_15 { pt3dadd( -155.746, -172.532, 114.216, 0.29 ) }
    dend_15 { pt3dadd( -156.09, -172.891, 114.921, 0.29 ) }
    dend_15 { pt3dadd( -156.192, -173.077, 115.314, 0.29 ) }
    dend_15 { pt3dadd( -156.398, -173.754, 116.933, 0.29 ) }
    dend_15 { pt3dadd( -156.432, -174.03, 117.606, 0.44 ) }
    dend_15 { pt3dadd( -156.468, -174.546, 118.854, 0.44 ) }
    dend_15 { pt3dadd( -156.606, -175.257, 120.579, 0.81 ) }
    dend_15 { pt3dadd( -156.863, -175.843, 122.074, 0.81 ) }
    dend_15 { pt3dadd( -157.183, -176.295, 123.233, 0.81 ) }
    dend_15 { pt3dadd( -157.455, -176.544, 123.898, 0.22 ) }
    dend_15 { pt3dadd( -158.222, -177.096, 125.425, 0.22 ) }
    dend_15 { pt3dadd( -159.245, -177.701, 127.079, 0.22 ) }
    dend_15 { pt3dadd( -160.269, -178.255, 128.497, 0.81 ) }
    dend_15 { pt3dadd( -161.289, -178.81, 129.761, 0.52 ) }
    dend_15 { pt3dadd( -162.892, -179.727, 131.51, 0.22 ) }
    dend_15 { pt3dadd( -163.614, -180.161, 132.191, 0.22 ) }
    dend_15 { pt3dadd( -164.184, -180.524, 132.612, 0.52 ) }
    dend_15 { pt3dadd( -165.241, -181.219, 133.125, 0.15 ) }
    dend_15 { pt3dadd( -165.755, -181.56, 133.245, 0.59 ) }
    dend_15 { pt3dadd( -167.118, -182.486, 133.317, 0.15 ) }
    dend_15 { pt3dadd( -168.087, -183.181, 133.154, 0.37 ) }
    dend_15 { pt3dadd( -169.156, -183.954, 132.856, 0.15 ) }
    dend_15 { pt3dadd( -170.112, -184.583, 132.492, 0.37 ) }
    dend_15 { pt3dadd( -170.721, -184.887, 132.157, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 140.773, 239.001, 122.239, 0.96 ) }
    dend_31 { pt3dadd( 141.762, 240.37, 122.747, 0.96 ) }
    dend_31 { pt3dadd( 142.424, 241.394, 123.112, 1.25 ) }
    dend_31 { pt3dadd( 142.998, 242.404, 123.457, 0.66 ) }
    dend_31 { pt3dadd( 143.339, 243.061, 123.674, 0.22 ) }
    dend_31 { pt3dadd( 143.742, 243.868, 123.939, 0.15 ) }
    dend_31 { pt3dadd( 144.006, 244.376, 124.107, 0.37 ) }
    dend_31 { pt3dadd( 144.527, 245.455, 124.456, 0.15 ) }
    dend_31 { pt3dadd( 144.913, 246.203, 124.703, 0.37 ) }
    dend_31 { pt3dadd( 145.221, 246.731, 124.884, 0.88 ) }
    dend_31 { pt3dadd( 145.62, 247.312, 125.062, 0.88 ) }
    dend_31 { pt3dadd( 146.613, 248.529, 125.323, 0.22 ) }
    dend_31 { pt3dadd( 147.314, 249.321, 125.478, 0.22 ) }
    dend_31 { pt3dadd( 148.056, 250.045, 125.602, 0.22 ) }
    dend_31 { pt3dadd( 148.582, 250.508, 125.666, 0.22 ) }
    dend_31 { pt3dadd( 149.731, 251.45, 125.743, 1.25 ) }
    dend_31 { pt3dadd( 150.961, 252.4, 125.72, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 140.773, 239.001, 122.239, 0.29 ) }
    dend_28 { pt3dadd( 140.629, 240.023, 122.595, 0.29 ) }
    dend_28 { pt3dadd( 140.652, 240.535, 122.775, 0.22 ) }
    dend_28 { pt3dadd( 140.714, 240.962, 122.919, 0.66 ) }
    dend_28 { pt3dadd( 140.838, 241.597, 123.121, 0.22 ) }
    dend_28 { pt3dadd( 140.982, 242.218, 123.311, 0.15 ) }
    dend_28 { pt3dadd( 141.116, 242.799, 123.479, 0.15 ) }
    dend_28 { pt3dadd( 141.322, 243.539, 123.665, 0.15 ) }
    dend_28 { pt3dadd( 141.567, 244.323, 123.834, 0.22 ) }
    dend_28 { pt3dadd( 141.812, 245.037, 123.969, 0.29 ) }
    dend_28 { pt3dadd( 142.035, 245.632, 124.07, 0.22 ) }
    dend_28 { pt3dadd( 142.297, 246.236, 124.17, 0.29 ) }
    dend_28 { pt3dadd( 142.739, 247.043, 124.324, 0.22 ) }
    dend_28 { pt3dadd( 143.178, 247.735, 124.471, 0.66 ) }
    dend_28 { pt3dadd( 143.448, 248.13, 124.564, 1.11 ) }
    dend_28 { pt3dadd( 143.788, 248.615, 124.678, 1.18 ) }
    dend_28 { pt3dadd( 144.264, 249.293, 124.828, 0.37 ) }
    dend_28 { pt3dadd( 144.782, 250.04, 124.989, 0.37 ) }
    dend_28 { pt3dadd( 145.179, 250.699, 125.12, 0.22 ) }
    dend_28 { pt3dadd( 145.488, 251.412, 125.245, 0.22 ) }
    dend_28 { pt3dadd( 145.659, 251.948, 125.318, 0.22 ) }
    dend_28 { pt3dadd( 145.765, 252.397, 125.371, 0.59 ) }
    dend_28 { pt3dadd( 145.819, 252.723, 125.413, 1.03 ) }
    dend_28 { pt3dadd( 145.907, 253.451, 125.524, 1.18 ) }
    dend_28 { pt3dadd( 146.058, 254.819, 125.803, 0.44 ) }
    dend_28 { pt3dadd( 146.13, 255.404, 125.942, 0.88 ) }
    dend_28 { pt3dadd( 146.203, 256.061, 126.122, 1.7 ) }
    dend_28 { pt3dadd( 146.279, 256.82, 126.353, 2.29 ) }
    dend_28 { pt3dadd( 146.346, 257.499, 126.575, 2.29 ) }
    dend_28 { pt3dadd( 146.393, 257.997, 126.763, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 146.393, 257.997, 126.763, 0.22 ) }
    dend_30 { pt3dadd( 147.55, 260.377, 127.323, 0.22 ) }
    dend_30 { pt3dadd( 148.093, 261.494, 127.586, 0.22 ) }
    dend_30 { pt3dadd( 148.668, 262.676, 127.864, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 146.393, 257.997, 126.763, 0.29 ) }
    dend_29 { pt3dadd( 147.275, 258.911, 127.497, 0.29 ) }
    dend_29 { pt3dadd( 147.861, 259.519, 127.985, 0.29 ) }
    dend_29 { pt3dadd( 148.451, 260.131, 128.477, 0.29 ) }
    dend_29 { pt3dadd( 148.951, 260.648, 128.893, 0.52 ) }
    dend_29 { pt3dadd( 149.46, 261.176, 129.317, 0.52 ) }
    dend_29 { pt3dadd( 150.301, 262.049, 130.018, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_59 nseg = 7
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 5
    dend_61 nseg = 5
    dend_60 nseg = 5
    dend_53 nseg = 7
    dend_48 nseg = 5
    dend_42 nseg = 7
    dend_68 nseg = 11
    dend_67 nseg = 11
    dend_65 nseg = 13
    dend_64 nseg = 9
    dend_57 nseg = 15
    dend_54 nseg = 3
    dend_49 nseg = 3
    dend_43 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 11
    dend_21 nseg = 9
    dend_12 nseg = 13
    dend_9 nseg = 5
    dend_8 nseg = 9
    dend_6 nseg = 15
    dend_3 nseg = 5
    dend_44 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 5
    dend_34 nseg = 9
    dend_33 nseg = 11
    dend_27 nseg = 11
    dend_26 nseg = 9
    dend_19 nseg = 3
    dend_15 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_BTC_c021ea90e3_0_0


