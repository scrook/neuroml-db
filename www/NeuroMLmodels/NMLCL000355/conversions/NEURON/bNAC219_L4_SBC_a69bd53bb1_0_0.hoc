// Cell: bNAC219_L4_SBC_a69bd53bb1_0_0
/*
{
  "id" : "bNAC219_L4_SBC_a69bd53bb1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.259893, -9.42971, -0.848319, 2.94679", "0.274509, -8.53076, -0.774952, 4.96732", "0.289126, -7.63181, -0.701585, 7.50293", "0.303742, -6.73286, -0.628218, 9.88075", "0.318358, -5.8339, -0.554851, 11.1234", "0.332975, -4.93495, -0.481484, 12.1727", "0.347591, -4.036, -0.408118, 12.6064", "0.362208, -3.13705, -0.334751, 12.7", "0.376824, -2.2381, -0.261384, 12.7598", "0.39144, -1.33915, -0.188017, 12.6811", "0.406057, -0.4402, -0.11465, 12.486", "0.420673, 0.458751, -0.0412834, 12.2118", "0.43529, 1.3577, 0.0320835, 11.8745", "0.449906, 2.25665, 0.10545, 11.5372", "0.464522, 3.1556, 0.178817, 10.2739", "0.479139, 4.05455, 0.252184, 8.61928", "0.493755, 4.95351, 0.325551, 7.19059", "0.508371, 5.85246, 0.398918, 6.26009", "0.522988, 6.75141, 0.472285, 5.10411", "0.537604, 7.65036, 0.545651, 3.84179", "0.552221, 8.54931, 0.619018, 2.38567" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.400844, 8.48133, 0.523351, 4.42", "0.400844, 8.48133, 0.523351, 4.42", "0.346714, 9.94261, 0.528239, 4.42", "0.338617, 12.1346, 0.538729, 4.42", "0.365225, 13.679, 0.546998, 4.49", "0.386048, 14.8876, 0.55347, 4.49", "0.418528, 16.7727, 0.563564, 4.72", "0.443096, 17.8163, 0.569745, 4.72", "0.494539, 19.145, 0.579429, 4.72", "0.595554, 20.2424, 0.589881, 4.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000005627683015
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.552221, 8.54931, 0.619018, 1.44054", "0.79608, 23.5473, 0.619018, 1.44054", "1.03994, 38.5453, 0.619018, 1.44054" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.595554, 20.2424, 0.589881, 3.09", "1.77024, 22.6853, 0.29375, 3.09", "2.63318, 24.5557, 0.0797865, 2.73", "3.66511, 26.8481, -0.175281, 2.73", "4.67171, 29.0782, -0.426261, 2.73", "5.32574, 30.5259, -0.590073, 2.8", "6.38878, 32.8538, -0.858771, 2.8", "6.46651, 33.032, -0.879044, 2.8", "7.23408, 34.7505, -1.08106, 2.8", "8.21885, 36.8745, -1.34615, 2.8", "8.2533, 36.9471, -1.35586, 2.8", "9.24494, 38.8362, -1.64384, 2.95", "10.0623, 40.2754, -1.89467, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.595554, 20.2424, 0.589881, 1.33", "-0.02067, 22.0739, 1.22419, 1.33", "-0.0378306, 22.1324, 1.24027, 1.33", "-0.225763, 22.8593, 1.40516, 1.33", "-0.23695, 22.9107, 1.41526, 1.33", "-0.406775, 23.7764, 1.57535, 1.18", "-0.414501, 23.8191, 1.58329, 1.18", "-0.488861, 24.5738, 1.65832, 1.4", "-0.540951, 25.0771, 1.72153, 1.55", "-0.618196, 25.6769, 1.80783, 1.55", "-0.628547, 25.7437, 1.81488, 1.55", "-0.705871, 26.1841, 1.8466, 1.55", "-0.71369, 26.2274, 1.84832, 1.55", "-0.822683, 26.9297, 1.81453, 1.55", "-0.930571, 27.8767, 1.69368, 1.4", "-0.964006, 28.4701, 1.58503, 1.4", "-0.958795, 28.8573, 1.49972, 1.92", "-0.955753, 28.9005, 1.48873, 1.92", "-0.852986, 29.7245, 1.2686, 1.92", "-0.7465, 30.2847, 1.11323, 1.92", "-0.589355, 30.9491, 0.977751, 1.69", "-0.406935, 31.6975, 0.855181, 1.69", "-0.394207, 31.7489, 0.847576, 1.69", "-0.190846, 32.6062, 0.753097, 1.69", "-0.17118, 32.6995, 0.752038, 1.69", "-0.0119858, 33.5104, 0.761086, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.03994, 38.5453, 0.619018, 0.15", "1.2838, 53.5434, 0.619018, 0.15", "1.52766, 68.5414, 0.619018, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "10.0623, 40.2754, -1.89467, 1.99", "11.4773, 40.7251, -2.34684, 1.99", "12.3564, 41.0224, -2.6276, 1.92", "13.1966, 41.3342, -2.89566, 1.92", "14.1577, 41.707, -3.23864, 1.77", "15.036, 42.0524, -3.56743, 1.77", "15.0697, 42.0653, -3.58099, 1.77", "15.8116, 42.3626, -3.92003, 2.28", "16.6718, 42.7092, -4.33085, 2.28", "17.9694, 43.2254, -4.98092, 1.99", "18.9567, 43.6142, -5.50146, 1.99", "20.0569, 44.0272, -6.10589, 1.99", "21.0108, 44.3738, -6.64346, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.0623, 40.2754, -1.89467, 2.06", "10.2611, 42.1562, -1.99363, 2.06", "10.3659, 43.5242, -2.06418, 1.62", "10.3692, 43.5837, -2.06701, 1.62", "10.4504, 45.2073, -2.14156, 1.33", "10.5418, 46.8237, -2.14785, 1.33", "10.5501, 46.9536, -2.1435, 1.33", "10.6474, 48.5551, -2.00065, 1.33", "10.7221, 49.7106, -1.83589, 2.06", "10.7886, 50.3131, -1.72052, 2.21", "10.9903, 51.4907, -1.42875, 2.43", "11.114, 52.0408, -1.28412, 2.95", "11.2477, 52.6716, -1.13906, 2.95", "11.2735, 52.8206, -1.1112, 2.95", "11.462, 54.3673, -0.912518, 1.33", "11.5405, 55.3612, -0.836091, 1.33", "11.5828, 56.6772, -0.814416, 1.33", "11.5584, 58.1559, -0.82857, 1.47", "11.4448, 59.5669, -0.915379, 1.47", "11.3162, 60.4737, -1.00681, 1.69", "11.3057, 60.5265, -1.01102, 1.69", "11.0668, 61.7126, -1.07127, 1.92", "10.9056, 62.7259, -1.09407, 1.92", "10.7726, 64.219, -1.04728, 0.66", "10.7864, 65.2783, -0.950102, 0.66", "10.9702, 66.9064, -0.721723, 0.66", "11.0782, 67.5895, -0.604289, 1.25", "11.3301, 68.5818, -0.368933, 1.99", "11.6267, 69.3724, -0.116754, 2.5", "12.0688, 70.2389, 0.253834, 3.24", "12.5349, 70.9775, 0.558909, 3.39" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.0119858, 33.5104, 0.761086, 1.03", "-1.08032, 34.1544, 1.60846, 1.03", "-1.42882, 34.3581, 1.88125, 0.88", "-2.39283, 34.8837, 2.64215, 1.03", "-2.9378, 35.1713, 3.07564, 1.33", "-2.97715, 35.1914, 3.10538, 1.33", "-3.82572, 35.6332, 3.67348, 1.33", "-3.86307, 35.6523, 3.69143, 1.33", "-5.015, 36.2593, 4.07025, 1.33", "-5.05418, 36.2812, 4.07747, 1.33", "-5.59473, 36.6084, 4.12855, 1.47", "-6.44308, 37.202, 4.12366, 1.33", "-7.29883, 37.9016, 4.02443, 1.33", "-7.94122, 38.5218, 3.8758, 1.47", "-7.99423, 38.5848, 3.85457, 1.47", "-8.47527, 39.2432, 3.61891, 1.47", "-9.03064, 40.2067, 3.25564, 1.33", "-9.29396, 40.8103, 3.01677, 1.33", "-9.57909, 41.7351, 2.62493, 1.33", "-9.73259, 42.378, 2.33838, 1.33", "-9.74122, 42.4175, 2.32058, 1.33", "-9.85325, 42.9569, 2.07191, 1.33", "-9.86715, 43.0021, 2.05136, 1.33", "-10.1023, 43.5445, 1.8414, 1.4", "-10.4245, 44.1434, 1.66066, 1.47", "-10.8141, 44.7874, 1.52841, 1.62", "-11.094, 45.2401, 1.46492, 1.62", "-11.6774, 46.173, 1.37855, 1.33", "-12.1501, 46.9506, 1.331, 1.4", "-12.5365, 47.5766, 1.3395, 1.4", "-13.2469, 48.6716, 1.41026, 0.96", "-13.7709, 49.4521, 1.49674, 0.96", "-14.0959, 49.9051, 1.56341, 1.18", "-14.5333, 50.4366, 1.66677, 1.47", "-15.4009, 51.2901, 1.84915, 1.47", "-16.1584, 51.8259, 1.95302, 1.33", "-16.2003, 51.8436, 1.95711, 1.33", "-17.2374, 52.0861, 2.04074, 1.55", "-18.1536, 52.1801, 2.09471, 2.06", "-18.9195, 52.1722, 2.15301, 1.69", "-20.1663, 52.0731, 2.23507, 0.96", "-21.5423, 51.9061, 2.35598, 1.55", "-22.106, 51.8315, 2.42381, 1.77", "-22.6144, 51.7636, 2.5269, 1.47", "-24.0296, 51.5672, 2.86119, 1.11", "-24.7837, 51.4826, 3.08241, 0.96", "-24.827, 51.4805, 3.09792, 0.96", "-25.8436, 51.5046, 3.47535, 1.18", "-27.1121, 51.5985, 4.02682, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.0119858, 33.5104, 0.761086, 0.96", "-0.213602, 34.6538, 0.266687, 0.96", "-0.224266, 34.7048, 0.247108, 0.96", "-0.465755, 35.9042, -0.121582, 0.96", "-0.6354, 36.774, -0.359286, 0.96", "-0.647511, 36.8383, -0.374881, 0.96", "-0.822567, 37.9001, -0.633496, 0.96", "-0.834722, 37.9678, -0.647857, 0.96", "-0.991651, 39.1818, -0.878917, 0.96", "-0.996896, 39.2477, -0.889643, 0.96", "-1.0002, 40.5676, -1.11563, 1.25", "-0.94216, 41.5143, -1.27958, 1.25", "-0.935441, 41.5683, -1.28909, 1.25", "-0.783398, 42.6189, -1.45658, 0.74", "-0.764084, 42.7466, -1.47372, 0.74", "-0.615338, 43.8174, -1.60262, 0.52", "-0.482527, 44.8837, -1.70368, 1.25", "-0.437529, 45.3508, -1.73819, 1.62", "-0.379262, 46.1022, -1.79169, 1.25", "-0.34445, 47.0012, -1.87715, 0.59", "-0.333694, 47.9536, -1.98128, 0.59", "-0.329041, 48.9368, -2.02077, 1.11", "-0.326973, 49.0011, -2.01989, 1.11", "-0.267314, 49.6712, -1.98601, 1.11", "-0.09225, 50.8984, -1.81712, 0.59", "0.06721, 51.6981, -1.66097, 0.59", "0.423442, 53.436, -1.16618, 1.25", "0.584081, 54.3343, -0.915382, 1.47", "0.700822, 55.2399, -0.685185, 1.47", "0.790824, 56.841, -0.404023, 1.69", "0.77726, 57.9907, -0.29509, 1.18", "0.624963, 59.4363, -0.45555, 0.66", "0.387019, 60.8396, -0.944199, 0.96", "0.234653, 61.6372, -1.36836, 1.33", "-0.0760198, 63.2622, -2.45109, 1.33", "-0.117005, 63.5335, -2.66403, 1.84", "-0.208129, 64.8123, -3.72281, 1.4", "-0.146153, 65.8826, -4.56368, 1.11", "0.0335592, 66.8506, -5.16978, 1.11", "0.272695, 67.7124, -5.61039, 1.84", "0.457285, 68.268, -5.8229, 2.06", "0.799893, 69.3505, -6.15131, 2.06", "1.22315, 70.7538, -6.45079, 0.96", "1.54788, 71.8701, -6.64273, 0.66", "1.72669, 72.4673, -6.71465, 0.59", "2.02242, 73.4357, -6.80828, 0.59", "2.29066, 74.401, -6.84239, 0.59", "2.30723, 74.466, -6.83954, 0.59", "2.46242, 75.1881, -6.79455, 0.59", "2.47427, 75.2613, -6.79139, 0.59", "2.57315, 76.0621, -6.81628, 0.59", "2.63804, 76.9734, -7.04563, 1.11", "2.64028, 77.035, -7.07317, 1.11", "2.62133, 77.8197, -7.51792, 1.62", "2.5864, 78.2683, -7.82292, 1.62", "2.51691, 79.0335, -8.38973, 1.92", "2.37548, 80.3066, -9.39177, 1.92", "2.36403, 80.4022, -9.46627, 1.92", "2.22466, 81.4776, -10.2148, 0.66", "2.21142, 81.5808, -10.2768, 0.66", "2.10359, 82.5039, -10.7441, 0.88", "2.07712, 82.9868, -10.9311, 1.11", "2.10063, 83.5603, -11.0889, 1.25", "2.14324, 84.0099, -11.2104, 0.96", "2.27163, 84.8871, -11.4548, 0.59", "2.28778, 84.9855, -11.4816, 0.59", "2.45024, 85.9895, -11.7368, 0.59", "2.58246, 86.9341, -11.9612, 0.44", "2.58936, 86.9969, -11.9743, 0.44", "2.63581, 87.7499, -12.0984, 0.44", "2.63111, 88.3741, -12.1659, 0.44", "2.55295, 89.3334, -12.2336, 1.47", "2.40244, 90.132, -12.2521, 1.99", "2.28573, 90.5707, -12.2448, 2.28", "2.09303, 91.2083, -12.2335, 2.43", "1.90808, 91.7888, -12.2222, 2.43", "1.69629, 92.4455, -12.2179, 2.28", "1.26455, 93.8405, -12.2272, 0.44", "1.09242, 94.4589, -12.2488, 0.37", "0.903856, 95.2957, -12.2976, 0.37", "0.80084, 95.9599, -12.3503, 0.37", "0.74295, 96.5907, -12.4038, 1.11", "0.715029, 97.1995, -12.4516, 1.62", "0.721715, 98.1219, -12.5148, 1.92", "0.753888, 98.9369, -12.5394, 2.36", "0.802042, 99.8074, -12.5332, 2.36", "0.863958, 100.712, -12.4407, 1.92", "0.936818, 101.661, -12.2504, 1.25", "0.999973, 102.443, -12.0359, 1.25", "1.09354, 103.532, -11.664, 1.47", "1.16481, 104.542, -11.2793, 1.4", "1.22679, 106.408, -10.5465, 0.44", "1.23219, 107.338, -10.2, 0.74", "1.23663, 107.786, -10.0472, 0.74", "1.23573, 107.851, -10.0305, 0.74", "1.18974, 108.901, -9.89949, 0.44", "1.07751, 110.451, -9.89547, 0.44", "1.00732, 111.319, -10.0212, 0.37", "0.93488, 112.248, -10.2306, 0.37", "0.791756, 113.585, -10.5778, 0.81", "0.665019, 114.535, -10.8798, 1.62", "0.559122, 115.356, -11.1716, 2.5", "0.396303, 116.529, -11.6336, 2.58", "0.208821, 117.558, -12.0516, 1.77", "-0.200219, 119.171, -12.7249, 0.52", "-0.473389, 120.125, -13.1404, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "21.0108, 44.3738, -6.64346, 0.96", "22.201, 45.7532, -5.4424, 0.96", "23.0534, 46.657, -4.59084, 0.96", "24.031, 47.5755, -3.67714, 1.18", "25.9409, 49.1014, -1.89905, 2.8", "28.2429, 50.7577, 0.148022, 1.62", "28.8891, 51.1959, 0.68227, 1.33", "28.9337, 51.2209, 0.718273, 1.33", "29.7373, 51.6078, 1.32301, 0.96", "32.2798, 52.6782, 2.87128, 0.96", "33.1083, 53.0155, 3.23882, 1.33", "34.2774, 53.5657, 3.61081, 1.55", "35.0523, 53.9522, 3.85936, 1.77", "35.1583, 54.0075, 3.89145, 1.77", "36.3204, 54.6687, 4.19447, 2.06", "38.0933, 55.6911, 4.38871, 1.03", "39.4688, 56.4577, 4.61636, 1.92" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "21.0108, 44.3738, -6.64346, 1.69", "22.7248, 44.7422, -10.0982, 1.69", "23.2727, 44.7591, -11.0054, 1.69", "23.3316, 44.7572, -11.0985, 1.69", "23.9992, 44.7162, -12.0945, 1.69", "24.0454, 44.7127, -12.1615, 1.69", "25.2512, 44.6419, -13.8194, 1.4", "26.1163, 44.6016, -14.8225, 1.4", "27.5876, 44.6518, -16.5316, 1.4", "28.1264, 44.737, -17.1034, 1.69", "28.1803, 44.7505, -17.1579, 1.69", "28.9082, 44.9964, -17.9021, 1.69", "30.3581, 45.5592, -19.3165, 1.4", "31.2002, 45.9163, -20.134, 1.18", "33.0498, 46.6539, -21.8304, 1.18", "33.1959, 46.7062, -21.9611, 1.18", "34.8882, 47.2364, -23.4416, 1.11", "36.3448, 47.6238, -24.7298, 1.4", "36.4031, 47.6368, -24.7798, 1.4", "37.7011, 47.9209, -25.8767, 1.69", "38.7708, 48.1971, -26.733, 1.84", "38.8398, 48.219, -26.7831, 1.84", "40.1518, 48.7527, -27.6024, 1.99", "41.0455, 49.2411, -28.1448, 1.47", "42.3014, 50.0323, -28.8596, 1.47", "43.3184, 50.7439, -29.4006, 1.62", "43.3988, 50.7994, -29.4406, 1.62", "44.5549, 51.5626, -29.9725, 1.47", "45.7021, 52.2735, -30.5037, 1.69", "46.6097, 52.7941, -31.0668, 1.99", "47.4207, 53.1739, -31.697, 1.99", "48.351, 53.4693, -32.5289, 1.92", "48.4215, 53.4833, -32.5965, 1.92", "49.7098, 53.5921, -33.9496, 1.92", "51.1629, 53.618, -35.6346, 2.06", "51.9346, 53.6344, -36.5817, 1.47", "52.872, 53.694, -37.7384, 0.96", "53.6595, 53.8108, -38.7367, 0.88", "53.7405, 53.8239, -38.8355, 0.88", "54.9569, 54.0542, -40.1791, 1.25", "55.5891, 54.2326, -40.805, 1.84", "56.1166, 54.4933, -41.3972, 2.06", "56.9214, 55.1271, -42.4614, 1.69" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.5349, 70.9775, 0.558909, 0.88", "11.7183, 75.4042, -0.83263, 0.88", "11.4086, 77.283, -1.35815, 0.88", "11.282, 78.4456, -1.63272, 1.4", "11.177, 79.7335, -1.906, 1.62", "11.124, 80.4975, -2.04155, 1.99", "11.0242, 82.0783, -2.28623, 1.69", "11.0195, 82.3231, -2.29638, 1.69", "11.0051, 84.6593, -2.39701, 1.92", "11.0039, 84.7469, -2.40091, 1.92", "10.8361, 87.5227, -2.52636, 0.66", "10.7699, 88.5311, -2.57117, 1.11", "10.7063, 89.5355, -2.67431, 1.33", "10.7, 89.6406, -2.69002, 1.33", "10.68, 90.3941, -2.83756, 1.33", "10.7177, 92.009, -3.20997, 1.18", "10.8676, 94.1372, -3.75729, 0.66", "11.0148, 96.177, -4.26098, 0.66", "11.0192, 96.2626, -4.28015, 0.66", "11.0081, 98.4707, -4.71178, 0.66", "11.0008, 98.5725, -4.72825, 0.66", "10.7629, 100.316, -4.95043, 0.66", "10.3869, 101.903, -5.07732, 1.77", "9.93191, 103.564, -5.05221, 1.99", "9.51912, 105.148, -4.96817, 2.14", "9.0927, 106.947, -4.8227, 2.14", "9.07328, 107.052, -4.81251, 2.14", "8.90545, 108.583, -4.635, 2.14", "8.88139, 110.612, -4.37924, 1.25", "9.12962, 112.72, -4.13751, 0.88", "9.44199, 114.093, -4.01306, 0.88", "9.50047, 114.313, -3.99542, 0.88", "9.7547, 115.301, -3.92785, 1.18", "10.0792, 116.652, -3.86315, 1.18", "10.518, 118.992, -3.83417, 0.66", "10.6602, 120.488, -3.79643, 0.59", "10.6093, 121.661, -3.75498, 0.59", "10.3486, 122.936, -3.70181, 0.59", "10.0341, 123.798, -3.66143, 1.4", "9.61611, 124.633, -3.62203, 1.62", "8.94326, 125.707, -3.57643, 1.77", "7.90414, 127.273, -3.53834, 0.88", "7.08208, 128.606, -3.55046, 0.44", "6.6438, 129.365, -3.56967, 0.44", "6.22988, 130.245, -3.59564, 1.03", "6.13044, 130.546, -3.6062, 1.03", "6.10616, 131.091, -3.63154, 1.03", "6.27653, 131.916, -3.73845, 1.03", "6.30264, 132.019, -3.7555, 1.03", "6.41992, 132.649, -3.86519, 0.96", "6.45045, 132.942, -3.91146, 0.96", "6.54069, 134.586, -4.1446, 0.88", "6.56418, 136.795, -4.43064, 0.81", "6.48236, 138.668, -4.65009, 0.81", "6.31173, 140.387, -4.82557, 0.66", "6.07465, 142.147, -4.97391, 1.03", "5.96385, 142.934, -5.02694, 1.69", "5.83078, 143.775, -5.06657, 1.99", "5.65393, 144.906, -5.08957, 1.99", "5.4473, 146.578, -5.13286, 1.99", "5.27761, 149.266, -5.22615, 0.59", "5.27578, 150.781, -5.29508, 0.29", "5.28259, 150.887, -5.30047, 0.29", "5.48587, 152.33, -5.37819, 0.29", "5.72121, 153.37, -5.43435, 0.59", "6.03097, 154.45, -5.49225, 1.03", "6.3047, 155.386, -5.54053, 1.55", "6.63727, 156.597, -5.601, 1.84", "6.92385, 157.634, -5.65278, 2.14", "7.57925, 159.915, -5.76882, 0.37", "7.94857, 161.253, -5.77903, 1.18", "8.2609, 162.451, -5.75522, 1.18", "8.50557, 163.418, -5.75781, 1.03", "8.92659, 165.206, -5.79213, 0.44", "9.49092, 167.715, -5.87986, 0.44", "9.98408, 170.212, -6.14566, 1.03", "10.2244, 171.667, -6.3763, 1.84", "10.5784, 174.14, -6.87044, 1.84", "10.7205, 175.354, -7.15854, 1.62", "10.925, 177.291, -7.77932, 1.03", "11.2444, 180.375, -9.02675, 0.59", "11.4492, 182.028, -9.80428, 0.44", "11.4764, 182.222, -9.8828, 0.44", "11.6367, 183.353, -10.1962, 0.44", "12.0125, 185.77, -10.5782, 1.03", "12.1698, 186.828, -10.5691, 1.25", "12.4001, 188.405, -10.2796, 0.44", "12.71, 191.02, -9.65946, 0.66", "12.8466, 192.662, -9.10689, 0.37", "12.9268, 193.862, -8.62053, 0.37", "13.0087, 195.305, -7.97966, 1.33", "13.0518, 196.09, -7.65175, 2.36", "13.1261, 197.227, -7.22856, 2.36", "13.3808, 200.187, -6.40563, 0.59", "13.5079, 201.529, -6.00287, 0.59", "13.5877, 202.658, -5.60419, 0.59", "13.6161, 203.426, -5.32058, 0.44", "13.6166, 203.525, -5.28693, 0.44", "13.6075, 204.27, -5.09014, 0.44", "13.5753, 206.072, -4.81191, 0.74", "13.5562, 207.336, -4.64346, 0.74", "13.5705, 209.036, -4.55781, 1.25", "13.6108, 210.212, -4.58236, 1.25", "13.6962, 212.381, -4.75457, 0.66", "13.7811, 214.176, -5.07792, 1.33", "13.8031, 215.043, -5.31316, 1.69", "13.8057, 217.137, -5.97775, 0.74", "13.8007, 218.489, -6.45831, 0.37", "13.808, 219.356, -6.77739, 0.88", "13.9059, 221.207, -7.44535, 0.66", "14.0649, 222.589, -7.86632, 0.52", "14.1075, 222.891, -7.94916, 0.52", "14.3633, 224.35, -8.2509, 0.74", "14.7998, 226.342, -8.60393, 1.03", "15.2793, 228.117, -8.83384, 1.25", "15.9519, 230.144, -8.92873, 1.4" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.5349, 70.9775, 0.558909, 2.06", "14.1414, 73.8215, -0.290883, 2.06", "14.5886, 74.7027, -0.343248, 0.96", "15.1972, 75.9546, -0.299018, 0.88", "15.2242, 76.0066, -0.294204, 0.88", "15.7203, 76.8855, -0.181361, 0.88", "16.6038, 78.4112, 0.0275704, 1.11", "16.8474, 78.8653, 0.173681, 1.33", "16.8781, 78.9237, 0.189176, 1.33", "17.3553, 79.8049, 0.390107, 1.33", "17.8156, 80.7574, 0.611518, 0.88", "18.2045, 81.6779, 0.804762, 0.88", "18.2296, 81.7472, 0.816261, 0.88", "18.7013, 83.2747, 1.07528, 1.33", "18.8169, 83.7281, 1.15035, 1.69", "19.2059, 85.7121, 1.46116, 0.88", "19.3444, 86.5808, 1.58166, 0.74", "19.3771, 86.785, 1.63026, 0.74", "19.5421, 87.6795, 1.91611, 0.74", "19.7862, 88.7348, 2.33046, 1.62", "20.0131, 89.576, 2.69513, 0.88", "20.3776, 90.6726, 3.19096, 0.52", "21.3027, 92.9252, 4.29284, 1.25", "21.643, 93.5767, 4.65709, 1.25", "22.0341, 94.1983, 5.05574, 1.11", "22.0619, 94.237, 5.08658, 1.11", "22.5545, 94.8985, 5.65604, 1.11", "23.0468, 95.5635, 6.21392, 0.96", "23.9937, 97.2128, 7.31788, 0.96", "24.0109, 97.2585, 7.34555, 0.96", "24.394, 98.976, 8.2677, 1.4", "24.4704, 99.7439, 8.61506, 1.4", "24.4502, 100.325, 8.81842, 1.33", "24.315, 101.808, 9.35307, 0.74", "24.1976, 103.013, 9.72034, 0.74", "24.1881, 103.81, 9.93708, 1.03", "24.2546, 104.686, 10.1361, 1.18", "24.4943, 105.993, 10.4475, 0.52", "25.3831, 108.932, 11.2586, 1.77", "25.7937, 109.833, 11.5446, 2.65", "26.6618, 111.325, 12.0653, 0.74", "27.2116, 112.13, 12.3621, 0.96", "27.7983, 112.858, 12.6323, 1.25", "28.649, 113.796, 12.9442, 1.62", "29.2879, 114.498, 13.0792, 1.18", "29.8204, 115.177, 13.2219, 1.18", "29.8508, 115.223, 13.2309, 1.18", "30.1165, 115.682, 13.2928, 1.4", "30.5256, 116.421, 13.2684, 1.4", "31.1878, 117.588, 13.0269, 0.52", "31.8144, 118.599, 12.7116, 0.52", "31.8644, 118.668, 12.6891, 0.52", "32.5, 119.408, 12.449, 0.88", "33.7396, 120.624, 12.0447, 1.33", "34.1359, 120.943, 11.9397, 1.62", "34.7701, 121.389, 11.8008, 1.92", "36.4233, 122.475, 11.5037, 0.44", "37.2524, 123.006, 11.393, 0.88", "37.6217, 123.213, 11.345, 0.88", "38.9146, 123.813, 11.208, 1.69", "39.3648, 123.973, 11.1394, 2.28", "39.4204, 123.988, 11.1283, 2.28", "40.4282, 124.169, 10.8824, 2.06", "42.4499, 124.553, 10.3131, 0.37", "43.3997, 124.764, 10.0301, 0.29", "44.077, 124.94, 9.82511, 0.88", "44.8656, 125.169, 9.59575, 1.55", "45.5657, 125.409, 9.40111, 1.55", "47.2883, 126.149, 8.96942, 0.66", "48.2557, 126.646, 8.77126, 0.66", "49.1681, 127.154, 8.59322, 1.62", "49.8324, 127.531, 8.47175, 1.99", "50.2593, 127.789, 8.40125, 1.99", "51.6626, 128.701, 8.21037, 0.59", "52.3176, 129.176, 8.15247, 0.29", "53.1387, 129.888, 8.07451, 0.29", "53.2384, 129.989, 8.06657, 0.29", "53.9243, 130.749, 8.02079, 1.18", "54.4495, 131.304, 7.96475, 1.69", "54.9255, 131.798, 7.89865, 1.99", "55.9322, 132.769, 7.73504, 0.52", "57.0136, 133.703, 7.65044, 1.4", "57.6099, 134.176, 7.63534, 1.77", "58.8712, 135.083, 7.64974, 0.88", "59.3265, 135.385, 7.66578, 1.69", "60.4576, 136.084, 7.72291, 0.88", "62.3393, 137.172, 7.86264, 0.37", "63.1267, 137.64, 7.94656, 1.47", "63.8635, 138.112, 8.07332, 2.06", "64.8916, 138.839, 8.36824, 2.73" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-27.1121, 51.5985, 4.02682, 1.03", "-27.9999, 52.1836, 3.98249, 1.03", "-28.7529, 52.6664, 3.9746, 0.74", "-29.2548, 52.9874, 3.96522, 1.11", "-29.6193, 53.2385, 3.93941, 1.25", "-30.151, 53.6381, 3.88569, 1.25", "-31.249, 54.5354, 3.75312, 0.37", "-31.972, 55.2046, 3.65872, 0.29", "-32.5266, 55.8338, 3.5495, 0.29", "-33.039, 56.5849, 3.3993, 0.81", "-33.2517, 57.0782, 3.28517, 1.4", "-33.3297, 57.516, 3.17583, 1.62", "-33.3281, 57.9354, 3.06004, 1.77", "-33.2678, 58.8454, 2.83344, 1.77", "-33.2148, 59.5124, 2.68352, 1.55", "-33.184, 60.3114, 2.51938, 1.11", "-33.2186, 61.1944, 2.37342, 0.74", "-33.3723, 62.2607, 2.23948, 0.66", "-33.5781, 63.0407, 2.17226, 1.18", "-33.7317, 63.4089, 2.1573, 1.18", "-34.0469, 63.9687, 2.13362, 1.18", "-34.6741, 64.8556, 2.09314, 0.88", "-35.2224, 65.4717, 2.15059, 0.88", "-35.533, 65.7736, 2.21371, 1.4", "-36.0477, 66.2703, 2.34541, 1.33", "-36.5202, 66.7451, 2.47959, 0.81", "-37.0063, 67.2688, 2.62913, 0.66", "-38.3589, 68.8801, 3.04539, 0.66", "-38.9373, 69.7692, 3.22201, 0.66", "-39.1919, 70.3484, 3.29422, 1.03", "-39.3332, 70.8766, 3.3029, 1.33", "-39.3865, 71.2594, 3.27064, 1.55", "-39.4007, 71.8037, 3.16931, 1.33", "-39.2892, 73.5589, 2.66135, 0.37", "-39.1904, 74.523, 2.3719, 1.33", "-39.1332, 75.3123, 2.13778, 1.99", "-39.1349, 75.8584, 1.98544, 1.99", "-39.2035, 76.4118, 1.84147, 1.69", "-39.5393, 77.4816, 1.60025, 0.44", "-39.6011, 77.5755, 1.58466, 0.44", "-40.151, 78.1846, 1.48842, 0.44", "-40.9409, 78.9441, 1.3888, 0.88", "-41.5268, 79.4453, 1.30904, 1.18", "-42.0164, 79.8484, 1.23819, 1.62", "-42.594, 80.3187, 1.15133, 1.62", "-43.1232, 80.8102, 1.05213, 1.62", "-43.6613, 81.4301, 0.888746, 1.77", "-44.023, 81.9794, 0.706637, 1.47", "-44.3258, 82.5597, 0.494395, 1.69", "-44.3945, 82.7139, 0.434092, 1.69", "-44.6216, 83.3095, 0.18249, 1.69", "-44.9263, 84.1772, -0.214679, 1.69", "-45.1929, 85.0359, -0.673476, 0.81", "-45.398, 85.6348, -1.02959, 0.81", "-45.6487, 86.2939, -1.43692, 1.55", "-45.9848, 87.1555, -1.95253, 1.77", "-46.0013, 87.1989, -1.97661, 1.77", "-46.337, 88.1217, -2.42278, 1.62", "-46.7033, 89.3381, -2.92972, 0.74", "-46.854, 90.0259, -3.21689, 0.74", "-46.9528, 90.6156, -3.44888, 0.74", "-47.0529, 91.3125, -3.70497, 0.88", "-47.0709, 91.4383, -3.7482, 0.88", "-47.1728, 92.1524, -3.97631, 1.11", "-47.2752, 93.005, -4.31212, 1.11", "-47.4115, 93.6678, -4.69105, 0.52", "-47.5936, 94.1512, -5.07517, 0.52", "-47.8764, 94.6724, -5.57768, 1.33", "-48.1096, 95.018, -5.94407, 1.92", "-48.4216, 95.3901, -6.3995, 2.21", "-48.9452, 95.9513, -7.12458, 1.92", "-49.5246, 96.5608, -7.93211, 0.66", "-49.7571, 96.801, -8.24852, 0.88", "-49.9878, 97.0316, -8.52212, 1.11", "-50.6624, 97.7291, -9.16334, 0.59", "-50.9358, 98.0237, -9.35258, 0.44", "-51.4184, 98.5912, -9.58553, 0.44", "-51.4509, 98.6311, -9.59692, 0.44", "-52.1057, 99.4182, -9.88408, 0.29", "-52.5094, 99.9322, -10.098, 0.88", "-52.7624, 100.302, -10.2781, 1.55", "-52.8986, 100.558, -10.434, 1.92", "-52.9999, 100.802, -10.5994, 2.21", "-53.5034, 102.121, -11.5702, 0.52", "-53.6849, 102.605, -11.9764, 1.18", "-53.9665, 103.33, -12.6276, 1.18", "-54.278, 104.091, -13.3898, 0.52", "-54.4404, 104.432, -13.756, 0.37", "-54.6521, 104.79, -14.1744, 0.37", "-54.9678, 105.185, -14.6551, 0.37", "-55.0229, 105.239, -14.7293, 0.37", "-55.6353, 105.754, -15.469, 0.74", "-56.0195, 106.095, -15.8972, 0.74", "-56.4685, 106.532, -16.358, 1.11", "-56.7905, 106.876, -16.671, 1.77", "-57.2686, 107.397, -17.081, 1.99", "-57.518, 107.664, -17.2678, 2.43", "-58.6344, 108.911, -17.9758, 0.29", "-59.2066, 109.596, -18.3149, 0.29", "-59.2433, 109.642, -18.3348, 0.29", "-59.7076, 110.199, -18.5417, 0.29", "-59.7542, 110.25, -18.557, 0.29", "-60.3083, 110.801, -18.699, 0.29", "-60.8833, 111.328, -18.8203, 0.29", "-61.5887, 111.947, -18.9824, 1.33", "-62.2817, 112.52, -19.1338, 1.77", "-62.638, 112.785, -19.2091, 1.77", "-63.3456, 113.238, -19.3648, 1.47", "-64.0304, 113.615, -19.5254, 0.74", "-64.6511, 113.942, -19.6504, 0.29", "-65.2544, 114.284, -19.7403, 0.96", "-65.7973, 114.62, -19.8144, 1.25", "-66.7468, 115.219, -19.9004, 0.29", "-67.112, 115.456, -19.918, 0.29", "-67.9117, 115.944, -19.9044, 0.29", "-68.7948, 116.432, -19.8795, 0.29", "-69.5986, 116.847, -19.8544, 1.4", "-70.0694, 117.09, -19.8335, 1.99", "-70.5677, 117.348, -19.8065, 2.14", "-71.893, 118.057, -19.7731, 0.22", "-72.8759, 118.573, -19.8142, 0.22", "-72.9332, 118.604, -19.8186, 0.22", "-73.4138, 118.879, -19.8424, 0.59", "-73.637, 119.02, -19.8508, 0.59", "-74.4671, 119.607, -19.8879, 0.29", "-75.0242, 120.07, -19.9271, 0.81", "-75.4653, 120.451, -19.9587, 0.81", "-76.4974, 121.32, -20.0514, 1.33", "-76.9641, 121.691, -20.1022, 1.69", "-77.551, 122.145, -20.1747, 1.47", "-78.151, 122.613, -20.2583, 0.66", "-79.0679, 123.339, -20.3198, 0.22", "-79.8594, 123.956, -20.3368, 0.22", "-80.554, 124.47, -20.3324, 1.4", "-80.707, 124.571, -20.3245, 1.99", "-81.2184, 124.885, -20.2779, 1.99", "-83.119, 125.997, -20.0407, 0.22", "-83.165, 126.023, -20.0341, 0.22", "-84.0174, 126.501, -19.9118, 0.22", "-84.5682, 126.814, -19.8532, 1.03", "-85.0075, 127.059, -19.8308, 1.47", "-85.4682, 127.31, -19.8078, 1.77", "-86.232, 127.706, -19.7688, 0.44", "-87.3294, 128.273, -19.6474, 0.29", "-88.1987, 128.718, -19.5127, 0.37", "-88.6127, 128.893, -19.44, 0.96", "-89.7274, 129.285, -19.2425, 1.18", "-90.8225, 129.619, -19.0572, 0.37", "-91.894, 129.918, -18.8564, 2.21", "-92.5929, 130.117, -18.7279, 2.87", "-94.4284, 130.662, -18.4013, 0.37", "-94.8837, 130.818, -18.3207, 0.66", "-95.4955, 131.068, -18.2286, 0.81", "-96.303, 131.506, -18.0476, 0.37", "-96.8387, 131.908, -17.8471, 0.74", "-97.0595, 132.173, -17.7098, 0.96", "-97.4824, 132.98, -17.2993, 0.29", "-97.6242, 133.313, -17.1175, 0.29", "-97.8849, 134.159, -16.6342, 1.03", "-97.9597, 134.546, -16.4219, 1.33", "-97.9795, 134.809, -16.2563, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-27.1121, 51.5985, 4.02682, 0.52", "-28.0573, 51.1929, 5.01479, 0.52", "-28.8335, 50.8971, 5.83718, 0.88", "-30.6303, 50.3178, 7.82673, 0.88", "-30.6729, 50.3043, 7.87233, 0.88", "-31.5484, 49.9814, 8.78224, 1.33", "-32.3541, 49.6159, 9.66863, 0.96", "-33.4878, 49.0582, 11.0204, 1.18", "-34.4263, 48.5663, 12.1541, 0.74", "-35.0811, 48.2241, 12.8869, 0.52", "-35.868, 47.8232, 13.7675, 0.74", "-37.3997, 47.006, 15.5381, 0.88", "-37.4408, 46.9869, 15.5829, 0.88", "-38.5102, 46.6036, 16.6004, 0.22", "-39.2728, 46.4625, 17.2366, 0.22", "-39.8225, 46.589, 17.5971, 0.22", "-39.8826, 46.6266, 17.6181, 0.22", "-40.474, 47.1372, 17.6783, 0.81", "-40.8822, 47.5242, 17.7029, 1.4", "-41.0727, 47.7108, 17.7059, 1.69", "-41.6105, 48.1068, 17.7604, 1.92", "-41.8976, 48.2303, 17.809, 1.62", "-42.7926, 48.4245, 17.997, 0.88", "-42.8653, 48.4198, 18.0142, 0.88", "-44.0902, 47.8753, 18.2737, 0.52", "-44.9018, 47.2189, 18.4141, 0.44", "-45.6738, 46.2586, 18.458, 0.37", "-45.9543, 45.7891, 18.4348, 0.81", "-46.5295, 44.6978, 18.5319, 0.37", "-47.1016, 43.5049, 18.7597, 1.03", "-47.1256, 43.451, 18.7773, 1.03", "-47.5074, 42.7085, 19.1422, 0.96", "-48.1979, 41.7519, 19.852, 0.44", "-50.0197, 40.0834, 21.6842, 0.74", "-50.1026, 40.0369, 21.7685, 0.74", "-50.8871, 39.7443, 22.5531, 0.74", "-51.3709, 39.6108, 23.0146, 1.18", "-51.8904, 39.5301, 23.4381, 1.55", "-52.3324, 39.5068, 23.7008, 1.55", "-54.1888, 39.4415, 24.3836, 0.29", "-54.6487, 39.4085, 24.5449, 0.81", "-55.0212, 39.3629, 24.6709, 1.03", "-56.2895, 39.1053, 25.1309, 0.29", "-57.4194, 38.7416, 25.5494, 0.29", "-57.5231, 38.69, 25.6015, 0.29", "-58.1186, 38.2031, 26.0267, 0.29", "-58.4302, 37.8314, 26.3346, 0.66", "-58.5758, 37.6001, 26.519, 0.88", "-58.92, 36.8627, 27.0901, 0.37", "-59.527, 35.3274, 28.1359, 0.22", "-59.7851, 34.7334, 28.5541, 0.22", "-59.9888, 34.3087, 28.8534, 0.81", "-60.1782, 33.9426, 29.0979, 0.81", "-60.2507, 33.8149, 29.1827, 0.81", "-60.6263, 33.2254, 29.5584, 0.81", "-61.667, 31.7135, 30.3355, 0.29", "-62.1021, 31.081, 30.6878, 0.52", "-62.5113, 30.477, 31.0714, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.473389, 120.125, -13.1404, 0.29", "-0.0514726, 120.582, -13.1371, 0.29", "0.0396361, 120.69, -13.1799, 0.29", "0.0959906, 120.762, -13.2137, 0.29", "0.64283, 121.476, -13.5665, 0.22", "0.6975, 121.548, -13.6035, 0.22", "1.36433, 122.459, -14.0594, 0.37", "2.2746, 123.777, -14.7525, 1.03", "2.51993, 124.137, -14.9511, 1.03", "2.55865, 124.195, -14.9856, 1.03", "2.97593, 124.861, -15.4297, 0.22", "3.23057, 125.269, -15.7154, 0.44", "10.4015, 131.342, -17.4745, 0.44", "18.4826, 135.381, -20.9323, 0.44", "26.6297, 138.09, -25.4899, 0.44", "34.5715, 142.411, -28.8933, 0.44", "42.4088, 146.862, -32.3519, 0.44", "49.7971, 152.19, -35.4053, 0.44", "57.9412, 157.194, -36.5488, 0.44", "65.8394, 161.993, -39.2799, 0.44", "73.5954, 167.578, -40.0956, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.473389, 120.125, -13.1404, 1.33", "-0.550906, 120.855, -12.8208, 1.33", "-0.584103, 121.18, -12.7222, 1.77", "-0.634786, 121.687, -12.6002, 1.77", "-0.641877, 121.781, -12.5819, 1.77", "-0.654565, 122.15, -12.5302, 1.62", "-0.65929, 122.915, -12.4661, 0.88", "-0.642649, 123.675, -12.4813, 0.74", "-0.627166, 124.081, -12.5184, 0.81", "-0.597585, 124.598, -12.5958, 0.81", "-0.554325, 125.181, -12.7026, 0.37", "-0.507508, 125.725, -12.8305, 0.37", "-0.46092, 126.295, -13.0062, 1.33", "-0.438565, 126.866, -13.2092, 1.92", "-0.440723, 126.904, -13.225, 1.92", "-0.534051, 127.369, -13.4284, 2.28", "-0.615637, 127.612, -13.5296, 2.58", "-0.726431, 127.864, -13.6342, 2.5", "-0.953446, 128.308, -13.8197, 1.99", "-1.28844, 128.906, -14.061, 1.33", "-1.62145, 129.468, -14.2719, 0.81", "-1.8957, 129.905, -14.4124, 0.81", "-2.13257, 130.33, -14.5309, 0.88", "-2.15618, 130.38, -14.5435, 0.88", "-2.24442, 130.605, -14.5985, 0.88", "-2.36431, 131.176, -14.722, 0.74", "-2.38921, 131.747, -14.8466, 0.44", "-2.29461, 132.723, -15.0812, 0.81", "-2.23058, 133.103, -15.1701, 1.18", "-2.21073, 133.194, -15.1921, 1.18", "-1.93822, 134.23, -15.4407, 0.44", "-1.82897, 134.592, -15.5345, 0.44", "-1.61938, 135.311, -15.719, 1.33", "-1.53181, 135.689, -15.8039, 1.47", "-1.48054, 135.978, -15.8645, 1.47", "-1.42789, 136.356, -15.9364, 1.03", "-1.38792, 136.738, -15.9874, 0.96", "-1.29651, 137.426, -16.0196, 0.37", "-1.15516, 138.279, -16.0011, 1.25", "-1.10426, 138.536, -15.9874, 1.99", "-0.993626, 139.046, -15.9425, 2.21", "-0.666488, 140.305, -15.7488, 0.29", "-0.479549, 140.969, -15.6065, 1.18", "-0.382394, 141.302, -15.5204, 1.69", "-0.319546, 141.545, -15.4472, 1.69", "-0.307092, 141.612, -15.4258, 1.69", "-0.219358, 142.609, -15.0972, 0.44", "-0.217471, 143.148, -14.8983, 0.37", "-0.219946, 143.191, -14.8832, 0.37", "-0.268066, 143.691, -14.6955, 0.37", "-0.323023, 144.15, -14.5224, 0.37", "-0.376239, 144.557, -14.3825, 0.29", "-0.497318, 145.278, -14.1484, 0.52", "-0.52243, 145.537, -14.0642, 0.81", "-0.531391, 145.828, -13.9791, 0.96", "-0.525159, 145.952, -13.9469, 0.96", "-0.486143, 146.46, -13.8352, 0.44", "-0.484445, 146.495, -13.8288, 0.44", "-0.489761, 147.189, -13.7247, 0.81", "-0.496815, 147.512, -13.6635, 1.18", "-0.513138, 147.82, -13.5938, 1.4", "-0.534032, 148.081, -13.5291, 1.4", "-0.537936, 148.115, -13.5203, 1.4", "-0.588677, 148.512, -13.4162, 1.4", "-0.593579, 148.546, -13.4073, 1.4", "-0.651416, 148.927, -13.3089, 1.11", "-0.703439, 149.242, -13.234, 0.66", "-0.766356, 149.617, -13.1535, 0.37", "-0.861995, 150.242, -13.0405, 0.88", "-0.913745, 150.565, -13.0044, 1.18", "-0.923492, 150.619, -13.0006, 1.18", "-0.996456, 151.006, -12.9881, 1.03", "-1.00426, 151.05, -12.9895, 1.03", "-1.05991, 151.384, -13.0243, 1.03", "-1.13183, 151.942, -13.1467, 0.22", "-1.1579, 152.273, -13.2311, 0.22", "-1.15942, 152.322, -13.2442, 0.22", "-1.1513, 152.722, -13.3565, 0.22", "-1.14986, 152.756, -13.3673, 0.22", "-1.10467, 153.41, -13.5958, 1.18", "-1.06277, 153.739, -13.713, 1.4", "-1.02819, 153.973, -13.7994, 1.62", "-1.00528, 154.146, -13.8627, 1.62", "-0.963379, 154.552, -14.0063, 1.62", "-0.926236, 154.936, -14.144, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "39.4688, 56.4577, 4.61636, 0.52", "40.9572, 57.8763, 4.86328, 0.52", "41.6203, 58.5458, 4.95012, 0.74", "42.1258, 59.0926, 4.9895, 1.77", "42.9165, 60.0246, 5.11172, 0.81", "43.3803, 60.6311, 5.25508, 0.81", "43.7975, 61.2062, 5.41446, 0.74", "43.826, 61.2537, 5.43013, 0.74", "44.3157, 62.1364, 5.79557, 1.03", "44.8866, 63.1932, 6.28165, 1.03", "45.5673, 64.4697, 6.88936, 1.84", "45.8591, 65.0085, 7.16431, 1.55", "46.6038, 66.3337, 7.87288, 0.59", "47.0962, 67.2, 8.3365, 0.81", "47.651, 68.1576, 8.84497, 1.4", "48.0151, 68.7428, 9.08671, 1.62" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "39.4688, 56.4577, 4.61636, 0.59", "39.2786, 56.0453, 6.81398, 0.59", "38.9288, 55.543, 9.32935, 1.11", "38.1096, 54.4331, 13.8466, 0.74", "37.8203, 54.0445, 15.2896, 0.74", "37.4832, 53.5236, 17.1528, 0.74", "37.4733, 53.505, 17.2185, 0.74", "37.3229, 53.3127, 17.9578, 0.59", "36.4495, 52.4219, 20.9216, 1.03", "36.4107, 52.3532, 21.0726, 1.4", "36.3805, 51.7937, 22.2022, 0.96", "36.5643, 51.3265, 23.0733, 1.18", "36.8821, 50.7907, 24.1097, 1.03" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "56.9214, 55.1271, -42.4614, 0.74", "57.6924, 55.5436, -43.8758, 0.74", "58.4682, 55.8678, -44.8464, 0.52", "59.0524, 56.0626, -45.3624, 0.96", "61.7532, 56.8105, -47.223, 0.66", "62.9123, 57.1091, -47.9061, 0.59", "63.0724, 57.1501, -47.9918, 0.59", "65.3409, 57.6589, -48.9474, 1.11", "66.4025, 57.9373, -49.3136, 1.69", "67.5076, 58.2554, -49.6726, 1.47", "68.5641, 58.5493, -49.9795, 0.66", "69.5174, 58.8504, -50.3588, 1.25", "70.2384, 59.0939, -50.7251, 1.18", "71.2164, 59.4744, -51.4135, 1.03", "72.382, 59.9304, -52.309, 0.44", "73.0273, 60.1876, -52.8452, 0.37", "73.1363, 60.2294, -52.9424, 0.37", "73.6984, 60.4683, -53.6702, 0.37", "74.4363, 60.7217, -54.6056, 1.4", "74.9616, 60.8591, -55.1856, 1.69", "75.7828, 61.0598, -55.9639, 1.69", "75.8747, 61.0843, -56.0487, 1.69", "78.3691, 61.7282, -58.2245, 1.4", "80.6423, 62.352, -60.0938, 0.52", "82.1661, 62.8087, -61.2542, 2.14", "82.7048, 62.9732, -61.6477, 2.87", "84.4562, 63.4847, -62.8262, 0.74", "85.4786, 63.7881, -63.4394, 0.66", "86.1483, 63.994, -63.7505, 0.37", "86.7496, 64.2769, -64.2182, 0.37", "94.0513, 65.6086, -70.6313, 0.37", "100.37, 65.6096, -78.1384, 0.37", "107.196, 66.6092, -85.1165, 0.37", "113.809, 68.0605, -92.213, 0.37", "120.001, 69.002, -99.7672, 0.37" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "56.9214, 55.1271, -42.4614, 0.74", "58.7659, 54.0666, -46.6227, 0.74", "58.7907, 54.048, -46.7158, 0.74", "59.2169, 53.6378, -48.6191, 0.66", "59.9805, 52.884, -52.0385, 0.66", "60.489, 52.3776, -54.3071, 0.66", "61.1368, 51.7881, -56.9277, 0.66", "63.1246, 50.3239, -63.0267, 0.66", "63.6578, 49.9165, -64.746, 2.36", "63.956, 49.6668, -65.8434, 2.65", "63.981, 49.6425, -65.9534, 2.65", "64.2762, 49.3166, -68.0943, 1.92", "64.4248, 49.1899, -69.5948, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "15.9519, 230.144, -8.92873, 0.52", "15.0224, 231.05, -9.91648, 0.52", "14.4933, 231.566, -10.4787, 0.37", "13.4046, 232.627, -11.6356, 0.37", "13.3708, 232.66, -11.6715, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.9519, 230.144, -8.92873, 0.37", "16.4361, 232.211, -8.87985, 0.37", "16.7782, 233.671, -8.84531, 1.69", "17.0411, 234.793, -8.81878, 1.99", "17.381, 236.245, -8.78446, 1.77", "17.9404, 238.632, -8.72799, 2.58" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "64.8916, 138.839, 8.36824, 0.37", "65.5148, 140.007, 8.84284, 0.37", "65.7165, 140.385, 8.99645, 0.37", "65.9296, 140.784, 9.1588, 0.59", "66.0823, 141.07, 9.27504, 0.88", "66.8699, 142.546, 9.87483, 1.77" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "64.8916, 138.839, 8.36824, 0.81", "66.4693, 138.565, 6.33266, 0.81", "66.9677, 138.465, 5.72208, 0.66", "67.0321, 138.451, 5.65078, 0.66", "67.6474, 138.29, 5.00184, 0.96", "68.4193, 138.073, 4.20483, 1.55", "70.765, 137.366, 2.14053, 0.37", "71.6497, 137.061, 1.55419, 0.37", "72.4086, 136.746, 1.16182, 1.03", "72.9501, 136.498, 0.970627, 1.03", "72.9994, 136.473, 0.963108, 1.03", "75.2683, 135.296, 1.16142, 0.37", "75.9824, 134.93, 1.36647, 1.25", "76.2863, 134.773, 1.44489, 1.77", "76.7129, 134.563, 1.52684, 1.62", "77.95, 133.997, 1.65606, 0.29", "78.543, 133.745, 1.68562, 0.66", "79.0618, 133.563, 1.66846, 0.22", "79.8866, 133.343, 1.67956, 1.33", "80.4974, 133.23, 1.70968, 1.55", "81.0512, 133.166, 1.75557, 1.55", "82.8588, 133.138, 1.95972, 0.44", "84.159, 133.241, 2.16617, 0.44", "84.8536, 133.347, 2.29383, 0.96", "85.4063, 133.466, 2.3954, 0.66", "85.472, 133.482, 2.40633, 0.66", "86.2271, 133.693, 2.51217, 0.96", "87.9769, 134.207, 2.65739, 0.29", "88.6338, 134.384, 2.68512, 0.44", "89.6667, 134.617, 2.68323, 0.22", "90.1497, 134.719, 2.66064, 0.52", "90.2079, 134.731, 2.65496, 0.52", "90.9021, 134.863, 2.5292, 0.52", "91.6728, 135.033, 2.30343, 0.96", "91.9287, 135.123, 2.19967, 1.25", "92.2693, 135.303, 2.03699, 0.96", "92.6249, 135.533, 1.85769, 0.66", "93.4103, 136.053, 1.37937, 0.29", "94.0784, 136.501, 0.934955, 0.37", "95.2374, 137.242, 0.152632, 0.29", "96.0481, 137.76, -0.387673, 1.62", "96.3714, 137.964, -0.60419, 1.77", "97.8729, 138.915, -1.59774, 0.29", "98.2694, 139.157, -1.85448, 0.81", "98.713, 139.402, -2.11839, 1.03", "99.5365, 139.785, -2.51839, 0.52", "99.5973, 139.81, -2.54636, 0.52", "100.206, 140.028, -2.76799, 0.52", "100.325, 140.064, -2.79582, 0.52", "101.25, 140.254, -3.02256, 1.03", "101.317, 140.263, -3.03272, 1.03", "101.875, 140.305, -3.08325, 1.25", "103.354, 140.403, -3.24511, 0.29", "104.065, 140.466, -3.32837, 0.96", "104.744, 140.555, -3.40813, 1.33", "106.254, 140.808, -3.56964, 0.52", "106.929, 140.957, -3.61285, 0.29", "108.232, 141.318, -3.64604, 0.29", "109.109, 141.615, -3.62577, 0.88", "109.484, 141.75, -3.59884, 1.4", "109.554, 141.777, -3.59047, 1.4", "111.413, 142.435, -3.30622, 0.29", "111.466, 142.453, -3.29412, 0.29", "112.174, 142.636, -3.09669, 0.88", "113.024, 142.766, -2.91821, 1.03", "113.256, 142.784, -2.87407, 1.03", "114.281, 142.821, -2.70076, 1.25", "115.005, 142.815, -2.60298, 1.69", "115.893, 142.787, -2.48675, 1.33", "117.419, 142.72, -2.3032, 0.44", "118.751, 142.725, -1.91803, 0.44", "118.812, 142.729, -1.89263, 0.44", "119.492, 142.801, -1.52952, 1.47", "119.78, 142.847, -1.35215, 2.14", "120.213, 142.945, -1.01021, 2.14", "122.896, 143.599, 1.37212, 0.29", "123.46, 143.736, 1.86834, 1.25", "123.866, 143.84, 2.21597, 1.69", "124.231, 143.947, 2.53674, 1.99", "126.888, 144.831, 4.79637, 0.66", "128.19, 145.301, 5.8278, 0.66", "128.656, 145.494, 6.14373, 0.96", "129.404, 145.86, 6.64978, 0.96", "130.824, 146.639, 7.61746, 0.29", "131.576, 147.122, 8.09041, 0.29", "131.976, 147.523, 8.20582, 0.59", "132.265, 147.919, 8.25134, 0.81", "132.483, 148.258, 8.28557, 0.81" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-97.9795, 134.809, -16.2563, 0.22", "-99.1661, 135.566, -15.4788, 0.22", "-100.066, 136.09, -14.9739, 0.29", "-100.837, 136.481, -14.6378, 0.29", "-100.909, 136.513, -14.6121, 0.29", "-101.148, 136.607, -14.5378, 0.59", "-101.617, 136.791, -14.3919, 0.59", "-101.944, 136.873, -14.351, 0.88", "-102.768, 137.03, -14.3386, 0.15", "-103.27, 137.118, -14.33, 0.96", "-103.414, 137.142, -14.3283, 1.18" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-97.9795, 134.809, -16.2563, 0.29", "-97.966, 136.363, -16.5685, 0.29", "-97.9775, 137.295, -16.7464, 0.52", "-97.9869, 137.961, -16.8635, 1.03", "-97.9833, 138.563, -17.0056, 1.11", "-97.969, 139.839, -17.3448, 0.22", "-97.9689, 140.417, -17.5066, 0.81", "-97.9901, 140.959, -17.6667, 1.11", "-98.0281, 141.374, -17.804, 1.11", "-98.3728, 143.437, -18.537, 0.29", "-98.5757, 144.209, -18.8322, 1.55", "-98.7474, 144.638, -19.0125, 1.92", "-99.019, 145.151, -19.2652, 1.77", "-99.5258, 145.88, -19.677, 0.66", "-100.118, 146.506, -20.0788, 0.22", "-100.404, 146.707, -20.2258, 0.44", "-100.843, 146.989, -20.4488, 0.44", "-101.458, 147.387, -20.7159, 0.29", "-101.509, 147.422, -20.7342, 0.29", "-101.676, 147.544, -20.7786, 0.59", "-102.089, 147.86, -20.8474, 0.59", "-103.003, 148.505, -20.9516, 0.22", "-103.85, 148.974, -21.0298, 0.66", "-104.167, 149.141, -21.0466, 0.96", "-104.646, 149.38, -21.0741, 0.81", "-105.136, 149.596, -21.1071, 0.29", "-106.203, 149.959, -21.2096, 0.29", "-107.329, 150.166, -21.403, 1.84" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "73.5954, 167.578, -40.0956, 0.29", "81.7746, 172.845, -41.9717, 0.29", "91.2744, 175.978, -41.9769, 0.29", "100.537, 179.379, -40.3636, 0.29", "109.423, 183.315, -38.0866, 0.29", "118.241, 186.659, -34.7517, 0.29", "127.14, 190.811, -33.0154, 0.29", "136.275, 194.726, -32.105, 0.29", "145.03, 199.372, -31.2463, 0.29", "153.582, 203.945, -28.9931, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "73.5954, 167.578, -40.0956, 1.33", "82.2278, 173.052, -43.2987, 0.29", "91.1755, 178.376, -45.8566, 0.29", "99.4983, 183.99, -49.567, 0.29", "106.808, 190.0, -54.5066, 0.29", "114.692, 194.977, -59.819, 0.29", "120.956, 200.44, -66.558, 0.29", "126.347, 206.717, -73.2607, 0.29", "132.996, 211.54, -80.1696, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.926236, 154.936, -14.144, 0.37", "-1.93686, 156.532, -14.1202, 0.37", "-2.24589, 157.067, -14.0986, 0.52", "-2.27795, 157.141, -14.0961, 0.52", "-2.45093, 157.648, -14.0777, 0.52", "-2.59426, 158.164, -14.0779, 0.52", "-2.74901, 158.921, -14.1433, 0.37", "-2.75904, 159.093, -14.1659, 0.37", "-2.76801, 160.154, -14.3645, 0.37", "-2.75567, 160.874, -14.5177, 0.88", "-2.72876, 161.613, -14.6902, 1.11", "-2.64649, 163.372, -15.1149, 0.37", "-2.59174, 164.915, -15.4636, 0.37", "-2.57979, 165.846, -15.6798, 1.33", "-2.5891, 166.334, -15.7896, 1.62", "-2.61845, 166.956, -15.9267, 1.92", "-2.67526, 167.711, -16.0785, 1.55", "-2.8089, 169.013, -16.3592, 0.81", "-2.96707, 170.477, -16.7251, 0.22", "-3.03621, 171.211, -16.9209, 0.22", "-3.12629, 172.383, -17.3036, 0.81", "-3.14526, 172.693, -17.4216, 0.81", "-3.18382, 174.107, -17.9677, 0.22", "-3.16217, 174.973, -18.2955, 0.74", "-3.13644, 175.362, -18.4282, 0.74", "-2.93807, 177.203, -19.0374, 0.22", "-2.91965, 177.333, -19.075, 0.22", "-2.72564, 178.661, -19.3859, 0.88", "-2.62531, 179.484, -19.5378, 1.55", "-2.6192, 179.551, -19.5497, 1.55", "-2.61884, 179.949, -19.6092, 1.55", "-2.6707, 180.617, -19.6884, 1.25", "-2.79907, 181.447, -19.8368, 0.88", "-3.01705, 182.42, -20.0944, 0.22", "-3.02913, 182.485, -20.1114, 0.22", "-3.20623, 183.685, -20.3958, 0.22", "-3.29467, 184.506, -20.5754, 0.22", "-3.30173, 184.691, -20.6092, 0.22", "-3.26323, 185.595, -20.7452, 0.22", "-3.10162, 187.078, -20.8662, 0.96", "-2.9942, 187.826, -20.9035, 1.33", "-2.89401, 188.39, -20.9154, 0.74", "-2.65551, 189.86, -20.9006, 0.22", "-2.51419, 190.856, -20.867, 0.88", "-2.35143, 192.329, -20.7836, 0.22", "-2.34682, 192.397, -20.7782, 0.22", "-2.3017, 193.492, -20.6836, 1.11", "-2.30333, 194.091, -20.6304, 1.25", "-2.3268, 194.829, -20.5724, 1.03", "-2.3678, 195.647, -20.5198, 0.66", "-2.41369, 196.585, -20.4959, 0.37", "-2.45706, 197.266, -20.5213, 0.37", "-2.54294, 198.384, -20.6284, 0.81", "-2.61655, 198.975, -20.7113, 0.81", "-2.63159, 199.041, -20.7242, 0.81", "-2.85534, 199.657, -20.8856, 0.81", "-3.45945, 200.872, -21.2952, 0.29", "-3.49235, 200.929, -21.3173, 0.29", "-3.97219, 201.672, -21.6556, 0.29", "-4.48174, 202.459, -22.0257, 0.29", "-4.90153, 203.128, -22.3431, 0.66", "-5.19743, 203.628, -22.5709, 0.74", "-5.6462, 204.532, -22.9605, 0.74", "-5.96853, 205.313, -23.2933, 0.96", "-6.09204, 205.691, -23.4561, 1.25", "-6.10962, 205.754, -23.4809, 1.25", "-6.24557, 206.25, -23.643, 1.25", "-6.76206, 208.025, -24.1833, 0.22", "-6.95799, 208.667, -24.3713, 0.22", "-7.2065, 209.468, -24.5923, 1.03", "-7.37235, 209.975, -24.7312, 1.11", "-7.78383, 211.227, -25.0644, 0.22", "-8.29157, 212.683, -25.5119, 0.22", "-8.31429, 212.755, -25.5366, 0.22", "-8.50834, 213.405, -25.7848, 0.22", "-8.78526, 214.549, -26.275, 1.03", "-8.85868, 214.925, -26.4554, 1.18", "-9.08367, 216.564, -27.3668, 0.15", "-9.14256, 217.48, -27.8872, 0.29", "-9.14433, 217.552, -27.9294, 0.29", "-9.11646, 218.703, -28.6381, 0.22", "-9.11377, 218.762, -28.6729, 0.22", "-9.05995, 219.932, -29.2772, 0.88", "-9.03001, 220.385, -29.4658, 1.11", "-9.01505, 220.867, -29.6469, 0.74", "-8.96553, 221.723, -29.9411, 0.22", "-8.88118, 222.771, -30.2519, 0.22", "-8.81902, 223.324, -30.3921, 0.66", "-8.74408, 223.912, -30.5195, 0.66", "-8.73311, 224.003, -30.5395, 0.66", "-8.63729, 224.885, -30.7219, 0.29", "-8.62726, 225.033, -30.7487, 0.29", "-8.5581, 226.727, -31.0308, 0.22", "-8.54646, 227.871, -31.1923, 1.18", "-8.56283, 228.467, -31.2691, 1.69", "-8.61691, 229.335, -31.3659, 1.84", "-8.77096, 231.054, -31.5487, 0.22", "-8.87279, 232.044, -31.6513, 0.22", "-9.02675, 233.234, -31.7551, 0.22", "-9.12027, 233.814, -31.7914, 0.66", "-9.20527, 234.304, -31.8233, 1.11", "-9.52609, 235.991, -31.9346, 0.22", "-9.66539, 236.651, -31.9735, 0.22", "-9.9066, 237.617, -32.0233, 1.33", "-10.1336, 238.484, -32.0588, 1.92" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.926236, 154.936, -14.144, 0.22", "-0.247527, 156.025, -14.5932, 0.22", "0.346141, 156.952, -14.9833, 0.44", "0.376572, 157.0, -15.0056, 0.44", "1.023, 158.019, -15.4973, 0.22", "1.04887, 158.059, -15.5178, 0.22", "1.8275, 159.241, -16.205, 0.22", "1.85232, 159.28, -16.2296, 0.22", "2.32453, 159.984, -16.7299, 0.22", "2.35426, 160.027, -16.7608, 0.22", "3.11239, 161.028, -17.5167, 0.66", "3.55365, 161.622, -17.9871, 0.81", "7.52049, 168.878, -20.246, 0.81", "12.841, 175.466, -21.9153, 0.81", "18.2495, 182.172, -22.2304, 0.81", "22.8284, 189.396, -22.8521, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "48.0151, 68.7428, 9.08671, 0.52", "45.0166, 69.2237, 10.6421, 0.52", "43.7618, 69.3677, 11.3594, 0.52", "42.9468, 69.391, 11.8418, 0.59", "42.3847, 69.3559, 12.182, 0.59", "41.6065, 69.2207, 12.6711, 0.44", "41.4565, 69.1765, 12.772, 0.44", "40.2272, 68.2676, 13.6034, 0.44", "39.6942, 67.7403, 14.071, 0.44", "39.3249, 67.2955, 14.4648, 0.74", "38.872, 66.6432, 15.0269, 0.88", "38.562, 66.0544, 15.4793, 1.62", "38.3814, 65.5994, 15.7554, 1.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "48.0151, 68.7428, 9.08671, 0.81", "49.0076, 69.7582, 9.41378, 0.81", "49.8781, 70.9902, 9.85589, 1.11", "50.2959, 71.8773, 10.2316, 1.33", "50.5739, 72.8317, 10.6362, 1.55", "50.5823, 72.8948, 10.6684, 1.55", "50.7212, 75.413, 12.0646, 0.96", "50.5363, 76.892, 12.94, 1.84", "50.1236, 78.3359, 13.8721, 0.96", "49.7837, 79.2012, 14.4735, 0.52", "48.9975, 80.7827, 15.6196, 0.52", "48.9722, 80.8259, 15.6517, 0.52", "48.6418, 81.3114, 16.0809, 0.74", "48.2226, 81.957, 16.7299, 0.74", "48.1824, 82.0372, 16.809, 0.74", "47.8295, 82.8658, 17.6279, 0.88", "47.3859, 84.0662, 18.7683, 0.74", "46.819, 85.839, 20.4968, 0.44", "46.6955, 86.5812, 21.2754, 0.44", "46.7153, 86.9021, 21.622, 0.29", "46.7415, 86.9806, 21.7073, 0.29", "46.9545, 87.2423, 21.9799, 0.29", "47.019, 87.2936, 22.0257, 0.29", "48.6975, 88.3627, 22.8511, 1.03", "49.6448, 88.9118, 23.3268, 0.52", "50.37, 89.3304, 23.6957, 1.25", "51.2792, 89.8676, 24.1506, 0.44", "51.8461, 90.2178, 24.4262, 1.11", "52.3013, 90.497, 24.6212, 1.11" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "36.8821, 50.7907, 24.1097, 0.59", "36.8134, 50.6524, 26.1999, 0.59", "36.6702, 50.6384, 27.4056, 0.59", "36.5307, 50.6455, 28.3399, 0.66", "36.0937, 50.7299, 30.8904, 1.84", "36.0251, 50.7471, 31.2635, 2.73", "34.5533, 50.9871, 39.3946, 0.96", "34.3324, 51.0306, 40.5609, 0.96", "34.3207, 51.0333, 40.6236, 0.96", "33.8879, 51.0862, 43.1574, 1.18", "33.8729, 51.0835, 43.2439, 1.18", "33.7399, 50.8912, 44.782, 0.88", "34.1341, 49.9294, 46.8285, 0.81", "34.1546, 49.8893, 46.8999, 0.81", "34.5393, 49.2479, 47.9949, 0.66", "34.5611, 49.2154, 48.0438, 0.66", "35.0705, 48.4876, 49.204, 1.4", "35.2848, 48.2051, 49.7121, 1.62", "35.6952, 47.674, 50.6507, 1.62", "36.6168, 46.5011, 52.7472, 0.81", "36.92, 46.1381, 53.4104, 0.81" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "36.8821, 50.7907, 24.1097, 0.44", "37.9215, 50.6726, 24.3873, 0.44", "38.0382, 50.6594, 24.4184, 0.44", "38.5709, 50.5989, 24.5607, 0.44", "38.6354, 50.5915, 24.5779, 0.44", "39.9332, 50.4441, 24.9245, 0.81" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "120.001, 69.002, -99.7672, 0.29", "127.081, 71.2963, -107.894, 0.29", "134.96, 72.0548, -115.573, 0.29", "142.514, 74.5297, -123.194, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "120.001, 69.002, -99.7672, 1.33", "130.883, 70.9841, -109.112, 0.29", "142.175, 73.4065, -117.83, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "64.4248, 49.1899, -69.5948, 0.52", "64.701, 47.9658, -70.2022, 0.52", "64.8246, 47.4175, -70.4742, 0.66", "64.9573, 46.8296, -70.7659, 0.52", "64.9689, 46.7781, -70.7915, 0.52", "65.2415, 45.5694, -71.3912, 0.74", "66.4468, 38.7873, -75.5723, 0.74", "68.3346, 32.8456, -80.7652, 0.74", "70.3514, 26.3539, -85.1665, 0.74", "72.157, 18.8872, -87.648, 0.74", "73.885, 11.5794, -90.6001, 0.74" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "64.4248, 49.1899, -69.5948, 0.52", "65.5637, 50.9651, -70.4384, 0.52", "66.4999, 52.448, -71.1075, 1.62", "67.0404, 53.3095, -71.471, 1.92", "67.4866, 54.0132, -71.7402, 1.77", "68.9748, 56.3389, -72.5876, 0.66", "69.2931, 56.9446, -72.844, 0.66", "69.6053, 57.682, -73.1398, 1.18", "69.7554, 58.1633, -73.3536, 1.55", "70.0271, 59.1445, -73.7988, 1.55", "70.0414, 59.2132, -73.8298, 1.55", "70.658, 62.6017, -75.1007, 0.37", "70.773, 63.3715, -75.3522, 1.25", "70.8675, 64.1067, -75.5507, 1.92", "70.9455, 64.7579, -75.6918, 1.99", "70.9389, 66.754, -76.2235, 0.66", "70.8564, 68.1903, -76.6244, 0.44", "70.8305, 68.7887, -76.7951, 0.96", "70.804, 69.3291, -77.0139, 1.11", "70.8022, 69.378, -77.0417, 1.11", "70.861, 73.2427, -79.7777, 0.52", "70.8653, 73.3512, -79.8732, 0.52", "70.9037, 74.4914, -80.9816, 1.77", "70.9254, 74.9403, -81.4438, 2.06", "70.8329, 76.5942, -83.2472, 0.29", "70.6734, 77.4008, -84.2285, 0.52", "70.1971, 78.9823, -86.4167, 0.59", "70.1848, 79.0139, -86.4629, 0.59", "69.9912, 79.4283, -87.0813, 0.59", "68.331, 82.6095, -91.8918, 1.25", "66.5857, 85.5284, -96.4806, 0.96", "66.0809, 86.2894, -97.7203, 0.96", "66.0614, 86.3171, -97.7664, 0.96", "67.52, 93.5034, -103.687, 0.96", "68.8294, 101.255, -108.811, 0.96", "70.2901, 109.515, -112.887, 0.96" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "17.9404, 238.632, -8.72799, 0.74", "17.3166, 239.832, -8.37887, 0.74", "17.1185, 240.266, -8.26418, 1.03", "16.8562, 240.836, -8.19115, 0.74", "16.2516, 242.119, -8.13593, 0.44", "15.9875, 242.677, -8.13489, 1.11", "15.8096, 243.075, -8.14604, 1.77", "15.601, 243.607, -8.18842, 2.06", "15.1473, 244.866, -8.48626, 0.52", "14.9125, 245.584, -8.70976, 0.52", "14.8994, 245.632, -8.72783, 0.52", "14.7088, 246.381, -8.9908, 1.03", "14.6199, 246.768, -9.1061, 1.33", "14.2972, 248.347, -9.4694, 0.96", "14.1628, 249.253, -9.60233, 0.74", "14.0709, 249.939, -9.66485, 0.37", "13.9915, 250.573, -9.69274, 0.37", "13.8751, 251.343, -9.68887, 1.03", "13.7654, 251.96, -9.61315, 1.4", "13.6682, 252.469, -9.49672, 1.69", "13.4448, 253.518, -9.25552, 0.37", "13.2809, 254.223, -9.04599, 0.37", "13.1382, 254.753, -8.85311, 0.37", "12.7524, 255.994, -8.26681, 0.66", "12.6991, 256.138, -8.1885, 1.62", "12.4976, 256.579, -7.93251, 1.84", "12.2978, 256.95, -7.71321, 1.55", "12.2708, 256.993, -7.69053, 1.55", "11.5661, 257.966, -7.25064, 0.81", "11.1362, 258.465, -7.07818, 1.55", "10.7171, 258.871, -6.89569, 2.21", "10.4967, 259.047, -6.80822, 1.92", "9.48685, 259.696, -6.46391, 0.37", "8.89018, 259.972, -6.29148, 0.29", "8.84494, 259.984, -6.27699, 0.29", "7.40106, 260.205, -5.70136, 0.81", "6.88229, 260.238, -5.46817, 1.18", "6.38791, 260.234, -5.23161, 0.81", "5.65654, 260.171, -4.76717, 0.44", "4.53738, 260.072, -3.99054, 1.69", "4.49577, 260.068, -3.96479, 1.69", "4.16663, 260.041, -3.78354, 1.99", "3.88608, 260.032, -3.62684, 1.84", "2.38106, 260.145, -2.7735, 1.11", "1.66637, 260.298, -2.44548, 0.29", "0.599357, 260.711, -2.16979, 0.52", "0.550843, 260.739, -2.16237, 0.52", "0.197677, 261.065, -2.25776, 0.74", "-0.413797, 261.729, -2.53781, 0.96", "-0.903774, 262.358, -2.89493, 0.59", "-1.26081, 262.926, -3.21476, 0.81", "-1.52868, 263.422, -3.49013, 0.81", "-2.46608, 265.178, -4.60081, 0.29" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "17.9404, 238.632, -8.72799, 1.18", "18.5781, 240.776, -9.4198, 1.18", "18.8751, 241.724, -9.66837, 0.52", "19.2052, 242.741, -9.91199, 1.11", "19.5325, 243.774, -10.1136, 0.59", "19.8111, 244.673, -10.2619, 1.92", "20.0418, 245.435, -10.4472, 1.55", "20.43, 246.741, -10.7229, 0.59", "20.4476, 246.803, -10.7426, 0.59", "20.5992, 247.494, -11.2111, 0.37", "20.6094, 247.588, -11.3047, 0.37", "20.6233, 249.085, -13.3391, 0.37", "20.6013, 249.354, -13.7636, 0.96", "20.5093, 249.738, -14.4711, 0.96", "20.0725, 251.106, -17.1435, 0.52", "19.9399, 251.442, -17.8003, 0.52", "19.5804, 252.238, -19.2847, 1.25", "19.4573, 252.464, -19.6663, 1.47", "18.8151, 253.614, -21.4731, 0.88", "18.7885, 253.662, -21.539, 0.88", "18.4466, 254.349, -22.203, 0.74", "18.416, 254.422, -22.2606, 0.74", "17.8662, 256.086, -23.2268, 0.22", "17.679, 256.884, -23.6046, 1.25", "17.6115, 257.427, -23.7888, 1.47", "17.5442, 258.607, -24.2176, 0.44", "17.5471, 259.309, -24.4783, 0.44", "17.584, 260.043, -24.7392, 0.88", "17.6231, 260.432, -24.8587, 1.18", "17.7038, 261.148, -25.1035, 0.88", "17.9524, 262.673, -25.6524, 0.44", "18.0314, 263.062, -25.7951, 0.59", "18.0459, 263.132, -25.8199, 0.59", "18.1869, 263.827, -26.159, 0.37", "18.2136, 263.944, -26.2231, 0.37", "18.4328, 264.783, -26.6695, 0.88", "18.5486, 265.208, -26.878, 1.18", "18.6913, 265.824, -27.1683, 1.33", "19.0637, 267.586, -27.9747, 1.11", "19.2915, 268.699, -28.4737, 0.37", "19.508, 269.807, -28.9428, 0.29", "19.5871, 270.269, -29.1164, 0.29", "19.7441, 271.177, -29.3989, 1.4", "19.7845, 271.402, -29.4639, 1.62", "20.0217, 272.615, -29.7582, 0.29", "20.162, 273.304, -30.0092, 0.96", "20.434, 274.547, -30.5497, 0.22", "20.6212, 275.335, -30.9208, 0.22", "20.9504, 276.812, -31.7312, 1.55", "21.0288, 277.226, -31.9723, 1.69", "21.3389, 279.238, -33.1766, 0.22", "21.4483, 280.004, -33.647, 0.88", "21.5195, 280.411, -33.8979, 0.88", "21.7955, 281.723, -34.7324, 0.37", "22.0424, 282.633, -35.2906, 0.15", "22.3331, 283.511, -35.8006, 1.55", "22.5103, 283.951, -36.0245, 1.55", "22.9239, 284.896, -36.4869, 0.29", "23.4305, 285.963, -36.9707, 1.03", "23.6864, 286.452, -37.1572, 1.18", "24.2484, 287.633, -37.5914, 0.15", "24.3811, 287.998, -37.7218, 0.59", "24.5374, 288.666, -37.8588, 0.29", "24.5452, 288.721, -37.8624, 0.29", "24.5761, 289.066, -37.8424, 0.52", "24.6084, 290.117, -37.6847, 0.22", "24.5996, 291.092, -37.479, 0.22", "24.5885, 292.706, -37.1181, 0.88", "24.5845, 293.105, -37.0199, 1.11", "24.5816, 293.522, -36.9156, 1.33", "24.6006, 294.954, -36.4856, 0.22", "24.6614, 296.061, -36.1208, 0.22", "24.7344, 296.906, -35.8425, 0.22", "24.7849, 297.397, -35.7093, 0.74", "24.8481, 297.988, -35.5592, 0.88", "25.0308, 299.539, -35.2085, 0.22", "25.1482, 300.416, -35.0424, 0.22", "25.2295, 301.029, -34.9305, 0.81", "25.2695, 301.492, -34.8377, 1.11", "25.3338, 302.775, -34.5989, 0.22", "25.3422, 303.531, -34.4672, 0.66", "25.3412, 303.586, -34.4599, 0.66", "25.3365, 303.931, -34.4102, 0.88", "25.3453, 305.829, -34.1284, 0.22", "25.3945, 306.75, -33.9981, 1.25", "25.4471, 307.212, -33.9384, 1.25", "25.6818, 308.414, -33.8214, 0.15", "25.8344, 308.96, -33.7906, 0.74", "25.8579, 309.021, -33.7906, 0.74", "26.3884, 309.952, -33.8821, 0.15", "26.6296, 310.29, -33.9215, 0.37", "27.3213, 311.118, -34.0798, 0.15", "27.7468, 311.585, -34.1591, 0.59", "27.8367, 311.686, -34.1737, 0.59", "28.5718, 312.559, -34.2789, 0.15", "29.2518, 313.375, -34.3664, 1.4", "30.0789, 314.391, -34.4585, 0.22", "30.9196, 315.471, -34.431, 0.22", "31.4233, 316.129, -34.354, 0.37", "32.1657, 317.147, -34.1604, 1.03", "32.4964, 317.638, -34.0241, 1.4", "32.5247, 317.684, -34.0082, 1.4", "33.423, 319.342, -33.4134, 0.29", "33.5896, 319.681, -33.2417, 0.59", "33.9978, 320.611, -32.5842, 0.22", "34.1635, 321.097, -32.153, 0.96", "34.2695, 321.482, -31.7742, 1.11", "34.4243, 322.377, -30.8053, 0.22", "34.5699, 324.325, -28.4065, 1.25", "34.5928, 325.069, -27.3998, 1.55", "34.5983, 325.965, -26.1539, 0.96", "34.5996, 326.067, -26.0141, 0.96", "34.6513, 327.29, -24.3188, 0.22", "34.7459, 328.505, -22.7249, 0.96", "34.7872, 328.796, -22.4189, 1.55", "35.0181, 329.766, -21.5415, 0.74", "35.1784, 330.162, -21.2255, 0.96", "35.9709, 331.661, -20.1808, 0.59", "36.4015, 332.278, -19.8376, 0.29", "36.6975, 332.667, -19.6643, 0.96", "37.1863, 333.287, -19.403, 1.11", "38.4221, 334.82, -18.8233, 0.29", "38.9252, 335.454, -18.6375, 0.29", "39.5845, 336.314, -18.4985, 0.29", "40.0751, 336.983, -18.4064, 0.81", "40.1492, 337.096, -18.4066, 0.81", "40.4141, 337.574, -18.4772, 0.81", "40.4413, 337.635, -18.4945, 0.81", "40.7377, 338.354, -18.77, 1.03", "41.0011, 339.0, -19.0581, 1.69", "41.6819, 340.609, -19.841, 0.52", "41.9555, 341.238, -20.1587, 0.37", "42.3786, 342.161, -20.5889, 0.52", "42.9489, 343.325, -21.0724, 0.29", "43.182, 343.738, -21.2053, 0.29", "43.4498, 344.131, -21.2842, 0.29", "43.5308, 344.224, -21.2756, 0.29", "44.5314, 345.167, -21.0644, 1.11", "45.0665, 345.634, -20.9242, 1.4", "46.2148, 346.616, -20.5842, 0.29", "46.8549, 347.165, -20.4105, 0.29", "48.3997, 348.485, -19.9797, 0.88", "49.6191, 349.539, -19.6566, 0.22", "50.3147, 350.133, -19.4954, 0.66", "50.5356, 350.322, -19.4437, 0.66", "51.047, 350.759, -19.3345, 0.29", "52.0657, 351.644, -19.0828, 0.96", "52.4793, 352.018, -18.9748, 0.96", "53.1383, 352.648, -18.7431, 0.22", "53.59, 353.092, -18.5805, 0.81", "54.1315, 353.63, -18.3956, 0.44", "55.0518, 354.603, -18.0257, 0.96", "55.8586, 355.523, -17.6965, 0.22", "56.3487, 356.138, -17.4639, 0.22", "56.9718, 357.02, -17.1248, 0.96", "57.1989, 357.368, -16.9913, 1.18", "57.9776, 358.73, -16.4657, 0.52", "58.4725, 359.675, -16.1246, 0.29", "58.6914, 360.13, -15.9617, 0.29", "59.0387, 360.876, -15.6353, 0.29", "59.081, 360.977, -15.5806, 0.29", "59.3602, 361.715, -15.1319, 0.29", "59.336, 361.689, -15.178, 0.29", "57.7688, 361.425, -18.3646, 1.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "66.8699, 142.546, 9.87483, 0.52", "66.2171, 143.116, 10.6099, 0.52", "66.0314, 143.258, 10.7924, 1.18", "65.6261, 143.531, 11.1374, 1.18", "64.0742, 144.533, 12.3668, 0.22", "63.9093, 144.636, 12.4889, 0.59", "63.345, 144.986, 12.8717, 0.29", "62.8265, 145.293, 13.1796, 0.29", "62.262, 145.627, 13.5396, 0.22", "62.0756, 145.733, 13.656, 0.66", "61.745, 145.916, 13.8381, 0.66", "61.0281, 146.341, 14.3094, 0.22", "60.5759, 146.634, 14.6607, 0.66", "59.2889, 147.564, 15.9054, 0.52", "58.8964, 147.882, 16.3847, 0.81", "58.5113, 148.23, 16.9258, 0.29", "58.2241, 148.528, 17.3947, 0.52", "58.1975, 148.558, 17.4457, 0.52", "57.8632, 148.983, 18.1633, 0.66", "57.5859, 149.418, 18.7246, 0.29", "57.4428, 149.76, 19.1836, 0.96", "57.4038, 149.926, 19.4067, 1.03" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "66.8699, 142.546, 9.87483, 0.59", "68.1687, 142.962, 9.87374, 0.59", "68.5453, 143.098, 9.86024, 1.11", "69.1931, 143.348, 9.88623, 0.81", "69.2733, 143.386, 9.89227, 0.81", "70.0595, 143.83, 9.96541, 0.59", "70.2504, 143.959, 9.98678, 1.55", "70.558, 144.232, 10.0674, 1.55", "71.1511, 144.824, 10.3113, 0.96", "71.7112, 145.46, 10.6016, 0.37", "71.8949, 145.682, 10.7098, 0.59", "72.2494, 146.156, 10.9626, 0.37", "73.1317, 147.355, 11.6312, 0.88", "73.4352, 147.776, 11.8747, 1.55", "73.7091, 148.165, 12.0918, 1.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-107.329, 150.166, -21.403, 0.22", "-107.853, 150.872, -22.197, 0.22", "-108.047, 151.107, -22.4956, 0.22", "-108.254, 151.31, -22.783, 0.81", "-108.387, 151.417, -22.9541, 0.81", "-109.49, 152.017, -24.3419, 0.66", "-109.51, 152.028, -24.3671, 0.66", "-109.68, 152.06, -24.6209, 1.03", "-109.969, 152.053, -25.0696, 0.15", "-110.214, 151.996, -25.4557, 0.15", "-110.72, 151.723, -26.1473, 1.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-107.329, 150.166, -21.403, 0.22", "-107.514, 148.463, -21.2656, 0.22", "-107.564, 147.922, -21.1748, 0.74", "-107.696, 146.629, -20.9119, 0.29", "-107.717, 146.449, -20.8735, 0.29", "-107.843, 145.391, -20.6554, 0.29", "-107.854, 145.293, -20.6357, 0.29", "-107.964, 143.863, -20.3586, 0.29", "-108.004, 143.333, -20.2061, 0.66", "-108.001, 142.935, -20.0043, 0.66", "-107.94, 142.085, -19.4319, 0.29", "-107.921, 141.948, -19.3231, 0.29", "-107.783, 141.36, -18.8167, 0.52", "-107.257, 139.556, -17.147, 0.29", "-106.631, 137.707, -15.2906, 0.29", "-106.401, 137.11, -14.6356, 1.18", "-106.278, 136.83, -14.2912, 1.03", "-105.993, 136.239, -13.5184, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "153.582, 203.945, -28.9931, 0.29", "165.751, 208.695, -29.5238, 0.29", "177.733, 213.629, -31.2091, 0.29", "190.101, 217.653, -32.7491, 0.29", "202.566, 220.84, -35.3117, 0.29", "214.361, 226.038, -37.3956, 0.29", "225.764, 232.036, -39.2939, 0.29" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "153.582, 203.945, -28.9931, 0.29", "163.046, 208.559, -26.8851, 0.29", "172.638, 212.358, -23.8025, 0.29", "181.773, 216.994, -20.5836, 0.29", "191.153, 221.955, -19.0483, 0.29" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "132.996, 211.54, -80.1696, 0.29", "139.168, 212.42, -85.6666, 0.29", "145.341, 213.632, -91.0922, 0.29", "151.001, 215.294, -96.9269, 0.29", "155.805, 217.403, -103.336, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "132.996, 211.54, -80.1696, 0.29", "136.782, 221.77, -78.3218, 0.29", "142.184, 231.473, -78.7373, 0.29", "147.311, 241.202, -80.313, 0.29", "152.387, 250.787, -82.7704, 0.29", "155.934, 260.343, -87.2054, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.1336, 238.484, -32.0588, 0.22", "-10.1709, 239.804, -32.3742, 0.22", "-10.1733, 240.279, -32.4776, 0.52", "-10.1672, 240.721, -32.5668, 0.52", "-10.1692, 242.083, -32.8762, 0.22", "-10.1857, 243.27, -33.1521, 0.22", "-10.2, 243.955, -33.3113, 0.81", "-10.2117, 244.385, -33.4086, 1.11", "-10.221, 244.761, -33.5002, 1.33", "-10.2393, 246.08, -33.7887, 0.22", "-10.2315, 246.617, -33.8834, 0.81", "-10.2293, 246.875, -33.9233, 1.03", "-10.213, 248.142, -34.0809, 0.22", "-10.2373, 249.129, -34.2601, 0.88", "-10.2702, 249.792, -34.4056, 1.11", "-10.3032, 250.373, -34.5458, 1.33", "-10.3303, 250.681, -34.6398, 1.33", "-10.3356, 250.73, -34.6575, 1.33", "-10.567, 252.639, -35.4406, 0.22", "-10.629, 253.063, -35.6236, 0.52", "-10.6416, 253.13, -35.6537, 0.52", "-10.6955, 253.361, -35.7449, 0.52", "-10.855, 254.066, -36.0157, 0.22", "-10.9828, 254.722, -36.2384, 0.22", "-11.0963, 255.424, -36.4478, 0.22", "-11.2237, 256.264, -36.7137, 0.88", "-11.3031, 256.838, -36.9146, 0.88", "-11.4747, 258.216, -37.4263, 0.15", "-11.5443, 258.753, -37.6396, 0.52", "-11.6327, 259.553, -37.9758, 0.74", "-11.6993, 260.749, -38.4972, 0.22", "-11.7063, 261.749, -38.9188, 1.03", "-11.6942, 262.111, -39.0692, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.1336, 238.484, -32.0588, 0.22", "-11.2865, 239.759, -33.9798, 0.22", "-11.7978, 240.105, -34.8886, 0.22", "-11.8694, 240.153, -35.0091, 0.22", "-13.2419, 241.109, -37.2164, 0.37", "-13.6224, 241.378, -37.8144, 0.29", "-14.8495, 242.259, -39.676, 0.88", "-17.7514, 244.318, -44.2676, 0.22", "-18.2786, 244.678, -45.0696, 0.22", "-18.5872, 244.891, -45.5023, 0.52", "-18.6309, 244.922, -45.5537, 0.52", "-19.0173, 245.196, -45.9244, 0.66", "-20.1128, 246.278, -46.606, 0.29", "-20.1831, 246.384, -46.6203, 0.29", "-20.6019, 247.063, -46.7272, 0.29", "-21.1777, 248.094, -46.8794, 0.66", "-21.3064, 248.337, -46.9123, 0.66", "-22.1238, 250.071, -47.0965, 0.22", "-22.1759, 250.204, -47.0993, 0.22", "-22.508, 251.111, -47.1311, 0.52", "-22.6462, 251.556, -47.1569, 0.52", "-31.1508, 258.282, -52.8447, 0.52", "-38.9054, 264.483, -60.0542, 0.52", "-45.5873, 271.147, -67.8537, 0.52", "-53.8726, 278.392, -73.1465, 0.52", "-61.7998, 285.628, -78.9727, 0.52", "-69.469, 292.903, -85.0813, 0.52" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "22.8284, 189.396, -22.8521, 0.29", "27.4178, 195.706, -23.2244, 0.29", "30.7694, 202.541, -24.7397, 0.29", "32.8055, 209.516, -27.4244, 0.29", "33.3419, 216.381, -30.9892, 0.29", "34.7436, 223.443, -33.8215, 0.29", "36.255, 230.129, -37.4851, 0.29", "37.8929, 235.836, -42.6288, 0.29", "39.2952, 242.043, -47.1646, 0.29", "39.3351, 248.727, -51.1275, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "22.8284, 189.396, -22.8521, 1.33", "28.3383, 198.288, -27.9634, 0.29", "32.4035, 208.697, -30.7009, 0.29", "37.6281, 218.603, -33.5481, 0.29", "41.4246, 228.898, -37.042, 0.29", "44.2042, 238.96, -41.9534, 0.29", "47.223, 249.37, -45.8089, 0.29", "48.5914, 260.397, -48.5289, 0.29", "51.6329, 271.033, -51.605, 0.29", "54.1482, 281.339, -56.0793, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "142.175, 73.4065, -117.83, 0.29", "150.092, 75.8497, -126.618, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "142.175, 73.4065, -117.83, 0.29", "149.848, 74.899, -124.136, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-2.46608, 265.178, -4.60081, 0.29", "-3.18724, 266.556, -4.48605, 0.29", "-3.64157, 267.424, -4.41374, 0.81", "-3.79949, 267.725, -4.38861, 1.11", "-3.85967, 267.84, -4.37903, 1.11", "-4.14251, 268.381, -4.33403, 1.11" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.46608, 265.178, -4.60081, 0.29", "-4.39171, 266.495, -0.390973, 0.29", "-4.66097, 266.701, 0.172679, 1.92", "-4.84555, 266.859, 0.538325, 2.28", "-5.94671, 267.874, 2.62704, 0.37", "-6.24596, 268.163, 3.15851, 0.88", "-6.59307, 268.514, 3.70504, 0.37", "-6.63451, 268.561, 3.73398, 0.37", "-7.03869, 269.04, 3.95761, 0.37", "-7.07657, 269.093, 3.98031, 0.37", "-7.3491, 269.49, 4.09187, 0.37", "-7.93374, 270.279, 4.35505, 1.03", "-8.26894, 270.687, 4.51371, 0.96", "-8.85726, 271.395, 4.81579, 0.74", "-10.1405, 272.925, 5.5738, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "73.7091, 148.165, 12.0918, 0.81", "75.2793, 148.467, 13.3799, 0.81", "76.2937, 148.683, 14.2311, 0.29", "76.556, 148.742, 14.4542, 1.03", "77.6635, 148.988, 15.3964, 0.37", "77.8837, 149.037, 15.5837, 0.88", "77.9203, 149.045, 15.6148, 0.88", "78.8333, 149.292, 16.4156, 0.74", "78.8648, 149.303, 16.4473, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "73.7091, 148.165, 12.0918, 0.59", "72.7194, 150.746, 13.2715, 0.59", "72.5406, 151.255, 13.4762, 0.59", "72.2148, 152.457, 13.9105, 0.37", "72.1005, 153.222, 14.1496, 0.88", "72.0694, 153.794, 14.3012, 1.47", "72.0622, 156.008, 14.8307, 0.22", "72.1346, 156.909, 14.9385, 0.22", "72.3011, 157.912, 15.0541, 0.88", "72.699, 159.36, 15.3275, 0.22", "73.0182, 160.361, 15.5696, 0.81", "73.0451, 160.436, 15.589, 0.81", "73.2857, 161.101, 15.8324, 0.22", "73.4019, 161.538, 16.0591, 0.66", "73.6492, 163.257, 17.1317, 0.29", "73.6691, 163.892, 17.5729, 0.96", "73.6447, 164.574, 18.0508, 0.66", "73.4951, 166.29, 19.1747, 0.37", "73.4428, 166.723, 19.4227, 0.37", "73.3623, 167.282, 19.6822, 0.66", "73.2747, 167.839, 19.8339, 0.88", "73.0807, 169.1, 20.133, 0.29", "72.9014, 170.175, 20.3303, 0.37", "72.7422, 171.243, 20.4305, 0.37", "72.6904, 171.687, 20.5099, 0.88", "72.6002, 172.814, 20.7403, 0.88", "72.5641, 174.124, 21.0163, 0.66", "72.5643, 174.201, 21.0332, 0.66", "72.5847, 174.85, 21.2122, 0.66", "72.6317, 176.185, 21.7481, 0.74", "72.6937, 177.314, 22.2996, 0.37", "72.734, 177.889, 22.635, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "191.153, 221.955, -19.0483, 0.29", "197.622, 224.785, -17.5005, 0.29", "203.913, 228.039, -16.1487, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "191.153, 221.955, -19.0483, 0.29", "201.438, 225.977, -18.2947, 0.29", "211.701, 229.269, -15.6898, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "155.805, 217.403, -103.336, 0.29", "159.981, 219.679, -110.818, 0.29", "164.626, 222.279, -117.895, 0.29", "168.309, 225.677, -125.169, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "155.805, 217.403, -103.336, 0.29", "165.608, 219.202, -110.052, 0.29", "175.237, 219.048, -117.264, 0.29", "184.697, 219.664, -124.669, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-11.6942, 262.111, -39.0692, 0.22", "-9.86303, 262.268, -40.1661, 0.22", "-9.2136, 262.323, -40.5552, 0.37", "-8.77662, 262.361, -40.8169, 0.66", "-8.23314, 262.407, -41.1425, 0.88", "1.05739, 261.841, -47.1236, 0.88", "10.1488, 261.452, -53.4179, 0.88", "19.3288, 260.513, -59.5166, 0.88", "29.0507, 261.465, -64.7045, 0.88" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.6942, 262.111, -39.0692, 0.22", "-11.9818, 263.519, -39.1301, 0.22", "-12.1609, 264.772, -39.1659, 0.37", "-12.2407, 265.581, -39.1859, 0.22", "-12.2887, 266.334, -39.2046, 0.66", "-12.3037, 266.722, -39.2146, 0.88", "-12.3194, 268.327, -39.2725, 0.22", "-12.2446, 269.579, -39.3064, 0.29", "-12.1847, 270.315, -39.3346, 0.59", "-12.1124, 270.981, -39.3675, 1.03", "-12.0533, 271.424, -39.3963, 1.25", "-11.7956, 273.045, -39.437, 0.15", "-11.5997, 274.141, -39.424, 0.15", "-11.4772, 274.902, -39.3837, 0.88", "-11.4097, 275.341, -39.3338, 1.18", "-11.3442, 275.78, -39.2548, 1.18", "-11.0661, 277.646, -38.7986, 0.15", "-10.9722, 278.289, -38.5891, 0.44", "-10.9165, 278.68, -38.4425, 0.44", "-10.7867, 279.598, -38.0703, 0.22", "-10.7268, 280.239, -37.8275, 0.74", "-10.7236, 280.309, -37.8033, 0.74", "-10.7328, 280.697, -37.704, 0.74", "-10.7353, 280.772, -37.6881, 0.74", "-10.7476, 281.109, -37.6346, 0.74", "-10.8623, 282.926, -37.4606, 0.22", "-10.8668, 282.997, -37.456, 0.22", "-10.9167, 283.94, -37.4067, 0.81", "-10.936, 284.376, -37.3883, 1.03", "-10.9394, 284.453, -37.3857, 1.03", "-10.9629, 285.085, -37.3788, 1.03", "-10.9811, 286.543, -37.3901, 0.22", "-10.9642, 287.453, -37.4308, 0.22", "-10.961, 287.524, -37.4359, 0.22", "-10.8991, 288.491, -37.522, 0.22", "-10.8236, 289.396, -37.6166, 0.88", "-10.761, 289.976, -37.688, 1.03", "-10.609, 291.482, -37.8984, 0.22", "-10.5676, 291.999, -37.9697, 0.22", "-10.5244, 292.658, -38.0547, 0.66", "-10.5193, 292.739, -38.0644, 0.66", "-10.5062, 293.041, -38.0964, 0.66", "-10.4901, 294.274, -38.2095, 0.22", "-10.4999, 295.053, -38.2641, 0.22", "-10.5136, 295.719, -38.3109, 0.29", "-10.5328, 296.75, -38.383, 0.22", "-10.5359, 297.685, -38.4638, 0.74", "-10.5224, 298.179, -38.5121, 1.18", "-10.4811, 298.754, -38.5728, 1.18", "-10.456, 299.07, -38.6064, 1.33", "-10.4117, 299.583, -38.6606, 1.33", "-10.2399, 301.408, -38.8591, 0.15", "-10.0927, 302.721, -39.0262, 0.15", "-9.92722, 303.965, -39.2122, 0.88", "-9.86025, 304.423, -39.286, 1.11", "-9.81725, 304.716, -39.3341, 1.11", "-9.80054, 304.844, -39.3578, 1.11", "-9.66548, 305.942, -39.5686, 0.15", "-9.55646, 306.883, -39.7544, 0.15", "-9.45112, 307.909, -39.9475, 0.74", "-9.40146, 308.398, -40.0332, 0.88", "-9.26614, 309.784, -40.2536, 0.15", "-9.09821, 311.382, -40.4778, 0.15", "-8.99497, 312.328, -40.5963, 0.96", "-8.92358, 312.927, -40.6699, 1.25", "-8.8654, 313.355, -40.7209, 1.25", "-8.55937, 315.353, -40.941, 0.22", "-8.3513, 316.583, -41.0516, 0.22", "-8.33896, 316.655, -41.0583, 0.22", "-8.13147, 317.815, -41.1694, 0.52", "-8.06321, 318.191, -41.2023, 0.96", "-8.05308, 318.254, -41.2066, 0.96", "-7.98629, 318.77, -41.2245, 0.96", "-7.97299, 318.915, -41.2279, 0.96", "-7.96369, 319.019, -41.2302, 1.11", "-7.90397, 320.841, -41.2405, 0.22", "-7.89902, 321.519, -41.2421, 0.22", "-7.90357, 322.056, -41.2456, 0.81", "-7.90213, 322.432, -41.2339, 1.03", "-7.86917, 323.543, -41.1674, 0.22", "-7.80003, 324.896, -41.0565, 0.22", "-7.70357, 326.175, -40.9194, 0.22", "-7.68911, 326.305, -40.9044, 0.22", "-7.53227, 327.539, -40.7522, 0.22", "-7.34965, 328.777, -40.6006, 0.81", "-7.33499, 328.852, -40.5898, 0.81", "-7.21952, 329.353, -40.5124, 0.81", "-6.98668, 330.424, -40.3364, 0.22", "-6.89055, 330.986, -40.2483, 0.22", "-6.78425, 331.871, -40.1278, 0.88", "-6.584, 333.671, -39.8104, 0.22", "-6.50518, 334.431, -39.6639, 0.22", "-6.49718, 334.513, -39.647, 0.22", "-6.425, 335.396, -39.4565, 0.22", "-6.41559, 335.503, -39.4349, 0.22", "-6.29321, 336.822, -39.2213, 0.22", "-6.16221, 337.873, -39.1146, 1.03", "-6.08342, 338.303, -39.0879, 1.33", "-5.98708, 338.833, -39.0665, 1.33", "-5.84994, 339.56, -39.0499, 0.74", "-5.55651, 341.239, -39.0112, 0.22", "-5.47201, 341.778, -39.0047, 0.22", "-5.3244, 342.657, -38.9852, 0.81", "-5.09605, 343.987, -38.9465, 0.22", "-5.08472, 344.046, -38.945, 0.22", "-4.96288, 344.69, -38.9232, 0.66", "-4.87014, 345.198, -38.9019, 0.66", "-4.54387, 346.939, -38.827, 0.22", "-4.52852, 347.025, -38.8253, 0.22", "-4.27832, 348.335, -38.8379, 0.22", "-4.26607, 348.405, -38.8405, 0.22", "-4.06532, 349.673, -38.917, 1.03", "-3.97453, 350.326, -38.9595, 1.47", "-3.79245, 351.852, -39.0697, 0.22", "-3.7525, 352.218, -39.0977, 0.22", "-3.67838, 352.958, -39.1591, 0.44", "-3.64838, 353.26, -39.1858, 0.66", "-3.64116, 353.333, -39.1928, 0.66", "-3.60825, 353.707, -39.2222, 0.66", "-3.54178, 354.984, -39.2608, 0.15", "-3.53769, 355.723, -39.2659, 0.74", "-3.54346, 355.988, -39.2631, 0.96", "-3.54372, 356.06, -39.264, 0.96", "-3.54023, 356.383, -39.2721, 0.96", "-3.51656, 357.573, -39.3144, 0.22", "-3.46932, 358.47, -39.3596, 0.52", "-3.43488, 358.823, -39.3851, 0.52", "-3.22032, 360.38, -39.5229, 0.22", "-3.09773, 361.04, -39.5926, 0.52", "-3.06496, 361.173, -39.6115, 0.52", "-2.75052, 362.235, -39.7959, 0.22", "-2.50694, 363.166, -40.0091, 1.11", "-2.44813, 363.442, -40.0888, 1.33", "-2.34804, 364.01, -40.2724, 1.03", "-2.19737, 364.99, -40.6052, 0.22", "-2.12751, 365.497, -40.7791, 0.59", "-2.00109, 366.705, -41.1839, 0.15", "-1.88286, 368.325, -41.6736, 0.22", "-1.82653, 369.458, -41.9718, 0.96", "-1.82244, 369.755, -42.0422, 1.25", "-1.82421, 370.271, -42.148, 1.25", "-1.82126, 371.858, -42.4305, 0.22", "-1.80958, 372.796, -42.5527, 0.22", "-1.82758, 373.723, -42.6567, 0.74", "-1.85044, 374.299, -42.7188, 0.96", "-1.86078, 374.663, -42.7543, 0.96", "-1.85793, 375.027, -42.785, 0.81", "-1.85347, 375.109, -42.7901, 0.81", "-1.82431, 375.557, -42.8108, 0.66", "-1.76713, 376.46, -42.831, 0.22", "-1.72088, 377.424, -42.8291, 0.22", "-1.70106, 378.46, -42.8202, 1.03", "-1.70189, 378.889, -42.8145, 1.03", "-1.7093, 379.47, -42.806, 0.81", "-1.72124, 380.452, -42.7946, 0.22", "-1.69306, 381.617, -42.7982, 0.22", "-1.64212, 382.336, -42.8074, 0.81", "-1.63478, 382.397, -42.8084, 0.81", "-1.54738, 382.903, -42.8298, 0.81", "-1.28783, 384.061, -42.9064, 0.22", "-1.06672, 384.966, -42.9795, 0.22", "-0.89836, 385.687, -43.0791, 0.22", "-0.881549, 385.806, -43.0986, 0.22", "-0.837704, 386.477, -43.2298, 0.66", "-0.833806, 386.983, -43.3528, 1.03", "-0.86194, 387.506, -43.4997, 1.18", "-0.94305, 388.327, -43.7463, 1.03", "-1.0893, 389.532, -44.1507, 0.22", "-1.18461, 390.358, -44.4395, 0.22", "-1.23176, 390.993, -44.6769, 0.22", "-1.23361, 391.05, -44.6987, 0.22", "-1.22412, 391.799, -44.9779, 0.96", "-1.21066, 392.42, -45.181, 0.96", "-1.19763, 392.853, -45.3271, 0.96", "-1.18165, 394.159, -45.7197, 0.22", "-1.19956, 395.032, -45.9649, 0.22", "-1.1979, 395.161, -45.9994, 0.22", "-1.16278, 395.933, -46.1937, 0.22", "-1.11182, 396.578, -46.3419, 0.88", "-1.05169, 397.228, -46.4869, 0.88", "-0.897483, 398.634, -46.7894, 0.22", "-0.726758, 399.9, -47.0635, 0.22", "-0.699375, 400.06, -47.0993, 0.22", "-0.582294, 400.632, -47.23, 0.88", "-0.462058, 401.207, -47.35, 0.88", "-0.232906, 402.232, -47.5525, 0.22", "-0.0314382, 403.094, -47.7097, 0.81", "0.114712, 404.01, -47.862, 0.15", "0.123449, 404.083, -47.8731, 0.15", "0.197566, 404.963, -48.0173, 0.81", "0.232259, 405.474, -48.1013, 0.81", "0.312076, 406.608, -48.2935, 0.22", "0.376762, 407.494, -48.4529, 0.22", "0.381453, 407.566, -48.4686, 0.22", "0.486039, 408.879, -48.795, 0.22", "0.570197, 409.866, -49.1092, 1.18", "0.623747, 410.406, -49.3033, 1.33", "0.657165, 410.684, -49.4115, 1.33", "0.869386, 412.476, -50.1377, 0.22", "0.936594, 413.163, -50.4158, 0.52", "1.04325, 414.573, -50.9754, 0.22", "1.07239, 415.063, -51.1654, 0.59", "1.09083, 415.416, -51.2931, 0.59", "1.19674, 417.239, -51.8867, 0.22", "1.20201, 417.311, -51.9054, 0.22", "1.23768, 417.962, -52.0566, 0.22", "1.26716, 418.691, -52.1815, 0.81", "1.2771, 419.065, -52.2411, 1.03", "1.28411, 419.354, -52.2935, 1.03", "1.28776, 419.863, -52.418, 0.44", "1.26696, 421.173, -52.81, 0.22", "1.22835, 421.97, -53.0882, 0.22", "1.16516, 422.759, -53.3915, 0.74", "1.0984, 423.369, -53.6351, 0.74", "0.920322, 424.763, -54.2172, 0.22", "0.910735, 424.827, -54.2464, 0.22", "0.843875, 425.263, -54.4552, 0.22", "0.737355, 425.938, -54.792, 0.88", "0.680048, 426.333, -54.9692, 1.18", "0.601036, 427.025, -55.2189, 1.18", "0.492161, 428.702, -55.7133, 0.22", "0.489624, 428.786, -55.7357, 0.22", "0.488405, 429.416, -55.8812, 0.22", "0.471449, 430.076, -55.993, 0.74", "0.438341, 430.513, -56.0382, 0.96", "0.346086, 430.966, -56.0507, 0.96", "0.300702, 431.115, -56.0481, 0.96", "-0.0893606, 432.259, -56.0607, 0.22", "-0.415172, 433.16, -56.0896, 0.59", "-0.587222, 433.615, -56.1476, 0.59", "-1.08578, 434.963, -56.3797, 0.22", "-1.33212, 435.71, -56.5448, 0.22", "-1.53735, 436.418, -56.732, 1.25", "-1.68933, 437.063, -56.9366, 1.33", "-1.98934, 438.904, -57.5942, 0.22", "-2.05289, 439.398, -57.7808, 0.66", "-2.12686, 440.258, -58.1124, 0.22", "-2.13219, 440.325, -58.1378, 0.22", "-2.19267, 441.023, -58.4044, 0.74", "-2.22863, 441.511, -58.5824, 0.74", "-2.28745, 442.727, -58.9513, 0.15", "-2.33032, 443.371, -59.1318, 0.52", "-2.35205, 443.584, -59.1997, 0.52", "-2.48262, 444.651, -59.5656, 0.22", "-2.5382, 445.075, -59.7201, 0.37", "-2.61148, 445.639, -59.9456, 0.15", "-2.66079, 446.133, -60.1623, 0.44", "-2.78925, 447.686, -60.9101, 0.22", "-2.82324, 448.206, -61.1667, 0.74", "-2.84544, 448.596, -61.3741, 0.96", "-2.91372, 449.748, -62.0308, 0.22", "-2.96072, 450.495, -62.4793, 0.22", "-3.01723, 451.537, -63.1091, 0.81", "-3.03356, 451.828, -63.2805, 0.81", "-3.13761, 452.977, -63.9424, 0.22", "-3.14597, 453.042, -63.9785, 0.22", "-3.29064, 453.933, -64.4447, 0.74", "-3.3539, 454.268, -64.6107, 0.96", "-3.75994, 456.196, -65.5302, 0.22", "-3.90868, 457.068, -65.9445, 0.52", "-3.91725, 457.148, -65.9794, 0.52", "-3.93133, 457.534, -66.1405, 0.74", "-3.92712, 457.599, -66.1676, 0.74", "-3.82933, 458.276, -66.4382, 0.74", "-3.56297, 459.409, -66.8703, 0.22", "-3.29135, 460.359, -67.2258, 0.22", "-3.02413, 461.246, -67.5121, 0.74", "-2.6297, 462.547, -67.8652, 0.22", "-2.45054, 463.17, -67.989, 0.59", "-2.43165, 463.239, -67.9964, 0.59", "-2.177, 464.354, -68.0143, 0.22", "-2.03947, 465.054, -67.9682, 0.66", "-1.98621, 465.455, -67.9149, 0.66", "-1.89688, 466.509, -67.7243, 0.22", "-1.85645, 466.966, -67.6113, 0.44", "-1.8153, 467.416, -67.4888, 0.44", "-1.69272, 468.847, -67.0672, 0.22", "-1.58888, 469.6, -66.8219, 1.11", "-1.461, 470.29, -66.5726, 1.11", "-0.976025, 472.412, -65.7112, 0.22", "-0.81835, 473.023, -65.4435, 0.52", "-0.796935, 473.097, -65.4086, 0.52", "-0.347692, 474.421, -64.7357, 0.22", "-0.306801, 474.524, -64.683, 0.22", "-0.0836974, 475.028, -64.4305, 0.22", "0.170047, 475.547, -64.2222, 0.52", "0.485044, 476.174, -63.9896, 0.15", "0.681636, 476.572, -63.8809, 0.29", "0.724719, 476.666, -63.8604, 0.29", "1.19842, 477.603, -63.6652, 0.15", "1.4827, 478.127, -63.5682, 0.44", "1.55619, 478.244, -63.5485, 0.44", "2.21069, 479.203, -63.4007, 0.22", "2.81551, 480.054, -63.2934, 1.03", "3.17552, 480.532, -63.259, 1.03", "3.71035, 481.171, -63.2757, 0.37", "4.32333, 481.859, -63.3276, 0.29", "4.37402, 481.914, -63.3347, 0.29", "4.59641, 482.134, -63.3806, 0.81", "5.13565, 482.65, -63.5229, 0.81", "6.09604, 483.583, -63.776, 0.22", "6.75234, 484.209, -63.9504, 0.22", "7.27248, 484.737, -64.0909, 0.74", "7.81901, 485.288, -64.2386, 0.74", "10.4804, 495.08, -64.6626, 0.74" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.1405, 272.925, 5.5738, 3.17", "-10.7848, 273.26, 6.03253, 3.17", "-12.6387, 274.475, 7.56574, 0.44", "-13.0098, 274.786, 7.91425, 0.74", "-13.044, 274.819, 7.95399, 0.74", "-13.3792, 275.153, 8.35412, 0.74", "-13.4153, 275.189, 8.39398, 0.74", "-14.0964, 276.016, 9.20658, 0.66", "-14.3327, 276.481, 9.61073, 0.59", "-14.8926, 277.622, 10.6455, 0.29", "-15.0859, 277.988, 11.0249, 0.29", "-15.4965, 278.579, 11.7313, 0.29", "-15.7301, 278.848, 12.0869, 0.29", "-16.8098, 279.861, 13.5816, 1.55", "-17.2198, 280.218, 14.1174, 1.92", "-18.2517, 281.171, 15.3888, 1.4", "-18.8943, 281.785, 16.1163, 0.66", "-19.3917, 282.243, 16.617, 0.66", "-19.4222, 282.263, 16.653, 0.66", "-19.9303, 282.556, 17.2751, 0.59", "-20.3624, 282.858, 17.9791, 0.59", "-20.7709, 283.252, 18.9283, 0.96", "-20.7858, 283.273, 18.973, 0.96", "-22.0112, 285.241, 23.2339, 0.74", "-22.1754, 285.502, 23.8045, 1.03", "-22.3829, 285.822, 24.5554, 1.18", "-22.7639, 286.341, 25.9044, 0.81", "-23.0518, 286.601, 26.7422, 0.81", "-23.0798, 286.617, 26.7961, 0.81", "-23.6667, 286.718, 27.277, 0.81", "-23.7198, 286.717, 27.3107, 0.81", "-24.6678, 286.633, 27.816, 0.66", "-26.7957, 286.353, 28.7919, 0.59", "-27.4429, 286.272, 29.0931, 0.59", "-27.4984, 286.272, 29.1229, 0.59", "-28.0594, 286.4, 29.4502, 0.59", "-28.4586, 286.601, 29.6873, 0.88", "-28.4997, 286.639, 29.7101, 0.88", "-28.9774, 287.209, 29.9205, 0.88", "-29.9306, 288.232, 30.3054, 0.88", "-30.746, 288.841, 30.6926, 0.88", "-30.8151, 288.878, 30.7281, 0.88", "-31.5122, 289.136, 31.0793, 0.88", "-31.6681, 289.181, 31.1523, 0.88", "-32.6599, 289.388, 31.5671, 0.88", "-34.6377, 289.833, 32.235, 0.59", "-34.7026, 289.853, 32.2555, 0.59", "-35.2053, 290.056, 32.4496, 0.88", "-36.0251, 290.417, 32.7951, 0.88", "-36.578, 290.691, 33.0345, 0.66", "-37.5591, 291.213, 33.4456, 0.66", "-38.3835, 291.615, 33.8152, 1.03", "-40.1168, 292.331, 34.7208, 1.03", "-40.8522, 292.606, 35.1519, 0.96", "-40.9084, 292.627, 35.1865, 0.96", "-41.5877, 292.923, 35.6211, 0.74", "-43.0417, 293.621, 36.5646, 0.52", "-43.624, 294.02, 36.9247, 0.52", "-44.1403, 294.63, 37.181, 0.52", "-44.7697, 295.825, 37.5158, 0.74", "-44.969, 296.528, 37.6347, 0.52", "-44.9755, 296.645, 37.6434, 0.52", "-44.8629, 297.357, 37.6255, 0.66", "-44.844, 297.412, 37.6244, 0.66", "-44.5588, 298.028, 37.6137, 0.66", "-44.08, 298.842, 37.6045, 0.59", "-43.7938, 299.31, 37.5998, 0.59", "-43.2558, 300.161, 37.5922, 0.44", "-42.803, 300.841, 37.5872, 0.66" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-10.1405, 272.925, 5.5738, 0.52", "-7.71894, 273.151, 6.65531, 0.52", "-7.66951, 273.15, 6.68251, 0.52", "-6.48684, 273.012, 7.52811, 0.74", "-6.34569, 272.989, 7.63969, 0.74", "-5.35924, 272.849, 8.41901, 0.74", "-5.174, 272.827, 8.5617, 0.74", "-3.95228, 272.633, 9.58904, 0.66", "-2.5691, 272.457, 10.7622, 0.59", "-2.52624, 272.453, 10.7986, 0.59", "-1.68948, 272.41, 11.4633, 0.59", "-1.32688, 272.415, 11.7438, 0.44", "-0.614361, 272.47, 12.2263, 0.44", "-0.55646, 272.484, 12.254, 0.44", "0.182757, 272.735, 12.463, 0.66", "0.306192, 272.772, 12.5003, 0.66" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "29.0507, 261.465, -64.7045, 0.29", "35.2628, 261.218, -70.6597, 0.29", "42.2678, 261.969, -75.5985, 0.29", "48.91, 264.295, -80.49, 0.29", "55.9075, 267.44, -84.24, 0.29", "62.3196, 269.461, -89.57, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "29.0507, 261.465, -64.7045, 1.33", "35.7414, 261.059, -71.1348, 0.29", "42.8716, 259.309, -76.8067, 0.29", "48.901, 257.146, -83.5047, 0.29", "54.0706, 256.501, -91.1935, 0.29", "59.6408, 257.038, -98.6031, 0.29", "65.3279, 257.612, -105.92, 0.29", "72.084, 257.239, -112.284, 0.29", "78.6272, 257.828, -118.844, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_32", "dend_1", "dend_50", "dend_33", "dend_25", "dend_2", "dend_60", "dend_51", "dend_41", "dend_34", "dend_27", "dend_26", "dend_14", "dend_3", "dend_64", "dend_61", "dend_55", "dend_52", "dend_49", "dend_42", "dend_36", "dend_35", "dend_31", "dend_28", "dend_20", "dend_15", "dend_7", "dend_4", "dend_66", "dend_65", "dend_63", "dend_62", "dend_59", "dend_56", "dend_54", "dend_53", "dend_44", "dend_43", "dend_40", "dend_37", "dend_30", "dend_29", "dend_24", "dend_21", "dend_17", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_58", "dend_57", "dend_48", "dend_45", "dend_39", "dend_38", "dend_23", "dend_22", "dend_19", "dend_18", "dend_11", "dend_10", "dend_47", "dend_46", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_32", "dend_1", "dend_50", "dend_33", "dend_25", "dend_2", "dend_60", "dend_51", "dend_41", "dend_34", "dend_27", "dend_26", "dend_14", "dend_3", "dend_64", "dend_61", "dend_55", "dend_52", "dend_49", "dend_42", "dend_36", "dend_35", "dend_31", "dend_28", "dend_20", "dend_15", "dend_7", "dend_4", "dend_66", "dend_65", "dend_63", "dend_62", "dend_59", "dend_56", "dend_54", "dend_53", "dend_44", "dend_43", "dend_40", "dend_37", "dend_30", "dend_29", "dend_24", "dend_21", "dend_17", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_58", "dend_57", "dend_48", "dend_45", "dend_39", "dend_38", "dend_23", "dend_22", "dend_19", "dend_18", "dend_11", "dend_10", "dend_47", "dend_46", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_58", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_23", "dend_23", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_SBC_a69bd53bb1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_0
create dend_32
public dend_32
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_32
create dend_50
public dend_50
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_1
create dend_25
public dend_25
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_50
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_41
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_58, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_23, dend_23, dend_22, dend_22, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.45000005627683015)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_49(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.259893, -9.42971, -0.848319, 2.94679 ) }
    soma_0 { pt3dadd( 0.274509, -8.53076, -0.774952, 4.96732 ) }
    soma_0 { pt3dadd( 0.289126, -7.63181, -0.701585, 7.50293 ) }
    soma_0 { pt3dadd( 0.303742, -6.73286, -0.628218, 9.88075 ) }
    soma_0 { pt3dadd( 0.318358, -5.8339, -0.554851, 11.1234 ) }
    soma_0 { pt3dadd( 0.332975, -4.93495, -0.481484, 12.1727 ) }
    soma_0 { pt3dadd( 0.347591, -4.036, -0.408118, 12.6064 ) }
    soma_0 { pt3dadd( 0.362208, -3.13705, -0.334751, 12.7 ) }
    soma_0 { pt3dadd( 0.376824, -2.2381, -0.261384, 12.7598 ) }
    soma_0 { pt3dadd( 0.39144, -1.33915, -0.188017, 12.6811 ) }
    soma_0 { pt3dadd( 0.406057, -0.4402, -0.11465, 12.486 ) }
    soma_0 { pt3dadd( 0.420673, 0.458751, -0.0412834, 12.2118 ) }
    soma_0 { pt3dadd( 0.43529, 1.3577, 0.0320835, 11.8745 ) }
    soma_0 { pt3dadd( 0.449906, 2.25665, 0.10545, 11.5372 ) }
    soma_0 { pt3dadd( 0.464522, 3.1556, 0.178817, 10.2739 ) }
    soma_0 { pt3dadd( 0.479139, 4.05455, 0.252184, 8.61928 ) }
    soma_0 { pt3dadd( 0.493755, 4.95351, 0.325551, 7.19059 ) }
    soma_0 { pt3dadd( 0.508371, 5.85246, 0.398918, 6.26009 ) }
    soma_0 { pt3dadd( 0.522988, 6.75141, 0.472285, 5.10411 ) }
    soma_0 { pt3dadd( 0.537604, 7.65036, 0.545651, 3.84179 ) }
    soma_0 { pt3dadd( 0.552221, 8.54931, 0.619018, 2.38567 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.400844, 8.48133, 0.523351, 4.42 ) }
    dend_0 { pt3dadd( 0.400844, 8.48133, 0.523351, 4.42 ) }
    dend_0 { pt3dadd( 0.346714, 9.94261, 0.528239, 4.42 ) }
    dend_0 { pt3dadd( 0.338617, 12.1346, 0.538729, 4.42 ) }
    dend_0 { pt3dadd( 0.365225, 13.679, 0.546998, 4.49 ) }
    dend_0 { pt3dadd( 0.386048, 14.8876, 0.55347, 4.49 ) }
    dend_0 { pt3dadd( 0.418528, 16.7727, 0.563564, 4.72 ) }
    dend_0 { pt3dadd( 0.443096, 17.8163, 0.569745, 4.72 ) }
    dend_0 { pt3dadd( 0.494539, 19.145, 0.579429, 4.72 ) }
    dend_0 { pt3dadd( 0.595554, 20.2424, 0.589881, 4.2 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.552221, 8.54931, 0.619018, 1.44054 ) }
    axon_0 { pt3dadd( 0.79608, 23.5473, 0.619018, 1.44054 ) }
    axon_0 { pt3dadd( 1.03994, 38.5453, 0.619018, 1.44054 ) }
    // Section: dend_32, id: dend_32, parent: dend_0 (entry count 34/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.595554, 20.2424, 0.589881, 3.09 ) }
    dend_32 { pt3dadd( 1.77024, 22.6853, 0.29375, 3.09 ) }
    dend_32 { pt3dadd( 2.63318, 24.5557, 0.0797865, 2.73 ) }
    dend_32 { pt3dadd( 3.66511, 26.8481, -0.175281, 2.73 ) }
    dend_32 { pt3dadd( 4.67171, 29.0782, -0.426261, 2.73 ) }
    dend_32 { pt3dadd( 5.32574, 30.5259, -0.590073, 2.8 ) }
    dend_32 { pt3dadd( 6.38878, 32.8538, -0.858771, 2.8 ) }
    dend_32 { pt3dadd( 6.46651, 33.032, -0.879044, 2.8 ) }
    dend_32 { pt3dadd( 7.23408, 34.7505, -1.08106, 2.8 ) }
    dend_32 { pt3dadd( 8.21885, 36.8745, -1.34615, 2.8 ) }
    dend_32 { pt3dadd( 8.2533, 36.9471, -1.35586, 2.8 ) }
    dend_32 { pt3dadd( 9.24494, 38.8362, -1.64384, 2.95 ) }
    dend_32 { pt3dadd( 10.0623, 40.2754, -1.89467, 3.02 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 47/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.595554, 20.2424, 0.589881, 1.33 ) }
    dend_1 { pt3dadd( -0.02067, 22.0739, 1.22419, 1.33 ) }
    dend_1 { pt3dadd( -0.0378306, 22.1324, 1.24027, 1.33 ) }
    dend_1 { pt3dadd( -0.225763, 22.8593, 1.40516, 1.33 ) }
    dend_1 { pt3dadd( -0.23695, 22.9107, 1.41526, 1.33 ) }
    dend_1 { pt3dadd( -0.406775, 23.7764, 1.57535, 1.18 ) }
    dend_1 { pt3dadd( -0.414501, 23.8191, 1.58329, 1.18 ) }
    dend_1 { pt3dadd( -0.488861, 24.5738, 1.65832, 1.4 ) }
    dend_1 { pt3dadd( -0.540951, 25.0771, 1.72153, 1.55 ) }
    dend_1 { pt3dadd( -0.618196, 25.6769, 1.80783, 1.55 ) }
    dend_1 { pt3dadd( -0.628547, 25.7437, 1.81488, 1.55 ) }
    dend_1 { pt3dadd( -0.705871, 26.1841, 1.8466, 1.55 ) }
    dend_1 { pt3dadd( -0.71369, 26.2274, 1.84832, 1.55 ) }
    dend_1 { pt3dadd( -0.822683, 26.9297, 1.81453, 1.55 ) }
    dend_1 { pt3dadd( -0.930571, 27.8767, 1.69368, 1.4 ) }
    dend_1 { pt3dadd( -0.964006, 28.4701, 1.58503, 1.4 ) }
    dend_1 { pt3dadd( -0.958795, 28.8573, 1.49972, 1.92 ) }
    dend_1 { pt3dadd( -0.955753, 28.9005, 1.48873, 1.92 ) }
    dend_1 { pt3dadd( -0.852986, 29.7245, 1.2686, 1.92 ) }
    dend_1 { pt3dadd( -0.7465, 30.2847, 1.11323, 1.92 ) }
    dend_1 { pt3dadd( -0.589355, 30.9491, 0.977751, 1.69 ) }
    dend_1 { pt3dadd( -0.406935, 31.6975, 0.855181, 1.69 ) }
    dend_1 { pt3dadd( -0.394207, 31.7489, 0.847576, 1.69 ) }
    dend_1 { pt3dadd( -0.190846, 32.6062, 0.753097, 1.69 ) }
    dend_1 { pt3dadd( -0.17118, 32.6995, 0.752038, 1.69 ) }
    dend_1 { pt3dadd( -0.0119858, 33.5104, 0.761086, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.03994, 38.5453, 0.619018, 0.15 ) }
    axon_1 { pt3dadd( 1.2838, 53.5434, 0.619018, 0.15 ) }
    axon_1 { pt3dadd( 1.52766, 68.5414, 0.619018, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_32 (entry count 76/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 10.0623, 40.2754, -1.89467, 1.99 ) }
    dend_50 { pt3dadd( 11.4773, 40.7251, -2.34684, 1.99 ) }
    dend_50 { pt3dadd( 12.3564, 41.0224, -2.6276, 1.92 ) }
    dend_50 { pt3dadd( 13.1966, 41.3342, -2.89566, 1.92 ) }
    dend_50 { pt3dadd( 14.1577, 41.707, -3.23864, 1.77 ) }
    dend_50 { pt3dadd( 15.036, 42.0524, -3.56743, 1.77 ) }
    dend_50 { pt3dadd( 15.0697, 42.0653, -3.58099, 1.77 ) }
    dend_50 { pt3dadd( 15.8116, 42.3626, -3.92003, 2.28 ) }
    dend_50 { pt3dadd( 16.6718, 42.7092, -4.33085, 2.28 ) }
    dend_50 { pt3dadd( 17.9694, 43.2254, -4.98092, 1.99 ) }
    dend_50 { pt3dadd( 18.9567, 43.6142, -5.50146, 1.99 ) }
    dend_50 { pt3dadd( 20.0569, 44.0272, -6.10589, 1.99 ) }
    dend_50 { pt3dadd( 21.0108, 44.3738, -6.64346, 2.43 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.0623, 40.2754, -1.89467, 2.06 ) }
    dend_33 { pt3dadd( 10.2611, 42.1562, -1.99363, 2.06 ) }
    dend_33 { pt3dadd( 10.3659, 43.5242, -2.06418, 1.62 ) }
    dend_33 { pt3dadd( 10.3692, 43.5837, -2.06701, 1.62 ) }
    dend_33 { pt3dadd( 10.4504, 45.2073, -2.14156, 1.33 ) }
    dend_33 { pt3dadd( 10.5418, 46.8237, -2.14785, 1.33 ) }
    dend_33 { pt3dadd( 10.5501, 46.9536, -2.1435, 1.33 ) }
    dend_33 { pt3dadd( 10.6474, 48.5551, -2.00065, 1.33 ) }
    dend_33 { pt3dadd( 10.7221, 49.7106, -1.83589, 2.06 ) }
    dend_33 { pt3dadd( 10.7886, 50.3131, -1.72052, 2.21 ) }
    dend_33 { pt3dadd( 10.9903, 51.4907, -1.42875, 2.43 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 11.114, 52.0408, -1.28412, 2.95 ) }
    dend_33 { pt3dadd( 11.2477, 52.6716, -1.13906, 2.95 ) }
    dend_33 { pt3dadd( 11.2735, 52.8206, -1.1112, 2.95 ) }
    dend_33 { pt3dadd( 11.462, 54.3673, -0.912518, 1.33 ) }
    dend_33 { pt3dadd( 11.5405, 55.3612, -0.836091, 1.33 ) }
    dend_33 { pt3dadd( 11.5828, 56.6772, -0.814416, 1.33 ) }
    dend_33 { pt3dadd( 11.5584, 58.1559, -0.82857, 1.47 ) }
    dend_33 { pt3dadd( 11.4448, 59.5669, -0.915379, 1.47 ) }
    dend_33 { pt3dadd( 11.3162, 60.4737, -1.00681, 1.69 ) }
    dend_33 { pt3dadd( 11.3057, 60.5265, -1.01102, 1.69 ) }
    dend_33 { pt3dadd( 11.0668, 61.7126, -1.07127, 1.92 ) }
    dend_33 { pt3dadd( 10.9056, 62.7259, -1.09407, 1.92 ) }
    dend_33 { pt3dadd( 10.7726, 64.219, -1.04728, 0.66 ) }
    dend_33 { pt3dadd( 10.7864, 65.2783, -0.950102, 0.66 ) }
    dend_33 { pt3dadd( 10.9702, 66.9064, -0.721723, 0.66 ) }
    dend_33 { pt3dadd( 11.0782, 67.5895, -0.604289, 1.25 ) }
    dend_33 { pt3dadd( 11.3301, 68.5818, -0.368933, 1.99 ) }
    dend_33 { pt3dadd( 11.6267, 69.3724, -0.116754, 2.5 ) }
    dend_33 { pt3dadd( 12.0688, 70.2389, 0.253834, 3.24 ) }
    dend_33 { pt3dadd( 12.5349, 70.9775, 0.558909, 3.39 ) }
    // Section: dend_25, id: dend_25, parent: dend_1 (entry count 20/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.0119858, 33.5104, 0.761086, 1.03 ) }
    dend_25 { pt3dadd( -1.08032, 34.1544, 1.60846, 1.03 ) }
    dend_25 { pt3dadd( -1.42882, 34.3581, 1.88125, 0.88 ) }
    dend_25 { pt3dadd( -2.39283, 34.8837, 2.64215, 1.03 ) }
    dend_25 { pt3dadd( -2.9378, 35.1713, 3.07564, 1.33 ) }
    dend_25 { pt3dadd( -2.97715, 35.1914, 3.10538, 1.33 ) }
    dend_25 { pt3dadd( -3.82572, 35.6332, 3.67348, 1.33 ) }
    dend_25 { pt3dadd( -3.86307, 35.6523, 3.69143, 1.33 ) }
    dend_25 { pt3dadd( -5.015, 36.2593, 4.07025, 1.33 ) }
    dend_25 { pt3dadd( -5.05418, 36.2812, 4.07747, 1.33 ) }
    dend_25 { pt3dadd( -5.59473, 36.6084, 4.12855, 1.47 ) }
    dend_25 { pt3dadd( -6.44308, 37.202, 4.12366, 1.33 ) }
    dend_25 { pt3dadd( -7.29883, 37.9016, 4.02443, 1.33 ) }
    dend_25 { pt3dadd( -7.94122, 38.5218, 3.8758, 1.47 ) }
    dend_25 { pt3dadd( -7.99423, 38.5848, 3.85457, 1.47 ) }
    dend_25 { pt3dadd( -8.47527, 39.2432, 3.61891, 1.47 ) }
    dend_25 { pt3dadd( -9.03064, 40.2067, 3.25564, 1.33 ) }
    dend_25 { pt3dadd( -9.29396, 40.8103, 3.01677, 1.33 ) }
    dend_25 { pt3dadd( -9.57909, 41.7351, 2.62493, 1.33 ) }
    dend_25 { pt3dadd( -9.73259, 42.378, 2.33838, 1.33 ) }
    dend_25 { pt3dadd( -9.74122, 42.4175, 2.32058, 1.33 ) }
    dend_25 { pt3dadd( -9.85325, 42.9569, 2.07191, 1.33 ) }
    dend_25 { pt3dadd( -9.86715, 43.0021, 2.05136, 1.33 ) }
    dend_25 { pt3dadd( -10.1023, 43.5445, 1.8414, 1.4 ) }
    dend_25 { pt3dadd( -10.4245, 44.1434, 1.66066, 1.47 ) }
    dend_25 { pt3dadd( -10.8141, 44.7874, 1.52841, 1.62 ) }
    dend_25 { pt3dadd( -11.094, 45.2401, 1.46492, 1.62 ) }
    dend_25 { pt3dadd( -11.6774, 46.173, 1.37855, 1.33 ) }
    dend_25 { pt3dadd( -12.1501, 46.9506, 1.331, 1.4 ) }
    dend_25 { pt3dadd( -12.5365, 47.5766, 1.3395, 1.4 ) }
    dend_25 { pt3dadd( -13.2469, 48.6716, 1.41026, 0.96 ) }
    dend_25 { pt3dadd( -13.7709, 49.4521, 1.49674, 0.96 ) }
    dend_25 { pt3dadd( -14.0959, 49.9051, 1.56341, 1.18 ) }
    dend_25 { pt3dadd( -14.5333, 50.4366, 1.66677, 1.47 ) }
    dend_25 { pt3dadd( -15.4009, 51.2901, 1.84915, 1.47 ) }
    dend_25 { pt3dadd( -16.1584, 51.8259, 1.95302, 1.33 ) }
    dend_25 { pt3dadd( -16.2003, 51.8436, 1.95711, 1.33 ) }
    dend_25 { pt3dadd( -17.2374, 52.0861, 2.04074, 1.55 ) }
    dend_25 { pt3dadd( -18.1536, 52.1801, 2.09471, 2.06 ) }
    dend_25 { pt3dadd( -18.9195, 52.1722, 2.15301, 1.69 ) }
    dend_25 { pt3dadd( -20.1663, 52.0731, 2.23507, 0.96 ) }
    dend_25 { pt3dadd( -21.5423, 51.9061, 2.35598, 1.55 ) }
    dend_25 { pt3dadd( -22.106, 51.8315, 2.42381, 1.77 ) }
    dend_25 { pt3dadd( -22.6144, 51.7636, 2.5269, 1.47 ) }
    dend_25 { pt3dadd( -24.0296, 51.5672, 2.86119, 1.11 ) }
    dend_25 { pt3dadd( -24.7837, 51.4826, 3.08241, 0.96 ) }
    dend_25 { pt3dadd( -24.827, 51.4805, 3.09792, 0.96 ) }
    dend_25 { pt3dadd( -25.8436, 51.5046, 3.47535, 1.18 ) }
    dend_25 { pt3dadd( -27.1121, 51.5985, 4.02682, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.0119858, 33.5104, 0.761086, 0.96 ) }
    dend_2 { pt3dadd( -0.213602, 34.6538, 0.266687, 0.96 ) }
    dend_2 { pt3dadd( -0.224266, 34.7048, 0.247108, 0.96 ) }
    dend_2 { pt3dadd( -0.465755, 35.9042, -0.121582, 0.96 ) }
    dend_2 { pt3dadd( -0.6354, 36.774, -0.359286, 0.96 ) }
    dend_2 { pt3dadd( -0.647511, 36.8383, -0.374881, 0.96 ) }
    dend_2 { pt3dadd( -0.822567, 37.9001, -0.633496, 0.96 ) }
    dend_2 { pt3dadd( -0.834722, 37.9678, -0.647857, 0.96 ) }
    dend_2 { pt3dadd( -0.991651, 39.1818, -0.878917, 0.96 ) }
    dend_2 { pt3dadd( -0.996896, 39.2477, -0.889643, 0.96 ) }
    dend_2 { pt3dadd( -1.0002, 40.5676, -1.11563, 1.25 ) }
    dend_2 { pt3dadd( -0.94216, 41.5143, -1.27958, 1.25 ) }
    dend_2 { pt3dadd( -0.935441, 41.5683, -1.28909, 1.25 ) }
    dend_2 { pt3dadd( -0.783398, 42.6189, -1.45658, 0.74 ) }
    dend_2 { pt3dadd( -0.764084, 42.7466, -1.47372, 0.74 ) }
    dend_2 { pt3dadd( -0.615338, 43.8174, -1.60262, 0.52 ) }
    dend_2 { pt3dadd( -0.482527, 44.8837, -1.70368, 1.25 ) }
    dend_2 { pt3dadd( -0.437529, 45.3508, -1.73819, 1.62 ) }
    dend_2 { pt3dadd( -0.379262, 46.1022, -1.79169, 1.25 ) }
    dend_2 { pt3dadd( -0.34445, 47.0012, -1.87715, 0.59 ) }
    dend_2 { pt3dadd( -0.333694, 47.9536, -1.98128, 0.59 ) }
    dend_2 { pt3dadd( -0.329041, 48.9368, -2.02077, 1.11 ) }
    dend_2 { pt3dadd( -0.326973, 49.0011, -2.01989, 1.11 ) }
    dend_2 { pt3dadd( -0.267314, 49.6712, -1.98601, 1.11 ) }
    dend_2 { pt3dadd( -0.09225, 50.8984, -1.81712, 0.59 ) }
    dend_2 { pt3dadd( 0.06721, 51.6981, -1.66097, 0.59 ) }
    dend_2 { pt3dadd( 0.423442, 53.436, -1.16618, 1.25 ) }
    dend_2 { pt3dadd( 0.584081, 54.3343, -0.915382, 1.47 ) }
    dend_2 { pt3dadd( 0.700822, 55.2399, -0.685185, 1.47 ) }
    dend_2 { pt3dadd( 0.790824, 56.841, -0.404023, 1.69 ) }
    dend_2 { pt3dadd( 0.77726, 57.9907, -0.29509, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 0.624963, 59.4363, -0.45555, 0.66 ) }
    dend_2 { pt3dadd( 0.387019, 60.8396, -0.944199, 0.96 ) }
    dend_2 { pt3dadd( 0.234653, 61.6372, -1.36836, 1.33 ) }
    dend_2 { pt3dadd( -0.0760198, 63.2622, -2.45109, 1.33 ) }
    dend_2 { pt3dadd( -0.117005, 63.5335, -2.66403, 1.84 ) }
    dend_2 { pt3dadd( -0.208129, 64.8123, -3.72281, 1.4 ) }
    dend_2 { pt3dadd( -0.146153, 65.8826, -4.56368, 1.11 ) }
    dend_2 { pt3dadd( 0.0335592, 66.8506, -5.16978, 1.11 ) }
    dend_2 { pt3dadd( 0.272695, 67.7124, -5.61039, 1.84 ) }
    dend_2 { pt3dadd( 0.457285, 68.268, -5.8229, 2.06 ) }
    dend_2 { pt3dadd( 0.799893, 69.3505, -6.15131, 2.06 ) }
    dend_2 { pt3dadd( 1.22315, 70.7538, -6.45079, 0.96 ) }
    dend_2 { pt3dadd( 1.54788, 71.8701, -6.64273, 0.66 ) }
    dend_2 { pt3dadd( 1.72669, 72.4673, -6.71465, 0.59 ) }
    dend_2 { pt3dadd( 2.02242, 73.4357, -6.80828, 0.59 ) }
    dend_2 { pt3dadd( 2.29066, 74.401, -6.84239, 0.59 ) }
    dend_2 { pt3dadd( 2.30723, 74.466, -6.83954, 0.59 ) }
    dend_2 { pt3dadd( 2.46242, 75.1881, -6.79455, 0.59 ) }
    dend_2 { pt3dadd( 2.47427, 75.2613, -6.79139, 0.59 ) }
    dend_2 { pt3dadd( 2.57315, 76.0621, -6.81628, 0.59 ) }
    dend_2 { pt3dadd( 2.63804, 76.9734, -7.04563, 1.11 ) }
    dend_2 { pt3dadd( 2.64028, 77.035, -7.07317, 1.11 ) }
    dend_2 { pt3dadd( 2.62133, 77.8197, -7.51792, 1.62 ) }
    dend_2 { pt3dadd( 2.5864, 78.2683, -7.82292, 1.62 ) }
    dend_2 { pt3dadd( 2.51691, 79.0335, -8.38973, 1.92 ) }
    dend_2 { pt3dadd( 2.37548, 80.3066, -9.39177, 1.92 ) }
    dend_2 { pt3dadd( 2.36403, 80.4022, -9.46627, 1.92 ) }
    dend_2 { pt3dadd( 2.22466, 81.4776, -10.2148, 0.66 ) }
    dend_2 { pt3dadd( 2.21142, 81.5808, -10.2768, 0.66 ) }
    dend_2 { pt3dadd( 2.10359, 82.5039, -10.7441, 0.88 ) }
    dend_2 { pt3dadd( 2.07712, 82.9868, -10.9311, 1.11 ) }
    dend_2 { pt3dadd( 2.10063, 83.5603, -11.0889, 1.25 ) }
    dend_2 { pt3dadd( 2.14324, 84.0099, -11.2104, 0.96 ) }
    dend_2 { pt3dadd( 2.27163, 84.8871, -11.4548, 0.59 ) }
    dend_2 { pt3dadd( 2.28778, 84.9855, -11.4816, 0.59 ) }
    dend_2 { pt3dadd( 2.45024, 85.9895, -11.7368, 0.59 ) }
    dend_2 { pt3dadd( 2.58246, 86.9341, -11.9612, 0.44 ) }
    dend_2 { pt3dadd( 2.58936, 86.9969, -11.9743, 0.44 ) }
    dend_2 { pt3dadd( 2.63581, 87.7499, -12.0984, 0.44 ) }
    dend_2 { pt3dadd( 2.63111, 88.3741, -12.1659, 0.44 ) }
    dend_2 { pt3dadd( 2.55295, 89.3334, -12.2336, 1.47 ) }
    dend_2 { pt3dadd( 2.40244, 90.132, -12.2521, 1.99 ) }
    dend_2 { pt3dadd( 2.28573, 90.5707, -12.2448, 2.28 ) }
    dend_2 { pt3dadd( 2.09303, 91.2083, -12.2335, 2.43 ) }
    dend_2 { pt3dadd( 1.90808, 91.7888, -12.2222, 2.43 ) }
    dend_2 { pt3dadd( 1.69629, 92.4455, -12.2179, 2.28 ) }
    dend_2 { pt3dadd( 1.26455, 93.8405, -12.2272, 0.44 ) }
    dend_2 { pt3dadd( 1.09242, 94.4589, -12.2488, 0.37 ) }
    dend_2 { pt3dadd( 0.903856, 95.2957, -12.2976, 0.37 ) }
    dend_2 { pt3dadd( 0.80084, 95.9599, -12.3503, 0.37 ) }
    dend_2 { pt3dadd( 0.74295, 96.5907, -12.4038, 1.11 ) }
    dend_2 { pt3dadd( 0.715029, 97.1995, -12.4516, 1.62 ) }
    dend_2 { pt3dadd( 0.721715, 98.1219, -12.5148, 1.92 ) }
    dend_2 { pt3dadd( 0.753888, 98.9369, -12.5394, 2.36 ) }
    dend_2 { pt3dadd( 0.802042, 99.8074, -12.5332, 2.36 ) }
    dend_2 { pt3dadd( 0.863958, 100.712, -12.4407, 1.92 ) }
    dend_2 { pt3dadd( 0.936818, 101.661, -12.2504, 1.25 ) }
    dend_2 { pt3dadd( 0.999973, 102.443, -12.0359, 1.25 ) }
    dend_2 { pt3dadd( 1.09354, 103.532, -11.664, 1.47 ) }
    dend_2 { pt3dadd( 1.16481, 104.542, -11.2793, 1.4 ) }
    dend_2 { pt3dadd( 1.22679, 106.408, -10.5465, 0.44 ) }
    dend_2 { pt3dadd( 1.23219, 107.338, -10.2, 0.74 ) }
    dend_2 { pt3dadd( 1.23663, 107.786, -10.0472, 0.74 ) }
    dend_2 { pt3dadd( 1.23573, 107.851, -10.0305, 0.74 ) }
    dend_2 { pt3dadd( 1.18974, 108.901, -9.89949, 0.44 ) }
    dend_2 { pt3dadd( 1.07751, 110.451, -9.89547, 0.44 ) }
    dend_2 { pt3dadd( 1.00732, 111.319, -10.0212, 0.37 ) }
    dend_2 { pt3dadd( 0.93488, 112.248, -10.2306, 0.37 ) }
    dend_2 { pt3dadd( 0.791756, 113.585, -10.5778, 0.81 ) }
    dend_2 { pt3dadd( 0.665019, 114.535, -10.8798, 1.62 ) }
    dend_2 { pt3dadd( 0.559122, 115.356, -11.1716, 2.5 ) }
    dend_2 { pt3dadd( 0.396303, 116.529, -11.6336, 2.58 ) }
    dend_2 { pt3dadd( 0.208821, 117.558, -12.0516, 1.77 ) }
    dend_2 { pt3dadd( -0.200219, 119.171, -12.7249, 0.52 ) }
    dend_2 { pt3dadd( -0.473389, 120.125, -13.1404, 0.52 ) }
    // Section: dend_60, id: dend_60, parent: dend_50 (entry count 75/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 21.0108, 44.3738, -6.64346, 0.96 ) }
    dend_60 { pt3dadd( 22.201, 45.7532, -5.4424, 0.96 ) }
    dend_60 { pt3dadd( 23.0534, 46.657, -4.59084, 0.96 ) }
    dend_60 { pt3dadd( 24.031, 47.5755, -3.67714, 1.18 ) }
    dend_60 { pt3dadd( 25.9409, 49.1014, -1.89905, 2.8 ) }
    dend_60 { pt3dadd( 28.2429, 50.7577, 0.148022, 1.62 ) }
    dend_60 { pt3dadd( 28.8891, 51.1959, 0.68227, 1.33 ) }
    dend_60 { pt3dadd( 28.9337, 51.2209, 0.718273, 1.33 ) }
    dend_60 { pt3dadd( 29.7373, 51.6078, 1.32301, 0.96 ) }
    dend_60 { pt3dadd( 32.2798, 52.6782, 2.87128, 0.96 ) }
    dend_60 { pt3dadd( 33.1083, 53.0155, 3.23882, 1.33 ) }
    dend_60 { pt3dadd( 34.2774, 53.5657, 3.61081, 1.55 ) }
    dend_60 { pt3dadd( 35.0523, 53.9522, 3.85936, 1.77 ) }
    dend_60 { pt3dadd( 35.1583, 54.0075, 3.89145, 1.77 ) }
    dend_60 { pt3dadd( 36.3204, 54.6687, 4.19447, 2.06 ) }
    dend_60 { pt3dadd( 38.0933, 55.6911, 4.38871, 1.03 ) }
    dend_60 { pt3dadd( 39.4688, 56.4577, 4.61636, 1.92 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 21.0108, 44.3738, -6.64346, 1.69 ) }
    dend_51 { pt3dadd( 22.7248, 44.7422, -10.0982, 1.69 ) }
    dend_51 { pt3dadd( 23.2727, 44.7591, -11.0054, 1.69 ) }
    dend_51 { pt3dadd( 23.3316, 44.7572, -11.0985, 1.69 ) }
    dend_51 { pt3dadd( 23.9992, 44.7162, -12.0945, 1.69 ) }
    dend_51 { pt3dadd( 24.0454, 44.7127, -12.1615, 1.69 ) }
    dend_51 { pt3dadd( 25.2512, 44.6419, -13.8194, 1.4 ) }
    dend_51 { pt3dadd( 26.1163, 44.6016, -14.8225, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( 27.5876, 44.6518, -16.5316, 1.4 ) }
    dend_51 { pt3dadd( 28.1264, 44.737, -17.1034, 1.69 ) }
    dend_51 { pt3dadd( 28.1803, 44.7505, -17.1579, 1.69 ) }
    dend_51 { pt3dadd( 28.9082, 44.9964, -17.9021, 1.69 ) }
    dend_51 { pt3dadd( 30.3581, 45.5592, -19.3165, 1.4 ) }
    dend_51 { pt3dadd( 31.2002, 45.9163, -20.134, 1.18 ) }
    dend_51 { pt3dadd( 33.0498, 46.6539, -21.8304, 1.18 ) }
    dend_51 { pt3dadd( 33.1959, 46.7062, -21.9611, 1.18 ) }
    dend_51 { pt3dadd( 34.8882, 47.2364, -23.4416, 1.11 ) }
    dend_51 { pt3dadd( 36.3448, 47.6238, -24.7298, 1.4 ) }
    dend_51 { pt3dadd( 36.4031, 47.6368, -24.7798, 1.4 ) }
    dend_51 { pt3dadd( 37.7011, 47.9209, -25.8767, 1.69 ) }
    dend_51 { pt3dadd( 38.7708, 48.1971, -26.733, 1.84 ) }
    dend_51 { pt3dadd( 38.8398, 48.219, -26.7831, 1.84 ) }
    dend_51 { pt3dadd( 40.1518, 48.7527, -27.6024, 1.99 ) }
    dend_51 { pt3dadd( 41.0455, 49.2411, -28.1448, 1.47 ) }
    dend_51 { pt3dadd( 42.3014, 50.0323, -28.8596, 1.47 ) }
    dend_51 { pt3dadd( 43.3184, 50.7439, -29.4006, 1.62 ) }
    dend_51 { pt3dadd( 43.3988, 50.7994, -29.4406, 1.62 ) }
    dend_51 { pt3dadd( 44.5549, 51.5626, -29.9725, 1.47 ) }
    dend_51 { pt3dadd( 45.7021, 52.2735, -30.5037, 1.69 ) }
    dend_51 { pt3dadd( 46.6097, 52.7941, -31.0668, 1.99 ) }
    dend_51 { pt3dadd( 47.4207, 53.1739, -31.697, 1.99 ) }
    dend_51 { pt3dadd( 48.351, 53.4693, -32.5289, 1.92 ) }
    dend_51 { pt3dadd( 48.4215, 53.4833, -32.5965, 1.92 ) }
    dend_51 { pt3dadd( 49.7098, 53.5921, -33.9496, 1.92 ) }
    dend_51 { pt3dadd( 51.1629, 53.618, -35.6346, 2.06 ) }
    dend_51 { pt3dadd( 51.9346, 53.6344, -36.5817, 1.47 ) }
    dend_51 { pt3dadd( 52.872, 53.694, -37.7384, 0.96 ) }
    dend_51 { pt3dadd( 53.6595, 53.8108, -38.7367, 0.88 ) }
    dend_51 { pt3dadd( 53.7405, 53.8239, -38.8355, 0.88 ) }
    dend_51 { pt3dadd( 54.9569, 54.0542, -40.1791, 1.25 ) }
    dend_51 { pt3dadd( 55.5891, 54.2326, -40.805, 1.84 ) }
    dend_51 { pt3dadd( 56.1166, 54.4933, -41.3972, 2.06 ) }
    dend_51 { pt3dadd( 56.9214, 55.1271, -42.4614, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.5349, 70.9775, 0.558909, 0.88 ) }
    dend_41 { pt3dadd( 11.7183, 75.4042, -0.83263, 0.88 ) }
    dend_41 { pt3dadd( 11.4086, 77.283, -1.35815, 0.88 ) }
    dend_41 { pt3dadd( 11.282, 78.4456, -1.63272, 1.4 ) }
    dend_41 { pt3dadd( 11.177, 79.7335, -1.906, 1.62 ) }
    dend_41 { pt3dadd( 11.124, 80.4975, -2.04155, 1.99 ) }
    dend_41 { pt3dadd( 11.0242, 82.0783, -2.28623, 1.69 ) }
    dend_41 { pt3dadd( 11.0195, 82.3231, -2.29638, 1.69 ) }
    dend_41 { pt3dadd( 11.0051, 84.6593, -2.39701, 1.92 ) }
    dend_41 { pt3dadd( 11.0039, 84.7469, -2.40091, 1.92 ) }
    dend_41 { pt3dadd( 10.8361, 87.5227, -2.52636, 0.66 ) }
    dend_41 { pt3dadd( 10.7699, 88.5311, -2.57117, 1.11 ) }
    dend_41 { pt3dadd( 10.7063, 89.5355, -2.67431, 1.33 ) }
    dend_41 { pt3dadd( 10.7, 89.6406, -2.69002, 1.33 ) }
    dend_41 { pt3dadd( 10.68, 90.3941, -2.83756, 1.33 ) }
    dend_41 { pt3dadd( 10.7177, 92.009, -3.20997, 1.18 ) }
    dend_41 { pt3dadd( 10.8676, 94.1372, -3.75729, 0.66 ) }
    dend_41 { pt3dadd( 11.0148, 96.177, -4.26098, 0.66 ) }
    dend_41 { pt3dadd( 11.0192, 96.2626, -4.28015, 0.66 ) }
    dend_41 { pt3dadd( 11.0081, 98.4707, -4.71178, 0.66 ) }
    dend_41 { pt3dadd( 11.0008, 98.5725, -4.72825, 0.66 ) }
    dend_41 { pt3dadd( 10.7629, 100.316, -4.95043, 0.66 ) }
    dend_41 { pt3dadd( 10.3869, 101.903, -5.07732, 1.77 ) }
    dend_41 { pt3dadd( 9.93191, 103.564, -5.05221, 1.99 ) }
    dend_41 { pt3dadd( 9.51912, 105.148, -4.96817, 2.14 ) }
    dend_41 { pt3dadd( 9.0927, 106.947, -4.8227, 2.14 ) }
    dend_41 { pt3dadd( 9.07328, 107.052, -4.81251, 2.14 ) }
    dend_41 { pt3dadd( 8.90545, 108.583, -4.635, 2.14 ) }
    dend_41 { pt3dadd( 8.88139, 110.612, -4.37924, 1.25 ) }
    dend_41 { pt3dadd( 9.12962, 112.72, -4.13751, 0.88 ) }
    dend_41 { pt3dadd( 9.44199, 114.093, -4.01306, 0.88 ) }
    dend_41 { pt3dadd( 9.50047, 114.313, -3.99542, 0.88 ) }
    dend_41 { pt3dadd( 9.7547, 115.301, -3.92785, 1.18 ) }
    dend_41 { pt3dadd( 10.0792, 116.652, -3.86315, 1.18 ) }
    dend_41 { pt3dadd( 10.518, 118.992, -3.83417, 0.66 ) }
    dend_41 { pt3dadd( 10.6602, 120.488, -3.79643, 0.59 ) }
    dend_41 { pt3dadd( 10.6093, 121.661, -3.75498, 0.59 ) }
    dend_41 { pt3dadd( 10.3486, 122.936, -3.70181, 0.59 ) }
    dend_41 { pt3dadd( 10.0341, 123.798, -3.66143, 1.4 ) }
    dend_41 { pt3dadd( 9.61611, 124.633, -3.62203, 1.62 ) }
    dend_41 { pt3dadd( 8.94326, 125.707, -3.57643, 1.77 ) }
    dend_41 { pt3dadd( 7.90414, 127.273, -3.53834, 0.88 ) }
    dend_41 { pt3dadd( 7.08208, 128.606, -3.55046, 0.44 ) }
    dend_41 { pt3dadd( 6.6438, 129.365, -3.56967, 0.44 ) }
    dend_41 { pt3dadd( 6.22988, 130.245, -3.59564, 1.03 ) }
    dend_41 { pt3dadd( 6.13044, 130.546, -3.6062, 1.03 ) }
    dend_41 { pt3dadd( 6.10616, 131.091, -3.63154, 1.03 ) }
    dend_41 { pt3dadd( 6.27653, 131.916, -3.73845, 1.03 ) }
    dend_41 { pt3dadd( 6.30264, 132.019, -3.7555, 1.03 ) }
    dend_41 { pt3dadd( 6.41992, 132.649, -3.86519, 0.96 ) }
    dend_41 { pt3dadd( 6.45045, 132.942, -3.91146, 0.96 ) }
    dend_41 { pt3dadd( 6.54069, 134.586, -4.1446, 0.88 ) }
    dend_41 { pt3dadd( 6.56418, 136.795, -4.43064, 0.81 ) }
    dend_41 { pt3dadd( 6.48236, 138.668, -4.65009, 0.81 ) }
    dend_41 { pt3dadd( 6.31173, 140.387, -4.82557, 0.66 ) }
    dend_41 { pt3dadd( 6.07465, 142.147, -4.97391, 1.03 ) }
    dend_41 { pt3dadd( 5.96385, 142.934, -5.02694, 1.69 ) }
    dend_41 { pt3dadd( 5.83078, 143.775, -5.06657, 1.99 ) }
    dend_41 { pt3dadd( 5.65393, 144.906, -5.08957, 1.99 ) }
    dend_41 { pt3dadd( 5.4473, 146.578, -5.13286, 1.99 ) }
    dend_41 { pt3dadd( 5.27761, 149.266, -5.22615, 0.59 ) }
    dend_41 { pt3dadd( 5.27578, 150.781, -5.29508, 0.29 ) }
    dend_41 { pt3dadd( 5.28259, 150.887, -5.30047, 0.29 ) }
    dend_41 { pt3dadd( 5.48587, 152.33, -5.37819, 0.29 ) }
    dend_41 { pt3dadd( 5.72121, 153.37, -5.43435, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_41 { pt3dadd( 6.03097, 154.45, -5.49225, 1.03 ) }
    dend_41 { pt3dadd( 6.3047, 155.386, -5.54053, 1.55 ) }
    dend_41 { pt3dadd( 6.63727, 156.597, -5.601, 1.84 ) }
    dend_41 { pt3dadd( 6.92385, 157.634, -5.65278, 2.14 ) }
    dend_41 { pt3dadd( 7.57925, 159.915, -5.76882, 0.37 ) }
    dend_41 { pt3dadd( 7.94857, 161.253, -5.77903, 1.18 ) }
    dend_41 { pt3dadd( 8.2609, 162.451, -5.75522, 1.18 ) }
    dend_41 { pt3dadd( 8.50557, 163.418, -5.75781, 1.03 ) }
    dend_41 { pt3dadd( 8.92659, 165.206, -5.79213, 0.44 ) }
    dend_41 { pt3dadd( 9.49092, 167.715, -5.87986, 0.44 ) }
    dend_41 { pt3dadd( 9.98408, 170.212, -6.14566, 1.03 ) }
    dend_41 { pt3dadd( 10.2244, 171.667, -6.3763, 1.84 ) }
    dend_41 { pt3dadd( 10.5784, 174.14, -6.87044, 1.84 ) }
    dend_41 { pt3dadd( 10.7205, 175.354, -7.15854, 1.62 ) }
    dend_41 { pt3dadd( 10.925, 177.291, -7.77932, 1.03 ) }
    dend_41 { pt3dadd( 11.2444, 180.375, -9.02675, 0.59 ) }
    dend_41 { pt3dadd( 11.4492, 182.028, -9.80428, 0.44 ) }
    dend_41 { pt3dadd( 11.4764, 182.222, -9.8828, 0.44 ) }
    dend_41 { pt3dadd( 11.6367, 183.353, -10.1962, 0.44 ) }
    dend_41 { pt3dadd( 12.0125, 185.77, -10.5782, 1.03 ) }
    dend_41 { pt3dadd( 12.1698, 186.828, -10.5691, 1.25 ) }
    dend_41 { pt3dadd( 12.4001, 188.405, -10.2796, 0.44 ) }
    dend_41 { pt3dadd( 12.71, 191.02, -9.65946, 0.66 ) }
    dend_41 { pt3dadd( 12.8466, 192.662, -9.10689, 0.37 ) }
    dend_41 { pt3dadd( 12.9268, 193.862, -8.62053, 0.37 ) }
    dend_41 { pt3dadd( 13.0087, 195.305, -7.97966, 1.33 ) }
    dend_41 { pt3dadd( 13.0518, 196.09, -7.65175, 2.36 ) }
    dend_41 { pt3dadd( 13.1261, 197.227, -7.22856, 2.36 ) }
    dend_41 { pt3dadd( 13.3808, 200.187, -6.40563, 0.59 ) }
    dend_41 { pt3dadd( 13.5079, 201.529, -6.00287, 0.59 ) }
    dend_41 { pt3dadd( 13.5877, 202.658, -5.60419, 0.59 ) }
    dend_41 { pt3dadd( 13.6161, 203.426, -5.32058, 0.44 ) }
    dend_41 { pt3dadd( 13.6166, 203.525, -5.28693, 0.44 ) }
    dend_41 { pt3dadd( 13.6075, 204.27, -5.09014, 0.44 ) }
    dend_41 { pt3dadd( 13.5753, 206.072, -4.81191, 0.74 ) }
    dend_41 { pt3dadd( 13.5562, 207.336, -4.64346, 0.74 ) }
    dend_41 { pt3dadd( 13.5705, 209.036, -4.55781, 1.25 ) }
    dend_41 { pt3dadd( 13.6108, 210.212, -4.58236, 1.25 ) }
    dend_41 { pt3dadd( 13.6962, 212.381, -4.75457, 0.66 ) }
    dend_41 { pt3dadd( 13.7811, 214.176, -5.07792, 1.33 ) }
    dend_41 { pt3dadd( 13.8031, 215.043, -5.31316, 1.69 ) }
    dend_41 { pt3dadd( 13.8057, 217.137, -5.97775, 0.74 ) }
    dend_41 { pt3dadd( 13.8007, 218.489, -6.45831, 0.37 ) }
    dend_41 { pt3dadd( 13.808, 219.356, -6.77739, 0.88 ) }
    dend_41 { pt3dadd( 13.9059, 221.207, -7.44535, 0.66 ) }
    dend_41 { pt3dadd( 14.0649, 222.589, -7.86632, 0.52 ) }
    dend_41 { pt3dadd( 14.1075, 222.891, -7.94916, 0.52 ) }
    dend_41 { pt3dadd( 14.3633, 224.35, -8.2509, 0.74 ) }
    dend_41 { pt3dadd( 14.7998, 226.342, -8.60393, 1.03 ) }
    dend_41 { pt3dadd( 15.2793, 228.117, -8.83384, 1.25 ) }
    dend_41 { pt3dadd( 15.9519, 230.144, -8.92873, 1.4 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 51/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.5349, 70.9775, 0.558909, 2.06 ) }
    dend_34 { pt3dadd( 14.1414, 73.8215, -0.290883, 2.06 ) }
    dend_34 { pt3dadd( 14.5886, 74.7027, -0.343248, 0.96 ) }
    dend_34 { pt3dadd( 15.1972, 75.9546, -0.299018, 0.88 ) }
    dend_34 { pt3dadd( 15.2242, 76.0066, -0.294204, 0.88 ) }
    dend_34 { pt3dadd( 15.7203, 76.8855, -0.181361, 0.88 ) }
    dend_34 { pt3dadd( 16.6038, 78.4112, 0.0275704, 1.11 ) }
    dend_34 { pt3dadd( 16.8474, 78.8653, 0.173681, 1.33 ) }
    dend_34 { pt3dadd( 16.8781, 78.9237, 0.189176, 1.33 ) }
    dend_34 { pt3dadd( 17.3553, 79.8049, 0.390107, 1.33 ) }
    dend_34 { pt3dadd( 17.8156, 80.7574, 0.611518, 0.88 ) }
    dend_34 { pt3dadd( 18.2045, 81.6779, 0.804762, 0.88 ) }
    dend_34 { pt3dadd( 18.2296, 81.7472, 0.816261, 0.88 ) }
    dend_34 { pt3dadd( 18.7013, 83.2747, 1.07528, 1.33 ) }
    dend_34 { pt3dadd( 18.8169, 83.7281, 1.15035, 1.69 ) }
    dend_34 { pt3dadd( 19.2059, 85.7121, 1.46116, 0.88 ) }
    dend_34 { pt3dadd( 19.3444, 86.5808, 1.58166, 0.74 ) }
    dend_34 { pt3dadd( 19.3771, 86.785, 1.63026, 0.74 ) }
    dend_34 { pt3dadd( 19.5421, 87.6795, 1.91611, 0.74 ) }
    dend_34 { pt3dadd( 19.7862, 88.7348, 2.33046, 1.62 ) }
    dend_34 { pt3dadd( 20.0131, 89.576, 2.69513, 0.88 ) }
    dend_34 { pt3dadd( 20.3776, 90.6726, 3.19096, 0.52 ) }
    dend_34 { pt3dadd( 21.3027, 92.9252, 4.29284, 1.25 ) }
    dend_34 { pt3dadd( 21.643, 93.5767, 4.65709, 1.25 ) }
    dend_34 { pt3dadd( 22.0341, 94.1983, 5.05574, 1.11 ) }
    dend_34 { pt3dadd( 22.0619, 94.237, 5.08658, 1.11 ) }
    dend_34 { pt3dadd( 22.5545, 94.8985, 5.65604, 1.11 ) }
    dend_34 { pt3dadd( 23.0468, 95.5635, 6.21392, 0.96 ) }
    dend_34 { pt3dadd( 23.9937, 97.2128, 7.31788, 0.96 ) }
    dend_34 { pt3dadd( 24.0109, 97.2585, 7.34555, 0.96 ) }
    dend_34 { pt3dadd( 24.394, 98.976, 8.2677, 1.4 ) }
    dend_34 { pt3dadd( 24.4704, 99.7439, 8.61506, 1.4 ) }
    dend_34 { pt3dadd( 24.4502, 100.325, 8.81842, 1.33 ) }
    dend_34 { pt3dadd( 24.315, 101.808, 9.35307, 0.74 ) }
    dend_34 { pt3dadd( 24.1976, 103.013, 9.72034, 0.74 ) }
    dend_34 { pt3dadd( 24.1881, 103.81, 9.93708, 1.03 ) }
    dend_34 { pt3dadd( 24.2546, 104.686, 10.1361, 1.18 ) }
    dend_34 { pt3dadd( 24.4943, 105.993, 10.4475, 0.52 ) }
    dend_34 { pt3dadd( 25.3831, 108.932, 11.2586, 1.77 ) }
    dend_34 { pt3dadd( 25.7937, 109.833, 11.5446, 2.65 ) }
    dend_34 { pt3dadd( 26.6618, 111.325, 12.0653, 0.74 ) }
    dend_34 { pt3dadd( 27.2116, 112.13, 12.3621, 0.96 ) }
    dend_34 { pt3dadd( 27.7983, 112.858, 12.6323, 1.25 ) }
    dend_34 { pt3dadd( 28.649, 113.796, 12.9442, 1.62 ) }
    dend_34 { pt3dadd( 29.2879, 114.498, 13.0792, 1.18 ) }
    dend_34 { pt3dadd( 29.8204, 115.177, 13.2219, 1.18 ) }
    dend_34 { pt3dadd( 29.8508, 115.223, 13.2309, 1.18 ) }
    dend_34 { pt3dadd( 30.1165, 115.682, 13.2928, 1.4 ) }
    dend_34 { pt3dadd( 30.5256, 116.421, 13.2684, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 31.1878, 117.588, 13.0269, 0.52 ) }
    dend_34 { pt3dadd( 31.8144, 118.599, 12.7116, 0.52 ) }
    dend_34 { pt3dadd( 31.8644, 118.668, 12.6891, 0.52 ) }
    dend_34 { pt3dadd( 32.5, 119.408, 12.449, 0.88 ) }
    dend_34 { pt3dadd( 33.7396, 120.624, 12.0447, 1.33 ) }
    dend_34 { pt3dadd( 34.1359, 120.943, 11.9397, 1.62 ) }
    dend_34 { pt3dadd( 34.7701, 121.389, 11.8008, 1.92 ) }
    dend_34 { pt3dadd( 36.4233, 122.475, 11.5037, 0.44 ) }
    dend_34 { pt3dadd( 37.2524, 123.006, 11.393, 0.88 ) }
    dend_34 { pt3dadd( 37.6217, 123.213, 11.345, 0.88 ) }
    dend_34 { pt3dadd( 38.9146, 123.813, 11.208, 1.69 ) }
    dend_34 { pt3dadd( 39.3648, 123.973, 11.1394, 2.28 ) }
    dend_34 { pt3dadd( 39.4204, 123.988, 11.1283, 2.28 ) }
    dend_34 { pt3dadd( 40.4282, 124.169, 10.8824, 2.06 ) }
    dend_34 { pt3dadd( 42.4499, 124.553, 10.3131, 0.37 ) }
    dend_34 { pt3dadd( 43.3997, 124.764, 10.0301, 0.29 ) }
    dend_34 { pt3dadd( 44.077, 124.94, 9.82511, 0.88 ) }
    dend_34 { pt3dadd( 44.8656, 125.169, 9.59575, 1.55 ) }
    dend_34 { pt3dadd( 45.5657, 125.409, 9.40111, 1.55 ) }
    dend_34 { pt3dadd( 47.2883, 126.149, 8.96942, 0.66 ) }
    dend_34 { pt3dadd( 48.2557, 126.646, 8.77126, 0.66 ) }
    dend_34 { pt3dadd( 49.1681, 127.154, 8.59322, 1.62 ) }
    dend_34 { pt3dadd( 49.8324, 127.531, 8.47175, 1.99 ) }
    dend_34 { pt3dadd( 50.2593, 127.789, 8.40125, 1.99 ) }
    dend_34 { pt3dadd( 51.6626, 128.701, 8.21037, 0.59 ) }
    dend_34 { pt3dadd( 52.3176, 129.176, 8.15247, 0.29 ) }
    dend_34 { pt3dadd( 53.1387, 129.888, 8.07451, 0.29 ) }
    dend_34 { pt3dadd( 53.2384, 129.989, 8.06657, 0.29 ) }
    dend_34 { pt3dadd( 53.9243, 130.749, 8.02079, 1.18 ) }
    dend_34 { pt3dadd( 54.4495, 131.304, 7.96475, 1.69 ) }
    dend_34 { pt3dadd( 54.9255, 131.798, 7.89865, 1.99 ) }
    dend_34 { pt3dadd( 55.9322, 132.769, 7.73504, 0.52 ) }
    dend_34 { pt3dadd( 57.0136, 133.703, 7.65044, 1.4 ) }
    dend_34 { pt3dadd( 57.6099, 134.176, 7.63534, 1.77 ) }
    dend_34 { pt3dadd( 58.8712, 135.083, 7.64974, 0.88 ) }
    dend_34 { pt3dadd( 59.3265, 135.385, 7.66578, 1.69 ) }
    dend_34 { pt3dadd( 60.4576, 136.084, 7.72291, 0.88 ) }
    dend_34 { pt3dadd( 62.3393, 137.172, 7.86264, 0.37 ) }
    dend_34 { pt3dadd( 63.1267, 137.64, 7.94656, 1.47 ) }
    dend_34 { pt3dadd( 63.8635, 138.112, 8.07332, 2.06 ) }
    dend_34 { pt3dadd( 64.8916, 138.839, 8.36824, 2.73 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 41/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -27.1121, 51.5985, 4.02682, 1.03 ) }
    dend_27 { pt3dadd( -27.9999, 52.1836, 3.98249, 1.03 ) }
    dend_27 { pt3dadd( -28.7529, 52.6664, 3.9746, 0.74 ) }
    dend_27 { pt3dadd( -29.2548, 52.9874, 3.96522, 1.11 ) }
    dend_27 { pt3dadd( -29.6193, 53.2385, 3.93941, 1.25 ) }
    dend_27 { pt3dadd( -30.151, 53.6381, 3.88569, 1.25 ) }
    dend_27 { pt3dadd( -31.249, 54.5354, 3.75312, 0.37 ) }
    dend_27 { pt3dadd( -31.972, 55.2046, 3.65872, 0.29 ) }
    dend_27 { pt3dadd( -32.5266, 55.8338, 3.5495, 0.29 ) }
    dend_27 { pt3dadd( -33.039, 56.5849, 3.3993, 0.81 ) }
    dend_27 { pt3dadd( -33.2517, 57.0782, 3.28517, 1.4 ) }
    dend_27 { pt3dadd( -33.3297, 57.516, 3.17583, 1.62 ) }
    dend_27 { pt3dadd( -33.3281, 57.9354, 3.06004, 1.77 ) }
    dend_27 { pt3dadd( -33.2678, 58.8454, 2.83344, 1.77 ) }
    dend_27 { pt3dadd( -33.2148, 59.5124, 2.68352, 1.55 ) }
    dend_27 { pt3dadd( -33.184, 60.3114, 2.51938, 1.11 ) }
    dend_27 { pt3dadd( -33.2186, 61.1944, 2.37342, 0.74 ) }
    dend_27 { pt3dadd( -33.3723, 62.2607, 2.23948, 0.66 ) }
    dend_27 { pt3dadd( -33.5781, 63.0407, 2.17226, 1.18 ) }
    dend_27 { pt3dadd( -33.7317, 63.4089, 2.1573, 1.18 ) }
    dend_27 { pt3dadd( -34.0469, 63.9687, 2.13362, 1.18 ) }
    dend_27 { pt3dadd( -34.6741, 64.8556, 2.09314, 0.88 ) }
    dend_27 { pt3dadd( -35.2224, 65.4717, 2.15059, 0.88 ) }
    dend_27 { pt3dadd( -35.533, 65.7736, 2.21371, 1.4 ) }
    dend_27 { pt3dadd( -36.0477, 66.2703, 2.34541, 1.33 ) }
    dend_27 { pt3dadd( -36.5202, 66.7451, 2.47959, 0.81 ) }
    dend_27 { pt3dadd( -37.0063, 67.2688, 2.62913, 0.66 ) }
    dend_27 { pt3dadd( -38.3589, 68.8801, 3.04539, 0.66 ) }
    dend_27 { pt3dadd( -38.9373, 69.7692, 3.22201, 0.66 ) }
    dend_27 { pt3dadd( -39.1919, 70.3484, 3.29422, 1.03 ) }
    dend_27 { pt3dadd( -39.3332, 70.8766, 3.3029, 1.33 ) }
    dend_27 { pt3dadd( -39.3865, 71.2594, 3.27064, 1.55 ) }
    dend_27 { pt3dadd( -39.4007, 71.8037, 3.16931, 1.33 ) }
    dend_27 { pt3dadd( -39.2892, 73.5589, 2.66135, 0.37 ) }
    dend_27 { pt3dadd( -39.1904, 74.523, 2.3719, 1.33 ) }
    dend_27 { pt3dadd( -39.1332, 75.3123, 2.13778, 1.99 ) }
    dend_27 { pt3dadd( -39.1349, 75.8584, 1.98544, 1.99 ) }
    dend_27 { pt3dadd( -39.2035, 76.4118, 1.84147, 1.69 ) }
    dend_27 { pt3dadd( -39.5393, 77.4816, 1.60025, 0.44 ) }
    dend_27 { pt3dadd( -39.6011, 77.5755, 1.58466, 0.44 ) }
    dend_27 { pt3dadd( -40.151, 78.1846, 1.48842, 0.44 ) }
    dend_27 { pt3dadd( -40.9409, 78.9441, 1.3888, 0.88 ) }
    dend_27 { pt3dadd( -41.5268, 79.4453, 1.30904, 1.18 ) }
    dend_27 { pt3dadd( -42.0164, 79.8484, 1.23819, 1.62 ) }
    dend_27 { pt3dadd( -42.594, 80.3187, 1.15133, 1.62 ) }
    dend_27 { pt3dadd( -43.1232, 80.8102, 1.05213, 1.62 ) }
    dend_27 { pt3dadd( -43.6613, 81.4301, 0.888746, 1.77 ) }
    dend_27 { pt3dadd( -44.023, 81.9794, 0.706637, 1.47 ) }
    dend_27 { pt3dadd( -44.3258, 82.5597, 0.494395, 1.69 ) }
    dend_27 { pt3dadd( -44.3945, 82.7139, 0.434092, 1.69 ) }
    dend_27 { pt3dadd( -44.6216, 83.3095, 0.18249, 1.69 ) }
    dend_27 { pt3dadd( -44.9263, 84.1772, -0.214679, 1.69 ) }
    dend_27 { pt3dadd( -45.1929, 85.0359, -0.673476, 0.81 ) }
    dend_27 { pt3dadd( -45.398, 85.6348, -1.02959, 0.81 ) }
    dend_27 { pt3dadd( -45.6487, 86.2939, -1.43692, 1.55 ) }
    dend_27 { pt3dadd( -45.9848, 87.1555, -1.95253, 1.77 ) }
    dend_27 { pt3dadd( -46.0013, 87.1989, -1.97661, 1.77 ) }
    dend_27 { pt3dadd( -46.337, 88.1217, -2.42278, 1.62 ) }
    dend_27 { pt3dadd( -46.7033, 89.3381, -2.92972, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_27 { pt3dadd( -46.854, 90.0259, -3.21689, 0.74 ) }
    dend_27 { pt3dadd( -46.9528, 90.6156, -3.44888, 0.74 ) }
    dend_27 { pt3dadd( -47.0529, 91.3125, -3.70497, 0.88 ) }
    dend_27 { pt3dadd( -47.0709, 91.4383, -3.7482, 0.88 ) }
    dend_27 { pt3dadd( -47.1728, 92.1524, -3.97631, 1.11 ) }
    dend_27 { pt3dadd( -47.2752, 93.005, -4.31212, 1.11 ) }
    dend_27 { pt3dadd( -47.4115, 93.6678, -4.69105, 0.52 ) }
    dend_27 { pt3dadd( -47.5936, 94.1512, -5.07517, 0.52 ) }
    dend_27 { pt3dadd( -47.8764, 94.6724, -5.57768, 1.33 ) }
    dend_27 { pt3dadd( -48.1096, 95.018, -5.94407, 1.92 ) }
    dend_27 { pt3dadd( -48.4216, 95.3901, -6.3995, 2.21 ) }
    dend_27 { pt3dadd( -48.9452, 95.9513, -7.12458, 1.92 ) }
    dend_27 { pt3dadd( -49.5246, 96.5608, -7.93211, 0.66 ) }
    dend_27 { pt3dadd( -49.7571, 96.801, -8.24852, 0.88 ) }
    dend_27 { pt3dadd( -49.9878, 97.0316, -8.52212, 1.11 ) }
    dend_27 { pt3dadd( -50.6624, 97.7291, -9.16334, 0.59 ) }
    dend_27 { pt3dadd( -50.9358, 98.0237, -9.35258, 0.44 ) }
    dend_27 { pt3dadd( -51.4184, 98.5912, -9.58553, 0.44 ) }
    dend_27 { pt3dadd( -51.4509, 98.6311, -9.59692, 0.44 ) }
    dend_27 { pt3dadd( -52.1057, 99.4182, -9.88408, 0.29 ) }
    dend_27 { pt3dadd( -52.5094, 99.9322, -10.098, 0.88 ) }
    dend_27 { pt3dadd( -52.7624, 100.302, -10.2781, 1.55 ) }
    dend_27 { pt3dadd( -52.8986, 100.558, -10.434, 1.92 ) }
    dend_27 { pt3dadd( -52.9999, 100.802, -10.5994, 2.21 ) }
    dend_27 { pt3dadd( -53.5034, 102.121, -11.5702, 0.52 ) }
    dend_27 { pt3dadd( -53.6849, 102.605, -11.9764, 1.18 ) }
    dend_27 { pt3dadd( -53.9665, 103.33, -12.6276, 1.18 ) }
    dend_27 { pt3dadd( -54.278, 104.091, -13.3898, 0.52 ) }
    dend_27 { pt3dadd( -54.4404, 104.432, -13.756, 0.37 ) }
    dend_27 { pt3dadd( -54.6521, 104.79, -14.1744, 0.37 ) }
    dend_27 { pt3dadd( -54.9678, 105.185, -14.6551, 0.37 ) }
    dend_27 { pt3dadd( -55.0229, 105.239, -14.7293, 0.37 ) }
    dend_27 { pt3dadd( -55.6353, 105.754, -15.469, 0.74 ) }
    dend_27 { pt3dadd( -56.0195, 106.095, -15.8972, 0.74 ) }
    dend_27 { pt3dadd( -56.4685, 106.532, -16.358, 1.11 ) }
    dend_27 { pt3dadd( -56.7905, 106.876, -16.671, 1.77 ) }
    dend_27 { pt3dadd( -57.2686, 107.397, -17.081, 1.99 ) }
    dend_27 { pt3dadd( -57.518, 107.664, -17.2678, 2.43 ) }
    dend_27 { pt3dadd( -58.6344, 108.911, -17.9758, 0.29 ) }
    dend_27 { pt3dadd( -59.2066, 109.596, -18.3149, 0.29 ) }
    dend_27 { pt3dadd( -59.2433, 109.642, -18.3348, 0.29 ) }
    dend_27 { pt3dadd( -59.7076, 110.199, -18.5417, 0.29 ) }
    dend_27 { pt3dadd( -59.7542, 110.25, -18.557, 0.29 ) }
    dend_27 { pt3dadd( -60.3083, 110.801, -18.699, 0.29 ) }
    dend_27 { pt3dadd( -60.8833, 111.328, -18.8203, 0.29 ) }
    dend_27 { pt3dadd( -61.5887, 111.947, -18.9824, 1.33 ) }
    dend_27 { pt3dadd( -62.2817, 112.52, -19.1338, 1.77 ) }
    dend_27 { pt3dadd( -62.638, 112.785, -19.2091, 1.77 ) }
    dend_27 { pt3dadd( -63.3456, 113.238, -19.3648, 1.47 ) }
    dend_27 { pt3dadd( -64.0304, 113.615, -19.5254, 0.74 ) }
    dend_27 { pt3dadd( -64.6511, 113.942, -19.6504, 0.29 ) }
    dend_27 { pt3dadd( -65.2544, 114.284, -19.7403, 0.96 ) }
    dend_27 { pt3dadd( -65.7973, 114.62, -19.8144, 1.25 ) }
    dend_27 { pt3dadd( -66.7468, 115.219, -19.9004, 0.29 ) }
    dend_27 { pt3dadd( -67.112, 115.456, -19.918, 0.29 ) }
    dend_27 { pt3dadd( -67.9117, 115.944, -19.9044, 0.29 ) }
    dend_27 { pt3dadd( -68.7948, 116.432, -19.8795, 0.29 ) }
    dend_27 { pt3dadd( -69.5986, 116.847, -19.8544, 1.4 ) }
    dend_27 { pt3dadd( -70.0694, 117.09, -19.8335, 1.99 ) }
    dend_27 { pt3dadd( -70.5677, 117.348, -19.8065, 2.14 ) }
    dend_27 { pt3dadd( -71.893, 118.057, -19.7731, 0.22 ) }
    dend_27 { pt3dadd( -72.8759, 118.573, -19.8142, 0.22 ) }
    dend_27 { pt3dadd( -72.9332, 118.604, -19.8186, 0.22 ) }
    dend_27 { pt3dadd( -73.4138, 118.879, -19.8424, 0.59 ) }
    dend_27 { pt3dadd( -73.637, 119.02, -19.8508, 0.59 ) }
    dend_27 { pt3dadd( -74.4671, 119.607, -19.8879, 0.29 ) }
    dend_27 { pt3dadd( -75.0242, 120.07, -19.9271, 0.81 ) }
    dend_27 { pt3dadd( -75.4653, 120.451, -19.9587, 0.81 ) }
    dend_27 { pt3dadd( -76.4974, 121.32, -20.0514, 1.33 ) }
    dend_27 { pt3dadd( -76.9641, 121.691, -20.1022, 1.69 ) }
    dend_27 { pt3dadd( -77.551, 122.145, -20.1747, 1.47 ) }
    dend_27 { pt3dadd( -78.151, 122.613, -20.2583, 0.66 ) }
    dend_27 { pt3dadd( -79.0679, 123.339, -20.3198, 0.22 ) }
    dend_27 { pt3dadd( -79.8594, 123.956, -20.3368, 0.22 ) }
    dend_27 { pt3dadd( -80.554, 124.47, -20.3324, 1.4 ) }
    dend_27 { pt3dadd( -80.707, 124.571, -20.3245, 1.99 ) }
    dend_27 { pt3dadd( -81.2184, 124.885, -20.2779, 1.99 ) }
    dend_27 { pt3dadd( -83.119, 125.997, -20.0407, 0.22 ) }
    dend_27 { pt3dadd( -83.165, 126.023, -20.0341, 0.22 ) }
    dend_27 { pt3dadd( -84.0174, 126.501, -19.9118, 0.22 ) }
    dend_27 { pt3dadd( -84.5682, 126.814, -19.8532, 1.03 ) }
    dend_27 { pt3dadd( -85.0075, 127.059, -19.8308, 1.47 ) }
    dend_27 { pt3dadd( -85.4682, 127.31, -19.8078, 1.77 ) }
    dend_27 { pt3dadd( -86.232, 127.706, -19.7688, 0.44 ) }
    dend_27 { pt3dadd( -87.3294, 128.273, -19.6474, 0.29 ) }
    dend_27 { pt3dadd( -88.1987, 128.718, -19.5127, 0.37 ) }
    dend_27 { pt3dadd( -88.6127, 128.893, -19.44, 0.96 ) }
    dend_27 { pt3dadd( -89.7274, 129.285, -19.2425, 1.18 ) }
    dend_27 { pt3dadd( -90.8225, 129.619, -19.0572, 0.37 ) }
    dend_27 { pt3dadd( -91.894, 129.918, -18.8564, 2.21 ) }
    dend_27 { pt3dadd( -92.5929, 130.117, -18.7279, 2.87 ) }
    dend_27 { pt3dadd( -94.4284, 130.662, -18.4013, 0.37 ) }
    dend_27 { pt3dadd( -94.8837, 130.818, -18.3207, 0.66 ) }
    dend_27 { pt3dadd( -95.4955, 131.068, -18.2286, 0.81 ) }
    dend_27 { pt3dadd( -96.303, 131.506, -18.0476, 0.37 ) }
    dend_27 { pt3dadd( -96.8387, 131.908, -17.8471, 0.74 ) }
    dend_27 { pt3dadd( -97.0595, 132.173, -17.7098, 0.96 ) }
    dend_27 { pt3dadd( -97.4824, 132.98, -17.2993, 0.29 ) }
    dend_27 { pt3dadd( -97.6242, 133.313, -17.1175, 0.29 ) }
    dend_27 { pt3dadd( -97.8849, 134.159, -16.6342, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_27 { pt3dadd( -97.9597, 134.546, -16.4219, 1.33 ) }
    dend_27 { pt3dadd( -97.9795, 134.809, -16.2563, 1.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 2/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -27.1121, 51.5985, 4.02682, 0.52 ) }
    dend_26 { pt3dadd( -28.0573, 51.1929, 5.01479, 0.52 ) }
    dend_26 { pt3dadd( -28.8335, 50.8971, 5.83718, 0.88 ) }
    dend_26 { pt3dadd( -30.6303, 50.3178, 7.82673, 0.88 ) }
    dend_26 { pt3dadd( -30.6729, 50.3043, 7.87233, 0.88 ) }
    dend_26 { pt3dadd( -31.5484, 49.9814, 8.78224, 1.33 ) }
    dend_26 { pt3dadd( -32.3541, 49.6159, 9.66863, 0.96 ) }
    dend_26 { pt3dadd( -33.4878, 49.0582, 11.0204, 1.18 ) }
    dend_26 { pt3dadd( -34.4263, 48.5663, 12.1541, 0.74 ) }
    dend_26 { pt3dadd( -35.0811, 48.2241, 12.8869, 0.52 ) }
    dend_26 { pt3dadd( -35.868, 47.8232, 13.7675, 0.74 ) }
    dend_26 { pt3dadd( -37.3997, 47.006, 15.5381, 0.88 ) }
    dend_26 { pt3dadd( -37.4408, 46.9869, 15.5829, 0.88 ) }
    dend_26 { pt3dadd( -38.5102, 46.6036, 16.6004, 0.22 ) }
    dend_26 { pt3dadd( -39.2728, 46.4625, 17.2366, 0.22 ) }
    dend_26 { pt3dadd( -39.8225, 46.589, 17.5971, 0.22 ) }
    dend_26 { pt3dadd( -39.8826, 46.6266, 17.6181, 0.22 ) }
    dend_26 { pt3dadd( -40.474, 47.1372, 17.6783, 0.81 ) }
    dend_26 { pt3dadd( -40.8822, 47.5242, 17.7029, 1.4 ) }
    dend_26 { pt3dadd( -41.0727, 47.7108, 17.7059, 1.69 ) }
    dend_26 { pt3dadd( -41.6105, 48.1068, 17.7604, 1.92 ) }
    dend_26 { pt3dadd( -41.8976, 48.2303, 17.809, 1.62 ) }
    dend_26 { pt3dadd( -42.7926, 48.4245, 17.997, 0.88 ) }
    dend_26 { pt3dadd( -42.8653, 48.4198, 18.0142, 0.88 ) }
    dend_26 { pt3dadd( -44.0902, 47.8753, 18.2737, 0.52 ) }
    dend_26 { pt3dadd( -44.9018, 47.2189, 18.4141, 0.44 ) }
    dend_26 { pt3dadd( -45.6738, 46.2586, 18.458, 0.37 ) }
    dend_26 { pt3dadd( -45.9543, 45.7891, 18.4348, 0.81 ) }
    dend_26 { pt3dadd( -46.5295, 44.6978, 18.5319, 0.37 ) }
    dend_26 { pt3dadd( -47.1016, 43.5049, 18.7597, 1.03 ) }
    dend_26 { pt3dadd( -47.1256, 43.451, 18.7773, 1.03 ) }
    dend_26 { pt3dadd( -47.5074, 42.7085, 19.1422, 0.96 ) }
    dend_26 { pt3dadd( -48.1979, 41.7519, 19.852, 0.44 ) }
    dend_26 { pt3dadd( -50.0197, 40.0834, 21.6842, 0.74 ) }
    dend_26 { pt3dadd( -50.1026, 40.0369, 21.7685, 0.74 ) }
    dend_26 { pt3dadd( -50.8871, 39.7443, 22.5531, 0.74 ) }
    dend_26 { pt3dadd( -51.3709, 39.6108, 23.0146, 1.18 ) }
    dend_26 { pt3dadd( -51.8904, 39.5301, 23.4381, 1.55 ) }
    dend_26 { pt3dadd( -52.3324, 39.5068, 23.7008, 1.55 ) }
    dend_26 { pt3dadd( -54.1888, 39.4415, 24.3836, 0.29 ) }
    dend_26 { pt3dadd( -54.6487, 39.4085, 24.5449, 0.81 ) }
    dend_26 { pt3dadd( -55.0212, 39.3629, 24.6709, 1.03 ) }
    dend_26 { pt3dadd( -56.2895, 39.1053, 25.1309, 0.29 ) }
    dend_26 { pt3dadd( -57.4194, 38.7416, 25.5494, 0.29 ) }
    dend_26 { pt3dadd( -57.5231, 38.69, 25.6015, 0.29 ) }
    dend_26 { pt3dadd( -58.1186, 38.2031, 26.0267, 0.29 ) }
    dend_26 { pt3dadd( -58.4302, 37.8314, 26.3346, 0.66 ) }
    dend_26 { pt3dadd( -58.5758, 37.6001, 26.519, 0.88 ) }
    dend_26 { pt3dadd( -58.92, 36.8627, 27.0901, 0.37 ) }
    dend_26 { pt3dadd( -59.527, 35.3274, 28.1359, 0.22 ) }
    dend_26 { pt3dadd( -59.7851, 34.7334, 28.5541, 0.22 ) }
    dend_26 { pt3dadd( -59.9888, 34.3087, 28.8534, 0.81 ) }
    dend_26 { pt3dadd( -60.1782, 33.9426, 29.0979, 0.81 ) }
    dend_26 { pt3dadd( -60.2507, 33.8149, 29.1827, 0.81 ) }
    dend_26 { pt3dadd( -60.6263, 33.2254, 29.5584, 0.81 ) }
    dend_26 { pt3dadd( -61.667, 31.7135, 30.3355, 0.29 ) }
    dend_26 { pt3dadd( -62.1021, 31.081, 30.6878, 0.52 ) }
    dend_26 { pt3dadd( -62.5113, 30.477, 31.0714, 0.44 ) }
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 60/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.473389, 120.125, -13.1404, 0.29 ) }
    dend_14 { pt3dadd( -0.0514726, 120.582, -13.1371, 0.29 ) }
    dend_14 { pt3dadd( 0.0396361, 120.69, -13.1799, 0.29 ) }
    dend_14 { pt3dadd( 0.0959906, 120.762, -13.2137, 0.29 ) }
    dend_14 { pt3dadd( 0.64283, 121.476, -13.5665, 0.22 ) }
    dend_14 { pt3dadd( 0.6975, 121.548, -13.6035, 0.22 ) }
    dend_14 { pt3dadd( 1.36433, 122.459, -14.0594, 0.37 ) }
    dend_14 { pt3dadd( 2.2746, 123.777, -14.7525, 1.03 ) }
    dend_14 { pt3dadd( 2.51993, 124.137, -14.9511, 1.03 ) }
    dend_14 { pt3dadd( 2.55865, 124.195, -14.9856, 1.03 ) }
    dend_14 { pt3dadd( 2.97593, 124.861, -15.4297, 0.22 ) }
    dend_14 { pt3dadd( 3.23057, 125.269, -15.7154, 0.44 ) }
    dend_14 { pt3dadd( 10.4015, 131.342, -17.4745, 0.44 ) }
    dend_14 { pt3dadd( 18.4826, 135.381, -20.9323, 0.44 ) }
    dend_14 { pt3dadd( 26.6297, 138.09, -25.4899, 0.44 ) }
    dend_14 { pt3dadd( 34.5715, 142.411, -28.8933, 0.44 ) }
    dend_14 { pt3dadd( 42.4088, 146.862, -32.3519, 0.44 ) }
    dend_14 { pt3dadd( 49.7971, 152.19, -35.4053, 0.44 ) }
    dend_14 { pt3dadd( 57.9412, 157.194, -36.5488, 0.44 ) }
    dend_14 { pt3dadd( 65.8394, 161.993, -39.2799, 0.44 ) }
    dend_14 { pt3dadd( 73.5954, 167.578, -40.0956, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.473389, 120.125, -13.1404, 1.33 ) }
    dend_3 { pt3dadd( -0.550906, 120.855, -12.8208, 1.33 ) }
    dend_3 { pt3dadd( -0.584103, 121.18, -12.7222, 1.77 ) }
    dend_3 { pt3dadd( -0.634786, 121.687, -12.6002, 1.77 ) }
    dend_3 { pt3dadd( -0.641877, 121.781, -12.5819, 1.77 ) }
    dend_3 { pt3dadd( -0.654565, 122.15, -12.5302, 1.62 ) }
    dend_3 { pt3dadd( -0.65929, 122.915, -12.4661, 0.88 ) }
    dend_3 { pt3dadd( -0.642649, 123.675, -12.4813, 0.74 ) }
    dend_3 { pt3dadd( -0.627166, 124.081, -12.5184, 0.81 ) }
    dend_3 { pt3dadd( -0.597585, 124.598, -12.5958, 0.81 ) }
    dend_3 { pt3dadd( -0.554325, 125.181, -12.7026, 0.37 ) }
    dend_3 { pt3dadd( -0.507508, 125.725, -12.8305, 0.37 ) }
    dend_3 { pt3dadd( -0.46092, 126.295, -13.0062, 1.33 ) }
    dend_3 { pt3dadd( -0.438565, 126.866, -13.2092, 1.92 ) }
    dend_3 { pt3dadd( -0.440723, 126.904, -13.225, 1.92 ) }
    dend_3 { pt3dadd( -0.534051, 127.369, -13.4284, 2.28 ) }
    dend_3 { pt3dadd( -0.615637, 127.612, -13.5296, 2.58 ) }
    dend_3 { pt3dadd( -0.726431, 127.864, -13.6342, 2.5 ) }
    dend_3 { pt3dadd( -0.953446, 128.308, -13.8197, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -1.28844, 128.906, -14.061, 1.33 ) }
    dend_3 { pt3dadd( -1.62145, 129.468, -14.2719, 0.81 ) }
    dend_3 { pt3dadd( -1.8957, 129.905, -14.4124, 0.81 ) }
    dend_3 { pt3dadd( -2.13257, 130.33, -14.5309, 0.88 ) }
    dend_3 { pt3dadd( -2.15618, 130.38, -14.5435, 0.88 ) }
    dend_3 { pt3dadd( -2.24442, 130.605, -14.5985, 0.88 ) }
    dend_3 { pt3dadd( -2.36431, 131.176, -14.722, 0.74 ) }
    dend_3 { pt3dadd( -2.38921, 131.747, -14.8466, 0.44 ) }
    dend_3 { pt3dadd( -2.29461, 132.723, -15.0812, 0.81 ) }
    dend_3 { pt3dadd( -2.23058, 133.103, -15.1701, 1.18 ) }
    dend_3 { pt3dadd( -2.21073, 133.194, -15.1921, 1.18 ) }
    dend_3 { pt3dadd( -1.93822, 134.23, -15.4407, 0.44 ) }
    dend_3 { pt3dadd( -1.82897, 134.592, -15.5345, 0.44 ) }
    dend_3 { pt3dadd( -1.61938, 135.311, -15.719, 1.33 ) }
    dend_3 { pt3dadd( -1.53181, 135.689, -15.8039, 1.47 ) }
    dend_3 { pt3dadd( -1.48054, 135.978, -15.8645, 1.47 ) }
    dend_3 { pt3dadd( -1.42789, 136.356, -15.9364, 1.03 ) }
    dend_3 { pt3dadd( -1.38792, 136.738, -15.9874, 0.96 ) }
    dend_3 { pt3dadd( -1.29651, 137.426, -16.0196, 0.37 ) }
    dend_3 { pt3dadd( -1.15516, 138.279, -16.0011, 1.25 ) }
    dend_3 { pt3dadd( -1.10426, 138.536, -15.9874, 1.99 ) }
    dend_3 { pt3dadd( -0.993626, 139.046, -15.9425, 2.21 ) }
    dend_3 { pt3dadd( -0.666488, 140.305, -15.7488, 0.29 ) }
    dend_3 { pt3dadd( -0.479549, 140.969, -15.6065, 1.18 ) }
    dend_3 { pt3dadd( -0.382394, 141.302, -15.5204, 1.69 ) }
    dend_3 { pt3dadd( -0.319546, 141.545, -15.4472, 1.69 ) }
    dend_3 { pt3dadd( -0.307092, 141.612, -15.4258, 1.69 ) }
    dend_3 { pt3dadd( -0.219358, 142.609, -15.0972, 0.44 ) }
    dend_3 { pt3dadd( -0.217471, 143.148, -14.8983, 0.37 ) }
    dend_3 { pt3dadd( -0.219946, 143.191, -14.8832, 0.37 ) }
    dend_3 { pt3dadd( -0.268066, 143.691, -14.6955, 0.37 ) }
    dend_3 { pt3dadd( -0.323023, 144.15, -14.5224, 0.37 ) }
    dend_3 { pt3dadd( -0.376239, 144.557, -14.3825, 0.29 ) }
    dend_3 { pt3dadd( -0.497318, 145.278, -14.1484, 0.52 ) }
    dend_3 { pt3dadd( -0.52243, 145.537, -14.0642, 0.81 ) }
    dend_3 { pt3dadd( -0.531391, 145.828, -13.9791, 0.96 ) }
    dend_3 { pt3dadd( -0.525159, 145.952, -13.9469, 0.96 ) }
    dend_3 { pt3dadd( -0.486143, 146.46, -13.8352, 0.44 ) }
    dend_3 { pt3dadd( -0.484445, 146.495, -13.8288, 0.44 ) }
    dend_3 { pt3dadd( -0.489761, 147.189, -13.7247, 0.81 ) }
    dend_3 { pt3dadd( -0.496815, 147.512, -13.6635, 1.18 ) }
    dend_3 { pt3dadd( -0.513138, 147.82, -13.5938, 1.4 ) }
    dend_3 { pt3dadd( -0.534032, 148.081, -13.5291, 1.4 ) }
    dend_3 { pt3dadd( -0.537936, 148.115, -13.5203, 1.4 ) }
    dend_3 { pt3dadd( -0.588677, 148.512, -13.4162, 1.4 ) }
    dend_3 { pt3dadd( -0.593579, 148.546, -13.4073, 1.4 ) }
    dend_3 { pt3dadd( -0.651416, 148.927, -13.3089, 1.11 ) }
    dend_3 { pt3dadd( -0.703439, 149.242, -13.234, 0.66 ) }
    dend_3 { pt3dadd( -0.766356, 149.617, -13.1535, 0.37 ) }
    dend_3 { pt3dadd( -0.861995, 150.242, -13.0405, 0.88 ) }
    dend_3 { pt3dadd( -0.913745, 150.565, -13.0044, 1.18 ) }
    dend_3 { pt3dadd( -0.923492, 150.619, -13.0006, 1.18 ) }
    dend_3 { pt3dadd( -0.996456, 151.006, -12.9881, 1.03 ) }
    dend_3 { pt3dadd( -1.00426, 151.05, -12.9895, 1.03 ) }
    dend_3 { pt3dadd( -1.05991, 151.384, -13.0243, 1.03 ) }
    dend_3 { pt3dadd( -1.13183, 151.942, -13.1467, 0.22 ) }
    dend_3 { pt3dadd( -1.1579, 152.273, -13.2311, 0.22 ) }
    dend_3 { pt3dadd( -1.15942, 152.322, -13.2442, 0.22 ) }
    dend_3 { pt3dadd( -1.1513, 152.722, -13.3565, 0.22 ) }
    dend_3 { pt3dadd( -1.14986, 152.756, -13.3673, 0.22 ) }
    dend_3 { pt3dadd( -1.10467, 153.41, -13.5958, 1.18 ) }
    dend_3 { pt3dadd( -1.06277, 153.739, -13.713, 1.4 ) }
    dend_3 { pt3dadd( -1.02819, 153.973, -13.7994, 1.62 ) }
    dend_3 { pt3dadd( -1.00528, 154.146, -13.8627, 1.62 ) }
    dend_3 { pt3dadd( -0.963379, 154.552, -14.0063, 1.62 ) }
    dend_3 { pt3dadd( -0.926236, 154.936, -14.144, 1.77 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 66/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 39.4688, 56.4577, 4.61636, 0.52 ) }
    dend_64 { pt3dadd( 40.9572, 57.8763, 4.86328, 0.52 ) }
    dend_64 { pt3dadd( 41.6203, 58.5458, 4.95012, 0.74 ) }
    dend_64 { pt3dadd( 42.1258, 59.0926, 4.9895, 1.77 ) }
    dend_64 { pt3dadd( 42.9165, 60.0246, 5.11172, 0.81 ) }
    dend_64 { pt3dadd( 43.3803, 60.6311, 5.25508, 0.81 ) }
    dend_64 { pt3dadd( 43.7975, 61.2062, 5.41446, 0.74 ) }
    dend_64 { pt3dadd( 43.826, 61.2537, 5.43013, 0.74 ) }
    dend_64 { pt3dadd( 44.3157, 62.1364, 5.79557, 1.03 ) }
    dend_64 { pt3dadd( 44.8866, 63.1932, 6.28165, 1.03 ) }
    dend_64 { pt3dadd( 45.5673, 64.4697, 6.88936, 1.84 ) }
    dend_64 { pt3dadd( 45.8591, 65.0085, 7.16431, 1.55 ) }
    dend_64 { pt3dadd( 46.6038, 66.3337, 7.87288, 0.59 ) }
    dend_64 { pt3dadd( 47.0962, 67.2, 8.3365, 0.81 ) }
    dend_64 { pt3dadd( 47.651, 68.1576, 8.84497, 1.4 ) }
    dend_64 { pt3dadd( 48.0151, 68.7428, 9.08671, 1.62 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 82/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 39.4688, 56.4577, 4.61636, 0.59 ) }
    dend_61 { pt3dadd( 39.2786, 56.0453, 6.81398, 0.59 ) }
    dend_61 { pt3dadd( 38.9288, 55.543, 9.32935, 1.11 ) }
    dend_61 { pt3dadd( 38.1096, 54.4331, 13.8466, 0.74 ) }
    dend_61 { pt3dadd( 37.8203, 54.0445, 15.2896, 0.74 ) }
    dend_61 { pt3dadd( 37.4832, 53.5236, 17.1528, 0.74 ) }
    dend_61 { pt3dadd( 37.4733, 53.505, 17.2185, 0.74 ) }
    dend_61 { pt3dadd( 37.3229, 53.3127, 17.9578, 0.59 ) }
    dend_61 { pt3dadd( 36.4495, 52.4219, 20.9216, 1.03 ) }
    dend_61 { pt3dadd( 36.4107, 52.3532, 21.0726, 1.4 ) }
    dend_61 { pt3dadd( 36.3805, 51.7937, 22.2022, 0.96 ) }
    dend_61 { pt3dadd( 36.5643, 51.3265, 23.0733, 1.18 ) }
    dend_61 { pt3dadd( 36.8821, 50.7907, 24.1097, 1.03 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 95/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 56.9214, 55.1271, -42.4614, 0.74 ) }
    dend_55 { pt3dadd( 57.6924, 55.5436, -43.8758, 0.74 ) }
    dend_55 { pt3dadd( 58.4682, 55.8678, -44.8464, 0.52 ) }
    dend_55 { pt3dadd( 59.0524, 56.0626, -45.3624, 0.96 ) }
    dend_55 { pt3dadd( 61.7532, 56.8105, -47.223, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 62.9123, 57.1091, -47.9061, 0.59 ) }
    dend_55 { pt3dadd( 63.0724, 57.1501, -47.9918, 0.59 ) }
    dend_55 { pt3dadd( 65.3409, 57.6589, -48.9474, 1.11 ) }
    dend_55 { pt3dadd( 66.4025, 57.9373, -49.3136, 1.69 ) }
    dend_55 { pt3dadd( 67.5076, 58.2554, -49.6726, 1.47 ) }
    dend_55 { pt3dadd( 68.5641, 58.5493, -49.9795, 0.66 ) }
    dend_55 { pt3dadd( 69.5174, 58.8504, -50.3588, 1.25 ) }
    dend_55 { pt3dadd( 70.2384, 59.0939, -50.7251, 1.18 ) }
    dend_55 { pt3dadd( 71.2164, 59.4744, -51.4135, 1.03 ) }
    dend_55 { pt3dadd( 72.382, 59.9304, -52.309, 0.44 ) }
    dend_55 { pt3dadd( 73.0273, 60.1876, -52.8452, 0.37 ) }
    dend_55 { pt3dadd( 73.1363, 60.2294, -52.9424, 0.37 ) }
    dend_55 { pt3dadd( 73.6984, 60.4683, -53.6702, 0.37 ) }
    dend_55 { pt3dadd( 74.4363, 60.7217, -54.6056, 1.4 ) }
    dend_55 { pt3dadd( 74.9616, 60.8591, -55.1856, 1.69 ) }
    dend_55 { pt3dadd( 75.7828, 61.0598, -55.9639, 1.69 ) }
    dend_55 { pt3dadd( 75.8747, 61.0843, -56.0487, 1.69 ) }
    dend_55 { pt3dadd( 78.3691, 61.7282, -58.2245, 1.4 ) }
    dend_55 { pt3dadd( 80.6423, 62.352, -60.0938, 0.52 ) }
    dend_55 { pt3dadd( 82.1661, 62.8087, -61.2542, 2.14 ) }
    dend_55 { pt3dadd( 82.7048, 62.9732, -61.6477, 2.87 ) }
    dend_55 { pt3dadd( 84.4562, 63.4847, -62.8262, 0.74 ) }
    dend_55 { pt3dadd( 85.4786, 63.7881, -63.4394, 0.66 ) }
    dend_55 { pt3dadd( 86.1483, 63.994, -63.7505, 0.37 ) }
    dend_55 { pt3dadd( 86.7496, 64.2769, -64.2182, 0.37 ) }
    dend_55 { pt3dadd( 94.0513, 65.6086, -70.6313, 0.37 ) }
    dend_55 { pt3dadd( 100.37, 65.6096, -78.1384, 0.37 ) }
    dend_55 { pt3dadd( 107.196, 66.6092, -85.1165, 0.37 ) }
    dend_55 { pt3dadd( 113.809, 68.0605, -92.213, 0.37 ) }
    dend_55 { pt3dadd( 120.001, 69.002, -99.7672, 0.37 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 30/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 56.9214, 55.1271, -42.4614, 0.74 ) }
    dend_52 { pt3dadd( 58.7659, 54.0666, -46.6227, 0.74 ) }
    dend_52 { pt3dadd( 58.7907, 54.048, -46.7158, 0.74 ) }
    dend_52 { pt3dadd( 59.2169, 53.6378, -48.6191, 0.66 ) }
    dend_52 { pt3dadd( 59.9805, 52.884, -52.0385, 0.66 ) }
    dend_52 { pt3dadd( 60.489, 52.3776, -54.3071, 0.66 ) }
    dend_52 { pt3dadd( 61.1368, 51.7881, -56.9277, 0.66 ) }
    dend_52 { pt3dadd( 63.1246, 50.3239, -63.0267, 0.66 ) }
    dend_52 { pt3dadd( 63.6578, 49.9165, -64.746, 2.36 ) }
    dend_52 { pt3dadd( 63.956, 49.6668, -65.8434, 2.65 ) }
    dend_52 { pt3dadd( 63.981, 49.6425, -65.9534, 2.65 ) }
    dend_52 { pt3dadd( 64.2762, 49.3166, -68.0943, 1.92 ) }
    dend_52 { pt3dadd( 64.4248, 49.1899, -69.5948, 1.03 ) }
    // Section: dend_49, id: dend_49, parent: dend_41 (entry count 43/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 15.9519, 230.144, -8.92873, 0.52 ) }
    dend_49 { pt3dadd( 15.0224, 231.05, -9.91648, 0.52 ) }
    dend_49 { pt3dadd( 14.4933, 231.566, -10.4787, 0.37 ) }
    dend_49 { pt3dadd( 13.4046, 232.627, -11.6356, 0.37 ) }
    dend_49 { pt3dadd( 13.3708, 232.66, -11.6715, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 48/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.9519, 230.144, -8.92873, 0.37 ) }
    dend_42 { pt3dadd( 16.4361, 232.211, -8.87985, 0.37 ) }
    dend_42 { pt3dadd( 16.7782, 233.671, -8.84531, 1.69 ) }
    dend_42 { pt3dadd( 17.0411, 234.793, -8.81878, 1.99 ) }
    dend_42 { pt3dadd( 17.381, 236.245, -8.78446, 1.77 ) }
    dend_42 { pt3dadd( 17.9404, 238.632, -8.72799, 2.58 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 64.8916, 138.839, 8.36824, 0.37 ) }
    dend_36 { pt3dadd( 65.5148, 140.007, 8.84284, 0.37 ) }
    dend_36 { pt3dadd( 65.7165, 140.385, 8.99645, 0.37 ) }
    dend_36 { pt3dadd( 65.9296, 140.784, 9.1588, 0.59 ) }
    dend_36 { pt3dadd( 66.0823, 141.07, 9.27504, 0.88 ) }
    dend_36 { pt3dadd( 66.8699, 142.546, 9.87483, 1.77 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 64.8916, 138.839, 8.36824, 0.81 ) }
    dend_35 { pt3dadd( 66.4693, 138.565, 6.33266, 0.81 ) }
    dend_35 { pt3dadd( 66.9677, 138.465, 5.72208, 0.66 ) }
    dend_35 { pt3dadd( 67.0321, 138.451, 5.65078, 0.66 ) }
    dend_35 { pt3dadd( 67.6474, 138.29, 5.00184, 0.96 ) }
    dend_35 { pt3dadd( 68.4193, 138.073, 4.20483, 1.55 ) }
    dend_35 { pt3dadd( 70.765, 137.366, 2.14053, 0.37 ) }
    dend_35 { pt3dadd( 71.6497, 137.061, 1.55419, 0.37 ) }
    dend_35 { pt3dadd( 72.4086, 136.746, 1.16182, 1.03 ) }
    dend_35 { pt3dadd( 72.9501, 136.498, 0.970627, 1.03 ) }
    dend_35 { pt3dadd( 72.9994, 136.473, 0.963108, 1.03 ) }
    dend_35 { pt3dadd( 75.2683, 135.296, 1.16142, 0.37 ) }
    dend_35 { pt3dadd( 75.9824, 134.93, 1.36647, 1.25 ) }
    dend_35 { pt3dadd( 76.2863, 134.773, 1.44489, 1.77 ) }
    dend_35 { pt3dadd( 76.7129, 134.563, 1.52684, 1.62 ) }
    dend_35 { pt3dadd( 77.95, 133.997, 1.65606, 0.29 ) }
    dend_35 { pt3dadd( 78.543, 133.745, 1.68562, 0.66 ) }
    dend_35 { pt3dadd( 79.0618, 133.563, 1.66846, 0.22 ) }
    dend_35 { pt3dadd( 79.8866, 133.343, 1.67956, 1.33 ) }
    dend_35 { pt3dadd( 80.4974, 133.23, 1.70968, 1.55 ) }
    dend_35 { pt3dadd( 81.0512, 133.166, 1.75557, 1.55 ) }
    dend_35 { pt3dadd( 82.8588, 133.138, 1.95972, 0.44 ) }
    dend_35 { pt3dadd( 84.159, 133.241, 2.16617, 0.44 ) }
    dend_35 { pt3dadd( 84.8536, 133.347, 2.29383, 0.96 ) }
    dend_35 { pt3dadd( 85.4063, 133.466, 2.3954, 0.66 ) }
    dend_35 { pt3dadd( 85.472, 133.482, 2.40633, 0.66 ) }
    dend_35 { pt3dadd( 86.2271, 133.693, 2.51217, 0.96 ) }
    dend_35 { pt3dadd( 87.9769, 134.207, 2.65739, 0.29 ) }
    dend_35 { pt3dadd( 88.6338, 134.384, 2.68512, 0.44 ) }
    dend_35 { pt3dadd( 89.6667, 134.617, 2.68323, 0.22 ) }
    dend_35 { pt3dadd( 90.1497, 134.719, 2.66064, 0.52 ) }
    dend_35 { pt3dadd( 90.2079, 134.731, 2.65496, 0.52 ) }
    dend_35 { pt3dadd( 90.9021, 134.863, 2.5292, 0.52 ) }
    dend_35 { pt3dadd( 91.6728, 135.033, 2.30343, 0.96 ) }
    dend_35 { pt3dadd( 91.9287, 135.123, 2.19967, 1.25 ) }
    dend_35 { pt3dadd( 92.2693, 135.303, 2.03699, 0.96 ) }
    dend_35 { pt3dadd( 92.6249, 135.533, 1.85769, 0.66 ) }
    dend_35 { pt3dadd( 93.4103, 136.053, 1.37937, 0.29 ) }
    dend_35 { pt3dadd( 94.0784, 136.501, 0.934955, 0.37 ) }
    dend_35 { pt3dadd( 95.2374, 137.242, 0.152632, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 96.0481, 137.76, -0.387673, 1.62 ) }
    dend_35 { pt3dadd( 96.3714, 137.964, -0.60419, 1.77 ) }
    dend_35 { pt3dadd( 97.8729, 138.915, -1.59774, 0.29 ) }
    dend_35 { pt3dadd( 98.2694, 139.157, -1.85448, 0.81 ) }
    dend_35 { pt3dadd( 98.713, 139.402, -2.11839, 1.03 ) }
    dend_35 { pt3dadd( 99.5365, 139.785, -2.51839, 0.52 ) }
    dend_35 { pt3dadd( 99.5973, 139.81, -2.54636, 0.52 ) }
    dend_35 { pt3dadd( 100.206, 140.028, -2.76799, 0.52 ) }
    dend_35 { pt3dadd( 100.325, 140.064, -2.79582, 0.52 ) }
    dend_35 { pt3dadd( 101.25, 140.254, -3.02256, 1.03 ) }
    dend_35 { pt3dadd( 101.317, 140.263, -3.03272, 1.03 ) }
    dend_35 { pt3dadd( 101.875, 140.305, -3.08325, 1.25 ) }
    dend_35 { pt3dadd( 103.354, 140.403, -3.24511, 0.29 ) }
    dend_35 { pt3dadd( 104.065, 140.466, -3.32837, 0.96 ) }
    dend_35 { pt3dadd( 104.744, 140.555, -3.40813, 1.33 ) }
    dend_35 { pt3dadd( 106.254, 140.808, -3.56964, 0.52 ) }
    dend_35 { pt3dadd( 106.929, 140.957, -3.61285, 0.29 ) }
    dend_35 { pt3dadd( 108.232, 141.318, -3.64604, 0.29 ) }
    dend_35 { pt3dadd( 109.109, 141.615, -3.62577, 0.88 ) }
    dend_35 { pt3dadd( 109.484, 141.75, -3.59884, 1.4 ) }
    dend_35 { pt3dadd( 109.554, 141.777, -3.59047, 1.4 ) }
    dend_35 { pt3dadd( 111.413, 142.435, -3.30622, 0.29 ) }
    dend_35 { pt3dadd( 111.466, 142.453, -3.29412, 0.29 ) }
    dend_35 { pt3dadd( 112.174, 142.636, -3.09669, 0.88 ) }
    dend_35 { pt3dadd( 113.024, 142.766, -2.91821, 1.03 ) }
    dend_35 { pt3dadd( 113.256, 142.784, -2.87407, 1.03 ) }
    dend_35 { pt3dadd( 114.281, 142.821, -2.70076, 1.25 ) }
    dend_35 { pt3dadd( 115.005, 142.815, -2.60298, 1.69 ) }
    dend_35 { pt3dadd( 115.893, 142.787, -2.48675, 1.33 ) }
    dend_35 { pt3dadd( 117.419, 142.72, -2.3032, 0.44 ) }
    dend_35 { pt3dadd( 118.751, 142.725, -1.91803, 0.44 ) }
    dend_35 { pt3dadd( 118.812, 142.729, -1.89263, 0.44 ) }
    dend_35 { pt3dadd( 119.492, 142.801, -1.52952, 1.47 ) }
    dend_35 { pt3dadd( 119.78, 142.847, -1.35215, 2.14 ) }
    dend_35 { pt3dadd( 120.213, 142.945, -1.01021, 2.14 ) }
    dend_35 { pt3dadd( 122.896, 143.599, 1.37212, 0.29 ) }
    dend_35 { pt3dadd( 123.46, 143.736, 1.86834, 1.25 ) }
    dend_35 { pt3dadd( 123.866, 143.84, 2.21597, 1.69 ) }
    dend_35 { pt3dadd( 124.231, 143.947, 2.53674, 1.99 ) }
    dend_35 { pt3dadd( 126.888, 144.831, 4.79637, 0.66 ) }
    dend_35 { pt3dadd( 128.19, 145.301, 5.8278, 0.66 ) }
    dend_35 { pt3dadd( 128.656, 145.494, 6.14373, 0.96 ) }
    dend_35 { pt3dadd( 129.404, 145.86, 6.64978, 0.96 ) }
    dend_35 { pt3dadd( 130.824, 146.639, 7.61746, 0.29 ) }
    dend_35 { pt3dadd( 131.576, 147.122, 8.09041, 0.29 ) }
    dend_35 { pt3dadd( 131.976, 147.523, 8.20582, 0.59 ) }
    dend_35 { pt3dadd( 132.265, 147.919, 8.25134, 0.81 ) }
    dend_35 { pt3dadd( 132.483, 148.258, 8.28557, 0.81 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 48/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -97.9795, 134.809, -16.2563, 0.22 ) }
    dend_31 { pt3dadd( -99.1661, 135.566, -15.4788, 0.22 ) }
    dend_31 { pt3dadd( -100.066, 136.09, -14.9739, 0.29 ) }
    dend_31 { pt3dadd( -100.837, 136.481, -14.6378, 0.29 ) }
    dend_31 { pt3dadd( -100.909, 136.513, -14.6121, 0.29 ) }
    dend_31 { pt3dadd( -101.148, 136.607, -14.5378, 0.59 ) }
    dend_31 { pt3dadd( -101.617, 136.791, -14.3919, 0.59 ) }
    dend_31 { pt3dadd( -101.944, 136.873, -14.351, 0.88 ) }
    dend_31 { pt3dadd( -102.768, 137.03, -14.3386, 0.15 ) }
    dend_31 { pt3dadd( -103.27, 137.118, -14.33, 0.96 ) }
    dend_31 { pt3dadd( -103.414, 137.142, -14.3283, 1.18 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 59/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -97.9795, 134.809, -16.2563, 0.29 ) }
    dend_28 { pt3dadd( -97.966, 136.363, -16.5685, 0.29 ) }
    dend_28 { pt3dadd( -97.9775, 137.295, -16.7464, 0.52 ) }
    dend_28 { pt3dadd( -97.9869, 137.961, -16.8635, 1.03 ) }
    dend_28 { pt3dadd( -97.9833, 138.563, -17.0056, 1.11 ) }
    dend_28 { pt3dadd( -97.969, 139.839, -17.3448, 0.22 ) }
    dend_28 { pt3dadd( -97.9689, 140.417, -17.5066, 0.81 ) }
    dend_28 { pt3dadd( -97.9901, 140.959, -17.6667, 1.11 ) }
    dend_28 { pt3dadd( -98.0281, 141.374, -17.804, 1.11 ) }
    dend_28 { pt3dadd( -98.3728, 143.437, -18.537, 0.29 ) }
    dend_28 { pt3dadd( -98.5757, 144.209, -18.8322, 1.55 ) }
    dend_28 { pt3dadd( -98.7474, 144.638, -19.0125, 1.92 ) }
    dend_28 { pt3dadd( -99.019, 145.151, -19.2652, 1.77 ) }
    dend_28 { pt3dadd( -99.5258, 145.88, -19.677, 0.66 ) }
    dend_28 { pt3dadd( -100.118, 146.506, -20.0788, 0.22 ) }
    dend_28 { pt3dadd( -100.404, 146.707, -20.2258, 0.44 ) }
    dend_28 { pt3dadd( -100.843, 146.989, -20.4488, 0.44 ) }
    dend_28 { pt3dadd( -101.458, 147.387, -20.7159, 0.29 ) }
    dend_28 { pt3dadd( -101.509, 147.422, -20.7342, 0.29 ) }
    dend_28 { pt3dadd( -101.676, 147.544, -20.7786, 0.59 ) }
    dend_28 { pt3dadd( -102.089, 147.86, -20.8474, 0.59 ) }
    dend_28 { pt3dadd( -103.003, 148.505, -20.9516, 0.22 ) }
    dend_28 { pt3dadd( -103.85, 148.974, -21.0298, 0.66 ) }
    dend_28 { pt3dadd( -104.167, 149.141, -21.0466, 0.96 ) }
    dend_28 { pt3dadd( -104.646, 149.38, -21.0741, 0.81 ) }
    dend_28 { pt3dadd( -105.136, 149.596, -21.1071, 0.29 ) }
    dend_28 { pt3dadd( -106.203, 149.959, -21.2096, 0.29 ) }
    dend_28 { pt3dadd( -107.329, 150.166, -21.403, 1.84 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 87/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 73.5954, 167.578, -40.0956, 0.29 ) }
    dend_20 { pt3dadd( 81.7746, 172.845, -41.9717, 0.29 ) }
    dend_20 { pt3dadd( 91.2744, 175.978, -41.9769, 0.29 ) }
    dend_20 { pt3dadd( 100.537, 179.379, -40.3636, 0.29 ) }
    dend_20 { pt3dadd( 109.423, 183.315, -38.0866, 0.29 ) }
    dend_20 { pt3dadd( 118.241, 186.659, -34.7517, 0.29 ) }
    dend_20 { pt3dadd( 127.14, 190.811, -33.0154, 0.29 ) }
    dend_20 { pt3dadd( 136.275, 194.726, -32.105, 0.29 ) }
    dend_20 { pt3dadd( 145.03, 199.372, -31.2463, 0.29 ) }
    dend_20 { pt3dadd( 153.582, 203.945, -28.9931, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 73.5954, 167.578, -40.0956, 1.33 ) }
    dend_15 { pt3dadd( 82.2278, 173.052, -43.2987, 0.29 ) }
    dend_15 { pt3dadd( 91.1755, 178.376, -45.8566, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_15 { pt3dadd( 99.4983, 183.99, -49.567, 0.29 ) }
    dend_15 { pt3dadd( 106.808, 190.0, -54.5066, 0.29 ) }
    dend_15 { pt3dadd( 114.692, 194.977, -59.819, 0.29 ) }
    dend_15 { pt3dadd( 120.956, 200.44, -66.558, 0.29 ) }
    dend_15 { pt3dadd( 126.347, 206.717, -73.2607, 0.29 ) }
    dend_15 { pt3dadd( 132.996, 211.54, -80.1696, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.926236, 154.936, -14.144, 0.37 ) }
    dend_7 { pt3dadd( -1.93686, 156.532, -14.1202, 0.37 ) }
    dend_7 { pt3dadd( -2.24589, 157.067, -14.0986, 0.52 ) }
    dend_7 { pt3dadd( -2.27795, 157.141, -14.0961, 0.52 ) }
    dend_7 { pt3dadd( -2.45093, 157.648, -14.0777, 0.52 ) }
    dend_7 { pt3dadd( -2.59426, 158.164, -14.0779, 0.52 ) }
    dend_7 { pt3dadd( -2.74901, 158.921, -14.1433, 0.37 ) }
    dend_7 { pt3dadd( -2.75904, 159.093, -14.1659, 0.37 ) }
    dend_7 { pt3dadd( -2.76801, 160.154, -14.3645, 0.37 ) }
    dend_7 { pt3dadd( -2.75567, 160.874, -14.5177, 0.88 ) }
    dend_7 { pt3dadd( -2.72876, 161.613, -14.6902, 1.11 ) }
    dend_7 { pt3dadd( -2.64649, 163.372, -15.1149, 0.37 ) }
    dend_7 { pt3dadd( -2.59174, 164.915, -15.4636, 0.37 ) }
    dend_7 { pt3dadd( -2.57979, 165.846, -15.6798, 1.33 ) }
    dend_7 { pt3dadd( -2.5891, 166.334, -15.7896, 1.62 ) }
    dend_7 { pt3dadd( -2.61845, 166.956, -15.9267, 1.92 ) }
    dend_7 { pt3dadd( -2.67526, 167.711, -16.0785, 1.55 ) }
    dend_7 { pt3dadd( -2.8089, 169.013, -16.3592, 0.81 ) }
    dend_7 { pt3dadd( -2.96707, 170.477, -16.7251, 0.22 ) }
    dend_7 { pt3dadd( -3.03621, 171.211, -16.9209, 0.22 ) }
    dend_7 { pt3dadd( -3.12629, 172.383, -17.3036, 0.81 ) }
    dend_7 { pt3dadd( -3.14526, 172.693, -17.4216, 0.81 ) }
    dend_7 { pt3dadd( -3.18382, 174.107, -17.9677, 0.22 ) }
    dend_7 { pt3dadd( -3.16217, 174.973, -18.2955, 0.74 ) }
    dend_7 { pt3dadd( -3.13644, 175.362, -18.4282, 0.74 ) }
    dend_7 { pt3dadd( -2.93807, 177.203, -19.0374, 0.22 ) }
    dend_7 { pt3dadd( -2.91965, 177.333, -19.075, 0.22 ) }
    dend_7 { pt3dadd( -2.72564, 178.661, -19.3859, 0.88 ) }
    dend_7 { pt3dadd( -2.62531, 179.484, -19.5378, 1.55 ) }
    dend_7 { pt3dadd( -2.6192, 179.551, -19.5497, 1.55 ) }
    dend_7 { pt3dadd( -2.61884, 179.949, -19.6092, 1.55 ) }
    dend_7 { pt3dadd( -2.6707, 180.617, -19.6884, 1.25 ) }
    dend_7 { pt3dadd( -2.79907, 181.447, -19.8368, 0.88 ) }
    dend_7 { pt3dadd( -3.01705, 182.42, -20.0944, 0.22 ) }
    dend_7 { pt3dadd( -3.02913, 182.485, -20.1114, 0.22 ) }
    dend_7 { pt3dadd( -3.20623, 183.685, -20.3958, 0.22 ) }
    dend_7 { pt3dadd( -3.29467, 184.506, -20.5754, 0.22 ) }
    dend_7 { pt3dadd( -3.30173, 184.691, -20.6092, 0.22 ) }
    dend_7 { pt3dadd( -3.26323, 185.595, -20.7452, 0.22 ) }
    dend_7 { pt3dadd( -3.10162, 187.078, -20.8662, 0.96 ) }
    dend_7 { pt3dadd( -2.9942, 187.826, -20.9035, 1.33 ) }
    dend_7 { pt3dadd( -2.89401, 188.39, -20.9154, 0.74 ) }
    dend_7 { pt3dadd( -2.65551, 189.86, -20.9006, 0.22 ) }
    dend_7 { pt3dadd( -2.51419, 190.856, -20.867, 0.88 ) }
    dend_7 { pt3dadd( -2.35143, 192.329, -20.7836, 0.22 ) }
    dend_7 { pt3dadd( -2.34682, 192.397, -20.7782, 0.22 ) }
    dend_7 { pt3dadd( -2.3017, 193.492, -20.6836, 1.11 ) }
    dend_7 { pt3dadd( -2.30333, 194.091, -20.6304, 1.25 ) }
    dend_7 { pt3dadd( -2.3268, 194.829, -20.5724, 1.03 ) }
    dend_7 { pt3dadd( -2.3678, 195.647, -20.5198, 0.66 ) }
    dend_7 { pt3dadd( -2.41369, 196.585, -20.4959, 0.37 ) }
    dend_7 { pt3dadd( -2.45706, 197.266, -20.5213, 0.37 ) }
    dend_7 { pt3dadd( -2.54294, 198.384, -20.6284, 0.81 ) }
    dend_7 { pt3dadd( -2.61655, 198.975, -20.7113, 0.81 ) }
    dend_7 { pt3dadd( -2.63159, 199.041, -20.7242, 0.81 ) }
    dend_7 { pt3dadd( -2.85534, 199.657, -20.8856, 0.81 ) }
    dend_7 { pt3dadd( -3.45945, 200.872, -21.2952, 0.29 ) }
    dend_7 { pt3dadd( -3.49235, 200.929, -21.3173, 0.29 ) }
    dend_7 { pt3dadd( -3.97219, 201.672, -21.6556, 0.29 ) }
    dend_7 { pt3dadd( -4.48174, 202.459, -22.0257, 0.29 ) }
    dend_7 { pt3dadd( -4.90153, 203.128, -22.3431, 0.66 ) }
    dend_7 { pt3dadd( -5.19743, 203.628, -22.5709, 0.74 ) }
    dend_7 { pt3dadd( -5.6462, 204.532, -22.9605, 0.74 ) }
    dend_7 { pt3dadd( -5.96853, 205.313, -23.2933, 0.96 ) }
    dend_7 { pt3dadd( -6.09204, 205.691, -23.4561, 1.25 ) }
    dend_7 { pt3dadd( -6.10962, 205.754, -23.4809, 1.25 ) }
    dend_7 { pt3dadd( -6.24557, 206.25, -23.643, 1.25 ) }
    dend_7 { pt3dadd( -6.76206, 208.025, -24.1833, 0.22 ) }
    dend_7 { pt3dadd( -6.95799, 208.667, -24.3713, 0.22 ) }
    dend_7 { pt3dadd( -7.2065, 209.468, -24.5923, 1.03 ) }
    dend_7 { pt3dadd( -7.37235, 209.975, -24.7312, 1.11 ) }
    dend_7 { pt3dadd( -7.78383, 211.227, -25.0644, 0.22 ) }
    dend_7 { pt3dadd( -8.29157, 212.683, -25.5119, 0.22 ) }
    dend_7 { pt3dadd( -8.31429, 212.755, -25.5366, 0.22 ) }
    dend_7 { pt3dadd( -8.50834, 213.405, -25.7848, 0.22 ) }
    dend_7 { pt3dadd( -8.78526, 214.549, -26.275, 1.03 ) }
    dend_7 { pt3dadd( -8.85868, 214.925, -26.4554, 1.18 ) }
    dend_7 { pt3dadd( -9.08367, 216.564, -27.3668, 0.15 ) }
    dend_7 { pt3dadd( -9.14256, 217.48, -27.8872, 0.29 ) }
    dend_7 { pt3dadd( -9.14433, 217.552, -27.9294, 0.29 ) }
    dend_7 { pt3dadd( -9.11646, 218.703, -28.6381, 0.22 ) }
    dend_7 { pt3dadd( -9.11377, 218.762, -28.6729, 0.22 ) }
    dend_7 { pt3dadd( -9.05995, 219.932, -29.2772, 0.88 ) }
    dend_7 { pt3dadd( -9.03001, 220.385, -29.4658, 1.11 ) }
    dend_7 { pt3dadd( -9.01505, 220.867, -29.6469, 0.74 ) }
    dend_7 { pt3dadd( -8.96553, 221.723, -29.9411, 0.22 ) }
    dend_7 { pt3dadd( -8.88118, 222.771, -30.2519, 0.22 ) }
    dend_7 { pt3dadd( -8.81902, 223.324, -30.3921, 0.66 ) }
    dend_7 { pt3dadd( -8.74408, 223.912, -30.5195, 0.66 ) }
    dend_7 { pt3dadd( -8.73311, 224.003, -30.5395, 0.66 ) }
    dend_7 { pt3dadd( -8.63729, 224.885, -30.7219, 0.29 ) }
    dend_7 { pt3dadd( -8.62726, 225.033, -30.7487, 0.29 ) }
    dend_7 { pt3dadd( -8.5581, 226.727, -31.0308, 0.22 ) }
    dend_7 { pt3dadd( -8.54646, 227.871, -31.1923, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_7 { pt3dadd( -8.56283, 228.467, -31.2691, 1.69 ) }
    dend_7 { pt3dadd( -8.61691, 229.335, -31.3659, 1.84 ) }
    dend_7 { pt3dadd( -8.77096, 231.054, -31.5487, 0.22 ) }
    dend_7 { pt3dadd( -8.87279, 232.044, -31.6513, 0.22 ) }
    dend_7 { pt3dadd( -9.02675, 233.234, -31.7551, 0.22 ) }
    dend_7 { pt3dadd( -9.12027, 233.814, -31.7914, 0.66 ) }
    dend_7 { pt3dadd( -9.20527, 234.304, -31.8233, 1.11 ) }
    dend_7 { pt3dadd( -9.52609, 235.991, -31.9346, 0.22 ) }
    dend_7 { pt3dadd( -9.66539, 236.651, -31.9735, 0.22 ) }
    dend_7 { pt3dadd( -9.9066, 237.617, -32.0233, 1.33 ) }
    dend_7 { pt3dadd( -10.1336, 238.484, -32.0588, 1.92 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.926236, 154.936, -14.144, 0.22 ) }
    dend_4 { pt3dadd( -0.247527, 156.025, -14.5932, 0.22 ) }
    dend_4 { pt3dadd( 0.346141, 156.952, -14.9833, 0.44 ) }
    dend_4 { pt3dadd( 0.376572, 157.0, -15.0056, 0.44 ) }
    dend_4 { pt3dadd( 1.023, 158.019, -15.4973, 0.22 ) }
    dend_4 { pt3dadd( 1.04887, 158.059, -15.5178, 0.22 ) }
    dend_4 { pt3dadd( 1.8275, 159.241, -16.205, 0.22 ) }
    dend_4 { pt3dadd( 1.85232, 159.28, -16.2296, 0.22 ) }
    dend_4 { pt3dadd( 2.32453, 159.984, -16.7299, 0.22 ) }
    dend_4 { pt3dadd( 2.35426, 160.027, -16.7608, 0.22 ) }
    dend_4 { pt3dadd( 3.11239, 161.028, -17.5167, 0.66 ) }
    dend_4 { pt3dadd( 3.55365, 161.622, -17.9871, 0.81 ) }
    dend_4 { pt3dadd( 7.52049, 168.878, -20.246, 0.81 ) }
    dend_4 { pt3dadd( 12.841, 175.466, -21.9153, 0.81 ) }
    dend_4 { pt3dadd( 18.2495, 182.172, -22.2304, 0.81 ) }
    dend_4 { pt3dadd( 22.8284, 189.396, -22.8521, 0.81 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 48.0151, 68.7428, 9.08671, 0.52 ) }
    dend_66 { pt3dadd( 45.0166, 69.2237, 10.6421, 0.52 ) }
    dend_66 { pt3dadd( 43.7618, 69.3677, 11.3594, 0.52 ) }
    dend_66 { pt3dadd( 42.9468, 69.391, 11.8418, 0.59 ) }
    dend_66 { pt3dadd( 42.3847, 69.3559, 12.182, 0.59 ) }
    dend_66 { pt3dadd( 41.6065, 69.2207, 12.6711, 0.44 ) }
    dend_66 { pt3dadd( 41.4565, 69.1765, 12.772, 0.44 ) }
    dend_66 { pt3dadd( 40.2272, 68.2676, 13.6034, 0.44 ) }
    dend_66 { pt3dadd( 39.6942, 67.7403, 14.071, 0.44 ) }
    dend_66 { pt3dadd( 39.3249, 67.2955, 14.4648, 0.74 ) }
    dend_66 { pt3dadd( 38.872, 66.6432, 15.0269, 0.88 ) }
    dend_66 { pt3dadd( 38.562, 66.0544, 15.4793, 1.62 ) }
    dend_66 { pt3dadd( 38.3814, 65.5994, 15.7554, 1.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 40/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 48.0151, 68.7428, 9.08671, 0.81 ) }
    dend_65 { pt3dadd( 49.0076, 69.7582, 9.41378, 0.81 ) }
    dend_65 { pt3dadd( 49.8781, 70.9902, 9.85589, 1.11 ) }
    dend_65 { pt3dadd( 50.2959, 71.8773, 10.2316, 1.33 ) }
    dend_65 { pt3dadd( 50.5739, 72.8317, 10.6362, 1.55 ) }
    dend_65 { pt3dadd( 50.5823, 72.8948, 10.6684, 1.55 ) }
    dend_65 { pt3dadd( 50.7212, 75.413, 12.0646, 0.96 ) }
    dend_65 { pt3dadd( 50.5363, 76.892, 12.94, 1.84 ) }
    dend_65 { pt3dadd( 50.1236, 78.3359, 13.8721, 0.96 ) }
    dend_65 { pt3dadd( 49.7837, 79.2012, 14.4735, 0.52 ) }
    dend_65 { pt3dadd( 48.9975, 80.7827, 15.6196, 0.52 ) }
    dend_65 { pt3dadd( 48.9722, 80.8259, 15.6517, 0.52 ) }
    dend_65 { pt3dadd( 48.6418, 81.3114, 16.0809, 0.74 ) }
    dend_65 { pt3dadd( 48.2226, 81.957, 16.7299, 0.74 ) }
    dend_65 { pt3dadd( 48.1824, 82.0372, 16.809, 0.74 ) }
    dend_65 { pt3dadd( 47.8295, 82.8658, 17.6279, 0.88 ) }
    dend_65 { pt3dadd( 47.3859, 84.0662, 18.7683, 0.74 ) }
    dend_65 { pt3dadd( 46.819, 85.839, 20.4968, 0.44 ) }
    dend_65 { pt3dadd( 46.6955, 86.5812, 21.2754, 0.44 ) }
    dend_65 { pt3dadd( 46.7153, 86.9021, 21.622, 0.29 ) }
    dend_65 { pt3dadd( 46.7415, 86.9806, 21.7073, 0.29 ) }
    dend_65 { pt3dadd( 46.9545, 87.2423, 21.9799, 0.29 ) }
    dend_65 { pt3dadd( 47.019, 87.2936, 22.0257, 0.29 ) }
    dend_65 { pt3dadd( 48.6975, 88.3627, 22.8511, 1.03 ) }
    dend_65 { pt3dadd( 49.6448, 88.9118, 23.3268, 0.52 ) }
    dend_65 { pt3dadd( 50.37, 89.3304, 23.6957, 1.25 ) }
    dend_65 { pt3dadd( 51.2792, 89.8676, 24.1506, 0.44 ) }
    dend_65 { pt3dadd( 51.8461, 90.2178, 24.4262, 1.11 ) }
    dend_65 { pt3dadd( 52.3013, 90.497, 24.6212, 1.11 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 69/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 36.8821, 50.7907, 24.1097, 0.59 ) }
    dend_63 { pt3dadd( 36.8134, 50.6524, 26.1999, 0.59 ) }
    dend_63 { pt3dadd( 36.6702, 50.6384, 27.4056, 0.59 ) }
    dend_63 { pt3dadd( 36.5307, 50.6455, 28.3399, 0.66 ) }
    dend_63 { pt3dadd( 36.0937, 50.7299, 30.8904, 1.84 ) }
    dend_63 { pt3dadd( 36.0251, 50.7471, 31.2635, 2.73 ) }
    dend_63 { pt3dadd( 34.5533, 50.9871, 39.3946, 0.96 ) }
    dend_63 { pt3dadd( 34.3324, 51.0306, 40.5609, 0.96 ) }
    dend_63 { pt3dadd( 34.3207, 51.0333, 40.6236, 0.96 ) }
    dend_63 { pt3dadd( 33.8879, 51.0862, 43.1574, 1.18 ) }
    dend_63 { pt3dadd( 33.8729, 51.0835, 43.2439, 1.18 ) }
    dend_63 { pt3dadd( 33.7399, 50.8912, 44.782, 0.88 ) }
    dend_63 { pt3dadd( 34.1341, 49.9294, 46.8285, 0.81 ) }
    dend_63 { pt3dadd( 34.1546, 49.8893, 46.8999, 0.81 ) }
    dend_63 { pt3dadd( 34.5393, 49.2479, 47.9949, 0.66 ) }
    dend_63 { pt3dadd( 34.5611, 49.2154, 48.0438, 0.66 ) }
    dend_63 { pt3dadd( 35.0705, 48.4876, 49.204, 1.4 ) }
    dend_63 { pt3dadd( 35.2848, 48.2051, 49.7121, 1.62 ) }
    dend_63 { pt3dadd( 35.6952, 47.674, 50.6507, 1.62 ) }
    dend_63 { pt3dadd( 36.6168, 46.5011, 52.7472, 0.81 ) }
    dend_63 { pt3dadd( 36.92, 46.1381, 53.4104, 0.81 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 90/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 36.8821, 50.7907, 24.1097, 0.44 ) }
    dend_62 { pt3dadd( 37.9215, 50.6726, 24.3873, 0.44 ) }
    dend_62 { pt3dadd( 38.0382, 50.6594, 24.4184, 0.44 ) }
    dend_62 { pt3dadd( 38.5709, 50.5989, 24.5607, 0.44 ) }
    dend_62 { pt3dadd( 38.6354, 50.5915, 24.5779, 0.44 ) }
    dend_62 { pt3dadd( 39.9332, 50.4441, 24.9245, 0.81 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 96/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 120.001, 69.002, -99.7672, 0.29 ) }
    dend_59 { pt3dadd( 127.081, 71.2963, -107.894, 0.29 ) }
    dend_59 { pt3dadd( 134.96, 72.0548, -115.573, 0.29 ) }
    dend_59 { pt3dadd( 142.514, 74.5297, -123.194, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 120.001, 69.002, -99.7672, 1.33 ) }
    dend_56 { pt3dadd( 130.883, 70.9841, -109.112, 0.29 ) }
    dend_56 { pt3dadd( 142.175, 73.4065, -117.83, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 3/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 64.4248, 49.1899, -69.5948, 0.52 ) }
    dend_54 { pt3dadd( 64.701, 47.9658, -70.2022, 0.52 ) }
    dend_54 { pt3dadd( 64.8246, 47.4175, -70.4742, 0.66 ) }
    dend_54 { pt3dadd( 64.9573, 46.8296, -70.7659, 0.52 ) }
    dend_54 { pt3dadd( 64.9689, 46.7781, -70.7915, 0.52 ) }
    dend_54 { pt3dadd( 65.2415, 45.5694, -71.3912, 0.74 ) }
    dend_54 { pt3dadd( 66.4468, 38.7873, -75.5723, 0.74 ) }
    dend_54 { pt3dadd( 68.3346, 32.8456, -80.7652, 0.74 ) }
    dend_54 { pt3dadd( 70.3514, 26.3539, -85.1665, 0.74 ) }
    dend_54 { pt3dadd( 72.157, 18.8872, -87.648, 0.74 ) }
    dend_54 { pt3dadd( 73.885, 11.5794, -90.6001, 0.74 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 14/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 64.4248, 49.1899, -69.5948, 0.52 ) }
    dend_53 { pt3dadd( 65.5637, 50.9651, -70.4384, 0.52 ) }
    dend_53 { pt3dadd( 66.4999, 52.448, -71.1075, 1.62 ) }
    dend_53 { pt3dadd( 67.0404, 53.3095, -71.471, 1.92 ) }
    dend_53 { pt3dadd( 67.4866, 54.0132, -71.7402, 1.77 ) }
    dend_53 { pt3dadd( 68.9748, 56.3389, -72.5876, 0.66 ) }
    dend_53 { pt3dadd( 69.2931, 56.9446, -72.844, 0.66 ) }
    dend_53 { pt3dadd( 69.6053, 57.682, -73.1398, 1.18 ) }
    dend_53 { pt3dadd( 69.7554, 58.1633, -73.3536, 1.55 ) }
    dend_53 { pt3dadd( 70.0271, 59.1445, -73.7988, 1.55 ) }
    dend_53 { pt3dadd( 70.0414, 59.2132, -73.8298, 1.55 ) }
    dend_53 { pt3dadd( 70.658, 62.6017, -75.1007, 0.37 ) }
    dend_53 { pt3dadd( 70.773, 63.3715, -75.3522, 1.25 ) }
    dend_53 { pt3dadd( 70.8675, 64.1067, -75.5507, 1.92 ) }
    dend_53 { pt3dadd( 70.9455, 64.7579, -75.6918, 1.99 ) }
    dend_53 { pt3dadd( 70.9389, 66.754, -76.2235, 0.66 ) }
    dend_53 { pt3dadd( 70.8564, 68.1903, -76.6244, 0.44 ) }
    dend_53 { pt3dadd( 70.8305, 68.7887, -76.7951, 0.96 ) }
    dend_53 { pt3dadd( 70.804, 69.3291, -77.0139, 1.11 ) }
    dend_53 { pt3dadd( 70.8022, 69.378, -77.0417, 1.11 ) }
    dend_53 { pt3dadd( 70.861, 73.2427, -79.7777, 0.52 ) }
    dend_53 { pt3dadd( 70.8653, 73.3512, -79.8732, 0.52 ) }
    dend_53 { pt3dadd( 70.9037, 74.4914, -80.9816, 1.77 ) }
    dend_53 { pt3dadd( 70.9254, 74.9403, -81.4438, 2.06 ) }
    dend_53 { pt3dadd( 70.8329, 76.5942, -83.2472, 0.29 ) }
    dend_53 { pt3dadd( 70.6734, 77.4008, -84.2285, 0.52 ) }
    dend_53 { pt3dadd( 70.1971, 78.9823, -86.4167, 0.59 ) }
    dend_53 { pt3dadd( 70.1848, 79.0139, -86.4629, 0.59 ) }
    dend_53 { pt3dadd( 69.9912, 79.4283, -87.0813, 0.59 ) }
    dend_53 { pt3dadd( 68.331, 82.6095, -91.8918, 1.25 ) }
    dend_53 { pt3dadd( 66.5857, 85.5284, -96.4806, 0.96 ) }
    dend_53 { pt3dadd( 66.0809, 86.2894, -97.7203, 0.96 ) }
    dend_53 { pt3dadd( 66.0614, 86.3171, -97.7664, 0.96 ) }
    dend_53 { pt3dadd( 67.52, 93.5034, -103.687, 0.96 ) }
    dend_53 { pt3dadd( 68.8294, 101.255, -108.811, 0.96 ) }
    dend_53 { pt3dadd( 70.2901, 109.515, -112.887, 0.96 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 50/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 17.9404, 238.632, -8.72799, 0.74 ) }
    dend_44 { pt3dadd( 17.3166, 239.832, -8.37887, 0.74 ) }
    dend_44 { pt3dadd( 17.1185, 240.266, -8.26418, 1.03 ) }
    dend_44 { pt3dadd( 16.8562, 240.836, -8.19115, 0.74 ) }
    dend_44 { pt3dadd( 16.2516, 242.119, -8.13593, 0.44 ) }
    dend_44 { pt3dadd( 15.9875, 242.677, -8.13489, 1.11 ) }
    dend_44 { pt3dadd( 15.8096, 243.075, -8.14604, 1.77 ) }
    dend_44 { pt3dadd( 15.601, 243.607, -8.18842, 2.06 ) }
    dend_44 { pt3dadd( 15.1473, 244.866, -8.48626, 0.52 ) }
    dend_44 { pt3dadd( 14.9125, 245.584, -8.70976, 0.52 ) }
    dend_44 { pt3dadd( 14.8994, 245.632, -8.72783, 0.52 ) }
    dend_44 { pt3dadd( 14.7088, 246.381, -8.9908, 1.03 ) }
    dend_44 { pt3dadd( 14.6199, 246.768, -9.1061, 1.33 ) }
    dend_44 { pt3dadd( 14.2972, 248.347, -9.4694, 0.96 ) }
    dend_44 { pt3dadd( 14.1628, 249.253, -9.60233, 0.74 ) }
    dend_44 { pt3dadd( 14.0709, 249.939, -9.66485, 0.37 ) }
    dend_44 { pt3dadd( 13.9915, 250.573, -9.69274, 0.37 ) }
    dend_44 { pt3dadd( 13.8751, 251.343, -9.68887, 1.03 ) }
    dend_44 { pt3dadd( 13.7654, 251.96, -9.61315, 1.4 ) }
    dend_44 { pt3dadd( 13.6682, 252.469, -9.49672, 1.69 ) }
    dend_44 { pt3dadd( 13.4448, 253.518, -9.25552, 0.37 ) }
    dend_44 { pt3dadd( 13.2809, 254.223, -9.04599, 0.37 ) }
    dend_44 { pt3dadd( 13.1382, 254.753, -8.85311, 0.37 ) }
    dend_44 { pt3dadd( 12.7524, 255.994, -8.26681, 0.66 ) }
    dend_44 { pt3dadd( 12.6991, 256.138, -8.1885, 1.62 ) }
    dend_44 { pt3dadd( 12.4976, 256.579, -7.93251, 1.84 ) }
    dend_44 { pt3dadd( 12.2978, 256.95, -7.71321, 1.55 ) }
    dend_44 { pt3dadd( 12.2708, 256.993, -7.69053, 1.55 ) }
    dend_44 { pt3dadd( 11.5661, 257.966, -7.25064, 0.81 ) }
    dend_44 { pt3dadd( 11.1362, 258.465, -7.07818, 1.55 ) }
    dend_44 { pt3dadd( 10.7171, 258.871, -6.89569, 2.21 ) }
    dend_44 { pt3dadd( 10.4967, 259.047, -6.80822, 1.92 ) }
    dend_44 { pt3dadd( 9.48685, 259.696, -6.46391, 0.37 ) }
    dend_44 { pt3dadd( 8.89018, 259.972, -6.29148, 0.29 ) }
    dend_44 { pt3dadd( 8.84494, 259.984, -6.27699, 0.29 ) }
    dend_44 { pt3dadd( 7.40106, 260.205, -5.70136, 0.81 ) }
    dend_44 { pt3dadd( 6.88229, 260.238, -5.46817, 1.18 ) }
    dend_44 { pt3dadd( 6.38791, 260.234, -5.23161, 0.81 ) }
    dend_44 { pt3dadd( 5.65654, 260.171, -4.76717, 0.44 ) }
    dend_44 { pt3dadd( 4.53738, 260.072, -3.99054, 1.69 ) }
    dend_44 { pt3dadd( 4.49577, 260.068, -3.96479, 1.69 ) }
    dend_44 { pt3dadd( 4.16663, 260.041, -3.78354, 1.99 ) }
    dend_44 { pt3dadd( 3.88608, 260.032, -3.62684, 1.84 ) }
    dend_44 { pt3dadd( 2.38106, 260.145, -2.7735, 1.11 ) }
    dend_44 { pt3dadd( 1.66637, 260.298, -2.44548, 0.29 ) }
    dend_44 { pt3dadd( 0.599357, 260.711, -2.16979, 0.52 ) }
    dend_44 { pt3dadd( 0.550843, 260.739, -2.16237, 0.52 ) }
    dend_44 { pt3dadd( 0.197677, 261.065, -2.25776, 0.74 ) }
    dend_44 { pt3dadd( -0.413797, 261.729, -2.53781, 0.96 ) }
    dend_44 { pt3dadd( -0.903774, 262.358, -2.89493, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_44 { pt3dadd( -1.26081, 262.926, -3.21476, 0.81 ) }
    dend_44 { pt3dadd( -1.52868, 263.422, -3.49013, 0.81 ) }
    dend_44 { pt3dadd( -2.46608, 265.178, -4.60081, 0.29 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 17.9404, 238.632, -8.72799, 1.18 ) }
    dend_43 { pt3dadd( 18.5781, 240.776, -9.4198, 1.18 ) }
    dend_43 { pt3dadd( 18.8751, 241.724, -9.66837, 0.52 ) }
    dend_43 { pt3dadd( 19.2052, 242.741, -9.91199, 1.11 ) }
    dend_43 { pt3dadd( 19.5325, 243.774, -10.1136, 0.59 ) }
    dend_43 { pt3dadd( 19.8111, 244.673, -10.2619, 1.92 ) }
    dend_43 { pt3dadd( 20.0418, 245.435, -10.4472, 1.55 ) }
    dend_43 { pt3dadd( 20.43, 246.741, -10.7229, 0.59 ) }
    dend_43 { pt3dadd( 20.4476, 246.803, -10.7426, 0.59 ) }
    dend_43 { pt3dadd( 20.5992, 247.494, -11.2111, 0.37 ) }
    dend_43 { pt3dadd( 20.6094, 247.588, -11.3047, 0.37 ) }
    dend_43 { pt3dadd( 20.6233, 249.085, -13.3391, 0.37 ) }
    dend_43 { pt3dadd( 20.6013, 249.354, -13.7636, 0.96 ) }
    dend_43 { pt3dadd( 20.5093, 249.738, -14.4711, 0.96 ) }
    dend_43 { pt3dadd( 20.0725, 251.106, -17.1435, 0.52 ) }
    dend_43 { pt3dadd( 19.9399, 251.442, -17.8003, 0.52 ) }
    dend_43 { pt3dadd( 19.5804, 252.238, -19.2847, 1.25 ) }
    dend_43 { pt3dadd( 19.4573, 252.464, -19.6663, 1.47 ) }
    dend_43 { pt3dadd( 18.8151, 253.614, -21.4731, 0.88 ) }
    dend_43 { pt3dadd( 18.7885, 253.662, -21.539, 0.88 ) }
    dend_43 { pt3dadd( 18.4466, 254.349, -22.203, 0.74 ) }
    dend_43 { pt3dadd( 18.416, 254.422, -22.2606, 0.74 ) }
    dend_43 { pt3dadd( 17.8662, 256.086, -23.2268, 0.22 ) }
    dend_43 { pt3dadd( 17.679, 256.884, -23.6046, 1.25 ) }
    dend_43 { pt3dadd( 17.6115, 257.427, -23.7888, 1.47 ) }
    dend_43 { pt3dadd( 17.5442, 258.607, -24.2176, 0.44 ) }
    dend_43 { pt3dadd( 17.5471, 259.309, -24.4783, 0.44 ) }
    dend_43 { pt3dadd( 17.584, 260.043, -24.7392, 0.88 ) }
    dend_43 { pt3dadd( 17.6231, 260.432, -24.8587, 1.18 ) }
    dend_43 { pt3dadd( 17.7038, 261.148, -25.1035, 0.88 ) }
    dend_43 { pt3dadd( 17.9524, 262.673, -25.6524, 0.44 ) }
    dend_43 { pt3dadd( 18.0314, 263.062, -25.7951, 0.59 ) }
    dend_43 { pt3dadd( 18.0459, 263.132, -25.8199, 0.59 ) }
    dend_43 { pt3dadd( 18.1869, 263.827, -26.159, 0.37 ) }
    dend_43 { pt3dadd( 18.2136, 263.944, -26.2231, 0.37 ) }
    dend_43 { pt3dadd( 18.4328, 264.783, -26.6695, 0.88 ) }
    dend_43 { pt3dadd( 18.5486, 265.208, -26.878, 1.18 ) }
    dend_43 { pt3dadd( 18.6913, 265.824, -27.1683, 1.33 ) }
    dend_43 { pt3dadd( 19.0637, 267.586, -27.9747, 1.11 ) }
    dend_43 { pt3dadd( 19.2915, 268.699, -28.4737, 0.37 ) }
    dend_43 { pt3dadd( 19.508, 269.807, -28.9428, 0.29 ) }
    dend_43 { pt3dadd( 19.5871, 270.269, -29.1164, 0.29 ) }
    dend_43 { pt3dadd( 19.7441, 271.177, -29.3989, 1.4 ) }
    dend_43 { pt3dadd( 19.7845, 271.402, -29.4639, 1.62 ) }
    dend_43 { pt3dadd( 20.0217, 272.615, -29.7582, 0.29 ) }
    dend_43 { pt3dadd( 20.162, 273.304, -30.0092, 0.96 ) }
    dend_43 { pt3dadd( 20.434, 274.547, -30.5497, 0.22 ) }
    dend_43 { pt3dadd( 20.6212, 275.335, -30.9208, 0.22 ) }
    dend_43 { pt3dadd( 20.9504, 276.812, -31.7312, 1.55 ) }
    dend_43 { pt3dadd( 21.0288, 277.226, -31.9723, 1.69 ) }
    dend_43 { pt3dadd( 21.3389, 279.238, -33.1766, 0.22 ) }
    dend_43 { pt3dadd( 21.4483, 280.004, -33.647, 0.88 ) }
    dend_43 { pt3dadd( 21.5195, 280.411, -33.8979, 0.88 ) }
    dend_43 { pt3dadd( 21.7955, 281.723, -34.7324, 0.37 ) }
    dend_43 { pt3dadd( 22.0424, 282.633, -35.2906, 0.15 ) }
    dend_43 { pt3dadd( 22.3331, 283.511, -35.8006, 1.55 ) }
    dend_43 { pt3dadd( 22.5103, 283.951, -36.0245, 1.55 ) }
    dend_43 { pt3dadd( 22.9239, 284.896, -36.4869, 0.29 ) }
    dend_43 { pt3dadd( 23.4305, 285.963, -36.9707, 1.03 ) }
    dend_43 { pt3dadd( 23.6864, 286.452, -37.1572, 1.18 ) }
    dend_43 { pt3dadd( 24.2484, 287.633, -37.5914, 0.15 ) }
    dend_43 { pt3dadd( 24.3811, 287.998, -37.7218, 0.59 ) }
    dend_43 { pt3dadd( 24.5374, 288.666, -37.8588, 0.29 ) }
    dend_43 { pt3dadd( 24.5452, 288.721, -37.8624, 0.29 ) }
    dend_43 { pt3dadd( 24.5761, 289.066, -37.8424, 0.52 ) }
    dend_43 { pt3dadd( 24.6084, 290.117, -37.6847, 0.22 ) }
    dend_43 { pt3dadd( 24.5996, 291.092, -37.479, 0.22 ) }
    dend_43 { pt3dadd( 24.5885, 292.706, -37.1181, 0.88 ) }
    dend_43 { pt3dadd( 24.5845, 293.105, -37.0199, 1.11 ) }
    dend_43 { pt3dadd( 24.5816, 293.522, -36.9156, 1.33 ) }
    dend_43 { pt3dadd( 24.6006, 294.954, -36.4856, 0.22 ) }
    dend_43 { pt3dadd( 24.6614, 296.061, -36.1208, 0.22 ) }
    dend_43 { pt3dadd( 24.7344, 296.906, -35.8425, 0.22 ) }
    dend_43 { pt3dadd( 24.7849, 297.397, -35.7093, 0.74 ) }
    dend_43 { pt3dadd( 24.8481, 297.988, -35.5592, 0.88 ) }
    dend_43 { pt3dadd( 25.0308, 299.539, -35.2085, 0.22 ) }
    dend_43 { pt3dadd( 25.1482, 300.416, -35.0424, 0.22 ) }
    dend_43 { pt3dadd( 25.2295, 301.029, -34.9305, 0.81 ) }
    dend_43 { pt3dadd( 25.2695, 301.492, -34.8377, 1.11 ) }
    dend_43 { pt3dadd( 25.3338, 302.775, -34.5989, 0.22 ) }
    dend_43 { pt3dadd( 25.3422, 303.531, -34.4672, 0.66 ) }
    dend_43 { pt3dadd( 25.3412, 303.586, -34.4599, 0.66 ) }
    dend_43 { pt3dadd( 25.3365, 303.931, -34.4102, 0.88 ) }
    dend_43 { pt3dadd( 25.3453, 305.829, -34.1284, 0.22 ) }
    dend_43 { pt3dadd( 25.3945, 306.75, -33.9981, 1.25 ) }
    dend_43 { pt3dadd( 25.4471, 307.212, -33.9384, 1.25 ) }
    dend_43 { pt3dadd( 25.6818, 308.414, -33.8214, 0.15 ) }
    dend_43 { pt3dadd( 25.8344, 308.96, -33.7906, 0.74 ) }
    dend_43 { pt3dadd( 25.8579, 309.021, -33.7906, 0.74 ) }
    dend_43 { pt3dadd( 26.3884, 309.952, -33.8821, 0.15 ) }
    dend_43 { pt3dadd( 26.6296, 310.29, -33.9215, 0.37 ) }
    dend_43 { pt3dadd( 27.3213, 311.118, -34.0798, 0.15 ) }
    dend_43 { pt3dadd( 27.7468, 311.585, -34.1591, 0.59 ) }
    dend_43 { pt3dadd( 27.8367, 311.686, -34.1737, 0.59 ) }
    dend_43 { pt3dadd( 28.5718, 312.559, -34.2789, 0.15 ) }
    dend_43 { pt3dadd( 29.2518, 313.375, -34.3664, 1.4 ) }
    dend_43 { pt3dadd( 30.0789, 314.391, -34.4585, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_43 { pt3dadd( 30.9196, 315.471, -34.431, 0.22 ) }
    dend_43 { pt3dadd( 31.4233, 316.129, -34.354, 0.37 ) }
    dend_43 { pt3dadd( 32.1657, 317.147, -34.1604, 1.03 ) }
    dend_43 { pt3dadd( 32.4964, 317.638, -34.0241, 1.4 ) }
    dend_43 { pt3dadd( 32.5247, 317.684, -34.0082, 1.4 ) }
    dend_43 { pt3dadd( 33.423, 319.342, -33.4134, 0.29 ) }
    dend_43 { pt3dadd( 33.5896, 319.681, -33.2417, 0.59 ) }
    dend_43 { pt3dadd( 33.9978, 320.611, -32.5842, 0.22 ) }
    dend_43 { pt3dadd( 34.1635, 321.097, -32.153, 0.96 ) }
    dend_43 { pt3dadd( 34.2695, 321.482, -31.7742, 1.11 ) }
    dend_43 { pt3dadd( 34.4243, 322.377, -30.8053, 0.22 ) }
    dend_43 { pt3dadd( 34.5699, 324.325, -28.4065, 1.25 ) }
    dend_43 { pt3dadd( 34.5928, 325.069, -27.3998, 1.55 ) }
    dend_43 { pt3dadd( 34.5983, 325.965, -26.1539, 0.96 ) }
    dend_43 { pt3dadd( 34.5996, 326.067, -26.0141, 0.96 ) }
    dend_43 { pt3dadd( 34.6513, 327.29, -24.3188, 0.22 ) }
    dend_43 { pt3dadd( 34.7459, 328.505, -22.7249, 0.96 ) }
    dend_43 { pt3dadd( 34.7872, 328.796, -22.4189, 1.55 ) }
    dend_43 { pt3dadd( 35.0181, 329.766, -21.5415, 0.74 ) }
    dend_43 { pt3dadd( 35.1784, 330.162, -21.2255, 0.96 ) }
    dend_43 { pt3dadd( 35.9709, 331.661, -20.1808, 0.59 ) }
    dend_43 { pt3dadd( 36.4015, 332.278, -19.8376, 0.29 ) }
    dend_43 { pt3dadd( 36.6975, 332.667, -19.6643, 0.96 ) }
    dend_43 { pt3dadd( 37.1863, 333.287, -19.403, 1.11 ) }
    dend_43 { pt3dadd( 38.4221, 334.82, -18.8233, 0.29 ) }
    dend_43 { pt3dadd( 38.9252, 335.454, -18.6375, 0.29 ) }
    dend_43 { pt3dadd( 39.5845, 336.314, -18.4985, 0.29 ) }
    dend_43 { pt3dadd( 40.0751, 336.983, -18.4064, 0.81 ) }
    dend_43 { pt3dadd( 40.1492, 337.096, -18.4066, 0.81 ) }
    dend_43 { pt3dadd( 40.4141, 337.574, -18.4772, 0.81 ) }
    dend_43 { pt3dadd( 40.4413, 337.635, -18.4945, 0.81 ) }
    dend_43 { pt3dadd( 40.7377, 338.354, -18.77, 1.03 ) }
    dend_43 { pt3dadd( 41.0011, 339.0, -19.0581, 1.69 ) }
    dend_43 { pt3dadd( 41.6819, 340.609, -19.841, 0.52 ) }
    dend_43 { pt3dadd( 41.9555, 341.238, -20.1587, 0.37 ) }
    dend_43 { pt3dadd( 42.3786, 342.161, -20.5889, 0.52 ) }
    dend_43 { pt3dadd( 42.9489, 343.325, -21.0724, 0.29 ) }
    dend_43 { pt3dadd( 43.182, 343.738, -21.2053, 0.29 ) }
    dend_43 { pt3dadd( 43.4498, 344.131, -21.2842, 0.29 ) }
    dend_43 { pt3dadd( 43.5308, 344.224, -21.2756, 0.29 ) }
    dend_43 { pt3dadd( 44.5314, 345.167, -21.0644, 1.11 ) }
    dend_43 { pt3dadd( 45.0665, 345.634, -20.9242, 1.4 ) }
    dend_43 { pt3dadd( 46.2148, 346.616, -20.5842, 0.29 ) }
    dend_43 { pt3dadd( 46.8549, 347.165, -20.4105, 0.29 ) }
    dend_43 { pt3dadd( 48.3997, 348.485, -19.9797, 0.88 ) }
    dend_43 { pt3dadd( 49.6191, 349.539, -19.6566, 0.22 ) }
    dend_43 { pt3dadd( 50.3147, 350.133, -19.4954, 0.66 ) }
    dend_43 { pt3dadd( 50.5356, 350.322, -19.4437, 0.66 ) }
    dend_43 { pt3dadd( 51.047, 350.759, -19.3345, 0.29 ) }
    dend_43 { pt3dadd( 52.0657, 351.644, -19.0828, 0.96 ) }
    dend_43 { pt3dadd( 52.4793, 352.018, -18.9748, 0.96 ) }
    dend_43 { pt3dadd( 53.1383, 352.648, -18.7431, 0.22 ) }
    dend_43 { pt3dadd( 53.59, 353.092, -18.5805, 0.81 ) }
    dend_43 { pt3dadd( 54.1315, 353.63, -18.3956, 0.44 ) }
    dend_43 { pt3dadd( 55.0518, 354.603, -18.0257, 0.96 ) }
    dend_43 { pt3dadd( 55.8586, 355.523, -17.6965, 0.22 ) }
    dend_43 { pt3dadd( 56.3487, 356.138, -17.4639, 0.22 ) }
    dend_43 { pt3dadd( 56.9718, 357.02, -17.1248, 0.96 ) }
    dend_43 { pt3dadd( 57.1989, 357.368, -16.9913, 1.18 ) }
    dend_43 { pt3dadd( 57.9776, 358.73, -16.4657, 0.52 ) }
    dend_43 { pt3dadd( 58.4725, 359.675, -16.1246, 0.29 ) }
    dend_43 { pt3dadd( 58.6914, 360.13, -15.9617, 0.29 ) }
    dend_43 { pt3dadd( 59.0387, 360.876, -15.6353, 0.29 ) }
    dend_43 { pt3dadd( 59.081, 360.977, -15.5806, 0.29 ) }
    dend_43 { pt3dadd( 59.3602, 361.715, -15.1319, 0.29 ) }
    dend_43 { pt3dadd( 59.336, 361.689, -15.178, 0.29 ) }
    dend_43 { pt3dadd( 57.7688, 361.425, -18.3646, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 66.8699, 142.546, 9.87483, 0.52 ) }
    dend_40 { pt3dadd( 66.2171, 143.116, 10.6099, 0.52 ) }
    dend_40 { pt3dadd( 66.0314, 143.258, 10.7924, 1.18 ) }
    dend_40 { pt3dadd( 65.6261, 143.531, 11.1374, 1.18 ) }
    dend_40 { pt3dadd( 64.0742, 144.533, 12.3668, 0.22 ) }
    dend_40 { pt3dadd( 63.9093, 144.636, 12.4889, 0.59 ) }
    dend_40 { pt3dadd( 63.345, 144.986, 12.8717, 0.29 ) }
    dend_40 { pt3dadd( 62.8265, 145.293, 13.1796, 0.29 ) }
    dend_40 { pt3dadd( 62.262, 145.627, 13.5396, 0.22 ) }
    dend_40 { pt3dadd( 62.0756, 145.733, 13.656, 0.66 ) }
    dend_40 { pt3dadd( 61.745, 145.916, 13.8381, 0.66 ) }
    dend_40 { pt3dadd( 61.0281, 146.341, 14.3094, 0.22 ) }
    dend_40 { pt3dadd( 60.5759, 146.634, 14.6607, 0.66 ) }
    dend_40 { pt3dadd( 59.2889, 147.564, 15.9054, 0.52 ) }
    dend_40 { pt3dadd( 58.8964, 147.882, 16.3847, 0.81 ) }
    dend_40 { pt3dadd( 58.5113, 148.23, 16.9258, 0.29 ) }
    dend_40 { pt3dadd( 58.2241, 148.528, 17.3947, 0.52 ) }
    dend_40 { pt3dadd( 58.1975, 148.558, 17.4457, 0.52 ) }
    dend_40 { pt3dadd( 57.8632, 148.983, 18.1633, 0.66 ) }
    dend_40 { pt3dadd( 57.5859, 149.418, 18.7246, 0.29 ) }
    dend_40 { pt3dadd( 57.4428, 149.76, 19.1836, 0.96 ) }
    dend_40 { pt3dadd( 57.4038, 149.926, 19.4067, 1.03 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 89/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 66.8699, 142.546, 9.87483, 0.59 ) }
    dend_37 { pt3dadd( 68.1687, 142.962, 9.87374, 0.59 ) }
    dend_37 { pt3dadd( 68.5453, 143.098, 9.86024, 1.11 ) }
    dend_37 { pt3dadd( 69.1931, 143.348, 9.88623, 0.81 ) }
    dend_37 { pt3dadd( 69.2733, 143.386, 9.89227, 0.81 ) }
    dend_37 { pt3dadd( 70.0595, 143.83, 9.96541, 0.59 ) }
    dend_37 { pt3dadd( 70.2504, 143.959, 9.98678, 1.55 ) }
    dend_37 { pt3dadd( 70.558, 144.232, 10.0674, 1.55 ) }
    dend_37 { pt3dadd( 71.1511, 144.824, 10.3113, 0.96 ) }
    dend_37 { pt3dadd( 71.7112, 145.46, 10.6016, 0.37 ) }
    dend_37 { pt3dadd( 71.8949, 145.682, 10.7098, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_37 { pt3dadd( 72.2494, 146.156, 10.9626, 0.37 ) }
    dend_37 { pt3dadd( 73.1317, 147.355, 11.6312, 0.88 ) }
    dend_37 { pt3dadd( 73.4352, 147.776, 11.8747, 1.55 ) }
    dend_37 { pt3dadd( 73.7091, 148.165, 12.0918, 1.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -107.329, 150.166, -21.403, 0.22 ) }
    dend_30 { pt3dadd( -107.853, 150.872, -22.197, 0.22 ) }
    dend_30 { pt3dadd( -108.047, 151.107, -22.4956, 0.22 ) }
    dend_30 { pt3dadd( -108.254, 151.31, -22.783, 0.81 ) }
    dend_30 { pt3dadd( -108.387, 151.417, -22.9541, 0.81 ) }
    dend_30 { pt3dadd( -109.49, 152.017, -24.3419, 0.66 ) }
    dend_30 { pt3dadd( -109.51, 152.028, -24.3671, 0.66 ) }
    dend_30 { pt3dadd( -109.68, 152.06, -24.6209, 1.03 ) }
    dend_30 { pt3dadd( -109.969, 152.053, -25.0696, 0.15 ) }
    dend_30 { pt3dadd( -110.214, 151.996, -25.4557, 0.15 ) }
    dend_30 { pt3dadd( -110.72, 151.723, -26.1473, 1.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -107.329, 150.166, -21.403, 0.22 ) }
    dend_29 { pt3dadd( -107.514, 148.463, -21.2656, 0.22 ) }
    dend_29 { pt3dadd( -107.564, 147.922, -21.1748, 0.74 ) }
    dend_29 { pt3dadd( -107.696, 146.629, -20.9119, 0.29 ) }
    dend_29 { pt3dadd( -107.717, 146.449, -20.8735, 0.29 ) }
    dend_29 { pt3dadd( -107.843, 145.391, -20.6554, 0.29 ) }
    dend_29 { pt3dadd( -107.854, 145.293, -20.6357, 0.29 ) }
    dend_29 { pt3dadd( -107.964, 143.863, -20.3586, 0.29 ) }
    dend_29 { pt3dadd( -108.004, 143.333, -20.2061, 0.66 ) }
    dend_29 { pt3dadd( -108.001, 142.935, -20.0043, 0.66 ) }
    dend_29 { pt3dadd( -107.94, 142.085, -19.4319, 0.29 ) }
    dend_29 { pt3dadd( -107.921, 141.948, -19.3231, 0.29 ) }
    dend_29 { pt3dadd( -107.783, 141.36, -18.8167, 0.52 ) }
    dend_29 { pt3dadd( -107.257, 139.556, -17.147, 0.29 ) }
    dend_29 { pt3dadd( -106.631, 137.707, -15.2906, 0.29 ) }
    dend_29 { pt3dadd( -106.401, 137.11, -14.6356, 1.18 ) }
    dend_29 { pt3dadd( -106.278, 136.83, -14.2912, 1.03 ) }
    dend_29 { pt3dadd( -105.993, 136.239, -13.5184, 0.52 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 153.582, 203.945, -28.9931, 0.29 ) }
    dend_24 { pt3dadd( 165.751, 208.695, -29.5238, 0.29 ) }
    dend_24 { pt3dadd( 177.733, 213.629, -31.2091, 0.29 ) }
    dend_24 { pt3dadd( 190.101, 217.653, -32.7491, 0.29 ) }
    dend_24 { pt3dadd( 202.566, 220.84, -35.3117, 0.29 ) }
    dend_24 { pt3dadd( 214.361, 226.038, -37.3956, 0.29 ) }
    dend_24 { pt3dadd( 225.764, 232.036, -39.2939, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 153.582, 203.945, -28.9931, 0.29 ) }
    dend_21 { pt3dadd( 163.046, 208.559, -26.8851, 0.29 ) }
    dend_21 { pt3dadd( 172.638, 212.358, -23.8025, 0.29 ) }
    dend_21 { pt3dadd( 181.773, 216.994, -20.5836, 0.29 ) }
    dend_21 { pt3dadd( 191.153, 221.955, -19.0483, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 45/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 132.996, 211.54, -80.1696, 0.29 ) }
    dend_17 { pt3dadd( 139.168, 212.42, -85.6666, 0.29 ) }
    dend_17 { pt3dadd( 145.341, 213.632, -91.0922, 0.29 ) }
    dend_17 { pt3dadd( 151.001, 215.294, -96.9269, 0.29 ) }
    dend_17 { pt3dadd( 155.805, 217.403, -103.336, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 50/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 132.996, 211.54, -80.1696, 0.29 ) }
    dend_16 { pt3dadd( 136.782, 221.77, -78.3218, 0.29 ) }
    dend_16 { pt3dadd( 142.184, 231.473, -78.7373, 0.29 ) }
    dend_16 { pt3dadd( 147.311, 241.202, -80.313, 0.29 ) }
    dend_16 { pt3dadd( 152.387, 250.787, -82.7704, 0.29 ) }
    dend_16 { pt3dadd( 155.934, 260.343, -87.2054, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 56/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.1336, 238.484, -32.0588, 0.22 ) }
    dend_9 { pt3dadd( -10.1709, 239.804, -32.3742, 0.22 ) }
    dend_9 { pt3dadd( -10.1733, 240.279, -32.4776, 0.52 ) }
    dend_9 { pt3dadd( -10.1672, 240.721, -32.5668, 0.52 ) }
    dend_9 { pt3dadd( -10.1692, 242.083, -32.8762, 0.22 ) }
    dend_9 { pt3dadd( -10.1857, 243.27, -33.1521, 0.22 ) }
    dend_9 { pt3dadd( -10.2, 243.955, -33.3113, 0.81 ) }
    dend_9 { pt3dadd( -10.2117, 244.385, -33.4086, 1.11 ) }
    dend_9 { pt3dadd( -10.221, 244.761, -33.5002, 1.33 ) }
    dend_9 { pt3dadd( -10.2393, 246.08, -33.7887, 0.22 ) }
    dend_9 { pt3dadd( -10.2315, 246.617, -33.8834, 0.81 ) }
    dend_9 { pt3dadd( -10.2293, 246.875, -33.9233, 1.03 ) }
    dend_9 { pt3dadd( -10.213, 248.142, -34.0809, 0.22 ) }
    dend_9 { pt3dadd( -10.2373, 249.129, -34.2601, 0.88 ) }
    dend_9 { pt3dadd( -10.2702, 249.792, -34.4056, 1.11 ) }
    dend_9 { pt3dadd( -10.3032, 250.373, -34.5458, 1.33 ) }
    dend_9 { pt3dadd( -10.3303, 250.681, -34.6398, 1.33 ) }
    dend_9 { pt3dadd( -10.3356, 250.73, -34.6575, 1.33 ) }
    dend_9 { pt3dadd( -10.567, 252.639, -35.4406, 0.22 ) }
    dend_9 { pt3dadd( -10.629, 253.063, -35.6236, 0.52 ) }
    dend_9 { pt3dadd( -10.6416, 253.13, -35.6537, 0.52 ) }
    dend_9 { pt3dadd( -10.6955, 253.361, -35.7449, 0.52 ) }
    dend_9 { pt3dadd( -10.855, 254.066, -36.0157, 0.22 ) }
    dend_9 { pt3dadd( -10.9828, 254.722, -36.2384, 0.22 ) }
    dend_9 { pt3dadd( -11.0963, 255.424, -36.4478, 0.22 ) }
    dend_9 { pt3dadd( -11.2237, 256.264, -36.7137, 0.88 ) }
    dend_9 { pt3dadd( -11.3031, 256.838, -36.9146, 0.88 ) }
    dend_9 { pt3dadd( -11.4747, 258.216, -37.4263, 0.15 ) }
    dend_9 { pt3dadd( -11.5443, 258.753, -37.6396, 0.52 ) }
    dend_9 { pt3dadd( -11.6327, 259.553, -37.9758, 0.74 ) }
    dend_9 { pt3dadd( -11.6993, 260.749, -38.4972, 0.22 ) }
    dend_9 { pt3dadd( -11.7063, 261.749, -38.9188, 1.03 ) }
    dend_9 { pt3dadd( -11.6942, 262.111, -39.0692, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 89/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.1336, 238.484, -32.0588, 0.22 ) }
    dend_8 { pt3dadd( -11.2865, 239.759, -33.9798, 0.22 ) }
    dend_8 { pt3dadd( -11.7978, 240.105, -34.8886, 0.22 ) }
    dend_8 { pt3dadd( -11.8694, 240.153, -35.0091, 0.22 ) }
    dend_8 { pt3dadd( -13.2419, 241.109, -37.2164, 0.37 ) }
    dend_8 { pt3dadd( -13.6224, 241.378, -37.8144, 0.29 ) }
    dend_8 { pt3dadd( -14.8495, 242.259, -39.676, 0.88 ) }
    dend_8 { pt3dadd( -17.7514, 244.318, -44.2676, 0.22 ) }
    dend_8 { pt3dadd( -18.2786, 244.678, -45.0696, 0.22 ) }
    dend_8 { pt3dadd( -18.5872, 244.891, -45.5023, 0.52 ) }
    dend_8 { pt3dadd( -18.6309, 244.922, -45.5537, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( -19.0173, 245.196, -45.9244, 0.66 ) }
    dend_8 { pt3dadd( -20.1128, 246.278, -46.606, 0.29 ) }
    dend_8 { pt3dadd( -20.1831, 246.384, -46.6203, 0.29 ) }
    dend_8 { pt3dadd( -20.6019, 247.063, -46.7272, 0.29 ) }
    dend_8 { pt3dadd( -21.1777, 248.094, -46.8794, 0.66 ) }
    dend_8 { pt3dadd( -21.3064, 248.337, -46.9123, 0.66 ) }
    dend_8 { pt3dadd( -22.1238, 250.071, -47.0965, 0.22 ) }
    dend_8 { pt3dadd( -22.1759, 250.204, -47.0993, 0.22 ) }
    dend_8 { pt3dadd( -22.508, 251.111, -47.1311, 0.52 ) }
    dend_8 { pt3dadd( -22.6462, 251.556, -47.1569, 0.52 ) }
    dend_8 { pt3dadd( -31.1508, 258.282, -52.8447, 0.52 ) }
    dend_8 { pt3dadd( -38.9054, 264.483, -60.0542, 0.52 ) }
    dend_8 { pt3dadd( -45.5873, 271.147, -67.8537, 0.52 ) }
    dend_8 { pt3dadd( -53.8726, 278.392, -73.1465, 0.52 ) }
    dend_8 { pt3dadd( -61.7998, 285.628, -78.9727, 0.52 ) }
    dend_8 { pt3dadd( -69.469, 292.903, -85.0813, 0.52 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 16/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 22.8284, 189.396, -22.8521, 0.29 ) }
    dend_6 { pt3dadd( 27.4178, 195.706, -23.2244, 0.29 ) }
    dend_6 { pt3dadd( 30.7694, 202.541, -24.7397, 0.29 ) }
    dend_6 { pt3dadd( 32.8055, 209.516, -27.4244, 0.29 ) }
    dend_6 { pt3dadd( 33.3419, 216.381, -30.9892, 0.29 ) }
    dend_6 { pt3dadd( 34.7436, 223.443, -33.8215, 0.29 ) }
    dend_6 { pt3dadd( 36.255, 230.129, -37.4851, 0.29 ) }
    dend_6 { pt3dadd( 37.8929, 235.836, -42.6288, 0.29 ) }
    dend_6 { pt3dadd( 39.2952, 242.043, -47.1646, 0.29 ) }
    dend_6 { pt3dadd( 39.3351, 248.727, -51.1275, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 26/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 22.8284, 189.396, -22.8521, 1.33 ) }
    dend_5 { pt3dadd( 28.3383, 198.288, -27.9634, 0.29 ) }
    dend_5 { pt3dadd( 32.4035, 208.697, -30.7009, 0.29 ) }
    dend_5 { pt3dadd( 37.6281, 218.603, -33.5481, 0.29 ) }
    dend_5 { pt3dadd( 41.4246, 228.898, -37.042, 0.29 ) }
    dend_5 { pt3dadd( 44.2042, 238.96, -41.9534, 0.29 ) }
    dend_5 { pt3dadd( 47.223, 249.37, -45.8089, 0.29 ) }
    dend_5 { pt3dadd( 48.5914, 260.397, -48.5289, 0.29 ) }
    dend_5 { pt3dadd( 51.6329, 271.033, -51.605, 0.29 ) }
    dend_5 { pt3dadd( 54.1482, 281.339, -56.0793, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 36/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 142.175, 73.4065, -117.83, 0.29 ) }
    dend_58 { pt3dadd( 150.092, 75.8497, -126.618, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 38/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 142.175, 73.4065, -117.83, 0.29 ) }
    dend_57 { pt3dadd( 149.848, 74.899, -124.136, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -2.46608, 265.178, -4.60081, 0.29 ) }
    dend_48 { pt3dadd( -3.18724, 266.556, -4.48605, 0.29 ) }
    dend_48 { pt3dadd( -3.64157, 267.424, -4.41374, 0.81 ) }
    dend_48 { pt3dadd( -3.79949, 267.725, -4.38861, 1.11 ) }
    dend_48 { pt3dadd( -3.85967, 267.84, -4.37903, 1.11 ) }
    dend_48 { pt3dadd( -4.14251, 268.381, -4.33403, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.46608, 265.178, -4.60081, 0.29 ) }
    dend_45 { pt3dadd( -4.39171, 266.495, -0.390973, 0.29 ) }
    dend_45 { pt3dadd( -4.66097, 266.701, 0.172679, 1.92 ) }
    dend_45 { pt3dadd( -4.84555, 266.859, 0.538325, 2.28 ) }
    dend_45 { pt3dadd( -5.94671, 267.874, 2.62704, 0.37 ) }
    dend_45 { pt3dadd( -6.24596, 268.163, 3.15851, 0.88 ) }
    dend_45 { pt3dadd( -6.59307, 268.514, 3.70504, 0.37 ) }
    dend_45 { pt3dadd( -6.63451, 268.561, 3.73398, 0.37 ) }
    dend_45 { pt3dadd( -7.03869, 269.04, 3.95761, 0.37 ) }
    dend_45 { pt3dadd( -7.07657, 269.093, 3.98031, 0.37 ) }
    dend_45 { pt3dadd( -7.3491, 269.49, 4.09187, 0.37 ) }
    dend_45 { pt3dadd( -7.93374, 270.279, 4.35505, 1.03 ) }
    dend_45 { pt3dadd( -8.26894, 270.687, 4.51371, 0.96 ) }
    dend_45 { pt3dadd( -8.85726, 271.395, 4.81579, 0.74 ) }
    dend_45 { pt3dadd( -10.1405, 272.925, 5.5738, 2.21 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 61/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 73.7091, 148.165, 12.0918, 0.81 ) }
    dend_39 { pt3dadd( 75.2793, 148.467, 13.3799, 0.81 ) }
    dend_39 { pt3dadd( 76.2937, 148.683, 14.2311, 0.29 ) }
    dend_39 { pt3dadd( 76.556, 148.742, 14.4542, 1.03 ) }
    dend_39 { pt3dadd( 77.6635, 148.988, 15.3964, 0.37 ) }
    dend_39 { pt3dadd( 77.8837, 149.037, 15.5837, 0.88 ) }
    dend_39 { pt3dadd( 77.9203, 149.045, 15.6148, 0.88 ) }
    dend_39 { pt3dadd( 78.8333, 149.292, 16.4156, 0.74 ) }
    dend_39 { pt3dadd( 78.8648, 149.303, 16.4473, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 70/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 73.7091, 148.165, 12.0918, 0.59 ) }
    dend_38 { pt3dadd( 72.7194, 150.746, 13.2715, 0.59 ) }
    dend_38 { pt3dadd( 72.5406, 151.255, 13.4762, 0.59 ) }
    dend_38 { pt3dadd( 72.2148, 152.457, 13.9105, 0.37 ) }
    dend_38 { pt3dadd( 72.1005, 153.222, 14.1496, 0.88 ) }
    dend_38 { pt3dadd( 72.0694, 153.794, 14.3012, 1.47 ) }
    dend_38 { pt3dadd( 72.0622, 156.008, 14.8307, 0.22 ) }
    dend_38 { pt3dadd( 72.1346, 156.909, 14.9385, 0.22 ) }
    dend_38 { pt3dadd( 72.3011, 157.912, 15.0541, 0.88 ) }
    dend_38 { pt3dadd( 72.699, 159.36, 15.3275, 0.22 ) }
    dend_38 { pt3dadd( 73.0182, 160.361, 15.5696, 0.81 ) }
    dend_38 { pt3dadd( 73.0451, 160.436, 15.589, 0.81 ) }
    dend_38 { pt3dadd( 73.2857, 161.101, 15.8324, 0.22 ) }
    dend_38 { pt3dadd( 73.4019, 161.538, 16.0591, 0.66 ) }
    dend_38 { pt3dadd( 73.6492, 163.257, 17.1317, 0.29 ) }
    dend_38 { pt3dadd( 73.6691, 163.892, 17.5729, 0.96 ) }
    dend_38 { pt3dadd( 73.6447, 164.574, 18.0508, 0.66 ) }
    dend_38 { pt3dadd( 73.4951, 166.29, 19.1747, 0.37 ) }
    dend_38 { pt3dadd( 73.4428, 166.723, 19.4227, 0.37 ) }
    dend_38 { pt3dadd( 73.3623, 167.282, 19.6822, 0.66 ) }
    dend_38 { pt3dadd( 73.2747, 167.839, 19.8339, 0.88 ) }
    dend_38 { pt3dadd( 73.0807, 169.1, 20.133, 0.29 ) }
    dend_38 { pt3dadd( 72.9014, 170.175, 20.3303, 0.37 ) }
    dend_38 { pt3dadd( 72.7422, 171.243, 20.4305, 0.37 ) }
    dend_38 { pt3dadd( 72.6904, 171.687, 20.5099, 0.88 ) }
    dend_38 { pt3dadd( 72.6002, 172.814, 20.7403, 0.88 ) }
    dend_38 { pt3dadd( 72.5641, 174.124, 21.0163, 0.66 ) }
    dend_38 { pt3dadd( 72.5643, 174.201, 21.0332, 0.66 ) }
    dend_38 { pt3dadd( 72.5847, 174.85, 21.2122, 0.66 ) }
    dend_38 { pt3dadd( 72.6317, 176.185, 21.7481, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_38 { pt3dadd( 72.6937, 177.314, 22.2996, 0.37 ) }
    dend_38 { pt3dadd( 72.734, 177.889, 22.635, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 191.153, 221.955, -19.0483, 0.29 ) }
    dend_23 { pt3dadd( 197.622, 224.785, -17.5005, 0.29 ) }
    dend_23 { pt3dadd( 203.913, 228.039, -16.1487, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 191.153, 221.955, -19.0483, 0.29 ) }
    dend_22 { pt3dadd( 201.438, 225.977, -18.2947, 0.29 ) }
    dend_22 { pt3dadd( 211.701, 229.269, -15.6898, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 8/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 155.805, 217.403, -103.336, 0.29 ) }
    dend_19 { pt3dadd( 159.981, 219.679, -110.818, 0.29 ) }
    dend_19 { pt3dadd( 164.626, 222.279, -117.895, 0.29 ) }
    dend_19 { pt3dadd( 168.309, 225.677, -125.169, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 155.805, 217.403, -103.336, 0.29 ) }
    dend_18 { pt3dadd( 165.608, 219.202, -110.052, 0.29 ) }
    dend_18 { pt3dadd( 175.237, 219.048, -117.264, 0.29 ) }
    dend_18 { pt3dadd( 184.697, 219.664, -124.669, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -11.6942, 262.111, -39.0692, 0.22 ) }
    dend_11 { pt3dadd( -9.86303, 262.268, -40.1661, 0.22 ) }
    dend_11 { pt3dadd( -9.2136, 262.323, -40.5552, 0.37 ) }
    dend_11 { pt3dadd( -8.77662, 262.361, -40.8169, 0.66 ) }
    dend_11 { pt3dadd( -8.23314, 262.407, -41.1425, 0.88 ) }
    dend_11 { pt3dadd( 1.05739, 261.841, -47.1236, 0.88 ) }
    dend_11 { pt3dadd( 10.1488, 261.452, -53.4179, 0.88 ) }
    dend_11 { pt3dadd( 19.3288, 260.513, -59.5166, 0.88 ) }
    dend_11 { pt3dadd( 29.0507, 261.465, -64.7045, 0.88 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 25/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.6942, 262.111, -39.0692, 0.22 ) }
    dend_10 { pt3dadd( -11.9818, 263.519, -39.1301, 0.22 ) }
    dend_10 { pt3dadd( -12.1609, 264.772, -39.1659, 0.37 ) }
    dend_10 { pt3dadd( -12.2407, 265.581, -39.1859, 0.22 ) }
    dend_10 { pt3dadd( -12.2887, 266.334, -39.2046, 0.66 ) }
    dend_10 { pt3dadd( -12.3037, 266.722, -39.2146, 0.88 ) }
    dend_10 { pt3dadd( -12.3194, 268.327, -39.2725, 0.22 ) }
    dend_10 { pt3dadd( -12.2446, 269.579, -39.3064, 0.29 ) }
    dend_10 { pt3dadd( -12.1847, 270.315, -39.3346, 0.59 ) }
    dend_10 { pt3dadd( -12.1124, 270.981, -39.3675, 1.03 ) }
    dend_10 { pt3dadd( -12.0533, 271.424, -39.3963, 1.25 ) }
    dend_10 { pt3dadd( -11.7956, 273.045, -39.437, 0.15 ) }
    dend_10 { pt3dadd( -11.5997, 274.141, -39.424, 0.15 ) }
    dend_10 { pt3dadd( -11.4772, 274.902, -39.3837, 0.88 ) }
    dend_10 { pt3dadd( -11.4097, 275.341, -39.3338, 1.18 ) }
    dend_10 { pt3dadd( -11.3442, 275.78, -39.2548, 1.18 ) }
    dend_10 { pt3dadd( -11.0661, 277.646, -38.7986, 0.15 ) }
    dend_10 { pt3dadd( -10.9722, 278.289, -38.5891, 0.44 ) }
    dend_10 { pt3dadd( -10.9165, 278.68, -38.4425, 0.44 ) }
    dend_10 { pt3dadd( -10.7867, 279.598, -38.0703, 0.22 ) }
    dend_10 { pt3dadd( -10.7268, 280.239, -37.8275, 0.74 ) }
    dend_10 { pt3dadd( -10.7236, 280.309, -37.8033, 0.74 ) }
    dend_10 { pt3dadd( -10.7328, 280.697, -37.704, 0.74 ) }
    dend_10 { pt3dadd( -10.7353, 280.772, -37.6881, 0.74 ) }
    dend_10 { pt3dadd( -10.7476, 281.109, -37.6346, 0.74 ) }
    dend_10 { pt3dadd( -10.8623, 282.926, -37.4606, 0.22 ) }
    dend_10 { pt3dadd( -10.8668, 282.997, -37.456, 0.22 ) }
    dend_10 { pt3dadd( -10.9167, 283.94, -37.4067, 0.81 ) }
    dend_10 { pt3dadd( -10.936, 284.376, -37.3883, 1.03 ) }
    dend_10 { pt3dadd( -10.9394, 284.453, -37.3857, 1.03 ) }
    dend_10 { pt3dadd( -10.9629, 285.085, -37.3788, 1.03 ) }
    dend_10 { pt3dadd( -10.9811, 286.543, -37.3901, 0.22 ) }
    dend_10 { pt3dadd( -10.9642, 287.453, -37.4308, 0.22 ) }
    dend_10 { pt3dadd( -10.961, 287.524, -37.4359, 0.22 ) }
    dend_10 { pt3dadd( -10.8991, 288.491, -37.522, 0.22 ) }
    dend_10 { pt3dadd( -10.8236, 289.396, -37.6166, 0.88 ) }
    dend_10 { pt3dadd( -10.761, 289.976, -37.688, 1.03 ) }
    dend_10 { pt3dadd( -10.609, 291.482, -37.8984, 0.22 ) }
    dend_10 { pt3dadd( -10.5676, 291.999, -37.9697, 0.22 ) }
    dend_10 { pt3dadd( -10.5244, 292.658, -38.0547, 0.66 ) }
    dend_10 { pt3dadd( -10.5193, 292.739, -38.0644, 0.66 ) }
    dend_10 { pt3dadd( -10.5062, 293.041, -38.0964, 0.66 ) }
    dend_10 { pt3dadd( -10.4901, 294.274, -38.2095, 0.22 ) }
    dend_10 { pt3dadd( -10.4999, 295.053, -38.2641, 0.22 ) }
    dend_10 { pt3dadd( -10.5136, 295.719, -38.3109, 0.29 ) }
    dend_10 { pt3dadd( -10.5328, 296.75, -38.383, 0.22 ) }
    dend_10 { pt3dadd( -10.5359, 297.685, -38.4638, 0.74 ) }
    dend_10 { pt3dadd( -10.5224, 298.179, -38.5121, 1.18 ) }
    dend_10 { pt3dadd( -10.4811, 298.754, -38.5728, 1.18 ) }
    dend_10 { pt3dadd( -10.456, 299.07, -38.6064, 1.33 ) }
    dend_10 { pt3dadd( -10.4117, 299.583, -38.6606, 1.33 ) }
    dend_10 { pt3dadd( -10.2399, 301.408, -38.8591, 0.15 ) }
    dend_10 { pt3dadd( -10.0927, 302.721, -39.0262, 0.15 ) }
    dend_10 { pt3dadd( -9.92722, 303.965, -39.2122, 0.88 ) }
    dend_10 { pt3dadd( -9.86025, 304.423, -39.286, 1.11 ) }
    dend_10 { pt3dadd( -9.81725, 304.716, -39.3341, 1.11 ) }
    dend_10 { pt3dadd( -9.80054, 304.844, -39.3578, 1.11 ) }
    dend_10 { pt3dadd( -9.66548, 305.942, -39.5686, 0.15 ) }
    dend_10 { pt3dadd( -9.55646, 306.883, -39.7544, 0.15 ) }
    dend_10 { pt3dadd( -9.45112, 307.909, -39.9475, 0.74 ) }
    dend_10 { pt3dadd( -9.40146, 308.398, -40.0332, 0.88 ) }
    dend_10 { pt3dadd( -9.26614, 309.784, -40.2536, 0.15 ) }
    dend_10 { pt3dadd( -9.09821, 311.382, -40.4778, 0.15 ) }
    dend_10 { pt3dadd( -8.99497, 312.328, -40.5963, 0.96 ) }
    dend_10 { pt3dadd( -8.92358, 312.927, -40.6699, 1.25 ) }
    dend_10 { pt3dadd( -8.8654, 313.355, -40.7209, 1.25 ) }
    dend_10 { pt3dadd( -8.55937, 315.353, -40.941, 0.22 ) }
    dend_10 { pt3dadd( -8.3513, 316.583, -41.0516, 0.22 ) }
    dend_10 { pt3dadd( -8.33896, 316.655, -41.0583, 0.22 ) }
    dend_10 { pt3dadd( -8.13147, 317.815, -41.1694, 0.52 ) }
    dend_10 { pt3dadd( -8.06321, 318.191, -41.2023, 0.96 ) }
    dend_10 { pt3dadd( -8.05308, 318.254, -41.2066, 0.96 ) }
    dend_10 { pt3dadd( -7.98629, 318.77, -41.2245, 0.96 ) }
    dend_10 { pt3dadd( -7.97299, 318.915, -41.2279, 0.96 ) }
    dend_10 { pt3dadd( -7.96369, 319.019, -41.2302, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_10 { pt3dadd( -7.90397, 320.841, -41.2405, 0.22 ) }
    dend_10 { pt3dadd( -7.89902, 321.519, -41.2421, 0.22 ) }
    dend_10 { pt3dadd( -7.90357, 322.056, -41.2456, 0.81 ) }
    dend_10 { pt3dadd( -7.90213, 322.432, -41.2339, 1.03 ) }
    dend_10 { pt3dadd( -7.86917, 323.543, -41.1674, 0.22 ) }
    dend_10 { pt3dadd( -7.80003, 324.896, -41.0565, 0.22 ) }
    dend_10 { pt3dadd( -7.70357, 326.175, -40.9194, 0.22 ) }
    dend_10 { pt3dadd( -7.68911, 326.305, -40.9044, 0.22 ) }
    dend_10 { pt3dadd( -7.53227, 327.539, -40.7522, 0.22 ) }
    dend_10 { pt3dadd( -7.34965, 328.777, -40.6006, 0.81 ) }
    dend_10 { pt3dadd( -7.33499, 328.852, -40.5898, 0.81 ) }
    dend_10 { pt3dadd( -7.21952, 329.353, -40.5124, 0.81 ) }
    dend_10 { pt3dadd( -6.98668, 330.424, -40.3364, 0.22 ) }
    dend_10 { pt3dadd( -6.89055, 330.986, -40.2483, 0.22 ) }
    dend_10 { pt3dadd( -6.78425, 331.871, -40.1278, 0.88 ) }
    dend_10 { pt3dadd( -6.584, 333.671, -39.8104, 0.22 ) }
    dend_10 { pt3dadd( -6.50518, 334.431, -39.6639, 0.22 ) }
    dend_10 { pt3dadd( -6.49718, 334.513, -39.647, 0.22 ) }
    dend_10 { pt3dadd( -6.425, 335.396, -39.4565, 0.22 ) }
    dend_10 { pt3dadd( -6.41559, 335.503, -39.4349, 0.22 ) }
    dend_10 { pt3dadd( -6.29321, 336.822, -39.2213, 0.22 ) }
    dend_10 { pt3dadd( -6.16221, 337.873, -39.1146, 1.03 ) }
    dend_10 { pt3dadd( -6.08342, 338.303, -39.0879, 1.33 ) }
    dend_10 { pt3dadd( -5.98708, 338.833, -39.0665, 1.33 ) }
    dend_10 { pt3dadd( -5.84994, 339.56, -39.0499, 0.74 ) }
    dend_10 { pt3dadd( -5.55651, 341.239, -39.0112, 0.22 ) }
    dend_10 { pt3dadd( -5.47201, 341.778, -39.0047, 0.22 ) }
    dend_10 { pt3dadd( -5.3244, 342.657, -38.9852, 0.81 ) }
    dend_10 { pt3dadd( -5.09605, 343.987, -38.9465, 0.22 ) }
    dend_10 { pt3dadd( -5.08472, 344.046, -38.945, 0.22 ) }
    dend_10 { pt3dadd( -4.96288, 344.69, -38.9232, 0.66 ) }
    dend_10 { pt3dadd( -4.87014, 345.198, -38.9019, 0.66 ) }
    dend_10 { pt3dadd( -4.54387, 346.939, -38.827, 0.22 ) }
    dend_10 { pt3dadd( -4.52852, 347.025, -38.8253, 0.22 ) }
    dend_10 { pt3dadd( -4.27832, 348.335, -38.8379, 0.22 ) }
    dend_10 { pt3dadd( -4.26607, 348.405, -38.8405, 0.22 ) }
    dend_10 { pt3dadd( -4.06532, 349.673, -38.917, 1.03 ) }
    dend_10 { pt3dadd( -3.97453, 350.326, -38.9595, 1.47 ) }
    dend_10 { pt3dadd( -3.79245, 351.852, -39.0697, 0.22 ) }
    dend_10 { pt3dadd( -3.7525, 352.218, -39.0977, 0.22 ) }
    dend_10 { pt3dadd( -3.67838, 352.958, -39.1591, 0.44 ) }
    dend_10 { pt3dadd( -3.64838, 353.26, -39.1858, 0.66 ) }
    dend_10 { pt3dadd( -3.64116, 353.333, -39.1928, 0.66 ) }
    dend_10 { pt3dadd( -3.60825, 353.707, -39.2222, 0.66 ) }
    dend_10 { pt3dadd( -3.54178, 354.984, -39.2608, 0.15 ) }
    dend_10 { pt3dadd( -3.53769, 355.723, -39.2659, 0.74 ) }
    dend_10 { pt3dadd( -3.54346, 355.988, -39.2631, 0.96 ) }
    dend_10 { pt3dadd( -3.54372, 356.06, -39.264, 0.96 ) }
    dend_10 { pt3dadd( -3.54023, 356.383, -39.2721, 0.96 ) }
    dend_10 { pt3dadd( -3.51656, 357.573, -39.3144, 0.22 ) }
    dend_10 { pt3dadd( -3.46932, 358.47, -39.3596, 0.52 ) }
    dend_10 { pt3dadd( -3.43488, 358.823, -39.3851, 0.52 ) }
    dend_10 { pt3dadd( -3.22032, 360.38, -39.5229, 0.22 ) }
    dend_10 { pt3dadd( -3.09773, 361.04, -39.5926, 0.52 ) }
    dend_10 { pt3dadd( -3.06496, 361.173, -39.6115, 0.52 ) }
    dend_10 { pt3dadd( -2.75052, 362.235, -39.7959, 0.22 ) }
    dend_10 { pt3dadd( -2.50694, 363.166, -40.0091, 1.11 ) }
    dend_10 { pt3dadd( -2.44813, 363.442, -40.0888, 1.33 ) }
    dend_10 { pt3dadd( -2.34804, 364.01, -40.2724, 1.03 ) }
    dend_10 { pt3dadd( -2.19737, 364.99, -40.6052, 0.22 ) }
    dend_10 { pt3dadd( -2.12751, 365.497, -40.7791, 0.59 ) }
    dend_10 { pt3dadd( -2.00109, 366.705, -41.1839, 0.15 ) }
    dend_10 { pt3dadd( -1.88286, 368.325, -41.6736, 0.22 ) }
    dend_10 { pt3dadd( -1.82653, 369.458, -41.9718, 0.96 ) }
    dend_10 { pt3dadd( -1.82244, 369.755, -42.0422, 1.25 ) }
    dend_10 { pt3dadd( -1.82421, 370.271, -42.148, 1.25 ) }
    dend_10 { pt3dadd( -1.82126, 371.858, -42.4305, 0.22 ) }
    dend_10 { pt3dadd( -1.80958, 372.796, -42.5527, 0.22 ) }
    dend_10 { pt3dadd( -1.82758, 373.723, -42.6567, 0.74 ) }
    dend_10 { pt3dadd( -1.85044, 374.299, -42.7188, 0.96 ) }
    dend_10 { pt3dadd( -1.86078, 374.663, -42.7543, 0.96 ) }
    dend_10 { pt3dadd( -1.85793, 375.027, -42.785, 0.81 ) }
    dend_10 { pt3dadd( -1.85347, 375.109, -42.7901, 0.81 ) }
    dend_10 { pt3dadd( -1.82431, 375.557, -42.8108, 0.66 ) }
    dend_10 { pt3dadd( -1.76713, 376.46, -42.831, 0.22 ) }
    dend_10 { pt3dadd( -1.72088, 377.424, -42.8291, 0.22 ) }
    dend_10 { pt3dadd( -1.70106, 378.46, -42.8202, 1.03 ) }
    dend_10 { pt3dadd( -1.70189, 378.889, -42.8145, 1.03 ) }
    dend_10 { pt3dadd( -1.7093, 379.47, -42.806, 0.81 ) }
    dend_10 { pt3dadd( -1.72124, 380.452, -42.7946, 0.22 ) }
    dend_10 { pt3dadd( -1.69306, 381.617, -42.7982, 0.22 ) }
    dend_10 { pt3dadd( -1.64212, 382.336, -42.8074, 0.81 ) }
    dend_10 { pt3dadd( -1.63478, 382.397, -42.8084, 0.81 ) }
    dend_10 { pt3dadd( -1.54738, 382.903, -42.8298, 0.81 ) }
    dend_10 { pt3dadd( -1.28783, 384.061, -42.9064, 0.22 ) }
    dend_10 { pt3dadd( -1.06672, 384.966, -42.9795, 0.22 ) }
    dend_10 { pt3dadd( -0.89836, 385.687, -43.0791, 0.22 ) }
    dend_10 { pt3dadd( -0.881549, 385.806, -43.0986, 0.22 ) }
    dend_10 { pt3dadd( -0.837704, 386.477, -43.2298, 0.66 ) }
    dend_10 { pt3dadd( -0.833806, 386.983, -43.3528, 1.03 ) }
    dend_10 { pt3dadd( -0.86194, 387.506, -43.4997, 1.18 ) }
    dend_10 { pt3dadd( -0.94305, 388.327, -43.7463, 1.03 ) }
    dend_10 { pt3dadd( -1.0893, 389.532, -44.1507, 0.22 ) }
    dend_10 { pt3dadd( -1.18461, 390.358, -44.4395, 0.22 ) }
    dend_10 { pt3dadd( -1.23176, 390.993, -44.6769, 0.22 ) }
    dend_10 { pt3dadd( -1.23361, 391.05, -44.6987, 0.22 ) }
    dend_10 { pt3dadd( -1.22412, 391.799, -44.9779, 0.96 ) }
    dend_10 { pt3dadd( -1.21066, 392.42, -45.181, 0.96 ) }
    dend_10 { pt3dadd( -1.19763, 392.853, -45.3271, 0.96 ) }
    dend_10 { pt3dadd( -1.18165, 394.159, -45.7197, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_10 { pt3dadd( -1.19956, 395.032, -45.9649, 0.22 ) }
    dend_10 { pt3dadd( -1.1979, 395.161, -45.9994, 0.22 ) }
    dend_10 { pt3dadd( -1.16278, 395.933, -46.1937, 0.22 ) }
    dend_10 { pt3dadd( -1.11182, 396.578, -46.3419, 0.88 ) }
    dend_10 { pt3dadd( -1.05169, 397.228, -46.4869, 0.88 ) }
    dend_10 { pt3dadd( -0.897483, 398.634, -46.7894, 0.22 ) }
    dend_10 { pt3dadd( -0.726758, 399.9, -47.0635, 0.22 ) }
    dend_10 { pt3dadd( -0.699375, 400.06, -47.0993, 0.22 ) }
    dend_10 { pt3dadd( -0.582294, 400.632, -47.23, 0.88 ) }
    dend_10 { pt3dadd( -0.462058, 401.207, -47.35, 0.88 ) }
    dend_10 { pt3dadd( -0.232906, 402.232, -47.5525, 0.22 ) }
    dend_10 { pt3dadd( -0.0314382, 403.094, -47.7097, 0.81 ) }
    dend_10 { pt3dadd( 0.114712, 404.01, -47.862, 0.15 ) }
    dend_10 { pt3dadd( 0.123449, 404.083, -47.8731, 0.15 ) }
    dend_10 { pt3dadd( 0.197566, 404.963, -48.0173, 0.81 ) }
    dend_10 { pt3dadd( 0.232259, 405.474, -48.1013, 0.81 ) }
    dend_10 { pt3dadd( 0.312076, 406.608, -48.2935, 0.22 ) }
    dend_10 { pt3dadd( 0.376762, 407.494, -48.4529, 0.22 ) }
    dend_10 { pt3dadd( 0.381453, 407.566, -48.4686, 0.22 ) }
    dend_10 { pt3dadd( 0.486039, 408.879, -48.795, 0.22 ) }
    dend_10 { pt3dadd( 0.570197, 409.866, -49.1092, 1.18 ) }
    dend_10 { pt3dadd( 0.623747, 410.406, -49.3033, 1.33 ) }
    dend_10 { pt3dadd( 0.657165, 410.684, -49.4115, 1.33 ) }
    dend_10 { pt3dadd( 0.869386, 412.476, -50.1377, 0.22 ) }
    dend_10 { pt3dadd( 0.936594, 413.163, -50.4158, 0.52 ) }
    dend_10 { pt3dadd( 1.04325, 414.573, -50.9754, 0.22 ) }
    dend_10 { pt3dadd( 1.07239, 415.063, -51.1654, 0.59 ) }
    dend_10 { pt3dadd( 1.09083, 415.416, -51.2931, 0.59 ) }
    dend_10 { pt3dadd( 1.19674, 417.239, -51.8867, 0.22 ) }
    dend_10 { pt3dadd( 1.20201, 417.311, -51.9054, 0.22 ) }
    dend_10 { pt3dadd( 1.23768, 417.962, -52.0566, 0.22 ) }
    dend_10 { pt3dadd( 1.26716, 418.691, -52.1815, 0.81 ) }
    dend_10 { pt3dadd( 1.2771, 419.065, -52.2411, 1.03 ) }
    dend_10 { pt3dadd( 1.28411, 419.354, -52.2935, 1.03 ) }
    dend_10 { pt3dadd( 1.28776, 419.863, -52.418, 0.44 ) }
    dend_10 { pt3dadd( 1.26696, 421.173, -52.81, 0.22 ) }
    dend_10 { pt3dadd( 1.22835, 421.97, -53.0882, 0.22 ) }
    dend_10 { pt3dadd( 1.16516, 422.759, -53.3915, 0.74 ) }
    dend_10 { pt3dadd( 1.0984, 423.369, -53.6351, 0.74 ) }
    dend_10 { pt3dadd( 0.920322, 424.763, -54.2172, 0.22 ) }
    dend_10 { pt3dadd( 0.910735, 424.827, -54.2464, 0.22 ) }
    dend_10 { pt3dadd( 0.843875, 425.263, -54.4552, 0.22 ) }
    dend_10 { pt3dadd( 0.737355, 425.938, -54.792, 0.88 ) }
    dend_10 { pt3dadd( 0.680048, 426.333, -54.9692, 1.18 ) }
    dend_10 { pt3dadd( 0.601036, 427.025, -55.2189, 1.18 ) }
    dend_10 { pt3dadd( 0.492161, 428.702, -55.7133, 0.22 ) }
    dend_10 { pt3dadd( 0.489624, 428.786, -55.7357, 0.22 ) }
    dend_10 { pt3dadd( 0.488405, 429.416, -55.8812, 0.22 ) }
    dend_10 { pt3dadd( 0.471449, 430.076, -55.993, 0.74 ) }
    dend_10 { pt3dadd( 0.438341, 430.513, -56.0382, 0.96 ) }
    dend_10 { pt3dadd( 0.346086, 430.966, -56.0507, 0.96 ) }
    dend_10 { pt3dadd( 0.300702, 431.115, -56.0481, 0.96 ) }
    dend_10 { pt3dadd( -0.0893606, 432.259, -56.0607, 0.22 ) }
    dend_10 { pt3dadd( -0.415172, 433.16, -56.0896, 0.59 ) }
    dend_10 { pt3dadd( -0.587222, 433.615, -56.1476, 0.59 ) }
    dend_10 { pt3dadd( -1.08578, 434.963, -56.3797, 0.22 ) }
    dend_10 { pt3dadd( -1.33212, 435.71, -56.5448, 0.22 ) }
    dend_10 { pt3dadd( -1.53735, 436.418, -56.732, 1.25 ) }
    dend_10 { pt3dadd( -1.68933, 437.063, -56.9366, 1.33 ) }
    dend_10 { pt3dadd( -1.98934, 438.904, -57.5942, 0.22 ) }
    dend_10 { pt3dadd( -2.05289, 439.398, -57.7808, 0.66 ) }
    dend_10 { pt3dadd( -2.12686, 440.258, -58.1124, 0.22 ) }
    dend_10 { pt3dadd( -2.13219, 440.325, -58.1378, 0.22 ) }
    dend_10 { pt3dadd( -2.19267, 441.023, -58.4044, 0.74 ) }
    dend_10 { pt3dadd( -2.22863, 441.511, -58.5824, 0.74 ) }
    dend_10 { pt3dadd( -2.28745, 442.727, -58.9513, 0.15 ) }
    dend_10 { pt3dadd( -2.33032, 443.371, -59.1318, 0.52 ) }
    dend_10 { pt3dadd( -2.35205, 443.584, -59.1997, 0.52 ) }
    dend_10 { pt3dadd( -2.48262, 444.651, -59.5656, 0.22 ) }
    dend_10 { pt3dadd( -2.5382, 445.075, -59.7201, 0.37 ) }
    dend_10 { pt3dadd( -2.61148, 445.639, -59.9456, 0.15 ) }
    dend_10 { pt3dadd( -2.66079, 446.133, -60.1623, 0.44 ) }
    dend_10 { pt3dadd( -2.78925, 447.686, -60.9101, 0.22 ) }
    dend_10 { pt3dadd( -2.82324, 448.206, -61.1667, 0.74 ) }
    dend_10 { pt3dadd( -2.84544, 448.596, -61.3741, 0.96 ) }
    dend_10 { pt3dadd( -2.91372, 449.748, -62.0308, 0.22 ) }
    dend_10 { pt3dadd( -2.96072, 450.495, -62.4793, 0.22 ) }
    dend_10 { pt3dadd( -3.01723, 451.537, -63.1091, 0.81 ) }
    dend_10 { pt3dadd( -3.03356, 451.828, -63.2805, 0.81 ) }
    dend_10 { pt3dadd( -3.13761, 452.977, -63.9424, 0.22 ) }
    dend_10 { pt3dadd( -3.14597, 453.042, -63.9785, 0.22 ) }
    dend_10 { pt3dadd( -3.29064, 453.933, -64.4447, 0.74 ) }
    dend_10 { pt3dadd( -3.3539, 454.268, -64.6107, 0.96 ) }
    dend_10 { pt3dadd( -3.75994, 456.196, -65.5302, 0.22 ) }
    dend_10 { pt3dadd( -3.90868, 457.068, -65.9445, 0.52 ) }
    dend_10 { pt3dadd( -3.91725, 457.148, -65.9794, 0.52 ) }
    dend_10 { pt3dadd( -3.93133, 457.534, -66.1405, 0.74 ) }
    dend_10 { pt3dadd( -3.92712, 457.599, -66.1676, 0.74 ) }
    dend_10 { pt3dadd( -3.82933, 458.276, -66.4382, 0.74 ) }
    dend_10 { pt3dadd( -3.56297, 459.409, -66.8703, 0.22 ) }
    dend_10 { pt3dadd( -3.29135, 460.359, -67.2258, 0.22 ) }
    dend_10 { pt3dadd( -3.02413, 461.246, -67.5121, 0.74 ) }
    dend_10 { pt3dadd( -2.6297, 462.547, -67.8652, 0.22 ) }
    dend_10 { pt3dadd( -2.45054, 463.17, -67.989, 0.59 ) }
    dend_10 { pt3dadd( -2.43165, 463.239, -67.9964, 0.59 ) }
    dend_10 { pt3dadd( -2.177, 464.354, -68.0143, 0.22 ) }
    dend_10 { pt3dadd( -2.03947, 465.054, -67.9682, 0.66 ) }
    dend_10 { pt3dadd( -1.98621, 465.455, -67.9149, 0.66 ) }
    dend_10 { pt3dadd( -1.89688, 466.509, -67.7243, 0.22 ) }
    dend_10 { pt3dadd( -1.85645, 466.966, -67.6113, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_10 { pt3dadd( -1.8153, 467.416, -67.4888, 0.44 ) }
    dend_10 { pt3dadd( -1.69272, 468.847, -67.0672, 0.22 ) }
    dend_10 { pt3dadd( -1.58888, 469.6, -66.8219, 1.11 ) }
    dend_10 { pt3dadd( -1.461, 470.29, -66.5726, 1.11 ) }
    dend_10 { pt3dadd( -0.976025, 472.412, -65.7112, 0.22 ) }
    dend_10 { pt3dadd( -0.81835, 473.023, -65.4435, 0.52 ) }
    dend_10 { pt3dadd( -0.796935, 473.097, -65.4086, 0.52 ) }
    dend_10 { pt3dadd( -0.347692, 474.421, -64.7357, 0.22 ) }
    dend_10 { pt3dadd( -0.306801, 474.524, -64.683, 0.22 ) }
    dend_10 { pt3dadd( -0.0836974, 475.028, -64.4305, 0.22 ) }
    dend_10 { pt3dadd( 0.170047, 475.547, -64.2222, 0.52 ) }
    dend_10 { pt3dadd( 0.485044, 476.174, -63.9896, 0.15 ) }
    dend_10 { pt3dadd( 0.681636, 476.572, -63.8809, 0.29 ) }
    dend_10 { pt3dadd( 0.724719, 476.666, -63.8604, 0.29 ) }
    dend_10 { pt3dadd( 1.19842, 477.603, -63.6652, 0.15 ) }
    dend_10 { pt3dadd( 1.4827, 478.127, -63.5682, 0.44 ) }
    dend_10 { pt3dadd( 1.55619, 478.244, -63.5485, 0.44 ) }
    dend_10 { pt3dadd( 2.21069, 479.203, -63.4007, 0.22 ) }
    dend_10 { pt3dadd( 2.81551, 480.054, -63.2934, 1.03 ) }
    dend_10 { pt3dadd( 3.17552, 480.532, -63.259, 1.03 ) }
    dend_10 { pt3dadd( 3.71035, 481.171, -63.2757, 0.37 ) }
    dend_10 { pt3dadd( 4.32333, 481.859, -63.3276, 0.29 ) }
    dend_10 { pt3dadd( 4.37402, 481.914, -63.3347, 0.29 ) }
    dend_10 { pt3dadd( 4.59641, 482.134, -63.3806, 0.81 ) }
    dend_10 { pt3dadd( 5.13565, 482.65, -63.5229, 0.81 ) }
    dend_10 { pt3dadd( 6.09604, 483.583, -63.776, 0.22 ) }
    dend_10 { pt3dadd( 6.75234, 484.209, -63.9504, 0.22 ) }
    dend_10 { pt3dadd( 7.27248, 484.737, -64.0909, 0.74 ) }
    dend_10 { pt3dadd( 7.81901, 485.288, -64.2386, 0.74 ) }
    dend_10 { pt3dadd( 10.4804, 495.08, -64.6626, 0.74 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 30/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.1405, 272.925, 5.5738, 3.17 ) }
    dend_47 { pt3dadd( -10.7848, 273.26, 6.03253, 3.17 ) }
    dend_47 { pt3dadd( -12.6387, 274.475, 7.56574, 0.44 ) }
    dend_47 { pt3dadd( -13.0098, 274.786, 7.91425, 0.74 ) }
    dend_47 { pt3dadd( -13.044, 274.819, 7.95399, 0.74 ) }
    dend_47 { pt3dadd( -13.3792, 275.153, 8.35412, 0.74 ) }
    dend_47 { pt3dadd( -13.4153, 275.189, 8.39398, 0.74 ) }
    dend_47 { pt3dadd( -14.0964, 276.016, 9.20658, 0.66 ) }
    dend_47 { pt3dadd( -14.3327, 276.481, 9.61073, 0.59 ) }
    dend_47 { pt3dadd( -14.8926, 277.622, 10.6455, 0.29 ) }
    dend_47 { pt3dadd( -15.0859, 277.988, 11.0249, 0.29 ) }
    dend_47 { pt3dadd( -15.4965, 278.579, 11.7313, 0.29 ) }
    dend_47 { pt3dadd( -15.7301, 278.848, 12.0869, 0.29 ) }
    dend_47 { pt3dadd( -16.8098, 279.861, 13.5816, 1.55 ) }
    dend_47 { pt3dadd( -17.2198, 280.218, 14.1174, 1.92 ) }
    dend_47 { pt3dadd( -18.2517, 281.171, 15.3888, 1.4 ) }
    dend_47 { pt3dadd( -18.8943, 281.785, 16.1163, 0.66 ) }
    dend_47 { pt3dadd( -19.3917, 282.243, 16.617, 0.66 ) }
    dend_47 { pt3dadd( -19.4222, 282.263, 16.653, 0.66 ) }
    dend_47 { pt3dadd( -19.9303, 282.556, 17.2751, 0.59 ) }
    dend_47 { pt3dadd( -20.3624, 282.858, 17.9791, 0.59 ) }
    dend_47 { pt3dadd( -20.7709, 283.252, 18.9283, 0.96 ) }
    dend_47 { pt3dadd( -20.7858, 283.273, 18.973, 0.96 ) }
    dend_47 { pt3dadd( -22.0112, 285.241, 23.2339, 0.74 ) }
    dend_47 { pt3dadd( -22.1754, 285.502, 23.8045, 1.03 ) }
    dend_47 { pt3dadd( -22.3829, 285.822, 24.5554, 1.18 ) }
    dend_47 { pt3dadd( -22.7639, 286.341, 25.9044, 0.81 ) }
    dend_47 { pt3dadd( -23.0518, 286.601, 26.7422, 0.81 ) }
    dend_47 { pt3dadd( -23.0798, 286.617, 26.7961, 0.81 ) }
    dend_47 { pt3dadd( -23.6667, 286.718, 27.277, 0.81 ) }
    dend_47 { pt3dadd( -23.7198, 286.717, 27.3107, 0.81 ) }
    dend_47 { pt3dadd( -24.6678, 286.633, 27.816, 0.66 ) }
    dend_47 { pt3dadd( -26.7957, 286.353, 28.7919, 0.59 ) }
    dend_47 { pt3dadd( -27.4429, 286.272, 29.0931, 0.59 ) }
    dend_47 { pt3dadd( -27.4984, 286.272, 29.1229, 0.59 ) }
    dend_47 { pt3dadd( -28.0594, 286.4, 29.4502, 0.59 ) }
    dend_47 { pt3dadd( -28.4586, 286.601, 29.6873, 0.88 ) }
    dend_47 { pt3dadd( -28.4997, 286.639, 29.7101, 0.88 ) }
    dend_47 { pt3dadd( -28.9774, 287.209, 29.9205, 0.88 ) }
    dend_47 { pt3dadd( -29.9306, 288.232, 30.3054, 0.88 ) }
    dend_47 { pt3dadd( -30.746, 288.841, 30.6926, 0.88 ) }
    dend_47 { pt3dadd( -30.8151, 288.878, 30.7281, 0.88 ) }
    dend_47 { pt3dadd( -31.5122, 289.136, 31.0793, 0.88 ) }
    dend_47 { pt3dadd( -31.6681, 289.181, 31.1523, 0.88 ) }
    dend_47 { pt3dadd( -32.6599, 289.388, 31.5671, 0.88 ) }
    dend_47 { pt3dadd( -34.6377, 289.833, 32.235, 0.59 ) }
    dend_47 { pt3dadd( -34.7026, 289.853, 32.2555, 0.59 ) }
    dend_47 { pt3dadd( -35.2053, 290.056, 32.4496, 0.88 ) }
    dend_47 { pt3dadd( -36.0251, 290.417, 32.7951, 0.88 ) }
    dend_47 { pt3dadd( -36.578, 290.691, 33.0345, 0.66 ) }
    dend_47 { pt3dadd( -37.5591, 291.213, 33.4456, 0.66 ) }
    dend_47 { pt3dadd( -38.3835, 291.615, 33.8152, 1.03 ) }
    dend_47 { pt3dadd( -40.1168, 292.331, 34.7208, 1.03 ) }
    dend_47 { pt3dadd( -40.8522, 292.606, 35.1519, 0.96 ) }
    dend_47 { pt3dadd( -40.9084, 292.627, 35.1865, 0.96 ) }
    dend_47 { pt3dadd( -41.5877, 292.923, 35.6211, 0.74 ) }
    dend_47 { pt3dadd( -43.0417, 293.621, 36.5646, 0.52 ) }
    dend_47 { pt3dadd( -43.624, 294.02, 36.9247, 0.52 ) }
    dend_47 { pt3dadd( -44.1403, 294.63, 37.181, 0.52 ) }
    dend_47 { pt3dadd( -44.7697, 295.825, 37.5158, 0.74 ) }
    dend_47 { pt3dadd( -44.969, 296.528, 37.6347, 0.52 ) }
    dend_47 { pt3dadd( -44.9755, 296.645, 37.6434, 0.52 ) }
    dend_47 { pt3dadd( -44.8629, 297.357, 37.6255, 0.66 ) }
    dend_47 { pt3dadd( -44.844, 297.412, 37.6244, 0.66 ) }
    dend_47 { pt3dadd( -44.5588, 298.028, 37.6137, 0.66 ) }
    dend_47 { pt3dadd( -44.08, 298.842, 37.6045, 0.59 ) }
    dend_47 { pt3dadd( -43.7938, 299.31, 37.5998, 0.59 ) }
    dend_47 { pt3dadd( -43.2558, 300.161, 37.5922, 0.44 ) }
    dend_47 { pt3dadd( -42.803, 300.841, 37.5872, 0.66 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 99/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -10.1405, 272.925, 5.5738, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_46 { pt3dadd( -7.71894, 273.151, 6.65531, 0.52 ) }
    dend_46 { pt3dadd( -7.66951, 273.15, 6.68251, 0.52 ) }
    dend_46 { pt3dadd( -6.48684, 273.012, 7.52811, 0.74 ) }
    dend_46 { pt3dadd( -6.34569, 272.989, 7.63969, 0.74 ) }
    dend_46 { pt3dadd( -5.35924, 272.849, 8.41901, 0.74 ) }
    dend_46 { pt3dadd( -5.174, 272.827, 8.5617, 0.74 ) }
    dend_46 { pt3dadd( -3.95228, 272.633, 9.58904, 0.66 ) }
    dend_46 { pt3dadd( -2.5691, 272.457, 10.7622, 0.59 ) }
    dend_46 { pt3dadd( -2.52624, 272.453, 10.7986, 0.59 ) }
    dend_46 { pt3dadd( -1.68948, 272.41, 11.4633, 0.59 ) }
    dend_46 { pt3dadd( -1.32688, 272.415, 11.7438, 0.44 ) }
    dend_46 { pt3dadd( -0.614361, 272.47, 12.2263, 0.44 ) }
    dend_46 { pt3dadd( -0.55646, 272.484, 12.254, 0.44 ) }
    dend_46 { pt3dadd( 0.182757, 272.735, 12.463, 0.66 ) }
    dend_46 { pt3dadd( 0.306192, 272.772, 12.5003, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 15/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 29.0507, 261.465, -64.7045, 0.29 ) }
    dend_13 { pt3dadd( 35.2628, 261.218, -70.6597, 0.29 ) }
    dend_13 { pt3dadd( 42.2678, 261.969, -75.5985, 0.29 ) }
    dend_13 { pt3dadd( 48.91, 264.295, -80.49, 0.29 ) }
    dend_13 { pt3dadd( 55.9075, 267.44, -84.24, 0.29 ) }
    dend_13 { pt3dadd( 62.3196, 269.461, -89.57, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 21/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 29.0507, 261.465, -64.7045, 1.33 ) }
    dend_12 { pt3dadd( 35.7414, 261.059, -71.1348, 0.29 ) }
    dend_12 { pt3dadd( 42.8716, 259.309, -76.8067, 0.29 ) }
    dend_12 { pt3dadd( 48.901, 257.146, -83.5047, 0.29 ) }
    dend_12 { pt3dadd( 54.0706, 256.501, -91.1935, 0.29 ) }
    dend_12 { pt3dadd( 59.6408, 257.038, -98.6031, 0.29 ) }
    dend_12 { pt3dadd( 65.3279, 257.612, -105.92, 0.29 ) }
    dend_12 { pt3dadd( 72.084, 257.239, -112.284, 0.29 ) }
    dend_12 { pt3dadd( 78.6272, 257.828, -118.844, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_32, dend_1, dend_50, dend_33, dend_25, dend_2, dend_60, dend_51, dend_41, dend_34, dend_27, dend_26, dend_14, dend_3, dend_64, dend_61, dend_55, dend_52, dend_49, dend_42, dend_36, dend_35, dend_31, dend_28, dend_20, dend_15, dend_7, dend_4, dend_66, dend_65, dend_63, dend_62, dend_59, dend_56, dend_54, dend_53, dend_44, dend_43, dend_40, dend_37, dend_30, dend_29, dend_24, dend_21, dend_17, dend_16, dend_9, dend_8, dend_6, dend_5, dend_58, dend_57, dend_48, dend_45, dend_39, dend_38, dend_23, dend_22, dend_19, dend_18, dend_11, dend_10, dend_47, dend_46, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_51 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_41 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_27 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_20 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_54 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_53 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_44 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_43 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_24 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_8 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_11 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_10 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_47 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_13 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_12 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_50 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_33 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_60 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_64 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_61 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_62 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_66 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_65 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_63 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_52 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_3 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_37 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_40 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_31 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_38 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_28 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_30 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_59 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_29 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_57 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_58 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_42 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_9 OneSecGrp_SectionRef_51.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_48 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_45 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_46 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_22 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_18 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_58, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_23, dend_23, dend_22, dend_22, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_51 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 5
    dend_51 nseg = 3
    dend_41 nseg = 9
    dend_34 nseg = 5
    dend_27 nseg = 7
    dend_26 nseg = 3
    dend_14 nseg = 5
    dend_55 nseg = 5
    dend_35 nseg = 3
    dend_20 nseg = 5
    dend_15 nseg = 5
    dend_7 nseg = 5
    dend_4 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 7
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_16 nseg = 3
    dend_8 nseg = 5
    dend_6 nseg = 3
    dend_5 nseg = 5
    dend_11 nseg = 3
    dend_10 nseg = 13
    dend_47 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_SBC_a69bd53bb1_0_0


