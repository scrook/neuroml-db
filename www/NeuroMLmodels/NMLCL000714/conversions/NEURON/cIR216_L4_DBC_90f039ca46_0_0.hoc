// Cell: cIR216_L4_DBC_90f039ca46_0_0
/*
{
  "id" : "cIR216_L4_DBC_90f039ca46_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.26895, -17.6726, 3.85", "3.84084, -5.78047, -16.9858, 3.85", "4.63502, -5.2731, -16.2725, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -12.4309, -2.03262, 2.64", "-0.46979, -14.1063, -0.768776, 1.92", "-0.324446, -15.3654, 0.0671873, 1.8", "-0.183405, -16.3706, 0.615236, 1.92", "0.249371, -19.0507, 1.80038, 1.32", "0.483204, -20.2641, 2.2346, 1.56", "0.755566, -21.4654, 2.57574, 1.8", "1.01753, -22.4322, 2.68192, 2.04", "1.48452, -23.9308, 2.65255, 2.16", "1.80834, -24.9013, 2.50043, 1.32", "2.16924, -26.0013, 2.25399, 1.44", "2.57996, -27.4384, 1.99765, 1.44", "2.83365, -28.5665, 1.85946, 1.8", "2.94739, -29.3532, 1.79651, 2.04", "2.98857, -30.4718, 1.7596, 1.68", "2.88102, -32.1461, 1.72948, 1.44", "2.7409, -32.98, 1.72446, 1.8", "2.56629, -33.6644, 1.73239, 2.04", "2.28003, -34.599, 1.76462, 1.92", "1.97218, -35.4608, 1.79113, 1.56", "1.56685, -36.5161, 1.77117, 1.56", "1.29405, -37.2209, 1.66346, 0.72", "1.10268, -37.7497, 1.56964, 0.48", "0.956661, -38.168, 1.51066, 0.48", "0.619612, -39.1586, 1.41337, 1.32", "0.341023, -39.99, 1.3362, 1.68", "-0.174654, -41.537, 1.14402, 1.56", "-0.465129, -42.4068, 1.03783, 1.92", "-0.885855, -43.6999, 0.888515, 2.64", "-1.17742, -44.661, 0.808725, 2.76", "-1.39436, -45.5152, 0.780279, 2.76", "-1.6303, -46.7257, 0.818217, 1.68", "-1.72486, -47.5037, 0.874979, 0.96", "-1.7737, -48.5294, 0.939321, 0.96", "-1.74503, -49.8521, 1.01009, 1.32", "-1.62171, -51.7545, 1.13541, 1.8", "-1.54978, -52.5847, 1.20192, 2.16", "-1.45982, -53.5377, 1.27133, 2.28", "-1.35076, -54.7069, 1.32805, 0.84", "-1.29996, -55.4733, 1.34228, 0.84", "-1.27037, -56.6073, 1.31417, 1.08", "-1.35108, -57.7959, 1.24632, 1.68", "-1.52699, -58.7187, 1.18623, 2.52", "-1.64544, -59.0973, 1.13967, 3.0", "-1.81315, -59.5059, 1.06862, 2.88", "-1.92221, -59.7307, 1.02704, 2.88", "-2.37975, -60.583, 0.858512, 2.16", "-3.12829, -61.901, 0.719323, 0.96", "-3.70216, -62.9031, 0.643447, 0.48", "-3.90321, -63.2491, 0.618506, 0.48", "-4.6084, -64.4496, 0.541427, 1.92", "-5.29363, -65.5879, 0.486239, 3.12", "-6.0655, -66.886, 0.476741, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 10.7351, 0.167383, 2.16", "3.18924, 12.8133, 0.939202, 1.44", "3.74184, 14.8069, 1.64158, 2.16", "4.36202, 16.9824, 2.35669, 3.25", "4.79846, 18.4544, 2.82281, 3.49", "5.30398, 20.1171, 3.43159, 3.25", "5.65866, 21.2836, 3.85871, 2.88", "5.93175, 22.1689, 4.2269, 2.88", "6.22678, 23.0814, 4.56989, 2.52", "6.787, 24.6919, 5.20056, 2.16", "7.59554, 26.8806, 6.08182, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.781013", "-2.81746, -27.7426, -0.718029, 0.781013", "-4.56437, -42.6406, -0.718029, 0.781013" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.63502, -5.2731, -16.2725, 1.56", "3.86005, -2.10303, -17.3799, 1.56", "3.5977, -0.76459, -17.846, 1.2", "3.46392, 0.183807, -18.1829, 0.96", "3.36443, 1.31246, -18.5376, 0.96", "3.27789, 3.30311, -19.1473, 1.32", "3.2651, 5.57148, -19.6952, 1.32", "3.36066, 7.41736, -19.9405, 1.44", "3.54878, 8.9959, -20.0786, 1.44", "3.85403, 10.6693, -20.133, 1.44", "4.13839, 11.9864, -20.0879, 1.68", "4.65673, 14.3838, -19.8444, 2.88", "4.84773, 15.4072, -19.6734, 3.73", "5.05117, 17.0363, -19.3727, 3.73", "5.15633, 19.1762, -18.996, 2.88", "5.108, 21.607, -18.6489, 1.68", "5.00984, 22.7449, -18.5126, 1.2", "4.87405, 23.7905, -18.4481, 0.96", "4.63526, 25.1432, -18.3672, 1.68", "4.27552, 26.6469, -18.2839, 2.88", "4.05509, 27.3095, -18.2562, 3.49", "3.7301, 28.0666, -18.2538, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.63502, -5.2731, -16.2725, 1.32", "6.28974, -5.98121, -16.2203, 1.32", "6.95669, -6.25438, -16.2952, 0.84", "7.92643, -6.67351, -16.4899, 1.2", "8.98853, -7.1989, -16.8026, 1.44", "10.0575, -7.8844, -17.2493, 1.32", "10.9074, -8.60668, -17.6936, 1.56", "11.7254, -9.67081, -18.386, 1.2", "11.9553, -10.07, -18.6589, 1.2", "12.2047, -10.7691, -19.1466, 1.2", "12.4034, -11.9828, -19.9571, 2.64", "12.4286, -13.0093, -20.5447, 4.45", "12.4114, -13.8239, -20.8606, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.0655, -66.886, 0.476741, 3.0", "-6.77288, -67.626, 0.780982, 3.0", "-7.17358, -68.112, 0.959347, 2.76", "-7.78197, -68.9747, 1.28898, 1.92", "-7.97154, -69.3057, 1.41607, 1.92", "-8.32602, -70.0783, 1.69709, 0.6", "-8.52528, -70.6179, 1.8691, 0.48", "-8.56252, -70.8309, 1.91811, 0.48", "-8.60063, -71.3893, 2.01708, 0.48", "-8.58144, -72.0674, 2.09346, 0.84", "-8.49176, -72.8363, 2.14711, 1.08", "-8.33286, -73.5932, 2.20031, 1.32", "-8.12114, -74.3376, 2.22741, 0.96", "-7.93524, -74.8601, 2.23474, 0.72", "-7.71068, -75.4012, 2.226, 0.6", "-7.28374, -76.2496, 2.22956, 0.48", "-6.81894, -77.0344, 2.20199, 0.48", "-6.321, -77.775, 2.15428, 1.44", "-5.76878, -78.5377, 2.08228, 1.92", "-5.34324, -79.0993, 2.03869, 2.04", "-4.78664, -79.8616, 1.99485, 1.44", "-4.12657, -80.8151, 1.93159, 0.84", "-3.93721, -81.1119, 1.94432, 0.12", "-3.70214, -81.5377, 2.02997, 0.12", "-3.39445, -82.2479, 2.32333, 1.32", "-3.13805, -83.0113, 2.74731, 1.68", "-3.03809, -83.3738, 2.96927, 1.8", "-2.63138, -84.8709, 3.92426, 1.2", "-2.47911, -85.5132, 4.3229, 1.68", "-2.20992, -86.5743, 4.97893, 1.2", "-2.04663, -87.2485, 5.40601, 0.24", "-1.94798, -87.7014, 5.7098, 0.24", "-1.80563, -88.5065, 6.23467, 1.92", "-1.76425, -89.0532, 6.55339, 1.8", "-1.90045, -90.7471, 7.58231, 0.72", "-2.10216, -91.6049, 8.11126, 0.72", "-2.33214, -92.1722, 8.48069, 0.48", "-2.55941, -92.5654, 8.7681, 0.36", "-2.98775, -93.1573, 9.20584, 0.36", "-3.23993, -93.5282, 9.43468, 0.36", "-3.70689, -94.4451, 10.0037, 0.6", "-3.78784, -94.7869, 10.2197, 0.6", "-3.84026, -95.2199, 10.5736, 0.36", "-3.8737, -95.5415, 10.8836, 0.36", "-3.89335, -95.9369, 11.2828, 0.36", "-3.97506, -97.0738, 12.494, 0.36", "-4.0176, -97.295, 12.7442, 0.36", "-4.15801, -98.0092, 13.6401, 1.44", "-4.20791, -98.2838, 14.0147, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.0655, -66.886, 0.476741, 0.12", "-6.40289, -68.6412, 0.235298, 0.12", "-6.56919, -69.2712, 0.0662883, 0.12", "-6.73784, -69.8535, -0.120905, 0.96", "-6.91423, -70.5249, -0.349851, 1.32", "-7.03019, -71.0387, -0.534214, 1.32", "-7.23627, -72.1603, -0.946465, 0.6", "-7.39296, -72.9977, -1.36438, 0.36", "-7.4192, -73.2172, -1.49027, 0.36", "-7.42044, -73.7545, -1.81506, 0.36", "-7.38858, -74.0983, -1.99775, 0.36", "-7.3542, -74.4555, -2.15058, 0.36", "-7.33698, -75.1232, -2.35336, 0.36", "-7.36924, -75.5699, -2.44082, 0.36", "-7.46347, -76.2091, -2.62755, 0.36", "-7.61648, -76.9378, -2.84463, 1.08", "-7.8671, -77.9166, -3.12762, 1.68", "-8.07287, -78.6295, -3.32682, 1.8", "-8.36081, -79.5552, -3.55599, 1.56", "-8.76465, -80.9276, -3.94511, 1.2", "-8.92331, -81.5591, -4.1348, 0.36", "-8.98382, -81.9021, -4.21871, 0.36", "-9.02424, -82.2987, -4.25144, 0.36", "-9.06175, -83.251, -4.23305, 1.56", "-9.05735, -83.9828, -4.17497, 1.92", "-9.02323, -84.8933, -4.04082, 1.92", "-8.93086, -86.1392, -3.86763, 1.08", "-8.81093, -87.1989, -3.68841, 0.36", "-8.69696, -88.06, -3.51996, 0.36", "-8.60812, -88.6587, -3.32399, 0.36", "-8.57686, -88.8929, -3.23124, 0.36", "-8.50702, -89.4797, -2.99399, 0.96", "-8.4402, -90.1066, -2.72171, 1.8", "-8.3794, -90.816, -2.45226, 2.16", "-8.25495, -92.8768, -1.70727, 1.92", "-8.23005, -93.8867, -1.39795, 1.8", "-8.24402, -94.7528, -1.21864, 1.8", "-8.319, -95.7864, -1.21631, 1.2", "-8.50635, -97.2687, -1.64624, 0.12", "-8.54054, -97.4945, -1.75771, 0.12", "-8.6447, -98.1111, -2.14673, 0.12", "-8.76897, -98.8545, -2.6203, 0.84", "-8.95747, -100.089, -3.43039, 1.08", "-9.1039, -101.198, -4.13764, 1.92", "-9.19415, -102.081, -4.6123, 2.88", "-9.24929, -102.64, -4.88494, 2.88", "-9.31952, -103.357, -5.21849, 1.92", "-9.43311, -104.379, -5.64933, 0.36", "-9.49602, -104.863, -5.80797, 0.36", "-9.57776, -105.473, -5.95254, 1.08", "-9.69313, -106.238, -6.11836, 1.2", "-9.86935, -107.384, -6.32115, 0.48", "-10.0158, -108.372, -6.47053, 0.48", "-10.1502, -109.237, -6.57325, 0.48", "-10.366, -110.49, -6.72088, 1.92", "-10.5358, -111.345, -6.81406, 2.4", "-10.6927, -112.075, -6.87981, 2.64", "-10.9212, -113.069, -6.93877, 2.64", "-11.1051, -113.779, -6.99613, 2.04", "-11.3863, -114.697, -7.08857, 0.72", "-11.5386, -115.128, -7.12356, 0.72", "-11.7477, -115.74, -7.13032, 0.72", "-11.9314, -116.335, -7.12871, 0.72", "-12.136, -117.115, -7.10882, 0.24", "-12.2766, -117.811, -7.01197, 0.12", "-12.3204, -118.198, -6.91949, 0.12", "-12.3379, -118.925, -6.69946, 0.12", "-12.2658, -119.651, -6.45314, 1.2", "-12.143, -120.288, -6.23735, 2.28", "-11.6776, -122.124, -5.64827, 1.8", "-11.3906, -123.119, -5.36459, 0.36", "-11.2514, -123.63, -5.26903, 0.36", "-11.0434, -124.672, -5.17911, 0.36", "-10.9386, -125.668, -5.19393, 0.36", "-10.9184, -126.304, -5.30087, 0.36", "-10.9857, -127.286, -5.61902, 0.36", "-11.2094, -128.501, -6.05496, 1.56", "-11.4462, -129.43, -6.39042, 2.4", "-11.6017, -129.945, -6.57209, 2.4", "-11.8545, -130.832, -6.862, 2.4", "-12.1678, -132.194, -7.24299, 0.48", "-12.2626, -132.74, -7.36041, 0.48", "-12.3357, -133.604, -7.47558, 0.6", "-12.3377, -134.348, -7.55331, 0.36", "-12.3005, -135.228, -7.63422, 0.36", "-12.2436, -136.072, -7.69221, 0.48", "-12.1844, -136.688, -7.75447, 0.36", "-12.11, -137.434, -7.87187, 0.36", "-12.0634, -138.165, -8.02731, 0.36", "-12.0721, -138.634, -8.16449, 0.48", "-12.1457, -139.33, -8.43413, 0.48", "-12.3012, -140.169, -8.77195, 0.36", "-12.432, -140.763, -9.01056, 0.84", "-12.6615, -141.727, -9.3493, 1.32", "-12.9775, -142.986, -9.72765, 2.16", "-13.2408, -143.944, -9.98402, 2.64", "-13.5277, -144.931, -10.2148, 2.28", "-13.8622, -146.037, -10.3899, 1.8", "-14.1915, -147.179, -10.522, 1.2", "-14.3528, -147.835, -10.5003, 0.48", "-14.5586, -148.927, -10.3451, 0.36", "-14.6684, -149.672, -10.1815, 0.36", "-14.744, -150.432, -9.97594, 1.08", "-14.769, -151.195, -9.71966, 1.08", "-14.6742, -153.369, -8.95653, 1.44", "-14.5487, -154.595, -8.53569, 1.44", "-14.4269, -155.445, -8.21402, 1.32", "-14.309, -156.272, -7.93542, 0.48", "-14.2215, -156.955, -7.76673, 0.48", "-14.1835, -157.372, -7.68488, 1.08", "-14.1395, -158.156, -7.59296, 1.68", "-14.118, -159.44, -7.39126, 2.28", "-14.1583, -160.317, -7.27533, 2.4", "-14.2814, -161.442, -7.18795, 1.32", "-14.4181, -162.202, -7.1523, 0.6", "-14.5422, -162.697, -7.18776, 0.48", "-14.8193, -163.477, -7.3889, 0.48", "-15.1143, -164.17, -7.67803, 0.48", "-15.4545, -164.938, -8.15855, 1.08", "-15.7103, -165.598, -8.62366, 1.92", "-16.1867, -167.003, -9.73064, 1.92", "-16.5239, -168.157, -10.6821, 2.28", "-16.7126, -168.92, -11.3188, 2.76", "-17.105, -170.774, -12.8042, 2.76", "-17.3642, -172.207, -13.8435, 0.72", "-17.5238, -173.312, -14.5427, 0.72", "-17.6239, -174.172, -14.9711, 0.96", "-17.7122, -174.889, -15.253, 1.56", "-17.8531, -175.753, -15.5102, 1.8", "-17.9957, -176.523, -15.6272, 1.44", "-18.1306, -177.417, -15.7347, 0.48", "-18.1489, -177.773, -15.7652, 0.6", "-18.1287, -178.723, -15.845, 0.6", "-18.1011, -179.168, -15.8721, 0.48", "-18.0287, -180.196, -15.9165, 0.48", "-17.9885, -180.998, -15.9386, 0.48", "-17.9718, -181.988, -15.9184, 0.48", "-17.9983, -182.97, -15.8973, 0.84", "-18.0993, -184.242, -15.8632, 1.68", "-18.2786, -185.623, -15.8175, 2.4", "-18.4183, -186.523, -15.7827, 2.4", "-18.6092, -187.777, -15.7472, 0.6", "-18.7054, -188.648, -15.7295, 0.6", "-18.737, -189.782, -15.7564, 0.6", "-18.6603, -190.786, -15.8151, 0.6", "-18.5088, -191.613, -15.8629, 1.08", "-18.2972, -192.425, -15.9025, 1.44", "-18.0735, -193.144, -15.9314, 0.84", "-17.8161, -193.944, -15.9261, 0.96", "-17.5532, -194.862, -15.8985, 0.96", "-17.407, -195.543, -15.8685, 0.72", "-17.3369, -196.054, -15.8429, 0.48", "-17.3034, -196.514, -15.8154, 0.48", "-17.3057, -197.151, -15.7614, 1.32", "-17.3867, -198.198, -15.6489, 1.8", "-17.4891, -198.961, -15.6073, 2.04", "-17.6692, -199.989, -15.6049, 1.92", "-17.8196, -200.755, -15.6313, 1.44", "-18.0193, -201.707, -15.714, 0.48", "-18.2017, -202.517, -15.8452, 0.48", "-18.4947, -203.819, -16.1352, 1.44", "-18.7436, -204.952, -16.4117, 2.52", "-18.9458, -205.935, -16.6623, 3.25", "-19.1927, -207.342, -17.0358, 2.28", "-19.3133, -208.319, -17.288, 1.8", "-19.3783, -209.422, -17.5466, 0.96", "-19.3966, -210.906, -17.8423, 0.96", "-19.3726, -212.02, -18.0636, 0.96", "-19.3153, -213.45, -18.3307, 2.52", "-19.2544, -214.509, -18.4761, 2.52", "-19.1294, -216.28, -18.6429, 1.44", "-19.0592, -217.152, -18.7034, 0.96", "-18.9692, -218.168, -18.7731, 0.72", "-18.9289, -218.687, -18.8028, 0.72", "-18.8867, -219.691, -18.8902, 0.72", "-18.9035, -220.442, -18.9941, 0.72", "-18.9558, -221.287, -19.2192, 1.08", "-18.9927, -222.114, -19.6257, 1.44", "-18.9944, -222.417, -19.8205, 1.44", "-18.9845, -223.669, -20.7809, 0.36", "-18.9584, -224.729, -21.6866, 0.36", "-18.8957, -225.979, -22.767, 1.32", "-18.7754, -227.417, -23.9626, 0.48", "-18.7075, -228.009, -24.4168, 0.48", "-18.5343, -229.238, -25.2801, 1.92", "-18.4753, -229.619, -25.5119, 2.76", "-18.348, -230.519, -25.967, 2.4", "-18.2729, -231.374, -26.2239, 1.32", "-18.2774, -231.867, -26.3811, 0.12", "-18.334, -232.345, -26.5866, 0.12", "-18.3942, -232.583, -26.7108, 0.12", "-18.6313, -233.307, -27.1728, 1.08", "-18.7995, -233.8, -27.5421, 1.08", "-19.4449, -235.883, -29.3665, 0.24", "-19.4992, -236.177, -29.6388, 0.24", "-19.5131, -236.732, -30.1363, 0.24", "-19.3834, -237.398, -30.6505, 0.24", "-19.0775, -238.124, -31.1055, 0.24", "-18.591, -239.046, -31.6418, 1.08", "-18.1221, -239.854, -32.0169, 2.04", "-17.7189, -240.604, -32.3745, 2.04", "-17.2598, -241.535, -32.8217, 1.44", "-17.0866, -242.005, -33.022, 0.96", "-16.6433, -243.767, -33.6423, 0.72", "-16.5217, -244.493, -33.8323, 0.36", "-16.4782, -245.356, -34.0285, 0.36", "-16.4934, -245.742, -34.083, 0.36", "-16.5878, -246.686, -34.1055, 1.32", "-16.6761, -247.479, -34.0463, 2.04", "-16.7162, -247.863, -33.9853, 2.4", "-16.7814, -248.417, -33.8919, 2.4", "-16.9516, -249.871, -33.6469, 0.48", "-17.0388, -250.616, -33.5285, 0.36", "-17.1874, -251.968, -33.3617, 0.36", "-17.2664, -252.729, -33.2771, 0.36", "-17.3537, -253.565, -33.1971, 1.68", "-17.3994, -254.188, -33.1521, 2.16", "-17.4109, -254.587, -33.1384, 2.16", "-17.3921, -255.637, -33.102, 0.96", "-17.3532, -256.262, -33.1107, 0.36", "-17.3219, -256.637, -33.1594, 0.36", "-17.2315, -257.561, -33.396, 0.36", "-17.1487, -258.464, -33.6976, 0.36", "-17.0907, -259.096, -33.9172, 0.36", "-17.0146, -260.096, -34.2609, 1.44", "-16.9653, -261.473, -34.6937, 2.4", "-16.9649, -262.191, -34.881, 2.52", "-16.983, -262.534, -34.95, 2.52", "-17.1007, -263.77, -35.1073, 0.48", "-17.1792, -264.538, -35.1621, 0.36", "-17.3251, -265.905, -35.1004, 0.36", "-17.3876, -266.521, -35.0051, 1.32", "-17.4718, -267.292, -34.854, 1.92", "-17.5412, -267.95, -34.7336, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.59554, 26.8806, 6.08182, 1.92", "7.85166, 29.5943, 5.85957, 1.92", "7.94342, 30.9081, 5.76145, 2.28", "8.00668, 32.1182, 5.71206, 1.8", "8.07972, 33.5375, 5.67932, 1.8", "8.19033, 35.4673, 5.65547, 1.68", "8.33954, 37.7159, 5.64385, 2.4", "8.43217, 39.439, 5.75334, 2.88", "8.4962, 40.3487, 5.8007, 2.76", "8.57006, 41.1802, 5.86551, 2.76", "8.63991, 41.8107, 5.95684, 2.76", "8.75004, 42.5264, 6.10592, 2.52", "9.07074, 44.0457, 6.49402, 1.68", "9.27676, 44.9294, 6.73785, 1.44", "9.52065, 45.9303, 7.0088, 1.68", "9.95902, 47.7558, 7.54193, 2.64", "10.2257, 48.8694, 7.88726, 2.88", "10.3835, 49.5004, 8.09435, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.59554, 26.8806, 6.08182, 0.84", "7.09521, 26.7091, 6.22626, 0.84", "6.29562, 26.603, 6.44954, 0.84", "5.74768, 26.6702, 6.67374, 0.84", "5.58829, 26.7328, 6.77338, 0.84", "5.21898, 27.0172, 7.07939, 0.72", "4.96906, 27.3616, 7.48906, 0.72", "4.88226, 27.6021, 7.80428, 0.72", "4.89112, 28.0568, 8.3981, 0.96", "5.01196, 28.4, 8.87542, 1.44", "5.2292, 28.7612, 9.37553, 1.56", "5.75929, 29.3846, 10.2761, 1.32", "6.16152, 29.7592, 10.8472, 0.48", "6.52819, 30.0447, 11.2732, 0.6", "7.28136, 30.5233, 11.9819, 0.6", "7.7546, 30.7634, 12.3142, 1.68", "8.62049, 31.0718, 12.644, 1.92", "9.28817, 31.2267, 12.5446, 1.56", "11.2133, 31.3109, 11.0339, 0.48", "11.5785, 31.2768, 10.5391, 0.48", "11.8593, 31.2342, 10.0858, 0.84", "12.0058, 31.1883, 9.76238, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.461138", "-6.31129, -57.5385, -0.718029, 0.461138", "-8.0582, -72.4364, -0.718029, 0.461138" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "3.7301, 28.0666, -18.2538, 0.96", "5.23575, 29.8276, -18.9896, 0.96", "6.03832, 30.8743, -19.3143, 0.6", "6.74584, 31.9206, -19.5727, 0.6", "7.09268, 32.5053, -19.692, 1.32", "7.37114, 33.044, -19.7614, 1.56", "7.83756, 34.1135, -19.8294, 0.96", "8.23749, 35.4692, -19.6996, 0.6", "8.37196, 36.1248, -19.6022, 0.48", "8.46349, 36.7025, -19.5106, 0.48", "8.64407, 37.8815, -19.3333, 0.72", "8.87534, 39.2979, -19.1672, 1.8", "9.12755, 40.5823, -19.0665, 2.04", "9.38751, 41.6116, -19.025, 2.64", "9.73586, 42.7502, -19.0614, 3.25", "10.09, 43.7693, -19.1586, 3.25", "10.4843, 44.7896, -19.3215, 2.88", "11.0511, 46.1265, -19.5682, 0.84", "11.289, 46.6688, -19.6679, 0.6", "11.8817, 48.0627, -19.9009, 2.4", "12.279, 49.0499, -20.0416, 3.25", "12.6412, 49.9901, -20.141, 2.88", "13.2309, 51.5497, -20.2545, 0.96", "13.8575, 53.2082, -20.3831, 0.84", "14.2443, 54.2296, -20.4703, 0.48", "14.5123, 54.9243, -20.5266, 0.48", "15.0249, 56.2691, -20.6562, 0.48", "15.4202, 57.3258, -20.7798, 1.92", "15.9067, 58.5826, -20.9741, 3.37", "16.2543, 59.3985, -21.1413, 3.49", "16.7213, 60.3589, -21.3821, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "3.7301, 28.0666, -18.2538, 0.84", "2.27579, 29.4077, -18.3024, 0.84", "1.95311, 29.8576, -18.4043, 0.72", "1.76487, 30.2467, -18.5253, 0.72", "1.63307, 30.7412, -18.7519, 0.72", "1.46407, 31.6426, -19.3518, 0.84", "1.26628, 32.7387, -20.1759, 0.72", "1.21808, 33.502, -20.8294, 0.48", "1.18956, 34.2172, -21.4654, 0.48", "1.13879, 35.4653, -22.587, 0.72", "1.03286, 36.7759, -23.7553, 0.48", "0.972426, 37.11, -24.0714, 0.48", "0.887417, 37.4021, -24.328, 0.48", "0.681856, 37.936, -24.7666, 1.32", "0.434251, 38.4655, -25.1869, 2.04", "0.0595941, 39.1944, -25.7045, 1.56", "-0.704653, 40.7727, -26.765, 0.36", "-0.880633, 41.1472, -27.0369, 0.36", "-1.5509, 42.5672, -28.1687, 2.4", "-1.83141, 43.163, -28.7001, 3.25", "-2.0073, 43.5414, -29.0713, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.4114, -13.8239, -20.8606, 0.24", "12.2652, -15.3171, -20.9416, 0.24", "12.238, -15.8442, -20.9954, 0.24", "12.2435, -16.8252, -21.0973, 1.92", "12.2453, -17.6032, -21.1613, 2.52", "12.2336, -18.2336, -21.199, 2.4", "12.2114, -18.884, -21.2287, 1.8", "12.2, -19.7286, -21.2627, 0.24", "12.173, -20.725, -21.2611, 0.24", "12.1367, -21.7147, -21.2106, 0.24", "12.1026, -22.3959, -21.1478, 0.24", "12.0564, -23.0264, -21.0933, 1.68", "11.9598, -24.0298, -21.0001, 1.92", "11.8257, -25.1489, -20.9014, 2.28", "11.6998, -26.0263, -20.8369, 3.12", "11.5563, -26.927, -20.7786, 3.12", "11.2627, -28.5358, -20.651, 0.24", "11.1277, -29.1537, -20.5871, 0.24", "11.0912, -29.2895, -20.5698, 0.48", "10.916, -29.8217, -20.4796, 0.48", "10.6435, -30.5326, -20.3145, 0.48", "10.4702, -31.0072, -20.1642, 0.48", "10.4066, -31.243, -20.0572, 0.12", "10.3561, -31.7314, -19.8546, 0.12", "10.3545, -31.9952, -19.7531, 0.12", "10.3869, -32.3759, -19.6234, 0.72", "10.4921, -33.1336, -19.4039, 0.96", "10.5603, -33.6161, -19.2989, 0.24", "10.6876, -34.5731, -19.1289, 0.24", "10.7452, -34.9878, -19.0444, 0.96", "10.8091, -35.4659, -18.9394, 1.44", "10.874, -36.0538, -18.8052, 1.56", "10.9345, -36.8619, -18.6183, 0.48", "10.9638, -37.3898, -18.4987, 0.24", "11.015, -38.3611, -18.2728, 1.68", "11.0689, -39.0429, -18.1321, 2.88", "11.1767, -40.0231, -17.9201, 2.88", "11.3655, -41.303, -17.6422, 0.24", "11.5673, -42.3582, -17.4074, 0.24", "11.6564, -42.7509, -17.3252, 0.24", "11.9661, -43.962, -17.1126, 0.24", "12.19, -44.7258, -16.9833, 1.8", "12.4705, -45.5542, -16.8406, 2.76", "12.8926, -46.6767, -16.6463, 0.48", "13.1303, -47.3142, -16.5337, 0.48", "13.2977, -47.8184, -16.4427, 0.6", "13.4619, -48.3834, -16.3204, 0.6", "13.5683, -48.8278, -16.233, 0.36", "13.6644, -49.3069, -16.1348, 0.36", "13.7566, -50.1073, -16.0188, 0.48", "13.8287, -51.1838, -15.8981, 0.48", "13.8477, -51.9166, -15.8316, 1.44", "13.8505, -52.8573, -15.8029, 2.76", "13.8599, -53.6472, -15.8234, 3.0", "13.8977, -55.3052, -16.0125, 0.12", "13.9112, -55.7967, -16.1023, 0.12", "13.9274, -56.4977, -16.2668, 0.12", "13.9508, -57.3038, -16.481, 1.32", "13.9816, -58.0773, -16.6809, 2.4", "14.0266, -59.6117, -17.0293, 0.12", "14.0445, -60.3547, -17.1527, 0.12", "14.0371, -60.7982, -17.2077, 0.84", "14.0108, -61.2875, -17.2437, 0.96", "13.9288, -62.4309, -17.2477, 0.12", "13.863, -63.2803, -17.2169, 0.12", "13.8309, -63.9394, -17.1595, 1.32", "13.8185, -64.5602, -17.1052, 1.8", "13.8249, -65.3911, -17.0235, 0.12", "13.845, -66.4772, -16.8973, 0.12", "13.8698, -67.0615, -16.8188, 1.56", "13.9311, -67.7494, -16.7261, 2.52", "14.0045, -68.3456, -16.6433, 2.64", "14.1983, -69.6137, -16.4599, 1.32", "14.2886, -70.1846, -16.3701, 0.12", "14.3041, -70.2901, -16.3533, 0.24", "14.4009, -71.0356, -16.2475, 0.24", "14.509, -71.911, -16.1377, 0.24", "14.5714, -72.5054, -16.1108, 0.24", "14.6104, -72.9208, -16.12, 0.24", "14.6449, -73.3301, -16.1438, 1.56", "14.6837, -73.9755, -16.1901, 2.28", "14.7043, -74.574, -16.2513, 2.28", "14.7453, -75.9266, -16.4206, 0.48", "14.7642, -76.7109, -16.5206, 0.48", "14.7666, -76.8101, -16.5318, 0.72", "14.7742, -77.5052, -16.5939, 0.96", "14.774, -78.0869, -16.6179, 0.48", "14.7602, -78.3944, -16.6281, 0.48", "14.7305, -78.8924, -16.6075, 0.48", "14.6856, -79.5523, -16.5695, 0.6", "14.6734, -79.7746, -16.553, 0.24", "14.6556, -80.4696, -16.4963, 0.24", "14.676, -81.4708, -16.4006, 1.56", "14.7168, -82.2717, -16.3275, 2.4", "14.7713, -82.9847, -16.2635, 2.52", "14.8087, -83.38, -16.2264, 2.52", "14.9448, -84.66, -16.0742, 0.24", "15.161, -86.2108, -15.8531, 0.24", "15.2316, -86.6146, -15.788, 0.96", "15.3475, -87.1949, -15.702, 1.44", "15.4404, -87.5823, -15.6418, 1.68", "15.6667, -88.416, -15.5248, 0.24", "16.124, -89.8421, -15.3439, 0.24", "16.3943, -90.5886, -15.2672, 1.56", "16.571, -91.0553, -15.2317, 2.16", "16.7644, -91.5592, -15.2095, 1.8", "17.063, -92.4356, -15.1981, 0.12", "17.2025, -92.946, -15.2119, 0.12", "17.217, -93.0446, -15.2135, 0.6", "17.2377, -93.4638, -15.2075, 0.12", "17.2306, -93.7789, -15.1917, 0.12", "17.1811, -94.5489, -15.1225, 0.12", "17.1612, -94.9048, -15.0727, 0.6", "17.1571, -95.4896, -14.9305, 0.6", "17.1751, -95.8731, -14.8065, 0.12", "17.2126, -96.3304, -14.6319, 0.12", "17.2415, -96.7108, -14.4767, 0.6", "17.2979, -97.2604, -14.2445, 0.6", "17.4216, -98.3024, -13.8049, 0.12", "17.5134, -98.9934, -13.5205, 0.12", "17.6127, -99.6886, -13.2507, 1.44", "17.7209, -100.411, -12.9969, 2.4", "17.774, -100.752, -12.8935, 2.52", "17.8613, -101.304, -12.7625, 2.16", "18.0122, -101.98, -12.6691, 0.12", "18.1885, -102.542, -12.5666, 0.36", "18.3249, -102.899, -12.4868, 0.12", "18.4379, -103.167, -12.4161, 0.12", "18.6082, -103.558, -12.3123, 0.12", "18.9204, -104.248, -12.1287, 0.12", "19.2949, -105.041, -11.9288, 0.12", "19.3706, -105.222, -11.8895, 0.12", "19.5561, -105.784, -11.7856, 0.12", "19.7191, -106.457, -11.7087, 1.8", "19.7745, -106.75, -11.6923, 2.28", "19.8588, -107.339, -11.6356, 1.92", "20.0038, -108.299, -11.4935, 0.36", "20.1135, -109.029, -11.3502, 0.36", "20.2235, -109.697, -11.1942, 1.2", "20.3505, -110.272, -10.9923, 0.72", "20.6892, -111.432, -10.6061, 0.12", "21.031, -112.471, -10.2725, 0.12", "21.274, -113.148, -10.0649, 1.68", "21.4607, -113.675, -9.90448, 1.8", "21.939, -115.077, -9.45665, 1.44", "22.3871, -116.508, -9.06739, 0.24", "22.8263, -117.884, -8.72145, 0.12", "23.0339, -118.517, -8.54415, 0.12", "23.3794, -119.604, -8.19992, 0.12", "23.5366, -120.137, -8.03788, 1.2", "23.7516, -120.871, -7.83965, 2.52", "24.1295, -121.989, -7.40241, 0.48", "24.2326, -122.242, -7.30119, 0.48", "24.5125, -122.86, -7.05615, 0.48", "24.8411, -123.529, -6.81317, 0.72", "25.2691, -124.399, -6.51617, 0.24", "25.7217, -125.308, -6.13582, 0.12", "26.0838, -125.985, -5.86116, 0.12", "26.3033, -126.351, -5.72801, 1.08", "26.5718, -126.746, -5.57321, 1.32", "26.8078, -127.064, -5.45719, 1.08", "27.4368, -127.894, -5.18603, 0.36", "28.3799, -129.149, -4.88104, 0.36", "29.0227, -129.99, -4.67102, 1.56", "29.5798, -130.726, -4.49324, 2.16", "30.0531, -131.309, -4.37112, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "12.4114, -13.8239, -20.8606, 0.36", "13.9266, -15.2424, -21.2463, 0.36", "14.4787, -15.4755, -21.5009, 0.36", "14.7966, -15.5162, -21.6927, 0.36", "15.0884, -15.5345, -21.8712, 0.36", "15.794, -15.5827, -22.2899, 0.72", "16.8705, -15.692, -22.9217, 0.96", "17.5645, -15.6925, -23.3671, 0.96", "18.5399, -15.7142, -24.0011, 0.48", "19.4336, -15.8026, -24.5782, 0.36", "19.8784, -15.9403, -24.8631, 0.36", "20.2077, -16.2458, -25.0483, 0.36", "20.297, -16.4526, -25.0839, 0.36", "20.5054, -17.155, -25.1441, 0.36", "20.6992, -17.8193, -25.1642, 1.56", "20.9772, -18.6284, -25.1712, 2.52", "21.2964, -19.3496, -25.2109, 2.4", "22.0503, -20.6397, -25.3287, 0.36", "22.351, -21.0445, -25.3871, 0.36", "23.0008, -21.7767, -25.5262, 0.36", "23.645, -22.407, -25.6825, 0.36", "24.5539, -23.2185, -25.9042, 1.44", "25.535, -24.0288, -26.1506, 3.25", "26.6459, -24.885, -26.4424, 4.69", "26.8513, -25.0484, -26.5024, 4.93", "28.0536, -26.1031, -26.9122, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-17.5412, -267.95, -34.7336, 0.12", "-17.8986, -268.906, -35.6992, 0.12", "-18.0393, -269.339, -36.1364, 0.12", "-18.0813, -269.464, -36.3017, 0.12", "-18.1484, -269.604, -36.4905, 0.36", "-18.5762, -270.368, -37.4902, 0.12", "-18.7102, -270.593, -37.823, 0.12", "-18.7102, -270.593, -37.823, 0.36", "-19.1887, -271.408, -39.0994, 0.36", "-19.4758, -271.939, -39.8944, 2.52", "-19.5767, -272.149, -40.1864, 2.88", "-20.4535, -274.046, -42.5714, 0.24", "-20.5705, -274.314, -42.8821, 0.12", "-20.6645, -274.573, -43.1433, 0.12", "-20.7503, -274.918, -43.4111, 0.48", "-20.8048, -275.3, -43.6617, 0.48", "-20.8487, -275.696, -43.8694, 0.12", "-20.9003, -276.402, -44.0437, 0.12", "-20.9236, -276.819, -44.1889, 0.12", "-20.9461, -277.296, -44.3759, 0.84", "-20.973, -277.605, -44.4881, 0.84", "-21.0721, -278.77, -44.8788, 0.12", "-21.1073, -279.279, -45.0269, 0.12", "-21.242, -280.595, -45.3731, 2.64", "-21.3086, -281.007, -45.4701, 2.28", "-21.5752, -282.148, -45.6027, 0.12", "-21.7031, -282.549, -45.5891, 0.12", "-22.0408, -283.292, -45.4236, 0.12", "-22.3823, -283.799, -45.2414, 1.2", "-22.4474, -283.871, -45.2018, 1.44", "-23.4619, -284.821, -44.5707, 0.12", "-23.7974, -285.067, -44.3459, 0.12", "-24.1211, -285.254, -44.1192, 0.12", "-24.5678, -285.449, -43.7671, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-17.5412, -267.95, -34.7336, 0.6", "-17.1248, -268.73, -35.8142, 0.6", "-17.0816, -268.827, -35.9647, 0.6", "-16.9118, -269.242, -36.6081, 1.32", "-16.7425, -269.696, -37.2776, 2.28", "-16.5523, -270.206, -38.0303, 2.04", "-15.927, -271.883, -40.5045, 0.96", "-15.7866, -272.28, -41.1626, 0.48", "-15.7165, -272.486, -41.5256, 0.48", "-15.652, -272.705, -41.9485, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "10.3835, 49.5004, 8.09435, 1.2", "10.6834, 50.8971, 7.75682, 1.2", "10.914, 52.2208, 7.56553, 1.32", "11.0399, 53.0111, 7.48475, 1.44", "11.1978, 54.0285, 7.42045, 0.96", "11.4367, 55.3976, 7.36763, 1.08", "11.8089, 57.2362, 7.33172, 1.56", "12.2212, 58.8196, 7.41267, 0.96", "12.5061, 59.6996, 7.50802, 0.6", "12.8339, 60.5349, 7.63452, 1.2", "13.19, 61.3154, 7.78263, 2.04", "13.4961, 61.9201, 7.91159, 2.16", "14.1238, 63.1401, 8.1925, 1.2", "14.5489, 64.0229, 8.37761, 0.84", "14.9396, 64.9593, 8.49981, 0.48", "15.1667, 65.6196, 8.53573, 0.48", "15.5521, 67.1133, 8.49471, 0.48", "15.766, 68.2155, 8.39231, 0.84", "15.957, 69.4599, 8.20595, 1.92", "16.1999, 71.0181, 7.90998, 2.52", "16.341, 71.8107, 7.73976, 2.28", "16.6157, 73.1136, 7.48501, 0.6", "16.7277, 73.5604, 7.4177, 0.6", "16.8953, 74.2064, 7.35518, 0.48", "17.1695, 75.3095, 7.32005, 0.48", "17.3675, 76.148, 7.35814, 0.96", "17.5462, 76.8971, 7.41405, 1.8", "17.8024, 77.9612, 7.53989, 2.04", "18.0562, 79.0856, 7.67406, 2.04", "18.3605, 80.7116, 7.85421, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "10.3835, 49.5004, 8.09435, 1.32", "11.5492, 51.0112, 8.52174, 1.32", "12.0773, 51.6554, 8.6121, 0.96", "13.0282, 52.6937, 8.67399, 1.32", "13.6369, 53.2452, 8.65645, 1.68", "14.4349, 53.8561, 8.60638, 1.2", "15.4216, 54.5268, 8.52577, 0.84", "16.5099, 55.1549, 8.36374, 0.72", "17.1325, 55.488, 8.28152, 0.84", "18.2181, 55.9355, 8.122, 0.6", "18.9204, 56.1558, 8.02501, 0.6", "19.4973, 56.2712, 7.96492, 1.32", "20.9257, 56.4981, 8.04695, 1.8", "21.755, 56.7947, 8.31705, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "16.7213, 60.3589, -21.3821, 0.48", "17.0874, 61.7943, -21.2022, 0.48", "17.266, 62.652, -21.0821, 0.48", "17.3682, 63.2349, -20.9886, 0.48", "17.5377, 64.2746, -20.8293, 0.72", "17.6334, 64.9, -20.7403, 0.48", "17.7422, 65.6511, -20.6409, 0.48", "17.8242, 66.7424, -20.5286, 0.48", "17.8822, 67.7264, -20.4304, 1.8", "17.9221, 68.2309, -20.3828, 2.64", "17.9887, 68.8043, -20.3354, 2.88", "18.0841, 69.4659, -20.2709, 2.88", "18.2056, 70.2176, -20.1947, 2.04", "18.3754, 71.1684, -20.1027, 0.48", "18.4476, 71.5473, -20.0631, 0.36", "18.7261, 72.946, -19.9164, 0.36", "18.9146, 73.8425, -19.8272, 1.44", "19.1298, 74.6668, -19.7541, 2.52", "19.3825, 75.4729, -19.6924, 2.64", "19.5872, 76.0429, -19.6578, 2.52", "20.0767, 77.294, -19.6062, 0.48", "20.2916, 77.8193, -19.5974, 0.36", "20.7, 78.8356, -19.5974, 0.36", "20.8872, 79.317, -19.5909, 0.36", "21.183, 80.1194, -19.5829, 0.36", "21.495, 81.0229, -19.5735, 1.44", "21.6572, 81.575, -19.5695, 1.56", "21.8255, 82.2978, -19.5735, 0.24", "21.9597, 83.1477, -19.5872, 0.24", "22.0539, 83.8853, -19.5898, 0.72", "22.0999, 84.2581, -19.5854, 0.72", "22.1554, 84.6905, -19.5731, 0.48", "22.2007, 84.9743, -19.56, 0.36", "22.2958, 85.4339, -19.5144, 0.36", "22.4387, 85.9819, -19.4159, 0.84", "22.7266, 86.8645, -19.2175, 2.4", "22.851, 87.2198, -19.142, 3.0", "23.1067, 87.9207, -18.9985, 3.0", "23.4218, 88.8017, -18.8386, 1.68", "23.729, 89.6841, -18.6975, 0.36", "23.9671, 90.4088, -18.6052, 0.36", "24.2291, 91.3535, -18.5151, 0.36", "24.3955, 92.1027, -18.4737, 1.68", "24.4839, 92.608, -18.4671, 2.52", "24.5375, 93.0048, -18.4792, 2.64", "24.5947, 93.5143, -18.5034, 2.28", "24.6911, 94.3371, -18.5393, 0.48", "24.8872, 95.4652, -18.6078, 0.48", "25.0749, 96.3024, -18.6747, 0.48", "25.1785, 96.6749, -18.705, 0.96", "25.3785, 97.3141, -18.7533, 1.56", "25.5403, 97.7748, -18.7813, 1.56", "25.8821, 98.6743, -18.8192, 0.48", "25.9902, 98.9493, -18.8336, 0.12", "26.2964, 99.7468, -18.8793, 0.12", "26.6265, 100.642, -18.9301, 2.16", "26.7843, 101.096, -18.9531, 2.88", "26.9, 101.462, -18.9635, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "16.7213, 60.3589, -21.3821, 0.48", "16.7646, 63.1236, -23.289, 0.48", "16.7576, 63.5279, -23.5563, 0.48", "16.7166, 64.3989, -24.1729, 0.72", "16.6876, 64.9973, -24.6379, 0.72", "16.6551, 66.1185, -25.5197, 0.24", "16.6442, 66.6206, -25.9215, 0.12", "16.6383, 67.3283, -26.4628, 0.84", "16.6504, 68.2463, -27.2361, 0.12", "16.6921, 69.2342, -28.1019, 0.12", "16.7394, 69.7937, -28.5658, 1.68", "16.8268, 70.4651, -29.0505, 2.4", "16.9865, 71.6292, -29.866, 1.8", "17.1422, 72.7451, -30.6342, 0.12", "17.1945, 73.2561, -30.9577, 0.12", "17.2337, 74.2841, -31.5877, 1.92", "17.2271, 74.9821, -32.0515, 2.4", "17.1664, 76.8203, -33.3492, 0.6", "17.1073, 77.6754, -33.9667, 0.48", "17.0501, 78.3649, -34.4623, 0.48", "16.9745, 79.3703, -35.2015, 1.2", "16.8891, 80.5089, -36.0977, 0.48", "16.8739, 80.9369, -36.4296, 0.12", "16.9243, 81.7968, -36.9851, 0.12", "16.9971, 82.3264, -37.2916, 0.72", "17.0932, 82.8535, -37.6459, 0.72", "17.2883, 84.1013, -38.4941, 0.12", "17.3216, 84.3872, -38.699, 0.12", "17.4228, 85.2444, -39.3611, 2.28", "17.4772, 85.6997, -39.7775, 2.52", "17.7143, 87.6986, -41.8092, 0.12", "17.8469, 88.5088, -42.6616, 0.12", "18.0176, 89.3267, -43.5326, 1.44", "18.119, 89.7821, -44.029, 1.8", "18.3407, 90.7599, -45.1323, 1.32", "18.4498, 91.3308, -45.7484, 0.12", "18.628, 92.2185, -46.5985, 0.12", "18.862, 93.4474, -47.7174, 1.56", "18.9253, 93.8612, -48.0625, 1.92", "19.0641, 95.2242, -49.127, 0.12", "19.1298, 96.0626, -49.7407, 0.12", "19.1608, 96.5812, -50.1202, 0.96", "19.1696, 96.7742, -50.2669, 0.96", "19.2209, 97.5954, -50.9656, 0.12", "19.2596, 98.2349, -51.5579, 0.12", "19.2917, 99.1745, -52.4623, 1.32", "19.3026, 99.6124, -52.8873, 1.8", "19.3056, 100.185, -53.4221, 1.32", "19.325, 101.805, -54.8602, 0.12", "19.3226, 101.996, -55.0549, 0.12", "19.3191, 102.676, -55.7961, 0.36", "19.2947, 103.255, -56.4078, 0.36", "19.279, 104.041, -57.2774, 1.92", "19.3079, 104.691, -58.0072, 2.76", "19.6124, 107.587, -61.1505, 0.36", "19.6427, 107.829, -61.4225, 0.36", "19.7752, 108.734, -62.4657, 0.36", "19.9121, 109.632, -63.505, 0.36", "20.0027, 110.135, -64.0856, 0.36", "20.2049, 110.99, -65.0657, 0.72", "20.5461, 111.987, -66.2047, 0.12", "20.6301, 112.225, -66.4956, 0.12", "20.7911, 112.658, -67.0677, 1.92", "21.028, 113.55, -68.2139, 2.52", "21.2622, 114.501, -69.573, 1.44", "21.4671, 115.049, -70.5369, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-2.0073, 43.5414, -29.0713, 0.12", "-2.01258, 45.471, -29.6055, 0.12", "-2.02429, 46.313, -29.856, 0.6", "-2.01828, 46.9556, -30.052, 0.12", "-2.01184, 47.2475, -30.1361, 0.12", "-2.00193, 47.6422, -30.2371, 0.12", "-1.98623, 48.1149, -30.3442, 0.24", "-1.96578, 48.5549, -30.4544, 0.12", "-1.93917, 48.9336, -30.6047, 0.12", "-1.88399, 49.56, -30.8971, 0.12", "-1.81776, 50.1732, -31.2153, 1.32", "-1.74868, 50.5861, -31.4376, 1.8", "-1.49715, 51.7451, -32.0535, 0.84", "-1.31141, 52.4547, -32.5397, 0.12", "-1.23526, 52.6757, -32.7118, 0.12", "-0.946139, 53.3647, -33.2581, 1.8", "-0.75566, 53.7759, -33.5715, 2.16", "-0.561759, 54.1553, -33.858, 1.8", "0.437482, 55.9077, -35.3137, 0.24", "0.872056, 56.6098, -35.9492, 0.24", "1.31724, 57.3141, -36.6023, 0.24", "1.5154, 57.6264, -36.9035, 0.24", "2.1518, 58.6546, -37.9429, 2.28", "3.0224, 60.0774, -39.4175, 0.24", "3.16121, 60.3064, -39.6427, 0.24", "3.56386, 60.988, -40.3542, 0.24", "4.00746, 61.7197, -41.1341, 1.44", "4.36189, 62.329, -41.7342, 1.8", "4.7754, 63.1179, -42.3621, 0.12", "5.0704, 63.7397, -42.7506, 0.12", "5.22164, 64.0676, -42.9559, 0.96", "5.35358, 64.3432, -43.1224, 1.2", "5.68563, 65.051, -43.4904, 0.12", "5.94936, 65.6071, -43.7636, 0.12", "6.10871, 65.9313, -43.9365, 0.36", "6.43603, 66.6181, -44.3913, 0.12", "6.5786, 66.9566, -44.6189, 0.12", "6.80438, 67.5499, -45.017, 0.48", "7.08298, 68.3346, -45.5635, 0.48", "7.35617, 69.163, -46.1389, 2.28", "7.78316, 70.5265, -47.0456, 0.12", "7.98271, 71.2345, -47.4834, 0.12", "8.08143, 71.628, -47.7298, 0.12", "8.2405, 72.3769, -48.1805, 1.08", "8.29856, 72.7772, -48.429, 1.2", "8.32449, 73.4689, -48.9854, 0.12", "8.28733, 74.0014, -49.4861, 0.12", "8.21257, 74.8084, -50.3296, 1.44", "8.18169, 75.0891, -50.6306, 2.04", "8.10536, 75.6033, -51.1778, 1.68", "7.82074, 77.1687, -52.8821, 0.24", "7.70679, 77.683, -53.4548, 0.24", "7.57739, 78.2293, -54.068, 0.12", "7.44268, 78.7496, -54.6064, 0.72", "7.38483, 79.0002, -54.8447, 0.72", "7.32498, 79.2342, -55.0358, 0.12", "7.11106, 80.021, -55.5632, 0.12", "6.98037, 80.3703, -55.8375, 0.12", "6.64756, 81.0063, -56.3676, 1.68", "6.57185, 81.1427, -56.4842, 1.68", "5.99417, 82.3238, -57.5206, 0.12", "5.81577, 82.7518, -57.875, 0.12", "5.69351, 83.1612, -58.2146, 0.24", "5.59509, 83.6136, -58.5834, 0.24", "5.48173, 84.3681, -59.1754, 0.24", "5.39447, 85.1512, -59.7038, 1.56", "5.37395, 85.6458, -59.9894, 2.04", "5.35374, 87.0375, -60.7104, 0.36", "5.36503, 87.4635, -60.9104, 0.48", "5.40179, 88.1156, -61.2288, 0.48", "5.41994, 88.8304, -61.5569, 0.48", "5.41372, 89.1971, -61.7245, 0.24", "5.38903, 89.6113, -61.9553, 0.24", "5.33258, 90.1995, -62.3303, 0.24", "5.22274, 91.0095, -62.9688, 1.08", "5.1458, 91.362, -63.3009, 1.08", "4.95662, 91.8192, -63.8839, 0.36", "4.65078, 92.2997, -64.6, 0.36", "4.52948, 92.435, -64.8309, 0.36", "4.37927, 92.566, -65.0684, 0.36", "4.16812, 92.73, -65.3717, 0.36", "3.24546, 93.4335, -66.6567, 1.68", "3.07097, 93.563, -66.8779, 2.4", "2.9438, 93.6594, -67.0282, 2.64", "1.5914, 94.6849, -68.552, 0.6", "1.41764, 94.8065, -68.7307, 0.12", "1.18033, 94.9605, -68.9352, 0.12", "0.881759, 95.1296, -69.1417, 0.6", "0.570769, 95.2972, -69.3547, 0.12", "0.219242, 95.4713, -69.5514, 0.12", "-0.367173, 95.697, -69.7484, 1.44", "-0.854061, 95.8841, -69.907, 1.08", "-2.07454, 96.3983, -70.2701, 0.12", "-2.57045, 96.6438, -70.3839, 0.12", "-3.15961, 96.9769, -70.4686, 0.84", "-3.39093, 97.1254, -70.5023, 0.84", "-3.55198, 97.2351, -70.5208, 0.12", "-3.92332, 97.4665, -70.5404, 0.12", "-4.45859, 97.7779, -70.5194, 1.44", "-4.64837, 97.8803, -70.5202, 1.56", "-5.41512, 98.3007, -70.5618, 0.12", "-5.99361, 98.6265, -70.5928, 0.12", "-6.34873, 98.8228, -70.6113, 1.08", "-6.7821, 99.047, -70.6584, 1.92", "-7.1395, 99.2246, -70.7237, 1.56", "-7.80554, 99.5604, -70.8855, 0.12", "-8.07403, 99.6949, -70.9631, 0.12", "-8.23962, 99.7805, -71.0243, 0.48", "-8.93803, 100.159, -71.3371, 0.48", "-9.24089, 100.333, -71.481, 0.12", "-9.6962, 100.629, -71.6019, 0.12", "-9.88224, 100.819, -71.7373, 0.84", "-10.0545, 101.013, -71.905, 1.2", "-10.3402, 101.332, -72.1296, 0.12", "-10.7807, 101.696, -72.1551, 0.12", "-11.9718, 102.135, -71.2229, 2.88", "-14.3979, 102.501, -68.3023, 0.96", "-14.8131, 102.475, -67.6169, 0.96", "-16.8884, 101.921, -63.3494, 0.12", "-17.1237, 101.819, -62.7871, 0.12", "-17.2918, 101.713, -62.3282, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-2.0073, 43.5414, -29.0713, 0.48", "-3.53558, 43.9391, -29.782, 0.48", "-4.17746, 44.2005, -30.3631, 0.48", "-4.94726, 44.7028, -31.4607, 0.48", "-5.32303, 45.0005, -32.049, 2.16", "-5.50303, 45.1623, -32.349, 2.52", "-5.74709, 45.4023, -32.7729, 2.52", "-6.66248, 46.5264, -34.8484, 1.44", "-7.23787, 47.2372, -36.2274, 0.36", "-7.45361, 47.4775, -36.7352, 0.48", "-7.87193, 47.8808, -37.6893, 0.6", "-8.31644, 48.2382, -38.872, 0.6", "-8.86372, 48.6329, -40.5077, 0.6", "-9.10378, 48.7835, -41.2211, 1.92", "-9.31406, 48.8948, -41.835, 2.64", "-9.52391, 48.9959, -42.4452, 2.64", "-11.4558, 49.8424, -47.9279, 1.68", "-12.3253, 50.213, -50.3058, 0.72", "-12.4962, 50.2906, -50.7465, 1.56", "-12.8596, 50.4663, -51.6479, 1.92", "-13.0291, 50.5499, -52.0324, 2.28", "-13.1794, 50.6238, -52.3268, 2.28", "-14.8534, 51.3422, -54.323, 0.24", "-15.1379, 51.4536, -54.6418, 0.12", "-15.3353, 51.5267, -54.9072, 0.12", "-15.6806, 51.648, -55.4173, 0.12", "-16.3121, 51.8454, -56.3725, 1.32", "-16.6083, 51.9234, -56.8319, 2.16", "-17.0933, 52.0176, -57.5661, 2.4", "-18.4944, 52.2055, -59.6835, 0.72", "-18.8857, 52.2334, -60.2695, 0.84", "-19.1324, 52.2324, -60.6409, 1.08", "-19.8958, 52.1749, -61.7185, 0.48", "-20.0889, 52.1529, -61.9739, 0.12", "-20.4764, 52.0909, -62.4343, 0.48", "-20.6238, 52.0577, -62.5726, 0.48", "-21.2791, 51.8799, -63.1825, 0.12", "-21.5223, 51.8041, -63.4038, 0.12", "-21.8377, 51.6941, -63.7092, 0.12", "-22.0194, 51.6394, -63.9676, 0.12", "-22.2096, 51.5924, -64.2997, 0.12", "-22.3895, 51.5516, -64.5933, 0.48", "-22.4698, 51.5285, -64.7192, 0.48", "-23.0772, 51.2817, -65.6618, 0.48", "-23.452, 51.0771, -66.218, 0.12", "-23.5903, 51.0069, -66.3989, 0.12", "-23.9425, 50.81, -66.8062, 0.12", "-24.5572, 50.4458, -67.5207, 1.8", "-24.9815, 50.2163, -67.9532, 2.76", "-25.2504, 50.0659, -68.1897, 2.76", "-25.7455, 49.7691, -68.6079, 1.92", "-26.2606, 49.4299, -69.0596, 1.92", "-27.4264, 48.557, -70.2238, 0.12", "-27.8865, 48.1733, -70.7068, 0.12", "-28.1176, 47.9587, -70.9971, 0.12", "-28.3448, 47.7286, -71.291, 0.48", "-28.5489, 47.5005, -71.571, 0.6", "-28.9771, 47.0443, -72.1403, 0.12", "-29.1338, 46.8439, -72.344, 0.12", "-29.8303, 45.8608, -73.3756, 2.4", "-30.2148, 45.3922, -73.9379, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "30.0531, -131.309, -4.37112, 0.12", "30.0941, -132.186, -4.4601, 0.12", "30.0624, -132.474, -4.46029, 0.12", "29.989, -132.801, -4.41443, 0.36", "29.8503, -133.306, -4.30596, 0.48", "29.7791, -133.552, -4.24595, 0.12", "29.6847, -133.921, -4.15256, 0.12", "29.5227, -134.482, -3.95304, 0.36", "29.3994, -134.83, -3.71726, 0.12", "29.264, -135.095, -3.47254, 0.12", "29.1283, -135.276, -3.2818, 0.12", "28.9141, -135.552, -2.96642, 0.12", "28.579, -135.955, -2.46111, 0.36", "28.0328, -136.545, -1.66806, 0.12", "27.6377, -136.915, -1.13763, 0.12", "26.9904, -137.384, -0.328668, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "30.0531, -131.309, -4.37112, 0.12", "30.4273, -131.476, -4.72131, 0.12", "30.7148, -131.605, -5.02452, 0.12", "31.0288, -131.749, -5.35786, 0.48", "31.2651, -131.858, -5.6088, 0.12", "31.73, -132.072, -6.1025, 0.12", "32.2139, -132.295, -6.61646, 0.12", "32.7342, -132.535, -7.24254, 2.52", "32.8491, -132.588, -7.39056, 2.28", "32.8636, -132.595, -7.40875, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "28.0536, -26.1031, -26.9122, 0.48", "27.7145, -28.5133, -28.3737, 0.48", "27.68, -28.8886, -28.5621, 0.36", "27.6567, -29.2864, -28.7375, 0.36", "27.6392, -29.7356, -28.9133, 0.84", "27.6252, -30.4433, -29.1666, 1.32", "27.6583, -31.3776, -29.4707, 0.48", "27.7806, -32.0962, -29.5821, 0.36", "27.8533, -32.4197, -29.6283, 0.36", "27.9689, -32.8332, -29.6954, 0.48", "28.1083, -33.263, -29.767, 0.36", "28.4003, -34.0767, -29.9144, 0.36", "28.5666, -34.5328, -30.0031, 0.36", "28.6724, -34.946, -30.0865, 0.48", "28.7719, -35.4614, -30.194, 0.36", "28.8414, -35.9886, -30.3024, 0.36", "28.8588, -36.2008, -30.3441, 0.36", "28.9351, -38.0719, -30.694, 3.49", "28.9767, -39.8521, -30.9889, 0.12", "28.9815, -40.1648, -31.0355, 0.12", "28.9859, -40.646, -31.0936, 0.36", "28.9859, -40.8109, -31.1114, 0.12", "28.9718, -41.3876, -31.1554, 0.12", "28.9176, -41.941, -31.1558, 0.6", "28.882, -42.2726, -31.1372, 0.6", "28.7958, -42.8176, -31.1081, 0.36", "28.7536, -43.0305, -31.103, 0.24", "28.6704, -43.3691, -31.1018, 0.24", "28.5545, -43.7428, -31.1045, 1.08", "28.2846, -44.5868, -31.1197, 1.8", "28.0817, -45.2333, -31.106, 1.56", "27.917, -45.812, -31.0516, 0.96", "27.8279, -46.2468, -30.9993, 0.24", "27.6987, -47.096, -30.8894, 0.24", "27.6511, -47.5273, -30.8294, 0.24", "27.5869, -48.3451, -30.709, 0.24", "27.4957, -49.9963, -30.4562, 3.25", "27.454, -51.524, -30.2267, 0.24", "27.4539, -51.852, -30.1817, 0.24", "27.4802, -52.9264, -30.059, 0.24", "27.5014, -53.4568, -30.015, 0.48", "27.5167, -53.6729, -30.0093, 0.12", "27.6946, -55.1772, -30.0229, 0.12", "27.7166, -55.3289, -30.0244, 0.84", "27.8058, -55.8695, -30.0318, 1.08", "27.9131, -56.4924, -30.0441, 0.12", "28.0982, -57.5827, -30.0651, 0.12", "28.2955, -58.7941, -30.087, 2.4", "28.4919, -60.0906, -30.1078, 0.24", "28.5605, -60.6189, -30.1236, 0.24", "28.6239, -61.2657, -30.1493, 0.36", "28.6432, -61.6072, -30.1684, 0.24", "28.6478, -61.8234, -30.184, 0.24", "28.6406, -62.1366, -30.2264, 0.24", "28.6082, -62.7421, -30.3508, 0.24", "28.6045, -63.1239, -30.4359, 0.84", "28.6204, -63.4979, -30.5203, 0.84", "28.6468, -63.8346, -30.5805, 0.84", "28.7016, -64.3227, -30.6363, 0.12", "28.7282, -64.5712, -30.6528, 0.12", "28.8186, -65.2872, -30.6701, 0.12", "28.8653, -65.6325, -30.6751, 1.32", "28.9516, -66.387, -30.71, 1.68", "29.0484, -67.3528, -30.7705, 1.2", "29.0998, -67.9297, -30.8692, 0.12", "29.1134, -68.1492, -30.9226, 0.12", "29.131, -68.7749, -31.1038, 0.12", "29.1318, -69.6803, -31.3874, 1.32", "29.1198, -70.2898, -31.5915, 2.04", "29.101, -71.9313, -32.1375, 0.36", "29.1049, -72.8637, -32.4211, 0.36", "29.1027, -73.5938, -32.595, 0.36", "29.1067, -73.9793, -32.6607, 0.36", "29.1133, -74.4023, -32.6942, 0.36", "29.13, -75.2785, -32.6993, 1.92", "29.1515, -75.9257, -32.6425, 2.52", "29.2171, -77.1263, -32.5321, 0.24", "29.2601, -77.6999, -32.4326, 0.24", "29.3082, -78.2633, -32.3083, 0.84", "29.3646, -78.8911, -32.1461, 1.08", "29.422, -79.5311, -31.9296, 0.36", "29.5239, -80.3324, -31.6145, 0.36", "29.7583, -81.7053, -31.0241, 1.44", "29.8768, -82.306, -30.749, 1.92", "29.9769, -82.7392, -30.551, 1.56", "30.2216, -83.7219, -30.0497, 0.12", "30.3431, -84.1933, -29.8053, 0.12", "30.4691, -84.6699, -29.5693, 0.12", "30.505, -84.8076, -29.5107, 0.48", "30.7091, -85.5821, -29.1752, 0.84", "31.0783, -87.0861, -28.5675, 0.12", "31.2261, -87.7107, -28.3462, 0.12", "31.2909, -88.0016, -28.2382, 0.24", "31.3838, -88.4123, -28.0846, 0.24", "31.4537, -88.7297, -27.9726, 0.24", "31.5364, -89.1273, -27.8457, 0.48", "31.5774, -89.361, -27.7951, 0.6", "31.6394, -89.752, -27.7052, 0.12", "31.6901, -90.0733, -27.6269, 0.12", "31.7369, -90.3853, -27.5468, 0.12", "31.893, -91.4833, -27.2571, 2.4", "31.9792, -92.1074, -27.0926, 2.88", "32.0544, -92.7351, -26.9376, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "28.0536, -26.1031, -26.9122, 0.12", "28.6589, -27.234, -25.126, 0.12", "28.9389, -27.6257, -24.4148, 0.12", "29.4195, -28.1339, -23.3942, 0.72", "30.5271, -29.0336, -21.3794, 0.72", "31.0666, -29.3531, -20.5863, 0.12", "31.5308, -29.5743, -20.0268, 0.12", "32.3427, -29.8314, -19.1157, 1.68", "32.9276, -29.9656, -18.5665, 2.28", "34.0028, -30.1473, -17.7787, 1.92", "35.2713, -30.4288, -16.848, 0.36", "36.2955, -30.7748, -15.9964, 0.36", "37.0097, -31.2022, -15.1744, 0.6", "37.2613, -31.4754, -14.6703, 0.36", "37.4524, -31.7673, -14.1506, 0.36", "38.3247, -33.4155, -11.2874, 0.36", "38.4662, -33.7258, -10.763, 1.2", "38.8828, -34.791, -8.9495, 1.92", "39.4955, -36.4355, -6.19278, 0.24", "39.8064, -37.2664, -4.77642, 2.16", "39.9362, -37.5658, -4.26475, 3.0", "40.1783, -37.8874, -3.70396, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.652, -272.705, -41.9485, 0.12", "-14.7372, -272.711, -42.0567, 0.12", "-14.3292, -272.738, -42.0785, 0.12", "-14.1086, -272.764, -42.0821, 0.12", "-13.4175, -272.853, -42.0746, 0.6", "-13.118, -272.892, -42.0714, 0.6", "-12.5717, -272.962, -42.0655, 0.12", "-11.7604, -273.105, -41.9971, 0.12", "-11.4922, -273.163, -41.9784, 0.84", "-11.2776, -273.217, -41.9616, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-15.652, -272.705, -41.9485, 1.56", "-15.5956, -273.136, -41.9174, 1.56", "-15.5175, -273.732, -41.8743, 2.28", "-15.4714, -274.085, -41.8489, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.3605, 80.7116, 7.85421, 0.48", "18.9814, 82.7432, 8.42272, 0.48", "19.1747, 83.4607, 8.56716, 0.36", "19.3433, 84.1978, 8.67243, 0.36", "19.4792, 84.962, 8.74526, 0.36", "19.5617, 85.6149, 8.7903, 0.36", "19.5909, 85.9902, 8.8062, 0.72", "19.5842, 86.3791, 8.74723, 0.72", "19.5565, 86.8519, 8.67647, 0.36", "19.502, 87.4398, 8.59351, 0.36", "19.4625, 87.9622, 8.53129, 1.2", "19.4354, 88.5576, 8.47603, 1.8", "19.412, 89.3852, 8.43319, 1.8", "19.3994, 90.5313, 8.41597, 0.36", "19.4079, 90.9041, 8.39398, 0.36", "19.4516, 91.6803, 8.345, 0.72", "19.486, 92.0595, 8.32042, 0.84", "19.5727, 92.8885, 8.27657, 0.36", "19.6413, 93.5511, 8.25066, 1.08", "19.7844, 94.9482, 8.14958, 2.64", "19.8783, 95.8545, 8.05779, 3.61", "19.9208, 96.2736, 7.98938, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.3605, 80.7116, 7.85421, 0.6", "18.1362, 82.0554, 7.72848, 0.6", "18.08, 82.961, 7.57868, 0.6", "18.0789, 84.2079, 7.24906, 0.6", "18.0879, 84.7539, 7.00791, 0.6", "18.0829, 85.5461, 6.62016, 1.68", "18.0557, 86.3275, 6.22301, 2.04", "18.0632, 86.8251, 5.90319, 1.8", "18.0201, 87.431, 5.42395, 2.04", "17.7, 88.4402, 4.50506, 0.48", "17.4173, 88.9138, 4.10029, 0.48", "17.2657, 89.0861, 3.97669, 0.72", "16.8864, 89.4743, 3.74516, 0.96", "16.3741, 89.9952, 3.45863, 0.72", "15.9599, 90.4483, 3.24568, 1.32", "15.6164, 90.896, 3.06051, 1.8", "15.1668, 91.6152, 2.76328, 1.8", "14.8521, 92.2264, 2.53595, 0.96", "14.553, 92.9128, 2.27414, 0.72", "14.3458, 93.4258, 2.06592, 0.84", "13.9541, 94.3689, 1.6145, 1.56", "13.7439, 94.858, 1.34369, 2.52", "13.5549, 95.2752, 1.09441, 2.52", "12.994, 96.3843, 0.409853, 2.4", "12.4906, 97.3002, -0.181189, 1.56", "12.0961, 97.9828, -0.656401, 0.84", "11.8007, 98.4742, -1.01151, 0.48", "11.686, 98.6711, -1.1609, 0.24", "11.3721, 99.2119, -1.56129, 0.24", "11.135, 99.6458, -1.99114, 0.48", "11.0082, 99.9124, -2.32645, 0.12", "10.9131, 100.163, -2.66377, 0.12", "10.6867, 100.803, -3.55661, 1.2", "10.5681, 101.16, -4.04851, 1.56", "10.0076, 102.902, -6.40947, 0.36", "9.83433, 103.467, -7.10311, 0.12", "9.53297, 104.468, -8.14921, 2.64", "9.44282, 104.783, -8.41163, 3.0", "9.28219, 105.324, -8.62202, 2.76", "8.68728, 107.064, -8.64803, 0.48", "7.43757, 110.397, -7.94614, 0.48", "7.19138, 111.108, -7.8986, 0.48", "7.104, 111.565, -8.09643, 0.48", "7.10629, 112.064, -8.53546, 0.36", "7.23723, 112.941, -9.57024, 0.36", "7.48933, 113.791, -10.7392, 0.36", "7.92493, 114.958, -12.3233, 2.16", "8.13645, 115.388, -12.9079, 3.0", "8.24651, 115.579, -13.154, 3.12", "8.80247, 116.415, -14.1594, 3.0", "9.68647, 117.663, -15.5345, 0.12", "10.0979, 118.257, -16.1213, 0.12", "10.2157, 118.437, -16.2781, 0.12", "10.7483, 119.219, -16.9917, 2.52", "10.9687, 119.539, -17.2674, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.755, 56.7947, 8.31705, 0.6", "20.696, 57.3584, 9.26051, 0.6", "20.2846, 57.5773, 9.62703, 0.6", "19.7028, 57.887, 10.1454, 0.24", "19.3057, 58.0984, 10.4992, 0.24", "18.8865, 58.3215, 10.8726, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "21.755, 56.7947, 8.31705, 0.6", "22.306, 57.7408, 8.78486, 0.6", "22.9345, 58.9153, 9.34927, 0.72", "23.3589, 59.765, 9.71858, 1.08", "23.5947, 60.2546, 9.89339, 1.44", "23.8722, 60.8536, 10.109, 1.56", "24.3131, 61.8131, 10.4366, 1.44", "24.8983, 63.1652, 10.8639, 1.56", "25.252, 64.0582, 11.1236, 1.68", "25.5283, 64.8364, 11.3958, 1.68", "25.7981, 65.6546, 11.7208, 1.68", "26.1789, 66.9073, 12.2546, 0.6", "26.4394, 67.8638, 12.6725, 0.36", "26.6597, 68.6047, 12.9388, 0.36", "26.973, 69.5829, 13.2491, 1.44", "27.1565, 70.0917, 13.3872, 1.56", "27.4785, 70.8954, 13.5198, 1.56", "27.6511, 71.2836, 13.5457, 1.44", "28.2998, 72.6343, 13.5992, 0.72", "28.569, 73.136, 13.6264, 0.6", "29.0391, 73.941, 13.6902, 1.2", "29.2682, 74.3103, 13.744, 1.32", "29.8241, 75.1308, 13.908, 0.84", "30.7629, 76.394, 14.2998, 1.08", "31.4128, 77.1978, 14.6333, 0.96", "31.979, 77.8181, 14.8922, 0.48", "32.449, 78.3018, 15.0843, 0.48", "33.0052, 78.8352, 15.2829, 0.6", "33.8676, 79.6197, 15.5352, 0.96", "34.1551, 79.8825, 15.6058, 0.96", "35.1979, 80.9166, 15.8675, 1.68", "36.1749, 81.9706, 16.101, 2.28", "36.9801, 82.938, 16.2939, 2.16", "37.487, 83.6639, 16.4144, 1.92", "38.0786, 84.7104, 16.5083, 0.6", "38.594, 85.8948, 16.5455, 0.6", "38.8626, 86.6421, 16.5564, 0.6", "39.0856, 87.4375, 16.5311, 0.48", "39.3359, 88.8031, 16.4284, 0.48", "39.4741, 90.1055, 16.2507, 0.48", "39.5034, 91.2605, 15.9489, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "26.9, 101.462, -18.9635, 0.48", "27.1179, 102.632, -18.6763, 0.48", "27.2051, 103.007, -18.5589, 0.12", "27.3851, 103.753, -18.3111, 0.36", "27.5266, 104.311, -18.1251, 0.48", "27.6405, 104.714, -17.9923, 0.48", "27.7936, 105.214, -17.8338, 0.48", "28.1119, 106.045, -17.5914, 1.68", "28.2217, 106.286, -17.5372, 2.16", "28.3863, 106.604, -17.4955, 2.4", "28.5954, 106.98, -17.4632, 2.4", "28.8557, 107.434, -17.4165, 1.92", "29.2511, 108.114, -17.3474, 0.12", "29.4147, 108.381, -17.324, 0.24", "29.5618, 108.621, -17.292, 0.24", "29.8721, 109.143, -17.2007, 0.48", "30.2571, 109.803, -17.0552, 0.48", "30.3815, 110.018, -16.998, 1.32", "30.5977, 110.384, -16.8898, 1.68", "30.819, 110.744, -16.8078, 1.8", "31.0269, 111.072, -16.7575, 1.92", "31.1591, 111.275, -16.7468, 1.92", "31.4895, 111.79, -16.7644, 0.48", "31.8927, 112.423, -16.83, 0.48", "32.2346, 112.984, -16.9028, 0.72", "32.5953, 113.597, -16.9741, 0.72", "32.9456, 114.194, -17.125, 0.36", "33.1962, 114.631, -17.2831, 0.36", "33.4957, 115.193, -17.5274, 0.72", "33.7673, 115.76, -17.7493, 1.08", "34.0164, 116.316, -17.9307, 1.32", "34.7404, 118.109, -18.3772, 0.48", "34.9161, 118.599, -18.4501, 0.36", "35.2087, 119.502, -18.5022, 0.36", "35.5773, 120.736, -18.5231, 0.36", "35.7037, 121.156, -18.5272, 1.92", "35.9027, 121.74, -18.509, 3.0", "36.0588, 122.138, -18.4665, 3.25", "36.3525, 122.77, -18.4434, 3.25", "36.9813, 123.978, -18.4904, 0.36", "37.2232, 124.424, -18.5399, 0.48", "37.7212, 125.35, -18.6434, 0.48", "38.0976, 126.073, -18.7213, 0.48", "38.4184, 126.764, -18.7907, 0.48", "38.5459, 127.089, -18.8176, 0.96", "38.6582, 127.423, -18.8328, 1.2", "38.8367, 128.033, -18.856, 0.84", "39.0411, 128.79, -18.8772, 0.48", "39.2635, 129.556, -18.883, 0.36", "39.4691, 130.132, -18.8711, 0.36", "39.808, 130.876, -18.8479, 0.36", "40.0559, 131.327, -18.8383, 1.32", "40.4475, 131.962, -18.8287, 2.28", "40.703, 132.35, -18.8252, 2.76", "41.0522, 132.879, -18.8246, 2.4", "41.7009, 133.937, -18.8387, 1.08", "42.1211, 134.708, -18.8562, 0.36", "42.4173, 135.334, -18.871, 0.36", "42.6952, 135.992, -18.9016, 1.68", "42.8506, 136.401, -18.9268, 2.28", "43.0714, 137.062, -18.9514, 2.4", "43.3755, 138.091, -18.9637, 1.68", "43.7241, 139.338, -18.941, 1.08", "43.8894, 139.945, -18.9262, 0.6", "44.0181, 140.453, -18.914, 0.6", "44.2356, 141.299, -18.8926, 1.44", "44.345, 141.714, -18.886, 1.8", "44.4816, 142.22, -18.8874, 1.8", "44.6865, 142.903, -18.8947, 0.48", "45.0102, 143.894, -18.9013, 0.48", "45.3166, 144.773, -18.9586, 1.2", "45.6943, 145.773, -19.0693, 1.68", "45.9771, 146.457, -19.1506, 2.28", "46.3911, 147.434, -19.2581, 2.52", "46.93, 148.734, -19.3606, 1.2", "47.2651, 149.604, -19.379, 0.6", "47.4442, 150.155, -19.3562, 0.48", "47.65, 150.977, -19.2566, 0.48", "47.7713, 151.647, -19.1051, 0.48", "47.8569, 152.326, -18.8796, 0.48", "47.9387, 153.117, -18.5379, 0.48", "47.996, 153.588, -18.3104, 0.48", "48.0873, 154.074, -18.1347, 0.48", "48.2846, 154.748, -18.0074, 1.08", "48.5446, 155.359, -18.0047, 1.68", "48.7886, 155.843, -18.0725, 2.04", "49.039, 156.294, -18.1747, 2.04", "49.7582, 157.541, -18.4945, 0.96", "50.0238, 158.007, -18.6249, 0.48", "50.2732, 158.451, -18.7568, 0.48", "50.638, 159.126, -18.933, 1.56", "50.765, 159.387, -18.9846, 2.16", "51.0222, 159.925, -19.1214, 2.64", "51.1982, 160.306, -19.2179, 2.64", "51.4322, 160.793, -19.3685, 3.12", "51.6562, 161.232, -19.5307, 3.12", "52.0993, 162.055, -19.8554, 0.6", "52.8944, 163.462, -20.3948, 0.48", "53.207, 163.987, -20.5809, 0.36", "53.4015, 164.306, -20.676, 0.36", "53.7289, 164.871, -20.7744, 0.96", "54.1335, 165.587, -20.8102, 0.96", "54.4959, 166.275, -20.757, 0.72", "54.7471, 166.845, -20.6676, 0.48", "55.0351, 167.585, -20.588, 0.48", "55.4296, 168.728, -20.5117, 1.2", "55.6114, 169.31, -20.4949, 1.68", "55.8268, 170.058, -20.4977, 2.04", "56.058, 170.874, -20.5225, 1.8", "56.3574, 171.891, -20.5785, 0.6", "56.5679, 172.561, -20.6329, 0.48", "56.8503, 173.387, -20.7247, 0.48", "57.1537, 174.199, -20.8096, 0.48", "57.3482, 174.662, -20.8463, 0.48", "57.5386, 175.065, -20.8562, 1.08", "57.8075, 175.614, -20.8344, 1.32", "57.9684, 175.924, -20.8195, 1.32", "58.2744, 176.477, -20.7758, 0.72", "58.4733, 176.819, -20.7509, 0.48", "58.7545, 177.307, -20.7191, 0.72", "59.0663, 177.843, -20.6997, 1.08", "59.4009, 178.421, -20.7042, 1.32", "59.7957, 179.119, -20.7409, 0.48", "60.1308, 179.732, -20.8257, 0.48", "60.4638, 180.334, -20.9483, 0.48", "60.8359, 180.999, -21.1073, 1.44", "61.1613, 181.584, -21.249, 2.28", "61.5504, 182.296, -21.4135, 1.92", "62.1002, 183.314, -21.6277, 0.48", "62.5191, 184.095, -21.7484, 0.48", "62.8122, 184.659, -21.7935, 0.72", "63.0135, 185.082, -21.7879, 0.48", "63.1868, 185.517, -21.7395, 0.36", "63.3954, 186.198, -21.6972, 0.36", "63.5421, 186.879, -21.7173, 0.36", "63.6553, 187.64, -21.8314, 1.8", "63.7396, 188.4, -22.0137, 3.0", "63.7985, 189.153, -22.2444, 3.25", "63.8731, 191.01, -22.9684, 1.8", "63.8865, 191.789, -23.3231, 0.48", "63.895, 192.254, -23.5566, 0.48", "63.9114, 192.575, -23.7224, 0.72", "63.9547, 192.998, -23.9123, 0.48", "64.1141, 193.814, -24.1545, 0.36", "64.3112, 194.475, -24.1914, 0.36", "64.4678, 194.892, -24.1798, 0.72", "64.7748, 195.628, -24.1136, 1.08", "65.034, 196.225, -24.0322, 1.2", "65.4365, 197.142, -23.8493, 0.72", "65.8124, 198.005, -23.631, 0.36", "66.0534, 198.576, -23.4812, 0.36", "66.3539, 199.345, -23.2642, 0.36", "66.6094, 200.058, -23.0564, 0.36", "66.8771, 200.875, -22.8537, 1.92", "67.0201, 201.376, -22.7463, 2.76", "67.0612, 201.536, -22.7182, 3.12", "67.2649, 202.336, -22.6009, 2.76", "67.3353, 202.601, -22.5739, 2.76", "67.6086, 203.597, -22.4947, 0.48", "67.8147, 204.347, -22.4604, 0.48", "67.9254, 204.765, -22.4432, 0.96", "68.0268, 205.156, -22.4296, 0.6", "68.1531, 205.657, -22.4176, 0.48", "68.2595, 206.084, -22.3955, 0.36", "68.5173, 207.088, -22.2733, 0.36", "68.6319, 207.508, -22.2157, 0.48", "68.7564, 207.923, -22.1623, 0.36", "68.9173, 208.409, -22.0935, 0.36", "69.0404, 208.768, -22.0355, 0.36", "69.2723, 209.41, -21.9599, 1.2", "69.4147, 209.815, -21.9356, 2.04", "69.5707, 210.292, -21.9043, 2.16", "69.7478, 210.897, -21.8665, 1.68", "69.923, 211.57, -21.8297, 0.48", "70.1162, 212.346, -21.7942, 0.36", "70.4813, 213.86, -21.7252, 0.36", "70.6484, 214.55, -21.6846, 1.2", "70.7375, 214.899, -21.6663, 0.84", "70.8757, 215.396, -21.6487, 0.48", "71.1612, 216.285, -21.6396, 0.36", "71.2995, 216.662, -21.6642, 0.36", "71.4856, 217.086, -21.7514, 1.44", "71.7611, 217.691, -21.9221, 1.92", "71.9353, 218.068, -22.0344, 2.04", "72.2291, 218.702, -22.2217, 2.04", "72.6347, 219.628, -22.4352, 0.48", "73.0572, 220.669, -22.599, 0.48", "73.2103, 221.069, -22.6296, 0.6", "73.3037, 221.336, -22.6295, 0.48", "73.5624, 222.115, -22.594, 0.48", "73.8867, 223.205, -22.4747, 2.64", "74.0679, 223.885, -22.3584, 3.49", "74.1394, 224.18, -22.3046, 3.49", "74.24, 224.608, -22.228, 3.49", "74.5144, 225.8, -22.0282, 0.48", "74.6929, 226.581, -21.9013, 0.72", "74.8293, 227.137, -21.8207, 0.48", "74.9444, 227.556, -21.7561, 0.48", "75.1049, 228.098, -21.6721, 1.32", "75.2232, 228.426, -21.62, 1.56", "75.4352, 228.9, -21.5407, 1.56", "75.6807, 229.36, -21.4798, 0.48", "75.9942, 229.904, -21.4246, 0.48", "76.225, 230.304, -21.3804, 0.6", "76.5591, 230.914, -21.3095, 0.6", "76.8218, 231.421, -21.2492, 0.36", "77.0246, 231.836, -21.2078, 0.36", "77.262, 232.398, -21.1667, 0.36", "77.417, 232.855, -21.1571, 1.32", "77.5283, 233.278, -21.1566, 1.56", "77.5908, 233.622, -21.1581, 1.32", "77.653, 234.048, -21.1601, 0.36", "77.7602, 234.668, -21.1535, 0.36", "77.8728, 235.16, -21.1439, 1.2", "78.0279, 235.671, -21.1372, 1.2", "78.2375, 236.265, -21.1336, 0.36", "78.4618, 236.832, -21.1305, 0.36", "78.7131, 237.41, -21.1235, 0.48", "78.9156, 237.838, -21.1341, 0.48", "79.2036, 238.436, -21.1699, 0.48", "79.2808, 238.593, -21.1885, 0.48", "79.4759, 238.983, -21.2421, 0.72", "79.7497, 239.533, -21.3119, 0.72", "79.8904, 239.83, -21.337, 0.48", "80.1182, 240.31, -21.3535, 0.48", "80.3874, 240.879, -21.3448, 1.08", "80.6254, 241.369, -21.3115, 1.68", "80.8486, 241.819, -21.2695, 1.68", "81.0905, 242.314, -21.224, 0.84", "81.2479, 242.63, -21.2064, 0.72", "81.5655, 243.251, -21.2441, 0.72", "81.918, 243.928, -21.3474, 1.32", "82.126, 244.325, -21.4342, 2.4", "82.4273, 244.902, -21.5904, 2.76", "82.7209, 245.479, -21.7605, 2.04", "83.2193, 246.488, -22.0584, 0.48", "83.4484, 246.966, -22.1961, 0.48", "83.63, 247.36, -22.3005, 0.6", "83.7337, 247.589, -22.345, 0.48", "84.1536, 248.537, -22.445, 0.48", "84.3221, 248.942, -22.4508, 0.72", "84.4984, 249.35, -22.4181, 1.08", "84.6437, 249.67, -22.3857, 0.72", "84.8434, 250.092, -22.3247, 0.48", "85.0307, 250.486, -22.275, 0.24", "85.2328, 250.901, -22.2287, 0.24", "85.7278, 251.945, -22.1538, 3.12", "85.8747, 252.254, -22.14, 3.37", "86.14, 252.816, -22.1273, 3.0", "86.5984, 253.877, -22.1266, 0.48", "86.8934, 254.644, -22.1424, 0.48", "87.1398, 255.35, -22.1563, 0.84", "87.299, 255.834, -22.1623, 0.48", "87.5549, 256.581, -22.124, 0.48", "87.8689, 257.455, -22.0204, 0.48", "87.9996, 257.8, -21.9449, 0.48", "88.2405, 258.425, -21.7745, 0.48", "88.3962, 258.8, -21.6534, 0.96", "88.7208, 259.513, -21.4409, 1.56", "88.864, 259.782, -21.3567, 1.56", "89.171, 260.272, -21.2512, 0.48", "89.2634, 260.42, -21.2431, 0.36", "89.5154, 260.903, -21.284, 0.36", "89.8635, 261.644, -21.3905, 1.8", "90.0894, 262.155, -21.4808, 2.64", "90.5006, 263.121, -21.6375, 1.56", "90.7943, 263.82, -21.7295, 0.36", "91.1251, 264.604, -21.8175, 0.48", "91.5209, 265.575, -21.8681, 0.48", "91.6515, 265.902, -21.8835, 0.48", "91.8594, 266.391, -21.9015, 1.32", "91.9824, 266.646, -21.8922, 1.68", "92.1673, 266.981, -21.8471, 1.92", "92.6541, 267.831, -21.7097, 0.84", "93.0876, 268.693, -21.5649, 0.48", "93.4062, 269.417, -21.429, 0.48", "93.5567, 269.815, -21.3521, 0.48", "93.8391, 270.699, -21.1889, 0.48", "94.0628, 271.57, -21.0022, 0.72", "94.1859, 272.152, -20.8667, 1.32", "94.2873, 272.731, -20.7156, 0.84", "94.3474, 273.151, -20.602, 0.36", "94.4277, 273.651, -20.4672, 0.36", "94.5679, 274.295, -20.2937, 0.84", "94.673, 274.63, -20.184, 0.36", "94.9373, 275.324, -19.9224, 0.36", "95.2861, 276.115, -19.6116, 0.84", "95.4469, 276.445, -19.4738, 0.84", "95.6437, 276.817, -19.3301, 0.36", "96.0782, 277.599, -19.0749, 0.36", "96.3311, 278.071, -18.9463, 1.2", "96.6093, 278.625, -18.8363, 2.16", "96.6896, 278.803, -18.8188, 2.28", "97.0907, 279.733, -18.7625, 0.6", "97.2671, 280.156, -18.7412, 0.36", "97.4818, 280.657, -18.7137, 0.36", "97.6186, 280.941, -18.6961, 0.36", "97.7768, 281.243, -18.6636, 0.36", "98.2346, 282.056, -18.5425, 0.36", "98.5651, 282.615, -18.4431, 1.08", "98.9286, 283.211, -18.3386, 1.56", "99.3609, 283.899, -18.2274, 0.72", "99.5067, 284.144, -18.1961, 0.48", "99.8051, 284.696, -18.1452, 0.48", "100.103, 285.338, -18.1126, 1.68", "100.318, 285.825, -18.1166, 2.52", "100.571, 286.399, -18.1611, 1.92", "100.935, 287.187, -18.2598, 0.72", "101.168, 287.642, -18.3387, 0.6", "101.548, 288.313, -18.4923, 0.6", "102.084, 289.169, -18.7123, 0.6", "102.605, 289.966, -18.9272, 1.44", "102.84, 290.317, -19.0221, 1.92", "103.299, 291.0, -19.1861, 0.96", "103.618, 291.495, -19.2813, 0.36", "103.952, 292.075, -19.3367, 0.36", "104.196, 292.564, -19.3291, 0.36", "104.417, 293.037, -19.2765, 0.72", "104.695, 293.62, -19.2549, 0.36", "104.945, 294.114, -19.2623, 0.24", "105.382, 294.9, -19.3195, 2.04", "105.473, 295.049, -19.343, 2.04", "105.885, 295.667, -19.4728, 1.92", "106.809, 296.967, -19.8024, 0.48", "107.193, 297.486, -19.9476, 0.48", "107.58, 298.003, -20.0962, 0.72", "108.115, 298.738, -20.2998, 0.84", "108.721, 299.63, -20.5254, 0.36", "108.94, 299.981, -20.5985, 0.24", "109.238, 300.533, -20.6636, 1.2", "109.32, 300.709, -20.6855, 1.68", "109.573, 301.348, -20.7646, 1.56", "109.795, 302.015, -20.8377, 0.36", "109.929, 302.511, -20.8839, 0.36", "110.156, 303.452, -20.9446, 0.36", "110.253, 303.873, -20.9646, 1.32", "110.349, 304.301, -20.9761, 1.8", "110.429, 304.645, -20.9768, 1.68", "110.606, 305.403, -20.9549, 0.48", "110.86, 306.415, -20.9242, 0.48", "111.016, 306.998, -20.9057, 1.8", "111.139, 307.499, -20.8913, 2.4", "111.213, 307.851, -20.8671, 1.92", "111.355, 308.691, -20.7582, 0.6", "111.387, 308.924, -20.7085, 0.6", "111.466, 309.672, -20.5043, 0.6", "111.536, 310.375, -20.2835, 0.6", "111.63, 311.342, -19.9848, 0.6", "111.731, 312.354, -19.699, 0.6", "111.825, 313.194, -19.4943, 1.56", "111.894, 313.706, -19.4079, 2.04", "111.983, 314.252, -19.3672, 1.68", "112.13, 315.005, -19.3805, 0.84", "112.261, 315.646, -19.4609, 0.48", "112.439, 316.655, -19.6465, 0.48", "112.597, 317.641, -19.8473, 0.6", "112.701, 318.383, -19.9864, 1.32", "112.772, 318.977, -20.0841, 1.44", "112.848, 319.709, -20.1796, 0.48", "112.986, 321.061, -20.3247, 0.48", "113.037, 321.495, -20.3619, 1.32", "113.13, 322.185, -20.3972, 2.04", "113.216, 322.701, -20.4189, 1.68", "113.357, 323.417, -20.4515, 0.6", "113.526, 324.136, -20.4894, 0.48", "113.736, 324.904, -20.5432, 0.48", "113.873, 325.401, -20.5829, 0.48", "114.072, 326.108, -20.6425, 0.72", "114.212, 326.603, -20.682, 0.72", "114.33, 327.003, -20.7055, 0.36", "114.494, 327.59, -20.7356, 0.36", "114.65, 328.083, -20.7501, 1.8", "114.842, 328.562, -20.7476, 2.4", "115.13, 329.197, -20.7194, 2.4", "115.49, 329.938, -20.6908, 0.48", "115.577, 330.114, -20.6844, 0.48", "115.904, 330.773, -20.7021, 0.48", "116.208, 331.383, -20.7575, 0.48", "116.502, 332.023, -20.8739, 0.48", "116.646, 332.398, -20.972, 1.08", "116.738, 332.762, -21.0851, 1.92", "116.834, 333.396, -21.2796, 2.16", "116.861, 333.746, -21.3749, 2.16", "116.91, 334.565, -21.5645, 0.72", "116.946, 334.943, -21.6233, 0.48", "117.041, 335.681, -21.6799, 0.48", "117.159, 336.367, -21.6979, 0.48", "117.374, 337.399, -21.6483, 0.48", "117.485, 337.821, -21.6108, 0.48", "117.673, 338.418, -21.5294, 1.32", "117.876, 338.987, -21.4419, 1.92", "118.13, 339.657, -21.2999, 1.56", "118.34, 340.228, -21.1544, 0.36", "118.602, 340.974, -20.9248, 0.36", "118.799, 341.541, -20.7339, 0.6", "118.988, 342.08, -20.5309, 0.6", "119.258, 342.824, -20.2246, 0.24", "119.44, 343.278, -20.0313, 0.24", "119.732, 343.926, -19.7762, 1.92", "119.893, 344.257, -19.6423, 2.4", "120.272, 344.973, -19.3709, 1.92", "120.634, 345.655, -19.1468, 0.48", "120.967, 346.302, -18.9749, 0.48", "121.344, 347.096, -18.7866, 0.48", "121.654, 347.827, -18.6439, 1.44", "121.968, 348.634, -18.5053, 2.04", "122.262, 349.442, -18.3897, 1.08", "122.47, 350.015, -18.3107, 0.6", "122.71, 350.661, -18.2318, 0.48", "123.014, 351.375, -18.1573, 0.48", "123.216, 351.792, -18.126, 0.48", "123.428, 352.203, -18.0935, 0.96", "123.747, 352.806, -18.0461, 1.44", "124.101, 353.494, -17.9977, 0.84", "124.347, 353.995, -17.9657, 0.48", "124.741, 354.867, -17.9145, 0.48", "124.992, 355.516, -17.8707, 0.6", "125.231, 356.26, -17.8163, 0.72", "125.338, 356.683, -17.784, 0.12", "125.37, 356.853, -17.7555, 0.12", "125.455, 357.441, -17.6163, 1.56", "125.535, 358.071, -17.4387, 2.28", "125.595, 358.563, -17.2897, 2.52", "125.641, 358.979, -17.1609, 2.52", "125.791, 360.438, -16.7351, 0.72", "125.934, 361.707, -16.4572, 0.72", "126.018, 362.385, -16.3183, 0.96", "126.077, 362.811, -16.2296, 0.6", "126.139, 363.236, -16.1312, 0.48", "126.279, 364.161, -15.9268, 0.48", "126.511, 365.469, -15.6863, 0.48", "126.71, 366.419, -15.4954, 0.48", "126.912, 367.213, -15.3346, 1.92", "127.217, 368.218, -15.1634, 0.96", "127.517, 369.056, -15.0441, 0.48", "128.14, 370.573, -14.892, 0.48", "128.592, 371.575, -14.8252, 0.48", "129.049, 372.513, -14.8341, 0.48", "129.507, 373.376, -14.8836, 1.2", "129.813, 373.909, -14.9275, 1.92", "130.303, 374.706, -14.9977, 1.44", "130.615, 375.224, -15.0458, 1.08", "130.824, 375.608, -15.075, 0.48", "131.093, 376.165, -15.1002, 0.96", "131.344, 376.742, -15.0998, 0.96", "131.519, 377.173, -15.0965, 0.48", "132.043, 378.464, -15.0452, 0.48", "132.243, 378.956, -15.0216, 0.6", "132.374, 379.271, -14.9998, 0.48", "132.673, 380.008, -14.9218, 0.48", "133.076, 381.058, -14.777, 0.48", "133.293, 381.676, -14.6822, 0.96", "133.45, 382.169, -14.5956, 1.2", "133.613, 382.748, -14.4912, 0.6", "133.719, 383.208, -14.4223, 0.36", "133.904, 384.306, -14.2957, 0.36", "133.978, 385.032, -14.2469, 0.72", "134.01, 385.6, -14.2455, 1.44", "134.031, 386.218, -14.2577, 2.4", "134.062, 387.186, -14.293, 1.56", "134.081, 387.738, -14.3131, 0.48", "134.147, 389.144, -14.3454, 0.48", "134.202, 389.825, -14.3177, 0.6", "134.249, 390.199, -14.2735, 0.48", "134.386, 390.96, -14.0944, 0.48", "134.516, 391.42, -13.932, 0.48", "134.712, 391.922, -13.6959, 0.84", "135.19, 392.893, -13.1339, 0.96", "135.542, 393.516, -12.7451, 0.48", "135.834, 393.993, -12.4342, 0.36", "136.347, 394.78, -11.917, 0.36", "136.805, 395.469, -11.4975, 0.96", "136.898, 395.61, -11.4098, 1.08", "137.2, 396.086, -11.1194, 0.48", "137.557, 396.695, -10.6977, 0.48", "137.869, 397.271, -10.2654, 0.48", "138.124, 397.781, -9.86407, 0.48", "138.488, 398.527, -9.32639, 0.48", "138.904, 399.402, -8.75021, 0.48", "139.382, 400.486, -8.12375, 1.68", "139.549, 400.875, -7.92961, 2.4", "139.691, 401.21, -7.78423, 2.64", "140.13, 402.262, -7.47683, 0.24", "140.415, 403.077, -7.40353, 0.24", "140.611, 403.849, -7.44202, 0.24", "140.629, 403.934, -7.45302, 0.72", "140.738, 404.529, -7.53683, 0.84", "140.855, 405.312, -7.65567, 0.24", "140.99, 406.58, -7.86339, 0.24", "141.089, 407.624, -8.06174, 0.24", "141.112, 407.88, -8.11379, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "26.9, 101.462, -18.9635, 0.12", "26.3226, 101.912, -19.592, 0.12", "26.216, 101.995, -19.705, 0.12", "25.8795, 102.262, -20.0385, 1.2", "25.5644, 102.502, -20.3352, 1.44", "23.8097, 103.82, -21.8884, 0.36", "23.4366, 104.115, -22.2066, 0.36", "23.2322, 104.289, -22.3898, 1.8", "22.9487, 104.551, -22.6379, 2.16", "21.8694, 105.665, -23.55, 0.36", "21.5146, 106.068, -23.8539, 0.36", "21.1631, 106.53, -24.1249, 1.32", "20.8272, 106.991, -24.4412, 0.24", "20.6378, 107.275, -24.6488, 0.24", "20.1724, 108.031, -25.1884, 0.6", "19.6195, 109.034, -25.8236, 1.68", "19.4532, 109.334, -26.0002, 2.04", "18.6868, 110.632, -26.7327, 0.36", "18.4103, 111.107, -26.9616, 0.36", "18.1077, 111.664, -27.1715, 1.56", "17.8529, 112.194, -27.3142, 0.36", "17.5908, 112.793, -27.4122, 0.6", "17.437, 113.149, -27.4594, 0.12", "17.2187, 113.699, -27.483, 0.12", "17.1105, 113.992, -27.5147, 0.48", "16.8191, 114.922, -27.7177, 0.12", "16.7361, 115.23, -27.7996, 0.12", "16.6773, 115.494, -27.8713, 0.12", "16.6071, 115.865, -27.9623, 1.68", "16.5476, 116.324, -28.0602, 2.04", "16.4888, 117.276, -28.2246, 0.24", "16.4863, 117.683, -28.2704, 0.24", "16.4861, 117.998, -28.3142, 0.48", "16.4813, 118.352, -28.384, 0.12", "16.4611, 119.324, -28.5926, 0.12", "16.4448, 120.208, -28.7813, 0.12", "16.4394, 120.779, -28.8926, 0.12", "16.4374, 121.609, -29.0445, 1.68", "16.4331, 122.617, -29.2003, 0.12", "16.431, 123.41, -29.2982, 0.12", "16.4309, 123.802, -29.3357, 1.32", "16.4528, 124.283, -29.355, 1.68", "16.5201, 124.934, -29.346, 0.12", "16.6297, 125.536, -29.2909, 0.12", "16.6899, 125.758, -29.2649, 0.36", "16.7841, 126.053, -29.2399, 0.12", "17.0347, 126.777, -29.1971, 0.12", "17.1948, 127.209, -29.1831, 1.56", "17.4411, 127.854, -29.1777, 0.12", "17.8976, 129.007, -29.1758, 0.12", "17.9864, 129.234, -29.1756, 0.48", "18.0667, 129.443, -29.1751, 0.12", "18.3637, 130.229, -29.1815, 0.12", "18.5506, 130.727, -29.1908, 1.2", "18.6839, 131.088, -29.2023, 1.2", "18.8168, 131.452, -29.2173, 0.12", "19.0421, 132.017, -29.2512, 0.12", "19.2019, 132.393, -29.2793, 1.32", "19.3605, 132.742, -29.3105, 1.68", "19.7502, 133.578, -29.3868, 0.12", "20.0424, 134.196, -29.4447, 0.12", "20.3314, 134.813, -29.4978, 0.12", "20.4333, 135.033, -29.5147, 0.12", "20.6211, 135.455, -29.5377, 0.12", "20.7448, 135.747, -29.5493, 1.2", "20.9495, 136.252, -29.5617, 0.12", "21.1979, 136.891, -29.5804, 0.12", "21.2801, 137.114, -29.5866, 0.36", "21.3678, 137.344, -29.595, 0.12", "21.6535, 138.055, -29.6289, 0.12", "21.7876, 138.365, -29.6478, 0.96", "21.9329, 138.677, -29.6688, 0.12", "22.2962, 139.353, -29.6816, 0.12", "22.4849, 139.69, -29.6834, 0.84", "22.6781, 140.024, -29.681, 0.36", "22.8029, 140.234, -29.6762, 0.12", "23.6062, 141.553, -29.6551, 0.12", "24.0529, 142.263, -29.6512, 0.24", "24.2369, 142.551, -29.6559, 0.48", "24.3659, 142.757, -29.6635, 0.12", "24.7277, 143.384, -29.7034, 0.12", "24.9354, 143.811, -29.7388, 0.84", "25.0214, 144.043, -29.767, 0.12", "25.2651, 144.763, -29.8825, 0.12", "25.2994, 144.874, -29.8956, 0.6", "25.3602, 145.242, -29.9421, 0.12", "25.3744, 145.727, -29.999, 0.12", "25.3561, 146.194, -30.0481, 1.08", "25.2992, 146.739, -30.1294, 1.32", "25.2136, 147.196, -30.2058, 1.68", "25.0335, 148.044, -30.3412, 0.12", "24.8964, 148.559, -30.4418, 0.12", "24.823, 148.776, -30.4844, 0.48", "24.6662, 149.178, -30.545, 0.12", "24.4393, 149.734, -30.5994, 0.12", "24.3105, 150.059, -30.6134, 0.48", "24.073, 150.627, -30.593, 0.12", "23.8126, 151.174, -30.5397, 0.12", "23.5649, 151.7, -30.457, 0.12", "23.4537, 151.952, -30.4018, 0.84", "23.3003, 152.301, -30.3168, 0.84", "23.2051, 152.509, -30.2535, 0.12", "22.9582, 153.022, -30.0522, 0.12", "22.7828, 153.346, -29.92, 0.12", "22.7457, 153.409, -29.8911, 0.48", "22.5979, 153.644, -29.77, 0.12", "22.4193, 153.907, -29.6228, 0.12", "22.1768, 154.22, -29.4014, 1.32", "22.0744, 154.325, -29.3045, 1.56", "21.7109, 154.644, -28.952, 0.12", "21.4625, 154.851, -28.7114, 0.12", "21.302, 154.979, -28.5151, 0.48", "21.0916, 155.138, -28.214, 0.12", "20.9731, 155.235, -28.0339, 0.12", "20.8345, 155.36, -27.825, 0.12", "20.7105, 155.494, -27.607, 0.72", "20.3519, 155.97, -26.921, 0.12", "20.2034, 156.203, -26.6314, 0.12", "19.9871, 156.589, -26.1766, 1.8", "19.8562, 156.854, -25.863, 2.04", "19.5611, 157.488, -25.1171, 0.24", "19.4521, 157.736, -24.8366, 0.24", "19.311, 158.075, -24.4962, 0.24", "19.1174, 158.598, -23.9967, 0.24", "19.0011, 158.936, -23.6801, 0.96", "18.9323, 159.14, -23.5047, 1.32", "18.8135, 159.487, -23.2397, 0.12", "18.6816, 159.868, -22.9534, 0.12", "18.4768, 160.436, -22.5636, 0.12", "18.3984, 160.67, -22.4366, 0.96", "18.3404, 160.888, -22.3388, 0.96", "18.2789, 161.174, -22.2246, 0.24", "18.2103, 161.537, -22.1029, 0.24", "18.1714, 161.782, -22.0347, 0.12", "18.0798, 162.467, -21.8816, 0.12", "18.014, 162.994, -21.7853, 0.12", "17.9773, 163.316, -21.7337, 0.96", "17.9266, 163.599, -21.7189, 0.12", "17.8262, 163.998, -21.7262, 0.12", "17.7733, 164.163, -21.7349, 0.12", "17.7133, 164.319, -21.7563, 1.2", "17.6127, 164.576, -21.8036, 1.2", "17.2646, 165.559, -21.9962, 0.12", "17.1189, 165.954, -22.1094, 0.12", "16.9834, 166.358, -22.2463, 0.12", "16.8617, 166.758, -22.3886, 0.12", "16.7828, 167.041, -22.5006, 0.72", "16.7052, 167.36, -22.6145, 0.84", "16.5175, 168.345, -22.9109, 0.12", "16.3865, 168.988, -23.1319, 0.12", "16.3639, 169.086, -23.1633, 0.24", "16.2506, 169.496, -23.2826, 0.12", "15.9831, 170.361, -23.5482, 0.12", "15.9345, 170.503, -23.5886, 1.2", "15.6835, 171.156, -23.7533, 0.12", "15.4073, 171.736, -23.9333, 0.12", "15.1957, 172.166, -24.0807, 0.72", "14.9552, 172.585, -24.2524, 0.12", "14.7649, 172.852, -24.3842, 0.12", "14.4214, 173.268, -24.5874, 0.12", "14.1459, 173.569, -24.7358, 1.08", "13.9325, 173.776, -24.8555, 1.08", "13.4013, 174.261, -25.1266, 0.12", "12.997, 174.598, -25.3072, 0.12", "12.8797, 174.687, -25.3618, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "21.4671, 115.049, -70.5369, 0.12", "22.0768, 115.814, -71.0191, 0.12", "22.7582, 116.701, -71.5818, 2.64", "23.0196, 117.065, -71.8123, 2.16", "23.5395, 117.874, -72.2955, 0.24", "23.9858, 118.601, -72.6968, 0.24", "24.3134, 119.155, -72.9813, 0.24", "24.7939, 120.005, -73.3389, 0.96", "25.1026, 120.594, -73.5554, 0.12", "25.4881, 121.326, -73.7516, 0.12", "25.8034, 121.896, -73.8406, 0.24", "25.9991, 122.236, -73.8621, 0.24", "26.4332, 122.932, -73.8483, 1.68", "26.7697, 123.46, -73.8241, 2.52", "27.3389, 124.336, -73.8263, 1.56", "27.572, 124.709, -73.8482, 0.48", "28.2512, 125.927, -73.984, 0.48", "28.6116, 126.633, -74.0899, 1.32", "28.9828, 127.463, -74.2702, 0.96", "29.2425, 128.106, -74.4456, 0.12", "29.4796, 128.754, -74.6594, 0.12", "29.7619, 129.557, -74.9378, 1.8", "29.9529, 130.107, -75.1334, 1.92", "30.254, 130.935, -75.3928, 0.12", "30.5234, 131.591, -75.5299, 0.12", "30.605, 131.784, -75.5558, 0.48", "30.7934, 132.21, -75.5958, 0.12", "31.0016, 132.665, -75.6127, 0.12", "31.3226, 133.39, -75.5782, 0.72", "31.5918, 133.998, -75.4972, 0.12", "31.8583, 134.663, -75.4014, 0.12", "31.9656, 134.942, -75.3631, 0.48", "32.0641, 135.212, -75.3312, 0.12", "32.2929, 135.896, -75.2865, 0.12", "32.3825, 136.192, -75.285, 1.2", "32.5437, 136.738, -75.3018, 1.32", "32.7466, 137.304, -75.3136, 0.84", "32.8466, 137.55, -75.3149, 0.12", "33.0914, 138.099, -75.3023, 0.12", "33.1844, 138.277, -75.2945, 0.6", "33.3984, 138.641, -75.2781, 0.12", "33.9193, 139.43, -75.2417, 0.12", "34.1544, 139.761, -75.2325, 0.6", "34.3339, 140.029, -75.2778, 0.12", "34.6038, 140.436, -75.4037, 0.12", "35.0352, 141.132, -75.6663, 1.56", "35.1834, 141.391, -75.7755, 2.04", "35.4765, 141.94, -76.0166, 1.68", "36.2956, 143.486, -76.7698, 0.12", "36.6719, 144.228, -77.1697, 0.12", "36.8939, 144.713, -77.4542, 0.12", "37.0597, 145.119, -77.7042, 1.08", "37.1827, 145.437, -77.9023, 1.56", "37.4568, 146.209, -78.4215, 0.12", "37.8112, 147.143, -79.075, 0.12", "38.0371, 147.725, -79.5707, 0.48", "38.2634, 148.279, -80.1257, 0.48", "38.3858, 148.549, -80.4293, 0.48", "38.6989, 149.231, -81.3204, 1.44", "38.8409, 149.517, -81.7168, 1.92", "39.0903, 149.924, -82.3283, 1.44", "39.4181, 150.399, -83.1239, 0.48", "39.8243, 150.945, -84.0868, 0.36", "40.3597, 151.611, -85.2936, 0.12", "40.6839, 151.979, -85.9532, 1.56", "40.9394, 152.267, -86.4741, 1.2", "41.6471, 153.006, -87.7737, 0.12", "41.8803, 153.218, -88.1657, 0.12", "42.0338, 153.338, -88.407, 0.6", "42.2432, 153.478, -88.6752, 0.6", "42.6554, 153.75, -89.2226, 0.36", "42.9562, 153.938, -89.5792, 0.36", "43.5197, 154.257, -90.1016, 0.12", "43.8828, 154.461, -90.3935, 0.12", "44.478, 154.806, -90.8256, 0.12", "45.2469, 155.278, -91.3734, 1.56", "45.7489, 155.592, -91.7091, 2.16", "46.4888, 156.092, -92.193, 0.24", "47.4764, 156.857, -92.8965, 0.24", "47.8763, 157.229, -93.2157, 0.12", "48.5401, 157.939, -93.7934, 1.68", "48.7289, 158.183, -93.9868, 2.28", "48.9108, 158.478, -94.2178, 2.28", "49.4468, 159.616, -95.1437, 0.12", "49.7134, 160.383, -95.7668, 0.12", "49.7784, 160.622, -95.9561, 0.6", "49.934, 161.475, -96.6377, 0.24", "49.9764, 161.94, -97.0262, 0.24", "50.0116, 162.535, -97.5295, 0.24", "50.0173, 162.951, -97.8714, 0.96", "49.989, 163.522, -98.3537, 1.44", "49.9046, 164.571, -99.2078, 0.12", "49.8322, 165.56, -99.9181, 0.12", "49.8052, 165.974, -100.195, 0.12", "49.799, 166.109, -100.27, 0.48", "49.7963, 166.395, -100.413, 0.48", "49.8008, 166.526, -100.468, 0.48", "49.8617, 167.313, -100.697, 0.48", "49.943, 168.166, -100.909, 1.32", "49.9864, 168.605, -101.017, 1.8", "50.0867, 169.257, -101.175, 0.96", "50.2028, 169.845, -101.305, 0.12", "50.3936, 170.704, -101.495, 0.12", "50.5092, 171.184, -101.592, 1.2", "50.6218, 171.56, -101.678, 1.56", "50.7934, 172.071, -101.858, 0.12", "51.0851, 172.875, -102.192, 0.12", "51.3757, 173.595, -102.54, 0.12", "51.6675, 174.305, -103.02, 0.12", "52.1413, 175.462, -103.921, 0.12", "52.5206, 176.424, -104.785, 0.12", "52.668, 176.797, -105.143, 0.84", "52.7699, 177.05, -105.394, 0.96", "53.2714, 178.326, -106.65, 0.12", "53.468, 178.891, -107.184, 0.12", "53.6133, 179.485, -107.62, 0.12", "53.7408, 180.116, -107.982, 0.12", "53.8215, 180.674, -108.28, 0.36", "53.8305, 180.768, -108.316, 0.12", "53.8626, 181.217, -108.271, 0.12", "53.8286, 181.704, -108.147, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "21.4671, 115.049, -70.5369, 0.12", "19.136, 117.358, -73.6748, 0.12", "18.6879, 117.839, -74.23, 0.12", "18.0964, 118.511, -74.8399, 0.12", "17.7104, 118.969, -75.1863, 0.84", "16.8824, 119.981, -75.8479, 1.8", "16.5962, 120.341, -76.0513, 1.92", "16.0055, 121.217, -76.2504, 0.12", "15.3434, 122.345, -76.4355, 0.12", "14.9397, 123.114, -76.4936, 0.96", "14.7593, 123.499, -76.5015, 1.2", "14.3776, 124.427, -76.4545, 0.12", "14.1408, 125.07, -76.4446, 0.12", "13.7589, 126.425, -76.4574, 0.12", "13.649, 126.937, -76.4793, 1.2", "13.5903, 127.263, -76.4916, 1.44", "13.4647, 127.976, -76.561, 0.6", "13.2954, 128.869, -76.6818, 0.12", "13.1, 129.646, -76.8077, 0.12", "12.9035, 130.186, -76.9324, 0.96", "12.7433, 130.558, -77.0284, 1.32", "12.2447, 131.541, -77.2707, 0.12", "11.9465, 132.033, -77.3785, 0.12", "11.5489, 132.583, -77.5033, 0.12", "10.7671, 133.519, -77.7427, 0.12", "10.287, 134.069, -77.8872, 1.08", "9.93546, 134.456, -77.9768, 1.8", "9.45348, 134.947, -78.1102, 1.2", "8.68288, 135.711, -78.3582, 0.12", "8.31691, 136.07, -78.4766, 0.12", "8.01374, 136.36, -78.5644, 0.12", "7.63459, 136.701, -78.7131, 0.12", "6.21778, 137.92, -79.32, 0.12", "5.90526, 138.182, -79.4519, 1.44", "5.52053, 138.49, -79.6531, 2.04", "4.88812, 138.958, -80.0096, 1.32", "3.46866, 139.931, -80.7636, 0.12", "2.99786, 140.233, -80.9948, 0.12", "2.5604, 140.484, -81.1667, 0.96", "0.615235, 141.473, -81.8454, 0.12", "-0.130113, 141.808, -82.0495, 0.12", "-0.955806, 142.142, -82.2242, 1.56", "-1.30931, 142.267, -82.2601, 1.8", "-2.28343, 142.606, -82.3558, 0.12", "-2.5454, 142.698, -82.3698, 0.12", "-3.11083, 142.902, -82.3623, 0.48", "-4.29531, 143.351, -82.4303, 0.12", "-5.08446, 143.662, -82.5132, 0.12", "-5.72978, 143.921, -82.5608, 1.32", "-6.18973, 144.094, -82.5686, 1.56", "-7.17211, 144.384, -82.4853, 0.12", "-7.64674, 144.465, -82.3901, 0.12", "-7.87232, 144.478, -82.3163, 0.48", "-8.59289, 144.463, -82.0618, 0.12", "-9.30003, 144.415, -81.7884, 0.12", "-10.2245, 144.319, -81.3933, 0.12", "-11.0569, 144.212, -81.0024, 0.12", "-11.3927, 144.169, -80.8487, 0.72", "-11.6835, 144.132, -80.6829, 0.12", "-12.4123, 144.064, -80.2058, 0.12", "-12.8605, 144.05, -79.867, 0.12", "-13.3172, 144.065, -79.4863, 1.44", "-13.7958, 144.103, -79.0673, 1.8", "-15.2043, 144.251, -77.8265, 0.12", "-15.6401, 144.308, -77.4249, 0.12", "-16.7734, 144.492, -76.3595, 0.12", "-17.0211, 144.546, -76.1378, 0.24", "-17.2081, 144.599, -75.9553, 0.12", "-17.4669, 144.677, -75.6929, 0.12", "-18.1765, 144.942, -75.0022, 1.32", "-18.2521, 144.976, -74.9168, 1.56", "-18.7378, 145.25, -74.2851, 1.56", "-19.4354, 145.696, -73.3926, 0.24", "-19.5748, 145.799, -73.219, 0.12", "-20.0223, 146.172, -72.7279, 0.12", "-20.4259, 146.524, -72.3759, 0.12", "-20.5935, 146.671, -72.2391, 0.48", "-20.8722, 146.929, -72.0407, 0.48", "-21.0339, 147.082, -71.9572, 0.12", "-21.7013, 147.714, -71.6193, 0.12", "-22.2217, 148.148, -71.3657, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-30.2148, 45.3922, -73.9379, 0.12", "-30.5272, 44.7975, -74.7159, 0.12", "-30.7078, 44.4816, -75.2179, 0.12", "-30.9389, 44.0888, -75.8439, 0.12", "-30.9933, 43.9975, -75.9865, 1.56", "-31.1176, 43.7898, -76.296, 1.56", "-31.2487, 43.5776, -76.5937, 0.96", "-31.5106, 43.204, -77.1168, 0.12", "-31.6734, 42.9841, -77.4549, 0.12", "-31.7261, 42.9135, -77.5489, 0.12", "-31.8361, 42.759, -77.7228, 0.12", "-31.9669, 42.556, -77.9355, 0.6", "-32.0489, 42.4176, -78.0657, 0.72", "-32.3813, 41.8055, -78.5565, 0.12", "-32.5118, 41.5372, -78.8429, 0.12", "-32.6783, 41.1447, -79.2827, 2.04", "-32.928, 40.4722, -80.0869, 0.12", "-33.0314, 40.1717, -80.4556, 0.12", "-33.1427, 39.8517, -80.8778, 2.28", "-33.5122, 38.823, -82.2441, 0.12", "-33.6342, 38.5102, -82.7041, 0.12", "-33.7316, 38.3073, -83.1234, 0.12", "-33.7767, 38.2318, -83.3128, 0.12", "-33.9627, 37.983, -84.011, 0.12", "-34.1002, 37.8445, -84.4443, 1.92", "-34.204, 37.7581, -84.7008, 2.28", "-35.1086, 37.0642, -86.8867, 0.12", "-35.2082, 36.9875, -87.1085, 0.12", "-35.4588, 36.7829, -87.6549, 1.8", "-35.565, 36.6902, -87.8721, 1.8", "-35.7317, 36.5334, -88.2005, 1.2", "-36.0364, 36.1725, -88.7356, 0.12", "-36.2029, 35.9316, -88.8916, 0.12", "-36.2569, 35.8452, -88.9539, 0.6", "-36.3745, 35.6063, -89.1228, 0.12", "-36.5237, 35.2427, -89.375, 0.12", "-36.5582, 35.156, -89.4325, 0.36", "-36.6286, 34.9626, -89.5846, 0.36", "-36.6711, 34.831, -89.7078, 0.12", "-36.8022, 34.4259, -90.0814, 0.12", "-36.9015, 34.0842, -90.4924, 0.12", "-36.9347, 33.9581, -90.6537, 0.96", "-37.0676, 33.3882, -91.3759, 0.12", "-37.1083, 33.1698, -91.7135, 0.12", "-37.1613, 32.8294, -92.2805, 2.76", "-37.26, 32.0113, -93.8379, 0.12", "-37.2847, 31.7484, -94.3496, 0.12", "-37.2886, 31.6426, -94.5578, 0.96", "-37.2457, 30.8688, -96.1238, 0.12", "-37.2123, 30.7079, -96.4953, 0.12", "-37.0893, 30.4021, -97.2553, 0.12", "-37.0367, 30.3149, -97.4588, 1.2", "-36.9301, 30.1742, -97.7823, 2.28", "-36.6224, 29.8086, -98.5076, 1.68", "-36.3212, 29.4816, -98.9593, 0.12", "-36.1445, 29.3263, -99.195, 0.12", "-36.0407, 29.2407, -99.3188, 0.12", "-35.9006, 29.1332, -99.5081, 0.12", "-35.7583, 29.0151, -99.704, 0.6", "-35.66, 28.9251, -99.8268, 0.6", "-35.3442, 28.6045, -100.379, 0.24", "-35.2872, 28.5359, -100.528, 0.24", "-35.13, 28.3152, -101.069, 0.12", "-34.9857, 28.055, -101.662, 2.4", "-34.9629, 28.0055, -101.764, 2.4", "-34.7287, 27.3719, -103.158, 0.12", "-34.5981, 26.9259, -104.118, 0.12", "-34.5283, 26.6513, -104.711, 0.12", "-34.4738, 26.3918, -105.285, 3.12", "-34.4571, 26.277, -105.546, 3.12", "-34.369, 25.2248, -107.753, 0.12", "-34.365, 25.0641, -108.06, 0.12", "-34.3664, 24.981, -108.212, 0.48", "-34.3728, 24.7933, -108.542, 0.12", "-34.3843, 24.6465, -108.813, 0.12", "-34.4085, 24.5461, -109.022, 0.48", "-34.4795, 24.3648, -109.386, 0.12", "-34.5482, 24.2127, -109.707, 0.12", "-34.7312, 23.7831, -110.544, 2.76", "-34.7658, 23.6952, -110.701, 2.76", "-35.1369, 22.6922, -112.394, 0.12", "-35.1874, 22.537, -112.632, 0.12", "-35.2465, 22.333, -112.922, 0.12", "-35.3277, 22.026, -113.341, 0.12", "-35.4156, 21.661, -113.81, 1.8", "-35.4576, 21.4064, -114.117, 2.16", "-35.4906, 21.1395, -114.392, 1.92", "-35.5922, 20.4928, -115.17, 0.12", "-35.6248, 20.3543, -115.354, 0.72", "-35.7276, 20.1063, -115.723, 0.72", "-35.8015, 19.9692, -115.915, 0.12", "-35.9641, 19.7108, -116.245, 0.12", "-36.1514, 19.4399, -116.553, 0.12", "-36.3479, 19.1524, -116.814, 2.4", "-36.801, 18.4686, -117.368, 0.12", "-37.0795, 18.0279, -117.691, 0.12", "-37.1868, 17.8365, -117.814, 0.6", "-37.2563, 17.6964, -117.905, 0.12", "-37.3875, 17.4131, -118.078, 0.12", "-37.4272, 17.3215, -118.134, 0.48", "-37.5282, 17.0547, -118.324, 0.12", "-37.746, 16.4489, -118.84, 0.12", "-37.9069, 15.9904, -119.255, 1.68", "-37.9684, 15.8128, -119.423, 2.16", "-38.0153, 15.6652, -119.56, 2.16", "-38.2491, 14.8416, -120.319, 0.12", "-38.3177, 14.588, -120.543, 0.12", "-38.3523, 14.4608, -120.66, 0.48", "-38.3652, 14.4177, -120.696, 0.12", "-38.5007, 14.0239, -120.996, 0.12", "-38.6604, 13.6564, -121.232, 0.12", "-38.7959, 13.4151, -121.394, 1.68", "-38.9005, 13.2581, -121.524, 1.92", "-39.1373, 12.9525, -121.808, 0.12", "-39.3037, 12.7681, -121.994, 0.12", "-39.5256, 12.5635, -122.211, 1.32", "-40.1238, 12.0447, -122.786, 0.12", "-40.3446, 11.8579, -123.01, 0.12", "-40.4941, 11.7366, -123.182, 0.48", "-40.5998, 11.6595, -123.31, 0.12", "-40.8535, 11.4953, -123.642, 0.12", "-41.195, 11.2958, -124.078, 0.12", "-41.2784, 11.2569, -124.175, 0.96", "-41.695, 11.1076, -124.628, 0.12", "-41.8621, 11.0565, -124.797, 0.12", "-42.2512, 10.955, -125.158, 1.44", "-42.5889, 10.8763, -125.433, 1.8", "-43.1267, 10.7558, -125.788, 0.12", "-43.8083, 10.6016, -126.166, 0.12", "-43.9759, 10.5636, -126.24, 0.48", "-44.0864, 10.5393, -126.283, 0.12", "-44.3918, 10.4661, -126.38, 0.12", "-44.6153, 10.4103, -126.446, 1.08", "-44.8929, 10.3328, -126.511, 1.68", "-45.4153, 10.1829, -126.612, 0.12", "-45.6418, 10.1163, -126.653, 0.12", "-45.7949, 10.0636, -126.68, 0.48", "-45.9059, 10.0197, -126.699, 0.12", "-46.3423, 9.81703, -126.808, 0.12", "-46.8151, 9.54107, -126.964, 1.68", "-47.1397, 9.29255, -127.122, 0.12", "-47.425, 9.03162, -127.32, 0.12", "-47.6136, 8.83022, -127.485, 0.6", "-47.9832, 8.37045, -127.882, 0.12", "-48.1997, 8.04218, -128.168, 0.12", "-48.4697, 7.58389, -128.602, 0.12", "-48.5629, 7.42071, -128.755, 0.12", "-48.6632, 7.25132, -128.913, 1.68", "-48.7659, 7.08325, -129.056, 2.28", "-48.9766, 6.77652, -129.276, 1.56", "-49.2942, 6.37041, -129.544, 0.12", "-49.4641, 6.16068, -129.641, 0.12", "-49.6143, 5.97529, -129.722, 0.12", "-49.785, 5.76414, -129.814, 1.32", "-49.9261, 5.5888, -129.886, 1.56", "-50.1399, 5.32427, -129.992, 0.12", "-50.7019, 4.61478, -130.246, 0.12", "-51.0423, 4.18211, -130.407, 1.8", "-51.1571, 4.02574, -130.465, 2.52", "-51.2512, 3.89843, -130.513, 2.52", "-51.5513, 3.49002, -130.677, 0.12", "-51.9388, 2.95769, -130.9, 0.12", "-52.1242, 2.69989, -131.003, 1.56", "-52.3481, 2.3737, -131.118, 2.04", "-52.5907, 2.0072, -131.245, 2.04", "-52.9233, 1.48432, -131.423, 0.12", "-53.1215, 1.15318, -131.525, 0.12", "-53.235, 0.938366, -131.588, 0.72", "-53.287, 0.824577, -131.613, 0.12", "-53.4001, 0.546753, -131.651, 0.12", "-53.4396, 0.425972, -131.658, 0.48", "-53.4881, 0.258633, -131.672, 0.12", "-53.6369, -0.341679, -131.772, 0.12", "-53.7218, -0.742882, -131.86, 1.56", "-53.7575, -0.936752, -131.911, 1.8", "-53.7906, -1.16509, -131.982, 1.8", "-53.8813, -1.89603, -132.237, 0.12", "-53.9312, -2.36793, -132.425, 0.12", "-53.9312, -2.36793, -132.425, 0.48", "-53.9356, -2.46681, -132.481, 0.12", "-53.9288, -2.75443, -132.667, 0.12", "-53.9184, -2.85779, -132.741, 0.48", "-53.9075, -2.95434, -132.81, 0.12", "-53.856, -3.37747, -133.195, 0.12", "-53.7989, -3.91407, -133.71, 0.48", "-53.7878, -4.07204, -133.848, 0.12", "-53.7672, -4.41719, -134.135, 1.56", "-53.7521, -4.73376, -134.378, 1.92", "-53.7345, -5.21884, -134.716, 1.56", "-53.7261, -5.45563, -134.88, 0.12", "-53.7271, -6.54679, -135.553, 0.12", "-53.7288, -6.69777, -135.643, 0.84", "-53.7317, -6.85703, -135.735, 0.12", "-53.7325, -7.10431, -135.879, 0.12", "-53.7266, -7.86472, -136.286, 0.12", "-53.7083, -8.54497, -136.713, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-30.2148, 45.3922, -73.9379, 0.12", "-30.643, 46.1684, -74.8737, 0.12", "-30.9366, 46.7317, -75.5348, 0.12", "-31.4125, 47.7065, -76.5421, 2.4", "-32.1753, 49.3491, -78.2059, 0.24", "-32.3294, 49.6866, -78.5334, 0.24", "-32.485, 50.0386, -78.8552, 1.44", "-32.7943, 50.7679, -79.4958, 0.12", "-33.1125, 51.6267, -80.2058, 0.12", "-33.3706, 52.3899, -80.726, 0.12", "-33.6241, 53.1333, -81.194, 2.28", "-33.9319, 54.0429, -81.8037, 0.12", "-34.1911, 54.7753, -82.2949, 0.12", "-34.54, 55.7435, -82.9233, 0.12", "-34.9347, 56.8095, -83.6064, 2.76", "-35.425, 58.1016, -84.4267, 0.24", "-35.425, 58.1016, -84.4267, 0.12", "-35.7044, 58.8538, -84.8835, 0.12", "-35.8365, 59.2118, -85.1009, 0.96", "-36.0084, 59.6667, -85.337, 0.96", "-36.3748, 60.6751, -85.8278, 0.12", "-36.6749, 61.682, -86.3103, 0.12", "-36.7647, 62.0467, -86.492, 0.72", "-36.8932, 62.6623, -86.8443, 0.12", "-37.0207, 63.3077, -87.2205, 0.12", "-37.1578, 64.0094, -87.5962, 2.16", "-37.4112, 65.3098, -88.3543, 0.12", "-37.4856, 65.6919, -88.6058, 0.12", "-37.6509, 66.5378, -89.1906, 0.12", "-37.7593, 67.0895, -89.5639, 0.12", "-37.8888, 67.7687, -90.0798, 1.44", "-38.1633, 69.3687, -91.3158, 0.12", "-38.26, 69.903, -91.7048, 0.12", "-38.3264, 70.3099, -91.9966, 1.56", "-38.391, 70.7845, -92.3216, 1.56", "-38.5288, 71.8341, -93.05, 0.12", "-38.5835, 72.2968, -93.3671, 0.12", "-38.6362, 72.6964, -93.5807, 0.12", "-38.6747, 72.9159, -93.7185, 0.12", "-38.8667, 73.7324, -94.2439, 0.12", "-38.9668, 74.0636, -94.4733, 0.12", "-39.1714, 74.5875, -94.8294, 1.92", "-39.3246, 74.9346, -95.0985, 2.16", "-39.8948, 76.0716, -96.0203, 0.12", "-40.1373, 76.4927, -96.3581, 0.12", "-40.3449, 76.8186, -96.6248, 1.08", "-40.6077, 77.1748, -96.9418, 1.32", "-41.0951, 77.7358, -97.4776, 0.12", "-41.4566, 78.0915, -97.8476, 0.12", "-41.7455, 78.3289, -98.1223, 0.48", "-42.0448, 78.5379, -98.4102, 0.12", "-42.7256, 78.9914, -99.0589, 0.12", "-43.1486, 79.2759, -99.4685, 1.44", "-43.3854, 79.4489, -99.7025, 1.68", "-44.0812, 80.0512, -100.447, 0.12", "-44.5779, 80.537, -100.973, 0.12", "-44.9655, 80.9706, -101.364, 1.8", "-45.3202, 81.439, -101.705, 2.16", "-45.8614, 82.1931, -102.173, 0.12", "-46.1934, 82.6602, -102.482, 0.12", "-46.458, 83.0064, -102.706, 0.48", "-46.5071, 83.0649, -102.744, 0.12", "-46.8178, 83.3756, -102.99, 0.12", "-47.3347, 83.8309, -103.436, 1.68", "-48.4128, 84.6987, -104.414, 0.12", "-48.845, 85.0349, -104.822, 0.12", "-49.1026, 85.2553, -105.078, 0.48", "-49.5578, 85.6817, -105.521, 0.12", "-49.8525, 85.987, -105.815, 0.12", "-50.1849, 86.3771, -106.156, 1.56", "-50.4598, 86.7123, -106.41, 2.28", "-51.094, 87.518, -106.956, 0.12", "-51.3931, 87.8836, -107.192, 0.12", "-51.6074, 88.1243, -107.321, 0.48", "-51.9928, 88.5254, -107.511, 0.12", "-52.277, 88.8007, -107.645, 0.12", "-52.9953, 89.4204, -107.946, 2.16", "-54.0148, 90.1636, -108.272, 0.12", "-54.7417, 90.6366, -108.468, 0.12", "-55.1592, 90.8896, -108.585, 0.6", "-55.439, 91.0473, -108.668, 0.12", "-56.0012, 91.345, -108.832, 0.12", "-56.6779, 91.6865, -109.022, 2.4", "-57.0069, 91.8536, -109.091, 2.4", "-58.1998, 92.4697, -109.322, 0.12", "-59.1801, 92.9887, -109.468, 0.12", "-59.8122, 93.3313, -109.534, 1.68", "-60.2925, 93.5909, -109.565, 2.16", "-61.2801, 94.1127, -109.565, 0.12", "-61.8751, 94.42, -109.521, 0.12", "-62.3518, 94.6542, -109.437, 0.6", "-62.5189, 94.7343, -109.407, 0.12", "-63.447, 95.177, -109.276, 0.12", "-63.835, 95.3564, -109.193, 0.84", "-64.2046, 95.5252, -109.088, 1.08", "-64.3867, 95.6156, -109.036, 1.08", "-64.6563, 95.7644, -108.965, 0.12", "-65.1466, 96.0681, -108.828, 0.12", "-65.7325, 96.4628, -108.66, 1.44", "-66.1948, 96.7711, -108.54, 1.68", "-66.6962, 97.1034, -108.41, 0.12", "-67.429, 97.5885, -108.236, 0.12", "-67.6082, 97.7043, -108.199, 1.32", "-68.0227, 97.9594, -108.142, 0.12", "-68.3443, 98.1494, -108.109, 0.12", "-68.5294, 98.2451, -108.085, 0.36", "-68.8424, 98.3687, -108.04, 0.12", "-69.2862, 98.5105, -107.98, 0.12", "-69.6444, 98.614, -107.931, 0.48", "-70.183, 98.7577, -107.872, 0.12", "-70.9105, 98.9376, -107.809, 0.12", "-71.4666, 99.0652, -107.77, 1.8", "-71.8576, 99.1478, -107.75, 2.64", "-72.1341, 99.2033, -107.744, 2.64", "-73.0742, 99.3756, -107.754, 0.12", "-73.908, 99.5129, -107.797, 0.12", "-74.2781, 99.5761, -107.818, 0.12", "-74.5752, 99.6295, -107.835, 0.48", "-74.7603, 99.6621, -107.841, 0.12", "-75.1404, 99.738, -107.84, 0.12", "-75.5046, 99.8292, -107.818, 0.6", "-75.8234, 99.94, -107.79, 0.12", "-76.2541, 100.122, -107.746, 0.12", "-76.6106, 100.287, -107.682, 0.72", "-76.9817, 100.472, -107.598, 0.96", "-77.4119, 100.722, -107.512, 0.12", "-77.9117, 101.043, -107.431, 0.12", "-78.2283, 101.256, -107.385, 1.2", "-78.8028, 101.674, -107.311, 1.56", "-79.1952, 101.988, -107.284, 1.68", "-79.8824, 102.616, -107.267, 0.12", "-80.4739, 103.204, -107.271, 0.12", "-80.7679, 103.524, -107.35, 1.56", "-81.1029, 103.907, -107.463, 1.56", "-81.4899, 104.375, -107.63, 0.12", "-82.7079, 105.909, -108.224, 0.12", "-82.8598, 106.108, -108.307, 0.48", "-84.1804, 107.976, -109.294, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "26.9904, -137.384, -0.328668, 3.37", "27.3209, -137.477, 0.743471, 3.37", "28.296, -137.654, 3.7139, 0.12", "28.3758, -137.654, 3.90904, 0.12", "28.6222, -137.635, 4.43533, 0.12", "28.7937, -137.61, 4.75243, 0.72", "29.0158, -137.566, 5.10842, 0.72", "29.1596, -137.521, 5.25636, 0.12", "30.1873, -137.113, 5.87057, 0.12", "30.2935, -137.08, 5.96264, 0.96", "30.5979, -137.041, 6.3673, 0.96", "30.8986, -137.08, 7.10722, 0.12", "30.9346, -137.104, 7.29058, 0.12", "30.9462, -137.159, 7.62553, 0.84", "30.8154, -137.545, 9.48459, 0.24", "30.7111, -137.791, 10.5139, 1.92", "30.5084, -138.213, 12.0098, 0.24", "30.4059, -138.417, 12.627, 1.68", "30.1177, -139.023, 14.238, 1.68", "30.0343, -139.21, 14.6516, 0.12", "29.9452, -139.462, 15.0354, 0.12", "29.8906, -139.707, 15.3002, 0.6", "29.8656, -140.082, 15.5709, 1.08", "29.8652, -140.57, 15.8454, 1.08", "29.8704, -141.311, 16.1201, 0.12", "29.8741, -141.744, 16.2787, 0.12", "29.8904, -142.181, 16.4292, 0.12", "29.9245, -142.619, 16.5661, 0.12", "29.987, -143.052, 16.6835, 0.12", "30.0605, -143.417, 16.7572, 0.96", "30.1666, -143.864, 16.8282, 0.12", "30.2919, -144.418, 16.9158, 0.12", "30.3501, -144.739, 16.9772, 1.32", "30.3716, -144.939, 17.0205, 1.32", "30.4093, -145.531, 17.1633, 0.12", "30.4135, -146.067, 17.3009, 0.12", "30.4126, -146.193, 17.3345, 0.48", "30.4123, -146.602, 17.4511, 0.12", "30.4281, -146.799, 17.5091, 0.12", "30.4721, -147.053, 17.5856, 0.12", "30.5446, -147.214, 17.6929, 0.48", "30.6896, -147.495, 17.9623, 0.36", "30.7855, -147.709, 18.1242, 0.36", "30.8734, -147.923, 18.247, 1.2", "30.9658, -148.157, 18.3628, 1.2", "31.4202, -149.352, 19.036, 0.12", "31.5954, -149.792, 19.2903, 0.12", "31.945, -150.757, 19.8452, 0.12", "32.1056, -151.242, 20.1118, 0.12", "32.2022, -151.572, 20.2734, 0.12", "32.406, -152.343, 20.5601, 1.32", "32.5885, -152.97, 20.6327, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "26.9904, -137.384, -0.328668, 0.12", "26.0727, -138.29, -0.554327, 0.12", "25.4637, -138.891, -0.704074, 0.12", "25.271, -139.081, -0.751459, 0.96", "25.0439, -139.306, -0.807305, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "32.8636, -132.595, -7.40875, 0.12", "33.2735, -133.037, -7.22763, 0.12", "33.5744, -133.419, -7.08359, 0.12", "33.8559, -133.779, -6.95239, 0.72", "34.2231, -134.245, -6.79664, 0.84", "34.4266, -134.497, -6.70114, 0.48", "34.5678, -134.669, -6.63261, 0.12", "34.8754, -135.037, -6.47676, 0.12", "35.0721, -135.274, -6.36599, 0.12", "35.261, -135.487, -6.26485, 0.84", "35.631, -135.917, -6.12995, 0.36", "35.8095, -136.128, -6.07671, 0.12", "36.2407, -136.636, -5.97196, 0.12", "36.6163, -137.079, -5.90097, 1.8", "36.922, -137.479, -5.85602, 1.56", "37.4315, -138.197, -5.81137, 0.12", "37.5187, -138.33, -5.81397, 0.12", "37.5607, -138.397, -5.81653, 0.36", "37.7006, -138.641, -5.8304, 0.12", "37.9115, -139.078, -5.84358, 0.12", "37.9735, -139.224, -5.83707, 0.12", "38.0703, -139.452, -5.80962, 0.72", "38.2176, -139.817, -5.76658, 0.96", "38.3288, -140.105, -5.73195, 0.12", "38.6549, -140.989, -5.62466, 0.12", "38.7576, -141.279, -5.58925, 0.84", "38.8604, -141.588, -5.55778, 0.12", "38.9696, -141.96, -5.52368, 0.12", "39.0359, -142.205, -5.50284, 0.96", "39.1193, -142.514, -5.47915, 0.12", "39.2587, -143.043, -5.44756, 0.12", "39.3894, -143.554, -5.42426, 1.68", "39.4399, -143.773, -5.41901, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "32.8636, -132.595, -7.40875, 0.6", "32.6791, -131.254, -2.8511, 0.6", "33.0522, -131.647, -3.40974, 0.6", "34.1909, -132.712, -4.63335, 0.12", "34.6541, -133.13, -5.05721, 0.12", "35.2331, -133.653, -5.58695, 0.96", "35.8143, -134.178, -6.11872, 0.96", "37.1431, -135.44, -7.5945, 0.12", "37.688, -135.991, -8.23665, 0.12", "37.9749, -136.272, -8.53891, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "32.0544, -92.7351, -26.9376, 0.12", "33.8669, -92.9921, -25.5273, 0.12", "34.2717, -93.0508, -25.2273, 0.12", "34.4585, -93.0811, -25.0969, 0.6", "34.9824, -93.1611, -24.7519, 0.12", "35.9284, -93.2969, -24.1678, 0.12", "36.1906, -93.3324, -24.0092, 0.12", "36.3772, -93.3584, -23.9268, 0.12", "36.637, -93.3979, -23.817, 0.12", "37.2619, -93.4984, -23.5543, 0.12", "37.4591, -93.5377, -23.4809, 0.6", "37.8673, -93.6686, -23.3685, 0.12", "38.2851, -93.8047, -23.2373, 0.12", "38.831, -93.9665, -23.0687, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "32.0544, -92.7351, -26.9376, 0.24", "32.2604, -94.0735, -27.2398, 0.24", "32.3721, -95.2899, -27.5188, 0.24", "32.4053, -95.8557, -27.6415, 0.96", "32.4459, -96.8389, -27.8461, 1.8", "32.4923, -97.81, -28.1047, 0.84", "32.5143, -98.4395, -28.3059, 0.12", "32.5282, -99.4144, -28.7118, 0.12", "32.5171, -99.9256, -28.9422, 0.72", "32.5137, -100.045, -28.9886, 0.72", "32.5256, -101.266, -29.4054, 0.24", "32.575, -101.773, -29.5248, 0.24", "32.7179, -102.59, -29.6397, 0.24", "32.906, -103.416, -29.6695, 0.24", "33.078, -104.172, -29.6221, 0.24", "33.2536, -105.03, -29.505, 0.24", "33.4134, -105.87, -29.2913, 1.44", "33.5843, -106.777, -29.0121, 1.92", "33.7281, -107.669, -28.7072, 1.92", "33.8525, -108.574, -28.3977, 1.2", "33.9612, -109.513, -28.0998, 0.48", "34.0441, -110.433, -27.8197, 0.12", "34.1073, -111.093, -27.6034, 0.12", "34.1506, -111.501, -27.4744, 0.6", "34.2111, -112.016, -27.3345, 0.12", "34.3717, -113.079, -27.0458, 0.12", "34.4749, -113.612, -26.9168, 0.12", "34.871, -115.517, -26.6081, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "40.1783, -37.8874, -3.70396, 0.96", "38.8269, -35.7317, 4.67405, 0.96", "38.6754, -35.4275, 5.56422, 0.72", "38.5883, -35.2038, 6.05274, 0.24", "38.5162, -34.9145, 6.52615, 0.24", "38.4633, -34.4321, 7.11222, 0.24", "38.4519, -33.7729, 7.79023, 0.84", "38.6188, -32.7969, 8.18729, 1.2", "38.8067, -31.9229, 8.60396, 0.48", "39.0733, -30.8243, 9.26459, 0.24", "39.4045, -29.7217, 10.0235, 0.24", "39.8917, -28.3755, 11.089, 1.68", "40.1612, -27.707, 11.6471, 2.28", "40.3685, -27.2227, 12.0683, 2.4", "41.0401, -25.6497, 13.4563, 0.36", "41.2887, -25.0293, 13.9964, 0.36", "41.6125, -24.1668, 14.7014, 0.84", "42.0444, -22.9237, 15.6305, 0.84", "42.4463, -21.6507, 16.5364, 0.6", "42.8089, -20.4576, 17.3442, 0.6", "43.0397, -19.692, 17.8129, 0.96", "43.1947, -19.0824, 18.1747, 0.96", "43.4347, -17.9279, 18.8118, 0.12", "43.5213, -17.3492, 19.1132, 0.12", "43.5838, -16.8492, 19.3376, 0.12", "43.6471, -16.2997, 19.5513, 0.12", "43.7135, -15.7466, 19.7683, 0.6", "43.7827, -15.3037, 19.9178, 0.96", "43.8938, -14.5629, 20.0142, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "40.1783, -37.8874, -3.70396, 0.12", "41.1917, -38.4235, -3.19241, 0.12", "41.4912, -38.5735, -3.03824, 0.12", "41.867, -38.7539, -2.84138, 0.6", "42.3314, -38.9567, -2.60106, 0.6", "43.0083, -39.2285, -2.26581, 0.12", "43.6454, -39.4494, -1.96637, 0.12", "43.728, -39.468, -1.92988, 0.36", "43.9989, -39.5104, -1.81643, 0.12", "44.3702, -39.5493, -1.64204, 0.12", "44.7038, -39.5494, -1.47737, 0.48", "45.1957, -39.5315, -1.24794, 0.6", "45.5339, -39.522, -1.08045, 0.48", "45.8336, -39.5299, -0.937963, 0.48", "46.5139, -39.592, -0.491948, 0.12", "47.1796, -39.7191, 0.0153456, 2.04", "47.5528, -39.8288, 0.319412, 3.25", "47.8934, -39.9763, 0.59298, 3.37", "48.3208, -40.2123, 0.916413, 2.88", "49.6589, -41.0978, 1.864, 0.24", "50.2225, -41.5295, 2.22286, 0.24", "50.5758, -41.8443, 2.43849, 0.72", "51.2043, -42.4157, 2.77699, 0.96", "51.6148, -42.7914, 2.95206, 0.24", "51.7543, -42.9072, 2.98076, 0.24", "51.9712, -43.0504, 2.97217, 0.24", "52.482, -43.2801, 2.95274, 0.24", "52.9316, -43.4016, 2.95316, 1.2", "53.2893, -43.4655, 3.01677, 1.92", "54.0141, -43.5629, 3.23277, 1.92", "54.7368, -43.6438, 3.50605, 0.36", "55.1786, -43.6916, 3.73654, 0.36", "56.0389, -43.7784, 4.26508, 0.36", "57.3769, -43.9236, 5.16567, 1.68", "57.7871, -43.9733, 5.44033, 2.52", "58.4152, -44.0668, 5.86124, 2.64", "59.8076, -44.3173, 6.69588, 0.24", "60.4223, -44.445, 7.01036, 0.24", "60.8516, -44.5344, 7.17568, 0.36", "61.6197, -44.6843, 7.33509, 1.08", "62.0166, -44.7638, 7.41441, 1.08", "62.7268, -44.891, 7.53361, 0.48", "63.0905, -44.9388, 7.57205, 0.24", "63.5916, -44.977, 7.68826, 0.24", "64.0206, -44.9758, 7.85505, 0.6", "64.8529, -44.9277, 8.31007, 0.36", "65.2466, -44.9184, 8.5389, 0.36", "65.557, -44.949, 8.75561, 0.36", "65.7729, -45.0049, 8.91927, 0.48", "65.9329, -45.0679, 9.03311, 0.24", "66.2239, -45.2043, 9.23621, 0.24", "66.7605, -45.4589, 9.53996, 0.24", "67.5403, -45.8184, 9.93474, 0.24", "67.8686, -45.9648, 10.0846, 1.2", "68.4455, -46.1864, 10.3189, 2.16", "69.2874, -46.4586, 10.6664, 1.8", "69.9606, -46.633, 10.9365, 0.36", "70.9296, -46.825, 11.4347, 0.36", "71.3566, -46.8902, 11.6791, 0.36", "72.0502, -46.9769, 12.1286, 0.36", "72.6974, -47.0549, 12.6626, 1.56", "73.1795, -47.1116, 13.1254, 2.04", "74.4711, -47.2837, 14.5631, 0.24", "74.8336, -47.3455, 15.0153, 0.24", "75.0136, -47.3845, 15.2411, 0.24", "75.8281, -47.6315, 16.2502, 1.68", "76.0752, -47.7186, 16.5258, 2.04", "76.2592, -47.7935, 16.7392, 2.04", "77.0819, -48.1092, 17.6184, 0.24", "77.4363, -48.2239, 18.0274, 0.24", "77.7312, -48.2891, 18.3816, 1.2", "77.9719, -48.2942, 18.6749, 1.2", "78.8756, -48.1277, 19.8932, 0.12", "79.2124, -47.9693, 20.3732, 0.12", "79.413, -47.8029, 20.6439, 0.24", "79.5483, -47.6641, 20.8567, 0.24", "79.8167, -47.4009, 21.2422, 0.24", "79.9696, -47.2691, 21.4374, 0.24", "80.2748, -47.074, 21.7139, 0.24", "80.7701, -46.8614, 22.1043, 0.24", "81.6769, -46.5544, 22.8116, 0.12", "82.2846, -46.3986, 23.2762, 0.12", "82.4525, -46.3689, 23.4023, 1.44", "83.0924, -46.2779, 23.8706, 2.52", "83.7928, -46.1726, 24.3653, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-15.4714, -274.085, -41.8489, 0.12", "-14.9741, -275.423, -41.6462, 0.12", "-14.7187, -276.101, -41.5385, 0.12", "-14.6005, -276.414, -41.4898, 0.48", "-14.4018, -276.955, -41.3877, 0.48", "-14.1905, -277.52, -41.2678, 0.48", "-14.0543, -277.816, -41.2237, 0.48", "-13.9045, -278.062, -41.2011, 0.48", "-13.5255, -278.555, -41.1816, 1.68", "-13.1029, -279.014, -41.1798, 2.28", "-12.687, -279.415, -41.1879, 2.4", "-11.4627, -280.473, -41.2442, 0.48", "-10.6052, -281.17, -41.3095, 0.36", "-10.0699, -281.569, -41.3688, 0.12", "-9.7699, -281.766, -41.4126, 0.12", "-9.53562, -281.901, -41.4592, 0.12", "-9.1682, -282.09, -41.5331, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-15.4714, -274.085, -41.8489, 0.12", "-15.6256, -275.531, -41.8571, 0.12", "-15.6465, -275.896, -41.8818, 0.12", "-15.6471, -276.271, -41.9195, 0.12", "-15.6442, -276.892, -42.0398, 0.12", "-15.6498, -277.2, -42.1118, 0.48", "-15.6795, -277.768, -42.2532, 0.48", "-15.6907, -277.981, -42.3264, 0.12", "-15.8501, -278.617, -42.6412, 0.12", "-16.0911, -279.222, -42.9911, 0.12", "-16.249, -279.571, -43.193, 1.68", "-16.3751, -279.836, -43.3641, 1.8", "-16.5981, -280.287, -43.6789, 1.8", "-17.2731, -281.689, -44.6277, 0.12", "-17.4459, -282.066, -44.8815, 0.12", "-17.736, -282.848, -45.352, 0.12", "-17.899, -283.444, -45.7199, 0.48", "-17.9367, -283.648, -45.8406, 0.48", "-17.9701, -284.148, -46.0835, 0.48", "-17.9747, -284.304, -46.1483, 0.12", "-18.017, -284.735, -46.3511, 0.12", "-18.11, -285.345, -46.6404, 0.12", "-18.1641, -285.644, -46.7714, 0.96", "-18.3046, -286.287, -47.0573, 1.44", "-18.6216, -287.481, -47.6704, 0.12", "-18.8357, -288.194, -48.0331, 0.12", "-18.9327, -288.503, -48.188, 0.12", "-19.0066, -288.729, -48.2907, 0.6", "-19.1417, -289.094, -48.4788, 0.6", "-19.4247, -289.708, -48.905, 0.12", "-19.7131, -290.254, -49.3345, 0.12", "-19.7586, -290.338, -49.4079, 0.48", "-19.8822, -290.596, -49.6047, 0.48", "-20.1716, -291.361, -50.0675, 0.48", "-20.4342, -292.219, -50.4749, 0.24", "-20.5079, -292.505, -50.6616, 0.12", "-20.6694, -293.376, -51.2441, 0.12", "-20.7639, -293.943, -51.652, 1.44", "-20.8255, -294.418, -51.9965, 2.16", "-20.8863, -295.054, -52.4377, 2.28", "-21.0786, -297.392, -54.0094, 0.12", "-21.1594, -298.665, -54.8974, 0.12", "-21.1897, -299.367, -55.4055, 0.84", "-21.2034, -299.859, -55.7609, 1.44", "-21.2087, -300.268, -56.0497, 0.96", "-21.2007, -300.701, -56.2768, 0.12", "-21.1933, -301.116, -56.39, 0.12", "-21.2075, -301.568, -56.5051, 0.12", "-21.2244, -301.828, -56.5584, 0.36", "-21.2339, -302.503, -55.9021, 0.12", "-21.241, -303.577, -54.4653, 0.12", "-21.2378, -303.825, -54.0265, 1.08", "-21.2284, -304.091, -53.4392, 1.8", "-21.2182, -304.226, -53.0791, 2.04", "-20.9551, -306.434, -46.2101, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.9208, 96.2736, 7.98938, 0.48", "20.3469, 97.652, 8.15272, 0.48", "20.5147, 98.2475, 8.20427, 0.48", "20.6061, 98.5791, 8.22558, 0.48", "20.7147, 98.9956, 8.23252, 0.48", "20.9247, 99.8985, 8.21215, 0.48", "21.103, 100.81, 8.17128, 0.48", "21.1282, 101.002, 8.14744, 0.72", "21.1782, 101.372, 8.12309, 0.96", "21.2694, 101.988, 8.11254, 0.96", "21.3718, 102.516, 8.17324, 0.36", "21.5757, 103.316, 8.34628, 0.36", "21.719, 103.817, 8.48739, 0.36", "22.0312, 104.886, 8.82304, 1.56", "22.174, 105.373, 8.98779, 2.16", "22.5543, 106.657, 9.45378, 0.48", "22.8181, 107.622, 9.751, 0.48", "22.9543, 108.188, 9.89989, 0.48", "23.0104, 108.516, 9.96234, 0.48", "23.0421, 109.102, 10.0097, 1.68", "23.0286, 109.452, 10.0171, 1.92", "22.933, 110.58, 9.94058, 1.08", "22.8875, 111.184, 9.90113, 0.48", "22.8752, 111.617, 9.87251, 0.36", "22.9195, 112.411, 9.8214, 0.36", "23.01, 112.938, 9.81292, 0.36", "23.2765, 113.887, 9.8068, 0.72", "23.4168, 114.246, 9.80847, 0.36", "23.5929, 114.664, 9.79245, 0.36", "23.8763, 115.268, 9.76476, 0.36", "24.2585, 116.033, 9.72678, 0.84", "24.6955, 116.844, 9.8218, 1.92", "24.9423, 117.402, 9.82539, 2.28", "25.0864, 117.811, 9.7862, 2.64", "25.1783, 118.144, 9.72089, 2.76", "25.2742, 118.62, 9.58087, 2.76", "25.624, 120.556, 8.81644, 1.56", "26.1245, 123.115, 7.63516, 0.12", "26.1769, 123.353, 7.51805, 0.12", "26.2265, 123.565, 7.42393, 0.12", "26.2942, 123.913, 7.28159, 0.72", "26.3729, 124.417, 7.09997, 0.96", "26.4358, 125.02, 6.88626, 0.48", "26.5276, 125.536, 6.84968, 0.36", "26.708, 126.701, 6.7775, 0.36", "26.7604, 127.079, 6.78872, 0.36", "26.7935, 127.371, 6.81186, 0.12", "26.8685, 128.129, 6.93151, 0.96", "26.9245, 128.658, 7.04805, 1.32", "26.9703, 128.992, 7.09705, 1.2", "27.1737, 130.026, 7.36568, 0.48", "27.3441, 130.765, 7.58156, 0.24", "27.4823, 131.313, 7.74449, 1.2", "27.6116, 131.782, 7.88253, 1.68", "27.9017, 132.748, 8.17006, 1.68", "28.4141, 134.364, 8.64179, 1.8", "28.6211, 134.985, 8.79612, 0.96", "28.8685, 135.628, 9.01847, 1.08", "29.0756, 136.129, 9.19513, 0.36", "29.5166, 137.185, 9.51974, 0.36", "29.7648, 137.818, 9.67616, 0.36", "29.9329, 138.263, 9.7224, 1.08", "30.3618, 139.434, 9.82854, 1.2", "30.7008, 140.411, 9.88159, 0.96", "31.0211, 141.423, 9.88189, 0.36", "31.2719, 142.316, 9.76956, 0.24", "31.4116, 142.884, 9.65122, 0.6", "31.4988, 143.261, 9.56737, 0.12", "31.5805, 143.582, 9.48736, 0.24", "31.8561, 144.546, 9.27416, 0.24", "32.0934, 145.349, 9.10151, 0.24", "32.2674, 145.994, 8.90297, 1.68", "32.4979, 146.951, 8.58516, 2.52", "32.6577, 147.761, 8.32541, 0.48", "32.7911, 148.544, 8.08134, 0.48", "32.8898, 149.309, 7.86832, 0.72", "32.9537, 150.155, 7.68451, 1.08", "32.963, 150.729, 7.5862, 1.68", "32.9209, 151.484, 7.47776, 1.2", "32.8548, 152.121, 7.44042, 0.36", "32.7575, 152.955, 7.44223, 0.36", "32.694, 153.52, 7.49081, 0.36", "32.6192, 154.162, 7.57635, 0.36", "32.5289, 154.952, 7.67739, 2.04", "32.4971, 155.298, 7.72647, 2.4", "32.456, 156.116, 7.80294, 2.4", "32.4801, 157.35, 7.80604, 0.36", "32.5527, 158.105, 7.74275, 0.36", "32.6615, 158.773, 7.67955, 1.44", "32.7841, 159.288, 7.62684, 2.16", "33.1038, 160.478, 7.51122, 0.48", "33.2982, 161.159, 7.45483, 0.12", "33.4356, 161.629, 7.4051, 0.6", "33.7574, 162.726, 7.36633, 0.36", "33.9008, 163.263, 7.39517, 0.24", "34.0328, 163.887, 7.49031, 0.24", "34.0809, 164.236, 7.56181, 0.24", "34.1377, 164.882, 7.65721, 0.36", "34.1932, 165.601, 7.6945, 0.36", "34.2634, 166.127, 7.68595, 0.36", "34.3524, 166.545, 7.68482, 0.36", "34.5636, 167.259, 7.66484, 1.68", "34.7332, 167.767, 7.59813, 2.4", "34.8551, 168.117, 7.51822, 2.4", "35.2207, 169.054, 7.30088, 0.24", "35.4049, 169.5, 7.20312, 0.24", "35.5193, 169.781, 7.14864, 0.48", "35.8848, 170.753, 7.01748, 0.24", "36.0494, 171.342, 6.96056, 0.24", "36.16, 171.975, 6.89652, 0.24", "36.2015, 172.491, 6.87388, 0.72", "36.2302, 172.941, 6.89041, 0.84", "36.2499, 173.252, 6.91498, 0.36", "36.291, 173.846, 6.95169, 0.36", "36.3336, 174.484, 6.91547, 0.48", "36.4012, 175.412, 6.75121, 0.36", "36.4651, 175.923, 6.61433, 0.36", "36.5286, 176.272, 6.52195, 0.96", "36.7168, 177.089, 6.25316, 0.96", "36.8368, 177.465, 6.14748, 0.36", "36.9481, 177.78, 6.08637, 0.36", "37.2488, 178.654, 5.96307, 2.4", "37.5558, 179.59, 5.91409, 3.25", "37.8154, 180.46, 5.94354, 2.16", "38.1424, 181.694, 6.03959, 0.24", "38.3556, 182.601, 6.10828, 0.12", "38.51, 183.363, 6.14996, 0.24", "38.5458, 183.623, 6.15758, 0.36", "38.5963, 184.299, 6.11853, 0.36", "38.6224, 185.149, 6.03265, 1.32", "38.6303, 185.674, 5.94139, 0.48", "38.6534, 185.976, 5.88958, 0.12", "38.7244, 186.498, 5.79893, 0.12", "38.8276, 187.098, 5.709, 0.12", "38.9085, 187.468, 5.66385, 0.84", "39.1568, 188.498, 5.58208, 1.56", "39.2647, 188.911, 5.55551, 1.68", "39.4909, 189.659, 5.51876, 0.12", "39.7296, 190.296, 5.47939, 0.12", "39.9096, 190.604, 5.54846, 0.24", "40.0227, 190.721, 5.61948, 0.12", "40.3592, 190.911, 5.87141, 0.12", "40.5892, 191.001, 6.06525, 0.12", "41.4055, 191.207, 6.82522, 3.25", "43.7503, 191.533, 9.15745, 0.12", "43.9656, 191.547, 9.38659, 0.12", "44.1493, 191.544, 9.5927, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.9208, 96.2736, 7.98938, 0.12", "18.1303, 96.8974, 8.31455, 0.12", "17.7012, 97.048, 8.40701, 0.12", "17.3779, 97.1636, 8.44761, 0.96", "16.5634, 97.4361, 8.50817, 0.12", "16.0012, 97.6119, 8.49436, 0.12", "15.6718, 97.7161, 8.47507, 0.12", "15.1936, 97.8721, 8.4237, 1.08", "14.206, 98.1765, 8.3699, 0.36", "13.2491, 98.4606, 8.32581, 0.36", "12.0794, 98.8397, 8.39793, 0.36", "11.5542, 98.9998, 8.44254, 0.36", "10.6139, 99.2538, 8.7527, 0.36", "10.1177, 99.3541, 9.04934, 0.36", "9.61221, 99.4089, 9.50783, 0.36", "8.56632, 99.4725, 10.7022, 1.92", "8.01927, 99.4689, 11.4662, 1.92", "6.41307, 99.3146, 13.9577, 0.12", "6.07104, 99.2481, 14.5571, 0.12", "5.8875, 99.1923, 14.9369, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "10.9687, 119.539, -17.2674, 0.12", "10.107, 121.149, -18.6285, 0.12", "9.98333, 121.453, -18.8363, 0.12", "9.82117, 122.024, -19.1446, 0.24", "9.47482, 123.922, -20.179, 0.24", "9.39894, 124.625, -20.5451, 0.24", "9.36804, 125.121, -20.7922, 0.24", "9.44927, 126.163, -21.2484, 1.68", "9.53464, 126.882, -21.6066, 1.68", "9.90498, 129.014, -22.7367, 0.12", "10.0853, 129.858, -23.1779, 0.12", "10.1476, 130.139, -23.3507, 0.6", "10.2721, 130.679, -23.7306, 0.48", "10.5864, 131.982, -24.7585, 0.12", "10.7597, 132.651, -25.3321, 0.12", "10.8137, 132.818, -25.4589, 0.12", "10.9341, 133.198, -25.7386, 0.96", "11.0653, 133.592, -26.0054, 0.96", "11.2081, 134.033, -26.2929, 0.48", "11.5679, 135.089, -26.889, 0.12", "12.0564, 136.535, -27.7063, 0.12", "12.3569, 137.443, -28.2289, 1.8", "12.512, 137.92, -28.5034, 2.16", "13.0092, 139.392, -29.3202, 0.12", "13.3957, 140.46, -29.8908, 0.12", "13.5545, 140.872, -30.0893, 0.96", "13.807, 141.52, -30.3948, 0.24", "14.0497, 142.135, -30.6767, 0.24", "14.4337, 143.055, -31.1088, 1.68", "14.7525, 143.734, -31.4253, 0.12", "15.047, 144.281, -31.6942, 0.12", "15.436, 144.961, -32.1512, 0.6", "15.746, 145.462, -32.5429, 0.12", "16.4104, 146.5, -33.4588, 0.12", "16.5414, 146.7, -33.6479, 0.12", "17.0657, 147.511, -34.4273, 1.92", "18.337, 149.464, -36.2558, 0.12", "18.9713, 150.449, -37.1215, 0.12", "19.1664, 150.757, -37.3469, 0.84", "19.3822, 151.125, -37.5614, 0.12", "19.9036, 152.118, -37.9933, 0.12", "20.3004, 152.909, -38.1304, 1.68", "20.5776, 153.428, -38.0685, 1.2", "21.0813, 154.328, -37.8792, 0.12", "21.5628, 155.115, -37.6386, 0.12", "21.9234, 155.648, -37.4289, 0.6", "22.9488, 157.014, -36.7926, 0.48", "23.4579, 157.684, -36.482, 0.48", "23.8473, 158.178, -36.2544, 0.48", "24.2788, 158.747, -36.0411, 0.12", "24.5569, 159.132, -35.9353, 0.12", "25.0178, 159.892, -35.853, 1.44", "25.2421, 160.38, -35.8648, 1.68", "25.6235, 161.36, -35.915, 0.12", "26.054, 162.643, -36.0094, 0.12", "26.3927, 163.782, -36.1245, 1.92", "26.7592, 165.119, -36.266, 0.12", "27.1296, 166.531, -36.4317, 0.12", "27.2653, 167.051, -36.501, 0.6", "27.329, 167.309, -36.5396, 0.12", "27.6061, 168.49, -36.7102, 0.12", "27.7585, 169.295, -36.88, 1.08", "27.8268, 169.7, -36.9857, 0.72", "27.8637, 169.98, -37.0801, 0.12", "27.9732, 170.974, -37.4676, 0.12", "28.0611, 171.908, -37.8648, 1.44", "28.1428, 173.55, -38.7272, 0.12", "28.1701, 174.015, -38.987, 0.12", "28.18, 174.132, -39.0532, 0.48", "28.2127, 174.395, -39.1954, 0.12", "28.3755, 175.228, -39.6001, 0.48", "28.6738, 176.244, -39.9796, 0.12", "29.1116, 177.533, -40.4422, 0.12", "29.1927, 177.773, -40.5377, 0.72", "29.4672, 178.608, -40.8723, 1.44", "29.6796, 179.247, -41.1252, 1.8", "29.9647, 180.033, -41.4351, 1.68", "30.5714, 181.691, -42.0395, 0.12", "30.7643, 182.294, -42.3027, 0.12", "30.9357, 182.884, -42.5829, 0.12", "31.0903, 183.563, -42.9468, 1.32", "31.1846, 184.047, -43.2183, 1.32", "31.2386, 184.397, -43.4131, 1.32", "31.3672, 185.389, -43.889, 0.12", "31.4214, 186.266, -44.3979, 0.12", "31.3843, 187.148, -45.0082, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "10.9687, 119.539, -17.2674, 0.12", "13.1549, 119.949, -1.59426, 0.12", "13.2432, 119.965, -0.993527, 0.12", "13.3009, 119.976, -0.621416, 0.12", "13.5066, 120.01, 0.6371, 0.84", "13.5757, 120.021, 1.06086, 0.84", "13.6997, 120.04, 2.02911, 0.36", "13.9455, 120.092, 1.68108, 0.36", "14.1564, 120.159, 1.31326, 0.36", "14.3882, 120.24, 0.872061, 0.36", "14.9188, 120.435, -0.15535, 0.36", "16.0212, 120.874, -2.33404, 0.36", "16.616, 121.125, -3.46947, 2.04", "17.5418, 121.52, -5.17786, 1.56", "17.9657, 121.702, -5.89135, 0.12", "18.1739, 121.791, -6.19975, 0.12", "18.8054, 122.018, -6.92478, 1.2", "19.3395, 122.153, -7.34666, 0.48", "19.6431, 122.21, -7.53525, 0.12", "20.4984, 122.365, -7.94636, 0.12", "21.3792, 122.53, -8.4357, 1.32", "21.7778, 122.608, -8.68429, 1.68", "22.9524, 122.876, -9.52451, 0.12", "23.3078, 122.974, -9.84465, 0.12", "23.8296, 123.133, -10.4213, 0.6", "24.7913, 123.416, -11.6304, 0.12", "25.1177, 123.499, -12.0539, 0.12", "26.0226, 123.709, -13.2758, 1.8", "26.9631, 123.904, -14.5312, 1.8", "27.9219, 124.047, -15.8825, 0.48", "28.2629, 124.074, -16.3469, 0.48", "28.6098, 124.079, -16.7571, 0.48", "29.3135, 124.062, -17.5413, 1.44", "29.7367, 124.038, -17.9764, 1.68", "31.2922, 123.996, -19.4882, 0.36", "31.9847, 124.044, -20.166, 0.36", "32.5899, 124.167, -20.9008, 1.68", "33.1375, 124.342, -21.652, 1.2", "33.8791, 124.667, -22.7885, 0.36", "34.365, 124.941, -23.5959, 0.36", "34.9857, 125.404, -24.7359, 1.68", "36.0714, 126.381, -26.967, 0.24", "36.3037, 126.614, -27.4603, 0.24", "36.5865, 126.894, -28.0113, 0.84", "36.8165, 127.101, -28.4081, 0.96", "37.4088, 127.507, -29.2593, 0.24", "37.783, 127.679, -29.6794, 0.24", "38.5358, 127.881, -30.3534, 1.44", "38.8712, 127.917, -30.7103, 1.68", "39.4416, 127.883, -31.5221, 0.36", "39.7113, 127.827, -31.9729, 0.36", "39.9055, 127.756, -32.3429, 0.36", "40.6834, 127.402, -33.9488, 0.96", "41.5479, 126.949, -35.8035, 1.68", "42.5762, 126.375, -38.0281, 0.6", "42.7728, 126.253, -38.4496, 0.48", "43.5047, 125.75, -39.9778, 2.04", "43.7583, 125.55, -40.4764, 2.52", "44.5279, 124.88, -41.7719, 0.36", "44.7575, 124.684, -42.0743, 0.36", "45.1559, 124.392, -42.4637, 0.48", "46.024, 123.787, -43.2283, 0.36", "46.3416, 123.555, -43.4745, 0.36", "46.5215, 123.417, -43.6102, 0.36", "47.428, 122.714, -44.1933, 0.36", "48.1824, 122.14, -44.6217, 1.08", "48.7051, 121.766, -44.8554, 1.8", "49.3847, 121.314, -45.0615, 1.2", "49.9705, 120.967, -45.2154, 0.36", "50.7821, 120.538, -45.3333, 0.36", "51.615, 120.149, -45.3692, 0.36", "52.2689, 119.893, -45.3524, 1.2", "53.0839, 119.642, -45.3274, 1.8", "54.1662, 119.381, -45.3098, 0.12", "55.7045, 119.08, -45.3261, 0.12", "56.5492, 118.929, -45.3633, 1.44", "57.0311, 118.826, -45.4019, 2.16", "57.8875, 118.588, -45.4848, 2.4", "58.9984, 118.19, -45.5875, 0.24", "59.4373, 117.978, -45.6232, 0.24", "59.8444, 117.715, -45.6764, 0.24", "60.5457, 117.162, -45.7168, 0.48", "61.0002, 116.756, -45.7199, 0.12", "61.5358, 116.284, -45.675, 0.12", "61.9134, 115.987, -45.5964, 0.12", "62.3109, 115.737, -45.5063, 0.12", "62.8202, 115.491, -45.3273, 0.36", "63.1577, 115.371, -45.1887, 0.12", "64.2109, 115.042, -44.7401, 0.12", "65.1291, 114.783, -44.3309, 1.44", "65.3648, 114.721, -44.2246, 1.56", "66.7195, 114.354, -43.5905, 0.36", "67.1492, 114.214, -43.3105, 0.36", "67.401, 114.11, -43.0981, 0.36", "67.6938, 113.931, -42.7823, 0.36", "67.9113, 113.765, -42.5717, 0.36", "68.0647, 113.629, -42.4039, 0.36", "69.0925, 112.611, -41.2842, 0.12", "69.2918, 112.413, -41.0673, 0.12", "69.5165, 112.199, -40.8115, 0.12", "70.2857, 111.515, -39.9668, 2.4", "71.618, 110.421, -38.657, 0.12", "71.9985, 110.121, -38.3316, 0.12", "72.484, 109.752, -37.9398, 0.36", "72.9546, 109.397, -37.5266, 0.12", "73.3425, 109.104, -37.1679, 0.12", "73.7085, 108.819, -36.8102, 1.08", "74.0227, 108.572, -36.5056, 1.08", "75.0868, 107.691, -35.3709, 0.36", "75.3607, 107.432, -35.0765, 0.36", "75.5798, 107.212, -34.8751, 0.12", "75.7105, 107.076, -34.733, 0.12", "76.4305, 106.323, -33.9059, 0.12", "76.7595, 105.996, -33.5528, 1.32", "77.266, 105.522, -33.0567, 2.04", "77.8613, 105.02, -32.4828, 1.32", "79.2052, 103.995, -31.1947, 0.12", "79.3887, 103.876, -31.0301, 0.12", "79.7041, 103.728, -30.6785, 0.24", "80.1758, 103.546, -30.1031, 0.24", "80.536, 103.446, -29.6184, 0.24", "81.0298, 103.356, -28.8884, 0.24", "81.2822, 103.333, -28.5366, 0.84", "83.0514, 103.259, -25.7604, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "39.5034, 91.2605, 15.9489, 0.72", "39.2626, 90.9484, 15.2731, 0.72", "38.8814, 90.582, 14.3904, 0.6", "38.6335, 90.3437, 13.8163, 0.36", "38.5413, 90.2551, 13.6029, 0.48", "38.3112, 90.0339, 13.07, 0.36", "38.0302, 89.7638, 12.4192, 0.12", "37.9188, 89.6923, 12.198, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "39.5034, 91.2605, 15.9489, 0.48", "39.5558, 91.8563, 15.8801, 0.48", "39.5806, 92.3759, 15.8454, 0.48", "39.5706, 92.931, 15.7998, 0.6", "39.5372, 93.3807, 15.7638, 0.48", "39.4761, 94.058, 15.7113, 0.48", "39.4067, 94.8239, 15.6538, 2.04", "39.3697, 95.4534, 15.6192, 1.92", "39.3471, 96.1783, 15.5471, 1.44", "39.3403, 96.7472, 15.4664, 1.08", "39.351, 97.2486, 15.3862, 0.96", "39.3788, 97.4989, 15.3321, 0.72", "39.5158, 98.0674, 15.1632, 1.08", "39.8262, 98.9924, 14.8988, 0.48", "39.9798, 99.3788, 14.8025, 0.48", "40.2468, 100.019, 14.6637, 1.32", "40.4771, 100.586, 14.5388, 1.92", "40.7543, 101.348, 14.4135, 1.08", "40.9352, 101.892, 14.3669, 0.72", "41.0206, 102.185, 14.377, 0.24", "41.2513, 102.853, 14.4262, 0.24", "41.4163, 103.348, 14.4625, 0.72", "41.5691, 103.929, 14.523, 0.12", "41.7085, 104.436, 14.5922, 0.12", "41.9107, 105.146, 14.6754, 1.8", "42.1555, 106.049, 14.779, 2.76", "42.2994, 106.638, 14.8581, 2.64", "42.5285, 107.622, 15.0022, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "34.871, -115.517, -26.6081, 0.12", "35.7869, -116.097, -26.7074, 0.12", "36.547, -116.578, -26.7897, 0.12", "37.3155, -117.065, -26.8731, 0.6", "37.7188, -117.32, -26.9168, 0.12", "38.6859, -117.932, -27.0216, 0.12", "39.1926, -118.253, -27.0766, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "34.871, -115.517, -26.6081, 0.12", "35.0055, -116.704, -26.2972, 0.12", "35.1025, -117.415, -25.9838, 0.12", "35.2011, -117.927, -25.7242, 0.96", "35.3129, -118.428, -25.4707, 1.56", "35.5102, -119.217, -25.089, 0.12", "35.627, -119.629, -24.9011, 0.12", "36.0875, -120.879, -24.2501, 1.08", "36.3126, -121.411, -23.9683, 0.72", "36.5015, -121.826, -23.762, 0.12", "36.738, -122.311, -23.4723, 0.12", "36.9472, -122.75, -23.1907, 0.12", "37.2515, -123.452, -22.7665, 1.44", "37.4017, -123.835, -22.5626, 1.68", "37.504, -124.136, -22.3946, 1.68", "37.8901, -125.411, -21.7072, 0.12", "38.0302, -126.002, -21.4001, 0.12", "38.1323, -126.645, -21.1005, 0.12", "38.1538, -126.873, -21.0128, 0.96", "38.1818, -127.406, -20.8274, 0.96", "38.2007, -127.901, -20.6838, 0.12", "38.2039, -129.255, -20.4092, 0.12", "38.1947, -129.947, -20.2692, 0.96", "38.1734, -130.579, -20.1545, 1.68", "38.1602, -131.025, -20.0814, 1.92", "38.1458, -131.494, -20.0267, 1.92", "38.107, -132.663, -19.9444, 0.12", "38.0787, -133.114, -19.9473, 0.12", "37.9808, -134.127, -19.9879, 0.12", "37.9084, -134.589, -20.0495, 0.6", "37.7658, -135.209, -20.166, 0.12", "37.5757, -135.848, -20.3074, 0.12", "37.3584, -136.514, -20.4747, 1.2", "37.0334, -137.443, -20.7154, 1.68", "36.5378, -138.78, -21.0397, 0.12", "36.3021, -139.449, -21.201, 0.12", "36.1668, -139.919, -21.3002, 0.12", "36.0492, -140.47, -21.4291, 0.12", "36.008, -140.796, -21.5048, 1.2", "35.9725, -141.498, -21.6604, 1.56", "35.9937, -142.722, -21.9095, 0.24", "36.0432, -143.622, -22.1172, 0.24", "36.0893, -144.525, -22.3387, 0.72", "36.1025, -144.97, -22.4462, 0.84", "36.1116, -145.445, -22.5538, 0.12", "36.1095, -145.777, -22.627, 0.12", "36.0729, -146.33, -22.7526, 0.12", "36.034, -146.731, -22.8564, 0.12", "36.0349, -147.189, -22.7937, 0.12", "36.0486, -147.403, -22.7204, 0.12", "36.1122, -148.144, -22.3582, 1.32", "36.1637, -148.948, -21.8922, 0.12", "36.2509, -149.643, -21.3983, 0.12", "36.8312, -152.593, -18.8332, 0.6", "37.1095, -153.635, -17.6501, 1.32", "37.2018, -153.897, -17.2504, 2.04", "37.3274, -154.143, -16.6989, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "83.7928, -46.1726, 24.3653, 0.24", "85.0106, -46.4014, 25.1286, 0.24", "85.5495, -46.4918, 25.4641, 0.24", "87.5185, -46.8146, 26.6727, 0.24", "88.1035, -46.8996, 27.0065, 0.96", "89.2189, -47.0463, 27.5447, 1.56", "90.1986, -47.1618, 28.0297, 0.36", "92.1022, -47.3559, 28.9301, 0.12", "92.536, -47.3919, 29.1267, 1.2", "93.9074, -47.4694, 29.6615, 2.16", "95.625, -47.4798, 30.3566, 0.12", "97.4184, -47.382, 31.0722, 0.12", "97.7399, -47.3365, 31.1933, 0.84", "98.38, -47.1778, 31.4016, 0.96", "99.2443, -46.9062, 31.6941, 0.12", "100.053, -46.5371, 31.9985, 0.12", "100.328, -46.3413, 32.1061, 0.6", "101.003, -45.7452, 32.1873, 0.12", "101.465, -45.2404, 32.2542, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "83.7928, -46.1726, 24.3653, 0.6", "83.9017, -44.8838, 24.5926, 0.6", "83.9396, -44.5289, 24.6571, 0.6", "84.0648, -43.7791, 24.7738, 0.84", "84.3125, -42.7726, 24.9167, 0.12", "84.5958, -41.6259, 25.0605, 0.12", "84.6955, -41.2357, 25.1048, 0.96", "84.9619, -40.3961, 25.2017, 1.2", "85.3122, -39.4516, 25.2924, 0.12", "85.753, -38.4066, 25.3705, 0.12", "86.1378, -37.5941, 25.3887, 0.12", "86.6263, -36.6945, 25.3699, 0.12", "86.8615, -36.296, 25.3609, 0.12", "87.4308, -35.4105, 25.3436, 1.68", "87.6514, -35.1288, 25.2756, 1.92", "88.5585, -34.1806, 24.8378, 0.12", "89.3846, -33.4418, 24.3294, 0.12", "89.752, -33.1108, 24.0444, 1.32", "90.0657, -32.8037, 23.7104, 1.68", "91.9825, -30.9296, 21.0797, 0.36", "92.2164, -30.7226, 20.7275, 0.36", "92.5401, -30.4539, 20.1853, 0.12", "93.0263, -30.0593, 19.2779, 0.12", "93.9719, -29.2625, 17.3606, 0.48", "94.5367, -28.7295, 16.102, 1.44", "94.9487, -28.2015, 15.0973, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.1682, -282.09, -41.5331, 0.24", "-9.0443, -281.957, -41.5965, 0.24", "-8.88707, -281.788, -41.6769, 0.24", "-8.69691, -281.584, -41.7742, 0.6", "-8.50478, -281.377, -41.8725, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.1682, -282.09, -41.5331, 0.12", "-8.89374, -282.415, -41.0329, 0.12", "-8.71467, -282.595, -40.7068, 0.12", "-8.5405, -282.72, -40.4569, 0.12", "-8.29085, -282.845, -40.1808, 0.12", "-8.14486, -282.9, -40.0441, 0.12", "-6.90959, -283.245, -39.0318, 0.12", "-6.35124, -283.311, -38.6612, 2.04", "-5.74489, -283.33, -38.2792, 1.56", "-5.09174, -283.307, -37.8995, 0.36", "-4.74023, -283.271, -37.6821, 0.36", "-4.33926, -283.215, -37.438, 0.36", "-3.5185, -283.079, -36.9887, 0.36", "-3.20761, -283.02, -36.7612, 0.6", "-3.00582, -282.98, -36.574, 0.6", "-2.16061, -282.787, -35.6738, 0.36", "-1.97537, -282.745, -35.4707, 0.6", "-1.70509, -282.691, -35.2057, 0.6", "-1.18987, -282.612, -34.7868, 0.12", "-0.960184, -282.6, -34.6605, 0.12", "-0.51489, -282.619, -34.5107, 0.12", "-0.0574031, -282.69, -34.4833, 1.08", "0.830726, -282.926, -34.5193, 0.12", "1.02094, -283.004, -34.5418, 0.12", "1.53652, -283.27, -34.6235, 0.12", "1.85764, -283.467, -34.6774, 0.48", "2.36972, -283.825, -34.7681, 0.12", "2.66805, -284.055, -34.8163, 0.12", "3.16548, -284.464, -34.8521, 0.12", "3.52055, -284.754, -34.886, 0.12", "3.82187, -284.991, -34.9224, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "37.3274, -154.143, -16.6989, 0.48", "37.5706, -155.822, -19.5115, 0.48", "37.5998, -156.095, -19.9481, 0.48", "37.6556, -156.727, -20.8612, 0.12", "37.6878, -157.037, -21.2774, 0.12", "37.7323, -157.466, -21.854, 1.2", "37.7883, -158.007, -22.5803, 0.12", "37.7908, -158.145, -22.7177, 0.12", "37.7992, -158.577, -23.1594, 0.72", "37.7905, -158.828, -23.3576, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "37.3274, -154.143, -16.6989, 0.12", "36.5533, -156.328, -18.7934, 0.12", "36.2006, -157.268, -19.3682, 0.12", "36.0925, -157.54, -19.5076, 0.6", "35.7644, -158.294, -19.852, 0.24", "35.625, -158.574, -19.9348, 0.24", "35.2244, -159.301, -20.0885, 0.24", "34.8672, -159.827, -20.0457, 0.6", "34.2944, -160.51, -19.9915, 0.12", "33.7919, -161.023, -19.9744, 0.12", "32.7248, -161.933, -20.0145, 0.84", "32.4648, -162.13, -20.0182, 0.84", "31.96, -162.461, -20.0001, 0.12", "31.6741, -162.619, -19.9749, 0.12", "30.9085, -162.969, -19.8552, 0.84", "30.6008, -163.083, -19.8381, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "axon_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "axon_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L4_DBC_90f039ca46_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_15, dend_0, axon_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, axon_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.26895, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 3.84084, -5.78047, -16.9858, 3.85 ) }
    dend_26 { pt3dadd( 4.63502, -5.2731, -16.2725, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -12.4309, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.46979, -14.1063, -0.768776, 1.92 ) }
    dend_15 { pt3dadd( -0.324446, -15.3654, 0.0671873, 1.8 ) }
    dend_15 { pt3dadd( -0.183405, -16.3706, 0.615236, 1.92 ) }
    dend_15 { pt3dadd( 0.249371, -19.0507, 1.80038, 1.32 ) }
    dend_15 { pt3dadd( 0.483204, -20.2641, 2.2346, 1.56 ) }
    dend_15 { pt3dadd( 0.755566, -21.4654, 2.57574, 1.8 ) }
    dend_15 { pt3dadd( 1.01753, -22.4322, 2.68192, 2.04 ) }
    dend_15 { pt3dadd( 1.48452, -23.9308, 2.65255, 2.16 ) }
    dend_15 { pt3dadd( 1.80834, -24.9013, 2.50043, 1.32 ) }
    dend_15 { pt3dadd( 2.16924, -26.0013, 2.25399, 1.44 ) }
    dend_15 { pt3dadd( 2.57996, -27.4384, 1.99765, 1.44 ) }
    dend_15 { pt3dadd( 2.83365, -28.5665, 1.85946, 1.8 ) }
    dend_15 { pt3dadd( 2.94739, -29.3532, 1.79651, 2.04 ) }
    dend_15 { pt3dadd( 2.98857, -30.4718, 1.7596, 1.68 ) }
    dend_15 { pt3dadd( 2.88102, -32.1461, 1.72948, 1.44 ) }
    dend_15 { pt3dadd( 2.7409, -32.98, 1.72446, 1.8 ) }
    dend_15 { pt3dadd( 2.56629, -33.6644, 1.73239, 2.04 ) }
    dend_15 { pt3dadd( 2.28003, -34.599, 1.76462, 1.92 ) }
    dend_15 { pt3dadd( 1.97218, -35.4608, 1.79113, 1.56 ) }
    dend_15 { pt3dadd( 1.56685, -36.5161, 1.77117, 1.56 ) }
    dend_15 { pt3dadd( 1.29405, -37.2209, 1.66346, 0.72 ) }
    dend_15 { pt3dadd( 1.10268, -37.7497, 1.56964, 0.48 ) }
    dend_15 { pt3dadd( 0.956661, -38.168, 1.51066, 0.48 ) }
    dend_15 { pt3dadd( 0.619612, -39.1586, 1.41337, 1.32 ) }
    dend_15 { pt3dadd( 0.341023, -39.99, 1.3362, 1.68 ) }
    dend_15 { pt3dadd( -0.174654, -41.537, 1.14402, 1.56 ) }
    dend_15 { pt3dadd( -0.465129, -42.4068, 1.03783, 1.92 ) }
    dend_15 { pt3dadd( -0.885855, -43.6999, 0.888515, 2.64 ) }
    dend_15 { pt3dadd( -1.17742, -44.661, 0.808725, 2.76 ) }
    dend_15 { pt3dadd( -1.39436, -45.5152, 0.780279, 2.76 ) }
    dend_15 { pt3dadd( -1.6303, -46.7257, 0.818217, 1.68 ) }
    dend_15 { pt3dadd( -1.72486, -47.5037, 0.874979, 0.96 ) }
    dend_15 { pt3dadd( -1.7737, -48.5294, 0.939321, 0.96 ) }
    dend_15 { pt3dadd( -1.74503, -49.8521, 1.01009, 1.32 ) }
    dend_15 { pt3dadd( -1.62171, -51.7545, 1.13541, 1.8 ) }
    dend_15 { pt3dadd( -1.54978, -52.5847, 1.20192, 2.16 ) }
    dend_15 { pt3dadd( -1.45982, -53.5377, 1.27133, 2.28 ) }
    dend_15 { pt3dadd( -1.35076, -54.7069, 1.32805, 0.84 ) }
    dend_15 { pt3dadd( -1.29996, -55.4733, 1.34228, 0.84 ) }
    dend_15 { pt3dadd( -1.27037, -56.6073, 1.31417, 1.08 ) }
    dend_15 { pt3dadd( -1.35108, -57.7959, 1.24632, 1.68 ) }
    dend_15 { pt3dadd( -1.52699, -58.7187, 1.18623, 2.52 ) }
    dend_15 { pt3dadd( -1.64544, -59.0973, 1.13967, 3.0 ) }
    dend_15 { pt3dadd( -1.81315, -59.5059, 1.06862, 2.88 ) }
    dend_15 { pt3dadd( -1.92221, -59.7307, 1.02704, 2.88 ) }
    dend_15 { pt3dadd( -2.37975, -60.583, 0.858512, 2.16 ) }
    dend_15 { pt3dadd( -3.12829, -61.901, 0.719323, 0.96 ) }
    dend_15 { pt3dadd( -3.70216, -62.9031, 0.643447, 0.48 ) }
    dend_15 { pt3dadd( -3.90321, -63.2491, 0.618506, 0.48 ) }
    dend_15 { pt3dadd( -4.6084, -64.4496, 0.541427, 1.92 ) }
    dend_15 { pt3dadd( -5.29363, -65.5879, 0.486239, 3.12 ) }
    dend_15 { pt3dadd( -6.0655, -66.886, 0.476741, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 10.7351, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.18924, 12.8133, 0.939202, 1.44 ) }
    dend_0 { pt3dadd( 3.74184, 14.8069, 1.64158, 2.16 ) }
    dend_0 { pt3dadd( 4.36202, 16.9824, 2.35669, 3.25 ) }
    dend_0 { pt3dadd( 4.79846, 18.4544, 2.82281, 3.49 ) }
    dend_0 { pt3dadd( 5.30398, 20.1171, 3.43159, 3.25 ) }
    dend_0 { pt3dadd( 5.65866, 21.2836, 3.85871, 2.88 ) }
    dend_0 { pt3dadd( 5.93175, 22.1689, 4.2269, 2.88 ) }
    dend_0 { pt3dadd( 6.22678, 23.0814, 4.56989, 2.52 ) }
    dend_0 { pt3dadd( 6.787, 24.6919, 5.20056, 2.16 ) }
    dend_0 { pt3dadd( 7.59554, 26.8806, 6.08182, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.781013 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.781013 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.781013 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.63502, -5.2731, -16.2725, 1.56 ) }
    dend_48 { pt3dadd( 3.86005, -2.10303, -17.3799, 1.56 ) }
    dend_48 { pt3dadd( 3.5977, -0.76459, -17.846, 1.2 ) }
    dend_48 { pt3dadd( 3.46392, 0.183807, -18.1829, 0.96 ) }
    dend_48 { pt3dadd( 3.36443, 1.31246, -18.5376, 0.96 ) }
    dend_48 { pt3dadd( 3.27789, 3.30311, -19.1473, 1.32 ) }
    dend_48 { pt3dadd( 3.2651, 5.57148, -19.6952, 1.32 ) }
    dend_48 { pt3dadd( 3.36066, 7.41736, -19.9405, 1.44 ) }
    dend_48 { pt3dadd( 3.54878, 8.9959, -20.0786, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 3.85403, 10.6693, -20.133, 1.44 ) }
    dend_48 { pt3dadd( 4.13839, 11.9864, -20.0879, 1.68 ) }
    dend_48 { pt3dadd( 4.65673, 14.3838, -19.8444, 2.88 ) }
    dend_48 { pt3dadd( 4.84773, 15.4072, -19.6734, 3.73 ) }
    dend_48 { pt3dadd( 5.05117, 17.0363, -19.3727, 3.73 ) }
    dend_48 { pt3dadd( 5.15633, 19.1762, -18.996, 2.88 ) }
    dend_48 { pt3dadd( 5.108, 21.607, -18.6489, 1.68 ) }
    dend_48 { pt3dadd( 5.00984, 22.7449, -18.5126, 1.2 ) }
    dend_48 { pt3dadd( 4.87405, 23.7905, -18.4481, 0.96 ) }
    dend_48 { pt3dadd( 4.63526, 25.1432, -18.3672, 1.68 ) }
    dend_48 { pt3dadd( 4.27552, 26.6469, -18.2839, 2.88 ) }
    dend_48 { pt3dadd( 4.05509, 27.3095, -18.2562, 3.49 ) }
    dend_48 { pt3dadd( 3.7301, 28.0666, -18.2538, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.63502, -5.2731, -16.2725, 1.32 ) }
    dend_27 { pt3dadd( 6.28974, -5.98121, -16.2203, 1.32 ) }
    dend_27 { pt3dadd( 6.95669, -6.25438, -16.2952, 0.84 ) }
    dend_27 { pt3dadd( 7.92643, -6.67351, -16.4899, 1.2 ) }
    dend_27 { pt3dadd( 8.98853, -7.1989, -16.8026, 1.44 ) }
    dend_27 { pt3dadd( 10.0575, -7.8844, -17.2493, 1.32 ) }
    dend_27 { pt3dadd( 10.9074, -8.60668, -17.6936, 1.56 ) }
    dend_27 { pt3dadd( 11.7254, -9.67081, -18.386, 1.2 ) }
    dend_27 { pt3dadd( 11.9553, -10.07, -18.6589, 1.2 ) }
    dend_27 { pt3dadd( 12.2047, -10.7691, -19.1466, 1.2 ) }
    dend_27 { pt3dadd( 12.4034, -11.9828, -19.9571, 2.64 ) }
    dend_27 { pt3dadd( 12.4286, -13.0093, -20.5447, 4.45 ) }
    dend_27 { pt3dadd( 12.4114, -13.8239, -20.8606, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.0655, -66.886, 0.476741, 3.0 ) }
    dend_25 { pt3dadd( -6.77288, -67.626, 0.780982, 3.0 ) }
    dend_25 { pt3dadd( -7.17358, -68.112, 0.959347, 2.76 ) }
    dend_25 { pt3dadd( -7.78197, -68.9747, 1.28898, 1.92 ) }
    dend_25 { pt3dadd( -7.97154, -69.3057, 1.41607, 1.92 ) }
    dend_25 { pt3dadd( -8.32602, -70.0783, 1.69709, 0.6 ) }
    dend_25 { pt3dadd( -8.52528, -70.6179, 1.8691, 0.48 ) }
    dend_25 { pt3dadd( -8.56252, -70.8309, 1.91811, 0.48 ) }
    dend_25 { pt3dadd( -8.60063, -71.3893, 2.01708, 0.48 ) }
    dend_25 { pt3dadd( -8.58144, -72.0674, 2.09346, 0.84 ) }
    dend_25 { pt3dadd( -8.49176, -72.8363, 2.14711, 1.08 ) }
    dend_25 { pt3dadd( -8.33286, -73.5932, 2.20031, 1.32 ) }
    dend_25 { pt3dadd( -8.12114, -74.3376, 2.22741, 0.96 ) }
    dend_25 { pt3dadd( -7.93524, -74.8601, 2.23474, 0.72 ) }
    dend_25 { pt3dadd( -7.71068, -75.4012, 2.226, 0.6 ) }
    dend_25 { pt3dadd( -7.28374, -76.2496, 2.22956, 0.48 ) }
    dend_25 { pt3dadd( -6.81894, -77.0344, 2.20199, 0.48 ) }
    dend_25 { pt3dadd( -6.321, -77.775, 2.15428, 1.44 ) }
    dend_25 { pt3dadd( -5.76878, -78.5377, 2.08228, 1.92 ) }
    dend_25 { pt3dadd( -5.34324, -79.0993, 2.03869, 2.04 ) }
    dend_25 { pt3dadd( -4.78664, -79.8616, 1.99485, 1.44 ) }
    dend_25 { pt3dadd( -4.12657, -80.8151, 1.93159, 0.84 ) }
    dend_25 { pt3dadd( -3.93721, -81.1119, 1.94432, 0.12 ) }
    dend_25 { pt3dadd( -3.70214, -81.5377, 2.02997, 0.12 ) }
    dend_25 { pt3dadd( -3.39445, -82.2479, 2.32333, 1.32 ) }
    dend_25 { pt3dadd( -3.13805, -83.0113, 2.74731, 1.68 ) }
    dend_25 { pt3dadd( -3.03809, -83.3738, 2.96927, 1.8 ) }
    dend_25 { pt3dadd( -2.63138, -84.8709, 3.92426, 1.2 ) }
    dend_25 { pt3dadd( -2.47911, -85.5132, 4.3229, 1.68 ) }
    dend_25 { pt3dadd( -2.20992, -86.5743, 4.97893, 1.2 ) }
    dend_25 { pt3dadd( -2.04663, -87.2485, 5.40601, 0.24 ) }
    dend_25 { pt3dadd( -1.94798, -87.7014, 5.7098, 0.24 ) }
    dend_25 { pt3dadd( -1.80563, -88.5065, 6.23467, 1.92 ) }
    dend_25 { pt3dadd( -1.76425, -89.0532, 6.55339, 1.8 ) }
    dend_25 { pt3dadd( -1.90045, -90.7471, 7.58231, 0.72 ) }
    dend_25 { pt3dadd( -2.10216, -91.6049, 8.11126, 0.72 ) }
    dend_25 { pt3dadd( -2.33214, -92.1722, 8.48069, 0.48 ) }
    dend_25 { pt3dadd( -2.55941, -92.5654, 8.7681, 0.36 ) }
    dend_25 { pt3dadd( -2.98775, -93.1573, 9.20584, 0.36 ) }
    dend_25 { pt3dadd( -3.23993, -93.5282, 9.43468, 0.36 ) }
    dend_25 { pt3dadd( -3.70689, -94.4451, 10.0037, 0.6 ) }
    dend_25 { pt3dadd( -3.78784, -94.7869, 10.2197, 0.6 ) }
    dend_25 { pt3dadd( -3.84026, -95.2199, 10.5736, 0.36 ) }
    dend_25 { pt3dadd( -3.8737, -95.5415, 10.8836, 0.36 ) }
    dend_25 { pt3dadd( -3.89335, -95.9369, 11.2828, 0.36 ) }
    dend_25 { pt3dadd( -3.97506, -97.0738, 12.494, 0.36 ) }
    dend_25 { pt3dadd( -4.0176, -97.295, 12.7442, 0.36 ) }
    dend_25 { pt3dadd( -4.15801, -98.0092, 13.6401, 1.44 ) }
    dend_25 { pt3dadd( -4.20791, -98.2838, 14.0147, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.0655, -66.886, 0.476741, 0.12 ) }
    dend_16 { pt3dadd( -6.40289, -68.6412, 0.235298, 0.12 ) }
    dend_16 { pt3dadd( -6.56919, -69.2712, 0.0662883, 0.12 ) }
    dend_16 { pt3dadd( -6.73784, -69.8535, -0.120905, 0.96 ) }
    dend_16 { pt3dadd( -6.91423, -70.5249, -0.349851, 1.32 ) }
    dend_16 { pt3dadd( -7.03019, -71.0387, -0.534214, 1.32 ) }
    dend_16 { pt3dadd( -7.23627, -72.1603, -0.946465, 0.6 ) }
    dend_16 { pt3dadd( -7.39296, -72.9977, -1.36438, 0.36 ) }
    dend_16 { pt3dadd( -7.4192, -73.2172, -1.49027, 0.36 ) }
    dend_16 { pt3dadd( -7.42044, -73.7545, -1.81506, 0.36 ) }
    dend_16 { pt3dadd( -7.38858, -74.0983, -1.99775, 0.36 ) }
    dend_16 { pt3dadd( -7.3542, -74.4555, -2.15058, 0.36 ) }
    dend_16 { pt3dadd( -7.33698, -75.1232, -2.35336, 0.36 ) }
    dend_16 { pt3dadd( -7.36924, -75.5699, -2.44082, 0.36 ) }
    dend_16 { pt3dadd( -7.46347, -76.2091, -2.62755, 0.36 ) }
    dend_16 { pt3dadd( -7.61648, -76.9378, -2.84463, 1.08 ) }
    dend_16 { pt3dadd( -7.8671, -77.9166, -3.12762, 1.68 ) }
    dend_16 { pt3dadd( -8.07287, -78.6295, -3.32682, 1.8 ) }
    dend_16 { pt3dadd( -8.36081, -79.5552, -3.55599, 1.56 ) }
    dend_16 { pt3dadd( -8.76465, -80.9276, -3.94511, 1.2 ) }
    dend_16 { pt3dadd( -8.92331, -81.5591, -4.1348, 0.36 ) }
    dend_16 { pt3dadd( -8.98382, -81.9021, -4.21871, 0.36 ) }
    dend_16 { pt3dadd( -9.02424, -82.2987, -4.25144, 0.36 ) }
    dend_16 { pt3dadd( -9.06175, -83.251, -4.23305, 1.56 ) }
    dend_16 { pt3dadd( -9.05735, -83.9828, -4.17497, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -9.02323, -84.8933, -4.04082, 1.92 ) }
    dend_16 { pt3dadd( -8.93086, -86.1392, -3.86763, 1.08 ) }
    dend_16 { pt3dadd( -8.81093, -87.1989, -3.68841, 0.36 ) }
    dend_16 { pt3dadd( -8.69696, -88.06, -3.51996, 0.36 ) }
    dend_16 { pt3dadd( -8.60812, -88.6587, -3.32399, 0.36 ) }
    dend_16 { pt3dadd( -8.57686, -88.8929, -3.23124, 0.36 ) }
    dend_16 { pt3dadd( -8.50702, -89.4797, -2.99399, 0.96 ) }
    dend_16 { pt3dadd( -8.4402, -90.1066, -2.72171, 1.8 ) }
    dend_16 { pt3dadd( -8.3794, -90.816, -2.45226, 2.16 ) }
    dend_16 { pt3dadd( -8.25495, -92.8768, -1.70727, 1.92 ) }
    dend_16 { pt3dadd( -8.23005, -93.8867, -1.39795, 1.8 ) }
    dend_16 { pt3dadd( -8.24402, -94.7528, -1.21864, 1.8 ) }
    dend_16 { pt3dadd( -8.319, -95.7864, -1.21631, 1.2 ) }
    dend_16 { pt3dadd( -8.50635, -97.2687, -1.64624, 0.12 ) }
    dend_16 { pt3dadd( -8.54054, -97.4945, -1.75771, 0.12 ) }
    dend_16 { pt3dadd( -8.6447, -98.1111, -2.14673, 0.12 ) }
    dend_16 { pt3dadd( -8.76897, -98.8545, -2.6203, 0.84 ) }
    dend_16 { pt3dadd( -8.95747, -100.089, -3.43039, 1.08 ) }
    dend_16 { pt3dadd( -9.1039, -101.198, -4.13764, 1.92 ) }
    dend_16 { pt3dadd( -9.19415, -102.081, -4.6123, 2.88 ) }
    dend_16 { pt3dadd( -9.24929, -102.64, -4.88494, 2.88 ) }
    dend_16 { pt3dadd( -9.31952, -103.357, -5.21849, 1.92 ) }
    dend_16 { pt3dadd( -9.43311, -104.379, -5.64933, 0.36 ) }
    dend_16 { pt3dadd( -9.49602, -104.863, -5.80797, 0.36 ) }
    dend_16 { pt3dadd( -9.57776, -105.473, -5.95254, 1.08 ) }
    dend_16 { pt3dadd( -9.69313, -106.238, -6.11836, 1.2 ) }
    dend_16 { pt3dadd( -9.86935, -107.384, -6.32115, 0.48 ) }
    dend_16 { pt3dadd( -10.0158, -108.372, -6.47053, 0.48 ) }
    dend_16 { pt3dadd( -10.1502, -109.237, -6.57325, 0.48 ) }
    dend_16 { pt3dadd( -10.366, -110.49, -6.72088, 1.92 ) }
    dend_16 { pt3dadd( -10.5358, -111.345, -6.81406, 2.4 ) }
    dend_16 { pt3dadd( -10.6927, -112.075, -6.87981, 2.64 ) }
    dend_16 { pt3dadd( -10.9212, -113.069, -6.93877, 2.64 ) }
    dend_16 { pt3dadd( -11.1051, -113.779, -6.99613, 2.04 ) }
    dend_16 { pt3dadd( -11.3863, -114.697, -7.08857, 0.72 ) }
    dend_16 { pt3dadd( -11.5386, -115.128, -7.12356, 0.72 ) }
    dend_16 { pt3dadd( -11.7477, -115.74, -7.13032, 0.72 ) }
    dend_16 { pt3dadd( -11.9314, -116.335, -7.12871, 0.72 ) }
    dend_16 { pt3dadd( -12.136, -117.115, -7.10882, 0.24 ) }
    dend_16 { pt3dadd( -12.2766, -117.811, -7.01197, 0.12 ) }
    dend_16 { pt3dadd( -12.3204, -118.198, -6.91949, 0.12 ) }
    dend_16 { pt3dadd( -12.3379, -118.925, -6.69946, 0.12 ) }
    dend_16 { pt3dadd( -12.2658, -119.651, -6.45314, 1.2 ) }
    dend_16 { pt3dadd( -12.143, -120.288, -6.23735, 2.28 ) }
    dend_16 { pt3dadd( -11.6776, -122.124, -5.64827, 1.8 ) }
    dend_16 { pt3dadd( -11.3906, -123.119, -5.36459, 0.36 ) }
    dend_16 { pt3dadd( -11.2514, -123.63, -5.26903, 0.36 ) }
    dend_16 { pt3dadd( -11.0434, -124.672, -5.17911, 0.36 ) }
    dend_16 { pt3dadd( -10.9386, -125.668, -5.19393, 0.36 ) }
    dend_16 { pt3dadd( -10.9184, -126.304, -5.30087, 0.36 ) }
    dend_16 { pt3dadd( -10.9857, -127.286, -5.61902, 0.36 ) }
    dend_16 { pt3dadd( -11.2094, -128.501, -6.05496, 1.56 ) }
    dend_16 { pt3dadd( -11.4462, -129.43, -6.39042, 2.4 ) }
    dend_16 { pt3dadd( -11.6017, -129.945, -6.57209, 2.4 ) }
    dend_16 { pt3dadd( -11.8545, -130.832, -6.862, 2.4 ) }
    dend_16 { pt3dadd( -12.1678, -132.194, -7.24299, 0.48 ) }
    dend_16 { pt3dadd( -12.2626, -132.74, -7.36041, 0.48 ) }
    dend_16 { pt3dadd( -12.3357, -133.604, -7.47558, 0.6 ) }
    dend_16 { pt3dadd( -12.3377, -134.348, -7.55331, 0.36 ) }
    dend_16 { pt3dadd( -12.3005, -135.228, -7.63422, 0.36 ) }
    dend_16 { pt3dadd( -12.2436, -136.072, -7.69221, 0.48 ) }
    dend_16 { pt3dadd( -12.1844, -136.688, -7.75447, 0.36 ) }
    dend_16 { pt3dadd( -12.11, -137.434, -7.87187, 0.36 ) }
    dend_16 { pt3dadd( -12.0634, -138.165, -8.02731, 0.36 ) }
    dend_16 { pt3dadd( -12.0721, -138.634, -8.16449, 0.48 ) }
    dend_16 { pt3dadd( -12.1457, -139.33, -8.43413, 0.48 ) }
    dend_16 { pt3dadd( -12.3012, -140.169, -8.77195, 0.36 ) }
    dend_16 { pt3dadd( -12.432, -140.763, -9.01056, 0.84 ) }
    dend_16 { pt3dadd( -12.6615, -141.727, -9.3493, 1.32 ) }
    dend_16 { pt3dadd( -12.9775, -142.986, -9.72765, 2.16 ) }
    dend_16 { pt3dadd( -13.2408, -143.944, -9.98402, 2.64 ) }
    dend_16 { pt3dadd( -13.5277, -144.931, -10.2148, 2.28 ) }
    dend_16 { pt3dadd( -13.8622, -146.037, -10.3899, 1.8 ) }
    dend_16 { pt3dadd( -14.1915, -147.179, -10.522, 1.2 ) }
    dend_16 { pt3dadd( -14.3528, -147.835, -10.5003, 0.48 ) }
    dend_16 { pt3dadd( -14.5586, -148.927, -10.3451, 0.36 ) }
    dend_16 { pt3dadd( -14.6684, -149.672, -10.1815, 0.36 ) }
    dend_16 { pt3dadd( -14.744, -150.432, -9.97594, 1.08 ) }
    dend_16 { pt3dadd( -14.769, -151.195, -9.71966, 1.08 ) }
    dend_16 { pt3dadd( -14.6742, -153.369, -8.95653, 1.44 ) }
    dend_16 { pt3dadd( -14.5487, -154.595, -8.53569, 1.44 ) }
    dend_16 { pt3dadd( -14.4269, -155.445, -8.21402, 1.32 ) }
    dend_16 { pt3dadd( -14.309, -156.272, -7.93542, 0.48 ) }
    dend_16 { pt3dadd( -14.2215, -156.955, -7.76673, 0.48 ) }
    dend_16 { pt3dadd( -14.1835, -157.372, -7.68488, 1.08 ) }
    dend_16 { pt3dadd( -14.1395, -158.156, -7.59296, 1.68 ) }
    dend_16 { pt3dadd( -14.118, -159.44, -7.39126, 2.28 ) }
    dend_16 { pt3dadd( -14.1583, -160.317, -7.27533, 2.4 ) }
    dend_16 { pt3dadd( -14.2814, -161.442, -7.18795, 1.32 ) }
    dend_16 { pt3dadd( -14.4181, -162.202, -7.1523, 0.6 ) }
    dend_16 { pt3dadd( -14.5422, -162.697, -7.18776, 0.48 ) }
    dend_16 { pt3dadd( -14.8193, -163.477, -7.3889, 0.48 ) }
    dend_16 { pt3dadd( -15.1143, -164.17, -7.67803, 0.48 ) }
    dend_16 { pt3dadd( -15.4545, -164.938, -8.15855, 1.08 ) }
    dend_16 { pt3dadd( -15.7103, -165.598, -8.62366, 1.92 ) }
    dend_16 { pt3dadd( -16.1867, -167.003, -9.73064, 1.92 ) }
    dend_16 { pt3dadd( -16.5239, -168.157, -10.6821, 2.28 ) }
    dend_16 { pt3dadd( -16.7126, -168.92, -11.3188, 2.76 ) }
    dend_16 { pt3dadd( -17.105, -170.774, -12.8042, 2.76 ) }
    dend_16 { pt3dadd( -17.3642, -172.207, -13.8435, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -17.5238, -173.312, -14.5427, 0.72 ) }
    dend_16 { pt3dadd( -17.6239, -174.172, -14.9711, 0.96 ) }
    dend_16 { pt3dadd( -17.7122, -174.889, -15.253, 1.56 ) }
    dend_16 { pt3dadd( -17.8531, -175.753, -15.5102, 1.8 ) }
    dend_16 { pt3dadd( -17.9957, -176.523, -15.6272, 1.44 ) }
    dend_16 { pt3dadd( -18.1306, -177.417, -15.7347, 0.48 ) }
    dend_16 { pt3dadd( -18.1489, -177.773, -15.7652, 0.6 ) }
    dend_16 { pt3dadd( -18.1287, -178.723, -15.845, 0.6 ) }
    dend_16 { pt3dadd( -18.1011, -179.168, -15.8721, 0.48 ) }
    dend_16 { pt3dadd( -18.0287, -180.196, -15.9165, 0.48 ) }
    dend_16 { pt3dadd( -17.9885, -180.998, -15.9386, 0.48 ) }
    dend_16 { pt3dadd( -17.9718, -181.988, -15.9184, 0.48 ) }
    dend_16 { pt3dadd( -17.9983, -182.97, -15.8973, 0.84 ) }
    dend_16 { pt3dadd( -18.0993, -184.242, -15.8632, 1.68 ) }
    dend_16 { pt3dadd( -18.2786, -185.623, -15.8175, 2.4 ) }
    dend_16 { pt3dadd( -18.4183, -186.523, -15.7827, 2.4 ) }
    dend_16 { pt3dadd( -18.6092, -187.777, -15.7472, 0.6 ) }
    dend_16 { pt3dadd( -18.7054, -188.648, -15.7295, 0.6 ) }
    dend_16 { pt3dadd( -18.737, -189.782, -15.7564, 0.6 ) }
    dend_16 { pt3dadd( -18.6603, -190.786, -15.8151, 0.6 ) }
    dend_16 { pt3dadd( -18.5088, -191.613, -15.8629, 1.08 ) }
    dend_16 { pt3dadd( -18.2972, -192.425, -15.9025, 1.44 ) }
    dend_16 { pt3dadd( -18.0735, -193.144, -15.9314, 0.84 ) }
    dend_16 { pt3dadd( -17.8161, -193.944, -15.9261, 0.96 ) }
    dend_16 { pt3dadd( -17.5532, -194.862, -15.8985, 0.96 ) }
    dend_16 { pt3dadd( -17.407, -195.543, -15.8685, 0.72 ) }
    dend_16 { pt3dadd( -17.3369, -196.054, -15.8429, 0.48 ) }
    dend_16 { pt3dadd( -17.3034, -196.514, -15.8154, 0.48 ) }
    dend_16 { pt3dadd( -17.3057, -197.151, -15.7614, 1.32 ) }
    dend_16 { pt3dadd( -17.3867, -198.198, -15.6489, 1.8 ) }
    dend_16 { pt3dadd( -17.4891, -198.961, -15.6073, 2.04 ) }
    dend_16 { pt3dadd( -17.6692, -199.989, -15.6049, 1.92 ) }
    dend_16 { pt3dadd( -17.8196, -200.755, -15.6313, 1.44 ) }
    dend_16 { pt3dadd( -18.0193, -201.707, -15.714, 0.48 ) }
    dend_16 { pt3dadd( -18.2017, -202.517, -15.8452, 0.48 ) }
    dend_16 { pt3dadd( -18.4947, -203.819, -16.1352, 1.44 ) }
    dend_16 { pt3dadd( -18.7436, -204.952, -16.4117, 2.52 ) }
    dend_16 { pt3dadd( -18.9458, -205.935, -16.6623, 3.25 ) }
    dend_16 { pt3dadd( -19.1927, -207.342, -17.0358, 2.28 ) }
    dend_16 { pt3dadd( -19.3133, -208.319, -17.288, 1.8 ) }
    dend_16 { pt3dadd( -19.3783, -209.422, -17.5466, 0.96 ) }
    dend_16 { pt3dadd( -19.3966, -210.906, -17.8423, 0.96 ) }
    dend_16 { pt3dadd( -19.3726, -212.02, -18.0636, 0.96 ) }
    dend_16 { pt3dadd( -19.3153, -213.45, -18.3307, 2.52 ) }
    dend_16 { pt3dadd( -19.2544, -214.509, -18.4761, 2.52 ) }
    dend_16 { pt3dadd( -19.1294, -216.28, -18.6429, 1.44 ) }
    dend_16 { pt3dadd( -19.0592, -217.152, -18.7034, 0.96 ) }
    dend_16 { pt3dadd( -18.9692, -218.168, -18.7731, 0.72 ) }
    dend_16 { pt3dadd( -18.9289, -218.687, -18.8028, 0.72 ) }
    dend_16 { pt3dadd( -18.8867, -219.691, -18.8902, 0.72 ) }
    dend_16 { pt3dadd( -18.9035, -220.442, -18.9941, 0.72 ) }
    dend_16 { pt3dadd( -18.9558, -221.287, -19.2192, 1.08 ) }
    dend_16 { pt3dadd( -18.9927, -222.114, -19.6257, 1.44 ) }
    dend_16 { pt3dadd( -18.9944, -222.417, -19.8205, 1.44 ) }
    dend_16 { pt3dadd( -18.9845, -223.669, -20.7809, 0.36 ) }
    dend_16 { pt3dadd( -18.9584, -224.729, -21.6866, 0.36 ) }
    dend_16 { pt3dadd( -18.8957, -225.979, -22.767, 1.32 ) }
    dend_16 { pt3dadd( -18.7754, -227.417, -23.9626, 0.48 ) }
    dend_16 { pt3dadd( -18.7075, -228.009, -24.4168, 0.48 ) }
    dend_16 { pt3dadd( -18.5343, -229.238, -25.2801, 1.92 ) }
    dend_16 { pt3dadd( -18.4753, -229.619, -25.5119, 2.76 ) }
    dend_16 { pt3dadd( -18.348, -230.519, -25.967, 2.4 ) }
    dend_16 { pt3dadd( -18.2729, -231.374, -26.2239, 1.32 ) }
    dend_16 { pt3dadd( -18.2774, -231.867, -26.3811, 0.12 ) }
    dend_16 { pt3dadd( -18.334, -232.345, -26.5866, 0.12 ) }
    dend_16 { pt3dadd( -18.3942, -232.583, -26.7108, 0.12 ) }
    dend_16 { pt3dadd( -18.6313, -233.307, -27.1728, 1.08 ) }
    dend_16 { pt3dadd( -18.7995, -233.8, -27.5421, 1.08 ) }
    dend_16 { pt3dadd( -19.4449, -235.883, -29.3665, 0.24 ) }
    dend_16 { pt3dadd( -19.4992, -236.177, -29.6388, 0.24 ) }
    dend_16 { pt3dadd( -19.5131, -236.732, -30.1363, 0.24 ) }
    dend_16 { pt3dadd( -19.3834, -237.398, -30.6505, 0.24 ) }
    dend_16 { pt3dadd( -19.0775, -238.124, -31.1055, 0.24 ) }
    dend_16 { pt3dadd( -18.591, -239.046, -31.6418, 1.08 ) }
    dend_16 { pt3dadd( -18.1221, -239.854, -32.0169, 2.04 ) }
    dend_16 { pt3dadd( -17.7189, -240.604, -32.3745, 2.04 ) }
    dend_16 { pt3dadd( -17.2598, -241.535, -32.8217, 1.44 ) }
    dend_16 { pt3dadd( -17.0866, -242.005, -33.022, 0.96 ) }
    dend_16 { pt3dadd( -16.6433, -243.767, -33.6423, 0.72 ) }
    dend_16 { pt3dadd( -16.5217, -244.493, -33.8323, 0.36 ) }
    dend_16 { pt3dadd( -16.4782, -245.356, -34.0285, 0.36 ) }
    dend_16 { pt3dadd( -16.4934, -245.742, -34.083, 0.36 ) }
    dend_16 { pt3dadd( -16.5878, -246.686, -34.1055, 1.32 ) }
    dend_16 { pt3dadd( -16.6761, -247.479, -34.0463, 2.04 ) }
    dend_16 { pt3dadd( -16.7162, -247.863, -33.9853, 2.4 ) }
    dend_16 { pt3dadd( -16.7814, -248.417, -33.8919, 2.4 ) }
    dend_16 { pt3dadd( -16.9516, -249.871, -33.6469, 0.48 ) }
    dend_16 { pt3dadd( -17.0388, -250.616, -33.5285, 0.36 ) }
    dend_16 { pt3dadd( -17.1874, -251.968, -33.3617, 0.36 ) }
    dend_16 { pt3dadd( -17.2664, -252.729, -33.2771, 0.36 ) }
    dend_16 { pt3dadd( -17.3537, -253.565, -33.1971, 1.68 ) }
    dend_16 { pt3dadd( -17.3994, -254.188, -33.1521, 2.16 ) }
    dend_16 { pt3dadd( -17.4109, -254.587, -33.1384, 2.16 ) }
    dend_16 { pt3dadd( -17.3921, -255.637, -33.102, 0.96 ) }
    dend_16 { pt3dadd( -17.3532, -256.262, -33.1107, 0.36 ) }
    dend_16 { pt3dadd( -17.3219, -256.637, -33.1594, 0.36 ) }
    dend_16 { pt3dadd( -17.2315, -257.561, -33.396, 0.36 ) }
    dend_16 { pt3dadd( -17.1487, -258.464, -33.6976, 0.36 ) }
    dend_16 { pt3dadd( -17.0907, -259.096, -33.9172, 0.36 ) }
    dend_16 { pt3dadd( -17.0146, -260.096, -34.2609, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -16.9653, -261.473, -34.6937, 2.4 ) }
    dend_16 { pt3dadd( -16.9649, -262.191, -34.881, 2.52 ) }
    dend_16 { pt3dadd( -16.983, -262.534, -34.95, 2.52 ) }
    dend_16 { pt3dadd( -17.1007, -263.77, -35.1073, 0.48 ) }
    dend_16 { pt3dadd( -17.1792, -264.538, -35.1621, 0.36 ) }
    dend_16 { pt3dadd( -17.3251, -265.905, -35.1004, 0.36 ) }
    dend_16 { pt3dadd( -17.3876, -266.521, -35.0051, 1.32 ) }
    dend_16 { pt3dadd( -17.4718, -267.292, -34.854, 1.92 ) }
    dend_16 { pt3dadd( -17.5412, -267.95, -34.7336, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.59554, 26.8806, 6.08182, 1.92 ) }
    dend_2 { pt3dadd( 7.85166, 29.5943, 5.85957, 1.92 ) }
    dend_2 { pt3dadd( 7.94342, 30.9081, 5.76145, 2.28 ) }
    dend_2 { pt3dadd( 8.00668, 32.1182, 5.71206, 1.8 ) }
    dend_2 { pt3dadd( 8.07972, 33.5375, 5.67932, 1.8 ) }
    dend_2 { pt3dadd( 8.19033, 35.4673, 5.65547, 1.68 ) }
    dend_2 { pt3dadd( 8.33954, 37.7159, 5.64385, 2.4 ) }
    dend_2 { pt3dadd( 8.43217, 39.439, 5.75334, 2.88 ) }
    dend_2 { pt3dadd( 8.4962, 40.3487, 5.8007, 2.76 ) }
    dend_2 { pt3dadd( 8.57006, 41.1802, 5.86551, 2.76 ) }
    dend_2 { pt3dadd( 8.63991, 41.8107, 5.95684, 2.76 ) }
    dend_2 { pt3dadd( 8.75004, 42.5264, 6.10592, 2.52 ) }
    dend_2 { pt3dadd( 9.07074, 44.0457, 6.49402, 1.68 ) }
    dend_2 { pt3dadd( 9.27676, 44.9294, 6.73785, 1.44 ) }
    dend_2 { pt3dadd( 9.52065, 45.9303, 7.0088, 1.68 ) }
    dend_2 { pt3dadd( 9.95902, 47.7558, 7.54193, 2.64 ) }
    dend_2 { pt3dadd( 10.2257, 48.8694, 7.88726, 2.88 ) }
    dend_2 { pt3dadd( 10.3835, 49.5004, 8.09435, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.59554, 26.8806, 6.08182, 0.84 ) }
    dend_1 { pt3dadd( 7.09521, 26.7091, 6.22626, 0.84 ) }
    dend_1 { pt3dadd( 6.29562, 26.603, 6.44954, 0.84 ) }
    dend_1 { pt3dadd( 5.74768, 26.6702, 6.67374, 0.84 ) }
    dend_1 { pt3dadd( 5.58829, 26.7328, 6.77338, 0.84 ) }
    dend_1 { pt3dadd( 5.21898, 27.0172, 7.07939, 0.72 ) }
    dend_1 { pt3dadd( 4.96906, 27.3616, 7.48906, 0.72 ) }
    dend_1 { pt3dadd( 4.88226, 27.6021, 7.80428, 0.72 ) }
    dend_1 { pt3dadd( 4.89112, 28.0568, 8.3981, 0.96 ) }
    dend_1 { pt3dadd( 5.01196, 28.4, 8.87542, 1.44 ) }
    dend_1 { pt3dadd( 5.2292, 28.7612, 9.37553, 1.56 ) }
    dend_1 { pt3dadd( 5.75929, 29.3846, 10.2761, 1.32 ) }
    dend_1 { pt3dadd( 6.16152, 29.7592, 10.8472, 0.48 ) }
    dend_1 { pt3dadd( 6.52819, 30.0447, 11.2732, 0.6 ) }
    dend_1 { pt3dadd( 7.28136, 30.5233, 11.9819, 0.6 ) }
    dend_1 { pt3dadd( 7.7546, 30.7634, 12.3142, 1.68 ) }
    dend_1 { pt3dadd( 8.62049, 31.0718, 12.644, 1.92 ) }
    dend_1 { pt3dadd( 9.28817, 31.2267, 12.5446, 1.56 ) }
    dend_1 { pt3dadd( 11.2133, 31.3109, 11.0339, 0.48 ) }
    dend_1 { pt3dadd( 11.5785, 31.2768, 10.5391, 0.48 ) }
    dend_1 { pt3dadd( 11.8593, 31.2342, 10.0858, 0.84 ) }
    dend_1 { pt3dadd( 12.0058, 31.1883, 9.76238, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.461138 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.461138 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.461138 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 3.7301, 28.0666, -18.2538, 0.96 ) }
    dend_54 { pt3dadd( 5.23575, 29.8276, -18.9896, 0.96 ) }
    dend_54 { pt3dadd( 6.03832, 30.8743, -19.3143, 0.6 ) }
    dend_54 { pt3dadd( 6.74584, 31.9206, -19.5727, 0.6 ) }
    dend_54 { pt3dadd( 7.09268, 32.5053, -19.692, 1.32 ) }
    dend_54 { pt3dadd( 7.37114, 33.044, -19.7614, 1.56 ) }
    dend_54 { pt3dadd( 7.83756, 34.1135, -19.8294, 0.96 ) }
    dend_54 { pt3dadd( 8.23749, 35.4692, -19.6996, 0.6 ) }
    dend_54 { pt3dadd( 8.37196, 36.1248, -19.6022, 0.48 ) }
    dend_54 { pt3dadd( 8.46349, 36.7025, -19.5106, 0.48 ) }
    dend_54 { pt3dadd( 8.64407, 37.8815, -19.3333, 0.72 ) }
    dend_54 { pt3dadd( 8.87534, 39.2979, -19.1672, 1.8 ) }
    dend_54 { pt3dadd( 9.12755, 40.5823, -19.0665, 2.04 ) }
    dend_54 { pt3dadd( 9.38751, 41.6116, -19.025, 2.64 ) }
    dend_54 { pt3dadd( 9.73586, 42.7502, -19.0614, 3.25 ) }
    dend_54 { pt3dadd( 10.09, 43.7693, -19.1586, 3.25 ) }
    dend_54 { pt3dadd( 10.4843, 44.7896, -19.3215, 2.88 ) }
    dend_54 { pt3dadd( 11.0511, 46.1265, -19.5682, 0.84 ) }
    dend_54 { pt3dadd( 11.289, 46.6688, -19.6679, 0.6 ) }
    dend_54 { pt3dadd( 11.8817, 48.0627, -19.9009, 2.4 ) }
    dend_54 { pt3dadd( 12.279, 49.0499, -20.0416, 3.25 ) }
    dend_54 { pt3dadd( 12.6412, 49.9901, -20.141, 2.88 ) }
    dend_54 { pt3dadd( 13.2309, 51.5497, -20.2545, 0.96 ) }
    dend_54 { pt3dadd( 13.8575, 53.2082, -20.3831, 0.84 ) }
    dend_54 { pt3dadd( 14.2443, 54.2296, -20.4703, 0.48 ) }
    dend_54 { pt3dadd( 14.5123, 54.9243, -20.5266, 0.48 ) }
    dend_54 { pt3dadd( 15.0249, 56.2691, -20.6562, 0.48 ) }
    dend_54 { pt3dadd( 15.4202, 57.3258, -20.7798, 1.92 ) }
    dend_54 { pt3dadd( 15.9067, 58.5826, -20.9741, 3.37 ) }
    dend_54 { pt3dadd( 16.2543, 59.3985, -21.1413, 3.49 ) }
    dend_54 { pt3dadd( 16.7213, 60.3589, -21.3821, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 3.7301, 28.0666, -18.2538, 0.84 ) }
    dend_49 { pt3dadd( 2.27579, 29.4077, -18.3024, 0.84 ) }
    dend_49 { pt3dadd( 1.95311, 29.8576, -18.4043, 0.72 ) }
    dend_49 { pt3dadd( 1.76487, 30.2467, -18.5253, 0.72 ) }
    dend_49 { pt3dadd( 1.63307, 30.7412, -18.7519, 0.72 ) }
    dend_49 { pt3dadd( 1.46407, 31.6426, -19.3518, 0.84 ) }
    dend_49 { pt3dadd( 1.26628, 32.7387, -20.1759, 0.72 ) }
    dend_49 { pt3dadd( 1.21808, 33.502, -20.8294, 0.48 ) }
    dend_49 { pt3dadd( 1.18956, 34.2172, -21.4654, 0.48 ) }
    dend_49 { pt3dadd( 1.13879, 35.4653, -22.587, 0.72 ) }
    dend_49 { pt3dadd( 1.03286, 36.7759, -23.7553, 0.48 ) }
    dend_49 { pt3dadd( 0.972426, 37.11, -24.0714, 0.48 ) }
    dend_49 { pt3dadd( 0.887417, 37.4021, -24.328, 0.48 ) }
    dend_49 { pt3dadd( 0.681856, 37.936, -24.7666, 1.32 ) }
    dend_49 { pt3dadd( 0.434251, 38.4655, -25.1869, 2.04 ) }
    dend_49 { pt3dadd( 0.0595941, 39.1944, -25.7045, 1.56 ) }
    dend_49 { pt3dadd( -0.704653, 40.7727, -26.765, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -0.880633, 41.1472, -27.0369, 0.36 ) }
    dend_49 { pt3dadd( -1.5509, 42.5672, -28.1687, 2.4 ) }
    dend_49 { pt3dadd( -1.83141, 43.163, -28.7001, 3.25 ) }
    dend_49 { pt3dadd( -2.0073, 43.5414, -29.0713, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.4114, -13.8239, -20.8606, 0.24 ) }
    dend_41 { pt3dadd( 12.2652, -15.3171, -20.9416, 0.24 ) }
    dend_41 { pt3dadd( 12.238, -15.8442, -20.9954, 0.24 ) }
    dend_41 { pt3dadd( 12.2435, -16.8252, -21.0973, 1.92 ) }
    dend_41 { pt3dadd( 12.2453, -17.6032, -21.1613, 2.52 ) }
    dend_41 { pt3dadd( 12.2336, -18.2336, -21.199, 2.4 ) }
    dend_41 { pt3dadd( 12.2114, -18.884, -21.2287, 1.8 ) }
    dend_41 { pt3dadd( 12.2, -19.7286, -21.2627, 0.24 ) }
    dend_41 { pt3dadd( 12.173, -20.725, -21.2611, 0.24 ) }
    dend_41 { pt3dadd( 12.1367, -21.7147, -21.2106, 0.24 ) }
    dend_41 { pt3dadd( 12.1026, -22.3959, -21.1478, 0.24 ) }
    dend_41 { pt3dadd( 12.0564, -23.0264, -21.0933, 1.68 ) }
    dend_41 { pt3dadd( 11.9598, -24.0298, -21.0001, 1.92 ) }
    dend_41 { pt3dadd( 11.8257, -25.1489, -20.9014, 2.28 ) }
    dend_41 { pt3dadd( 11.6998, -26.0263, -20.8369, 3.12 ) }
    dend_41 { pt3dadd( 11.5563, -26.927, -20.7786, 3.12 ) }
    dend_41 { pt3dadd( 11.2627, -28.5358, -20.651, 0.24 ) }
    dend_41 { pt3dadd( 11.1277, -29.1537, -20.5871, 0.24 ) }
    dend_41 { pt3dadd( 11.0912, -29.2895, -20.5698, 0.48 ) }
    dend_41 { pt3dadd( 10.916, -29.8217, -20.4796, 0.48 ) }
    dend_41 { pt3dadd( 10.6435, -30.5326, -20.3145, 0.48 ) }
    dend_41 { pt3dadd( 10.4702, -31.0072, -20.1642, 0.48 ) }
    dend_41 { pt3dadd( 10.4066, -31.243, -20.0572, 0.12 ) }
    dend_41 { pt3dadd( 10.3561, -31.7314, -19.8546, 0.12 ) }
    dend_41 { pt3dadd( 10.3545, -31.9952, -19.7531, 0.12 ) }
    dend_41 { pt3dadd( 10.3869, -32.3759, -19.6234, 0.72 ) }
    dend_41 { pt3dadd( 10.4921, -33.1336, -19.4039, 0.96 ) }
    dend_41 { pt3dadd( 10.5603, -33.6161, -19.2989, 0.24 ) }
    dend_41 { pt3dadd( 10.6876, -34.5731, -19.1289, 0.24 ) }
    dend_41 { pt3dadd( 10.7452, -34.9878, -19.0444, 0.96 ) }
    dend_41 { pt3dadd( 10.8091, -35.4659, -18.9394, 1.44 ) }
    dend_41 { pt3dadd( 10.874, -36.0538, -18.8052, 1.56 ) }
    dend_41 { pt3dadd( 10.9345, -36.8619, -18.6183, 0.48 ) }
    dend_41 { pt3dadd( 10.9638, -37.3898, -18.4987, 0.24 ) }
    dend_41 { pt3dadd( 11.015, -38.3611, -18.2728, 1.68 ) }
    dend_41 { pt3dadd( 11.0689, -39.0429, -18.1321, 2.88 ) }
    dend_41 { pt3dadd( 11.1767, -40.0231, -17.9201, 2.88 ) }
    dend_41 { pt3dadd( 11.3655, -41.303, -17.6422, 0.24 ) }
    dend_41 { pt3dadd( 11.5673, -42.3582, -17.4074, 0.24 ) }
    dend_41 { pt3dadd( 11.6564, -42.7509, -17.3252, 0.24 ) }
    dend_41 { pt3dadd( 11.9661, -43.962, -17.1126, 0.24 ) }
    dend_41 { pt3dadd( 12.19, -44.7258, -16.9833, 1.8 ) }
    dend_41 { pt3dadd( 12.4705, -45.5542, -16.8406, 2.76 ) }
    dend_41 { pt3dadd( 12.8926, -46.6767, -16.6463, 0.48 ) }
    dend_41 { pt3dadd( 13.1303, -47.3142, -16.5337, 0.48 ) }
    dend_41 { pt3dadd( 13.2977, -47.8184, -16.4427, 0.6 ) }
    dend_41 { pt3dadd( 13.4619, -48.3834, -16.3204, 0.6 ) }
    dend_41 { pt3dadd( 13.5683, -48.8278, -16.233, 0.36 ) }
    dend_41 { pt3dadd( 13.6644, -49.3069, -16.1348, 0.36 ) }
    dend_41 { pt3dadd( 13.7566, -50.1073, -16.0188, 0.48 ) }
    dend_41 { pt3dadd( 13.8287, -51.1838, -15.8981, 0.48 ) }
    dend_41 { pt3dadd( 13.8477, -51.9166, -15.8316, 1.44 ) }
    dend_41 { pt3dadd( 13.8505, -52.8573, -15.8029, 2.76 ) }
    dend_41 { pt3dadd( 13.8599, -53.6472, -15.8234, 3.0 ) }
    dend_41 { pt3dadd( 13.8977, -55.3052, -16.0125, 0.12 ) }
    dend_41 { pt3dadd( 13.9112, -55.7967, -16.1023, 0.12 ) }
    dend_41 { pt3dadd( 13.9274, -56.4977, -16.2668, 0.12 ) }
    dend_41 { pt3dadd( 13.9508, -57.3038, -16.481, 1.32 ) }
    dend_41 { pt3dadd( 13.9816, -58.0773, -16.6809, 2.4 ) }
    dend_41 { pt3dadd( 14.0266, -59.6117, -17.0293, 0.12 ) }
    dend_41 { pt3dadd( 14.0445, -60.3547, -17.1527, 0.12 ) }
    dend_41 { pt3dadd( 14.0371, -60.7982, -17.2077, 0.84 ) }
    dend_41 { pt3dadd( 14.0108, -61.2875, -17.2437, 0.96 ) }
    dend_41 { pt3dadd( 13.9288, -62.4309, -17.2477, 0.12 ) }
    dend_41 { pt3dadd( 13.863, -63.2803, -17.2169, 0.12 ) }
    dend_41 { pt3dadd( 13.8309, -63.9394, -17.1595, 1.32 ) }
    dend_41 { pt3dadd( 13.8185, -64.5602, -17.1052, 1.8 ) }
    dend_41 { pt3dadd( 13.8249, -65.3911, -17.0235, 0.12 ) }
    dend_41 { pt3dadd( 13.845, -66.4772, -16.8973, 0.12 ) }
    dend_41 { pt3dadd( 13.8698, -67.0615, -16.8188, 1.56 ) }
    dend_41 { pt3dadd( 13.9311, -67.7494, -16.7261, 2.52 ) }
    dend_41 { pt3dadd( 14.0045, -68.3456, -16.6433, 2.64 ) }
    dend_41 { pt3dadd( 14.1983, -69.6137, -16.4599, 1.32 ) }
    dend_41 { pt3dadd( 14.2886, -70.1846, -16.3701, 0.12 ) }
    dend_41 { pt3dadd( 14.3041, -70.2901, -16.3533, 0.24 ) }
    dend_41 { pt3dadd( 14.4009, -71.0356, -16.2475, 0.24 ) }
    dend_41 { pt3dadd( 14.509, -71.911, -16.1377, 0.24 ) }
    dend_41 { pt3dadd( 14.5714, -72.5054, -16.1108, 0.24 ) }
    dend_41 { pt3dadd( 14.6104, -72.9208, -16.12, 0.24 ) }
    dend_41 { pt3dadd( 14.6449, -73.3301, -16.1438, 1.56 ) }
    dend_41 { pt3dadd( 14.6837, -73.9755, -16.1901, 2.28 ) }
    dend_41 { pt3dadd( 14.7043, -74.574, -16.2513, 2.28 ) }
    dend_41 { pt3dadd( 14.7453, -75.9266, -16.4206, 0.48 ) }
    dend_41 { pt3dadd( 14.7642, -76.7109, -16.5206, 0.48 ) }
    dend_41 { pt3dadd( 14.7666, -76.8101, -16.5318, 0.72 ) }
    dend_41 { pt3dadd( 14.7742, -77.5052, -16.5939, 0.96 ) }
    dend_41 { pt3dadd( 14.774, -78.0869, -16.6179, 0.48 ) }
    dend_41 { pt3dadd( 14.7602, -78.3944, -16.6281, 0.48 ) }
    dend_41 { pt3dadd( 14.7305, -78.8924, -16.6075, 0.48 ) }
    dend_41 { pt3dadd( 14.6856, -79.5523, -16.5695, 0.6 ) }
    dend_41 { pt3dadd( 14.6734, -79.7746, -16.553, 0.24 ) }
    dend_41 { pt3dadd( 14.6556, -80.4696, -16.4963, 0.24 ) }
    dend_41 { pt3dadd( 14.676, -81.4708, -16.4006, 1.56 ) }
    dend_41 { pt3dadd( 14.7168, -82.2717, -16.3275, 2.4 ) }
    dend_41 { pt3dadd( 14.7713, -82.9847, -16.2635, 2.52 ) }
    dend_41 { pt3dadd( 14.8087, -83.38, -16.2264, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( 14.9448, -84.66, -16.0742, 0.24 ) }
    dend_41 { pt3dadd( 15.161, -86.2108, -15.8531, 0.24 ) }
    dend_41 { pt3dadd( 15.2316, -86.6146, -15.788, 0.96 ) }
    dend_41 { pt3dadd( 15.3475, -87.1949, -15.702, 1.44 ) }
    dend_41 { pt3dadd( 15.4404, -87.5823, -15.6418, 1.68 ) }
    dend_41 { pt3dadd( 15.6667, -88.416, -15.5248, 0.24 ) }
    dend_41 { pt3dadd( 16.124, -89.8421, -15.3439, 0.24 ) }
    dend_41 { pt3dadd( 16.3943, -90.5886, -15.2672, 1.56 ) }
    dend_41 { pt3dadd( 16.571, -91.0553, -15.2317, 2.16 ) }
    dend_41 { pt3dadd( 16.7644, -91.5592, -15.2095, 1.8 ) }
    dend_41 { pt3dadd( 17.063, -92.4356, -15.1981, 0.12 ) }
    dend_41 { pt3dadd( 17.2025, -92.946, -15.2119, 0.12 ) }
    dend_41 { pt3dadd( 17.217, -93.0446, -15.2135, 0.6 ) }
    dend_41 { pt3dadd( 17.2377, -93.4638, -15.2075, 0.12 ) }
    dend_41 { pt3dadd( 17.2306, -93.7789, -15.1917, 0.12 ) }
    dend_41 { pt3dadd( 17.1811, -94.5489, -15.1225, 0.12 ) }
    dend_41 { pt3dadd( 17.1612, -94.9048, -15.0727, 0.6 ) }
    dend_41 { pt3dadd( 17.1571, -95.4896, -14.9305, 0.6 ) }
    dend_41 { pt3dadd( 17.1751, -95.8731, -14.8065, 0.12 ) }
    dend_41 { pt3dadd( 17.2126, -96.3304, -14.6319, 0.12 ) }
    dend_41 { pt3dadd( 17.2415, -96.7108, -14.4767, 0.6 ) }
    dend_41 { pt3dadd( 17.2979, -97.2604, -14.2445, 0.6 ) }
    dend_41 { pt3dadd( 17.4216, -98.3024, -13.8049, 0.12 ) }
    dend_41 { pt3dadd( 17.5134, -98.9934, -13.5205, 0.12 ) }
    dend_41 { pt3dadd( 17.6127, -99.6886, -13.2507, 1.44 ) }
    dend_41 { pt3dadd( 17.7209, -100.411, -12.9969, 2.4 ) }
    dend_41 { pt3dadd( 17.774, -100.752, -12.8935, 2.52 ) }
    dend_41 { pt3dadd( 17.8613, -101.304, -12.7625, 2.16 ) }
    dend_41 { pt3dadd( 18.0122, -101.98, -12.6691, 0.12 ) }
    dend_41 { pt3dadd( 18.1885, -102.542, -12.5666, 0.36 ) }
    dend_41 { pt3dadd( 18.3249, -102.899, -12.4868, 0.12 ) }
    dend_41 { pt3dadd( 18.4379, -103.167, -12.4161, 0.12 ) }
    dend_41 { pt3dadd( 18.6082, -103.558, -12.3123, 0.12 ) }
    dend_41 { pt3dadd( 18.9204, -104.248, -12.1287, 0.12 ) }
    dend_41 { pt3dadd( 19.2949, -105.041, -11.9288, 0.12 ) }
    dend_41 { pt3dadd( 19.3706, -105.222, -11.8895, 0.12 ) }
    dend_41 { pt3dadd( 19.5561, -105.784, -11.7856, 0.12 ) }
    dend_41 { pt3dadd( 19.7191, -106.457, -11.7087, 1.8 ) }
    dend_41 { pt3dadd( 19.7745, -106.75, -11.6923, 2.28 ) }
    dend_41 { pt3dadd( 19.8588, -107.339, -11.6356, 1.92 ) }
    dend_41 { pt3dadd( 20.0038, -108.299, -11.4935, 0.36 ) }
    dend_41 { pt3dadd( 20.1135, -109.029, -11.3502, 0.36 ) }
    dend_41 { pt3dadd( 20.2235, -109.697, -11.1942, 1.2 ) }
    dend_41 { pt3dadd( 20.3505, -110.272, -10.9923, 0.72 ) }
    dend_41 { pt3dadd( 20.6892, -111.432, -10.6061, 0.12 ) }
    dend_41 { pt3dadd( 21.031, -112.471, -10.2725, 0.12 ) }
    dend_41 { pt3dadd( 21.274, -113.148, -10.0649, 1.68 ) }
    dend_41 { pt3dadd( 21.4607, -113.675, -9.90448, 1.8 ) }
    dend_41 { pt3dadd( 21.939, -115.077, -9.45665, 1.44 ) }
    dend_41 { pt3dadd( 22.3871, -116.508, -9.06739, 0.24 ) }
    dend_41 { pt3dadd( 22.8263, -117.884, -8.72145, 0.12 ) }
    dend_41 { pt3dadd( 23.0339, -118.517, -8.54415, 0.12 ) }
    dend_41 { pt3dadd( 23.3794, -119.604, -8.19992, 0.12 ) }
    dend_41 { pt3dadd( 23.5366, -120.137, -8.03788, 1.2 ) }
    dend_41 { pt3dadd( 23.7516, -120.871, -7.83965, 2.52 ) }
    dend_41 { pt3dadd( 24.1295, -121.989, -7.40241, 0.48 ) }
    dend_41 { pt3dadd( 24.2326, -122.242, -7.30119, 0.48 ) }
    dend_41 { pt3dadd( 24.5125, -122.86, -7.05615, 0.48 ) }
    dend_41 { pt3dadd( 24.8411, -123.529, -6.81317, 0.72 ) }
    dend_41 { pt3dadd( 25.2691, -124.399, -6.51617, 0.24 ) }
    dend_41 { pt3dadd( 25.7217, -125.308, -6.13582, 0.12 ) }
    dend_41 { pt3dadd( 26.0838, -125.985, -5.86116, 0.12 ) }
    dend_41 { pt3dadd( 26.3033, -126.351, -5.72801, 1.08 ) }
    dend_41 { pt3dadd( 26.5718, -126.746, -5.57321, 1.32 ) }
    dend_41 { pt3dadd( 26.8078, -127.064, -5.45719, 1.08 ) }
    dend_41 { pt3dadd( 27.4368, -127.894, -5.18603, 0.36 ) }
    dend_41 { pt3dadd( 28.3799, -129.149, -4.88104, 0.36 ) }
    dend_41 { pt3dadd( 29.0227, -129.99, -4.67102, 1.56 ) }
    dend_41 { pt3dadd( 29.5798, -130.726, -4.49324, 2.16 ) }
    dend_41 { pt3dadd( 30.0531, -131.309, -4.37112, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 12.4114, -13.8239, -20.8606, 0.36 ) }
    dend_28 { pt3dadd( 13.9266, -15.2424, -21.2463, 0.36 ) }
    dend_28 { pt3dadd( 14.4787, -15.4755, -21.5009, 0.36 ) }
    dend_28 { pt3dadd( 14.7966, -15.5162, -21.6927, 0.36 ) }
    dend_28 { pt3dadd( 15.0884, -15.5345, -21.8712, 0.36 ) }
    dend_28 { pt3dadd( 15.794, -15.5827, -22.2899, 0.72 ) }
    dend_28 { pt3dadd( 16.8705, -15.692, -22.9217, 0.96 ) }
    dend_28 { pt3dadd( 17.5645, -15.6925, -23.3671, 0.96 ) }
    dend_28 { pt3dadd( 18.5399, -15.7142, -24.0011, 0.48 ) }
    dend_28 { pt3dadd( 19.4336, -15.8026, -24.5782, 0.36 ) }
    dend_28 { pt3dadd( 19.8784, -15.9403, -24.8631, 0.36 ) }
    dend_28 { pt3dadd( 20.2077, -16.2458, -25.0483, 0.36 ) }
    dend_28 { pt3dadd( 20.297, -16.4526, -25.0839, 0.36 ) }
    dend_28 { pt3dadd( 20.5054, -17.155, -25.1441, 0.36 ) }
    dend_28 { pt3dadd( 20.6992, -17.8193, -25.1642, 1.56 ) }
    dend_28 { pt3dadd( 20.9772, -18.6284, -25.1712, 2.52 ) }
    dend_28 { pt3dadd( 21.2964, -19.3496, -25.2109, 2.4 ) }
    dend_28 { pt3dadd( 22.0503, -20.6397, -25.3287, 0.36 ) }
    dend_28 { pt3dadd( 22.351, -21.0445, -25.3871, 0.36 ) }
    dend_28 { pt3dadd( 23.0008, -21.7767, -25.5262, 0.36 ) }
    dend_28 { pt3dadd( 23.645, -22.407, -25.6825, 0.36 ) }
    dend_28 { pt3dadd( 24.5539, -23.2185, -25.9042, 1.44 ) }
    dend_28 { pt3dadd( 25.535, -24.0288, -26.1506, 3.25 ) }
    dend_28 { pt3dadd( 26.6459, -24.885, -26.4424, 4.69 ) }
    dend_28 { pt3dadd( 26.8513, -25.0484, -26.5024, 4.93 ) }
    dend_28 { pt3dadd( 28.0536, -26.1031, -26.9122, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -17.5412, -267.95, -34.7336, 0.12 ) }
    dend_24 { pt3dadd( -17.8986, -268.906, -35.6992, 0.12 ) }
    dend_24 { pt3dadd( -18.0393, -269.339, -36.1364, 0.12 ) }
    dend_24 { pt3dadd( -18.0813, -269.464, -36.3017, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -18.1484, -269.604, -36.4905, 0.36 ) }
    dend_24 { pt3dadd( -18.5762, -270.368, -37.4902, 0.12 ) }
    dend_24 { pt3dadd( -18.7102, -270.593, -37.823, 0.12 ) }
    dend_24 { pt3dadd( -18.7102, -270.593, -37.823, 0.36 ) }
    dend_24 { pt3dadd( -19.1887, -271.408, -39.0994, 0.36 ) }
    dend_24 { pt3dadd( -19.4758, -271.939, -39.8944, 2.52 ) }
    dend_24 { pt3dadd( -19.5767, -272.149, -40.1864, 2.88 ) }
    dend_24 { pt3dadd( -20.4535, -274.046, -42.5714, 0.24 ) }
    dend_24 { pt3dadd( -20.5705, -274.314, -42.8821, 0.12 ) }
    dend_24 { pt3dadd( -20.6645, -274.573, -43.1433, 0.12 ) }
    dend_24 { pt3dadd( -20.7503, -274.918, -43.4111, 0.48 ) }
    dend_24 { pt3dadd( -20.8048, -275.3, -43.6617, 0.48 ) }
    dend_24 { pt3dadd( -20.8487, -275.696, -43.8694, 0.12 ) }
    dend_24 { pt3dadd( -20.9003, -276.402, -44.0437, 0.12 ) }
    dend_24 { pt3dadd( -20.9236, -276.819, -44.1889, 0.12 ) }
    dend_24 { pt3dadd( -20.9461, -277.296, -44.3759, 0.84 ) }
    dend_24 { pt3dadd( -20.973, -277.605, -44.4881, 0.84 ) }
    dend_24 { pt3dadd( -21.0721, -278.77, -44.8788, 0.12 ) }
    dend_24 { pt3dadd( -21.1073, -279.279, -45.0269, 0.12 ) }
    dend_24 { pt3dadd( -21.242, -280.595, -45.3731, 2.64 ) }
    dend_24 { pt3dadd( -21.3086, -281.007, -45.4701, 2.28 ) }
    dend_24 { pt3dadd( -21.5752, -282.148, -45.6027, 0.12 ) }
    dend_24 { pt3dadd( -21.7031, -282.549, -45.5891, 0.12 ) }
    dend_24 { pt3dadd( -22.0408, -283.292, -45.4236, 0.12 ) }
    dend_24 { pt3dadd( -22.3823, -283.799, -45.2414, 1.2 ) }
    dend_24 { pt3dadd( -22.4474, -283.871, -45.2018, 1.44 ) }
    dend_24 { pt3dadd( -23.4619, -284.821, -44.5707, 0.12 ) }
    dend_24 { pt3dadd( -23.7974, -285.067, -44.3459, 0.12 ) }
    dend_24 { pt3dadd( -24.1211, -285.254, -44.1192, 0.12 ) }
    dend_24 { pt3dadd( -24.5678, -285.449, -43.7671, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -17.5412, -267.95, -34.7336, 0.6 ) }
    dend_17 { pt3dadd( -17.1248, -268.73, -35.8142, 0.6 ) }
    dend_17 { pt3dadd( -17.0816, -268.827, -35.9647, 0.6 ) }
    dend_17 { pt3dadd( -16.9118, -269.242, -36.6081, 1.32 ) }
    dend_17 { pt3dadd( -16.7425, -269.696, -37.2776, 2.28 ) }
    dend_17 { pt3dadd( -16.5523, -270.206, -38.0303, 2.04 ) }
    dend_17 { pt3dadd( -15.927, -271.883, -40.5045, 0.96 ) }
    dend_17 { pt3dadd( -15.7866, -272.28, -41.1626, 0.48 ) }
    dend_17 { pt3dadd( -15.7165, -272.486, -41.5256, 0.48 ) }
    dend_17 { pt3dadd( -15.652, -272.705, -41.9485, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 10.3835, 49.5004, 8.09435, 1.2 ) }
    dend_8 { pt3dadd( 10.6834, 50.8971, 7.75682, 1.2 ) }
    dend_8 { pt3dadd( 10.914, 52.2208, 7.56553, 1.32 ) }
    dend_8 { pt3dadd( 11.0399, 53.0111, 7.48475, 1.44 ) }
    dend_8 { pt3dadd( 11.1978, 54.0285, 7.42045, 0.96 ) }
    dend_8 { pt3dadd( 11.4367, 55.3976, 7.36763, 1.08 ) }
    dend_8 { pt3dadd( 11.8089, 57.2362, 7.33172, 1.56 ) }
    dend_8 { pt3dadd( 12.2212, 58.8196, 7.41267, 0.96 ) }
    dend_8 { pt3dadd( 12.5061, 59.6996, 7.50802, 0.6 ) }
    dend_8 { pt3dadd( 12.8339, 60.5349, 7.63452, 1.2 ) }
    dend_8 { pt3dadd( 13.19, 61.3154, 7.78263, 2.04 ) }
    dend_8 { pt3dadd( 13.4961, 61.9201, 7.91159, 2.16 ) }
    dend_8 { pt3dadd( 14.1238, 63.1401, 8.1925, 1.2 ) }
    dend_8 { pt3dadd( 14.5489, 64.0229, 8.37761, 0.84 ) }
    dend_8 { pt3dadd( 14.9396, 64.9593, 8.49981, 0.48 ) }
    dend_8 { pt3dadd( 15.1667, 65.6196, 8.53573, 0.48 ) }
    dend_8 { pt3dadd( 15.5521, 67.1133, 8.49471, 0.48 ) }
    dend_8 { pt3dadd( 15.766, 68.2155, 8.39231, 0.84 ) }
    dend_8 { pt3dadd( 15.957, 69.4599, 8.20595, 1.92 ) }
    dend_8 { pt3dadd( 16.1999, 71.0181, 7.90998, 2.52 ) }
    dend_8 { pt3dadd( 16.341, 71.8107, 7.73976, 2.28 ) }
    dend_8 { pt3dadd( 16.6157, 73.1136, 7.48501, 0.6 ) }
    dend_8 { pt3dadd( 16.7277, 73.5604, 7.4177, 0.6 ) }
    dend_8 { pt3dadd( 16.8953, 74.2064, 7.35518, 0.48 ) }
    dend_8 { pt3dadd( 17.1695, 75.3095, 7.32005, 0.48 ) }
    dend_8 { pt3dadd( 17.3675, 76.148, 7.35814, 0.96 ) }
    dend_8 { pt3dadd( 17.5462, 76.8971, 7.41405, 1.8 ) }
    dend_8 { pt3dadd( 17.8024, 77.9612, 7.53989, 2.04 ) }
    dend_8 { pt3dadd( 18.0562, 79.0856, 7.67406, 2.04 ) }
    dend_8 { pt3dadd( 18.3605, 80.7116, 7.85421, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 10.3835, 49.5004, 8.09435, 1.32 ) }
    dend_3 { pt3dadd( 11.5492, 51.0112, 8.52174, 1.32 ) }
    dend_3 { pt3dadd( 12.0773, 51.6554, 8.6121, 0.96 ) }
    dend_3 { pt3dadd( 13.0282, 52.6937, 8.67399, 1.32 ) }
    dend_3 { pt3dadd( 13.6369, 53.2452, 8.65645, 1.68 ) }
    dend_3 { pt3dadd( 14.4349, 53.8561, 8.60638, 1.2 ) }
    dend_3 { pt3dadd( 15.4216, 54.5268, 8.52577, 0.84 ) }
    dend_3 { pt3dadd( 16.5099, 55.1549, 8.36374, 0.72 ) }
    dend_3 { pt3dadd( 17.1325, 55.488, 8.28152, 0.84 ) }
    dend_3 { pt3dadd( 18.2181, 55.9355, 8.122, 0.6 ) }
    dend_3 { pt3dadd( 18.9204, 56.1558, 8.02501, 0.6 ) }
    dend_3 { pt3dadd( 19.4973, 56.2712, 7.96492, 1.32 ) }
    dend_3 { pt3dadd( 20.9257, 56.4981, 8.04695, 1.8 ) }
    dend_3 { pt3dadd( 21.755, 56.7947, 8.31705, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 16.7213, 60.3589, -21.3821, 0.48 ) }
    dend_58 { pt3dadd( 17.0874, 61.7943, -21.2022, 0.48 ) }
    dend_58 { pt3dadd( 17.266, 62.652, -21.0821, 0.48 ) }
    dend_58 { pt3dadd( 17.3682, 63.2349, -20.9886, 0.48 ) }
    dend_58 { pt3dadd( 17.5377, 64.2746, -20.8293, 0.72 ) }
    dend_58 { pt3dadd( 17.6334, 64.9, -20.7403, 0.48 ) }
    dend_58 { pt3dadd( 17.7422, 65.6511, -20.6409, 0.48 ) }
    dend_58 { pt3dadd( 17.8242, 66.7424, -20.5286, 0.48 ) }
    dend_58 { pt3dadd( 17.8822, 67.7264, -20.4304, 1.8 ) }
    dend_58 { pt3dadd( 17.9221, 68.2309, -20.3828, 2.64 ) }
    dend_58 { pt3dadd( 17.9887, 68.8043, -20.3354, 2.88 ) }
    dend_58 { pt3dadd( 18.0841, 69.4659, -20.2709, 2.88 ) }
    dend_58 { pt3dadd( 18.2056, 70.2176, -20.1947, 2.04 ) }
    dend_58 { pt3dadd( 18.3754, 71.1684, -20.1027, 0.48 ) }
    dend_58 { pt3dadd( 18.4476, 71.5473, -20.0631, 0.36 ) }
    dend_58 { pt3dadd( 18.7261, 72.946, -19.9164, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( 18.9146, 73.8425, -19.8272, 1.44 ) }
    dend_58 { pt3dadd( 19.1298, 74.6668, -19.7541, 2.52 ) }
    dend_58 { pt3dadd( 19.3825, 75.4729, -19.6924, 2.64 ) }
    dend_58 { pt3dadd( 19.5872, 76.0429, -19.6578, 2.52 ) }
    dend_58 { pt3dadd( 20.0767, 77.294, -19.6062, 0.48 ) }
    dend_58 { pt3dadd( 20.2916, 77.8193, -19.5974, 0.36 ) }
    dend_58 { pt3dadd( 20.7, 78.8356, -19.5974, 0.36 ) }
    dend_58 { pt3dadd( 20.8872, 79.317, -19.5909, 0.36 ) }
    dend_58 { pt3dadd( 21.183, 80.1194, -19.5829, 0.36 ) }
    dend_58 { pt3dadd( 21.495, 81.0229, -19.5735, 1.44 ) }
    dend_58 { pt3dadd( 21.6572, 81.575, -19.5695, 1.56 ) }
    dend_58 { pt3dadd( 21.8255, 82.2978, -19.5735, 0.24 ) }
    dend_58 { pt3dadd( 21.9597, 83.1477, -19.5872, 0.24 ) }
    dend_58 { pt3dadd( 22.0539, 83.8853, -19.5898, 0.72 ) }
    dend_58 { pt3dadd( 22.0999, 84.2581, -19.5854, 0.72 ) }
    dend_58 { pt3dadd( 22.1554, 84.6905, -19.5731, 0.48 ) }
    dend_58 { pt3dadd( 22.2007, 84.9743, -19.56, 0.36 ) }
    dend_58 { pt3dadd( 22.2958, 85.4339, -19.5144, 0.36 ) }
    dend_58 { pt3dadd( 22.4387, 85.9819, -19.4159, 0.84 ) }
    dend_58 { pt3dadd( 22.7266, 86.8645, -19.2175, 2.4 ) }
    dend_58 { pt3dadd( 22.851, 87.2198, -19.142, 3.0 ) }
    dend_58 { pt3dadd( 23.1067, 87.9207, -18.9985, 3.0 ) }
    dend_58 { pt3dadd( 23.4218, 88.8017, -18.8386, 1.68 ) }
    dend_58 { pt3dadd( 23.729, 89.6841, -18.6975, 0.36 ) }
    dend_58 { pt3dadd( 23.9671, 90.4088, -18.6052, 0.36 ) }
    dend_58 { pt3dadd( 24.2291, 91.3535, -18.5151, 0.36 ) }
    dend_58 { pt3dadd( 24.3955, 92.1027, -18.4737, 1.68 ) }
    dend_58 { pt3dadd( 24.4839, 92.608, -18.4671, 2.52 ) }
    dend_58 { pt3dadd( 24.5375, 93.0048, -18.4792, 2.64 ) }
    dend_58 { pt3dadd( 24.5947, 93.5143, -18.5034, 2.28 ) }
    dend_58 { pt3dadd( 24.6911, 94.3371, -18.5393, 0.48 ) }
    dend_58 { pt3dadd( 24.8872, 95.4652, -18.6078, 0.48 ) }
    dend_58 { pt3dadd( 25.0749, 96.3024, -18.6747, 0.48 ) }
    dend_58 { pt3dadd( 25.1785, 96.6749, -18.705, 0.96 ) }
    dend_58 { pt3dadd( 25.3785, 97.3141, -18.7533, 1.56 ) }
    dend_58 { pt3dadd( 25.5403, 97.7748, -18.7813, 1.56 ) }
    dend_58 { pt3dadd( 25.8821, 98.6743, -18.8192, 0.48 ) }
    dend_58 { pt3dadd( 25.9902, 98.9493, -18.8336, 0.12 ) }
    dend_58 { pt3dadd( 26.2964, 99.7468, -18.8793, 0.12 ) }
    dend_58 { pt3dadd( 26.6265, 100.642, -18.9301, 2.16 ) }
    dend_58 { pt3dadd( 26.7843, 101.096, -18.9531, 2.88 ) }
    dend_58 { pt3dadd( 26.9, 101.462, -18.9635, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 16.7213, 60.3589, -21.3821, 0.48 ) }
    dend_55 { pt3dadd( 16.7646, 63.1236, -23.289, 0.48 ) }
    dend_55 { pt3dadd( 16.7576, 63.5279, -23.5563, 0.48 ) }
    dend_55 { pt3dadd( 16.7166, 64.3989, -24.1729, 0.72 ) }
    dend_55 { pt3dadd( 16.6876, 64.9973, -24.6379, 0.72 ) }
    dend_55 { pt3dadd( 16.6551, 66.1185, -25.5197, 0.24 ) }
    dend_55 { pt3dadd( 16.6442, 66.6206, -25.9215, 0.12 ) }
    dend_55 { pt3dadd( 16.6383, 67.3283, -26.4628, 0.84 ) }
    dend_55 { pt3dadd( 16.6504, 68.2463, -27.2361, 0.12 ) }
    dend_55 { pt3dadd( 16.6921, 69.2342, -28.1019, 0.12 ) }
    dend_55 { pt3dadd( 16.7394, 69.7937, -28.5658, 1.68 ) }
    dend_55 { pt3dadd( 16.8268, 70.4651, -29.0505, 2.4 ) }
    dend_55 { pt3dadd( 16.9865, 71.6292, -29.866, 1.8 ) }
    dend_55 { pt3dadd( 17.1422, 72.7451, -30.6342, 0.12 ) }
    dend_55 { pt3dadd( 17.1945, 73.2561, -30.9577, 0.12 ) }
    dend_55 { pt3dadd( 17.2337, 74.2841, -31.5877, 1.92 ) }
    dend_55 { pt3dadd( 17.2271, 74.9821, -32.0515, 2.4 ) }
    dend_55 { pt3dadd( 17.1664, 76.8203, -33.3492, 0.6 ) }
    dend_55 { pt3dadd( 17.1073, 77.6754, -33.9667, 0.48 ) }
    dend_55 { pt3dadd( 17.0501, 78.3649, -34.4623, 0.48 ) }
    dend_55 { pt3dadd( 16.9745, 79.3703, -35.2015, 1.2 ) }
    dend_55 { pt3dadd( 16.8891, 80.5089, -36.0977, 0.48 ) }
    dend_55 { pt3dadd( 16.8739, 80.9369, -36.4296, 0.12 ) }
    dend_55 { pt3dadd( 16.9243, 81.7968, -36.9851, 0.12 ) }
    dend_55 { pt3dadd( 16.9971, 82.3264, -37.2916, 0.72 ) }
    dend_55 { pt3dadd( 17.0932, 82.8535, -37.6459, 0.72 ) }
    dend_55 { pt3dadd( 17.2883, 84.1013, -38.4941, 0.12 ) }
    dend_55 { pt3dadd( 17.3216, 84.3872, -38.699, 0.12 ) }
    dend_55 { pt3dadd( 17.4228, 85.2444, -39.3611, 2.28 ) }
    dend_55 { pt3dadd( 17.4772, 85.6997, -39.7775, 2.52 ) }
    dend_55 { pt3dadd( 17.7143, 87.6986, -41.8092, 0.12 ) }
    dend_55 { pt3dadd( 17.8469, 88.5088, -42.6616, 0.12 ) }
    dend_55 { pt3dadd( 18.0176, 89.3267, -43.5326, 1.44 ) }
    dend_55 { pt3dadd( 18.119, 89.7821, -44.029, 1.8 ) }
    dend_55 { pt3dadd( 18.3407, 90.7599, -45.1323, 1.32 ) }
    dend_55 { pt3dadd( 18.4498, 91.3308, -45.7484, 0.12 ) }
    dend_55 { pt3dadd( 18.628, 92.2185, -46.5985, 0.12 ) }
    dend_55 { pt3dadd( 18.862, 93.4474, -47.7174, 1.56 ) }
    dend_55 { pt3dadd( 18.9253, 93.8612, -48.0625, 1.92 ) }
    dend_55 { pt3dadd( 19.0641, 95.2242, -49.127, 0.12 ) }
    dend_55 { pt3dadd( 19.1298, 96.0626, -49.7407, 0.12 ) }
    dend_55 { pt3dadd( 19.1608, 96.5812, -50.1202, 0.96 ) }
    dend_55 { pt3dadd( 19.1696, 96.7742, -50.2669, 0.96 ) }
    dend_55 { pt3dadd( 19.2209, 97.5954, -50.9656, 0.12 ) }
    dend_55 { pt3dadd( 19.2596, 98.2349, -51.5579, 0.12 ) }
    dend_55 { pt3dadd( 19.2917, 99.1745, -52.4623, 1.32 ) }
    dend_55 { pt3dadd( 19.3026, 99.6124, -52.8873, 1.8 ) }
    dend_55 { pt3dadd( 19.3056, 100.185, -53.4221, 1.32 ) }
    dend_55 { pt3dadd( 19.325, 101.805, -54.8602, 0.12 ) }
    dend_55 { pt3dadd( 19.3226, 101.996, -55.0549, 0.12 ) }
    dend_55 { pt3dadd( 19.3191, 102.676, -55.7961, 0.36 ) }
    dend_55 { pt3dadd( 19.2947, 103.255, -56.4078, 0.36 ) }
    dend_55 { pt3dadd( 19.279, 104.041, -57.2774, 1.92 ) }
    dend_55 { pt3dadd( 19.3079, 104.691, -58.0072, 2.76 ) }
    dend_55 { pt3dadd( 19.6124, 107.587, -61.1505, 0.36 ) }
    dend_55 { pt3dadd( 19.6427, 107.829, -61.4225, 0.36 ) }
    dend_55 { pt3dadd( 19.7752, 108.734, -62.4657, 0.36 ) }
    dend_55 { pt3dadd( 19.9121, 109.632, -63.505, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 20.0027, 110.135, -64.0856, 0.36 ) }
    dend_55 { pt3dadd( 20.2049, 110.99, -65.0657, 0.72 ) }
    dend_55 { pt3dadd( 20.5461, 111.987, -66.2047, 0.12 ) }
    dend_55 { pt3dadd( 20.6301, 112.225, -66.4956, 0.12 ) }
    dend_55 { pt3dadd( 20.7911, 112.658, -67.0677, 1.92 ) }
    dend_55 { pt3dadd( 21.028, 113.55, -68.2139, 2.52 ) }
    dend_55 { pt3dadd( 21.2622, 114.501, -69.573, 1.44 ) }
    dend_55 { pt3dadd( 21.4671, 115.049, -70.5369, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -2.0073, 43.5414, -29.0713, 0.12 ) }
    dend_53 { pt3dadd( -2.01258, 45.471, -29.6055, 0.12 ) }
    dend_53 { pt3dadd( -2.02429, 46.313, -29.856, 0.6 ) }
    dend_53 { pt3dadd( -2.01828, 46.9556, -30.052, 0.12 ) }
    dend_53 { pt3dadd( -2.01184, 47.2475, -30.1361, 0.12 ) }
    dend_53 { pt3dadd( -2.00193, 47.6422, -30.2371, 0.12 ) }
    dend_53 { pt3dadd( -1.98623, 48.1149, -30.3442, 0.24 ) }
    dend_53 { pt3dadd( -1.96578, 48.5549, -30.4544, 0.12 ) }
    dend_53 { pt3dadd( -1.93917, 48.9336, -30.6047, 0.12 ) }
    dend_53 { pt3dadd( -1.88399, 49.56, -30.8971, 0.12 ) }
    dend_53 { pt3dadd( -1.81776, 50.1732, -31.2153, 1.32 ) }
    dend_53 { pt3dadd( -1.74868, 50.5861, -31.4376, 1.8 ) }
    dend_53 { pt3dadd( -1.49715, 51.7451, -32.0535, 0.84 ) }
    dend_53 { pt3dadd( -1.31141, 52.4547, -32.5397, 0.12 ) }
    dend_53 { pt3dadd( -1.23526, 52.6757, -32.7118, 0.12 ) }
    dend_53 { pt3dadd( -0.946139, 53.3647, -33.2581, 1.8 ) }
    dend_53 { pt3dadd( -0.75566, 53.7759, -33.5715, 2.16 ) }
    dend_53 { pt3dadd( -0.561759, 54.1553, -33.858, 1.8 ) }
    dend_53 { pt3dadd( 0.437482, 55.9077, -35.3137, 0.24 ) }
    dend_53 { pt3dadd( 0.872056, 56.6098, -35.9492, 0.24 ) }
    dend_53 { pt3dadd( 1.31724, 57.3141, -36.6023, 0.24 ) }
    dend_53 { pt3dadd( 1.5154, 57.6264, -36.9035, 0.24 ) }
    dend_53 { pt3dadd( 2.1518, 58.6546, -37.9429, 2.28 ) }
    dend_53 { pt3dadd( 3.0224, 60.0774, -39.4175, 0.24 ) }
    dend_53 { pt3dadd( 3.16121, 60.3064, -39.6427, 0.24 ) }
    dend_53 { pt3dadd( 3.56386, 60.988, -40.3542, 0.24 ) }
    dend_53 { pt3dadd( 4.00746, 61.7197, -41.1341, 1.44 ) }
    dend_53 { pt3dadd( 4.36189, 62.329, -41.7342, 1.8 ) }
    dend_53 { pt3dadd( 4.7754, 63.1179, -42.3621, 0.12 ) }
    dend_53 { pt3dadd( 5.0704, 63.7397, -42.7506, 0.12 ) }
    dend_53 { pt3dadd( 5.22164, 64.0676, -42.9559, 0.96 ) }
    dend_53 { pt3dadd( 5.35358, 64.3432, -43.1224, 1.2 ) }
    dend_53 { pt3dadd( 5.68563, 65.051, -43.4904, 0.12 ) }
    dend_53 { pt3dadd( 5.94936, 65.6071, -43.7636, 0.12 ) }
    dend_53 { pt3dadd( 6.10871, 65.9313, -43.9365, 0.36 ) }
    dend_53 { pt3dadd( 6.43603, 66.6181, -44.3913, 0.12 ) }
    dend_53 { pt3dadd( 6.5786, 66.9566, -44.6189, 0.12 ) }
    dend_53 { pt3dadd( 6.80438, 67.5499, -45.017, 0.48 ) }
    dend_53 { pt3dadd( 7.08298, 68.3346, -45.5635, 0.48 ) }
    dend_53 { pt3dadd( 7.35617, 69.163, -46.1389, 2.28 ) }
    dend_53 { pt3dadd( 7.78316, 70.5265, -47.0456, 0.12 ) }
    dend_53 { pt3dadd( 7.98271, 71.2345, -47.4834, 0.12 ) }
    dend_53 { pt3dadd( 8.08143, 71.628, -47.7298, 0.12 ) }
    dend_53 { pt3dadd( 8.2405, 72.3769, -48.1805, 1.08 ) }
    dend_53 { pt3dadd( 8.29856, 72.7772, -48.429, 1.2 ) }
    dend_53 { pt3dadd( 8.32449, 73.4689, -48.9854, 0.12 ) }
    dend_53 { pt3dadd( 8.28733, 74.0014, -49.4861, 0.12 ) }
    dend_53 { pt3dadd( 8.21257, 74.8084, -50.3296, 1.44 ) }
    dend_53 { pt3dadd( 8.18169, 75.0891, -50.6306, 2.04 ) }
    dend_53 { pt3dadd( 8.10536, 75.6033, -51.1778, 1.68 ) }
    dend_53 { pt3dadd( 7.82074, 77.1687, -52.8821, 0.24 ) }
    dend_53 { pt3dadd( 7.70679, 77.683, -53.4548, 0.24 ) }
    dend_53 { pt3dadd( 7.57739, 78.2293, -54.068, 0.12 ) }
    dend_53 { pt3dadd( 7.44268, 78.7496, -54.6064, 0.72 ) }
    dend_53 { pt3dadd( 7.38483, 79.0002, -54.8447, 0.72 ) }
    dend_53 { pt3dadd( 7.32498, 79.2342, -55.0358, 0.12 ) }
    dend_53 { pt3dadd( 7.11106, 80.021, -55.5632, 0.12 ) }
    dend_53 { pt3dadd( 6.98037, 80.3703, -55.8375, 0.12 ) }
    dend_53 { pt3dadd( 6.64756, 81.0063, -56.3676, 1.68 ) }
    dend_53 { pt3dadd( 6.57185, 81.1427, -56.4842, 1.68 ) }
    dend_53 { pt3dadd( 5.99417, 82.3238, -57.5206, 0.12 ) }
    dend_53 { pt3dadd( 5.81577, 82.7518, -57.875, 0.12 ) }
    dend_53 { pt3dadd( 5.69351, 83.1612, -58.2146, 0.24 ) }
    dend_53 { pt3dadd( 5.59509, 83.6136, -58.5834, 0.24 ) }
    dend_53 { pt3dadd( 5.48173, 84.3681, -59.1754, 0.24 ) }
    dend_53 { pt3dadd( 5.39447, 85.1512, -59.7038, 1.56 ) }
    dend_53 { pt3dadd( 5.37395, 85.6458, -59.9894, 2.04 ) }
    dend_53 { pt3dadd( 5.35374, 87.0375, -60.7104, 0.36 ) }
    dend_53 { pt3dadd( 5.36503, 87.4635, -60.9104, 0.48 ) }
    dend_53 { pt3dadd( 5.40179, 88.1156, -61.2288, 0.48 ) }
    dend_53 { pt3dadd( 5.41994, 88.8304, -61.5569, 0.48 ) }
    dend_53 { pt3dadd( 5.41372, 89.1971, -61.7245, 0.24 ) }
    dend_53 { pt3dadd( 5.38903, 89.6113, -61.9553, 0.24 ) }
    dend_53 { pt3dadd( 5.33258, 90.1995, -62.3303, 0.24 ) }
    dend_53 { pt3dadd( 5.22274, 91.0095, -62.9688, 1.08 ) }
    dend_53 { pt3dadd( 5.1458, 91.362, -63.3009, 1.08 ) }
    dend_53 { pt3dadd( 4.95662, 91.8192, -63.8839, 0.36 ) }
    dend_53 { pt3dadd( 4.65078, 92.2997, -64.6, 0.36 ) }
    dend_53 { pt3dadd( 4.52948, 92.435, -64.8309, 0.36 ) }
    dend_53 { pt3dadd( 4.37927, 92.566, -65.0684, 0.36 ) }
    dend_53 { pt3dadd( 4.16812, 92.73, -65.3717, 0.36 ) }
    dend_53 { pt3dadd( 3.24546, 93.4335, -66.6567, 1.68 ) }
    dend_53 { pt3dadd( 3.07097, 93.563, -66.8779, 2.4 ) }
    dend_53 { pt3dadd( 2.9438, 93.6594, -67.0282, 2.64 ) }
    dend_53 { pt3dadd( 1.5914, 94.6849, -68.552, 0.6 ) }
    dend_53 { pt3dadd( 1.41764, 94.8065, -68.7307, 0.12 ) }
    dend_53 { pt3dadd( 1.18033, 94.9605, -68.9352, 0.12 ) }
    dend_53 { pt3dadd( 0.881759, 95.1296, -69.1417, 0.6 ) }
    dend_53 { pt3dadd( 0.570769, 95.2972, -69.3547, 0.12 ) }
    dend_53 { pt3dadd( 0.219242, 95.4713, -69.5514, 0.12 ) }
    dend_53 { pt3dadd( -0.367173, 95.697, -69.7484, 1.44 ) }
    dend_53 { pt3dadd( -0.854061, 95.8841, -69.907, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -2.07454, 96.3983, -70.2701, 0.12 ) }
    dend_53 { pt3dadd( -2.57045, 96.6438, -70.3839, 0.12 ) }
    dend_53 { pt3dadd( -3.15961, 96.9769, -70.4686, 0.84 ) }
    dend_53 { pt3dadd( -3.39093, 97.1254, -70.5023, 0.84 ) }
    dend_53 { pt3dadd( -3.55198, 97.2351, -70.5208, 0.12 ) }
    dend_53 { pt3dadd( -3.92332, 97.4665, -70.5404, 0.12 ) }
    dend_53 { pt3dadd( -4.45859, 97.7779, -70.5194, 1.44 ) }
    dend_53 { pt3dadd( -4.64837, 97.8803, -70.5202, 1.56 ) }
    dend_53 { pt3dadd( -5.41512, 98.3007, -70.5618, 0.12 ) }
    dend_53 { pt3dadd( -5.99361, 98.6265, -70.5928, 0.12 ) }
    dend_53 { pt3dadd( -6.34873, 98.8228, -70.6113, 1.08 ) }
    dend_53 { pt3dadd( -6.7821, 99.047, -70.6584, 1.92 ) }
    dend_53 { pt3dadd( -7.1395, 99.2246, -70.7237, 1.56 ) }
    dend_53 { pt3dadd( -7.80554, 99.5604, -70.8855, 0.12 ) }
    dend_53 { pt3dadd( -8.07403, 99.6949, -70.9631, 0.12 ) }
    dend_53 { pt3dadd( -8.23962, 99.7805, -71.0243, 0.48 ) }
    dend_53 { pt3dadd( -8.93803, 100.159, -71.3371, 0.48 ) }
    dend_53 { pt3dadd( -9.24089, 100.333, -71.481, 0.12 ) }
    dend_53 { pt3dadd( -9.6962, 100.629, -71.6019, 0.12 ) }
    dend_53 { pt3dadd( -9.88224, 100.819, -71.7373, 0.84 ) }
    dend_53 { pt3dadd( -10.0545, 101.013, -71.905, 1.2 ) }
    dend_53 { pt3dadd( -10.3402, 101.332, -72.1296, 0.12 ) }
    dend_53 { pt3dadd( -10.7807, 101.696, -72.1551, 0.12 ) }
    dend_53 { pt3dadd( -11.9718, 102.135, -71.2229, 2.88 ) }
    dend_53 { pt3dadd( -14.3979, 102.501, -68.3023, 0.96 ) }
    dend_53 { pt3dadd( -14.8131, 102.475, -67.6169, 0.96 ) }
    dend_53 { pt3dadd( -16.8884, 101.921, -63.3494, 0.12 ) }
    dend_53 { pt3dadd( -17.1237, 101.819, -62.7871, 0.12 ) }
    dend_53 { pt3dadd( -17.2918, 101.713, -62.3282, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -2.0073, 43.5414, -29.0713, 0.48 ) }
    dend_50 { pt3dadd( -3.53558, 43.9391, -29.782, 0.48 ) }
    dend_50 { pt3dadd( -4.17746, 44.2005, -30.3631, 0.48 ) }
    dend_50 { pt3dadd( -4.94726, 44.7028, -31.4607, 0.48 ) }
    dend_50 { pt3dadd( -5.32303, 45.0005, -32.049, 2.16 ) }
    dend_50 { pt3dadd( -5.50303, 45.1623, -32.349, 2.52 ) }
    dend_50 { pt3dadd( -5.74709, 45.4023, -32.7729, 2.52 ) }
    dend_50 { pt3dadd( -6.66248, 46.5264, -34.8484, 1.44 ) }
    dend_50 { pt3dadd( -7.23787, 47.2372, -36.2274, 0.36 ) }
    dend_50 { pt3dadd( -7.45361, 47.4775, -36.7352, 0.48 ) }
    dend_50 { pt3dadd( -7.87193, 47.8808, -37.6893, 0.6 ) }
    dend_50 { pt3dadd( -8.31644, 48.2382, -38.872, 0.6 ) }
    dend_50 { pt3dadd( -8.86372, 48.6329, -40.5077, 0.6 ) }
    dend_50 { pt3dadd( -9.10378, 48.7835, -41.2211, 1.92 ) }
    dend_50 { pt3dadd( -9.31406, 48.8948, -41.835, 2.64 ) }
    dend_50 { pt3dadd( -9.52391, 48.9959, -42.4452, 2.64 ) }
    dend_50 { pt3dadd( -11.4558, 49.8424, -47.9279, 1.68 ) }
    dend_50 { pt3dadd( -12.3253, 50.213, -50.3058, 0.72 ) }
    dend_50 { pt3dadd( -12.4962, 50.2906, -50.7465, 1.56 ) }
    dend_50 { pt3dadd( -12.8596, 50.4663, -51.6479, 1.92 ) }
    dend_50 { pt3dadd( -13.0291, 50.5499, -52.0324, 2.28 ) }
    dend_50 { pt3dadd( -13.1794, 50.6238, -52.3268, 2.28 ) }
    dend_50 { pt3dadd( -14.8534, 51.3422, -54.323, 0.24 ) }
    dend_50 { pt3dadd( -15.1379, 51.4536, -54.6418, 0.12 ) }
    dend_50 { pt3dadd( -15.3353, 51.5267, -54.9072, 0.12 ) }
    dend_50 { pt3dadd( -15.6806, 51.648, -55.4173, 0.12 ) }
    dend_50 { pt3dadd( -16.3121, 51.8454, -56.3725, 1.32 ) }
    dend_50 { pt3dadd( -16.6083, 51.9234, -56.8319, 2.16 ) }
    dend_50 { pt3dadd( -17.0933, 52.0176, -57.5661, 2.4 ) }
    dend_50 { pt3dadd( -18.4944, 52.2055, -59.6835, 0.72 ) }
    dend_50 { pt3dadd( -18.8857, 52.2334, -60.2695, 0.84 ) }
    dend_50 { pt3dadd( -19.1324, 52.2324, -60.6409, 1.08 ) }
    dend_50 { pt3dadd( -19.8958, 52.1749, -61.7185, 0.48 ) }
    dend_50 { pt3dadd( -20.0889, 52.1529, -61.9739, 0.12 ) }
    dend_50 { pt3dadd( -20.4764, 52.0909, -62.4343, 0.48 ) }
    dend_50 { pt3dadd( -20.6238, 52.0577, -62.5726, 0.48 ) }
    dend_50 { pt3dadd( -21.2791, 51.8799, -63.1825, 0.12 ) }
    dend_50 { pt3dadd( -21.5223, 51.8041, -63.4038, 0.12 ) }
    dend_50 { pt3dadd( -21.8377, 51.6941, -63.7092, 0.12 ) }
    dend_50 { pt3dadd( -22.0194, 51.6394, -63.9676, 0.12 ) }
    dend_50 { pt3dadd( -22.2096, 51.5924, -64.2997, 0.12 ) }
    dend_50 { pt3dadd( -22.3895, 51.5516, -64.5933, 0.48 ) }
    dend_50 { pt3dadd( -22.4698, 51.5285, -64.7192, 0.48 ) }
    dend_50 { pt3dadd( -23.0772, 51.2817, -65.6618, 0.48 ) }
    dend_50 { pt3dadd( -23.452, 51.0771, -66.218, 0.12 ) }
    dend_50 { pt3dadd( -23.5903, 51.0069, -66.3989, 0.12 ) }
    dend_50 { pt3dadd( -23.9425, 50.81, -66.8062, 0.12 ) }
    dend_50 { pt3dadd( -24.5572, 50.4458, -67.5207, 1.8 ) }
    dend_50 { pt3dadd( -24.9815, 50.2163, -67.9532, 2.76 ) }
    dend_50 { pt3dadd( -25.2504, 50.0659, -68.1897, 2.76 ) }
    dend_50 { pt3dadd( -25.7455, 49.7691, -68.6079, 1.92 ) }
    dend_50 { pt3dadd( -26.2606, 49.4299, -69.0596, 1.92 ) }
    dend_50 { pt3dadd( -27.4264, 48.557, -70.2238, 0.12 ) }
    dend_50 { pt3dadd( -27.8865, 48.1733, -70.7068, 0.12 ) }
    dend_50 { pt3dadd( -28.1176, 47.9587, -70.9971, 0.12 ) }
    dend_50 { pt3dadd( -28.3448, 47.7286, -71.291, 0.48 ) }
    dend_50 { pt3dadd( -28.5489, 47.5005, -71.571, 0.6 ) }
    dend_50 { pt3dadd( -28.9771, 47.0443, -72.1403, 0.12 ) }
    dend_50 { pt3dadd( -29.1338, 46.8439, -72.344, 0.12 ) }
    dend_50 { pt3dadd( -29.8303, 45.8608, -73.3756, 2.4 ) }
    dend_50 { pt3dadd( -30.2148, 45.3922, -73.9379, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 30.0531, -131.309, -4.37112, 0.12 ) }
    dend_45 { pt3dadd( 30.0941, -132.186, -4.4601, 0.12 ) }
    dend_45 { pt3dadd( 30.0624, -132.474, -4.46029, 0.12 ) }
    dend_45 { pt3dadd( 29.989, -132.801, -4.41443, 0.36 ) }
    dend_45 { pt3dadd( 29.8503, -133.306, -4.30596, 0.48 ) }
    dend_45 { pt3dadd( 29.7791, -133.552, -4.24595, 0.12 ) }
    dend_45 { pt3dadd( 29.6847, -133.921, -4.15256, 0.12 ) }
    dend_45 { pt3dadd( 29.5227, -134.482, -3.95304, 0.36 ) }
    dend_45 { pt3dadd( 29.3994, -134.83, -3.71726, 0.12 ) }
    dend_45 { pt3dadd( 29.264, -135.095, -3.47254, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 29.1283, -135.276, -3.2818, 0.12 ) }
    dend_45 { pt3dadd( 28.9141, -135.552, -2.96642, 0.12 ) }
    dend_45 { pt3dadd( 28.579, -135.955, -2.46111, 0.36 ) }
    dend_45 { pt3dadd( 28.0328, -136.545, -1.66806, 0.12 ) }
    dend_45 { pt3dadd( 27.6377, -136.915, -1.13763, 0.12 ) }
    dend_45 { pt3dadd( 26.9904, -137.384, -0.328668, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 30.0531, -131.309, -4.37112, 0.12 ) }
    dend_42 { pt3dadd( 30.4273, -131.476, -4.72131, 0.12 ) }
    dend_42 { pt3dadd( 30.7148, -131.605, -5.02452, 0.12 ) }
    dend_42 { pt3dadd( 31.0288, -131.749, -5.35786, 0.48 ) }
    dend_42 { pt3dadd( 31.2651, -131.858, -5.6088, 0.12 ) }
    dend_42 { pt3dadd( 31.73, -132.072, -6.1025, 0.12 ) }
    dend_42 { pt3dadd( 32.2139, -132.295, -6.61646, 0.12 ) }
    dend_42 { pt3dadd( 32.7342, -132.535, -7.24254, 2.52 ) }
    dend_42 { pt3dadd( 32.8491, -132.588, -7.39056, 2.28 ) }
    dend_42 { pt3dadd( 32.8636, -132.595, -7.40875, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 28.0536, -26.1031, -26.9122, 0.48 ) }
    dend_34 { pt3dadd( 27.7145, -28.5133, -28.3737, 0.48 ) }
    dend_34 { pt3dadd( 27.68, -28.8886, -28.5621, 0.36 ) }
    dend_34 { pt3dadd( 27.6567, -29.2864, -28.7375, 0.36 ) }
    dend_34 { pt3dadd( 27.6392, -29.7356, -28.9133, 0.84 ) }
    dend_34 { pt3dadd( 27.6252, -30.4433, -29.1666, 1.32 ) }
    dend_34 { pt3dadd( 27.6583, -31.3776, -29.4707, 0.48 ) }
    dend_34 { pt3dadd( 27.7806, -32.0962, -29.5821, 0.36 ) }
    dend_34 { pt3dadd( 27.8533, -32.4197, -29.6283, 0.36 ) }
    dend_34 { pt3dadd( 27.9689, -32.8332, -29.6954, 0.48 ) }
    dend_34 { pt3dadd( 28.1083, -33.263, -29.767, 0.36 ) }
    dend_34 { pt3dadd( 28.4003, -34.0767, -29.9144, 0.36 ) }
    dend_34 { pt3dadd( 28.5666, -34.5328, -30.0031, 0.36 ) }
    dend_34 { pt3dadd( 28.6724, -34.946, -30.0865, 0.48 ) }
    dend_34 { pt3dadd( 28.7719, -35.4614, -30.194, 0.36 ) }
    dend_34 { pt3dadd( 28.8414, -35.9886, -30.3024, 0.36 ) }
    dend_34 { pt3dadd( 28.8588, -36.2008, -30.3441, 0.36 ) }
    dend_34 { pt3dadd( 28.9351, -38.0719, -30.694, 3.49 ) }
    dend_34 { pt3dadd( 28.9767, -39.8521, -30.9889, 0.12 ) }
    dend_34 { pt3dadd( 28.9815, -40.1648, -31.0355, 0.12 ) }
    dend_34 { pt3dadd( 28.9859, -40.646, -31.0936, 0.36 ) }
    dend_34 { pt3dadd( 28.9859, -40.8109, -31.1114, 0.12 ) }
    dend_34 { pt3dadd( 28.9718, -41.3876, -31.1554, 0.12 ) }
    dend_34 { pt3dadd( 28.9176, -41.941, -31.1558, 0.6 ) }
    dend_34 { pt3dadd( 28.882, -42.2726, -31.1372, 0.6 ) }
    dend_34 { pt3dadd( 28.7958, -42.8176, -31.1081, 0.36 ) }
    dend_34 { pt3dadd( 28.7536, -43.0305, -31.103, 0.24 ) }
    dend_34 { pt3dadd( 28.6704, -43.3691, -31.1018, 0.24 ) }
    dend_34 { pt3dadd( 28.5545, -43.7428, -31.1045, 1.08 ) }
    dend_34 { pt3dadd( 28.2846, -44.5868, -31.1197, 1.8 ) }
    dend_34 { pt3dadd( 28.0817, -45.2333, -31.106, 1.56 ) }
    dend_34 { pt3dadd( 27.917, -45.812, -31.0516, 0.96 ) }
    dend_34 { pt3dadd( 27.8279, -46.2468, -30.9993, 0.24 ) }
    dend_34 { pt3dadd( 27.6987, -47.096, -30.8894, 0.24 ) }
    dend_34 { pt3dadd( 27.6511, -47.5273, -30.8294, 0.24 ) }
    dend_34 { pt3dadd( 27.5869, -48.3451, -30.709, 0.24 ) }
    dend_34 { pt3dadd( 27.4957, -49.9963, -30.4562, 3.25 ) }
    dend_34 { pt3dadd( 27.454, -51.524, -30.2267, 0.24 ) }
    dend_34 { pt3dadd( 27.4539, -51.852, -30.1817, 0.24 ) }
    dend_34 { pt3dadd( 27.4802, -52.9264, -30.059, 0.24 ) }
    dend_34 { pt3dadd( 27.5014, -53.4568, -30.015, 0.48 ) }
    dend_34 { pt3dadd( 27.5167, -53.6729, -30.0093, 0.12 ) }
    dend_34 { pt3dadd( 27.6946, -55.1772, -30.0229, 0.12 ) }
    dend_34 { pt3dadd( 27.7166, -55.3289, -30.0244, 0.84 ) }
    dend_34 { pt3dadd( 27.8058, -55.8695, -30.0318, 1.08 ) }
    dend_34 { pt3dadd( 27.9131, -56.4924, -30.0441, 0.12 ) }
    dend_34 { pt3dadd( 28.0982, -57.5827, -30.0651, 0.12 ) }
    dend_34 { pt3dadd( 28.2955, -58.7941, -30.087, 2.4 ) }
    dend_34 { pt3dadd( 28.4919, -60.0906, -30.1078, 0.24 ) }
    dend_34 { pt3dadd( 28.5605, -60.6189, -30.1236, 0.24 ) }
    dend_34 { pt3dadd( 28.6239, -61.2657, -30.1493, 0.36 ) }
    dend_34 { pt3dadd( 28.6432, -61.6072, -30.1684, 0.24 ) }
    dend_34 { pt3dadd( 28.6478, -61.8234, -30.184, 0.24 ) }
    dend_34 { pt3dadd( 28.6406, -62.1366, -30.2264, 0.24 ) }
    dend_34 { pt3dadd( 28.6082, -62.7421, -30.3508, 0.24 ) }
    dend_34 { pt3dadd( 28.6045, -63.1239, -30.4359, 0.84 ) }
    dend_34 { pt3dadd( 28.6204, -63.4979, -30.5203, 0.84 ) }
    dend_34 { pt3dadd( 28.6468, -63.8346, -30.5805, 0.84 ) }
    dend_34 { pt3dadd( 28.7016, -64.3227, -30.6363, 0.12 ) }
    dend_34 { pt3dadd( 28.7282, -64.5712, -30.6528, 0.12 ) }
    dend_34 { pt3dadd( 28.8186, -65.2872, -30.6701, 0.12 ) }
    dend_34 { pt3dadd( 28.8653, -65.6325, -30.6751, 1.32 ) }
    dend_34 { pt3dadd( 28.9516, -66.387, -30.71, 1.68 ) }
    dend_34 { pt3dadd( 29.0484, -67.3528, -30.7705, 1.2 ) }
    dend_34 { pt3dadd( 29.0998, -67.9297, -30.8692, 0.12 ) }
    dend_34 { pt3dadd( 29.1134, -68.1492, -30.9226, 0.12 ) }
    dend_34 { pt3dadd( 29.131, -68.7749, -31.1038, 0.12 ) }
    dend_34 { pt3dadd( 29.1318, -69.6803, -31.3874, 1.32 ) }
    dend_34 { pt3dadd( 29.1198, -70.2898, -31.5915, 2.04 ) }
    dend_34 { pt3dadd( 29.101, -71.9313, -32.1375, 0.36 ) }
    dend_34 { pt3dadd( 29.1049, -72.8637, -32.4211, 0.36 ) }
    dend_34 { pt3dadd( 29.1027, -73.5938, -32.595, 0.36 ) }
    dend_34 { pt3dadd( 29.1067, -73.9793, -32.6607, 0.36 ) }
    dend_34 { pt3dadd( 29.1133, -74.4023, -32.6942, 0.36 ) }
    dend_34 { pt3dadd( 29.13, -75.2785, -32.6993, 1.92 ) }
    dend_34 { pt3dadd( 29.1515, -75.9257, -32.6425, 2.52 ) }
    dend_34 { pt3dadd( 29.2171, -77.1263, -32.5321, 0.24 ) }
    dend_34 { pt3dadd( 29.2601, -77.6999, -32.4326, 0.24 ) }
    dend_34 { pt3dadd( 29.3082, -78.2633, -32.3083, 0.84 ) }
    dend_34 { pt3dadd( 29.3646, -78.8911, -32.1461, 1.08 ) }
    dend_34 { pt3dadd( 29.422, -79.5311, -31.9296, 0.36 ) }
    dend_34 { pt3dadd( 29.5239, -80.3324, -31.6145, 0.36 ) }
    dend_34 { pt3dadd( 29.7583, -81.7053, -31.0241, 1.44 ) }
    dend_34 { pt3dadd( 29.8768, -82.306, -30.749, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 29.9769, -82.7392, -30.551, 1.56 ) }
    dend_34 { pt3dadd( 30.2216, -83.7219, -30.0497, 0.12 ) }
    dend_34 { pt3dadd( 30.3431, -84.1933, -29.8053, 0.12 ) }
    dend_34 { pt3dadd( 30.4691, -84.6699, -29.5693, 0.12 ) }
    dend_34 { pt3dadd( 30.505, -84.8076, -29.5107, 0.48 ) }
    dend_34 { pt3dadd( 30.7091, -85.5821, -29.1752, 0.84 ) }
    dend_34 { pt3dadd( 31.0783, -87.0861, -28.5675, 0.12 ) }
    dend_34 { pt3dadd( 31.2261, -87.7107, -28.3462, 0.12 ) }
    dend_34 { pt3dadd( 31.2909, -88.0016, -28.2382, 0.24 ) }
    dend_34 { pt3dadd( 31.3838, -88.4123, -28.0846, 0.24 ) }
    dend_34 { pt3dadd( 31.4537, -88.7297, -27.9726, 0.24 ) }
    dend_34 { pt3dadd( 31.5364, -89.1273, -27.8457, 0.48 ) }
    dend_34 { pt3dadd( 31.5774, -89.361, -27.7951, 0.6 ) }
    dend_34 { pt3dadd( 31.6394, -89.752, -27.7052, 0.12 ) }
    dend_34 { pt3dadd( 31.6901, -90.0733, -27.6269, 0.12 ) }
    dend_34 { pt3dadd( 31.7369, -90.3853, -27.5468, 0.12 ) }
    dend_34 { pt3dadd( 31.893, -91.4833, -27.2571, 2.4 ) }
    dend_34 { pt3dadd( 31.9792, -92.1074, -27.0926, 2.88 ) }
    dend_34 { pt3dadd( 32.0544, -92.7351, -26.9376, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 28.0536, -26.1031, -26.9122, 0.12 ) }
    dend_29 { pt3dadd( 28.6589, -27.234, -25.126, 0.12 ) }
    dend_29 { pt3dadd( 28.9389, -27.6257, -24.4148, 0.12 ) }
    dend_29 { pt3dadd( 29.4195, -28.1339, -23.3942, 0.72 ) }
    dend_29 { pt3dadd( 30.5271, -29.0336, -21.3794, 0.72 ) }
    dend_29 { pt3dadd( 31.0666, -29.3531, -20.5863, 0.12 ) }
    dend_29 { pt3dadd( 31.5308, -29.5743, -20.0268, 0.12 ) }
    dend_29 { pt3dadd( 32.3427, -29.8314, -19.1157, 1.68 ) }
    dend_29 { pt3dadd( 32.9276, -29.9656, -18.5665, 2.28 ) }
    dend_29 { pt3dadd( 34.0028, -30.1473, -17.7787, 1.92 ) }
    dend_29 { pt3dadd( 35.2713, -30.4288, -16.848, 0.36 ) }
    dend_29 { pt3dadd( 36.2955, -30.7748, -15.9964, 0.36 ) }
    dend_29 { pt3dadd( 37.0097, -31.2022, -15.1744, 0.6 ) }
    dend_29 { pt3dadd( 37.2613, -31.4754, -14.6703, 0.36 ) }
    dend_29 { pt3dadd( 37.4524, -31.7673, -14.1506, 0.36 ) }
    dend_29 { pt3dadd( 38.3247, -33.4155, -11.2874, 0.36 ) }
    dend_29 { pt3dadd( 38.4662, -33.7258, -10.763, 1.2 ) }
    dend_29 { pt3dadd( 38.8828, -34.791, -8.9495, 1.92 ) }
    dend_29 { pt3dadd( 39.4955, -36.4355, -6.19278, 0.24 ) }
    dend_29 { pt3dadd( 39.8064, -37.2664, -4.77642, 2.16 ) }
    dend_29 { pt3dadd( 39.9362, -37.5658, -4.26475, 3.0 ) }
    dend_29 { pt3dadd( 40.1783, -37.8874, -3.70396, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.652, -272.705, -41.9485, 0.12 ) }
    dend_23 { pt3dadd( -14.7372, -272.711, -42.0567, 0.12 ) }
    dend_23 { pt3dadd( -14.3292, -272.738, -42.0785, 0.12 ) }
    dend_23 { pt3dadd( -14.1086, -272.764, -42.0821, 0.12 ) }
    dend_23 { pt3dadd( -13.4175, -272.853, -42.0746, 0.6 ) }
    dend_23 { pt3dadd( -13.118, -272.892, -42.0714, 0.6 ) }
    dend_23 { pt3dadd( -12.5717, -272.962, -42.0655, 0.12 ) }
    dend_23 { pt3dadd( -11.7604, -273.105, -41.9971, 0.12 ) }
    dend_23 { pt3dadd( -11.4922, -273.163, -41.9784, 0.84 ) }
    dend_23 { pt3dadd( -11.2776, -273.217, -41.9616, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -15.652, -272.705, -41.9485, 1.56 ) }
    dend_18 { pt3dadd( -15.5956, -273.136, -41.9174, 1.56 ) }
    dend_18 { pt3dadd( -15.5175, -273.732, -41.8743, 2.28 ) }
    dend_18 { pt3dadd( -15.4714, -274.085, -41.8489, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.3605, 80.7116, 7.85421, 0.48 ) }
    dend_12 { pt3dadd( 18.9814, 82.7432, 8.42272, 0.48 ) }
    dend_12 { pt3dadd( 19.1747, 83.4607, 8.56716, 0.36 ) }
    dend_12 { pt3dadd( 19.3433, 84.1978, 8.67243, 0.36 ) }
    dend_12 { pt3dadd( 19.4792, 84.962, 8.74526, 0.36 ) }
    dend_12 { pt3dadd( 19.5617, 85.6149, 8.7903, 0.36 ) }
    dend_12 { pt3dadd( 19.5909, 85.9902, 8.8062, 0.72 ) }
    dend_12 { pt3dadd( 19.5842, 86.3791, 8.74723, 0.72 ) }
    dend_12 { pt3dadd( 19.5565, 86.8519, 8.67647, 0.36 ) }
    dend_12 { pt3dadd( 19.502, 87.4398, 8.59351, 0.36 ) }
    dend_12 { pt3dadd( 19.4625, 87.9622, 8.53129, 1.2 ) }
    dend_12 { pt3dadd( 19.4354, 88.5576, 8.47603, 1.8 ) }
    dend_12 { pt3dadd( 19.412, 89.3852, 8.43319, 1.8 ) }
    dend_12 { pt3dadd( 19.3994, 90.5313, 8.41597, 0.36 ) }
    dend_12 { pt3dadd( 19.4079, 90.9041, 8.39398, 0.36 ) }
    dend_12 { pt3dadd( 19.4516, 91.6803, 8.345, 0.72 ) }
    dend_12 { pt3dadd( 19.486, 92.0595, 8.32042, 0.84 ) }
    dend_12 { pt3dadd( 19.5727, 92.8885, 8.27657, 0.36 ) }
    dend_12 { pt3dadd( 19.6413, 93.5511, 8.25066, 1.08 ) }
    dend_12 { pt3dadd( 19.7844, 94.9482, 8.14958, 2.64 ) }
    dend_12 { pt3dadd( 19.8783, 95.8545, 8.05779, 3.61 ) }
    dend_12 { pt3dadd( 19.9208, 96.2736, 7.98938, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.3605, 80.7116, 7.85421, 0.6 ) }
    dend_9 { pt3dadd( 18.1362, 82.0554, 7.72848, 0.6 ) }
    dend_9 { pt3dadd( 18.08, 82.961, 7.57868, 0.6 ) }
    dend_9 { pt3dadd( 18.0789, 84.2079, 7.24906, 0.6 ) }
    dend_9 { pt3dadd( 18.0879, 84.7539, 7.00791, 0.6 ) }
    dend_9 { pt3dadd( 18.0829, 85.5461, 6.62016, 1.68 ) }
    dend_9 { pt3dadd( 18.0557, 86.3275, 6.22301, 2.04 ) }
    dend_9 { pt3dadd( 18.0632, 86.8251, 5.90319, 1.8 ) }
    dend_9 { pt3dadd( 18.0201, 87.431, 5.42395, 2.04 ) }
    dend_9 { pt3dadd( 17.7, 88.4402, 4.50506, 0.48 ) }
    dend_9 { pt3dadd( 17.4173, 88.9138, 4.10029, 0.48 ) }
    dend_9 { pt3dadd( 17.2657, 89.0861, 3.97669, 0.72 ) }
    dend_9 { pt3dadd( 16.8864, 89.4743, 3.74516, 0.96 ) }
    dend_9 { pt3dadd( 16.3741, 89.9952, 3.45863, 0.72 ) }
    dend_9 { pt3dadd( 15.9599, 90.4483, 3.24568, 1.32 ) }
    dend_9 { pt3dadd( 15.6164, 90.896, 3.06051, 1.8 ) }
    dend_9 { pt3dadd( 15.1668, 91.6152, 2.76328, 1.8 ) }
    dend_9 { pt3dadd( 14.8521, 92.2264, 2.53595, 0.96 ) }
    dend_9 { pt3dadd( 14.553, 92.9128, 2.27414, 0.72 ) }
    dend_9 { pt3dadd( 14.3458, 93.4258, 2.06592, 0.84 ) }
    dend_9 { pt3dadd( 13.9541, 94.3689, 1.6145, 1.56 ) }
    dend_9 { pt3dadd( 13.7439, 94.858, 1.34369, 2.52 ) }
    dend_9 { pt3dadd( 13.5549, 95.2752, 1.09441, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 12.994, 96.3843, 0.409853, 2.4 ) }
    dend_9 { pt3dadd( 12.4906, 97.3002, -0.181189, 1.56 ) }
    dend_9 { pt3dadd( 12.0961, 97.9828, -0.656401, 0.84 ) }
    dend_9 { pt3dadd( 11.8007, 98.4742, -1.01151, 0.48 ) }
    dend_9 { pt3dadd( 11.686, 98.6711, -1.1609, 0.24 ) }
    dend_9 { pt3dadd( 11.3721, 99.2119, -1.56129, 0.24 ) }
    dend_9 { pt3dadd( 11.135, 99.6458, -1.99114, 0.48 ) }
    dend_9 { pt3dadd( 11.0082, 99.9124, -2.32645, 0.12 ) }
    dend_9 { pt3dadd( 10.9131, 100.163, -2.66377, 0.12 ) }
    dend_9 { pt3dadd( 10.6867, 100.803, -3.55661, 1.2 ) }
    dend_9 { pt3dadd( 10.5681, 101.16, -4.04851, 1.56 ) }
    dend_9 { pt3dadd( 10.0076, 102.902, -6.40947, 0.36 ) }
    dend_9 { pt3dadd( 9.83433, 103.467, -7.10311, 0.12 ) }
    dend_9 { pt3dadd( 9.53297, 104.468, -8.14921, 2.64 ) }
    dend_9 { pt3dadd( 9.44282, 104.783, -8.41163, 3.0 ) }
    dend_9 { pt3dadd( 9.28219, 105.324, -8.62202, 2.76 ) }
    dend_9 { pt3dadd( 8.68728, 107.064, -8.64803, 0.48 ) }
    dend_9 { pt3dadd( 7.43757, 110.397, -7.94614, 0.48 ) }
    dend_9 { pt3dadd( 7.19138, 111.108, -7.8986, 0.48 ) }
    dend_9 { pt3dadd( 7.104, 111.565, -8.09643, 0.48 ) }
    dend_9 { pt3dadd( 7.10629, 112.064, -8.53546, 0.36 ) }
    dend_9 { pt3dadd( 7.23723, 112.941, -9.57024, 0.36 ) }
    dend_9 { pt3dadd( 7.48933, 113.791, -10.7392, 0.36 ) }
    dend_9 { pt3dadd( 7.92493, 114.958, -12.3233, 2.16 ) }
    dend_9 { pt3dadd( 8.13645, 115.388, -12.9079, 3.0 ) }
    dend_9 { pt3dadd( 8.24651, 115.579, -13.154, 3.12 ) }
    dend_9 { pt3dadd( 8.80247, 116.415, -14.1594, 3.0 ) }
    dend_9 { pt3dadd( 9.68647, 117.663, -15.5345, 0.12 ) }
    dend_9 { pt3dadd( 10.0979, 118.257, -16.1213, 0.12 ) }
    dend_9 { pt3dadd( 10.2157, 118.437, -16.2781, 0.12 ) }
    dend_9 { pt3dadd( 10.7483, 119.219, -16.9917, 2.52 ) }
    dend_9 { pt3dadd( 10.9687, 119.539, -17.2674, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.755, 56.7947, 8.31705, 0.6 ) }
    dend_7 { pt3dadd( 20.696, 57.3584, 9.26051, 0.6 ) }
    dend_7 { pt3dadd( 20.2846, 57.5773, 9.62703, 0.6 ) }
    dend_7 { pt3dadd( 19.7028, 57.887, 10.1454, 0.24 ) }
    dend_7 { pt3dadd( 19.3057, 58.0984, 10.4992, 0.24 ) }
    dend_7 { pt3dadd( 18.8865, 58.3215, 10.8726, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 21.755, 56.7947, 8.31705, 0.6 ) }
    dend_4 { pt3dadd( 22.306, 57.7408, 8.78486, 0.6 ) }
    dend_4 { pt3dadd( 22.9345, 58.9153, 9.34927, 0.72 ) }
    dend_4 { pt3dadd( 23.3589, 59.765, 9.71858, 1.08 ) }
    dend_4 { pt3dadd( 23.5947, 60.2546, 9.89339, 1.44 ) }
    dend_4 { pt3dadd( 23.8722, 60.8536, 10.109, 1.56 ) }
    dend_4 { pt3dadd( 24.3131, 61.8131, 10.4366, 1.44 ) }
    dend_4 { pt3dadd( 24.8983, 63.1652, 10.8639, 1.56 ) }
    dend_4 { pt3dadd( 25.252, 64.0582, 11.1236, 1.68 ) }
    dend_4 { pt3dadd( 25.5283, 64.8364, 11.3958, 1.68 ) }
    dend_4 { pt3dadd( 25.7981, 65.6546, 11.7208, 1.68 ) }
    dend_4 { pt3dadd( 26.1789, 66.9073, 12.2546, 0.6 ) }
    dend_4 { pt3dadd( 26.4394, 67.8638, 12.6725, 0.36 ) }
    dend_4 { pt3dadd( 26.6597, 68.6047, 12.9388, 0.36 ) }
    dend_4 { pt3dadd( 26.973, 69.5829, 13.2491, 1.44 ) }
    dend_4 { pt3dadd( 27.1565, 70.0917, 13.3872, 1.56 ) }
    dend_4 { pt3dadd( 27.4785, 70.8954, 13.5198, 1.56 ) }
    dend_4 { pt3dadd( 27.6511, 71.2836, 13.5457, 1.44 ) }
    dend_4 { pt3dadd( 28.2998, 72.6343, 13.5992, 0.72 ) }
    dend_4 { pt3dadd( 28.569, 73.136, 13.6264, 0.6 ) }
    dend_4 { pt3dadd( 29.0391, 73.941, 13.6902, 1.2 ) }
    dend_4 { pt3dadd( 29.2682, 74.3103, 13.744, 1.32 ) }
    dend_4 { pt3dadd( 29.8241, 75.1308, 13.908, 0.84 ) }
    dend_4 { pt3dadd( 30.7629, 76.394, 14.2998, 1.08 ) }
    dend_4 { pt3dadd( 31.4128, 77.1978, 14.6333, 0.96 ) }
    dend_4 { pt3dadd( 31.979, 77.8181, 14.8922, 0.48 ) }
    dend_4 { pt3dadd( 32.449, 78.3018, 15.0843, 0.48 ) }
    dend_4 { pt3dadd( 33.0052, 78.8352, 15.2829, 0.6 ) }
    dend_4 { pt3dadd( 33.8676, 79.6197, 15.5352, 0.96 ) }
    dend_4 { pt3dadd( 34.1551, 79.8825, 15.6058, 0.96 ) }
    dend_4 { pt3dadd( 35.1979, 80.9166, 15.8675, 1.68 ) }
    dend_4 { pt3dadd( 36.1749, 81.9706, 16.101, 2.28 ) }
    dend_4 { pt3dadd( 36.9801, 82.938, 16.2939, 2.16 ) }
    dend_4 { pt3dadd( 37.487, 83.6639, 16.4144, 1.92 ) }
    dend_4 { pt3dadd( 38.0786, 84.7104, 16.5083, 0.6 ) }
    dend_4 { pt3dadd( 38.594, 85.8948, 16.5455, 0.6 ) }
    dend_4 { pt3dadd( 38.8626, 86.6421, 16.5564, 0.6 ) }
    dend_4 { pt3dadd( 39.0856, 87.4375, 16.5311, 0.48 ) }
    dend_4 { pt3dadd( 39.3359, 88.8031, 16.4284, 0.48 ) }
    dend_4 { pt3dadd( 39.4741, 90.1055, 16.2507, 0.48 ) }
    dend_4 { pt3dadd( 39.5034, 91.2605, 15.9489, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 26.9, 101.462, -18.9635, 0.48 ) }
    dend_60 { pt3dadd( 27.1179, 102.632, -18.6763, 0.48 ) }
    dend_60 { pt3dadd( 27.2051, 103.007, -18.5589, 0.12 ) }
    dend_60 { pt3dadd( 27.3851, 103.753, -18.3111, 0.36 ) }
    dend_60 { pt3dadd( 27.5266, 104.311, -18.1251, 0.48 ) }
    dend_60 { pt3dadd( 27.6405, 104.714, -17.9923, 0.48 ) }
    dend_60 { pt3dadd( 27.7936, 105.214, -17.8338, 0.48 ) }
    dend_60 { pt3dadd( 28.1119, 106.045, -17.5914, 1.68 ) }
    dend_60 { pt3dadd( 28.2217, 106.286, -17.5372, 2.16 ) }
    dend_60 { pt3dadd( 28.3863, 106.604, -17.4955, 2.4 ) }
    dend_60 { pt3dadd( 28.5954, 106.98, -17.4632, 2.4 ) }
    dend_60 { pt3dadd( 28.8557, 107.434, -17.4165, 1.92 ) }
    dend_60 { pt3dadd( 29.2511, 108.114, -17.3474, 0.12 ) }
    dend_60 { pt3dadd( 29.4147, 108.381, -17.324, 0.24 ) }
    dend_60 { pt3dadd( 29.5618, 108.621, -17.292, 0.24 ) }
    dend_60 { pt3dadd( 29.8721, 109.143, -17.2007, 0.48 ) }
    dend_60 { pt3dadd( 30.2571, 109.803, -17.0552, 0.48 ) }
    dend_60 { pt3dadd( 30.3815, 110.018, -16.998, 1.32 ) }
    dend_60 { pt3dadd( 30.5977, 110.384, -16.8898, 1.68 ) }
    dend_60 { pt3dadd( 30.819, 110.744, -16.8078, 1.8 ) }
    dend_60 { pt3dadd( 31.0269, 111.072, -16.7575, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( 31.1591, 111.275, -16.7468, 1.92 ) }
    dend_60 { pt3dadd( 31.4895, 111.79, -16.7644, 0.48 ) }
    dend_60 { pt3dadd( 31.8927, 112.423, -16.83, 0.48 ) }
    dend_60 { pt3dadd( 32.2346, 112.984, -16.9028, 0.72 ) }
    dend_60 { pt3dadd( 32.5953, 113.597, -16.9741, 0.72 ) }
    dend_60 { pt3dadd( 32.9456, 114.194, -17.125, 0.36 ) }
    dend_60 { pt3dadd( 33.1962, 114.631, -17.2831, 0.36 ) }
    dend_60 { pt3dadd( 33.4957, 115.193, -17.5274, 0.72 ) }
    dend_60 { pt3dadd( 33.7673, 115.76, -17.7493, 1.08 ) }
    dend_60 { pt3dadd( 34.0164, 116.316, -17.9307, 1.32 ) }
    dend_60 { pt3dadd( 34.7404, 118.109, -18.3772, 0.48 ) }
    dend_60 { pt3dadd( 34.9161, 118.599, -18.4501, 0.36 ) }
    dend_60 { pt3dadd( 35.2087, 119.502, -18.5022, 0.36 ) }
    dend_60 { pt3dadd( 35.5773, 120.736, -18.5231, 0.36 ) }
    dend_60 { pt3dadd( 35.7037, 121.156, -18.5272, 1.92 ) }
    dend_60 { pt3dadd( 35.9027, 121.74, -18.509, 3.0 ) }
    dend_60 { pt3dadd( 36.0588, 122.138, -18.4665, 3.25 ) }
    dend_60 { pt3dadd( 36.3525, 122.77, -18.4434, 3.25 ) }
    dend_60 { pt3dadd( 36.9813, 123.978, -18.4904, 0.36 ) }
    dend_60 { pt3dadd( 37.2232, 124.424, -18.5399, 0.48 ) }
    dend_60 { pt3dadd( 37.7212, 125.35, -18.6434, 0.48 ) }
    dend_60 { pt3dadd( 38.0976, 126.073, -18.7213, 0.48 ) }
    dend_60 { pt3dadd( 38.4184, 126.764, -18.7907, 0.48 ) }
    dend_60 { pt3dadd( 38.5459, 127.089, -18.8176, 0.96 ) }
    dend_60 { pt3dadd( 38.6582, 127.423, -18.8328, 1.2 ) }
    dend_60 { pt3dadd( 38.8367, 128.033, -18.856, 0.84 ) }
    dend_60 { pt3dadd( 39.0411, 128.79, -18.8772, 0.48 ) }
    dend_60 { pt3dadd( 39.2635, 129.556, -18.883, 0.36 ) }
    dend_60 { pt3dadd( 39.4691, 130.132, -18.8711, 0.36 ) }
    dend_60 { pt3dadd( 39.808, 130.876, -18.8479, 0.36 ) }
    dend_60 { pt3dadd( 40.0559, 131.327, -18.8383, 1.32 ) }
    dend_60 { pt3dadd( 40.4475, 131.962, -18.8287, 2.28 ) }
    dend_60 { pt3dadd( 40.703, 132.35, -18.8252, 2.76 ) }
    dend_60 { pt3dadd( 41.0522, 132.879, -18.8246, 2.4 ) }
    dend_60 { pt3dadd( 41.7009, 133.937, -18.8387, 1.08 ) }
    dend_60 { pt3dadd( 42.1211, 134.708, -18.8562, 0.36 ) }
    dend_60 { pt3dadd( 42.4173, 135.334, -18.871, 0.36 ) }
    dend_60 { pt3dadd( 42.6952, 135.992, -18.9016, 1.68 ) }
    dend_60 { pt3dadd( 42.8506, 136.401, -18.9268, 2.28 ) }
    dend_60 { pt3dadd( 43.0714, 137.062, -18.9514, 2.4 ) }
    dend_60 { pt3dadd( 43.3755, 138.091, -18.9637, 1.68 ) }
    dend_60 { pt3dadd( 43.7241, 139.338, -18.941, 1.08 ) }
    dend_60 { pt3dadd( 43.8894, 139.945, -18.9262, 0.6 ) }
    dend_60 { pt3dadd( 44.0181, 140.453, -18.914, 0.6 ) }
    dend_60 { pt3dadd( 44.2356, 141.299, -18.8926, 1.44 ) }
    dend_60 { pt3dadd( 44.345, 141.714, -18.886, 1.8 ) }
    dend_60 { pt3dadd( 44.4816, 142.22, -18.8874, 1.8 ) }
    dend_60 { pt3dadd( 44.6865, 142.903, -18.8947, 0.48 ) }
    dend_60 { pt3dadd( 45.0102, 143.894, -18.9013, 0.48 ) }
    dend_60 { pt3dadd( 45.3166, 144.773, -18.9586, 1.2 ) }
    dend_60 { pt3dadd( 45.6943, 145.773, -19.0693, 1.68 ) }
    dend_60 { pt3dadd( 45.9771, 146.457, -19.1506, 2.28 ) }
    dend_60 { pt3dadd( 46.3911, 147.434, -19.2581, 2.52 ) }
    dend_60 { pt3dadd( 46.93, 148.734, -19.3606, 1.2 ) }
    dend_60 { pt3dadd( 47.2651, 149.604, -19.379, 0.6 ) }
    dend_60 { pt3dadd( 47.4442, 150.155, -19.3562, 0.48 ) }
    dend_60 { pt3dadd( 47.65, 150.977, -19.2566, 0.48 ) }
    dend_60 { pt3dadd( 47.7713, 151.647, -19.1051, 0.48 ) }
    dend_60 { pt3dadd( 47.8569, 152.326, -18.8796, 0.48 ) }
    dend_60 { pt3dadd( 47.9387, 153.117, -18.5379, 0.48 ) }
    dend_60 { pt3dadd( 47.996, 153.588, -18.3104, 0.48 ) }
    dend_60 { pt3dadd( 48.0873, 154.074, -18.1347, 0.48 ) }
    dend_60 { pt3dadd( 48.2846, 154.748, -18.0074, 1.08 ) }
    dend_60 { pt3dadd( 48.5446, 155.359, -18.0047, 1.68 ) }
    dend_60 { pt3dadd( 48.7886, 155.843, -18.0725, 2.04 ) }
    dend_60 { pt3dadd( 49.039, 156.294, -18.1747, 2.04 ) }
    dend_60 { pt3dadd( 49.7582, 157.541, -18.4945, 0.96 ) }
    dend_60 { pt3dadd( 50.0238, 158.007, -18.6249, 0.48 ) }
    dend_60 { pt3dadd( 50.2732, 158.451, -18.7568, 0.48 ) }
    dend_60 { pt3dadd( 50.638, 159.126, -18.933, 1.56 ) }
    dend_60 { pt3dadd( 50.765, 159.387, -18.9846, 2.16 ) }
    dend_60 { pt3dadd( 51.0222, 159.925, -19.1214, 2.64 ) }
    dend_60 { pt3dadd( 51.1982, 160.306, -19.2179, 2.64 ) }
    dend_60 { pt3dadd( 51.4322, 160.793, -19.3685, 3.12 ) }
    dend_60 { pt3dadd( 51.6562, 161.232, -19.5307, 3.12 ) }
    dend_60 { pt3dadd( 52.0993, 162.055, -19.8554, 0.6 ) }
    dend_60 { pt3dadd( 52.8944, 163.462, -20.3948, 0.48 ) }
    dend_60 { pt3dadd( 53.207, 163.987, -20.5809, 0.36 ) }
    dend_60 { pt3dadd( 53.4015, 164.306, -20.676, 0.36 ) }
    dend_60 { pt3dadd( 53.7289, 164.871, -20.7744, 0.96 ) }
    dend_60 { pt3dadd( 54.1335, 165.587, -20.8102, 0.96 ) }
    dend_60 { pt3dadd( 54.4959, 166.275, -20.757, 0.72 ) }
    dend_60 { pt3dadd( 54.7471, 166.845, -20.6676, 0.48 ) }
    dend_60 { pt3dadd( 55.0351, 167.585, -20.588, 0.48 ) }
    dend_60 { pt3dadd( 55.4296, 168.728, -20.5117, 1.2 ) }
    dend_60 { pt3dadd( 55.6114, 169.31, -20.4949, 1.68 ) }
    dend_60 { pt3dadd( 55.8268, 170.058, -20.4977, 2.04 ) }
    dend_60 { pt3dadd( 56.058, 170.874, -20.5225, 1.8 ) }
    dend_60 { pt3dadd( 56.3574, 171.891, -20.5785, 0.6 ) }
    dend_60 { pt3dadd( 56.5679, 172.561, -20.6329, 0.48 ) }
    dend_60 { pt3dadd( 56.8503, 173.387, -20.7247, 0.48 ) }
    dend_60 { pt3dadd( 57.1537, 174.199, -20.8096, 0.48 ) }
    dend_60 { pt3dadd( 57.3482, 174.662, -20.8463, 0.48 ) }
    dend_60 { pt3dadd( 57.5386, 175.065, -20.8562, 1.08 ) }
    dend_60 { pt3dadd( 57.8075, 175.614, -20.8344, 1.32 ) }
    dend_60 { pt3dadd( 57.9684, 175.924, -20.8195, 1.32 ) }
    dend_60 { pt3dadd( 58.2744, 176.477, -20.7758, 0.72 ) }
    dend_60 { pt3dadd( 58.4733, 176.819, -20.7509, 0.48 ) }
    dend_60 { pt3dadd( 58.7545, 177.307, -20.7191, 0.72 ) }
    dend_60 { pt3dadd( 59.0663, 177.843, -20.6997, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( 59.4009, 178.421, -20.7042, 1.32 ) }
    dend_60 { pt3dadd( 59.7957, 179.119, -20.7409, 0.48 ) }
    dend_60 { pt3dadd( 60.1308, 179.732, -20.8257, 0.48 ) }
    dend_60 { pt3dadd( 60.4638, 180.334, -20.9483, 0.48 ) }
    dend_60 { pt3dadd( 60.8359, 180.999, -21.1073, 1.44 ) }
    dend_60 { pt3dadd( 61.1613, 181.584, -21.249, 2.28 ) }
    dend_60 { pt3dadd( 61.5504, 182.296, -21.4135, 1.92 ) }
    dend_60 { pt3dadd( 62.1002, 183.314, -21.6277, 0.48 ) }
    dend_60 { pt3dadd( 62.5191, 184.095, -21.7484, 0.48 ) }
    dend_60 { pt3dadd( 62.8122, 184.659, -21.7935, 0.72 ) }
    dend_60 { pt3dadd( 63.0135, 185.082, -21.7879, 0.48 ) }
    dend_60 { pt3dadd( 63.1868, 185.517, -21.7395, 0.36 ) }
    dend_60 { pt3dadd( 63.3954, 186.198, -21.6972, 0.36 ) }
    dend_60 { pt3dadd( 63.5421, 186.879, -21.7173, 0.36 ) }
    dend_60 { pt3dadd( 63.6553, 187.64, -21.8314, 1.8 ) }
    dend_60 { pt3dadd( 63.7396, 188.4, -22.0137, 3.0 ) }
    dend_60 { pt3dadd( 63.7985, 189.153, -22.2444, 3.25 ) }
    dend_60 { pt3dadd( 63.8731, 191.01, -22.9684, 1.8 ) }
    dend_60 { pt3dadd( 63.8865, 191.789, -23.3231, 0.48 ) }
    dend_60 { pt3dadd( 63.895, 192.254, -23.5566, 0.48 ) }
    dend_60 { pt3dadd( 63.9114, 192.575, -23.7224, 0.72 ) }
    dend_60 { pt3dadd( 63.9547, 192.998, -23.9123, 0.48 ) }
    dend_60 { pt3dadd( 64.1141, 193.814, -24.1545, 0.36 ) }
    dend_60 { pt3dadd( 64.3112, 194.475, -24.1914, 0.36 ) }
    dend_60 { pt3dadd( 64.4678, 194.892, -24.1798, 0.72 ) }
    dend_60 { pt3dadd( 64.7748, 195.628, -24.1136, 1.08 ) }
    dend_60 { pt3dadd( 65.034, 196.225, -24.0322, 1.2 ) }
    dend_60 { pt3dadd( 65.4365, 197.142, -23.8493, 0.72 ) }
    dend_60 { pt3dadd( 65.8124, 198.005, -23.631, 0.36 ) }
    dend_60 { pt3dadd( 66.0534, 198.576, -23.4812, 0.36 ) }
    dend_60 { pt3dadd( 66.3539, 199.345, -23.2642, 0.36 ) }
    dend_60 { pt3dadd( 66.6094, 200.058, -23.0564, 0.36 ) }
    dend_60 { pt3dadd( 66.8771, 200.875, -22.8537, 1.92 ) }
    dend_60 { pt3dadd( 67.0201, 201.376, -22.7463, 2.76 ) }
    dend_60 { pt3dadd( 67.0612, 201.536, -22.7182, 3.12 ) }
    dend_60 { pt3dadd( 67.2649, 202.336, -22.6009, 2.76 ) }
    dend_60 { pt3dadd( 67.3353, 202.601, -22.5739, 2.76 ) }
    dend_60 { pt3dadd( 67.6086, 203.597, -22.4947, 0.48 ) }
    dend_60 { pt3dadd( 67.8147, 204.347, -22.4604, 0.48 ) }
    dend_60 { pt3dadd( 67.9254, 204.765, -22.4432, 0.96 ) }
    dend_60 { pt3dadd( 68.0268, 205.156, -22.4296, 0.6 ) }
    dend_60 { pt3dadd( 68.1531, 205.657, -22.4176, 0.48 ) }
    dend_60 { pt3dadd( 68.2595, 206.084, -22.3955, 0.36 ) }
    dend_60 { pt3dadd( 68.5173, 207.088, -22.2733, 0.36 ) }
    dend_60 { pt3dadd( 68.6319, 207.508, -22.2157, 0.48 ) }
    dend_60 { pt3dadd( 68.7564, 207.923, -22.1623, 0.36 ) }
    dend_60 { pt3dadd( 68.9173, 208.409, -22.0935, 0.36 ) }
    dend_60 { pt3dadd( 69.0404, 208.768, -22.0355, 0.36 ) }
    dend_60 { pt3dadd( 69.2723, 209.41, -21.9599, 1.2 ) }
    dend_60 { pt3dadd( 69.4147, 209.815, -21.9356, 2.04 ) }
    dend_60 { pt3dadd( 69.5707, 210.292, -21.9043, 2.16 ) }
    dend_60 { pt3dadd( 69.7478, 210.897, -21.8665, 1.68 ) }
    dend_60 { pt3dadd( 69.923, 211.57, -21.8297, 0.48 ) }
    dend_60 { pt3dadd( 70.1162, 212.346, -21.7942, 0.36 ) }
    dend_60 { pt3dadd( 70.4813, 213.86, -21.7252, 0.36 ) }
    dend_60 { pt3dadd( 70.6484, 214.55, -21.6846, 1.2 ) }
    dend_60 { pt3dadd( 70.7375, 214.899, -21.6663, 0.84 ) }
    dend_60 { pt3dadd( 70.8757, 215.396, -21.6487, 0.48 ) }
    dend_60 { pt3dadd( 71.1612, 216.285, -21.6396, 0.36 ) }
    dend_60 { pt3dadd( 71.2995, 216.662, -21.6642, 0.36 ) }
    dend_60 { pt3dadd( 71.4856, 217.086, -21.7514, 1.44 ) }
    dend_60 { pt3dadd( 71.7611, 217.691, -21.9221, 1.92 ) }
    dend_60 { pt3dadd( 71.9353, 218.068, -22.0344, 2.04 ) }
    dend_60 { pt3dadd( 72.2291, 218.702, -22.2217, 2.04 ) }
    dend_60 { pt3dadd( 72.6347, 219.628, -22.4352, 0.48 ) }
    dend_60 { pt3dadd( 73.0572, 220.669, -22.599, 0.48 ) }
    dend_60 { pt3dadd( 73.2103, 221.069, -22.6296, 0.6 ) }
    dend_60 { pt3dadd( 73.3037, 221.336, -22.6295, 0.48 ) }
    dend_60 { pt3dadd( 73.5624, 222.115, -22.594, 0.48 ) }
    dend_60 { pt3dadd( 73.8867, 223.205, -22.4747, 2.64 ) }
    dend_60 { pt3dadd( 74.0679, 223.885, -22.3584, 3.49 ) }
    dend_60 { pt3dadd( 74.1394, 224.18, -22.3046, 3.49 ) }
    dend_60 { pt3dadd( 74.24, 224.608, -22.228, 3.49 ) }
    dend_60 { pt3dadd( 74.5144, 225.8, -22.0282, 0.48 ) }
    dend_60 { pt3dadd( 74.6929, 226.581, -21.9013, 0.72 ) }
    dend_60 { pt3dadd( 74.8293, 227.137, -21.8207, 0.48 ) }
    dend_60 { pt3dadd( 74.9444, 227.556, -21.7561, 0.48 ) }
    dend_60 { pt3dadd( 75.1049, 228.098, -21.6721, 1.32 ) }
    dend_60 { pt3dadd( 75.2232, 228.426, -21.62, 1.56 ) }
    dend_60 { pt3dadd( 75.4352, 228.9, -21.5407, 1.56 ) }
    dend_60 { pt3dadd( 75.6807, 229.36, -21.4798, 0.48 ) }
    dend_60 { pt3dadd( 75.9942, 229.904, -21.4246, 0.48 ) }
    dend_60 { pt3dadd( 76.225, 230.304, -21.3804, 0.6 ) }
    dend_60 { pt3dadd( 76.5591, 230.914, -21.3095, 0.6 ) }
    dend_60 { pt3dadd( 76.8218, 231.421, -21.2492, 0.36 ) }
    dend_60 { pt3dadd( 77.0246, 231.836, -21.2078, 0.36 ) }
    dend_60 { pt3dadd( 77.262, 232.398, -21.1667, 0.36 ) }
    dend_60 { pt3dadd( 77.417, 232.855, -21.1571, 1.32 ) }
    dend_60 { pt3dadd( 77.5283, 233.278, -21.1566, 1.56 ) }
    dend_60 { pt3dadd( 77.5908, 233.622, -21.1581, 1.32 ) }
    dend_60 { pt3dadd( 77.653, 234.048, -21.1601, 0.36 ) }
    dend_60 { pt3dadd( 77.7602, 234.668, -21.1535, 0.36 ) }
    dend_60 { pt3dadd( 77.8728, 235.16, -21.1439, 1.2 ) }
    dend_60 { pt3dadd( 78.0279, 235.671, -21.1372, 1.2 ) }
    dend_60 { pt3dadd( 78.2375, 236.265, -21.1336, 0.36 ) }
    dend_60 { pt3dadd( 78.4618, 236.832, -21.1305, 0.36 ) }
    dend_60 { pt3dadd( 78.7131, 237.41, -21.1235, 0.48 ) }
    dend_60 { pt3dadd( 78.9156, 237.838, -21.1341, 0.48 ) }
    dend_60 { pt3dadd( 79.2036, 238.436, -21.1699, 0.48 ) }
    dend_60 { pt3dadd( 79.2808, 238.593, -21.1885, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( 79.4759, 238.983, -21.2421, 0.72 ) }
    dend_60 { pt3dadd( 79.7497, 239.533, -21.3119, 0.72 ) }
    dend_60 { pt3dadd( 79.8904, 239.83, -21.337, 0.48 ) }
    dend_60 { pt3dadd( 80.1182, 240.31, -21.3535, 0.48 ) }
    dend_60 { pt3dadd( 80.3874, 240.879, -21.3448, 1.08 ) }
    dend_60 { pt3dadd( 80.6254, 241.369, -21.3115, 1.68 ) }
    dend_60 { pt3dadd( 80.8486, 241.819, -21.2695, 1.68 ) }
    dend_60 { pt3dadd( 81.0905, 242.314, -21.224, 0.84 ) }
    dend_60 { pt3dadd( 81.2479, 242.63, -21.2064, 0.72 ) }
    dend_60 { pt3dadd( 81.5655, 243.251, -21.2441, 0.72 ) }
    dend_60 { pt3dadd( 81.918, 243.928, -21.3474, 1.32 ) }
    dend_60 { pt3dadd( 82.126, 244.325, -21.4342, 2.4 ) }
    dend_60 { pt3dadd( 82.4273, 244.902, -21.5904, 2.76 ) }
    dend_60 { pt3dadd( 82.7209, 245.479, -21.7605, 2.04 ) }
    dend_60 { pt3dadd( 83.2193, 246.488, -22.0584, 0.48 ) }
    dend_60 { pt3dadd( 83.4484, 246.966, -22.1961, 0.48 ) }
    dend_60 { pt3dadd( 83.63, 247.36, -22.3005, 0.6 ) }
    dend_60 { pt3dadd( 83.7337, 247.589, -22.345, 0.48 ) }
    dend_60 { pt3dadd( 84.1536, 248.537, -22.445, 0.48 ) }
    dend_60 { pt3dadd( 84.3221, 248.942, -22.4508, 0.72 ) }
    dend_60 { pt3dadd( 84.4984, 249.35, -22.4181, 1.08 ) }
    dend_60 { pt3dadd( 84.6437, 249.67, -22.3857, 0.72 ) }
    dend_60 { pt3dadd( 84.8434, 250.092, -22.3247, 0.48 ) }
    dend_60 { pt3dadd( 85.0307, 250.486, -22.275, 0.24 ) }
    dend_60 { pt3dadd( 85.2328, 250.901, -22.2287, 0.24 ) }
    dend_60 { pt3dadd( 85.7278, 251.945, -22.1538, 3.12 ) }
    dend_60 { pt3dadd( 85.8747, 252.254, -22.14, 3.37 ) }
    dend_60 { pt3dadd( 86.14, 252.816, -22.1273, 3.0 ) }
    dend_60 { pt3dadd( 86.5984, 253.877, -22.1266, 0.48 ) }
    dend_60 { pt3dadd( 86.8934, 254.644, -22.1424, 0.48 ) }
    dend_60 { pt3dadd( 87.1398, 255.35, -22.1563, 0.84 ) }
    dend_60 { pt3dadd( 87.299, 255.834, -22.1623, 0.48 ) }
    dend_60 { pt3dadd( 87.5549, 256.581, -22.124, 0.48 ) }
    dend_60 { pt3dadd( 87.8689, 257.455, -22.0204, 0.48 ) }
    dend_60 { pt3dadd( 87.9996, 257.8, -21.9449, 0.48 ) }
    dend_60 { pt3dadd( 88.2405, 258.425, -21.7745, 0.48 ) }
    dend_60 { pt3dadd( 88.3962, 258.8, -21.6534, 0.96 ) }
    dend_60 { pt3dadd( 88.7208, 259.513, -21.4409, 1.56 ) }
    dend_60 { pt3dadd( 88.864, 259.782, -21.3567, 1.56 ) }
    dend_60 { pt3dadd( 89.171, 260.272, -21.2512, 0.48 ) }
    dend_60 { pt3dadd( 89.2634, 260.42, -21.2431, 0.36 ) }
    dend_60 { pt3dadd( 89.5154, 260.903, -21.284, 0.36 ) }
    dend_60 { pt3dadd( 89.8635, 261.644, -21.3905, 1.8 ) }
    dend_60 { pt3dadd( 90.0894, 262.155, -21.4808, 2.64 ) }
    dend_60 { pt3dadd( 90.5006, 263.121, -21.6375, 1.56 ) }
    dend_60 { pt3dadd( 90.7943, 263.82, -21.7295, 0.36 ) }
    dend_60 { pt3dadd( 91.1251, 264.604, -21.8175, 0.48 ) }
    dend_60 { pt3dadd( 91.5209, 265.575, -21.8681, 0.48 ) }
    dend_60 { pt3dadd( 91.6515, 265.902, -21.8835, 0.48 ) }
    dend_60 { pt3dadd( 91.8594, 266.391, -21.9015, 1.32 ) }
    dend_60 { pt3dadd( 91.9824, 266.646, -21.8922, 1.68 ) }
    dend_60 { pt3dadd( 92.1673, 266.981, -21.8471, 1.92 ) }
    dend_60 { pt3dadd( 92.6541, 267.831, -21.7097, 0.84 ) }
    dend_60 { pt3dadd( 93.0876, 268.693, -21.5649, 0.48 ) }
    dend_60 { pt3dadd( 93.4062, 269.417, -21.429, 0.48 ) }
    dend_60 { pt3dadd( 93.5567, 269.815, -21.3521, 0.48 ) }
    dend_60 { pt3dadd( 93.8391, 270.699, -21.1889, 0.48 ) }
    dend_60 { pt3dadd( 94.0628, 271.57, -21.0022, 0.72 ) }
    dend_60 { pt3dadd( 94.1859, 272.152, -20.8667, 1.32 ) }
    dend_60 { pt3dadd( 94.2873, 272.731, -20.7156, 0.84 ) }
    dend_60 { pt3dadd( 94.3474, 273.151, -20.602, 0.36 ) }
    dend_60 { pt3dadd( 94.4277, 273.651, -20.4672, 0.36 ) }
    dend_60 { pt3dadd( 94.5679, 274.295, -20.2937, 0.84 ) }
    dend_60 { pt3dadd( 94.673, 274.63, -20.184, 0.36 ) }
    dend_60 { pt3dadd( 94.9373, 275.324, -19.9224, 0.36 ) }
    dend_60 { pt3dadd( 95.2861, 276.115, -19.6116, 0.84 ) }
    dend_60 { pt3dadd( 95.4469, 276.445, -19.4738, 0.84 ) }
    dend_60 { pt3dadd( 95.6437, 276.817, -19.3301, 0.36 ) }
    dend_60 { pt3dadd( 96.0782, 277.599, -19.0749, 0.36 ) }
    dend_60 { pt3dadd( 96.3311, 278.071, -18.9463, 1.2 ) }
    dend_60 { pt3dadd( 96.6093, 278.625, -18.8363, 2.16 ) }
    dend_60 { pt3dadd( 96.6896, 278.803, -18.8188, 2.28 ) }
    dend_60 { pt3dadd( 97.0907, 279.733, -18.7625, 0.6 ) }
    dend_60 { pt3dadd( 97.2671, 280.156, -18.7412, 0.36 ) }
    dend_60 { pt3dadd( 97.4818, 280.657, -18.7137, 0.36 ) }
    dend_60 { pt3dadd( 97.6186, 280.941, -18.6961, 0.36 ) }
    dend_60 { pt3dadd( 97.7768, 281.243, -18.6636, 0.36 ) }
    dend_60 { pt3dadd( 98.2346, 282.056, -18.5425, 0.36 ) }
    dend_60 { pt3dadd( 98.5651, 282.615, -18.4431, 1.08 ) }
    dend_60 { pt3dadd( 98.9286, 283.211, -18.3386, 1.56 ) }
    dend_60 { pt3dadd( 99.3609, 283.899, -18.2274, 0.72 ) }
    dend_60 { pt3dadd( 99.5067, 284.144, -18.1961, 0.48 ) }
    dend_60 { pt3dadd( 99.8051, 284.696, -18.1452, 0.48 ) }
    dend_60 { pt3dadd( 100.103, 285.338, -18.1126, 1.68 ) }
    dend_60 { pt3dadd( 100.318, 285.825, -18.1166, 2.52 ) }
    dend_60 { pt3dadd( 100.571, 286.399, -18.1611, 1.92 ) }
    dend_60 { pt3dadd( 100.935, 287.187, -18.2598, 0.72 ) }
    dend_60 { pt3dadd( 101.168, 287.642, -18.3387, 0.6 ) }
    dend_60 { pt3dadd( 101.548, 288.313, -18.4923, 0.6 ) }
    dend_60 { pt3dadd( 102.084, 289.169, -18.7123, 0.6 ) }
    dend_60 { pt3dadd( 102.605, 289.966, -18.9272, 1.44 ) }
    dend_60 { pt3dadd( 102.84, 290.317, -19.0221, 1.92 ) }
    dend_60 { pt3dadd( 103.299, 291.0, -19.1861, 0.96 ) }
    dend_60 { pt3dadd( 103.618, 291.495, -19.2813, 0.36 ) }
    dend_60 { pt3dadd( 103.952, 292.075, -19.3367, 0.36 ) }
    dend_60 { pt3dadd( 104.196, 292.564, -19.3291, 0.36 ) }
    dend_60 { pt3dadd( 104.417, 293.037, -19.2765, 0.72 ) }
    dend_60 { pt3dadd( 104.695, 293.62, -19.2549, 0.36 ) }
    dend_60 { pt3dadd( 104.945, 294.114, -19.2623, 0.24 ) }
    dend_60 { pt3dadd( 105.382, 294.9, -19.3195, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( 105.473, 295.049, -19.343, 2.04 ) }
    dend_60 { pt3dadd( 105.885, 295.667, -19.4728, 1.92 ) }
    dend_60 { pt3dadd( 106.809, 296.967, -19.8024, 0.48 ) }
    dend_60 { pt3dadd( 107.193, 297.486, -19.9476, 0.48 ) }
    dend_60 { pt3dadd( 107.58, 298.003, -20.0962, 0.72 ) }
    dend_60 { pt3dadd( 108.115, 298.738, -20.2998, 0.84 ) }
    dend_60 { pt3dadd( 108.721, 299.63, -20.5254, 0.36 ) }
    dend_60 { pt3dadd( 108.94, 299.981, -20.5985, 0.24 ) }
    dend_60 { pt3dadd( 109.238, 300.533, -20.6636, 1.2 ) }
    dend_60 { pt3dadd( 109.32, 300.709, -20.6855, 1.68 ) }
    dend_60 { pt3dadd( 109.573, 301.348, -20.7646, 1.56 ) }
    dend_60 { pt3dadd( 109.795, 302.015, -20.8377, 0.36 ) }
    dend_60 { pt3dadd( 109.929, 302.511, -20.8839, 0.36 ) }
    dend_60 { pt3dadd( 110.156, 303.452, -20.9446, 0.36 ) }
    dend_60 { pt3dadd( 110.253, 303.873, -20.9646, 1.32 ) }
    dend_60 { pt3dadd( 110.349, 304.301, -20.9761, 1.8 ) }
    dend_60 { pt3dadd( 110.429, 304.645, -20.9768, 1.68 ) }
    dend_60 { pt3dadd( 110.606, 305.403, -20.9549, 0.48 ) }
    dend_60 { pt3dadd( 110.86, 306.415, -20.9242, 0.48 ) }
    dend_60 { pt3dadd( 111.016, 306.998, -20.9057, 1.8 ) }
    dend_60 { pt3dadd( 111.139, 307.499, -20.8913, 2.4 ) }
    dend_60 { pt3dadd( 111.213, 307.851, -20.8671, 1.92 ) }
    dend_60 { pt3dadd( 111.355, 308.691, -20.7582, 0.6 ) }
    dend_60 { pt3dadd( 111.387, 308.924, -20.7085, 0.6 ) }
    dend_60 { pt3dadd( 111.466, 309.672, -20.5043, 0.6 ) }
    dend_60 { pt3dadd( 111.536, 310.375, -20.2835, 0.6 ) }
    dend_60 { pt3dadd( 111.63, 311.342, -19.9848, 0.6 ) }
    dend_60 { pt3dadd( 111.731, 312.354, -19.699, 0.6 ) }
    dend_60 { pt3dadd( 111.825, 313.194, -19.4943, 1.56 ) }
    dend_60 { pt3dadd( 111.894, 313.706, -19.4079, 2.04 ) }
    dend_60 { pt3dadd( 111.983, 314.252, -19.3672, 1.68 ) }
    dend_60 { pt3dadd( 112.13, 315.005, -19.3805, 0.84 ) }
    dend_60 { pt3dadd( 112.261, 315.646, -19.4609, 0.48 ) }
    dend_60 { pt3dadd( 112.439, 316.655, -19.6465, 0.48 ) }
    dend_60 { pt3dadd( 112.597, 317.641, -19.8473, 0.6 ) }
    dend_60 { pt3dadd( 112.701, 318.383, -19.9864, 1.32 ) }
    dend_60 { pt3dadd( 112.772, 318.977, -20.0841, 1.44 ) }
    dend_60 { pt3dadd( 112.848, 319.709, -20.1796, 0.48 ) }
    dend_60 { pt3dadd( 112.986, 321.061, -20.3247, 0.48 ) }
    dend_60 { pt3dadd( 113.037, 321.495, -20.3619, 1.32 ) }
    dend_60 { pt3dadd( 113.13, 322.185, -20.3972, 2.04 ) }
    dend_60 { pt3dadd( 113.216, 322.701, -20.4189, 1.68 ) }
    dend_60 { pt3dadd( 113.357, 323.417, -20.4515, 0.6 ) }
    dend_60 { pt3dadd( 113.526, 324.136, -20.4894, 0.48 ) }
    dend_60 { pt3dadd( 113.736, 324.904, -20.5432, 0.48 ) }
    dend_60 { pt3dadd( 113.873, 325.401, -20.5829, 0.48 ) }
    dend_60 { pt3dadd( 114.072, 326.108, -20.6425, 0.72 ) }
    dend_60 { pt3dadd( 114.212, 326.603, -20.682, 0.72 ) }
    dend_60 { pt3dadd( 114.33, 327.003, -20.7055, 0.36 ) }
    dend_60 { pt3dadd( 114.494, 327.59, -20.7356, 0.36 ) }
    dend_60 { pt3dadd( 114.65, 328.083, -20.7501, 1.8 ) }
    dend_60 { pt3dadd( 114.842, 328.562, -20.7476, 2.4 ) }
    dend_60 { pt3dadd( 115.13, 329.197, -20.7194, 2.4 ) }
    dend_60 { pt3dadd( 115.49, 329.938, -20.6908, 0.48 ) }
    dend_60 { pt3dadd( 115.577, 330.114, -20.6844, 0.48 ) }
    dend_60 { pt3dadd( 115.904, 330.773, -20.7021, 0.48 ) }
    dend_60 { pt3dadd( 116.208, 331.383, -20.7575, 0.48 ) }
    dend_60 { pt3dadd( 116.502, 332.023, -20.8739, 0.48 ) }
    dend_60 { pt3dadd( 116.646, 332.398, -20.972, 1.08 ) }
    dend_60 { pt3dadd( 116.738, 332.762, -21.0851, 1.92 ) }
    dend_60 { pt3dadd( 116.834, 333.396, -21.2796, 2.16 ) }
    dend_60 { pt3dadd( 116.861, 333.746, -21.3749, 2.16 ) }
    dend_60 { pt3dadd( 116.91, 334.565, -21.5645, 0.72 ) }
    dend_60 { pt3dadd( 116.946, 334.943, -21.6233, 0.48 ) }
    dend_60 { pt3dadd( 117.041, 335.681, -21.6799, 0.48 ) }
    dend_60 { pt3dadd( 117.159, 336.367, -21.6979, 0.48 ) }
    dend_60 { pt3dadd( 117.374, 337.399, -21.6483, 0.48 ) }
    dend_60 { pt3dadd( 117.485, 337.821, -21.6108, 0.48 ) }
    dend_60 { pt3dadd( 117.673, 338.418, -21.5294, 1.32 ) }
    dend_60 { pt3dadd( 117.876, 338.987, -21.4419, 1.92 ) }
    dend_60 { pt3dadd( 118.13, 339.657, -21.2999, 1.56 ) }
    dend_60 { pt3dadd( 118.34, 340.228, -21.1544, 0.36 ) }
    dend_60 { pt3dadd( 118.602, 340.974, -20.9248, 0.36 ) }
    dend_60 { pt3dadd( 118.799, 341.541, -20.7339, 0.6 ) }
    dend_60 { pt3dadd( 118.988, 342.08, -20.5309, 0.6 ) }
    dend_60 { pt3dadd( 119.258, 342.824, -20.2246, 0.24 ) }
    dend_60 { pt3dadd( 119.44, 343.278, -20.0313, 0.24 ) }
    dend_60 { pt3dadd( 119.732, 343.926, -19.7762, 1.92 ) }
    dend_60 { pt3dadd( 119.893, 344.257, -19.6423, 2.4 ) }
    dend_60 { pt3dadd( 120.272, 344.973, -19.3709, 1.92 ) }
    dend_60 { pt3dadd( 120.634, 345.655, -19.1468, 0.48 ) }
    dend_60 { pt3dadd( 120.967, 346.302, -18.9749, 0.48 ) }
    dend_60 { pt3dadd( 121.344, 347.096, -18.7866, 0.48 ) }
    dend_60 { pt3dadd( 121.654, 347.827, -18.6439, 1.44 ) }
    dend_60 { pt3dadd( 121.968, 348.634, -18.5053, 2.04 ) }
    dend_60 { pt3dadd( 122.262, 349.442, -18.3897, 1.08 ) }
    dend_60 { pt3dadd( 122.47, 350.015, -18.3107, 0.6 ) }
    dend_60 { pt3dadd( 122.71, 350.661, -18.2318, 0.48 ) }
    dend_60 { pt3dadd( 123.014, 351.375, -18.1573, 0.48 ) }
    dend_60 { pt3dadd( 123.216, 351.792, -18.126, 0.48 ) }
    dend_60 { pt3dadd( 123.428, 352.203, -18.0935, 0.96 ) }
    dend_60 { pt3dadd( 123.747, 352.806, -18.0461, 1.44 ) }
    dend_60 { pt3dadd( 124.101, 353.494, -17.9977, 0.84 ) }
    dend_60 { pt3dadd( 124.347, 353.995, -17.9657, 0.48 ) }
    dend_60 { pt3dadd( 124.741, 354.867, -17.9145, 0.48 ) }
    dend_60 { pt3dadd( 124.992, 355.516, -17.8707, 0.6 ) }
    dend_60 { pt3dadd( 125.231, 356.26, -17.8163, 0.72 ) }
    dend_60 { pt3dadd( 125.338, 356.683, -17.784, 0.12 ) }
    dend_60 { pt3dadd( 125.37, 356.853, -17.7555, 0.12 ) }
    dend_60 { pt3dadd( 125.455, 357.441, -17.6163, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( 125.535, 358.071, -17.4387, 2.28 ) }
    dend_60 { pt3dadd( 125.595, 358.563, -17.2897, 2.52 ) }
    dend_60 { pt3dadd( 125.641, 358.979, -17.1609, 2.52 ) }
    dend_60 { pt3dadd( 125.791, 360.438, -16.7351, 0.72 ) }
    dend_60 { pt3dadd( 125.934, 361.707, -16.4572, 0.72 ) }
    dend_60 { pt3dadd( 126.018, 362.385, -16.3183, 0.96 ) }
    dend_60 { pt3dadd( 126.077, 362.811, -16.2296, 0.6 ) }
    dend_60 { pt3dadd( 126.139, 363.236, -16.1312, 0.48 ) }
    dend_60 { pt3dadd( 126.279, 364.161, -15.9268, 0.48 ) }
    dend_60 { pt3dadd( 126.511, 365.469, -15.6863, 0.48 ) }
    dend_60 { pt3dadd( 126.71, 366.419, -15.4954, 0.48 ) }
    dend_60 { pt3dadd( 126.912, 367.213, -15.3346, 1.92 ) }
    dend_60 { pt3dadd( 127.217, 368.218, -15.1634, 0.96 ) }
    dend_60 { pt3dadd( 127.517, 369.056, -15.0441, 0.48 ) }
    dend_60 { pt3dadd( 128.14, 370.573, -14.892, 0.48 ) }
    dend_60 { pt3dadd( 128.592, 371.575, -14.8252, 0.48 ) }
    dend_60 { pt3dadd( 129.049, 372.513, -14.8341, 0.48 ) }
    dend_60 { pt3dadd( 129.507, 373.376, -14.8836, 1.2 ) }
    dend_60 { pt3dadd( 129.813, 373.909, -14.9275, 1.92 ) }
    dend_60 { pt3dadd( 130.303, 374.706, -14.9977, 1.44 ) }
    dend_60 { pt3dadd( 130.615, 375.224, -15.0458, 1.08 ) }
    dend_60 { pt3dadd( 130.824, 375.608, -15.075, 0.48 ) }
    dend_60 { pt3dadd( 131.093, 376.165, -15.1002, 0.96 ) }
    dend_60 { pt3dadd( 131.344, 376.742, -15.0998, 0.96 ) }
    dend_60 { pt3dadd( 131.519, 377.173, -15.0965, 0.48 ) }
    dend_60 { pt3dadd( 132.043, 378.464, -15.0452, 0.48 ) }
    dend_60 { pt3dadd( 132.243, 378.956, -15.0216, 0.6 ) }
    dend_60 { pt3dadd( 132.374, 379.271, -14.9998, 0.48 ) }
    dend_60 { pt3dadd( 132.673, 380.008, -14.9218, 0.48 ) }
    dend_60 { pt3dadd( 133.076, 381.058, -14.777, 0.48 ) }
    dend_60 { pt3dadd( 133.293, 381.676, -14.6822, 0.96 ) }
    dend_60 { pt3dadd( 133.45, 382.169, -14.5956, 1.2 ) }
    dend_60 { pt3dadd( 133.613, 382.748, -14.4912, 0.6 ) }
    dend_60 { pt3dadd( 133.719, 383.208, -14.4223, 0.36 ) }
    dend_60 { pt3dadd( 133.904, 384.306, -14.2957, 0.36 ) }
    dend_60 { pt3dadd( 133.978, 385.032, -14.2469, 0.72 ) }
    dend_60 { pt3dadd( 134.01, 385.6, -14.2455, 1.44 ) }
    dend_60 { pt3dadd( 134.031, 386.218, -14.2577, 2.4 ) }
    dend_60 { pt3dadd( 134.062, 387.186, -14.293, 1.56 ) }
    dend_60 { pt3dadd( 134.081, 387.738, -14.3131, 0.48 ) }
    dend_60 { pt3dadd( 134.147, 389.144, -14.3454, 0.48 ) }
    dend_60 { pt3dadd( 134.202, 389.825, -14.3177, 0.6 ) }
    dend_60 { pt3dadd( 134.249, 390.199, -14.2735, 0.48 ) }
    dend_60 { pt3dadd( 134.386, 390.96, -14.0944, 0.48 ) }
    dend_60 { pt3dadd( 134.516, 391.42, -13.932, 0.48 ) }
    dend_60 { pt3dadd( 134.712, 391.922, -13.6959, 0.84 ) }
    dend_60 { pt3dadd( 135.19, 392.893, -13.1339, 0.96 ) }
    dend_60 { pt3dadd( 135.542, 393.516, -12.7451, 0.48 ) }
    dend_60 { pt3dadd( 135.834, 393.993, -12.4342, 0.36 ) }
    dend_60 { pt3dadd( 136.347, 394.78, -11.917, 0.36 ) }
    dend_60 { pt3dadd( 136.805, 395.469, -11.4975, 0.96 ) }
    dend_60 { pt3dadd( 136.898, 395.61, -11.4098, 1.08 ) }
    dend_60 { pt3dadd( 137.2, 396.086, -11.1194, 0.48 ) }
    dend_60 { pt3dadd( 137.557, 396.695, -10.6977, 0.48 ) }
    dend_60 { pt3dadd( 137.869, 397.271, -10.2654, 0.48 ) }
    dend_60 { pt3dadd( 138.124, 397.781, -9.86407, 0.48 ) }
    dend_60 { pt3dadd( 138.488, 398.527, -9.32639, 0.48 ) }
    dend_60 { pt3dadd( 138.904, 399.402, -8.75021, 0.48 ) }
    dend_60 { pt3dadd( 139.382, 400.486, -8.12375, 1.68 ) }
    dend_60 { pt3dadd( 139.549, 400.875, -7.92961, 2.4 ) }
    dend_60 { pt3dadd( 139.691, 401.21, -7.78423, 2.64 ) }
    dend_60 { pt3dadd( 140.13, 402.262, -7.47683, 0.24 ) }
    dend_60 { pt3dadd( 140.415, 403.077, -7.40353, 0.24 ) }
    dend_60 { pt3dadd( 140.611, 403.849, -7.44202, 0.24 ) }
    dend_60 { pt3dadd( 140.629, 403.934, -7.45302, 0.72 ) }
    dend_60 { pt3dadd( 140.738, 404.529, -7.53683, 0.84 ) }
    dend_60 { pt3dadd( 140.855, 405.312, -7.65567, 0.24 ) }
    dend_60 { pt3dadd( 140.99, 406.58, -7.86339, 0.24 ) }
    dend_60 { pt3dadd( 141.089, 407.624, -8.06174, 0.24 ) }
    dend_60 { pt3dadd( 141.112, 407.88, -8.11379, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 26.9, 101.462, -18.9635, 0.12 ) }
    dend_59 { pt3dadd( 26.3226, 101.912, -19.592, 0.12 ) }
    dend_59 { pt3dadd( 26.216, 101.995, -19.705, 0.12 ) }
    dend_59 { pt3dadd( 25.8795, 102.262, -20.0385, 1.2 ) }
    dend_59 { pt3dadd( 25.5644, 102.502, -20.3352, 1.44 ) }
    dend_59 { pt3dadd( 23.8097, 103.82, -21.8884, 0.36 ) }
    dend_59 { pt3dadd( 23.4366, 104.115, -22.2066, 0.36 ) }
    dend_59 { pt3dadd( 23.2322, 104.289, -22.3898, 1.8 ) }
    dend_59 { pt3dadd( 22.9487, 104.551, -22.6379, 2.16 ) }
    dend_59 { pt3dadd( 21.8694, 105.665, -23.55, 0.36 ) }
    dend_59 { pt3dadd( 21.5146, 106.068, -23.8539, 0.36 ) }
    dend_59 { pt3dadd( 21.1631, 106.53, -24.1249, 1.32 ) }
    dend_59 { pt3dadd( 20.8272, 106.991, -24.4412, 0.24 ) }
    dend_59 { pt3dadd( 20.6378, 107.275, -24.6488, 0.24 ) }
    dend_59 { pt3dadd( 20.1724, 108.031, -25.1884, 0.6 ) }
    dend_59 { pt3dadd( 19.6195, 109.034, -25.8236, 1.68 ) }
    dend_59 { pt3dadd( 19.4532, 109.334, -26.0002, 2.04 ) }
    dend_59 { pt3dadd( 18.6868, 110.632, -26.7327, 0.36 ) }
    dend_59 { pt3dadd( 18.4103, 111.107, -26.9616, 0.36 ) }
    dend_59 { pt3dadd( 18.1077, 111.664, -27.1715, 1.56 ) }
    dend_59 { pt3dadd( 17.8529, 112.194, -27.3142, 0.36 ) }
    dend_59 { pt3dadd( 17.5908, 112.793, -27.4122, 0.6 ) }
    dend_59 { pt3dadd( 17.437, 113.149, -27.4594, 0.12 ) }
    dend_59 { pt3dadd( 17.2187, 113.699, -27.483, 0.12 ) }
    dend_59 { pt3dadd( 17.1105, 113.992, -27.5147, 0.48 ) }
    dend_59 { pt3dadd( 16.8191, 114.922, -27.7177, 0.12 ) }
    dend_59 { pt3dadd( 16.7361, 115.23, -27.7996, 0.12 ) }
    dend_59 { pt3dadd( 16.6773, 115.494, -27.8713, 0.12 ) }
    dend_59 { pt3dadd( 16.6071, 115.865, -27.9623, 1.68 ) }
    dend_59 { pt3dadd( 16.5476, 116.324, -28.0602, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( 16.4888, 117.276, -28.2246, 0.24 ) }
    dend_59 { pt3dadd( 16.4863, 117.683, -28.2704, 0.24 ) }
    dend_59 { pt3dadd( 16.4861, 117.998, -28.3142, 0.48 ) }
    dend_59 { pt3dadd( 16.4813, 118.352, -28.384, 0.12 ) }
    dend_59 { pt3dadd( 16.4611, 119.324, -28.5926, 0.12 ) }
    dend_59 { pt3dadd( 16.4448, 120.208, -28.7813, 0.12 ) }
    dend_59 { pt3dadd( 16.4394, 120.779, -28.8926, 0.12 ) }
    dend_59 { pt3dadd( 16.4374, 121.609, -29.0445, 1.68 ) }
    dend_59 { pt3dadd( 16.4331, 122.617, -29.2003, 0.12 ) }
    dend_59 { pt3dadd( 16.431, 123.41, -29.2982, 0.12 ) }
    dend_59 { pt3dadd( 16.4309, 123.802, -29.3357, 1.32 ) }
    dend_59 { pt3dadd( 16.4528, 124.283, -29.355, 1.68 ) }
    dend_59 { pt3dadd( 16.5201, 124.934, -29.346, 0.12 ) }
    dend_59 { pt3dadd( 16.6297, 125.536, -29.2909, 0.12 ) }
    dend_59 { pt3dadd( 16.6899, 125.758, -29.2649, 0.36 ) }
    dend_59 { pt3dadd( 16.7841, 126.053, -29.2399, 0.12 ) }
    dend_59 { pt3dadd( 17.0347, 126.777, -29.1971, 0.12 ) }
    dend_59 { pt3dadd( 17.1948, 127.209, -29.1831, 1.56 ) }
    dend_59 { pt3dadd( 17.4411, 127.854, -29.1777, 0.12 ) }
    dend_59 { pt3dadd( 17.8976, 129.007, -29.1758, 0.12 ) }
    dend_59 { pt3dadd( 17.9864, 129.234, -29.1756, 0.48 ) }
    dend_59 { pt3dadd( 18.0667, 129.443, -29.1751, 0.12 ) }
    dend_59 { pt3dadd( 18.3637, 130.229, -29.1815, 0.12 ) }
    dend_59 { pt3dadd( 18.5506, 130.727, -29.1908, 1.2 ) }
    dend_59 { pt3dadd( 18.6839, 131.088, -29.2023, 1.2 ) }
    dend_59 { pt3dadd( 18.8168, 131.452, -29.2173, 0.12 ) }
    dend_59 { pt3dadd( 19.0421, 132.017, -29.2512, 0.12 ) }
    dend_59 { pt3dadd( 19.2019, 132.393, -29.2793, 1.32 ) }
    dend_59 { pt3dadd( 19.3605, 132.742, -29.3105, 1.68 ) }
    dend_59 { pt3dadd( 19.7502, 133.578, -29.3868, 0.12 ) }
    dend_59 { pt3dadd( 20.0424, 134.196, -29.4447, 0.12 ) }
    dend_59 { pt3dadd( 20.3314, 134.813, -29.4978, 0.12 ) }
    dend_59 { pt3dadd( 20.4333, 135.033, -29.5147, 0.12 ) }
    dend_59 { pt3dadd( 20.6211, 135.455, -29.5377, 0.12 ) }
    dend_59 { pt3dadd( 20.7448, 135.747, -29.5493, 1.2 ) }
    dend_59 { pt3dadd( 20.9495, 136.252, -29.5617, 0.12 ) }
    dend_59 { pt3dadd( 21.1979, 136.891, -29.5804, 0.12 ) }
    dend_59 { pt3dadd( 21.2801, 137.114, -29.5866, 0.36 ) }
    dend_59 { pt3dadd( 21.3678, 137.344, -29.595, 0.12 ) }
    dend_59 { pt3dadd( 21.6535, 138.055, -29.6289, 0.12 ) }
    dend_59 { pt3dadd( 21.7876, 138.365, -29.6478, 0.96 ) }
    dend_59 { pt3dadd( 21.9329, 138.677, -29.6688, 0.12 ) }
    dend_59 { pt3dadd( 22.2962, 139.353, -29.6816, 0.12 ) }
    dend_59 { pt3dadd( 22.4849, 139.69, -29.6834, 0.84 ) }
    dend_59 { pt3dadd( 22.6781, 140.024, -29.681, 0.36 ) }
    dend_59 { pt3dadd( 22.8029, 140.234, -29.6762, 0.12 ) }
    dend_59 { pt3dadd( 23.6062, 141.553, -29.6551, 0.12 ) }
    dend_59 { pt3dadd( 24.0529, 142.263, -29.6512, 0.24 ) }
    dend_59 { pt3dadd( 24.2369, 142.551, -29.6559, 0.48 ) }
    dend_59 { pt3dadd( 24.3659, 142.757, -29.6635, 0.12 ) }
    dend_59 { pt3dadd( 24.7277, 143.384, -29.7034, 0.12 ) }
    dend_59 { pt3dadd( 24.9354, 143.811, -29.7388, 0.84 ) }
    dend_59 { pt3dadd( 25.0214, 144.043, -29.767, 0.12 ) }
    dend_59 { pt3dadd( 25.2651, 144.763, -29.8825, 0.12 ) }
    dend_59 { pt3dadd( 25.2994, 144.874, -29.8956, 0.6 ) }
    dend_59 { pt3dadd( 25.3602, 145.242, -29.9421, 0.12 ) }
    dend_59 { pt3dadd( 25.3744, 145.727, -29.999, 0.12 ) }
    dend_59 { pt3dadd( 25.3561, 146.194, -30.0481, 1.08 ) }
    dend_59 { pt3dadd( 25.2992, 146.739, -30.1294, 1.32 ) }
    dend_59 { pt3dadd( 25.2136, 147.196, -30.2058, 1.68 ) }
    dend_59 { pt3dadd( 25.0335, 148.044, -30.3412, 0.12 ) }
    dend_59 { pt3dadd( 24.8964, 148.559, -30.4418, 0.12 ) }
    dend_59 { pt3dadd( 24.823, 148.776, -30.4844, 0.48 ) }
    dend_59 { pt3dadd( 24.6662, 149.178, -30.545, 0.12 ) }
    dend_59 { pt3dadd( 24.4393, 149.734, -30.5994, 0.12 ) }
    dend_59 { pt3dadd( 24.3105, 150.059, -30.6134, 0.48 ) }
    dend_59 { pt3dadd( 24.073, 150.627, -30.593, 0.12 ) }
    dend_59 { pt3dadd( 23.8126, 151.174, -30.5397, 0.12 ) }
    dend_59 { pt3dadd( 23.5649, 151.7, -30.457, 0.12 ) }
    dend_59 { pt3dadd( 23.4537, 151.952, -30.4018, 0.84 ) }
    dend_59 { pt3dadd( 23.3003, 152.301, -30.3168, 0.84 ) }
    dend_59 { pt3dadd( 23.2051, 152.509, -30.2535, 0.12 ) }
    dend_59 { pt3dadd( 22.9582, 153.022, -30.0522, 0.12 ) }
    dend_59 { pt3dadd( 22.7828, 153.346, -29.92, 0.12 ) }
    dend_59 { pt3dadd( 22.7457, 153.409, -29.8911, 0.48 ) }
    dend_59 { pt3dadd( 22.5979, 153.644, -29.77, 0.12 ) }
    dend_59 { pt3dadd( 22.4193, 153.907, -29.6228, 0.12 ) }
    dend_59 { pt3dadd( 22.1768, 154.22, -29.4014, 1.32 ) }
    dend_59 { pt3dadd( 22.0744, 154.325, -29.3045, 1.56 ) }
    dend_59 { pt3dadd( 21.7109, 154.644, -28.952, 0.12 ) }
    dend_59 { pt3dadd( 21.4625, 154.851, -28.7114, 0.12 ) }
    dend_59 { pt3dadd( 21.302, 154.979, -28.5151, 0.48 ) }
    dend_59 { pt3dadd( 21.0916, 155.138, -28.214, 0.12 ) }
    dend_59 { pt3dadd( 20.9731, 155.235, -28.0339, 0.12 ) }
    dend_59 { pt3dadd( 20.8345, 155.36, -27.825, 0.12 ) }
    dend_59 { pt3dadd( 20.7105, 155.494, -27.607, 0.72 ) }
    dend_59 { pt3dadd( 20.3519, 155.97, -26.921, 0.12 ) }
    dend_59 { pt3dadd( 20.2034, 156.203, -26.6314, 0.12 ) }
    dend_59 { pt3dadd( 19.9871, 156.589, -26.1766, 1.8 ) }
    dend_59 { pt3dadd( 19.8562, 156.854, -25.863, 2.04 ) }
    dend_59 { pt3dadd( 19.5611, 157.488, -25.1171, 0.24 ) }
    dend_59 { pt3dadd( 19.4521, 157.736, -24.8366, 0.24 ) }
    dend_59 { pt3dadd( 19.311, 158.075, -24.4962, 0.24 ) }
    dend_59 { pt3dadd( 19.1174, 158.598, -23.9967, 0.24 ) }
    dend_59 { pt3dadd( 19.0011, 158.936, -23.6801, 0.96 ) }
    dend_59 { pt3dadd( 18.9323, 159.14, -23.5047, 1.32 ) }
    dend_59 { pt3dadd( 18.8135, 159.487, -23.2397, 0.12 ) }
    dend_59 { pt3dadd( 18.6816, 159.868, -22.9534, 0.12 ) }
    dend_59 { pt3dadd( 18.4768, 160.436, -22.5636, 0.12 ) }
    dend_59 { pt3dadd( 18.3984, 160.67, -22.4366, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( 18.3404, 160.888, -22.3388, 0.96 ) }
    dend_59 { pt3dadd( 18.2789, 161.174, -22.2246, 0.24 ) }
    dend_59 { pt3dadd( 18.2103, 161.537, -22.1029, 0.24 ) }
    dend_59 { pt3dadd( 18.1714, 161.782, -22.0347, 0.12 ) }
    dend_59 { pt3dadd( 18.0798, 162.467, -21.8816, 0.12 ) }
    dend_59 { pt3dadd( 18.014, 162.994, -21.7853, 0.12 ) }
    dend_59 { pt3dadd( 17.9773, 163.316, -21.7337, 0.96 ) }
    dend_59 { pt3dadd( 17.9266, 163.599, -21.7189, 0.12 ) }
    dend_59 { pt3dadd( 17.8262, 163.998, -21.7262, 0.12 ) }
    dend_59 { pt3dadd( 17.7733, 164.163, -21.7349, 0.12 ) }
    dend_59 { pt3dadd( 17.7133, 164.319, -21.7563, 1.2 ) }
    dend_59 { pt3dadd( 17.6127, 164.576, -21.8036, 1.2 ) }
    dend_59 { pt3dadd( 17.2646, 165.559, -21.9962, 0.12 ) }
    dend_59 { pt3dadd( 17.1189, 165.954, -22.1094, 0.12 ) }
    dend_59 { pt3dadd( 16.9834, 166.358, -22.2463, 0.12 ) }
    dend_59 { pt3dadd( 16.8617, 166.758, -22.3886, 0.12 ) }
    dend_59 { pt3dadd( 16.7828, 167.041, -22.5006, 0.72 ) }
    dend_59 { pt3dadd( 16.7052, 167.36, -22.6145, 0.84 ) }
    dend_59 { pt3dadd( 16.5175, 168.345, -22.9109, 0.12 ) }
    dend_59 { pt3dadd( 16.3865, 168.988, -23.1319, 0.12 ) }
    dend_59 { pt3dadd( 16.3639, 169.086, -23.1633, 0.24 ) }
    dend_59 { pt3dadd( 16.2506, 169.496, -23.2826, 0.12 ) }
    dend_59 { pt3dadd( 15.9831, 170.361, -23.5482, 0.12 ) }
    dend_59 { pt3dadd( 15.9345, 170.503, -23.5886, 1.2 ) }
    dend_59 { pt3dadd( 15.6835, 171.156, -23.7533, 0.12 ) }
    dend_59 { pt3dadd( 15.4073, 171.736, -23.9333, 0.12 ) }
    dend_59 { pt3dadd( 15.1957, 172.166, -24.0807, 0.72 ) }
    dend_59 { pt3dadd( 14.9552, 172.585, -24.2524, 0.12 ) }
    dend_59 { pt3dadd( 14.7649, 172.852, -24.3842, 0.12 ) }
    dend_59 { pt3dadd( 14.4214, 173.268, -24.5874, 0.12 ) }
    dend_59 { pt3dadd( 14.1459, 173.569, -24.7358, 1.08 ) }
    dend_59 { pt3dadd( 13.9325, 173.776, -24.8555, 1.08 ) }
    dend_59 { pt3dadd( 13.4013, 174.261, -25.1266, 0.12 ) }
    dend_59 { pt3dadd( 12.997, 174.598, -25.3072, 0.12 ) }
    dend_59 { pt3dadd( 12.8797, 174.687, -25.3618, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 21.4671, 115.049, -70.5369, 0.12 ) }
    dend_57 { pt3dadd( 22.0768, 115.814, -71.0191, 0.12 ) }
    dend_57 { pt3dadd( 22.7582, 116.701, -71.5818, 2.64 ) }
    dend_57 { pt3dadd( 23.0196, 117.065, -71.8123, 2.16 ) }
    dend_57 { pt3dadd( 23.5395, 117.874, -72.2955, 0.24 ) }
    dend_57 { pt3dadd( 23.9858, 118.601, -72.6968, 0.24 ) }
    dend_57 { pt3dadd( 24.3134, 119.155, -72.9813, 0.24 ) }
    dend_57 { pt3dadd( 24.7939, 120.005, -73.3389, 0.96 ) }
    dend_57 { pt3dadd( 25.1026, 120.594, -73.5554, 0.12 ) }
    dend_57 { pt3dadd( 25.4881, 121.326, -73.7516, 0.12 ) }
    dend_57 { pt3dadd( 25.8034, 121.896, -73.8406, 0.24 ) }
    dend_57 { pt3dadd( 25.9991, 122.236, -73.8621, 0.24 ) }
    dend_57 { pt3dadd( 26.4332, 122.932, -73.8483, 1.68 ) }
    dend_57 { pt3dadd( 26.7697, 123.46, -73.8241, 2.52 ) }
    dend_57 { pt3dadd( 27.3389, 124.336, -73.8263, 1.56 ) }
    dend_57 { pt3dadd( 27.572, 124.709, -73.8482, 0.48 ) }
    dend_57 { pt3dadd( 28.2512, 125.927, -73.984, 0.48 ) }
    dend_57 { pt3dadd( 28.6116, 126.633, -74.0899, 1.32 ) }
    dend_57 { pt3dadd( 28.9828, 127.463, -74.2702, 0.96 ) }
    dend_57 { pt3dadd( 29.2425, 128.106, -74.4456, 0.12 ) }
    dend_57 { pt3dadd( 29.4796, 128.754, -74.6594, 0.12 ) }
    dend_57 { pt3dadd( 29.7619, 129.557, -74.9378, 1.8 ) }
    dend_57 { pt3dadd( 29.9529, 130.107, -75.1334, 1.92 ) }
    dend_57 { pt3dadd( 30.254, 130.935, -75.3928, 0.12 ) }
    dend_57 { pt3dadd( 30.5234, 131.591, -75.5299, 0.12 ) }
    dend_57 { pt3dadd( 30.605, 131.784, -75.5558, 0.48 ) }
    dend_57 { pt3dadd( 30.7934, 132.21, -75.5958, 0.12 ) }
    dend_57 { pt3dadd( 31.0016, 132.665, -75.6127, 0.12 ) }
    dend_57 { pt3dadd( 31.3226, 133.39, -75.5782, 0.72 ) }
    dend_57 { pt3dadd( 31.5918, 133.998, -75.4972, 0.12 ) }
    dend_57 { pt3dadd( 31.8583, 134.663, -75.4014, 0.12 ) }
    dend_57 { pt3dadd( 31.9656, 134.942, -75.3631, 0.48 ) }
    dend_57 { pt3dadd( 32.0641, 135.212, -75.3312, 0.12 ) }
    dend_57 { pt3dadd( 32.2929, 135.896, -75.2865, 0.12 ) }
    dend_57 { pt3dadd( 32.3825, 136.192, -75.285, 1.2 ) }
    dend_57 { pt3dadd( 32.5437, 136.738, -75.3018, 1.32 ) }
    dend_57 { pt3dadd( 32.7466, 137.304, -75.3136, 0.84 ) }
    dend_57 { pt3dadd( 32.8466, 137.55, -75.3149, 0.12 ) }
    dend_57 { pt3dadd( 33.0914, 138.099, -75.3023, 0.12 ) }
    dend_57 { pt3dadd( 33.1844, 138.277, -75.2945, 0.6 ) }
    dend_57 { pt3dadd( 33.3984, 138.641, -75.2781, 0.12 ) }
    dend_57 { pt3dadd( 33.9193, 139.43, -75.2417, 0.12 ) }
    dend_57 { pt3dadd( 34.1544, 139.761, -75.2325, 0.6 ) }
    dend_57 { pt3dadd( 34.3339, 140.029, -75.2778, 0.12 ) }
    dend_57 { pt3dadd( 34.6038, 140.436, -75.4037, 0.12 ) }
    dend_57 { pt3dadd( 35.0352, 141.132, -75.6663, 1.56 ) }
    dend_57 { pt3dadd( 35.1834, 141.391, -75.7755, 2.04 ) }
    dend_57 { pt3dadd( 35.4765, 141.94, -76.0166, 1.68 ) }
    dend_57 { pt3dadd( 36.2956, 143.486, -76.7698, 0.12 ) }
    dend_57 { pt3dadd( 36.6719, 144.228, -77.1697, 0.12 ) }
    dend_57 { pt3dadd( 36.8939, 144.713, -77.4542, 0.12 ) }
    dend_57 { pt3dadd( 37.0597, 145.119, -77.7042, 1.08 ) }
    dend_57 { pt3dadd( 37.1827, 145.437, -77.9023, 1.56 ) }
    dend_57 { pt3dadd( 37.4568, 146.209, -78.4215, 0.12 ) }
    dend_57 { pt3dadd( 37.8112, 147.143, -79.075, 0.12 ) }
    dend_57 { pt3dadd( 38.0371, 147.725, -79.5707, 0.48 ) }
    dend_57 { pt3dadd( 38.2634, 148.279, -80.1257, 0.48 ) }
    dend_57 { pt3dadd( 38.3858, 148.549, -80.4293, 0.48 ) }
    dend_57 { pt3dadd( 38.6989, 149.231, -81.3204, 1.44 ) }
    dend_57 { pt3dadd( 38.8409, 149.517, -81.7168, 1.92 ) }
    dend_57 { pt3dadd( 39.0903, 149.924, -82.3283, 1.44 ) }
    dend_57 { pt3dadd( 39.4181, 150.399, -83.1239, 0.48 ) }
    dend_57 { pt3dadd( 39.8243, 150.945, -84.0868, 0.36 ) }
    dend_57 { pt3dadd( 40.3597, 151.611, -85.2936, 0.12 ) }
    dend_57 { pt3dadd( 40.6839, 151.979, -85.9532, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( 40.9394, 152.267, -86.4741, 1.2 ) }
    dend_57 { pt3dadd( 41.6471, 153.006, -87.7737, 0.12 ) }
    dend_57 { pt3dadd( 41.8803, 153.218, -88.1657, 0.12 ) }
    dend_57 { pt3dadd( 42.0338, 153.338, -88.407, 0.6 ) }
    dend_57 { pt3dadd( 42.2432, 153.478, -88.6752, 0.6 ) }
    dend_57 { pt3dadd( 42.6554, 153.75, -89.2226, 0.36 ) }
    dend_57 { pt3dadd( 42.9562, 153.938, -89.5792, 0.36 ) }
    dend_57 { pt3dadd( 43.5197, 154.257, -90.1016, 0.12 ) }
    dend_57 { pt3dadd( 43.8828, 154.461, -90.3935, 0.12 ) }
    dend_57 { pt3dadd( 44.478, 154.806, -90.8256, 0.12 ) }
    dend_57 { pt3dadd( 45.2469, 155.278, -91.3734, 1.56 ) }
    dend_57 { pt3dadd( 45.7489, 155.592, -91.7091, 2.16 ) }
    dend_57 { pt3dadd( 46.4888, 156.092, -92.193, 0.24 ) }
    dend_57 { pt3dadd( 47.4764, 156.857, -92.8965, 0.24 ) }
    dend_57 { pt3dadd( 47.8763, 157.229, -93.2157, 0.12 ) }
    dend_57 { pt3dadd( 48.5401, 157.939, -93.7934, 1.68 ) }
    dend_57 { pt3dadd( 48.7289, 158.183, -93.9868, 2.28 ) }
    dend_57 { pt3dadd( 48.9108, 158.478, -94.2178, 2.28 ) }
    dend_57 { pt3dadd( 49.4468, 159.616, -95.1437, 0.12 ) }
    dend_57 { pt3dadd( 49.7134, 160.383, -95.7668, 0.12 ) }
    dend_57 { pt3dadd( 49.7784, 160.622, -95.9561, 0.6 ) }
    dend_57 { pt3dadd( 49.934, 161.475, -96.6377, 0.24 ) }
    dend_57 { pt3dadd( 49.9764, 161.94, -97.0262, 0.24 ) }
    dend_57 { pt3dadd( 50.0116, 162.535, -97.5295, 0.24 ) }
    dend_57 { pt3dadd( 50.0173, 162.951, -97.8714, 0.96 ) }
    dend_57 { pt3dadd( 49.989, 163.522, -98.3537, 1.44 ) }
    dend_57 { pt3dadd( 49.9046, 164.571, -99.2078, 0.12 ) }
    dend_57 { pt3dadd( 49.8322, 165.56, -99.9181, 0.12 ) }
    dend_57 { pt3dadd( 49.8052, 165.974, -100.195, 0.12 ) }
    dend_57 { pt3dadd( 49.799, 166.109, -100.27, 0.48 ) }
    dend_57 { pt3dadd( 49.7963, 166.395, -100.413, 0.48 ) }
    dend_57 { pt3dadd( 49.8008, 166.526, -100.468, 0.48 ) }
    dend_57 { pt3dadd( 49.8617, 167.313, -100.697, 0.48 ) }
    dend_57 { pt3dadd( 49.943, 168.166, -100.909, 1.32 ) }
    dend_57 { pt3dadd( 49.9864, 168.605, -101.017, 1.8 ) }
    dend_57 { pt3dadd( 50.0867, 169.257, -101.175, 0.96 ) }
    dend_57 { pt3dadd( 50.2028, 169.845, -101.305, 0.12 ) }
    dend_57 { pt3dadd( 50.3936, 170.704, -101.495, 0.12 ) }
    dend_57 { pt3dadd( 50.5092, 171.184, -101.592, 1.2 ) }
    dend_57 { pt3dadd( 50.6218, 171.56, -101.678, 1.56 ) }
    dend_57 { pt3dadd( 50.7934, 172.071, -101.858, 0.12 ) }
    dend_57 { pt3dadd( 51.0851, 172.875, -102.192, 0.12 ) }
    dend_57 { pt3dadd( 51.3757, 173.595, -102.54, 0.12 ) }
    dend_57 { pt3dadd( 51.6675, 174.305, -103.02, 0.12 ) }
    dend_57 { pt3dadd( 52.1413, 175.462, -103.921, 0.12 ) }
    dend_57 { pt3dadd( 52.5206, 176.424, -104.785, 0.12 ) }
    dend_57 { pt3dadd( 52.668, 176.797, -105.143, 0.84 ) }
    dend_57 { pt3dadd( 52.7699, 177.05, -105.394, 0.96 ) }
    dend_57 { pt3dadd( 53.2714, 178.326, -106.65, 0.12 ) }
    dend_57 { pt3dadd( 53.468, 178.891, -107.184, 0.12 ) }
    dend_57 { pt3dadd( 53.6133, 179.485, -107.62, 0.12 ) }
    dend_57 { pt3dadd( 53.7408, 180.116, -107.982, 0.12 ) }
    dend_57 { pt3dadd( 53.8215, 180.674, -108.28, 0.36 ) }
    dend_57 { pt3dadd( 53.8305, 180.768, -108.316, 0.12 ) }
    dend_57 { pt3dadd( 53.8626, 181.217, -108.271, 0.12 ) }
    dend_57 { pt3dadd( 53.8286, 181.704, -108.147, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 21.4671, 115.049, -70.5369, 0.12 ) }
    dend_56 { pt3dadd( 19.136, 117.358, -73.6748, 0.12 ) }
    dend_56 { pt3dadd( 18.6879, 117.839, -74.23, 0.12 ) }
    dend_56 { pt3dadd( 18.0964, 118.511, -74.8399, 0.12 ) }
    dend_56 { pt3dadd( 17.7104, 118.969, -75.1863, 0.84 ) }
    dend_56 { pt3dadd( 16.8824, 119.981, -75.8479, 1.8 ) }
    dend_56 { pt3dadd( 16.5962, 120.341, -76.0513, 1.92 ) }
    dend_56 { pt3dadd( 16.0055, 121.217, -76.2504, 0.12 ) }
    dend_56 { pt3dadd( 15.3434, 122.345, -76.4355, 0.12 ) }
    dend_56 { pt3dadd( 14.9397, 123.114, -76.4936, 0.96 ) }
    dend_56 { pt3dadd( 14.7593, 123.499, -76.5015, 1.2 ) }
    dend_56 { pt3dadd( 14.3776, 124.427, -76.4545, 0.12 ) }
    dend_56 { pt3dadd( 14.1408, 125.07, -76.4446, 0.12 ) }
    dend_56 { pt3dadd( 13.7589, 126.425, -76.4574, 0.12 ) }
    dend_56 { pt3dadd( 13.649, 126.937, -76.4793, 1.2 ) }
    dend_56 { pt3dadd( 13.5903, 127.263, -76.4916, 1.44 ) }
    dend_56 { pt3dadd( 13.4647, 127.976, -76.561, 0.6 ) }
    dend_56 { pt3dadd( 13.2954, 128.869, -76.6818, 0.12 ) }
    dend_56 { pt3dadd( 13.1, 129.646, -76.8077, 0.12 ) }
    dend_56 { pt3dadd( 12.9035, 130.186, -76.9324, 0.96 ) }
    dend_56 { pt3dadd( 12.7433, 130.558, -77.0284, 1.32 ) }
    dend_56 { pt3dadd( 12.2447, 131.541, -77.2707, 0.12 ) }
    dend_56 { pt3dadd( 11.9465, 132.033, -77.3785, 0.12 ) }
    dend_56 { pt3dadd( 11.5489, 132.583, -77.5033, 0.12 ) }
    dend_56 { pt3dadd( 10.7671, 133.519, -77.7427, 0.12 ) }
    dend_56 { pt3dadd( 10.287, 134.069, -77.8872, 1.08 ) }
    dend_56 { pt3dadd( 9.93546, 134.456, -77.9768, 1.8 ) }
    dend_56 { pt3dadd( 9.45348, 134.947, -78.1102, 1.2 ) }
    dend_56 { pt3dadd( 8.68288, 135.711, -78.3582, 0.12 ) }
    dend_56 { pt3dadd( 8.31691, 136.07, -78.4766, 0.12 ) }
    dend_56 { pt3dadd( 8.01374, 136.36, -78.5644, 0.12 ) }
    dend_56 { pt3dadd( 7.63459, 136.701, -78.7131, 0.12 ) }
    dend_56 { pt3dadd( 6.21778, 137.92, -79.32, 0.12 ) }
    dend_56 { pt3dadd( 5.90526, 138.182, -79.4519, 1.44 ) }
    dend_56 { pt3dadd( 5.52053, 138.49, -79.6531, 2.04 ) }
    dend_56 { pt3dadd( 4.88812, 138.958, -80.0096, 1.32 ) }
    dend_56 { pt3dadd( 3.46866, 139.931, -80.7636, 0.12 ) }
    dend_56 { pt3dadd( 2.99786, 140.233, -80.9948, 0.12 ) }
    dend_56 { pt3dadd( 2.5604, 140.484, -81.1667, 0.96 ) }
    dend_56 { pt3dadd( 0.615235, 141.473, -81.8454, 0.12 ) }
    dend_56 { pt3dadd( -0.130113, 141.808, -82.0495, 0.12 ) }
    dend_56 { pt3dadd( -0.955806, 142.142, -82.2242, 1.56 ) }
    dend_56 { pt3dadd( -1.30931, 142.267, -82.2601, 1.8 ) }
    dend_56 { pt3dadd( -2.28343, 142.606, -82.3558, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( -2.5454, 142.698, -82.3698, 0.12 ) }
    dend_56 { pt3dadd( -3.11083, 142.902, -82.3623, 0.48 ) }
    dend_56 { pt3dadd( -4.29531, 143.351, -82.4303, 0.12 ) }
    dend_56 { pt3dadd( -5.08446, 143.662, -82.5132, 0.12 ) }
    dend_56 { pt3dadd( -5.72978, 143.921, -82.5608, 1.32 ) }
    dend_56 { pt3dadd( -6.18973, 144.094, -82.5686, 1.56 ) }
    dend_56 { pt3dadd( -7.17211, 144.384, -82.4853, 0.12 ) }
    dend_56 { pt3dadd( -7.64674, 144.465, -82.3901, 0.12 ) }
    dend_56 { pt3dadd( -7.87232, 144.478, -82.3163, 0.48 ) }
    dend_56 { pt3dadd( -8.59289, 144.463, -82.0618, 0.12 ) }
    dend_56 { pt3dadd( -9.30003, 144.415, -81.7884, 0.12 ) }
    dend_56 { pt3dadd( -10.2245, 144.319, -81.3933, 0.12 ) }
    dend_56 { pt3dadd( -11.0569, 144.212, -81.0024, 0.12 ) }
    dend_56 { pt3dadd( -11.3927, 144.169, -80.8487, 0.72 ) }
    dend_56 { pt3dadd( -11.6835, 144.132, -80.6829, 0.12 ) }
    dend_56 { pt3dadd( -12.4123, 144.064, -80.2058, 0.12 ) }
    dend_56 { pt3dadd( -12.8605, 144.05, -79.867, 0.12 ) }
    dend_56 { pt3dadd( -13.3172, 144.065, -79.4863, 1.44 ) }
    dend_56 { pt3dadd( -13.7958, 144.103, -79.0673, 1.8 ) }
    dend_56 { pt3dadd( -15.2043, 144.251, -77.8265, 0.12 ) }
    dend_56 { pt3dadd( -15.6401, 144.308, -77.4249, 0.12 ) }
    dend_56 { pt3dadd( -16.7734, 144.492, -76.3595, 0.12 ) }
    dend_56 { pt3dadd( -17.0211, 144.546, -76.1378, 0.24 ) }
    dend_56 { pt3dadd( -17.2081, 144.599, -75.9553, 0.12 ) }
    dend_56 { pt3dadd( -17.4669, 144.677, -75.6929, 0.12 ) }
    dend_56 { pt3dadd( -18.1765, 144.942, -75.0022, 1.32 ) }
    dend_56 { pt3dadd( -18.2521, 144.976, -74.9168, 1.56 ) }
    dend_56 { pt3dadd( -18.7378, 145.25, -74.2851, 1.56 ) }
    dend_56 { pt3dadd( -19.4354, 145.696, -73.3926, 0.24 ) }
    dend_56 { pt3dadd( -19.5748, 145.799, -73.219, 0.12 ) }
    dend_56 { pt3dadd( -20.0223, 146.172, -72.7279, 0.12 ) }
    dend_56 { pt3dadd( -20.4259, 146.524, -72.3759, 0.12 ) }
    dend_56 { pt3dadd( -20.5935, 146.671, -72.2391, 0.48 ) }
    dend_56 { pt3dadd( -20.8722, 146.929, -72.0407, 0.48 ) }
    dend_56 { pt3dadd( -21.0339, 147.082, -71.9572, 0.12 ) }
    dend_56 { pt3dadd( -21.7013, 147.714, -71.6193, 0.12 ) }
    dend_56 { pt3dadd( -22.2217, 148.148, -71.3657, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -30.2148, 45.3922, -73.9379, 0.12 ) }
    dend_52 { pt3dadd( -30.5272, 44.7975, -74.7159, 0.12 ) }
    dend_52 { pt3dadd( -30.7078, 44.4816, -75.2179, 0.12 ) }
    dend_52 { pt3dadd( -30.9389, 44.0888, -75.8439, 0.12 ) }
    dend_52 { pt3dadd( -30.9933, 43.9975, -75.9865, 1.56 ) }
    dend_52 { pt3dadd( -31.1176, 43.7898, -76.296, 1.56 ) }
    dend_52 { pt3dadd( -31.2487, 43.5776, -76.5937, 0.96 ) }
    dend_52 { pt3dadd( -31.5106, 43.204, -77.1168, 0.12 ) }
    dend_52 { pt3dadd( -31.6734, 42.9841, -77.4549, 0.12 ) }
    dend_52 { pt3dadd( -31.7261, 42.9135, -77.5489, 0.12 ) }
    dend_52 { pt3dadd( -31.8361, 42.759, -77.7228, 0.12 ) }
    dend_52 { pt3dadd( -31.9669, 42.556, -77.9355, 0.6 ) }
    dend_52 { pt3dadd( -32.0489, 42.4176, -78.0657, 0.72 ) }
    dend_52 { pt3dadd( -32.3813, 41.8055, -78.5565, 0.12 ) }
    dend_52 { pt3dadd( -32.5118, 41.5372, -78.8429, 0.12 ) }
    dend_52 { pt3dadd( -32.6783, 41.1447, -79.2827, 2.04 ) }
    dend_52 { pt3dadd( -32.928, 40.4722, -80.0869, 0.12 ) }
    dend_52 { pt3dadd( -33.0314, 40.1717, -80.4556, 0.12 ) }
    dend_52 { pt3dadd( -33.1427, 39.8517, -80.8778, 2.28 ) }
    dend_52 { pt3dadd( -33.5122, 38.823, -82.2441, 0.12 ) }
    dend_52 { pt3dadd( -33.6342, 38.5102, -82.7041, 0.12 ) }
    dend_52 { pt3dadd( -33.7316, 38.3073, -83.1234, 0.12 ) }
    dend_52 { pt3dadd( -33.7767, 38.2318, -83.3128, 0.12 ) }
    dend_52 { pt3dadd( -33.9627, 37.983, -84.011, 0.12 ) }
    dend_52 { pt3dadd( -34.1002, 37.8445, -84.4443, 1.92 ) }
    dend_52 { pt3dadd( -34.204, 37.7581, -84.7008, 2.28 ) }
    dend_52 { pt3dadd( -35.1086, 37.0642, -86.8867, 0.12 ) }
    dend_52 { pt3dadd( -35.2082, 36.9875, -87.1085, 0.12 ) }
    dend_52 { pt3dadd( -35.4588, 36.7829, -87.6549, 1.8 ) }
    dend_52 { pt3dadd( -35.565, 36.6902, -87.8721, 1.8 ) }
    dend_52 { pt3dadd( -35.7317, 36.5334, -88.2005, 1.2 ) }
    dend_52 { pt3dadd( -36.0364, 36.1725, -88.7356, 0.12 ) }
    dend_52 { pt3dadd( -36.2029, 35.9316, -88.8916, 0.12 ) }
    dend_52 { pt3dadd( -36.2569, 35.8452, -88.9539, 0.6 ) }
    dend_52 { pt3dadd( -36.3745, 35.6063, -89.1228, 0.12 ) }
    dend_52 { pt3dadd( -36.5237, 35.2427, -89.375, 0.12 ) }
    dend_52 { pt3dadd( -36.5582, 35.156, -89.4325, 0.36 ) }
    dend_52 { pt3dadd( -36.6286, 34.9626, -89.5846, 0.36 ) }
    dend_52 { pt3dadd( -36.6711, 34.831, -89.7078, 0.12 ) }
    dend_52 { pt3dadd( -36.8022, 34.4259, -90.0814, 0.12 ) }
    dend_52 { pt3dadd( -36.9015, 34.0842, -90.4924, 0.12 ) }
    dend_52 { pt3dadd( -36.9347, 33.9581, -90.6537, 0.96 ) }
    dend_52 { pt3dadd( -37.0676, 33.3882, -91.3759, 0.12 ) }
    dend_52 { pt3dadd( -37.1083, 33.1698, -91.7135, 0.12 ) }
    dend_52 { pt3dadd( -37.1613, 32.8294, -92.2805, 2.76 ) }
    dend_52 { pt3dadd( -37.26, 32.0113, -93.8379, 0.12 ) }
    dend_52 { pt3dadd( -37.2847, 31.7484, -94.3496, 0.12 ) }
    dend_52 { pt3dadd( -37.2886, 31.6426, -94.5578, 0.96 ) }
    dend_52 { pt3dadd( -37.2457, 30.8688, -96.1238, 0.12 ) }
    dend_52 { pt3dadd( -37.2123, 30.7079, -96.4953, 0.12 ) }
    dend_52 { pt3dadd( -37.0893, 30.4021, -97.2553, 0.12 ) }
    dend_52 { pt3dadd( -37.0367, 30.3149, -97.4588, 1.2 ) }
    dend_52 { pt3dadd( -36.9301, 30.1742, -97.7823, 2.28 ) }
    dend_52 { pt3dadd( -36.6224, 29.8086, -98.5076, 1.68 ) }
    dend_52 { pt3dadd( -36.3212, 29.4816, -98.9593, 0.12 ) }
    dend_52 { pt3dadd( -36.1445, 29.3263, -99.195, 0.12 ) }
    dend_52 { pt3dadd( -36.0407, 29.2407, -99.3188, 0.12 ) }
    dend_52 { pt3dadd( -35.9006, 29.1332, -99.5081, 0.12 ) }
    dend_52 { pt3dadd( -35.7583, 29.0151, -99.704, 0.6 ) }
    dend_52 { pt3dadd( -35.66, 28.9251, -99.8268, 0.6 ) }
    dend_52 { pt3dadd( -35.3442, 28.6045, -100.379, 0.24 ) }
    dend_52 { pt3dadd( -35.2872, 28.5359, -100.528, 0.24 ) }
    dend_52 { pt3dadd( -35.13, 28.3152, -101.069, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( -34.9857, 28.055, -101.662, 2.4 ) }
    dend_52 { pt3dadd( -34.9629, 28.0055, -101.764, 2.4 ) }
    dend_52 { pt3dadd( -34.7287, 27.3719, -103.158, 0.12 ) }
    dend_52 { pt3dadd( -34.5981, 26.9259, -104.118, 0.12 ) }
    dend_52 { pt3dadd( -34.5283, 26.6513, -104.711, 0.12 ) }
    dend_52 { pt3dadd( -34.4738, 26.3918, -105.285, 3.12 ) }
    dend_52 { pt3dadd( -34.4571, 26.277, -105.546, 3.12 ) }
    dend_52 { pt3dadd( -34.369, 25.2248, -107.753, 0.12 ) }
    dend_52 { pt3dadd( -34.365, 25.0641, -108.06, 0.12 ) }
    dend_52 { pt3dadd( -34.3664, 24.981, -108.212, 0.48 ) }
    dend_52 { pt3dadd( -34.3728, 24.7933, -108.542, 0.12 ) }
    dend_52 { pt3dadd( -34.3843, 24.6465, -108.813, 0.12 ) }
    dend_52 { pt3dadd( -34.4085, 24.5461, -109.022, 0.48 ) }
    dend_52 { pt3dadd( -34.4795, 24.3648, -109.386, 0.12 ) }
    dend_52 { pt3dadd( -34.5482, 24.2127, -109.707, 0.12 ) }
    dend_52 { pt3dadd( -34.7312, 23.7831, -110.544, 2.76 ) }
    dend_52 { pt3dadd( -34.7658, 23.6952, -110.701, 2.76 ) }
    dend_52 { pt3dadd( -35.1369, 22.6922, -112.394, 0.12 ) }
    dend_52 { pt3dadd( -35.1874, 22.537, -112.632, 0.12 ) }
    dend_52 { pt3dadd( -35.2465, 22.333, -112.922, 0.12 ) }
    dend_52 { pt3dadd( -35.3277, 22.026, -113.341, 0.12 ) }
    dend_52 { pt3dadd( -35.4156, 21.661, -113.81, 1.8 ) }
    dend_52 { pt3dadd( -35.4576, 21.4064, -114.117, 2.16 ) }
    dend_52 { pt3dadd( -35.4906, 21.1395, -114.392, 1.92 ) }
    dend_52 { pt3dadd( -35.5922, 20.4928, -115.17, 0.12 ) }
    dend_52 { pt3dadd( -35.6248, 20.3543, -115.354, 0.72 ) }
    dend_52 { pt3dadd( -35.7276, 20.1063, -115.723, 0.72 ) }
    dend_52 { pt3dadd( -35.8015, 19.9692, -115.915, 0.12 ) }
    dend_52 { pt3dadd( -35.9641, 19.7108, -116.245, 0.12 ) }
    dend_52 { pt3dadd( -36.1514, 19.4399, -116.553, 0.12 ) }
    dend_52 { pt3dadd( -36.3479, 19.1524, -116.814, 2.4 ) }
    dend_52 { pt3dadd( -36.801, 18.4686, -117.368, 0.12 ) }
    dend_52 { pt3dadd( -37.0795, 18.0279, -117.691, 0.12 ) }
    dend_52 { pt3dadd( -37.1868, 17.8365, -117.814, 0.6 ) }
    dend_52 { pt3dadd( -37.2563, 17.6964, -117.905, 0.12 ) }
    dend_52 { pt3dadd( -37.3875, 17.4131, -118.078, 0.12 ) }
    dend_52 { pt3dadd( -37.4272, 17.3215, -118.134, 0.48 ) }
    dend_52 { pt3dadd( -37.5282, 17.0547, -118.324, 0.12 ) }
    dend_52 { pt3dadd( -37.746, 16.4489, -118.84, 0.12 ) }
    dend_52 { pt3dadd( -37.9069, 15.9904, -119.255, 1.68 ) }
    dend_52 { pt3dadd( -37.9684, 15.8128, -119.423, 2.16 ) }
    dend_52 { pt3dadd( -38.0153, 15.6652, -119.56, 2.16 ) }
    dend_52 { pt3dadd( -38.2491, 14.8416, -120.319, 0.12 ) }
    dend_52 { pt3dadd( -38.3177, 14.588, -120.543, 0.12 ) }
    dend_52 { pt3dadd( -38.3523, 14.4608, -120.66, 0.48 ) }
    dend_52 { pt3dadd( -38.3652, 14.4177, -120.696, 0.12 ) }
    dend_52 { pt3dadd( -38.5007, 14.0239, -120.996, 0.12 ) }
    dend_52 { pt3dadd( -38.6604, 13.6564, -121.232, 0.12 ) }
    dend_52 { pt3dadd( -38.7959, 13.4151, -121.394, 1.68 ) }
    dend_52 { pt3dadd( -38.9005, 13.2581, -121.524, 1.92 ) }
    dend_52 { pt3dadd( -39.1373, 12.9525, -121.808, 0.12 ) }
    dend_52 { pt3dadd( -39.3037, 12.7681, -121.994, 0.12 ) }
    dend_52 { pt3dadd( -39.5256, 12.5635, -122.211, 1.32 ) }
    dend_52 { pt3dadd( -40.1238, 12.0447, -122.786, 0.12 ) }
    dend_52 { pt3dadd( -40.3446, 11.8579, -123.01, 0.12 ) }
    dend_52 { pt3dadd( -40.4941, 11.7366, -123.182, 0.48 ) }
    dend_52 { pt3dadd( -40.5998, 11.6595, -123.31, 0.12 ) }
    dend_52 { pt3dadd( -40.8535, 11.4953, -123.642, 0.12 ) }
    dend_52 { pt3dadd( -41.195, 11.2958, -124.078, 0.12 ) }
    dend_52 { pt3dadd( -41.2784, 11.2569, -124.175, 0.96 ) }
    dend_52 { pt3dadd( -41.695, 11.1076, -124.628, 0.12 ) }
    dend_52 { pt3dadd( -41.8621, 11.0565, -124.797, 0.12 ) }
    dend_52 { pt3dadd( -42.2512, 10.955, -125.158, 1.44 ) }
    dend_52 { pt3dadd( -42.5889, 10.8763, -125.433, 1.8 ) }
    dend_52 { pt3dadd( -43.1267, 10.7558, -125.788, 0.12 ) }
    dend_52 { pt3dadd( -43.8083, 10.6016, -126.166, 0.12 ) }
    dend_52 { pt3dadd( -43.9759, 10.5636, -126.24, 0.48 ) }
    dend_52 { pt3dadd( -44.0864, 10.5393, -126.283, 0.12 ) }
    dend_52 { pt3dadd( -44.3918, 10.4661, -126.38, 0.12 ) }
    dend_52 { pt3dadd( -44.6153, 10.4103, -126.446, 1.08 ) }
    dend_52 { pt3dadd( -44.8929, 10.3328, -126.511, 1.68 ) }
    dend_52 { pt3dadd( -45.4153, 10.1829, -126.612, 0.12 ) }
    dend_52 { pt3dadd( -45.6418, 10.1163, -126.653, 0.12 ) }
    dend_52 { pt3dadd( -45.7949, 10.0636, -126.68, 0.48 ) }
    dend_52 { pt3dadd( -45.9059, 10.0197, -126.699, 0.12 ) }
    dend_52 { pt3dadd( -46.3423, 9.81703, -126.808, 0.12 ) }
    dend_52 { pt3dadd( -46.8151, 9.54107, -126.964, 1.68 ) }
    dend_52 { pt3dadd( -47.1397, 9.29255, -127.122, 0.12 ) }
    dend_52 { pt3dadd( -47.425, 9.03162, -127.32, 0.12 ) }
    dend_52 { pt3dadd( -47.6136, 8.83022, -127.485, 0.6 ) }
    dend_52 { pt3dadd( -47.9832, 8.37045, -127.882, 0.12 ) }
    dend_52 { pt3dadd( -48.1997, 8.04218, -128.168, 0.12 ) }
    dend_52 { pt3dadd( -48.4697, 7.58389, -128.602, 0.12 ) }
    dend_52 { pt3dadd( -48.5629, 7.42071, -128.755, 0.12 ) }
    dend_52 { pt3dadd( -48.6632, 7.25132, -128.913, 1.68 ) }
    dend_52 { pt3dadd( -48.7659, 7.08325, -129.056, 2.28 ) }
    dend_52 { pt3dadd( -48.9766, 6.77652, -129.276, 1.56 ) }
    dend_52 { pt3dadd( -49.2942, 6.37041, -129.544, 0.12 ) }
    dend_52 { pt3dadd( -49.4641, 6.16068, -129.641, 0.12 ) }
    dend_52 { pt3dadd( -49.6143, 5.97529, -129.722, 0.12 ) }
    dend_52 { pt3dadd( -49.785, 5.76414, -129.814, 1.32 ) }
    dend_52 { pt3dadd( -49.9261, 5.5888, -129.886, 1.56 ) }
    dend_52 { pt3dadd( -50.1399, 5.32427, -129.992, 0.12 ) }
    dend_52 { pt3dadd( -50.7019, 4.61478, -130.246, 0.12 ) }
    dend_52 { pt3dadd( -51.0423, 4.18211, -130.407, 1.8 ) }
    dend_52 { pt3dadd( -51.1571, 4.02574, -130.465, 2.52 ) }
    dend_52 { pt3dadd( -51.2512, 3.89843, -130.513, 2.52 ) }
    dend_52 { pt3dadd( -51.5513, 3.49002, -130.677, 0.12 ) }
    dend_52 { pt3dadd( -51.9388, 2.95769, -130.9, 0.12 ) }
    dend_52 { pt3dadd( -52.1242, 2.69989, -131.003, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( -52.3481, 2.3737, -131.118, 2.04 ) }
    dend_52 { pt3dadd( -52.5907, 2.0072, -131.245, 2.04 ) }
    dend_52 { pt3dadd( -52.9233, 1.48432, -131.423, 0.12 ) }
    dend_52 { pt3dadd( -53.1215, 1.15318, -131.525, 0.12 ) }
    dend_52 { pt3dadd( -53.235, 0.938366, -131.588, 0.72 ) }
    dend_52 { pt3dadd( -53.287, 0.824577, -131.613, 0.12 ) }
    dend_52 { pt3dadd( -53.4001, 0.546753, -131.651, 0.12 ) }
    dend_52 { pt3dadd( -53.4396, 0.425972, -131.658, 0.48 ) }
    dend_52 { pt3dadd( -53.4881, 0.258633, -131.672, 0.12 ) }
    dend_52 { pt3dadd( -53.6369, -0.341679, -131.772, 0.12 ) }
    dend_52 { pt3dadd( -53.7218, -0.742882, -131.86, 1.56 ) }
    dend_52 { pt3dadd( -53.7575, -0.936752, -131.911, 1.8 ) }
    dend_52 { pt3dadd( -53.7906, -1.16509, -131.982, 1.8 ) }
    dend_52 { pt3dadd( -53.8813, -1.89603, -132.237, 0.12 ) }
    dend_52 { pt3dadd( -53.9312, -2.36793, -132.425, 0.12 ) }
    dend_52 { pt3dadd( -53.9312, -2.36793, -132.425, 0.48 ) }
    dend_52 { pt3dadd( -53.9356, -2.46681, -132.481, 0.12 ) }
    dend_52 { pt3dadd( -53.9288, -2.75443, -132.667, 0.12 ) }
    dend_52 { pt3dadd( -53.9184, -2.85779, -132.741, 0.48 ) }
    dend_52 { pt3dadd( -53.9075, -2.95434, -132.81, 0.12 ) }
    dend_52 { pt3dadd( -53.856, -3.37747, -133.195, 0.12 ) }
    dend_52 { pt3dadd( -53.7989, -3.91407, -133.71, 0.48 ) }
    dend_52 { pt3dadd( -53.7878, -4.07204, -133.848, 0.12 ) }
    dend_52 { pt3dadd( -53.7672, -4.41719, -134.135, 1.56 ) }
    dend_52 { pt3dadd( -53.7521, -4.73376, -134.378, 1.92 ) }
    dend_52 { pt3dadd( -53.7345, -5.21884, -134.716, 1.56 ) }
    dend_52 { pt3dadd( -53.7261, -5.45563, -134.88, 0.12 ) }
    dend_52 { pt3dadd( -53.7271, -6.54679, -135.553, 0.12 ) }
    dend_52 { pt3dadd( -53.7288, -6.69777, -135.643, 0.84 ) }
    dend_52 { pt3dadd( -53.7317, -6.85703, -135.735, 0.12 ) }
    dend_52 { pt3dadd( -53.7325, -7.10431, -135.879, 0.12 ) }
    dend_52 { pt3dadd( -53.7266, -7.86472, -136.286, 0.12 ) }
    dend_52 { pt3dadd( -53.7083, -8.54497, -136.713, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -30.2148, 45.3922, -73.9379, 0.12 ) }
    dend_51 { pt3dadd( -30.643, 46.1684, -74.8737, 0.12 ) }
    dend_51 { pt3dadd( -30.9366, 46.7317, -75.5348, 0.12 ) }
    dend_51 { pt3dadd( -31.4125, 47.7065, -76.5421, 2.4 ) }
    dend_51 { pt3dadd( -32.1753, 49.3491, -78.2059, 0.24 ) }
    dend_51 { pt3dadd( -32.3294, 49.6866, -78.5334, 0.24 ) }
    dend_51 { pt3dadd( -32.485, 50.0386, -78.8552, 1.44 ) }
    dend_51 { pt3dadd( -32.7943, 50.7679, -79.4958, 0.12 ) }
    dend_51 { pt3dadd( -33.1125, 51.6267, -80.2058, 0.12 ) }
    dend_51 { pt3dadd( -33.3706, 52.3899, -80.726, 0.12 ) }
    dend_51 { pt3dadd( -33.6241, 53.1333, -81.194, 2.28 ) }
    dend_51 { pt3dadd( -33.9319, 54.0429, -81.8037, 0.12 ) }
    dend_51 { pt3dadd( -34.1911, 54.7753, -82.2949, 0.12 ) }
    dend_51 { pt3dadd( -34.54, 55.7435, -82.9233, 0.12 ) }
    dend_51 { pt3dadd( -34.9347, 56.8095, -83.6064, 2.76 ) }
    dend_51 { pt3dadd( -35.425, 58.1016, -84.4267, 0.24 ) }
    dend_51 { pt3dadd( -35.425, 58.1016, -84.4267, 0.12 ) }
    dend_51 { pt3dadd( -35.7044, 58.8538, -84.8835, 0.12 ) }
    dend_51 { pt3dadd( -35.8365, 59.2118, -85.1009, 0.96 ) }
    dend_51 { pt3dadd( -36.0084, 59.6667, -85.337, 0.96 ) }
    dend_51 { pt3dadd( -36.3748, 60.6751, -85.8278, 0.12 ) }
    dend_51 { pt3dadd( -36.6749, 61.682, -86.3103, 0.12 ) }
    dend_51 { pt3dadd( -36.7647, 62.0467, -86.492, 0.72 ) }
    dend_51 { pt3dadd( -36.8932, 62.6623, -86.8443, 0.12 ) }
    dend_51 { pt3dadd( -37.0207, 63.3077, -87.2205, 0.12 ) }
    dend_51 { pt3dadd( -37.1578, 64.0094, -87.5962, 2.16 ) }
    dend_51 { pt3dadd( -37.4112, 65.3098, -88.3543, 0.12 ) }
    dend_51 { pt3dadd( -37.4856, 65.6919, -88.6058, 0.12 ) }
    dend_51 { pt3dadd( -37.6509, 66.5378, -89.1906, 0.12 ) }
    dend_51 { pt3dadd( -37.7593, 67.0895, -89.5639, 0.12 ) }
    dend_51 { pt3dadd( -37.8888, 67.7687, -90.0798, 1.44 ) }
    dend_51 { pt3dadd( -38.1633, 69.3687, -91.3158, 0.12 ) }
    dend_51 { pt3dadd( -38.26, 69.903, -91.7048, 0.12 ) }
    dend_51 { pt3dadd( -38.3264, 70.3099, -91.9966, 1.56 ) }
    dend_51 { pt3dadd( -38.391, 70.7845, -92.3216, 1.56 ) }
    dend_51 { pt3dadd( -38.5288, 71.8341, -93.05, 0.12 ) }
    dend_51 { pt3dadd( -38.5835, 72.2968, -93.3671, 0.12 ) }
    dend_51 { pt3dadd( -38.6362, 72.6964, -93.5807, 0.12 ) }
    dend_51 { pt3dadd( -38.6747, 72.9159, -93.7185, 0.12 ) }
    dend_51 { pt3dadd( -38.8667, 73.7324, -94.2439, 0.12 ) }
    dend_51 { pt3dadd( -38.9668, 74.0636, -94.4733, 0.12 ) }
    dend_51 { pt3dadd( -39.1714, 74.5875, -94.8294, 1.92 ) }
    dend_51 { pt3dadd( -39.3246, 74.9346, -95.0985, 2.16 ) }
    dend_51 { pt3dadd( -39.8948, 76.0716, -96.0203, 0.12 ) }
    dend_51 { pt3dadd( -40.1373, 76.4927, -96.3581, 0.12 ) }
    dend_51 { pt3dadd( -40.3449, 76.8186, -96.6248, 1.08 ) }
    dend_51 { pt3dadd( -40.6077, 77.1748, -96.9418, 1.32 ) }
    dend_51 { pt3dadd( -41.0951, 77.7358, -97.4776, 0.12 ) }
    dend_51 { pt3dadd( -41.4566, 78.0915, -97.8476, 0.12 ) }
    dend_51 { pt3dadd( -41.7455, 78.3289, -98.1223, 0.48 ) }
    dend_51 { pt3dadd( -42.0448, 78.5379, -98.4102, 0.12 ) }
    dend_51 { pt3dadd( -42.7256, 78.9914, -99.0589, 0.12 ) }
    dend_51 { pt3dadd( -43.1486, 79.2759, -99.4685, 1.44 ) }
    dend_51 { pt3dadd( -43.3854, 79.4489, -99.7025, 1.68 ) }
    dend_51 { pt3dadd( -44.0812, 80.0512, -100.447, 0.12 ) }
    dend_51 { pt3dadd( -44.5779, 80.537, -100.973, 0.12 ) }
    dend_51 { pt3dadd( -44.9655, 80.9706, -101.364, 1.8 ) }
    dend_51 { pt3dadd( -45.3202, 81.439, -101.705, 2.16 ) }
    dend_51 { pt3dadd( -45.8614, 82.1931, -102.173, 0.12 ) }
    dend_51 { pt3dadd( -46.1934, 82.6602, -102.482, 0.12 ) }
    dend_51 { pt3dadd( -46.458, 83.0064, -102.706, 0.48 ) }
    dend_51 { pt3dadd( -46.5071, 83.0649, -102.744, 0.12 ) }
    dend_51 { pt3dadd( -46.8178, 83.3756, -102.99, 0.12 ) }
    dend_51 { pt3dadd( -47.3347, 83.8309, -103.436, 1.68 ) }
    dend_51 { pt3dadd( -48.4128, 84.6987, -104.414, 0.12 ) }
    dend_51 { pt3dadd( -48.845, 85.0349, -104.822, 0.12 ) }
    dend_51 { pt3dadd( -49.1026, 85.2553, -105.078, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -49.5578, 85.6817, -105.521, 0.12 ) }
    dend_51 { pt3dadd( -49.8525, 85.987, -105.815, 0.12 ) }
    dend_51 { pt3dadd( -50.1849, 86.3771, -106.156, 1.56 ) }
    dend_51 { pt3dadd( -50.4598, 86.7123, -106.41, 2.28 ) }
    dend_51 { pt3dadd( -51.094, 87.518, -106.956, 0.12 ) }
    dend_51 { pt3dadd( -51.3931, 87.8836, -107.192, 0.12 ) }
    dend_51 { pt3dadd( -51.6074, 88.1243, -107.321, 0.48 ) }
    dend_51 { pt3dadd( -51.9928, 88.5254, -107.511, 0.12 ) }
    dend_51 { pt3dadd( -52.277, 88.8007, -107.645, 0.12 ) }
    dend_51 { pt3dadd( -52.9953, 89.4204, -107.946, 2.16 ) }
    dend_51 { pt3dadd( -54.0148, 90.1636, -108.272, 0.12 ) }
    dend_51 { pt3dadd( -54.7417, 90.6366, -108.468, 0.12 ) }
    dend_51 { pt3dadd( -55.1592, 90.8896, -108.585, 0.6 ) }
    dend_51 { pt3dadd( -55.439, 91.0473, -108.668, 0.12 ) }
    dend_51 { pt3dadd( -56.0012, 91.345, -108.832, 0.12 ) }
    dend_51 { pt3dadd( -56.6779, 91.6865, -109.022, 2.4 ) }
    dend_51 { pt3dadd( -57.0069, 91.8536, -109.091, 2.4 ) }
    dend_51 { pt3dadd( -58.1998, 92.4697, -109.322, 0.12 ) }
    dend_51 { pt3dadd( -59.1801, 92.9887, -109.468, 0.12 ) }
    dend_51 { pt3dadd( -59.8122, 93.3313, -109.534, 1.68 ) }
    dend_51 { pt3dadd( -60.2925, 93.5909, -109.565, 2.16 ) }
    dend_51 { pt3dadd( -61.2801, 94.1127, -109.565, 0.12 ) }
    dend_51 { pt3dadd( -61.8751, 94.42, -109.521, 0.12 ) }
    dend_51 { pt3dadd( -62.3518, 94.6542, -109.437, 0.6 ) }
    dend_51 { pt3dadd( -62.5189, 94.7343, -109.407, 0.12 ) }
    dend_51 { pt3dadd( -63.447, 95.177, -109.276, 0.12 ) }
    dend_51 { pt3dadd( -63.835, 95.3564, -109.193, 0.84 ) }
    dend_51 { pt3dadd( -64.2046, 95.5252, -109.088, 1.08 ) }
    dend_51 { pt3dadd( -64.3867, 95.6156, -109.036, 1.08 ) }
    dend_51 { pt3dadd( -64.6563, 95.7644, -108.965, 0.12 ) }
    dend_51 { pt3dadd( -65.1466, 96.0681, -108.828, 0.12 ) }
    dend_51 { pt3dadd( -65.7325, 96.4628, -108.66, 1.44 ) }
    dend_51 { pt3dadd( -66.1948, 96.7711, -108.54, 1.68 ) }
    dend_51 { pt3dadd( -66.6962, 97.1034, -108.41, 0.12 ) }
    dend_51 { pt3dadd( -67.429, 97.5885, -108.236, 0.12 ) }
    dend_51 { pt3dadd( -67.6082, 97.7043, -108.199, 1.32 ) }
    dend_51 { pt3dadd( -68.0227, 97.9594, -108.142, 0.12 ) }
    dend_51 { pt3dadd( -68.3443, 98.1494, -108.109, 0.12 ) }
    dend_51 { pt3dadd( -68.5294, 98.2451, -108.085, 0.36 ) }
    dend_51 { pt3dadd( -68.8424, 98.3687, -108.04, 0.12 ) }
    dend_51 { pt3dadd( -69.2862, 98.5105, -107.98, 0.12 ) }
    dend_51 { pt3dadd( -69.6444, 98.614, -107.931, 0.48 ) }
    dend_51 { pt3dadd( -70.183, 98.7577, -107.872, 0.12 ) }
    dend_51 { pt3dadd( -70.9105, 98.9376, -107.809, 0.12 ) }
    dend_51 { pt3dadd( -71.4666, 99.0652, -107.77, 1.8 ) }
    dend_51 { pt3dadd( -71.8576, 99.1478, -107.75, 2.64 ) }
    dend_51 { pt3dadd( -72.1341, 99.2033, -107.744, 2.64 ) }
    dend_51 { pt3dadd( -73.0742, 99.3756, -107.754, 0.12 ) }
    dend_51 { pt3dadd( -73.908, 99.5129, -107.797, 0.12 ) }
    dend_51 { pt3dadd( -74.2781, 99.5761, -107.818, 0.12 ) }
    dend_51 { pt3dadd( -74.5752, 99.6295, -107.835, 0.48 ) }
    dend_51 { pt3dadd( -74.7603, 99.6621, -107.841, 0.12 ) }
    dend_51 { pt3dadd( -75.1404, 99.738, -107.84, 0.12 ) }
    dend_51 { pt3dadd( -75.5046, 99.8292, -107.818, 0.6 ) }
    dend_51 { pt3dadd( -75.8234, 99.94, -107.79, 0.12 ) }
    dend_51 { pt3dadd( -76.2541, 100.122, -107.746, 0.12 ) }
    dend_51 { pt3dadd( -76.6106, 100.287, -107.682, 0.72 ) }
    dend_51 { pt3dadd( -76.9817, 100.472, -107.598, 0.96 ) }
    dend_51 { pt3dadd( -77.4119, 100.722, -107.512, 0.12 ) }
    dend_51 { pt3dadd( -77.9117, 101.043, -107.431, 0.12 ) }
    dend_51 { pt3dadd( -78.2283, 101.256, -107.385, 1.2 ) }
    dend_51 { pt3dadd( -78.8028, 101.674, -107.311, 1.56 ) }
    dend_51 { pt3dadd( -79.1952, 101.988, -107.284, 1.68 ) }
    dend_51 { pt3dadd( -79.8824, 102.616, -107.267, 0.12 ) }
    dend_51 { pt3dadd( -80.4739, 103.204, -107.271, 0.12 ) }
    dend_51 { pt3dadd( -80.7679, 103.524, -107.35, 1.56 ) }
    dend_51 { pt3dadd( -81.1029, 103.907, -107.463, 1.56 ) }
    dend_51 { pt3dadd( -81.4899, 104.375, -107.63, 0.12 ) }
    dend_51 { pt3dadd( -82.7079, 105.909, -108.224, 0.12 ) }
    dend_51 { pt3dadd( -82.8598, 106.108, -108.307, 0.48 ) }
    dend_51 { pt3dadd( -84.1804, 107.976, -109.294, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 26.9904, -137.384, -0.328668, 3.37 ) }
    dend_47 { pt3dadd( 27.3209, -137.477, 0.743471, 3.37 ) }
    dend_47 { pt3dadd( 28.296, -137.654, 3.7139, 0.12 ) }
    dend_47 { pt3dadd( 28.3758, -137.654, 3.90904, 0.12 ) }
    dend_47 { pt3dadd( 28.6222, -137.635, 4.43533, 0.12 ) }
    dend_47 { pt3dadd( 28.7937, -137.61, 4.75243, 0.72 ) }
    dend_47 { pt3dadd( 29.0158, -137.566, 5.10842, 0.72 ) }
    dend_47 { pt3dadd( 29.1596, -137.521, 5.25636, 0.12 ) }
    dend_47 { pt3dadd( 30.1873, -137.113, 5.87057, 0.12 ) }
    dend_47 { pt3dadd( 30.2935, -137.08, 5.96264, 0.96 ) }
    dend_47 { pt3dadd( 30.5979, -137.041, 6.3673, 0.96 ) }
    dend_47 { pt3dadd( 30.8986, -137.08, 7.10722, 0.12 ) }
    dend_47 { pt3dadd( 30.9346, -137.104, 7.29058, 0.12 ) }
    dend_47 { pt3dadd( 30.9462, -137.159, 7.62553, 0.84 ) }
    dend_47 { pt3dadd( 30.8154, -137.545, 9.48459, 0.24 ) }
    dend_47 { pt3dadd( 30.7111, -137.791, 10.5139, 1.92 ) }
    dend_47 { pt3dadd( 30.5084, -138.213, 12.0098, 0.24 ) }
    dend_47 { pt3dadd( 30.4059, -138.417, 12.627, 1.68 ) }
    dend_47 { pt3dadd( 30.1177, -139.023, 14.238, 1.68 ) }
    dend_47 { pt3dadd( 30.0343, -139.21, 14.6516, 0.12 ) }
    dend_47 { pt3dadd( 29.9452, -139.462, 15.0354, 0.12 ) }
    dend_47 { pt3dadd( 29.8906, -139.707, 15.3002, 0.6 ) }
    dend_47 { pt3dadd( 29.8656, -140.082, 15.5709, 1.08 ) }
    dend_47 { pt3dadd( 29.8652, -140.57, 15.8454, 1.08 ) }
    dend_47 { pt3dadd( 29.8704, -141.311, 16.1201, 0.12 ) }
    dend_47 { pt3dadd( 29.8741, -141.744, 16.2787, 0.12 ) }
    dend_47 { pt3dadd( 29.8904, -142.181, 16.4292, 0.12 ) }
    dend_47 { pt3dadd( 29.9245, -142.619, 16.5661, 0.12 ) }
    dend_47 { pt3dadd( 29.987, -143.052, 16.6835, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( 30.0605, -143.417, 16.7572, 0.96 ) }
    dend_47 { pt3dadd( 30.1666, -143.864, 16.8282, 0.12 ) }
    dend_47 { pt3dadd( 30.2919, -144.418, 16.9158, 0.12 ) }
    dend_47 { pt3dadd( 30.3501, -144.739, 16.9772, 1.32 ) }
    dend_47 { pt3dadd( 30.3716, -144.939, 17.0205, 1.32 ) }
    dend_47 { pt3dadd( 30.4093, -145.531, 17.1633, 0.12 ) }
    dend_47 { pt3dadd( 30.4135, -146.067, 17.3009, 0.12 ) }
    dend_47 { pt3dadd( 30.4126, -146.193, 17.3345, 0.48 ) }
    dend_47 { pt3dadd( 30.4123, -146.602, 17.4511, 0.12 ) }
    dend_47 { pt3dadd( 30.4281, -146.799, 17.5091, 0.12 ) }
    dend_47 { pt3dadd( 30.4721, -147.053, 17.5856, 0.12 ) }
    dend_47 { pt3dadd( 30.5446, -147.214, 17.6929, 0.48 ) }
    dend_47 { pt3dadd( 30.6896, -147.495, 17.9623, 0.36 ) }
    dend_47 { pt3dadd( 30.7855, -147.709, 18.1242, 0.36 ) }
    dend_47 { pt3dadd( 30.8734, -147.923, 18.247, 1.2 ) }
    dend_47 { pt3dadd( 30.9658, -148.157, 18.3628, 1.2 ) }
    dend_47 { pt3dadd( 31.4202, -149.352, 19.036, 0.12 ) }
    dend_47 { pt3dadd( 31.5954, -149.792, 19.2903, 0.12 ) }
    dend_47 { pt3dadd( 31.945, -150.757, 19.8452, 0.12 ) }
    dend_47 { pt3dadd( 32.1056, -151.242, 20.1118, 0.12 ) }
    dend_47 { pt3dadd( 32.2022, -151.572, 20.2734, 0.12 ) }
    dend_47 { pt3dadd( 32.406, -152.343, 20.5601, 1.32 ) }
    dend_47 { pt3dadd( 32.5885, -152.97, 20.6327, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 26.9904, -137.384, -0.328668, 0.12 ) }
    dend_46 { pt3dadd( 26.0727, -138.29, -0.554327, 0.12 ) }
    dend_46 { pt3dadd( 25.4637, -138.891, -0.704074, 0.12 ) }
    dend_46 { pt3dadd( 25.271, -139.081, -0.751459, 0.96 ) }
    dend_46 { pt3dadd( 25.0439, -139.306, -0.807305, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 32.8636, -132.595, -7.40875, 0.12 ) }
    dend_44 { pt3dadd( 33.2735, -133.037, -7.22763, 0.12 ) }
    dend_44 { pt3dadd( 33.5744, -133.419, -7.08359, 0.12 ) }
    dend_44 { pt3dadd( 33.8559, -133.779, -6.95239, 0.72 ) }
    dend_44 { pt3dadd( 34.2231, -134.245, -6.79664, 0.84 ) }
    dend_44 { pt3dadd( 34.4266, -134.497, -6.70114, 0.48 ) }
    dend_44 { pt3dadd( 34.5678, -134.669, -6.63261, 0.12 ) }
    dend_44 { pt3dadd( 34.8754, -135.037, -6.47676, 0.12 ) }
    dend_44 { pt3dadd( 35.0721, -135.274, -6.36599, 0.12 ) }
    dend_44 { pt3dadd( 35.261, -135.487, -6.26485, 0.84 ) }
    dend_44 { pt3dadd( 35.631, -135.917, -6.12995, 0.36 ) }
    dend_44 { pt3dadd( 35.8095, -136.128, -6.07671, 0.12 ) }
    dend_44 { pt3dadd( 36.2407, -136.636, -5.97196, 0.12 ) }
    dend_44 { pt3dadd( 36.6163, -137.079, -5.90097, 1.8 ) }
    dend_44 { pt3dadd( 36.922, -137.479, -5.85602, 1.56 ) }
    dend_44 { pt3dadd( 37.4315, -138.197, -5.81137, 0.12 ) }
    dend_44 { pt3dadd( 37.5187, -138.33, -5.81397, 0.12 ) }
    dend_44 { pt3dadd( 37.5607, -138.397, -5.81653, 0.36 ) }
    dend_44 { pt3dadd( 37.7006, -138.641, -5.8304, 0.12 ) }
    dend_44 { pt3dadd( 37.9115, -139.078, -5.84358, 0.12 ) }
    dend_44 { pt3dadd( 37.9735, -139.224, -5.83707, 0.12 ) }
    dend_44 { pt3dadd( 38.0703, -139.452, -5.80962, 0.72 ) }
    dend_44 { pt3dadd( 38.2176, -139.817, -5.76658, 0.96 ) }
    dend_44 { pt3dadd( 38.3288, -140.105, -5.73195, 0.12 ) }
    dend_44 { pt3dadd( 38.6549, -140.989, -5.62466, 0.12 ) }
    dend_44 { pt3dadd( 38.7576, -141.279, -5.58925, 0.84 ) }
    dend_44 { pt3dadd( 38.8604, -141.588, -5.55778, 0.12 ) }
    dend_44 { pt3dadd( 38.9696, -141.96, -5.52368, 0.12 ) }
    dend_44 { pt3dadd( 39.0359, -142.205, -5.50284, 0.96 ) }
    dend_44 { pt3dadd( 39.1193, -142.514, -5.47915, 0.12 ) }
    dend_44 { pt3dadd( 39.2587, -143.043, -5.44756, 0.12 ) }
    dend_44 { pt3dadd( 39.3894, -143.554, -5.42426, 1.68 ) }
    dend_44 { pt3dadd( 39.4399, -143.773, -5.41901, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 32.8636, -132.595, -7.40875, 0.6 ) }
    dend_43 { pt3dadd( 32.6791, -131.254, -2.8511, 0.6 ) }
    dend_43 { pt3dadd( 33.0522, -131.647, -3.40974, 0.6 ) }
    dend_43 { pt3dadd( 34.1909, -132.712, -4.63335, 0.12 ) }
    dend_43 { pt3dadd( 34.6541, -133.13, -5.05721, 0.12 ) }
    dend_43 { pt3dadd( 35.2331, -133.653, -5.58695, 0.96 ) }
    dend_43 { pt3dadd( 35.8143, -134.178, -6.11872, 0.96 ) }
    dend_43 { pt3dadd( 37.1431, -135.44, -7.5945, 0.12 ) }
    dend_43 { pt3dadd( 37.688, -135.991, -8.23665, 0.12 ) }
    dend_43 { pt3dadd( 37.9749, -136.272, -8.53891, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 32.0544, -92.7351, -26.9376, 0.12 ) }
    dend_40 { pt3dadd( 33.8669, -92.9921, -25.5273, 0.12 ) }
    dend_40 { pt3dadd( 34.2717, -93.0508, -25.2273, 0.12 ) }
    dend_40 { pt3dadd( 34.4585, -93.0811, -25.0969, 0.6 ) }
    dend_40 { pt3dadd( 34.9824, -93.1611, -24.7519, 0.12 ) }
    dend_40 { pt3dadd( 35.9284, -93.2969, -24.1678, 0.12 ) }
    dend_40 { pt3dadd( 36.1906, -93.3324, -24.0092, 0.12 ) }
    dend_40 { pt3dadd( 36.3772, -93.3584, -23.9268, 0.12 ) }
    dend_40 { pt3dadd( 36.637, -93.3979, -23.817, 0.12 ) }
    dend_40 { pt3dadd( 37.2619, -93.4984, -23.5543, 0.12 ) }
    dend_40 { pt3dadd( 37.4591, -93.5377, -23.4809, 0.6 ) }
    dend_40 { pt3dadd( 37.8673, -93.6686, -23.3685, 0.12 ) }
    dend_40 { pt3dadd( 38.2851, -93.8047, -23.2373, 0.12 ) }
    dend_40 { pt3dadd( 38.831, -93.9665, -23.0687, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 32.0544, -92.7351, -26.9376, 0.24 ) }
    dend_35 { pt3dadd( 32.2604, -94.0735, -27.2398, 0.24 ) }
    dend_35 { pt3dadd( 32.3721, -95.2899, -27.5188, 0.24 ) }
    dend_35 { pt3dadd( 32.4053, -95.8557, -27.6415, 0.96 ) }
    dend_35 { pt3dadd( 32.4459, -96.8389, -27.8461, 1.8 ) }
    dend_35 { pt3dadd( 32.4923, -97.81, -28.1047, 0.84 ) }
    dend_35 { pt3dadd( 32.5143, -98.4395, -28.3059, 0.12 ) }
    dend_35 { pt3dadd( 32.5282, -99.4144, -28.7118, 0.12 ) }
    dend_35 { pt3dadd( 32.5171, -99.9256, -28.9422, 0.72 ) }
    dend_35 { pt3dadd( 32.5137, -100.045, -28.9886, 0.72 ) }
    dend_35 { pt3dadd( 32.5256, -101.266, -29.4054, 0.24 ) }
    dend_35 { pt3dadd( 32.575, -101.773, -29.5248, 0.24 ) }
    dend_35 { pt3dadd( 32.7179, -102.59, -29.6397, 0.24 ) }
    dend_35 { pt3dadd( 32.906, -103.416, -29.6695, 0.24 ) }
    dend_35 { pt3dadd( 33.078, -104.172, -29.6221, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 33.2536, -105.03, -29.505, 0.24 ) }
    dend_35 { pt3dadd( 33.4134, -105.87, -29.2913, 1.44 ) }
    dend_35 { pt3dadd( 33.5843, -106.777, -29.0121, 1.92 ) }
    dend_35 { pt3dadd( 33.7281, -107.669, -28.7072, 1.92 ) }
    dend_35 { pt3dadd( 33.8525, -108.574, -28.3977, 1.2 ) }
    dend_35 { pt3dadd( 33.9612, -109.513, -28.0998, 0.48 ) }
    dend_35 { pt3dadd( 34.0441, -110.433, -27.8197, 0.12 ) }
    dend_35 { pt3dadd( 34.1073, -111.093, -27.6034, 0.12 ) }
    dend_35 { pt3dadd( 34.1506, -111.501, -27.4744, 0.6 ) }
    dend_35 { pt3dadd( 34.2111, -112.016, -27.3345, 0.12 ) }
    dend_35 { pt3dadd( 34.3717, -113.079, -27.0458, 0.12 ) }
    dend_35 { pt3dadd( 34.4749, -113.612, -26.9168, 0.12 ) }
    dend_35 { pt3dadd( 34.871, -115.517, -26.6081, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 40.1783, -37.8874, -3.70396, 0.96 ) }
    dend_33 { pt3dadd( 38.8269, -35.7317, 4.67405, 0.96 ) }
    dend_33 { pt3dadd( 38.6754, -35.4275, 5.56422, 0.72 ) }
    dend_33 { pt3dadd( 38.5883, -35.2038, 6.05274, 0.24 ) }
    dend_33 { pt3dadd( 38.5162, -34.9145, 6.52615, 0.24 ) }
    dend_33 { pt3dadd( 38.4633, -34.4321, 7.11222, 0.24 ) }
    dend_33 { pt3dadd( 38.4519, -33.7729, 7.79023, 0.84 ) }
    dend_33 { pt3dadd( 38.6188, -32.7969, 8.18729, 1.2 ) }
    dend_33 { pt3dadd( 38.8067, -31.9229, 8.60396, 0.48 ) }
    dend_33 { pt3dadd( 39.0733, -30.8243, 9.26459, 0.24 ) }
    dend_33 { pt3dadd( 39.4045, -29.7217, 10.0235, 0.24 ) }
    dend_33 { pt3dadd( 39.8917, -28.3755, 11.089, 1.68 ) }
    dend_33 { pt3dadd( 40.1612, -27.707, 11.6471, 2.28 ) }
    dend_33 { pt3dadd( 40.3685, -27.2227, 12.0683, 2.4 ) }
    dend_33 { pt3dadd( 41.0401, -25.6497, 13.4563, 0.36 ) }
    dend_33 { pt3dadd( 41.2887, -25.0293, 13.9964, 0.36 ) }
    dend_33 { pt3dadd( 41.6125, -24.1668, 14.7014, 0.84 ) }
    dend_33 { pt3dadd( 42.0444, -22.9237, 15.6305, 0.84 ) }
    dend_33 { pt3dadd( 42.4463, -21.6507, 16.5364, 0.6 ) }
    dend_33 { pt3dadd( 42.8089, -20.4576, 17.3442, 0.6 ) }
    dend_33 { pt3dadd( 43.0397, -19.692, 17.8129, 0.96 ) }
    dend_33 { pt3dadd( 43.1947, -19.0824, 18.1747, 0.96 ) }
    dend_33 { pt3dadd( 43.4347, -17.9279, 18.8118, 0.12 ) }
    dend_33 { pt3dadd( 43.5213, -17.3492, 19.1132, 0.12 ) }
    dend_33 { pt3dadd( 43.5838, -16.8492, 19.3376, 0.12 ) }
    dend_33 { pt3dadd( 43.6471, -16.2997, 19.5513, 0.12 ) }
    dend_33 { pt3dadd( 43.7135, -15.7466, 19.7683, 0.6 ) }
    dend_33 { pt3dadd( 43.7827, -15.3037, 19.9178, 0.96 ) }
    dend_33 { pt3dadd( 43.8938, -14.5629, 20.0142, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 40.1783, -37.8874, -3.70396, 0.12 ) }
    dend_30 { pt3dadd( 41.1917, -38.4235, -3.19241, 0.12 ) }
    dend_30 { pt3dadd( 41.4912, -38.5735, -3.03824, 0.12 ) }
    dend_30 { pt3dadd( 41.867, -38.7539, -2.84138, 0.6 ) }
    dend_30 { pt3dadd( 42.3314, -38.9567, -2.60106, 0.6 ) }
    dend_30 { pt3dadd( 43.0083, -39.2285, -2.26581, 0.12 ) }
    dend_30 { pt3dadd( 43.6454, -39.4494, -1.96637, 0.12 ) }
    dend_30 { pt3dadd( 43.728, -39.468, -1.92988, 0.36 ) }
    dend_30 { pt3dadd( 43.9989, -39.5104, -1.81643, 0.12 ) }
    dend_30 { pt3dadd( 44.3702, -39.5493, -1.64204, 0.12 ) }
    dend_30 { pt3dadd( 44.7038, -39.5494, -1.47737, 0.48 ) }
    dend_30 { pt3dadd( 45.1957, -39.5315, -1.24794, 0.6 ) }
    dend_30 { pt3dadd( 45.5339, -39.522, -1.08045, 0.48 ) }
    dend_30 { pt3dadd( 45.8336, -39.5299, -0.937963, 0.48 ) }
    dend_30 { pt3dadd( 46.5139, -39.592, -0.491948, 0.12 ) }
    dend_30 { pt3dadd( 47.1796, -39.7191, 0.0153456, 2.04 ) }
    dend_30 { pt3dadd( 47.5528, -39.8288, 0.319412, 3.25 ) }
    dend_30 { pt3dadd( 47.8934, -39.9763, 0.59298, 3.37 ) }
    dend_30 { pt3dadd( 48.3208, -40.2123, 0.916413, 2.88 ) }
    dend_30 { pt3dadd( 49.6589, -41.0978, 1.864, 0.24 ) }
    dend_30 { pt3dadd( 50.2225, -41.5295, 2.22286, 0.24 ) }
    dend_30 { pt3dadd( 50.5758, -41.8443, 2.43849, 0.72 ) }
    dend_30 { pt3dadd( 51.2043, -42.4157, 2.77699, 0.96 ) }
    dend_30 { pt3dadd( 51.6148, -42.7914, 2.95206, 0.24 ) }
    dend_30 { pt3dadd( 51.7543, -42.9072, 2.98076, 0.24 ) }
    dend_30 { pt3dadd( 51.9712, -43.0504, 2.97217, 0.24 ) }
    dend_30 { pt3dadd( 52.482, -43.2801, 2.95274, 0.24 ) }
    dend_30 { pt3dadd( 52.9316, -43.4016, 2.95316, 1.2 ) }
    dend_30 { pt3dadd( 53.2893, -43.4655, 3.01677, 1.92 ) }
    dend_30 { pt3dadd( 54.0141, -43.5629, 3.23277, 1.92 ) }
    dend_30 { pt3dadd( 54.7368, -43.6438, 3.50605, 0.36 ) }
    dend_30 { pt3dadd( 55.1786, -43.6916, 3.73654, 0.36 ) }
    dend_30 { pt3dadd( 56.0389, -43.7784, 4.26508, 0.36 ) }
    dend_30 { pt3dadd( 57.3769, -43.9236, 5.16567, 1.68 ) }
    dend_30 { pt3dadd( 57.7871, -43.9733, 5.44033, 2.52 ) }
    dend_30 { pt3dadd( 58.4152, -44.0668, 5.86124, 2.64 ) }
    dend_30 { pt3dadd( 59.8076, -44.3173, 6.69588, 0.24 ) }
    dend_30 { pt3dadd( 60.4223, -44.445, 7.01036, 0.24 ) }
    dend_30 { pt3dadd( 60.8516, -44.5344, 7.17568, 0.36 ) }
    dend_30 { pt3dadd( 61.6197, -44.6843, 7.33509, 1.08 ) }
    dend_30 { pt3dadd( 62.0166, -44.7638, 7.41441, 1.08 ) }
    dend_30 { pt3dadd( 62.7268, -44.891, 7.53361, 0.48 ) }
    dend_30 { pt3dadd( 63.0905, -44.9388, 7.57205, 0.24 ) }
    dend_30 { pt3dadd( 63.5916, -44.977, 7.68826, 0.24 ) }
    dend_30 { pt3dadd( 64.0206, -44.9758, 7.85505, 0.6 ) }
    dend_30 { pt3dadd( 64.8529, -44.9277, 8.31007, 0.36 ) }
    dend_30 { pt3dadd( 65.2466, -44.9184, 8.5389, 0.36 ) }
    dend_30 { pt3dadd( 65.557, -44.949, 8.75561, 0.36 ) }
    dend_30 { pt3dadd( 65.7729, -45.0049, 8.91927, 0.48 ) }
    dend_30 { pt3dadd( 65.9329, -45.0679, 9.03311, 0.24 ) }
    dend_30 { pt3dadd( 66.2239, -45.2043, 9.23621, 0.24 ) }
    dend_30 { pt3dadd( 66.7605, -45.4589, 9.53996, 0.24 ) }
    dend_30 { pt3dadd( 67.5403, -45.8184, 9.93474, 0.24 ) }
    dend_30 { pt3dadd( 67.8686, -45.9648, 10.0846, 1.2 ) }
    dend_30 { pt3dadd( 68.4455, -46.1864, 10.3189, 2.16 ) }
    dend_30 { pt3dadd( 69.2874, -46.4586, 10.6664, 1.8 ) }
    dend_30 { pt3dadd( 69.9606, -46.633, 10.9365, 0.36 ) }
    dend_30 { pt3dadd( 70.9296, -46.825, 11.4347, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 71.3566, -46.8902, 11.6791, 0.36 ) }
    dend_30 { pt3dadd( 72.0502, -46.9769, 12.1286, 0.36 ) }
    dend_30 { pt3dadd( 72.6974, -47.0549, 12.6626, 1.56 ) }
    dend_30 { pt3dadd( 73.1795, -47.1116, 13.1254, 2.04 ) }
    dend_30 { pt3dadd( 74.4711, -47.2837, 14.5631, 0.24 ) }
    dend_30 { pt3dadd( 74.8336, -47.3455, 15.0153, 0.24 ) }
    dend_30 { pt3dadd( 75.0136, -47.3845, 15.2411, 0.24 ) }
    dend_30 { pt3dadd( 75.8281, -47.6315, 16.2502, 1.68 ) }
    dend_30 { pt3dadd( 76.0752, -47.7186, 16.5258, 2.04 ) }
    dend_30 { pt3dadd( 76.2592, -47.7935, 16.7392, 2.04 ) }
    dend_30 { pt3dadd( 77.0819, -48.1092, 17.6184, 0.24 ) }
    dend_30 { pt3dadd( 77.4363, -48.2239, 18.0274, 0.24 ) }
    dend_30 { pt3dadd( 77.7312, -48.2891, 18.3816, 1.2 ) }
    dend_30 { pt3dadd( 77.9719, -48.2942, 18.6749, 1.2 ) }
    dend_30 { pt3dadd( 78.8756, -48.1277, 19.8932, 0.12 ) }
    dend_30 { pt3dadd( 79.2124, -47.9693, 20.3732, 0.12 ) }
    dend_30 { pt3dadd( 79.413, -47.8029, 20.6439, 0.24 ) }
    dend_30 { pt3dadd( 79.5483, -47.6641, 20.8567, 0.24 ) }
    dend_30 { pt3dadd( 79.8167, -47.4009, 21.2422, 0.24 ) }
    dend_30 { pt3dadd( 79.9696, -47.2691, 21.4374, 0.24 ) }
    dend_30 { pt3dadd( 80.2748, -47.074, 21.7139, 0.24 ) }
    dend_30 { pt3dadd( 80.7701, -46.8614, 22.1043, 0.24 ) }
    dend_30 { pt3dadd( 81.6769, -46.5544, 22.8116, 0.12 ) }
    dend_30 { pt3dadd( 82.2846, -46.3986, 23.2762, 0.12 ) }
    dend_30 { pt3dadd( 82.4525, -46.3689, 23.4023, 1.44 ) }
    dend_30 { pt3dadd( 83.0924, -46.2779, 23.8706, 2.52 ) }
    dend_30 { pt3dadd( 83.7928, -46.1726, 24.3653, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -15.4714, -274.085, -41.8489, 0.12 ) }
    dend_20 { pt3dadd( -14.9741, -275.423, -41.6462, 0.12 ) }
    dend_20 { pt3dadd( -14.7187, -276.101, -41.5385, 0.12 ) }
    dend_20 { pt3dadd( -14.6005, -276.414, -41.4898, 0.48 ) }
    dend_20 { pt3dadd( -14.4018, -276.955, -41.3877, 0.48 ) }
    dend_20 { pt3dadd( -14.1905, -277.52, -41.2678, 0.48 ) }
    dend_20 { pt3dadd( -14.0543, -277.816, -41.2237, 0.48 ) }
    dend_20 { pt3dadd( -13.9045, -278.062, -41.2011, 0.48 ) }
    dend_20 { pt3dadd( -13.5255, -278.555, -41.1816, 1.68 ) }
    dend_20 { pt3dadd( -13.1029, -279.014, -41.1798, 2.28 ) }
    dend_20 { pt3dadd( -12.687, -279.415, -41.1879, 2.4 ) }
    dend_20 { pt3dadd( -11.4627, -280.473, -41.2442, 0.48 ) }
    dend_20 { pt3dadd( -10.6052, -281.17, -41.3095, 0.36 ) }
    dend_20 { pt3dadd( -10.0699, -281.569, -41.3688, 0.12 ) }
    dend_20 { pt3dadd( -9.7699, -281.766, -41.4126, 0.12 ) }
    dend_20 { pt3dadd( -9.53562, -281.901, -41.4592, 0.12 ) }
    dend_20 { pt3dadd( -9.1682, -282.09, -41.5331, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -15.4714, -274.085, -41.8489, 0.12 ) }
    dend_19 { pt3dadd( -15.6256, -275.531, -41.8571, 0.12 ) }
    dend_19 { pt3dadd( -15.6465, -275.896, -41.8818, 0.12 ) }
    dend_19 { pt3dadd( -15.6471, -276.271, -41.9195, 0.12 ) }
    dend_19 { pt3dadd( -15.6442, -276.892, -42.0398, 0.12 ) }
    dend_19 { pt3dadd( -15.6498, -277.2, -42.1118, 0.48 ) }
    dend_19 { pt3dadd( -15.6795, -277.768, -42.2532, 0.48 ) }
    dend_19 { pt3dadd( -15.6907, -277.981, -42.3264, 0.12 ) }
    dend_19 { pt3dadd( -15.8501, -278.617, -42.6412, 0.12 ) }
    dend_19 { pt3dadd( -16.0911, -279.222, -42.9911, 0.12 ) }
    dend_19 { pt3dadd( -16.249, -279.571, -43.193, 1.68 ) }
    dend_19 { pt3dadd( -16.3751, -279.836, -43.3641, 1.8 ) }
    dend_19 { pt3dadd( -16.5981, -280.287, -43.6789, 1.8 ) }
    dend_19 { pt3dadd( -17.2731, -281.689, -44.6277, 0.12 ) }
    dend_19 { pt3dadd( -17.4459, -282.066, -44.8815, 0.12 ) }
    dend_19 { pt3dadd( -17.736, -282.848, -45.352, 0.12 ) }
    dend_19 { pt3dadd( -17.899, -283.444, -45.7199, 0.48 ) }
    dend_19 { pt3dadd( -17.9367, -283.648, -45.8406, 0.48 ) }
    dend_19 { pt3dadd( -17.9701, -284.148, -46.0835, 0.48 ) }
    dend_19 { pt3dadd( -17.9747, -284.304, -46.1483, 0.12 ) }
    dend_19 { pt3dadd( -18.017, -284.735, -46.3511, 0.12 ) }
    dend_19 { pt3dadd( -18.11, -285.345, -46.6404, 0.12 ) }
    dend_19 { pt3dadd( -18.1641, -285.644, -46.7714, 0.96 ) }
    dend_19 { pt3dadd( -18.3046, -286.287, -47.0573, 1.44 ) }
    dend_19 { pt3dadd( -18.6216, -287.481, -47.6704, 0.12 ) }
    dend_19 { pt3dadd( -18.8357, -288.194, -48.0331, 0.12 ) }
    dend_19 { pt3dadd( -18.9327, -288.503, -48.188, 0.12 ) }
    dend_19 { pt3dadd( -19.0066, -288.729, -48.2907, 0.6 ) }
    dend_19 { pt3dadd( -19.1417, -289.094, -48.4788, 0.6 ) }
    dend_19 { pt3dadd( -19.4247, -289.708, -48.905, 0.12 ) }
    dend_19 { pt3dadd( -19.7131, -290.254, -49.3345, 0.12 ) }
    dend_19 { pt3dadd( -19.7586, -290.338, -49.4079, 0.48 ) }
    dend_19 { pt3dadd( -19.8822, -290.596, -49.6047, 0.48 ) }
    dend_19 { pt3dadd( -20.1716, -291.361, -50.0675, 0.48 ) }
    dend_19 { pt3dadd( -20.4342, -292.219, -50.4749, 0.24 ) }
    dend_19 { pt3dadd( -20.5079, -292.505, -50.6616, 0.12 ) }
    dend_19 { pt3dadd( -20.6694, -293.376, -51.2441, 0.12 ) }
    dend_19 { pt3dadd( -20.7639, -293.943, -51.652, 1.44 ) }
    dend_19 { pt3dadd( -20.8255, -294.418, -51.9965, 2.16 ) }
    dend_19 { pt3dadd( -20.8863, -295.054, -52.4377, 2.28 ) }
    dend_19 { pt3dadd( -21.0786, -297.392, -54.0094, 0.12 ) }
    dend_19 { pt3dadd( -21.1594, -298.665, -54.8974, 0.12 ) }
    dend_19 { pt3dadd( -21.1897, -299.367, -55.4055, 0.84 ) }
    dend_19 { pt3dadd( -21.2034, -299.859, -55.7609, 1.44 ) }
    dend_19 { pt3dadd( -21.2087, -300.268, -56.0497, 0.96 ) }
    dend_19 { pt3dadd( -21.2007, -300.701, -56.2768, 0.12 ) }
    dend_19 { pt3dadd( -21.1933, -301.116, -56.39, 0.12 ) }
    dend_19 { pt3dadd( -21.2075, -301.568, -56.5051, 0.12 ) }
    dend_19 { pt3dadd( -21.2244, -301.828, -56.5584, 0.36 ) }
    dend_19 { pt3dadd( -21.2339, -302.503, -55.9021, 0.12 ) }
    dend_19 { pt3dadd( -21.241, -303.577, -54.4653, 0.12 ) }
    dend_19 { pt3dadd( -21.2378, -303.825, -54.0265, 1.08 ) }
    dend_19 { pt3dadd( -21.2284, -304.091, -53.4392, 1.8 ) }
    dend_19 { pt3dadd( -21.2182, -304.226, -53.0791, 2.04 ) }
    dend_19 { pt3dadd( -20.9551, -306.434, -46.2101, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.9208, 96.2736, 7.98938, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 20.3469, 97.652, 8.15272, 0.48 ) }
    dend_14 { pt3dadd( 20.5147, 98.2475, 8.20427, 0.48 ) }
    dend_14 { pt3dadd( 20.6061, 98.5791, 8.22558, 0.48 ) }
    dend_14 { pt3dadd( 20.7147, 98.9956, 8.23252, 0.48 ) }
    dend_14 { pt3dadd( 20.9247, 99.8985, 8.21215, 0.48 ) }
    dend_14 { pt3dadd( 21.103, 100.81, 8.17128, 0.48 ) }
    dend_14 { pt3dadd( 21.1282, 101.002, 8.14744, 0.72 ) }
    dend_14 { pt3dadd( 21.1782, 101.372, 8.12309, 0.96 ) }
    dend_14 { pt3dadd( 21.2694, 101.988, 8.11254, 0.96 ) }
    dend_14 { pt3dadd( 21.3718, 102.516, 8.17324, 0.36 ) }
    dend_14 { pt3dadd( 21.5757, 103.316, 8.34628, 0.36 ) }
    dend_14 { pt3dadd( 21.719, 103.817, 8.48739, 0.36 ) }
    dend_14 { pt3dadd( 22.0312, 104.886, 8.82304, 1.56 ) }
    dend_14 { pt3dadd( 22.174, 105.373, 8.98779, 2.16 ) }
    dend_14 { pt3dadd( 22.5543, 106.657, 9.45378, 0.48 ) }
    dend_14 { pt3dadd( 22.8181, 107.622, 9.751, 0.48 ) }
    dend_14 { pt3dadd( 22.9543, 108.188, 9.89989, 0.48 ) }
    dend_14 { pt3dadd( 23.0104, 108.516, 9.96234, 0.48 ) }
    dend_14 { pt3dadd( 23.0421, 109.102, 10.0097, 1.68 ) }
    dend_14 { pt3dadd( 23.0286, 109.452, 10.0171, 1.92 ) }
    dend_14 { pt3dadd( 22.933, 110.58, 9.94058, 1.08 ) }
    dend_14 { pt3dadd( 22.8875, 111.184, 9.90113, 0.48 ) }
    dend_14 { pt3dadd( 22.8752, 111.617, 9.87251, 0.36 ) }
    dend_14 { pt3dadd( 22.9195, 112.411, 9.8214, 0.36 ) }
    dend_14 { pt3dadd( 23.01, 112.938, 9.81292, 0.36 ) }
    dend_14 { pt3dadd( 23.2765, 113.887, 9.8068, 0.72 ) }
    dend_14 { pt3dadd( 23.4168, 114.246, 9.80847, 0.36 ) }
    dend_14 { pt3dadd( 23.5929, 114.664, 9.79245, 0.36 ) }
    dend_14 { pt3dadd( 23.8763, 115.268, 9.76476, 0.36 ) }
    dend_14 { pt3dadd( 24.2585, 116.033, 9.72678, 0.84 ) }
    dend_14 { pt3dadd( 24.6955, 116.844, 9.8218, 1.92 ) }
    dend_14 { pt3dadd( 24.9423, 117.402, 9.82539, 2.28 ) }
    dend_14 { pt3dadd( 25.0864, 117.811, 9.7862, 2.64 ) }
    dend_14 { pt3dadd( 25.1783, 118.144, 9.72089, 2.76 ) }
    dend_14 { pt3dadd( 25.2742, 118.62, 9.58087, 2.76 ) }
    dend_14 { pt3dadd( 25.624, 120.556, 8.81644, 1.56 ) }
    dend_14 { pt3dadd( 26.1245, 123.115, 7.63516, 0.12 ) }
    dend_14 { pt3dadd( 26.1769, 123.353, 7.51805, 0.12 ) }
    dend_14 { pt3dadd( 26.2265, 123.565, 7.42393, 0.12 ) }
    dend_14 { pt3dadd( 26.2942, 123.913, 7.28159, 0.72 ) }
    dend_14 { pt3dadd( 26.3729, 124.417, 7.09997, 0.96 ) }
    dend_14 { pt3dadd( 26.4358, 125.02, 6.88626, 0.48 ) }
    dend_14 { pt3dadd( 26.5276, 125.536, 6.84968, 0.36 ) }
    dend_14 { pt3dadd( 26.708, 126.701, 6.7775, 0.36 ) }
    dend_14 { pt3dadd( 26.7604, 127.079, 6.78872, 0.36 ) }
    dend_14 { pt3dadd( 26.7935, 127.371, 6.81186, 0.12 ) }
    dend_14 { pt3dadd( 26.8685, 128.129, 6.93151, 0.96 ) }
    dend_14 { pt3dadd( 26.9245, 128.658, 7.04805, 1.32 ) }
    dend_14 { pt3dadd( 26.9703, 128.992, 7.09705, 1.2 ) }
    dend_14 { pt3dadd( 27.1737, 130.026, 7.36568, 0.48 ) }
    dend_14 { pt3dadd( 27.3441, 130.765, 7.58156, 0.24 ) }
    dend_14 { pt3dadd( 27.4823, 131.313, 7.74449, 1.2 ) }
    dend_14 { pt3dadd( 27.6116, 131.782, 7.88253, 1.68 ) }
    dend_14 { pt3dadd( 27.9017, 132.748, 8.17006, 1.68 ) }
    dend_14 { pt3dadd( 28.4141, 134.364, 8.64179, 1.8 ) }
    dend_14 { pt3dadd( 28.6211, 134.985, 8.79612, 0.96 ) }
    dend_14 { pt3dadd( 28.8685, 135.628, 9.01847, 1.08 ) }
    dend_14 { pt3dadd( 29.0756, 136.129, 9.19513, 0.36 ) }
    dend_14 { pt3dadd( 29.5166, 137.185, 9.51974, 0.36 ) }
    dend_14 { pt3dadd( 29.7648, 137.818, 9.67616, 0.36 ) }
    dend_14 { pt3dadd( 29.9329, 138.263, 9.7224, 1.08 ) }
    dend_14 { pt3dadd( 30.3618, 139.434, 9.82854, 1.2 ) }
    dend_14 { pt3dadd( 30.7008, 140.411, 9.88159, 0.96 ) }
    dend_14 { pt3dadd( 31.0211, 141.423, 9.88189, 0.36 ) }
    dend_14 { pt3dadd( 31.2719, 142.316, 9.76956, 0.24 ) }
    dend_14 { pt3dadd( 31.4116, 142.884, 9.65122, 0.6 ) }
    dend_14 { pt3dadd( 31.4988, 143.261, 9.56737, 0.12 ) }
    dend_14 { pt3dadd( 31.5805, 143.582, 9.48736, 0.24 ) }
    dend_14 { pt3dadd( 31.8561, 144.546, 9.27416, 0.24 ) }
    dend_14 { pt3dadd( 32.0934, 145.349, 9.10151, 0.24 ) }
    dend_14 { pt3dadd( 32.2674, 145.994, 8.90297, 1.68 ) }
    dend_14 { pt3dadd( 32.4979, 146.951, 8.58516, 2.52 ) }
    dend_14 { pt3dadd( 32.6577, 147.761, 8.32541, 0.48 ) }
    dend_14 { pt3dadd( 32.7911, 148.544, 8.08134, 0.48 ) }
    dend_14 { pt3dadd( 32.8898, 149.309, 7.86832, 0.72 ) }
    dend_14 { pt3dadd( 32.9537, 150.155, 7.68451, 1.08 ) }
    dend_14 { pt3dadd( 32.963, 150.729, 7.5862, 1.68 ) }
    dend_14 { pt3dadd( 32.9209, 151.484, 7.47776, 1.2 ) }
    dend_14 { pt3dadd( 32.8548, 152.121, 7.44042, 0.36 ) }
    dend_14 { pt3dadd( 32.7575, 152.955, 7.44223, 0.36 ) }
    dend_14 { pt3dadd( 32.694, 153.52, 7.49081, 0.36 ) }
    dend_14 { pt3dadd( 32.6192, 154.162, 7.57635, 0.36 ) }
    dend_14 { pt3dadd( 32.5289, 154.952, 7.67739, 2.04 ) }
    dend_14 { pt3dadd( 32.4971, 155.298, 7.72647, 2.4 ) }
    dend_14 { pt3dadd( 32.456, 156.116, 7.80294, 2.4 ) }
    dend_14 { pt3dadd( 32.4801, 157.35, 7.80604, 0.36 ) }
    dend_14 { pt3dadd( 32.5527, 158.105, 7.74275, 0.36 ) }
    dend_14 { pt3dadd( 32.6615, 158.773, 7.67955, 1.44 ) }
    dend_14 { pt3dadd( 32.7841, 159.288, 7.62684, 2.16 ) }
    dend_14 { pt3dadd( 33.1038, 160.478, 7.51122, 0.48 ) }
    dend_14 { pt3dadd( 33.2982, 161.159, 7.45483, 0.12 ) }
    dend_14 { pt3dadd( 33.4356, 161.629, 7.4051, 0.6 ) }
    dend_14 { pt3dadd( 33.7574, 162.726, 7.36633, 0.36 ) }
    dend_14 { pt3dadd( 33.9008, 163.263, 7.39517, 0.24 ) }
    dend_14 { pt3dadd( 34.0328, 163.887, 7.49031, 0.24 ) }
    dend_14 { pt3dadd( 34.0809, 164.236, 7.56181, 0.24 ) }
    dend_14 { pt3dadd( 34.1377, 164.882, 7.65721, 0.36 ) }
    dend_14 { pt3dadd( 34.1932, 165.601, 7.6945, 0.36 ) }
    dend_14 { pt3dadd( 34.2634, 166.127, 7.68595, 0.36 ) }
    dend_14 { pt3dadd( 34.3524, 166.545, 7.68482, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 34.5636, 167.259, 7.66484, 1.68 ) }
    dend_14 { pt3dadd( 34.7332, 167.767, 7.59813, 2.4 ) }
    dend_14 { pt3dadd( 34.8551, 168.117, 7.51822, 2.4 ) }
    dend_14 { pt3dadd( 35.2207, 169.054, 7.30088, 0.24 ) }
    dend_14 { pt3dadd( 35.4049, 169.5, 7.20312, 0.24 ) }
    dend_14 { pt3dadd( 35.5193, 169.781, 7.14864, 0.48 ) }
    dend_14 { pt3dadd( 35.8848, 170.753, 7.01748, 0.24 ) }
    dend_14 { pt3dadd( 36.0494, 171.342, 6.96056, 0.24 ) }
    dend_14 { pt3dadd( 36.16, 171.975, 6.89652, 0.24 ) }
    dend_14 { pt3dadd( 36.2015, 172.491, 6.87388, 0.72 ) }
    dend_14 { pt3dadd( 36.2302, 172.941, 6.89041, 0.84 ) }
    dend_14 { pt3dadd( 36.2499, 173.252, 6.91498, 0.36 ) }
    dend_14 { pt3dadd( 36.291, 173.846, 6.95169, 0.36 ) }
    dend_14 { pt3dadd( 36.3336, 174.484, 6.91547, 0.48 ) }
    dend_14 { pt3dadd( 36.4012, 175.412, 6.75121, 0.36 ) }
    dend_14 { pt3dadd( 36.4651, 175.923, 6.61433, 0.36 ) }
    dend_14 { pt3dadd( 36.5286, 176.272, 6.52195, 0.96 ) }
    dend_14 { pt3dadd( 36.7168, 177.089, 6.25316, 0.96 ) }
    dend_14 { pt3dadd( 36.8368, 177.465, 6.14748, 0.36 ) }
    dend_14 { pt3dadd( 36.9481, 177.78, 6.08637, 0.36 ) }
    dend_14 { pt3dadd( 37.2488, 178.654, 5.96307, 2.4 ) }
    dend_14 { pt3dadd( 37.5558, 179.59, 5.91409, 3.25 ) }
    dend_14 { pt3dadd( 37.8154, 180.46, 5.94354, 2.16 ) }
    dend_14 { pt3dadd( 38.1424, 181.694, 6.03959, 0.24 ) }
    dend_14 { pt3dadd( 38.3556, 182.601, 6.10828, 0.12 ) }
    dend_14 { pt3dadd( 38.51, 183.363, 6.14996, 0.24 ) }
    dend_14 { pt3dadd( 38.5458, 183.623, 6.15758, 0.36 ) }
    dend_14 { pt3dadd( 38.5963, 184.299, 6.11853, 0.36 ) }
    dend_14 { pt3dadd( 38.6224, 185.149, 6.03265, 1.32 ) }
    dend_14 { pt3dadd( 38.6303, 185.674, 5.94139, 0.48 ) }
    dend_14 { pt3dadd( 38.6534, 185.976, 5.88958, 0.12 ) }
    dend_14 { pt3dadd( 38.7244, 186.498, 5.79893, 0.12 ) }
    dend_14 { pt3dadd( 38.8276, 187.098, 5.709, 0.12 ) }
    dend_14 { pt3dadd( 38.9085, 187.468, 5.66385, 0.84 ) }
    dend_14 { pt3dadd( 39.1568, 188.498, 5.58208, 1.56 ) }
    dend_14 { pt3dadd( 39.2647, 188.911, 5.55551, 1.68 ) }
    dend_14 { pt3dadd( 39.4909, 189.659, 5.51876, 0.12 ) }
    dend_14 { pt3dadd( 39.7296, 190.296, 5.47939, 0.12 ) }
    dend_14 { pt3dadd( 39.9096, 190.604, 5.54846, 0.24 ) }
    dend_14 { pt3dadd( 40.0227, 190.721, 5.61948, 0.12 ) }
    dend_14 { pt3dadd( 40.3592, 190.911, 5.87141, 0.12 ) }
    dend_14 { pt3dadd( 40.5892, 191.001, 6.06525, 0.12 ) }
    dend_14 { pt3dadd( 41.4055, 191.207, 6.82522, 3.25 ) }
    dend_14 { pt3dadd( 43.7503, 191.533, 9.15745, 0.12 ) }
    dend_14 { pt3dadd( 43.9656, 191.547, 9.38659, 0.12 ) }
    dend_14 { pt3dadd( 44.1493, 191.544, 9.5927, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.9208, 96.2736, 7.98938, 0.12 ) }
    dend_13 { pt3dadd( 18.1303, 96.8974, 8.31455, 0.12 ) }
    dend_13 { pt3dadd( 17.7012, 97.048, 8.40701, 0.12 ) }
    dend_13 { pt3dadd( 17.3779, 97.1636, 8.44761, 0.96 ) }
    dend_13 { pt3dadd( 16.5634, 97.4361, 8.50817, 0.12 ) }
    dend_13 { pt3dadd( 16.0012, 97.6119, 8.49436, 0.12 ) }
    dend_13 { pt3dadd( 15.6718, 97.7161, 8.47507, 0.12 ) }
    dend_13 { pt3dadd( 15.1936, 97.8721, 8.4237, 1.08 ) }
    dend_13 { pt3dadd( 14.206, 98.1765, 8.3699, 0.36 ) }
    dend_13 { pt3dadd( 13.2491, 98.4606, 8.32581, 0.36 ) }
    dend_13 { pt3dadd( 12.0794, 98.8397, 8.39793, 0.36 ) }
    dend_13 { pt3dadd( 11.5542, 98.9998, 8.44254, 0.36 ) }
    dend_13 { pt3dadd( 10.6139, 99.2538, 8.7527, 0.36 ) }
    dend_13 { pt3dadd( 10.1177, 99.3541, 9.04934, 0.36 ) }
    dend_13 { pt3dadd( 9.61221, 99.4089, 9.50783, 0.36 ) }
    dend_13 { pt3dadd( 8.56632, 99.4725, 10.7022, 1.92 ) }
    dend_13 { pt3dadd( 8.01927, 99.4689, 11.4662, 1.92 ) }
    dend_13 { pt3dadd( 6.41307, 99.3146, 13.9577, 0.12 ) }
    dend_13 { pt3dadd( 6.07104, 99.2481, 14.5571, 0.12 ) }
    dend_13 { pt3dadd( 5.8875, 99.1923, 14.9369, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 10.9687, 119.539, -17.2674, 0.12 ) }
    dend_11 { pt3dadd( 10.107, 121.149, -18.6285, 0.12 ) }
    dend_11 { pt3dadd( 9.98333, 121.453, -18.8363, 0.12 ) }
    dend_11 { pt3dadd( 9.82117, 122.024, -19.1446, 0.24 ) }
    dend_11 { pt3dadd( 9.47482, 123.922, -20.179, 0.24 ) }
    dend_11 { pt3dadd( 9.39894, 124.625, -20.5451, 0.24 ) }
    dend_11 { pt3dadd( 9.36804, 125.121, -20.7922, 0.24 ) }
    dend_11 { pt3dadd( 9.44927, 126.163, -21.2484, 1.68 ) }
    dend_11 { pt3dadd( 9.53464, 126.882, -21.6066, 1.68 ) }
    dend_11 { pt3dadd( 9.90498, 129.014, -22.7367, 0.12 ) }
    dend_11 { pt3dadd( 10.0853, 129.858, -23.1779, 0.12 ) }
    dend_11 { pt3dadd( 10.1476, 130.139, -23.3507, 0.6 ) }
    dend_11 { pt3dadd( 10.2721, 130.679, -23.7306, 0.48 ) }
    dend_11 { pt3dadd( 10.5864, 131.982, -24.7585, 0.12 ) }
    dend_11 { pt3dadd( 10.7597, 132.651, -25.3321, 0.12 ) }
    dend_11 { pt3dadd( 10.8137, 132.818, -25.4589, 0.12 ) }
    dend_11 { pt3dadd( 10.9341, 133.198, -25.7386, 0.96 ) }
    dend_11 { pt3dadd( 11.0653, 133.592, -26.0054, 0.96 ) }
    dend_11 { pt3dadd( 11.2081, 134.033, -26.2929, 0.48 ) }
    dend_11 { pt3dadd( 11.5679, 135.089, -26.889, 0.12 ) }
    dend_11 { pt3dadd( 12.0564, 136.535, -27.7063, 0.12 ) }
    dend_11 { pt3dadd( 12.3569, 137.443, -28.2289, 1.8 ) }
    dend_11 { pt3dadd( 12.512, 137.92, -28.5034, 2.16 ) }
    dend_11 { pt3dadd( 13.0092, 139.392, -29.3202, 0.12 ) }
    dend_11 { pt3dadd( 13.3957, 140.46, -29.8908, 0.12 ) }
    dend_11 { pt3dadd( 13.5545, 140.872, -30.0893, 0.96 ) }
    dend_11 { pt3dadd( 13.807, 141.52, -30.3948, 0.24 ) }
    dend_11 { pt3dadd( 14.0497, 142.135, -30.6767, 0.24 ) }
    dend_11 { pt3dadd( 14.4337, 143.055, -31.1088, 1.68 ) }
    dend_11 { pt3dadd( 14.7525, 143.734, -31.4253, 0.12 ) }
    dend_11 { pt3dadd( 15.047, 144.281, -31.6942, 0.12 ) }
    dend_11 { pt3dadd( 15.436, 144.961, -32.1512, 0.6 ) }
    dend_11 { pt3dadd( 15.746, 145.462, -32.5429, 0.12 ) }
    dend_11 { pt3dadd( 16.4104, 146.5, -33.4588, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( 16.5414, 146.7, -33.6479, 0.12 ) }
    dend_11 { pt3dadd( 17.0657, 147.511, -34.4273, 1.92 ) }
    dend_11 { pt3dadd( 18.337, 149.464, -36.2558, 0.12 ) }
    dend_11 { pt3dadd( 18.9713, 150.449, -37.1215, 0.12 ) }
    dend_11 { pt3dadd( 19.1664, 150.757, -37.3469, 0.84 ) }
    dend_11 { pt3dadd( 19.3822, 151.125, -37.5614, 0.12 ) }
    dend_11 { pt3dadd( 19.9036, 152.118, -37.9933, 0.12 ) }
    dend_11 { pt3dadd( 20.3004, 152.909, -38.1304, 1.68 ) }
    dend_11 { pt3dadd( 20.5776, 153.428, -38.0685, 1.2 ) }
    dend_11 { pt3dadd( 21.0813, 154.328, -37.8792, 0.12 ) }
    dend_11 { pt3dadd( 21.5628, 155.115, -37.6386, 0.12 ) }
    dend_11 { pt3dadd( 21.9234, 155.648, -37.4289, 0.6 ) }
    dend_11 { pt3dadd( 22.9488, 157.014, -36.7926, 0.48 ) }
    dend_11 { pt3dadd( 23.4579, 157.684, -36.482, 0.48 ) }
    dend_11 { pt3dadd( 23.8473, 158.178, -36.2544, 0.48 ) }
    dend_11 { pt3dadd( 24.2788, 158.747, -36.0411, 0.12 ) }
    dend_11 { pt3dadd( 24.5569, 159.132, -35.9353, 0.12 ) }
    dend_11 { pt3dadd( 25.0178, 159.892, -35.853, 1.44 ) }
    dend_11 { pt3dadd( 25.2421, 160.38, -35.8648, 1.68 ) }
    dend_11 { pt3dadd( 25.6235, 161.36, -35.915, 0.12 ) }
    dend_11 { pt3dadd( 26.054, 162.643, -36.0094, 0.12 ) }
    dend_11 { pt3dadd( 26.3927, 163.782, -36.1245, 1.92 ) }
    dend_11 { pt3dadd( 26.7592, 165.119, -36.266, 0.12 ) }
    dend_11 { pt3dadd( 27.1296, 166.531, -36.4317, 0.12 ) }
    dend_11 { pt3dadd( 27.2653, 167.051, -36.501, 0.6 ) }
    dend_11 { pt3dadd( 27.329, 167.309, -36.5396, 0.12 ) }
    dend_11 { pt3dadd( 27.6061, 168.49, -36.7102, 0.12 ) }
    dend_11 { pt3dadd( 27.7585, 169.295, -36.88, 1.08 ) }
    dend_11 { pt3dadd( 27.8268, 169.7, -36.9857, 0.72 ) }
    dend_11 { pt3dadd( 27.8637, 169.98, -37.0801, 0.12 ) }
    dend_11 { pt3dadd( 27.9732, 170.974, -37.4676, 0.12 ) }
    dend_11 { pt3dadd( 28.0611, 171.908, -37.8648, 1.44 ) }
    dend_11 { pt3dadd( 28.1428, 173.55, -38.7272, 0.12 ) }
    dend_11 { pt3dadd( 28.1701, 174.015, -38.987, 0.12 ) }
    dend_11 { pt3dadd( 28.18, 174.132, -39.0532, 0.48 ) }
    dend_11 { pt3dadd( 28.2127, 174.395, -39.1954, 0.12 ) }
    dend_11 { pt3dadd( 28.3755, 175.228, -39.6001, 0.48 ) }
    dend_11 { pt3dadd( 28.6738, 176.244, -39.9796, 0.12 ) }
    dend_11 { pt3dadd( 29.1116, 177.533, -40.4422, 0.12 ) }
    dend_11 { pt3dadd( 29.1927, 177.773, -40.5377, 0.72 ) }
    dend_11 { pt3dadd( 29.4672, 178.608, -40.8723, 1.44 ) }
    dend_11 { pt3dadd( 29.6796, 179.247, -41.1252, 1.8 ) }
    dend_11 { pt3dadd( 29.9647, 180.033, -41.4351, 1.68 ) }
    dend_11 { pt3dadd( 30.5714, 181.691, -42.0395, 0.12 ) }
    dend_11 { pt3dadd( 30.7643, 182.294, -42.3027, 0.12 ) }
    dend_11 { pt3dadd( 30.9357, 182.884, -42.5829, 0.12 ) }
    dend_11 { pt3dadd( 31.0903, 183.563, -42.9468, 1.32 ) }
    dend_11 { pt3dadd( 31.1846, 184.047, -43.2183, 1.32 ) }
    dend_11 { pt3dadd( 31.2386, 184.397, -43.4131, 1.32 ) }
    dend_11 { pt3dadd( 31.3672, 185.389, -43.889, 0.12 ) }
    dend_11 { pt3dadd( 31.4214, 186.266, -44.3979, 0.12 ) }
    dend_11 { pt3dadd( 31.3843, 187.148, -45.0082, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 10.9687, 119.539, -17.2674, 0.12 ) }
    dend_10 { pt3dadd( 13.1549, 119.949, -1.59426, 0.12 ) }
    dend_10 { pt3dadd( 13.2432, 119.965, -0.993527, 0.12 ) }
    dend_10 { pt3dadd( 13.3009, 119.976, -0.621416, 0.12 ) }
    dend_10 { pt3dadd( 13.5066, 120.01, 0.6371, 0.84 ) }
    dend_10 { pt3dadd( 13.5757, 120.021, 1.06086, 0.84 ) }
    dend_10 { pt3dadd( 13.6997, 120.04, 2.02911, 0.36 ) }
    dend_10 { pt3dadd( 13.9455, 120.092, 1.68108, 0.36 ) }
    dend_10 { pt3dadd( 14.1564, 120.159, 1.31326, 0.36 ) }
    dend_10 { pt3dadd( 14.3882, 120.24, 0.872061, 0.36 ) }
    dend_10 { pt3dadd( 14.9188, 120.435, -0.15535, 0.36 ) }
    dend_10 { pt3dadd( 16.0212, 120.874, -2.33404, 0.36 ) }
    dend_10 { pt3dadd( 16.616, 121.125, -3.46947, 2.04 ) }
    dend_10 { pt3dadd( 17.5418, 121.52, -5.17786, 1.56 ) }
    dend_10 { pt3dadd( 17.9657, 121.702, -5.89135, 0.12 ) }
    dend_10 { pt3dadd( 18.1739, 121.791, -6.19975, 0.12 ) }
    dend_10 { pt3dadd( 18.8054, 122.018, -6.92478, 1.2 ) }
    dend_10 { pt3dadd( 19.3395, 122.153, -7.34666, 0.48 ) }
    dend_10 { pt3dadd( 19.6431, 122.21, -7.53525, 0.12 ) }
    dend_10 { pt3dadd( 20.4984, 122.365, -7.94636, 0.12 ) }
    dend_10 { pt3dadd( 21.3792, 122.53, -8.4357, 1.32 ) }
    dend_10 { pt3dadd( 21.7778, 122.608, -8.68429, 1.68 ) }
    dend_10 { pt3dadd( 22.9524, 122.876, -9.52451, 0.12 ) }
    dend_10 { pt3dadd( 23.3078, 122.974, -9.84465, 0.12 ) }
    dend_10 { pt3dadd( 23.8296, 123.133, -10.4213, 0.6 ) }
    dend_10 { pt3dadd( 24.7913, 123.416, -11.6304, 0.12 ) }
    dend_10 { pt3dadd( 25.1177, 123.499, -12.0539, 0.12 ) }
    dend_10 { pt3dadd( 26.0226, 123.709, -13.2758, 1.8 ) }
    dend_10 { pt3dadd( 26.9631, 123.904, -14.5312, 1.8 ) }
    dend_10 { pt3dadd( 27.9219, 124.047, -15.8825, 0.48 ) }
    dend_10 { pt3dadd( 28.2629, 124.074, -16.3469, 0.48 ) }
    dend_10 { pt3dadd( 28.6098, 124.079, -16.7571, 0.48 ) }
    dend_10 { pt3dadd( 29.3135, 124.062, -17.5413, 1.44 ) }
    dend_10 { pt3dadd( 29.7367, 124.038, -17.9764, 1.68 ) }
    dend_10 { pt3dadd( 31.2922, 123.996, -19.4882, 0.36 ) }
    dend_10 { pt3dadd( 31.9847, 124.044, -20.166, 0.36 ) }
    dend_10 { pt3dadd( 32.5899, 124.167, -20.9008, 1.68 ) }
    dend_10 { pt3dadd( 33.1375, 124.342, -21.652, 1.2 ) }
    dend_10 { pt3dadd( 33.8791, 124.667, -22.7885, 0.36 ) }
    dend_10 { pt3dadd( 34.365, 124.941, -23.5959, 0.36 ) }
    dend_10 { pt3dadd( 34.9857, 125.404, -24.7359, 1.68 ) }
    dend_10 { pt3dadd( 36.0714, 126.381, -26.967, 0.24 ) }
    dend_10 { pt3dadd( 36.3037, 126.614, -27.4603, 0.24 ) }
    dend_10 { pt3dadd( 36.5865, 126.894, -28.0113, 0.84 ) }
    dend_10 { pt3dadd( 36.8165, 127.101, -28.4081, 0.96 ) }
    dend_10 { pt3dadd( 37.4088, 127.507, -29.2593, 0.24 ) }
    dend_10 { pt3dadd( 37.783, 127.679, -29.6794, 0.24 ) }
    dend_10 { pt3dadd( 38.5358, 127.881, -30.3534, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 38.8712, 127.917, -30.7103, 1.68 ) }
    dend_10 { pt3dadd( 39.4416, 127.883, -31.5221, 0.36 ) }
    dend_10 { pt3dadd( 39.7113, 127.827, -31.9729, 0.36 ) }
    dend_10 { pt3dadd( 39.9055, 127.756, -32.3429, 0.36 ) }
    dend_10 { pt3dadd( 40.6834, 127.402, -33.9488, 0.96 ) }
    dend_10 { pt3dadd( 41.5479, 126.949, -35.8035, 1.68 ) }
    dend_10 { pt3dadd( 42.5762, 126.375, -38.0281, 0.6 ) }
    dend_10 { pt3dadd( 42.7728, 126.253, -38.4496, 0.48 ) }
    dend_10 { pt3dadd( 43.5047, 125.75, -39.9778, 2.04 ) }
    dend_10 { pt3dadd( 43.7583, 125.55, -40.4764, 2.52 ) }
    dend_10 { pt3dadd( 44.5279, 124.88, -41.7719, 0.36 ) }
    dend_10 { pt3dadd( 44.7575, 124.684, -42.0743, 0.36 ) }
    dend_10 { pt3dadd( 45.1559, 124.392, -42.4637, 0.48 ) }
    dend_10 { pt3dadd( 46.024, 123.787, -43.2283, 0.36 ) }
    dend_10 { pt3dadd( 46.3416, 123.555, -43.4745, 0.36 ) }
    dend_10 { pt3dadd( 46.5215, 123.417, -43.6102, 0.36 ) }
    dend_10 { pt3dadd( 47.428, 122.714, -44.1933, 0.36 ) }
    dend_10 { pt3dadd( 48.1824, 122.14, -44.6217, 1.08 ) }
    dend_10 { pt3dadd( 48.7051, 121.766, -44.8554, 1.8 ) }
    dend_10 { pt3dadd( 49.3847, 121.314, -45.0615, 1.2 ) }
    dend_10 { pt3dadd( 49.9705, 120.967, -45.2154, 0.36 ) }
    dend_10 { pt3dadd( 50.7821, 120.538, -45.3333, 0.36 ) }
    dend_10 { pt3dadd( 51.615, 120.149, -45.3692, 0.36 ) }
    dend_10 { pt3dadd( 52.2689, 119.893, -45.3524, 1.2 ) }
    dend_10 { pt3dadd( 53.0839, 119.642, -45.3274, 1.8 ) }
    dend_10 { pt3dadd( 54.1662, 119.381, -45.3098, 0.12 ) }
    dend_10 { pt3dadd( 55.7045, 119.08, -45.3261, 0.12 ) }
    dend_10 { pt3dadd( 56.5492, 118.929, -45.3633, 1.44 ) }
    dend_10 { pt3dadd( 57.0311, 118.826, -45.4019, 2.16 ) }
    dend_10 { pt3dadd( 57.8875, 118.588, -45.4848, 2.4 ) }
    dend_10 { pt3dadd( 58.9984, 118.19, -45.5875, 0.24 ) }
    dend_10 { pt3dadd( 59.4373, 117.978, -45.6232, 0.24 ) }
    dend_10 { pt3dadd( 59.8444, 117.715, -45.6764, 0.24 ) }
    dend_10 { pt3dadd( 60.5457, 117.162, -45.7168, 0.48 ) }
    dend_10 { pt3dadd( 61.0002, 116.756, -45.7199, 0.12 ) }
    dend_10 { pt3dadd( 61.5358, 116.284, -45.675, 0.12 ) }
    dend_10 { pt3dadd( 61.9134, 115.987, -45.5964, 0.12 ) }
    dend_10 { pt3dadd( 62.3109, 115.737, -45.5063, 0.12 ) }
    dend_10 { pt3dadd( 62.8202, 115.491, -45.3273, 0.36 ) }
    dend_10 { pt3dadd( 63.1577, 115.371, -45.1887, 0.12 ) }
    dend_10 { pt3dadd( 64.2109, 115.042, -44.7401, 0.12 ) }
    dend_10 { pt3dadd( 65.1291, 114.783, -44.3309, 1.44 ) }
    dend_10 { pt3dadd( 65.3648, 114.721, -44.2246, 1.56 ) }
    dend_10 { pt3dadd( 66.7195, 114.354, -43.5905, 0.36 ) }
    dend_10 { pt3dadd( 67.1492, 114.214, -43.3105, 0.36 ) }
    dend_10 { pt3dadd( 67.401, 114.11, -43.0981, 0.36 ) }
    dend_10 { pt3dadd( 67.6938, 113.931, -42.7823, 0.36 ) }
    dend_10 { pt3dadd( 67.9113, 113.765, -42.5717, 0.36 ) }
    dend_10 { pt3dadd( 68.0647, 113.629, -42.4039, 0.36 ) }
    dend_10 { pt3dadd( 69.0925, 112.611, -41.2842, 0.12 ) }
    dend_10 { pt3dadd( 69.2918, 112.413, -41.0673, 0.12 ) }
    dend_10 { pt3dadd( 69.5165, 112.199, -40.8115, 0.12 ) }
    dend_10 { pt3dadd( 70.2857, 111.515, -39.9668, 2.4 ) }
    dend_10 { pt3dadd( 71.618, 110.421, -38.657, 0.12 ) }
    dend_10 { pt3dadd( 71.9985, 110.121, -38.3316, 0.12 ) }
    dend_10 { pt3dadd( 72.484, 109.752, -37.9398, 0.36 ) }
    dend_10 { pt3dadd( 72.9546, 109.397, -37.5266, 0.12 ) }
    dend_10 { pt3dadd( 73.3425, 109.104, -37.1679, 0.12 ) }
    dend_10 { pt3dadd( 73.7085, 108.819, -36.8102, 1.08 ) }
    dend_10 { pt3dadd( 74.0227, 108.572, -36.5056, 1.08 ) }
    dend_10 { pt3dadd( 75.0868, 107.691, -35.3709, 0.36 ) }
    dend_10 { pt3dadd( 75.3607, 107.432, -35.0765, 0.36 ) }
    dend_10 { pt3dadd( 75.5798, 107.212, -34.8751, 0.12 ) }
    dend_10 { pt3dadd( 75.7105, 107.076, -34.733, 0.12 ) }
    dend_10 { pt3dadd( 76.4305, 106.323, -33.9059, 0.12 ) }
    dend_10 { pt3dadd( 76.7595, 105.996, -33.5528, 1.32 ) }
    dend_10 { pt3dadd( 77.266, 105.522, -33.0567, 2.04 ) }
    dend_10 { pt3dadd( 77.8613, 105.02, -32.4828, 1.32 ) }
    dend_10 { pt3dadd( 79.2052, 103.995, -31.1947, 0.12 ) }
    dend_10 { pt3dadd( 79.3887, 103.876, -31.0301, 0.12 ) }
    dend_10 { pt3dadd( 79.7041, 103.728, -30.6785, 0.24 ) }
    dend_10 { pt3dadd( 80.1758, 103.546, -30.1031, 0.24 ) }
    dend_10 { pt3dadd( 80.536, 103.446, -29.6184, 0.24 ) }
    dend_10 { pt3dadd( 81.0298, 103.356, -28.8884, 0.24 ) }
    dend_10 { pt3dadd( 81.2822, 103.333, -28.5366, 0.84 ) }
    dend_10 { pt3dadd( 83.0514, 103.259, -25.7604, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 39.5034, 91.2605, 15.9489, 0.72 ) }
    dend_6 { pt3dadd( 39.2626, 90.9484, 15.2731, 0.72 ) }
    dend_6 { pt3dadd( 38.8814, 90.582, 14.3904, 0.6 ) }
    dend_6 { pt3dadd( 38.6335, 90.3437, 13.8163, 0.36 ) }
    dend_6 { pt3dadd( 38.5413, 90.2551, 13.6029, 0.48 ) }
    dend_6 { pt3dadd( 38.3112, 90.0339, 13.07, 0.36 ) }
    dend_6 { pt3dadd( 38.0302, 89.7638, 12.4192, 0.12 ) }
    dend_6 { pt3dadd( 37.9188, 89.6923, 12.198, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 39.5034, 91.2605, 15.9489, 0.48 ) }
    dend_5 { pt3dadd( 39.5558, 91.8563, 15.8801, 0.48 ) }
    dend_5 { pt3dadd( 39.5806, 92.3759, 15.8454, 0.48 ) }
    dend_5 { pt3dadd( 39.5706, 92.931, 15.7998, 0.6 ) }
    dend_5 { pt3dadd( 39.5372, 93.3807, 15.7638, 0.48 ) }
    dend_5 { pt3dadd( 39.4761, 94.058, 15.7113, 0.48 ) }
    dend_5 { pt3dadd( 39.4067, 94.8239, 15.6538, 2.04 ) }
    dend_5 { pt3dadd( 39.3697, 95.4534, 15.6192, 1.92 ) }
    dend_5 { pt3dadd( 39.3471, 96.1783, 15.5471, 1.44 ) }
    dend_5 { pt3dadd( 39.3403, 96.7472, 15.4664, 1.08 ) }
    dend_5 { pt3dadd( 39.351, 97.2486, 15.3862, 0.96 ) }
    dend_5 { pt3dadd( 39.3788, 97.4989, 15.3321, 0.72 ) }
    dend_5 { pt3dadd( 39.5158, 98.0674, 15.1632, 1.08 ) }
    dend_5 { pt3dadd( 39.8262, 98.9924, 14.8988, 0.48 ) }
    dend_5 { pt3dadd( 39.9798, 99.3788, 14.8025, 0.48 ) }
    dend_5 { pt3dadd( 40.2468, 100.019, 14.6637, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 40.4771, 100.586, 14.5388, 1.92 ) }
    dend_5 { pt3dadd( 40.7543, 101.348, 14.4135, 1.08 ) }
    dend_5 { pt3dadd( 40.9352, 101.892, 14.3669, 0.72 ) }
    dend_5 { pt3dadd( 41.0206, 102.185, 14.377, 0.24 ) }
    dend_5 { pt3dadd( 41.2513, 102.853, 14.4262, 0.24 ) }
    dend_5 { pt3dadd( 41.4163, 103.348, 14.4625, 0.72 ) }
    dend_5 { pt3dadd( 41.5691, 103.929, 14.523, 0.12 ) }
    dend_5 { pt3dadd( 41.7085, 104.436, 14.5922, 0.12 ) }
    dend_5 { pt3dadd( 41.9107, 105.146, 14.6754, 1.8 ) }
    dend_5 { pt3dadd( 42.1555, 106.049, 14.779, 2.76 ) }
    dend_5 { pt3dadd( 42.2994, 106.638, 14.8581, 2.64 ) }
    dend_5 { pt3dadd( 42.5285, 107.622, 15.0022, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 34.871, -115.517, -26.6081, 0.12 ) }
    dend_39 { pt3dadd( 35.7869, -116.097, -26.7074, 0.12 ) }
    dend_39 { pt3dadd( 36.547, -116.578, -26.7897, 0.12 ) }
    dend_39 { pt3dadd( 37.3155, -117.065, -26.8731, 0.6 ) }
    dend_39 { pt3dadd( 37.7188, -117.32, -26.9168, 0.12 ) }
    dend_39 { pt3dadd( 38.6859, -117.932, -27.0216, 0.12 ) }
    dend_39 { pt3dadd( 39.1926, -118.253, -27.0766, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 34.871, -115.517, -26.6081, 0.12 ) }
    dend_36 { pt3dadd( 35.0055, -116.704, -26.2972, 0.12 ) }
    dend_36 { pt3dadd( 35.1025, -117.415, -25.9838, 0.12 ) }
    dend_36 { pt3dadd( 35.2011, -117.927, -25.7242, 0.96 ) }
    dend_36 { pt3dadd( 35.3129, -118.428, -25.4707, 1.56 ) }
    dend_36 { pt3dadd( 35.5102, -119.217, -25.089, 0.12 ) }
    dend_36 { pt3dadd( 35.627, -119.629, -24.9011, 0.12 ) }
    dend_36 { pt3dadd( 36.0875, -120.879, -24.2501, 1.08 ) }
    dend_36 { pt3dadd( 36.3126, -121.411, -23.9683, 0.72 ) }
    dend_36 { pt3dadd( 36.5015, -121.826, -23.762, 0.12 ) }
    dend_36 { pt3dadd( 36.738, -122.311, -23.4723, 0.12 ) }
    dend_36 { pt3dadd( 36.9472, -122.75, -23.1907, 0.12 ) }
    dend_36 { pt3dadd( 37.2515, -123.452, -22.7665, 1.44 ) }
    dend_36 { pt3dadd( 37.4017, -123.835, -22.5626, 1.68 ) }
    dend_36 { pt3dadd( 37.504, -124.136, -22.3946, 1.68 ) }
    dend_36 { pt3dadd( 37.8901, -125.411, -21.7072, 0.12 ) }
    dend_36 { pt3dadd( 38.0302, -126.002, -21.4001, 0.12 ) }
    dend_36 { pt3dadd( 38.1323, -126.645, -21.1005, 0.12 ) }
    dend_36 { pt3dadd( 38.1538, -126.873, -21.0128, 0.96 ) }
    dend_36 { pt3dadd( 38.1818, -127.406, -20.8274, 0.96 ) }
    dend_36 { pt3dadd( 38.2007, -127.901, -20.6838, 0.12 ) }
    dend_36 { pt3dadd( 38.2039, -129.255, -20.4092, 0.12 ) }
    dend_36 { pt3dadd( 38.1947, -129.947, -20.2692, 0.96 ) }
    dend_36 { pt3dadd( 38.1734, -130.579, -20.1545, 1.68 ) }
    dend_36 { pt3dadd( 38.1602, -131.025, -20.0814, 1.92 ) }
    dend_36 { pt3dadd( 38.1458, -131.494, -20.0267, 1.92 ) }
    dend_36 { pt3dadd( 38.107, -132.663, -19.9444, 0.12 ) }
    dend_36 { pt3dadd( 38.0787, -133.114, -19.9473, 0.12 ) }
    dend_36 { pt3dadd( 37.9808, -134.127, -19.9879, 0.12 ) }
    dend_36 { pt3dadd( 37.9084, -134.589, -20.0495, 0.6 ) }
    dend_36 { pt3dadd( 37.7658, -135.209, -20.166, 0.12 ) }
    dend_36 { pt3dadd( 37.5757, -135.848, -20.3074, 0.12 ) }
    dend_36 { pt3dadd( 37.3584, -136.514, -20.4747, 1.2 ) }
    dend_36 { pt3dadd( 37.0334, -137.443, -20.7154, 1.68 ) }
    dend_36 { pt3dadd( 36.5378, -138.78, -21.0397, 0.12 ) }
    dend_36 { pt3dadd( 36.3021, -139.449, -21.201, 0.12 ) }
    dend_36 { pt3dadd( 36.1668, -139.919, -21.3002, 0.12 ) }
    dend_36 { pt3dadd( 36.0492, -140.47, -21.4291, 0.12 ) }
    dend_36 { pt3dadd( 36.008, -140.796, -21.5048, 1.2 ) }
    dend_36 { pt3dadd( 35.9725, -141.498, -21.6604, 1.56 ) }
    dend_36 { pt3dadd( 35.9937, -142.722, -21.9095, 0.24 ) }
    dend_36 { pt3dadd( 36.0432, -143.622, -22.1172, 0.24 ) }
    dend_36 { pt3dadd( 36.0893, -144.525, -22.3387, 0.72 ) }
    dend_36 { pt3dadd( 36.1025, -144.97, -22.4462, 0.84 ) }
    dend_36 { pt3dadd( 36.1116, -145.445, -22.5538, 0.12 ) }
    dend_36 { pt3dadd( 36.1095, -145.777, -22.627, 0.12 ) }
    dend_36 { pt3dadd( 36.0729, -146.33, -22.7526, 0.12 ) }
    dend_36 { pt3dadd( 36.034, -146.731, -22.8564, 0.12 ) }
    dend_36 { pt3dadd( 36.0349, -147.189, -22.7937, 0.12 ) }
    dend_36 { pt3dadd( 36.0486, -147.403, -22.7204, 0.12 ) }
    dend_36 { pt3dadd( 36.1122, -148.144, -22.3582, 1.32 ) }
    dend_36 { pt3dadd( 36.1637, -148.948, -21.8922, 0.12 ) }
    dend_36 { pt3dadd( 36.2509, -149.643, -21.3983, 0.12 ) }
    dend_36 { pt3dadd( 36.8312, -152.593, -18.8332, 0.6 ) }
    dend_36 { pt3dadd( 37.1095, -153.635, -17.6501, 1.32 ) }
    dend_36 { pt3dadd( 37.2018, -153.897, -17.2504, 2.04 ) }
    dend_36 { pt3dadd( 37.3274, -154.143, -16.6989, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 83.7928, -46.1726, 24.3653, 0.24 ) }
    dend_32 { pt3dadd( 85.0106, -46.4014, 25.1286, 0.24 ) }
    dend_32 { pt3dadd( 85.5495, -46.4918, 25.4641, 0.24 ) }
    dend_32 { pt3dadd( 87.5185, -46.8146, 26.6727, 0.24 ) }
    dend_32 { pt3dadd( 88.1035, -46.8996, 27.0065, 0.96 ) }
    dend_32 { pt3dadd( 89.2189, -47.0463, 27.5447, 1.56 ) }
    dend_32 { pt3dadd( 90.1986, -47.1618, 28.0297, 0.36 ) }
    dend_32 { pt3dadd( 92.1022, -47.3559, 28.9301, 0.12 ) }
    dend_32 { pt3dadd( 92.536, -47.3919, 29.1267, 1.2 ) }
    dend_32 { pt3dadd( 93.9074, -47.4694, 29.6615, 2.16 ) }
    dend_32 { pt3dadd( 95.625, -47.4798, 30.3566, 0.12 ) }
    dend_32 { pt3dadd( 97.4184, -47.382, 31.0722, 0.12 ) }
    dend_32 { pt3dadd( 97.7399, -47.3365, 31.1933, 0.84 ) }
    dend_32 { pt3dadd( 98.38, -47.1778, 31.4016, 0.96 ) }
    dend_32 { pt3dadd( 99.2443, -46.9062, 31.6941, 0.12 ) }
    dend_32 { pt3dadd( 100.053, -46.5371, 31.9985, 0.12 ) }
    dend_32 { pt3dadd( 100.328, -46.3413, 32.1061, 0.6 ) }
    dend_32 { pt3dadd( 101.003, -45.7452, 32.1873, 0.12 ) }
    dend_32 { pt3dadd( 101.465, -45.2404, 32.2542, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 83.7928, -46.1726, 24.3653, 0.6 ) }
    dend_31 { pt3dadd( 83.9017, -44.8838, 24.5926, 0.6 ) }
    dend_31 { pt3dadd( 83.9396, -44.5289, 24.6571, 0.6 ) }
    dend_31 { pt3dadd( 84.0648, -43.7791, 24.7738, 0.84 ) }
    dend_31 { pt3dadd( 84.3125, -42.7726, 24.9167, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 84.5958, -41.6259, 25.0605, 0.12 ) }
    dend_31 { pt3dadd( 84.6955, -41.2357, 25.1048, 0.96 ) }
    dend_31 { pt3dadd( 84.9619, -40.3961, 25.2017, 1.2 ) }
    dend_31 { pt3dadd( 85.3122, -39.4516, 25.2924, 0.12 ) }
    dend_31 { pt3dadd( 85.753, -38.4066, 25.3705, 0.12 ) }
    dend_31 { pt3dadd( 86.1378, -37.5941, 25.3887, 0.12 ) }
    dend_31 { pt3dadd( 86.6263, -36.6945, 25.3699, 0.12 ) }
    dend_31 { pt3dadd( 86.8615, -36.296, 25.3609, 0.12 ) }
    dend_31 { pt3dadd( 87.4308, -35.4105, 25.3436, 1.68 ) }
    dend_31 { pt3dadd( 87.6514, -35.1288, 25.2756, 1.92 ) }
    dend_31 { pt3dadd( 88.5585, -34.1806, 24.8378, 0.12 ) }
    dend_31 { pt3dadd( 89.3846, -33.4418, 24.3294, 0.12 ) }
    dend_31 { pt3dadd( 89.752, -33.1108, 24.0444, 1.32 ) }
    dend_31 { pt3dadd( 90.0657, -32.8037, 23.7104, 1.68 ) }
    dend_31 { pt3dadd( 91.9825, -30.9296, 21.0797, 0.36 ) }
    dend_31 { pt3dadd( 92.2164, -30.7226, 20.7275, 0.36 ) }
    dend_31 { pt3dadd( 92.5401, -30.4539, 20.1853, 0.12 ) }
    dend_31 { pt3dadd( 93.0263, -30.0593, 19.2779, 0.12 ) }
    dend_31 { pt3dadd( 93.9719, -29.2625, 17.3606, 0.48 ) }
    dend_31 { pt3dadd( 94.5367, -28.7295, 16.102, 1.44 ) }
    dend_31 { pt3dadd( 94.9487, -28.2015, 15.0973, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.1682, -282.09, -41.5331, 0.24 ) }
    dend_22 { pt3dadd( -9.0443, -281.957, -41.5965, 0.24 ) }
    dend_22 { pt3dadd( -8.88707, -281.788, -41.6769, 0.24 ) }
    dend_22 { pt3dadd( -8.69691, -281.584, -41.7742, 0.6 ) }
    dend_22 { pt3dadd( -8.50478, -281.377, -41.8725, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.1682, -282.09, -41.5331, 0.12 ) }
    dend_21 { pt3dadd( -8.89374, -282.415, -41.0329, 0.12 ) }
    dend_21 { pt3dadd( -8.71467, -282.595, -40.7068, 0.12 ) }
    dend_21 { pt3dadd( -8.5405, -282.72, -40.4569, 0.12 ) }
    dend_21 { pt3dadd( -8.29085, -282.845, -40.1808, 0.12 ) }
    dend_21 { pt3dadd( -8.14486, -282.9, -40.0441, 0.12 ) }
    dend_21 { pt3dadd( -6.90959, -283.245, -39.0318, 0.12 ) }
    dend_21 { pt3dadd( -6.35124, -283.311, -38.6612, 2.04 ) }
    dend_21 { pt3dadd( -5.74489, -283.33, -38.2792, 1.56 ) }
    dend_21 { pt3dadd( -5.09174, -283.307, -37.8995, 0.36 ) }
    dend_21 { pt3dadd( -4.74023, -283.271, -37.6821, 0.36 ) }
    dend_21 { pt3dadd( -4.33926, -283.215, -37.438, 0.36 ) }
    dend_21 { pt3dadd( -3.5185, -283.079, -36.9887, 0.36 ) }
    dend_21 { pt3dadd( -3.20761, -283.02, -36.7612, 0.6 ) }
    dend_21 { pt3dadd( -3.00582, -282.98, -36.574, 0.6 ) }
    dend_21 { pt3dadd( -2.16061, -282.787, -35.6738, 0.36 ) }
    dend_21 { pt3dadd( -1.97537, -282.745, -35.4707, 0.6 ) }
    dend_21 { pt3dadd( -1.70509, -282.691, -35.2057, 0.6 ) }
    dend_21 { pt3dadd( -1.18987, -282.612, -34.7868, 0.12 ) }
    dend_21 { pt3dadd( -0.960184, -282.6, -34.6605, 0.12 ) }
    dend_21 { pt3dadd( -0.51489, -282.619, -34.5107, 0.12 ) }
    dend_21 { pt3dadd( -0.0574031, -282.69, -34.4833, 1.08 ) }
    dend_21 { pt3dadd( 0.830726, -282.926, -34.5193, 0.12 ) }
    dend_21 { pt3dadd( 1.02094, -283.004, -34.5418, 0.12 ) }
    dend_21 { pt3dadd( 1.53652, -283.27, -34.6235, 0.12 ) }
    dend_21 { pt3dadd( 1.85764, -283.467, -34.6774, 0.48 ) }
    dend_21 { pt3dadd( 2.36972, -283.825, -34.7681, 0.12 ) }
    dend_21 { pt3dadd( 2.66805, -284.055, -34.8163, 0.12 ) }
    dend_21 { pt3dadd( 3.16548, -284.464, -34.8521, 0.12 ) }
    dend_21 { pt3dadd( 3.52055, -284.754, -34.886, 0.12 ) }
    dend_21 { pt3dadd( 3.82187, -284.991, -34.9224, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 37.3274, -154.143, -16.6989, 0.48 ) }
    dend_38 { pt3dadd( 37.5706, -155.822, -19.5115, 0.48 ) }
    dend_38 { pt3dadd( 37.5998, -156.095, -19.9481, 0.48 ) }
    dend_38 { pt3dadd( 37.6556, -156.727, -20.8612, 0.12 ) }
    dend_38 { pt3dadd( 37.6878, -157.037, -21.2774, 0.12 ) }
    dend_38 { pt3dadd( 37.7323, -157.466, -21.854, 1.2 ) }
    dend_38 { pt3dadd( 37.7883, -158.007, -22.5803, 0.12 ) }
    dend_38 { pt3dadd( 37.7908, -158.145, -22.7177, 0.12 ) }
    dend_38 { pt3dadd( 37.7992, -158.577, -23.1594, 0.72 ) }
    dend_38 { pt3dadd( 37.7905, -158.828, -23.3576, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 37.3274, -154.143, -16.6989, 0.12 ) }
    dend_37 { pt3dadd( 36.5533, -156.328, -18.7934, 0.12 ) }
    dend_37 { pt3dadd( 36.2006, -157.268, -19.3682, 0.12 ) }
    dend_37 { pt3dadd( 36.0925, -157.54, -19.5076, 0.6 ) }
    dend_37 { pt3dadd( 35.7644, -158.294, -19.852, 0.24 ) }
    dend_37 { pt3dadd( 35.625, -158.574, -19.9348, 0.24 ) }
    dend_37 { pt3dadd( 35.2244, -159.301, -20.0885, 0.24 ) }
    dend_37 { pt3dadd( 34.8672, -159.827, -20.0457, 0.6 ) }
    dend_37 { pt3dadd( 34.2944, -160.51, -19.9915, 0.12 ) }
    dend_37 { pt3dadd( 33.7919, -161.023, -19.9744, 0.12 ) }
    dend_37 { pt3dadd( 32.7248, -161.933, -20.0145, 0.84 ) }
    dend_37 { pt3dadd( 32.4648, -162.13, -20.0182, 0.84 ) }
    dend_37 { pt3dadd( 31.96, -162.461, -20.0001, 0.12 ) }
    dend_37 { pt3dadd( 31.6741, -162.619, -19.9749, 0.12 ) }
    dend_37 { pt3dadd( 30.9085, -162.969, -19.8552, 0.84 ) }
    dend_37 { pt3dadd( 30.6008, -163.083, -19.8381, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_15, dend_0, axon_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, axon_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_16 nseg = 11
    dend_41 nseg = 7
    dend_58 nseg = 3
    dend_55 nseg = 3
    dend_53 nseg = 5
    dend_50 nseg = 3
    dend_34 nseg = 3
    dend_9 nseg = 3
    dend_4 nseg = 3
    dend_60 nseg = 17
    dend_59 nseg = 5
    dend_57 nseg = 5
    dend_56 nseg = 3
    dend_52 nseg = 5
    dend_51 nseg = 5
    dend_30 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 5
    dend_11 nseg = 5
    dend_10 nseg = 7
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L4_DBC_90f039ca46_0_0


