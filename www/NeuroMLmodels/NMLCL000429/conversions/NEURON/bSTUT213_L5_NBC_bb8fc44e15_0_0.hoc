// Cell: bSTUT213_L5_NBC_bb8fc44e15_0_0
/*
{
  "id" : "bSTUT213_L5_NBC_bb8fc44e15_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -10.2197, -8.14, 3.62", "-1.55142, -10.2197, -8.14, 3.62", "-1.43136, -12.1068, -8.14, 3.62", "-1.32831, -13.7265, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 4.28084, -3.81, 1.24", "6.22346, 4.39468, -3.56783, 1.24", "8.87052, 4.63425, -2.85463, 1.24", "11.3689, 4.86036, -2.1815, 1.24", "13.8609, 5.08591, -1.51009, 1.24", "18.9821, 5.54941, -0.130286, 1.24", "22.9275, 5.9065, 0.93274, 1.24", "24.5814, 5.99864, 1.43565, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 5.03684, -1.31, 0.68", "-8.93231, 4.94031, -1.47345, 0.68", "-11.5052, 4.89953, -1.70094, 0.68", "-15.6323, 5.26678, -2.16084, 0.68", "-18.5679, 5.83278, -2.50643, 0.68", "-20.3737, 6.36887, -2.71066, 0.68", "-23.4454, 7.41629, -3.00927, 0.68", "-26.5983, 8.71974, -3.35308, 0.68", "-30.6427, 10.759, -3.8019, 0.68", "-33.4428, 12.4788, -4.15923, 0.68", "-37.4455, 15.2207, -4.87256, 0.68", "-41.0336, 17.8964, -5.77466, 0.68", "-43.4032, 19.8397, -6.57105, 0.68", "-45.6102, 21.8595, -7.47555, 0.68", "-47.1662, 23.3694, -8.17081, 0.68", "-50.1155, 26.162, -9.48602, 0.68", "-52.2815, 28.2265, -10.5557, 0.68", "-53.2811, 29.1973, -11.0371, 0.68", "-56.8424, 32.5637, -12.7856, 0.68", "-59.6669, 35.198, -14.2397, 0.68", "-63.6817, 38.7901, -16.1713, 0.68", "-66.4176, 41.1717, -17.2903, 0.57", "-68.7582, 43.0965, -18.1567, 0.57", "-71.5662, 45.2983, -19.255, 0.57", "-72.1988, 45.7322, -19.5822, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -5.12716, -2.56, 1.47", "6.02683, -5.77916, -2.43015, 1.47", "8.52099, -7.4762, -2.09217, 1.47", "11.5444, -9.53331, -1.68248, 1.47", "13.4561, -10.8341, -1.42343, 2.6", "13.7488, -11.0332, -1.38376, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31666", "-4.96601, 24.2182, 0.0, 2.31666", "-7.63332, 38.9791, 0.0, 2.31666" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.32831, -13.7265, -8.14, 0.12", "-0.242063, -13.9156, -8.06909, 0.12", "1.24337, -14.2657, -7.97154, 0.12", "2.01818, -14.4514, -7.9205, 0.45", "2.72218, -14.6103, -7.78566, 0.45", "5.40364, -15.171, -7.28933, 0.45", "5.78302, -15.2541, -7.22087, 1.36", "7.11056, -15.5618, -6.97836, 1.02", "8.92723, -15.985, -6.61918, 0.45", "11.6858, -16.627, -5.7232, 0.45", "14.078, -17.1416, -4.50761, 0.45", "14.7716, -17.2592, -4.11008, 1.7", "16.0239, -17.4451, -2.86801, 0.68", "17.6728, -17.6933, -0.759115, 0.57", "20.1734, -18.0823, 2.83253, 0.57", "21.9506, -18.3552, 5.68598, 0.57", "23.3048, -18.5493, 8.21022, 0.57", "28.1139, -19.1329, 18.1998, 0.45", "28.4836, -19.1772, 19.1201, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.32831, -13.7265, -8.14, 2.26", "-2.21182, -17.1188, -8.15629, 2.26", "-3.08184, -20.4594, -8.17232, 2.26", "-4.35026, -25.3296, -8.19571, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "24.5814, 5.99864, 1.43565, 0.45", "28.2818, 5.71098, 0.654741, 0.45", "30.035, 5.68658, 0.86547, 0.45", "30.9456, 5.78334, 1.16413, 0.45", "32.1231, 6.07, 1.69377, 0.45", "34.4208, 6.98901, 3.01708, 0.79", "37.0586, 8.34319, 4.68872, 0.79", "39.5516, 9.94368, 6.47645, 0.79", "41.3665, 11.3397, 7.86267, 0.79", "42.7751, 12.6562, 8.99105, 0.79", "44.77, 15.1072, 10.7794, 0.79", "46.5392, 17.877, 12.4281, 0.79", "47.3356, 19.2769, 13.0784, 0.68", "48.0276, 20.5363, 13.5352, 0.68", "49.5066, 23.1385, 14.3449, 0.68", "52.613, 28.5591, 16.0531, 0.68", "53.6108, 30.3402, 16.5896, 0.68", "55.2877, 33.2554, 17.4589, 0.68", "56.2475, 34.7474, 17.918, 0.68", "57.1655, 35.9433, 18.3406, 0.57", "59.624, 38.4556, 19.3575, 0.57", "60.903, 39.3483, 20.0136, 0.57", "62.9171, 40.1765, 22.4909, 0.57", "63.5163, 40.1488, 24.3214, 0.57", "64.2125, 39.8629, 27.4807, 0.57", "64.4134, 39.7111, 28.6381, 0.57", "65.081, 38.7349, 33.8974, 0.57", "65.6716, 37.3753, 40.4813, 0.57", "65.9128, 36.209, 45.8281, 0.57", "65.958, 35.6094, 48.815, 0.57", "65.9602, 35.4858, 49.6516, 0.57", "65.9635, 35.2942, 51.1348, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "24.5814, 5.99864, 1.43565, 0.79", "25.7111, 8.03452, -0.297122, 0.79", "26.4194, 9.58422, -1.49958, 0.79", "26.7854, 10.4352, -2.10979, 0.79", "27.8763, 12.4298, -3.45151, 0.79", "29.0638, 14.219, -4.5852, 0.79", "30.1093, 15.6781, -5.4539, 0.79", "31.7239, 17.767, -6.55357, 0.79", "32.9362, 19.256, -7.33761, 0.79", "35.3571, 22.0334, -8.98244, 0.79", "36.9561, 23.5944, -10.2357, 0.79", "38.7163, 24.7258, -11.8946, 1.02", "39.8532, 25.2898, -13.023, 1.02", "40.9374, 25.6507, -14.2298, 1.02", "42.3812, 25.9136, -16.2389, 1.02", "44.465, 25.8602, -20.2451, 1.02", "46.6821, 25.1236, -25.2134, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.7488, -11.0332, -1.38376, 0.68", "15.006, -13.2291, -1.77934, 0.68", "15.456, -13.9142, -1.82245, 0.68", "17.9491, -17.5249, -1.86616, 0.68", "21.8606, -23.1125, -1.80734, 0.68", "24.3884, -26.7448, -1.91638, 0.68", "25.9548, -28.9904, -2.05263, 0.68", "30.7543, -35.5119, -1.89296, 0.68", "32.9688, -38.392, -1.61268, 0.68", "33.6579, -39.2373, -1.47065, 0.68", "37.4001, -43.6107, -0.463471, 0.68", "40.0709, -46.3969, 0.263815, 0.68", "46.9892, -53.327, 2.08628, 0.68", "50.2683, -56.5309, 2.88631, 0.68", "52.2272, -58.3505, 3.36005, 0.68", "54.9381, -60.7883, 4.00344, 0.68", "61.2208, -66.4772, 5.38019, 0.68", "63.6968, -68.8799, 5.66143, 0.68", "64.8145, -70.0706, 5.65373, 0.68", "67.7303, -73.3322, 5.5422, 0.68", "69.5042, -75.4461, 5.43014, 0.68", "73.0443, -80.1037, 5.02338, 0.68", "75.2751, -83.6845, 4.70096, 0.68", "76.8023, -86.2831, 4.42994, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "13.7488, -11.0332, -1.38376, 1.24", "18.0229, -12.1882, -1.51859, 1.24", "20.2091, -12.7789, -1.58756, 1.24", "23.7119, -13.7254, -1.69806, 1.24", "27.2569, -14.6834, -1.80989, 1.24", "36.6559, -17.2231, -2.1064, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "28.4836, -19.1772, 19.1201, 0.45", "29.1531, -21.2025, 23.0405, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "28.4836, -19.1772, 19.1201, 0.45", "34.8067, -18.8556, 17.2003, 0.45", "37.8292, -18.7354, 16.6598, 0.45", "41.9988, -18.6109, 16.173, 0.45", "46.5036, -18.8119, 15.9458, 0.45", "48.8011, -19.2606, 16.0538, 0.45", "54.8898, -21.1324, 16.7041, 0.45", "55.3836, -21.3388, 16.8365, 0.45", "55.5926, -21.4579, 16.9148, 2.6", "59.4797, -24.3153, 18.7093, 0.57", "64.0817, -28.4328, 21.1666, 0.57", "65.4026, -29.6895, 21.8395, 0.57", "65.5184, -29.798, 21.8884, 2.38", "69.4982, -33.0607, 23.3149, 0.34", "71.0709, -34.092, 23.7369, 0.34", "74.7448, -35.787, 24.3123, 0.45", "78.4156, -36.6203, 24.7424, 0.45", "82.4381, -36.9382, 25.4203, 0.45", "86.2491, -36.7944, 26.3528, 0.45", "90.5015, -36.182, 27.7594, 0.45", "94.3529, -35.4231, 29.2394, 0.45", "102.874, -33.4434, 32.8215, 0.45", "109.402, -31.8773, 35.9945, 0.45", "115.745, -30.4629, 39.4275, 0.45", "121.752, -29.3856, 42.8642, 0.45", "123.515, -29.1768, 43.9091, 2.38", "126.584, -29.0179, 45.6422, 0.45", "132.671, -29.1098, 48.4824, 0.45", "135.255, -29.2417, 49.4847, 0.45", "139.112, -29.453, 50.7186, 0.45", "147.149, -29.6936, 53.1976, 0.45", "152.909, -29.7484, 54.9277, 0.45", "158.859, -29.9072, 56.7404, 0.45", "162.508, -30.1884, 57.8751, 0.45", "166.005, -30.6277, 58.9856, 0.45", "172.639, -31.8598, 61.1048, 0.45", "177.947, -33.2463, 62.6889, 0.45", "184.635, -35.3313, 64.7451, 0.45", "191.269, -37.7915, 66.8873, 0.45", "195.16, -39.4013, 68.1662, 0.45", "197.095, -40.3506, 68.8367, 0.45", "198.109, -40.9559, 69.1448, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-4.35026, -25.3296, -8.19571, 0.12", "-5.39203, -24.063, -8.40856, 0.12", "-5.63448, -23.8629, -8.39162, 0.12", "-6.38113, -23.3569, -8.28831, 0.45", "-7.98244, -22.9497, -7.59525, 0.79", "-10.3484, -22.6839, -6.24364, 0.45", "-11.8328, -22.6577, -5.31151, 0.45", "-14.8425, -22.8893, -3.21094, 0.45", "-15.3231, -22.9944, -2.85829, 0.45", "-20.2571, -24.5528, 1.15488, 0.45", "-22.5671, -25.4702, 3.14693, 0.45", "-24.3081, -26.2452, 4.67777, 0.45", "-24.7441, -26.4322, 5.06939, 0.45", "-27.1623, -27.4165, 7.18428, 0.45", "-32.0033, -29.2579, 11.1995, 0.45", "-33.3696, -29.7389, 12.1678, 0.45", "-34.3692, -30.0749, 12.7996, 0.45", "-36.3695, -30.6954, 13.994, 0.45", "-37.0807, -30.9119, 14.4446, 0.45", "-41.422, -32.2246, 17.222, 0.45", "-43.3154, -33.0275, 18.4864, 0.45", "-45.4629, -34.0711, 20.0557, 0.45", "-46.1683, -34.4376, 20.6563, 0.45", "-49.3649, -36.2873, 23.4985, 0.45", "-49.7644, -36.5355, 23.8776, 0.45", "-52.1103, -37.9896, 26.3422, 0.45", "-52.6493, -38.3397, 26.933, 0.45", "-55.1676, -40.0675, 29.5913, 2.38", "-57.2816, -41.4749, 31.7479, 0.68", "-58.1314, -42.0589, 32.614, 0.68", "-61.9804, -44.4477, 36.674, 0.68", "-63.6617, -45.3988, 38.485, 0.45", "-64.4615, -45.8414, 39.3084, 0.45", "-66.5911, -46.8046, 41.3878, 0.45", "-67.7619, -47.238, 42.52, 0.45", "-71.9145, -48.5692, 46.1768, 0.45", "-74.3622, -49.1994, 48.2155, 0.45", "-76.8016, -49.6843, 50.1963, 0.45", "-83.7944, -50.9657, 55.6518, 0.91", "-83.9592, -50.9993, 55.7775, 3.05", "-85.9613, -51.457, 57.2875, 0.45", "-90.6809, -52.8887, 61.0071, 0.45", "-92.1923, -53.4104, 62.2876, 0.45", "-94.3019, -54.2119, 64.1951, 2.15", "-101.094, -57.5232, 70.2778, 0.57", "-101.942, -57.9391, 71.0646, 0.57", "-106.367, -60.1469, 75.3005, 0.57", "-109.192, -61.6472, 77.9146, 0.57", "-109.547, -61.8247, 78.2385, 1.7", "-111.049, -62.537, 79.5704, 0.45", "-118.063, -65.9604, 85.4258, 0.45", "-121.088, -67.3866, 87.8673, 0.45", "-123.205, -68.3911, 89.4772, 0.45", "-127.277, -70.371, 92.4932, 0.45", "-129.669, -71.5437, 94.2771, 0.45", "-131.444, -72.4016, 95.5862, 0.45", "-135.29, -74.6286, 98.0546, 0.45", "-135.884, -74.9674, 98.4464, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-4.35026, -25.3296, -8.19571, 1.7", "-4.96722, -27.1935, -7.05313, 1.7", "-5.15375, -27.8152, -6.74299, 1.58", "-5.65523, -29.739, -5.97102, 1.36", "-6.06895, -31.3262, -5.33412, 1.24", "-6.66492, -33.6125, -4.41669, 1.24", "-7.01925, -34.9718, -3.87123, 2.83", "-7.44411, -36.9046, -3.25664, 3.62", "-7.73604, -38.3823, -2.85446, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "46.6821, 25.1236, -25.2134, 0.57", "46.4848, 22.4762, -25.525, 0.57", "46.2253, 18.994, -25.9348, 0.57", "46.0775, 17.0101, -26.1682, 0.57", "45.8738, 14.2779, -26.4897, 0.57", "45.6085, 10.7168, -26.9088, 0.57", "45.1546, 4.6258, -27.6256, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "46.6821, 25.1236, -25.2134, 1.02", "47.3211, 25.7669, -26.5934, 1.02", "48.754, 27.2094, -29.6878, 1.02", "49.5639, 28.0246, -31.4368, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "76.8023, -86.2831, 4.42994, 0.45", "79.8528, -91.081, 3.55432, 0.45", "80.4805, -92.0752, 3.39926, 0.45", "81.4168, -93.5987, 3.23773, 0.45", "83.6975, -97.2744, 2.94546, 0.45", "84.6077, -98.6968, 2.76462, 0.45", "85.4567, -99.9467, 2.57675, 0.45", "87.0646, -102.101, 2.25871, 0.45", "90.0049, -105.761, 1.65148, 0.45", "91.6706, -107.522, 1.35123, 0.45", "94.9053, -110.332, 0.687268, 0.45", "97.3181, -111.998, 0.294744, 0.45", "98.4079, -112.639, 0.291986, 0.45", "100.392, -113.728, 0.486073, 0.45", "104.507, -116.014, 1.15541, 0.45", "107.238, -117.674, 1.54959, 0.45", "111.361, -120.362, 2.12465, 0.45", "120.08, -126.59, 3.087, 0.45", "123.951, -129.636, 3.41436, 0.45", "126.754, -132.152, 3.54877, 0.45", "132.02, -137.772, 3.48448, 0.45", "133.021, -139.033, 3.40592, 0.45", "134.926, -142.07, 2.88223, 0.45", "135.881, -144.143, 2.34811, 0.45", "137.319, -148.14, 1.43268, 0.45", "138.244, -151.339, 0.862034, 0.45", "139.356, -155.66, 0.270398, 0.45", "140.369, -160.007, -0.32728, 0.45", "141.321, -164.589, -0.978036, 0.45", "141.716, -166.562, -1.25583, 0.45", "142.353, -169.729, -1.65991, 0.45", "143.67, -175.627, -2.30189, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "76.8023, -86.2831, 4.42994, 0.57", "76.6876, -86.7457, 4.5282, 0.57", "75.9477, -89.154, 5.70594, 0.57", "74.9352, -92.1403, 7.32352, 0.57", "74.2352, -93.8386, 8.43429, 0.57", "74.0983, -94.1379, 8.63396, 0.57", "73.3092, -95.6535, 9.69468, 0.57", "72.0981, -97.6059, 11.1952, 0.57", "71.4752, -98.4332, 11.8985, 0.57", "70.1977, -99.9587, 13.495, 0.45", "69.5488, -100.706, 14.2533, 0.45", "68.661, -101.727, 15.2466, 0.45", "67.8031, -102.762, 16.2075, 0.45", "66.8191, -103.935, 17.2795, 0.45", "64.8538, -106.478, 19.6679, 0.45", "64.4459, -107.084, 20.2192, 0.45", "63.8878, -108.004, 21.0583, 0.45", "62.6084, -110.367, 23.1114, 0.45", "62.1718, -111.244, 23.81, 0.45", "60.6309, -114.491, 25.9881, 0.45", "60.1631, -115.558, 26.6143, 0.45", "60.0681, -115.8, 26.7476, 0.45", "59.8598, -116.435, 27.1084, 0.45", "59.3309, -118.18, 28.113, 0.45", "58.9303, -119.619, 28.9734, 0.45", "58.1608, -122.531, 30.8528, 0.45", "57.6266, -124.56, 32.398, 0.45", "56.632, -128.273, 35.4356, 0.45", "56.0461, -130.336, 37.2003, 0.45", "55.7751, -131.204, 38.0023, 0.45", "54.8027, -134.095, 40.6613, 0.45", "53.7863, -136.675, 42.8796, 0.45", "53.1757, -138.031, 44.0199, 0.45", "52.5587, -139.298, 44.9932, 0.45", "51.4704, -141.655, 46.5868, 0.45", "50.5626, -143.67, 47.8126, 0.45", "49.7591, -145.367, 48.7509, 0.45", "49.0475, -146.733, 49.6482, 0.45", "47.2389, -149.674, 52.0392, 0.45", "45.9149, -151.36, 53.6403, 0.45", "44.6212, -152.578, 54.9543, 0.45", "43.051, -153.597, 56.2198, 0.45", "39.0306, -155.419, 58.8192, 0.45", "37.0972, -156.031, 59.886, 0.45", "34.6176, -156.587, 60.9561, 0.45", "32.9539, -156.917, 61.6048, 0.45", "29.7753, -157.616, 62.7332, 0.45", "27.3048, -158.281, 63.5185, 0.45", "23.4328, -159.551, 65.0327, 0.45", "20.6485, -160.622, 66.4501, 0.45", "18.8194, -161.407, 67.4538, 0.45", "14.6357, -163.353, 69.8272, 0.45", "13.1757, -164.076, 70.6872, 0.45", "6.91969, -167.276, 74.2874, 0.45", "5.21544, -168.175, 75.2558, 0.45", "0.699448, -170.631, 78.0492, 0.45", "-0.581533, -171.342, 78.8332, 0.45", "-2.78387, -172.651, 80.1531, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "36.6559, -17.2231, -2.1064, 0.45", "38.7521, -20.5035, -1.05633, 0.45", "39.081, -21.0246, -0.913689, 1.02", "42.5077, -26.3325, 0.35339, 0.79", "44.6025, -29.6187, 0.977012, 0.79", "45.797, -31.4688, 1.24431, 0.68", "46.0532, -31.8531, 1.28581, 0.68", "47.5896, -34.0909, 1.35978, 0.68", "48.6277, -35.5923, 1.33052, 0.68", "50.7776, -38.5981, 1.08846, 0.68", "52.9376, -41.693, 0.803118, 0.68", "54.9997, -44.6958, 0.495429, 0.68", "56.9526, -47.5104, 0.185949, 0.68", "59.3947, -51.0436, -0.225571, 0.68", "62.4174, -55.4237, -0.946529, 0.68", "64.2862, -58.1464, -1.58791, 0.68", "65.3752, -59.741, -2.06224, 0.68", "66.749, -61.7123, -2.72295, 0.68", "69.055, -64.8603, -3.8787, 0.68", "72.0717, -68.8063, -5.43293, 0.68", "75.5725, -73.1346, -7.19078, 0.68", "77.4565, -75.3054, -8.04574, 0.68", "79.3363, -77.3865, -8.80336, 0.68", "80.56, -78.699, -9.22524, 0.68", "81.6856, -79.8241, -9.52205, 0.68", "83.2736, -81.4673, -9.71365, 0.68", "84.5404, -82.8696, -9.84662, 0.68", "86.1872, -85.0991, -10.1291, 0.68", "86.6288, -85.8685, -10.277, 0.68", "87.6631, -88.0773, -10.7467, 0.68", "88.8051, -90.9769, -11.4924, 0.68", "89.6287, -93.4835, -12.2075, 0.68", "90.3619, -96.0171, -12.9632, 0.68", "91.4258, -100.11, -14.1884, 0.68", "91.918, -102.054, -14.7397, 0.68", "92.6167, -104.684, -15.408, 0.68", "93.24, -106.692, -15.8697, 0.68", "94.1228, -109.119, -16.281, 0.68", "94.8286, -110.896, -16.5523, 0.68", "95.1771, -111.703, -16.65, 0.68", "96.2595, -114.039, -16.8993, 0.45", "97.8101, -117.379, -17.193, 0.45", "99.6009, -121.247, -17.5534, 0.45", "100.987, -124.353, -17.9603, 0.45", "101.938, -126.561, -18.3088, 0.45", "103.037, -129.157, -18.7646, 0.45", "104.883, -133.508, -19.6561, 0.45", "105.844, -135.823, -20.1626, 0.45", "107.458, -139.826, -21.0943, 0.45", "108.947, -143.451, -21.9749, 0.45", "109.85, -145.665, -22.5622, 0.45", "110.593, -147.442, -23.0905, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "36.6559, -17.2231, -2.1064, 0.68", "38.8698, -15.6166, -0.520707, 0.68", "41.5143, -13.5309, 1.10893, 0.68", "43.4082, -12.0356, 1.90248, 0.68", "44.6809, -11.0473, 2.23067, 0.68", "45.5059, -10.4056, 2.27901, 0.68", "47.4376, -8.94997, 1.93871, 0.68", "48.6871, -8.03489, 1.37538, 0.68", "50.8451, -6.54056, 0.0303058, 0.57", "52.5431, -5.42106, -1.18639, 0.57", "54.9985, -3.73098, -3.05568, 0.57", "57.8189, -1.73467, -5.25191, 0.57", "59.3873, -0.57926, -6.4941, 0.57", "60.1162, 0.0140371, -7.10976, 0.57", "62.3736, 2.06917, -8.99447, 0.57", "65.3484, 4.94596, -11.4074, 0.57", "67.6705, 7.30568, -13.1581, 0.57", "68.5224, 8.25146, -13.8098, 0.57", "70.4223, 10.519, -15.3838, 0.57", "72.1775, 12.6773, -16.8872, 0.57", "72.9353, 13.6642, -17.5468, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "29.1531, -21.2025, 23.0405, 0.45", "25.6851, -28.6062, 26.6353, 0.45", "24.5741, -30.9966, 27.6767, 0.45", "23.1493, -34.035, 29.2973, 0.45", "21.7061, -37.0555, 31.2108, 0.45", "20.6152, -39.2747, 32.759, 0.45", "18.5783, -43.4928, 35.8208, 0.45", "17.8626, -45.1011, 37.0213, 0.45", "15.8116, -49.916, 40.8991, 0.45", "14.8027, -52.299, 43.1875, 0.45", "13.9988, -54.0925, 45.2649, 0.45", "13.5287, -54.9599, 46.3993, 0.45", "12.8759, -55.9446, 47.7932, 0.45", "11.9274, -57.1429, 49.2849, 0.45", "9.23911, -60.6684, 52.6075, 0.45", "8.66029, -61.4788, 53.2268, 0.45", "6.98197, -64.1389, 54.8862, 0.45", "5.99922, -65.8185, 55.3636, 0.45", "4.79341, -68.2639, 55.4086, 0.45", "3.03829, -72.9844, 54.6124, 0.45", "2.1777, -76.2784, 53.6533, 0.45", "1.5533, -79.2445, 52.6352, 0.45", "0.299517, -88.1288, 48.9725, 0.45", "0.123489, -89.8496, 48.1451, 1.02", "-0.0341816, -91.6293, 47.0942, 0.57", "-0.400492, -93.7637, 45.4204, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "29.1531, -21.2025, 23.0405, 0.45", "29.886, -21.4496, 23.1172, 0.45", "30.6405, -21.7039, 23.1961, 0.45", "31.6892, -22.0575, 23.3059, 0.45", "32.5767, -22.3567, 23.3988, 0.45", "33.037, -22.5119, 23.447, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-7.73604, -38.3823, -2.85446, 0.45", "-9.6781, -40.5628, -0.919857, 0.45", "-10.506, -41.5868, -0.0972457, 0.79", "-18.5635, -51.552, 7.90846, 1.24", "-22.0412, -55.8531, 11.3638, 1.24", "-24.9789, -59.4863, 14.2826, 1.24", "-28.3574, -63.6646, 17.6394, 1.24", "-29.5925, -65.1794, 18.8824, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.73604, -38.3823, -2.85446, 0.91", "-7.60146, -39.8328, -1.38687, 0.91", "-7.52732, -40.6319, -0.578424, 0.91", "-7.39906, -42.0142, 0.820151, 0.91", "-7.31045, -42.9692, 1.78638, 0.91", "-7.17196, -44.4618, 3.29655, 0.79", "-7.1437, -44.7664, 3.60466, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "45.1546, 4.6258, -27.6256, 0.57", "45.5738, 3.01028, -26.9184, 0.57", "46.426, -0.0921538, -24.9777, 0.57", "47.3262, -3.50624, -22.9796, 0.45", "48.617, -8.47221, -20.2279, 0.45", "50.0074, -13.9241, -17.1404, 0.45", "50.3878, -15.4155, -16.2958, 0.45", "52.177, -22.5328, -12.1652, 0.45", "53.5124, -28.16, -8.78432, 0.45", "54.1435, -30.7808, -7.1562, 0.45", "54.8832, -33.708, -5.35853, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "45.1546, 4.6258, -27.6256, 0.57", "42.9595, 3.85841, -29.2419, 0.57", "41.4689, 3.10097, -29.549, 0.68", "40.1904, 2.27245, -29.7528, 0.68", "38.911, 1.44337, -29.9567, 0.68", "36.8839, 0.129731, -30.2798, 0.68", "34.9442, -1.12724, -30.5889, 0.68", "32.6463, -2.42798, -31.0607, 0.68", "30.2974, -3.56377, -31.5195, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "49.5639, 28.0246, -31.4368, 0.68", "49.7565, 29.6265, -31.1, 0.68", "49.9206, 30.991, -30.8132, 0.68", "50.1949, 33.2724, -30.3337, 0.68", "50.7489, 37.8804, -29.3651, 0.68", "51.059, 40.4593, -28.8231, 0.68", "51.4752, 43.9204, -28.0956, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "49.5639, 28.0246, -31.4368, 0.79", "51.5581, 29.2078, -31.612, 0.79", "54.731, 31.0903, -31.8908, 0.79", "56.7861, 32.3097, -32.0714, 0.79", "59.0784, 33.6697, -32.2729, 0.79", "60.3797, 34.4418, -32.3872, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "110.593, -147.442, -23.0905, 0.57", "111.747, -150.236, -23.0554, 0.57", "113.519, -154.409, -22.8969, 0.57", "114.405, -156.419, -22.8133, 0.57", "116.748, -161.556, -22.6063, 0.57", "119.043, -166.491, -22.3712, 0.57", "120.892, -170.471, -22.1817, 0.57", "121.987, -172.743, -21.9813, 0.57", "122.984, -174.774, -21.7523, 0.57", "123.942, -176.662, -21.5405, 0.57", "125.148, -178.806, -21.3749, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "110.593, -147.442, -23.0905, 0.34", "112.641, -149.149, -22.6477, 0.34", "114.132, -150.457, -22.1434, 0.34", "114.773, -151.042, -21.9122, 0.34", "117.616, -153.845, -21.1181, 0.34", "119.864, -156.201, -20.6245, 0.57", "122.874, -159.445, -20.0257, 0.57", "124.862, -161.725, -19.6361, 0.57", "126.603, -163.801, -19.4252, 0.57", "130.021, -168.01, -19.2479, 0.57", "131.949, -170.426, -19.2949, 0.57", "133.841, -172.801, -19.5483, 0.57", "136.336, -175.848, -20.1414, 0.57", "139.933, -180.158, -21.1685, 0.57", "142.957, -183.717, -22.0473, 0.57", "144.948, -185.963, -22.5261, 0.57", "148.435, -189.74, -23.3036, 0.57", "149.453, -190.795, -23.515, 0.57", "151.729, -193.01, -23.8742, 0.57", "153.467, -194.57, -23.9653, 0.57", "156.856, -197.283, -23.9118, 0.57", "157.938, -198.07, -23.8036, 0.57", "159.794, -199.274, -23.237, 0.57", "161.115, -200.055, -22.746, 0.57", "162.469, -200.777, -22.1419, 0.57", "163.402, -201.256, -21.7041, 0.57", "165.65, -202.397, -20.6055, 0.57", "170.408, -204.855, -18.0238, 0.57", "171.699, -205.528, -17.2446, 0.57", "174.187, -206.843, -15.6335, 0.57", "176.712, -208.285, -13.9118, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "72.9353, 13.6642, -17.5468, 0.45", "75.1139, 13.2543, -22.3648, 0.45", "76.2183, 13.0593, -24.8092, 0.45", "77.7008, 12.8999, -28.5454, 0.45", "78.0914, 12.9142, -29.4888, 0.45", "78.2863, 12.941, -29.9253, 0.45", "80.1491, 13.4245, -33.787, 0.45", "80.395, 13.518, -34.1885, 0.45", "81.8939, 14.1044, -36.6709, 0.45", "83.0185, 14.7829, -38.5082, 0.45", "83.6296, 15.202, -39.5181, 0.45", "85.1046, 16.2925, -41.7655, 0.45", "86.4768, 17.393, -43.3178, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "72.9353, 13.6642, -17.5468, 0.45", "74.3898, 14.0394, -17.7271, 0.45", "75.3256, 14.2808, -17.8431, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "33.037, -22.5119, 23.447, 0.45", "31.9416, -26.5302, 23.587, 0.45", "30.7291, -31.1845, 23.7196, 0.45", "30.0347, -33.7778, 23.8152, 0.45", "29.2719, -36.575, 23.8721, 0.45", "28.4023, -39.8335, 23.8666, 0.45", "28.0984, -41.0707, 23.8278, 0.45", "27.7641, -42.601, 23.6834, 0.45", "27.1397, -46.3678, 23.284, 0.45", "26.8931, -49.1925, 22.8457, 0.45", "26.8445, -51.6141, 22.3452, 0.45", "26.8847, -53.5854, 21.9007, 0.45", "26.9698, -55.4126, 21.5887, 0.45", "27.221, -58.3333, 21.274, 0.45", "27.4184, -60.2773, 21.3897, 0.45", "27.6029, -62.0993, 21.7582, 0.45", "27.8995, -64.7316, 22.4177, 0.45", "28.2452, -67.4358, 23.2106, 0.45", "28.4851, -68.9098, 23.6761, 0.45", "29.5838, -73.8865, 24.8997, 0.45", "30.4928, -77.11, 25.5017, 0.45", "31.4797, -79.9084, 25.7903, 0.45", "32.5095, -82.4153, 25.6853, 0.45", "33.5337, -84.7427, 25.461, 0.45", "35.4729, -89.2337, 24.8571, 0.45", "36.3015, -91.2415, 24.5001, 0.45", "36.7917, -92.8797, 24.4764, 0.45", "37.7447, -96.6794, 24.5943, 0.45", "38.4026, -99.8857, 24.7507, 0.45", "38.9433, -103.519, 25.1686, 0.45", "39.1006, -105.446, 25.6159, 0.45", "39.4503, -112.795, 27.3996, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "33.037, -22.5119, 23.447, 0.45", "35.0521, -24.0871, 24.0328, 0.45", "36.1951, -25.2671, 24.3448, 0.45", "38.0229, -27.4186, 24.8035, 0.45", "39.629, -29.4758, 25.189, 0.45", "41.9641, -32.6748, 25.7167, 0.45", "44.8816, -36.937, 26.3514, 0.45", "48.1575, -42.463, 27.0949, 0.45", "50.5764, -46.9968, 27.3579, 0.45", "51.8483, -49.5464, 27.4612, 0.45", "54.1334, -54.4053, 27.5756, 0.45", "55.6152, -57.6605, 27.5475, 0.45", "57.116, -61.1601, 27.4021, 0.45", "59.9712, -68.7794, 26.6494, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-29.5925, -65.1794, 18.8824, 0.12", "-29.9569, -65.9818, 18.1695, 0.12", "-30.4895, -68.0338, 16.8376, 0.57", "-30.9062, -69.8598, 15.9329, 0.57", "-31.3442, -71.4688, 15.3619, 0.57", "-32.7027, -76.5909, 13.3495, 0.57", "-33.4716, -79.6654, 11.8359, 0.57", "-33.8627, -81.4107, 10.8854, 0.91", "-34.069, -83.0489, 9.65581, 0.91", "-34.199, -85.1165, 7.6734, 0.91", "-34.1615, -87.8089, 3.74916, 0.68", "-33.8905, -89.1252, 0.194961, 0.68", "-33.7167, -89.6252, -1.62824, 0.68", "-32.9149, -91.0719, -7.93315, 0.68", "-32.6738, -91.3606, -9.48257, 0.68", "-31.9709, -91.9149, -13.2192, 0.68", "-30.5982, -92.6881, -19.6829, 0.68", "-29.9849, -92.9798, -22.2398, 0.68", "-28.6865, -93.7089, -27.2809, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-29.5925, -65.1794, 18.8824, 0.79", "-29.906, -68.7932, 19.2661, 0.79", "-30.3284, -73.6631, 19.7832, 0.79", "-30.5235, -75.9117, 20.0219, 0.79", "-30.674, -77.6463, 20.2061, 0.79", "-30.7444, -78.458, 20.2923, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-29.5925, -65.1794, 18.8824, 0.57", "-29.7729, -65.7655, 22.3427, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-7.1437, -44.7664, 3.60466, 1.13", "-8.11233, -46.6255, 4.85925, 1.13", "-9.40747, -49.5534, 6.70121, 0.91", "-10.0759, -51.3578, 7.71106, 0.91", "-11.0867, -54.4197, 9.28746, 0.91", "-12.1316, -57.7986, 10.872, 0.91", "-13.1053, -60.8216, 12.2265, 0.91", "-13.7632, -62.909, 13.0409, 0.91", "-14.9182, -66.3183, 14.261, 0.91", "-15.4378, -67.7342, 14.7377, 1.92", "-16.1411, -69.6296, 15.3233, 1.36", "-17.2477, -72.4048, 16.1924, 1.02", "-18.7041, -75.6427, 17.2834, 1.02", "-20.0015, -78.3947, 18.2812, 1.02", "-20.5343, -79.5219, 18.7126, 1.02", "-21.1159, -80.7933, 19.219, 0.68", "-21.9089, -82.8663, 20.013, 0.68", "-22.2146, -84.0107, 20.4082, 1.02", "-22.3558, -85.0209, 20.731, 2.15", "-22.391, -86.7642, 21.2555, 1.47", "-22.2808, -89.5553, 22.1227, 1.13", "-22.1822, -91.4721, 22.7104, 0.79", "-22.0866, -92.7409, 23.0984, 0.57", "-21.8465, -95.0904, 23.8882, 0.57", "-21.592, -97.0715, 24.6112, 0.57", "-21.3437, -98.7102, 25.2362, 0.57", "-21.1241, -100.259, 25.7983, 0.57", "-21.0062, -101.388, 26.1287, 0.57", "-20.8196, -103.457, 26.5797, 0.57", "-20.8014, -104.648, 26.8845, 0.57", "-20.8683, -106.448, 27.3688, 2.83", "-21.054, -108.771, 28.0974, 1.92", "-21.3257, -112.049, 29.2013, 1.02", "-21.5355, -113.884, 29.8379, 0.68", "-22.0909, -118.419, 31.4688, 0.68", "-22.2495, -120.002, 32.0724, 0.68", "-22.4972, -122.646, 33.217, 0.68", "-22.6077, -124.112, 33.9089, 0.68", "-22.6496, -125.903, 34.7892, 0.68", "-22.5553, -128.32, 35.9333, 0.68", "-22.2388, -131.005, 37.174, 0.68", "-21.7033, -134.575, 38.9679, 0.68", "-21.3418, -136.771, 40.1079, 0.68", "-20.8519, -139.422, 41.4618, 0.57", "-20.4671, -141.327, 42.3829, 0.57", "-20.047, -143.233, 43.119, 0.57", "-19.5017, -145.29, 43.6705, 0.57", "-18.7554, -147.512, 43.9778, 0.57", "-17.6942, -150.448, 44.2318, 0.57", "-17.1841, -151.766, 44.269, 1.47", "-15.763, -155.193, 44.2687, 0.68", "-14.8787, -157.249, 44.2607, 0.68", "-13.6497, -159.946, 44.3158, 0.68", "-11.9021, -163.638, 44.5457, 0.68", "-10.3476, -166.969, 44.9758, 0.68", "-9.64978, -168.437, 45.2399, 0.68", "-9.35185, -169.345, 45.5639, 0.68", "-9.28268, -170.969, 46.4053, 0.57", "-9.43323, -171.765, 46.9002, 0.57", "-9.81241, -172.927, 47.6896, 0.57", "-10.5331, -175.013, 49.0362, 0.57", "-12.9692, -182.343, 53.3131, 0.68", "-14.2653, -186.773, 55.5797, 0.68", "-14.7831, -188.906, 56.4939, 0.68", "-15.0373, -190.411, 56.9762, 0.68", "-15.1175, -194.663, 57.6214, 0.68", "-14.9082, -196.004, 57.6066, 0.68", "-14.0591, -198.507, 57.2039, 2.04", "-13.103, -200.733, 56.7233, 0.79", "-12.059, -203.049, 56.2501, 0.79", "-10.2568, -207.352, 55.5945, 0.79", "-9.43941, -209.682, 55.4673, 0.79", "-8.8461, -211.817, 55.5393, 0.79", "-8.43642, -214.215, 55.8696, 0.79", "-8.22518, -216.379, 56.4012, 0.68", "-8.16816, -219.214, 57.3978, 0.68", "-8.30856, -221.725, 58.5194, 0.68", "-8.72105, -223.909, 59.8574, 0.68", "-9.13688, -225.464, 60.9754, 0.68", "-9.69512, -227.016, 62.2869, 0.68", "-10.0279, -227.893, 63.0837, 1.58", "-10.4352, -229.164, 64.2376, 1.58", "-11.9136, -234.452, 68.927, 0.68", "-12.3652, -236.32, 70.5809, 0.68", "-13.035, -239.69, 73.5396, 0.68", "-13.6328, -242.734, 76.2246, 0.68", "-14.0776, -245.369, 78.5267, 0.68", "-14.398, -247.436, 80.3377, 0.68", "-14.6027, -249.752, 82.2868, 0.68", "-14.8194, -251.248, 83.7538, 0.68", "-15.1951, -253.879, 86.5628, 0.68", "-15.257, -254.738, 87.5133, 0.68", "-15.1703, -256.969, 89.9452, 2.38", "-14.9752, -258.11, 91.0643, 1.92", "-14.0618, -261.456, 94.1058, 0.57", "-13.5586, -262.778, 95.143, 0.57", "-11.3885, -267.449, 98.3616, 0.57", "-9.7988, -270.735, 100.523, 0.57", "-8.71954, -272.827, 101.824, 0.57", "-7.36482, -275.459, 103.477, 0.57", "-6.07027, -277.925, 105.053, 0.57", "-5.32882, -279.571, 106.241, 0.57", "-4.89838, -280.844, 107.33, 2.15", "-4.56959, -281.864, 108.27, 1.13", "-4.11636, -283.418, 109.759, 0.57", "-3.55557, -285.001, 110.999, 0.57", "-3.27116, -285.712, 111.486, 0.57", "-2.92301, -286.684, 112.054, 0.57", "-2.4739, -288.013, 112.744, 0.57", "-2.37755, -288.379, 112.913, 2.38", "-1.54926, -292.193, 114.546, 0.45", "-1.08006, -294.771, 115.609, 0.45", "-0.609942, -297.665, 116.807, 0.45", "-0.363323, -299.691, 117.696, 0.45", "-0.162764, -303.337, 119.458, 0.45", "-0.168956, -304.322, 119.965, 0.45", "-0.612509, -308.684, 122.385, 0.45", "-1.13733, -311.977, 124.156, 0.45", "-1.72468, -315.031, 125.62, 0.45", "-2.46202, -317.841, 126.856, 0.45", "-2.89034, -319.152, 127.379, 0.45", "-3.61723, -321.262, 128.072, 0.45", "-4.56447, -324.045, 128.736, 0.45", "-5.20425, -327.013, 129.105, 0.45", "-5.2571, -327.798, 129.146, 1.24", "-5.15385, -329.809, 129.257, 0.57", "-4.81741, -332.319, 129.534, 0.57", "-4.1277, -335.625, 130.117, 0.57", "-3.38506, -338.681, 130.868, 1.36", "-2.86466, -341.098, 131.733, 0.57", "-2.31682, -343.735, 132.894, 0.57", "-1.66114, -347.089, 134.62, 0.57", "-1.31196, -349.548, 136.162, 0.57", "-1.14224, -351.283, 137.426, 0.57", "-0.898006, -355.02, 140.231, 0.57", "-0.715181, -358.642, 142.785, 0.57", "-0.713079, -360.272, 143.839, 0.57", "-0.769808, -363.396, 145.544, 2.38", "-0.7888, -364.397, 145.989, 1.58", "-0.994613, -368.984, 147.794, 0.68", "-1.17154, -371.804, 148.713, 0.68", "-1.65785, -375.234, 149.872, 0.79", "-2.18458, -378.434, 150.958, 0.57", "-2.73776, -381.501, 151.96, 0.57", "-3.71186, -386.042, 153.506, 0.57", "-4.56331, -389.435, 154.722, 0.57", "-5.35301, -392.687, 155.834, 0.57", "-5.69806, -394.269, 156.345, 0.57", "-6.24645, -396.833, 157.148, 0.57", "-6.94398, -400.688, 158.186, 0.57", "-7.18802, -403.17, 158.692, 0.57", "-7.24887, -406.153, 159.122, 0.57", "-7.12735, -408.271, 159.295, 0.57", "-6.99109, -409.594, 159.376, 0.57", "-6.68121, -412.061, 159.563, 0.57", "-6.08371, -416.2, 159.978, 0.57", "-5.65042, -419.431, 160.501, 1.13", "-5.43408, -421.287, 160.927, 2.38", "-5.36811, -421.929, 161.105, 2.38", "-5.01567, -426.122, 162.512, 0.79", "-4.77546, -428.495, 163.267, 0.79", "-4.55209, -431.336, 164.126, 0.57", "-4.36097, -433.666, 164.739, 0.57", "-4.19341, -435.843, 165.196, 0.57", "-4.02371, -437.771, 165.5, 0.57", "-3.43921, -442.656, 166.045, 0.57", "-3.36643, -443.468, 166.134, 2.94", "-3.03278, -447.174, 166.534, 0.68", "-2.77445, -450.708, 167.02, 0.68", "-2.59338, -453.474, 167.538, 0.68", "-2.45616, -455.714, 168.06, 0.68", "-2.2643, -459.228, 169.06, 0.68", "-2.03995, -462.551, 169.979, 0.68", "-1.84299, -464.976, 170.635, 0.68", "-1.61993, -467.283, 171.225, 0.68", "-1.23448, -471.659, 172.365, 0.68", "-1.06006, -473.718, 172.929, 0.68", "-0.881435, -475.827, 173.555, 0.68", "-0.742647, -481.358, 175.421, 0.68", "-0.757272, -482.608, 175.869, 0.68", "-1.09929, -486.96, 177.49, 0.57", "-1.25651, -488.099, 177.923, 0.57", "-1.40945, -488.909, 178.222, 2.49", "-2.64996, -494.217, 180.241, 0.68", "-3.08714, -495.707, 180.826, 0.68", "-4.65374, -500.934, 182.948, 0.68", "-5.12038, -502.589, 183.63, 0.68", "-5.93056, -505.948, 185.047, 0.68", "-6.58764, -509.38, 186.543, 0.68", "-6.95516, -512.532, 187.963, 0.68", "-7.19129, -515.219, 189.341, 0.68", "-7.34135, -519.118, 191.589, 0.68", "-7.39562, -520.586, 192.53, 0.68", "-7.47213, -521.654, 193.276, 2.72", "-7.65072, -523.286, 194.418, 1.92", "-8.25085, -526.474, 196.587, 0.91", "-8.89906, -528.487, 197.932, 0.91", "-9.82524, -530.487, 199.262, 0.68", "-11.0485, -532.645, 200.748, 0.68", "-12.4822, -534.814, 202.355, 0.68", "-14.4668, -537.556, 204.489, 0.68", "-16.0354, -539.423, 206.13, 0.68", "-18.4093, -541.919, 208.629, 0.68", "-20.4103, -543.716, 210.84, 0.68", "-23.164, -546.009, 214.05, 0.68", "-24.4886, -546.967, 215.658, 0.68", "-27.2971, -549.073, 219.314, 0.68", "-28.8641, -550.374, 221.517, 0.68", "-32.4672, -553.722, 226.895, 0.68", "-33.7644, -555.067, 228.893, 0.68", "-36.572, -558.417, 233.448, 0.68", "-38.3549, -560.865, 236.48, 0.68", "-38.8374, -561.729, 237.401, 0.68", "-39.2151, -562.506, 238.161, 0.68", "-40.261, -564.968, 240.222, 0.68", "-40.7455, -565.964, 241.091, 0.68", "-42.0396, -568.669, 243.315, 0.45", "-42.9749, -570.024, 244.696, 0.45", "-43.4274, -570.613, 245.316, 0.45", "-44.1478, -571.511, 246.287, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 31
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-7.1437, -44.7664, 3.60466, 0.79", "-5.70016, -43.7208, 4.50959, 0.79", "-4.43966, -42.8078, 5.29977, 0.57", "-3.86307, -42.3901, 5.66123, 0.34", "-3.20713, -41.915, 6.07242, 0.34", "-2.92871, -41.7133, 6.24696, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "54.8832, -33.708, -5.35853, 0.45", "55.4874, -35.665, -4.50309, 0.45", "56.2651, -38.2151, -3.56594, 0.45", "57.8866, -43.6189, -1.75946, 0.45", "59.0117, -47.5415, -0.941428, 0.45", "60.003, -51.544, -0.308606, 0.45", "60.2411, -52.7068, -0.137779, 0.45", "60.9382, -56.8092, 0.411926, 0.45", "61.716, -62.1565, 1.09475, 0.45", "62.6061, -69.7536, 2.1401, 0.45", "63.0109, -74.1591, 2.75785, 0.45", "63.3385, -80.3591, 3.69338, 0.45", "63.3865, -86.1658, 4.7196, 0.45", "63.1787, -90.1102, 5.55548, 0.45", "62.4415, -95.461, 6.84865, 0.45", "61.6808, -98.5099, 7.74607, 0.45", "60.858, -101.28, 8.50422, 0.45", "59.4993, -104.573, 9.29935, 0.45", "58.1193, -106.92, 9.78619, 0.45", "55.9062, -109.785, 10.3163, 0.45", "52.8445, -112.91, 10.8766, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "54.8832, -33.708, -5.35853, 0.45", "56.4526, -37.7399, -3.69228, 0.45", "57.159, -39.5548, -2.94224, 0.45", "58.1298, -42.0487, -1.91162, 0.45", "58.6375, -43.3531, -1.37257, 0.45", "59.7301, -46.1601, -0.212504, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "39.4503, -112.795, 27.3996, 0.57", "37.2723, -115.505, 27.2085, 0.57", "35.6009, -117.742, 27.1014, 0.57", "34.2663, -119.605, 26.9949, 0.57", "33.4969, -120.827, 26.9001, 0.57", "32.3426, -122.952, 26.7335, 0.57", "30.8946, -126.125, 26.6768, 0.57", "30.1308, -128.185, 26.7508, 0.57", "29.6844, -129.692, 26.7601, 0.57", "28.8676, -132.411, 27.1175, 0.57", "27.699, -136.211, 27.751, 0.57", "26.0844, -140.703, 28.7976, 0.57", "25.4353, -142.142, 29.1964, 0.57", "23.3774, -145.442, 30.4974, 0.57", "17.3134, -152.073, 34.1825, 0.57", "15.2504, -153.473, 35.2232, 0.57", "12.1923, -154.638, 36.3699, 0.57", "9.1543, -155.317, 37.1911, 0.57", "5.28714, -156.092, 38.251, 0.57", "2.11302, -156.656, 38.9313, 0.57", "-1.52134, -157.41, 39.4802, 0.57", "-4.64945, -158.347, 40.0556, 0.57", "-8.51031, -159.935, 40.7692, 0.57", "-14.2775, -163.203, 41.8973, 0.57", "-17.0506, -165.431, 42.702, 0.57", "-19.8041, -168.188, 43.842, 0.57", "-21.3693, -169.984, 44.7497, 0.57", "-22.2574, -171.041, 45.3962, 0.57", "-23.5087, -172.534, 46.3343, 0.57", "-28.1834, -177.635, 49.7283, 0.57", "-29.1757, -178.666, 50.4344, 0.57", "-30.5619, -180.038, 51.3653, 0.57", "-35.011, -184.262, 54.2904, 0.57", "-36.8631, -186.02, 55.3878, 0.57", "-42.1921, -191.039, 58.1387, 0.57", "-43.3083, -192.106, 58.6372, 0.57", "-47.591, -196.253, 60.3958, 0.57", "-48.7789, -197.416, 60.8363, 0.57", "-51.4044, -199.96, 61.6224, 0.57", "-52.7211, -201.245, 61.942, 0.57", "-58.2729, -206.843, 62.8469, 0.57", "-60.8152, -209.456, 63.1279, 0.57", "-63.9017, -212.683, 63.0581, 0.57", "-67.86, -216.925, 62.5868, 0.57", "-72.3697, -221.847, 61.6602, 0.57", "-73.5662, -223.215, 61.2024, 0.57", "-75.4906, -225.545, 59.9868, 0.57", "-78.5597, -229.407, 56.4488, 0.57", "-80.0156, -231.314, 53.8067, 0.57", "-81.4596, -233.328, 50.4071, 0.57", "-82.9244, -235.43, 46.4383, 0.57", "-84.0451, -237.058, 43.1139, 0.57", "-88.0174, -243.158, 29.499, 0.57", "-88.0791, -243.26, 29.2536, 2.26", "-88.9003, -244.745, 24.3984, 0.68", "-89.0697, -245.181, 22.211, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "39.4503, -112.795, 27.3996, 0.57", "38.6799, -118.28, 33.446, 0.57", "38.242, -122.141, 37.5679, 0.57", "38.2183, -122.952, 38.3674, 0.57", "38.2637, -125.174, 40.4057, 0.57", "38.3576, -129.466, 44.361, 0.57", "38.8268, -139.467, 53.5997, 0.57", "39.0702, -141.393, 55.2967, 0.57", "39.7885, -145.266, 58.5301, 0.57", "40.1548, -146.719, 59.6834, 0.57", "41.8028, -152.409, 64.1558, 0.57", "42.5339, -154.375, 65.4332, 0.57", "43.9924, -157.272, 66.7306, 0.57", "45.4096, -159.997, 68.1361, 0.57", "47.3221, -163.801, 70.2183, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "59.9712, -68.7794, 26.6494, 0.34", "59.291, -70.622, 25.6647, 0.34", "58.8994, -72.0938, 24.8448, 0.34", "58.4937, -73.6966, 23.9848, 0.45", "57.8042, -76.4461, 22.58, 0.45", "57.1723, -79.0176, 21.2213, 0.45", "56.6085, -81.3542, 20.0077, 0.45", "56.002, -84.3856, 18.2201, 0.45", "55.8079, -85.6416, 17.4764, 0.45", "55.6893, -86.5447, 16.9472, 0.45", "55.3952, -88.948, 15.611, 0.45", "55.1952, -90.5899, 14.7936, 0.45", "54.636, -95.056, 12.7105, 0.45", "54.393, -96.908, 11.839, 0.45", "54.2603, -98.0863, 11.2983, 0.45", "53.9691, -100.502, 10.2911, 0.45", "53.6838, -103.08, 9.16684, 0.45", "53.5019, -104.615, 8.36279, 0.45", "53.1382, -107.249, 6.80307, 0.45", "52.9536, -108.501, 5.97019, 0.45", "52.7015, -110.2, 4.63387, 0.45", "52.0693, -114.138, 1.18336, 0.45", "51.8154, -115.885, -0.586423, 0.45", "51.6439, -117.221, -1.97997, 0.45", "51.4632, -118.862, -3.66474, 0.45", "51.1284, -122.146, -7.00513, 0.23", "51.0579, -122.951, -7.81948, 0.23", "50.7727, -125.878, -10.4329, 0.23", "50.7021, -127.032, -11.4108, 0.23", "50.6053, -129.701, -13.7442, 0.45", "50.5932, -130.57, -14.5299, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "59.9712, -68.7794, 26.6494, 0.45", "61.6139, -71.7047, 27.0278, 0.45", "63.2015, -74.5998, 27.3603, 0.45", "64.4509, -76.9819, 27.6065, 0.45", "66.0105, -80.0973, 28.0573, 0.45", "68.5616, -85.2122, 28.8993, 0.45", "70.2723, -88.6422, 29.4639, 0.45", "71.2312, -90.6861, 29.7564, 0.45", "72.7514, -94.1707, 30.2487, 0.45", "74.2669, -97.8353, 30.7537, 0.45", "75.6072, -101.068, 31.3844, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-28.6865, -93.7089, -27.2809, 0.57", "-26.9107, -94.6922, -30.9233, 0.57", "-26.6569, -94.8327, -31.4437, 0.57", "-26.1064, -95.1375, -32.573, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-28.6865, -93.7089, -27.2809, 0.68", "-28.9612, -95.1357, -28.0364, 0.68", "-29.2553, -97.1725, -29.5534, 0.68", "-29.4274, -98.1489, -30.3618, 0.68", "-29.6067, -98.8783, -31.0258, 0.68", "-29.9786, -100.443, -32.7145, 0.68", "-30.1562, -101.138, -33.5082, 0.68", "-30.7207, -103.235, -36.0965, 0.68", "-30.9452, -103.975, -36.958, 0.68", "-31.2925, -104.894, -37.9896, 0.68", "-32.0938, -106.773, -40.0295, 0.68", "-32.8252, -108.174, -41.4955, 0.68", "-34.1177, -110.468, -43.79, 0.68", "-35.3092, -112.426, -45.656, 0.68", "-36.6462, -114.539, -47.623, 0.68", "-37.7459, -116.236, -49.1494, 0.68", "-39.1246, -118.18, -50.8444, 0.68", "-40.3746, -119.814, -52.3738, 0.57", "-41.5021, -121.107, -53.708, 0.57", "-42.8494, -122.656, -55.3979, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-30.7444, -78.458, 20.2923, 0.45", "-35.1493, -78.5439, 20.8824, 0.45", "-37.1643, -78.3788, 21.2098, 0.45", "-41.6105, -77.7698, 21.6849, 0.45", "-42.8108, -77.5471, 21.8375, 0.45", "-44.4534, -77.1369, 22.0379, 0.45", "-45.6754, -76.8193, 22.5089, 0.45", "-47.0773, -76.4112, 23.3598, 0.45", "-48.4215, -75.9201, 24.3651, 0.45", "-49.8002, -75.2473, 25.3356, 0.45", "-50.7483, -74.7032, 25.9914, 0.45", "-56.6053, -71.2491, 30.0749, 0.45", "-57.8646, -70.5616, 30.8956, 0.45", "-60.3521, -69.3173, 32.35, 0.45", "-64.1485, -67.5173, 34.3443, 0.45", "-65.5636, -66.9699, 34.9317, 0.45", "-69.6355, -66.0509, 36.1902, 0.45", "-71.4064, -65.9728, 36.4012, 0.45", "-72.4723, -66.1169, 36.5132, 0.34", "-73.6742, -66.4973, 36.6046, 0.34", "-76.8743, -67.8783, 36.5433, 0.34", "-79.6143, -69.1981, 36.1707, 0.34", "-81.5116, -70.1481, 35.684, 0.34", "-83.7567, -71.1669, 35.1184, 0.34", "-87.5429, -72.7528, 34.2135, 0.34", "-92.4495, -74.586, 33.0748, 0.34", "-94.1084, -75.0714, 32.6541, 0.34", "-95.305, -75.2916, 32.4458, 0.34", "-98.7782, -75.7066, 32.1308, 0.34", "-101.226, -75.9332, 32.2057, 0.34", "-103.223, -76.0768, 32.5591, 0.34", "-105.536, -76.2438, 33.2349, 0.34", "-108.429, -76.5579, 34.0099, 0.34", "-112.002, -77.0772, 34.9261, 0.34", "-115.933, -77.8073, 35.8043, 0.34", "-119.816, -78.6471, 36.5779, 0.34", "-122.245, -79.2966, 36.9724, 0.34", "-125.83, -80.5024, 37.4324, 0.34", "-127.794, -81.2538, 37.5472, 0.34", "-129.117, -81.7884, 37.5404, 0.34", "-132.868, -83.3791, 37.1206, 0.34", "-135.06, -84.3951, 36.7965, 0.34", "-137.969, -85.7386, 36.3934, 0.34", "-139.099, -86.2207, 36.2791, 0.34", "-141.792, -87.2974, 35.8907, 0.34", "-143.213, -87.8512, 35.6478, 0.34", "-145.908, -88.8953, 35.0851, 0.34", "-147.46, -89.4962, 34.6951, 0.34", "-149.134, -90.1301, 34.19, 0.34", "-152.101, -91.2333, 33.2311, 0.34", "-154.524, -92.0708, 32.3931, 0.34", "-156.994, -92.801, 31.4666, 0.34", "-159.284, -93.3219, 30.5677, 0.34", "-161.054, -93.6372, 29.9434, 0.34", "-162.783, -93.8845, 29.3479, 0.34", "-164.445, -94.0267, 28.8016, 0.34", "-165.816, -94.0159, 28.381, 0.34", "-168.337, -93.7009, 27.6988, 0.34", "-170.127, -93.2891, 27.3217, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-30.7444, -78.458, 20.2923, 2.72", "-31.834, -80.8423, 23.7505, 2.72", "-32.2476, -81.8927, 25.2337, 1.47", "-32.5651, -82.8428, 26.4106, 1.13", "-33.5311, -85.9903, 30.0316, 1.13", "-33.7217, -86.6348, 30.6629, 3.39", "-34.1184, -87.9533, 31.7384, 1.81", "-34.8642, -90.7833, 33.1577, 0.68", "-35.2989, -92.365, 33.7041, 0.68", "-35.5663, -93.2149, 33.8231, 0.68", "-36.4218, -95.7312, 33.7424, 0.68", "-37.0813, -97.4248, 33.6336, 0.68", "-37.7194, -98.8894, 33.4571, 0.68", "-38.4385, -100.533, 33.1627, 0.68", "-39.2999, -102.425, 32.8868, 0.68", "-39.8254, -103.603, 32.7126, 0.68", "-40.4886, -105.132, 32.5312, 0.68", "-41.0515, -106.499, 32.3605, 0.68", "-42.2488, -109.456, 32.0437, 0.68", "-42.523, -110.14, 32.027, 3.51", "-43.1451, -111.745, 32.1023, 1.7", "-43.6752, -112.966, 32.2808, 0.79", "-44.3601, -114.365, 32.6117, 0.79", "-45.7043, -116.926, 33.4117, 0.68", "-46.9981, -119.318, 34.2826, 0.79", "-47.3741, -120.041, 34.5399, 0.45", "-48.515, -122.067, 35.7469, 0.45", "-48.9307, -122.808, 36.3142, 0.45", "-49.2223, -123.353, 36.808, 0.68", "-49.8853, -124.634, 38.1535, 0.68", "-50.2044, -125.302, 38.8781, 0.68", "-52.1806, -129.592, 43.6291, 2.38", "-52.5074, -130.305, 44.4648, 1.47", "-52.6902, -130.694, 44.9196, 0.79", "-53.378, -132.189, 46.6373, 0.79", "-53.8678, -133.309, 47.8453, 0.79", "-54.1963, -134.146, 48.5986, 2.15", "-55.0078, -136.822, 50.212, 0.79", "-55.4361, -138.446, 51.1059, 0.68", "-55.6841, -139.635, 51.6242, 0.68", "-55.8453, -140.747, 51.9744, 0.68", "-55.9023, -141.194, 52.0756, 0.68", "-56.0518, -142.567, 52.1939, 0.68", "-56.2075, -144.048, 52.1227, 0.68", "-56.6511, -146.632, 51.8715, 0.68", "-56.7792, -147.118, 51.7998, 2.6", "-57.0577, -147.933, 51.6561, 2.26", "-58.2073, -150.553, 51.13, 0.45", "-58.6495, -151.355, 50.9519, 0.45", "-59.3861, -152.531, 50.6495, 0.45", "-60.5208, -154.206, 50.193, 0.45", "-61.6423, -155.776, 49.7925, 0.45", "-62.9401, -157.509, 49.3986, 0.45", "-64.3669, -159.331, 49.0346, 0.45", "-65.7443, -161.112, 48.6592, 2.38", "-66.0683, -161.543, 48.5668, 3.51", "-67.6483, -163.641, 48.1222, 0.57", "-68.3478, -164.572, 47.9204, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-29.7729, -65.7655, 22.3427, 0.45", "-28.5009, -65.5635, 21.431, 0.45", "-27.7067, -65.4728, 20.9768, 0.45", "-26.5492, -65.437, 20.3816, 0.45", "-23.4802, -65.579, 19.0354, 0.45", "-20.7237, -65.7814, 17.9069, 0.45", "-18.0684, -65.9752, 16.8452, 0.45", "-15.2208, -66.1566, 15.4044, 0.45", "-12.6963, -66.2967, 14.1022, 0.45", "-10.7355, -66.4151, 13.1124, 0.45", "-7.06251, -66.6743, 11.3241, 0.45", "-4.52452, -66.8325, 10.0888, 0.45", "0.427064, -66.946, 7.45901, 0.45", "2.21317, -66.9351, 6.20933, 0.45", "2.40577, -66.9209, 6.05901, 0.45", "2.72642, -66.8848, 5.75752, 0.45", "4.03506, -66.7979, 4.48631, 0.45", "6.86728, -66.9838, 1.54324, 0.45", "8.36094, -67.241, 0.0884976, 0.45", "9.13322, -67.4172, -0.667578, 0.45", "10.9431, -67.9428, -2.46192, 0.45", "12.0623, -68.3526, -3.56414, 0.45", "14.7427, -69.4306, -6.15477, 0.45", "16.4671, -70.0712, -7.54793, 0.45", "17.143, -70.3208, -8.04801, 0.45", "17.9092, -70.5661, -8.55813, 0.45", "18.7795, -70.7459, -9.02165, 0.45", "20.0597, -70.8054, -9.56155, 0.45", "22.2934, -70.5673, -10.0248, 0.45", "23.3263, -70.4445, -10.2956, 0.45", "26.3505, -70.0737, -11.1687, 0.45", "27.7737, -69.9002, -11.6381, 0.45", "29.0055, -69.786, -12.0662, 0.45", "31.3165, -69.6769, -12.8745, 0.45", "36.6858, -69.7377, -14.6602, 0.45", "37.332, -69.7637, -14.8801, 0.45", "39.3152, -69.9585, -15.6147, 0.45", "40.678, -70.1583, -16.1688, 0.45", "41.2987, -70.2779, -16.4363, 0.45", "43.5055, -70.7626, -17.3747, 0.45", "45.1328, -71.1024, -17.4011, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-89.0697, -245.181, 22.211, 0.57", "-90.1399, -246.627, 21.6072, 0.57", "-93.2623, -250.303, 19.8826, 0.57", "-95.9291, -253.131, 18.4368, 0.45", "-98.4732, -255.56, 17.4507, 0.45", "-100.495, -257.386, 16.7905, 0.45", "-102.328, -258.992, 16.3081, 0.45", "-104.457, -260.733, 15.8142, 0.45", "-106.803, -262.393, 15.4283, 0.45", "-113.245, -266.582, 14.763, 0.45", "-114.465, -267.376, 14.7091, 0.45", "-116.69, -268.947, 14.7274, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-89.0697, -245.181, 22.211, 0.57", "-89.331, -249.947, 21.7855, 0.57", "-89.4364, -251.58, 21.6565, 0.57", "-89.551, -253.625, 21.4764, 0.57", "-89.6977, -256.373, 21.2049, 0.57", "-89.7945, -258.278, 21.0701, 0.57", "-89.8257, -259.238, 21.0057, 0.57", "-89.833, -259.417, 21.0047, 2.04", "-89.9671, -261.797, 20.6846, 0.57", "-90.0619, -262.594, 20.486, 0.57", "-90.3059, -263.712, 20.0585, 1.92", "-91.2111, -266.626, 19.1666, 0.68", "-91.6831, -267.927, 18.8212, 0.68", "-93.0549, -271.342, 17.8853, 0.57", "-94.0652, -273.772, 17.5592, 0.57", "-95.5023, -277.385, 17.4385, 0.57", "-97.3969, -282.972, 17.6458, 0.57", "-97.6368, -283.843, 17.7479, 0.57", "-97.9893, -285.719, 18.0216, 0.45", "-98.7924, -293.178, 19.6221, 0.45", "-98.869, -294.396, 19.8912, 0.45", "-99.0443, -298.072, 20.6231, 0.45", "-99.1486, -300.777, 20.9095, 0.45", "-99.3428, -303.038, 21.2383, 0.45", "-100.031, -307.543, 21.848, 0.45", "-100.486, -309.345, 22.015, 0.45", "-101.003, -310.922, 22.2564, 0.45", "-101.232, -311.494, 22.3816, 0.45", "-103.167, -315.876, 23.5838, 0.11", "-104.328, -318.348, 24.3659, 0.23", "-106.003, -321.973, 25.3906, 0.23", "-106.709, -323.556, 25.927, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "75.6072, -101.068, 31.3844, 0.34", "77.217, -104.034, 31.6156, 0.34", "79.1546, -107.603, 31.8938, 0.34", "81.0566, -111.107, 32.1669, 0.34", "82.4236, -113.626, 32.3632, 0.34", "83.1613, -114.984, 32.4691, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "75.6072, -101.068, 31.3844, 0.45", "78.1714, -99.5236, 32.2281, 0.45", "80.1279, -98.3228, 32.7681, 0.45", "83.1073, -96.5327, 33.5599, 0.45", "85.1483, -95.2703, 34.1517, 0.45", "89.204, -92.7451, 35.3795, 0.45", "91.9293, -91.1304, 36.2407, 0.45", "94.0076, -89.9995, 36.9653, 0.45", "96.8602, -88.5349, 37.9186, 0.45", "100.194, -86.8296, 38.9356, 0.45", "100.611, -86.6066, 39.04, 1.58", "103.746, -84.8716, 39.8035, 0.34", "106.339, -83.4841, 40.264, 0.34", "110.799, -81.0881, 40.6915, 0.34", "113.38, -79.719, 40.7224, 0.34", "116.177, -78.6216, 40.5613, 0.34", "118.007, -78.0458, 40.3307, 0.34", "120.101, -77.6352, 40.0208, 0.34", "123.38, -77.5304, 39.4938, 0.34", "125.88, -77.8161, 39.2193, 0.34", "132.696, -79.1831, 38.7114, 0.34", "136.341, -80.036, 38.3994, 0.34", "140.153, -81.0008, 38.0386, 0.34", "146.0, -82.6675, 37.5202, 0.34", "149.527, -83.8372, 37.1954, 0.34", "153.33, -85.1731, 36.7921, 0.34", "157.038, -86.5581, 36.5391, 0.34", "160.66, -87.9363, 36.4912, 0.34", "162.29, -88.4975, 36.5935, 0.34", "164.17, -89.173, 36.9434, 0.34", "166.296, -89.9952, 37.4809, 0.34", "167.91, -90.6253, 38.0079, 0.34", "169.751, -91.3176, 38.7216, 0.34", "176.167, -93.595, 41.2371, 0.34", "179.193, -94.5701, 42.4387, 0.34", "182.24, -95.5147, 43.6473, 0.34", "185.067, -96.3997, 44.7453, 0.34", "189.8, -97.8659, 46.4465, 0.34", "193.529, -98.9958, 47.7547, 0.34", "195.879, -99.6408, 48.549, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-170.127, -93.2891, 27.3217, 0.34", "-171.814, -93.6092, 27.3222, 0.34", "-175.163, -94.6979, 27.0128, 0.34", "-176.448, -95.2497, 26.7901, 2.04", "-177.698, -95.8523, 26.531, 1.13", "-179.714, -96.9698, 26.1404, 0.79", "-181.002, -97.8549, 25.7078, 0.57", "-183.136, -99.5411, 24.6858, 0.57", "-187.415, -103.217, 22.163, 0.57", "-189.427, -104.754, 21.0921, 0.57", "-192.712, -107.018, 19.4962, 0.57", "-198.76, -110.776, 16.7988, 0.57", "-202.167, -112.658, 15.2716, 0.57", "-203.781, -113.446, 14.5487, 0.57", "-210.463, -116.339, 11.6692, 0.57", "-212.449, -117.122, 10.8704, 0.57", "-214.364, -117.833, 10.2513, 0.57", "-217.49, -119.038, 9.49868, 0.57", "-220.733, -120.418, 8.86775, 0.57", "-222.933, -121.422, 8.52662, 0.57", "-225.657, -122.871, 8.19215, 0.57", "-232.568, -126.638, 7.66094, 0.57", "-236.218, -128.622, 7.47133, 0.57", "-241.093, -131.293, 7.29758, 0.57", "-244.894, -133.382, 7.1641, 0.57", "-248.759, -135.462, 6.95892, 0.57", "-251.39, -136.892, 6.83211, 0.57", "-253.941, -138.329, 6.62745, 0.57", "-257.118, -140.109, 6.38481, 0.57", "-258.884, -141.136, 6.15846, 0.57", "-260.87, -142.249, 5.8746, 0.57", "-264.87, -144.395, 5.31611, 0.57", "-268.573, -146.536, 4.66258, 0.57", "-271.145, -148.125, 4.09083, 0.57", "-274.276, -150.157, 3.23222, 0.57", "-276.783, -151.908, 2.41898, 0.57", "-278.434, -153.138, 1.78724, 0.57", "-281.299, -155.583, 0.129305, 0.57", "-283.337, -157.492, -1.32017, 0.57", "-285.404, -159.752, -3.40502, 0.57", "-286.923, -161.802, -5.59228, 0.57", "-288.346, -164.011, -8.21591, 0.57", "-290.304, -167.443, -12.8487, 0.57", "-291.04, -168.669, -14.6179, 0.57", "-293.615, -172.699, -20.8152, 0.57", "-295.463, -175.502, -25.3322, 0.57", "-296.11, -176.435, -26.7779, 0.57", "-298.158, -179.103, -30.3858, 0.57", "-301.24, -182.343, -33.217, 0.57", "-303.576, -184.58, -34.327, 0.57", "-304.567, -185.421, -34.4544, 0.57", "-306.943, -187.359, -34.5065, 0.57", "-308.313, -188.496, -34.5363, 0.57", "-312.538, -192.436, -34.7006, 0.57", "-315.021, -195.306, -35.2134, 0.57", "-316.076, -196.827, -35.7033, 0.45", "-316.927, -198.313, -36.2947, 0.45", "-317.927, -200.893, -37.5306, 0.45", "-318.558, -204.633, -39.5628, 0.45", "-318.545, -207.783, -41.4218, 0.45", "-318.146, -212.832, -44.4067, 0.45", "-317.863, -215.502, -45.9501, 0.45", "-317.476, -219.435, -47.9648, 0.45", "-317.164, -223.776, -49.866, 0.45", "-317.238, -226.929, -51.0436, 0.45", "-317.391, -228.141, -51.3876, 0.45", "-317.938, -230.191, -51.7958, 0.45", "-319.477, -234.214, -52.5164, 0.45", "-320.86, -236.847, -52.8588, 0.45", "-323.074, -240.254, -53.226, 0.45", "-325.429, -243.152, -53.3523, 0.45", "-327.981, -245.835, -53.3615, 0.45", "-329.816, -247.392, -53.2535, 0.45", "-331.236, -248.315, -53.0272, 0.45", "-332.909, -249.173, -52.535, 0.45", "-338.767, -252.144, -50.3341, 0.45", "-339.961, -252.766, -49.8596, 0.45", "-342.158, -253.834, -48.6767, 0.45", "-346.2, -255.943, -46.2029, 0.45", "-349.699, -257.991, -43.824, 0.45", "-353.845, -260.87, -40.7784, 0.45", "-355.793, -262.564, -39.3483, 0.45", "-364.94, -271.231, -33.282, 0.45", "-367.194, -273.632, -31.9603, 0.45", "-369.704, -277.051, -30.9662, 0.45", "-372.752, -282.157, -30.3715, 0.45", "-376.815, -290.222, -30.2235, 0.45", "-379.701, -297.089, -30.6346, 0.45", "-381.83, -303.441, -31.6024, 0.45", "-386.23, -318.141, -34.0917, 0.45", "-386.799, -320.354, -34.5235, 0.45", "-387.942, -325.907, -35.6058, 0.45", "-388.319, -329.622, -36.4509, 0.45", "-388.555, -334.89, -37.5896, 0.45", "-388.681, -338.932, -38.3972, 0.45", "-388.932, -341.03, -38.6647, 0.45", "-389.4, -343.967, -39.1145, 0.45", "-391.903, -354.627, -40.691, 0.45", "-393.906, -360.028, -40.954, 0.45", "-394.966, -362.065, -40.8074, 0.45", "-399.335, -369.065, -39.8301, 0.45", "-401.687, -372.349, -39.1562, 0.45", "-405.755, -377.313, -38.0271, 0.45", "-411.081, -382.703, -36.1616, 0.45", "-413.322, -385.156, -35.5142, 0.45", "-415.951, -388.78, -34.791, 0.45", "-416.685, -390.52, -34.5279, 0.45", "-417.916, -397.006, -33.7896, 0.45", "-418.157, -404.935, -33.3507, 0.45", "-416.872, -417.651, -33.1264, 0.45", "-415.091, -426.225, -32.6787, 0.45", "-413.495, -431.24, -32.1119, 0.45", "-413.099, -432.171, -31.9756, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-170.127, -93.2891, 27.3217, 0.34", "-169.276, -91.5382, 29.4896, 0.34", "-168.666, -90.2833, 31.0433, 0.34", "-166.304, -85.421, 37.0636, 0.34", "-165.653, -84.0799, 38.724, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-68.3478, -164.572, 47.9204, 0.57", "-70.1395, -165.097, 48.5574, 0.57", "-73.0997, -166.187, 49.016, 0.57", "-74.7278, -166.917, 49.1108, 0.57", "-76.9138, -168.058, 48.8419, 0.57", "-78.9811, -169.265, 48.4656, 0.57", "-82.688, -171.505, 47.7101, 0.57", "-84.7333, -172.829, 47.1683, 0.57", "-87.0479, -174.387, 46.4517, 0.57", "-91.2299, -177.217, 45.1831, 0.57", "-95.9042, -180.299, 43.7874, 0.57", "-99.0545, -182.336, 42.9992, 0.57", "-100.155, -183.024, 42.7977, 2.15", "-101.148, -183.609, 42.6698, 1.36", "-103.247, -184.748, 42.6517, 0.68", "-104.401, -185.318, 42.8512, 0.68", "-105.743, -185.916, 43.2615, 0.57", "-106.499, -186.239, 43.5886, 0.57", "-108.489, -187.091, 44.549, 0.57", "-110.693, -188.004, 45.6622, 0.57", "-112.153, -188.62, 46.3928, 0.57", "-113.968, -189.463, 47.1548, 0.57", "-115.721, -190.314, 47.6303, 0.57", "-116.411, -190.672, 47.7428, 0.57", "-117.443, -191.25, 47.79, 0.57", "-118.841, -192.06, 47.7509, 0.57", "-122.964, -194.439, 47.5156, 0.57", "-125.557, -195.947, 47.2149, 0.57", "-127.744, -197.228, 46.9059, 0.57", "-130.473, -198.754, 46.5035, 0.57", "-133.998, -200.649, 46.077, 0.57", "-138.546, -202.864, 45.6498, 0.57", "-140.402, -203.685, 45.4577, 1.7", "-142.069, -204.382, 45.2841, 1.7", "-143.689, -205.013, 45.0215, 0.68", "-146.623, -206.052, 44.4446, 0.68", "-148.447, -206.712, 44.0282, 0.68", "-151.329, -207.825, 43.3675, 0.68", "-152.125, -208.167, 43.1705, 1.7", "-153.407, -208.831, 42.7933, 1.7", "-154.272, -209.357, 42.5106, 1.7", "-155.298, -210.086, 42.1547, 0.68", "-157.755, -212.059, 41.3649, 0.68", "-160.16, -214.12, 40.6997, 0.68", "-162.103, -215.884, 40.2759, 0.68", "-163.02, -216.771, 40.1203, 0.68", "-165.139, -218.935, 39.8676, 0.68", "-167.098, -221.01, 39.7538, 0.68", "-168.057, -222.081, 39.7904, 0.68", "-170.342, -224.694, 40.1214, 0.68", "-171.0, -225.467, 40.2477, 0.68", "-171.789, -226.412, 40.4211, 1.02", "-172.591, -227.397, 40.5942, 0.45", "-173.752, -228.972, 40.8004, 0.45", "-174.085, -229.46, 40.8207, 0.45", "-175.07, -230.931, 40.805, 0.45", "-176.236, -232.667, 40.798, 0.45", "-177.547, -234.657, 40.7938, 0.45", "-179.038, -236.962, 40.7848, 0.45", "-180.361, -239.041, 40.8058, 0.45", "-182.434, -242.278, 40.8402, 0.45", "-183.046, -243.272, 40.8542, 0.45", "-183.772, -244.516, 40.8749, 1.47", "-184.02, -244.945, 40.8832, 1.47", "-185.221, -247.019, 40.8339, 0.68", "-186.651, -249.505, 40.7161, 0.57", "-187.916, -251.754, 40.6474, 0.57", "-189.13, -253.86, 40.7, 0.57", "-189.484, -254.457, 40.7381, 0.57", "-190.598, -256.298, 41.0114, 0.57", "-191.863, -258.336, 41.6417, 0.57", "-192.909, -260.128, 42.409, 1.7", "-194.508, -263.011, 43.7648, 0.68", "-195.254, -264.471, 44.4779, 0.68", "-196.568, -267.204, 45.7825, 0.68", "-198.464, -271.217, 47.5561, 0.68", "-199.814, -273.987, 48.5723, 0.68", "-200.351, -275.026, 48.8647, 2.15", "-200.695, -275.658, 48.9945, 2.15", "-201.893, -277.751, 49.2003, 0.68", "-203.382, -280.118, 49.2604, 0.68", "-204.386, -281.616, 49.2948, 0.68", "-205.833, -283.631, 49.4597, 0.68", "-207.371, -285.787, 49.6275, 0.68", "-208.828, -287.918, 49.7828, 0.68", "-210.954, -291.296, 50.0139, 0.68", "-212.23, -293.551, 50.1544, 0.68", "-213.153, -295.29, 50.2003, 0.68", "-214.479, -297.936, 50.1483, 0.68", "-214.98, -299.001, 50.0799, 0.68", "-216.178, -301.733, 49.7786, 0.68", "-216.9, -303.497, 49.4753, 0.68", "-217.81, -305.707, 49.0793, 0.68", "-218.737, -307.814, 48.7793, 0.68", "-219.561, -309.491, 48.6339, 0.68", "-220.129, -310.551, 48.5401, 0.68", "-220.801, -311.701, 48.5074, 0.68", "-221.056, -312.116, 48.5232, 0.68", "-222.269, -314.043, 48.6956, 0.68", "-223.655, -316.271, 48.9928, 0.68", "-224.616, -317.902, 49.2439, 0.68", "-225.905, -320.202, 49.5991, 0.68", "-227.082, -322.422, 49.9981, 0.68", "-227.383, -323.021, 50.147, 0.68", "-228.103, -324.529, 50.5759, 0.57", "-228.741, -325.889, 50.9652, 0.57", "-229.92, -328.423, 51.6925, 0.57", "-230.984, -330.815, 52.4635, 0.57", "-232.182, -333.426, 53.4435, 0.57", "-233.399, -336.038, 54.4375, 0.57", "-234.55, -338.42, 55.2337, 0.57", "-235.356, -340.087, 55.658, 1.47", "-236.987, -343.468, 56.2968, 0.45", "-237.795, -345.104, 56.4606, 0.45", "-239.442, -348.568, 56.5546, 0.45", "-240.698, -351.442, 56.644, 0.45", "-242.043, -354.805, 56.702, 0.45", "-242.823, -357.623, 56.7854, 0.45", "-243.232, -356.572, 55.3954, 0.45", "-243.61, -353.628, 53.2203, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-68.3478, -164.572, 47.9204, 0.57", "-69.4246, -165.786, 47.9908, 0.57", "-70.1417, -166.593, 48.0359, 0.57", "-71.1296, -167.735, 48.0935, 0.57", "-72.6222, -169.461, 48.1805, 0.57", "-74.4056, -171.523, 48.2844, 0.57", "-75.5112, -172.801, 48.3489, 2.15", "-76.5012, -173.918, 48.3951, 2.72", "-77.2541, -174.8, 48.446, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "83.1613, -114.984, 32.4691, 0.45", "89.1338, -115.725, 32.8927, 0.45", "90.5415, -115.896, 33.1069, 0.45", "93.1234, -116.054, 33.6259, 0.45", "96.5268, -116.199, 34.3746, 0.45", "99.6345, -116.344, 35.0751, 0.45", "103.702, -116.449, 35.9903, 0.45", "105.11, -116.435, 36.3946, 0.45", "109.119, -116.167, 37.4268, 0.45", "112.258, -115.748, 38.1381, 0.45", "114.749, -115.211, 38.5959, 0.45", "118.284, -114.07, 38.905, 0.45", "120.631, -113.086, 38.9061, 0.45", "123.2, -111.865, 38.8, 0.45", "125.859, -110.515, 38.4518, 0.45", "128.85, -108.871, 37.7828, 0.45", "133.078, -106.394, 36.6594, 0.45", "134.808, -105.373, 36.1075, 0.45", "136.652, -104.304, 35.4427, 0.45", "141.17, -101.859, 33.6745, 0.45", "143.119, -100.93, 32.746, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "83.1613, -114.984, 32.4691, 0.34", "83.7004, -118.659, 30.6102, 0.34", "83.8347, -120.062, 29.8083, 0.34", "83.9822, -122.403, 28.4049, 0.34", "84.2005, -126.668, 25.797, 0.34", "84.3095, -130.483, 23.1971, 0.34", "84.2765, -134.41, 20.4082, 0.34", "83.762, -138.357, 17.3658, 0.34", "83.6389, -138.858, 16.9516, 0.34", "83.5341, -139.128, 16.6956, 1.58", "81.9043, -142.105, 13.7738, 0.45", "81.1454, -143.406, 12.3806, 0.45", "79.3064, -146.647, 8.68614, 0.45", "78.7308, -147.786, 7.40548, 0.45", "77.4182, -150.886, 4.03734, 0.45", "77.0044, -152.03, 2.88422, 0.45", "76.0602, -155.381, -0.155642, 0.45", "75.7468, -157.006, -1.63254, 0.45", "75.3612, -160.271, -4.34237, 0.45", "75.1497, -162.376, -5.98273, 0.45", "74.8792, -165.253, -7.9982, 0.45", "74.5514, -169.621, -11.0832, 0.45", "74.2979, -172.759, -13.1974, 0.45", "74.0112, -176.813, -15.8892, 0.45", "73.7056, -180.136, -18.007, 0.45", "73.4501, -183.012, -19.8658, 0.45", "73.1343, -186.307, -22.0325, 0.45", "72.7498, -189.317, -23.9598, 0.45", "72.39, -191.157, -25.1069, 0.45", "71.7578, -194.011, -27.1837, 0.45", "71.5187, -195.036, -27.9502, 0.45", "70.7934, -197.89, -30.1589, 0.45", "70.3304, -199.583, -31.438, 0.45", "69.6894, -201.973, -33.3071, 0.45", "68.6965, -206.337, -37.1813, 0.45", "68.2472, -208.903, -39.5989, 0.45", "68.0439, -210.387, -40.9962, 0.45", "67.9495, -211.681, -42.136, 0.45", "67.9307, -212.743, -43.0862, 0.45", "67.9234, -217.294, -46.9984, 0.45", "67.8868, -219.441, -48.7328, 0.45", "67.8956, -220.708, -49.7957, 0.45", "67.9185, -222.959, -51.6287, 0.45", "68.1342, -226.447, -54.9778, 0.45", "68.2615, -228.072, -56.5933, 0.45", "68.3439, -229.277, -57.7152, 0.45", "68.4279, -230.649, -58.9828, 0.45", "68.6006, -233.415, -61.5723, 0.45", "68.8129, -240.27, -66.8338, 0.45", "68.7346, -243.286, -68.3694, 0.45", "68.4823, -246.733, -69.5088, 0.45", "67.8074, -250.766, -70.0373, 0.45", "67.3307, -252.573, -69.9886, 0.45", "63.3618, -263.611, -68.1712, 0.45", "61.945, -266.861, -67.3305, 0.45", "61.6625, -267.43, -67.1741, 0.45", "59.8648, -270.729, -66.3831, 0.45", "58.4811, -273.254, -65.9894, 0.45", "57.0578, -276.005, -66.0681, 0.45", "56.816, -276.537, -66.2413, 0.45", "56.1566, -278.246, -67.0346, 0.45", "55.2907, -280.971, -68.5163, 0.45", "54.7652, -283.059, -69.7801, 0.45", "54.0963, -286.212, -71.7538, 0.45", "53.4912, -289.578, -73.8689, 0.45", "52.657, -295.499, -77.2915, 0.45", "52.4494, -297.296, -78.2665, 0.45", "52.2613, -299.107, -79.2199, 0.45", "52.0461, -301.23, -80.2767, 0.45", "51.821, -303.64, -81.2831, 0.45", "51.5265, -308.708, -83.0523, 0.45", "51.4707, -310.032, -83.2919, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-77.2541, -174.8, 48.446, 0.45", "-79.2869, -176.302, 48.4498, 0.45", "-80.8865, -177.516, 48.467, 0.45", "-82.3554, -178.644, 48.4899, 0.45", "-84.5661, -180.436, 48.5408, 0.45", "-85.8675, -181.474, 48.5896, 0.45", "-87.8424, -183.051, 48.7399, 0.45", "-89.8718, -184.779, 48.9829, 0.45", "-90.4048, -185.232, 49.0584, 1.47", "-92.3557, -186.831, 49.4152, 0.45", "-93.5918, -187.856, 49.6891, 0.45", "-94.8126, -188.919, 50.0718, 0.45", "-95.6701, -189.737, 50.4054, 0.45", "-97.431, -191.59, 51.2239, 0.45", "-98.6507, -192.937, 51.8262, 0.79", "-99.7691, -194.243, 52.3981, 0.79", "-101.785, -196.787, 53.5094, 0.45", "-103.297, -198.729, 54.3416, 0.45", "-105.119, -201.216, 55.41, 0.45", "-105.692, -202.071, 55.8223, 0.45", "-106.225, -202.902, 56.2348, 1.92", "-107.148, -204.469, 57.1596, 1.47", "-107.887, -205.838, 58.0092, 0.57", "-108.542, -207.165, 58.8728, 0.57", "-109.563, -209.455, 60.5139, 0.57", "-110.313, -211.26, 61.7809, 0.57", "-111.976, -215.21, 64.4419, 0.57", "-112.341, -216.071, 64.9585, 0.57", "-113.136, -217.825, 65.8661, 0.57", "-114.688, -220.87, 67.0485, 0.57", "-115.631, -222.567, 67.4475, 0.57", "-116.597, -224.182, 67.5178, 0.57", "-117.886, -226.23, 67.4362, 0.57", "-119.715, -229.099, 67.4622, 0.57", "-121.648, -232.062, 67.5926, 0.57", "-123.391, -234.723, 67.7056, 0.57", "-126.301, -239.141, 68.0012, 0.57", "-128.595, -242.373, 68.1365, 0.57", "-130.864, -245.268, 68.2029, 0.23", "-132.224, -246.905, 68.2687, 0.23", "-133.751, -248.623, 68.3716, 0.23", "-135.71, -250.744, 68.499, 0.23", "-138.363, -253.506, 68.6817, 0.23", "-139.472, -254.52, 68.4974, 0.23", "-141.007, -255.762, 68.1518, 1.7", "-142.811, -257.052, 67.899, 0.68", "-144.515, -258.088, 67.8135, 0.45", "-145.479, -258.6, 67.9195, 0.45", "-149.386, -260.173, 69.1018, 0.45", "-152.359, -260.901, 70.2227, 0.45", "-154.373, -261.169, 71.0428, 0.45", "-155.672, -261.283, 71.683, 0.45", "-156.969, -261.439, 72.2726, 0.45", "-159.247, -262.075, 73.1583, 0.45", "-159.577, -262.219, 73.2669, 0.45", "-160.378, -262.637, 73.3768, 1.92", "-162.394, -263.899, 73.4868, 0.57", "-164.735, -265.59, 73.5467, 0.57", "-166.838, -267.263, 73.4174, 0.45", "-167.964, -268.231, 73.3001, 0.45", "-170.199, -270.18, 73.0818, 0.45", "-171.819, -271.644, 72.9482, 0.57", "-172.778, -272.538, 72.8685, 0.57", "-175.113, -274.777, 72.6991, 0.57", "-178.271, -277.736, 72.4165, 0.57", "-179.696, -279.081, 72.2777, 0.57", "-182.842, -282.073, 71.9575, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-77.2541, -174.8, 48.446, 0.45", "-77.5076, -176.997, 48.4906, 0.45", "-77.6058, -177.958, 48.4975, 0.45", "-77.8897, -181.322, 48.7503, 0.45", "-78.1761, -184.479, 49.1015, 0.45", "-78.4538, -187.045, 49.357, 0.45", "-78.4638, -187.14, 49.3631, 1.81", "-78.5893, -188.358, 49.4174, 1.7", "-78.9378, -191.462, 49.5466, 0.68", "-79.1171, -193.243, 49.5812, 0.68", "-79.2868, -195.53, 49.679, 0.68", "-79.4448, -198.273, 49.7991, 0.68", "-79.5006, -199.916, 49.8214, 0.68", "-79.5061, -202.146, 49.7786, 0.68", "-79.4275, -204.375, 49.6499, 0.68", "-79.243, -206.996, 49.5118, 0.68", "-78.9673, -209.813, 49.3817, 0.68", "-78.5915, -213.199, 49.1711, 0.68", "-78.3811, -215.369, 48.8662, 0.68", "-78.198, -217.599, 48.4028, 0.68", "-78.1063, -219.155, 47.989, 0.68", "-78.0746, -221.075, 47.3899, 0.68", "-78.1231, -224.857, 46.1528, 0.68", "-78.2364, -228.715, 44.9045, 0.57", "-78.3003, -230.326, 44.3984, 0.57", "-78.3964, -232.484, 43.7506, 0.57", "-78.4935, -235.036, 42.9424, 0.57", "-78.5761, -237.903, 42.0273, 0.57", "-78.6211, -241.245, 41.0096, 0.57", "-78.5626, -243.104, 40.5285, 0.57", "-78.5014, -244.503, 40.1624, 0.57", "-78.2786, -247.626, 39.4907, 0.57", "-78.1919, -248.376, 39.3506, 0.57", "-77.9822, -249.918, 39.1336, 0.57", "-77.6215, -252.269, 39.0705, 0.57", "-77.5021, -252.965, 39.087, 2.6", "-77.0774, -255.407, 39.2281, 2.04", "-76.5778, -258.618, 39.2535, 0.57", "-76.3913, -259.946, 39.1294, 0.57", "-75.9689, -262.856, 39.1933, 0.57", "-75.6868, -264.959, 39.3665, 0.57", "-75.3439, -267.47, 39.7357, 0.57", "-74.8389, -271.449, 40.4449, 0.57", "-74.5014, -274.615, 41.1736, 0.57", "-73.7695, -283.397, 42.776, 0.57", "-73.5134, -288.441, 43.4435, 0.57", "-73.4441, -291.301, 43.7888, 0.57", "-73.4472, -293.741, 43.981, 0.57", "-73.4992, -295.194, 44.0299, 0.57", "-74.077, -301.306, 43.176, 0.57", "-74.4106, -303.903, 42.2546, 0.57", "-74.5787, -305.027, 41.794, 0.57", "-74.8786, -307.018, 40.9327, 0.45", "-74.9947, -307.963, 40.5668, 0.45", "-75.1101, -309.906, 40.0614, 0.45", "-75.1347, -311.993, 39.9152, 0.45", "-75.1249, -312.974, 39.8728, 0.45", "-75.1143, -314.087, 39.8496, 0.45", "-75.1141, -315.114, 39.8306, 0.45", "-75.1165, -317.574, 39.7556, 0.45", "-75.1344, -319.29, 39.7276, 0.45", "-75.1874, -321.361, 39.6959, 0.45", "-75.2328, -323.94, 39.633, 0.45", "-75.2936, -326.14, 39.5497, 0.45", "-75.3353, -326.977, 39.5169, 0.45", "-75.4697, -329.141, 39.3953, 0.45", "-75.7102, -332.842, 39.2061, 0.45", "-75.9119, -335.817, 39.0708, 0.45", "-76.1418, -338.916, 38.9645, 0.45", "-76.3576, -341.709, 38.915, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "143.119, -100.93, 32.746, 0.45", "144.427, -101.493, 30.4511, 0.45", "145.535, -102.129, 28.6798, 0.45", "146.85, -102.964, 26.8064, 0.45", "147.986, -103.742, 25.0959, 0.45", "152.85, -107.408, 16.9664, 0.45", "155.716, -109.724, 11.9039, 0.45", "157.357, -111.071, 8.55044, 0.45", "157.983, -111.649, 7.10419, 0.45", "159.918, -113.75, 2.34097, 0.45", "161.194, -115.308, -0.752438, 0.45", "161.373, -115.589, -1.15186, 0.45", "162.879, -118.032, -4.25093, 0.45", "164.001, -119.747, -6.43727, 0.45", "165.092, -121.514, -8.18579, 0.45", "166.298, -123.309, -9.55128, 0.34", "167.662, -125.21, -10.7827, 0.34", "168.532, -126.403, -11.4738, 0.34", "169.213, -127.323, -11.9182, 0.34", "171.522, -130.258, -13.2624, 0.34", "174.383, -134.025, -15.0419, 0.34", "175.185, -135.193, -15.5017, 0.34", "175.789, -136.045, -15.9639, 0.34", "176.979, -137.708, -17.0261, 0.34", "177.635, -138.618, -17.6635, 0.34", "178.959, -140.418, -19.0545, 0.34", "180.072, -142.089, -20.1869, 0.34", "183.11, -146.425, -23.5422, 0.34", "184.466, -148.24, -25.1215, 0.34", "184.819, -148.687, -25.5601, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "143.119, -100.93, 32.746, 0.45", "145.961, -101.916, 33.0734, 0.45", "148.256, -102.982, 33.0776, 0.45", "151.009, -104.458, 32.9944, 0.45", "154.694, -106.812, 32.2568, 0.45", "157.22, -108.72, 31.535, 0.45", "160.863, -111.756, 30.3811, 0.45", "164.432, -115.322, 29.0038, 0.34", "165.909, -117.003, 28.3956, 0.34", "171.063, -123.307, 25.9558, 0.34", "174.162, -127.171, 24.3837, 0.34", "176.365, -129.934, 23.3483, 0.34", "178.4, -132.564, 22.5031, 0.34", "181.114, -136.067, 21.7057, 0.34", "184.061, -139.969, 21.0669, 0.34", "186.304, -142.987, 20.9225, 0.34", "188.437, -145.862, 20.8286, 0.34", "190.317, -148.563, 20.8799, 0.34", "191.742, -150.717, 21.1423, 0.34", "193.103, -152.983, 21.719, 0.34", "194.538, -155.436, 22.4247, 0.34", "196.356, -158.426, 23.2522, 0.34", "199.822, -163.788, 24.6252, 0.45", "202.781, -167.999, 25.7357, 0.45", "205.587, -171.759, 26.8829, 0.45", "209.01, -176.166, 28.2934, 0.45", "210.734, -178.19, 28.8928, 0.45", "212.792, -180.459, 29.4715, 0.45", "213.977, -181.694, 29.6708, 0.45", "219.169, -187.004, 30.1553, 0.45", "222.689, -190.629, 30.4007, 0.45", "226.033, -194.278, 30.761, 0.45", "227.449, -195.851, 30.8849, 0.45", "232.187, -201.048, 31.3578, 0.45", "234.366, -203.516, 31.6439, 0.45", "237.257, -206.925, 32.2089, 0.45", "238.972, -209.016, 32.7741, 0.45", "240.151, -210.507, 33.2431, 0.45", "243.142, -214.299, 34.4723, 0.45", "246.155, -218.246, 35.8226, 0.45", "248.822, -221.788, 36.7003, 0.45", "251.716, -225.67, 37.279, 0.45", "253.924, -228.564, 37.31, 0.45", "256.269, -231.654, 36.9736, 0.45", "258.06, -234.011, 36.4553, 0.45", "261.637, -238.687, 35.1352, 0.45", "263.602, -241.316, 34.3613, 0.45", "266.936, -245.894, 33.1374, 0.45", "270.028, -250.12, 32.2032, 0.45", "271.983, -252.721, 31.6961, 0.45", "273.781, -255.036, 31.148, 0.45", "276.22, -258.192, 30.4331, 0.45", "277.663, -259.948, 29.9448, 0.45", "278.424, -260.871, 29.6541, 0.45", "280.309, -263.081, 28.842, 0.45", "285.281, -268.612, 26.5308, 0.45", "287.26, -270.726, 25.5393, 0.45", "290.041, -273.627, 24.0434, 0.45", "292.324, -275.994, 22.8183, 0.45", "293.185, -276.924, 22.3499, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "293.185, -276.924, 22.3499, 0.45", "292.462, -279.537, 21.5723, 0.45", "292.101, -281.217, 21.1564, 0.45", "291.891, -282.662, 20.6903, 0.45", "291.857, -283.387, 20.3196, 0.45", "291.938, -284.561, 19.6518, 0.45", "292.087, -285.571, 19.0971, 0.45", "292.52, -287.055, 18.3053, 0.45", "293.405, -289.525, 16.9976, 0.45", "294.622, -292.742, 15.3039, 0.45", "295.227, -294.525, 14.4762, 0.45", "295.982, -297.005, 13.4882, 0.45", "296.334, -298.515, 12.988, 0.45", "296.674, -300.585, 12.6062, 0.45", "296.875, -303.475, 12.7939, 0.45", "296.874, -306.701, 13.398, 0.45", "296.739, -308.614, 13.9337, 0.45", "296.472, -310.533, 14.8446, 0.45", "295.849, -314.161, 17.0359, 0.45", "294.94, -318.972, 20.4171, 0.45", "294.657, -320.447, 21.5056, 0.45", "294.28, -322.647, 23.1209, 0.45", "293.374, -327.633, 26.9863, 0.45", "293.11, -329.07, 28.1265, 0.45", "292.782, -330.765, 29.3361, 0.45", "292.279, -333.472, 30.9958, 0.45", "292.06, -334.782, 31.8257, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "293.185, -276.924, 22.3499, 0.45", "293.964, -277.751, 22.5922, 0.45", "295.436, -279.177, 22.9963, 0.45", "297.043, -280.511, 23.3997, 0.45", "298.465, -281.649, 23.7709, 0.45", "300.011, -282.887, 24.175, 0.45", "300.852, -283.559, 24.3208, 0.45", "302.767, -285.024, 24.4067, 0.45", "304.764, -286.487, 24.2641, 0.45", "307.0, -288.109, 23.8689, 0.45", "307.749, -288.654, 23.6992, 0.45", "310.779, -290.869, 22.952, 0.45", "313.064, -292.607, 22.3889, 0.45", "314.358, -293.597, 22.1122, 0.45", "317.144, -295.649, 21.6719, 0.45", "318.37, -296.539, 21.6195, 0.45", "320.629, -298.213, 21.8231, 0.45", "323.484, -300.357, 22.4937, 0.45", "326.628, -302.887, 23.6321, 0.45", "328.86, -304.82, 24.7482, 0.45", "331.536, -307.151, 26.439, 0.45", "332.891, -308.321, 27.403, 0.45", "333.794, -309.042, 28.1, 0.45", "336.211, -310.546, 29.8897, 0.45", "338.504, -311.667, 31.4363, 0.45", "341.574, -312.815, 33.2153, 0.45", "343.729, -313.377, 34.2222, 0.45", "347.26, -313.998, 35.6497, 0.45", "352.326, -314.457, 37.5292, 0.45", "353.698, -314.433, 37.9905, 0.45", "354.985, -314.295, 38.3926, 0.45", "357.075, -313.754, 39.1252, 0.45", "358.267, -313.122, 39.6343, 0.45", "359.622, -311.559, 40.4317, 0.45", "360.187, -310.392, 40.906, 0.45", "360.677, -309.227, 41.3431, 0.45", "361.688, -306.719, 42.2401, 0.45", "362.31, -305.263, 42.7533, 0.45", "363.559, -302.895, 43.606, 0.45", "364.711, -301.215, 44.4096, 0.45", "366.012, -299.734, 45.3952, 0.45", "367.026, -298.773, 46.1683, 0.45", "368.043, -298.068, 46.9702, 0.45", "369.35, -297.479, 48.0279, 0.45", "372.941, -297.135, 51.5845, 0.45", "373.392, -297.249, 52.18, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "292.06, -334.782, 31.8257, 0.45", "292.09, -337.644, 32.6223, 0.45", "292.273, -340.12, 33.2971, 0.45", "292.588, -342.717, 34.0437, 0.45", "292.897, -345.079, 34.7106, 0.45", "293.532, -348.984, 36.0927, 0.45", "293.875, -350.771, 36.9265, 0.45", "294.435, -353.175, 38.3703, 0.45", "295.012, -355.427, 39.8585, 0.45", "295.952, -358.618, 42.1266, 0.45", "297.431, -363.21, 45.4642, 0.45", "299.047, -367.793, 48.7185, 0.45", "300.45, -371.848, 51.4352, 0.45", "301.329, -374.32, 52.9371, 0.45", "302.748, -378.286, 54.976, 0.45", "303.697, -380.92, 56.0896, 0.45", "304.801, -384.366, 57.0909, 0.45", "305.854, -387.713, 57.8082, 0.45", "306.951, -391.217, 58.4576, 0.45", "307.899, -394.466, 59.1345, 0.45", "308.737, -397.944, 59.7527, 0.45", "309.724, -402.44, 60.5692, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "292.06, -334.782, 31.8257, 0.45", "293.889, -333.146, 32.9646, 0.45", "294.791, -332.34, 33.5257, 0.45", "295.807, -331.43, 34.1588, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "309.724, -402.44, 60.5692, 0.45", "309.051, -405.357, 64.5377, 0.45", "308.148, -409.067, 69.0184, 0.45", "307.6, -411.33, 71.5144, 0.45", "307.271, -412.782, 72.9904, 0.45", "307.198, -413.12, 73.3071, 0.45", "306.437, -416.759, 76.6096, 0.45", "306.252, -417.754, 77.2604, 0.45", "306.085, -418.752, 77.7883, 0.45", "305.88, -419.769, 78.3677, 0.45", "305.531, -421.182, 79.1112, 0.45", "304.891, -423.686, 80.2524, 0.45", "304.322, -425.954, 81.2062, 0.45", "303.669, -428.65, 82.5242, 0.45", "303.305, -430.114, 83.3941, 0.45", "302.856, -431.823, 84.4821, 0.45", "302.195, -434.228, 86.0735, 0.45", "301.743, -436.257, 88.1149, 0.45", "301.438, -437.91, 90.3511, 0.45", "301.256, -439.192, 92.3606, 0.45", "301.142, -440.289, 94.3615, 0.45", "301.001, -441.412, 96.5841, 0.45", "300.243, -446.074, 105.488, 0.45", "300.022, -447.334, 107.587, 0.45", "299.864, -448.265, 108.874, 0.45", "299.313, -451.456, 112.537, 0.45", "299.035, -453.223, 114.254, 0.45", "298.654, -455.663, 115.893, 0.45", "298.27, -457.684, 116.613, 0.45", "297.882, -460.07, 117.314, 0.45", "297.545, -462.374, 117.768, 0.45", "297.31, -464.235, 117.829, 0.45", "297.243, -465.173, 117.85, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "309.724, -402.44, 60.5692, 0.45", "310.083, -403.484, 61.2625, 0.45", "310.767, -405.642, 62.6157, 0.45", "311.401, -408.092, 64.1694, 0.45", "311.569, -408.989, 64.8462, 0.45", "311.759, -410.282, 65.9978, 0.45", "311.924, -411.556, 67.2831, 0.45", "312.005, -412.341, 68.2577, 0.45", "312.112, -413.344, 69.7266, 0.45", "312.417, -415.55, 73.6298, 0.45", "312.643, -416.943, 76.2642, 0.45", "312.822, -417.761, 77.8289, 0.45", "313.195, -419.022, 80.3113, 0.45", "313.322, -419.342, 80.9146, 0.45", "313.785, -420.068, 82.2729, 0.45", "314.412, -420.883, 83.5248, 0.45", "315.379, -422.089, 85.1456, 0.45", "315.772, -422.587, 85.717, 0.45", "316.92, -424.176, 87.2602, 0.45", "318.853, -426.772, 89.649, 0.45", "319.974, -428.204, 90.9743, 0.45", "321.602, -430.207, 92.8313, 0.45", "322.669, -431.55, 94.0877, 0.45", "324.827, -434.236, 96.6192, 0.45", "325.497, -435.061, 97.3883, 0.45", "326.969, -436.95, 99.0851, 0.45", "327.524, -437.638, 99.8001, 0.45", "328.95, -439.374, 101.692, 0.45", "330.276, -441.005, 103.613, 0.45", "330.909, -441.694, 104.661, 0.45", "331.679, -442.447, 106.071, 0.45", "333.09, -443.943, 108.823, 0.45", "333.727, -444.681, 110.161, 0.45", "334.383, -445.479, 111.565, 0.45", "336.996, -448.867, 117.182, 0.45", "338.808, -451.327, 120.934, 0.45", "340.309, -453.44, 123.919, 0.45", "340.747, -454.116, 124.745, 0.45", "341.211, -454.827, 125.649, 0.45", "341.807, -455.699, 126.8, 0.45", "342.488, -456.583, 128.071, 0.45", "343.211, -457.336, 129.46, 0.45", "343.512, -457.59, 130.047, 0.45", "346.327, -459.777, 135.637, 0.45", "347.637, -460.795, 138.295, 0.45", "349.814, -462.483, 142.45, 0.45", "350.172, -462.758, 143.139, 0.45", "350.537, -463.043, 143.793, 0.45", "351.179, -463.584, 144.864, 0.45", "352.659, -465.014, 147.097, 0.45", "354.076, -466.472, 149.246, 0.45", "357.601, -470.298, 154.7, 0.45", "359.087, -471.92, 157.072, 0.45", "359.809, -472.687, 158.215, 0.45", "360.67, -473.37, 159.71, 0.45", "361.938, -474.0, 161.999, 0.45", "363.547, -474.455, 165.079, 0.45", "364.195, -474.562, 166.356, 0.45", "364.728, -474.617, 167.55, 0.45", "369.112, -475.121, 178.042, 0.45", "370.272, -475.312, 180.899, 0.45", "371.514, -475.642, 184.0, 0.45", "372.221, -475.823, 185.86, 0.45", "373.831, -476.3, 190.223, 0.45", "374.565, -476.618, 192.326, 0.45", "375.243, -477.127, 194.317, 0.45", "376.468, -478.039, 197.987, 0.45", "381.24, -480.902, 211.254, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L5_NBC_bb8fc44e15_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -10.2197, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -10.2197, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.43136, -12.1068, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.32831, -13.7265, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 4.28084, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 6.22346, 4.39468, -3.56783, 1.24 ) }
    dend_12 { pt3dadd( 8.87052, 4.63425, -2.85463, 1.24 ) }
    dend_12 { pt3dadd( 11.3689, 4.86036, -2.1815, 1.24 ) }
    dend_12 { pt3dadd( 13.8609, 5.08591, -1.51009, 1.24 ) }
    dend_12 { pt3dadd( 18.9821, 5.54941, -0.130286, 1.24 ) }
    dend_12 { pt3dadd( 22.9275, 5.9065, 0.93274, 1.24 ) }
    dend_12 { pt3dadd( 24.5814, 5.99864, 1.43565, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 5.03684, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.93231, 4.94031, -1.47345, 0.68 ) }
    dend_11 { pt3dadd( -11.5052, 4.89953, -1.70094, 0.68 ) }
    dend_11 { pt3dadd( -15.6323, 5.26678, -2.16084, 0.68 ) }
    dend_11 { pt3dadd( -18.5679, 5.83278, -2.50643, 0.68 ) }
    dend_11 { pt3dadd( -20.3737, 6.36887, -2.71066, 0.68 ) }
    dend_11 { pt3dadd( -23.4454, 7.41629, -3.00927, 0.68 ) }
    dend_11 { pt3dadd( -26.5983, 8.71974, -3.35308, 0.68 ) }
    dend_11 { pt3dadd( -30.6427, 10.759, -3.8019, 0.68 ) }
    dend_11 { pt3dadd( -33.4428, 12.4788, -4.15923, 0.68 ) }
    dend_11 { pt3dadd( -37.4455, 15.2207, -4.87256, 0.68 ) }
    dend_11 { pt3dadd( -41.0336, 17.8964, -5.77466, 0.68 ) }
    dend_11 { pt3dadd( -43.4032, 19.8397, -6.57105, 0.68 ) }
    dend_11 { pt3dadd( -45.6102, 21.8595, -7.47555, 0.68 ) }
    dend_11 { pt3dadd( -47.1662, 23.3694, -8.17081, 0.68 ) }
    dend_11 { pt3dadd( -50.1155, 26.162, -9.48602, 0.68 ) }
    dend_11 { pt3dadd( -52.2815, 28.2265, -10.5557, 0.68 ) }
    dend_11 { pt3dadd( -53.2811, 29.1973, -11.0371, 0.68 ) }
    dend_11 { pt3dadd( -56.8424, 32.5637, -12.7856, 0.68 ) }
    dend_11 { pt3dadd( -59.6669, 35.198, -14.2397, 0.68 ) }
    dend_11 { pt3dadd( -63.6817, 38.7901, -16.1713, 0.68 ) }
    dend_11 { pt3dadd( -66.4176, 41.1717, -17.2903, 0.57 ) }
    dend_11 { pt3dadd( -68.7582, 43.0965, -18.1567, 0.57 ) }
    dend_11 { pt3dadd( -71.5662, 45.2983, -19.255, 0.57 ) }
    dend_11 { pt3dadd( -72.1988, 45.7322, -19.5822, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -5.12716, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 6.02683, -5.77916, -2.43015, 1.47 ) }
    dend_0 { pt3dadd( 8.52099, -7.4762, -2.09217, 1.47 ) }
    dend_0 { pt3dadd( 11.5444, -9.53331, -1.68248, 1.47 ) }
    dend_0 { pt3dadd( 13.4561, -10.8341, -1.42343, 2.6 ) }
    dend_0 { pt3dadd( 13.7488, -11.0332, -1.38376, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31666 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.32831, -13.7265, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.242063, -13.9156, -8.06909, 0.12 ) }
    dend_45 { pt3dadd( 1.24337, -14.2657, -7.97154, 0.12 ) }
    dend_45 { pt3dadd( 2.01818, -14.4514, -7.9205, 0.45 ) }
    dend_45 { pt3dadd( 2.72218, -14.6103, -7.78566, 0.45 ) }
    dend_45 { pt3dadd( 5.40364, -15.171, -7.28933, 0.45 ) }
    dend_45 { pt3dadd( 5.78302, -15.2541, -7.22087, 1.36 ) }
    dend_45 { pt3dadd( 7.11056, -15.5618, -6.97836, 1.02 ) }
    dend_45 { pt3dadd( 8.92723, -15.985, -6.61918, 0.45 ) }
    dend_45 { pt3dadd( 11.6858, -16.627, -5.7232, 0.45 ) }
    dend_45 { pt3dadd( 14.078, -17.1416, -4.50761, 0.45 ) }
    dend_45 { pt3dadd( 14.7716, -17.2592, -4.11008, 1.7 ) }
    dend_45 { pt3dadd( 16.0239, -17.4451, -2.86801, 0.68 ) }
    dend_45 { pt3dadd( 17.6728, -17.6933, -0.759115, 0.57 ) }
    dend_45 { pt3dadd( 20.1734, -18.0823, 2.83253, 0.57 ) }
    dend_45 { pt3dadd( 21.9506, -18.3552, 5.68598, 0.57 ) }
    dend_45 { pt3dadd( 23.3048, -18.5493, 8.21022, 0.57 ) }
    dend_45 { pt3dadd( 28.1139, -19.1329, 18.1998, 0.45 ) }
    dend_45 { pt3dadd( 28.4836, -19.1772, 19.1201, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.32831, -13.7265, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -2.21182, -17.1188, -8.15629, 2.26 ) }
    dend_24 { pt3dadd( -3.08184, -20.4594, -8.17232, 2.26 ) }
    dend_24 { pt3dadd( -4.35026, -25.3296, -8.19571, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 24.5814, 5.99864, 1.43565, 0.45 ) }
    dend_22 { pt3dadd( 28.2818, 5.71098, 0.654741, 0.45 ) }
    dend_22 { pt3dadd( 30.035, 5.68658, 0.86547, 0.45 ) }
    dend_22 { pt3dadd( 30.9456, 5.78334, 1.16413, 0.45 ) }
    dend_22 { pt3dadd( 32.1231, 6.07, 1.69377, 0.45 ) }
    dend_22 { pt3dadd( 34.4208, 6.98901, 3.01708, 0.79 ) }
    dend_22 { pt3dadd( 37.0586, 8.34319, 4.68872, 0.79 ) }
    dend_22 { pt3dadd( 39.5516, 9.94368, 6.47645, 0.79 ) }
    dend_22 { pt3dadd( 41.3665, 11.3397, 7.86267, 0.79 ) }
    dend_22 { pt3dadd( 42.7751, 12.6562, 8.99105, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 44.77, 15.1072, 10.7794, 0.79 ) }
    dend_22 { pt3dadd( 46.5392, 17.877, 12.4281, 0.79 ) }
    dend_22 { pt3dadd( 47.3356, 19.2769, 13.0784, 0.68 ) }
    dend_22 { pt3dadd( 48.0276, 20.5363, 13.5352, 0.68 ) }
    dend_22 { pt3dadd( 49.5066, 23.1385, 14.3449, 0.68 ) }
    dend_22 { pt3dadd( 52.613, 28.5591, 16.0531, 0.68 ) }
    dend_22 { pt3dadd( 53.6108, 30.3402, 16.5896, 0.68 ) }
    dend_22 { pt3dadd( 55.2877, 33.2554, 17.4589, 0.68 ) }
    dend_22 { pt3dadd( 56.2475, 34.7474, 17.918, 0.68 ) }
    dend_22 { pt3dadd( 57.1655, 35.9433, 18.3406, 0.57 ) }
    dend_22 { pt3dadd( 59.624, 38.4556, 19.3575, 0.57 ) }
    dend_22 { pt3dadd( 60.903, 39.3483, 20.0136, 0.57 ) }
    dend_22 { pt3dadd( 62.9171, 40.1765, 22.4909, 0.57 ) }
    dend_22 { pt3dadd( 63.5163, 40.1488, 24.3214, 0.57 ) }
    dend_22 { pt3dadd( 64.2125, 39.8629, 27.4807, 0.57 ) }
    dend_22 { pt3dadd( 64.4134, 39.7111, 28.6381, 0.57 ) }
    dend_22 { pt3dadd( 65.081, 38.7349, 33.8974, 0.57 ) }
    dend_22 { pt3dadd( 65.6716, 37.3753, 40.4813, 0.57 ) }
    dend_22 { pt3dadd( 65.9128, 36.209, 45.8281, 0.57 ) }
    dend_22 { pt3dadd( 65.958, 35.6094, 48.815, 0.57 ) }
    dend_22 { pt3dadd( 65.9602, 35.4858, 49.6516, 0.57 ) }
    dend_22 { pt3dadd( 65.9635, 35.2942, 51.1348, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 24.5814, 5.99864, 1.43565, 0.79 ) }
    dend_13 { pt3dadd( 25.7111, 8.03452, -0.297122, 0.79 ) }
    dend_13 { pt3dadd( 26.4194, 9.58422, -1.49958, 0.79 ) }
    dend_13 { pt3dadd( 26.7854, 10.4352, -2.10979, 0.79 ) }
    dend_13 { pt3dadd( 27.8763, 12.4298, -3.45151, 0.79 ) }
    dend_13 { pt3dadd( 29.0638, 14.219, -4.5852, 0.79 ) }
    dend_13 { pt3dadd( 30.1093, 15.6781, -5.4539, 0.79 ) }
    dend_13 { pt3dadd( 31.7239, 17.767, -6.55357, 0.79 ) }
    dend_13 { pt3dadd( 32.9362, 19.256, -7.33761, 0.79 ) }
    dend_13 { pt3dadd( 35.3571, 22.0334, -8.98244, 0.79 ) }
    dend_13 { pt3dadd( 36.9561, 23.5944, -10.2357, 0.79 ) }
    dend_13 { pt3dadd( 38.7163, 24.7258, -11.8946, 1.02 ) }
    dend_13 { pt3dadd( 39.8532, 25.2898, -13.023, 1.02 ) }
    dend_13 { pt3dadd( 40.9374, 25.6507, -14.2298, 1.02 ) }
    dend_13 { pt3dadd( 42.3812, 25.9136, -16.2389, 1.02 ) }
    dend_13 { pt3dadd( 44.465, 25.8602, -20.2451, 1.02 ) }
    dend_13 { pt3dadd( 46.6821, 25.1236, -25.2134, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.7488, -11.0332, -1.38376, 0.68 ) }
    dend_8 { pt3dadd( 15.006, -13.2291, -1.77934, 0.68 ) }
    dend_8 { pt3dadd( 15.456, -13.9142, -1.82245, 0.68 ) }
    dend_8 { pt3dadd( 17.9491, -17.5249, -1.86616, 0.68 ) }
    dend_8 { pt3dadd( 21.8606, -23.1125, -1.80734, 0.68 ) }
    dend_8 { pt3dadd( 24.3884, -26.7448, -1.91638, 0.68 ) }
    dend_8 { pt3dadd( 25.9548, -28.9904, -2.05263, 0.68 ) }
    dend_8 { pt3dadd( 30.7543, -35.5119, -1.89296, 0.68 ) }
    dend_8 { pt3dadd( 32.9688, -38.392, -1.61268, 0.68 ) }
    dend_8 { pt3dadd( 33.6579, -39.2373, -1.47065, 0.68 ) }
    dend_8 { pt3dadd( 37.4001, -43.6107, -0.463471, 0.68 ) }
    dend_8 { pt3dadd( 40.0709, -46.3969, 0.263815, 0.68 ) }
    dend_8 { pt3dadd( 46.9892, -53.327, 2.08628, 0.68 ) }
    dend_8 { pt3dadd( 50.2683, -56.5309, 2.88631, 0.68 ) }
    dend_8 { pt3dadd( 52.2272, -58.3505, 3.36005, 0.68 ) }
    dend_8 { pt3dadd( 54.9381, -60.7883, 4.00344, 0.68 ) }
    dend_8 { pt3dadd( 61.2208, -66.4772, 5.38019, 0.68 ) }
    dend_8 { pt3dadd( 63.6968, -68.8799, 5.66143, 0.68 ) }
    dend_8 { pt3dadd( 64.8145, -70.0706, 5.65373, 0.68 ) }
    dend_8 { pt3dadd( 67.7303, -73.3322, 5.5422, 0.68 ) }
    dend_8 { pt3dadd( 69.5042, -75.4461, 5.43014, 0.68 ) }
    dend_8 { pt3dadd( 73.0443, -80.1037, 5.02338, 0.68 ) }
    dend_8 { pt3dadd( 75.2751, -83.6845, 4.70096, 0.68 ) }
    dend_8 { pt3dadd( 76.8023, -86.2831, 4.42994, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 13.7488, -11.0332, -1.38376, 1.24 ) }
    dend_1 { pt3dadd( 18.0229, -12.1882, -1.51859, 1.24 ) }
    dend_1 { pt3dadd( 20.2091, -12.7789, -1.58756, 1.24 ) }
    dend_1 { pt3dadd( 23.7119, -13.7254, -1.69806, 1.24 ) }
    dend_1 { pt3dadd( 27.2569, -14.6834, -1.80989, 1.24 ) }
    dend_1 { pt3dadd( 36.6559, -17.2231, -2.1064, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 28.4836, -19.1772, 19.1201, 0.45 ) }
    dend_47 { pt3dadd( 29.1531, -21.2025, 23.0405, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 28.4836, -19.1772, 19.1201, 0.45 ) }
    dend_46 { pt3dadd( 34.8067, -18.8556, 17.2003, 0.45 ) }
    dend_46 { pt3dadd( 37.8292, -18.7354, 16.6598, 0.45 ) }
    dend_46 { pt3dadd( 41.9988, -18.6109, 16.173, 0.45 ) }
    dend_46 { pt3dadd( 46.5036, -18.8119, 15.9458, 0.45 ) }
    dend_46 { pt3dadd( 48.8011, -19.2606, 16.0538, 0.45 ) }
    dend_46 { pt3dadd( 54.8898, -21.1324, 16.7041, 0.45 ) }
    dend_46 { pt3dadd( 55.3836, -21.3388, 16.8365, 0.45 ) }
    dend_46 { pt3dadd( 55.5926, -21.4579, 16.9148, 2.6 ) }
    dend_46 { pt3dadd( 59.4797, -24.3153, 18.7093, 0.57 ) }
    dend_46 { pt3dadd( 64.0817, -28.4328, 21.1666, 0.57 ) }
    dend_46 { pt3dadd( 65.4026, -29.6895, 21.8395, 0.57 ) }
    dend_46 { pt3dadd( 65.5184, -29.798, 21.8884, 2.38 ) }
    dend_46 { pt3dadd( 69.4982, -33.0607, 23.3149, 0.34 ) }
    dend_46 { pt3dadd( 71.0709, -34.092, 23.7369, 0.34 ) }
    dend_46 { pt3dadd( 74.7448, -35.787, 24.3123, 0.45 ) }
    dend_46 { pt3dadd( 78.4156, -36.6203, 24.7424, 0.45 ) }
    dend_46 { pt3dadd( 82.4381, -36.9382, 25.4203, 0.45 ) }
    dend_46 { pt3dadd( 86.2491, -36.7944, 26.3528, 0.45 ) }
    dend_46 { pt3dadd( 90.5015, -36.182, 27.7594, 0.45 ) }
    dend_46 { pt3dadd( 94.3529, -35.4231, 29.2394, 0.45 ) }
    dend_46 { pt3dadd( 102.874, -33.4434, 32.8215, 0.45 ) }
    dend_46 { pt3dadd( 109.402, -31.8773, 35.9945, 0.45 ) }
    dend_46 { pt3dadd( 115.745, -30.4629, 39.4275, 0.45 ) }
    dend_46 { pt3dadd( 121.752, -29.3856, 42.8642, 0.45 ) }
    dend_46 { pt3dadd( 123.515, -29.1768, 43.9091, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 126.584, -29.0179, 45.6422, 0.45 ) }
    dend_46 { pt3dadd( 132.671, -29.1098, 48.4824, 0.45 ) }
    dend_46 { pt3dadd( 135.255, -29.2417, 49.4847, 0.45 ) }
    dend_46 { pt3dadd( 139.112, -29.453, 50.7186, 0.45 ) }
    dend_46 { pt3dadd( 147.149, -29.6936, 53.1976, 0.45 ) }
    dend_46 { pt3dadd( 152.909, -29.7484, 54.9277, 0.45 ) }
    dend_46 { pt3dadd( 158.859, -29.9072, 56.7404, 0.45 ) }
    dend_46 { pt3dadd( 162.508, -30.1884, 57.8751, 0.45 ) }
    dend_46 { pt3dadd( 166.005, -30.6277, 58.9856, 0.45 ) }
    dend_46 { pt3dadd( 172.639, -31.8598, 61.1048, 0.45 ) }
    dend_46 { pt3dadd( 177.947, -33.2463, 62.6889, 0.45 ) }
    dend_46 { pt3dadd( 184.635, -35.3313, 64.7451, 0.45 ) }
    dend_46 { pt3dadd( 191.269, -37.7915, 66.8873, 0.45 ) }
    dend_46 { pt3dadd( 195.16, -39.4013, 68.1662, 0.45 ) }
    dend_46 { pt3dadd( 197.095, -40.3506, 68.8367, 0.45 ) }
    dend_46 { pt3dadd( 198.109, -40.9559, 69.1448, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -4.35026, -25.3296, -8.19571, 0.12 ) }
    dend_44 { pt3dadd( -5.39203, -24.063, -8.40856, 0.12 ) }
    dend_44 { pt3dadd( -5.63448, -23.8629, -8.39162, 0.12 ) }
    dend_44 { pt3dadd( -6.38113, -23.3569, -8.28831, 0.45 ) }
    dend_44 { pt3dadd( -7.98244, -22.9497, -7.59525, 0.79 ) }
    dend_44 { pt3dadd( -10.3484, -22.6839, -6.24364, 0.45 ) }
    dend_44 { pt3dadd( -11.8328, -22.6577, -5.31151, 0.45 ) }
    dend_44 { pt3dadd( -14.8425, -22.8893, -3.21094, 0.45 ) }
    dend_44 { pt3dadd( -15.3231, -22.9944, -2.85829, 0.45 ) }
    dend_44 { pt3dadd( -20.2571, -24.5528, 1.15488, 0.45 ) }
    dend_44 { pt3dadd( -22.5671, -25.4702, 3.14693, 0.45 ) }
    dend_44 { pt3dadd( -24.3081, -26.2452, 4.67777, 0.45 ) }
    dend_44 { pt3dadd( -24.7441, -26.4322, 5.06939, 0.45 ) }
    dend_44 { pt3dadd( -27.1623, -27.4165, 7.18428, 0.45 ) }
    dend_44 { pt3dadd( -32.0033, -29.2579, 11.1995, 0.45 ) }
    dend_44 { pt3dadd( -33.3696, -29.7389, 12.1678, 0.45 ) }
    dend_44 { pt3dadd( -34.3692, -30.0749, 12.7996, 0.45 ) }
    dend_44 { pt3dadd( -36.3695, -30.6954, 13.994, 0.45 ) }
    dend_44 { pt3dadd( -37.0807, -30.9119, 14.4446, 0.45 ) }
    dend_44 { pt3dadd( -41.422, -32.2246, 17.222, 0.45 ) }
    dend_44 { pt3dadd( -43.3154, -33.0275, 18.4864, 0.45 ) }
    dend_44 { pt3dadd( -45.4629, -34.0711, 20.0557, 0.45 ) }
    dend_44 { pt3dadd( -46.1683, -34.4376, 20.6563, 0.45 ) }
    dend_44 { pt3dadd( -49.3649, -36.2873, 23.4985, 0.45 ) }
    dend_44 { pt3dadd( -49.7644, -36.5355, 23.8776, 0.45 ) }
    dend_44 { pt3dadd( -52.1103, -37.9896, 26.3422, 0.45 ) }
    dend_44 { pt3dadd( -52.6493, -38.3397, 26.933, 0.45 ) }
    dend_44 { pt3dadd( -55.1676, -40.0675, 29.5913, 2.38 ) }
    dend_44 { pt3dadd( -57.2816, -41.4749, 31.7479, 0.68 ) }
    dend_44 { pt3dadd( -58.1314, -42.0589, 32.614, 0.68 ) }
    dend_44 { pt3dadd( -61.9804, -44.4477, 36.674, 0.68 ) }
    dend_44 { pt3dadd( -63.6617, -45.3988, 38.485, 0.45 ) }
    dend_44 { pt3dadd( -64.4615, -45.8414, 39.3084, 0.45 ) }
    dend_44 { pt3dadd( -66.5911, -46.8046, 41.3878, 0.45 ) }
    dend_44 { pt3dadd( -67.7619, -47.238, 42.52, 0.45 ) }
    dend_44 { pt3dadd( -71.9145, -48.5692, 46.1768, 0.45 ) }
    dend_44 { pt3dadd( -74.3622, -49.1994, 48.2155, 0.45 ) }
    dend_44 { pt3dadd( -76.8016, -49.6843, 50.1963, 0.45 ) }
    dend_44 { pt3dadd( -83.7944, -50.9657, 55.6518, 0.91 ) }
    dend_44 { pt3dadd( -83.9592, -50.9993, 55.7775, 3.05 ) }
    dend_44 { pt3dadd( -85.9613, -51.457, 57.2875, 0.45 ) }
    dend_44 { pt3dadd( -90.6809, -52.8887, 61.0071, 0.45 ) }
    dend_44 { pt3dadd( -92.1923, -53.4104, 62.2876, 0.45 ) }
    dend_44 { pt3dadd( -94.3019, -54.2119, 64.1951, 2.15 ) }
    dend_44 { pt3dadd( -101.094, -57.5232, 70.2778, 0.57 ) }
    dend_44 { pt3dadd( -101.942, -57.9391, 71.0646, 0.57 ) }
    dend_44 { pt3dadd( -106.367, -60.1469, 75.3005, 0.57 ) }
    dend_44 { pt3dadd( -109.192, -61.6472, 77.9146, 0.57 ) }
    dend_44 { pt3dadd( -109.547, -61.8247, 78.2385, 1.7 ) }
    dend_44 { pt3dadd( -111.049, -62.537, 79.5704, 0.45 ) }
    dend_44 { pt3dadd( -118.063, -65.9604, 85.4258, 0.45 ) }
    dend_44 { pt3dadd( -121.088, -67.3866, 87.8673, 0.45 ) }
    dend_44 { pt3dadd( -123.205, -68.3911, 89.4772, 0.45 ) }
    dend_44 { pt3dadd( -127.277, -70.371, 92.4932, 0.45 ) }
    dend_44 { pt3dadd( -129.669, -71.5437, 94.2771, 0.45 ) }
    dend_44 { pt3dadd( -131.444, -72.4016, 95.5862, 0.45 ) }
    dend_44 { pt3dadd( -135.29, -74.6286, 98.0546, 0.45 ) }
    dend_44 { pt3dadd( -135.884, -74.9674, 98.4464, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -4.35026, -25.3296, -8.19571, 1.7 ) }
    dend_25 { pt3dadd( -4.96722, -27.1935, -7.05313, 1.7 ) }
    dend_25 { pt3dadd( -5.15375, -27.8152, -6.74299, 1.58 ) }
    dend_25 { pt3dadd( -5.65523, -29.739, -5.97102, 1.36 ) }
    dend_25 { pt3dadd( -6.06895, -31.3262, -5.33412, 1.24 ) }
    dend_25 { pt3dadd( -6.66492, -33.6125, -4.41669, 1.24 ) }
    dend_25 { pt3dadd( -7.01925, -34.9718, -3.87123, 2.83 ) }
    dend_25 { pt3dadd( -7.44411, -36.9046, -3.25664, 3.62 ) }
    dend_25 { pt3dadd( -7.73604, -38.3823, -2.85446, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 46.6821, 25.1236, -25.2134, 0.57 ) }
    dend_17 { pt3dadd( 46.4848, 22.4762, -25.525, 0.57 ) }
    dend_17 { pt3dadd( 46.2253, 18.994, -25.9348, 0.57 ) }
    dend_17 { pt3dadd( 46.0775, 17.0101, -26.1682, 0.57 ) }
    dend_17 { pt3dadd( 45.8738, 14.2779, -26.4897, 0.57 ) }
    dend_17 { pt3dadd( 45.6085, 10.7168, -26.9088, 0.57 ) }
    dend_17 { pt3dadd( 45.1546, 4.6258, -27.6256, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 46.6821, 25.1236, -25.2134, 1.02 ) }
    dend_14 { pt3dadd( 47.3211, 25.7669, -26.5934, 1.02 ) }
    dend_14 { pt3dadd( 48.754, 27.2094, -29.6878, 1.02 ) }
    dend_14 { pt3dadd( 49.5639, 28.0246, -31.4368, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 76.8023, -86.2831, 4.42994, 0.45 ) }
    dend_10 { pt3dadd( 79.8528, -91.081, 3.55432, 0.45 ) }
    dend_10 { pt3dadd( 80.4805, -92.0752, 3.39926, 0.45 ) }
    dend_10 { pt3dadd( 81.4168, -93.5987, 3.23773, 0.45 ) }
    dend_10 { pt3dadd( 83.6975, -97.2744, 2.94546, 0.45 ) }
    dend_10 { pt3dadd( 84.6077, -98.6968, 2.76462, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 85.4567, -99.9467, 2.57675, 0.45 ) }
    dend_10 { pt3dadd( 87.0646, -102.101, 2.25871, 0.45 ) }
    dend_10 { pt3dadd( 90.0049, -105.761, 1.65148, 0.45 ) }
    dend_10 { pt3dadd( 91.6706, -107.522, 1.35123, 0.45 ) }
    dend_10 { pt3dadd( 94.9053, -110.332, 0.687268, 0.45 ) }
    dend_10 { pt3dadd( 97.3181, -111.998, 0.294744, 0.45 ) }
    dend_10 { pt3dadd( 98.4079, -112.639, 0.291986, 0.45 ) }
    dend_10 { pt3dadd( 100.392, -113.728, 0.486073, 0.45 ) }
    dend_10 { pt3dadd( 104.507, -116.014, 1.15541, 0.45 ) }
    dend_10 { pt3dadd( 107.238, -117.674, 1.54959, 0.45 ) }
    dend_10 { pt3dadd( 111.361, -120.362, 2.12465, 0.45 ) }
    dend_10 { pt3dadd( 120.08, -126.59, 3.087, 0.45 ) }
    dend_10 { pt3dadd( 123.951, -129.636, 3.41436, 0.45 ) }
    dend_10 { pt3dadd( 126.754, -132.152, 3.54877, 0.45 ) }
    dend_10 { pt3dadd( 132.02, -137.772, 3.48448, 0.45 ) }
    dend_10 { pt3dadd( 133.021, -139.033, 3.40592, 0.45 ) }
    dend_10 { pt3dadd( 134.926, -142.07, 2.88223, 0.45 ) }
    dend_10 { pt3dadd( 135.881, -144.143, 2.34811, 0.45 ) }
    dend_10 { pt3dadd( 137.319, -148.14, 1.43268, 0.45 ) }
    dend_10 { pt3dadd( 138.244, -151.339, 0.862034, 0.45 ) }
    dend_10 { pt3dadd( 139.356, -155.66, 0.270398, 0.45 ) }
    dend_10 { pt3dadd( 140.369, -160.007, -0.32728, 0.45 ) }
    dend_10 { pt3dadd( 141.321, -164.589, -0.978036, 0.45 ) }
    dend_10 { pt3dadd( 141.716, -166.562, -1.25583, 0.45 ) }
    dend_10 { pt3dadd( 142.353, -169.729, -1.65991, 0.45 ) }
    dend_10 { pt3dadd( 143.67, -175.627, -2.30189, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 76.8023, -86.2831, 4.42994, 0.57 ) }
    dend_9 { pt3dadd( 76.6876, -86.7457, 4.5282, 0.57 ) }
    dend_9 { pt3dadd( 75.9477, -89.154, 5.70594, 0.57 ) }
    dend_9 { pt3dadd( 74.9352, -92.1403, 7.32352, 0.57 ) }
    dend_9 { pt3dadd( 74.2352, -93.8386, 8.43429, 0.57 ) }
    dend_9 { pt3dadd( 74.0983, -94.1379, 8.63396, 0.57 ) }
    dend_9 { pt3dadd( 73.3092, -95.6535, 9.69468, 0.57 ) }
    dend_9 { pt3dadd( 72.0981, -97.6059, 11.1952, 0.57 ) }
    dend_9 { pt3dadd( 71.4752, -98.4332, 11.8985, 0.57 ) }
    dend_9 { pt3dadd( 70.1977, -99.9587, 13.495, 0.45 ) }
    dend_9 { pt3dadd( 69.5488, -100.706, 14.2533, 0.45 ) }
    dend_9 { pt3dadd( 68.661, -101.727, 15.2466, 0.45 ) }
    dend_9 { pt3dadd( 67.8031, -102.762, 16.2075, 0.45 ) }
    dend_9 { pt3dadd( 66.8191, -103.935, 17.2795, 0.45 ) }
    dend_9 { pt3dadd( 64.8538, -106.478, 19.6679, 0.45 ) }
    dend_9 { pt3dadd( 64.4459, -107.084, 20.2192, 0.45 ) }
    dend_9 { pt3dadd( 63.8878, -108.004, 21.0583, 0.45 ) }
    dend_9 { pt3dadd( 62.6084, -110.367, 23.1114, 0.45 ) }
    dend_9 { pt3dadd( 62.1718, -111.244, 23.81, 0.45 ) }
    dend_9 { pt3dadd( 60.6309, -114.491, 25.9881, 0.45 ) }
    dend_9 { pt3dadd( 60.1631, -115.558, 26.6143, 0.45 ) }
    dend_9 { pt3dadd( 60.0681, -115.8, 26.7476, 0.45 ) }
    dend_9 { pt3dadd( 59.8598, -116.435, 27.1084, 0.45 ) }
    dend_9 { pt3dadd( 59.3309, -118.18, 28.113, 0.45 ) }
    dend_9 { pt3dadd( 58.9303, -119.619, 28.9734, 0.45 ) }
    dend_9 { pt3dadd( 58.1608, -122.531, 30.8528, 0.45 ) }
    dend_9 { pt3dadd( 57.6266, -124.56, 32.398, 0.45 ) }
    dend_9 { pt3dadd( 56.632, -128.273, 35.4356, 0.45 ) }
    dend_9 { pt3dadd( 56.0461, -130.336, 37.2003, 0.45 ) }
    dend_9 { pt3dadd( 55.7751, -131.204, 38.0023, 0.45 ) }
    dend_9 { pt3dadd( 54.8027, -134.095, 40.6613, 0.45 ) }
    dend_9 { pt3dadd( 53.7863, -136.675, 42.8796, 0.45 ) }
    dend_9 { pt3dadd( 53.1757, -138.031, 44.0199, 0.45 ) }
    dend_9 { pt3dadd( 52.5587, -139.298, 44.9932, 0.45 ) }
    dend_9 { pt3dadd( 51.4704, -141.655, 46.5868, 0.45 ) }
    dend_9 { pt3dadd( 50.5626, -143.67, 47.8126, 0.45 ) }
    dend_9 { pt3dadd( 49.7591, -145.367, 48.7509, 0.45 ) }
    dend_9 { pt3dadd( 49.0475, -146.733, 49.6482, 0.45 ) }
    dend_9 { pt3dadd( 47.2389, -149.674, 52.0392, 0.45 ) }
    dend_9 { pt3dadd( 45.9149, -151.36, 53.6403, 0.45 ) }
    dend_9 { pt3dadd( 44.6212, -152.578, 54.9543, 0.45 ) }
    dend_9 { pt3dadd( 43.051, -153.597, 56.2198, 0.45 ) }
    dend_9 { pt3dadd( 39.0306, -155.419, 58.8192, 0.45 ) }
    dend_9 { pt3dadd( 37.0972, -156.031, 59.886, 0.45 ) }
    dend_9 { pt3dadd( 34.6176, -156.587, 60.9561, 0.45 ) }
    dend_9 { pt3dadd( 32.9539, -156.917, 61.6048, 0.45 ) }
    dend_9 { pt3dadd( 29.7753, -157.616, 62.7332, 0.45 ) }
    dend_9 { pt3dadd( 27.3048, -158.281, 63.5185, 0.45 ) }
    dend_9 { pt3dadd( 23.4328, -159.551, 65.0327, 0.45 ) }
    dend_9 { pt3dadd( 20.6485, -160.622, 66.4501, 0.45 ) }
    dend_9 { pt3dadd( 18.8194, -161.407, 67.4538, 0.45 ) }
    dend_9 { pt3dadd( 14.6357, -163.353, 69.8272, 0.45 ) }
    dend_9 { pt3dadd( 13.1757, -164.076, 70.6872, 0.45 ) }
    dend_9 { pt3dadd( 6.91969, -167.276, 74.2874, 0.45 ) }
    dend_9 { pt3dadd( 5.21544, -168.175, 75.2558, 0.45 ) }
    dend_9 { pt3dadd( 0.699448, -170.631, 78.0492, 0.45 ) }
    dend_9 { pt3dadd( -0.581533, -171.342, 78.8332, 0.45 ) }
    dend_9 { pt3dadd( -2.78387, -172.651, 80.1531, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 36.6559, -17.2231, -2.1064, 0.45 ) }
    dend_5 { pt3dadd( 38.7521, -20.5035, -1.05633, 0.45 ) }
    dend_5 { pt3dadd( 39.081, -21.0246, -0.913689, 1.02 ) }
    dend_5 { pt3dadd( 42.5077, -26.3325, 0.35339, 0.79 ) }
    dend_5 { pt3dadd( 44.6025, -29.6187, 0.977012, 0.79 ) }
    dend_5 { pt3dadd( 45.797, -31.4688, 1.24431, 0.68 ) }
    dend_5 { pt3dadd( 46.0532, -31.8531, 1.28581, 0.68 ) }
    dend_5 { pt3dadd( 47.5896, -34.0909, 1.35978, 0.68 ) }
    dend_5 { pt3dadd( 48.6277, -35.5923, 1.33052, 0.68 ) }
    dend_5 { pt3dadd( 50.7776, -38.5981, 1.08846, 0.68 ) }
    dend_5 { pt3dadd( 52.9376, -41.693, 0.803118, 0.68 ) }
    dend_5 { pt3dadd( 54.9997, -44.6958, 0.495429, 0.68 ) }
    dend_5 { pt3dadd( 56.9526, -47.5104, 0.185949, 0.68 ) }
    dend_5 { pt3dadd( 59.3947, -51.0436, -0.225571, 0.68 ) }
    dend_5 { pt3dadd( 62.4174, -55.4237, -0.946529, 0.68 ) }
    dend_5 { pt3dadd( 64.2862, -58.1464, -1.58791, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 65.3752, -59.741, -2.06224, 0.68 ) }
    dend_5 { pt3dadd( 66.749, -61.7123, -2.72295, 0.68 ) }
    dend_5 { pt3dadd( 69.055, -64.8603, -3.8787, 0.68 ) }
    dend_5 { pt3dadd( 72.0717, -68.8063, -5.43293, 0.68 ) }
    dend_5 { pt3dadd( 75.5725, -73.1346, -7.19078, 0.68 ) }
    dend_5 { pt3dadd( 77.4565, -75.3054, -8.04574, 0.68 ) }
    dend_5 { pt3dadd( 79.3363, -77.3865, -8.80336, 0.68 ) }
    dend_5 { pt3dadd( 80.56, -78.699, -9.22524, 0.68 ) }
    dend_5 { pt3dadd( 81.6856, -79.8241, -9.52205, 0.68 ) }
    dend_5 { pt3dadd( 83.2736, -81.4673, -9.71365, 0.68 ) }
    dend_5 { pt3dadd( 84.5404, -82.8696, -9.84662, 0.68 ) }
    dend_5 { pt3dadd( 86.1872, -85.0991, -10.1291, 0.68 ) }
    dend_5 { pt3dadd( 86.6288, -85.8685, -10.277, 0.68 ) }
    dend_5 { pt3dadd( 87.6631, -88.0773, -10.7467, 0.68 ) }
    dend_5 { pt3dadd( 88.8051, -90.9769, -11.4924, 0.68 ) }
    dend_5 { pt3dadd( 89.6287, -93.4835, -12.2075, 0.68 ) }
    dend_5 { pt3dadd( 90.3619, -96.0171, -12.9632, 0.68 ) }
    dend_5 { pt3dadd( 91.4258, -100.11, -14.1884, 0.68 ) }
    dend_5 { pt3dadd( 91.918, -102.054, -14.7397, 0.68 ) }
    dend_5 { pt3dadd( 92.6167, -104.684, -15.408, 0.68 ) }
    dend_5 { pt3dadd( 93.24, -106.692, -15.8697, 0.68 ) }
    dend_5 { pt3dadd( 94.1228, -109.119, -16.281, 0.68 ) }
    dend_5 { pt3dadd( 94.8286, -110.896, -16.5523, 0.68 ) }
    dend_5 { pt3dadd( 95.1771, -111.703, -16.65, 0.68 ) }
    dend_5 { pt3dadd( 96.2595, -114.039, -16.8993, 0.45 ) }
    dend_5 { pt3dadd( 97.8101, -117.379, -17.193, 0.45 ) }
    dend_5 { pt3dadd( 99.6009, -121.247, -17.5534, 0.45 ) }
    dend_5 { pt3dadd( 100.987, -124.353, -17.9603, 0.45 ) }
    dend_5 { pt3dadd( 101.938, -126.561, -18.3088, 0.45 ) }
    dend_5 { pt3dadd( 103.037, -129.157, -18.7646, 0.45 ) }
    dend_5 { pt3dadd( 104.883, -133.508, -19.6561, 0.45 ) }
    dend_5 { pt3dadd( 105.844, -135.823, -20.1626, 0.45 ) }
    dend_5 { pt3dadd( 107.458, -139.826, -21.0943, 0.45 ) }
    dend_5 { pt3dadd( 108.947, -143.451, -21.9749, 0.45 ) }
    dend_5 { pt3dadd( 109.85, -145.665, -22.5622, 0.45 ) }
    dend_5 { pt3dadd( 110.593, -147.442, -23.0905, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 36.6559, -17.2231, -2.1064, 0.68 ) }
    dend_2 { pt3dadd( 38.8698, -15.6166, -0.520707, 0.68 ) }
    dend_2 { pt3dadd( 41.5143, -13.5309, 1.10893, 0.68 ) }
    dend_2 { pt3dadd( 43.4082, -12.0356, 1.90248, 0.68 ) }
    dend_2 { pt3dadd( 44.6809, -11.0473, 2.23067, 0.68 ) }
    dend_2 { pt3dadd( 45.5059, -10.4056, 2.27901, 0.68 ) }
    dend_2 { pt3dadd( 47.4376, -8.94997, 1.93871, 0.68 ) }
    dend_2 { pt3dadd( 48.6871, -8.03489, 1.37538, 0.68 ) }
    dend_2 { pt3dadd( 50.8451, -6.54056, 0.0303058, 0.57 ) }
    dend_2 { pt3dadd( 52.5431, -5.42106, -1.18639, 0.57 ) }
    dend_2 { pt3dadd( 54.9985, -3.73098, -3.05568, 0.57 ) }
    dend_2 { pt3dadd( 57.8189, -1.73467, -5.25191, 0.57 ) }
    dend_2 { pt3dadd( 59.3873, -0.57926, -6.4941, 0.57 ) }
    dend_2 { pt3dadd( 60.1162, 0.0140371, -7.10976, 0.57 ) }
    dend_2 { pt3dadd( 62.3736, 2.06917, -8.99447, 0.57 ) }
    dend_2 { pt3dadd( 65.3484, 4.94596, -11.4074, 0.57 ) }
    dend_2 { pt3dadd( 67.6705, 7.30568, -13.1581, 0.57 ) }
    dend_2 { pt3dadd( 68.5224, 8.25146, -13.8098, 0.57 ) }
    dend_2 { pt3dadd( 70.4223, 10.519, -15.3838, 0.57 ) }
    dend_2 { pt3dadd( 72.1775, 12.6773, -16.8872, 0.57 ) }
    dend_2 { pt3dadd( 72.9353, 13.6642, -17.5468, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 29.1531, -21.2025, 23.0405, 0.45 ) }
    dend_69 { pt3dadd( 25.6851, -28.6062, 26.6353, 0.45 ) }
    dend_69 { pt3dadd( 24.5741, -30.9966, 27.6767, 0.45 ) }
    dend_69 { pt3dadd( 23.1493, -34.035, 29.2973, 0.45 ) }
    dend_69 { pt3dadd( 21.7061, -37.0555, 31.2108, 0.45 ) }
    dend_69 { pt3dadd( 20.6152, -39.2747, 32.759, 0.45 ) }
    dend_69 { pt3dadd( 18.5783, -43.4928, 35.8208, 0.45 ) }
    dend_69 { pt3dadd( 17.8626, -45.1011, 37.0213, 0.45 ) }
    dend_69 { pt3dadd( 15.8116, -49.916, 40.8991, 0.45 ) }
    dend_69 { pt3dadd( 14.8027, -52.299, 43.1875, 0.45 ) }
    dend_69 { pt3dadd( 13.9988, -54.0925, 45.2649, 0.45 ) }
    dend_69 { pt3dadd( 13.5287, -54.9599, 46.3993, 0.45 ) }
    dend_69 { pt3dadd( 12.8759, -55.9446, 47.7932, 0.45 ) }
    dend_69 { pt3dadd( 11.9274, -57.1429, 49.2849, 0.45 ) }
    dend_69 { pt3dadd( 9.23911, -60.6684, 52.6075, 0.45 ) }
    dend_69 { pt3dadd( 8.66029, -61.4788, 53.2268, 0.45 ) }
    dend_69 { pt3dadd( 6.98197, -64.1389, 54.8862, 0.45 ) }
    dend_69 { pt3dadd( 5.99922, -65.8185, 55.3636, 0.45 ) }
    dend_69 { pt3dadd( 4.79341, -68.2639, 55.4086, 0.45 ) }
    dend_69 { pt3dadd( 3.03829, -72.9844, 54.6124, 0.45 ) }
    dend_69 { pt3dadd( 2.1777, -76.2784, 53.6533, 0.45 ) }
    dend_69 { pt3dadd( 1.5533, -79.2445, 52.6352, 0.45 ) }
    dend_69 { pt3dadd( 0.299517, -88.1288, 48.9725, 0.45 ) }
    dend_69 { pt3dadd( 0.123489, -89.8496, 48.1451, 1.02 ) }
    dend_69 { pt3dadd( -0.0341816, -91.6293, 47.0942, 0.57 ) }
    dend_69 { pt3dadd( -0.400492, -93.7637, 45.4204, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 29.1531, -21.2025, 23.0405, 0.45 ) }
    dend_48 { pt3dadd( 29.886, -21.4496, 23.1172, 0.45 ) }
    dend_48 { pt3dadd( 30.6405, -21.7039, 23.1961, 0.45 ) }
    dend_48 { pt3dadd( 31.6892, -22.0575, 23.3059, 0.45 ) }
    dend_48 { pt3dadd( 32.5767, -22.3567, 23.3988, 0.45 ) }
    dend_48 { pt3dadd( 33.037, -22.5119, 23.447, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -7.73604, -38.3823, -2.85446, 0.45 ) }
    dend_29 { pt3dadd( -9.6781, -40.5628, -0.919857, 0.45 ) }
    dend_29 { pt3dadd( -10.506, -41.5868, -0.0972457, 0.79 ) }
    dend_29 { pt3dadd( -18.5635, -51.552, 7.90846, 1.24 ) }
    dend_29 { pt3dadd( -22.0412, -55.8531, 11.3638, 1.24 ) }
    dend_29 { pt3dadd( -24.9789, -59.4863, 14.2826, 1.24 ) }
    dend_29 { pt3dadd( -28.3574, -63.6646, 17.6394, 1.24 ) }
    dend_29 { pt3dadd( -29.5925, -65.1794, 18.8824, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.73604, -38.3823, -2.85446, 0.91 ) }
    dend_26 { pt3dadd( -7.60146, -39.8328, -1.38687, 0.91 ) }
    dend_26 { pt3dadd( -7.52732, -40.6319, -0.578424, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -7.39906, -42.0142, 0.820151, 0.91 ) }
    dend_26 { pt3dadd( -7.31045, -42.9692, 1.78638, 0.91 ) }
    dend_26 { pt3dadd( -7.17196, -44.4618, 3.29655, 0.79 ) }
    dend_26 { pt3dadd( -7.1437, -44.7664, 3.60466, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 45.1546, 4.6258, -27.6256, 0.57 ) }
    dend_19 { pt3dadd( 45.5738, 3.01028, -26.9184, 0.57 ) }
    dend_19 { pt3dadd( 46.426, -0.0921538, -24.9777, 0.57 ) }
    dend_19 { pt3dadd( 47.3262, -3.50624, -22.9796, 0.45 ) }
    dend_19 { pt3dadd( 48.617, -8.47221, -20.2279, 0.45 ) }
    dend_19 { pt3dadd( 50.0074, -13.9241, -17.1404, 0.45 ) }
    dend_19 { pt3dadd( 50.3878, -15.4155, -16.2958, 0.45 ) }
    dend_19 { pt3dadd( 52.177, -22.5328, -12.1652, 0.45 ) }
    dend_19 { pt3dadd( 53.5124, -28.16, -8.78432, 0.45 ) }
    dend_19 { pt3dadd( 54.1435, -30.7808, -7.1562, 0.45 ) }
    dend_19 { pt3dadd( 54.8832, -33.708, -5.35853, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 45.1546, 4.6258, -27.6256, 0.57 ) }
    dend_18 { pt3dadd( 42.9595, 3.85841, -29.2419, 0.57 ) }
    dend_18 { pt3dadd( 41.4689, 3.10097, -29.549, 0.68 ) }
    dend_18 { pt3dadd( 40.1904, 2.27245, -29.7528, 0.68 ) }
    dend_18 { pt3dadd( 38.911, 1.44337, -29.9567, 0.68 ) }
    dend_18 { pt3dadd( 36.8839, 0.129731, -30.2798, 0.68 ) }
    dend_18 { pt3dadd( 34.9442, -1.12724, -30.5889, 0.68 ) }
    dend_18 { pt3dadd( 32.6463, -2.42798, -31.0607, 0.68 ) }
    dend_18 { pt3dadd( 30.2974, -3.56377, -31.5195, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 49.5639, 28.0246, -31.4368, 0.68 ) }
    dend_16 { pt3dadd( 49.7565, 29.6265, -31.1, 0.68 ) }
    dend_16 { pt3dadd( 49.9206, 30.991, -30.8132, 0.68 ) }
    dend_16 { pt3dadd( 50.1949, 33.2724, -30.3337, 0.68 ) }
    dend_16 { pt3dadd( 50.7489, 37.8804, -29.3651, 0.68 ) }
    dend_16 { pt3dadd( 51.059, 40.4593, -28.8231, 0.68 ) }
    dend_16 { pt3dadd( 51.4752, 43.9204, -28.0956, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 49.5639, 28.0246, -31.4368, 0.79 ) }
    dend_15 { pt3dadd( 51.5581, 29.2078, -31.612, 0.79 ) }
    dend_15 { pt3dadd( 54.731, 31.0903, -31.8908, 0.79 ) }
    dend_15 { pt3dadd( 56.7861, 32.3097, -32.0714, 0.79 ) }
    dend_15 { pt3dadd( 59.0784, 33.6697, -32.2729, 0.79 ) }
    dend_15 { pt3dadd( 60.3797, 34.4418, -32.3872, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 110.593, -147.442, -23.0905, 0.57 ) }
    dend_7 { pt3dadd( 111.747, -150.236, -23.0554, 0.57 ) }
    dend_7 { pt3dadd( 113.519, -154.409, -22.8969, 0.57 ) }
    dend_7 { pt3dadd( 114.405, -156.419, -22.8133, 0.57 ) }
    dend_7 { pt3dadd( 116.748, -161.556, -22.6063, 0.57 ) }
    dend_7 { pt3dadd( 119.043, -166.491, -22.3712, 0.57 ) }
    dend_7 { pt3dadd( 120.892, -170.471, -22.1817, 0.57 ) }
    dend_7 { pt3dadd( 121.987, -172.743, -21.9813, 0.57 ) }
    dend_7 { pt3dadd( 122.984, -174.774, -21.7523, 0.57 ) }
    dend_7 { pt3dadd( 123.942, -176.662, -21.5405, 0.57 ) }
    dend_7 { pt3dadd( 125.148, -178.806, -21.3749, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 110.593, -147.442, -23.0905, 0.34 ) }
    dend_6 { pt3dadd( 112.641, -149.149, -22.6477, 0.34 ) }
    dend_6 { pt3dadd( 114.132, -150.457, -22.1434, 0.34 ) }
    dend_6 { pt3dadd( 114.773, -151.042, -21.9122, 0.34 ) }
    dend_6 { pt3dadd( 117.616, -153.845, -21.1181, 0.34 ) }
    dend_6 { pt3dadd( 119.864, -156.201, -20.6245, 0.57 ) }
    dend_6 { pt3dadd( 122.874, -159.445, -20.0257, 0.57 ) }
    dend_6 { pt3dadd( 124.862, -161.725, -19.6361, 0.57 ) }
    dend_6 { pt3dadd( 126.603, -163.801, -19.4252, 0.57 ) }
    dend_6 { pt3dadd( 130.021, -168.01, -19.2479, 0.57 ) }
    dend_6 { pt3dadd( 131.949, -170.426, -19.2949, 0.57 ) }
    dend_6 { pt3dadd( 133.841, -172.801, -19.5483, 0.57 ) }
    dend_6 { pt3dadd( 136.336, -175.848, -20.1414, 0.57 ) }
    dend_6 { pt3dadd( 139.933, -180.158, -21.1685, 0.57 ) }
    dend_6 { pt3dadd( 142.957, -183.717, -22.0473, 0.57 ) }
    dend_6 { pt3dadd( 144.948, -185.963, -22.5261, 0.57 ) }
    dend_6 { pt3dadd( 148.435, -189.74, -23.3036, 0.57 ) }
    dend_6 { pt3dadd( 149.453, -190.795, -23.515, 0.57 ) }
    dend_6 { pt3dadd( 151.729, -193.01, -23.8742, 0.57 ) }
    dend_6 { pt3dadd( 153.467, -194.57, -23.9653, 0.57 ) }
    dend_6 { pt3dadd( 156.856, -197.283, -23.9118, 0.57 ) }
    dend_6 { pt3dadd( 157.938, -198.07, -23.8036, 0.57 ) }
    dend_6 { pt3dadd( 159.794, -199.274, -23.237, 0.57 ) }
    dend_6 { pt3dadd( 161.115, -200.055, -22.746, 0.57 ) }
    dend_6 { pt3dadd( 162.469, -200.777, -22.1419, 0.57 ) }
    dend_6 { pt3dadd( 163.402, -201.256, -21.7041, 0.57 ) }
    dend_6 { pt3dadd( 165.65, -202.397, -20.6055, 0.57 ) }
    dend_6 { pt3dadd( 170.408, -204.855, -18.0238, 0.57 ) }
    dend_6 { pt3dadd( 171.699, -205.528, -17.2446, 0.57 ) }
    dend_6 { pt3dadd( 174.187, -206.843, -15.6335, 0.57 ) }
    dend_6 { pt3dadd( 176.712, -208.285, -13.9118, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 72.9353, 13.6642, -17.5468, 0.45 ) }
    dend_4 { pt3dadd( 75.1139, 13.2543, -22.3648, 0.45 ) }
    dend_4 { pt3dadd( 76.2183, 13.0593, -24.8092, 0.45 ) }
    dend_4 { pt3dadd( 77.7008, 12.8999, -28.5454, 0.45 ) }
    dend_4 { pt3dadd( 78.0914, 12.9142, -29.4888, 0.45 ) }
    dend_4 { pt3dadd( 78.2863, 12.941, -29.9253, 0.45 ) }
    dend_4 { pt3dadd( 80.1491, 13.4245, -33.787, 0.45 ) }
    dend_4 { pt3dadd( 80.395, 13.518, -34.1885, 0.45 ) }
    dend_4 { pt3dadd( 81.8939, 14.1044, -36.6709, 0.45 ) }
    dend_4 { pt3dadd( 83.0185, 14.7829, -38.5082, 0.45 ) }
    dend_4 { pt3dadd( 83.6296, 15.202, -39.5181, 0.45 ) }
    dend_4 { pt3dadd( 85.1046, 16.2925, -41.7655, 0.45 ) }
    dend_4 { pt3dadd( 86.4768, 17.393, -43.3178, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 72.9353, 13.6642, -17.5468, 0.45 ) }
    dend_3 { pt3dadd( 74.3898, 14.0394, -17.7271, 0.45 ) }
    dend_3 { pt3dadd( 75.3256, 14.2808, -17.8431, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 33.037, -22.5119, 23.447, 0.45 ) }
    dend_64 { pt3dadd( 31.9416, -26.5302, 23.587, 0.45 ) }
    dend_64 { pt3dadd( 30.7291, -31.1845, 23.7196, 0.45 ) }
    dend_64 { pt3dadd( 30.0347, -33.7778, 23.8152, 0.45 ) }
    dend_64 { pt3dadd( 29.2719, -36.575, 23.8721, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 28.4023, -39.8335, 23.8666, 0.45 ) }
    dend_64 { pt3dadd( 28.0984, -41.0707, 23.8278, 0.45 ) }
    dend_64 { pt3dadd( 27.7641, -42.601, 23.6834, 0.45 ) }
    dend_64 { pt3dadd( 27.1397, -46.3678, 23.284, 0.45 ) }
    dend_64 { pt3dadd( 26.8931, -49.1925, 22.8457, 0.45 ) }
    dend_64 { pt3dadd( 26.8445, -51.6141, 22.3452, 0.45 ) }
    dend_64 { pt3dadd( 26.8847, -53.5854, 21.9007, 0.45 ) }
    dend_64 { pt3dadd( 26.9698, -55.4126, 21.5887, 0.45 ) }
    dend_64 { pt3dadd( 27.221, -58.3333, 21.274, 0.45 ) }
    dend_64 { pt3dadd( 27.4184, -60.2773, 21.3897, 0.45 ) }
    dend_64 { pt3dadd( 27.6029, -62.0993, 21.7582, 0.45 ) }
    dend_64 { pt3dadd( 27.8995, -64.7316, 22.4177, 0.45 ) }
    dend_64 { pt3dadd( 28.2452, -67.4358, 23.2106, 0.45 ) }
    dend_64 { pt3dadd( 28.4851, -68.9098, 23.6761, 0.45 ) }
    dend_64 { pt3dadd( 29.5838, -73.8865, 24.8997, 0.45 ) }
    dend_64 { pt3dadd( 30.4928, -77.11, 25.5017, 0.45 ) }
    dend_64 { pt3dadd( 31.4797, -79.9084, 25.7903, 0.45 ) }
    dend_64 { pt3dadd( 32.5095, -82.4153, 25.6853, 0.45 ) }
    dend_64 { pt3dadd( 33.5337, -84.7427, 25.461, 0.45 ) }
    dend_64 { pt3dadd( 35.4729, -89.2337, 24.8571, 0.45 ) }
    dend_64 { pt3dadd( 36.3015, -91.2415, 24.5001, 0.45 ) }
    dend_64 { pt3dadd( 36.7917, -92.8797, 24.4764, 0.45 ) }
    dend_64 { pt3dadd( 37.7447, -96.6794, 24.5943, 0.45 ) }
    dend_64 { pt3dadd( 38.4026, -99.8857, 24.7507, 0.45 ) }
    dend_64 { pt3dadd( 38.9433, -103.519, 25.1686, 0.45 ) }
    dend_64 { pt3dadd( 39.1006, -105.446, 25.6159, 0.45 ) }
    dend_64 { pt3dadd( 39.4503, -112.795, 27.3996, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 33.037, -22.5119, 23.447, 0.45 ) }
    dend_49 { pt3dadd( 35.0521, -24.0871, 24.0328, 0.45 ) }
    dend_49 { pt3dadd( 36.1951, -25.2671, 24.3448, 0.45 ) }
    dend_49 { pt3dadd( 38.0229, -27.4186, 24.8035, 0.45 ) }
    dend_49 { pt3dadd( 39.629, -29.4758, 25.189, 0.45 ) }
    dend_49 { pt3dadd( 41.9641, -32.6748, 25.7167, 0.45 ) }
    dend_49 { pt3dadd( 44.8816, -36.937, 26.3514, 0.45 ) }
    dend_49 { pt3dadd( 48.1575, -42.463, 27.0949, 0.45 ) }
    dend_49 { pt3dadd( 50.5764, -46.9968, 27.3579, 0.45 ) }
    dend_49 { pt3dadd( 51.8483, -49.5464, 27.4612, 0.45 ) }
    dend_49 { pt3dadd( 54.1334, -54.4053, 27.5756, 0.45 ) }
    dend_49 { pt3dadd( 55.6152, -57.6605, 27.5475, 0.45 ) }
    dend_49 { pt3dadd( 57.116, -61.1601, 27.4021, 0.45 ) }
    dend_49 { pt3dadd( 59.9712, -68.7794, 26.6494, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -29.5925, -65.1794, 18.8824, 0.12 ) }
    dend_41 { pt3dadd( -29.9569, -65.9818, 18.1695, 0.12 ) }
    dend_41 { pt3dadd( -30.4895, -68.0338, 16.8376, 0.57 ) }
    dend_41 { pt3dadd( -30.9062, -69.8598, 15.9329, 0.57 ) }
    dend_41 { pt3dadd( -31.3442, -71.4688, 15.3619, 0.57 ) }
    dend_41 { pt3dadd( -32.7027, -76.5909, 13.3495, 0.57 ) }
    dend_41 { pt3dadd( -33.4716, -79.6654, 11.8359, 0.57 ) }
    dend_41 { pt3dadd( -33.8627, -81.4107, 10.8854, 0.91 ) }
    dend_41 { pt3dadd( -34.069, -83.0489, 9.65581, 0.91 ) }
    dend_41 { pt3dadd( -34.199, -85.1165, 7.6734, 0.91 ) }
    dend_41 { pt3dadd( -34.1615, -87.8089, 3.74916, 0.68 ) }
    dend_41 { pt3dadd( -33.8905, -89.1252, 0.194961, 0.68 ) }
    dend_41 { pt3dadd( -33.7167, -89.6252, -1.62824, 0.68 ) }
    dend_41 { pt3dadd( -32.9149, -91.0719, -7.93315, 0.68 ) }
    dend_41 { pt3dadd( -32.6738, -91.3606, -9.48257, 0.68 ) }
    dend_41 { pt3dadd( -31.9709, -91.9149, -13.2192, 0.68 ) }
    dend_41 { pt3dadd( -30.5982, -92.6881, -19.6829, 0.68 ) }
    dend_41 { pt3dadd( -29.9849, -92.9798, -22.2398, 0.68 ) }
    dend_41 { pt3dadd( -28.6865, -93.7089, -27.2809, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -29.5925, -65.1794, 18.8824, 0.79 ) }
    dend_32 { pt3dadd( -29.906, -68.7932, 19.2661, 0.79 ) }
    dend_32 { pt3dadd( -30.3284, -73.6631, 19.7832, 0.79 ) }
    dend_32 { pt3dadd( -30.5235, -75.9117, 20.0219, 0.79 ) }
    dend_32 { pt3dadd( -30.674, -77.6463, 20.2061, 0.79 ) }
    dend_32 { pt3dadd( -30.7444, -78.458, 20.2923, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -29.5925, -65.1794, 18.8824, 0.57 ) }
    dend_30 { pt3dadd( -29.7729, -65.7655, 22.3427, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -7.1437, -44.7664, 3.60466, 1.13 ) }
    dend_28 { pt3dadd( -8.11233, -46.6255, 4.85925, 1.13 ) }
    dend_28 { pt3dadd( -9.40747, -49.5534, 6.70121, 0.91 ) }
    dend_28 { pt3dadd( -10.0759, -51.3578, 7.71106, 0.91 ) }
    dend_28 { pt3dadd( -11.0867, -54.4197, 9.28746, 0.91 ) }
    dend_28 { pt3dadd( -12.1316, -57.7986, 10.872, 0.91 ) }
    dend_28 { pt3dadd( -13.1053, -60.8216, 12.2265, 0.91 ) }
    dend_28 { pt3dadd( -13.7632, -62.909, 13.0409, 0.91 ) }
    dend_28 { pt3dadd( -14.9182, -66.3183, 14.261, 0.91 ) }
    dend_28 { pt3dadd( -15.4378, -67.7342, 14.7377, 1.92 ) }
    dend_28 { pt3dadd( -16.1411, -69.6296, 15.3233, 1.36 ) }
    dend_28 { pt3dadd( -17.2477, -72.4048, 16.1924, 1.02 ) }
    dend_28 { pt3dadd( -18.7041, -75.6427, 17.2834, 1.02 ) }
    dend_28 { pt3dadd( -20.0015, -78.3947, 18.2812, 1.02 ) }
    dend_28 { pt3dadd( -20.5343, -79.5219, 18.7126, 1.02 ) }
    dend_28 { pt3dadd( -21.1159, -80.7933, 19.219, 0.68 ) }
    dend_28 { pt3dadd( -21.9089, -82.8663, 20.013, 0.68 ) }
    dend_28 { pt3dadd( -22.2146, -84.0107, 20.4082, 1.02 ) }
    dend_28 { pt3dadd( -22.3558, -85.0209, 20.731, 2.15 ) }
    dend_28 { pt3dadd( -22.391, -86.7642, 21.2555, 1.47 ) }
    dend_28 { pt3dadd( -22.2808, -89.5553, 22.1227, 1.13 ) }
    dend_28 { pt3dadd( -22.1822, -91.4721, 22.7104, 0.79 ) }
    dend_28 { pt3dadd( -22.0866, -92.7409, 23.0984, 0.57 ) }
    dend_28 { pt3dadd( -21.8465, -95.0904, 23.8882, 0.57 ) }
    dend_28 { pt3dadd( -21.592, -97.0715, 24.6112, 0.57 ) }
    dend_28 { pt3dadd( -21.3437, -98.7102, 25.2362, 0.57 ) }
    dend_28 { pt3dadd( -21.1241, -100.259, 25.7983, 0.57 ) }
    dend_28 { pt3dadd( -21.0062, -101.388, 26.1287, 0.57 ) }
    dend_28 { pt3dadd( -20.8196, -103.457, 26.5797, 0.57 ) }
    dend_28 { pt3dadd( -20.8014, -104.648, 26.8845, 0.57 ) }
    dend_28 { pt3dadd( -20.8683, -106.448, 27.3688, 2.83 ) }
    dend_28 { pt3dadd( -21.054, -108.771, 28.0974, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( -21.3257, -112.049, 29.2013, 1.02 ) }
    dend_28 { pt3dadd( -21.5355, -113.884, 29.8379, 0.68 ) }
    dend_28 { pt3dadd( -22.0909, -118.419, 31.4688, 0.68 ) }
    dend_28 { pt3dadd( -22.2495, -120.002, 32.0724, 0.68 ) }
    dend_28 { pt3dadd( -22.4972, -122.646, 33.217, 0.68 ) }
    dend_28 { pt3dadd( -22.6077, -124.112, 33.9089, 0.68 ) }
    dend_28 { pt3dadd( -22.6496, -125.903, 34.7892, 0.68 ) }
    dend_28 { pt3dadd( -22.5553, -128.32, 35.9333, 0.68 ) }
    dend_28 { pt3dadd( -22.2388, -131.005, 37.174, 0.68 ) }
    dend_28 { pt3dadd( -21.7033, -134.575, 38.9679, 0.68 ) }
    dend_28 { pt3dadd( -21.3418, -136.771, 40.1079, 0.68 ) }
    dend_28 { pt3dadd( -20.8519, -139.422, 41.4618, 0.57 ) }
    dend_28 { pt3dadd( -20.4671, -141.327, 42.3829, 0.57 ) }
    dend_28 { pt3dadd( -20.047, -143.233, 43.119, 0.57 ) }
    dend_28 { pt3dadd( -19.5017, -145.29, 43.6705, 0.57 ) }
    dend_28 { pt3dadd( -18.7554, -147.512, 43.9778, 0.57 ) }
    dend_28 { pt3dadd( -17.6942, -150.448, 44.2318, 0.57 ) }
    dend_28 { pt3dadd( -17.1841, -151.766, 44.269, 1.47 ) }
    dend_28 { pt3dadd( -15.763, -155.193, 44.2687, 0.68 ) }
    dend_28 { pt3dadd( -14.8787, -157.249, 44.2607, 0.68 ) }
    dend_28 { pt3dadd( -13.6497, -159.946, 44.3158, 0.68 ) }
    dend_28 { pt3dadd( -11.9021, -163.638, 44.5457, 0.68 ) }
    dend_28 { pt3dadd( -10.3476, -166.969, 44.9758, 0.68 ) }
    dend_28 { pt3dadd( -9.64978, -168.437, 45.2399, 0.68 ) }
    dend_28 { pt3dadd( -9.35185, -169.345, 45.5639, 0.68 ) }
    dend_28 { pt3dadd( -9.28268, -170.969, 46.4053, 0.57 ) }
    dend_28 { pt3dadd( -9.43323, -171.765, 46.9002, 0.57 ) }
    dend_28 { pt3dadd( -9.81241, -172.927, 47.6896, 0.57 ) }
    dend_28 { pt3dadd( -10.5331, -175.013, 49.0362, 0.57 ) }
    dend_28 { pt3dadd( -12.9692, -182.343, 53.3131, 0.68 ) }
    dend_28 { pt3dadd( -14.2653, -186.773, 55.5797, 0.68 ) }
    dend_28 { pt3dadd( -14.7831, -188.906, 56.4939, 0.68 ) }
    dend_28 { pt3dadd( -15.0373, -190.411, 56.9762, 0.68 ) }
    dend_28 { pt3dadd( -15.1175, -194.663, 57.6214, 0.68 ) }
    dend_28 { pt3dadd( -14.9082, -196.004, 57.6066, 0.68 ) }
    dend_28 { pt3dadd( -14.0591, -198.507, 57.2039, 2.04 ) }
    dend_28 { pt3dadd( -13.103, -200.733, 56.7233, 0.79 ) }
    dend_28 { pt3dadd( -12.059, -203.049, 56.2501, 0.79 ) }
    dend_28 { pt3dadd( -10.2568, -207.352, 55.5945, 0.79 ) }
    dend_28 { pt3dadd( -9.43941, -209.682, 55.4673, 0.79 ) }
    dend_28 { pt3dadd( -8.8461, -211.817, 55.5393, 0.79 ) }
    dend_28 { pt3dadd( -8.43642, -214.215, 55.8696, 0.79 ) }
    dend_28 { pt3dadd( -8.22518, -216.379, 56.4012, 0.68 ) }
    dend_28 { pt3dadd( -8.16816, -219.214, 57.3978, 0.68 ) }
    dend_28 { pt3dadd( -8.30856, -221.725, 58.5194, 0.68 ) }
    dend_28 { pt3dadd( -8.72105, -223.909, 59.8574, 0.68 ) }
    dend_28 { pt3dadd( -9.13688, -225.464, 60.9754, 0.68 ) }
    dend_28 { pt3dadd( -9.69512, -227.016, 62.2869, 0.68 ) }
    dend_28 { pt3dadd( -10.0279, -227.893, 63.0837, 1.58 ) }
    dend_28 { pt3dadd( -10.4352, -229.164, 64.2376, 1.58 ) }
    dend_28 { pt3dadd( -11.9136, -234.452, 68.927, 0.68 ) }
    dend_28 { pt3dadd( -12.3652, -236.32, 70.5809, 0.68 ) }
    dend_28 { pt3dadd( -13.035, -239.69, 73.5396, 0.68 ) }
    dend_28 { pt3dadd( -13.6328, -242.734, 76.2246, 0.68 ) }
    dend_28 { pt3dadd( -14.0776, -245.369, 78.5267, 0.68 ) }
    dend_28 { pt3dadd( -14.398, -247.436, 80.3377, 0.68 ) }
    dend_28 { pt3dadd( -14.6027, -249.752, 82.2868, 0.68 ) }
    dend_28 { pt3dadd( -14.8194, -251.248, 83.7538, 0.68 ) }
    dend_28 { pt3dadd( -15.1951, -253.879, 86.5628, 0.68 ) }
    dend_28 { pt3dadd( -15.257, -254.738, 87.5133, 0.68 ) }
    dend_28 { pt3dadd( -15.1703, -256.969, 89.9452, 2.38 ) }
    dend_28 { pt3dadd( -14.9752, -258.11, 91.0643, 1.92 ) }
    dend_28 { pt3dadd( -14.0618, -261.456, 94.1058, 0.57 ) }
    dend_28 { pt3dadd( -13.5586, -262.778, 95.143, 0.57 ) }
    dend_28 { pt3dadd( -11.3885, -267.449, 98.3616, 0.57 ) }
    dend_28 { pt3dadd( -9.7988, -270.735, 100.523, 0.57 ) }
    dend_28 { pt3dadd( -8.71954, -272.827, 101.824, 0.57 ) }
    dend_28 { pt3dadd( -7.36482, -275.459, 103.477, 0.57 ) }
    dend_28 { pt3dadd( -6.07027, -277.925, 105.053, 0.57 ) }
    dend_28 { pt3dadd( -5.32882, -279.571, 106.241, 0.57 ) }
    dend_28 { pt3dadd( -4.89838, -280.844, 107.33, 2.15 ) }
    dend_28 { pt3dadd( -4.56959, -281.864, 108.27, 1.13 ) }
    dend_28 { pt3dadd( -4.11636, -283.418, 109.759, 0.57 ) }
    dend_28 { pt3dadd( -3.55557, -285.001, 110.999, 0.57 ) }
    dend_28 { pt3dadd( -3.27116, -285.712, 111.486, 0.57 ) }
    dend_28 { pt3dadd( -2.92301, -286.684, 112.054, 0.57 ) }
    dend_28 { pt3dadd( -2.4739, -288.013, 112.744, 0.57 ) }
    dend_28 { pt3dadd( -2.37755, -288.379, 112.913, 2.38 ) }
    dend_28 { pt3dadd( -1.54926, -292.193, 114.546, 0.45 ) }
    dend_28 { pt3dadd( -1.08006, -294.771, 115.609, 0.45 ) }
    dend_28 { pt3dadd( -0.609942, -297.665, 116.807, 0.45 ) }
    dend_28 { pt3dadd( -0.363323, -299.691, 117.696, 0.45 ) }
    dend_28 { pt3dadd( -0.162764, -303.337, 119.458, 0.45 ) }
    dend_28 { pt3dadd( -0.168956, -304.322, 119.965, 0.45 ) }
    dend_28 { pt3dadd( -0.612509, -308.684, 122.385, 0.45 ) }
    dend_28 { pt3dadd( -1.13733, -311.977, 124.156, 0.45 ) }
    dend_28 { pt3dadd( -1.72468, -315.031, 125.62, 0.45 ) }
    dend_28 { pt3dadd( -2.46202, -317.841, 126.856, 0.45 ) }
    dend_28 { pt3dadd( -2.89034, -319.152, 127.379, 0.45 ) }
    dend_28 { pt3dadd( -3.61723, -321.262, 128.072, 0.45 ) }
    dend_28 { pt3dadd( -4.56447, -324.045, 128.736, 0.45 ) }
    dend_28 { pt3dadd( -5.20425, -327.013, 129.105, 0.45 ) }
    dend_28 { pt3dadd( -5.2571, -327.798, 129.146, 1.24 ) }
    dend_28 { pt3dadd( -5.15385, -329.809, 129.257, 0.57 ) }
    dend_28 { pt3dadd( -4.81741, -332.319, 129.534, 0.57 ) }
    dend_28 { pt3dadd( -4.1277, -335.625, 130.117, 0.57 ) }
    dend_28 { pt3dadd( -3.38506, -338.681, 130.868, 1.36 ) }
    dend_28 { pt3dadd( -2.86466, -341.098, 131.733, 0.57 ) }
    dend_28 { pt3dadd( -2.31682, -343.735, 132.894, 0.57 ) }
    dend_28 { pt3dadd( -1.66114, -347.089, 134.62, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -1.31196, -349.548, 136.162, 0.57 ) }
    dend_28 { pt3dadd( -1.14224, -351.283, 137.426, 0.57 ) }
    dend_28 { pt3dadd( -0.898006, -355.02, 140.231, 0.57 ) }
    dend_28 { pt3dadd( -0.715181, -358.642, 142.785, 0.57 ) }
    dend_28 { pt3dadd( -0.713079, -360.272, 143.839, 0.57 ) }
    dend_28 { pt3dadd( -0.769808, -363.396, 145.544, 2.38 ) }
    dend_28 { pt3dadd( -0.7888, -364.397, 145.989, 1.58 ) }
    dend_28 { pt3dadd( -0.994613, -368.984, 147.794, 0.68 ) }
    dend_28 { pt3dadd( -1.17154, -371.804, 148.713, 0.68 ) }
    dend_28 { pt3dadd( -1.65785, -375.234, 149.872, 0.79 ) }
    dend_28 { pt3dadd( -2.18458, -378.434, 150.958, 0.57 ) }
    dend_28 { pt3dadd( -2.73776, -381.501, 151.96, 0.57 ) }
    dend_28 { pt3dadd( -3.71186, -386.042, 153.506, 0.57 ) }
    dend_28 { pt3dadd( -4.56331, -389.435, 154.722, 0.57 ) }
    dend_28 { pt3dadd( -5.35301, -392.687, 155.834, 0.57 ) }
    dend_28 { pt3dadd( -5.69806, -394.269, 156.345, 0.57 ) }
    dend_28 { pt3dadd( -6.24645, -396.833, 157.148, 0.57 ) }
    dend_28 { pt3dadd( -6.94398, -400.688, 158.186, 0.57 ) }
    dend_28 { pt3dadd( -7.18802, -403.17, 158.692, 0.57 ) }
    dend_28 { pt3dadd( -7.24887, -406.153, 159.122, 0.57 ) }
    dend_28 { pt3dadd( -7.12735, -408.271, 159.295, 0.57 ) }
    dend_28 { pt3dadd( -6.99109, -409.594, 159.376, 0.57 ) }
    dend_28 { pt3dadd( -6.68121, -412.061, 159.563, 0.57 ) }
    dend_28 { pt3dadd( -6.08371, -416.2, 159.978, 0.57 ) }
    dend_28 { pt3dadd( -5.65042, -419.431, 160.501, 1.13 ) }
    dend_28 { pt3dadd( -5.43408, -421.287, 160.927, 2.38 ) }
    dend_28 { pt3dadd( -5.36811, -421.929, 161.105, 2.38 ) }
    dend_28 { pt3dadd( -5.01567, -426.122, 162.512, 0.79 ) }
    dend_28 { pt3dadd( -4.77546, -428.495, 163.267, 0.79 ) }
    dend_28 { pt3dadd( -4.55209, -431.336, 164.126, 0.57 ) }
    dend_28 { pt3dadd( -4.36097, -433.666, 164.739, 0.57 ) }
    dend_28 { pt3dadd( -4.19341, -435.843, 165.196, 0.57 ) }
    dend_28 { pt3dadd( -4.02371, -437.771, 165.5, 0.57 ) }
    dend_28 { pt3dadd( -3.43921, -442.656, 166.045, 0.57 ) }
    dend_28 { pt3dadd( -3.36643, -443.468, 166.134, 2.94 ) }
    dend_28 { pt3dadd( -3.03278, -447.174, 166.534, 0.68 ) }
    dend_28 { pt3dadd( -2.77445, -450.708, 167.02, 0.68 ) }
    dend_28 { pt3dadd( -2.59338, -453.474, 167.538, 0.68 ) }
    dend_28 { pt3dadd( -2.45616, -455.714, 168.06, 0.68 ) }
    dend_28 { pt3dadd( -2.2643, -459.228, 169.06, 0.68 ) }
    dend_28 { pt3dadd( -2.03995, -462.551, 169.979, 0.68 ) }
    dend_28 { pt3dadd( -1.84299, -464.976, 170.635, 0.68 ) }
    dend_28 { pt3dadd( -1.61993, -467.283, 171.225, 0.68 ) }
    dend_28 { pt3dadd( -1.23448, -471.659, 172.365, 0.68 ) }
    dend_28 { pt3dadd( -1.06006, -473.718, 172.929, 0.68 ) }
    dend_28 { pt3dadd( -0.881435, -475.827, 173.555, 0.68 ) }
    dend_28 { pt3dadd( -0.742647, -481.358, 175.421, 0.68 ) }
    dend_28 { pt3dadd( -0.757272, -482.608, 175.869, 0.68 ) }
    dend_28 { pt3dadd( -1.09929, -486.96, 177.49, 0.57 ) }
    dend_28 { pt3dadd( -1.25651, -488.099, 177.923, 0.57 ) }
    dend_28 { pt3dadd( -1.40945, -488.909, 178.222, 2.49 ) }
    dend_28 { pt3dadd( -2.64996, -494.217, 180.241, 0.68 ) }
    dend_28 { pt3dadd( -3.08714, -495.707, 180.826, 0.68 ) }
    dend_28 { pt3dadd( -4.65374, -500.934, 182.948, 0.68 ) }
    dend_28 { pt3dadd( -5.12038, -502.589, 183.63, 0.68 ) }
    dend_28 { pt3dadd( -5.93056, -505.948, 185.047, 0.68 ) }
    dend_28 { pt3dadd( -6.58764, -509.38, 186.543, 0.68 ) }
    dend_28 { pt3dadd( -6.95516, -512.532, 187.963, 0.68 ) }
    dend_28 { pt3dadd( -7.19129, -515.219, 189.341, 0.68 ) }
    dend_28 { pt3dadd( -7.34135, -519.118, 191.589, 0.68 ) }
    dend_28 { pt3dadd( -7.39562, -520.586, 192.53, 0.68 ) }
    dend_28 { pt3dadd( -7.47213, -521.654, 193.276, 2.72 ) }
    dend_28 { pt3dadd( -7.65072, -523.286, 194.418, 1.92 ) }
    dend_28 { pt3dadd( -8.25085, -526.474, 196.587, 0.91 ) }
    dend_28 { pt3dadd( -8.89906, -528.487, 197.932, 0.91 ) }
    dend_28 { pt3dadd( -9.82524, -530.487, 199.262, 0.68 ) }
    dend_28 { pt3dadd( -11.0485, -532.645, 200.748, 0.68 ) }
    dend_28 { pt3dadd( -12.4822, -534.814, 202.355, 0.68 ) }
    dend_28 { pt3dadd( -14.4668, -537.556, 204.489, 0.68 ) }
    dend_28 { pt3dadd( -16.0354, -539.423, 206.13, 0.68 ) }
    dend_28 { pt3dadd( -18.4093, -541.919, 208.629, 0.68 ) }
    dend_28 { pt3dadd( -20.4103, -543.716, 210.84, 0.68 ) }
    dend_28 { pt3dadd( -23.164, -546.009, 214.05, 0.68 ) }
    dend_28 { pt3dadd( -24.4886, -546.967, 215.658, 0.68 ) }
    dend_28 { pt3dadd( -27.2971, -549.073, 219.314, 0.68 ) }
    dend_28 { pt3dadd( -28.8641, -550.374, 221.517, 0.68 ) }
    dend_28 { pt3dadd( -32.4672, -553.722, 226.895, 0.68 ) }
    dend_28 { pt3dadd( -33.7644, -555.067, 228.893, 0.68 ) }
    dend_28 { pt3dadd( -36.572, -558.417, 233.448, 0.68 ) }
    dend_28 { pt3dadd( -38.3549, -560.865, 236.48, 0.68 ) }
    dend_28 { pt3dadd( -38.8374, -561.729, 237.401, 0.68 ) }
    dend_28 { pt3dadd( -39.2151, -562.506, 238.161, 0.68 ) }
    dend_28 { pt3dadd( -40.261, -564.968, 240.222, 0.68 ) }
    dend_28 { pt3dadd( -40.7455, -565.964, 241.091, 0.68 ) }
    dend_28 { pt3dadd( -42.0396, -568.669, 243.315, 0.45 ) }
    dend_28 { pt3dadd( -42.9749, -570.024, 244.696, 0.45 ) }
    dend_28 { pt3dadd( -43.4274, -570.613, 245.316, 0.45 ) }
    dend_28 { pt3dadd( -44.1478, -571.511, 246.287, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -7.1437, -44.7664, 3.60466, 0.79 ) }
    dend_27 { pt3dadd( -5.70016, -43.7208, 4.50959, 0.79 ) }
    dend_27 { pt3dadd( -4.43966, -42.8078, 5.29977, 0.57 ) }
    dend_27 { pt3dadd( -3.86307, -42.3901, 5.66123, 0.34 ) }
    dend_27 { pt3dadd( -3.20713, -41.915, 6.07242, 0.34 ) }
    dend_27 { pt3dadd( -2.92871, -41.7133, 6.24696, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 54.8832, -33.708, -5.35853, 0.45 ) }
    dend_21 { pt3dadd( 55.4874, -35.665, -4.50309, 0.45 ) }
    dend_21 { pt3dadd( 56.2651, -38.2151, -3.56594, 0.45 ) }
    dend_21 { pt3dadd( 57.8866, -43.6189, -1.75946, 0.45 ) }
    dend_21 { pt3dadd( 59.0117, -47.5415, -0.941428, 0.45 ) }
    dend_21 { pt3dadd( 60.003, -51.544, -0.308606, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 60.2411, -52.7068, -0.137779, 0.45 ) }
    dend_21 { pt3dadd( 60.9382, -56.8092, 0.411926, 0.45 ) }
    dend_21 { pt3dadd( 61.716, -62.1565, 1.09475, 0.45 ) }
    dend_21 { pt3dadd( 62.6061, -69.7536, 2.1401, 0.45 ) }
    dend_21 { pt3dadd( 63.0109, -74.1591, 2.75785, 0.45 ) }
    dend_21 { pt3dadd( 63.3385, -80.3591, 3.69338, 0.45 ) }
    dend_21 { pt3dadd( 63.3865, -86.1658, 4.7196, 0.45 ) }
    dend_21 { pt3dadd( 63.1787, -90.1102, 5.55548, 0.45 ) }
    dend_21 { pt3dadd( 62.4415, -95.461, 6.84865, 0.45 ) }
    dend_21 { pt3dadd( 61.6808, -98.5099, 7.74607, 0.45 ) }
    dend_21 { pt3dadd( 60.858, -101.28, 8.50422, 0.45 ) }
    dend_21 { pt3dadd( 59.4993, -104.573, 9.29935, 0.45 ) }
    dend_21 { pt3dadd( 58.1193, -106.92, 9.78619, 0.45 ) }
    dend_21 { pt3dadd( 55.9062, -109.785, 10.3163, 0.45 ) }
    dend_21 { pt3dadd( 52.8445, -112.91, 10.8766, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 54.8832, -33.708, -5.35853, 0.45 ) }
    dend_20 { pt3dadd( 56.4526, -37.7399, -3.69228, 0.45 ) }
    dend_20 { pt3dadd( 57.159, -39.5548, -2.94224, 0.45 ) }
    dend_20 { pt3dadd( 58.1298, -42.0487, -1.91162, 0.45 ) }
    dend_20 { pt3dadd( 58.6375, -43.3531, -1.37257, 0.45 ) }
    dend_20 { pt3dadd( 59.7301, -46.1601, -0.212504, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 39.4503, -112.795, 27.3996, 0.57 ) }
    dend_66 { pt3dadd( 37.2723, -115.505, 27.2085, 0.57 ) }
    dend_66 { pt3dadd( 35.6009, -117.742, 27.1014, 0.57 ) }
    dend_66 { pt3dadd( 34.2663, -119.605, 26.9949, 0.57 ) }
    dend_66 { pt3dadd( 33.4969, -120.827, 26.9001, 0.57 ) }
    dend_66 { pt3dadd( 32.3426, -122.952, 26.7335, 0.57 ) }
    dend_66 { pt3dadd( 30.8946, -126.125, 26.6768, 0.57 ) }
    dend_66 { pt3dadd( 30.1308, -128.185, 26.7508, 0.57 ) }
    dend_66 { pt3dadd( 29.6844, -129.692, 26.7601, 0.57 ) }
    dend_66 { pt3dadd( 28.8676, -132.411, 27.1175, 0.57 ) }
    dend_66 { pt3dadd( 27.699, -136.211, 27.751, 0.57 ) }
    dend_66 { pt3dadd( 26.0844, -140.703, 28.7976, 0.57 ) }
    dend_66 { pt3dadd( 25.4353, -142.142, 29.1964, 0.57 ) }
    dend_66 { pt3dadd( 23.3774, -145.442, 30.4974, 0.57 ) }
    dend_66 { pt3dadd( 17.3134, -152.073, 34.1825, 0.57 ) }
    dend_66 { pt3dadd( 15.2504, -153.473, 35.2232, 0.57 ) }
    dend_66 { pt3dadd( 12.1923, -154.638, 36.3699, 0.57 ) }
    dend_66 { pt3dadd( 9.1543, -155.317, 37.1911, 0.57 ) }
    dend_66 { pt3dadd( 5.28714, -156.092, 38.251, 0.57 ) }
    dend_66 { pt3dadd( 2.11302, -156.656, 38.9313, 0.57 ) }
    dend_66 { pt3dadd( -1.52134, -157.41, 39.4802, 0.57 ) }
    dend_66 { pt3dadd( -4.64945, -158.347, 40.0556, 0.57 ) }
    dend_66 { pt3dadd( -8.51031, -159.935, 40.7692, 0.57 ) }
    dend_66 { pt3dadd( -14.2775, -163.203, 41.8973, 0.57 ) }
    dend_66 { pt3dadd( -17.0506, -165.431, 42.702, 0.57 ) }
    dend_66 { pt3dadd( -19.8041, -168.188, 43.842, 0.57 ) }
    dend_66 { pt3dadd( -21.3693, -169.984, 44.7497, 0.57 ) }
    dend_66 { pt3dadd( -22.2574, -171.041, 45.3962, 0.57 ) }
    dend_66 { pt3dadd( -23.5087, -172.534, 46.3343, 0.57 ) }
    dend_66 { pt3dadd( -28.1834, -177.635, 49.7283, 0.57 ) }
    dend_66 { pt3dadd( -29.1757, -178.666, 50.4344, 0.57 ) }
    dend_66 { pt3dadd( -30.5619, -180.038, 51.3653, 0.57 ) }
    dend_66 { pt3dadd( -35.011, -184.262, 54.2904, 0.57 ) }
    dend_66 { pt3dadd( -36.8631, -186.02, 55.3878, 0.57 ) }
    dend_66 { pt3dadd( -42.1921, -191.039, 58.1387, 0.57 ) }
    dend_66 { pt3dadd( -43.3083, -192.106, 58.6372, 0.57 ) }
    dend_66 { pt3dadd( -47.591, -196.253, 60.3958, 0.57 ) }
    dend_66 { pt3dadd( -48.7789, -197.416, 60.8363, 0.57 ) }
    dend_66 { pt3dadd( -51.4044, -199.96, 61.6224, 0.57 ) }
    dend_66 { pt3dadd( -52.7211, -201.245, 61.942, 0.57 ) }
    dend_66 { pt3dadd( -58.2729, -206.843, 62.8469, 0.57 ) }
    dend_66 { pt3dadd( -60.8152, -209.456, 63.1279, 0.57 ) }
    dend_66 { pt3dadd( -63.9017, -212.683, 63.0581, 0.57 ) }
    dend_66 { pt3dadd( -67.86, -216.925, 62.5868, 0.57 ) }
    dend_66 { pt3dadd( -72.3697, -221.847, 61.6602, 0.57 ) }
    dend_66 { pt3dadd( -73.5662, -223.215, 61.2024, 0.57 ) }
    dend_66 { pt3dadd( -75.4906, -225.545, 59.9868, 0.57 ) }
    dend_66 { pt3dadd( -78.5597, -229.407, 56.4488, 0.57 ) }
    dend_66 { pt3dadd( -80.0156, -231.314, 53.8067, 0.57 ) }
    dend_66 { pt3dadd( -81.4596, -233.328, 50.4071, 0.57 ) }
    dend_66 { pt3dadd( -82.9244, -235.43, 46.4383, 0.57 ) }
    dend_66 { pt3dadd( -84.0451, -237.058, 43.1139, 0.57 ) }
    dend_66 { pt3dadd( -88.0174, -243.158, 29.499, 0.57 ) }
    dend_66 { pt3dadd( -88.0791, -243.26, 29.2536, 2.26 ) }
    dend_66 { pt3dadd( -88.9003, -244.745, 24.3984, 0.68 ) }
    dend_66 { pt3dadd( -89.0697, -245.181, 22.211, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 39.4503, -112.795, 27.3996, 0.57 ) }
    dend_65 { pt3dadd( 38.6799, -118.28, 33.446, 0.57 ) }
    dend_65 { pt3dadd( 38.242, -122.141, 37.5679, 0.57 ) }
    dend_65 { pt3dadd( 38.2183, -122.952, 38.3674, 0.57 ) }
    dend_65 { pt3dadd( 38.2637, -125.174, 40.4057, 0.57 ) }
    dend_65 { pt3dadd( 38.3576, -129.466, 44.361, 0.57 ) }
    dend_65 { pt3dadd( 38.8268, -139.467, 53.5997, 0.57 ) }
    dend_65 { pt3dadd( 39.0702, -141.393, 55.2967, 0.57 ) }
    dend_65 { pt3dadd( 39.7885, -145.266, 58.5301, 0.57 ) }
    dend_65 { pt3dadd( 40.1548, -146.719, 59.6834, 0.57 ) }
    dend_65 { pt3dadd( 41.8028, -152.409, 64.1558, 0.57 ) }
    dend_65 { pt3dadd( 42.5339, -154.375, 65.4332, 0.57 ) }
    dend_65 { pt3dadd( 43.9924, -157.272, 66.7306, 0.57 ) }
    dend_65 { pt3dadd( 45.4096, -159.997, 68.1361, 0.57 ) }
    dend_65 { pt3dadd( 47.3221, -163.801, 70.2183, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 59.9712, -68.7794, 26.6494, 0.34 ) }
    dend_63 { pt3dadd( 59.291, -70.622, 25.6647, 0.34 ) }
    dend_63 { pt3dadd( 58.8994, -72.0938, 24.8448, 0.34 ) }
    dend_63 { pt3dadd( 58.4937, -73.6966, 23.9848, 0.45 ) }
    dend_63 { pt3dadd( 57.8042, -76.4461, 22.58, 0.45 ) }
    dend_63 { pt3dadd( 57.1723, -79.0176, 21.2213, 0.45 ) }
    dend_63 { pt3dadd( 56.6085, -81.3542, 20.0077, 0.45 ) }
    dend_63 { pt3dadd( 56.002, -84.3856, 18.2201, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 55.8079, -85.6416, 17.4764, 0.45 ) }
    dend_63 { pt3dadd( 55.6893, -86.5447, 16.9472, 0.45 ) }
    dend_63 { pt3dadd( 55.3952, -88.948, 15.611, 0.45 ) }
    dend_63 { pt3dadd( 55.1952, -90.5899, 14.7936, 0.45 ) }
    dend_63 { pt3dadd( 54.636, -95.056, 12.7105, 0.45 ) }
    dend_63 { pt3dadd( 54.393, -96.908, 11.839, 0.45 ) }
    dend_63 { pt3dadd( 54.2603, -98.0863, 11.2983, 0.45 ) }
    dend_63 { pt3dadd( 53.9691, -100.502, 10.2911, 0.45 ) }
    dend_63 { pt3dadd( 53.6838, -103.08, 9.16684, 0.45 ) }
    dend_63 { pt3dadd( 53.5019, -104.615, 8.36279, 0.45 ) }
    dend_63 { pt3dadd( 53.1382, -107.249, 6.80307, 0.45 ) }
    dend_63 { pt3dadd( 52.9536, -108.501, 5.97019, 0.45 ) }
    dend_63 { pt3dadd( 52.7015, -110.2, 4.63387, 0.45 ) }
    dend_63 { pt3dadd( 52.0693, -114.138, 1.18336, 0.45 ) }
    dend_63 { pt3dadd( 51.8154, -115.885, -0.586423, 0.45 ) }
    dend_63 { pt3dadd( 51.6439, -117.221, -1.97997, 0.45 ) }
    dend_63 { pt3dadd( 51.4632, -118.862, -3.66474, 0.45 ) }
    dend_63 { pt3dadd( 51.1284, -122.146, -7.00513, 0.23 ) }
    dend_63 { pt3dadd( 51.0579, -122.951, -7.81948, 0.23 ) }
    dend_63 { pt3dadd( 50.7727, -125.878, -10.4329, 0.23 ) }
    dend_63 { pt3dadd( 50.7021, -127.032, -11.4108, 0.23 ) }
    dend_63 { pt3dadd( 50.6053, -129.701, -13.7442, 0.45 ) }
    dend_63 { pt3dadd( 50.5932, -130.57, -14.5299, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 59.9712, -68.7794, 26.6494, 0.45 ) }
    dend_50 { pt3dadd( 61.6139, -71.7047, 27.0278, 0.45 ) }
    dend_50 { pt3dadd( 63.2015, -74.5998, 27.3603, 0.45 ) }
    dend_50 { pt3dadd( 64.4509, -76.9819, 27.6065, 0.45 ) }
    dend_50 { pt3dadd( 66.0105, -80.0973, 28.0573, 0.45 ) }
    dend_50 { pt3dadd( 68.5616, -85.2122, 28.8993, 0.45 ) }
    dend_50 { pt3dadd( 70.2723, -88.6422, 29.4639, 0.45 ) }
    dend_50 { pt3dadd( 71.2312, -90.6861, 29.7564, 0.45 ) }
    dend_50 { pt3dadd( 72.7514, -94.1707, 30.2487, 0.45 ) }
    dend_50 { pt3dadd( 74.2669, -97.8353, 30.7537, 0.45 ) }
    dend_50 { pt3dadd( 75.6072, -101.068, 31.3844, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -28.6865, -93.7089, -27.2809, 0.57 ) }
    dend_43 { pt3dadd( -26.9107, -94.6922, -30.9233, 0.57 ) }
    dend_43 { pt3dadd( -26.6569, -94.8327, -31.4437, 0.57 ) }
    dend_43 { pt3dadd( -26.1064, -95.1375, -32.573, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -28.6865, -93.7089, -27.2809, 0.68 ) }
    dend_42 { pt3dadd( -28.9612, -95.1357, -28.0364, 0.68 ) }
    dend_42 { pt3dadd( -29.2553, -97.1725, -29.5534, 0.68 ) }
    dend_42 { pt3dadd( -29.4274, -98.1489, -30.3618, 0.68 ) }
    dend_42 { pt3dadd( -29.6067, -98.8783, -31.0258, 0.68 ) }
    dend_42 { pt3dadd( -29.9786, -100.443, -32.7145, 0.68 ) }
    dend_42 { pt3dadd( -30.1562, -101.138, -33.5082, 0.68 ) }
    dend_42 { pt3dadd( -30.7207, -103.235, -36.0965, 0.68 ) }
    dend_42 { pt3dadd( -30.9452, -103.975, -36.958, 0.68 ) }
    dend_42 { pt3dadd( -31.2925, -104.894, -37.9896, 0.68 ) }
    dend_42 { pt3dadd( -32.0938, -106.773, -40.0295, 0.68 ) }
    dend_42 { pt3dadd( -32.8252, -108.174, -41.4955, 0.68 ) }
    dend_42 { pt3dadd( -34.1177, -110.468, -43.79, 0.68 ) }
    dend_42 { pt3dadd( -35.3092, -112.426, -45.656, 0.68 ) }
    dend_42 { pt3dadd( -36.6462, -114.539, -47.623, 0.68 ) }
    dend_42 { pt3dadd( -37.7459, -116.236, -49.1494, 0.68 ) }
    dend_42 { pt3dadd( -39.1246, -118.18, -50.8444, 0.68 ) }
    dend_42 { pt3dadd( -40.3746, -119.814, -52.3738, 0.57 ) }
    dend_42 { pt3dadd( -41.5021, -121.107, -53.708, 0.57 ) }
    dend_42 { pt3dadd( -42.8494, -122.656, -55.3979, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -30.7444, -78.458, 20.2923, 0.45 ) }
    dend_38 { pt3dadd( -35.1493, -78.5439, 20.8824, 0.45 ) }
    dend_38 { pt3dadd( -37.1643, -78.3788, 21.2098, 0.45 ) }
    dend_38 { pt3dadd( -41.6105, -77.7698, 21.6849, 0.45 ) }
    dend_38 { pt3dadd( -42.8108, -77.5471, 21.8375, 0.45 ) }
    dend_38 { pt3dadd( -44.4534, -77.1369, 22.0379, 0.45 ) }
    dend_38 { pt3dadd( -45.6754, -76.8193, 22.5089, 0.45 ) }
    dend_38 { pt3dadd( -47.0773, -76.4112, 23.3598, 0.45 ) }
    dend_38 { pt3dadd( -48.4215, -75.9201, 24.3651, 0.45 ) }
    dend_38 { pt3dadd( -49.8002, -75.2473, 25.3356, 0.45 ) }
    dend_38 { pt3dadd( -50.7483, -74.7032, 25.9914, 0.45 ) }
    dend_38 { pt3dadd( -56.6053, -71.2491, 30.0749, 0.45 ) }
    dend_38 { pt3dadd( -57.8646, -70.5616, 30.8956, 0.45 ) }
    dend_38 { pt3dadd( -60.3521, -69.3173, 32.35, 0.45 ) }
    dend_38 { pt3dadd( -64.1485, -67.5173, 34.3443, 0.45 ) }
    dend_38 { pt3dadd( -65.5636, -66.9699, 34.9317, 0.45 ) }
    dend_38 { pt3dadd( -69.6355, -66.0509, 36.1902, 0.45 ) }
    dend_38 { pt3dadd( -71.4064, -65.9728, 36.4012, 0.45 ) }
    dend_38 { pt3dadd( -72.4723, -66.1169, 36.5132, 0.34 ) }
    dend_38 { pt3dadd( -73.6742, -66.4973, 36.6046, 0.34 ) }
    dend_38 { pt3dadd( -76.8743, -67.8783, 36.5433, 0.34 ) }
    dend_38 { pt3dadd( -79.6143, -69.1981, 36.1707, 0.34 ) }
    dend_38 { pt3dadd( -81.5116, -70.1481, 35.684, 0.34 ) }
    dend_38 { pt3dadd( -83.7567, -71.1669, 35.1184, 0.34 ) }
    dend_38 { pt3dadd( -87.5429, -72.7528, 34.2135, 0.34 ) }
    dend_38 { pt3dadd( -92.4495, -74.586, 33.0748, 0.34 ) }
    dend_38 { pt3dadd( -94.1084, -75.0714, 32.6541, 0.34 ) }
    dend_38 { pt3dadd( -95.305, -75.2916, 32.4458, 0.34 ) }
    dend_38 { pt3dadd( -98.7782, -75.7066, 32.1308, 0.34 ) }
    dend_38 { pt3dadd( -101.226, -75.9332, 32.2057, 0.34 ) }
    dend_38 { pt3dadd( -103.223, -76.0768, 32.5591, 0.34 ) }
    dend_38 { pt3dadd( -105.536, -76.2438, 33.2349, 0.34 ) }
    dend_38 { pt3dadd( -108.429, -76.5579, 34.0099, 0.34 ) }
    dend_38 { pt3dadd( -112.002, -77.0772, 34.9261, 0.34 ) }
    dend_38 { pt3dadd( -115.933, -77.8073, 35.8043, 0.34 ) }
    dend_38 { pt3dadd( -119.816, -78.6471, 36.5779, 0.34 ) }
    dend_38 { pt3dadd( -122.245, -79.2966, 36.9724, 0.34 ) }
    dend_38 { pt3dadd( -125.83, -80.5024, 37.4324, 0.34 ) }
    dend_38 { pt3dadd( -127.794, -81.2538, 37.5472, 0.34 ) }
    dend_38 { pt3dadd( -129.117, -81.7884, 37.5404, 0.34 ) }
    dend_38 { pt3dadd( -132.868, -83.3791, 37.1206, 0.34 ) }
    dend_38 { pt3dadd( -135.06, -84.3951, 36.7965, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -137.969, -85.7386, 36.3934, 0.34 ) }
    dend_38 { pt3dadd( -139.099, -86.2207, 36.2791, 0.34 ) }
    dend_38 { pt3dadd( -141.792, -87.2974, 35.8907, 0.34 ) }
    dend_38 { pt3dadd( -143.213, -87.8512, 35.6478, 0.34 ) }
    dend_38 { pt3dadd( -145.908, -88.8953, 35.0851, 0.34 ) }
    dend_38 { pt3dadd( -147.46, -89.4962, 34.6951, 0.34 ) }
    dend_38 { pt3dadd( -149.134, -90.1301, 34.19, 0.34 ) }
    dend_38 { pt3dadd( -152.101, -91.2333, 33.2311, 0.34 ) }
    dend_38 { pt3dadd( -154.524, -92.0708, 32.3931, 0.34 ) }
    dend_38 { pt3dadd( -156.994, -92.801, 31.4666, 0.34 ) }
    dend_38 { pt3dadd( -159.284, -93.3219, 30.5677, 0.34 ) }
    dend_38 { pt3dadd( -161.054, -93.6372, 29.9434, 0.34 ) }
    dend_38 { pt3dadd( -162.783, -93.8845, 29.3479, 0.34 ) }
    dend_38 { pt3dadd( -164.445, -94.0267, 28.8016, 0.34 ) }
    dend_38 { pt3dadd( -165.816, -94.0159, 28.381, 0.34 ) }
    dend_38 { pt3dadd( -168.337, -93.7009, 27.6988, 0.34 ) }
    dend_38 { pt3dadd( -170.127, -93.2891, 27.3217, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -30.7444, -78.458, 20.2923, 2.72 ) }
    dend_33 { pt3dadd( -31.834, -80.8423, 23.7505, 2.72 ) }
    dend_33 { pt3dadd( -32.2476, -81.8927, 25.2337, 1.47 ) }
    dend_33 { pt3dadd( -32.5651, -82.8428, 26.4106, 1.13 ) }
    dend_33 { pt3dadd( -33.5311, -85.9903, 30.0316, 1.13 ) }
    dend_33 { pt3dadd( -33.7217, -86.6348, 30.6629, 3.39 ) }
    dend_33 { pt3dadd( -34.1184, -87.9533, 31.7384, 1.81 ) }
    dend_33 { pt3dadd( -34.8642, -90.7833, 33.1577, 0.68 ) }
    dend_33 { pt3dadd( -35.2989, -92.365, 33.7041, 0.68 ) }
    dend_33 { pt3dadd( -35.5663, -93.2149, 33.8231, 0.68 ) }
    dend_33 { pt3dadd( -36.4218, -95.7312, 33.7424, 0.68 ) }
    dend_33 { pt3dadd( -37.0813, -97.4248, 33.6336, 0.68 ) }
    dend_33 { pt3dadd( -37.7194, -98.8894, 33.4571, 0.68 ) }
    dend_33 { pt3dadd( -38.4385, -100.533, 33.1627, 0.68 ) }
    dend_33 { pt3dadd( -39.2999, -102.425, 32.8868, 0.68 ) }
    dend_33 { pt3dadd( -39.8254, -103.603, 32.7126, 0.68 ) }
    dend_33 { pt3dadd( -40.4886, -105.132, 32.5312, 0.68 ) }
    dend_33 { pt3dadd( -41.0515, -106.499, 32.3605, 0.68 ) }
    dend_33 { pt3dadd( -42.2488, -109.456, 32.0437, 0.68 ) }
    dend_33 { pt3dadd( -42.523, -110.14, 32.027, 3.51 ) }
    dend_33 { pt3dadd( -43.1451, -111.745, 32.1023, 1.7 ) }
    dend_33 { pt3dadd( -43.6752, -112.966, 32.2808, 0.79 ) }
    dend_33 { pt3dadd( -44.3601, -114.365, 32.6117, 0.79 ) }
    dend_33 { pt3dadd( -45.7043, -116.926, 33.4117, 0.68 ) }
    dend_33 { pt3dadd( -46.9981, -119.318, 34.2826, 0.79 ) }
    dend_33 { pt3dadd( -47.3741, -120.041, 34.5399, 0.45 ) }
    dend_33 { pt3dadd( -48.515, -122.067, 35.7469, 0.45 ) }
    dend_33 { pt3dadd( -48.9307, -122.808, 36.3142, 0.45 ) }
    dend_33 { pt3dadd( -49.2223, -123.353, 36.808, 0.68 ) }
    dend_33 { pt3dadd( -49.8853, -124.634, 38.1535, 0.68 ) }
    dend_33 { pt3dadd( -50.2044, -125.302, 38.8781, 0.68 ) }
    dend_33 { pt3dadd( -52.1806, -129.592, 43.6291, 2.38 ) }
    dend_33 { pt3dadd( -52.5074, -130.305, 44.4648, 1.47 ) }
    dend_33 { pt3dadd( -52.6902, -130.694, 44.9196, 0.79 ) }
    dend_33 { pt3dadd( -53.378, -132.189, 46.6373, 0.79 ) }
    dend_33 { pt3dadd( -53.8678, -133.309, 47.8453, 0.79 ) }
    dend_33 { pt3dadd( -54.1963, -134.146, 48.5986, 2.15 ) }
    dend_33 { pt3dadd( -55.0078, -136.822, 50.212, 0.79 ) }
    dend_33 { pt3dadd( -55.4361, -138.446, 51.1059, 0.68 ) }
    dend_33 { pt3dadd( -55.6841, -139.635, 51.6242, 0.68 ) }
    dend_33 { pt3dadd( -55.8453, -140.747, 51.9744, 0.68 ) }
    dend_33 { pt3dadd( -55.9023, -141.194, 52.0756, 0.68 ) }
    dend_33 { pt3dadd( -56.0518, -142.567, 52.1939, 0.68 ) }
    dend_33 { pt3dadd( -56.2075, -144.048, 52.1227, 0.68 ) }
    dend_33 { pt3dadd( -56.6511, -146.632, 51.8715, 0.68 ) }
    dend_33 { pt3dadd( -56.7792, -147.118, 51.7998, 2.6 ) }
    dend_33 { pt3dadd( -57.0577, -147.933, 51.6561, 2.26 ) }
    dend_33 { pt3dadd( -58.2073, -150.553, 51.13, 0.45 ) }
    dend_33 { pt3dadd( -58.6495, -151.355, 50.9519, 0.45 ) }
    dend_33 { pt3dadd( -59.3861, -152.531, 50.6495, 0.45 ) }
    dend_33 { pt3dadd( -60.5208, -154.206, 50.193, 0.45 ) }
    dend_33 { pt3dadd( -61.6423, -155.776, 49.7925, 0.45 ) }
    dend_33 { pt3dadd( -62.9401, -157.509, 49.3986, 0.45 ) }
    dend_33 { pt3dadd( -64.3669, -159.331, 49.0346, 0.45 ) }
    dend_33 { pt3dadd( -65.7443, -161.112, 48.6592, 2.38 ) }
    dend_33 { pt3dadd( -66.0683, -161.543, 48.5668, 3.51 ) }
    dend_33 { pt3dadd( -67.6483, -163.641, 48.1222, 0.57 ) }
    dend_33 { pt3dadd( -68.3478, -164.572, 47.9204, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -29.7729, -65.7655, 22.3427, 0.45 ) }
    dend_31 { pt3dadd( -28.5009, -65.5635, 21.431, 0.45 ) }
    dend_31 { pt3dadd( -27.7067, -65.4728, 20.9768, 0.45 ) }
    dend_31 { pt3dadd( -26.5492, -65.437, 20.3816, 0.45 ) }
    dend_31 { pt3dadd( -23.4802, -65.579, 19.0354, 0.45 ) }
    dend_31 { pt3dadd( -20.7237, -65.7814, 17.9069, 0.45 ) }
    dend_31 { pt3dadd( -18.0684, -65.9752, 16.8452, 0.45 ) }
    dend_31 { pt3dadd( -15.2208, -66.1566, 15.4044, 0.45 ) }
    dend_31 { pt3dadd( -12.6963, -66.2967, 14.1022, 0.45 ) }
    dend_31 { pt3dadd( -10.7355, -66.4151, 13.1124, 0.45 ) }
    dend_31 { pt3dadd( -7.06251, -66.6743, 11.3241, 0.45 ) }
    dend_31 { pt3dadd( -4.52452, -66.8325, 10.0888, 0.45 ) }
    dend_31 { pt3dadd( 0.427064, -66.946, 7.45901, 0.45 ) }
    dend_31 { pt3dadd( 2.21317, -66.9351, 6.20933, 0.45 ) }
    dend_31 { pt3dadd( 2.40577, -66.9209, 6.05901, 0.45 ) }
    dend_31 { pt3dadd( 2.72642, -66.8848, 5.75752, 0.45 ) }
    dend_31 { pt3dadd( 4.03506, -66.7979, 4.48631, 0.45 ) }
    dend_31 { pt3dadd( 6.86728, -66.9838, 1.54324, 0.45 ) }
    dend_31 { pt3dadd( 8.36094, -67.241, 0.0884976, 0.45 ) }
    dend_31 { pt3dadd( 9.13322, -67.4172, -0.667578, 0.45 ) }
    dend_31 { pt3dadd( 10.9431, -67.9428, -2.46192, 0.45 ) }
    dend_31 { pt3dadd( 12.0623, -68.3526, -3.56414, 0.45 ) }
    dend_31 { pt3dadd( 14.7427, -69.4306, -6.15477, 0.45 ) }
    dend_31 { pt3dadd( 16.4671, -70.0712, -7.54793, 0.45 ) }
    dend_31 { pt3dadd( 17.143, -70.3208, -8.04801, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 17.9092, -70.5661, -8.55813, 0.45 ) }
    dend_31 { pt3dadd( 18.7795, -70.7459, -9.02165, 0.45 ) }
    dend_31 { pt3dadd( 20.0597, -70.8054, -9.56155, 0.45 ) }
    dend_31 { pt3dadd( 22.2934, -70.5673, -10.0248, 0.45 ) }
    dend_31 { pt3dadd( 23.3263, -70.4445, -10.2956, 0.45 ) }
    dend_31 { pt3dadd( 26.3505, -70.0737, -11.1687, 0.45 ) }
    dend_31 { pt3dadd( 27.7737, -69.9002, -11.6381, 0.45 ) }
    dend_31 { pt3dadd( 29.0055, -69.786, -12.0662, 0.45 ) }
    dend_31 { pt3dadd( 31.3165, -69.6769, -12.8745, 0.45 ) }
    dend_31 { pt3dadd( 36.6858, -69.7377, -14.6602, 0.45 ) }
    dend_31 { pt3dadd( 37.332, -69.7637, -14.8801, 0.45 ) }
    dend_31 { pt3dadd( 39.3152, -69.9585, -15.6147, 0.45 ) }
    dend_31 { pt3dadd( 40.678, -70.1583, -16.1688, 0.45 ) }
    dend_31 { pt3dadd( 41.2987, -70.2779, -16.4363, 0.45 ) }
    dend_31 { pt3dadd( 43.5055, -70.7626, -17.3747, 0.45 ) }
    dend_31 { pt3dadd( 45.1328, -71.1024, -17.4011, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -89.0697, -245.181, 22.211, 0.57 ) }
    dend_68 { pt3dadd( -90.1399, -246.627, 21.6072, 0.57 ) }
    dend_68 { pt3dadd( -93.2623, -250.303, 19.8826, 0.57 ) }
    dend_68 { pt3dadd( -95.9291, -253.131, 18.4368, 0.45 ) }
    dend_68 { pt3dadd( -98.4732, -255.56, 17.4507, 0.45 ) }
    dend_68 { pt3dadd( -100.495, -257.386, 16.7905, 0.45 ) }
    dend_68 { pt3dadd( -102.328, -258.992, 16.3081, 0.45 ) }
    dend_68 { pt3dadd( -104.457, -260.733, 15.8142, 0.45 ) }
    dend_68 { pt3dadd( -106.803, -262.393, 15.4283, 0.45 ) }
    dend_68 { pt3dadd( -113.245, -266.582, 14.763, 0.45 ) }
    dend_68 { pt3dadd( -114.465, -267.376, 14.7091, 0.45 ) }
    dend_68 { pt3dadd( -116.69, -268.947, 14.7274, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -89.0697, -245.181, 22.211, 0.57 ) }
    dend_67 { pt3dadd( -89.331, -249.947, 21.7855, 0.57 ) }
    dend_67 { pt3dadd( -89.4364, -251.58, 21.6565, 0.57 ) }
    dend_67 { pt3dadd( -89.551, -253.625, 21.4764, 0.57 ) }
    dend_67 { pt3dadd( -89.6977, -256.373, 21.2049, 0.57 ) }
    dend_67 { pt3dadd( -89.7945, -258.278, 21.0701, 0.57 ) }
    dend_67 { pt3dadd( -89.8257, -259.238, 21.0057, 0.57 ) }
    dend_67 { pt3dadd( -89.833, -259.417, 21.0047, 2.04 ) }
    dend_67 { pt3dadd( -89.9671, -261.797, 20.6846, 0.57 ) }
    dend_67 { pt3dadd( -90.0619, -262.594, 20.486, 0.57 ) }
    dend_67 { pt3dadd( -90.3059, -263.712, 20.0585, 1.92 ) }
    dend_67 { pt3dadd( -91.2111, -266.626, 19.1666, 0.68 ) }
    dend_67 { pt3dadd( -91.6831, -267.927, 18.8212, 0.68 ) }
    dend_67 { pt3dadd( -93.0549, -271.342, 17.8853, 0.57 ) }
    dend_67 { pt3dadd( -94.0652, -273.772, 17.5592, 0.57 ) }
    dend_67 { pt3dadd( -95.5023, -277.385, 17.4385, 0.57 ) }
    dend_67 { pt3dadd( -97.3969, -282.972, 17.6458, 0.57 ) }
    dend_67 { pt3dadd( -97.6368, -283.843, 17.7479, 0.57 ) }
    dend_67 { pt3dadd( -97.9893, -285.719, 18.0216, 0.45 ) }
    dend_67 { pt3dadd( -98.7924, -293.178, 19.6221, 0.45 ) }
    dend_67 { pt3dadd( -98.869, -294.396, 19.8912, 0.45 ) }
    dend_67 { pt3dadd( -99.0443, -298.072, 20.6231, 0.45 ) }
    dend_67 { pt3dadd( -99.1486, -300.777, 20.9095, 0.45 ) }
    dend_67 { pt3dadd( -99.3428, -303.038, 21.2383, 0.45 ) }
    dend_67 { pt3dadd( -100.031, -307.543, 21.848, 0.45 ) }
    dend_67 { pt3dadd( -100.486, -309.345, 22.015, 0.45 ) }
    dend_67 { pt3dadd( -101.003, -310.922, 22.2564, 0.45 ) }
    dend_67 { pt3dadd( -101.232, -311.494, 22.3816, 0.45 ) }
    dend_67 { pt3dadd( -103.167, -315.876, 23.5838, 0.11 ) }
    dend_67 { pt3dadd( -104.328, -318.348, 24.3659, 0.23 ) }
    dend_67 { pt3dadd( -106.003, -321.973, 25.3906, 0.23 ) }
    dend_67 { pt3dadd( -106.709, -323.556, 25.927, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 75.6072, -101.068, 31.3844, 0.34 ) }
    dend_52 { pt3dadd( 77.217, -104.034, 31.6156, 0.34 ) }
    dend_52 { pt3dadd( 79.1546, -107.603, 31.8938, 0.34 ) }
    dend_52 { pt3dadd( 81.0566, -111.107, 32.1669, 0.34 ) }
    dend_52 { pt3dadd( 82.4236, -113.626, 32.3632, 0.34 ) }
    dend_52 { pt3dadd( 83.1613, -114.984, 32.4691, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 75.6072, -101.068, 31.3844, 0.45 ) }
    dend_51 { pt3dadd( 78.1714, -99.5236, 32.2281, 0.45 ) }
    dend_51 { pt3dadd( 80.1279, -98.3228, 32.7681, 0.45 ) }
    dend_51 { pt3dadd( 83.1073, -96.5327, 33.5599, 0.45 ) }
    dend_51 { pt3dadd( 85.1483, -95.2703, 34.1517, 0.45 ) }
    dend_51 { pt3dadd( 89.204, -92.7451, 35.3795, 0.45 ) }
    dend_51 { pt3dadd( 91.9293, -91.1304, 36.2407, 0.45 ) }
    dend_51 { pt3dadd( 94.0076, -89.9995, 36.9653, 0.45 ) }
    dend_51 { pt3dadd( 96.8602, -88.5349, 37.9186, 0.45 ) }
    dend_51 { pt3dadd( 100.194, -86.8296, 38.9356, 0.45 ) }
    dend_51 { pt3dadd( 100.611, -86.6066, 39.04, 1.58 ) }
    dend_51 { pt3dadd( 103.746, -84.8716, 39.8035, 0.34 ) }
    dend_51 { pt3dadd( 106.339, -83.4841, 40.264, 0.34 ) }
    dend_51 { pt3dadd( 110.799, -81.0881, 40.6915, 0.34 ) }
    dend_51 { pt3dadd( 113.38, -79.719, 40.7224, 0.34 ) }
    dend_51 { pt3dadd( 116.177, -78.6216, 40.5613, 0.34 ) }
    dend_51 { pt3dadd( 118.007, -78.0458, 40.3307, 0.34 ) }
    dend_51 { pt3dadd( 120.101, -77.6352, 40.0208, 0.34 ) }
    dend_51 { pt3dadd( 123.38, -77.5304, 39.4938, 0.34 ) }
    dend_51 { pt3dadd( 125.88, -77.8161, 39.2193, 0.34 ) }
    dend_51 { pt3dadd( 132.696, -79.1831, 38.7114, 0.34 ) }
    dend_51 { pt3dadd( 136.341, -80.036, 38.3994, 0.34 ) }
    dend_51 { pt3dadd( 140.153, -81.0008, 38.0386, 0.34 ) }
    dend_51 { pt3dadd( 146.0, -82.6675, 37.5202, 0.34 ) }
    dend_51 { pt3dadd( 149.527, -83.8372, 37.1954, 0.34 ) }
    dend_51 { pt3dadd( 153.33, -85.1731, 36.7921, 0.34 ) }
    dend_51 { pt3dadd( 157.038, -86.5581, 36.5391, 0.34 ) }
    dend_51 { pt3dadd( 160.66, -87.9363, 36.4912, 0.34 ) }
    dend_51 { pt3dadd( 162.29, -88.4975, 36.5935, 0.34 ) }
    dend_51 { pt3dadd( 164.17, -89.173, 36.9434, 0.34 ) }
    dend_51 { pt3dadd( 166.296, -89.9952, 37.4809, 0.34 ) }
    dend_51 { pt3dadd( 167.91, -90.6253, 38.0079, 0.34 ) }
    dend_51 { pt3dadd( 169.751, -91.3176, 38.7216, 0.34 ) }
    dend_51 { pt3dadd( 176.167, -93.595, 41.2371, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 179.193, -94.5701, 42.4387, 0.34 ) }
    dend_51 { pt3dadd( 182.24, -95.5147, 43.6473, 0.34 ) }
    dend_51 { pt3dadd( 185.067, -96.3997, 44.7453, 0.34 ) }
    dend_51 { pt3dadd( 189.8, -97.8659, 46.4465, 0.34 ) }
    dend_51 { pt3dadd( 193.529, -98.9958, 47.7547, 0.34 ) }
    dend_51 { pt3dadd( 195.879, -99.6408, 48.549, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -170.127, -93.2891, 27.3217, 0.34 ) }
    dend_40 { pt3dadd( -171.814, -93.6092, 27.3222, 0.34 ) }
    dend_40 { pt3dadd( -175.163, -94.6979, 27.0128, 0.34 ) }
    dend_40 { pt3dadd( -176.448, -95.2497, 26.7901, 2.04 ) }
    dend_40 { pt3dadd( -177.698, -95.8523, 26.531, 1.13 ) }
    dend_40 { pt3dadd( -179.714, -96.9698, 26.1404, 0.79 ) }
    dend_40 { pt3dadd( -181.002, -97.8549, 25.7078, 0.57 ) }
    dend_40 { pt3dadd( -183.136, -99.5411, 24.6858, 0.57 ) }
    dend_40 { pt3dadd( -187.415, -103.217, 22.163, 0.57 ) }
    dend_40 { pt3dadd( -189.427, -104.754, 21.0921, 0.57 ) }
    dend_40 { pt3dadd( -192.712, -107.018, 19.4962, 0.57 ) }
    dend_40 { pt3dadd( -198.76, -110.776, 16.7988, 0.57 ) }
    dend_40 { pt3dadd( -202.167, -112.658, 15.2716, 0.57 ) }
    dend_40 { pt3dadd( -203.781, -113.446, 14.5487, 0.57 ) }
    dend_40 { pt3dadd( -210.463, -116.339, 11.6692, 0.57 ) }
    dend_40 { pt3dadd( -212.449, -117.122, 10.8704, 0.57 ) }
    dend_40 { pt3dadd( -214.364, -117.833, 10.2513, 0.57 ) }
    dend_40 { pt3dadd( -217.49, -119.038, 9.49868, 0.57 ) }
    dend_40 { pt3dadd( -220.733, -120.418, 8.86775, 0.57 ) }
    dend_40 { pt3dadd( -222.933, -121.422, 8.52662, 0.57 ) }
    dend_40 { pt3dadd( -225.657, -122.871, 8.19215, 0.57 ) }
    dend_40 { pt3dadd( -232.568, -126.638, 7.66094, 0.57 ) }
    dend_40 { pt3dadd( -236.218, -128.622, 7.47133, 0.57 ) }
    dend_40 { pt3dadd( -241.093, -131.293, 7.29758, 0.57 ) }
    dend_40 { pt3dadd( -244.894, -133.382, 7.1641, 0.57 ) }
    dend_40 { pt3dadd( -248.759, -135.462, 6.95892, 0.57 ) }
    dend_40 { pt3dadd( -251.39, -136.892, 6.83211, 0.57 ) }
    dend_40 { pt3dadd( -253.941, -138.329, 6.62745, 0.57 ) }
    dend_40 { pt3dadd( -257.118, -140.109, 6.38481, 0.57 ) }
    dend_40 { pt3dadd( -258.884, -141.136, 6.15846, 0.57 ) }
    dend_40 { pt3dadd( -260.87, -142.249, 5.8746, 0.57 ) }
    dend_40 { pt3dadd( -264.87, -144.395, 5.31611, 0.57 ) }
    dend_40 { pt3dadd( -268.573, -146.536, 4.66258, 0.57 ) }
    dend_40 { pt3dadd( -271.145, -148.125, 4.09083, 0.57 ) }
    dend_40 { pt3dadd( -274.276, -150.157, 3.23222, 0.57 ) }
    dend_40 { pt3dadd( -276.783, -151.908, 2.41898, 0.57 ) }
    dend_40 { pt3dadd( -278.434, -153.138, 1.78724, 0.57 ) }
    dend_40 { pt3dadd( -281.299, -155.583, 0.129305, 0.57 ) }
    dend_40 { pt3dadd( -283.337, -157.492, -1.32017, 0.57 ) }
    dend_40 { pt3dadd( -285.404, -159.752, -3.40502, 0.57 ) }
    dend_40 { pt3dadd( -286.923, -161.802, -5.59228, 0.57 ) }
    dend_40 { pt3dadd( -288.346, -164.011, -8.21591, 0.57 ) }
    dend_40 { pt3dadd( -290.304, -167.443, -12.8487, 0.57 ) }
    dend_40 { pt3dadd( -291.04, -168.669, -14.6179, 0.57 ) }
    dend_40 { pt3dadd( -293.615, -172.699, -20.8152, 0.57 ) }
    dend_40 { pt3dadd( -295.463, -175.502, -25.3322, 0.57 ) }
    dend_40 { pt3dadd( -296.11, -176.435, -26.7779, 0.57 ) }
    dend_40 { pt3dadd( -298.158, -179.103, -30.3858, 0.57 ) }
    dend_40 { pt3dadd( -301.24, -182.343, -33.217, 0.57 ) }
    dend_40 { pt3dadd( -303.576, -184.58, -34.327, 0.57 ) }
    dend_40 { pt3dadd( -304.567, -185.421, -34.4544, 0.57 ) }
    dend_40 { pt3dadd( -306.943, -187.359, -34.5065, 0.57 ) }
    dend_40 { pt3dadd( -308.313, -188.496, -34.5363, 0.57 ) }
    dend_40 { pt3dadd( -312.538, -192.436, -34.7006, 0.57 ) }
    dend_40 { pt3dadd( -315.021, -195.306, -35.2134, 0.57 ) }
    dend_40 { pt3dadd( -316.076, -196.827, -35.7033, 0.45 ) }
    dend_40 { pt3dadd( -316.927, -198.313, -36.2947, 0.45 ) }
    dend_40 { pt3dadd( -317.927, -200.893, -37.5306, 0.45 ) }
    dend_40 { pt3dadd( -318.558, -204.633, -39.5628, 0.45 ) }
    dend_40 { pt3dadd( -318.545, -207.783, -41.4218, 0.45 ) }
    dend_40 { pt3dadd( -318.146, -212.832, -44.4067, 0.45 ) }
    dend_40 { pt3dadd( -317.863, -215.502, -45.9501, 0.45 ) }
    dend_40 { pt3dadd( -317.476, -219.435, -47.9648, 0.45 ) }
    dend_40 { pt3dadd( -317.164, -223.776, -49.866, 0.45 ) }
    dend_40 { pt3dadd( -317.238, -226.929, -51.0436, 0.45 ) }
    dend_40 { pt3dadd( -317.391, -228.141, -51.3876, 0.45 ) }
    dend_40 { pt3dadd( -317.938, -230.191, -51.7958, 0.45 ) }
    dend_40 { pt3dadd( -319.477, -234.214, -52.5164, 0.45 ) }
    dend_40 { pt3dadd( -320.86, -236.847, -52.8588, 0.45 ) }
    dend_40 { pt3dadd( -323.074, -240.254, -53.226, 0.45 ) }
    dend_40 { pt3dadd( -325.429, -243.152, -53.3523, 0.45 ) }
    dend_40 { pt3dadd( -327.981, -245.835, -53.3615, 0.45 ) }
    dend_40 { pt3dadd( -329.816, -247.392, -53.2535, 0.45 ) }
    dend_40 { pt3dadd( -331.236, -248.315, -53.0272, 0.45 ) }
    dend_40 { pt3dadd( -332.909, -249.173, -52.535, 0.45 ) }
    dend_40 { pt3dadd( -338.767, -252.144, -50.3341, 0.45 ) }
    dend_40 { pt3dadd( -339.961, -252.766, -49.8596, 0.45 ) }
    dend_40 { pt3dadd( -342.158, -253.834, -48.6767, 0.45 ) }
    dend_40 { pt3dadd( -346.2, -255.943, -46.2029, 0.45 ) }
    dend_40 { pt3dadd( -349.699, -257.991, -43.824, 0.45 ) }
    dend_40 { pt3dadd( -353.845, -260.87, -40.7784, 0.45 ) }
    dend_40 { pt3dadd( -355.793, -262.564, -39.3483, 0.45 ) }
    dend_40 { pt3dadd( -364.94, -271.231, -33.282, 0.45 ) }
    dend_40 { pt3dadd( -367.194, -273.632, -31.9603, 0.45 ) }
    dend_40 { pt3dadd( -369.704, -277.051, -30.9662, 0.45 ) }
    dend_40 { pt3dadd( -372.752, -282.157, -30.3715, 0.45 ) }
    dend_40 { pt3dadd( -376.815, -290.222, -30.2235, 0.45 ) }
    dend_40 { pt3dadd( -379.701, -297.089, -30.6346, 0.45 ) }
    dend_40 { pt3dadd( -381.83, -303.441, -31.6024, 0.45 ) }
    dend_40 { pt3dadd( -386.23, -318.141, -34.0917, 0.45 ) }
    dend_40 { pt3dadd( -386.799, -320.354, -34.5235, 0.45 ) }
    dend_40 { pt3dadd( -387.942, -325.907, -35.6058, 0.45 ) }
    dend_40 { pt3dadd( -388.319, -329.622, -36.4509, 0.45 ) }
    dend_40 { pt3dadd( -388.555, -334.89, -37.5896, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -388.681, -338.932, -38.3972, 0.45 ) }
    dend_40 { pt3dadd( -388.932, -341.03, -38.6647, 0.45 ) }
    dend_40 { pt3dadd( -389.4, -343.967, -39.1145, 0.45 ) }
    dend_40 { pt3dadd( -391.903, -354.627, -40.691, 0.45 ) }
    dend_40 { pt3dadd( -393.906, -360.028, -40.954, 0.45 ) }
    dend_40 { pt3dadd( -394.966, -362.065, -40.8074, 0.45 ) }
    dend_40 { pt3dadd( -399.335, -369.065, -39.8301, 0.45 ) }
    dend_40 { pt3dadd( -401.687, -372.349, -39.1562, 0.45 ) }
    dend_40 { pt3dadd( -405.755, -377.313, -38.0271, 0.45 ) }
    dend_40 { pt3dadd( -411.081, -382.703, -36.1616, 0.45 ) }
    dend_40 { pt3dadd( -413.322, -385.156, -35.5142, 0.45 ) }
    dend_40 { pt3dadd( -415.951, -388.78, -34.791, 0.45 ) }
    dend_40 { pt3dadd( -416.685, -390.52, -34.5279, 0.45 ) }
    dend_40 { pt3dadd( -417.916, -397.006, -33.7896, 0.45 ) }
    dend_40 { pt3dadd( -418.157, -404.935, -33.3507, 0.45 ) }
    dend_40 { pt3dadd( -416.872, -417.651, -33.1264, 0.45 ) }
    dend_40 { pt3dadd( -415.091, -426.225, -32.6787, 0.45 ) }
    dend_40 { pt3dadd( -413.495, -431.24, -32.1119, 0.45 ) }
    dend_40 { pt3dadd( -413.099, -432.171, -31.9756, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -170.127, -93.2891, 27.3217, 0.34 ) }
    dend_39 { pt3dadd( -169.276, -91.5382, 29.4896, 0.34 ) }
    dend_39 { pt3dadd( -168.666, -90.2833, 31.0433, 0.34 ) }
    dend_39 { pt3dadd( -166.304, -85.421, 37.0636, 0.34 ) }
    dend_39 { pt3dadd( -165.653, -84.0799, 38.724, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -68.3478, -164.572, 47.9204, 0.57 ) }
    dend_37 { pt3dadd( -70.1395, -165.097, 48.5574, 0.57 ) }
    dend_37 { pt3dadd( -73.0997, -166.187, 49.016, 0.57 ) }
    dend_37 { pt3dadd( -74.7278, -166.917, 49.1108, 0.57 ) }
    dend_37 { pt3dadd( -76.9138, -168.058, 48.8419, 0.57 ) }
    dend_37 { pt3dadd( -78.9811, -169.265, 48.4656, 0.57 ) }
    dend_37 { pt3dadd( -82.688, -171.505, 47.7101, 0.57 ) }
    dend_37 { pt3dadd( -84.7333, -172.829, 47.1683, 0.57 ) }
    dend_37 { pt3dadd( -87.0479, -174.387, 46.4517, 0.57 ) }
    dend_37 { pt3dadd( -91.2299, -177.217, 45.1831, 0.57 ) }
    dend_37 { pt3dadd( -95.9042, -180.299, 43.7874, 0.57 ) }
    dend_37 { pt3dadd( -99.0545, -182.336, 42.9992, 0.57 ) }
    dend_37 { pt3dadd( -100.155, -183.024, 42.7977, 2.15 ) }
    dend_37 { pt3dadd( -101.148, -183.609, 42.6698, 1.36 ) }
    dend_37 { pt3dadd( -103.247, -184.748, 42.6517, 0.68 ) }
    dend_37 { pt3dadd( -104.401, -185.318, 42.8512, 0.68 ) }
    dend_37 { pt3dadd( -105.743, -185.916, 43.2615, 0.57 ) }
    dend_37 { pt3dadd( -106.499, -186.239, 43.5886, 0.57 ) }
    dend_37 { pt3dadd( -108.489, -187.091, 44.549, 0.57 ) }
    dend_37 { pt3dadd( -110.693, -188.004, 45.6622, 0.57 ) }
    dend_37 { pt3dadd( -112.153, -188.62, 46.3928, 0.57 ) }
    dend_37 { pt3dadd( -113.968, -189.463, 47.1548, 0.57 ) }
    dend_37 { pt3dadd( -115.721, -190.314, 47.6303, 0.57 ) }
    dend_37 { pt3dadd( -116.411, -190.672, 47.7428, 0.57 ) }
    dend_37 { pt3dadd( -117.443, -191.25, 47.79, 0.57 ) }
    dend_37 { pt3dadd( -118.841, -192.06, 47.7509, 0.57 ) }
    dend_37 { pt3dadd( -122.964, -194.439, 47.5156, 0.57 ) }
    dend_37 { pt3dadd( -125.557, -195.947, 47.2149, 0.57 ) }
    dend_37 { pt3dadd( -127.744, -197.228, 46.9059, 0.57 ) }
    dend_37 { pt3dadd( -130.473, -198.754, 46.5035, 0.57 ) }
    dend_37 { pt3dadd( -133.998, -200.649, 46.077, 0.57 ) }
    dend_37 { pt3dadd( -138.546, -202.864, 45.6498, 0.57 ) }
    dend_37 { pt3dadd( -140.402, -203.685, 45.4577, 1.7 ) }
    dend_37 { pt3dadd( -142.069, -204.382, 45.2841, 1.7 ) }
    dend_37 { pt3dadd( -143.689, -205.013, 45.0215, 0.68 ) }
    dend_37 { pt3dadd( -146.623, -206.052, 44.4446, 0.68 ) }
    dend_37 { pt3dadd( -148.447, -206.712, 44.0282, 0.68 ) }
    dend_37 { pt3dadd( -151.329, -207.825, 43.3675, 0.68 ) }
    dend_37 { pt3dadd( -152.125, -208.167, 43.1705, 1.7 ) }
    dend_37 { pt3dadd( -153.407, -208.831, 42.7933, 1.7 ) }
    dend_37 { pt3dadd( -154.272, -209.357, 42.5106, 1.7 ) }
    dend_37 { pt3dadd( -155.298, -210.086, 42.1547, 0.68 ) }
    dend_37 { pt3dadd( -157.755, -212.059, 41.3649, 0.68 ) }
    dend_37 { pt3dadd( -160.16, -214.12, 40.6997, 0.68 ) }
    dend_37 { pt3dadd( -162.103, -215.884, 40.2759, 0.68 ) }
    dend_37 { pt3dadd( -163.02, -216.771, 40.1203, 0.68 ) }
    dend_37 { pt3dadd( -165.139, -218.935, 39.8676, 0.68 ) }
    dend_37 { pt3dadd( -167.098, -221.01, 39.7538, 0.68 ) }
    dend_37 { pt3dadd( -168.057, -222.081, 39.7904, 0.68 ) }
    dend_37 { pt3dadd( -170.342, -224.694, 40.1214, 0.68 ) }
    dend_37 { pt3dadd( -171.0, -225.467, 40.2477, 0.68 ) }
    dend_37 { pt3dadd( -171.789, -226.412, 40.4211, 1.02 ) }
    dend_37 { pt3dadd( -172.591, -227.397, 40.5942, 0.45 ) }
    dend_37 { pt3dadd( -173.752, -228.972, 40.8004, 0.45 ) }
    dend_37 { pt3dadd( -174.085, -229.46, 40.8207, 0.45 ) }
    dend_37 { pt3dadd( -175.07, -230.931, 40.805, 0.45 ) }
    dend_37 { pt3dadd( -176.236, -232.667, 40.798, 0.45 ) }
    dend_37 { pt3dadd( -177.547, -234.657, 40.7938, 0.45 ) }
    dend_37 { pt3dadd( -179.038, -236.962, 40.7848, 0.45 ) }
    dend_37 { pt3dadd( -180.361, -239.041, 40.8058, 0.45 ) }
    dend_37 { pt3dadd( -182.434, -242.278, 40.8402, 0.45 ) }
    dend_37 { pt3dadd( -183.046, -243.272, 40.8542, 0.45 ) }
    dend_37 { pt3dadd( -183.772, -244.516, 40.8749, 1.47 ) }
    dend_37 { pt3dadd( -184.02, -244.945, 40.8832, 1.47 ) }
    dend_37 { pt3dadd( -185.221, -247.019, 40.8339, 0.68 ) }
    dend_37 { pt3dadd( -186.651, -249.505, 40.7161, 0.57 ) }
    dend_37 { pt3dadd( -187.916, -251.754, 40.6474, 0.57 ) }
    dend_37 { pt3dadd( -189.13, -253.86, 40.7, 0.57 ) }
    dend_37 { pt3dadd( -189.484, -254.457, 40.7381, 0.57 ) }
    dend_37 { pt3dadd( -190.598, -256.298, 41.0114, 0.57 ) }
    dend_37 { pt3dadd( -191.863, -258.336, 41.6417, 0.57 ) }
    dend_37 { pt3dadd( -192.909, -260.128, 42.409, 1.7 ) }
    dend_37 { pt3dadd( -194.508, -263.011, 43.7648, 0.68 ) }
    dend_37 { pt3dadd( -195.254, -264.471, 44.4779, 0.68 ) }
    dend_37 { pt3dadd( -196.568, -267.204, 45.7825, 0.68 ) }
    dend_37 { pt3dadd( -198.464, -271.217, 47.5561, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -199.814, -273.987, 48.5723, 0.68 ) }
    dend_37 { pt3dadd( -200.351, -275.026, 48.8647, 2.15 ) }
    dend_37 { pt3dadd( -200.695, -275.658, 48.9945, 2.15 ) }
    dend_37 { pt3dadd( -201.893, -277.751, 49.2003, 0.68 ) }
    dend_37 { pt3dadd( -203.382, -280.118, 49.2604, 0.68 ) }
    dend_37 { pt3dadd( -204.386, -281.616, 49.2948, 0.68 ) }
    dend_37 { pt3dadd( -205.833, -283.631, 49.4597, 0.68 ) }
    dend_37 { pt3dadd( -207.371, -285.787, 49.6275, 0.68 ) }
    dend_37 { pt3dadd( -208.828, -287.918, 49.7828, 0.68 ) }
    dend_37 { pt3dadd( -210.954, -291.296, 50.0139, 0.68 ) }
    dend_37 { pt3dadd( -212.23, -293.551, 50.1544, 0.68 ) }
    dend_37 { pt3dadd( -213.153, -295.29, 50.2003, 0.68 ) }
    dend_37 { pt3dadd( -214.479, -297.936, 50.1483, 0.68 ) }
    dend_37 { pt3dadd( -214.98, -299.001, 50.0799, 0.68 ) }
    dend_37 { pt3dadd( -216.178, -301.733, 49.7786, 0.68 ) }
    dend_37 { pt3dadd( -216.9, -303.497, 49.4753, 0.68 ) }
    dend_37 { pt3dadd( -217.81, -305.707, 49.0793, 0.68 ) }
    dend_37 { pt3dadd( -218.737, -307.814, 48.7793, 0.68 ) }
    dend_37 { pt3dadd( -219.561, -309.491, 48.6339, 0.68 ) }
    dend_37 { pt3dadd( -220.129, -310.551, 48.5401, 0.68 ) }
    dend_37 { pt3dadd( -220.801, -311.701, 48.5074, 0.68 ) }
    dend_37 { pt3dadd( -221.056, -312.116, 48.5232, 0.68 ) }
    dend_37 { pt3dadd( -222.269, -314.043, 48.6956, 0.68 ) }
    dend_37 { pt3dadd( -223.655, -316.271, 48.9928, 0.68 ) }
    dend_37 { pt3dadd( -224.616, -317.902, 49.2439, 0.68 ) }
    dend_37 { pt3dadd( -225.905, -320.202, 49.5991, 0.68 ) }
    dend_37 { pt3dadd( -227.082, -322.422, 49.9981, 0.68 ) }
    dend_37 { pt3dadd( -227.383, -323.021, 50.147, 0.68 ) }
    dend_37 { pt3dadd( -228.103, -324.529, 50.5759, 0.57 ) }
    dend_37 { pt3dadd( -228.741, -325.889, 50.9652, 0.57 ) }
    dend_37 { pt3dadd( -229.92, -328.423, 51.6925, 0.57 ) }
    dend_37 { pt3dadd( -230.984, -330.815, 52.4635, 0.57 ) }
    dend_37 { pt3dadd( -232.182, -333.426, 53.4435, 0.57 ) }
    dend_37 { pt3dadd( -233.399, -336.038, 54.4375, 0.57 ) }
    dend_37 { pt3dadd( -234.55, -338.42, 55.2337, 0.57 ) }
    dend_37 { pt3dadd( -235.356, -340.087, 55.658, 1.47 ) }
    dend_37 { pt3dadd( -236.987, -343.468, 56.2968, 0.45 ) }
    dend_37 { pt3dadd( -237.795, -345.104, 56.4606, 0.45 ) }
    dend_37 { pt3dadd( -239.442, -348.568, 56.5546, 0.45 ) }
    dend_37 { pt3dadd( -240.698, -351.442, 56.644, 0.45 ) }
    dend_37 { pt3dadd( -242.043, -354.805, 56.702, 0.45 ) }
    dend_37 { pt3dadd( -242.823, -357.623, 56.7854, 0.45 ) }
    dend_37 { pt3dadd( -243.232, -356.572, 55.3954, 0.45 ) }
    dend_37 { pt3dadd( -243.61, -353.628, 53.2203, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -68.3478, -164.572, 47.9204, 0.57 ) }
    dend_34 { pt3dadd( -69.4246, -165.786, 47.9908, 0.57 ) }
    dend_34 { pt3dadd( -70.1417, -166.593, 48.0359, 0.57 ) }
    dend_34 { pt3dadd( -71.1296, -167.735, 48.0935, 0.57 ) }
    dend_34 { pt3dadd( -72.6222, -169.461, 48.1805, 0.57 ) }
    dend_34 { pt3dadd( -74.4056, -171.523, 48.2844, 0.57 ) }
    dend_34 { pt3dadd( -75.5112, -172.801, 48.3489, 2.15 ) }
    dend_34 { pt3dadd( -76.5012, -173.918, 48.3951, 2.72 ) }
    dend_34 { pt3dadd( -77.2541, -174.8, 48.446, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 83.1613, -114.984, 32.4691, 0.45 ) }
    dend_54 { pt3dadd( 89.1338, -115.725, 32.8927, 0.45 ) }
    dend_54 { pt3dadd( 90.5415, -115.896, 33.1069, 0.45 ) }
    dend_54 { pt3dadd( 93.1234, -116.054, 33.6259, 0.45 ) }
    dend_54 { pt3dadd( 96.5268, -116.199, 34.3746, 0.45 ) }
    dend_54 { pt3dadd( 99.6345, -116.344, 35.0751, 0.45 ) }
    dend_54 { pt3dadd( 103.702, -116.449, 35.9903, 0.45 ) }
    dend_54 { pt3dadd( 105.11, -116.435, 36.3946, 0.45 ) }
    dend_54 { pt3dadd( 109.119, -116.167, 37.4268, 0.45 ) }
    dend_54 { pt3dadd( 112.258, -115.748, 38.1381, 0.45 ) }
    dend_54 { pt3dadd( 114.749, -115.211, 38.5959, 0.45 ) }
    dend_54 { pt3dadd( 118.284, -114.07, 38.905, 0.45 ) }
    dend_54 { pt3dadd( 120.631, -113.086, 38.9061, 0.45 ) }
    dend_54 { pt3dadd( 123.2, -111.865, 38.8, 0.45 ) }
    dend_54 { pt3dadd( 125.859, -110.515, 38.4518, 0.45 ) }
    dend_54 { pt3dadd( 128.85, -108.871, 37.7828, 0.45 ) }
    dend_54 { pt3dadd( 133.078, -106.394, 36.6594, 0.45 ) }
    dend_54 { pt3dadd( 134.808, -105.373, 36.1075, 0.45 ) }
    dend_54 { pt3dadd( 136.652, -104.304, 35.4427, 0.45 ) }
    dend_54 { pt3dadd( 141.17, -101.859, 33.6745, 0.45 ) }
    dend_54 { pt3dadd( 143.119, -100.93, 32.746, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 83.1613, -114.984, 32.4691, 0.34 ) }
    dend_53 { pt3dadd( 83.7004, -118.659, 30.6102, 0.34 ) }
    dend_53 { pt3dadd( 83.8347, -120.062, 29.8083, 0.34 ) }
    dend_53 { pt3dadd( 83.9822, -122.403, 28.4049, 0.34 ) }
    dend_53 { pt3dadd( 84.2005, -126.668, 25.797, 0.34 ) }
    dend_53 { pt3dadd( 84.3095, -130.483, 23.1971, 0.34 ) }
    dend_53 { pt3dadd( 84.2765, -134.41, 20.4082, 0.34 ) }
    dend_53 { pt3dadd( 83.762, -138.357, 17.3658, 0.34 ) }
    dend_53 { pt3dadd( 83.6389, -138.858, 16.9516, 0.34 ) }
    dend_53 { pt3dadd( 83.5341, -139.128, 16.6956, 1.58 ) }
    dend_53 { pt3dadd( 81.9043, -142.105, 13.7738, 0.45 ) }
    dend_53 { pt3dadd( 81.1454, -143.406, 12.3806, 0.45 ) }
    dend_53 { pt3dadd( 79.3064, -146.647, 8.68614, 0.45 ) }
    dend_53 { pt3dadd( 78.7308, -147.786, 7.40548, 0.45 ) }
    dend_53 { pt3dadd( 77.4182, -150.886, 4.03734, 0.45 ) }
    dend_53 { pt3dadd( 77.0044, -152.03, 2.88422, 0.45 ) }
    dend_53 { pt3dadd( 76.0602, -155.381, -0.155642, 0.45 ) }
    dend_53 { pt3dadd( 75.7468, -157.006, -1.63254, 0.45 ) }
    dend_53 { pt3dadd( 75.3612, -160.271, -4.34237, 0.45 ) }
    dend_53 { pt3dadd( 75.1497, -162.376, -5.98273, 0.45 ) }
    dend_53 { pt3dadd( 74.8792, -165.253, -7.9982, 0.45 ) }
    dend_53 { pt3dadd( 74.5514, -169.621, -11.0832, 0.45 ) }
    dend_53 { pt3dadd( 74.2979, -172.759, -13.1974, 0.45 ) }
    dend_53 { pt3dadd( 74.0112, -176.813, -15.8892, 0.45 ) }
    dend_53 { pt3dadd( 73.7056, -180.136, -18.007, 0.45 ) }
    dend_53 { pt3dadd( 73.4501, -183.012, -19.8658, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 73.1343, -186.307, -22.0325, 0.45 ) }
    dend_53 { pt3dadd( 72.7498, -189.317, -23.9598, 0.45 ) }
    dend_53 { pt3dadd( 72.39, -191.157, -25.1069, 0.45 ) }
    dend_53 { pt3dadd( 71.7578, -194.011, -27.1837, 0.45 ) }
    dend_53 { pt3dadd( 71.5187, -195.036, -27.9502, 0.45 ) }
    dend_53 { pt3dadd( 70.7934, -197.89, -30.1589, 0.45 ) }
    dend_53 { pt3dadd( 70.3304, -199.583, -31.438, 0.45 ) }
    dend_53 { pt3dadd( 69.6894, -201.973, -33.3071, 0.45 ) }
    dend_53 { pt3dadd( 68.6965, -206.337, -37.1813, 0.45 ) }
    dend_53 { pt3dadd( 68.2472, -208.903, -39.5989, 0.45 ) }
    dend_53 { pt3dadd( 68.0439, -210.387, -40.9962, 0.45 ) }
    dend_53 { pt3dadd( 67.9495, -211.681, -42.136, 0.45 ) }
    dend_53 { pt3dadd( 67.9307, -212.743, -43.0862, 0.45 ) }
    dend_53 { pt3dadd( 67.9234, -217.294, -46.9984, 0.45 ) }
    dend_53 { pt3dadd( 67.8868, -219.441, -48.7328, 0.45 ) }
    dend_53 { pt3dadd( 67.8956, -220.708, -49.7957, 0.45 ) }
    dend_53 { pt3dadd( 67.9185, -222.959, -51.6287, 0.45 ) }
    dend_53 { pt3dadd( 68.1342, -226.447, -54.9778, 0.45 ) }
    dend_53 { pt3dadd( 68.2615, -228.072, -56.5933, 0.45 ) }
    dend_53 { pt3dadd( 68.3439, -229.277, -57.7152, 0.45 ) }
    dend_53 { pt3dadd( 68.4279, -230.649, -58.9828, 0.45 ) }
    dend_53 { pt3dadd( 68.6006, -233.415, -61.5723, 0.45 ) }
    dend_53 { pt3dadd( 68.8129, -240.27, -66.8338, 0.45 ) }
    dend_53 { pt3dadd( 68.7346, -243.286, -68.3694, 0.45 ) }
    dend_53 { pt3dadd( 68.4823, -246.733, -69.5088, 0.45 ) }
    dend_53 { pt3dadd( 67.8074, -250.766, -70.0373, 0.45 ) }
    dend_53 { pt3dadd( 67.3307, -252.573, -69.9886, 0.45 ) }
    dend_53 { pt3dadd( 63.3618, -263.611, -68.1712, 0.45 ) }
    dend_53 { pt3dadd( 61.945, -266.861, -67.3305, 0.45 ) }
    dend_53 { pt3dadd( 61.6625, -267.43, -67.1741, 0.45 ) }
    dend_53 { pt3dadd( 59.8648, -270.729, -66.3831, 0.45 ) }
    dend_53 { pt3dadd( 58.4811, -273.254, -65.9894, 0.45 ) }
    dend_53 { pt3dadd( 57.0578, -276.005, -66.0681, 0.45 ) }
    dend_53 { pt3dadd( 56.816, -276.537, -66.2413, 0.45 ) }
    dend_53 { pt3dadd( 56.1566, -278.246, -67.0346, 0.45 ) }
    dend_53 { pt3dadd( 55.2907, -280.971, -68.5163, 0.45 ) }
    dend_53 { pt3dadd( 54.7652, -283.059, -69.7801, 0.45 ) }
    dend_53 { pt3dadd( 54.0963, -286.212, -71.7538, 0.45 ) }
    dend_53 { pt3dadd( 53.4912, -289.578, -73.8689, 0.45 ) }
    dend_53 { pt3dadd( 52.657, -295.499, -77.2915, 0.45 ) }
    dend_53 { pt3dadd( 52.4494, -297.296, -78.2665, 0.45 ) }
    dend_53 { pt3dadd( 52.2613, -299.107, -79.2199, 0.45 ) }
    dend_53 { pt3dadd( 52.0461, -301.23, -80.2767, 0.45 ) }
    dend_53 { pt3dadd( 51.821, -303.64, -81.2831, 0.45 ) }
    dend_53 { pt3dadd( 51.5265, -308.708, -83.0523, 0.45 ) }
    dend_53 { pt3dadd( 51.4707, -310.032, -83.2919, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -77.2541, -174.8, 48.446, 0.45 ) }
    dend_36 { pt3dadd( -79.2869, -176.302, 48.4498, 0.45 ) }
    dend_36 { pt3dadd( -80.8865, -177.516, 48.467, 0.45 ) }
    dend_36 { pt3dadd( -82.3554, -178.644, 48.4899, 0.45 ) }
    dend_36 { pt3dadd( -84.5661, -180.436, 48.5408, 0.45 ) }
    dend_36 { pt3dadd( -85.8675, -181.474, 48.5896, 0.45 ) }
    dend_36 { pt3dadd( -87.8424, -183.051, 48.7399, 0.45 ) }
    dend_36 { pt3dadd( -89.8718, -184.779, 48.9829, 0.45 ) }
    dend_36 { pt3dadd( -90.4048, -185.232, 49.0584, 1.47 ) }
    dend_36 { pt3dadd( -92.3557, -186.831, 49.4152, 0.45 ) }
    dend_36 { pt3dadd( -93.5918, -187.856, 49.6891, 0.45 ) }
    dend_36 { pt3dadd( -94.8126, -188.919, 50.0718, 0.45 ) }
    dend_36 { pt3dadd( -95.6701, -189.737, 50.4054, 0.45 ) }
    dend_36 { pt3dadd( -97.431, -191.59, 51.2239, 0.45 ) }
    dend_36 { pt3dadd( -98.6507, -192.937, 51.8262, 0.79 ) }
    dend_36 { pt3dadd( -99.7691, -194.243, 52.3981, 0.79 ) }
    dend_36 { pt3dadd( -101.785, -196.787, 53.5094, 0.45 ) }
    dend_36 { pt3dadd( -103.297, -198.729, 54.3416, 0.45 ) }
    dend_36 { pt3dadd( -105.119, -201.216, 55.41, 0.45 ) }
    dend_36 { pt3dadd( -105.692, -202.071, 55.8223, 0.45 ) }
    dend_36 { pt3dadd( -106.225, -202.902, 56.2348, 1.92 ) }
    dend_36 { pt3dadd( -107.148, -204.469, 57.1596, 1.47 ) }
    dend_36 { pt3dadd( -107.887, -205.838, 58.0092, 0.57 ) }
    dend_36 { pt3dadd( -108.542, -207.165, 58.8728, 0.57 ) }
    dend_36 { pt3dadd( -109.563, -209.455, 60.5139, 0.57 ) }
    dend_36 { pt3dadd( -110.313, -211.26, 61.7809, 0.57 ) }
    dend_36 { pt3dadd( -111.976, -215.21, 64.4419, 0.57 ) }
    dend_36 { pt3dadd( -112.341, -216.071, 64.9585, 0.57 ) }
    dend_36 { pt3dadd( -113.136, -217.825, 65.8661, 0.57 ) }
    dend_36 { pt3dadd( -114.688, -220.87, 67.0485, 0.57 ) }
    dend_36 { pt3dadd( -115.631, -222.567, 67.4475, 0.57 ) }
    dend_36 { pt3dadd( -116.597, -224.182, 67.5178, 0.57 ) }
    dend_36 { pt3dadd( -117.886, -226.23, 67.4362, 0.57 ) }
    dend_36 { pt3dadd( -119.715, -229.099, 67.4622, 0.57 ) }
    dend_36 { pt3dadd( -121.648, -232.062, 67.5926, 0.57 ) }
    dend_36 { pt3dadd( -123.391, -234.723, 67.7056, 0.57 ) }
    dend_36 { pt3dadd( -126.301, -239.141, 68.0012, 0.57 ) }
    dend_36 { pt3dadd( -128.595, -242.373, 68.1365, 0.57 ) }
    dend_36 { pt3dadd( -130.864, -245.268, 68.2029, 0.23 ) }
    dend_36 { pt3dadd( -132.224, -246.905, 68.2687, 0.23 ) }
    dend_36 { pt3dadd( -133.751, -248.623, 68.3716, 0.23 ) }
    dend_36 { pt3dadd( -135.71, -250.744, 68.499, 0.23 ) }
    dend_36 { pt3dadd( -138.363, -253.506, 68.6817, 0.23 ) }
    dend_36 { pt3dadd( -139.472, -254.52, 68.4974, 0.23 ) }
    dend_36 { pt3dadd( -141.007, -255.762, 68.1518, 1.7 ) }
    dend_36 { pt3dadd( -142.811, -257.052, 67.899, 0.68 ) }
    dend_36 { pt3dadd( -144.515, -258.088, 67.8135, 0.45 ) }
    dend_36 { pt3dadd( -145.479, -258.6, 67.9195, 0.45 ) }
    dend_36 { pt3dadd( -149.386, -260.173, 69.1018, 0.45 ) }
    dend_36 { pt3dadd( -152.359, -260.901, 70.2227, 0.45 ) }
    dend_36 { pt3dadd( -154.373, -261.169, 71.0428, 0.45 ) }
    dend_36 { pt3dadd( -155.672, -261.283, 71.683, 0.45 ) }
    dend_36 { pt3dadd( -156.969, -261.439, 72.2726, 0.45 ) }
    dend_36 { pt3dadd( -159.247, -262.075, 73.1583, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -159.577, -262.219, 73.2669, 0.45 ) }
    dend_36 { pt3dadd( -160.378, -262.637, 73.3768, 1.92 ) }
    dend_36 { pt3dadd( -162.394, -263.899, 73.4868, 0.57 ) }
    dend_36 { pt3dadd( -164.735, -265.59, 73.5467, 0.57 ) }
    dend_36 { pt3dadd( -166.838, -267.263, 73.4174, 0.45 ) }
    dend_36 { pt3dadd( -167.964, -268.231, 73.3001, 0.45 ) }
    dend_36 { pt3dadd( -170.199, -270.18, 73.0818, 0.45 ) }
    dend_36 { pt3dadd( -171.819, -271.644, 72.9482, 0.57 ) }
    dend_36 { pt3dadd( -172.778, -272.538, 72.8685, 0.57 ) }
    dend_36 { pt3dadd( -175.113, -274.777, 72.6991, 0.57 ) }
    dend_36 { pt3dadd( -178.271, -277.736, 72.4165, 0.57 ) }
    dend_36 { pt3dadd( -179.696, -279.081, 72.2777, 0.57 ) }
    dend_36 { pt3dadd( -182.842, -282.073, 71.9575, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -77.2541, -174.8, 48.446, 0.45 ) }
    dend_35 { pt3dadd( -77.5076, -176.997, 48.4906, 0.45 ) }
    dend_35 { pt3dadd( -77.6058, -177.958, 48.4975, 0.45 ) }
    dend_35 { pt3dadd( -77.8897, -181.322, 48.7503, 0.45 ) }
    dend_35 { pt3dadd( -78.1761, -184.479, 49.1015, 0.45 ) }
    dend_35 { pt3dadd( -78.4538, -187.045, 49.357, 0.45 ) }
    dend_35 { pt3dadd( -78.4638, -187.14, 49.3631, 1.81 ) }
    dend_35 { pt3dadd( -78.5893, -188.358, 49.4174, 1.7 ) }
    dend_35 { pt3dadd( -78.9378, -191.462, 49.5466, 0.68 ) }
    dend_35 { pt3dadd( -79.1171, -193.243, 49.5812, 0.68 ) }
    dend_35 { pt3dadd( -79.2868, -195.53, 49.679, 0.68 ) }
    dend_35 { pt3dadd( -79.4448, -198.273, 49.7991, 0.68 ) }
    dend_35 { pt3dadd( -79.5006, -199.916, 49.8214, 0.68 ) }
    dend_35 { pt3dadd( -79.5061, -202.146, 49.7786, 0.68 ) }
    dend_35 { pt3dadd( -79.4275, -204.375, 49.6499, 0.68 ) }
    dend_35 { pt3dadd( -79.243, -206.996, 49.5118, 0.68 ) }
    dend_35 { pt3dadd( -78.9673, -209.813, 49.3817, 0.68 ) }
    dend_35 { pt3dadd( -78.5915, -213.199, 49.1711, 0.68 ) }
    dend_35 { pt3dadd( -78.3811, -215.369, 48.8662, 0.68 ) }
    dend_35 { pt3dadd( -78.198, -217.599, 48.4028, 0.68 ) }
    dend_35 { pt3dadd( -78.1063, -219.155, 47.989, 0.68 ) }
    dend_35 { pt3dadd( -78.0746, -221.075, 47.3899, 0.68 ) }
    dend_35 { pt3dadd( -78.1231, -224.857, 46.1528, 0.68 ) }
    dend_35 { pt3dadd( -78.2364, -228.715, 44.9045, 0.57 ) }
    dend_35 { pt3dadd( -78.3003, -230.326, 44.3984, 0.57 ) }
    dend_35 { pt3dadd( -78.3964, -232.484, 43.7506, 0.57 ) }
    dend_35 { pt3dadd( -78.4935, -235.036, 42.9424, 0.57 ) }
    dend_35 { pt3dadd( -78.5761, -237.903, 42.0273, 0.57 ) }
    dend_35 { pt3dadd( -78.6211, -241.245, 41.0096, 0.57 ) }
    dend_35 { pt3dadd( -78.5626, -243.104, 40.5285, 0.57 ) }
    dend_35 { pt3dadd( -78.5014, -244.503, 40.1624, 0.57 ) }
    dend_35 { pt3dadd( -78.2786, -247.626, 39.4907, 0.57 ) }
    dend_35 { pt3dadd( -78.1919, -248.376, 39.3506, 0.57 ) }
    dend_35 { pt3dadd( -77.9822, -249.918, 39.1336, 0.57 ) }
    dend_35 { pt3dadd( -77.6215, -252.269, 39.0705, 0.57 ) }
    dend_35 { pt3dadd( -77.5021, -252.965, 39.087, 2.6 ) }
    dend_35 { pt3dadd( -77.0774, -255.407, 39.2281, 2.04 ) }
    dend_35 { pt3dadd( -76.5778, -258.618, 39.2535, 0.57 ) }
    dend_35 { pt3dadd( -76.3913, -259.946, 39.1294, 0.57 ) }
    dend_35 { pt3dadd( -75.9689, -262.856, 39.1933, 0.57 ) }
    dend_35 { pt3dadd( -75.6868, -264.959, 39.3665, 0.57 ) }
    dend_35 { pt3dadd( -75.3439, -267.47, 39.7357, 0.57 ) }
    dend_35 { pt3dadd( -74.8389, -271.449, 40.4449, 0.57 ) }
    dend_35 { pt3dadd( -74.5014, -274.615, 41.1736, 0.57 ) }
    dend_35 { pt3dadd( -73.7695, -283.397, 42.776, 0.57 ) }
    dend_35 { pt3dadd( -73.5134, -288.441, 43.4435, 0.57 ) }
    dend_35 { pt3dadd( -73.4441, -291.301, 43.7888, 0.57 ) }
    dend_35 { pt3dadd( -73.4472, -293.741, 43.981, 0.57 ) }
    dend_35 { pt3dadd( -73.4992, -295.194, 44.0299, 0.57 ) }
    dend_35 { pt3dadd( -74.077, -301.306, 43.176, 0.57 ) }
    dend_35 { pt3dadd( -74.4106, -303.903, 42.2546, 0.57 ) }
    dend_35 { pt3dadd( -74.5787, -305.027, 41.794, 0.57 ) }
    dend_35 { pt3dadd( -74.8786, -307.018, 40.9327, 0.45 ) }
    dend_35 { pt3dadd( -74.9947, -307.963, 40.5668, 0.45 ) }
    dend_35 { pt3dadd( -75.1101, -309.906, 40.0614, 0.45 ) }
    dend_35 { pt3dadd( -75.1347, -311.993, 39.9152, 0.45 ) }
    dend_35 { pt3dadd( -75.1249, -312.974, 39.8728, 0.45 ) }
    dend_35 { pt3dadd( -75.1143, -314.087, 39.8496, 0.45 ) }
    dend_35 { pt3dadd( -75.1141, -315.114, 39.8306, 0.45 ) }
    dend_35 { pt3dadd( -75.1165, -317.574, 39.7556, 0.45 ) }
    dend_35 { pt3dadd( -75.1344, -319.29, 39.7276, 0.45 ) }
    dend_35 { pt3dadd( -75.1874, -321.361, 39.6959, 0.45 ) }
    dend_35 { pt3dadd( -75.2328, -323.94, 39.633, 0.45 ) }
    dend_35 { pt3dadd( -75.2936, -326.14, 39.5497, 0.45 ) }
    dend_35 { pt3dadd( -75.3353, -326.977, 39.5169, 0.45 ) }
    dend_35 { pt3dadd( -75.4697, -329.141, 39.3953, 0.45 ) }
    dend_35 { pt3dadd( -75.7102, -332.842, 39.2061, 0.45 ) }
    dend_35 { pt3dadd( -75.9119, -335.817, 39.0708, 0.45 ) }
    dend_35 { pt3dadd( -76.1418, -338.916, 38.9645, 0.45 ) }
    dend_35 { pt3dadd( -76.3576, -341.709, 38.915, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 143.119, -100.93, 32.746, 0.45 ) }
    dend_62 { pt3dadd( 144.427, -101.493, 30.4511, 0.45 ) }
    dend_62 { pt3dadd( 145.535, -102.129, 28.6798, 0.45 ) }
    dend_62 { pt3dadd( 146.85, -102.964, 26.8064, 0.45 ) }
    dend_62 { pt3dadd( 147.986, -103.742, 25.0959, 0.45 ) }
    dend_62 { pt3dadd( 152.85, -107.408, 16.9664, 0.45 ) }
    dend_62 { pt3dadd( 155.716, -109.724, 11.9039, 0.45 ) }
    dend_62 { pt3dadd( 157.357, -111.071, 8.55044, 0.45 ) }
    dend_62 { pt3dadd( 157.983, -111.649, 7.10419, 0.45 ) }
    dend_62 { pt3dadd( 159.918, -113.75, 2.34097, 0.45 ) }
    dend_62 { pt3dadd( 161.194, -115.308, -0.752438, 0.45 ) }
    dend_62 { pt3dadd( 161.373, -115.589, -1.15186, 0.45 ) }
    dend_62 { pt3dadd( 162.879, -118.032, -4.25093, 0.45 ) }
    dend_62 { pt3dadd( 164.001, -119.747, -6.43727, 0.45 ) }
    dend_62 { pt3dadd( 165.092, -121.514, -8.18579, 0.45 ) }
    dend_62 { pt3dadd( 166.298, -123.309, -9.55128, 0.34 ) }
    dend_62 { pt3dadd( 167.662, -125.21, -10.7827, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 168.532, -126.403, -11.4738, 0.34 ) }
    dend_62 { pt3dadd( 169.213, -127.323, -11.9182, 0.34 ) }
    dend_62 { pt3dadd( 171.522, -130.258, -13.2624, 0.34 ) }
    dend_62 { pt3dadd( 174.383, -134.025, -15.0419, 0.34 ) }
    dend_62 { pt3dadd( 175.185, -135.193, -15.5017, 0.34 ) }
    dend_62 { pt3dadd( 175.789, -136.045, -15.9639, 0.34 ) }
    dend_62 { pt3dadd( 176.979, -137.708, -17.0261, 0.34 ) }
    dend_62 { pt3dadd( 177.635, -138.618, -17.6635, 0.34 ) }
    dend_62 { pt3dadd( 178.959, -140.418, -19.0545, 0.34 ) }
    dend_62 { pt3dadd( 180.072, -142.089, -20.1869, 0.34 ) }
    dend_62 { pt3dadd( 183.11, -146.425, -23.5422, 0.34 ) }
    dend_62 { pt3dadd( 184.466, -148.24, -25.1215, 0.34 ) }
    dend_62 { pt3dadd( 184.819, -148.687, -25.5601, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 143.119, -100.93, 32.746, 0.45 ) }
    dend_55 { pt3dadd( 145.961, -101.916, 33.0734, 0.45 ) }
    dend_55 { pt3dadd( 148.256, -102.982, 33.0776, 0.45 ) }
    dend_55 { pt3dadd( 151.009, -104.458, 32.9944, 0.45 ) }
    dend_55 { pt3dadd( 154.694, -106.812, 32.2568, 0.45 ) }
    dend_55 { pt3dadd( 157.22, -108.72, 31.535, 0.45 ) }
    dend_55 { pt3dadd( 160.863, -111.756, 30.3811, 0.45 ) }
    dend_55 { pt3dadd( 164.432, -115.322, 29.0038, 0.34 ) }
    dend_55 { pt3dadd( 165.909, -117.003, 28.3956, 0.34 ) }
    dend_55 { pt3dadd( 171.063, -123.307, 25.9558, 0.34 ) }
    dend_55 { pt3dadd( 174.162, -127.171, 24.3837, 0.34 ) }
    dend_55 { pt3dadd( 176.365, -129.934, 23.3483, 0.34 ) }
    dend_55 { pt3dadd( 178.4, -132.564, 22.5031, 0.34 ) }
    dend_55 { pt3dadd( 181.114, -136.067, 21.7057, 0.34 ) }
    dend_55 { pt3dadd( 184.061, -139.969, 21.0669, 0.34 ) }
    dend_55 { pt3dadd( 186.304, -142.987, 20.9225, 0.34 ) }
    dend_55 { pt3dadd( 188.437, -145.862, 20.8286, 0.34 ) }
    dend_55 { pt3dadd( 190.317, -148.563, 20.8799, 0.34 ) }
    dend_55 { pt3dadd( 191.742, -150.717, 21.1423, 0.34 ) }
    dend_55 { pt3dadd( 193.103, -152.983, 21.719, 0.34 ) }
    dend_55 { pt3dadd( 194.538, -155.436, 22.4247, 0.34 ) }
    dend_55 { pt3dadd( 196.356, -158.426, 23.2522, 0.34 ) }
    dend_55 { pt3dadd( 199.822, -163.788, 24.6252, 0.45 ) }
    dend_55 { pt3dadd( 202.781, -167.999, 25.7357, 0.45 ) }
    dend_55 { pt3dadd( 205.587, -171.759, 26.8829, 0.45 ) }
    dend_55 { pt3dadd( 209.01, -176.166, 28.2934, 0.45 ) }
    dend_55 { pt3dadd( 210.734, -178.19, 28.8928, 0.45 ) }
    dend_55 { pt3dadd( 212.792, -180.459, 29.4715, 0.45 ) }
    dend_55 { pt3dadd( 213.977, -181.694, 29.6708, 0.45 ) }
    dend_55 { pt3dadd( 219.169, -187.004, 30.1553, 0.45 ) }
    dend_55 { pt3dadd( 222.689, -190.629, 30.4007, 0.45 ) }
    dend_55 { pt3dadd( 226.033, -194.278, 30.761, 0.45 ) }
    dend_55 { pt3dadd( 227.449, -195.851, 30.8849, 0.45 ) }
    dend_55 { pt3dadd( 232.187, -201.048, 31.3578, 0.45 ) }
    dend_55 { pt3dadd( 234.366, -203.516, 31.6439, 0.45 ) }
    dend_55 { pt3dadd( 237.257, -206.925, 32.2089, 0.45 ) }
    dend_55 { pt3dadd( 238.972, -209.016, 32.7741, 0.45 ) }
    dend_55 { pt3dadd( 240.151, -210.507, 33.2431, 0.45 ) }
    dend_55 { pt3dadd( 243.142, -214.299, 34.4723, 0.45 ) }
    dend_55 { pt3dadd( 246.155, -218.246, 35.8226, 0.45 ) }
    dend_55 { pt3dadd( 248.822, -221.788, 36.7003, 0.45 ) }
    dend_55 { pt3dadd( 251.716, -225.67, 37.279, 0.45 ) }
    dend_55 { pt3dadd( 253.924, -228.564, 37.31, 0.45 ) }
    dend_55 { pt3dadd( 256.269, -231.654, 36.9736, 0.45 ) }
    dend_55 { pt3dadd( 258.06, -234.011, 36.4553, 0.45 ) }
    dend_55 { pt3dadd( 261.637, -238.687, 35.1352, 0.45 ) }
    dend_55 { pt3dadd( 263.602, -241.316, 34.3613, 0.45 ) }
    dend_55 { pt3dadd( 266.936, -245.894, 33.1374, 0.45 ) }
    dend_55 { pt3dadd( 270.028, -250.12, 32.2032, 0.45 ) }
    dend_55 { pt3dadd( 271.983, -252.721, 31.6961, 0.45 ) }
    dend_55 { pt3dadd( 273.781, -255.036, 31.148, 0.45 ) }
    dend_55 { pt3dadd( 276.22, -258.192, 30.4331, 0.45 ) }
    dend_55 { pt3dadd( 277.663, -259.948, 29.9448, 0.45 ) }
    dend_55 { pt3dadd( 278.424, -260.871, 29.6541, 0.45 ) }
    dend_55 { pt3dadd( 280.309, -263.081, 28.842, 0.45 ) }
    dend_55 { pt3dadd( 285.281, -268.612, 26.5308, 0.45 ) }
    dend_55 { pt3dadd( 287.26, -270.726, 25.5393, 0.45 ) }
    dend_55 { pt3dadd( 290.041, -273.627, 24.0434, 0.45 ) }
    dend_55 { pt3dadd( 292.324, -275.994, 22.8183, 0.45 ) }
    dend_55 { pt3dadd( 293.185, -276.924, 22.3499, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 293.185, -276.924, 22.3499, 0.45 ) }
    dend_57 { pt3dadd( 292.462, -279.537, 21.5723, 0.45 ) }
    dend_57 { pt3dadd( 292.101, -281.217, 21.1564, 0.45 ) }
    dend_57 { pt3dadd( 291.891, -282.662, 20.6903, 0.45 ) }
    dend_57 { pt3dadd( 291.857, -283.387, 20.3196, 0.45 ) }
    dend_57 { pt3dadd( 291.938, -284.561, 19.6518, 0.45 ) }
    dend_57 { pt3dadd( 292.087, -285.571, 19.0971, 0.45 ) }
    dend_57 { pt3dadd( 292.52, -287.055, 18.3053, 0.45 ) }
    dend_57 { pt3dadd( 293.405, -289.525, 16.9976, 0.45 ) }
    dend_57 { pt3dadd( 294.622, -292.742, 15.3039, 0.45 ) }
    dend_57 { pt3dadd( 295.227, -294.525, 14.4762, 0.45 ) }
    dend_57 { pt3dadd( 295.982, -297.005, 13.4882, 0.45 ) }
    dend_57 { pt3dadd( 296.334, -298.515, 12.988, 0.45 ) }
    dend_57 { pt3dadd( 296.674, -300.585, 12.6062, 0.45 ) }
    dend_57 { pt3dadd( 296.875, -303.475, 12.7939, 0.45 ) }
    dend_57 { pt3dadd( 296.874, -306.701, 13.398, 0.45 ) }
    dend_57 { pt3dadd( 296.739, -308.614, 13.9337, 0.45 ) }
    dend_57 { pt3dadd( 296.472, -310.533, 14.8446, 0.45 ) }
    dend_57 { pt3dadd( 295.849, -314.161, 17.0359, 0.45 ) }
    dend_57 { pt3dadd( 294.94, -318.972, 20.4171, 0.45 ) }
    dend_57 { pt3dadd( 294.657, -320.447, 21.5056, 0.45 ) }
    dend_57 { pt3dadd( 294.28, -322.647, 23.1209, 0.45 ) }
    dend_57 { pt3dadd( 293.374, -327.633, 26.9863, 0.45 ) }
    dend_57 { pt3dadd( 293.11, -329.07, 28.1265, 0.45 ) }
    dend_57 { pt3dadd( 292.782, -330.765, 29.3361, 0.45 ) }
    dend_57 { pt3dadd( 292.279, -333.472, 30.9958, 0.45 ) }
    dend_57 { pt3dadd( 292.06, -334.782, 31.8257, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 293.185, -276.924, 22.3499, 0.45 ) }
    dend_56 { pt3dadd( 293.964, -277.751, 22.5922, 0.45 ) }
    dend_56 { pt3dadd( 295.436, -279.177, 22.9963, 0.45 ) }
    dend_56 { pt3dadd( 297.043, -280.511, 23.3997, 0.45 ) }
    dend_56 { pt3dadd( 298.465, -281.649, 23.7709, 0.45 ) }
    dend_56 { pt3dadd( 300.011, -282.887, 24.175, 0.45 ) }
    dend_56 { pt3dadd( 300.852, -283.559, 24.3208, 0.45 ) }
    dend_56 { pt3dadd( 302.767, -285.024, 24.4067, 0.45 ) }
    dend_56 { pt3dadd( 304.764, -286.487, 24.2641, 0.45 ) }
    dend_56 { pt3dadd( 307.0, -288.109, 23.8689, 0.45 ) }
    dend_56 { pt3dadd( 307.749, -288.654, 23.6992, 0.45 ) }
    dend_56 { pt3dadd( 310.779, -290.869, 22.952, 0.45 ) }
    dend_56 { pt3dadd( 313.064, -292.607, 22.3889, 0.45 ) }
    dend_56 { pt3dadd( 314.358, -293.597, 22.1122, 0.45 ) }
    dend_56 { pt3dadd( 317.144, -295.649, 21.6719, 0.45 ) }
    dend_56 { pt3dadd( 318.37, -296.539, 21.6195, 0.45 ) }
    dend_56 { pt3dadd( 320.629, -298.213, 21.8231, 0.45 ) }
    dend_56 { pt3dadd( 323.484, -300.357, 22.4937, 0.45 ) }
    dend_56 { pt3dadd( 326.628, -302.887, 23.6321, 0.45 ) }
    dend_56 { pt3dadd( 328.86, -304.82, 24.7482, 0.45 ) }
    dend_56 { pt3dadd( 331.536, -307.151, 26.439, 0.45 ) }
    dend_56 { pt3dadd( 332.891, -308.321, 27.403, 0.45 ) }
    dend_56 { pt3dadd( 333.794, -309.042, 28.1, 0.45 ) }
    dend_56 { pt3dadd( 336.211, -310.546, 29.8897, 0.45 ) }
    dend_56 { pt3dadd( 338.504, -311.667, 31.4363, 0.45 ) }
    dend_56 { pt3dadd( 341.574, -312.815, 33.2153, 0.45 ) }
    dend_56 { pt3dadd( 343.729, -313.377, 34.2222, 0.45 ) }
    dend_56 { pt3dadd( 347.26, -313.998, 35.6497, 0.45 ) }
    dend_56 { pt3dadd( 352.326, -314.457, 37.5292, 0.45 ) }
    dend_56 { pt3dadd( 353.698, -314.433, 37.9905, 0.45 ) }
    dend_56 { pt3dadd( 354.985, -314.295, 38.3926, 0.45 ) }
    dend_56 { pt3dadd( 357.075, -313.754, 39.1252, 0.45 ) }
    dend_56 { pt3dadd( 358.267, -313.122, 39.6343, 0.45 ) }
    dend_56 { pt3dadd( 359.622, -311.559, 40.4317, 0.45 ) }
    dend_56 { pt3dadd( 360.187, -310.392, 40.906, 0.45 ) }
    dend_56 { pt3dadd( 360.677, -309.227, 41.3431, 0.45 ) }
    dend_56 { pt3dadd( 361.688, -306.719, 42.2401, 0.45 ) }
    dend_56 { pt3dadd( 362.31, -305.263, 42.7533, 0.45 ) }
    dend_56 { pt3dadd( 363.559, -302.895, 43.606, 0.45 ) }
    dend_56 { pt3dadd( 364.711, -301.215, 44.4096, 0.45 ) }
    dend_56 { pt3dadd( 366.012, -299.734, 45.3952, 0.45 ) }
    dend_56 { pt3dadd( 367.026, -298.773, 46.1683, 0.45 ) }
    dend_56 { pt3dadd( 368.043, -298.068, 46.9702, 0.45 ) }
    dend_56 { pt3dadd( 369.35, -297.479, 48.0279, 0.45 ) }
    dend_56 { pt3dadd( 372.941, -297.135, 51.5845, 0.45 ) }
    dend_56 { pt3dadd( 373.392, -297.249, 52.18, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 292.06, -334.782, 31.8257, 0.45 ) }
    dend_59 { pt3dadd( 292.09, -337.644, 32.6223, 0.45 ) }
    dend_59 { pt3dadd( 292.273, -340.12, 33.2971, 0.45 ) }
    dend_59 { pt3dadd( 292.588, -342.717, 34.0437, 0.45 ) }
    dend_59 { pt3dadd( 292.897, -345.079, 34.7106, 0.45 ) }
    dend_59 { pt3dadd( 293.532, -348.984, 36.0927, 0.45 ) }
    dend_59 { pt3dadd( 293.875, -350.771, 36.9265, 0.45 ) }
    dend_59 { pt3dadd( 294.435, -353.175, 38.3703, 0.45 ) }
    dend_59 { pt3dadd( 295.012, -355.427, 39.8585, 0.45 ) }
    dend_59 { pt3dadd( 295.952, -358.618, 42.1266, 0.45 ) }
    dend_59 { pt3dadd( 297.431, -363.21, 45.4642, 0.45 ) }
    dend_59 { pt3dadd( 299.047, -367.793, 48.7185, 0.45 ) }
    dend_59 { pt3dadd( 300.45, -371.848, 51.4352, 0.45 ) }
    dend_59 { pt3dadd( 301.329, -374.32, 52.9371, 0.45 ) }
    dend_59 { pt3dadd( 302.748, -378.286, 54.976, 0.45 ) }
    dend_59 { pt3dadd( 303.697, -380.92, 56.0896, 0.45 ) }
    dend_59 { pt3dadd( 304.801, -384.366, 57.0909, 0.45 ) }
    dend_59 { pt3dadd( 305.854, -387.713, 57.8082, 0.45 ) }
    dend_59 { pt3dadd( 306.951, -391.217, 58.4576, 0.45 ) }
    dend_59 { pt3dadd( 307.899, -394.466, 59.1345, 0.45 ) }
    dend_59 { pt3dadd( 308.737, -397.944, 59.7527, 0.45 ) }
    dend_59 { pt3dadd( 309.724, -402.44, 60.5692, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 292.06, -334.782, 31.8257, 0.45 ) }
    dend_58 { pt3dadd( 293.889, -333.146, 32.9646, 0.45 ) }
    dend_58 { pt3dadd( 294.791, -332.34, 33.5257, 0.45 ) }
    dend_58 { pt3dadd( 295.807, -331.43, 34.1588, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 309.724, -402.44, 60.5692, 0.45 ) }
    dend_61 { pt3dadd( 309.051, -405.357, 64.5377, 0.45 ) }
    dend_61 { pt3dadd( 308.148, -409.067, 69.0184, 0.45 ) }
    dend_61 { pt3dadd( 307.6, -411.33, 71.5144, 0.45 ) }
    dend_61 { pt3dadd( 307.271, -412.782, 72.9904, 0.45 ) }
    dend_61 { pt3dadd( 307.198, -413.12, 73.3071, 0.45 ) }
    dend_61 { pt3dadd( 306.437, -416.759, 76.6096, 0.45 ) }
    dend_61 { pt3dadd( 306.252, -417.754, 77.2604, 0.45 ) }
    dend_61 { pt3dadd( 306.085, -418.752, 77.7883, 0.45 ) }
    dend_61 { pt3dadd( 305.88, -419.769, 78.3677, 0.45 ) }
    dend_61 { pt3dadd( 305.531, -421.182, 79.1112, 0.45 ) }
    dend_61 { pt3dadd( 304.891, -423.686, 80.2524, 0.45 ) }
    dend_61 { pt3dadd( 304.322, -425.954, 81.2062, 0.45 ) }
    dend_61 { pt3dadd( 303.669, -428.65, 82.5242, 0.45 ) }
    dend_61 { pt3dadd( 303.305, -430.114, 83.3941, 0.45 ) }
    dend_61 { pt3dadd( 302.856, -431.823, 84.4821, 0.45 ) }
    dend_61 { pt3dadd( 302.195, -434.228, 86.0735, 0.45 ) }
    dend_61 { pt3dadd( 301.743, -436.257, 88.1149, 0.45 ) }
    dend_61 { pt3dadd( 301.438, -437.91, 90.3511, 0.45 ) }
    dend_61 { pt3dadd( 301.256, -439.192, 92.3606, 0.45 ) }
    dend_61 { pt3dadd( 301.142, -440.289, 94.3615, 0.45 ) }
    dend_61 { pt3dadd( 301.001, -441.412, 96.5841, 0.45 ) }
    dend_61 { pt3dadd( 300.243, -446.074, 105.488, 0.45 ) }
    dend_61 { pt3dadd( 300.022, -447.334, 107.587, 0.45 ) }
    dend_61 { pt3dadd( 299.864, -448.265, 108.874, 0.45 ) }
    dend_61 { pt3dadd( 299.313, -451.456, 112.537, 0.45 ) }
    dend_61 { pt3dadd( 299.035, -453.223, 114.254, 0.45 ) }
    dend_61 { pt3dadd( 298.654, -455.663, 115.893, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 298.27, -457.684, 116.613, 0.45 ) }
    dend_61 { pt3dadd( 297.882, -460.07, 117.314, 0.45 ) }
    dend_61 { pt3dadd( 297.545, -462.374, 117.768, 0.45 ) }
    dend_61 { pt3dadd( 297.31, -464.235, 117.829, 0.45 ) }
    dend_61 { pt3dadd( 297.243, -465.173, 117.85, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 309.724, -402.44, 60.5692, 0.45 ) }
    dend_60 { pt3dadd( 310.083, -403.484, 61.2625, 0.45 ) }
    dend_60 { pt3dadd( 310.767, -405.642, 62.6157, 0.45 ) }
    dend_60 { pt3dadd( 311.401, -408.092, 64.1694, 0.45 ) }
    dend_60 { pt3dadd( 311.569, -408.989, 64.8462, 0.45 ) }
    dend_60 { pt3dadd( 311.759, -410.282, 65.9978, 0.45 ) }
    dend_60 { pt3dadd( 311.924, -411.556, 67.2831, 0.45 ) }
    dend_60 { pt3dadd( 312.005, -412.341, 68.2577, 0.45 ) }
    dend_60 { pt3dadd( 312.112, -413.344, 69.7266, 0.45 ) }
    dend_60 { pt3dadd( 312.417, -415.55, 73.6298, 0.45 ) }
    dend_60 { pt3dadd( 312.643, -416.943, 76.2642, 0.45 ) }
    dend_60 { pt3dadd( 312.822, -417.761, 77.8289, 0.45 ) }
    dend_60 { pt3dadd( 313.195, -419.022, 80.3113, 0.45 ) }
    dend_60 { pt3dadd( 313.322, -419.342, 80.9146, 0.45 ) }
    dend_60 { pt3dadd( 313.785, -420.068, 82.2729, 0.45 ) }
    dend_60 { pt3dadd( 314.412, -420.883, 83.5248, 0.45 ) }
    dend_60 { pt3dadd( 315.379, -422.089, 85.1456, 0.45 ) }
    dend_60 { pt3dadd( 315.772, -422.587, 85.717, 0.45 ) }
    dend_60 { pt3dadd( 316.92, -424.176, 87.2602, 0.45 ) }
    dend_60 { pt3dadd( 318.853, -426.772, 89.649, 0.45 ) }
    dend_60 { pt3dadd( 319.974, -428.204, 90.9743, 0.45 ) }
    dend_60 { pt3dadd( 321.602, -430.207, 92.8313, 0.45 ) }
    dend_60 { pt3dadd( 322.669, -431.55, 94.0877, 0.45 ) }
    dend_60 { pt3dadd( 324.827, -434.236, 96.6192, 0.45 ) }
    dend_60 { pt3dadd( 325.497, -435.061, 97.3883, 0.45 ) }
    dend_60 { pt3dadd( 326.969, -436.95, 99.0851, 0.45 ) }
    dend_60 { pt3dadd( 327.524, -437.638, 99.8001, 0.45 ) }
    dend_60 { pt3dadd( 328.95, -439.374, 101.692, 0.45 ) }
    dend_60 { pt3dadd( 330.276, -441.005, 103.613, 0.45 ) }
    dend_60 { pt3dadd( 330.909, -441.694, 104.661, 0.45 ) }
    dend_60 { pt3dadd( 331.679, -442.447, 106.071, 0.45 ) }
    dend_60 { pt3dadd( 333.09, -443.943, 108.823, 0.45 ) }
    dend_60 { pt3dadd( 333.727, -444.681, 110.161, 0.45 ) }
    dend_60 { pt3dadd( 334.383, -445.479, 111.565, 0.45 ) }
    dend_60 { pt3dadd( 336.996, -448.867, 117.182, 0.45 ) }
    dend_60 { pt3dadd( 338.808, -451.327, 120.934, 0.45 ) }
    dend_60 { pt3dadd( 340.309, -453.44, 123.919, 0.45 ) }
    dend_60 { pt3dadd( 340.747, -454.116, 124.745, 0.45 ) }
    dend_60 { pt3dadd( 341.211, -454.827, 125.649, 0.45 ) }
    dend_60 { pt3dadd( 341.807, -455.699, 126.8, 0.45 ) }
    dend_60 { pt3dadd( 342.488, -456.583, 128.071, 0.45 ) }
    dend_60 { pt3dadd( 343.211, -457.336, 129.46, 0.45 ) }
    dend_60 { pt3dadd( 343.512, -457.59, 130.047, 0.45 ) }
    dend_60 { pt3dadd( 346.327, -459.777, 135.637, 0.45 ) }
    dend_60 { pt3dadd( 347.637, -460.795, 138.295, 0.45 ) }
    dend_60 { pt3dadd( 349.814, -462.483, 142.45, 0.45 ) }
    dend_60 { pt3dadd( 350.172, -462.758, 143.139, 0.45 ) }
    dend_60 { pt3dadd( 350.537, -463.043, 143.793, 0.45 ) }
    dend_60 { pt3dadd( 351.179, -463.584, 144.864, 0.45 ) }
    dend_60 { pt3dadd( 352.659, -465.014, 147.097, 0.45 ) }
    dend_60 { pt3dadd( 354.076, -466.472, 149.246, 0.45 ) }
    dend_60 { pt3dadd( 357.601, -470.298, 154.7, 0.45 ) }
    dend_60 { pt3dadd( 359.087, -471.92, 157.072, 0.45 ) }
    dend_60 { pt3dadd( 359.809, -472.687, 158.215, 0.45 ) }
    dend_60 { pt3dadd( 360.67, -473.37, 159.71, 0.45 ) }
    dend_60 { pt3dadd( 361.938, -474.0, 161.999, 0.45 ) }
    dend_60 { pt3dadd( 363.547, -474.455, 165.079, 0.45 ) }
    dend_60 { pt3dadd( 364.195, -474.562, 166.356, 0.45 ) }
    dend_60 { pt3dadd( 364.728, -474.617, 167.55, 0.45 ) }
    dend_60 { pt3dadd( 369.112, -475.121, 178.042, 0.45 ) }
    dend_60 { pt3dadd( 370.272, -475.312, 180.899, 0.45 ) }
    dend_60 { pt3dadd( 371.514, -475.642, 184.0, 0.45 ) }
    dend_60 { pt3dadd( 372.221, -475.823, 185.86, 0.45 ) }
    dend_60 { pt3dadd( 373.831, -476.3, 190.223, 0.45 ) }
    dend_60 { pt3dadd( 374.565, -476.618, 192.326, 0.45 ) }
    dend_60 { pt3dadd( 375.243, -477.127, 194.317, 0.45 ) }
    dend_60 { pt3dadd( 376.468, -478.039, 197.987, 0.45 ) }
    dend_60 { pt3dadd( 381.24, -480.902, 211.254, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 5
    dend_45 nseg = 3
    dend_22 nseg = 5
    dend_13 nseg = 3
    dend_8 nseg = 5
    dend_46 nseg = 9
    dend_44 nseg = 9
    dend_10 nseg = 5
    dend_9 nseg = 7
    dend_5 nseg = 7
    dend_2 nseg = 3
    dend_69 nseg = 5
    dend_29 nseg = 3
    dend_19 nseg = 3
    dend_6 nseg = 5
    dend_64 nseg = 5
    dend_49 nseg = 3
    dend_41 nseg = 3
    dend_28 nseg = 31
    dend_21 nseg = 5
    dend_66 nseg = 11
    dend_65 nseg = 3
    dend_63 nseg = 3
    dend_42 nseg = 3
    dend_38 nseg = 7
    dend_33 nseg = 5
    dend_31 nseg = 5
    dend_67 nseg = 5
    dend_51 nseg = 7
    dend_40 nseg = 25
    dend_37 nseg = 15
    dend_54 nseg = 3
    dend_53 nseg = 13
    dend_36 nseg = 9
    dend_35 nseg = 9
    dend_62 nseg = 5
    dend_55 nseg = 11
    dend_57 nseg = 3
    dend_56 nseg = 5
    dend_59 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L5_NBC_bb8fc44e15_0_0


